"1splitHere46","11994883splitHere46","ServletFilter"
"2splitHere46","11994906splitHere46","aList"
"3splitHere46","11994906splitHere46","aList.add(line.replaceAll(<doubleQuotes46>\t<doubleQuotes46>, <doubleQuotes46>    <doubleQuotes46>));<newline46mondego>"
"4splitHere46","11994910splitHere46","String myDateString = <doubleQuotes46>13:24:40<doubleQuotes46>;<newline46mondego>//SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>hh:mm:ss<doubleQuotes46>);<newline46mondego>//the above commented line was changed to the one below, as per Grodriguez's pertinent comment:<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>);<newline46mondego>Date date = sdf.parse(myDateString);<newline46mondego><newline46mondego>Calendar calendar = GregorianCalendar.getInstance(); // creates a new calendar instance<newline46mondego>calendar.setTime(date);   // assigns calendar to given date <newline46mondego>int hour = calendar.get(Calendar.HOUR);<newline46mondego>int minute; /... similar methods for minutes and seconds<newline46mondego>"
"5splitHere46","11994975splitHere46","char sqrt = '\u221a';<newline46mondego>"
"6splitHere46","11994975splitHere46","String s = <doubleQuotes46>The square root of 2 (\u221a2) is approximately 1.4142<doubleQuotes46>;<newline46mondego>"
"7splitHere46","11994975splitHere46","The square root of 2 (âˆš2) is 1.4142<newline46mondego>"
"8splitHere46","11995134splitHere46","imageView.setImageMatrix(matrix);<newline46mondego>"
"9splitHere46","11995134splitHere46","Drawable drawable = getResources().getDrawables(R.drawable.android);<newline46mondego>Bitmap existingBitmap = ((BitmapDrawable) drawable).getBitmap();<newline46mondego>Bitmap rotated = Bitmap.createBitmap(existingBitmap, 0, 0, existingBitmap.getWidth(), existingBitmap.getHeight(), matrix, true);<newline46mondego>imageView.setImageBitmap(rotated);<newline46mondego>"
"10splitHere46","11995136splitHere46","decision-state"
"11splitHere46","11995136splitHere46","<decision-state id=<doubleQuotes46>myDecisionState<doubleQuotes46>><newline46mondego>    <if test=<doubleQuotes46>myBooleanFunction()<doubleQuotes46> then=<doubleQuotes46>resultIsTrueState<doubleQuotes46> else=<doubleQuotes46>resultIsFalseState<doubleQuotes46> /><newline46mondego></decision-state><newline46mondego>"
"12splitHere46","11995136splitHere46","action-state"
"13splitHere46","11995136splitHere46","<action-state id=<doubleQuotes46>myActionState<doubleQuotes46>><newline46mondego>    <evaluate expression=<doubleQuotes46>myBooleanFunction()<doubleQuotes46> /><newline46mondego>    <transition on=<doubleQuotes46>yes<doubleQuotes46> to=<doubleQuotes46>resultIsTrueState<doubleQuotes46> /><newline46mondego>    <transition on=<doubleQuotes46>no<doubleQuotes46> to=<doubleQuotes46>resultIsFalseState<doubleQuotes46> /><newline46mondego></action-state><newline46mondego>"
"14splitHere46","11995136splitHere46","action-state"
"15splitHere46","11995136splitHere46","String (string value)"
"16splitHere46","11995136splitHere46","Boolean (yes/no)"
"17splitHere46","11995136splitHere46","Enum (enum name)"
"18splitHere46","11995136splitHere46","success"
"19splitHere46","11995136splitHere46","decision-state"
"20splitHere46","11995136splitHere46","action-state"
"21splitHere46","11995136splitHere46","<action-state id=<doubleQuotes46>myActionState<doubleQuotes46>><newline46mondego>    <evaluate expression=<doubleQuotes46>myFunction()<doubleQuotes46> /><newline46mondego>    <transition on=<doubleQuotes46>success<doubleQuotes46> to=<doubleQuotes46>myNextState<doubleQuotes46> /><newline46mondego></action-state><newline46mondego>"
"22splitHere46","11995229splitHere46","MyTree current = this.getChildOne();<newline46mondego>current = new MyTree();<newline46mondego>"
"23splitHere46","11995229splitHere46","current"
"24splitHere46","11995229splitHere46","if ( i == i ) {<newline46mondego>   this.childOne = // assign it here<newline46mondego>}<newline46mondego>"
"25splitHere46","11995348splitHere46","-encoding"
"26splitHere46","11995348splitHere46","javac"
"27splitHere46","11995348splitHere46","-encoding"
"28splitHere46","11995348splitHere46","\u00a5123"
"29splitHere46","11995600splitHere46","facebook.authorize(...)"
"30splitHere46","11995600splitHere46","facebook"
"31splitHere46","11995600splitHere46","onCreate"
"32splitHere46","11995600splitHere46","Facebook facebook = new Facebook(<doubleQuotes46>YOUR_APP_ID<doubleQuotes46>);<newline46mondego>"
"33splitHere46","11995651splitHere46","JScrollPane"
"34splitHere46","11995651splitHere46","setLayout(null)"
"35splitHere46","11995651splitHere46","JPanel"
"36splitHere46","11995651splitHere46","setLayout(null)"
"37splitHere46","11995651splitHere46","JPanel"
"38splitHere46","11995651splitHere46","JScrollPane"
"39splitHere46","11995651splitHere46","JPanel"
"40splitHere46","11995651splitHere46","Scrollable"
"41splitHere46","11995651splitHere46","JScrollPane"
"42splitHere46","11995722splitHere46","String dateStr = <doubleQuotes46>16.Aug.2012 07:15:00<doubleQuotes46>;<newline46mondego>        Date datex = null;<newline46mondego>        DateFormat formatter = new SimpleDateFormat(<doubleQuotes46>dd.MMM.yyyy hh:mm:ss<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            datex = (Date) formatter.parse(dateStr);<newline46mondego>            System.out.println(datex);<newline46mondego>            //Log.w(<doubleQuotes46>TIME: <doubleQuotes46>, datex.toString());<newline46mondego>        } catch (ParseException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>"
"43splitHere46","11995773splitHere46","long"
"44splitHere46","11995788splitHere46","h:"
"45splitHere46","11995788splitHere46","<h:xxx>"
"46splitHere46","11995788splitHere46","<html ... xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46>><newline46mondego>"
"47splitHere46","11995788splitHere46","<url-pattern>"
"48splitHere46","11995788splitHere46","FacesServlet"
"49splitHere46","11995788splitHere46","web.xml"
"50splitHere46","11995788splitHere46","<h:xxx>"
"51splitHere46","11995788splitHere46","web.xml"
"52splitHere46","11995788splitHere46","<url-pattern>*.xhtml</url-pattern><newline46mondego>"
"53splitHere46","11995788splitHere46","styles.css"
"54splitHere46","11995788splitHere46","input[type=submit] {<newline46mondego>    display: none; <newline46mondego>}<newline46mondego>"
"55splitHere46","11995931splitHere46","getN()"
"56splitHere46","11995931splitHere46","repaintWord()"
"57splitHere46","11995931splitHere46","getN()"
"58splitHere46","11995931splitHere46","private int lastN = ??; /* Value for max guesses. */<newline46mondego><newline46mondego>public void repaintWord(Graphics g)<newline46mondego>{<newline46mondego>    if (lastN != getN())<newline46mondego>    {<newline46mondego>        lastN = getN();<newline46mondego>        g.SetColor(Color.RED);<newline46mondego>        g.drawString(<doubleQuotes46>You have <doubleQuotes46> + lastN + <doubleQuotes46> guesses left<doubleQuotes46>, 400, 50);<newline46mondego>        repaint();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"59splitHere46","11996178splitHere46","DateTime.parse"
"60splitHere46","11996178splitHere46","DateTime"
"61splitHere46","11996178splitHere46","toString()"
"62splitHere46","11996178splitHere46",".toString(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>)"
"63splitHere46","11996397splitHere46","values"
"64splitHere46","11996397splitHere46","boolean[] values = new boolean[100];<newline46mondego><newline46mondego>int index = Random.nextInt(100);<newline46mondego>while(!values[index]){<newline46mondego>    System.out.println(index+1);<newline46mondego>    values[index] = true;<newline46mondego>    index = Random.nextInt(100);<newline46mondego>}<newline46mondego>"
"65splitHere46","11996414splitHere46","os.writeBytes(<doubleQuotes46>chmod 744 \data\app \n<doubleQuotes46>);<newline46mondego>os.flush();<newline46mondego>"
"66splitHere46","11996433splitHere46","sInstance = this;<newline46mondego>"
"67splitHere46","11996433splitHere46","MyApplication.sInstance.startActivity(intent);<newline46mondego>"
"68splitHere46","11996433splitHere46","pendingintent.send()"
"69splitHere46","11996497splitHere46","cmd /c start /wait java -jar bla.jar<newline46mondego>"
"70splitHere46","11996545splitHere46","float[] columnWidths = new float[] {10f, 20f, 30f, 10f};<newline46mondego>table.setWidths(columnWidths);<newline46mondego>"
"71splitHere46","11996723splitHere46","-fx-highlight-fill: null;<newline46mondego>-fx-highlight-text-fill: null;<newline46mondego>"
"72splitHere46","11997011splitHere46","byte[] myBlobData = \\ Retrieve from database<newline46mondego>Base32 encoder = new Base32();<newline46mondego>String encodedData = encoder.encodeToString(myBlobData);<newline46mondego>// Write out data as you normally would for a CSV file<newline46mondego>"
"73splitHere46","11997011splitHere46","String encodedData = \\ Read from file<newline46mondego>byte[] myBlobData = encoder.decode(encodedData);<newline46mondego>"
"74splitHere46","11997111splitHere46","Log.d(<doubleQuotes46>JSON Contents<doubleQuotes46>, stringBuilder.toString());<newline46mondego>"
"75splitHere46","11997111splitHere46","596 Service Not Found"
"76splitHere46","11997254splitHere46","T1: num = 10;<newline46mondego>T2: num = 10;<newline46mondego>T1: System.out.println(num); // prints 10<newline46mondego>T1: num = 20;<newline46mondego>T1: System.out.println(num); // prints 20<newline46mondego>T2: System.out.println(num); // prints 20<newline46mondego>T2: num = 20;<newline46mondego>T2: System.out.println(num); // prints 20<newline46mondego>"
"77splitHere46","11998394splitHere46","final int[] arr = // elements you want<newline46mondego>List<Integer> indices = new ArrayList<Integer>(arr.length);<newline46mondego>for (int i = 0; i < arr.length; i++) {<newline46mondego>  indices.add(i);<newline46mondego>}<newline46mondego>Comparator<Integer> comparator = new Comparator<Integer>() {<newline46mondego>  public int compare(Integer i, Integer j) {<newline46mondego>    return Integer.compare(arr[i], arr[j]);<newline46mondego>  }<newline46mondego>}<newline46mondego>Collections.sort(indices, comparator);<newline46mondego>"
"78splitHere46","11998394splitHere46","indices"
"79splitHere46","11998394splitHere46","int[]"
"80splitHere46","11998394splitHere46","for"
"81splitHere46","11998467splitHere46","opengl"
"82splitHere46","11998467splitHere46","SurfaceView"
"83splitHere46","11998830splitHere46","ILog"
"84splitHere46","11998830splitHere46","ILog"
"85splitHere46","11998830splitHere46","ILog"
"86splitHere46","11998830splitHere46","error"
"87splitHere46","11998912splitHere46","JFrame"
"88splitHere46","11998912splitHere46","txt_jtextfield"
"89splitHere46","11998912splitHere46","JFrame"
"90splitHere46","11998912splitHere46","JText txt_jtextfield = new JTextField();<newline46mondego>JFrame obj = new JFrame();<newline46mondego>// Some other initialisation code...<newline46mondego>obj.add(txt_jtextfield);<newline46mondego>"
"91splitHere46","11998912splitHere46","FrameWithTextFieldInIt obj = new FrameWithTextFieldInIt();<newline46mondego>// etc...<newline46mondego>"
"92splitHere46","11998912splitHere46","JFrame"
"93splitHere46","11998912splitHere46","dbconfig_manager obj1 = new dbconfig_manager();<newline46mondego>String ip = obj1.txt_ip.getText();<newline46mondego>"
"94splitHere46","11998912splitHere46","JDialog"
"95splitHere46","11998912splitHere46","db_connection_modifier"
"96splitHere46","11998912splitHere46","db_connection_modifier"
"97splitHere46","11998912splitHere46","db_connection_modifier obj = new db_connection_modifier();<newline46mondego>obj.hostconfig();<newline46mondego>"
"98splitHere46","11998912splitHere46","dbconfig_manager"
"99splitHere46","11998912splitHere46","db_connection_modifier obj = new db_connection_modifier(txt_ip.getText(), txt_db.getText(), txt_user.getText(), txt_pass.getText());<newline46mondego>obj.hostconfig();<newline46mondego>"
"100splitHere46","11999016splitHere46","USE"
"101splitHere46","11999016splitHere46","USE"
"102splitHere46","11999016splitHere46","INSERT"
"103splitHere46","11999016splitHere46","String dbURL = <doubleQuotes46>jdbc:mysql://localhost:3306/Users<doubleQuotes46>;<newline46mondego>"
"104splitHere46","11999016splitHere46","String query = <doubleQuotes46>INSERT INTO User (UserName, UserPass, FirstName, LastName, EmailAddress) <doubleQuotes46> + <newline46mondego>               <doubleQuotes46>VALUES ('<doubleQuotes46>+uname+<doubleQuotes46>','<doubleQuotes46>+pword+<doubleQuotes46>','<doubleQuotes46>+fname+<doubleQuotes46>','<doubleQuotes46>+lname+<doubleQuotes46>','<doubleQuotes46>+email+<doubleQuotes46>')<doubleQuotes46>;<newline46mondego>"
"105splitHere46","11999016splitHere46","<%"
"106splitHere46","11999016splitHere46","%>"
"107splitHere46","11999016splitHere46","<%<newline46mondego>    Connection conn = null;<newline46mondego><newline46mondego>    try {<newline46mondego><newline46mondego>        String uname=request.getParameter(<doubleQuotes46>userName<doubleQuotes46>);<newline46mondego>        String pword=request.getParameter(<doubleQuotes46>passWord<doubleQuotes46>);<newline46mondego>        String fname=request.getParameter(<doubleQuotes46>firstName<doubleQuotes46>);<newline46mondego>        String lname=request.getParameter(<doubleQuotes46>lastName<doubleQuotes46>);<newline46mondego>        String email=request.getParameter(<doubleQuotes46>emailAddress<doubleQuotes46>);<newline46mondego><newline46mondego>        String dbURL = <doubleQuotes46>jdbc:mysql://localhost:3306/Users<doubleQuotes46>;<newline46mondego>        String user = <doubleQuotes46>root<doubleQuotes46>;<newline46mondego>        String pwd = <doubleQuotes46>password<doubleQuotes46>;<newline46mondego>        String driver = <doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>;<newline46mondego><newline46mondego>        String query = <doubleQuotes46>INSERT INTO User (UserName, UserPass, FirstName, LastName, EmailAddress) <doubleQuotes46> +<newline46mondego>                       <doubleQuotes46>VALUES ('<doubleQuotes46>+uname+<doubleQuotes46>','<doubleQuotes46>+pword+<doubleQuotes46>','<doubleQuotes46>+fname+<doubleQuotes46>','<doubleQuotes46>+lname+<doubleQuotes46>','<doubleQuotes46>+email+<doubleQuotes46>')<doubleQuotes46>;<newline46mondego>        Class.forName(driver);<newline46mondego>        conn = DriverManager.getConnection(dbURL, user, pwd);<newline46mondego>        Statement statement = conn.createStatement();<newline46mondego>        statement.executeUpdate(query);<newline46mondego>        statement.close();<newline46mondego><newline46mondego>        out.println(<doubleQuotes46>Data is successfully inserted!<doubleQuotes46>);<newline46mondego><newline46mondego>    } catch( ClassNotFoundException e ){<newline46mondego>        System.err.println( <doubleQuotes46>Database Driver class not Found!<doubleQuotes46> );<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch( SQLException e ){<newline46mondego>        e.printStackTrace();<newline46mondego>    } finnaly {<newline46mondego>        try {<newline46mondego>            if ( conn != null ) {<newline46mondego>                conn.close();<newline46mondego>            }<newline46mondego>        } catch ( SQLException e ) {<newline46mondego>            System.err.println( <doubleQuotes46>Problems when closing connection<doubleQuotes46> );<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>%><newline46mondego>"
"108splitHere46","11999067splitHere46","items"
"109splitHere46","11999067splitHere46","synchronized"
"110splitHere46","11999067splitHere46","items"
"111splitHere46","11999067splitHere46","get"
"112splitHere46","11999067splitHere46","synchronized"
"113splitHere46","11999067splitHere46","Item"
"114splitHere46","11999067splitHere46","Item"
"115splitHere46","11999067splitHere46","remove"
"116splitHere46","11999067splitHere46","false"
"117splitHere46","11999067splitHere46","Item"
"118splitHere46","11999067splitHere46","items"
"119splitHere46","11999067splitHere46","remove(item)"
"120splitHere46","11999067splitHere46","item"
"121splitHere46","11999067splitHere46","index"
"122splitHere46","11999067splitHere46","check"
"123splitHere46","11999072splitHere46","Intent intent = new Intent(Intent.ACTION_EDIT);<newline46mondego>intent.setType(<doubleQuotes46>vnd.android.cursor.item/event<doubleQuotes46>);<newline46mondego>intent.putExtra(<doubleQuotes46>title<doubleQuotes46>, <doubleQuotes46>Some title<doubleQuotes46>);<newline46mondego>intent.putExtra(<doubleQuotes46>description<doubleQuotes46>, <doubleQuotes46>Some description<doubleQuotes46>);<newline46mondego>intent.putExtra(<doubleQuotes46>beginTime<doubleQuotes46>, eventStartInMillis);<newline46mondego>intent.putExtra(<doubleQuotes46>endTime<doubleQuotes46>, eventEndInMillis);<newline46mondego>startActivity(intent);<newline46mondego>"
"124splitHere46","11999072splitHere46","android:name=<doubleQuotes46>android.permission.READ_CALENDAR<doubleQuotes46><newline46mondego>android:name=<doubleQuotes46>android.permission.WRITE_CALENDAR<doubleQuotes46><newline46mondego>"
"125splitHere46","11999381splitHere46","?"
"126splitHere46","11999381splitHere46","List<? extends Animal> dogList = getAnimalList();<newline46mondego>"
"127splitHere46","11999394splitHere46","?max-results"
"128splitHere46","11999447splitHere46","Super_Employee"
"129splitHere46","11999447splitHere46","Super_Employee() { }<newline46mondego>"
"130splitHere46","11999447splitHere46","Super_Employee(String Fname,String Lname, String address, int number) {<newline46mondego>    //...<newline46mondego>"
"131splitHere46","11999520splitHere46","public static String getURLData( String url ) {<newline46mondego><newline46mondego>    // creates a StringBuilder to store the data<newline46mondego>    StringBuilder out = new StringBuilder();<newline46mondego><newline46mondego>    try {<newline46mondego><newline46mondego>        // creating the URL<newline46mondego>        URL u = new URL( url );<newline46mondego><newline46mondego>        // openning a connection<newline46mondego>        URLConnection uCon = u.openConnection();<newline46mondego><newline46mondego>        // getting the connection's input stream<newline46mondego>        InputStream in = uCon.getInputStream();<newline46mondego><newline46mondego>        // a buffer to store the data<newline46mondego>        byte[] buffer = new byte[2048];<newline46mondego><newline46mondego><newline46mondego>        // try to insert data in the buffer until there is data to be read<newline46mondego>        while ( in.read( buffer ) != -1 ) {<newline46mondego><newline46mondego>            // storing data...<newline46mondego>            out.append( new String( buffer ) );<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        // closing the input stream<newline46mondego>        in.close();            <newline46mondego><newline46mondego>        // exceptions...  <newline46mondego>    } catch ( MalformedURLException exc )  {<newline46mondego><newline46mondego>        exc.printStackTrace();<newline46mondego><newline46mondego>    } catch ( IOException exc ) {<newline46mondego><newline46mondego>        exc.printStackTrace();<newline46mondego><newline46mondego>    } catch ( SecurityException exc ) {<newline46mondego><newline46mondego>        exc.printStackTrace();<newline46mondego><newline46mondego>    } catch ( IllegalArgumentException exc ) {<newline46mondego><newline46mondego>        exc.printStackTrace();<newline46mondego><newline46mondego>    } catch ( UnsupportedOperationException exc ) {<newline46mondego><newline46mondego>        exc.printStackTrace();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    // returning data<newline46mondego>    return out.toString();<newline46mondego><newline46mondego>}<newline46mondego>"
"132splitHere46","11999573splitHere46","String refererURI = new URI(request.getHeader(<doubleQuotes46>referer<doubleQuotes46>)).getPath();<newline46mondego>"
"133splitHere46","11999585splitHere46","Roni"
"134splitHere46","11999585splitHere46","starting point"
"135splitHere46","11999585splitHere46","public class MapAndList {<newline46mondego><newline46mondego>    private List<String> keys = new ArrayList<String>();<newline46mondego>    private Map<String, Object> keyValuePair = new HashMap<String, Object>();<newline46mondego><newline46mondego>    public void addItem(String key, Object item) {<newline46mondego>        // TODO if the key is already present in the list throw exception<newline46mondego>        keys.add(key);<newline46mondego>        keyValuePair.put(key, item);<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeItem(String key) {<newline46mondego>        keys.remove(key);<newline46mondego>        keyValuePair.remove(key);<newline46mondego>    }<newline46mondego><newline46mondego>    public void removteItem(int index) {<newline46mondego>        removeItem(keys.get(index));<newline46mondego>    }<newline46mondego><newline46mondego>    public void addItem(String key, Object item, int index) {<newline46mondego>        keys.add(index, key);<newline46mondego>        keyValuePair.put(key, item);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"136splitHere46","11999607splitHere46","Object JComboBox.getSelectedItem()"
"137splitHere46","11999607splitHere46","Object"
"138splitHere46","11999607splitHere46","YourType varName=(YourType)comboBox.getSelectedItem();"
"139splitHere46","11999607splitHere46","String value=comboBox.getSelectedItem().toString();<newline46mondego>"
"140splitHere46","11999657splitHere46","import java.io.*;<newline46mondego><newline46mondego>public class Foo {<newline46mondego><newline46mondego>    public static void traverseAndProcess( File startDir ) {<newline46mondego>        for ( File f : startDir.listFiles() ) {<newline46mondego>            // this file is a directory?<newline46mondego>            if ( f.isDirectory() ) {<newline46mondego>                // yes, it is, so we need to go inside this directory<newline46mondego>                // calling the method again<newline46mondego>                traverseAndProcess( f );<newline46mondego>            } else {<newline46mondego>                // no, it is not a directory<newline46mondego>                // verifies if the file name finishes with <doubleQuotes46>.xml<doubleQuotes46><newline46mondego>                if ( f.getName().lastIndexOf( <doubleQuotes46>.xml<doubleQuotes46> ) != -1 ) {<newline46mondego>                    // it is a xml (just verifying the extension)<newline46mondego>                    // so, process this file!<newline46mondego>                    process( f );<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static void process( File f ) {<newline46mondego>        // here you will process the xml<newline46mondego>        System.out.println( <doubleQuotes46>Processing <doubleQuotes46> + f + <doubleQuotes46> file...<doubleQuotes46> );<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main( String[] args ) {<newline46mondego>        // processing the current directory... change it<newline46mondego>        traverseAndProcess( new File( <doubleQuotes46>./<doubleQuotes46> ) );<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"141splitHere46","11999665splitHere46","for (int x = 0; x < 3; x++) {<newline46mondego>  if (x < 2) {<newline46mondego>    System.out.println(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>/* outside of the for */<newline46mondego>System.out.println(<doubleQuotes46>world<doubleQuotes46>);<newline46mondego>"
"142splitHere46","11999665splitHere46","<doubleQuotes46>hello<doubleQuotes46>"
"143splitHere46","11999665splitHere46","<doubleQuotes46>world<doubleQuotes46>"
"144splitHere46","11999665splitHere46","for (int x = 0; x < 3; x++)<newline46mondego>   if (x < 2) <newline46mondego>      System.out.println(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>      System.out.println(<doubleQuotes46>world<doubleQuotes46>);<newline46mondego>"
"145splitHere46","11999665splitHere46","if"
"146splitHere46","11999665splitHere46","for"
"147splitHere46","11999665splitHere46","for"
"148splitHere46","11999665splitHere46","if"
"149splitHere46","11999665splitHere46","println(<doubleQuotes46>hello<doubleQuotes46>)"
"150splitHere46","11999665splitHere46","for"
"151splitHere46","11999665splitHere46","println(<doubleQuotes46>world<doubleQuotes46>)"
"152splitHere46","11999665splitHere46","for (int x = 0; x < 3; x++)<newline46mondego>    if (x < 2) { <newline46mondego>      System.out.println(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>      System.out.println(<doubleQuotes46>world<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"153splitHere46","11999665splitHere46","for"
"154splitHere46","11999665splitHere46","if"
"155splitHere46","11999665splitHere46","println"
"156splitHere46","11999725splitHere46","MyApp.bin"
"157splitHere46","11999725splitHere46","Runtime.exec()"
"158splitHere46","11999725splitHere46","Process"
"159splitHere46","11999966splitHere46","pause()"
"160splitHere46","11999966splitHere46","acm.util.SwingTimer"
"161splitHere46","11999966splitHere46","ActionListener"
"162splitHere46","12000045splitHere46","java.util.EnumSet"
"163splitHere46","12000045splitHere46","final Set<Direction> northEast = EnumSet<Direction>.of(Direction.NORTH, Direction.EAST);<newline46mondego>"
"164splitHere46","12000045splitHere46","EnumSet"
"165splitHere46","12000142splitHere46","Class"
"166splitHere46","12000142splitHere46","getContextBoundedClass()"
"167splitHere46","12000142splitHere46","Object"
"168splitHere46","12000142splitHere46","Object contextClass = PageContextHelper.getContextBoundedClass( <doubleQuotes46>authentication<doubleQuotes46>);<newline46mondego>"
"169splitHere46","12000142splitHere46","Class contextClass = PageContextHelper.getContextBoundedClass( <doubleQuotes46>authentication<doubleQuotes46>);<newline46mondego>"
"170splitHere46","12000142splitHere46","contextClass.getClass()"
"171splitHere46","12000142splitHere46","contextClass.newInstance()"
"172splitHere46","12000364splitHere46","LinkedHashMap"
"173splitHere46","12000364splitHere46","ArrayList"
"174splitHere46","12000364splitHere46","Map.entrySet"
"175splitHere46","12000364splitHere46","for (final Map.Entry<String, String> entry : propertyMap.entrySet()) {<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"176splitHere46","12000459splitHere46","TableRowSorter"
"177splitHere46","12000459splitHere46","public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego><newline46mondego>    RowFilter rowFilter = ((TableRowSorter) table.getRowSorter()).getRowFilter();<newline46mondego>    if (rowFilter != null) {<newline46mondego><newline46mondego>        if (!rowFilter.include(new FilterEntry(table.getModel(), value, row))) {<newline46mondego><newline46mondego>            value = null;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    // The rest of the code...<newline46mondego><newline46mondego>}<newline46mondego>"
"178splitHere46","12000459splitHere46","FilterEntry"
"179splitHere46","12000459splitHere46","public class FilterEntry extends RowFilter.Entry<TableModel, Integer> {<newline46mondego><newline46mondego>    private final TableModel model;<newline46mondego>    private final Object value;<newline46mondego>    private final int rowIndex;<newline46mondego><newline46mondego>    public FilterEntry(TableModel model, Object value, int rowIndex) {<newline46mondego><newline46mondego>        this.model = model;<newline46mondego>        this.value = value;<newline46mondego>        this.rowIndex = rowIndex;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public TableModel getModel() {<newline46mondego><newline46mondego>        return model;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getValueCount() {<newline46mondego><newline46mondego>        return getModel().getColumnCount();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object getValue(int index) {<newline46mondego><newline46mondego>        return value;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Integer getIdentifier() {<newline46mondego><newline46mondego>        return rowIndex;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"180splitHere46","12000459splitHere46","table.getColumnModel().getColumn(1).setCellRenderer(new MultiLineCellRenderer());<newline46mondego>table.getColumnModel().getColumn(3).setCellRenderer(new MultiLineCellRenderer());<newline46mondego>"
"181splitHere46","12000459splitHere46","ColumnModel"
"182splitHere46","12000459splitHere46","// Changing the column model effects the data model as well...<newline46mondego>TableModel model = table.getModel();<newline46mondego>table.setColumnModel(new MutableColumnModel());<newline46mondego>table.setModel(model);<newline46mondego>"
"183splitHere46","12000459splitHere46","updateColumns"
"184splitHere46","12000459splitHere46","protected void updateColumns() {<newline46mondego><newline46mondego>    RowFilter rowFilter = ((TableRowSorter) tblSearch.getRowSorter()).getRowFilter();<newline46mondego><newline46mondego>    MutableTableColumnModel columnModel = (MutableTableColumnModel) tblSearch.getColumnModel();<newline46mondego>    // Want to reset the columns, otherwise we run into problems doing the value<newline46mondego>    // lookup, as the table doesn't think it exists.<newline46mondego>    // You might be able to get around it with this instead, but we need<newline46mondego>    // to rest the view any way...<newline46mondego>    // columnModel.getColumnByModelIndex(col);<newline46mondego>    columnModel.setColumnVisible(0, true);<newline46mondego>    columnModel.setColumnVisible(1, true);<newline46mondego>    columnModel.setColumnVisible(2, true);<newline46mondego>    columnModel.setColumnVisible(3, true);<newline46mondego><newline46mondego>    if (rowFilter != null) {<newline46mondego><newline46mondego>        Map<Integer, Boolean> mapColumns = new HashMap<Integer, Boolean>(tblSearch.getColumnCount());<newline46mondego>        for (int row = 0; row < tblSearch.getRowCount(); row++) {<newline46mondego><newline46mondego>            boolean include = includeValue(row, 1, rowFilter);<newline46mondego>            mapColumns.put(0, include);<newline46mondego>            mapColumns.put(1, include);<newline46mondego><newline46mondego>            include = includeValue(row, 3, rowFilter);<newline46mondego>            mapColumns.put(2, include);<newline46mondego>            mapColumns.put(3, include);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        for (Integer col : mapColumns.keySet()) {<newline46mondego><newline46mondego>            columnModel.setColumnVisible(col, mapColumns.get(col));<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>protected boolean includeValue(int row, int col, RowFilter filter) {<newline46mondego><newline46mondego>    Object value = tblSearch.getValueAt(row, col);<newline46mondego><newline46mondego>    boolean include = filter.include(new FilterEntry(tblSearch.getModel(), value, row));<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>include <doubleQuotes46> + value + <doubleQuotes46>; include = <doubleQuotes46> + include);<newline46mondego><newline46mondego>    return include;<newline46mondego><newline46mondego>}<newline46mondego>"
"185splitHere46","12000459splitHere46","MutableColumnModel"
"186splitHere46","12000459splitHere46","public class MutableTableColumnModel extends DefaultTableColumnModel {<newline46mondego><newline46mondego>    private List<TableColumn> allTableColumns;<newline46mondego><newline46mondego>    public MutableTableColumnModel() {<newline46mondego><newline46mondego>        allTableColumns = new ArrayList<TableColumn>(10);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void setColumnVisible(int index, boolean visible) {<newline46mondego><newline46mondego>        setColumnVisible(getColumnByModelIndex(index), visible);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Sets the visibility of the specified TableColumn.<newline46mondego>     * The call is ignored if the TableColumn is not found in this column model<newline46mondego>     * or its visibility status did not change.<newline46mondego>     * <p><newline46mondego>     *<newline46mondego>     * @param aColumn        the column to show/hide<newline46mondego>     * @param visible its new visibility status<newline46mondego>     */<newline46mondego>    // listeners will receive columnAdded()/columnRemoved() event<newline46mondego>    public void setColumnVisible(TableColumn column, boolean visible) {<newline46mondego><newline46mondego>        if (column != null) {<newline46mondego><newline46mondego>            if (!visible) {<newline46mondego><newline46mondego>                if (isColumnVisible(column)) {<newline46mondego><newline46mondego>                    super.removeColumn(column);<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>            } else {<newline46mondego><newline46mondego>                // find the visible index of the column:<newline46mondego>                // iterate through both collections of visible and all columns, counting<newline46mondego>                // visible columns up to the one that's about to be shown again<newline46mondego>                int noVisibleColumns = tableColumns.size();<newline46mondego>                int noInvisibleColumns = allTableColumns.size();<newline46mondego>                int visibleIndex = 0;<newline46mondego><newline46mondego>                for (int invisibleIndex = 0; invisibleIndex < noInvisibleColumns; ++invisibleIndex) {<newline46mondego>                    TableColumn visibleColumn = (visibleIndex < noVisibleColumns ? (TableColumn) tableColumns.get(visibleIndex) : null);<newline46mondego>                    TableColumn testColumn = (TableColumn) allTableColumns.get(invisibleIndex);<newline46mondego><newline46mondego>                    if (testColumn == column) {<newline46mondego>                        if (visibleColumn != column) {<newline46mondego>                            super.addColumn(column);<newline46mondego>                            super.moveColumn(tableColumns.size() - 1, visibleIndex);<newline46mondego>                        }<newline46mondego>                        return; // ####################<newline46mondego>                    }<newline46mondego>                    if (testColumn == visibleColumn) {<newline46mondego>                        ++visibleIndex;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Makes all columns in this model visible<newline46mondego>     */<newline46mondego>    public void showAllColumns() {<newline46mondego>        int noColumns = allTableColumns.size();<newline46mondego><newline46mondego>        for (int columnIndex = 0; columnIndex < noColumns; ++columnIndex) {<newline46mondego>            TableColumn visibleColumn = (columnIndex < tableColumns.size() ? (TableColumn) tableColumns.get(columnIndex) : null);<newline46mondego>            TableColumn invisibleColumn = (TableColumn) allTableColumns.get(columnIndex);<newline46mondego><newline46mondego>            if (visibleColumn != invisibleColumn) {<newline46mondego>                super.addColumn(invisibleColumn);<newline46mondego>                super.moveColumn(tableColumns.size() - 1, columnIndex);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Maps the index of the column in the table model at<newline46mondego>     * <code>modelColumnIndex</code> to the TableColumn object.<newline46mondego>     * There may me multiple TableColumn objects showing the same model column, though this is uncommon.<newline46mondego>     * This method will always return the first visible or else the first invisible column with the specified index.<newline46mondego>     * @param modelColumnIndex index of column in table model<newline46mondego>     * @return table column object or null if no such column in this column model<newline46mondego>     */<newline46mondego>    public TableColumn getColumnByModelIndex(int modelColumnIndex) {<newline46mondego>        for (int columnIndex = 0; columnIndex < allTableColumns.size(); ++columnIndex) {<newline46mondego>            TableColumn column = (TableColumn) allTableColumns.get(columnIndex);<newline46mondego>            if (column.getModelIndex() == modelColumnIndex) {<newline46mondego>                return column;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    /** Checks wether the specified column is currently visible.<newline46mondego>     * @param aColumn column to check<newline46mondego>     * @return visibility of specified column (false if there is no such column at all. [It's not visible, right?])<newline46mondego>     */<newline46mondego>    public boolean isColumnVisible(TableColumn aColumn) {<newline46mondego>        return (tableColumns.indexOf(aColumn) >= 0);<newline46mondego>    }<newline46mondego><newline46mondego>    /** Append <code>column</code> to the right of exisiting columns.<newline46mondego>     * Posts <code>columnAdded</code> event.<newline46mondego>     * @param column The column to be added<newline46mondego>     * @see #removeColumn<newline46mondego>     * @exception IllegalArgumentException if <code>column</code> is <code>null</code><newline46mondego>     */<newline46mondego>    public void addColumn(TableColumn column) {<newline46mondego>        allTableColumns.add(column);<newline46mondego>        super.addColumn(column);<newline46mondego>    }<newline46mondego><newline46mondego>    /** Removes <code>column</code> from this column model.<newline46mondego>     * Posts <code>columnRemoved</code> event.<newline46mondego>     * Will do nothing if the column is not in this model.<newline46mondego>     * @param column the column to be added<newline46mondego>     * @see #addColumn<newline46mondego>     */<newline46mondego>    public void removeColumn(TableColumn column) {<newline46mondego>        int allColumnsIndex = allTableColumns.indexOf(column);<newline46mondego>        if (allColumnsIndex != -1) {<newline46mondego>            allTableColumns.remove(allColumnsIndex);<newline46mondego>        }<newline46mondego>        super.removeColumn(column);<newline46mondego>    }<newline46mondego><newline46mondego>    /** Moves the column from <code>oldIndex</code> to <code>newIndex</code>.<newline46mondego>     * Posts  <code>columnMoved</code> event.<newline46mondego>     * Will not move any columns if <code>oldIndex</code> equals <code>newIndex</code>.<newline46mondego>     *<newline46mondego>     * @param    oldIndex            index of column to be moved<newline46mondego>     * @param    newIndex            new index of the column<newline46mondego>     * @exception IllegalArgumentException    if either <code>oldIndex</code> or<newline46mondego>     *                         <code>newIndex</code><newline46mondego>     *                        are not in [0, getColumnCount() - 1]<newline46mondego>     */<newline46mondego>    public void moveColumn(int oldIndex, int newIndex) {<newline46mondego>        if ((oldIndex < 0) || (oldIndex >= getColumnCount())<newline46mondego>                || (newIndex < 0) || (newIndex >= getColumnCount())) {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>moveColumn() - Index out of range<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        TableColumn fromColumn = (TableColumn) tableColumns.get(oldIndex);<newline46mondego>        TableColumn toColumn = (TableColumn) tableColumns.get(newIndex);<newline46mondego><newline46mondego>        int allColumnsOldIndex = allTableColumns.indexOf(fromColumn);<newline46mondego>        int allColumnsNewIndex = allTableColumns.indexOf(toColumn);<newline46mondego><newline46mondego>        if (oldIndex != newIndex) {<newline46mondego>            allTableColumns.remove(allColumnsOldIndex);<newline46mondego>            allTableColumns.add(allColumnsNewIndex, fromColumn);<newline46mondego>        }<newline46mondego><newline46mondego>        super.moveColumn(oldIndex, newIndex);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns the total number of columns in this model.<newline46mondego>     *<newline46mondego>     * @param   onlyVisible   if set only visible columns will be counted<newline46mondego>     * @return    the number of columns in the <code>tableColumns</code> array<newline46mondego>     * @see    #getColumns<newline46mondego>     */<newline46mondego>    public int getColumnCount(boolean onlyVisible) {<newline46mondego>        List<TableColumn> columns = (onlyVisible ? tableColumns : allTableColumns);<newline46mondego>        return columns.size();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns an <code>Enumeration</code> of all the columns in the model.<newline46mondego>     *<newline46mondego>     * @param   onlyVisible   if set all invisible columns will be missing from the enumeration.<newline46mondego>     * @return an <code>Enumeration</code> of the columns in the model<newline46mondego>     */<newline46mondego>    public Iterator<TableColumn> getColumns(boolean onlyVisible) {<newline46mondego><newline46mondego>        List<TableColumn> columns = (onlyVisible ? tableColumns : allTableColumns);<newline46mondego>        return columns.iterator();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns the position of the first column whose identifier equals <code>identifier</code>.<newline46mondego>     * Position is the the index in all visible columns if <code>onlyVisible</code> is true or<newline46mondego>     * else the index in all columns.<newline46mondego>     *<newline46mondego>     * @param    identifier   the identifier object to search for<newline46mondego>     * @param    onlyVisible  if set searches only visible columns<newline46mondego>     *<newline46mondego>     * @return        the index of the first column whose identifier<newline46mondego>     *            equals <code>identifier</code><newline46mondego>     *<newline46mondego>     * @exception       IllegalArgumentException  if <code>identifier</code><newline46mondego>     *                is <code>null</code>, or if no<newline46mondego>     *                <code>TableColumn</code> has this<newline46mondego>     *                <code>identifier</code><newline46mondego>     * @see        #getColumn<newline46mondego>     */<newline46mondego>    public int getColumnIndex(Object identifier, boolean onlyVisible) {<newline46mondego>        if (identifier == null) {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>Identifier is null<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        List columns = (onlyVisible ? tableColumns : allTableColumns);<newline46mondego>        int noColumns = columns.size();<newline46mondego>        TableColumn column;<newline46mondego><newline46mondego>        for (int columnIndex = 0; columnIndex < noColumns; ++columnIndex) {<newline46mondego>            column = (TableColumn) columns.get(columnIndex);<newline46mondego><newline46mondego>            if (identifier.equals(column.getIdentifier())) {<newline46mondego>                return columnIndex;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>Identifier not found<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns the <code>TableColumn</code> object for the column<newline46mondego>     * at <code>columnIndex</code>.<newline46mondego>     *<newline46mondego>     * @param    columnIndex    the index of the column desired<newline46mondego>     * @param    onlyVisible    if set columnIndex is meant to be relative to all visible columns only<newline46mondego>     *                          else it is the index in all columns<newline46mondego>     *<newline46mondego>     * @return    the <code>TableColumn</code> object for the column<newline46mondego>     *                at <code>columnIndex</code><newline46mondego>     */<newline46mondego>    public TableColumn getColumn(int columnIndex, boolean onlyVisible) {<newline46mondego>        return (TableColumn) tableColumns.elementAt(columnIndex);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns all the columns<newline46mondego>     * @return<newline46mondego>     */<newline46mondego>    public TableColumn[] getAllColumns() {<newline46mondego><newline46mondego>        return allTableColumns.toArray(new TableColumn[allTableColumns.size()]);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public TableColumn[] getHiddenColumns() {<newline46mondego><newline46mondego>        ArrayList<TableColumn> lstColumns = new ArrayList<TableColumn>(10);<newline46mondego><newline46mondego>        for (TableColumn column : getAllColumns()) {<newline46mondego><newline46mondego>            if (!isColumnVisible(column)) {<newline46mondego><newline46mondego>                lstColumns.add(column);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return lstColumns.toArray(new TableColumn[lstColumns.size()]);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"187splitHere46","12000544splitHere46","<form name=<doubleQuotes46>TIMER<doubleQuotes46>><input type=<doubleQuotes46>text<doubleQuotes46> size=<doubleQuotes46>8<doubleQuotes46> <newline46mondego>name=<doubleQuotes46>d2<doubleQuotes46>></form> <newline46mondego><newline46mondego><script> <newline46mondego><!-- <newline46mondego>// <newline46mondego> var milisec=0 <newline46mondego> var seconds=30 <newline46mondego> document.counter.d2.value='30' <newline46mondego><newline46mondego>function display(){ <newline46mondego> if (milisec<=0){ <newline46mondego>    milisec=9 <newline46mondego>    seconds-=1 <newline46mondego> } <newline46mondego> if (seconds<=-1){ <newline46mondego>    milisec=0 <newline46mondego>    seconds+=1 <newline46mondego> } <newline46mondego> else <newline46mondego>    milisec-=1 <newline46mondego>    document.counter.d2.value=seconds+<doubleQuotes46>.<doubleQuotes46>+milisec <newline46mondego>    setTimeout(<doubleQuotes46>display()<doubleQuotes46>,100) <newline46mondego>} <newline46mondego>display() <newline46mondego>--> <newline46mondego></script> <newline46mondego>"
"188splitHere46","12000702splitHere46","public final class Foo<newline46mondego>{<newline46mondego>    private final List<String> strings;<newline46mondego><newline46mondego>    public Foo(List<String> strings)<newline46mondego>    {<newline46mondego>        // Defensive copy on construction. Protects from constructing<newline46mondego>        // code mutating the list.<newline46mondego>        this.strings = new ArrayList<String>(strings);<newline46mondego>    }<newline46mondego><newline46mondego>    public List<String> getStrings()<newline46mondego>    {<newline46mondego>        // Defensive copy on read. Protects from clients mutating the list.<newline46mondego>        return new ArrayList<String>(strings);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"189splitHere46","12000702splitHere46","ImmutableList"
"190splitHere46","12000702splitHere46","ImmutableList"
"191splitHere46","12000702splitHere46","getStrings"
"192splitHere46","12000702splitHere46","String"
"193splitHere46","12000702splitHere46","List<StringBuilder>"
"194splitHere46","12000749splitHere46","17.08.2012 05:35:19:7600000<newline46mondego>"
"195splitHere46","12000749splitHere46",":7600000"
"196splitHere46","12000749splitHere46","SSSS"
"197splitHere46","12000749splitHere46","SimpleDateFormat"
"198splitHere46","12000749splitHere46","long"
"199splitHere46","12000749splitHere46","Date"
"200splitHere46","12000833splitHere46","implements Comparator<String><newline46mondego>"
"201splitHere46","12000833splitHere46","Lab7_082588FetchDetails"
"202splitHere46","12000833splitHere46","Comparator<Lab7_082588FetchDetails>"
"203splitHere46","12000833splitHere46","public int compare(Lab7_082588FetchDetails objA, Lab7_082588FetchDetails objB) {<newline46mondego>        return objA.getTitle().compareToIgnoreCase(objB.getTitle());<newline46mondego>    }  <newline46mondego>"
"204splitHere46","12001142splitHere46","try {<newline46mondego>    formatter = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSS<doubleQuotes46>);<newline46mondego>    date = (Date) formatter.parse(<doubleQuotes46>2012-08-16T11:07:10.793<doubleQuotes46>);<newline46mondego>} catch(ParseException e) {<newline46mondego>    // It does not match your input<newline46mondego>}<newline46mondego>"
"205splitHere46","12001323splitHere46","java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory"
"206splitHere46","12001377splitHere46","^\d+(\.\d+)*$<newline46mondego>"
"207splitHere46","12001377splitHere46","^\d(\.\d)*$<newline46mondego>"
"208splitHere46","12001377splitHere46","^\d+(\.\d+)+$<newline46mondego>^\d(\.\d)+$<newline46mondego>"
"209splitHere46","12001377splitHere46","Pattern NUMBERS_WITH_DOTS = Pattern.compile(<doubleQuotes46>^\\d+(\\.\\d+)*$<doubleQuotes46>);<newline46mondego>"
"210splitHere46","12001386splitHere46","<bean id=<doubleQuotes46>patientSearchAPIClass<doubleQuotes46> <newline46mondego> class=<doubleQuotes46>com.axiohelix.nozoki.web.action.api.PatientSearch<doubleQuotes46> scope=prototype><newline46mondego>"
"211splitHere46","12001593splitHere46","sqlite3_open_v2(<doubleQuotes46>/data/data/com.muthu,tamil/databases/aathichudi.db<doubleQuotes46>, &handle, 1, NULL)<newline46mondego>failed sqlite returned: error code = 14, msg = cannot open file at source line 25467 <newline46mondego>"
"212splitHere46","12001604splitHere46","protected void sublayout(int maxWidth, int maxHeight) {<newline46mondego>    super.sublayout(Display.getWidth(), height);<newline46mondego>    setExtent(Display.getWidth(), height);<newline46mondego>}<newline46mondego>"
"213splitHere46","12001604splitHere46","image_width"
"214splitHere46","12001604splitHere46","width=image_width;<newline46mondego>height=image_width;<newline46mondego>"
"215splitHere46","12001604splitHere46","image_height"
"216splitHere46","12001604splitHere46","height"
"217splitHere46","12001604splitHere46","VerticalManager"
"218splitHere46","12001604splitHere46","VERTICAL_SCROLL"
"219splitHere46","12001628splitHere46","List<? extends Animal>"
"220splitHere46","12001628splitHere46","Animal"
"221splitHere46","12001628splitHere46","Animal"
"222splitHere46","12001628splitHere46","List<Animal>"
"223splitHere46","12001628splitHere46","Animal"
"224splitHere46","12001628splitHere46","List<Lion>"
"225splitHere46","12001628splitHere46","List<? extends Animal>"
"226splitHere46","12001628splitHere46","List<Animal>"
"227splitHere46","12001628splitHere46","List<? extends Animal>"
"228splitHere46","12001628splitHere46","final List<? extends Animal> someAnimals = ...;<newline46mondego>final List<Animal> animals = new ArrayList<Animal>(someAnimals);<newline46mondego>"
"229splitHere46","12001628splitHere46","ArrayList"
"230splitHere46","12001628splitHere46","Collection<? extends E>"
"231splitHere46","12001710splitHere46","public int SearchDic(final CharSequence received, final Context context) {<newline46mondego>    Handler mHandler = new Handler();<newline46mondego>    mHandler.postDelayed(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run(){<newline46mondego>        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(<doubleQuotes46>http://m.endic.naver.com/search.nhn?query=<doubleQuotes46> + received + <doubleQuotes46>&searchOption=entryIdiom&preQuery=&forceRedirect=<doubleQuotes46>));<newline46mondego>        context.startActivity(browserIntent);<newline46mondego>    }}, 10);<newline46mondego>return 0; <newline46mondego>}<newline46mondego>"
"232splitHere46","12001738splitHere46","out.flush()"
"233splitHere46","12001738splitHere46","out.close()"
"234splitHere46","12001738splitHere46","close()"
"235splitHere46","12001742splitHere46","finish();<newline46mondego>            try {<newline46mondego>                Thread.sleep(10000);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>            startActivity(new Intent(getContext(), YourMainActivity.class));// then call again<newline46mondego>"
"236splitHere46","12001874splitHere46","-XX:MaxPermSize"
"237splitHere46","12001874splitHere46","-vm<newline46mondego>C:\Java\JDK\1.6\bin\javaw.exe (The exact path to javaw.exe)<newline46mondego>-vmargs<newline46mondego>-Xms40m<newline46mondego>-Xmx1024m<newline46mondego>"
"238splitHere46","12001874splitHere46","-startup<newline46mondego>plugins/org.eclipse.equinox.launcher_1.2.0.v20110502.jar<newline46mondego>--launcher.library<newline46mondego>plugins/org.eclipse.equinox.launcher.win32.win32.x86_1.1.100.v20110502<newline46mondego>-showsplash<newline46mondego>org.eclipse.platform<newline46mondego>--launcher.XXMaxPermSize<newline46mondego>256m<newline46mondego>--launcher.defaultAction<newline46mondego>openFile<newline46mondego>-vm<newline46mondego>C:\Java\JDK\1.6\bin\javaw.exe<newline46mondego>-vmargs<newline46mondego>-XX:MaxPermSize=256m<newline46mondego>-Xms40m<newline46mondego>-Xmx768m<newline46mondego>"
"239splitHere46","12001926splitHere46","Serializable"
"240splitHere46","12001926splitHere46","Serializable"
"241splitHere46","12001926splitHere46","Serializable"
"242splitHere46","12001926splitHere46","Serializable"
"243splitHere46","12001926splitHere46","Serializable"
"244splitHere46","12002018splitHere46","<doubleQuotes46>SELECT c.name, CASE WHEN (c.capital IS NULL) THEN NULL ELSE c.capital.name END FROM Country AS c<doubleQuotes46><newline46mondego>"
"245splitHere46","12002030splitHere46","TreeSet"
"246splitHere46","12002030splitHere46","NumberComparator"
"247splitHere46","12002030splitHere46","Number"
"248splitHere46","12002030splitHere46","Number"
"249splitHere46","12002030splitHere46","Number"
"250splitHere46","12002030splitHere46","class NumberComparator implements Comparator<Number> {<newline46mondego>    public int compare(Number o1, Number o2) {<newline46mondego>        return 1;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"251splitHere46","12002030splitHere46","TreeSet set = new TreeSet(new NumberComparator());<newline46mondego>"
"252splitHere46","12002030splitHere46","TreeSet<Number> set = new TreeSet<Number>(new NumberComparator());<newline46mondego>"
"253splitHere46","12002266splitHere46","System"
"254splitHere46","12002266splitHere46","System.out"
"255splitHere46","12002359splitHere46","<project><newline46mondego>  ...<newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>build-helper-maven-plugin</artifactId><newline46mondego>        <version>1.7</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <id>regex-property</id><newline46mondego>            <goals><newline46mondego>              <goal>regex-property</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>              <name>tag.version</name><newline46mondego>              <value>${project.version}</value><newline46mondego>              <regex>^([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)\.(-SNAPSHOT)?$</regex><newline46mondego>              <replacement>V$1_$2_$3_P$4</replacement><newline46mondego>              <failIfNoMatch>true</failIfNoMatch><newline46mondego>            </configuration><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego>  ...<newline46mondego></project><newline46mondego>"
"256splitHere46","12002359splitHere46","validate"
"257splitHere46","12002479splitHere46","QueryBuilder query = new QueryBuilder();<newline46mondego>query.put(<doubleQuotes46>loc<doubleQuotes46>).near(-122.934326171875, 37.795268017578, 50);<newline46mondego>query.or(<newline46mondego>        QueryBuilder.start(<doubleQuotes46>uid<doubleQuotes46>).is(<doubleQuotes46>at<doubleQuotes46>).get(),<newline46mondego>        QueryBuilder.start(<doubleQuotes46>myList.$id<doubleQuotes46>).is(new ObjectId(<doubleQuotes46>5024f2f577a59dd9736ddc38<doubleQuotes46>)).get()<newline46mondego>            );<newline46mondego>query.put(<doubleQuotes46>searchTag<doubleQuotes46>).regex(Pattern.compile(<doubleQuotes46>Union<doubleQuotes46>,Pattern.CASE_INSENSITIVE));<newline46mondego>"
"258splitHere46","12002479splitHere46","{ <doubleQuotes46>loc<doubleQuotes46> : { <doubleQuotes46>$near<doubleQuotes46> : [ -122.934326171875 , 37.795268017578 , 50.0]} , <newline46mondego>  <doubleQuotes46>$or<doubleQuotes46> : [ { <doubleQuotes46>uid<doubleQuotes46> : <doubleQuotes46>at<doubleQuotes46>} , { <doubleQuotes46>myList.$id<doubleQuotes46> : { <doubleQuotes46>$oid<doubleQuotes46> : <doubleQuotes46>5024f2f577a59dd9736ddc38<doubleQuotes46>}}] , <newline46mondego>  <doubleQuotes46>searchTag<doubleQuotes46> : { <doubleQuotes46>$regex<doubleQuotes46> : <doubleQuotes46>Union<doubleQuotes46> , <doubleQuotes46>$options<doubleQuotes46> : <doubleQuotes46>i<doubleQuotes46>}<newline46mondego>}<newline46mondego>"
"259splitHere46","12002489splitHere46","public static String[] clean(final String[] v) {<newline46mondego>  int r, w;<newline46mondego>  final int n = r = w = v.length;<newline46mondego>  while (r > 0) {<newline46mondego>    final String s = v[--r];<newline46mondego>    if (!s.equals(<doubleQuotes46>null<doubleQuotes46>)) {<newline46mondego>      v[--w] = s;<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return Arrays.copyOfRange(v, w, n);<newline46mondego>}<newline46mondego>"
"260splitHere46","12002489splitHere46","public static String[] clean(final String[] v) {<newline46mondego>  int r, w, n = r = w = v.length;<newline46mondego>  while (r > 0) {<newline46mondego>    final String s = v[--r];<newline46mondego>    if (!s.equals(<doubleQuotes46>null<doubleQuotes46>)) {<newline46mondego>      v[--w] = s;<newline46mondego>    }<newline46mondego>  }<newline46mondego>  final String[] c = new String[n -= w];<newline46mondego>  System.arraycopy(v, w, c, 0, n);<newline46mondego>  return c;<newline46mondego>}<newline46mondego>"
"261splitHere46","12002489splitHere46","public static void main(final String[] argv) {<newline46mondego>  final String[] source = new String[] { <doubleQuotes46>Mars<doubleQuotes46>, <doubleQuotes46>null<doubleQuotes46>, <doubleQuotes46>Saturn<doubleQuotes46>, <doubleQuotes46>null<doubleQuotes46>, <doubleQuotes46>Mars<doubleQuotes46> };<newline46mondego>  assert Arrays.equals(clean(source), new String[] { <doubleQuotes46>Mars<doubleQuotes46>, <doubleQuotes46>Saturn<doubleQuotes46>, <doubleQuotes46>Mars<doubleQuotes46> });<newline46mondego>}<newline46mondego>"
"262splitHere46","12002545splitHere46","System.setOut()"
"263splitHere46","12002545splitHere46","PrintStream"
"264splitHere46","12002545splitHere46","RuntimeException"
"265splitHere46","12002545splitHere46","println()"
"266splitHere46","12002610splitHere46","infix"
"267splitHere46","12002610splitHere46","postfix"
"268splitHere46","12002610splitHere46","Define a stack<newline46mondego>Go through each character in the string<newline46mondego>If it is between 0 to 9, append it to output string.<newline46mondego>If it is left brace push to stack<newline46mondego>If it is operator *+-/ then <newline46mondego>    If the stack is empty push it to the stack<newline46mondego>    If the stack is not empty then start a loop:<newline46mondego>            If the top of the stack has higher precedence<newline46mondego>            Then pop and append to output string<newline46mondego>            Else break<newline46mondego>        Push to the stack<newline46mondego><newline46mondego>If it is right brace then<newline46mondego>    While stack not empty and top not equal to left brace<newline46mondego>    Pop from stack and append to output string<newline46mondego>    Finally pop out the left brace.<newline46mondego><newline46mondego>If there is any input in the stack pop and append to the output string.<newline46mondego>"
"269splitHere46","12002701splitHere46","tablesListView.setEditable(true);<newline46mondego>tablesListView.setCellFactory(TextFieldListCell.forListView());<newline46mondego>tablesListView.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);<newline46mondego><newline46mondego>final Timeline animation = new Timeline(<newline46mondego>        new KeyFrame(Duration.seconds(.1),<newline46mondego>        new EventHandler<ActionEvent>() {<newline46mondego>            @Override<newline46mondego>            public void handle(ActionEvent actionEvent) {<newline46mondego>                tablesListView.edit(tablesListView.getSelectionModel().getSelectedIndex());<newline46mondego>            }<newline46mondego>        }));<newline46mondego>animation.setCycleCount(1);<newline46mondego><newline46mondego>addTableButton.setOnAction(new EventHandler<ActionEvent>(){<newline46mondego>    @Override<newline46mondego>    public void handle(ActionEvent evt) {<newline46mondego>        tablesListView.getItems().add(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        tablesListView.getSelectionModel().selectLast();<newline46mondego>        animation.play();<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"270splitHere46","12002701splitHere46","Platform.runLater()"
"271splitHere46","12002709splitHere46","<td>"
"272splitHere46","12002709splitHere46","<tr>"
"273splitHere46","12002709splitHere46","</p><newline46mondego><newline46mondego><pre><code>List<PlayerResult> players = // ...<newline46mondego>ListModel<PlayerResult> playersModel = new ListModel<PlayerResult>(players);<newline46mondego>ListView<PlayerResult> list = new ListView<PlayerResult>(<doubleQuotes46>list<doubleQuotes46>, playersModel) {<newline46mondego>    @Override<newline46mondego>    protected void populateItem(ListItem<PlayerResult> item) {<newline46mondego>        Label name = new Label(<doubleQuotes46>name<doubleQuotes46>, new PropertyModel<String>(item.getModel(), <doubleQuotes46>player.name<doubleQuotes46>));<newline46mondego>        Label surname = new Label(<doubleQuotes46>surname<doubleQuotes46>, new PropertyModel<String>(item.getModel(), <doubleQuotes46>player.surname<doubleQuotes46>));<newline46mondego>        Label results= new Label(<doubleQuotes46>results<doubleQuotes46>, item.getModelObject().getResults().size());<newline46mondego><newline46mondego>        ListView<Result> scoreList= new ListView<Result>(<doubleQuotes46>scoreList<doubleQuotes46>, item.getModelObject().getResults()){<newline46mondego>             @Override<newline46mondego>             protected void populateItem(ListItem<Result> resultItem) {<newline46mondego>                   item.add(new Label(<doubleQuotes46>score<doubleQuotes46>, new PropertyModel<Integer>(resultItem.getModel(), <doubleQuotes46>scoreValue ? <doubleQuotes46>)));<newline46mondego>             }<newline46mondego>        }<newline46mondego><newline46mondego>        // ...<newline46mondego><newline46mondego>        item.add(name);<newline46mondego>        item.add(surname);<newline46mondego>        item.add(results);<newline46mondego>        item.add(scoreList);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"274splitHere46","12002709splitHere46","</p><newline46mondego><newline46mondego><pre><code><table><newline46mondego>    <tr wicket:id=<doubleQuotes46>list<doubleQuotes46>><newline46mondego>        <td><span wicket:id=<doubleQuotes46>name<doubleQuotes46>>[name label]</span></td><newline46mondego>        <td><span wicket:id=<doubleQuotes46>surname<doubleQuotes46>>[surname label]</span></td><newline46mondego>        <td><span wicket:id=<doubleQuotes46>results<doubleQuotes46>>[results label]</span></td><newline46mondego>        <!-- and now variable number of tds --><newline46mondego>        <td wicket:id=<doubleQuotes46>scoreList<doubleQuotes46>><newline46mondego>             <span wicket:id=<doubleQuotes46>score<doubleQuotes46>></span><newline46mondego>        </td><newline46mondego>    </tr><newline46mondego></table><newline46mondego>"
"275splitHere46","12002817splitHere46","session.beginTransaction()"
"276splitHere46","12002817splitHere46","public void create(T entity) {<newline46mondego>   Session session=getSessionFactory().getCurrentSession();<newline46mondego>   Transaction trans=session.beginTransaction();<newline46mondego>   session.save(entity);<newline46mondego>   trans.commit();<newline46mondego>}<newline46mondego>"
"277splitHere46","12002839splitHere46","@JoinColumn"
"278splitHere46","12002839splitHere46","@JoinColumn(<doubleQuotes46>personID<doubleQuotes46>)"
"279splitHere46","12002839splitHere46","@JoinColumn(<doubleQuotes46>voterID<doubleQuotes46>)"
"280splitHere46","12002839splitHere46","domain-driven-design"
"281splitHere46","12002839splitHere46","@Id<newline46mondego>@GeneratedValue(strategy = GenerationType.AUTO)<newline46mondego>@Column(name = <doubleQuotes46>ID<doubleQuotes46>)<newline46mondego>private Integer ID;<newline46mondego><newline46mondego>@ManyToOne<newline46mondego>@JoinColumn(name = <doubleQuotes46>voterID<doubleQuotes46>)<newline46mondego>private Person voter;<newline46mondego><newline46mondego>@ManyToOne<newline46mondego>@JoinColumn(name = <doubleQuotes46>votedForID<doubleQuotes46>)<newline46mondego>private Person votedFor;<newline46mondego><newline46mondego>@Column(name = <doubleQuotes46>vote<doubleQuotes46>)<newline46mondego>private Boolean vote;<newline46mondego><newline46mondego>public void cast(Person voter, Person votedFor, boolean vote) {<newline46mondego>    // Maybe assert that this vote has not already been casted<newline46mondego>    this.voter = voter;<newline46mondego>    this.votedFor = votedFor;<newline46mondego>    this.vote = vote;<newline46mondego>}<newline46mondego><newline46mondego>public Integer getID() {<newline46mondego>    return ID;<newline46mondego>}<newline46mondego><newline46mondego>public Boolean isUpVote() {<newline46mondego>    return vote;<newline46mondego>}<newline46mondego><newline46mondego>public Boolean isDownVote() {<newline46mondego>    return !vote;<newline46mondego>}<newline46mondego><newline46mondego>public Person getVoter() {<newline46mondego>    return voter;<newline46mondego>}<newline46mondego><newline46mondego>public Person getVotedFor() {<newline46mondego>    return votedFor;<newline46mondego>}<newline46mondego>"
"282splitHere46","12002839splitHere46","vote"
"283splitHere46","12003431splitHere46","<string-array name=<doubleQuotes46>country_array<doubleQuotes46>><newline46mondego>    <item>Select Country</item><newline46mondego>    <item>Alabama</item><newline46mondego>    <item>Florida</item><newline46mondego>    <item>Los Angeles</item><newline46mondego>    <item>Virginia</item><newline46mondego>    <item>California</item><newline46mondego>    <item>Texas</item><newline46mondego>    <item>Hawaii</item><newline46mondego>    <item>Miami</item><newline46mondego>    <item>New Jersey</item><newline46mondego>    <item>Boston</item><newline46mondego>    <item>Philadelphia</item><newline46mondego>    <item>VaChina</item><newline46mondego> </string-array><newline46mondego>"
"284splitHere46","12003431splitHere46","public void onItemSelected(AdapterView<?> adapterView, View view,int position, long arg3) <newline46mondego>{<newline46mondego>    if(!spinner.getSelectedItem().toString().equalsIgnoreCase(<doubleQuotes46>Select Country<doubleQuotes46>))<newline46mondego>    {<newline46mondego>          selectedCountry.setText(spinner.getSelectedItem().toString());  <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"285splitHere46","12003531splitHere46","SELECT  rm.id , rm.routeCode , rm.startPlaceId , rm.endPlaceId , rm.active , rm.linkedRoute <newline46mondego>FROM com.abhibus.oprs.pojo.routes.RouteMaster rm  <newline46mondego>INNER JOIN rm.routeHalts rh WHERE  rh.placeId = :PlaceId  ORDER BY  rm.id  ASC<newline46mondego>"
"286splitHere46","12003531splitHere46","SELECT  rm.id , rm.routeCode , rm.startPlaceId , rm.endPlaceId , rm.active , rm.linkedRoute <newline46mondego>FROM com.abhibus.oprs.pojo.routes.RouteMaster rm, RouteHalts rh<newline46mondego>WHERE rm.id = rh.routeId AND rh.placeId = :PlaceId  ORDER BY  rm.id  ASC<newline46mondego>"
"287splitHere46","12003531splitHere46","session.createSQLQuery(queryText);<newline46mondego>"
"288splitHere46","12003531splitHere46","session.createQuery(queryText);<newline46mondego>"
"289splitHere46","12003531splitHere46","select rm from ...<newline46mondego>"
"290splitHere46","12003531splitHere46","List<RouteMaster>"
"291splitHere46","12003531splitHere46","List<Object[]>"
"292splitHere46","12003566splitHere46","MAP"
"293splitHere46","12003566splitHere46","public class Message {<newline46mondego><newline46mondego>  private static HashMap tagMap;<newline46mondego><newline46mondego>  static {<newline46mondego>     tagMap = new HashMap();<newline46mondego>     tagMap.put( 1, <doubleQuotes46>tag1Name<doubleQuotes46>);<newline46mondego>     tagMap.put( 2, <doubleQuotes46>tag2Name<doubleQuotes46>);<newline46mondego>     tagMap.put( 3, <doubleQuotes46>tag3Name<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public Message() {<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  public String getTagName( int tagNumber) {<newline46mondego>    return tagMap.get( tagNumber);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"294splitHere46","12003604splitHere46","new ImageIcon ( MWindow31Pic.class.getResource ( <doubleQuotes46>close.jpg<doubleQuotes46> ) )<newline46mondego>"
"295splitHere46","12003604splitHere46","new ImageIcon ( <doubleQuotes46>close.jpg<doubleQuotes46> )<newline46mondego>"
"296splitHere46","12003604splitHere46","new ImageIcon ( MWindow31Pic.class.getResource ( <doubleQuotes46>images/close.jpg<doubleQuotes46> ) )<newline46mondego>"
"297splitHere46","12003639splitHere46","boolean evaluate(String stringToEvaluate)"
"298splitHere46","12003639splitHere46","public class MyClass {<newline46mondego>    public boolean evaluate(String stringToEvaluate)<newline46mondego>    {<newline46mondego>    boolean exprvalue = true;<newline46mondego>    for (String string : stringToEvaluate.split(<doubleQuotes46>^<doubleQuotes46>))<newline46mondego>            {<newline46mondego>            exprvalue = exprvalue && evaluateLE(string);<newline46mondego>            }<newline46mondego>    return exprvalue;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean evaluateLE(String string) {<newline46mondego>        String[] values = string.split(<doubleQuotes46><=<doubleQuotes46>);<newline46mondego>        if (values.length==2)<newline46mondego>        {<newline46mondego>            return evaluateVal(values[0]) <= evaluateVal(values[1]); <newline46mondego>        }<newline46mondego><newline46mondego>        return evaluateOtherLogicalExpr(string);<newline46mondego>    }<newline46mondego><newline46mondego>    private float evaluateVal(String string) {<newline46mondego>        if (isExpresion(string)) return evaluateArthmeticalExpr(string);<newline46mondego>        if (isVariable(string)) return evaluateVariable(string);<newline46mondego><newline46mondego>        return Float.parseFloat(string);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"299splitHere46","12003749splitHere46","getActualMaximum()"
"300splitHere46","12003749splitHere46","Calendar aCalendar = Calendar.getInstance();<newline46mondego>// add -1 month to current month<newline46mondego>aCalendar.add(Calendar.MONTH, -1);<newline46mondego>// set DATE to 1, so first date of previous month<newline46mondego>aleaCalendar.setCalendar.DATE, 1);<newline46mondego><newline46mondego>Date firstDateOfPreviousMonth = aCalendar.getTime();<newline46mondego><newline46mondego>// set actual maximum date of previous month<newline46mondego>aleaCalendar.setCalendar.DATE,     aleaCalendar.getActualMaximum(Calendar.DAY_OF_MONTH));<newline46mondego>//read it<newline46mondego>Date lastDateOfPreviousMonth = aCalendar.getTime();<newline46mondego>"
"301splitHere46","12003942splitHere46","i"
"302splitHere46","12003942splitHere46","j"
"303splitHere46","12003942splitHere46","<doubleQuotes46>i<doubleQuotes46>"
"304splitHere46","12003942splitHere46","<doubleQuotes46>j<doubleQuotes46>"
"305splitHere46","12003995splitHere46","null,raheel,email"
"306splitHere46","12003995splitHere46","raheel,email,null"
"307splitHere46","12003995splitHere46",",null,"
"308splitHere46","12003995splitHere46","null"
"309splitHere46","12003995splitHere46","(?:^|,)null(?:,|$)<newline46mondego>"
"310splitHere46","12003995splitHere46","null,null,null"
"311splitHere46","12003995splitHere46","(?<=,|^)null(?=,|$)<newline46mondego>"
"312splitHere46","12004055splitHere46","BigDecimal(-99)"
"313splitHere46","12004055splitHere46","null"
"314splitHere46","12004055splitHere46","null"
"315splitHere46","12004055splitHere46","NO_REGION"
"316splitHere46","12004116splitHere46","source -> Override/Implement Methods/Generate Delegate Methods."
"317splitHere46","12004216splitHere46","ConcurrentHashMap"
"318splitHere46","12004216splitHere46","ConcurrentHashMap"
"319splitHere46","12004313splitHere46","if (lastN != getN()){        <newline46mondego>    lastN = getN();<newline46mondego>}<newline46mondego>repaint();<newline46mondego>"
"320splitHere46","12004313splitHere46","repaint"
"321splitHere46","12004313splitHere46","if"
"322splitHere46","12004313splitHere46","paint"
"323splitHere46","12004337splitHere46","Context context = null;"
"324splitHere46","12004337splitHere46","context = this;"
"325splitHere46","12004337splitHere46","TestAdapter t = new TestAdapter(context); t.setFlag();"
"326splitHere46","12004438splitHere46","ArrayList"
"327splitHere46","12004438splitHere46","ArrayList"
"328splitHere46","12004438splitHere46","LinkedList"
"329splitHere46","12004438splitHere46","LinkedList"
"330splitHere46","12004438splitHere46","ArrayList"
"331splitHere46","12004438splitHere46","ArrayList"
"332splitHere46","12004725splitHere46","/**<newline46mondego> * Module dependencies.<newline46mondego> */<newline46mondego><newline46mondego>var express = require('express')<newline46mondego>  , routes = require('./routes')<newline46mondego>  , util = require('util')<newline46mondego>  , fs = require('fs')<newline46mondego>  , exec = require('child_process').execFile<newline46mondego>  , http = require('http');<newline46mondego><newline46mondego>process.env.MAGICK_TMPDIR = __dirname + '/tmp'<newline46mondego><newline46mondego>var app = express();<newline46mondego><newline46mondego>app.configure(function(){<newline46mondego>  app.set('port', process.env.VCAP_APP_PORT || 3000);<newline46mondego>  app.set('views', __dirname + '/views');<newline46mondego>  app.set('view engine', 'ejs');<newline46mondego>  app.use(express.favicon());<newline46mondego>  app.use(express.logger('dev'));<newline46mondego>  app.use(express.bodyParser({uploadDir:__dirname + <doubleQuotes46>/uploads<doubleQuotes46>}));<newline46mondego>  app.use(express.methodOverride());<newline46mondego>  app.use(app.router);<newline46mondego>  app.use(express.static(__dirname + '/public'));<newline46mondego>});<newline46mondego><newline46mondego>app.configure('development', function(){<newline46mondego>  app.use(express.errorHandler());<newline46mondego>});<newline46mondego><newline46mondego>app.get('/', routes.index);<newline46mondego><newline46mondego>app.post('/convert', function(req, res) {<newline46mondego><newline46mondego>  var pdf_file = req.files.pdf.path;<newline46mondego>  var uploadsPath = __dirname + <doubleQuotes46>/uploads<doubleQuotes46><newline46mondego><newline46mondego>  var filename = pdf_file.split(<doubleQuotes46>/<doubleQuotes46>)[pdf_file.split('/').length - 1]<newline46mondego>  var out =  __dirname + '/public/images/' + filename + '.png';<newline46mondego><newline46mondego>  exec('convert', [pdf_file, '-append', out], function(err, stdout, stderr) {  <newline46mondego><newline46mondego>    res.redirect('/images/' + filename + '.png');<newline46mondego><newline46mondego>  });<newline46mondego><newline46mondego>});<newline46mondego><newline46mondego>http.createServer(app).listen(app.get('port'), function(){<newline46mondego>  console.log(<doubleQuotes46>Express server listening on port <doubleQuotes46> + app.get('port'));<newline46mondego>});<newline46mondego>"
"333splitHere46","12004725splitHere46","<!DOCTYPE html><newline46mondego><html><newline46mondego>  <head><newline46mondego>    <title><%= title %></title><newline46mondego>    <link rel='stylesheet' href='/stylesheets/style.css' /><newline46mondego>  </head><newline46mondego>  <body><newline46mondego>    <h1><%= title %></h1><newline46mondego>    <form action=<doubleQuotes46>/convert<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>      <label>PDF File</label><newline46mondego>      <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>pdf<doubleQuotes46> /><newline46mondego>      <input type=<doubleQuotes46>submit<doubleQuotes46> /><newline46mondego>    </form><newline46mondego>  </body><newline46mondego></html><newline46mondego>"
"334splitHere46","12004742splitHere46","GSON"
"335splitHere46","12004742splitHere46","public class ConvertJsonToObject {<newline46mondego><newline46mondego>    private static Gson gson = new GsonBuilder().create();<newline46mondego><newline46mondego>    public static final <T> T getFromJSON(String json, Class<T> clazz) {<newline46mondego>        return gson.fromJson(json, clazz);<newline46mondego>    }<newline46mondego><newline46mondego>    public static final <T> String toJSON(T clazz) {<newline46mondego>        return gson.toJson(clazz);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>String json; // your jsonString<newline46mondego>Map<String,Object> r = ConvertJsonToObject.getFromJSON(json,Map.class);<newline46mondego>String innerJson = ConvertJsonToObject.toJson(r.get(<doubleQuotes46>root<doubleQuotes46>));<newline46mondego>MapWrapper _r = ConvertJsonToObject.getFromJSON(innerJson,MapWrapper.class);<newline46mondego>"
"336splitHere46","12004861splitHere46","the prefix - C:\<newline46mondego>the path - dev\project\<newline46mondego>the full path - C:\dev\project\<newline46mondego>the name - file.txt<newline46mondego>the base name - file<newline46mondego>the extension - txt<newline46mondego>"
"337splitHere46","12005058splitHere46","str = str = <doubleQuotes46><doubleQuotes46>;"
"338splitHere46","12005058splitHere46","String str"
"339splitHere46","12005184splitHere46","stateFull.getFuture().get();"
"340splitHere46","12005184splitHere46","@Async"
"341splitHere46","12005265splitHere46","[|]"
"342splitHere46","12005265splitHere46","\[(([^\]]*\|[^\]]*))\]<newline46mondego>"
"343splitHere46","12005529splitHere46","int[]"
"344splitHere46","12005529splitHere46","a[i]"
"345splitHere46","12005529splitHere46","4000000"
"346splitHere46","12005529splitHere46","i"
"347splitHere46","12005529splitHere46","a[i] == 0"
"348splitHere46","12005529splitHere46","int i=1;<newline46mondego>while(a[i]<=4000000){<newline46mondego>    i++;<newline46mondego>    a[i] = a[i-1] + a[i-2];<newline46mondego>}<newline46mondego>"
"349splitHere46","12005572splitHere46","int n = (int) Long.parseLong(<doubleQuotes46>ffff8000<doubleQuotes46>, 16);<newline46mondego>"
"350splitHere46","12005644splitHere46","File root = Environment.getExternalStorageDirectory();<newline46mondego>"
"351splitHere46","12005669splitHere46","getServletContext().getRequestDispatcher(<doubleQuotes46>mypage.html<doubleQuotes46>).forward(request, response);<newline46mondego>"
"352splitHere46","12005798splitHere46","// the custom predicate<newline46mondego>public static class RelatedHighlightPredicate implements HighlightPredicate {<newline46mondego>    List<Integer> related;<newline46mondego><newline46mondego>    public RelatedHighlightPredicate(Integer... related) {<newline46mondego>        this.related = Arrays.asList(related);<newline46mondego><newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public boolean isHighlighted(Component renderer,<newline46mondego>            ComponentAdapter adapter) {<newline46mondego>        int modelIndex = adapter.convertRowIndexToModel(adapter.row);<newline46mondego>        return related.contains(modelIndex);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// its usage<newline46mondego>JXTable table = new JXTable(someModel);<newline46mondego>table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);<newline46mondego>final ColorHighlighter hl = new ColorHighlighter(HighlightPredicate.NEVER, <newline46mondego>        table.getSelectionBackground(), table.getSelectionForeground());<newline46mondego>table.addHighlighter(hl);<newline46mondego>ListSelectionListener l = new ListSelectionListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void valueChanged(ListSelectionEvent e) {<newline46mondego>        if (e.getValueIsAdjusting()) return;<newline46mondego>        invokeUpdate((ListSelectionModel) e.getSource());<newline46mondego>    }<newline46mondego><newline46mondego>    private void invokeUpdate(final ListSelectionModel source) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                int singleSelection = source.getMinSelectionIndex();<newline46mondego>                if (singleSelection >= 0) {<newline46mondego>                    int first = Math.max(0, singleSelection - 2);<newline46mondego>                    int last = singleSelection + 2;<newline46mondego>                    hl.setHighlightPredicate(new RelatedHighlightPredicate(first, last));<newline46mondego>                } else {<newline46mondego>                    hl.setHighlightPredicate(HighlightPredicate.NEVER);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>};<newline46mondego>table.getSelectionModel().addListSelectionListener(l);<newline46mondego>"
"353splitHere46","12005876splitHere46","CMS"
"354splitHere46","12005876splitHere46","attachTo(Product parent)"
"355splitHere46","12006195splitHere46","src/test/config/widget-test-config.xml"
"356splitHere46","12006195splitHere46","Run As -> Junit Test"
"357splitHere46","12006195splitHere46","Run -> Run Configurations"
"358splitHere46","12006195splitHere46","public class A {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test() {<newline46mondego>        InputStream stream = A.class.getResourceAsStream(<doubleQuotes46>/SomeTextFile.txt<doubleQuotes46>);<newline46mondego>        System.out.println(stream != null);<newline46mondego>        stream = Test.class.getClassLoader()<newline46mondego>            .getResourceAsStream(<doubleQuotes46>SomeTextFile.txt<doubleQuotes46>);<newline46mondego>        System.out.println(stream != null);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"359splitHere46","12006195splitHere46","A"
"360splitHere46","12006195splitHere46","Run As -> Junit Test"
"361splitHere46","12006195splitHere46","true"
"362splitHere46","12006278splitHere46","List<Pupil>"
"363splitHere46","12006278splitHere46","List<Pupil>"
"364splitHere46","12006278splitHere46","ArrayList<Pupil>"
"365splitHere46","12006278splitHere46","paintComponent(...)"
"366splitHere46","12006278splitHere46","mousePressed(...)"
"367splitHere46","12006287splitHere46","Message message = new MimeMessage(session ); // error<newline46mondego>"
"368splitHere46","12006287splitHere46","Session mailSession = Session.getDefaultInstance(props,<newline46mondego>                                new javax.mail.Authenticator() {<newline46mondego>                                    protected PasswordAuthentication <newline46mondego>                                          getPasswordAuthentication() {<newline46mondego>                                        return new PasswordAuthentication<newline46mondego>                                          (<doubleQuotes46>prakash.d2222<doubleQuotes46>,<doubleQuotes46>**************<doubleQuotes46>);<newline46mondego>                                    }<newline46mondego>                                });<newline46mondego>"
"369splitHere46","12006287splitHere46","Message message = new MimeMessage(mailSession );<newline46mondego>"
"370splitHere46","12006715splitHere46","classFilesFolder"
"371splitHere46","12006715splitHere46","/home/user"
"372splitHere46","12006715splitHere46","/home/user/com/something/My.class"
"373splitHere46","12006715splitHere46","com.something.My"
"374splitHere46","12006715splitHere46","classFilesFolder"
"375splitHere46","12006715splitHere46",".class"
"376splitHere46","12006800splitHere46","public static List<Topic> getTopicsByForum(Long forumId) {<newline46mondego>    return find.where().eq(<doubleQuotes46>forum.id<doubleQuotes46>, forumId).findList();<newline46mondego>}<newline46mondego>"
"377splitHere46","12006810splitHere46","SELECT  rm.id , rm.routeCode , rm.startPlaceId , rm.endPlaceId , rm.active, rm.linkedRoute <newline46mondego>FROM RouteMaster rm, RouteHalts rh<newline46mondego>WHERE rm.routeId = rh.routeId AND rh.placeId = :PlaceId  <newline46mondego>ORDER BY  rm.id  A<newline46mondego>"
"378splitHere46","12006906splitHere46","jsonString =[...];<newline46mondego>Gson gson = new Gson();<newline46mondego>PhotoDTO[] photos = gson.fromJson(jsonString, PhotoDTO[].class);<newline46mondego><newline46mondego>for(PhotoDTO photo : photos){<newline46mondego>   System.out.println(<doubleQuotes46>photo -> <doubleQuotes46> + photo.getPhoto());<newline46mondego>}<newline46mondego>"
"379splitHere46","12006906splitHere46","class PhotoDTO<newline46mondego>{<newline46mondego>  String url;<newline46mondego>  String photo;<newline46mondego>  String description;<newline46mondego>  // setters & getters methods<newline46mondego>}<newline46mondego>"
"380splitHere46","12006969splitHere46","long startTime=   System.currentTimeMillis();<newline46mondego>do {<newline46mondego><newline46mondego>......<newline46mondego><newline46mondego>     long currTime=  System.currentTimeMillis();<newline46mondego>     long elapsedtime = currTime - startTime;<newline46mondego>     if(elapsedtime > 20000)<newline46mondego>      {<newline46mondego>      break;<newline46mondego>      }<newline46mondego>}<newline46mondego>"
"381splitHere46","12007285splitHere46","digulla@home"
"382splitHere46","12007322splitHere46","PathMatchingResourcePatternResolver"
"383splitHere46","12007322splitHere46","public class SpringResourceLoader {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();<newline46mondego><newline46mondego>        // Ant-style path matching<newline46mondego>        Resource[] resources = resolver.getResources(<doubleQuotes46>/myconfig/**<doubleQuotes46>);<newline46mondego><newline46mondego>        for (Resource resource : resources) {<newline46mondego>            InputStream is = resource.getInputStream();<newline46mondego>            ...<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"384splitHere46","12007322splitHere46","Resource"
"385splitHere46","12007322splitHere46","<dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-core</artifactId><newline46mondego>    <version>3.1.2.RELEASE</version><newline46mondego></dependency><newline46mondego>"
"386splitHere46","12007458splitHere46","java.util.List"
"387splitHere46","12007458splitHere46","JTable"
"388splitHere46","12007458splitHere46","XxxTableModel"
"389splitHere46","12007458splitHere46","Vector or Object[]"
"390splitHere46","12007458splitHere46","XxxTableModel"
"391splitHere46","12007458splitHere46","CSV File"
"392splitHere46","12007458splitHere46","java.util.List"
"393splitHere46","12007458splitHere46","JTable"
"394splitHere46","12007458splitHere46","XxxTableModel"
"395splitHere46","12007471splitHere46","@Inject SessionBean sessionBean;<newline46mondego>"
"396splitHere46","12007515splitHere46","http://my-remote-server/example?gwt.codesvr=127.0.0.1:9997<newline46mondego>"
"397splitHere46","12007749splitHere46","String s = <doubleQuotes46>((blue) AND (yellow) OR (pink))<doubleQuotes46>;<newline46mondego>s = s.replaceAll(<doubleQuotes46>\\(|\\)<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>String[] words = s.split(<doubleQuotes46>AND|OR|NOT<doubleQuotes46>);<newline46mondego>System.out.println(Arrays.toString(words));<newline46mondego>"
"398splitHere46","12007749splitHere46","[blue ,  yellow ,  pink]<newline46mondego>"
"399splitHere46","12007850splitHere46","List"
"400splitHere46","12007850splitHere46","List<MyEntity> b = new ArrayList<MyEntity>(a);<newline46mondego>"
"401splitHere46","12007850splitHere46","a"
"402splitHere46","12007850splitHere46","b"
"403splitHere46","12008083splitHere46","public abstract class CMS<C extends CMS<?>> {<newline46mondego>    public abstract void attach(C childNode);<newline46mondego>}<newline46mondego>"
"404splitHere46","12008083splitHere46","public class Product extends CMS<PO> {<newline46mondego>    private List<PO> lpo = new ArrayList<>();<newline46mondego><newline46mondego>    public List<PO> getLpo() {<newline46mondego>        return lpo;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLpo(List<PO> lpo) {<newline46mondego>        this.lpo = lpo;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void attach(PO childNode) {<newline46mondego>        getLpo().add(childNode);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"405splitHere46","12008083splitHere46","public class PO extends CMS<POL> {<newline46mondego>    private List<POL> lpol = new ArrayList<>();<newline46mondego><newline46mondego>    public List<POL> getLpo() {<newline46mondego>        return lpol;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLpo(List<POL> lpol) {<newline46mondego>        this.lpol = lpol;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void attach(POL childNode) {<newline46mondego>        getLpo().add(childNode);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"406splitHere46","12008083splitHere46","public class POL extends CMS<CMS<?>> {<newline46mondego>    @Override<newline46mondego>    public void attach(CMS<?> child) {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>Not supported yet.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"407splitHere46","12008083splitHere46","public class Tester {<newline46mondego>      public static void main(String[] args) {<newline46mondego>            Product p = new Product();<newline46mondego>            PO po = new PO();<newline46mondego><newline46mondego>            List<PO> pos = new ArrayList<PO>();<newline46mondego>            List<POL> pols = new ArrayList<POL>();<newline46mondego><newline46mondego>            attachChildToParent(pos, p);<newline46mondego>            attachChildToParent(pols, po);<newline46mondego>        }<newline46mondego><newline46mondego>    private static <C extends CMS<?>> void attachChildToParent(List<C> childNodes, CMS<C> parent) {<newline46mondego>        for (C childNode : childNodes) {<newline46mondego>            parent.attach(childNode);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"408splitHere46","12008095splitHere46","crop"
"409splitHere46","12008095splitHere46","crop"
"410splitHere46","12008166splitHere46","Collection.contains(object)"
"411splitHere46","12008166splitHere46","object.equals(anotherObject)"
"412splitHere46","12008166splitHere46","Object.equals()"
"413splitHere46","12008166splitHere46","true"
"414splitHere46","12008166splitHere46","deserialisedObject.equals(originalObject) == true"
"415splitHere46","12008166splitHere46",".equals()"
"416splitHere46","12008166splitHere46",".hashCode()"
"417splitHere46","12008206splitHere46","RequestDispatcher.ERROR_EXCEPTION"
"418splitHere46","12008206splitHere46","#{requestScope['javax.servlet.error.exception']}<newline46mondego>"
"419splitHere46","12008206splitHere46","Exception"
"420splitHere46","12008206splitHere46","public static String printStackTrace(Throwable exception) {<newline46mondego>    StringWriter stringWriter = new StringWriter();<newline46mondego>    exception.printStackTrace(new PrintWriter(stringWriter, true));<newline46mondego>    return stringWriter.toString();<newline46mondego>}<newline46mondego>"
"421splitHere46","12008206splitHere46","<pre>#{my:printStackTrace(requestScope['javax.servlet.error.exception'])}</pre><newline46mondego>"
"422splitHere46","12008206splitHere46","FullAjaxExceptionHandler"
"423splitHere46","12008245splitHere46","String t = <doubleQuotes46><html><font color=#ffffdd>Hello</font> world!<doubleQuotes46>;<newline46mondego>"
"424splitHere46","12008258splitHere46","private int hash; // Default to 0<newline46mondego><newline46mondego>public int hashCode() {<newline46mondego>    int h = hash;<newline46mondego>    if (h == 0 && count > 0) {<newline46mondego>        int off = offset;<newline46mondego>        char val[] = value;<newline46mondego>        int len = count;<newline46mondego><newline46mondego>        for (int i = 0; i < len; i++) {<newline46mondego>            h = 31*h + val[off++];<newline46mondego>        }<newline46mondego>        hash = h;<newline46mondego>    }<newline46mondego>    return h;<newline46mondego>}<newline46mondego>"
"425splitHere46","12008258splitHere46","public int hashCode() {<newline46mondego>    if (hash == 0 && count > 0) { //(1)<newline46mondego>        int h = hash;<newline46mondego>        int off = offset;<newline46mondego>        char val[] = value;<newline46mondego>        int len = count;<newline46mondego><newline46mondego>        for (int i = 0; i < len; i++) {<newline46mondego>            h = 31*h + val[off++];<newline46mondego>        }<newline46mondego>        hash = h;<newline46mondego>    }<newline46mondego>    return hash; //(2)<newline46mondego>}<newline46mondego>"
"426splitHere46","12008262splitHere46","private Animation mInFromRight;<newline46mondego>private Animation mInFromLeft;<newline46mondego><newline46mondego>public Animation inFromRightAnimation() {<newline46mondego>    return mInFromRight;<newline46mondego>}<newline46mondego><newline46mondego>public Animation outToLeftAnimation() {<newline46mondego>    return mInFromLeft;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>protected void onCreate ( Bundle savedInstanceState ){<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    mInFromRight = new TranslateAnimation(<newline46mondego>        Animation.RELATIVE_TO_PARENT, +1.0f,<newline46mondego>        Animation.RELATIVE_TO_PARENT, 0.0f,<newline46mondego>        Animation.RELATIVE_TO_PARENT, 0.0f,<newline46mondego>        Animation.RELATIVE_TO_PARENT, 0.0f);<newline46mondego>    mInFromRight.setDuration(500);<newline46mondego><newline46mondego>    mInFromLeft = new TranslateAnimation(<newline46mondego>        Animation.RELATIVE_TO_PARENT, 0.0f,<newline46mondego>        Animation.RELATIVE_TO_PARENT, -1.0f,<newline46mondego>        Animation.RELATIVE_TO_PARENT, 0.0f,<newline46mondego>        Animation.RELATIVE_TO_PARENT, 0.0f);<newline46mondego>    mInFromLeft.setDuration(500);<newline46mondego><newline46mondego>    //...other oncreate code<newline46mondego>}<newline46mondego>"
"427splitHere46","12008316splitHere46","public class Foo {<newline46mondego>   private List<FooEnum> enumValues;<newline46mondego><newline46mondego>   @Override<newline46mondego>   public int hashCode() {<newline46mondego>       final int prime = 31;<newline46mondego>       int result = 1;<newline46mondego>       result = prime * result<newline46mondego>               + ((enumValues == null) ? 0 : enumValues.hashCode());<newline46mondego>       return result;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public boolean equals(Object obj) {<newline46mondego>       if (this == obj)<newline46mondego>           return true;<newline46mondego>       if (obj == null)<newline46mondego>           return false;<newline46mondego>       if (getClass() != obj.getClass())<newline46mondego>           return false;<newline46mondego>       Foo other = (Foo) obj;<newline46mondego>       if (enumValues == null) {<newline46mondego>           if (other.enumValues != null)<newline46mondego>               return false;<newline46mondego>       }<newline46mondego>       else if (!enumValues.equals(other.enumValues))<newline46mondego>           return false;<newline46mondego>       return true;<newline46mondego>   }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"428splitHere46","12008322splitHere46","ConcurrentMap"
"429splitHere46","12008322splitHere46","Hashtable t = new Hashtable();<newline46mondego><newline46mondego>synchronized(t){<newline46mondego>   if(!t.contains(object1) && !t.contains(object2)){<newline46mondego>      t.put(object3,object3);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"430splitHere46","12008322splitHere46","Hashtable"
"431splitHere46","12008322splitHere46","synchronizedMap"
"432splitHere46","12008322splitHere46","synchronizedMap"
"433splitHere46","12008322splitHere46","Hashtable"
"434splitHere46","12008330splitHere46","Person"
"435splitHere46","12008330splitHere46","Main"
"436splitHere46","12008330splitHere46","la"
"437splitHere46","12008330splitHere46","Person"
"438splitHere46","12008330splitHere46","public static void main(String args[]) {<newline46mondego>    String first = JOptionPane.showInputDialog(null,<doubleQuotes46>Enter your first name<doubleQuotes46>);<newline46mondego>    // You should be checking the return result, but any way...<newline46mondego>    Person person = new Person();<newline46mondego>    person.name = first;<newline46mondego><newline46mondego>    La la = new La(person);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class La {<newline46mondego>    public La(Person person) {<newline46mondego>        System.out.println(person.name);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"439splitHere46","12008347splitHere46","@ExceptionHandler(Exception.class)<newline46mondego>public Map<String, String> handleExceptions(Exception e) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"440splitHere46","12008347splitHere46","@ResponseBody"
"441splitHere46","12008474splitHere46","DiscreteDomain<Character> domain = new DiscreteDomain<Character>(){<newline46mondego>  // Implement DiscreteDomain for Character type<newline46mondego>};<newline46mondego><newline46mondego>Range<Character> lower = Ranges.closed('a','z');<newline46mondego>Range<Character> upper = Ranges.closed('A','Z');<newline46mondego><newline46mondego>HashSet<Character> set = new HashSet<Character>();<newline46mondego>set.addAll(lower.asSet(domain));<newline46mondego>set.addAll(upper.asSet(domain));<newline46mondego>"
"442splitHere46","12008478splitHere46","JdbcTemplate"
"443splitHere46","12008478splitHere46","JdbcTemplate"
"444splitHere46","12008478splitHere46","AutoClosable"
"445splitHere46","12008478splitHere46","try (<newline46mondego>    Connection conn = getConnectionSomehow();<newline46mondego>    Statement statement = getStatementFromConnSomehow(conn);<newline46mondego>) {<newline46mondego>    //use connection<newline46mondego>    //use statement<newline46mondego>} catch(SomeException ex) {<newline46mondego>    //do something with exception<newline46mondego>}//hey, check it out, conn and statement will be closed automatically! :)<newline46mondego>"
"446splitHere46","12008508splitHere46","String[]  array1 = {<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>};<newline46mondego>Integer[] array2 = { 1 ,  2 ,  3 };<newline46mondego><newline46mondego>create.select()<newline46mondego>      .from(TABLE_NAME)<newline46mondego>      .where(FIELD1.in(array1))<newline46mondego>      .and(FIELD2.in(array2))<newline46mondego>      .fetch();<newline46mondego>"
"447splitHere46","12008693splitHere46","Thread"
"448splitHere46","12008693splitHere46","EDT"
"449splitHere46","12008693splitHere46","SwingWorker"
"450splitHere46","12008745splitHere46","<doubleQuotes46><doubleQuotes46>"
"451splitHere46","12008778splitHere46","ResourceBundles"
"452splitHere46","12008809splitHere46","Image scaled = image.getScaledInstance(getWidth() - 1, getHeight() - 1, Image.SCALE_SMOOTH);<newline46mondego>"
"453splitHere46","12008859splitHere46","long"
"454splitHere46","12008859splitHere46","data type"
"455splitHere46","12008859splitHere46","int"
"456splitHere46","12008859splitHere46","y"
"457splitHere46","12008859splitHere46","long"
"458splitHere46","12009069splitHere46","public boolean accept(File dir, String name) {<newline46mondego>    if (name == null) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    return new File(dir, name).isDirectory() || name.toLowerCase().endsWith(<doubleQuotes46>.zip<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"459splitHere46","12009069splitHere46","public void showFiles(File[] files) {<newline46mondego>    for (File file : files) {<newline46mondego>        if (file.isDirectory()) {<newline46mondego>            System.out.println(<doubleQuotes46>Directory: <doubleQuotes46> + file.getName());<newline46mondego>            showFiles(file.listFiles(zipFilenameFilter));<newline46mondego>        } else {<newline46mondego>            System.out.println(<doubleQuotes46>File: <doubleQuotes46> + file.getName());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"460splitHere46","12009265splitHere46","paint"
"461splitHere46","12009265splitHere46","import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>public class melco extends JFrame{<newline46mondego><newline46mondego>  String str;<newline46mondego>  int x = 100, y = 100;<newline46mondego><newline46mondego>  public melco(String title){<newline46mondego>    super(title);<newline46mondego>  }<newline46mondego><newline46mondego>  void print(String s){<newline46mondego>    str = s;<newline46mondego>    repaint();<newline46mondego>  }<newline46mondego><newline46mondego>  public void paint(Graphics g){<newline46mondego>    super.paint(g);<newline46mondego>    if (str != null)<newline46mondego>      g.drawString(str, x, y);<newline46mondego>  }<newline46mondego>  public static void main(String[] args){<newline46mondego>    final melco frame = new melco(<doubleQuotes46>Salesman Resources<doubleQuotes46>);<newline46mondego>    frame.setVisible(true);<newline46mondego>    frame.setSize(1000,800);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>    JMenuBar menubar = new JMenuBar();<newline46mondego>    frame.setJMenuBar(menubar);<newline46mondego><newline46mondego>    JMenu file = new JMenu(<doubleQuotes46>File<doubleQuotes46>);<newline46mondego>    menubar.add(file);<newline46mondego>    JMenuItem exit = new JMenuItem(<doubleQuotes46>Exit<doubleQuotes46>);<newline46mondego>    file.add(exit);<newline46mondego><newline46mondego>    JMenu orders = new JMenu(<doubleQuotes46>Orders<doubleQuotes46>);<newline46mondego>    menubar.add(orders);<newline46mondego>    JMenuItem bookedorders = new JMenuItem(<doubleQuotes46>Booked Orders<doubleQuotes46>);<newline46mondego>    orders.add(bookedorders);<newline46mondego>    JMenuItem backorders = new JMenuItem(<doubleQuotes46>BackOrders<doubleQuotes46>);<newline46mondego>    orders.add(backorders);<newline46mondego><newline46mondego>    JMenu customers = new JMenu(<doubleQuotes46>Customers<doubleQuotes46>);<newline46mondego>    menubar.add(customers);<newline46mondego>    JMenuItem customersales = new JMenuItem(<doubleQuotes46>Customer Sales<doubleQuotes46>);<newline46mondego>    customers.add(customersales);<newline46mondego>    JMenuItem customeritems = new JMenuItem(<doubleQuotes46>Customer Items<doubleQuotes46>);<newline46mondego>    customers.add(customeritems);<newline46mondego>    JMenuItem customerprices = new JMenuItem(<doubleQuotes46>Customer Prices<doubleQuotes46>);<newline46mondego>    customers.add(customerprices);<newline46mondego>    JMenuItem customerlistings = new JMenuItem(<doubleQuotes46>Customer Listings<doubleQuotes46>);<newline46mondego>    customers.add(customerlistings);<newline46mondego><newline46mondego>    JMenu inv = new JMenu(<doubleQuotes46>INV<doubleQuotes46>);<newline46mondego>    menubar.add(inv);<newline46mondego>    JMenuItem surplusinv = new JMenuItem(<doubleQuotes46>Surplus Inv<doubleQuotes46>);<newline46mondego>    inv.add(surplusinv);<newline46mondego>    JMenuItem stockinv = new JMenuItem(<doubleQuotes46>Stock Inv<doubleQuotes46>);<newline46mondego>    inv.add(stockinv);<newline46mondego><newline46mondego>    JMenu search = new JMenu(<doubleQuotes46>Searh<doubleQuotes46>);<newline46mondego>    menubar.add(search);<newline46mondego>    JMenuItem itemsearch = new JMenuItem(<doubleQuotes46>Item Search<doubleQuotes46>);<newline46mondego>    search.add(itemsearch);<newline46mondego>    JMenuItem customersearch = new JMenuItem(<doubleQuotes46>Customer Search<doubleQuotes46>);<newline46mondego>    search.add(customersearch);<newline46mondego><newline46mondego>    JMenu menulostsales = new JMenu(<doubleQuotes46>Lost Sales<doubleQuotes46>);<newline46mondego>    menubar.add(menulostsales);<newline46mondego>    JMenuItem lostsales = new JMenuItem(<doubleQuotes46>Lost Sales<doubleQuotes46>);<newline46mondego>    menulostsales.add(lostsales);<newline46mondego><newline46mondego><newline46mondego>    JMenu menumarginadvisor = new JMenu(<doubleQuotes46>Margin Advisor<doubleQuotes46>);<newline46mondego>    menubar.add(menumarginadvisor);<newline46mondego>    JMenuItem marginadvisor = new JMenuItem(<doubleQuotes46>Margin Advisor<doubleQuotes46>);<newline46mondego>    menumarginadvisor.add(marginadvisor);<newline46mondego><newline46mondego><newline46mondego>    JMenu menumakeandhold = new JMenu(<doubleQuotes46>Make and Hold<doubleQuotes46>);<newline46mondego>    menubar.add(menumakeandhold);<newline46mondego>    JMenuItem makeandhold = new JMenuItem(<doubleQuotes46>Make and Hold<doubleQuotes46>);<newline46mondego><newline46mondego>    menumakeandhold.add(makeandhold);<newline46mondego><newline46mondego>    makeandhold.addActionListener(<newline46mondego>      new ActionListener(){<newline46mondego>        public void actionPerformed(ActionEvent e)<newline46mondego>        {<newline46mondego>          System.out.println(<doubleQuotes46>Make and Hold is pressed<doubleQuotes46>);<newline46mondego>          frame.print(<doubleQuotes46>Make and Hold is pressed<doubleQuotes46>);<newline46mondego>          System.out.println(<doubleQuotes46>Hello World<doubleQuotes46>);<newline46mondego>          frame.print(<doubleQuotes46>Hello World<doubleQuotes46>);<newline46mondego>// This is Make and Hold Area<newline46mondego><newline46mondego>        }<newline46mondego>      }<newline46mondego>    );<newline46mondego><newline46mondego>    class exitaction implements ActionListener {<newline46mondego>      public void actionPerformed (ActionEvent e){<newline46mondego>        System.exit(0);<newline46mondego>      }<newline46mondego>    }<newline46mondego>    exit.addActionListener(new exitaction());<newline46mondego><newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"462splitHere46","12009363splitHere46","List<String>"
"463splitHere46","12009363splitHere46","List<String> ipList = (List<String>)Util.inCache(List.class, title);<newline46mondego>"
"464splitHere46","12009447splitHere46","public abstract class MyAbstractClass {<newline46mondego>  @Override public final int hashCode() { return hashCodeImpl(); }<newline46mondego>  @Override public final boolean equals(Object o) { return equalsImpl(o); }<newline46mondego><newline46mondego>  protected abstract int hashCodeImpl();<newline46mondego>  protected abstract boolean equalsImpl(Object o);<newline46mondego>}<newline46mondego>"
"465splitHere46","12009449splitHere46","collection.containsAll( otherCollection )"
"466splitHere46","12009449splitHere46","otherCollection.containsAll( collection )"
"467splitHere46","12009449splitHere46","a"
"468splitHere46","12009449splitHere46","a"
"469splitHere46","12009450splitHere46","Create Type age is table of number  <newline46mondego>Create Type weight is table of number  <newline46mondego>Create Type name is table of varchar(50) <newline46mondego>"
"470splitHere46","12009450splitHere46","ArrayDescriptor ageCollection = ArrayDescriptor.createDescriptor(<doubleQuotes46>AGE<doubleQuotes46>, conn);   <newline46mondego>ArrayDescriptor weightCollection = ArrayDescriptor.createDescriptor(<doubleQuotes46>WEIGHT<doubleQuotes46>, conn); <newline46mondego>ArrayDescriptor nameCollection = ArrayDescriptor.createDescriptor(<doubleQuotes46>NAME<doubleQuotes46>, conn);   <newline46mondego>int[] ageArray = new int[50000];  <newline46mondego>int[] weightArray = new int[50000];  <newline46mondego>String[] nameArray = new String[50000];  <newline46mondego>for(int i = 0; i <50000;i++)  <newline46mondego>{  <newline46mondego>    ageArray[i]=i;  <newline46mondego>    weightArray[i]=i;<newline46mondego>    nameArray[i] = <doubleQuotes46>Test<doubleQuotes46>;<newline46mondego>}  <newline46mondego>ARRAY oraAge = new ARRAY(ageCollection,conn,ageArray);  <newline46mondego>ARRAY oraWeight = new ARRAY(weightCollection,conn,weightArray);  <newline46mondego>ARRAY oraName = new ARRAY(nameCollection,conn,nameArray);    <newline46mondego><newline46mondego>CallableStatement statement = conn.prepareCall(<doubleQuotes46>{CALL insert_new_cat(?,?,?)}<doubleQuotes46>;   <newline46mondego><newline46mondego>statement.setObject(1,oraAge);<newline46mondego>statement.setObject(2,oraWeight);  <newline46mondego>statement.setObject(3,oraName);  <newline46mondego>statement.execute();  <newline46mondego>conn.commit();  <newline46mondego>"
"471splitHere46","12009450splitHere46","CREATE OR REPLACE PROCEDURE  INSERT_NEW_CAT (age age, weight weight, name name)  <newline46mondego>AS<newline46mondego>BEGIN  <newline46mondego>    forall i in 1..age.last  <newline46mondego>        insert into cats(id,age,weight,name)  <newline46mondego>        vales(cat_sequence.nextval,age(i),weight(i),name(i);  <newline46mondego>END INSERT_NEW_CAT;<newline46mondego>"
"472splitHere46","12009535splitHere46","Date"
"473splitHere46","12009535splitHere46","TO_CHAR"
"474splitHere46","12009535splitHere46","String"
"475splitHere46","12009535splitHere46","Date"
"476splitHere46","12009535splitHere46","DateTimeFormatter"
"477splitHere46","12009548splitHere46","<fileset>"
"478splitHere46","12009548splitHere46","<jar>"
"479splitHere46","12009548splitHere46","<target name=<doubleQuotes46>uberjar<doubleQuotes46> depends=<doubleQuotes46>compile<doubleQuotes46>><newline46mondego>  <jar jarfile=<doubleQuotes46>${babelnet.jar}<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>${bin.dir}<doubleQuotes46>><newline46mondego>      <include name=<doubleQuotes46>**/*.class<doubleQuotes46>/><newline46mondego>    </fileset><newline46mondego>    <zipgroupfileset dir=<doubleQuotes46>lib<doubleQuotes46> includes=<doubleQuotes46>*.jar<doubleQuotes46>/><newline46mondego>    <fileset dir=<doubleQuotes46>${basedir}<doubleQuotes46>><newline46mondego>      <include name=<doubleQuotes46>config/*.properties<doubleQuotes46>/><newline46mondego>    </fileset><newline46mondego>  </jar><newline46mondego></target><newline46mondego>"
"480splitHere46","12009595splitHere46","FSDirectory"
"481splitHere46","12009595splitHere46","IndexReader"
"482splitHere46","12009595splitHere46","IndexReader"
"483splitHere46","12009595splitHere46","IndexSearcher"
"484splitHere46","12009595splitHere46","NRTManager"
"485splitHere46","12009659splitHere46","if(null != x)<newline46mondego>{<newline46mondego>//...<newline46mondego>} else {<newline46mondego>  throw new IllegalArgumentException( <doubleQuotes46>x cannot be empty<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"486splitHere46","12009855splitHere46","for (i = 0, i < strings.count, i++) {<newline46mondego>    if (i % itemsPerColumn == 0) {<newline46mondego>        if (i != 0) print <doubleQuotes46></div><doubleQuotes46> <newline46mondego>        print <doubleQuotes46><div class='container'><doubleQuotes46><newline46mondego>    }<newline46mondego>    print <doubleQuotes46><div class='foo'><doubleQuotes46> + string[i] + <doubleQuotes46></div><doubleQuotes46><newline46mondego>}<newline46mondego>"
"487splitHere46","12009855splitHere46","<c:forEach>"
"488splitHere46","12010002splitHere46","public synchronized void reStart()<newline46mondego>{<newline46mondego>// here the method is executed twice as I described in step 7<newline46mondego>// after notify() it actually jumps back to stopTimer=false again and then exits the function. Then outside of this object I catch RuntimeException <newline46mondego>    stopTimer=false;<newline46mondego>    synchronized(timer) {<newline46mondego>        timer.notify();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public synchronized void resume()<newline46mondego>{<newline46mondego>    pauseTimer=false;<newline46mondego>    synchronized(timer) {<newline46mondego>        timer.notify();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"489splitHere46","12010076splitHere46","for (int i = 0; i < sbParagraph.length(); i++) {<newline46mondego>    char c = defParagraph.toLowerCase().charAt(i);<newline46mondego>    boolean isVowel = false;<newline46mondego>    for (int j = 0; j < vowels.length; j++) {<newline46mondego>        if (c == vowels[j]) {<newline46mondego>            isVowel = true;<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    if (isVowel) {<newline46mondego>        vowelCount++;<newline46mondego>    } else {<newline46mondego>        vowParagraph.append(c);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"490splitHere46","12010206splitHere46","component.getBaseline(...)<newline46mondego>"
"491splitHere46","12010361splitHere46","import org.example.sudoku.R; <newline46mondego>"
"492splitHere46","12010377splitHere46","login"
"493splitHere46","12010377splitHere46","uid"
"494splitHere46","12010377splitHere46","uid"
"495splitHere46","12010377splitHere46","KEY_UID"
"496splitHere46","12010377splitHere46","onCreate"
"497splitHere46","12010377splitHere46","onUpgrade"
"498splitHere46","12010377splitHere46","private static final int DATABASE_VERSION = 2;<newline46mondego>"
"499splitHere46","12010392splitHere46","newJob"
"500splitHere46","12010392splitHere46","Class<? extends Job>"
"501splitHere46","12010392splitHere46","Class<?>"
"502splitHere46","12010392splitHere46","newJob((Class<? extends Job>)jobClass)<newline46mondego>"
"503splitHere46","12010516splitHere46","44.66"
"504splitHere46","12010516splitHere46","BigDecimal"
"505splitHere46","12010516splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    BigDecimal a = new BigDecimal(<doubleQuotes46>46.66<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>Roundup: <doubleQuotes46> + roundUp(a,2) + <doubleQuotes46>\nRound Down: <doubleQuotes46> + roundDown(a,2));<newline46mondego>}<newline46mondego><newline46mondego>public static BigDecimal roundUp(BigDecimal a, int scale)<newline46mondego>{<newline46mondego>    return a.setScale(scale, RoundingMode.UP);<newline46mondego>}<newline46mondego><newline46mondego>public static BigDecimal roundDown(BigDecimal a, int scale)<newline46mondego>{<newline46mondego>    return a.setScale(scale, RoundingMode.DOWN);<newline46mondego>}<newline46mondego>"
"506splitHere46","12010643splitHere46","moveAttachment"
"507splitHere46","12010643splitHere46","moveAttachment"
"508splitHere46","12010643splitHere46","moveAttachment"
"509splitHere46","12010683splitHere46","public String getDayOfWeek(int day, int firstDay) {<newline46mondego>   String[] weekdays;<newline46mondego>   if (firstDay == 0)<newline46mondego>      weekdays = new String[]{<doubleQuotes46>Mon<doubleQuotes46>, <doubleQuotes46>Tue<doubleQuotes46>, <doubleQuotes46>Wed<doubleQuotes46>, <doubleQuotes46>Thu<doubleQuotes46>, <doubleQuotes46>Fri<doubleQuotes46>, <doubleQuotes46>Sat<doubleQuotes46>, <doubleQuotes46>Sun<doubleQuotes46>};<newline46mondego>   else<newline46mondego>      weekdays = new String[]{<doubleQuotes46>Sun<doubleQuotes46>, <doubleQuotes46>Mon<doubleQuotes46>, <doubleQuotes46>Tue<doubleQuotes46>, <doubleQuotes46>Wed<doubleQuotes46>, <doubleQuotes46>Thu<doubleQuotes46>, <doubleQuotes46>Fri<doubleQuotes46>, <doubleQuotes46>Sat<doubleQuotes46>};<newline46mondego>   return weekdays[day];<newline46mondego>}<newline46mondego>"
"510splitHere46","12010683splitHere46","weekdays[position - 1]"
"511splitHere46","12010811splitHere46","HTTP"
"512splitHere46","12010811splitHere46","TCP"
"513splitHere46","12010811splitHere46","HTTP1.1"
"514splitHere46","12011001splitHere46","0,0"
"515splitHere46","12011139splitHere46","autoCommit"
"516splitHere46","12011139splitHere46","false"
"517splitHere46","12011139splitHere46","Connection connection = getDBConnection(); //Depends on how you get your connection<newline46mondego>boolean autoCommit = connection.getAutoCommit();<newline46mondego>try{<newline46mondego>    //Set autoCommit to false. You will manage commiting your transaction<newline46mondego>    connection.setAutoCommit(false); <newline46mondego>    //Perform your sql operation<newline46mondego><newline46mondego>    if(doCommit){ //all your ops have successfully executed, you can use a flag for this<newline46mondego>        connection.commit();<newline46mondego>    }<newline46mondego>}catch(Exception exe){<newline46mondego>    //Rollback<newline46mondego>}finally{<newline46mondego>    connection.setAutoCommit(autoCommit); //Set autoCommit to its initial value<newline46mondego>}<newline46mondego>"
"518splitHere46","12011335splitHere46","dlmread"
"519splitHere46","12011335splitHere46","' '"
"520splitHere46","12011335splitHere46","data = dlmread(inFile, '\t');<newline46mondego>"
"521splitHere46","12011335splitHere46","dlmread"
"522splitHere46","12011335splitHere46","1 2 3 4<newline46mondego>5<newline46mondego>"
"523splitHere46","12011335splitHere46","dlmread"
"524splitHere46","12011335splitHere46","1 2 3 4<newline46mondego>5 0 0 0<newline46mondego>"
"525splitHere46","12011335splitHere46","dlmread"
"526splitHere46","12011335splitHere46","range"
"527splitHere46","12011335splitHere46","dlmread"
"528splitHere46","12011335splitHere46","dlmread"
"529splitHere46","12011335splitHere46","r = [0 4]; %load the first 5 rows<newline46mondego>maxC = 10; % load up to 10 columns<newline46mondego>data = dlmread(inFile, '\t', [r(1), 0, r(2), maxX]);<newline46mondego>"
"530splitHere46","12011335splitHere46","% open the file<newline46mondego>fid = fopen(fileName); <newline46mondego>% load each line as a single string<newline46mondego>tmp = textscan(fid, '%s', 'delimiter', '\n'); <newline46mondego>% textscan wraps its results in a cell, remove that wrapping<newline46mondego>rawText = tmp{1}; <newline46mondego>nLines = numel(rawText);<newline46mondego><newline46mondego>%create a cell array to store the processed string<newline46mondego>data = cell(nLines, 1);<newline46mondego>for i = 1:nLines<newline46mondego>  %scan a line of text returning a vector of doubles<newline46mondego>  tmp = textscan(rawText{i}, '%f');<newline46mondego>  data{i} = tmp{1}; <newline46mondego>end<newline46mondego>"
"531splitHere46","12011465splitHere46","CompletionService<Image> service = new ExecutorCompletionService<Image>(<newline46mondego>  Executors.newFixedThreadPool(nThreads));<newline46mondego>for (Image image : images) {<newline46mondego>  service.submit(new ImageRunnable(image), image);<newline46mondego>}<newline46mondego>try {<newline46mondego>  for (int i = 0; i < images.size(); i++) {<newline46mondego>    service.take();<newline46mondego>  }<newline46mondego>} catch (InterruptedException e) {<newline46mondego>  // someone wants this thread to cancel peacefully; either exit the thread<newline46mondego>  // or at a bare minimum do this to pass the interruption up<newline46mondego>  Thread.currentThread().interrupt();<newline46mondego>}<newline46mondego>"
"532splitHere46","12011465splitHere46","URL target = // whatever;<newline46mondego>URLConnection connection = target.openConnection();<newline46mondego>connection.setReadTimeout(timeoutInMilliseconds);<newline46mondego>InputStream stream;<newline46mondego>try {<newline46mondego>  stream = connection.getInputStream();<newline46mondego>  return ImageIO.read(stream);<newline46mondego>} finally {<newline46mondego>  if (stream != null) { stream.close(); } <newline46mondego>}<newline46mondego>"
"533splitHere46","12011589splitHere46","ImageIcon whatever = new ImageIcon(ImageIO.read(getClass().getResource(<doubleQuotes46>path to image<doubleQuotes46>)));<newline46mondego>"
"534splitHere46","12011589splitHere46","try {<newline46mondego>...<newline46mondego>}catch(Exception e){<newline46mondego>PrintWriter writer = new PrintWriter(<doubleQuotes46>trace.txt<doubleQuotes46>);<newline46mondego>e.printStackTrace(writer);<newline46mondego>writer.close();}<newline46mondego>"
"535splitHere46","12011694splitHere46","@XmlPath"
"536splitHere46","12011694splitHere46","@XmlPath(<doubleQuotes46>LEVEL_1/SUBLEVEL_1/YET_ANOTHER_SUBLEVEL/STATUS/text()<doubleQuotes46>)<newline46mondego>private String statusCode;<newline46mondego>"
"537splitHere46","12011758splitHere46","public access level"
"538splitHere46","12011758splitHere46","import a.A;"
"539splitHere46","12011758splitHere46","new a.A().f1()"
"540splitHere46","12011856splitHere46","Let M = the largest X[i].<newline46mondego><newline46mondego>For each i:<newline46mondego>    Subtract M from X[i].<newline46mondego><newline46mondego>Let S = the sum of exp(X[i]) for all i.<newline46mondego><newline46mondego>For each i:<newline46mondego>    The probability for this i is exp(X[i]) / S.<newline46mondego>"
"541splitHere46","12011886splitHere46","long bitmask = 1;<newline46mondego>for(long bit = 1; bit < index; bit++) {<newline46mondego>    bitmask = (bitmask << 1) | 1;<newline46mondego>}<newline46mondego>"
"542splitHere46","12011886splitHere46","long number = (((oldNumber >> index) << index) << insertionLength) | (insertion << index) | (oldNumber && bitmask);<newline46mondego>"
"543splitHere46","12011886splitHere46","((oldNumber >> index) << index)"
"544splitHere46","12011886splitHere46","(insertion << index)"
"545splitHere46","12011886splitHere46","oldNumber && bitmask"
"546splitHere46","12011975splitHere46","hashCode"
"547splitHere46","12011975splitHere46","equals"
"548splitHere46","12011975splitHere46","foo"
"549splitHere46","12011975splitHere46","A"
"550splitHere46","12011975splitHere46","B"
"551splitHere46","12011975splitHere46","getBar(A,myMap);"
"552splitHere46","12011975splitHere46","5.0"
"553splitHere46","12011975splitHere46","B"
"554splitHere46","12011975splitHere46","B"
"555splitHere46","12011975splitHere46","A"
"556splitHere46","12011975splitHere46","put"
"557splitHere46","12011975splitHere46","Double getBar(MyType type,  Map<MyType,Double> map){  <newline46mondego>    if(map.containsKey(type)){   <newline46mondego>         for(MyType k:map.keySet()){  <newline46mondego>              if(k.equals(type)){  <newline46mondego>                 return k.bar;  <newline46mondego>              }<newline46mondego>         }<newline46mondego>    }<newline46mondego>    return -1.0;<newline46mondego>}<newline46mondego>"
"558splitHere46","12011975splitHere46","Map"
"559splitHere46","12011975splitHere46","class Holder{  <newline46mondego>    MyType type;  <newline46mondego>    Double value;  <newline46mondego>}<newline46mondego>"
"560splitHere46","12011975splitHere46","HashMap<MyType,Holder>"
"561splitHere46","12011975splitHere46","Holder"
"562splitHere46","12011975splitHere46","type"
"563splitHere46","12011975splitHere46","myMap.put(B,5.0);"
"564splitHere46","12011975splitHere46","myMap.put(B,new Holder(B,5.0));"
"565splitHere46","12011975splitHere46","Double getBar(MyType type,  Map<MyType,Holder> map){   <newline46mondego>     return map.get(type).type.bar;    <newline46mondego>}    <newline46mondego>"
"566splitHere46","12011975splitHere46","type"
"567splitHere46","12011975splitHere46","type"
"568splitHere46","12012042splitHere46","firstElement"
"569splitHere46","12012042splitHere46","public class IteratorMissingFirst<E> implements Iterator<E>{<newline46mondego><newline46mondego>private Iterator<E> underlyingIterator;<newline46mondego>private E firstElement;<newline46mondego>private boolean firstElOffered;<newline46mondego><newline46mondego>public IteratorMissingFirst(E firstElement, Iterator<E> it){<newline46mondego>    //initialize all the instance vars<newline46mondego>}<newline46mondego><newline46mondego>public boolean hasNext(){<newline46mondego>    if(!firstElOffered && firstElement != null){<newline46mondego>            return true;<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        return underlyingIterator.hasNext();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public E next(){<newline46mondego>    if(!firstElOffered){<newline46mondego>        firstElOffered = true;<newline46mondego>        return firstElement;<newline46mondego>    }<newline46mondego>    else return underlyingIterator.next();<newline46mondego>}<newline46mondego><newline46mondego>public void remove(){<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"570splitHere46","12012065splitHere46","JFrame"
"571splitHere46","12012065splitHere46","paintComponent"
"572splitHere46","12012065splitHere46","paintComponents"
"573splitHere46","12012065splitHere46","super.paintComponent(g);"
"574splitHere46","12012065splitHere46","null"
"575splitHere46","12012065splitHere46","this"
"576splitHere46","12012065splitHere46","JComponent"
"577splitHere46","12012065splitHere46","ImageObserver"
"578splitHere46","12012150splitHere46","double"
"579splitHere46","12012150splitHere46","double"
"580splitHere46","12012150splitHere46","double"
"581splitHere46","12012150splitHere46","expm1"
"582splitHere46","12012150splitHere46","exp"
"583splitHere46","12012150splitHere46","double"
"584splitHere46","12012150splitHere46","1"
"585splitHere46","12012150splitHere46","Math.exp"
"586splitHere46","12012150splitHere46","double"
"587splitHere46","12012150splitHere46","Math.exp"
"588splitHere46","12012204splitHere46","window_instance.setVisible(false);//hides window<newline46mondego>window_instance.setVisible(true);//shows window<newline46mondego>"
"589splitHere46","12012204splitHere46","Timer"
"590splitHere46","12012204splitHere46","TimerTask"
"591splitHere46","12012204splitHere46","delay"
"592splitHere46","12012204splitHere46","TimerTask"
"593splitHere46","12012204splitHere46","run()"
"594splitHere46","12012204splitHere46","Timer"
"595splitHere46","12012235splitHere46","PropertyChangeSupport"
"596splitHere46","12012235splitHere46","Client"
"597splitHere46","12012235splitHere46","final PropertyChangeSupport pcs = new PropertyChangeSupport(this);<newline46mondego><newline46mondego>    public void addPropertyChangeListener(PropertyChangeListener listener) {<newline46mondego>             this.pcs.addPropertyChangeListener(listener);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>      boolean connected;<newline46mondego><newline46mondego> public boolean isConnected() {<newline46mondego>     return connected;<newline46mondego> }<newline46mondego><newline46mondego> public void setConnected(boolean connected) {<newline46mondego>     boolean oldValue = this.connected;<newline46mondego>     this.value = connected;<newline46mondego>     this.pcs.firePropertyChange(<doubleQuotes46>connected<doubleQuotes46>, oldValue, newValue);<newline46mondego> }<newline46mondego><newline46mondego> .....<newline46mondego><newline46mondego><newline46mondego>     public Client(String hostname, int port) throws UnknownHostException, IOException    {<newline46mondego>    connection = new Socket(hostname, port);<newline46mondego>    setConnected(connection != null && !connection.isClosed());<newline46mondego>}<newline46mondego>"
"598splitHere46","12012235splitHere46","public class ClientGui extends javax.swing.JFrame implements PropertyChangeListener<newline46mondego>    .....<newline46mondego>    propertyChanged(..){<newline46mondego>      tfUserInput.setEnabled(true);<newline46mondego>    }<newline46mondego><newline46mondego>     private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {<newline46mondego>        try {<newline46mondego>            client = new Client(tfHostname.getText(), Integer.parseInt(tfPort.getText()));<newline46mondego>            client.addPropertyChangeListener(this);<newline46mondego>            client.start();<newline46mondego>        .....<newline46mondego>"
"599splitHere46","12012239splitHere46","project-controller (will have action classes for Struts 2 in this case)<newline46mondego> - com.pack.UserAction.java<newline46mondego>"
"600splitHere46","12012239splitHere46","project-web (views, jsps, properties files and set-up files)<newline46mondego> - src/main/resources/com/pack/UserAction-validation.xml <newline46mondego>"
"601splitHere46","12012383splitHere46","String[] AA = {<doubleQuotes46>DDDD<doubleQuotes46>, <doubleQuotes46>HHHH<doubleQuotes46>, <doubleQuotes46>ZZZZ<doubleQuotes46>};<newline46mondego>    String[] BB = {<doubleQuotes46>DDDD<doubleQuotes46>, <doubleQuotes46>HHHH<doubleQuotes46>, <doubleQuotes46>ZZZZ<doubleQuotes46>};<newline46mondego>    String[] CC = {<doubleQuotes46>DDDD<doubleQuotes46>, <doubleQuotes46>HHHH<doubleQuotes46>, <doubleQuotes46>ZZZZ<doubleQuotes46>};<newline46mondego>    String[] DD = {<doubleQuotes46>DDDD<doubleQuotes46>, <doubleQuotes46>HHHH<doubleQuotes46>, <doubleQuotes46>ZZZZ<doubleQuotes46>};<newline46mondego><newline46mondego><newline46mondego>    String[][] result = new String[4][AA.length * BB.length * CC.length * DD.length];<newline46mondego><newline46mondego>    int row = 0;<newline46mondego>    for (int i = 0; i < AA.length; i++) {<newline46mondego><newline46mondego>        for (int j = 0; j < BB.length; j++) {<newline46mondego><newline46mondego>            for (int k = 0; k < CC.length; k++) {<newline46mondego><newline46mondego>                for (int L = 0; L < DD.length; L++) {<newline46mondego><newline46mondego>                    result[3][row] = DD[L];<newline46mondego>                    result[2][row] = CC[k];<newline46mondego>                    result[1][row] = BB[j];<newline46mondego>                    result[0][row] = AA[i];<newline46mondego>                    System.out.println(result[0][row] + <doubleQuotes46> <doubleQuotes46> +result[1][row] + <doubleQuotes46> <doubleQuotes46> +result[2][row] + <doubleQuotes46> <doubleQuotes46> +result[3][row]);<newline46mondego>                    row++;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"602splitHere46","12012383splitHere46","DDDD DDDD DDDD DDDD<newline46mondego>DDDD DDDD DDDD HHHH<newline46mondego>DDDD DDDD DDDD ZZZZ<newline46mondego>DDDD DDDD HHHH DDDD<newline46mondego>DDDD DDDD HHHH HHHH<newline46mondego>DDDD DDDD HHHH ZZZZ<newline46mondego>DDDD DDDD ZZZZ DDDD<newline46mondego>...<newline46mondego>"
"603splitHere46","12012405splitHere46","System.nanoTime()"
"604splitHere46","12012405splitHere46","System.class"
"605splitHere46","12012405splitHere46","testx.class"
"606splitHere46","12012405splitHere46","System.out.println"
"607splitHere46","12012722splitHere46","outStream = new ByteArrayOutputStream();<newline46mondego>"
"608splitHere46","12012871splitHere46","def map = [:]<newline46mondego>def startElementCount = 0<newline46mondego>def inputStream = new File(inputFile).newInputStream()<newline46mondego>try {<newline46mondego>    XMLStreamReader reader = <newline46mondego>        XMLInputFactory.newInstance().createXMLStreamReader(inputStream)<newline46mondego>    for (int event; (event = reader.next()) != XMLStreamConstants.END_DOCUMENT;) {<newline46mondego>        if (event == XMLStreamConstants.START_ELEMENT) {<newline46mondego>            if (startElementCount > 0) return map<newline46mondego>            startElementCount += 1<newline46mondego>            map.rootElementName = reader.localName<newline46mondego>            for (int i = 0; i < reader.attributeCount; i++) {<newline46mondego>                if (reader.getAttributeName(i).toString() == 'VersionAttribute') {<newline46mondego>                    map.versionIdentifier = reader.getAttributeValue(i).toString()<newline46mondego>                    return map<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }   <newline46mondego>} finally {<newline46mondego>    inputStream.close()<newline46mondego>}<newline46mondego>"
"609splitHere46","12012874splitHere46","String relPath = new File(<doubleQuotes46>.<doubleQuotes46>).toURI().relativize(pdf.toURI()).getPath();<newline46mondego>System.out.println(relPath);<newline46mondego>"
"610splitHere46","12013170splitHere46","InitializeSecurityContext"
"611splitHere46","12013190splitHere46","Optional.<EventManager>absent()<newline46mondego>"
"612splitHere46","12013289splitHere46","Panel:<newline46mondego>+---------+--------------------------------+----------------+<newline46mondego>|         |             B                  |                |<newline46mondego>|         |                                |                |<newline46mondego>|         +--------------------------------+                |<newline46mondego>|         |                                |                |<newline46mondego>|   A     |             T                  |      D         |<newline46mondego>|         |                                |                |<newline46mondego>|         |                                |                |<newline46mondego>|         +--------------------------------+                |<newline46mondego>|         |             C                  |                |<newline46mondego>|         |                                |                |<newline46mondego>+---------+--------------------------------+----------------+<newline46mondego>"
"613splitHere46","12013289splitHere46","myPanel.addStyleName(<doubleQuotes46>transparent<doubleQuotes46>)"
"614splitHere46","12013289splitHere46","div.transparent {<newline46mondego>  background: none;<newline46mondego>}<newline46mondego>"
"615splitHere46","12013302splitHere46","TVcountDown.setText(<doubleQuotes46><doubleQuotes46> + (millisUntilFinished / 1000)); <newline46mondego>"
"616splitHere46","12013302splitHere46","Resources res = getResources();<newline46mondego>TVcountDown.setBackgroundColor(res.getcolor(R.color.solid_red));<newline46mondego>TVcountDown.setTextColor(res.getcolor(R.color.white));  <newline46mondego>"
"617splitHere46","12013461splitHere46","addHandler()"
"618splitHere46","12013461splitHere46","getHandlers()"
"619splitHere46","12013461splitHere46","removeHandler()"
"620splitHere46","12013461splitHere46","logger.setUseParentHandlers(false);<newline46mondego>"
"621splitHere46","12013465splitHere46","^"
"622splitHere46","12013465splitHere46","[^\\x00-\\x7F]"
"623splitHere46","12013465splitHere46","import java.io.UnsupportedEncodingException;<newline46mondego>import java.util.regex.Matcher;<newline46mondego>import java.util.regex.Pattern;<newline46mondego><newline46mondego>public class UTF8 {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String utf8tweet = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        try {<newline46mondego>            byte[] utf8Bytes = <doubleQuotes46>#Hello twitter ï?Š How are you?<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego><newline46mondego>            utf8tweet = new String(utf8Bytes, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego><newline46mondego>        } catch (UnsupportedEncodingException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        Pattern unicodeOutliers = Pattern.compile(<doubleQuotes46>[^\\x00-\\x7F]<doubleQuotes46>,<newline46mondego>                Pattern.UNICODE_CASE | Pattern.CANON_EQ<newline46mondego>                        | Pattern.CASE_INSENSITIVE);<newline46mondego>        Matcher unicodeOutlierMatcher = unicodeOutliers.matcher(utf8tweet);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Before: <doubleQuotes46> + utf8tweet);<newline46mondego>        utf8tweet = unicodeOutlierMatcher.replaceAll(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>After: <doubleQuotes46> + utf8tweet);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"624splitHere46","12013465splitHere46","Before: #Hello twitter ï?Š How are you?<newline46mondego>After: #Hello twitter   How are you?<newline46mondego>"
"625splitHere46","12013465splitHere46","\u"
"626splitHere46","12013465splitHere46","[^\\u0000-\\u007F]"
"627splitHere46","12013465splitHere46","\u00FF"
"628splitHere46","12013465splitHere46","[^\\u0000-\\u00FF]"
"629splitHere46","12013465splitHere46","[^\\x00-\\xFF]"
"630splitHere46","12013465splitHere46","Before: #Hello twitter ï?Š How are you? Ã¡ Ã© Ã­ Ã³ Ãº<newline46mondego>After: #Hello twitter   How are you? Ã¡ Ã© Ã­ Ã³ Ãº<newline46mondego>"
"631splitHere46","12013522splitHere46","char[]"
"632splitHere46","12013522splitHere46","String"
"633splitHere46","12013645splitHere46","@XmlRootElement(name = <doubleQuotes46>itemBeans<doubleQuotes46>)<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class ItemBeans <newline46mondego>{<newline46mondego>    @XmlElementWrapper(name = <doubleQuotes46>items<doubleQuotes46>)<newline46mondego>    @XmlElement(name = <doubleQuotes46>item<doubleQuotes46>)<newline46mondego>    private List<ItemBean> beans;<newline46mondego><newline46mondego>    public ItemBeans(List<ItemBean> beans) {<newline46mondego>        this.beans = beans;<newline46mondego>    }<newline46mondego><newline46mondego>    public ItemBeans() {<newline46mondego>    }<newline46mondego>}  <newline46mondego>"
"634splitHere46","12013645splitHere46","@GET<newline46mondego>@Path(<doubleQuotes46>list<doubleQuotes46>)<newline46mondego>public ItemBeans getItems() throws WebApplicationException;<newline46mondego><newline46mondego>}  <newline46mondego>"
"635splitHere46","12013645splitHere46","<itemBeans><newline46mondego>    <items><newline46mondego>        <item><newline46mondego>            <name>first</name><newline46mondego>            <description>second</description><newline46mondego>        </item><newline46mondego>        <item><newline46mondego>            <name>first1</name><newline46mondego>            <description>second1</description><newline46mondego>        </item><newline46mondego>    </items><newline46mondego></itemBeans><newline46mondego>"
"636splitHere46","12013646splitHere46","Collections2"
"637splitHere46","12013910splitHere46","#include <stdio.h><newline46mondego>#include <stdlib.h><newline46mondego>#include <stdbool.h><newline46mondego>#include <string.h><newline46mondego><newline46mondego>int main() {<newline46mondego><newline46mondego>    char message[50] = {0};<newline46mondego><newline46mondego>    while ( true ) {<newline46mondego><newline46mondego>        gets( message );<newline46mondego>        printf( <doubleQuotes46>string \<doubleQuotes46>%s\<doubleQuotes46> received...\n<doubleQuotes46>, message );<newline46mondego><newline46mondego>        // forces the streams to flush<newline46mondego>        fflush( stdout );<newline46mondego>        fflush( stderr ); // the java program will not write in the error stream, so this line (for this example) is irrelevant<newline46mondego><newline46mondego>        // if the java program send a <doubleQuotes46>end<doubleQuotes46> command (message here) it will break the while<newline46mondego>        if ( !strcmp( <doubleQuotes46>end<doubleQuotes46>, message ) ) {<newline46mondego>            break;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    return 0;<newline46mondego><newline46mondego>}<newline46mondego>"
"638splitHere46","12013910splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class MessageReceiver {<newline46mondego><newline46mondego>    public static void main( String[] args ) {<newline46mondego><newline46mondego>        Scanner scan = new Scanner( System.in );<newline46mondego><newline46mondego>        while ( true ) {<newline46mondego><newline46mondego>            String message = scan.nextLine();<newline46mondego>            System.out.printf( <doubleQuotes46>string \<doubleQuotes46>%s\<doubleQuotes46> received...\n<doubleQuotes46>, message );<newline46mondego><newline46mondego>            System.out.flush();<newline46mondego>            System.err.flush();<newline46mondego><newline46mondego>            if ( message.equals( <doubleQuotes46>end<doubleQuotes46> ) ) {<newline46mondego>                break;<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"639splitHere46","12013910splitHere46","import java.io.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class Sender {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args the command line arguments<newline46mondego>     */<newline46mondego>    public static void main( String[] args ) {<newline46mondego>        new Sender().execute();<newline46mondego>    }<newline46mondego><newline46mondego>    public void execute() {<newline46mondego><newline46mondego>        try {<newline46mondego><newline46mondego>            // executes the command (the C executable)<newline46mondego>            Process process = Runtime.getRuntime().exec( <doubleQuotes46>MessageReceiver.exe<doubleQuotes46> );<newline46mondego><newline46mondego>            // or, executes the MessageReceiver class<newline46mondego>            //Process process = Runtime.getRuntime().exec( <doubleQuotes46>java MessageReceiver<doubleQuotes46> );<newline46mondego><newline46mondego>            // create the stream gobblers, one for the input stream and one for the<newline46mondego>            // error stream. these gobblers will consume these streams.<newline46mondego>            StreamGobbler sgInput = new StreamGobbler(<newline46mondego>                    process.getInputStream(), <doubleQuotes46>input<doubleQuotes46> );<newline46mondego>            StreamGobbler sgError = new StreamGobbler(<newline46mondego>                    process.getErrorStream(), <doubleQuotes46>error<doubleQuotes46> );<newline46mondego><newline46mondego>            // creates a thread for each stream gobbler and start them<newline46mondego>            new Thread( sgInput ).start();<newline46mondego>            new Thread( sgError ).start();<newline46mondego><newline46mondego>            // creates a PrintWriter using the process output stream<newline46mondego>            PrintWriter writer = new PrintWriter( process.getOutputStream() );<newline46mondego><newline46mondego>            // preparing to read user input<newline46mondego>            Scanner scan = new Scanner( System.in );<newline46mondego><newline46mondego>            while ( true ) {<newline46mondego><newline46mondego>                System.out.println( <doubleQuotes46>Send a command: <doubleQuotes46> );<newline46mondego>                String command = scan.nextLine();<newline46mondego><newline46mondego>                // sends the command to the process<newline46mondego>                // simulating an user input (note the \n)<newline46mondego>                writer.write( command );<newline46mondego>                writer.write( <doubleQuotes46>\n<doubleQuotes46> );<newline46mondego>                writer.flush();<newline46mondego><newline46mondego>                // if the command is end, finalizes this app too<newline46mondego>                if ( command.equals( <doubleQuotes46>end<doubleQuotes46> ) ) {<newline46mondego>                    break;<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        } catch ( IOException ioe ) {<newline46mondego>            ioe.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Threads to consume the process streams.<newline46mondego>     * Based in the implementation presented here:<newline46mondego>     * http://www.javaworld.com/javaworld/jw-12-2000/jw-1229-traps.html?page=1<newline46mondego>     *<newline46mondego>     * @author David Buzatto<newline46mondego>     */<newline46mondego>    private class StreamGobbler implements Runnable {<newline46mondego><newline46mondego>        private InputStream is;<newline46mondego>        private String type;<newline46mondego>        private FileWriter fw;<newline46mondego><newline46mondego>        public StreamGobbler( InputStream is, String type ) {<newline46mondego>            this.is = is;<newline46mondego>            this.type = type;<newline46mondego>        }<newline46mondego><newline46mondego>        public StreamGobbler( InputStream is, String type, File file )<newline46mondego>                throws IOException {<newline46mondego>            this.is = is;<newline46mondego>            this.type = type;<newline46mondego>            this.fw = new FileWriter( file );<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            try {<newline46mondego>                InputStreamReader isr = new InputStreamReader( is );<newline46mondego>                BufferedReader br = new BufferedReader( isr );<newline46mondego>                String line = null;<newline46mondego>                while ( ( line = br.readLine() ) != null ) {<newline46mondego>                    if ( fw != null ) {<newline46mondego>                        fw.write( line + <doubleQuotes46>\n<doubleQuotes46> );<newline46mondego>                    } else {<newline46mondego>                        System.out.println( type + <doubleQuotes46>><doubleQuotes46> + line );<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                if ( fw != null ) {<newline46mondego>                    fw.close();<newline46mondego>                }<newline46mondego>            } catch ( IOException ioe ) {<newline46mondego>                ioe.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"640splitHere46","12013965splitHere46",".metadata"
"641splitHere46","12013965splitHere46",".metadata\.plugins\org.eclipse.e4.workbench\workbench.xmi"
"642splitHere46","12013965splitHere46","-clean"
"643splitHere46","12013965splitHere46","org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel"
"644splitHere46","12013965splitHere46",".metadata\.plugins\org.eclipse.e4.workbench\workbench.xmi"
"645splitHere46","12013965splitHere46","Main"
"646splitHere46","12013965splitHere46","workbench.xmi"
"647splitHere46","12013965splitHere46","Plug-in Development Environment Guide > Reference > Launchers > Eclipse Application Launcher"
"648splitHere46","12013965splitHere46","Main Tab"
"649splitHere46","12013965splitHere46","Variables..."
"650splitHere46","12013965splitHere46","Variable Description"
"651splitHere46","12014052splitHere46","docs"
"652splitHere46","12014052splitHere46","workdir\appdb\skin\pim"
"653splitHere46","12014052splitHere46","contacts"
"654splitHere46","12014052splitHere46","events"
"655splitHere46","12014052splitHere46","todo"
"656splitHere46","12014052splitHere46","---<newline46mondego>Windows:   workdir\appdb\skin\pim\contacts\Contacts<newline46mondego>Linux:     workdir/appdb/skin/pim/contacts/Contacts<newline46mondego>---<newline46mondego>"
"657splitHere46","12014052splitHere46",".vcs"
"658splitHere46","12014052splitHere46",".vcf"
"659splitHere46","12014087splitHere46","String pivotalUrl = <doubleQuotes46>http://www.pivotaltracker.com/services/v3/projects/<doubleQuotes46>+projectID+<doubleQuotes46>/stories<doubleQuotes46><newline46mondego><newline46mondego>String body = <doubleQuotes46><story><story_type>feature</story_type><name>Story name</name><requested_by>James Kirk</requested_by></story><doubleQuotes46><newline46mondego><newline46mondego>URLFetchService fetchService = URLFetchServiceFactory.getURLFetchService();<newline46mondego>HTTPRequest request =  new HTTPRequest(pivotalUrl, HTTPMethod.POST, FetchOptions.Builder.withDeadline(30));<newline46mondego>request.addHeader(new HTTPHeader(<doubleQuotes46>X-TrackerToken<doubleQuotes46>,<doubleQuotes46>putTokenHere<doubleQuotes46>));<newline46mondego>request.addHeader(new HTTPHeader(<doubleQuotes46>Content-type<doubleQuotes46>,<doubleQuotes46>application/xml<doubleQuotes46>));<newline46mondego><newline46mondego>HTTPResponse response = fetchService.fetch(request);<newline46mondego>if (response.getResponseCode() != 200) {<newline46mondego>    // something went wrong<newline46mondego>}<newline46mondego>"
"660splitHere46","12014169splitHere46","request.getHeader(<doubleQuotes46>referer<doubleQuotes46>)"
"661splitHere46","12014169splitHere46","http://server[:port]/"
"662splitHere46","12014169splitHere46","/NameOfApp/http:/localhost:8084/NameOfApp/test.jsp<newline46mondego>"
"663splitHere46","12014169splitHere46","test.jsp<newline46mondego>"
"664splitHere46","12014169splitHere46","http://localhost:8084/RequestDispatcher/test.jsp<newline46mondego>"
"665splitHere46","12014169splitHere46","http://localhost:8084/RequestDispatcher/NewServlet<newline46mondego>"
"666splitHere46","12014169splitHere46","http://localhost:8084/RequestDispatcher/NewServlet<newline46mondego>"
"667splitHere46","12014169splitHere46","response.sendRedirect(request.getHeader(<doubleQuotes46>referer<doubleQuotes46>));<newline46mondego>"
"668splitHere46","12014169splitHere46","request.getRequestDispatcher(request.getParameter(<doubleQuotes46>viewid<doubleQuotes46>)).forward(request, response);<newline46mondego>"
"669splitHere46","12014169splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>viewid<doubleQuotes46> value=<doubleQuotes46>test.jsp<doubleQuotes46>><newline46mondego>"
"670splitHere46","12014174splitHere46","public final class Hello extends HttpServlet {<newline46mondego><newline46mondego>    public void doGet(HttpServletRequest request,<newline46mondego>                      HttpServletResponse response)<newline46mondego>      throws IOException, ServletException {<newline46mondego><newline46mondego>        response.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>        PrintWriter writer = response.getWriter();        <newline46mondego>        writer.println(<doubleQuotes46>URL is <doubleQuotes46> + request.getRequestURL() + <doubleQuotes46> port is <doubleQuotes46> request.getServerPort());<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"671splitHere46","12014177splitHere46","public static String toMorse(String english) { ... }<newline46mondego>"
"672splitHere46","12014177splitHere46","//Translate<newline46mondego>for ( int j = 0, t = 0, n = 1; j < phrase.length(); j++) {<newline46mondego>    if ( phrase.substring(t, n ).equals ( english[j] ) ) {<newline46mondego>        translation[t] = morse[j];<newline46mondego>        t++;<newline46mondego>        n++;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"673splitHere46","12014177splitHere46","//Translate<newline46mondego>for ( int j = 0, t=0; j < phrase.length(); j++) {<newline46mondego>    if ( phrase.substring(t, (t+1) ).equals ( english[j] ) ) {<newline46mondego>        translation[t] = morse[j];<newline46mondego>        t++;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"674splitHere46","12014177splitHere46","j"
"675splitHere46","12014177splitHere46","t"
"676splitHere46","12014177splitHere46","j"
"677splitHere46","12014177splitHere46","j+1"
"678splitHere46","12014177splitHere46","replace()"
"679splitHere46","12014342splitHere46","session.invalidate()"
"680splitHere46","12014342splitHere46","Cookies.removeCookie(...)"
"681splitHere46","12014355splitHere46","junit.extensions.jfcunit.JFCTestCase"
"682splitHere46","12014355splitHere46","pauseAWT"
"683splitHere46","12014355splitHere46","releaseAWT()"
"684splitHere46","12014355splitHere46","awtSleep"
"685splitHere46","12014430splitHere46","NullPointerException"
"686splitHere46","12014430splitHere46","Integer i"
"687splitHere46","12014430splitHere46","int i"
"688splitHere46","12014430splitHere46","Integer"
"689splitHere46","12014430splitHere46","null"
"690splitHere46","12014430splitHere46","int"
"691splitHere46","12014535splitHere46","h.add(Box.createHorizontalGlue());<newline46mondego>"
"692splitHere46","12014535splitHere46","h.add(someOtherPanel);"
"693splitHere46","12014535splitHere46","h.add(someOtherPanel, BorderLayout.WEST);"
"694splitHere46","12014591splitHere46","abstract"
"695splitHere46","12014591splitHere46","public interface FooInterface {<newline46mondego><newline46mondego>    void foo();<newline46mondego><newline46mondego>    void bar();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public abstract class AbstractFoo {<newline46mondego><newline46mondego>    public abstract void foo();<newline46mondego><newline46mondego>    public void bar() {<newline46mondego>        System.out.println(<doubleQuotes46>hello world<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"696splitHere46","12014652splitHere46","Set"
"697splitHere46","12014652splitHere46","contains()"
"698splitHere46","12014652splitHere46","Set.iterator()"
"699splitHere46","12014652splitHere46","Map<MyObject,MyObject>"
"700splitHere46","12014652splitHere46",".equals()"
"701splitHere46","12014652splitHere46","HashSet"
"702splitHere46","12014652splitHere46","equals()"
"703splitHere46","12014652splitHere46","MyObject findIfPresent(MyObject source, HashSet<MyObject> set)<newline46mondego>{<newline46mondego>   if (set.contains(source)) {<newline46mondego>      for (MyObject obj : set) {<newline46mondego>        if (obj.equals(source)) <newline46mondego>          return obj;<newline46mondego>      } <newline46mondego>   }<newline46mondego><newline46mondego>  return null;<newline46mondego>}<newline46mondego>"
"704splitHere46","12014759splitHere46","MINECRAFT_PORT"
"705splitHere46","12014787splitHere46","public class TestPane extends JPanel {<newline46mondego><newline46mondego>    public TestPane() {<newline46mondego><newline46mondego>        setBorder(new LineBorder(Color.RED));<newline46mondego>        // This is for demonstration purposes only<newline46mondego>        // One should always rely on the layout manager<newline46mondego>        // to define this value<newline46mondego>        // Thank kleopatra <newline46mondego>        setPreferredSize(new Dimension(1000, 1000));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego><newline46mondego>        super.paintComponent(g);<newline46mondego><newline46mondego>        FontMetrics fm = g.getFontMetrics();<newline46mondego><newline46mondego>        Dimension size = getPreferredSize();<newline46mondego>        String text = <doubleQuotes46>Pref: <doubleQuotes46> + size.width + <doubleQuotes46>x<doubleQuotes46> + size.height;<newline46mondego>        g.drawString(text, 0, fm.getAscent());<newline46mondego><newline46mondego>        size = getSize();<newline46mondego>        text = <doubleQuotes46>Size: <doubleQuotes46> + size.width + <doubleQuotes46>x<doubleQuotes46> + size.height;<newline46mondego>        g.drawString(text, 0, fm.getHeight() + fm.getAscent());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"706splitHere46","12014787splitHere46","public class TestFrame {<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego><newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        JScrollPane scroll = new JScrollPane(new TestPane());<newline46mondego><newline46mondego>        frame.add(scroll);<newline46mondego><newline46mondego>        frame.setSize(500, 500);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"707splitHere46","12014853splitHere46","//parse json data<newline46mondego>try{<newline46mondego>    JSONArray jArray = new JSONArray(result);<newline46mondego>    for(int i=0;i<jArray.length();i++){<newline46mondego>        JSONObject buf = jArray.getJSONObject(i);<newline46mondego>        JSONObject json_data = buf.getJSONObject(<doubleQuotes46>fields<doubleQuotes46>);<newline46mondego>        Brete resultRow = new Brete();<newline46mondego>        resultRow.contenido = json_data.getString(<doubleQuotes46>contenido<doubleQuotes46>);<newline46mondego>        resultRow.fecha = json_data.getString(<doubleQuotes46>fecha<doubleQuotes46>);<newline46mondego>        resultRow.correo = json_data.getString(<doubleQuotes46>correo<doubleQuotes46>);<newline46mondego>        arrayOfWebData.add(resultRow);<newline46mondego>    }<newline46mondego>}<newline46mondego>catch(JSONException e){<newline46mondego>        Log.e(<doubleQuotes46>log_tag<doubleQuotes46>, <doubleQuotes46>Error parsing data <doubleQuotes46>+e.toString());<newline46mondego>}<newline46mondego>"
"708splitHere46","12014903splitHere46","h:message"
"709splitHere46","12014903splitHere46","h:messages"
"710splitHere46","12014938splitHere46","new InetSocketAddress(String hostname, int port)"
"711splitHere46","12014938splitHere46","InetAddress.getByName(hostname)"
"712splitHere46","12014967splitHere46","public void <A extends Animal>"
"713splitHere46","12014967splitHere46","A"
"714splitHere46","12014967splitHere46","Animal"
"715splitHere46","12014967splitHere46","A"
"716splitHere46","12014967splitHere46","Animal"
"717splitHere46","12014967splitHere46","public void doSomething() {<newline46mondego>    Map<String, ? extends List<? extends Animal>>  someMap;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"718splitHere46","12014967splitHere46","? extends Animal"
"719splitHere46","12014967splitHere46","Animal"
"720splitHere46","12014967splitHere46","List<Dog>"
"721splitHere46","12014967splitHere46","Collection<Dog>"
"722splitHere46","12014967splitHere46","List<Animal>"
"723splitHere46","12014967splitHere46","Collection<Animal>"
"724splitHere46","12014967splitHere46","List<Dog>"
"725splitHere46","12014967splitHere46","List<? extends Animal>"
"726splitHere46","12014967splitHere46","List<? extends Animal>"
"727splitHere46","12014967splitHere46","List<Dog>"
"728splitHere46","12014967splitHere46","List<Cat>"
"729splitHere46","12014967splitHere46","List<Animal>"
"730splitHere46","12014967splitHere46","List<Dog>"
"731splitHere46","12014967splitHere46","List<Animal>"
"732splitHere46","12014967splitHere46","Map<String, List<Dog>>"
"733splitHere46","12014967splitHere46","Map<String, List<? extends Animal>>"
"734splitHere46","12014967splitHere46","List<Dog>"
"735splitHere46","12014967splitHere46","List<Animal>"
"736splitHere46","12014967splitHere46","List<Dog> dogs = new ArrayList<Dog>();<newline46mondego>List<Animal> animals = dogs; // unsafe cast<newline46mondego><newline46mondego>// this operation violates type safety<newline46mondego>animals.add(new Cat());<newline46mondego><newline46mondego>// would assign a Cat to a variable of type Dog without a compile error!<newline46mondego>Dog dog = animals.get(0);<newline46mondego>"
"737splitHere46","12014967splitHere46","Map"
"738splitHere46","12014967splitHere46","Map<String, List<Dog>> dogses = new HashMap<String, List<Dog>>();<newline46mondego>Map<String, List<? extends Animal>> animalses = dogses; // unsafe cast<newline46mondego><newline46mondego>List<Cat> cats = new ArrayList();<newline46mondego>cats.put(new Cat());<newline46mondego>animalses.put(<doubleQuotes46>cats<doubleQuotes46>, cats);<newline46mondego><newline46mondego>List<Dog> dogs = dogses.get(<doubleQuotes46>cats<doubleQuotes46>);<newline46mondego>Dog dog = dogs.get(0); // uh-oh<newline46mondego>"
"739splitHere46","12015018splitHere46","<?xmlversion=<doubleQuotes46>1.0<doubleQuotes46>encoding=<doubleQuotes46>UTF-8<doubleQuotes46>standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego>"
"740splitHere46","12015018splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>encoding=<doubleQuotes46>UTF-8<doubleQuotes46>standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego>"
"741splitHere46","12015198splitHere46","trim()"
"742splitHere46","12015198splitHere46","replaceAll()"
"743splitHere46","12015198splitHere46","String str = <doubleQuotes46> \n a b c \n 1 2 3 \n x y z <doubleQuotes46>;<newline46mondego> str = str.trim().replaceAll(<doubleQuotes46>\n <doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"744splitHere46","12015267splitHere46","revalidate();<newline46mondego>"
"745splitHere46","12015267splitHere46","repaint();<newline46mondego>"
"746splitHere46","12015267splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class TestComponent extends JPanel {<newline46mondego><newline46mondego>    private String drawThis;<newline46mondego><newline46mondego>    public TestComponent() {<newline46mondego>        this.drawThis = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>        JButton button = new JButton(<doubleQuotes46>Change<doubleQuotes46>);<newline46mondego>        button.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>            public void actionPerformed(ActionEvent e)<newline46mondego>            {<newline46mondego>                //Execute when button is pressed<newline46mondego>                setDrawThis(<doubleQuotes46>World<doubleQuotes46>);<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        }); <newline46mondego>        this.add(button);<newline46mondego>    }<newline46mondego>    private void drawString(Graphics g, String text, int x, int y) {<newline46mondego>        for (String line : text.split(<doubleQuotes46>\n<doubleQuotes46>))<newline46mondego>            g.drawString(line, x, y += g.getFontMetrics().getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        drawString(g, drawThis, 20, 20);<newline46mondego>    }<newline46mondego><newline46mondego>    public void setDrawThis(String s) {<newline46mondego>        this.drawThis = s;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String s[]) {<newline46mondego>        JFrame f = new JFrame();<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        TestComponent tc = new TestComponent();<newline46mondego><newline46mondego>        f.add(tc);<newline46mondego>        f.setSize(220, 220);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"747splitHere46","12015353splitHere46","{<newline46mondego>   <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>mkyong<doubleQuotes46><newline46mondego>}<newline46mondego>Token 1 = â€œ{â€œ<newline46mondego>Token 2 = â€œnameâ€?<newline46mondego>Token 3 = â€œmkyongâ€?<newline46mondego>Token 4 = â€œ}â€?<newline46mondego>"
"748splitHere46","12015353splitHere46","import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import org.codehaus.jackson.JsonFactory;<newline46mondego>import org.codehaus.jackson.JsonGenerationException;<newline46mondego>import org.codehaus.jackson.JsonParser;<newline46mondego>import org.codehaus.jackson.JsonToken;<newline46mondego>import org.codehaus.jackson.map.JsonMappingException;<newline46mondego><newline46mondego>public class JacksonStreamExample {<newline46mondego>   public static void main(String[] args) {<newline46mondego><newline46mondego>     try {<newline46mondego><newline46mondego>    JsonFactory jfactory = new JsonFactory();<newline46mondego><newline46mondego>    /*** read from file ***/<newline46mondego>    JsonParser jParser = jfactory.createJsonParser(new File(<doubleQuotes46>c:\\user.json<doubleQuotes46>));<newline46mondego><newline46mondego>    // loop until token equal to <doubleQuotes46>}<doubleQuotes46><newline46mondego>    while (jParser.nextToken() != JsonToken.END_OBJECT) {<newline46mondego><newline46mondego>        String fieldname = jParser.getCurrentName();<newline46mondego>        if (<doubleQuotes46>name<doubleQuotes46>.equals(fieldname)) {<newline46mondego><newline46mondego>          // current token is <doubleQuotes46>name<doubleQuotes46>,<newline46mondego>                  // move to next, which is <doubleQuotes46>name<doubleQuotes46>'s value<newline46mondego>          jParser.nextToken();<newline46mondego>          System.out.println(jParser.getText()); // display mkyong<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        if (<doubleQuotes46>age<doubleQuotes46>.equals(fieldname)) {<newline46mondego><newline46mondego>          // current token is <doubleQuotes46>age<doubleQuotes46>, <newline46mondego>                  // move to next, which is <doubleQuotes46>name<doubleQuotes46>'s value<newline46mondego>          jParser.nextToken();<newline46mondego>          System.out.println(jParser.getIntValue()); // display 29<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        if (<doubleQuotes46>messages<doubleQuotes46>.equals(fieldname)) {<newline46mondego><newline46mondego>          jParser.nextToken(); // current token is <doubleQuotes46>[<doubleQuotes46>, move next<newline46mondego><newline46mondego>          // messages is array, loop until token equal to <doubleQuotes46>]<doubleQuotes46><newline46mondego>          while (jParser.nextToken() != JsonToken.END_ARRAY) {<newline46mondego><newline46mondego>                     // display msg1, msg2, msg3<newline46mondego>             System.out.println(jParser.getText()); <newline46mondego><newline46mondego>          }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>      }<newline46mondego>      jParser.close();<newline46mondego><newline46mondego>     } catch (JsonGenerationException e) {<newline46mondego><newline46mondego>      e.printStackTrace();<newline46mondego><newline46mondego>     } catch (JsonMappingException e) {<newline46mondego><newline46mondego>      e.printStackTrace();<newline46mondego><newline46mondego>     } catch (IOException e) {<newline46mondego><newline46mondego>      e.printStackTrace();<newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"749splitHere46","12015364splitHere46","Document doc = Jsoup.parse(html);<newline46mondego>Element link = doc.select(<doubleQuotes46>a<doubleQuotes46>).first();<newline46mondego>String title1 = link.attr(<doubleQuotes46>title<doubleQuotes46>);<newline46mondego><newline46mondego>//etc.<newline46mondego>"
"750splitHere46","12015364splitHere46","<a class=<doubleQuotes46>Class1<doubleQuotes46> title=<doubleQuotes46>title1<doubleQuotes46> href=<doubleQuotes46><doubleQuotes46>www.title1.com<doubleQuotes46>>title1</a><newline46mondego>                                       ^ extra quote<newline46mondego><newline46mondego><a title=title2<doubleQuotes46> href=<doubleQuotes46>www.title2.com<doubleQuotes46>>title2</a><newline46mondego>         ^ missing quote<newline46mondego>"
"751splitHere46","12015456splitHere46","setAlpha()"
"752splitHere46","12015503splitHere46","public void onCreat(Bundle savedInstanceState)<newline46mondego>"
"753splitHere46","12015503splitHere46","public void onCreate(Bundle savedInstanceState)<newline46mondego>"
"754splitHere46","12015503splitHere46","e"
"755splitHere46","12015503splitHere46","onCreate"
"756splitHere46","12015592splitHere46","public class Income {<newline46mondego>    // Column decelerations...<newline46mondego><newline46mondego>    private long id;<newline46mondego>    private int tips;<newline46mondego>    private int hours;<newline46mondego>    private int gas;<newline46mondego>    private double hourly;<newline46mondego>    private double other;<newline46mondego>    private double other2;<newline46mondego><newline46mondego>    public int getGas() {<newline46mondego>        return gas;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getHourly() {<newline46mondego>        return hourly;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getHours() {<newline46mondego>        return hours;<newline46mondego>    }<newline46mondego><newline46mondego>    public long getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getOther() {<newline46mondego>        return other;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getOther2() {<newline46mondego>        return other2;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getTips() {<newline46mondego>        return tips;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setGas(int gas) {<newline46mondego>        this.gas = gas;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setHourly(double hourly) {<newline46mondego>        this.hourly = hourly;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setHours(int hours) {<newline46mondego>        this.hours = hours;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(long id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setOther(double other) {<newline46mondego>        this.other = other;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setOther2(double other2) {<newline46mondego>        this.other2 = other2;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTips(int tips) {<newline46mondego>        this.tips = tips;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"757splitHere46","12015592splitHere46","public Income[] getIncome() {<newline46mondego><newline46mondego>    // Call database...<newline46mondego><newline46mondego>    List<Income> data = new ArrayList<Income>(25);<newline46mondego><newline46mondego>    while (rs.next()) {<newline46mondego><newline46mondego>        Income income = new Income();<newline46mondego><newline46mondego>        income.setID(rs.getInt(1)));<newline46mondego>        income.setTips(rs.getInt(2)));<newline46mondego>        income.setHours(rs.getInt(3)));<newline46mondego>        income.setGas(rs.getInt(4)));<newline46mondego>        income.setHourly(rs.getDouble(5)));<newline46mondego>        income.setOther(rs.getDouble(6)));<newline46mondego>        income.setOther2(rs.getDouble(7)));<newline46mondego><newline46mondego>        data.add(income);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    return data.toArray(new Income[data.size()]);<newline46mondego><newline46mondego>}<newline46mondego>"
"758splitHere46","12015592splitHere46","sql test = new sql();<newline46mondego>Income[] incomes = test.getIncome();<newline46mondego><newline46mondego>System.out.println(incomes[0].getID());<newline46mondego>"
"759splitHere46","12015592splitHere46","Factory"
"760splitHere46","12015592splitHere46","Factory"
"761splitHere46","12015619splitHere46","x |= 0b1; // set LSB bit<newline46mondego>x |= 0b10; // set 2nd bit from LSB<newline46mondego>"
"762splitHere46","12015619splitHere46","x &= ~0b1; // unset LSB bit (if set)<newline46mondego>x &= ~0b10; // unset 2nd bit from LSB<newline46mondego>"
"763splitHere46","12015619splitHere46","x ^= 0b1;<newline46mondego>"
"764splitHere46","12015619splitHere46","x |= 4; // sets 3rd bit<newline46mondego>x |= 0x4; // sets 3rd bit<newline46mondego>x |= 0x10; // sets 9th bit<newline46mondego>"
"765splitHere46","12015619splitHere46","x |= (1 << y); // set the yth bit from the LSB<newline46mondego>"
"766splitHere46","12015619splitHere46","(1 << y)"
"767splitHere46","12015619splitHere46","x |= (1 << y) | (1 << z); // set the yth and zth bit from the LSB<newline46mondego>"
"768splitHere46","12015619splitHere46","x &= ~((1 << y) | (1 << z)); // unset yth and zth bit<newline46mondego>"
"769splitHere46","12015619splitHere46","x ^= (1 << y) | (1 << z); // toggle yth and zth bit<newline46mondego>"
"770splitHere46","12015854splitHere46","InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);<newline46mondego>KeyStroke escapeStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, false);<newline46mondego>inputMap.put(escapeStroke, <doubleQuotes46>Escape<doubleQuotes46>);<newline46mondego>"
"771splitHere46","12015873splitHere46","id = idPool.getExistingId();<newline46mondego>"
"772splitHere46","12015873splitHere46","finally"
"773splitHere46","12015873splitHere46","idPool.releaseExistingId(id);<newline46mondego>"
"774splitHere46","12015873splitHere46","id"
"775splitHere46","12015873splitHere46","0"
"776splitHere46","12015873splitHere46","0"
"777splitHere46","12015873splitHere46","0"
"778splitHere46","12015999splitHere46","java.util.Arrays.ArrayList"
"779splitHere46","12015999splitHere46","java.util.ArrayList"
"780splitHere46","12016064splitHere46","offscreenImage = (BufferedImage) createImage(Settings.GAME`WIDTH, Settings.GAME_HEIGHT);<newline46mondego>offscr = offscreenImage.getGraphics();<newline46mondego>"
"781splitHere46","12016064splitHere46","package tm;<newline46mondego><newline46mondego>import javax.swing.JPanel;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego><newline46mondego>import tm.Screen.Settings;<newline46mondego><newline46mondego>public class Game extends JPanel implements Runnable {<newline46mondego>    // private Setting Settings;<newline46mondego><newline46mondego>    private Thread t;<newline46mondego>    private BufferedImage offscreenImage;<newline46mondego>    private Graphics offscr;<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        while (true) {<newline46mondego>            repaint();<newline46mondego><newline46mondego>            try {<newline46mondego>                Thread.sleep(1000 / 30);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint(Graphics g) {<newline46mondego><newline46mondego>        if (offscreenImage == null) {<newline46mondego><newline46mondego>            offscreenImage = (BufferedImage) createImage(Settings.GAME_WIDTH,<newline46mondego>                    Settings.GAME_HEIGHT);<newline46mondego>        }<newline46mondego>        offscr = offscreenImage.getGraphics();<newline46mondego>        offscr.setColor(Color.black);<newline46mondego>        offscr.fillRect(0, 0, Settings.GAME_WIDTH, Settings.GAME_HEIGHT);<newline46mondego>        offscr.setColor(Color.white);<newline46mondego>        offscr.drawString(<doubleQuotes46>Lolz<doubleQuotes46>, 10, 10);<newline46mondego><newline46mondego>        g.drawImage(offscreenImage, 0, 0, this);<newline46mondego>    }<newline46mondego><newline46mondego>    public void update(Graphics g) {<newline46mondego>        paint(g);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void init() {<newline46mondego>        t = new Thread(this);<newline46mondego>        t.start();<newline46mondego>    }<newline46mondego><newline46mondego>    public Game() {<newline46mondego>        init();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"782splitHere46","12016087splitHere46","1st.) What would the purpose be of dividing up the controller in such a way?"
"783splitHere46","12016087splitHere46","Service Layer"
"784splitHere46","12016087splitHere46","Controller/UI Layer"
"785splitHere46","12016087splitHere46","Business Layer"
"786splitHere46","12016087splitHere46","2nd.) Is there anything wrong with leaving it the way it currently is?"
"787splitHere46","12016117splitHere46","blobstore.create_upload_url('/upload')"
"788splitHere46","12016117splitHere46","/upload"
"789splitHere46","12016166splitHere46","schedule"
"790splitHere46","12016166splitHere46","190       public void schedule(TimerTask task, long delay) {<newline46mondego>191           if (delay < 0)<newline46mondego>192               throw new IllegalArgumentException(<doubleQuotes46>Negative delay.<doubleQuotes46>);<newline46mondego>193           sched(task, System.currentTimeMillis()+delay, 0);<newline46mondego>194       }<newline46mondego>"
"791splitHere46","12016166splitHere46","sched"
"792splitHere46","12016166splitHere46","386       private void sched(TimerTask task, long time, long period) {<newline46mondego>387           if (time < 0)<newline46mondego>388               throw new IllegalArgumentException(<doubleQuotes46>Illegal execution time.<doubleQuotes46>);<newline46mondego>389   <newline46mondego>390           // Constrain value of period sufficiently to prevent numeric<newline46mondego>391           // overflow while still being effectively infinitely large.<newline46mondego>392           if (Math.abs(period) > (Long.MAX_VALUE >> 1))<newline46mondego>393               period >>= 1;<newline46mondego>394   <newline46mondego>395           synchronized(queue) {<newline46mondego>396               if (!thread.newTasksMayBeScheduled)<newline46mondego>397                   throw new IllegalStateException(<doubleQuotes46>Timer already cancelled.<doubleQuotes46>);<newline46mondego>398   <newline46mondego>399               synchronized(task.lock) {<newline46mondego>400                   if (task.state != TimerTask.VIRGIN)<newline46mondego>401                       throw new IllegalStateException(<newline46mondego>402                           <doubleQuotes46>Task already scheduled or cancelled<doubleQuotes46>);<newline46mondego>403                   task.nextExecutionTime = time;<newline46mondego>404                   task.period = period;<newline46mondego>405                   task.state = TimerTask.SCHEDULED;<newline46mondego>406               }<newline46mondego>407   <newline46mondego>408               queue.add(task);<newline46mondego>409               if (queue.getMin() == task)<newline46mondego>410                   queue.notify();<newline46mondego>411           }<newline46mondego>412       }<newline46mondego>"
"793splitHere46","12016166splitHere46","mainLoop"
"794splitHere46","12016166splitHere46","Timer"
"795splitHere46","12016166splitHere46","Timer"
"796splitHere46","12016166splitHere46","ScheduledThreadPoolExecutor"
"797splitHere46","12016182splitHere46","String sRootPath = new File(<doubleQuotes46><doubleQuotes46>).getAbsolutePath();<newline46mondego>"
"798splitHere46","12016408splitHere46","+keyword%3D%{in.headers.artist}%22<newline46mondego>"
"799splitHere46","12016408splitHere46","${in.headers.artist}"
"800splitHere46","12016408splitHere46","%{in.headers.artist}"
"801splitHere46","12016408splitHere46","{ } ?"
"802splitHere46","12016408splitHere46","+keyword%3D%22${in.headers.artist}%22  (+keyword=<doubleQuotes46>madonna<doubleQuotes46>)"
"803splitHere46","12016422splitHere46","private ImageView[] p1Dice = new ImageView[5];<newline46mondego>"
"804splitHere46","12016422splitHere46","p1Dice1.setImageResource(diceImage[player1[0]]);<newline46mondego>p1Dice2.setImageResource(diceImage[player1[1]]);    <newline46mondego>p1Dice3.setImageResource(diceImage[player1[2]]);    <newline46mondego>"
"805splitHere46","12016505splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JTextField;<newline46mondego><newline46mondego>public class CalculatorGui {<newline46mondego><newline46mondego>    private static final int WIDTH = 250;<newline46mondego>    private static final int HEIGHT = 250;<newline46mondego>    private JTextField enterTextField;<newline46mondego>    private JButton sevenB, eightB, nineB, divideB, fourB, fiveB, sixB, multiplyB, oneB, twoB, threeB, subtractB, zeroB, dotB, equalsB, addB;<newline46mondego><newline46mondego>    public CalculatorGui() {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Calculator<doubleQuotes46>);<newline46mondego>        frame.setTitle(<doubleQuotes46>Calculator<doubleQuotes46>);<newline46mondego>        frame.setSize(WIDTH, HEIGHT);<newline46mondego><newline46mondego>        JPanel buttonPanel = new JPanel(new GridLayout(4, 4));        <newline46mondego>        enterTextField = new JTextField();       <newline46mondego><newline46mondego>        frame.add(enterTextField, BorderLayout.NORTH);<newline46mondego><newline46mondego>        sevenB = new JButton(<doubleQuotes46>7<doubleQuotes46>);<newline46mondego>        eightB = new JButton(<doubleQuotes46>8<doubleQuotes46>);<newline46mondego>        nineB = new JButton(<doubleQuotes46>9<doubleQuotes46>);<newline46mondego>        divideB = new JButton(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>        fourB = new JButton(<doubleQuotes46>4<doubleQuotes46>);<newline46mondego>        fiveB = new JButton(<doubleQuotes46>5<doubleQuotes46>);<newline46mondego>        sixB = new JButton(<doubleQuotes46>6<doubleQuotes46>);<newline46mondego>        multiplyB = new JButton(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>        oneB = new JButton(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        twoB = new JButton(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>        threeB = new JButton(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego>        subtractB = new JButton(<doubleQuotes46>-<doubleQuotes46>);<newline46mondego>        zeroB = new JButton(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        dotB = new JButton(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>        equalsB = new JButton(<doubleQuotes46>=<doubleQuotes46>);<newline46mondego>        addB = new JButton(<doubleQuotes46>+<doubleQuotes46>);<newline46mondego><newline46mondego>        buttonPanel.add(sevenB);<newline46mondego>        buttonPanel.add(eightB);<newline46mondego>        buttonPanel.add(nineB);<newline46mondego>        buttonPanel.add(divideB);<newline46mondego>        buttonPanel.add(fourB);<newline46mondego>        buttonPanel.add(fiveB);<newline46mondego>        buttonPanel.add(sixB);<newline46mondego>        buttonPanel.add(multiplyB);<newline46mondego>        buttonPanel.add(oneB);<newline46mondego>        buttonPanel.add(twoB);<newline46mondego>        buttonPanel.add(threeB);<newline46mondego>        buttonPanel.add(subtractB);<newline46mondego>        buttonPanel.add(zeroB);<newline46mondego>        buttonPanel.add(dotB);<newline46mondego>        buttonPanel.add(equalsB);<newline46mondego>        buttonPanel.add(addB);<newline46mondego><newline46mondego>        frame.add(buttonPanel, BorderLayout.CENTER);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        CalculatorGui calcu = new CalculatorGui();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"806splitHere46","12016505splitHere46","layouts"
"807splitHere46","12016505splitHere46","components"
"808splitHere46","12016588splitHere46","ReetrantLock"
"809splitHere46","12016588splitHere46","private final ReentrantLock lock = new ReentrantLock(true);<newline46mondego>"
"810splitHere46","12016667splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego><newline46mondego>    String urlarr[] = new String[MAX_SERVER];<newline46mondego>    init(urlarr);<newline46mondego><newline46mondego>    int idx = 0;<newline46mondego>    while(idx < 1000){<newline46mondego>        String next = urlarr[idx++%urlarr.length];<newline46mondego>        System.out.println(next);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private static void init(String[] urlarr)<newline46mondego>{<newline46mondego>    for(int i=0 ; i<urlarr.length ; i++){<newline46mondego>        urlarr[i] = <doubleQuotes46>url(<doubleQuotes46>+i+<doubleQuotes46>)<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"811splitHere46","12016667splitHere46","url(0)<newline46mondego>url(1)<newline46mondego>url(2)<newline46mondego>url(3)<newline46mondego>url(0)<newline46mondego>url(1)<newline46mondego>url(2)<newline46mondego>url(3)<newline46mondego>"
"812splitHere46","12016773splitHere46","swt-win32-3235.dll"
"813splitHere46","12016773splitHere46","library_path"
"814splitHere46","12016773splitHere46","library_path"
"815splitHere46","12016773splitHere46","library_path"
"816splitHere46","12016773splitHere46","-Djava.library.path=path"
"817splitHere46","12016773splitHere46","swt-win32-3235.dll"
"818splitHere46","12016773splitHere46","library_path"
"819splitHere46","12016873splitHere46","bundles.configuration.location"
"820splitHere46","12016873splitHere46","systemProperty(<doubleQuotes46>foo<doubleQuotes46>).value(<doubleQuotes46>bar<doubleQuotes46>)"
"821splitHere46","12016935splitHere46","Scanner.close"
"822splitHere46","12016935splitHere46","System.In"
"823splitHere46","12016935splitHere46","scanner.close();<newline46mondego>"
"824splitHere46","12017036splitHere46","String code;<newline46mondego>do {<newline46mondego>    code = Integer.toString((int) (Math.random() * Integer.MAX_VALUE), 36);<newline46mondego>    if (code.length() > 6)<newline46mondego>       code = code.substring(0, 6);<newline46mondego>} while(!code.matches(<doubleQuotes46>.*\\w.*<doubleQuotes46>) || !code.matches(<doubleQuotes46>.*\\d.*<doubleQuotes46>) || code.length() < 6);<newline46mondego>"
"825splitHere46","12017088splitHere46","for(int j = 2; j <= (i / 2) ; j++ ) {<newline46mondego>    if ( (i % j) == 0 ) break;<newline46mondego>    if ( j == (i / 2) ) System.out.println(i);<newline46mondego>}<newline46mondego>"
"826splitHere46","12017088splitHere46","i / 2"
"827splitHere46","12017088splitHere46","Math.sqrt(i)"
"828splitHere46","12017088splitHere46","j == Math.sqrt(i)"
"829splitHere46","12017088splitHere46","i"
"830splitHere46","12017088splitHere46","boolean isPrime(int i) {<newline46mondego>    int s = (int)Math.sqrt(i);<newline46mondego>    for (int j = 2; j <= s; j++) {<newline46mondego>        if (i % j == 0) { return false; }<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"831splitHere46","12017213splitHere46","public class ExampServlet extends HttpServlet {<newline46mondego><newline46mondego>public void doPost(HttpServletRequest request, <newline46mondego>     HttpServletResponse response)<newline46mondego>        throws ServletException, IOException<newline46mondego>  {<newline46mondego>"
"832splitHere46","12017267splitHere46","byte[] b = BitConverter.GetBytes((short)11734);<newline46mondego>var s = BitConverter.ToInt16(new byte[] {b[1],b[0] }, 0);<newline46mondego>"
"833splitHere46","12017267splitHere46","IPAddress.HostToNetworkOrder"
"834splitHere46","12017267splitHere46","var sh1 = IPAddress.HostToNetworkOrder((short)11734); //-10707<newline46mondego>var sh2 = IPAddress.HostToNetworkOrder((short)-10707); //11734<newline46mondego>"
"835splitHere46","12017267splitHere46","public class MyBinaryReader : BinaryReader<newline46mondego>{<newline46mondego>    public MyBinaryReader(Stream s)  : base(s)<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    public override short ReadInt16()<newline46mondego>    {<newline46mondego>        return IPAddress.HostToNetworkOrder(base.ReadInt16());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"836splitHere46","12017278splitHere46","max_droplet_size"
"837splitHere46","12017372splitHere46","public abstract class AbstractChapter {}<newline46mondego><newline46mondego>public class ChapterTypeOne extends AbstractChapter {}<newline46mondego><newline46mondego>public classs ChapterTypeTwo extends AbstractChapter {}<newline46mondego><newline46mondego>List<AbstractChapter> chapters = new ArrayList<AbstractChapter>;<newline46mondego>"
"838splitHere46","12017527splitHere46","public class Transformation {<newline46mondego><newline46mondego>  public static void main (String[] args){<newline46mondego>    transformation(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46>.<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public static void transform(String inXML, String inXSL, String outTXT, String renamedFile){<newline46mondego>    System.out.println(inXML);<newline46mondego>    System.out.println(inXSL);<newline46mondego>    System.out.println(outTXT);<newline46mondego>    System.out.println(renamedFile);<newline46mondego>  }<newline46mondego><newline46mondego>  public static void transformation(String inFolder, String outFolder){<newline46mondego>    File infolder = new File(inFolder);<newline46mondego>    File outfolder = new File(outFolder);<newline46mondego>    if (infolder.isDirectory() && outfolder.isDirectory()){<newline46mondego>      System.out.println(<doubleQuotes46>In <doubleQuotes46> + infolder.getAbsolutePath());<newline46mondego>      System.out.println(<doubleQuotes46>Out <doubleQuotes46> + outfolder.getAbsolutePath());<newline46mondego>      File[] listOfFiles = infolder.listFiles();<newline46mondego>      String outPath = outfolder.getAbsolutePath();<newline46mondego>      String inPath = infolder.getAbsolutePath();<newline46mondego>      for (File f: listOfFiles) {<newline46mondego>        if (f.isFile() ) {<newline46mondego>          System.out.println(<doubleQuotes46>File <doubleQuotes46> + f.getName());<newline46mondego>          int indDot = f.getName().lastIndexOf(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>          String name = f.getName().substring(0, indDot);<newline46mondego>          String ext = f.getName().substring(indDot+1);<newline46mondego>          if (ext != null && ext.equals(<doubleQuotes46>html<doubleQuotes46>)){<newline46mondego>            transform(f.getAbsolutePath(), inPath+File.separator+name+<doubleQuotes46>.xsl<doubleQuotes46>, outPath+File.separator+name+<doubleQuotes46>.txt<doubleQuotes46>, outPath+File.separator+name+<doubleQuotes46>.html<doubleQuotes46>);<newline46mondego><newline46mondego>          }<newline46mondego>        }<newline46mondego>      }       <newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"839splitHere46","12017560splitHere46","String.split()"
"840splitHere46","12017560splitHere46","String s=<doubleQuotes46>34.5xy32.6y45.7x36xy<doubleQuotes46>;<newline46mondego>String[] splitString = s.split(<doubleQuotes46>xy<doubleQuotes46>);<newline46mondego>System.out.println(splitString [0]);<newline46mondego>System.out.println(splitString [1]);<newline46mondego>"
"841splitHere46","12017649splitHere46","else"
"842splitHere46","12017649splitHere46","values"
"843splitHere46","12017649splitHere46","null"
"844splitHere46","12017649splitHere46","if"
"845splitHere46","12017649splitHere46","values != null"
"846splitHere46","12017649splitHere46","if"
"847splitHere46","12017649splitHere46","true"
"848splitHere46","12017714splitHere46","abstract enum"
"849splitHere46","12017997splitHere46","((?<=\s)[A-Z][\w]*\s)+[A-Z][\w]*(?=\s)<newline46mondego>"
"850splitHere46","12018018splitHere46","public static int getInteger()<newline46mondego>{<newline46mondego>    int input = 0;<newline46mondego>    Scanner user_input = new Scanner( System.in );<newline46mondego>    System.out.print(<doubleQuotes46>Enter a integer: <doubleQuotes46>);<newline46mondego><newline46mondego>    while (!user_input.hasNextInt() && !user_input.hasNextDouble()) {<newline46mondego>        System.out.println(<doubleQuotes46>Is not a valid number.<doubleQuotes46>);<newline46mondego><newline46mondego>        user_input.next();<newline46mondego>    }<newline46mondego><newline46mondego>    if(user_input.hasNextInt()) {<newline46mondego>        input = user_input.nextInt();<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        input = Math.round((float) user_input.nextDouble()); //I assume here that your number is small as you said<newline46mondego>    }<newline46mondego><newline46mondego>    return input;<newline46mondego>}<newline46mondego>"
"851splitHere46","12018021splitHere46","<jsp:useBean id=<doubleQuotes46>link<doubleQuotes46> scope=<doubleQuotes46>application<doubleQuotes46> class = <doubleQuotes46>com.me.SSL<doubleQuotes46> />          <newline46mondego><jsp:setProperty name=<doubleQuotes46>link<doubleQuotes46> property=<doubleQuotes46>prop<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46>/><newline46mondego><% out.println(<doubleQuotes46>ok<doubleQuotes46>); %>    <newline46mondego>"
"852splitHere46","12018021splitHere46","public class SSL {<newline46mondego>  String prop;<newline46mondego><newline46mondego>  public String getProp() {<newline46mondego>    return prop;<newline46mondego>  }<newline46mondego><newline46mondego>  public void setProp(String prop) {<newline46mondego>    this.prop = prop;<newline46mondego>    main(null);<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    Properties props = new Properties();<newline46mondego>"
"853splitHere46","12018021splitHere46","main"
"854splitHere46","12018021splitHere46","jsp:useBean"
"855splitHere46","12018021splitHere46","<%@ page import=<doubleQuotes46>com.me.SSL<doubleQuotes46> %><newline46mondego><html><newline46mondego><body><newline46mondego>  <% new SSL().main(null); out.println(<doubleQuotes46>ok<doubleQuotes46>); %>    <newline46mondego></body><newline46mondego></html><newline46mondego>"
"856splitHere46","12018047splitHere46","super"
"857splitHere46","12018047splitHere46","extends"
"858splitHere46","12018047splitHere46","accepts"
"859splitHere46","12018047splitHere46","returns"
"860splitHere46","12018047splitHere46","T extends List"
"861splitHere46","12018134splitHere46","System.out.println((int)Math.signum(input.nextInt() - input.nextInt());<newline46mondego>"
"862splitHere46","12018134splitHere46","signum()"
"863splitHere46","12018213splitHere46","Action"
"864splitHere46","12018213splitHere46","ActionListener"
"865splitHere46","12018213splitHere46","URL urlToResource = this.getClass().getResource(<doubleQuotes46>/path/to/the.resource<doubleQuotes46>);"
"866splitHere46","12018213splitHere46","JEditorPane"
"867splitHere46","12018213splitHere46","urlToResource"
"868splitHere46","12018411splitHere46","@Stateless <newline46mondego>public class CustomerService { <newline46mondego><newline46mondego>  @PersistenceContext <newline46mondego>  private EntityManager entityManager; <newline46mondego><newline46mondego>  public void addCustomer(Customer customer) { <newline46mondego>    entityManager.persist(customer); <newline46mondego>  } <newline46mondego>}<newline46mondego>"
"869splitHere46","12018593splitHere46","Person p = (Person)((Map.Entry)it.next()).getValue();<newline46mondego>"
"870splitHere46","12018663splitHere46","AtomicInteger"
"871splitHere46","12018663splitHere46","volatile int"
"872splitHere46","12018663splitHere46","private volatile int value;<newline46mondego><newline46mondego>public final int get() {<newline46mondego>    return value;<newline46mondego>}<newline46mondego><newline46mondego>public int intValue() {<newline46mondego>    return get();<newline46mondego>}<newline46mondego>"
"873splitHere46","12018663splitHere46","volatile int"
"874splitHere46","12018663splitHere46","static final int integer= 100000000;<newline46mondego>"
"875splitHere46","12018694splitHere46","Graphics"
"876splitHere46","12018694splitHere46","Graphics2D"
"877splitHere46","12018694splitHere46","Shape"
"878splitHere46","12018694splitHere46","AffineTest"
"879splitHere46","12018694splitHere46","GraphPanel"
"880splitHere46","12018980splitHere46","Test"
"881splitHere46","12018980splitHere46","Subclass"
"882splitHere46","12018980splitHere46","__init__"
"883splitHere46","12018980splitHere46","class Test(object):         <newline46mondego>    item = 0                # self['item'] = 0<newline46mondego><newline46mondego>    def __init__(self):<newline46mondego>        print(self.item)    # print(self['item'])<newline46mondego><newline46mondego>    def test(self):<newline46mondego>        print(self.item)    # print(self['item'])<newline46mondego><newline46mondego>class Subclass(Test):       <newline46mondego>    item = 1                # self['item'] = 1<newline46mondego><newline46mondego>s = Subclass()              # Test.__init__({})<newline46mondego>s.test()                    <newline46mondego>"
"884splitHere46","12018980splitHere46","item"
"885splitHere46","12018980splitHere46","item"
"886splitHere46","12018980splitHere46","Subclass"
"887splitHere46","12018980splitHere46","item"
"888splitHere46","12018980splitHere46","Test"
"889splitHere46","12018980splitHere46","int item"
"890splitHere46","12018980splitHere46","Test"
"891splitHere46","12018980splitHere46","Subclass"
"892splitHere46","12018980splitHere46","int item"
"893splitHere46","12018980splitHere46","Subclass"
"894splitHere46","12018980splitHere46","public class Test {<newline46mondego><newline46mondego>    private int item;<newline46mondego><newline46mondego>    public Test() {<newline46mondego>        this(0); // Default to 0<newline46mondego>    }<newline46mondego><newline46mondego>    public Test(int item) {<newline46mondego>        setItem(item);<newline46mondego>        test();<newline46mondego>    }<newline46mondego><newline46mondego>    public void test() {<newline46mondego>        System.out.println(getItem());<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Subclass s = new Subclass();<newline46mondego>        s.test();<newline46mondego>    }<newline46mondego><newline46mondego>    public void setItem(int item) {<newline46mondego>        this.item = item;<newline46mondego>    }    <newline46mondego><newline46mondego>    public int getItem() {<newline46mondego>        return item;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Subclass extends Test {<newline46mondego><newline46mondego>  public Subclass() {<newline46mondego>      super(1); // Default to 1<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"895splitHere46","12018980splitHere46","item"
"896splitHere46","12018980splitHere46","item"
"897splitHere46","12018980splitHere46","private"
"898splitHere46","12018980splitHere46","public class Test {<newline46mondego>   // Same as above . . .<newline46mondego>}<newline46mondego><newline46mondego>class Subclass extends Test {<newline46mondego><newline46mondego>  private int subclassItem = 1;<newline46mondego><newline46mondego>  public int getItem() {<newline46mondego>    return subclassItem;<newline46mondego>  }<newline46mondego><newline46mondego>  public void setItem(int item) {<newline46mondego>    this.subclassItem = item;<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"899splitHere46","12018980splitHere46","item"
"900splitHere46","12018980splitHere46","0 1"
"901splitHere46","12018980splitHere46","1 1"
"902splitHere46","12018980splitHere46","this"
"903splitHere46","12019133splitHere46","DynamicForm"
"904splitHere46","12019133splitHere46","public static Result index() {<newline46mondego>    DynamicForm bindedForm = form().bindFromRequest();<newline46mondego>    System.out.println(bindedForm.get(<doubleQuotes46>myname<doubleQuotes46>));<newline46mondego>    // or...<newline46mondego>    Logger.info(bindedForm.get(<doubleQuotes46>myname<doubleQuotes46>)); <newline46mondego>        // Play's Logger is nicer than System.out.println();<newline46mondego>    return ok(index.render(null)); }<newline46mondego>}<newline46mondego>"
"905splitHere46","12019212splitHere46","Map<String,File> map = new HashMap<String, File>();<newline46mondego>map.put(currentdir +<doubleQuotes46>/<doubleQuotes46>+ emailSentReceivedName, file);<newline46mondego><newline46mondego>File file = map.get(path); //will give you the file<newline46mondego>"
"906splitHere46","12019303splitHere46","LinkedHashMap"
"907splitHere46","12019303splitHere46","HashMap"
"908splitHere46","12019303splitHere46","Map dataSet = new LinkedHashMap();<newline46mondego>"
"909splitHere46","12019303splitHere46","Map<String, String> dataSet = new LinkedHashMap<String, String>();<newline46mondego>"
"910splitHere46","12019457splitHere46","(^.*?|.*?)\.(out|text).*?not found(.*?|.*?$)<newline46mondego>"
"911splitHere46","12019590splitHere46","DataSource"
"912splitHere46","12019928splitHere46","if(condition){<newline46mondego>       //code<newline46mondego>} else {<newline46mondego>    if(condition) {<newline46mondego>       //code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"913splitHere46","12019928splitHere46","if (condition) {<newline46mondego>     //code<newline46mondego>} else if (condition) {<newline46mondego>    //code<newline46mondego>}<newline46mondego>"
"914splitHere46","12020017splitHere46","HashMap"
"915splitHere46","12020017splitHere46","HashSet"
"916splitHere46","12020017splitHere46","remove"
"917splitHere46","12020017splitHere46","remove"
"918splitHere46","12020017splitHere46","LinkedHashMap"
"919splitHere46","12020017splitHere46","HashMap"
"920splitHere46","12020071splitHere46","<jsp:useBean id=<doubleQuotes46>register<doubleQuotes46> class=<doubleQuotes46>registration.RegistrationBean<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46>><newline46mondego><jsp:setProperty name=<doubleQuotes46>register<doubleQuotes46> property=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46><%=request.getParameter(<doubleQuotes46>username<doubleQuotes46>)%><doubleQuotes46>/><newline46mondego><jsp:setProperty name=<doubleQuotes46>register<doubleQuotes46> property=<doubleQuotes46>password<doubleQuotes46> value=<doubleQuotes46><%=request.getParameter(<doubleQuotes46>password<doubleQuotes46>)%><doubleQuotes46>/><newline46mondego><jsp:useBean /><newline46mondego>"
"921splitHere46","12020071splitHere46","username"
"922splitHere46","12020071splitHere46","password"
"923splitHere46","12020071splitHere46","RegistrationBean"
"924splitHere46","12020071splitHere46","username"
"925splitHere46","12020071splitHere46","password"
"926splitHere46","12020071splitHere46","login"
"927splitHere46","12020071splitHere46","register.login()"
"928splitHere46","12020139splitHere46","public static void main(String... args) {<newline46mondego>  switch (1) {<newline46mondego>  case 1:<newline46mondego>    break;<newline46mondego>  case 2:<newline46mondego>    break;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(java.lang.String[]);<newline46mondego>  Code:<newline46mondego>   Stack=1, Locals=1, Args_size=1<newline46mondego>   0:   iconst_1<newline46mondego>   1:   lookupswitch{ //2<newline46mondego>                1: 28;<newline46mondego>                2: 31;<newline46mondego>                default: 31 }<newline46mondego>   28:  goto    31<newline46mondego>   31:  return<newline46mondego>"
"929splitHere46","12020337splitHere46","TreeMap"
"930splitHere46","12020337splitHere46","HashMap"
"931splitHere46","12020402splitHere46","String[] cmd = { <doubleQuotes46>pdftotext<doubleQuotes46>, <newline46mondego>  <doubleQuotes46>-enc<doubleQuotes46>, encoding, <newline46mondego>  pdf.getAbsolutePath(), <newline46mondego>  output.getAbsolutePath()<newline46mondego>};<newline46mondego>"
"932splitHere46","12020515splitHere46","org.jboss.netty.handler.traffic"
"933splitHere46","12020515splitHere46","GlobalTrafficShapingHandler"
"934splitHere46","12020541splitHere46","Object Reference Variable"
"935splitHere46","12020541splitHere46","CustomObject cObject;<newline46mondego><newline46mondego>public void setObject(CustomObject o){<newline46mondego><newline46mondego><newline46mondego>       if(o.equals(null)){<newline46mondego><newline46mondego><newline46mondego>              // Save it in log, Sysout it... etc.<newline46mondego>       }<newline46mondego>        else{<newline46mondego><newline46mondego>              cObject = o;<newline46mondego><newline46mondego>         }<newline46mondego><newline46mondego> }<newline46mondego>"
"936splitHere46","12020667splitHere46","new ImageIcon(Image)"
"937splitHere46","12020667splitHere46","Image img = ...<newline46mondego>ImageIcon icon = new ImageIcon(img);<newline46mondego>"
"938splitHere46","12020757splitHere46","Timer"
"939splitHere46","12020757splitHere46","final Timer ti = new Timer(0, null);<newline46mondego>ti.addActionListener(new ActionListener() {<newline46mondego>    int countSeconds = 3;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        if(countSeconds == 0) {<newline46mondego>            lblCountdown.setText(<doubleQuotes46>Go<doubleQuotes46>);<newline46mondego>            ti.stop();<newline46mondego>        } else {<newline46mondego>            lblCountdown.setText(<doubleQuotes46><doubleQuotes46>+countSeconds);<newline46mondego>            countSeconds--;<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>ti.setDelay(1000);<newline46mondego>ti.start();<newline46mondego>"
"940splitHere46","12020797splitHere46","http://localhost:8080/Springapp/hello"
"941splitHere46","12020797splitHere46","package com.project.springapp;<newline46mondego><newline46mondego>import org.springframework.stereotype.Controller;<newline46mondego>import org.springframework.web.bind.annotation.RequestMapping;<newline46mondego>import org.springframework.web.bind.annotation.RequestMethod;<newline46mondego><newline46mondego>@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/Springapp<doubleQuotes46>)<newline46mondego>public class HelloController {<newline46mondego><newline46mondego>@RequestMapping(<doubleQuotes46>/hello<doubleQuotes46>)<newline46mondego>public String Hello(){<newline46mondego>    return <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"942splitHere46","12020825splitHere46",".start()"
"943splitHere46","12020825splitHere46","thread of execution"
"944splitHere46","12020825splitHere46","run()"
"945splitHere46","12020825splitHere46","thread of execution"
"946splitHere46","12020825splitHere46","start()"
"947splitHere46","12020825splitHere46","Runnable"
"948splitHere46","12020825splitHere46","task"
"949splitHere46","12020825splitHere46","newly created thread of execution"
"950splitHere46","12020908splitHere46","Arrays.asList"
"951splitHere46","12020908splitHere46","int[]"
"952splitHere46","12020908splitHere46","Arrays.asList(example)"
"953splitHere46","12020908splitHere46","List<int[]>"
"954splitHere46","12020908splitHere46","List<int>"
"955splitHere46","12020908splitHere46","ArrayUtils"
"956splitHere46","12020960splitHere46","class ThreadNewTask implements Runnable {<newline46mondego>  private BlockingQueue<Integer> pool;<newline46mondego>  private int id;<newline46mondego><newline46mondego>  public ThreadNewTask(BlockingQueue<Integer> pool) {<newline46mondego>    this.pool = pool;<newline46mondego>  }<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    try {<newline46mondego>        id = pool.take();<newline46mondego>        someMethod(id);<newline46mondego>    } catch (Exception e) {<newline46mondego>        System.out.println(e);<newline46mondego>    } finally {<newline46mondego>        pool.offer(id);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private void someMethod(Integer id) {<newline46mondego>    System.out.println(<doubleQuotes46>Task: <doubleQuotes46> +id);<newline46mondego>            // and do other calcuations whatever you need to do in your program<newline46mondego>  }<newline46mondego>}  <newline46mondego>"
"957splitHere46","12020960splitHere46","LinkedList<Integer> availableExistingIds = new LinkedList<Integer>();<newline46mondego>for (int i = 1; i <= 1000; i++) {<newline46mondego>  availableExistingIds.add(i);<newline46mondego>}<newline46mondego>BlockingQueue<Integer> pool = new ArrayBlockingQueue<Integer>(1000, false, availableExistingIds);<newline46mondego>"
"958splitHere46","12020983splitHere46","|"
"959splitHere46","12020983splitHere46","country"
"960splitHere46","12020983splitHere46","org"
"961splitHere46","12020983splitHere46","com"
"962splitHere46","12020983splitHere46","name"
"963splitHere46","12020983splitHere46","applicationName"
"964splitHere46","12020983splitHere46","subpackages"
"965splitHere46","12020983splitHere46","Name"
"966splitHere46","12020983splitHere46","applicationName"
"967splitHere46","12020983splitHere46","util"
"968splitHere46","12020983splitHere46","ui"
"969splitHere46","12020983splitHere46","db"
"970splitHere46","12020983splitHere46","en.jdave.smartapp.ui.core.forms"
"971splitHere46","12020983splitHere46","de.mgerman.smartapp.ui.core.forms"
"972splitHere46","12021051splitHere46","A a = (A)Class.forName(<doubleQuotes46>A<doubleQuotes46>).newInstance();<newline46mondego>"
"973splitHere46","12021051splitHere46","String classPath = ...<newline46mondego>AInterface a = (AInterface)Class.forName(classPath).newInstance();<newline46mondego>"
"974splitHere46","12021115splitHere46","Drawable image_frame_green  = getResources().getDrawable(<newline46mondego>                R.drawable.frame_green);<newline46mondego>"
"975splitHere46","12021162splitHere46","Caused by: com.google.ads.internal.b: Required XML attribute <doubleQuotes46>adUnitId<doubleQuotes46> missing"
"976splitHere46","12021174splitHere46","getLockingKeyState()"
"977splitHere46","12021225splitHere46",".xml"
"978splitHere46","12021225splitHere46","http://yourdomain.com:4848"
"979splitHere46","12021225splitHere46","JDBC Connection pool"
"980splitHere46","12021225splitHere46","JDBC Resource"
"981splitHere46","12021225splitHere46","persistence.xml"
"982splitHere46","12021225splitHere46","Data Source"
"983splitHere46","12021225splitHere46","JDBC Resource"
"984splitHere46","12021225splitHere46","mysql-connector-java-<version>-bin.jar <newline46mondego>"
"985splitHere46","12021225splitHere46","<GlassFish-install-folder>\glassfish\domains\domain1\lib\ext<newline46mondego>"
"986splitHere46","12021225splitHere46","Class name is wrong or classpath is not set for : com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
"987splitHere46","12021225splitHere46","JDBC Connection pool"
"988splitHere46","12021319splitHere46","out.println(<doubleQuotes46><a href=\<doubleQuotes46>#\<doubleQuotes46>><doubleQuotes46> + itr.next() + <doubleQuotes46></a><doubleQuotes46>);<newline46mondego>"
"989splitHere46","12021319splitHere46","iterator.next()"
"990splitHere46","12021319splitHere46","out.println(<doubleQuotes46><a href=\<doubleQuotes46>#\<doubleQuotes46> class=\<doubleQuotes46>label list2\<doubleQuotes46><doubleQuotes46><newline46mondego>                + <doubleQuotes46> data-filter=\<doubleQuotes46><doubleQuotes46> + <doubleQuotes46>.<doubleQuotes46> + itr.next() + <doubleQuotes46>\<doubleQuotes46>><doubleQuotes46><newline46mondego>                + (itr.hasNext() ? itr.next() : <doubleQuotes46><doubleQuotes46>) + <doubleQuotes46></a><doubleQuotes46>);<newline46mondego>"
"991splitHere46","12021319splitHere46","String str = itr.next();<newline46mondego>  System.out.println(<doubleQuotes46><a href=\<doubleQuotes46>#\<doubleQuotes46> class=\<doubleQuotes46>label list2\<doubleQuotes46><doubleQuotes46><newline46mondego>                + <doubleQuotes46> data-filter=\<doubleQuotes46><doubleQuotes46> + <doubleQuotes46>.<doubleQuotes46> + str + <doubleQuotes46>\<doubleQuotes46>><doubleQuotes46> + str + <doubleQuotes46></a><doubleQuotes46>);<newline46mondego>"
"992splitHere46","12021484splitHere46","boolean foundMatch = subjectString.matches(<newline46mondego>    <doubleQuotes46>(?x)                  # Verbose regex:\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>(?!.*(AB|CD|EF).*\\1) # Make sure there are no dupes in the string\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>\\s*                  # Match optional whitespace.\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>(?:AB|CD|EF)          # Match one of the three candidates\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>(?:                   # Try to match...\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46> \\s*,\\s*            #  a comma, optionally surrounded by whitespace\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46> (?:AB|CD|EF)         #  followed by one of the candidates\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>)*                    # zero or more times\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>\\s*                  # Match optional whitespace.<doubleQuotes46>);<newline46mondego>"
"993splitHere46","12021491splitHere46","RoundField"
"994splitHere46","12021491splitHere46","class BorderUtil {<newline46mondego><newline46mondego>    @SuppressWarnings({ <doubleQuotes46>unchecked<doubleQuotes46>, <doubleQuotes46>serial<doubleQuotes46> })<newline46mondego>    public static <T extends JTextField> T createTextField(T field, String text, int x, int y, int width,<newline46mondego>            int height) {<newline46mondego><newline46mondego>        T f = null;<newline46mondego>        if (field instanceof JPasswordField) {<newline46mondego>            f = (T) new JPasswordField(text) {<newline46mondego>                @Override<newline46mondego>                protected void paintComponent(Graphics g) {<newline46mondego>                    g.setColor(getBackground());<newline46mondego>                    g.fillRoundRect(0, 0, getWidth(), getHeight(), 8, 8);<newline46mondego>                    super.paintComponent(g);<newline46mondego>                }<newline46mondego>            };<newline46mondego>        } else {<newline46mondego>            f = (T) new JTextField(text) {<newline46mondego>                @Override<newline46mondego>                protected void paintComponent(Graphics g) {<newline46mondego>                    g.setColor(getBackground());<newline46mondego>                    g.fillRoundRect(0, 0, getWidth(), getHeight(), 8, 8);<newline46mondego>                    super.paintComponent(g);<newline46mondego>                }<newline46mondego>            };<newline46mondego>        }<newline46mondego><newline46mondego>        f.setBounds(x, y, width, height);<newline46mondego>        f.setForeground(Color.GRAY);<newline46mondego>        f.setHorizontalAlignment(JTextField.CENTER);<newline46mondego>        f.setOpaque(false);<newline46mondego>        f.setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));<newline46mondego>        return f;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"995splitHere46","12021491splitHere46","JPasswordField pf = BorderUtil.createTextField(yourPasswordField, <doubleQuotes46>Text<doubleQuotes46>, 0, 0, 10, 10);<newline46mondego>"
"996splitHere46","12021506splitHere46","0xFFC0"
"997splitHere46","12021506splitHere46","0x12F0"
"998splitHere46","12021506splitHere46","bitwise and"
"999splitHere46","12021506splitHere46","0xFFC0 = 1111111111100000"
"1000splitHere46","12021506splitHere46","0x12F0 = 0001001011110000"
"1001splitHere46","12021506splitHere46","0001001011100000 = 0x12F0"
"1002splitHere46","12021506splitHere46","0xFF"
"1003splitHere46","12021506splitHere46","0xF (base-16) = 1111 (base-2) = 15 (base-10)"
"1004splitHere46","12021506splitHere46","0000"
"1005splitHere46","12021506splitHere46","1111"
"1006splitHere46","12021506splitHere46","int"
"1007splitHere46","12021506splitHere46","char"
"1008splitHere46","12021506splitHere46","0x01"
"1009splitHere46","12021506splitHere46","0x02"
"1010splitHere46","12021506splitHere46","0x03"
"1011splitHere46","12021506splitHere46","0x01 = 00000001"
"1012splitHere46","12021506splitHere46","0x02 = 00000010"
"1013splitHere46","12021506splitHere46","0x03 = 00000011"
"1014splitHere46","12021506splitHere46","0x01"
"1015splitHere46","12021506splitHere46","0x01 & 0x01 = 1"
"1016splitHere46","12021506splitHere46","0x02 & 0x01 = 0"
"1017splitHere46","12021506splitHere46","0x03 & 0x01 = 1"
"1018splitHere46","12021585splitHere46","Collection.retainAll"
"1019splitHere46","12021585splitHere46","list.retainAll(Arrays.asList(array));<newline46mondego>"
"1020splitHere46","12021637splitHere46","Timing"
"1021splitHere46","12021637splitHere46","timing"
"1022splitHere46","12021668splitHere46","import java.util.TimerTask;<newline46mondego>import java.util.concurrent.Callable;<newline46mondego>import java.util.concurrent.atomic.AtomicBoolean;<newline46mondego><newline46mondego>public class Solver implements Callable<Double> {<newline46mondego><newline46mondego>    private final AtomicBoolean running = new AtomicBoolean(true);<newline46mondego><newline46mondego>    public void stop() {<newline46mondego>        this.running.set(true);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Double call() throws Exception {<newline46mondego>        Double answer = null;<newline46mondego>        while (this.running.get()) {<newline46mondego>            answer = keepImproving();<newline46mondego>        }<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return answer;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Schedular extends TimerTask {<newline46mondego><newline46mondego>    private final Solver solver;<newline46mondego><newline46mondego>    public Schedular(Solver solver) {<newline46mondego>        this.solver = solver;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        this.solver.stop();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1023splitHere46","12021668splitHere46","final Solver solver = new Solver();<newline46mondego>Schedular schedular = new Schedular(solver);<newline46mondego>final Timer timer = new Timer();<newline46mondego>timer.schedule(schedular, 0, TimeUnit.MINUTES.toMillis(1));<newline46mondego><newline46mondego>ExecutorService executor = // get a executor somehow<newline46mondego>final Future<Double> future = executor.submit(solver);<newline46mondego>final Double answer = future.get();<newline46mondego>System.out.println(answer);<newline46mondego>"
"1024splitHere46","12021668splitHere46","Timer"
"1025splitHere46","12021668splitHere46","TimerTask"
"1026splitHere46","12021972splitHere46","Reflections reflections = new Reflections(<doubleQuotes46>org.home.junk<doubleQuotes46>);<newline46mondego>Set<Class<?>> annotated = reflections.getTypesAnnotatedWith(javax.persistence.Entity.class);<newline46mondego>"
"1027splitHere46","12021972splitHere46","org.home.junk"
"1028splitHere46","12021972splitHere46","javax.persistence.Entity"
"1029splitHere46","12021972splitHere46","for (Class<?> clazz : annotated) {<newline46mondego>    final Object newInstance = clazz.newInstance();<newline46mondego>}<newline46mondego>"
"1030splitHere46","12022034splitHere46","BeanDescriptor"
"1031splitHere46","12022080splitHere46","public static void main(String[] args) throws IOException<newline46mondego>    {<newline46mondego>        String html = <doubleQuotes46><ul><li><i><a class=\<doubleQuotes46>mw-redirect\<doubleQuotes46> title=\<doubleQuotes46>title1\<doubleQuotes46> href=\<doubleQuotes46>yahoo.com\<doubleQuotes46>>used to be a best email</a></i>(1999)</li><li><i><a title=\<doubleQuotes46>title2\<doubleQuotes46> href=\<doubleQuotes46>google.com\<doubleQuotes46>>Best search enginee We Will Go</a></i>(1999)</li><li><i><a title=\<doubleQuotes46>title3\<doubleQuotes46> href=\<doubleQuotes46>apple.com\<doubleQuotes46>>Best Phone</a></i>(1990)</li></ul><doubleQuotes46>;<newline46mondego><newline46mondego>        Document doc = Jsoup.parse(html);<newline46mondego><newline46mondego>        Elements links = doc.select(<doubleQuotes46>ul li i a<doubleQuotes46>);<newline46mondego><newline46mondego>        for (Element element : links) {<newline46mondego>            System.out.format(<doubleQuotes46>%s %s %s\n<doubleQuotes46>, element.attr(<doubleQuotes46>title<doubleQuotes46>), element.attr(<doubleQuotes46>href<doubleQuotes46>), element.text());<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1032splitHere46","12022080splitHere46","ul li i a"
"1033splitHere46","12022080splitHere46","a"
"1034splitHere46","12022080splitHere46","i"
"1035splitHere46","12022080splitHere46","li"
"1036splitHere46","12022080splitHere46","ul"
"1037splitHere46","12022080splitHere46","doc.select(<doubleQuotes46>a<doubleQuotes46>)"
"1038splitHere46","12022146splitHere46","cd %USERPROFILE%/.android <newline46mondego>"
"1039splitHere46","12022147splitHere46","JTextArea"
"1040splitHere46","12022147splitHere46","ComponentListener"
"1041splitHere46","12022147splitHere46","public class TestTextArea extends JFrame {<newline46mondego><newline46mondego>    public TestTextArea() {<newline46mondego><newline46mondego>        setLayout(new GridBagLayout());<newline46mondego><newline46mondego>        JTextArea textArea = new JTextArea();<newline46mondego>        textArea.setColumns(10);<newline46mondego>        textArea.setRows(1);<newline46mondego>        textArea.setLineWrap(true);<newline46mondego>        textArea.setWrapStyleWord(true);<newline46mondego><newline46mondego>        add(textArea);<newline46mondego><newline46mondego>        setSize(200, 200);<newline46mondego>        setLocationRelativeTo(null);<newline46mondego>        setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>        setVisible(true);<newline46mondego><newline46mondego>        textArea.addComponentListener(new ComponentAdapter() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void componentResized(ComponentEvent ce) {<newline46mondego><newline46mondego>                System.out.println(<doubleQuotes46>I've changed size<doubleQuotes46>);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args the command line arguments<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestTextArea();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1042splitHere46","12022225splitHere46","Perst Lite"
"1043splitHere46","12022333splitHere46","#! /bin/sh<newline46mondego>javac sample.java<newline46mondego>"
"1044splitHere46","12022558splitHere46","ExecutorService service=Executors.newFixedThreadPool(1);<newline46mondego>Callable<ResultSet> callable = new SelectThreadResultSet();<newline46mondego>Future<ResultSet> future = service.submit(callable);<newline46mondego>ResultSet rs = (ResultSet)future.get();<newline46mondego>// Here I dont get any values<newline46mondego>while(rs.next()){<newline46mondego>    System.out.println(rs.getString(<doubleQuotes46>EMPLOYEE<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"1045splitHere46","12022558splitHere46","public class SelectThreadClass implements Callable<List<String>> {<newline46mondego><newline46mondego>    public List<String> call(){<newline46mondego>        ResultSet rs = null;<newline46mondego>        List<String> strList = new ArrayList<String>();<newline46mondego>        try {<newline46mondego>            rs  = perform();<newline46mondego>            while(rs.next()){<newline46mondego>                strList.add(rs.getString(<doubleQuotes46>EMPNAME<doubleQuotes46>));<newline46mondego>            }<newline46mondego>            System.out.println(<doubleQuotes46>Passed<doubleQuotes46>);<newline46mondego><newline46mondego>        } catch (InstantiationException | IllegalAccessException | SQLException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        return strList;<newline46mondego>    }<newline46mondego><newline46mondego>    public ResultSet perform() throws InstantiationException, IllegalAccessException, SQLException{<newline46mondego>        Connection conn = null;<newline46mondego>        try {<newline46mondego>            Class.forName(<doubleQuotes46>org.sqlite.JDBC<doubleQuotes46>);<newline46mondego>            try {<newline46mondego>                conn = DriverManager.getConnection(<doubleQuotes46>jdbc:sqlite:C:\\SqlLite\\EMPLOYEE.db<doubleQuotes46>);<newline46mondego>            } catch (Exception e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            Statement s = null;<newline46mondego>            try {<newline46mondego>                s = conn.createStatement();<newline46mondego>            } catch (Exception e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>            ResultSet rs = null;<newline46mondego>            try {<newline46mondego>                rs = s.executeQuery(Utils.selectQuery);<newline46mondego>            } catch (Exception e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>            return rs;<newline46mondego>        }catch (ClassNotFoundException e){<newline46mondego>            e.printStackTrace();<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1046splitHere46","12022558splitHere46","public class Utils {<newline46mondego><newline46mondego>    public static String selectQuery = <doubleQuotes46>SELECT EMPNAME FROM EMPLOYEEDETAILS<doubleQuotes46>;<newline46mondego>    public static void dbSelect(String query) throws InterruptedException, ExecutionException, SQLException{<newline46mondego>        ExecutorService service=Executors.newFixedThreadPool(1);<newline46mondego>        Callable<List<String>> callable = new SelectThreadClass();<newline46mondego><newline46mondego>        Future<List<String>> future = service.submit(callable);<newline46mondego><newline46mondego>        List<String> empList = future.get();<newline46mondego>        for(String emp : empList){<newline46mondego>            System.out.println(emp);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) throws InterruptedException, ExecutionException, SQLException{<newline46mondego>        dbSelect(<doubleQuotes46>SELECT EMPNAME FROM EMPLOYEEDETAILS<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1047splitHere46","12022591splitHere46","KeyEvent"
"1048splitHere46","12022591splitHere46","KeyEvent"
"1049splitHere46","12022591splitHere46","getComponent"
"1050splitHere46","12022703splitHere46","JScrollPane"
"1051splitHere46","12022703splitHere46","JScrollPane scrollPane = new JScrollPane(myComicsTable);        <newline46mondego>scrollPane.add(myComicsTable);<newline46mondego>"
"1052splitHere46","12022703splitHere46","JScrollPane"
"1053splitHere46","12022703splitHere46","JTable"
"1054splitHere46","12022703splitHere46","JScrollPane"
"1055splitHere46","12022703splitHere46","add()"
"1056splitHere46","12022703splitHere46","Container"
"1057splitHere46","12022703splitHere46","JTable"
"1058splitHere46","12022703splitHere46","JScrollPane"
"1059splitHere46","12022726splitHere46","response.getOutputStream()"
"1060splitHere46","12022726splitHere46","HttpServletResponseWrapper"
"1061splitHere46","12022868splitHere46","myTimer.stop()"
"1062splitHere46","12022868splitHere46","actionPerformed"
"1063splitHere46","12022868splitHere46","stop"
"1064splitHere46","12022868splitHere46","if (countSeconds == 0)"
"1065splitHere46","12022868splitHere46","int countSeconds = 3;"
"1066splitHere46","12022868splitHere46","actionPerformed"
"1067splitHere46","12023025splitHere46","if(command.getDataCriteria().equals(PDSLnPConstants.DATA_CRITERIA_PREVIOUS)) {<newline46mondego>   ...<newline46mondego>else if(command.getDataCriteria().equals(PDSLnPConstants.DATA_CRITERIA_NEW)) {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"1068splitHere46","12023025splitHere46","..."
"1069splitHere46","12023140splitHere46","TVcountDown.setText(convertToMyFormat(millisUntilFinished));<newline46mondego>"
"1070splitHere46","12023140splitHere46","convertToMyFormat()"
"1071splitHere46","12023140splitHere46","public String convertToMyFormat(long ms) {<newline46mondego>    String secString, msecString;<newline46mondego>    //constructing the sec format:<newline46mondego>    int sec = (int) (ms / 1000);<newline46mondego>    if(sec < 10)        secString = <doubleQuotes46>0<doubleQuotes46>+sec;<newline46mondego>    else if(sec == 0)   secString = <doubleQuotes46>00<doubleQuotes46>;<newline46mondego>    else                secString = <doubleQuotes46><doubleQuotes46>+sec;<newline46mondego>    //constructing the msec format:<newline46mondego>    int msec = (int) ((ms-(sec*1000))/10.0);<newline46mondego>    if(msec < 10)       msecString = <doubleQuotes46>0<doubleQuotes46>+msec;<newline46mondego>    else if(msec == 0)  msecString = <doubleQuotes46>00<doubleQuotes46>;<newline46mondego>    else                msecString = <doubleQuotes46><doubleQuotes46>+msec;<newline46mondego><newline46mondego>    return secString+<doubleQuotes46>:<doubleQuotes46>+msecString;<newline46mondego>}<newline46mondego>"
"1072splitHere46","12023140splitHere46","msec"
"1073splitHere46","12023209splitHere46","package i3.util;<newline46mondego><newline46mondego>import java.util.AbstractSet;<newline46mondego>import java.util.Collection;<newline46mondego>import java.util.ConcurrentModificationException;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.ListIterator;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.NoSuchElementException;<newline46mondego><newline46mondego>/**<newline46mondego> * This class is a like LinkedHashSet (insertion order) but it allows querying<newline46mondego> * the relative position of a element and has a ListIterator that can set and<newline46mondego> * insert anywhere.<newline46mondego> *<newline46mondego> * Warning: the iterator can change the order of the set by moving elements when<newline46mondego> * setting or adding. Elements that already exist are not ignored, but moved the<newline46mondego> * requested place. This changes iteration order<newline46mondego> *<newline46mondego> *<newline46mondego> * The iterators of this class are fail fast and will throw a<newline46mondego> * ConcurrentModificationException if their iterator are used with intervening<newline46mondego> * main class (or other iterators) mutative calls<newline46mondego> *<newline46mondego> * @author i30817 <i30817@gmail.com><newline46mondego>*/<newline46mondego>public class LinkedSet<E> extends AbstractSet<E> {<newline46mondego><newline46mondego>//It holds the linked list<newline46mondego>private Map<E, Node> m = new HashMap<E, Node>();<newline46mondego>//head of that<newline46mondego>protected Node head = new Node();<newline46mondego>//this is copied to the map value in increments of iteratorAddStep on set.add<newline46mondego>//(which only adds to the end, by insertion indexing)<newline46mondego>private int monotonicallyIncreasing = 0;<newline46mondego>//iterator add step may change when doing rebuilds of the 'space' between elements<newline46mondego>//for the before/after functions on LinkedKeyIterator.add<newline46mondego>private int iteratorAddStep = 10;<newline46mondego>//for fail fast iterators<newline46mondego>private int modCount;<newline46mondego><newline46mondego>/**<newline46mondego> * Start iterating from elem (inclusive)<newline46mondego> *<newline46mondego> *<newline46mondego> * @throws NoSuchElementException if E not part of the set<newline46mondego> * @param elem a element of the set<newline46mondego> * @return a ListIterator - doesn't support nextIndex() or previousIndex()<newline46mondego> */<newline46mondego>public ListIterator<E> from(E elem) {<newline46mondego>    Node e = m.get(elem);<newline46mondego>    if (e == null) {<newline46mondego>        throw new NoSuchElementException(<doubleQuotes46>the given element isn't part of the set<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return new LinkedKeyIterator(e);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public ListIterator<E> iterator() {<newline46mondego>    return new LinkedKeyIterator();<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Returns true if the value target was added before (exclusive) limitElem<newline46mondego> * in insertion order.<newline46mondego> *<newline46mondego> * If target or limit are not present on the set this method returns false<newline46mondego> *<newline46mondego> * @param limitElem a E that may be a element of the set or not.<newline46mondego> * @return if target was added before limit (can be reset by removing and<newline46mondego> * re-adding the target, that changes iteration order).<newline46mondego> */<newline46mondego>public boolean containsBefore(E target, E limitElem) {<newline46mondego>    if (isEmpty()) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    Integer targetN = m.get(target).relativeLocation;<newline46mondego>    Integer highN = m.get(limitElem).relativeLocation;<newline46mondego>    return targetN != null && highN != null && targetN < highN;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Returns true if the value target was added after (exclusive) previousElem<newline46mondego> * in insertion order.<newline46mondego> *<newline46mondego> * If target or previous are not present on the set this method returns<newline46mondego> * false<newline46mondego> *<newline46mondego> * @param previousElem a E that may be a element of the set or not.<newline46mondego> * @return if target was added before previous (can be reset by removing and<newline46mondego> * re-adding the target, that changes iteration order).<newline46mondego> */<newline46mondego>public boolean containsAfter(E target, E previousElem) {<newline46mondego>    if (isEmpty()) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    Integer targetN = m.get(target).relativeLocation;<newline46mondego>    Integer low = m.get(previousElem).relativeLocation;<newline46mondego>    return targetN != null && low != null && low < targetN;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean add(E e) {<newline46mondego>    if (!m.containsKey(e)) {<newline46mondego>        Node n = new Node(e, monotonicallyIncreasing);<newline46mondego>        monotonicallyIncreasing += iteratorAddStep;<newline46mondego>        n.addBefore(head);//insertion order<newline46mondego>        m.put(e, n);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public int size() {<newline46mondego>    return m.size();<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean isEmpty() {<newline46mondego>    return m.isEmpty();<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean contains(Object o) {<newline46mondego>    return m.containsKey(o);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public Object[] toArray() {<newline46mondego>    Object[] result = new Object[size()];<newline46mondego>    int i = 0;<newline46mondego>    for (E e : this) {<newline46mondego>        result[i++] = e;<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>public <T> T[] toArray(T[] a) {<newline46mondego>    int size = size();<newline46mondego>    if (a.length < size) {<newline46mondego>        a = (T[]) java.lang.reflect.Array.newInstance(a.getClass().getComponentType(), size);<newline46mondego>    }<newline46mondego>    int i = 0;<newline46mondego>    Object[] result = a;<newline46mondego>    for (E e : this) {<newline46mondego>        result[i++] = e;<newline46mondego>    }<newline46mondego>    if (a.length > size) {<newline46mondego>        //peculiar toArray contract where it doesn't care about the rest<newline46mondego>        a[size] = null;<newline46mondego>    }<newline46mondego>    return a;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean remove(Object o) {<newline46mondego>    Node n = m.remove(o);<newline46mondego>    if (n != null) {<newline46mondego>        n.remove();<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean addAll(Collection<? extends E> c) {<newline46mondego>    boolean changed = false;<newline46mondego>    for (E e : c) {<newline46mondego>        changed |= add(e);<newline46mondego>    }<newline46mondego>    return changed;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean containsAll(Collection<?> c) {<newline46mondego>    boolean all = true;<newline46mondego>    for (Object e : c) {<newline46mondego>        all &= m.containsKey(e);<newline46mondego>    }<newline46mondego>    return all;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean retainAll(Collection<?> c) {<newline46mondego>    boolean changed = false;<newline46mondego>    Iterator<E> it = iterator();<newline46mondego>    while (it.hasNext()) {<newline46mondego>        E k = it.next();<newline46mondego>        if (!c.contains(k)) {<newline46mondego>            it.remove();<newline46mondego>            changed = true;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return changed;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void clear() {<newline46mondego>    modCount++;<newline46mondego>    head.after = head.before = head;<newline46mondego>    m.clear();<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public String toString() {<newline46mondego>    return  m.keySet().toString();<newline46mondego>}<newline46mondego><newline46mondego>//linkedlist node class<newline46mondego>protected final class Node {<newline46mondego><newline46mondego>    Node before, after;<newline46mondego>    int relativeLocation;<newline46mondego>    //needed for map removal during iteration<newline46mondego>    E key;<newline46mondego><newline46mondego>    private void remove() {<newline46mondego>        before.after = after;<newline46mondego>        after.before = before;<newline46mondego>        modCount++;<newline46mondego>    }<newline46mondego><newline46mondego>    private void addBefore(Node existingEntry) {<newline46mondego>        after = existingEntry;<newline46mondego>        before = existingEntry.before;<newline46mondego>        before.after = this;<newline46mondego>        after.before = this;<newline46mondego>        modCount++;<newline46mondego>    }<newline46mondego><newline46mondego>    //head const<newline46mondego>    public Node() {<newline46mondego>        after = before = this;<newline46mondego>        relativeLocation = 0;<newline46mondego>    }<newline46mondego><newline46mondego>    public Node(E key, int value) {<newline46mondego>        this.key = key;<newline46mondego>        this.relativeLocation = value;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>protected class LinkedKeyIterator implements ListIterator<E> {<newline46mondego><newline46mondego>    Node nextEntry;<newline46mondego>    Node lastReturned;<newline46mondego>    int expectedModCount = modCount;<newline46mondego><newline46mondego>    public LinkedKeyIterator() {<newline46mondego>        nextEntry = head.after;<newline46mondego>    }<newline46mondego><newline46mondego>    public LinkedKeyIterator(Node startAt) {<newline46mondego>        nextEntry = startAt;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean hasPrevious() {<newline46mondego>        return nextEntry.before != head;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean hasNext() {<newline46mondego>        return nextEntry != head;<newline46mondego>    }<newline46mondego><newline46mondego>    public E next() {<newline46mondego>        if (modCount != expectedModCount) {<newline46mondego>            throw new ConcurrentModificationException();<newline46mondego>        }<newline46mondego>        if (nextEntry == head) {<newline46mondego>            throw new NoSuchElementException();<newline46mondego>        }<newline46mondego><newline46mondego>        Node e = lastReturned = nextEntry;<newline46mondego>        nextEntry = e.after;<newline46mondego>        return e.key;<newline46mondego>    }<newline46mondego><newline46mondego>    public E previous() {<newline46mondego>        if (modCount != expectedModCount) {<newline46mondego>            throw new ConcurrentModificationException();<newline46mondego>        }<newline46mondego>        if (nextEntry.before == head) {<newline46mondego>            throw new NoSuchElementException();<newline46mondego>        }<newline46mondego><newline46mondego>        Node e = lastReturned = nextEntry.before;<newline46mondego>        nextEntry = e;<newline46mondego>        return e.key;<newline46mondego>    }<newline46mondego><newline46mondego>    public void remove() {<newline46mondego>        if (lastReturned == null) {<newline46mondego>            throw new IllegalStateException();<newline46mondego>        }<newline46mondego>        if (modCount != expectedModCount) {<newline46mondego>            throw new ConcurrentModificationException();<newline46mondego>        }<newline46mondego>        m.remove(lastReturned.key);<newline46mondego>        nextEntry = lastReturned.after;<newline46mondego>        lastReturned.remove();<newline46mondego>        lastReturned = null;<newline46mondego>        expectedModCount = modCount;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void set(E e) {<newline46mondego>        if (lastReturned == null) {<newline46mondego>            throw new IllegalStateException();<newline46mondego>        }<newline46mondego>        if (modCount != expectedModCount) {<newline46mondego>            throw new ConcurrentModificationException();<newline46mondego>        }<newline46mondego>        if (lastReturned.key.equals(e)) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        //remove mapping for key since we are changing it<newline46mondego>        m.remove(lastReturned.key);<newline46mondego>        //put in the new one<newline46mondego>        lastReturned.key = e;<newline46mondego>        Node previousKeyOwner = m.put(e, lastReturned);<newline46mondego>        if (previousKeyOwner != null) {<newline46mondego>            //as it is a list mutation call, guard against stale iterator<newline46mondego>            if(nextEntry == previousKeyOwner){<newline46mondego>                nextEntry = nextEntry.after;<newline46mondego>            }<newline46mondego>            previousKeyOwner.remove();<newline46mondego>        }<newline46mondego>        //from m.remove and m.put, may help with 2 concurrent iterators on this instance<newline46mondego>        //this method may not change modCount if previousKeyOwner is null<newline46mondego>        expectedModCount = ++modCount;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void add(E e) {<newline46mondego>        if (modCount != expectedModCount) {<newline46mondego>            throw new ConcurrentModificationException();<newline46mondego>        }<newline46mondego>        //calculate a good relative location, updating subsequent ones if needed<newline46mondego>        int candidateLoc = nextEntry.before.relativeLocation + 1;<newline46mondego>        //opsss, it's full<newline46mondego>        if (candidateLoc == nextEntry.relativeLocation) {<newline46mondego>            iteratorAddStep *= 1.6;<newline46mondego>            for (Node current = nextEntry; current != head; current = current.after) {<newline46mondego>                current.relativeLocation = current.relativeLocation + iteratorAddStep;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        Node n = m.get(e);<newline46mondego>        if (n == null) {<newline46mondego>            n = new Node(e, candidateLoc);<newline46mondego>            m.put(e, n);<newline46mondego>        } else {<newline46mondego>            n.relativeLocation = candidateLoc;<newline46mondego>            //as it is a list mutation call, guard against stale iterator<newline46mondego>            if(nextEntry == n){<newline46mondego>                nextEntry = nextEntry.after;<newline46mondego>            }<newline46mondego>            n.remove();<newline46mondego>        }<newline46mondego>        n.addBefore(nextEntry);<newline46mondego>        expectedModCount = modCount;//add before changes modCount<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int nextIndex() {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>Not supported yet.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int previousIndex() {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>Not supported yet.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"1074splitHere46","12023224splitHere46","System.out.print(thingy)"
"1075splitHere46","12023224splitHere46","thingy.toString()"
"1076splitHere46","12023224splitHere46","toString()"
"1077splitHere46","12023224splitHere46","JPanel"
"1078splitHere46","12023224splitHere46","java.awt.Component"
"1079splitHere46","12023224splitHere46","public String toString() {<newline46mondego>    return getClass().getName() + <doubleQuotes46>[<doubleQuotes46> + paramString() + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"1080splitHere46","12023224splitHere46","protected String paramString()"
"1081splitHere46","12023224splitHere46","JPanel"
"1082splitHere46","12023224splitHere46","/**<newline46mondego> * Returns a string representation of this JPanel. This method <newline46mondego> * is intended to be used only for debugging purposes, and the <newline46mondego> * content and format of the returned string may vary between      <newline46mondego> * implementations. The returned string may be empty but may not <newline46mondego> * be <code>null</code>.<newline46mondego> * <newline46mondego> * @return  a string representation of this JPanel.<newline46mondego> */<newline46mondego>protected String paramString() {<newline46mondego>    return super.paramString();<newline46mondego>}<newline46mondego>"
"1083splitHere46","12023224splitHere46","JCompomnent"
"1084splitHere46","12023224splitHere46","JPanel"
"1085splitHere46","12023224splitHere46","toString()"
"1086splitHere46","12023224splitHere46","java.awt.Component"
"1087splitHere46","12023224splitHere46","paramString()"
"1088splitHere46","12023224splitHere46","protected String paramString() {<newline46mondego>    String preferredSizeString = (isPreferredSizeSet() ?<newline46mondego>                  getPreferredSize().toString() : <doubleQuotes46><doubleQuotes46>);<newline46mondego>    String minimumSizeString = (isMinimumSizeSet() ?<newline46mondego>                getMinimumSize().toString() : <doubleQuotes46><doubleQuotes46>);<newline46mondego>    String maximumSizeString = (isMaximumSizeSet() ?<newline46mondego>                getMaximumSize().toString() : <doubleQuotes46><doubleQuotes46>);<newline46mondego>    String borderString = (border != null ?<newline46mondego>               border.toString() : <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    return super.paramString() +<newline46mondego>    <doubleQuotes46>,alignmentX=<doubleQuotes46> + alignmentX +<newline46mondego>    <doubleQuotes46>,alignmentY=<doubleQuotes46> + alignmentY +<newline46mondego>    <doubleQuotes46>,border=<doubleQuotes46> + borderString +<newline46mondego><doubleQuotes46>,flags=<doubleQuotes46> + flags +             // should beef this up a bit<newline46mondego>    <doubleQuotes46>,maximumSize=<doubleQuotes46> + maximumSizeString +<newline46mondego>    <doubleQuotes46>,minimumSize=<doubleQuotes46> + minimumSizeString +<newline46mondego>    <doubleQuotes46>,preferredSize=<doubleQuotes46> + preferredSizeString;<newline46mondego>}<newline46mondego>"
"1089splitHere46","12023224splitHere46","super.paramString()"
"1090splitHere46","12023224splitHere46","java.awt.Container"
"1091splitHere46","12023224splitHere46","protected String paramString() {<newline46mondego>String str = super.paramString();<newline46mondego>LayoutManager layoutMgr = this.layoutMgr;<newline46mondego>if (layoutMgr != null) {<newline46mondego>    str += <doubleQuotes46>,layout=<doubleQuotes46> + layoutMgr.getClass().getName();<newline46mondego>}<newline46mondego>return str;<newline46mondego>}<newline46mondego>"
"1092splitHere46","12023224splitHere46","super.paramString()"
"1093splitHere46","12023224splitHere46","java.awt.Component"
"1094splitHere46","12023224splitHere46","protected String paramString() {<newline46mondego>    String thisName = getName();<newline46mondego>    String str = (thisName != null? thisName : <doubleQuotes46><doubleQuotes46>) + <doubleQuotes46>,<doubleQuotes46> + x + <doubleQuotes46>,<doubleQuotes46> + y + <doubleQuotes46>,<doubleQuotes46> + width + <doubleQuotes46>x<doubleQuotes46> + height;<newline46mondego>    if (!isValid()) {<newline46mondego>        str += <doubleQuotes46>,invalid<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    if (!visible) {<newline46mondego>        str += <doubleQuotes46>,hidden<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    if (!enabled) {<newline46mondego>        str += <doubleQuotes46>,disabled<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    return str;<newline46mondego>}<newline46mondego>"
"1095splitHere46","12023224splitHere46","invalid"
"1096splitHere46","12023224splitHere46","/**<newline46mondego> * Determines whether this component is valid. A component is valid<newline46mondego> * when it is correctly sized and positioned within its parent<newline46mondego> * container and all its children are also valid. <newline46mondego> * In order to account for peers' size requirements, components are invalidated<newline46mondego> * before they are first shown on the screen. By the time the parent container <newline46mondego> * is fully realized, all its components will be valid.<newline46mondego> * @return <code>true</code> if the component is valid, <code>false</code><newline46mondego> * otherwise<newline46mondego> * @see #validate<newline46mondego> * @see #invalidate<newline46mondego> * @since JDK1.0<newline46mondego> */<newline46mondego>public boolean isValid() {<newline46mondego>    return (peer != null) && valid;<newline46mondego>}<newline46mondego>"
"1097splitHere46","12023224splitHere46","valid"
"1098splitHere46","12023325splitHere46","Container.setFocusTraversalKeys"
"1099splitHere46","12023325splitHere46","Container root = ...<newline46mondego>// pressed TAB, control pressed TAB<newline46mondego>Set<AWTKeyStroke> defaultKeys = root.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS);<newline46mondego>// since defaultKeys is unmodifiable<newline46mondego>Set<AWTKeyStroke> newKeys = new HashSet<>(defaultKeys); <newline46mondego>newKeys.add(KeyStroke.getKeyStroke(<doubleQuotes46>pressed ENTER<doubleQuotes46>));<newline46mondego>root.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, newKeys);<newline46mondego>"
"1100splitHere46","12023338splitHere46","@POST<newline46mondego>@Path(<doubleQuotes46>/upload<doubleQuotes46>)<newline46mondego>@Consumes(MediaType.MULTIPART_FORM_DATA)<newline46mondego>public Response uploadFile(<newline46mondego>    @FormDataParam(<doubleQuotes46>file<doubleQuotes46>) InputStream uploadedInputStream,<newline46mondego>    @FormDataParam(<doubleQuotes46>file<doubleQuotes46>) FormDataContentDisposition fileDetail) {<newline46mondego><newline46mondego>    String uploadedFileLocation = <doubleQuotes46>d://uploaded/<doubleQuotes46> + fileDetail.getFileName();<newline46mondego><newline46mondego>    // save it<newline46mondego>    writeToFile(uploadedInputStream, uploadedFileLocation);<newline46mondego><newline46mondego>    String output = <doubleQuotes46>File uploaded to : <doubleQuotes46> + uploadedFileLocation;<newline46mondego><newline46mondego>    return Response.status(200).entity(output).build();<newline46mondego>}<newline46mondego>"
"1101splitHere46","12023406splitHere46","bicycle"
"1102splitHere46","12023406splitHere46","public void someMethod(String arg1, String arg2);<newline46mondego>"
"1103splitHere46","12023406splitHere46","someMethod"
"1104splitHere46","12023406splitHere46","public MountainBike(String arg1, String arg2) {<newline46mondego>   someMethod(arg1, arg2);<newline46mondego>}<newline46mondego>"
"1105splitHere46","12023406splitHere46","public class MegaMountainBike extends BicycleParts implements bicycle {<newline46mondego><newline46mondego>   public MegaMountainBike() {<newline46mondego><newline46mondego>      super(<doubleQuotes46>Comfy Saddle<doubleQuotes46>);<newline46mondego>      // do other stuff<newline46mondego>   }<newline46mondego>"
"1106splitHere46","12023421splitHere46","FrameLayout.LayoutParams adsParams =new FrameLayout.LayoutParams(FrameLayout.LayoutParams.FILL_PARENT, <newline46mondego>            FrameLayout.LayoutParams.WRAP_CONTENT, android.view.Gravity.TOP|android.view.Gravity.CENTER_HORIZONTAL); <newline46mondego><newline46mondego>    layout.addView(adView, adsParams);<newline46mondego>"
"1107splitHere46","12023444splitHere46","Foo"
"1108splitHere46","12023444splitHere46","Foo"
"1109splitHere46","12023444splitHere46","Foo"
"1110splitHere46","12023505splitHere46","health"
"1111splitHere46","12023505splitHere46","Cards"
"1112splitHere46","12023505splitHere46","Cards"
"1113splitHere46","12023505splitHere46","Cards"
"1114splitHere46","12023505splitHere46","health"
"1115splitHere46","12023505splitHere46","TheLarionCard"
"1116splitHere46","12023505splitHere46","System.out.println(((TheLarionCard)playerHand.get(1).health));<newline46mondego>"
"1117splitHere46","12023505splitHere46","TheLarionCard"
"1118splitHere46","12023505splitHere46","Cards"
"1119splitHere46","12023505splitHere46","Cards"
"1120splitHere46","12023505splitHere46","Cards"
"1121splitHere46","12023505splitHere46","public class Card {<newline46mondego>    String type;<newline46mondego><newline46mondego>    public Card(String inType) {<newline46mondego>        this.type = inType;<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>This is a <doubleQuotes46> + type;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1122splitHere46","12023505splitHere46","type"
"1123splitHere46","12023505splitHere46","public void awesomeMethod() {<newline46mondego>    if (<doubleQuotes46>TheLarionCard<doubleQuotes46>.equals(type)) {<newline46mondego>        // execute TheLarionCard code<newline46mondego>    } else if (<doubleQuotes46>WolfCard<doubleQuotes46>.equals(type)) {<newline46mondego>        // execute WolfCard code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1124splitHere46","12023515splitHere46","public class MyActivity extends Activity{<newline46mondego><newline46mondego>     ListView mListView;<newline46mondego>     ArrayAdapter<User> mAdapter;<newline46mondego><newline46mondego>     public void onCreate(Bundle savedInstanceState){<newline46mondego>          super.onCreate(savedInstanceState);<newline46mondego>          setContentView(R.layout.main);<newline46mondego><newline46mondego>          //get the listview from xml. I think you know how to layout half and half...<newline46mondego>          mListView = (ListView)findViewById(R.id.list);<newline46mondego>          mAdapter = new ArrayAdapter<User>(this,R.id.userviewlayout){<newline46mondego><newline46mondego>               @Override<newline46mondego>               public View getView(){<newline46mondego>                    //here is where you add the code to inflate and display a view for a single user<newline46mondego>               }<newline46mondego>          };<newline46mondego><newline46mondego>          for(User user : Users)<newline46mondego>               mAdapter.add(user);<newline46mondego><newline46mondego>          mListView.setAdapter(mAdapter);<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"1125splitHere46","12023551splitHere46","double a = Double.parseDouble(some user input);<newline46mondego>double b = Double.parseDouble(some user input);<newline46mondego>String operation = some user input; // i.e. <doubleQuotes46>add<doubleQuotes46>, <doubleQuotes46>subtract<doubleQuotes46><newline46mondego>Method operator = Calculations.class.getMethod(operation, double.class, double.class);<newline46mondego>// NoSuchMethodException is thrown if method of operation name isn't found<newline46mondego>double result = (Double) operator.invoke(null, a, b);<newline46mondego>"
"1126splitHere46","12023551splitHere46","public static double add(double a, double b) {<newline46mondego>    return a + b;<newline46mondego>}<newline46mondego><newline46mondego>public static double subtract(double a, double b) {<newline46mondego>    return a - b;<newline46mondego>}<newline46mondego><newline46mondego>// and so forth<newline46mondego>"
"1127splitHere46","12023972splitHere46","IllegalMonitorStateException"
"1128splitHere46","12023972splitHere46","wait"
"1129splitHere46","12023972splitHere46","counthrd"
"1130splitHere46","12023972splitHere46","counthrd cnt1 = new counthrd();<newline46mondego>counthrd cnthrd1 = new counthrd(<doubleQuotes46>thrd 1<doubleQuotes46>, cnt1);<newline46mondego>"
"1131splitHere46","12023972splitHere46","suspendme"
"1132splitHere46","12023972splitHere46","resumeme"
"1133splitHere46","12023972splitHere46","Thread.sleep(1000);<newline46mondego>System.out.println(<doubleQuotes46>going to wait mode<doubleQuotes46>);<newline46mondego>cnt1.suspendme();<newline46mondego>Thread.sleep(1000);<newline46mondego>System.out.println(<doubleQuotes46>resuming<doubleQuotes46>);<newline46mondego>cnt1.resumeme();<newline46mondego>Thread.sleep(1000);<newline46mondego>"
"1134splitHere46","12023972splitHere46","cnt1"
"1135splitHere46","12023972splitHere46","counthrd() {<newline46mondego>}<newline46mondego>"
"1136splitHere46","12023972splitHere46","cnt1"
"1137splitHere46","12023972splitHere46","cnthrd1"
"1138splitHere46","12023972splitHere46","counthrd(String s, counthrd cnt1) {<newline46mondego>    thrd = new Thread(this, s);<newline46mondego>    this.cnt1 = cnt1;<newline46mondego>    thrd.start();<newline46mondego>    x = s;<newline46mondego>}<newline46mondego>"
"1139splitHere46","12023972splitHere46","suspended"
"1140splitHere46","12023972splitHere46","cnt1"
"1141splitHere46","12023972splitHere46","cnthrd1"
"1142splitHere46","12023972splitHere46","cnt1.suspended"
"1143splitHere46","12023972splitHere46","cnthrd1"
"1144splitHere46","12023972splitHere46","wait"
"1145splitHere46","12023972splitHere46","suspendme"
"1146splitHere46","12023972splitHere46","resumeme"
"1147splitHere46","12023972splitHere46","cnthrd1"
"1148splitHere46","12023972splitHere46","C:\dev\scrap>javac counter.java<newline46mondego><newline46mondego>C:\dev\scrap>java counter<newline46mondego>Starting thrd 1<newline46mondego>1  2  3  4  5  6  7  8  9  10<newline46mondego>11  12  13  14  15  16  17  18  19  20<newline46mondego>going to wait mode<newline46mondego>going to wait mode<newline46mondego>java.lang.IllegalMonitorStateException<newline46mondego>resuming<newline46mondego>"
"1149splitHere46","12023972splitHere46","suspended"
"1150splitHere46","12023972splitHere46","volatile"
"1151splitHere46","12023972splitHere46","cnthrd1"
"1152splitHere46","12023972splitHere46","suspended"
"1153splitHere46","12023972splitHere46","cnt1"
"1154splitHere46","12023972splitHere46","Thread.currentThread"
"1155splitHere46","12023972splitHere46","thrd"
"1156splitHere46","12023972splitHere46","Thread.currentThread"
"1157splitHere46","12023972splitHere46","counthrd.x"
"1158splitHere46","12023972splitHere46","thrd.getName"
"1159splitHere46","12023972splitHere46","x"
"1160splitHere46","12023972splitHere46","x"
"1161splitHere46","12023972splitHere46","name"
"1162splitHere46","12023972splitHere46","thrd"
"1163splitHere46","12023972splitHere46","thread"
"1164splitHere46","12023972splitHere46","counthrd"
"1165splitHere46","12023972splitHere46","CountingThread"
"1166splitHere46","12023972splitHere46","notify"
"1167splitHere46","12023972splitHere46","resumeme"
"1168splitHere46","12023972splitHere46","suspendme"
"1169splitHere46","12023972splitHere46","notify"
"1170splitHere46","12023972splitHere46","suspendme"
"1171splitHere46","12023972splitHere46","InterruptedException"
"1172splitHere46","12023972splitHere46","(i % 10) == 0"
"1173splitHere46","12023972splitHere46","notify"
"1174splitHere46","12023972splitHere46","while (suspended)"
"1175splitHere46","12023972splitHere46","while"
"1176splitHere46","12023972splitHere46","if"
"1177splitHere46","12023972splitHere46","synchronized (this)"
"1178splitHere46","12023972splitHere46","while"
"1179splitHere46","12023972splitHere46","thrd.start()"
"1180splitHere46","12023972splitHere46","suspend"
"1181splitHere46","12023972splitHere46","synchronized"
"1182splitHere46","12023972splitHere46","resume"
"1183splitHere46","12023972splitHere46","synchronized"
"1184splitHere46","12023972splitHere46","wait"
"1185splitHere46","12023972splitHere46","notify"
"1186splitHere46","12024009splitHere46","public class ThreadData {<newline46mondego>    public static final ThreadLocal<String> data = new ThreadLocal<String>();<newline46mondego>}<newline46mondego><newline46mondego>public class InitializingThread extends Thread {<newline46mondego>    public InitializingThread(Runnable r) {<newline46mondego>        super(r);<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        ThreadData.data.set(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>        super.run();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class InitializingThreadFactory implements ThreadFactory {<newline46mondego>    public Thread newThread(Runnable r) {<newline46mondego>        return new InitializingThread(r);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>ThreadPoolExecutor executor = ...;<newline46mondego>executor.setThreadFactory(new InitializingThreadFactory());<newline46mondego>executor.execute(...);<newline46mondego>"
"1187splitHere46","12024009splitHere46","public void run() {<newline46mondego>     String s = ThreadData.data.get();<newline46mondego>}<newline46mondego>"
"1188splitHere46","12024018splitHere46","protected void onActivityResult(int requestCode,int resultCode, Intent data) {<newline46mondego> super.onActivityResult(requestCode, data);<newline46mondego><newline46mondego> setResult(resultCode,resultData);<newline46mondego><newline46mondego> finish();<newline46mondego>}<newline46mondego>"
"1189splitHere46","12024132splitHere46","x"
"1190splitHere46","12024132splitHere46","x"
"1191splitHere46","12024132splitHere46","x"
"1192splitHere46","12024132splitHere46","private static int x;<newline46mondego>static {<newline46mondego>    x = 5;<newline46mondego>}<newline46mondego>"
"1193splitHere46","12024132splitHere46","private static int x = 5;<newline46mondego>"
"1194splitHere46","12024132splitHere46","private static List<List<String>> x = new ArrayList<List<String>>();<newline46mondego>static {<newline46mondego>    for (int i = 0 ; i != 10 ; i++) {<newline46mondego>        x.add(new ArrayList<String>(20));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1195splitHere46","12024138splitHere46","Button findMovie"
"1196splitHere46","12024138splitHere46","id"
"1197splitHere46","12024138splitHere46","Button"
"1198splitHere46","12024138splitHere46","findMovie = (Button) findViewById(R.id.findMovieButton);<newline46mondego>"
"1199splitHere46","12024409splitHere46","AsyncTask"
"1200splitHere46","12024435splitHere46","<uses-library android:name=<doubleQuotes46>com.google.android.maps<doubleQuotes46>/><newline46mondego>"
"1201splitHere46","12024517splitHere46","findViewById"
"1202splitHere46","12024517splitHere46","ListView"
"1203splitHere46","12024517splitHere46","onContextItemSelected"
"1204splitHere46","12024517splitHere46","case R.id.edit:<newline46mondego>    Intent newData = new Intent(Lab8_082588.this, Lab8_082588Edit.class);<newline46mondego>    // I hope you implemented the adapter correctly<newline46mondego>    Lab8_082588FetchDetails item = (Lab8_082588FetchDetails) getListView().getItemAtPosition(info.position); <newline46mondego>    String startTitle = item.getTitle();<newline46mondego>    String startGross = item.getGross();<newline46mondego>    String startDate = item.getDate();<newline46mondego><newline46mondego>    newData.putExtra(Lab8_082588Edit.TITLE_STRING, startTitle);<newline46mondego>    newData.putExtra(Lab8_082588Edit.GROSS_STRING, startGross);<newline46mondego>    newData.putExtra(Lab8_082588Edit.DATE_STRING, startDate);<newline46mondego>    startActivityForResult(newData, Lab8_082588.EDIT_MOVIE);<newline46mondego>    return true;<newline46mondego>"
"1205splitHere46","12024574splitHere46","<webapp><newline46mondego>  <servlet><newline46mondego>    <servlet-name>testServlet</servlet-name><newline46mondego>    <servlet-class>Logic.testServlet</servlet-class><newline46mondego>  </servlet><newline46mondego><newline46mondego>  <servlet-mapping><newline46mondego>    <servlet-name>testServlet</servlet-name><newline46mondego>    <url-pattern>/testServlet</url-pattern><newline46mondego>  </servlet-mapping><newline46mondego></web-app><newline46mondego>"
"1206splitHere46","12024630splitHere46","Adapter"
"1207splitHere46","12024630splitHere46","AsyncTask"
"1208splitHere46","12024630splitHere46","this"
"1209splitHere46","12024630splitHere46","AsyncTask"
"1210splitHere46","12024630splitHere46","AsyncTask"
"1211splitHere46","12024630splitHere46","Activity"
"1212splitHere46","12024630splitHere46","this"
"1213splitHere46","12024630splitHere46","Activity.this"
"1214splitHere46","12024630splitHere46","Activity"
"1215splitHere46","12024630splitHere46","AsyncTask"
"1216splitHere46","12024630splitHere46","Adapter"
"1217splitHere46","12024709splitHere46","Thread W        w1 ----> w2<newline46mondego>                |<newline46mondego>                 \<newline46mondego>Thread R     r0 ----> r1<newline46mondego>"
"1218splitHere46","12024760splitHere46","EditText"
"1219splitHere46","12024760splitHere46","EditText txt = (EditText)findViewById(R.id.editText3);<newline46mondego>String input = txt.getText().toString();<newline46mondego>"
"1220splitHere46","12024760splitHere46","Intent i = new Intent(getApplicationContext(), NewActivity.class);<newline46mondego>i.putExtra(<doubleQuotes46>input<doubleQuotes46>,input);<newline46mondego>startActivity(i);<newline46mondego>"
"1221splitHere46","12024760splitHere46","NewActivity"
"1222splitHere46","12024760splitHere46","onCreate()"
"1223splitHere46","12024760splitHere46","Intent i = getIntent();<newline46mondego>String input = i.getStringExtra(<doubleQuotes46>input<doubleQuotes46>);<newline46mondego>"
"1224splitHere46","12024760splitHere46","TextView"
"1225splitHere46","12024760splitHere46","TextView txtView = (TextView)findViewById(R.id.yourTextView);<newline46mondego>txtView.setText(input);<newline46mondego>"
"1226splitHere46","12024924splitHere46","public synchronized void update(HashMap<String, Comparable<Object>> data)<newline46mondego>"
"1227splitHere46","12024924splitHere46","Object"
"1228splitHere46","12024924splitHere46","String"
"1229splitHere46","12024924splitHere46","Integer"
"1230splitHere46","12024924splitHere46","Map"
"1231splitHere46","12024924splitHere46","HashMap"
"1232splitHere46","12024924splitHere46","Comparable"
"1233splitHere46","12024924splitHere46","Map<String, Object>"
"1234splitHere46","12024924splitHere46","String"
"1235splitHere46","12024924splitHere46","Integer"
"1236splitHere46","12024924splitHere46","public synchronized void update(HashMap<String, Integer> data)<newline46mondego>"
"1237splitHere46","12025056splitHere46","null"
"1238splitHere46","12025056splitHere46","null"
"1239splitHere46","12025056splitHere46","int j;<newline46mondego>for (j = 0; j < accnums.length; j++)<newline46mondego>  if (accnums[j] == null) break;<newline46mondego>if (j==accnums.length)  {<newline46mondego>  // error msg, the array is already full<newline46mondego>} else { <newline46mondego>  //insert element into index j<newline46mondego>}<newline46mondego>"
"1240splitHere46","12025066splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><selector xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46>><newline46mondego><newline46mondego><item android:state_window_focused=<doubleQuotes46>false<doubleQuotes46> android:state_enabled=<doubleQuotes46>true<doubleQuotes46> android:drawable=<doubleQuotes46>@drawable/textfield_default_holo_dark<doubleQuotes46> /><newline46mondego><item android:state_window_focused=<doubleQuotes46>false<doubleQuotes46> android:state_enabled=<doubleQuotes46>false<doubleQuotes46> android:drawable=<doubleQuotes46>@drawable/textfield_disabled_holo_dark<doubleQuotes46> /><newline46mondego><item android:state_enabled=<doubleQuotes46>true<doubleQuotes46> android:state_focused=<doubleQuotes46>true<doubleQuotes46> android:drawable=<doubleQuotes46>@drawable/textfield_activated_holo_dark<doubleQuotes46> /><newline46mondego><item android:state_enabled=<doubleQuotes46>true<doubleQuotes46> android:state_activated=<doubleQuotes46>true<doubleQuotes46> android:drawable=<doubleQuotes46>@drawable/textfield_focused_holo_dark<doubleQuotes46> /><newline46mondego><item android:state_enabled=<doubleQuotes46>true<doubleQuotes46> android:drawable=<doubleQuotes46>@drawable/textfield_default_holo_dark<doubleQuotes46> /><newline46mondego><item android:state_focused=<doubleQuotes46>true<doubleQuotes46> android:drawable=<doubleQuotes46>@drawable/textfield_disabled_focused_holo_dark<doubleQuotes46> /><newline46mondego><item android:drawable=<doubleQuotes46>@drawable/textfield_disabled_holo_dark<doubleQuotes46> /><newline46mondego></selector><newline46mondego>"
"1241splitHere46","12025066splitHere46","<style name=<doubleQuotes46>EditTextHoloDark<doubleQuotes46> parent=<doubleQuotes46>android:style/Widget.EditText<doubleQuotes46>><newline46mondego>    <item name=<doubleQuotes46>android:background<doubleQuotes46>>@drawable/edit_text_holo_dark</item><newline46mondego>    <item name=<doubleQuotes46>android:textColor<doubleQuotes46>>#ffffff</item><newline46mondego></style><newline46mondego>"
"1242splitHere46","12025288splitHere46","StringBuilder"
"1243splitHere46","12025288splitHere46","String"
"1244splitHere46","12025288splitHere46","byte[] buffer = new byte[8192];  // 8-KB buffer<newline46mondego>//...<newline46mondego>browserInput.read(buffer);<newline46mondego>//...<newline46mondego>request.append(new String(buffer, 0, read));<newline46mondego>//...<newline46mondego>serverOutput.write(request.toString().getBytes());<newline46mondego>"
"1245splitHere46","12025288splitHere46","String"
"1246splitHere46","12025288splitHere46","byte[]"
"1247splitHere46","12025288splitHere46","Executors.newCachedThreadPool()"
"1248splitHere46","12025288splitHere46","Executors.newFixedThreadPool(100)"
"1249splitHere46","12025340splitHere46","sun.tools.jconsole.inspector.Utils.isEditable(String type)"
"1250splitHere46","12025457splitHere46","static bool OddIsPrime (long oddvalue)  // test an odd >= 3 <newline46mondego>{<newline46mondego>    // Only test odd divisors.<newline46mondego>    for (long i = 3; i <= Math.Sqrt(oddvalue); i += 2)<newline46mondego>    {<newline46mondego>        if (value % i == 0)<newline46mondego>            return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>static void Main(string[] args)<newline46mondego>{<newline46mondego>    long max = 600851475143;   // an odd value<newline46mondego>    long maxFactor = 0;<newline46mondego><newline46mondego>    // Only test odd divisors of MAX. Limit search to Square Root of MAX.<newline46mondego>    for (long i = 3; i <= Math.Sqrt(max); i += 2)<newline46mondego>    {<newline46mondego>        if (max % i == 0)<newline46mondego>        {<newline46mondego>            if (OddIsPrime(i))  // i is odd<newline46mondego>            {<newline46mondego>                maxFactor = i;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    Console.WriteLine(maxFactor.ToString());<newline46mondego>    Console.ReadLine();<newline46mondego>}<newline46mondego>"
"1251splitHere46","12025570splitHere46","@Scope(ScopeConstants.PERTHREAD)"
"1252splitHere46","12025570splitHere46","@Inject"
"1253splitHere46","12025570splitHere46","public static void bind(ServiceBinder binder) {<newline46mondego>    binder.bind(ServiceInterface.class, ServiceImplementation.class)<newline46mondego>}<newline46mondego>"
"1254splitHere46","12025570splitHere46","@Inject"
"1255splitHere46","12025570splitHere46","@Inject<newline46mondego>private ServiceInterface service;<newline46mondego>"
"1256splitHere46","12025570splitHere46","/**<newline46mondego> * These methods may in them selves take bound services as arguments helping you build your new service<newline46mondego> */<newline46mondego>public ServiceInterface buildServiceInterface(AnotherBoundService service2) {<newline46mondego>    ...<newline46mondego>    return new ServiceImplementation(service2, someMoreArgsIfRequired)<newline46mondego>}<newline46mondego>"
"1257splitHere46","12025601splitHere46","hash_hmac"
"1258splitHere46","12025634splitHere46","getCheckedItemPosition()"
"1259splitHere46","12025634splitHere46","insertData"
"1260splitHere46","12025634splitHere46","onActivityResult"
"1261splitHere46","12025634splitHere46","insert"
"1262splitHere46","12025634splitHere46","private void insert(MenuItem item) {<newline46mondego>    AdapterContextMenuInfo info = (AdapterContextMenuInfo) item<newline46mondego>            .getMenuInfo();<newline46mondego>    Intent insertData = new Intent(Lab8_082588.this,<newline46mondego>            Lab8_082588Insert.class);<newline46mondego>    insertData.put(<doubleQuotes46>CURRENT_ROW<doubleQuotes46>, info.position);// there is no need for extra data, you're going to insert it anyway<newline46mondego>    startActivityForResult(insertData, Lab8_082588.INSERT_MOVIE);<newline46mondego>}<newline46mondego>"
"1263splitHere46","12025634splitHere46","//<newline46mondego>super.onCreate(savedInstanceState);<newline46mondego>setContentView(R.layout.addeditinsert);<newline46mondego>rowNumber = getIntent().getExtra(<doubleQuotes46>CURRENT_ROW<doubleQuotes46>);<newline46mondego>"
"1264splitHere46","12025634splitHere46","Intent"
"1265splitHere46","12025634splitHere46","hobby.putExtra(TITLE_STRING, title);<newline46mondego>    hobby.putExtra(GROSS_STRING, gross);<newline46mondego>    hobby.putExtra(DATE_STRING, date);<newline46mondego>    hobby.putExtra(<doubleQuotes46>PASSED_ROW<doubleQuotes46>, rowNumber);<newline46mondego>    setResult(RESULT_OK, hobby);<newline46mondego>    finish();<newline46mondego>"
"1266splitHere46","12025634splitHere46","onActivityResult"
"1267splitHere46","12025634splitHere46","results.add(data.getIntExtra(<doubleQuotes46>PASSED_ROW<doubleQuotes46>) + 1, insertMovie);<newline46mondego>"
"1268splitHere46","12025698splitHere46","Activity activity;<newline46mondego>"
"1269splitHere46","12025698splitHere46","activity = this;<newline46mondego>"
"1270splitHere46","12025698splitHere46","activity.finish();<newline46mondego>"
"1271splitHere46","12025838splitHere46","String username = args[0];<newline46mondego>String password = args[1];<newline46mondego>String xmlRpcUrl = args[2];<newline46mondego>Wordpress wp = new Wordpress(username, password, xmlRpcUrl);<newline46mondego>List<Page> recentPosts = wp.getRecentPosts(10);<newline46mondego>"
"1272splitHere46","12025859splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class JFrameTest extends JFrame {<newline46mondego><newline46mondego>        private JButton testButton;<newline46mondego>        private JPanel panelMain;<newline46mondego>        private JPanelOne panel;<newline46mondego><newline46mondego>        public JFrameTest() {<newline46mondego><newline46mondego>                // setting up JFrame<newline46mondego>                setLayout(null);<newline46mondego>                setPreferredSize(new Dimension(420, 90));<newline46mondego>                setResizable(false);<newline46mondego>                setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>                // creating main JPanel (white)<newline46mondego>                panelMain = new JPanel();<newline46mondego>                panelMain.setBackground(Color.WHITE);<newline46mondego>                panelMain.setBounds(0, 0, 420, 90);<newline46mondego>                panelMain.setPreferredSize(new Dimension(200, 40));<newline46mondego>                add(panelMain);<newline46mondego><newline46mondego>                // creating JButton in the main JPanel (white)<newline46mondego>                testButton = new JButton(<doubleQuotes46>Button from main class<doubleQuotes46>);<newline46mondego>                panelMain.add(testButton);<newline46mondego><newline46mondego>                // creating new JPanelOne object from JPanelOne class containing black JPanel<newline46mondego>                panel = new JPanelOne();<newline46mondego><newline46mondego>                // adding black JPanel to main JPanel (white)<newline46mondego>                panelMain.add(panel);<newline46mondego><newline46mondego>                pack();<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public static void main(String[] arguments) {<newline46mondego><newline46mondego>                // creating JFrame object and setting it visible<newline46mondego>                JFrameTest frame = new JFrameTest();<newline46mondego>                frame.setVisible(true);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>}<newline46mondego>"
"1273splitHere46","12025859splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingConstants;<newline46mondego><newline46mondego>public class JPanelOne extends JPanel<newline46mondego>{<newline46mondego><newline46mondego>        public JPanelOne()<newline46mondego>        {<newline46mondego>                // setting up black JPanel<newline46mondego>                JPanel panel = new JPanel();<newline46mondego>                panel.setPreferredSize(new Dimension(220, 40));<newline46mondego>                panel.setBackground(Color.BLACK);<newline46mondego><newline46mondego>                // creating button on external JPanel<newline46mondego>                JButton button = new JButton(<doubleQuotes46>Button (+JPanel) from external class<doubleQuotes46>);<newline46mondego><newline46mondego>                // adding button to the black JPanel<newline46mondego>                panel.add(button);<newline46mondego><newline46mondego>                // adding blackJPanel<newline46mondego>                add(panel);<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"1274splitHere46","12025914splitHere46","android:id=<doubleQuotes46>@id/button3<doubleQuotes46><newline46mondego>"
"1275splitHere46","12025914splitHere46","android:id=<doubleQuotes46>@+id/button3<doubleQuotes46><newline46mondego>"
"1276splitHere46","12025914splitHere46","java.lang.RuntimeException: Unable to start activity<newline46mondego>ComponentInfo{com.nickymilton.testbasebal3/com.nickymilton.testbasebal3.MainActivity}:<newline46mondego>android.view.InflateException: Binary XML file line #54: Error inflating class <unknown><newline46mondego>"
"1277splitHere46","12025914splitHere46","android.content.res.Resources$NotFoundException: Resource ID #0x7f080001 type #0x12 is not valid<newline46mondego>    at android.content.res.Resources.loadXmlResourceParser(Resources.java:2103)<newline46mondego>    at android.content.res.Resources.getLayout(Resources.java:852)<newline46mondego>    at android.view.MenuInflater.inflate(MenuInflater.java:107)<newline46mondego>    at com.nickymilton.testbasebal3.MainActivity.onCreateOptionsMenu(MainActivity.java:22)<newline46mondego>    at android.app.Activity.onCreatePanelMenu(Activity.java:2476)<newline46mondego>"
"1278splitHere46","12025954splitHere46","replace"
"1279splitHere46","12025954splitHere46","replaceAll"
"1280splitHere46","12025954splitHere46","String s = <doubleQuotes46>to+go+la<doubleQuotes46>.replace(<doubleQuotes46>to+go<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"1281splitHere46","12025974splitHere46","result"
"1282splitHere46","12025974splitHere46","ID"
"1283splitHere46","12025974splitHere46","n"
"1284splitHere46","12025974splitHere46","Random"
"1285splitHere46","12025974splitHere46","ThreadLocal<Random> rng = new ThreadLocal<Random>(){<newline46mondego>    @Override<newline46mondego>    protected Random init(){<newline46mondego>        return new Random();<newline46mondego>    }<newline46mondego>}; <newline46mondego>// afterwards...<newline46mondego>Random r = rng.get();<newline46mondego>"
"1286splitHere46","12025974splitHere46","Random"
"1287splitHere46","12025984splitHere46","@RequestMapping(value = <doubleQuotes46>/log_in<doubleQuotes46>, method = RequestMethod.POST)<newline46mondego>public ModelAndView tryToLogin(@RequestParam(<doubleQuotes46>uName<doubleQuotes46>) String uName, @RequestParam(<doubleQuotes46>pW<doubleQuotes46>) String pW,      HttpServletResponse response, HttpServletRequest request) {<newline46mondego>    ModelAndView ret = new ModelAndView(<doubleQuotes46>login<doubleQuotes46>, <doubleQuotes46>command<doubleQuotes46>, new User());<newline46mondego>    User user = userService.existingUser(uName, pW);<newline46mondego>    loggedInUser = new User();<newline46mondego>    model.addAttribute(<doubleQuotes46>command<doubleQuotes46>, new Comment());<newline46mondego>    if (user != null) {<newline46mondego>        Map<String, Object> model = new HashMap<String, Object>();<newline46mondego>            model.put(<doubleQuotes46>COMMENTS<doubleQuotes46>, allComments);<newline46mondego>            model.put(<doubleQuotes46>LOGGED_IN_USER<doubleQuotes46>, loggedInUser);<newline46mondego>        ret = ModelAndView(<doubleQuotes46>showAllComments<doubleQuotes46>, model);<newline46mondego>    }<newline46mondego>    return ret;<newline46mondego>}<newline46mondego>"
"1288splitHere46","12025984splitHere46","<form:form method=<doubleQuotes46>post<doubleQuotes46> action=<doubleQuotes46>postNewComment.html<doubleQuotes46> commandName=<doubleQuotes46>comment<doubleQuotes46>><newline46mondego>    <table><newline46mondego>        <tr><newline46mondego>            <td><form:label path=<doubleQuotes46>comment<doubleQuotes46>><newline46mondego>                    COMMENT<newline46mondego>                </form:label></td><newline46mondego>            <td><form:input path=<doubleQuotes46>comment<doubleQuotes46> /></td><newline46mondego>        </tr><newline46mondego>        <tr><newline46mondego>            <td colspan=<doubleQuotes46>2<doubleQuotes46>><input type=<doubleQuotes46>submit<doubleQuotes46><newline46mondego>                value=<doubleQuotes46>WRITE<doubleQuotes46> /></td><newline46mondego>        </tr><newline46mondego>    </table><newline46mondego></form:form><newline46mondego>"
"1289splitHere46","12025984splitHere46","model.addAttribute(<doubleQuotes46>comment<doubleQuotes46>, new Comment());<newline46mondego>"
"1290splitHere46","12025984splitHere46","@ModelAttribute(<doubleQuotes46>comment<doubleQuotes46>)<newline46mondego>"
"1291splitHere46","12025984splitHere46","@RequestMapping(value=<doubleQuotes46>userRegistration<doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>public ModelAndView showUserRegistrationForm(Model model){<newline46mondego>    model.addAttribute(<doubleQuotes46>user<doubleQuotes46>, new AccountDetailsForm());<newline46mondego>    return new ModelAndView(<doubleQuotes46>userRegistration<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1292splitHere46","12026054splitHere46","double fCBD = Double.parseDouble(FCBD.getText().toString());<newline46mondego>"
"1293splitHere46","12026054splitHere46","FCBD=(EditText)findViewById(R.id.FCBD);<newline46mondego>"
"1294splitHere46","12026080splitHere46","simple_expandable_list_item_2"
"1295splitHere46","12026080splitHere46","simple_list_item_1"
"1296splitHere46","12026080splitHere46","ListView listView=(ListView)findViewById(R.id.listViews);<newline46mondego>    ArrayAdapter<String> mHistory = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, array)<newline46mondego>    listView.setAdapter(mHistory);<newline46mondego>"
"1297splitHere46","12026290splitHere46","Chunk textAsChunk = new Chunk(text, textFont);<newline46mondego>textAsChunk.setBackground(new BaseColor(120, 200, 50));<newline46mondego><newline46mondego>ColumnText.showTextAligned(cb, Element.ALIGN_LEFT, new Phrase(textAsChunk), x, y, 0);<newline46mondego>"
"1298splitHere46","12026370splitHere46","HSSFSheet firstSheet = sampleWorkbook.createSheet(<doubleQuotes46>ABC<doubleQuotes46>);<newline46mondego>HSSFSheet secondSheet = sampleWorkbook.createSheet(<doubleQuotes46>XYZ<doubleQuotes46>);<newline46mondego>"
"1299splitHere46","12026480splitHere46","onCreateView"
"1300splitHere46","12026480splitHere46","public class SayHelloFragment extends Fragment {<newline46mondego><newline46mondego>    private String mText;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {<newline46mondego>        View view = inflater.inflate(R.layout.say_hello_layout, container);<newline46mondego>        final TextView text = (TextView) view.findViewById(R.id.textView1);<newline46mondego>        if (mText != null)<newline46mondego>            text.setText(mText);<newline46mondego><newline46mondego>        view.findViewById(R.id.button1).setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego>                mText = <doubleQuotes46>Hello!<doubleQuotes46>;<newline46mondego>                text.setText(mText);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        return view;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onActivityCreated(Bundle savedInstanceState) {<newline46mondego>        super.onActivityCreated(savedInstanceState);<newline46mondego>        setRetainInstance(true);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1301splitHere46","12026557splitHere46","AbstractPreAuthenticatedProcessingFilter"
"1302splitHere46","12026557splitHere46","<custom-filter position=<doubleQuotes46>PRE_AUTH_FILTER<doubleQuotes46> ref=<doubleQuotes46>yourPreAuthFilter<doubleQuotes46> />"
"1303splitHere46","12026557splitHere46","AuthenticationUserDetailsService"
"1304splitHere46","12026557splitHere46","PreAuthenticatedAuthenticationProvider"
"1305splitHere46","12026557splitHere46","<property name=<doubleQuotes46>yourPreAuthenticatedUserDetailsService<doubleQuotes46>>"
"1306splitHere46","12026557splitHere46","PRE_AUTH_FILTER"
"1307splitHere46","12026628splitHere46","System.out.println(System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>));"
"1308splitHere46","12026730splitHere46","HierarchyFormatter"
"1309splitHere46","12026730splitHere46","public interface HierarchyFormatter {<newline46mondego>    String format(Hierarchy hierarchy);<newline46mondego>}<newline46mondego><newline46mondego>public class BraceFormatter implements HierarchyFormatter {<newline46mondego>    public String format(Hierarchy hierarchy) {<newline46mondego>        //...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class RangeFormatter implements HierarchyFormatter {<newline46mondego>    public String format(Hierarchy hierarchy) {<newline46mondego>        //...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1310splitHere46","12026730splitHere46","HierarchyFormatter"
"1311splitHere46","12026730splitHere46","public abstract class HierarchyFormatter {<newline46mondego>    protected final Hierarchy hierarchy;<newline46mondego><newline46mondego>    public HierarchyFormatter(Hierarchy hierarchy) {<newline46mondego>        this.hierarchy = hierarchy;<newline46mondego>    }<newline46mondego><newline46mondego>    public abstract String format();<newline46mondego>}<newline46mondego><newline46mondego>public class BraceFormatter extends HierarchyFormatter {<newline46mondego>    public String format() {<newline46mondego>        //...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class RangeFormatter extends HierarchyFormatter {<newline46mondego>    public String format() {<newline46mondego>        //...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1312splitHere46","12026750splitHere46","Set<String> keys = request().body().asFormUrlEncoded().keySet();<newline46mondego>for (String key : keys) {<newline46mondego>     // check if key begin with <doubleQuotes46>param[<doubleQuotes46><newline46mondego>}<newline46mondego>"
"1313splitHere46","12026803splitHere46","JSoup"
"1314splitHere46","12026859splitHere46","done.setOnClickListener(new View.OnClickListener() <newline46mondego>{<newline46mondego>@Override<newline46mondego>public void onClick(View v) <newline46mondego>  {<newline46mondego>    ClassB b = new ClassB();<newline46mondego><newline46mondego>    ClassB.SimpleThread sx = b.new SimpleThread();<newline46mondego><newline46mondego>    sx.start();<newline46mondego>  }<newline46mondego>"
"1315splitHere46","12026905splitHere46","public Configuration configure(String resource)<newline46mondego>                        throws HibernateException<newline46mondego>"
"1316splitHere46","12026905splitHere46","hibernate.cfg.xml"
"1317splitHere46","12026908splitHere46","Lists.partition(java.util.List, int)"
"1318splitHere46","12026908splitHere46","[a, b, c, d, e]"
"1319splitHere46","12026908splitHere46","[[a, b, c]"
"1320splitHere46","12026908splitHere46","[d, e]]"
"1321splitHere46","12026913splitHere46","static initializer block"
"1322splitHere46","12026913splitHere46","public class MyClass {<newline46mondego><newline46mondego><newline46mondego>  static<newline46mondego>        {<newline46mondego>          properties.load(..)<newline46mondego>        }<newline46mondego><newline46mondego>   public static String getStringFromProperty(String name);<newline46mondego><newline46mondego>       return properties.getProperty(name);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1323splitHere46","12027286splitHere46","Person"
"1324splitHere46","12027286splitHere46","public class Person {<newline46mondego>    private double levelOfGrowth = 0;<newline46mondego><newline46mondego>    public Person() {};<newline46mondego><newline46mondego>    public Person(double levelOfGrowth) {<newline46mondego>        this.levelOfGrowth = levelOfGrowth;<newline46mondego>    };<newline46mondego><newline46mondego>    public double getLevelOfGrowth() {<newline46mondego>        return levelOfGrowth;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1325splitHere46","12027286splitHere46","levelOfGrowth"
"1326splitHere46","12027286splitHere46","MainWindowController"
"1327splitHere46","12027286splitHere46","levelOfGrowth"
"1328splitHere46","12027286splitHere46","levelOfGrowthColumn"
"1329splitHere46","12027286splitHere46","public class MainWindowController implements Initializable {<newline46mondego>    @FXML<newline46mondego>    public TableColumn levelOfGrowthColumn;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Initializes the controller class.<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public void initialize(URL url, ResourceBundle rb) {<newline46mondego>        ObservableList<Person> persons = FXCollections.observableArrayList();<newline46mondego><newline46mondego>        persons.add(new Person(0));<newline46mondego>        persons.add(new Person(0.5));<newline46mondego>        persons.add(new Person(1));<newline46mondego><newline46mondego>        levelOfGrowthColumn.setCellValueFactory(new PropertyValueFactory<Person, Double>(<doubleQuotes46>levelOfGrowth<doubleQuotes46>));<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1330splitHere46","12027286splitHere46","levelOfGrowthColumn"
"1331splitHere46","12027286splitHere46","public class PercantageFormatCell extends TableCell<Object, Double> {<newline46mondego><newline46mondego>    public PercantageFormatCell() {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void updateItem(Double item, boolean empty) {<newline46mondego>        super.updateItem(item, empty);<newline46mondego><newline46mondego>        // If the row is not empty but the Double-value is null,<newline46mondego>        // we will always display 0%<newline46mondego>        if (!empty && null == item) {<newline46mondego>            item = new Double(0.0d);<newline46mondego>        }<newline46mondego><newline46mondego>        // Here we set the displayed text to anything we want without changing the<newline46mondego>        // real value behind it. We could also have used switch case or anything you<newline46mondego>        // like.<newline46mondego>        setText(item == null ? <doubleQuotes46><doubleQuotes46> : NumberFormat.getPercentInstance().format(item));<newline46mondego><newline46mondego>        // If the cell is selected, the text will always be white<newline46mondego>        // (so that it can be read against the blue background),<newline46mondego>        // if the value is 1 it will be green.<newline46mondego>        if (item != null) {<newline46mondego>            double value = item.doubleValue();<newline46mondego>            if (isFocused() || isSelected() || isPressed()) {<newline46mondego>                setTextFill(Color.WHITE);<newline46mondego>            } else if (value < 1) {<newline46mondego>                setTextFill(Color.BLACK);<newline46mondego>            } else {<newline46mondego>                setTextFill(Color.GREEN);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1332splitHere46","12027286splitHere46","public class MainWindowController implements Initializable {<newline46mondego>    @FXML<newline46mondego>    public TableColumn levelOfGrowthColumn;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Initializes the controller class.<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public void initialize(URL url, ResourceBundle rb) {<newline46mondego>        ObservableList<Person> persons = FXCollections.observableArrayList();<newline46mondego><newline46mondego>        persons.add(new Person(0));<newline46mondego>        persons.add(new Person(0.5));<newline46mondego>        persons.add(new Person(1));<newline46mondego><newline46mondego>        // New code START<newline46mondego><newline46mondego>        // In case we have multiple columns with percent-values it<newline46mondego>        // might come in handy to store our formatter<newline46mondego>        Callback<TableColumn, TableCell> percantageCellFactory =<newline46mondego>            new Callback<TableColumn, TableCell>() {<newline46mondego>                public TableCell call(TableColumn p) {<newline46mondego>                    return new PercantageFormatCell();<newline46mondego>                }<newline46mondego>            };<newline46mondego><newline46mondego>        // Now all we have to do is to apply it<newline46mondego>        levelOfGrowthColumn.setCellFactory(percantageCellFactory);<newline46mondego><newline46mondego>        // New code END<newline46mondego><newline46mondego>        levelOfGrowthColumn.setCellValueFactory(new PropertyValueFactory<Person, Double>(<doubleQuotes46>levelOfGrowth<doubleQuotes46>));<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1333splitHere46","12027346splitHere46","import org.eclipse.jdt.core.dom.ASTParser;<newline46mondego><newline46mondego>String javaSource = <doubleQuotes46>some java source<doubleQuotes46>'<newline46mondego><newline46mondego>    // see org.eclipse.jdt.core.dom.AST for a complete<newline46mondego>    // list of supported levels.<newline46mondego>ASTParser parser = ASTParser.newParser(AST.JLS2);<newline46mondego>parser.setSource(javaSource.toCharArray());<newline46mondego>CompilationUnit unit = (CompilationUnit) parser.createAST(null);<newline46mondego>"
"1334splitHere46","12027361splitHere46","A"
"1335splitHere46","12027361splitHere46","B"
"1336splitHere46","12027361splitHere46","@Service<newline46mondego>class A {<newline46mondego>    private String importantValue = <doubleQuotes46>stringvalue<doubleQuotes46>;<newline46mondego><newline46mondego>    @Autowire<newline46mondego>    private B b;<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    public void initB() {<newline46mondego>        b.importantValueFromA = this.importantValue;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1337splitHere46","12027361splitHere46","b.importantValueFromA"
"1338splitHere46","12027361splitHere46","A.A"
"1339splitHere46","12027361splitHere46","@PostConstruct"
"1340splitHere46","12027361splitHere46","private B b;<newline46mondego><newline46mondego>@Autowire<newline46mondego>public void setB(B b) {<newline46mondego>    this.b = b;<newline46mondego>    b.importantValueFromA = this.importantValue;<newline46mondego>}<newline46mondego>"
"1341splitHere46","12027361splitHere46","private"
"1342splitHere46","12027361splitHere46","B"
"1343splitHere46","12027459splitHere46","AbstractColorChooserPanel"
"1344splitHere46","12027459splitHere46","JColorChooser jc = new JColorChooser();<newline46mondego>jc.setChooserPanels(new AbstractColorChooserPanel[]{yourChooserPanel});<newline46mondego>"
"1345splitHere46","12027459splitHere46","private static void removeTransparencySlider(JColorChooser jc) throws Exception {<newline46mondego><newline46mondego>    AbstractColorChooserPanel[] colorPanels = jc.getChooserPanels();<newline46mondego>    for (int i = 1; i < colorPanels.length; i++) {<newline46mondego>        AbstractColorChooserPanel cp = colorPanels[i];<newline46mondego><newline46mondego>        Field f = cp.getClass().getDeclaredField(<doubleQuotes46>panel<doubleQuotes46>);<newline46mondego>        f.setAccessible(true);<newline46mondego><newline46mondego>        Object colorPanel = f.get(cp);<newline46mondego>        Field f2 = colorPanel.getClass().getDeclaredField(<doubleQuotes46>spinners<doubleQuotes46>);<newline46mondego>        f2.setAccessible(true);<newline46mondego>        Object spinners = f2.get(colorPanel);<newline46mondego><newline46mondego>        Object transpSlispinner = Array.get(spinners, 3);<newline46mondego>        if (i == colorPanels.length - 1) {<newline46mondego>            transpSlispinner = Array.get(spinners, 4);<newline46mondego>        }<newline46mondego>        Field f3 = transpSlispinner.getClass().getDeclaredField(<doubleQuotes46>slider<doubleQuotes46>);<newline46mondego>        f3.setAccessible(true);<newline46mondego>        JSlider slider = (JSlider) f3.get(transpSlispinner);<newline46mondego>        slider.setEnabled(false);<newline46mondego>        Field f4 = transpSlispinner.getClass().getDeclaredField(<doubleQuotes46>spinner<doubleQuotes46>);<newline46mondego>        f4.setAccessible(true);<newline46mondego>        JSpinner spinner = (JSpinner) f4.get(transpSlispinner);<newline46mondego>        spinner.setEnabled(false);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1346splitHere46","12027503splitHere46","getTableCellRendererComponent"
"1347splitHere46","12027503splitHere46","public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego>    setText(value.toString());<newline46mondego>    if (row==12 && column==2) {<newline46mondego>        setBackground(Color.RED);<newline46mondego>    }<newline46mondego>    return this;<newline46mondego>}<newline46mondego>"
"1348splitHere46","12027610splitHere46","[0] [0] [6] [2] [.] [t] [c] [h] [\u0000] [\u0000] [\u0000] [\u0000] [\u0000] [\u0000] [\u0000] [\u0000]"
"1349splitHere46","12027610splitHere46","value[offset]"
"1350splitHere46","12027610splitHere46","value[offset + count - 1]"
"1351splitHere46","12027610splitHere46","offset"
"1352splitHere46","12027610splitHere46","count"
"1353splitHere46","12027620splitHere46","class GameAI {<newline46mondego>   private GameDriver gameDriver;<newline46mondego><newline46mondego>   public GameAI(GameDriver gameDriver) {<newline46mondego>      this.gameDriver = gameDriver;<newline46mondego>   }<newline46mondego><newline46mondego>   //.... more code<newline46mondego>}  <newline46mondego>"
"1354splitHere46","12027620splitHere46","GameAI gameAi = new GameAI(this);<newline46mondego>"
"1355splitHere46","12027655splitHere46","class Child extends Parent {<newline46mondego>   // protected static int A=2; // this redeclares the variable -- it's a different variable<newline46mondego><newline46mondego>   public Child() {<newline46mondego>      A = 2;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1356splitHere46","12027683splitHere46","value"
"1357splitHere46","12027683splitHere46","final String jpql = <doubleQuotes46>SELECT u FROM User u WHERE <doubleQuotes46><newline46mondego>  <doubleQuotes46>    u.lastName  like :lastname<doubleQuotes46> +;<newline46mondego>  <doubleQuotes46> OR u.firstName like :firstname<doubleQuotes46> +;<newline46mondego>  <doubleQuotes46> OR u.email     like :email<doubleQuotes46>;<newline46mondego>"
"1358splitHere46","12027683splitHere46","StringBuilder"
"1359splitHere46","12027683splitHere46","final String jpql = <doubleQuotes46>SELECT u FROM User u WHERE <doubleQuotes46><newline46mondego>  <doubleQuotes46>    u.lastName  like :valueLike<doubleQuotes46> +;<newline46mondego>  <doubleQuotes46> OR u.firstName like :valueLike<doubleQuotes46> +;<newline46mondego>  <doubleQuotes46> OR u.email     like :valueLike<doubleQuotes46>;<newline46mondego><newline46mondego>result =  entityManager.createQuery(jpql, User.class)<newline46mondego>        .setParameter(<doubleQuotes46>valueLike<doubleQuotes46>, valueLike)<newline46mondego>        .getResultList();<newline46mondego>"
"1360splitHere46","12027732splitHere46","NewHello"
"1361splitHere46","12027732splitHere46","<context:component-scan base-package=<doubleQuotes46>com.project.newhello<doubleQuotes46> /><newline46mondego>"
"1362splitHere46","12027869splitHere46","Activity"
"1363splitHere46","12027869splitHere46","onStart()"
"1364splitHere46","12027869splitHere46","onStop()"
"1365splitHere46","12027869splitHere46","null"
"1366splitHere46","12027869splitHere46","Activity"
"1367splitHere46","12027869splitHere46","null"
"1368splitHere46","12027869splitHere46","NPE"
"1369splitHere46","12027877splitHere46","ValueSubmittedListener"
"1370splitHere46","12027877splitHere46","interface ValueSubmittedListener {<newline46mondego>    public void onSubmitted(String value);<newline46mondego>}<newline46mondego>"
"1371splitHere46","12027877splitHere46","Editor"
"1372splitHere46","12027877splitHere46","class Editor implements ValueSubmittedListener{<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    public void onSubmitted(String value) {<newline46mondego>        // add text to JTextPane.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1373splitHere46","12027877splitHere46","Toolbar"
"1374splitHere46","12027877splitHere46","class Toolbar {<newline46mondego><newline46mondego>    private List<ValueSubmittedListener> listeners = new ArrayList<ValueSubmittedListener>();<newline46mondego><newline46mondego><newline46mondego>    public void addListener(ValueSubmittedListener listener) {<newline46mondego>        listeners.add(listener);<newline46mondego>    }<newline46mondego><newline46mondego>    private void notifyListeners() {<newline46mondego>        for (ValueSubmittedListener listener : listeners) {<newline46mondego>            listener.onSubmitted(textfield.getText());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1375splitHere46","12027877splitHere46","submitButton"
"1376splitHere46","12027877splitHere46","ActionListener"
"1377splitHere46","12027877splitHere46","notifyListeners"
"1378splitHere46","12027877splitHere46","initComponents"
"1379splitHere46","12027877splitHere46","Main"
"1380splitHere46","12027877splitHere46","Editor"
"1381splitHere46","12027877splitHere46","Toolbar"
"1382splitHere46","12027877splitHere46","private void initComponents() {<newline46mondego>   JFrame mainframe = new JFrame(<doubleQuotes46>Main Frame<doubleQuotes46>);<newline46mondego>   Editor editor = new Editor();<newline46mondego>   Toolbar toolbar = new Toolbar();<newline46mondego>   toolbar.addListener(editor); // register listener<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"1383splitHere46","12027879splitHere46","@Retention(RetentionPolicy.RUNTIME)<newline46mondego>@Target(ElementType.TYPE)<newline46mondego>public @interface Dependencies {<newline46mondego>    Class<?>[] value();<newline46mondego>}<newline46mondego>"
"1384splitHere46","12027879splitHere46","@Dependencies({WidgetB.class,WidgetC.class})<newline46mondego>public class WidgetA extends Widget {<newline46mondego>}<newline46mondego>"
"1385splitHere46","12027879splitHere46","bean.getClass().getAnnotation(Dependencies.class)"
"1386splitHere46","12027949splitHere46","btnClear.setIcon(<doubleQuotes46>16/clear.png<doubleQuotes46>);<newline46mondego>With war/images/16.clear.png image folders structure."
"1387splitHere46","12027949splitHere46","getSkinImgDir"
"1388splitHere46","12027989splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class TempProject<newline46mondego>{<newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                Box mainContent = Box.createVerticalBox();<newline46mondego>                mainContent.add(TempProject.getLabel(<doubleQuotes46>abc<doubleQuotes46>));<newline46mondego>                mainContent.add(TempProject.getLabel(<doubleQuotes46>Longer<doubleQuotes46>));<newline46mondego>                mainContent.add(TempProject.getLabel(<doubleQuotes46>Longerest<doubleQuotes46>));<newline46mondego>                mainContent.add(TempProject.getLabel(<doubleQuotes46>Smaller<doubleQuotes46>));<newline46mondego><newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                frame.setContentPane(mainContent);    <newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static JLabel getLabel(String text){<newline46mondego>        JLabel c = new JLabel(text);<newline46mondego>        c.setHorizontalTextPosition(SwingConstants.LEADING);<newline46mondego>        c.setAlignmentX(SwingConstants.RIGHT);<newline46mondego>        c.setIcon(UIManager.getIcon(<doubleQuotes46>FileChooser.detailsViewIcon<doubleQuotes46>));<newline46mondego>        return c;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1389splitHere46","12027998splitHere46","Scanner.hasNext"
"1390splitHere46","12027998splitHere46","final Scanner input = new Scanner(System.in);<newline46mondego>final Pattern pattern = Pattern.compile(<doubleQuotes46>\\d+\\.\\d{2}?<doubleQuotes46>);<newline46mondego>while (input.hasNext()) {<newline46mondego>  System.out.println((input.hasNext(pattern) ? <doubleQuotes46>good<doubleQuotes46> : <doubleQuotes46>bad<doubleQuotes46>)<newline46mondego>    + <doubleQuotes46>: <doubleQuotes46> + input.nextDouble());<newline46mondego>}<newline46mondego>"
"1391splitHere46","12027998splitHere46","2.00<newline46mondego>3.14159<newline46mondego>2<newline46mondego>"
"1392splitHere46","12027998splitHere46","good: 2.0<newline46mondego>bad: 3.14159<newline46mondego>bad: 2.0<newline46mondego>"
"1393splitHere46","12027998splitHere46","BigDecimal"
"1394splitHere46","12027998splitHere46","BigDecimal.setScale"
"1395splitHere46","12027998splitHere46","while (input.hasNextBigDecimal()) {<newline46mondego>  System.out.println(input.nextBigDecimal().setScale(2, RoundingMode.HALF_UP));<newline46mondego>}<newline46mondego>"
"1396splitHere46","12027998splitHere46","2.00<newline46mondego>3.14<newline46mondego>2.00<newline46mondego>"
"1397splitHere46","12028248splitHere46","java -version"
"1398splitHere46","12028248splitHere46","Unsupported major.minor"
"1399splitHere46","12028297splitHere46","SwingWorker"
"1400splitHere46","12028297splitHere46","SwingWorker"
"1401splitHere46","12028297splitHere46","import java.awt.event.ActionEvent;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import javax.swing.AbstractAction;<newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.DefaultComboBoxModel;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JComboBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingWorker;<newline46mondego><newline46mondego>public class TestPanel extends JPanel {<newline46mondego><newline46mondego>    private TestPanel() {<newline46mondego>        super();<newline46mondego>        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));<newline46mondego><newline46mondego>        Map<String, DefaultComboBoxModel> map = new HashMap<String,     DefaultComboBoxModel>();<newline46mondego>        for (int i = 0; i < 5; i++) {<newline46mondego>            JComboBox combo = new JComboBox();<newline46mondego>            add(combo);<newline46mondego>            map.put(<doubleQuotes46>combo<doubleQuotes46> + i, (DefaultComboBoxModel) combo.getModel());<newline46mondego>        }<newline46mondego><newline46mondego>        add(new JButton(new AbstractAction(<doubleQuotes46>fill me<doubleQuotes46>) {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                new MyWorker(map).run();<newline46mondego>            }<newline46mondego>        }));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private class MyWorker extends SwingWorker<Void, String[]> {<newline46mondego><newline46mondego>        private final Map<String, DefaultComboBoxModel> map;<newline46mondego><newline46mondego>        public MyWorker(Map<String, DefaultComboBoxModel> map) {<newline46mondego>            this.map = map;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected Void doInBackground() throws Exception {<newline46mondego>            for (int i = 0; i < 20; i++) {<newline46mondego>                String[] cell = new String[2];<newline46mondego>                cell[0] = <doubleQuotes46>combo<doubleQuotes46> + i % 5;<newline46mondego>                cell[1] = <doubleQuotes46>value <doubleQuotes46> + i;<newline46mondego>                publish(cell);<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void process(List<String[]> chunks) {<newline46mondego>            for (String[] chunk : chunks) {<newline46mondego>                map.get(chunk[0]).addElement(chunk[1]);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>    };<newline46mondego><newline46mondego>    /**<newline46mondego>     * Create the GUI and show it.  For thread safety,<newline46mondego>     * this method should be invoked from the <newline46mondego>     * event-dispatching thread.<newline46mondego>     */<newline46mondego>    private static void createAndShowGUI() {<newline46mondego>        // Create and set up the window.<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>SwingWorker<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel panel = new TestPanel();<newline46mondego>        frame.setContentPane(panel);<newline46mondego><newline46mondego>        // Display the window.<newline46mondego>        frame.setSize(200, 300);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1402splitHere46","12028305splitHere46","VetoStuff.vetoSetToPairArray()"
"1403splitHere46","12028305splitHere46","Pair[][] pairArray = new Pair[input[0].getVetoPairs().length][input.length];<newline46mondego>    for(int i = 0; i < input.length; i++)<newline46mondego>            pairArray[i] = input[i].getVetoPairs();<newline46mondego>"
"1404splitHere46","12028305splitHere46","input[0].getVetoPairs().length > input.length"
"1405splitHere46","12028305splitHere46","new Pair[input.length][];<newline46mondego>"
"1406splitHere46","12028640splitHere46","Collection<B> bs = (Collection<B>) a.getLotOfBs();<newline46mondego><newline46mondego>  for (B b : bs) {<newline46mondego>    ...<newline46mondego>  }<newline46mondego>"
"1407splitHere46","12028666splitHere46","sampleDataSheet.autoSizeColumn(1000000);<newline46mondego>"
"1408splitHere46","12028666splitHere46","sampleDataSheet.autoSizeColumn(0);<newline46mondego>"
"1409splitHere46","12028666splitHere46","for (int i=0; i<10; i++){<newline46mondego>   sampleDataSheet.autoSizeColumn(i);<newline46mondego>}<newline46mondego>"
"1410splitHere46","12028846splitHere46","BODMAS"
"1411splitHere46","12028846splitHere46","B  - Bracket <newline46mondego>O  - Power<newline46mondego>DM - Division and Multiplication<newline46mondego>AS - Addition and Substraction<newline46mondego>"
"1412splitHere46","12028846splitHere46","Left to Right"
"1413splitHere46","12028846splitHere46","System.out.println(<doubleQuotes46>printing: <doubleQuotes46> + x + y);"
"1414splitHere46","12028846splitHere46","<doubleQuotes46>printing: <doubleQuotes46>"
"1415splitHere46","12028846splitHere46","<doubleQuotes46>+<doubleQuotes46>"
"1416splitHere46","12028846splitHere46","<doubleQuotes46>printing:<doubleQuotes46> +"
"1417splitHere46","12028846splitHere46","System.out.println(<doubleQuotes46>printing: <doubleQuotes46> + x * y);"
"1418splitHere46","12028846splitHere46","<doubleQuotes46>*<doubleQuotes46>"
"1419splitHere46","12028846splitHere46","+"
"1420splitHere46","12028846splitHere46","x*y"
"1421splitHere46","12028846splitHere46","printing: +"
"1422splitHere46","12028846splitHere46","System.out.println(<doubleQuotes46>printing: <doubleQuotes46>+ (x+y));<newline46mondego>"
"1423splitHere46","12028846splitHere46","Bracket"
"1424splitHere46","12028846splitHere46","Addition"
"1425splitHere46","12028981splitHere46","char const* greet()<newline46mondego>{<newline46mondego>   return <doubleQuotes46>hello, world<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>#include <boost/python.hpp><newline46mondego><newline46mondego>BOOST_PYTHON_MODULE(hello_ext)<newline46mondego>{<newline46mondego>    using namespace boost::python;<newline46mondego>    def(<doubleQuotes46>greet<doubleQuotes46>, greet);<newline46mondego>}<newline46mondego>"
"1426splitHere46","12028981splitHere46",">>> import hello_ext<newline46mondego>>>> print hello_ext.greet()<newline46mondego>hello, world<newline46mondego>"
"1427splitHere46","12029048splitHere46","DefaultCellEditor(JComboBox jcb)"
"1428splitHere46","12029048splitHere46","import java.awt.BorderLayout;<newline46mondego>    import java.util.Properties;<newline46mondego>    import javax.swing.*;<newline46mondego>    import javax.swing.tree.TreeCellEditor;<newline46mondego><newline46mondego>    public class TreeEditJComboBox {<newline46mondego><newline46mondego>        public static void main(String args[]) {<newline46mondego>            JFrame frame = new JFrame();<newline46mondego>            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            Properties props = System.getProperties();<newline46mondego>            JTree tree = new JTree(props);<newline46mondego><newline46mondego><newline46mondego>            JComboBox comboBox = new JComboBox(new String[]{<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>});<newline46mondego>            TreeCellEditor editor = new DefaultCellEditor(comboBox);<newline46mondego><newline46mondego>            tree.setEditable(true);<newline46mondego>            tree.setCellEditor(editor);<newline46mondego><newline46mondego>            JScrollPane scrollPane = new JScrollPane(tree);<newline46mondego>            frame.add(scrollPane, BorderLayout.CENTER);<newline46mondego>            frame.setSize(300, 150);<newline46mondego>            frame.setVisible(true);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1429splitHere46","12029048splitHere46","DefaultCellEditor"
"1430splitHere46","12029048splitHere46","getTableCellEditorComponent()"
"1431splitHere46","12029048splitHere46","JPanel"
"1432splitHere46","12029048splitHere46","JLabel"
"1433splitHere46","12029048splitHere46","JComboBox"
"1434splitHere46","12029048splitHere46","class MyDefaultCellEditor extends DefaultCellEditor {<newline46mondego><newline46mondego>public MyDefaultCellEditor(JComboBox comboBox) {<newline46mondego>    super(comboBox);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {<newline46mondego>   //return custom coponent<newline46mondego>    return super.getTableCellEditorComponent(table, value, isSelected, row, column);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"1435splitHere46","12029048splitHere46","TreeCellEditor editor = new MyDefaultCellEditor(blockedAlternatives);<newline46mondego>"
"1436splitHere46","12029107splitHere46","public ArrayList<Boolean> timeTable = new ArrayList<Boolean>(Collections.nCopies(9, true));<newline46mondego><newline46mondego>public ArrayList<ArrayList<Boolean>> timeTableLists = new ArrayList<ArrayList<Boolean>>(Collections.nCopies(9, timeTable));<newline46mondego>"
"1437splitHere46","12029200splitHere46","Map<SomeKeyObj,SomeValueObj> myMap = new HashMap<SomeKeyObj,SomeValueObj>()"
"1438splitHere46","12029200splitHere46","HashMap"
"1439splitHere46","12029200splitHere46","TreeMap"
"1440splitHere46","12029200splitHere46","ConcurrentHashMap"
"1441splitHere46","12029200splitHere46","Map"
"1442splitHere46","12029200splitHere46","Map"
"1443splitHere46","12029200splitHere46","Map<SomeKeyObj,SomeValueObj> myMap = new TreeMap<SomeKeyObj,SomeValueObj>()"
"1444splitHere46","12029200splitHere46","myMap"
"1445splitHere46","12029200splitHere46","Map"
"1446splitHere46","12029507splitHere46","FileReader"
"1447splitHere46","12029507splitHere46","in = new BufferedReader(<newline46mondego>    new InputStreamReader(new FileInputStream(<doubleQuotes46>fin.dir<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"1448splitHere46","12029583splitHere46","/**<newline46mondego> *<newline46mondego> * @author David<newline46mondego> */<newline46mondego>public class JavaApplication60 {<newline46mondego>/**<newline46mondego> * @param args the command line arguments<newline46mondego> */<newline46mondego>public static void main(String[] args) {<newline46mondego>    //http://img.viralpatel.net/java-cup-logo.png<newline46mondego><newline46mondego>    //located in a package not in the current one<newline46mondego>    URL url = new JavaApplication60().getResource(<doubleQuotes46>/javaapplication60/newpackage/java-cup-logo.png<doubleQuotes46>);<newline46mondego>    System.out.println(url.getPath());<newline46mondego>    //located in same package<newline46mondego>    url = new JavaApplication60().getResource(<doubleQuotes46>/javaapplication60/java-cup-logo.png<doubleQuotes46>);<newline46mondego>    System.out.println(url.getPath());<newline46mondego>}<newline46mondego><newline46mondego>public InputStream getResourceAsStream(String name) {<newline46mondego>    name = resolveName(name, this.getClass());<newline46mondego>    ClassLoader cl = getClass().getClassLoader();<newline46mondego>    if (cl == null) {<newline46mondego>        return ClassLoader.getSystemResourceAsStream(name); // A system class.<newline46mondego>    }<newline46mondego>    return cl.getResourceAsStream(name);<newline46mondego>}<newline46mondego><newline46mondego>public java.net.URL getResource(String name) {<newline46mondego>    name = resolveName(name, this.getClass());<newline46mondego>    ClassLoader cl = getClass().getClassLoader();<newline46mondego>    if (cl == null) {<newline46mondego>        return ClassLoader.getSystemResource(name);  // A system class.<newline46mondego>    }<newline46mondego>    return cl.getResource(name);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>/*<newline46mondego> * The resolveName method adds a package name prefix if the name is not<newline46mondego> * absolute, and removes any leading <doubleQuotes46>/<doubleQuotes46> if the name is absolute. It is<newline46mondego> * possible, though uncommon, to have classes in diffent packages sharing<newline46mondego> * the same resource.<newline46mondego> */<newline46mondego>private String resolveName(String name, Object clazz) {<newline46mondego>    if (name == null) {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego>    if (!name.startsWith(<doubleQuotes46>/<doubleQuotes46>)) {<newline46mondego>        Class c = clazz.getClass();<newline46mondego>        while (c.isArray()) {<newline46mondego>            c = c.getComponentType();<newline46mondego>        }<newline46mondego>        String baseName = c.getName();<newline46mondego>        int index = baseName.lastIndexOf('.');<newline46mondego>        if (index != -1) {<newline46mondego>            name = baseName.substring(0, index).replace('.', '/') + <doubleQuotes46>/<doubleQuotes46> + name;<newline46mondego>        }<newline46mondego>    } else {<newline46mondego>        name = name.substring(1);<newline46mondego>    }<newline46mondego>    return name;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"1449splitHere46","12029645splitHere46","position"
"1450splitHere46","12029645splitHere46","id"
"1451splitHere46","12029645splitHere46","autoCompleteTextView.setOnItemClickedListener(new OnItemSelectedListener() {<newline46mondego>    @Override<newline46mondego>    public void onItemClicked(AdapterView<?> parent, View view, int position, long id) {<newline46mondego>        // Do whatever you want with the position or id<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1452splitHere46","12029744splitHere46","List<Long> longObjects = new ArrayList<Long>();<newline46mondego><newline46mondego>long[] longArray2 = ArrayUtils.toPrimitive(longObjects.toArray(new Long[longObjects.size()]));<newline46mondego>"
"1453splitHere46","12029752splitHere46","JMenuItem menuItem = new JMenuItem(<doubleQuotes46>Refresh<doubleQuotes46>);<newline46mondego>KeyStroke f5 = KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0);<newline46mondego>menuItem.setAccelerator(f5);<newline46mondego>"
"1454splitHere46","12029752splitHere46","0"
"1455splitHere46","12029806splitHere46","guessword"
"1456splitHere46","12029806splitHere46","for(int i=0;i<appword.length;i++)<newline46mondego>{<newline46mondego>    if((i < guessword.length) && (guessword[i]==appword[i]))<newline46mondego>    {<newline46mondego>        c=true;<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        c=false;<newline46mondego>        break; // <<<=== Add this to end the loop<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1457splitHere46","12029806splitHere46","false"
"1458splitHere46","12029806splitHere46","{'A','B','Z'}"
"1459splitHere46","12029806splitHere46","{'X', 'Y', 'Z'}"
"1460splitHere46","12029806splitHere46","break"
"1461splitHere46","12029806splitHere46","false"
"1462splitHere46","12029840splitHere46","FooParams params = new FooParams().withA(<doubleQuotes46>a value<doubleQuotes46>)<newline46mondego>                                  .withB(<doubleQuotes46>b value<doubleQuotes46>)<newline46mondego>                                  .withC(<doubleQuotes46>c value<doubleQuotes46>);<newline46mondego>Foo foo = new Foo(params);<newline46mondego>"
"1463splitHere46","12029840splitHere46","buildFoo()"
"1464splitHere46","12029840splitHere46","FooParams"
"1465splitHere46","12029859splitHere46","{}"
"1466splitHere46","12029859splitHere46","l"
"1467splitHere46","12029859splitHere46","List"
"1468splitHere46","12029859splitHere46","null"
"1469splitHere46","12029859splitHere46","List"
"1470splitHere46","12029859splitHere46","List"
"1471splitHere46","12029859splitHere46","l = null"
"1472splitHere46","12029859splitHere46","System.gc()"
"1473splitHere46","12029859splitHere46","List"
"1474splitHere46","12029859splitHere46","l = null"
"1475splitHere46","12029891splitHere46","setLocation"
"1476splitHere46","12029891splitHere46","GRect"
"1477splitHere46","12029891splitHere46","labeledRect"
"1478splitHere46","12029891splitHere46","labeledRect"
"1479splitHere46","12029908splitHere46","Touch"
"1480splitHere46","12029908splitHere46","private float dx; // postTranslate X distance<newline46mondego>private float dy; // postTranslate Y distance<newline46mondego>private float[] matrixValues = new float[9];<newline46mondego>float matrixX = 0; // X coordinate of matrix inside the ImageView<newline46mondego>float matrixY = 0; // Y coordinate of matrix inside the ImageView<newline46mondego>float width = 0; // width of drawable<newline46mondego>float height = 0; // height of drawable<newline46mondego>"
"1481splitHere46","12029908splitHere46","case MotionEvent.ACTION_MOVE:"
"1482splitHere46","12029908splitHere46","if (mode == DRAG) {<newline46mondego>        matrix.set(savedMatrix);<newline46mondego><newline46mondego>        matrix.getValues(matrixValues);<newline46mondego>        matrixX = matrixValues[2];<newline46mondego>        matrixY = matrixValues[5];<newline46mondego>        width = matrixValues[0] * (((ImageView) view).getDrawable()<newline46mondego>                                .getIntrinsicWidth());<newline46mondego>        height = matrixValues[4] * (((ImageView) view).getDrawable()<newline46mondego>                                .getIntrinsicHeight());<newline46mondego><newline46mondego>        dx = event.getX() - start.x;<newline46mondego>        dy = event.getY() - start.y;<newline46mondego><newline46mondego>        //if image will go outside left bound<newline46mondego>        if (matrixX + dx < 0){<newline46mondego>            dx = -matrixX;<newline46mondego>        }<newline46mondego>        //if image will go outside right bound<newline46mondego>        if(matrixX + dx + width > view.getWidth()){<newline46mondego>            dx = view.getWidth() - matrixX - width;<newline46mondego>        }<newline46mondego>        //if image will go oustside top bound<newline46mondego>        if (matrixY + dy < 0){<newline46mondego>            dy = -matrixY;<newline46mondego>        }<newline46mondego>        //if image will go outside bottom bound<newline46mondego>        if(matrixY + dy + height > view.getHeight()){<newline46mondego>            dy = view.getHeight() - matrixY - height;<newline46mondego>        }<newline46mondego>        matrix.postTranslate(dx, dy);   <newline46mondego>    }<newline46mondego>"
"1483splitHere46","12029974splitHere46","<?php<newline46mondego>  function PsExecute($command, $timeout = 60, $sleep = 2) {<newline46mondego>        // First, execute the process, get the process ID<newline46mondego><newline46mondego>        $pid = PsExec($command);<newline46mondego><newline46mondego>        if( $pid === false )<newline46mondego>            return false;<newline46mondego><newline46mondego>        $cur = 0;<newline46mondego>        // Second, loop for $timeout seconds checking if process is running<newline46mondego>        while( $cur < $timeout ) {<newline46mondego>            sleep($sleep);<newline46mondego>            $cur += $sleep;<newline46mondego>            // If process is no longer running, return true;<newline46mondego><newline46mondego>           echo <doubleQuotes46>\n ---- $cur ------ \n<doubleQuotes46>;<newline46mondego><newline46mondego>            if( !PsExists($pid) )<newline46mondego>                return true; // Process must have exited, success!<newline46mondego>        }<newline46mondego><newline46mondego>        // If process is still running after timeout, kill the process and return false<newline46mondego>        PsKill($pid);<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    function PsExec($commandJob) {<newline46mondego><newline46mondego>        $command = $commandJob.' > /dev/null 2>&1 & echo $!';<newline46mondego>        exec($command ,$op);<newline46mondego>        $pid = (int)$op[0];<newline46mondego><newline46mondego>        if($pid!=<doubleQuotes46><doubleQuotes46>) return $pid;<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    function PsExists($pid) {<newline46mondego><newline46mondego>        exec(<doubleQuotes46>ps ax | grep $pid 2>&1<doubleQuotes46>, $output);<newline46mondego><newline46mondego>        while( list(,$row) = each($output) ) {<newline46mondego><newline46mondego>                $row_array = explode(<doubleQuotes46> <doubleQuotes46>, $row);<newline46mondego>                $check_pid = $row_array[0];<newline46mondego><newline46mondego>                if($pid == $check_pid) {<newline46mondego>                        return true;<newline46mondego>                }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    function PsKill($pid) {<newline46mondego>        exec(<doubleQuotes46>kill -9 $pid<doubleQuotes46>, $output);<newline46mondego>    }<newline46mondego>"
"1484splitHere46","12029974splitHere46","<?php<newline46mondego>// pstools.inc.php<newline46mondego><newline46mondego>    function PsExecute($command, $timeout = 60, $sleep = 2) {<newline46mondego>        // First, execute the process, get the process ID<newline46mondego>        $pid = PsExec($command);<newline46mondego><newline46mondego>        if( $pid === false )<newline46mondego>            return false;<newline46mondego><newline46mondego>        $cur = 0;<newline46mondego>        // Second, loop for $timeout seconds checking if process is running<newline46mondego>        while( $cur < $timeout ) {<newline46mondego>            sleep($sleep);<newline46mondego>            $cur += $sleep;<newline46mondego>            // If process is no longer running, return true;<newline46mondego>            if( !PsExists($pid) )<newline46mondego>                return true; // Process must have exited, success!<newline46mondego>        }<newline46mondego><newline46mondego>        // If process is still running after timeout, kill the process and return false<newline46mondego>        PsKill($pid);<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    function PsExec($command) {<newline46mondego>        exec( dirname(__FILE__). <doubleQuotes46>\\psexec.exe -s -d $command  2>&1<doubleQuotes46>, $output);<newline46mondego><newline46mondego>        while( list(,$row) = each($output) ) {<newline46mondego>            $found = stripos($row, 'with process ID ');<newline46mondego>            if( $found )<newline46mondego>                return substr($row, $found, strlen($row)-$found-strlen('with process ID ')-1); // chop off last character '.' from line<newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    function PsExists($pid) {<newline46mondego>        exec( dirname(__FILE__). <doubleQuotes46>\\pslist.exe $pid 2>&1<doubleQuotes46>, $output);<newline46mondego><newline46mondego>        while( list(,$row) = each($output) ) {<newline46mondego>            $found = stristr($row, <doubleQuotes46>process $pid was not found<doubleQuotes46>);<newline46mondego>            if( $found !== false )<newline46mondego>                return false;<newline46mondego>        }<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    function PsKill($pid) {<newline46mondego>        exec( dirname(__FILE__). <doubleQuotes46>\\pskill.exe $pid<doubleQuotes46>, $output);<newline46mondego>    }<newline46mondego>"
"1485splitHere46","12029995splitHere46","android:layout_column"
"1486splitHere46","12029995splitHere46","android:layout_span"
"1487splitHere46","12029995splitHere46","TableRow"
"1488splitHere46","12029995splitHere46","strechColumns"
"1489splitHere46","12029995splitHere46","android:strechColumns=<doubleQuotes46>*<doubleQuotes46><newline46mondego>"
"1490splitHere46","12030069splitHere46","org.quartz.scheduler.wrapJobExecutionInUserTransaction=true<newline46mondego>"
"1491splitHere46","12030132splitHere46","@Override<newline46mondego>protected void onPostExecute(ArrayList<User> response) {<newline46mondego><newline46mondego>    // add all users to the adapter<newline46mondego>    adapter=new LazyAdapter(ThesisProjectAndroid.this, mStrings, response);<newline46mondego><newline46mondego>    for(User user : response){<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>User:- <doubleQuotes46> +user.getFirstName());<newline46mondego><newline46mondego>        // ---- here be ur other code ----<newline46mondego>    }<newline46mondego>    listView.setAdapter(adapter);<newline46mondego>}<newline46mondego>"
"1492splitHere46","12030132splitHere46","public class LazyAdapter extends BaseAdapter {<newline46mondego><newline46mondego>    private Activity activity;<newline46mondego>    private String[] data;<newline46mondego>    private static LayoutInflater inflater=null;<newline46mondego>    public ImageLoader imageLoader;<newline46mondego>    private List<User> userList;<newline46mondego><newline46mondego>    public LazyAdapter(Activity a, String[] d) {<newline46mondego>        activity = a;<newline46mondego>        data=d;<newline46mondego>        inflater = (LayoutInflater)activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>        imageLoader=new ImageLoader(activity.getApplicationContext());<newline46mondego>    }<newline46mondego><newline46mondego>    public LazyAdapter(Activity b, String[] mStrings, List<User> user) {<newline46mondego>        activity = b;<newline46mondego>        data=mStrings;<newline46mondego>        inflater = (LayoutInflater)activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>        imageLoader=new ImageLoader(activity.getApplicationContext());<newline46mondego>        userList = user;<newline46mondego>    }<newline46mondego><newline46mondego>    // ---- here be ur other code ----<newline46mondego><newline46mondego>    public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        View vi=convertView;<newline46mondego>        if(convertView==null)<newline46mondego>            vi = inflater.inflate(R.layout.item, null);<newline46mondego><newline46mondego>        TextView text=(TextView)vi.findViewById(R.id.text);<newline46mondego>        TextView text1=(TextView)vi.findViewById(R.id.text1);<newline46mondego>        ImageView image=(ImageView)vi.findViewById(R.id.image);<newline46mondego>        text.setText(<doubleQuotes46>Name: <doubleQuotes46> +userList.get(position).getFirstName()+<doubleQuotes46> <doubleQuotes46>+userList.get(position).getLastName());<newline46mondego>        text1.setText(<doubleQuotes46>Gender: <doubleQuotes46> +userList.get(position).getGender());<newline46mondego>        imageLoader.DisplayImage(data[position], image);<newline46mondego>        return vi;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1493splitHere46","12030188splitHere46","-ext"
"1494splitHere46","12030188splitHere46","keytool -gencert^<newline46mondego> -alias root^<newline46mondego> -ext BasicConstraints:critical=ca:true,pathlen:0^<newline46mondego> -ext KeyUsage:critical=keyCertSign,cRLSign^<newline46mondego> -infile intermediate.csr^<newline46mondego> -keypass changeit^<newline46mondego> -keystore root.jks^<newline46mondego> -outfile intermediate.pem^<newline46mondego> -rfc^<newline46mondego> -sigalg sha512withrsa^<newline46mondego> -storepass changeit^<newline46mondego> -storetype jks^<newline46mondego> -v<newline46mondego>"
"1495splitHere46","12030188splitHere46","keytool -gencert^<newline46mondego> -alias intermediate^<newline46mondego> -ext BasicConstraints:critical=ca:false^<newline46mondego> -ext ExtendedkeyUsage:critical=serverAuth,clientAuth^<newline46mondego> -ext KeyUsage:critical=digitalSignature,keyEncipherment^<newline46mondego> -infile subject.csr^<newline46mondego> -keypass changeit^<newline46mondego> -keystore intermediate.jks^<newline46mondego> -outfile subject.pem^<newline46mondego> -rfc^<newline46mondego> -sigalg sha512withrsa^<newline46mondego> -storepass changeit^<newline46mondego> -storetype jks^<newline46mondego> -v<newline46mondego>"
"1496splitHere46","12030204splitHere46","Math.min"
"1497splitHere46","12030204splitHere46","amountToTransfer = Math.min(itemAmount, 6 - usedWithAmount);<newline46mondego>"
"1498splitHere46","12030204splitHere46","final int space = 6 - usedWithAmount;<newline46mondego>amountToTransfer = itemAmount < space ? itemAmount : space;<newline46mondego>"
"1499splitHere46","12030204splitHere46","final int space = 6 - usedWithAmount;<newline46mondego>if (itemAmount < space) {<newline46mondego>  amountToTransfer = itemAmount;<newline46mondego>} else {<newline46mondego>  amountToTransfer = space;<newline46mondego>}<newline46mondego>"
"1500splitHere46","12030298splitHere46","<<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>a<doubleQuotes46>>"
"1501splitHere46","12030298splitHere46","LinkedHashMap"
"1502splitHere46","12030298splitHere46","Map"
"1503splitHere46","12030298splitHere46","HashMap"
"1504splitHere46","12030298splitHere46","LinkedHashMap"
"1505splitHere46","12030298splitHere46","constructor"
"1506splitHere46","12030298splitHere46","put"
"1507splitHere46","12030298splitHere46","get"
"1508splitHere46","12030298splitHere46","get(<doubleQuotes46>b<doubleQuotes46>)"
"1509splitHere46","12030328splitHere46","allCourts"
"1510splitHere46","12030328splitHere46","tmp"
"1511splitHere46","12030328splitHere46","courtNo-1"
"1512splitHere46","12030328splitHere46","allCourts"
"1513splitHere46","12030328splitHere46","tmp"
"1514splitHere46","12030328splitHere46","court.allCourts.set(courtNo - 1,tmp);"
"1515splitHere46","12030377splitHere46","DateTime now = DateTime.now();<newline46mondego>DateTime start = now;<newline46mondego>DateTime stop = now.plusDays(10);<newline46mondego>DateTime inter = start;<newline46mondego>// Loop through each day in the span<newline46mondego>while (inter.compareTo(stop) < 0) {<newline46mondego>    System.out.println(inter);<newline46mondego>    // Go to next<newline46mondego>    inter = inter.plusDays(1);<newline46mondego>}<newline46mondego>"
"1516splitHere46","12030377splitHere46","(defn date-interval<newline46mondego>  ([start end] (date-interval start end []))<newline46mondego>  ([start end interval]<newline46mondego>   (if (time/after? start end)<newline46mondego>     interval<newline46mondego>     (recur (time/plus start (time/days 1)) end (concat interval [start])))))<newline46mondego>"
"1517splitHere46","12030389splitHere46",".text-field:focused {<newline46mondego>    -fx-background-color: -fx-shadow-highlight-color, -fx-text-box-border, -fx-control-inner-background;<newline46mondego>    -fx-background-insets: 0, 1, 2;<newline46mondego>    -fx-background-radius: 3, 2, 2;<newline46mondego>}<newline46mondego>"
"1518splitHere46","12030402splitHere46","null"
"1519splitHere46","12030402splitHere46","CodeSource"
"1520splitHere46","12030402splitHere46","// 1) if protection domain codesource is null, it is the global permissions (grant {})<newline46mondego>"
"1521splitHere46","12030402splitHere46","ClassLoader.defineClass"
"1522splitHere46","12030402splitHere46","ProtectionDomain"
"1523splitHere46","12030402splitHere46","ProtectionDomain"
"1524splitHere46","12030402splitHere46","Policy.getPolicy().getPermissions(new CodeSource(null, null))"
"1525splitHere46","12030402splitHere46","defineClass"
"1526splitHere46","12030402splitHere46","SecureClassLoader.defineClass"
"1527splitHere46","12030402splitHere46","null"
"1528splitHere46","12030402splitHere46","CodeSource"
"1529splitHere46","12030402splitHere46","ProtectionDomain"
"1530splitHere46","12030646splitHere46","/**<newline46mondego> * Looks at the object at the top of this stack without removing it<newline46mondego> * from the stack.<newline46mondego> *<newline46mondego> * @return     the object at the top of this stack (the last item<newline46mondego> *             of the <tt>Vector</tt> object).<newline46mondego> * @exception  EmptyStackException  if this stack is empty.<newline46mondego> */<newline46mondego>public synchronized E peek() {<newline46mondego>int len = size();<newline46mondego><newline46mondego>if (len == 0)<newline46mondego>    throw new EmptyStackException();<newline46mondego>return elementAt(len - 1);<newline46mondego>}<newline46mondego>"
"1531splitHere46","12030646splitHere46","string"
"1532splitHere46","12030667splitHere46","finalizer"
"1533splitHere46","12030667splitHere46","System.runFinalization"
"1534splitHere46","12030698splitHere46","PackageManager"
"1535splitHere46","12030698splitHere46","setComponentEnabledSetting()"
"1536splitHere46","12030698splitHere46","BOOT_COMPLETED"
"1537splitHere46","12030698splitHere46","BroadcastReceiver"
"1538splitHere46","12030698splitHere46","setComponentEnabledSetting()"
"1539splitHere46","12030698splitHere46","BOOT_COMPLETED"
"1540splitHere46","12030698splitHere46","BroadcastReceiver"
"1541splitHere46","12030791splitHere46","getFileName(downloadLink)"
"1542splitHere46","12030825splitHere46","Set"
"1543splitHere46","12030825splitHere46","@Override<newline46mondego>public boolean equals(Object o) {<newline46mondego>    if (this == o) return true;<newline46mondego>    if (!(o instanceof User)) return false;<newline46mondego><newline46mondego>    User user = (User) o;<newline46mondego><newline46mondego>    if (status != user.status) return false;<newline46mondego>    if (email != null ? !email.equals(user.email) : user.email != null) return false;<newline46mondego>    if (firstName != null ? !firstName.equals(user.firstName) : user.firstName != null) return false;<newline46mondego>    if (language != null ? !language.equals(user.language) : user.language != null) return false;<newline46mondego>    if (productCode != null ? !productCode.equals(user.productCode) : user.productCode != null) return false;<newline46mondego><newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public int hashCode() {<newline46mondego>    int result = firstName != null ? firstName.hashCode() : 0;<newline46mondego>    result = 31 * result + (email != null ? email.hashCode() : 0);<newline46mondego>    result = 31 * result + (language != null ? language.hashCode() : 0);<newline46mondego>    result = 31 * result + (productCode != null ? productCode.hashCode() : 0);<newline46mondego>    result = 31 * result + status;<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"1544splitHere46","12030956splitHere46","...\Packages\Java\JavaC.sublime-build"
"1545splitHere46","12030956splitHere46","{<newline46mondego>  <doubleQuotes46>cmd<doubleQuotes46>: [<doubleQuotes46>javac<doubleQuotes46>, <doubleQuotes46>$file_name<doubleQuotes46>,<doubleQuotes46>&&<doubleQuotes46>,<doubleQuotes46>java<doubleQuotes46>, <doubleQuotes46>$file_base_name<doubleQuotes46>],<newline46mondego>  <doubleQuotes46>working_dir<doubleQuotes46>: <doubleQuotes46>${project_path:${folder}}<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>selector<doubleQuotes46>: <doubleQuotes46>source.java<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>shell<doubleQuotes46>: true<newline46mondego>}<newline46mondego>"
"1546splitHere46","12030993splitHere46","private UndoManager undoManager;<newline46mondego><newline46mondego>// In the constructor<newline46mondego><newline46mondego>undoManager = new UndoManager;<newline46mondego>Document doc = textArea.getDocument();<newline46mondego>doc.addUndoableEditListener(new UndoableEditListener() {<newline46mondego>    @Override<newline46mondego>    public void undoableEditHappened(UndoableEditEvent e) {<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Add edit<doubleQuotes46>);<newline46mondego>        undoManager.addEdit(e.getEdit());<newline46mondego><newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>InputMap im = textArea.getInputMap(JComponent.WHEN_FOCUSED);<newline46mondego>ActionMap am = textArea.getActionMap();<newline46mondego><newline46mondego>im.put(KeyStroke.getKeyStroke(KeyEvent.VK_Z, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()), <doubleQuotes46>Undo<doubleQuotes46>);<newline46mondego>im.put(KeyStroke.getKeyStroke(KeyEvent.VK_Y, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()), <doubleQuotes46>Redo<doubleQuotes46>);<newline46mondego><newline46mondego>am.put(<doubleQuotes46>Undo<doubleQuotes46>, new AbstractAction() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        try {<newline46mondego>            if (undoManager.canUndo()) {<newline46mondego>                undoManager.undo();<newline46mondego>            }<newline46mondego>        } catch (CannotUndoException exp) {<newline46mondego>            exp.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>am.put(<doubleQuotes46>Redo<doubleQuotes46>, new AbstractAction() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        try {<newline46mondego>            if (undoManager.canRedo()) {<newline46mondego>                undoManager.redo();<newline46mondego>            }<newline46mondego>        } catch (CannotUndoException exp) {<newline46mondego>            exp.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1547splitHere46","12031070splitHere46","System.setIn"
"1548splitHere46","12031155splitHere46","public class Object {<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>field1<doubleQuotes46>)<newline46mondego>    public String fieldOne;<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>field2<doubleQuotes46>)<newline46mondego>    public String fieldTwo;<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>field3<doubleQuotes46>)<newline46mondego>    public String fieldThree;<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>field4<doubleQuotes46>)<newline46mondego>    public String fieldFour;<newline46mondego>}<newline46mondego><newline46mondego>public class Name {<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>object1<doubleQuotes46>)<newline46mondego>    public Object obj;<newline46mondego>}<newline46mondego><newline46mondego>public class GsonObj {<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>Name<doubleQuotes46>)<newline46mondego>    public Name name;<newline46mondego>}<newline46mondego>"
"1549splitHere46","12031155splitHere46","String json = <doubleQuotes46>{\<doubleQuotes46>Name\<doubleQuotes46>:{<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>\<doubleQuotes46>object1\<doubleQuotes46>:{<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>\<doubleQuotes46>field1\<doubleQuotes46>:\<doubleQuotes46>17\<doubleQuotes46>,\<doubleQuotes46>field2\<doubleQuotes46>:\<doubleQuotes46>360\<doubleQuotes46>,\<doubleQuotes46>field3\<doubleQuotes46>:\<doubleQuotes46>19\<doubleQuotes46>,\<doubleQuotes46>field4\<doubleQuotes46>:\<doubleQuotes46>sun\<doubleQuotes46>,\<doubleQuotes46>field5\<doubleQuotes46>:\<doubleQuotes46>rain\<doubleQuotes46>}}}<doubleQuotes46>;<newline46mondego><newline46mondego>Gson gson = new Gson();<newline46mondego>GsonObj jsonResult = gson.fromJson(json, GsonObj.class);<newline46mondego>Log.d(<doubleQuotes46>test<doubleQuotes46>, <doubleQuotes46>field one: <doubleQuotes46>+jsonResult.name.obj.fieldOne);<newline46mondego>Log.d(<doubleQuotes46>test<doubleQuotes46>, <doubleQuotes46>field two: <doubleQuotes46>+jsonResult.name.obj.fieldTwo);<newline46mondego>Log.d(<doubleQuotes46>test<doubleQuotes46>, <doubleQuotes46>field three: <doubleQuotes46>+jsonResult.name.obj.fieldThree);<newline46mondego>Log.d(<doubleQuotes46>test<doubleQuotes46>, <doubleQuotes46>field four: <doubleQuotes46>+jsonResult.name.obj.fieldFour);<newline46mondego>"
"1550splitHere46","12031275splitHere46","YourClass.class.getResourceAsStream(<doubleQuotes46>/path/to/file<doubleQuotes46>)"
"1551splitHere46","12031383splitHere46","DateTime _startDate = new DateTime(_sLong * 1000L);<newline46mondego>"
"1552splitHere46","12031409splitHere46","@Override<newline46mondego>public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) {<newline46mondego>    super.onCreateContextMenu(menu, v, menuInfo);<newline46mondego>    MenuInflater inflater = getMenuInflater();<newline46mondego>    inflater.inflate(R.menu.context_menu, menu);<newline46mondego>    //Set a title for the context menu<newline46mondego>    menu.setHeaderTitle(<doubleQuotes46>Title of menu<doubleQuotes46>);<newline46mondego><newline46mondego>    // Select a menu item then change it's title (text)<newline46mondego>    MenuItem mi = (MenuItem) menu.findItem(R.id.new_game);<newline46mondego>    mi.setTitle(<doubleQuotes46>Text of item<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1553splitHere46","12031585splitHere46","onListItemClick"
"1554splitHere46","12031585splitHere46","String cheese = (String) getListAdapter().getItem(position);<newline46mondego>"
"1555splitHere46","12031585splitHere46","String cheese = (String) l.getItemAtPosition(position);<newline46mondego>"
"1556splitHere46","12031645splitHere46","executorService.awaitTermination"
"1557splitHere46","12031645splitHere46","List<Future> futures = ...<newline46mondego> for(...) {<newline46mondego>      futures.add(executor.submit(...));<newline46mondego> }<newline46mondego><newline46mondego> for(Future f : futures) {<newline46mondego>       //this will throw an exception if an exception<newline46mondego>       //occurred executing the task, insert error handling as <newline46mondego>       //appropriate, perhaps calling cancel on tasks that<newline46mondego>       //have not yet completed<newline46mondego>       f.get();<newline46mondego> }<newline46mondego> //at this point all tasks have completed<newline46mondego>"
"1558splitHere46","12031666splitHere46","public class UUIDArgumentFactory implements ArgumentFactory<UUID> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean accepts(Class<?> expectedType, Object value, StatementContext ctx) {<newline46mondego>        return value instanceof UUID;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Argument build(Class<?> expectedType, UUID value, StatementContext ctx) {<newline46mondego>        return new UUIDArgument(value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1559splitHere46","12031666splitHere46","public class UUIDArgument implements Argument {<newline46mondego>    private final UUID value;<newline46mondego><newline46mondego>    public UUIDArgument(UUID value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void apply(int position, PreparedStatement statement, StatementContext ctx) throws SQLException {<newline46mondego>        statement.setString(position, value.toString());<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"1560splitHere46","12031666splitHere46","final DatabaseFactory factory = new DatabaseFactory(environment);<newline46mondego>final Database db = factory.build(configuration.getDatabaseConfiguration(), <doubleQuotes46>sqlserver<doubleQuotes46>);<newline46mondego>db.registerArgumentFactory(new UUIDArgumentFactory());<newline46mondego>"
"1561splitHere46","12031697splitHere46","return ((in==null)?in:<doubleQuotes46>None<doubleQuotes46>);<newline46mondego>"
"1562splitHere46","12031697splitHere46","return ((in==null)?<doubleQuotes46>None<doubleQuotes46>:in);<newline46mondego>"
"1563splitHere46","12031697splitHere46","HashMap<String, String>"
"1564splitHere46","12031699splitHere46","list"
"1565splitHere46","12031699splitHere46","ListView"
"1566splitHere46","12031699splitHere46","extends"
"1567splitHere46","12031699splitHere46","implements"
"1568splitHere46","12031699splitHere46","subclasses"
"1569splitHere46","12031699splitHere46","interfaces"
"1570splitHere46","12031819splitHere46",".jars"
"1571splitHere46","12031819splitHere46","JARs"
"1572splitHere46","12031819splitHere46","WEB-INF/lib"
"1573splitHere46","12031819splitHere46","executeQuery(String sql)"
"1574splitHere46","12031819splitHere46","XXXXX"
"1575splitHere46","12031819splitHere46","XXXX"
"1576splitHere46","12031819splitHere46","public"
"1577splitHere46","12031819splitHere46","XXXX.executeQuery(param)"
"1578splitHere46","12031819splitHere46","public"
"1579splitHere46","12031819splitHere46","XXXX"
"1580splitHere46","12031911splitHere46","DefaultHttpClient httpClient = new DefaultHttpClient();<newline46mondego>HttpPost httpPost = new HttpPost(<doubleQuotes46>http://localhost/file.php?value=<doubleQuotes46>+output);//output is the variable you used in your program<newline46mondego>     httpClient.execute(httpPost);<newline46mondego>"
"1581splitHere46","12031911splitHere46","<?php<newline46mondego>  $n=<doubleQuotes46>file.txt<doubleQuotes46>;<newline46mondego>  $f=fopen($n,'w');<newline46mondego>  $value=$_GET['value'];<newline46mondego>  fwrite($f,$value);<newline46mondego>  fclose($f);<newline46mondego>  ?><newline46mondego>"
"1582splitHere46","12031980splitHere46","public static <T> List<T> asList(T... a)<newline46mondego>"
"1583splitHere46","12031980splitHere46","List<Integer> list = Arrays.asList(1, 2, 3, 4)<newline46mondego>"
"1584splitHere46","12031980splitHere46","List<Integer> list = Arrays.asList(new Integer[] { 1, 2, 3, 4 })<newline46mondego>"
"1585splitHere46","12031980splitHere46","List<Integer> list = Arrays.asList(new int[] { 1, 2, 3, 4} )<newline46mondego>"
"1586splitHere46","12031980splitHere46","public static List<Integer> asList(int i...);<newline46mondego>"
"1587splitHere46","12032140splitHere46","0"
"1588splitHere46","12032140splitHere46","2*(0)+1=1"
"1589splitHere46","12032140splitHere46","2*(0)+2=2"
"1590splitHere46","12032140splitHere46","1 < vectorObject.size()"
"1591splitHere46","12032140splitHere46","2 < vectorObject.size()"
"1592splitHere46","12032140splitHere46","Vector"
"1593splitHere46","12032140splitHere46","ArrayList"
"1594splitHere46","12032140splitHere46","i < vectorObject.size()"
"1595splitHere46","12032140splitHere46","i <= vectorObject.size()"
"1596splitHere46","12032140splitHere46","i < vectorObject.size()"
"1597splitHere46","12032140splitHere46","i"
"1598splitHere46","12032140splitHere46","int size = vectorObject.size();<newline46mondego>if (2*i+2 < size) { /* Two-child case */ }<newline46mondego>else if (2*i+1 < size) { /* One-child case */ }<newline46mondego>else { /* No children case */ }<newline46mondego>"
"1599splitHere46","12032140splitHere46","int size = vectorObject.size();<newline46mondego>if (2*i+1 < size) {<newline46mondego>  // Handle left child<newline46mondego>  if (2*i+2 < size) {<newline46mondego>    // Handle right child<newline46mondego>  }<newline46mondego>  else {<newline46mondego>    // No right child<newline46mondego>  }<newline46mondego>}<newline46mondego>else { /* No children */ }<newline46mondego>"
"1600splitHere46","12032388splitHere46","namespace"
"1601splitHere46","12032388splitHere46","<atom:link href=<doubleQuotes46>http://www.nytimes.com/2012/08/19/business/new-wave-of-adept-robots-is-changing-global-industry.html?partner=rss&amp;emc=rss<doubleQuotes46> rel=<doubleQuotes46>standout<doubleQuotes46>/><newline46mondego><title>The iEconomy: New Wave of Deft Robots Is Changing Global Industry</title><newline46mondego><link>http://feeds.nytimes.com/click.phdo?i=5861b5e3f6b66da6ca12beab1e5d8729</link><newline46mondego>"
"1602splitHere46","12032388splitHere46","<title>Syrian Rebels Claim to Have Brought Down a Jet</title><newline46mondego><link>http://feeds.nytimes.com/click.phdo?i=314bd32f9d6141a500e76e3076c489c9</link><newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego><atom:link rel=<doubleQuotes46>standout<doubleQuotes46> href=<doubleQuotes46>http://www.nytimes.com/2012/08/14/world/middleeast/syrian-rebels-claim-to-have-brought-down-a-jet.html?partner=rss&amp;emc=rss<doubleQuotes46>/><newline46mondego>"
"1603splitHere46","12032388splitHere46","<atmoic:link>"
"1604splitHere46","12032388splitHere46","factory.setNamespaceAware(true);<newline46mondego>"
"1605splitHere46","12032388splitHere46","title = The iEconomy: New Wave of Deft Robots Is Changing Global Industry<newline46mondego>link = http://feeds.nytimes.com/click.phdo?i=5861b5e3f6b66da6ca12beab1e5d8729<newline46mondego>pubDate = Sun, 19 Aug 2012 21:26:33 GMT<newline46mondego>"
"1606splitHere46","12032424splitHere46","public class MultipleButton extends Activity {<newline46mondego><newline46mondego>    String night;<newline46mondego>    Button mBtn1, mBtn2, mBtn3, mBtn4, mBtn5;<newline46mondego><newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego>        mBtn1=(Button)findViewById(R.id.button1);<newline46mondego>        mBtn1.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                night=<doubleQuotes46>button1<doubleQuotes46>;<newline46mondego>                Intent intent = new Intent();<newline46mondego>                intent.setClass(MultipleButton.this, My_videos.class);<newline46mondego>                intent.putExtra(<doubleQuotes46>video<doubleQuotes46>, night);<newline46mondego>                startActivity(intent);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        mBtn2=(Button)findViewById(R.id.button2);<newline46mondego>        mBtn2.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                night=<doubleQuotes46>button2<doubleQuotes46>;<newline46mondego>                Intent intent = new Intent();<newline46mondego>                intent.setClass(MultipleButton.this, My_videos.class);<newline46mondego>                intent.putExtra(<doubleQuotes46>video<doubleQuotes46>, night);<newline46mondego>                startActivity(intent);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        mBtn3=(Button)findViewById(R.id.button3);<newline46mondego>        mBtn3.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                night=<doubleQuotes46>button3<doubleQuotes46>;<newline46mondego>                Intent intent = new Intent();<newline46mondego>                intent.setClass(MultipleButton.this, My_videos.class);<newline46mondego>                intent.putExtra(<doubleQuotes46>video<doubleQuotes46>, night);<newline46mondego>                startActivity(intent);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        mBtn4=(Button)findViewById(R.id.button4);<newline46mondego>        mBtn4.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                night=<doubleQuotes46>button4<doubleQuotes46>;<newline46mondego>                Intent intent = new Intent();<newline46mondego>                intent.setClass(MultipleButton.this, My_videos.class);<newline46mondego>                intent.putExtra(<doubleQuotes46>video<doubleQuotes46>, night);<newline46mondego>                startActivity(intent);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        mBtn5=(Button)findViewById(R.id.button5);<newline46mondego>        mBtn5.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                night=<doubleQuotes46>button5<doubleQuotes46>;<newline46mondego>                Intent intent = new Intent();<newline46mondego>                intent.setClass(MultipleButton.this, My_videos.class);<newline46mondego>                intent.putExtra(<doubleQuotes46>video<doubleQuotes46>, night);<newline46mondego>                startActivity(intent);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1607splitHere46","12032424splitHere46","public class My_videos extends Activity {<newline46mondego>    private VideoView vid;<newline46mondego>    String night;<newline46mondego><newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.video);<newline46mondego><newline46mondego>        Bundle bdl = getIntent().getExtras();<newline46mondego>        night = bdl.getString(<doubleQuotes46>video<doubleQuotes46>);<newline46mondego><newline46mondego>        vid = (VideoView) findViewById(R.id.videoView1);<newline46mondego><newline46mondego>        if (night.equalsIgnoreCase(<doubleQuotes46>button1<doubleQuotes46>)) {<newline46mondego>            vid.setVideoURI(Uri.parse(<doubleQuotes46>android.resource://<doubleQuotes46> + getPackageName()<newline46mondego>                    + <doubleQuotes46>/<doubleQuotes46> + R.raw.a));<newline46mondego>            vid.setMediaController(new MediaController(My_videos.this));<newline46mondego>            vid.requestFocus();<newline46mondego>            vid.start();<newline46mondego>        } else if (night.equalsIgnoreCase(<doubleQuotes46>button2<doubleQuotes46>)) {<newline46mondego>            vid.setVideoURI(Uri.parse(<doubleQuotes46>android.resource://<doubleQuotes46> + getPackageName()<newline46mondego>                    + <doubleQuotes46>/<doubleQuotes46> + R.raw.b));<newline46mondego>            vid.setMediaController(new MediaController(My_videos.this));<newline46mondego>            vid.requestFocus();<newline46mondego>            vid.start();<newline46mondego>        } else if (night.equalsIgnoreCase(<doubleQuotes46>button3<doubleQuotes46>)) {<newline46mondego>            vid.setVideoURI(Uri.parse(<doubleQuotes46>android.resource://<doubleQuotes46> + getPackageName()<newline46mondego>                    + <doubleQuotes46>/<doubleQuotes46> + R.raw.c));<newline46mondego>            vid.setMediaController(new MediaController(My_videos.this));<newline46mondego>            vid.requestFocus();<newline46mondego>            vid.start();<newline46mondego>        } else if (night.equalsIgnoreCase(<doubleQuotes46>button4<doubleQuotes46>)) {<newline46mondego>            vid.setVideoURI(Uri.parse(<doubleQuotes46>android.resource://<doubleQuotes46> + getPackageName()<newline46mondego>                    + <doubleQuotes46>/<doubleQuotes46> + R.raw.d));<newline46mondego>            vid.setMediaController(new MediaController(My_videos.this));<newline46mondego>            vid.requestFocus();<newline46mondego>            vid.start();<newline46mondego>        } else if (night.equalsIgnoreCase(<doubleQuotes46>button5<doubleQuotes46>)) {<newline46mondego>            vid.setVideoURI(Uri.parse(<doubleQuotes46>android.resource://<doubleQuotes46> + getPackageName()<newline46mondego>                    + <doubleQuotes46>/<doubleQuotes46> + R.raw.e));<newline46mondego>            vid.setMediaController(new MediaController(My_videos.this));<newline46mondego>            vid.requestFocus();<newline46mondego>            vid.start();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1608splitHere46","12032424splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button2<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button3<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button4<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/button5<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego><newline46mondego></LinearLayout><newline46mondego>"
"1609splitHere46","12032441splitHere46","static JNINativeMethod methods[] = {<newline46mondego>    {<doubleQuotes46>hashCode<doubleQuotes46>,    <doubleQuotes46>()I<doubleQuotes46>,                    (void *)&JVM_IHashCode},<newline46mondego>    {<doubleQuotes46>wait<doubleQuotes46>,        <doubleQuotes46>(J)V<doubleQuotes46>,                   (void *)&JVM_MonitorWait},<newline46mondego>    {<doubleQuotes46>notify<doubleQuotes46>,      <doubleQuotes46>()V<doubleQuotes46>,                    (void *)&JVM_MonitorNotify},<newline46mondego>    {<doubleQuotes46>notifyAll<doubleQuotes46>,   <doubleQuotes46>()V<doubleQuotes46>,                    (void *)&JVM_MonitorNotifyAll},<newline46mondego>    {<doubleQuotes46>clone<doubleQuotes46>,       <doubleQuotes46>()Ljava/lang/Object;<doubleQuotes46>,   (void *)&JVM_Clone},<newline46mondego>};<newline46mondego>"
"1610splitHere46","12032441splitHere46","JVM_ENTRY(jobject, JVM_Clone(JNIEnv* env, jobject handle))<newline46mondego>  JVMWrapper(<doubleQuotes46>JVM_Clone<doubleQuotes46>);<newline46mondego>  Handle obj(THREAD, JNIHandles::resolve_non_null(handle));<newline46mondego>  const KlassHandle klass (THREAD, obj->klass());<newline46mondego>  JvmtiVMObjectAllocEventCollector oam;<newline46mondego><newline46mondego>#ifdef ASSERT<newline46mondego>  // Just checking that the cloneable flag is set correct<newline46mondego>  if (obj->is_javaArray()) {<newline46mondego>    guarantee(klass->is_cloneable(), <doubleQuotes46>all arrays are cloneable<doubleQuotes46>);<newline46mondego>  } else {<newline46mondego>    guarantee(obj->is_instance(), <doubleQuotes46>should be instanceOop<doubleQuotes46>);<newline46mondego>    bool cloneable = klass->is_subtype_of(SystemDictionary::Cloneable_klass());<newline46mondego>    guarantee(cloneable == klass->is_cloneable(), <doubleQuotes46>incorrect cloneable flag<doubleQuotes46>);<newline46mondego>  }<newline46mondego>#endif<newline46mondego><newline46mondego>  // Check if class of obj supports the Cloneable interface.<newline46mondego>  // All arrays are considered to be cloneable (See JLS 20.1.5)<newline46mondego>  if (!klass->is_cloneable()) {<newline46mondego>    ResourceMark rm(THREAD);<newline46mondego>    THROW_MSG_0(vmSymbols::java_lang_CloneNotSupportedException(), klass->external_name());<newline46mondego>  }<newline46mondego><newline46mondego>  // Make shallow object copy<newline46mondego>  const int size = obj->size();<newline46mondego>  oop new_obj = NULL;<newline46mondego>  if (obj->is_javaArray()) {<newline46mondego>    const int length = ((arrayOop)obj())->length();<newline46mondego>    new_obj = CollectedHeap::array_allocate(klass, size, length, CHECK_NULL);<newline46mondego>  } else {<newline46mondego>    new_obj = CollectedHeap::obj_allocate(klass, size, CHECK_NULL);<newline46mondego>  }<newline46mondego>  // 4839641 (4840070): We must do an oop-atomic copy, because if another thread<newline46mondego>  // is modifying a reference field in the clonee, a non-oop-atomic copy might<newline46mondego>  // be suspended in the middle of copying the pointer and end up with parts<newline46mondego>  // of two different pointers in the field.  Subsequent dereferences will crash.<newline46mondego>  // 4846409: an oop-copy of objects with long or double fields or arrays of same<newline46mondego>  // won't copy the longs/doubles atomically in 32-bit vm's, so we copy jlongs instead<newline46mondego>  // of oops.  We know objects are aligned on a minimum of an jlong boundary.<newline46mondego>  // The same is true of StubRoutines::object_copy and the various oop_copy<newline46mondego>  // variants, and of the code generated by the inline_native_clone intrinsic.<newline46mondego>  assert(MinObjAlignmentInBytes >= BytesPerLong, <doubleQuotes46>objects misaligned<doubleQuotes46>);<newline46mondego>  Copy::conjoint_jlongs_atomic((jlong*)obj(), (jlong*)new_obj,<newline46mondego>                               (size_t)align_object_size(size) / HeapWordsPerLong);<newline46mondego>  // Clear the header<newline46mondego>  new_obj->init_mark();<newline46mondego><newline46mondego>  // Store check (mark entire object and let gc sort it out)<newline46mondego>  BarrierSet* bs = Universe::heap()->barrier_set();<newline46mondego>  assert(bs->has_write_region_opt(), <doubleQuotes46>Barrier set does not have write_region<doubleQuotes46>);<newline46mondego>  bs->write_region(MemRegion((HeapWord*)new_obj, size));<newline46mondego><newline46mondego>  // Caution: this involves a java upcall, so the clone should be<newline46mondego>  // <doubleQuotes46>gc-robust<doubleQuotes46> by this stage.<newline46mondego>  if (klass->has_finalizer()) {<newline46mondego>    assert(obj->is_instance(), <doubleQuotes46>should be instanceOop<doubleQuotes46>);<newline46mondego>    new_obj = instanceKlass::register_finalizer(instanceOop(new_obj), CHECK_NULL);<newline46mondego>  }<newline46mondego><newline46mondego>  return JNIHandles::make_local(env, oop(new_obj));<newline46mondego>JVM_END<newline46mondego>"
"1611splitHere46","12032455splitHere46","while(true)<newline46mondego>{<newline46mondego>  if(_val)  //_val is your boolean variable<newline46mondego>  {<newline46mondego>      // your logic<newline46mondego>  }<newline46mondego>  Thread.sleep(100);<newline46mondego><newline46mondego>}<newline46mondego>"
"1612splitHere46","12032455splitHere46","_val"
"1613splitHere46","12032630splitHere46","abc.foo.bar"
"1614splitHere46","12032630splitHere46","/abc/foo/bar"
"1615splitHere46","12032630splitHere46","abc"
"1616splitHere46","12032630splitHere46","abc"
"1617splitHere46","12032630splitHere46","abc"
"1618splitHere46","12032630splitHere46","abc"
"1619splitHere46","12032630splitHere46","javac abc/Employee.java<newline46mondego>"
"1620splitHere46","12032630splitHere46","abc"
"1621splitHere46","12032630splitHere46","javac HelloWorld.java<newline46mondego>"
"1622splitHere46","12032630splitHere46","1)"
"1623splitHere46","12032727splitHere46","String tokens[] = <doubleQuotes46> 1 ON OFF<doubleQuotes46>.split(<doubleQuotes46>\\b<doubleQuotes46>);<newline46mondego>"
"1624splitHere46","12032727splitHere46","{ <doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>ON<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>OFF<doubleQuotes46> }<newline46mondego>"
"1625splitHere46","12032801splitHere46","paintComponent()"
"1626splitHere46","12032801splitHere46","super.paint()"
"1627splitHere46","12032801splitHere46","super.paintComponent()"
"1628splitHere46","12032801splitHere46","JComponent.paint()"
"1629splitHere46","12032801splitHere46","paintComponent()"
"1630splitHere46","12032801splitHere46","paintBorder()"
"1631splitHere46","12032801splitHere46","paintChildren()"
"1632splitHere46","12032801splitHere46","super.paint()"
"1633splitHere46","12032801splitHere46","paintComponent()"
"1634splitHere46","12032801splitHere46","StackOverflowError"
"1635splitHere46","12032849splitHere46","Thread"
"1636splitHere46","12032849splitHere46","Socket"
"1637splitHere46","12032849splitHere46","java.io"
"1638splitHere46","12032849splitHere46","Serializable"
"1639splitHere46","12032849splitHere46","Interruptable"
"1640splitHere46","12032849splitHere46","ObjectState interrupt()"
"1641splitHere46","12032849splitHere46","void continue(ObjectState)"
"1642splitHere46","12032936splitHere46","int factorial(int x) {<newline46mondego>  if (x == 0) return 1;<newline46mondego>  else return x*factorial(x-1);<newline46mondego>}<newline46mondego>"
"1643splitHere46","12032936splitHere46","int factorial_helper(int acc, int x) {<newline46mondego>   if (x == 0) return acc;<newline46mondego>   else return factorial_helper(acc*x, x-1);<newline46mondego>}<newline46mondego><newline46mondego>int factorial(int x) { return factorial_helper(1, x); }<newline46mondego>"
"1644splitHere46","12033168splitHere46","[1]"
"1645splitHere46","12033168splitHere46","String.split()"
"1646splitHere46","12033168splitHere46","[1]"
"1647splitHere46","12033168splitHere46","String strs[] = details.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>String magnitudeString = strs[1];<newline46mondego>"
"1648splitHere46","12033168splitHere46","split"
"1649splitHere46","12033168splitHere46","length"
"1650splitHere46","12033342splitHere46","<TextView<newline46mondego>    android:id=<doubleQuotes46>@+id/twxmorq<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_marginBottom=<doubleQuotes46>5dp<doubleQuotes46><newline46mondego>    android:layout_marginTop=<doubleQuotes46>5dp<doubleQuotes46><newline46mondego>    android:ellipsize=<doubleQuotes46>marquee<doubleQuotes46><newline46mondego>    android:marqueeRepeatLimit=<doubleQuotes46>marquee_forever<doubleQuotes46><newline46mondego>    android:padding=<doubleQuotes46>5dip<doubleQuotes46><newline46mondego>    android:scrollHorizontally=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    android:singleLine=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    ndroid:lines=<doubleQuotes46>1<doubleQuotes46><newline46mondego>    android:textColor=<doubleQuotes46>#FF0000<doubleQuotes46> <newline46mondego>    android:fadingEdge=<doubleQuotes46>horizontal<doubleQuotes46>/><newline46mondego>"
"1651splitHere46","12033342splitHere46","myString = myString + <doubleQuotes46>| <doubleQuotes46>+ json_data.getString(<doubleQuotes46>news_title<doubleQuotes46>).toString();<newline46mondego><newline46mondego>txt1 = (TextView) findViewById(R.id.twxmorq);<newline46mondego>txt1.setSelected(true);<newline46mondego>txt1.setText(myString1);<newline46mondego>"
"1652splitHere46","12033548splitHere46","DAY_OF_WEEK"
"1653splitHere46","12033548splitHere46","calendar"
"1654splitHere46","12033548splitHere46","next"
"1655splitHere46","12033548splitHere46","MONDAY"
"1656splitHere46","12033548splitHere46","three"
"1657splitHere46","12033548splitHere46","SUNDAY"
"1658splitHere46","12033548splitHere46","two"
"1659splitHere46","12033548splitHere46","calendar.setTime(myDate);<newline46mondego> int dayOfWeek=calendar.get(Calendar.DAY_OF_WEEK);<newline46mondego> if(dayOfWeek==Calendar.MONDAY)<newline46mondego>    calendar.add(Calendar.DAY_OF_YEAR, -3); <newline46mondego> else<newline46mondego> if(dayOfWeek==Calendar.SUNDAY)<newline46mondego>    calendar.add(Calendar.DAY_OF_YEAR, -2);<newline46mondego> else<newline46mondego>    calendar.add(Calendar.DAY_OF_YEAR, -1);<newline46mondego>"
"1660splitHere46","12033567splitHere46","public AudioFileFormat getAudioFileFormat(InputStream inputStream, long mediaLength) throws UnsupportedAudioFileException, IOException<newline46mondego>{<newline46mondego>    if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>>MpegAudioFileReader.getAudioFileFormat(InputStream inputStream, long mediaLength): begin<doubleQuotes46>);<newline46mondego>    HashMap aff_properties = new HashMap();<newline46mondego>    HashMap af_properties = new HashMap();<newline46mondego>    int mLength = (int) mediaLength;<newline46mondego>    int size = inputStream.available();<newline46mondego>    PushbackInputStream pis = new PushbackInputStream(inputStream, MARK_LIMIT);<newline46mondego>    byte head[] = new byte[22];<newline46mondego>    pis.read(head);<newline46mondego>    if (TDebug.TraceAudioFileReader)<newline46mondego>    {<newline46mondego>        TDebug.out(<doubleQuotes46>InputStream : <doubleQuotes46> + inputStream + <doubleQuotes46> =><doubleQuotes46> + new String(head));<newline46mondego>    }<newline46mondego><newline46mondego>    // Check for WAV, AU, and AIFF, Ogg Vorbis, Flac, MAC file formats.<newline46mondego>    // Next check for Shoutcast (supported) and OGG (unsupported) streams.<newline46mondego>    if ((head[0] == 'R') && (head[1] == 'I') && (head[2] == 'F') && (head[3] == 'F') && (head[8] == 'W') && (head[9] == 'A') && (head[10] == 'V') && (head[11] == 'E'))<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>RIFF/WAV stream found<doubleQuotes46>);<newline46mondego>        int isPCM = ((head[21]<<8)&0x0000FF00) | ((head[20])&0x00000FF);<newline46mondego>        if (weak == null)<newline46mondego>        {<newline46mondego>            if (isPCM == 1) throw new UnsupportedAudioFileException(<doubleQuotes46>WAV PCM stream found<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    else if ((head[0] == '.') && (head[1] == 's') && (head[2] == 'n') && (head[3] == 'd'))<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>AU stream found<doubleQuotes46>);<newline46mondego>        if (weak == null) throw new UnsupportedAudioFileException(<doubleQuotes46>AU stream found<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    else if ((head[0] == 'F') && (head[1] == 'O') && (head[2] == 'R') && (head[3] == 'M') && (head[8] == 'A') && (head[9] == 'I') && (head[10] == 'F') && (head[11] == 'F'))<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>AIFF stream found<doubleQuotes46>);<newline46mondego>        if (weak == null) throw new UnsupportedAudioFileException(<doubleQuotes46>AIFF stream found<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    else if (((head[0] == 'M') | (head[0] == 'm')) && ((head[1] == 'A') | (head[1] == 'a')) && ((head[2] == 'C') | (head[2] == 'c')))<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>APE stream found<doubleQuotes46>);<newline46mondego>        if (weak == null) throw new UnsupportedAudioFileException(<doubleQuotes46>APE stream found<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    else if (((head[0] == 'F') | (head[0] == 'f')) && ((head[1] == 'L') | (head[1] == 'l')) && ((head[2] == 'A') | (head[2] == 'a')) && ((head[3] == 'C') | (head[3] == 'c')))<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>FLAC stream found<doubleQuotes46>);<newline46mondego>        if (weak == null) throw new UnsupportedAudioFileException(<doubleQuotes46>FLAC stream found<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // Shoutcast stream ?<newline46mondego>    else if (((head[0] == 'I') | (head[0] == 'i')) && ((head[1] == 'C') | (head[1] == 'c')) && ((head[2] == 'Y') | (head[2] == 'y')))<newline46mondego>    {<newline46mondego>        pis.unread(head);<newline46mondego>        // Load shoutcast meta data.<newline46mondego>        loadShoutcastInfo(pis, aff_properties);<newline46mondego>    }<newline46mondego>    // Ogg stream ?<newline46mondego>    else if (((head[0] == 'O') | (head[0] == 'o')) && ((head[1] == 'G') | (head[1] == 'g')) && ((head[2] == 'G') | (head[2] == 'g')))<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>Ogg stream found<doubleQuotes46>);<newline46mondego>        if (weak == null) throw new UnsupportedAudioFileException(<doubleQuotes46>Ogg stream found<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // No, so pushback.<newline46mondego>    else<newline46mondego>    {<newline46mondego>        pis.unread(head);<newline46mondego>    }<newline46mondego>    // MPEG header info.<newline46mondego>    int nVersion = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nLayer = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nSFIndex = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nMode = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int FrameSize = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nFrameSize = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nFrequency = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nTotalFrames = AudioSystem.NOT_SPECIFIED;<newline46mondego>    float FrameRate = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int BitRate = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nChannels = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nHeader = AudioSystem.NOT_SPECIFIED;<newline46mondego>    int nTotalMS = AudioSystem.NOT_SPECIFIED;<newline46mondego>    boolean nVBR = false;<newline46mondego>    AudioFormat.Encoding encoding = null;<newline46mondego>    try<newline46mondego>    {<newline46mondego>        Bitstream m_bitstream = new Bitstream(pis);<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.header.pos<doubleQuotes46>, new Integer(m_bitstream.header_pos()));<newline46mondego>        Header m_header = m_bitstream.readFrame();<newline46mondego>        // nVersion = 0 => MPEG2-LSF (Including MPEG2.5), nVersion = 1 => MPEG1<newline46mondego>        nVersion = m_header.version();<newline46mondego>        if (nVersion == 2) aff_properties.put(<doubleQuotes46>mp3.version.mpeg<doubleQuotes46>, Float.toString(2.5f));<newline46mondego>        else aff_properties.put(<doubleQuotes46>mp3.version.mpeg<doubleQuotes46>, Integer.toString(2 - nVersion));<newline46mondego>        // nLayer = 1,2,3<newline46mondego>        nLayer = m_header.layer();<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.version.layer<doubleQuotes46>, Integer.toString(nLayer));<newline46mondego>        nSFIndex = m_header.sample_frequency();<newline46mondego>        nMode = m_header.mode();<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.mode<doubleQuotes46>, new Integer(nMode));<newline46mondego>        nChannels = nMode == 3 ? 1 : 2;<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.channels<doubleQuotes46>, new Integer(nChannels));<newline46mondego>        nVBR = m_header.vbr();<newline46mondego>        af_properties.put(<doubleQuotes46>vbr<doubleQuotes46>, new Boolean(nVBR));<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.vbr<doubleQuotes46>, new Boolean(nVBR));<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.vbr.scale<doubleQuotes46>, new Integer(m_header.vbr_scale()));<newline46mondego>        FrameSize = m_header.calculate_framesize();<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.framesize.bytes<doubleQuotes46>, new Integer(FrameSize));<newline46mondego>        if (FrameSize < 0) throw new UnsupportedAudioFileException(<doubleQuotes46>Invalid FrameSize : <doubleQuotes46> + FrameSize);<newline46mondego>        nFrequency = m_header.frequency();<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.frequency.hz<doubleQuotes46>, new Integer(nFrequency));<newline46mondego>        FrameRate = (float) ((1.0 / (m_header.ms_per_frame())) * 1000.0);<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.framerate.fps<doubleQuotes46>, new Float(FrameRate));<newline46mondego>        if (FrameRate < 0) throw new UnsupportedAudioFileException(<doubleQuotes46>Invalid FrameRate : <doubleQuotes46> + FrameRate);<newline46mondego>        if (mLength != AudioSystem.NOT_SPECIFIED)<newline46mondego>        {<newline46mondego>            aff_properties.put(<doubleQuotes46>mp3.length.bytes<doubleQuotes46>, new Integer(mLength));<newline46mondego>            nTotalFrames = m_header.max_number_of_frames(mLength);<newline46mondego>            aff_properties.put(<doubleQuotes46>mp3.length.frames<doubleQuotes46>, new Integer(nTotalFrames));<newline46mondego>        }<newline46mondego>        BitRate = m_header.bitrate();<newline46mondego>        af_properties.put(<doubleQuotes46>bitrate<doubleQuotes46>, new Integer(BitRate));<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.bitrate.nominal.bps<doubleQuotes46>, new Integer(BitRate));<newline46mondego>        nHeader = m_header.getSyncHeader();<newline46mondego>        encoding = sm_aEncodings[nVersion][nLayer - 1];<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.version.encoding<doubleQuotes46>, encoding.toString());<newline46mondego>        if (mLength != AudioSystem.NOT_SPECIFIED)<newline46mondego>        {<newline46mondego>            nTotalMS = Math.round(m_header.total_ms(mLength));<newline46mondego>            aff_properties.put(<doubleQuotes46>duration<doubleQuotes46>, new Long((long) nTotalMS * 1000L));<newline46mondego>        }<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.copyright<doubleQuotes46>, new Boolean(m_header.copyright()));<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.original<doubleQuotes46>, new Boolean(m_header.original()));<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.crc<doubleQuotes46>, new Boolean(m_header.checksums()));<newline46mondego>        aff_properties.put(<doubleQuotes46>mp3.padding<doubleQuotes46>, new Boolean(m_header.padding()));<newline46mondego>        InputStream id3v2 = m_bitstream.getRawID3v2();<newline46mondego>        if (id3v2 != null)<newline46mondego>        {<newline46mondego>            aff_properties.put(<doubleQuotes46>mp3.id3tag.v2<doubleQuotes46>, id3v2);<newline46mondego>            parseID3v2Frames(id3v2, aff_properties);<newline46mondego>        }<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(m_header.toString());<newline46mondego>    }<newline46mondego>    catch (Exception e)<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>not a MPEG stream:<doubleQuotes46> + e.getMessage());<newline46mondego>        throw new UnsupportedAudioFileException(<doubleQuotes46>not a MPEG stream:<doubleQuotes46> + e.getMessage());<newline46mondego>    }<newline46mondego>    // Deeper checks ?<newline46mondego>    int cVersion = (nHeader >> 19) & 0x3;<newline46mondego>    if (cVersion == 1)<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>not a MPEG stream: wrong version<doubleQuotes46>);<newline46mondego>        throw new UnsupportedAudioFileException(<doubleQuotes46>not a MPEG stream: wrong version<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    int cSFIndex = (nHeader >> 10) & 0x3;<newline46mondego>    if (cSFIndex == 3)<newline46mondego>    {<newline46mondego>        if (TDebug.TraceAudioFileReader) TDebug.out(<doubleQuotes46>not a MPEG stream: wrong sampling rate<doubleQuotes46>);<newline46mondego>        throw new UnsupportedAudioFileException(<doubleQuotes46>not a MPEG stream: wrong sampling rate<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // Look up for ID3v1 tag<newline46mondego>    if ((size == mediaLength) && (mediaLength != AudioSystem.NOT_SPECIFIED))<newline46mondego>    {<newline46mondego>        FileInputStream fis = (FileInputStream) inputStream;<newline46mondego>        byte[] id3v1 = new byte[128];<newline46mondego>        long bytesSkipped = fis.skip(inputStream.available() - id3v1.length);<newline46mondego>        int read = fis.read(id3v1, 0, id3v1.length);<newline46mondego>        if ((id3v1[0] == 'T') && (id3v1[1] == 'A') && (id3v1[2] == 'G'))<newline46mondego>        {<newline46mondego>            parseID3v1Frames(id3v1, aff_properties);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    AudioFormat format = new MpegAudioFormat(encoding, (float) nFrequency, AudioSystem.NOT_SPECIFIED // SampleSizeInBits - The size of a sample<newline46mondego>            , nChannels // Channels - The number of channels<newline46mondego>            , -1 // The number of bytes in each frame<newline46mondego>            , FrameRate // FrameRate - The number of frames played or recorded per second<newline46mondego>            , true, af_properties);<newline46mondego>    return new MpegAudioFileFormat(MpegFileFormatType.MP3, format, nTotalFrames, mLength, aff_properties);<newline46mondego>}<newline46mondego>"
"1661splitHere46","12033709splitHere46","State bestSolution; // add this global<newline46mondego><newline46mondego>public static State solveIDAStar(State initialState) {<newline46mondego>    int limit = initialState.getManhattanDistance() + 2 * initialState.getLinearConflicts();<newline46mondego>    bestSolution = null; // reset global to null<newline46mondego>    State result = null;<newline46mondego>    while(result == null) {<newline46mondego>        visitedStates.add(initialState); // It's a global variable<newline46mondego>        newLimit = INFINITY;<newline46mondego>        result = limitedSearch(initialState, limit);<newline46mondego>        limit = newLimit;<newline46mondego>        visitedStates.clear();<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>public static State limitedSearch(State current, int limit) {<newline46mondego>    for(State s : current.findNext()) {<newline46mondego>        if(s.equals(GOAL)) {<newline46mondego>            s.setParent(current);<newline46mondego>            return s;<newline46mondego>        }<newline46mondego>        if(!visitedStates.contains(s)) {<newline46mondego>            s.setPathCost(current.getPathCost() + 1);<newline46mondego>            s.setParent(current);<newline46mondego>            int currentCost = s.getManhattanDistance() + 2 * s.getLinearConflicts() + s.getPathCost();<newline46mondego>            if(currentCost <= limit) {<newline46mondego>                visitedStates.add(s);<newline46mondego>                State solution = limitedSearch(s, limit);<newline46mondego>                if(solution != null &&<newline46mondego>                   (bestSolution == null || solution.getPathCost() < bestSolution.getPathCost()))<newline46mondego>                        bestSolution = solution; // cache solution so far<newline46mondego>            } else {<newline46mondego>                if(currentCost < newLimit)<newline46mondego>                    newLimit = currentCost;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"1662splitHere46","12033709splitHere46","private Node depthFirstSearch(Node current, int currentCostBound, State goal)<newline46mondego>"
"1663splitHere46","12033709splitHere46","public static State limitedSearch(State current, int limit)<newline46mondego>"
"1664splitHere46","12033709splitHere46","if(!visitedStates.contains(s)) {<newline46mondego>    ...<newline46mondego>    visitedStates.add(s);<newline46mondego>"
"1665splitHere46","12033709splitHere46","public static State solveIDAStar(State initialState)"
"1666splitHere46","12033709splitHere46","public PuzzleSolution resolve(State start, State goal)"
"1667splitHere46","12033709splitHere46","nextCostBound+=2;"
"1668splitHere46","12033729splitHere46","IntentService"
"1669splitHere46","12033729splitHere46","Service"
"1670splitHere46","12033729splitHere46","AsyncTask"
"1671splitHere46","12033729splitHere46","stopSelf()"
"1672splitHere46","12033873splitHere46","<build><newline46mondego>  <pluginManagement><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>      <groupId>org.apache.maven.plugins</groupId><newline46mondego>      <artifactId>maven-pmd-plugin</artifactId><newline46mondego>      <version>2.7.1</version><newline46mondego>      <configuration><newline46mondego>          <targetJdk>1.7</targetJdk><newline46mondego>          <rulesets><newline46mondego>              <ruleset>tools/pmd-rules.xml</ruleset><newline46mondego>          </rulesets><newline46mondego>      </configuration><newline46mondego>    </plugin><newline46mondego>    <plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-compiler-plugin</artifactId><newline46mondego>        <version>2.5.1</version><newline46mondego>        <configuration><newline46mondego>            <source>1.7</source><newline46mondego>            <target>1.7</target><newline46mondego>        </configuration><newline46mondego>    </plugin><newline46mondego><newline46mondego>    </plugins><newline46mondego>  </pluginManagement><newline46mondego></build><newline46mondego><newline46mondego><reporting><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.apache.maven.plugins</groupId><newline46mondego>            <artifactId>maven-pmd-plugin</artifactId><newline46mondego>            <version>2.7.1</version><newline46mondego>        </plugin><newline46mondego>    </plugins><newline46mondego></reporting><newline46mondego>"
"1673splitHere46","12034046splitHere46","-classpath librariesDirectory <newline46mondego>"
"1674splitHere46","12034091splitHere46","<!-- Hibernate for ORM --><newline46mondego>    <dependency><newline46mondego>        <groupId>org.hibernate</groupId><newline46mondego>        <artifactId>hibernate-core</artifactId><newline46mondego>        <version>${hibernate.version}</version><newline46mondego>    </dependency><newline46mondego><newline46mondego>    <!-- Hibernate uses this for auditing --><newline46mondego>    <dependency><newline46mondego>        <groupId>org.hibernate</groupId><newline46mondego>        <artifactId>hibernate-envers</artifactId><newline46mondego>        <version>${evers.version}</version><newline46mondego>    </dependency><newline46mondego>"
"1675splitHere46","12034091splitHere46","<hibernate.version>4.1.0.Final</hibernate.version><newline46mondego>    <evers.version>4.1.0.Final</evers.version><newline46mondego>"
"1676splitHere46","12034091splitHere46","<dependency><newline46mondego>        <groupId>com.oracle</groupId><newline46mondego>        <artifactId>ojdbc6</artifactId><newline46mondego>        <version>11.1.0.7.0</version><newline46mondego>    </dependency><newline46mondego>"
"1677splitHere46","12034105splitHere46","java.util.Date"
"1678splitHere46","12034105splitHere46","java.util.Calendar"
"1679splitHere46","12034105splitHere46","java.util.Date"
"1680splitHere46","12034105splitHere46","java.util.Date"
"1681splitHere46","12034105splitHere46","java.util.Calendar"
"1682splitHere46","12034225splitHere46","private int getColumnByName(JTable table, String name) {<newline46mondego>    for (int i = 0; i < table.getColumnCount(); ++i)<newline46mondego>        if (table.getColumnName(i).equals(name))<newline46mondego>            return i;<newline46mondego>    return -1;<newline46mondego>}<newline46mondego>"
"1683splitHere46","12034225splitHere46","table.setValueAt(value, rowIndex, getColumnByName(table, colName));<newline46mondego><newline46mondego>table.getValueAt(rowIndex, getColumnByName(table, colName));<newline46mondego>"
"1684splitHere46","12034232splitHere46","public class MonitorObject{<newline46mondego>}<newline46mondego><newline46mondego>public class MyWaitNotify{<newline46mondego><newline46mondego>  MonitorObject myMonitorObject = new MonitorObject(); //To be used for synch<newline46mondego><newline46mondego>  public void doWait(){<newline46mondego>    synchronized(myMonitorObject){<newline46mondego>      try{<newline46mondego>        myMonitorObject.wait(); // Wait until the notify method is called by another thread<newline46mondego>      } catch(InterruptedException e){...}<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public void doNotify(){ //Notify waiting threads that they can continue<newline46mondego>    synchronized(myMonitorObject){<newline46mondego>      myMonitorObject.notify();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1685splitHere46","12034394splitHere46","new InputStreamReader(in, <doubleQuotes46>UTF-8<doubleQuotes46>); // or whatever encoding you need<newline46mondego>"
"1686splitHere46","12034637splitHere46","BufferedReader"
"1687splitHere46","12034637splitHere46","DataInputStream"
"1688splitHere46","12034637splitHere46","BufferedReader"
"1689splitHere46","12034637splitHere46","Server"
"1690splitHere46","12034637splitHere46","DataInputStream"
"1691splitHere46","12034637splitHere46","DataInputStream.readUTF()"
"1692splitHere46","12034637splitHere46","DataOutputStream.writeUTF()"
"1693splitHere46","12034637splitHere46","BufferedReader"
"1694splitHere46","12034637splitHere46","PrintWriter"
"1695splitHere46","12034637splitHere46","while(true) {<newline46mondego>    Socket sock = socket.accept();<newline46mondego>    DataOutputStream outByte = new DataOutputStream(sock.getOutputStream());<newline46mondego>    outByte.writeUTF(<doubleQuotes46>SOME_MESSAGE<doubleQuotes46>);<newline46mondego>    outByte.writeLong(948L);<newline46mondego>    outByte.flush();<newline46mondego>"
"1696splitHere46","12034637splitHere46","public static void main(String[]args)throws Exception<newline46mondego>{<newline46mondego>    Socket sock = new Socket(<doubleQuotes46>127.0.0.1<doubleQuotes46>,9999);<newline46mondego>    DataInputStream inByte = new DataInputStream(sock.getInputStream());<newline46mondego><newline46mondego>    System.out.println(inByte.readUTF());<newline46mondego>    long number  = inByte.readLong();<newline46mondego>    System.out.println(number);<newline46mondego>}<newline46mondego>"
"1697splitHere46","12034691splitHere46","ico"
"1698splitHere46","12034691splitHere46","C:\\Users\\Aksi\\Documents\\NetBeansProjects\\test'\\src\\test\\Black_B.ico<newline46mondego>"
"1699splitHere46","12034739splitHere46","@echo off<newline46mondego>REM Eventually change directory to the program directory <newline46mondego>cd C:\Users\User1\Documents\NetBeansProjects\Facebook\dist\<newline46mondego>REM run the program<newline46mondego><doubleQuotes46>C:\Program Files\Java\jdk1.7.0\bin\java.exe<doubleQuotes46> -jar <doubleQuotes46>C:\Users\User1\Documents\NetBeansProjects\Facebook\dist\Facebook.jar<doubleQuotes46><newline46mondego>"
"1700splitHere46","12034851splitHere46","getHeader()"
"1701splitHere46","12034851splitHere46","null"
"1702splitHere46","12034891splitHere46","java.lang.String"
"1703splitHere46","12034891splitHere46","for (int i = 0; i < len; i++) {<newline46mondego>            h = 31*h + val[off++];<newline46mondego>        }<newline46mondego>"
"1704splitHere46","12034891splitHere46","31 * (31 * messageID + serverID) + streamID"
"1705splitHere46","12034920splitHere46","roboelectric"
"1706splitHere46","12034920splitHere46","robolectric-0.9.4-src.jar"
"1707splitHere46","12034920splitHere46","robolectric-0.9.4-src.jar"
"1708splitHere46","12034920splitHere46","android"
"1709splitHere46","12034920splitHere46","com"
"1710splitHere46","12034920splitHere46","META-INF"
"1711splitHere46","12034920splitHere46","src"
"1712splitHere46","12034920splitHere46","robolectric-0.9.4-src.jar"
"1713splitHere46","12034920splitHere46","c:\robo"
"1714splitHere46","12034920splitHere46","c:\robo\src\android"
"1715splitHere46","12034920splitHere46","c:\robo\src\com"
"1716splitHere46","12034920splitHere46","c:\robo\src\META-INF"
"1717splitHere46","12034920splitHere46","c:\robo"
"1718splitHere46","12034920splitHere46","File -> Export -> Javadoc"
"1719splitHere46","12034920splitHere46","tools.jar"
"1720splitHere46","12034920splitHere46","overview"
"1721splitHere46","12034920splitHere46","Open Generated File in browser"
"1722splitHere46","12034939splitHere46","+"
"1723splitHere46","12034939splitHere46","stmt = <doubleQuotes46>SELECT * FROM user_zones JOIN pos WHERE user_zones.zone_id = (<doubleQuotes46> +<newline46mondego>       <doubleQuotes46>        CASE<doubleQuotes46> +<newline46mondego>       ...<newline46mondego>"
"1724splitHere46","12034944splitHere46","parse()"
"1725splitHere46","12034944splitHere46","parse()"
"1726splitHere46","12035018splitHere46","public class Line {<newline46mondego><newline46mondego>   private final Point start;<newline46mondego>   private final Point end;<newline46mondego><newline46mondego>   public Line(final Point start, final Point end) {<newline46mondego>       this.start = new Point(start);<newline46mondego>       this.end = new Point(end);<newline46mondego>   }<newline46mondego><newline46mondego>   public Point getStart() {<newline46mondego>       return new Point(start);<newline46mondego>   }<newline46mondego><newline46mondego>   public Point getEnd() {<newline46mondego>       return new Point(end);<newline46mondego>   }<newline46mondego>}  <newline46mondego>"
"1727splitHere46","12035018splitHere46","public Department(final Department dep)  <newline46mondego>{ ... } <newline46mondego>"
"1728splitHere46","12035018splitHere46","getDepartment()  <newline46mondego>{  <newline46mondego>   return new Department(department);  <newline46mondego>}<newline46mondego>"
"1729splitHere46","12035282splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><profiles version=<doubleQuotes46>11<doubleQuotes46>><newline46mondego><profile kind=<doubleQuotes46>CodeFormatterProfile<doubleQuotes46> name=<doubleQuotes46>korada [built-in]<doubleQuotes46> version=<doubleQuotes46>11<doubleQuotes46>><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_enum_constant<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_semicolon<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.align_type_members_on_columns<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.format_line_comments<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_statements_compare_to_body<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.tabulation.size<doubleQuotes46> value=<doubleQuotes46>4<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_imports<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.continuation_indentation<doubleQuotes46> value=<doubleQuotes46>2<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_binary_operator<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_assignment<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_member_type<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_conditional_expression<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.indent_parameter_description<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.format_html<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.format_source_code<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_unary_operator<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indentation.size<doubleQuotes46> value=<doubleQuotes46>4<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.lineSplit<doubleQuotes46> value=<doubleQuotes46>250<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_array_initializer<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration<doubleQuotes46> value=<doubleQuotes46>16<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.format_header<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_multiple_fields<doubleQuotes46> value=<doubleQuotes46>16<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_binary_operator<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_method_declaration<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_field<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.format_javadoc_comments<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.format_block_comments<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_binary_expression<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.wrap_before_binary_operator<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_after_package<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration<doubleQuotes46> value=<doubleQuotes46>16<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_between_import_groups<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_ellipsis<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_after_imports<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.compiler.problem.assertIdentifier<doubleQuotes46> value=<doubleQuotes46>error<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_block_in_case<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_empty_lines<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.compiler.source<doubleQuotes46> value=<doubleQuotes46>1.5<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.line_length<doubleQuotes46> value=<doubleQuotes46>80<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_type_declaration<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.compiler.compliance<doubleQuotes46> value=<doubleQuotes46>1.5<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.compact_else_if<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_switch<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.compiler.problem.enumIdentifier<doubleQuotes46> value=<doubleQuotes46>error<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.compiler.codegen.targetPlatform<doubleQuotes46> value=<doubleQuotes46>1.5<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_compact_if<doubleQuotes46> value=<doubleQuotes46>16<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_ellipsis<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_statements_compare_to_block<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_unary_operator<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer<doubleQuotes46> value=<doubleQuotes46>2<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.comment.indent_root_tags<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_enum_constants<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.tabulation.char<doubleQuotes46> value=<doubleQuotes46>tab<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_package<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.blank_lines_before_method<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_new_line_after_annotation<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.brace_position_for_block<doubleQuotes46> value=<doubleQuotes46>next_line<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression<doubleQuotes46> value=<doubleQuotes46>do not insert<doubleQuotes46>/><newline46mondego><setting id=<doubleQuotes46>org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter<doubleQuotes46> value=<doubleQuotes46>insert<doubleQuotes46>/><newline46mondego></profile><newline46mondego></profiles><newline46mondego>"
"1730splitHere46","12035311splitHere46","BufferdImage"
"1731splitHere46","12035311splitHere46","java.awt.Image"
"1732splitHere46","12035311splitHere46","BufferedImage"
"1733splitHere46","12035342splitHere46","any()"
"1734splitHere46","12035342splitHere46","when(...)"
"1735splitHere46","12035342splitHere46","thenReturn()"
"1736splitHere46","12035351splitHere46","IOUtils.toString(..)"
"1737splitHere46","12035351splitHere46","Guava"
"1738splitHere46","12035351splitHere46","Files.readLines(..)"
"1739splitHere46","12035351splitHere46","Files.toString(..)"
"1740splitHere46","12035367splitHere46","dp"
"1741splitHere46","12035367splitHere46","match_parent"
"1742splitHere46","12035367splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46> ><newline46mondego><newline46mondego><newline46mondego>        <WebView<newline46mondego>            android:id=<doubleQuotes46>@+id/webviewBlog<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>600dp<doubleQuotes46><newline46mondego>            android:textColor=<doubleQuotes46>@android:color/black<doubleQuotes46> <newline46mondego>            android:scrollbars=<doubleQuotes46>none<doubleQuotes46><newline46mondego>            android:fitsSystemWindows=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego><newline46mondego><newline46mondego><newline46mondego>    <RelativeLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/Volver<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>40dp<doubleQuotes46><newline46mondego>        android:layout_alignParentBottom=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46>><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/Volvertxt<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_alignParentBottom=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>Volver<doubleQuotes46><newline46mondego>            android:textColor=<doubleQuotes46>@android:color/white<doubleQuotes46><newline46mondego>            android:textSize=<doubleQuotes46>30px<doubleQuotes46><newline46mondego>            android:gravity=<doubleQuotes46>center<doubleQuotes46><newline46mondego>            android:clickable=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:onClick=<doubleQuotes46>onClickVolver<doubleQuotes46> /><newline46mondego>    </RelativeLayout><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"1743splitHere46","12035463splitHere46","1.0-5.0"
"1744splitHere46","12035478splitHere46","public void actionPerformed(ActionEvent e){<newline46mondego>  JTable oldTable = table;<newline46mondego><newline46mondego>  // your stuff, loading the table from file<newline46mondego><newline46mondego>  thePanelHoldingYourTable.remove(oldTable);<newline46mondego>  thePanelHoldingYourTable.add(table);<newline46mondego>  // if there are other components in that panel, make sure, your table is in the right spot<newline46mondego>  // maybe refresh your layout by using invalidate()<newline46mondego>}<newline46mondego>"
"1745splitHere46","12035478splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FileOutputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.ObjectInputStream;<newline46mondego>import java.io.ObjectOutputStream;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JMenu;<newline46mondego>import javax.swing.JMenuBar;<newline46mondego>import javax.swing.JMenuItem;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.table.DefaultTableModel;<newline46mondego><newline46mondego>public class Save3 extends JFrame implements ActionListener {<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    public int PADDING = 10;<newline46mondego><newline46mondego>    public JMenuItem menuNew;<newline46mondego>    public JMenuItem menuOpen;<newline46mondego>    public JMenuItem menuSave;<newline46mondego>    public JMenuItem menuExit;<newline46mondego><newline46mondego>    public JPanel container;<newline46mondego><newline46mondego>    public DefaultTableModel model;<newline46mondego>    public JScrollPane scrollPane;<newline46mondego>    public JTable table;<newline46mondego><newline46mondego>    public FileInputStream fis;<newline46mondego>    public ObjectInputStream in;<newline46mondego>    public FileOutputStream fos;<newline46mondego>    public ObjectOutputStream out;<newline46mondego>    public String filename;<newline46mondego><newline46mondego>    String[] columnNames = {<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>MotorBike<doubleQuotes46>, <doubleQuotes46> Car<doubleQuotes46>};<newline46mondego>    Object[][] data = { {<doubleQuotes46>Vehicle Summary<doubleQuotes46>, new Integer(100), new Integer(200)},  // Header 1: Green<newline46mondego>    {<doubleQuotes46>Axle Numbers<doubleQuotes46>, new Integer(100), new Integer(200)}, {<doubleQuotes46>Axle Code<doubleQuotes46>, new Integer(100), new Integer(200)}, {<doubleQuotes46>Axle Distances (cm)<doubleQuotes46>, new Integer(100), new Integer(200)}, {<doubleQuotes46>Vehicle Speed (km/h)<doubleQuotes46>, new Integer(100), new Integer(200)}, {<doubleQuotes46>Gross Weight<doubleQuotes46>, new Integer(100), new Integer(200)}, {<doubleQuotes46>Axle Weight 1<doubleQuotes46>, new Integer(100), new Integer(200)}, {<doubleQuotes46>Axle Weight 2<doubleQuotes46>, new Integer(100), new Integer(200)},};<newline46mondego><newline46mondego>    public Save3() {<newline46mondego>        fis = null;<newline46mondego>        in = null;<newline46mondego>        fos = null;<newline46mondego>        out = null;<newline46mondego>        filename = <doubleQuotes46>test.ref<doubleQuotes46>;<newline46mondego>        initGUI();<newline46mondego>    }<newline46mondego><newline46mondego>    public void initGUI() {<newline46mondego>        setTitle(<doubleQuotes46>WIM Reference Data Comparison Tool<doubleQuotes46>);<newline46mondego>        setSize(500, 400);<newline46mondego>        setVisible(true);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        setLocationRelativeTo(null);<newline46mondego><newline46mondego>        // Menu Bar and Menu Items setup<newline46mondego>        JMenuBar menuBar;<newline46mondego>        JMenu menu;<newline46mondego><newline46mondego>        menuBar = new JMenuBar();<newline46mondego>        menu = new JMenu(<doubleQuotes46>Menu<doubleQuotes46>);<newline46mondego>        menuBar.add(menu);<newline46mondego><newline46mondego>        menuNew = new JMenuItem(<doubleQuotes46>New<doubleQuotes46>);<newline46mondego>        menuOpen = new JMenuItem(<doubleQuotes46>Open<doubleQuotes46>);<newline46mondego>        menuSave = new JMenuItem(<doubleQuotes46>Save<doubleQuotes46>);<newline46mondego>        menuExit = new JMenuItem(<doubleQuotes46>Exit<doubleQuotes46>);<newline46mondego><newline46mondego>        menuNew.addActionListener(this);<newline46mondego>        menuOpen.addActionListener(this);<newline46mondego>        menuSave.addActionListener(this);<newline46mondego>        menuExit.addActionListener(this);<newline46mondego><newline46mondego>        menu.add(menuNew);<newline46mondego>        menu.add(menuOpen);<newline46mondego>        menu.add(menuSave);<newline46mondego>        menu.add(menuExit);<newline46mondego>        setJMenuBar(menuBar);<newline46mondego><newline46mondego>        container = new JPanel(new BorderLayout());<newline46mondego><newline46mondego>        model = new DefaultTableModel(data, columnNames);<newline46mondego>        table = new JTable();<newline46mondego>        table.setModel(model);<newline46mondego>        table.setPreferredScrollableViewportSize(new Dimension(500, 70));<newline46mondego>        table.setFillsViewportHeight(true);<newline46mondego>        scrollPane = new JScrollPane(table);<newline46mondego><newline46mondego>        container.add(scrollPane, BorderLayout.CENTER);<newline46mondego>        add(container);<newline46mondego>    }<newline46mondego><newline46mondego>    public void setModel(DefaultTableModel writeModel) {<newline46mondego>        table.setModel(writeModel);<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        System.out.println(<doubleQuotes46>Clicked item!<doubleQuotes46>);<newline46mondego>        if (e.getSource() == menuNew) {<newline46mondego>            System.out.println(<doubleQuotes46>New File<doubleQuotes46>);<newline46mondego>        } else if (e.getSource() == menuSave) {<newline46mondego>            System.out.println(<doubleQuotes46>Save!<doubleQuotes46>);<newline46mondego>            try {<newline46mondego>                fos = new FileOutputStream(filename);<newline46mondego>                out = new ObjectOutputStream(fos);<newline46mondego>                table.clearSelection();<newline46mondego>                table.setModel(new DefaultTableModel());<newline46mondego>                out.writeObject(model);<newline46mondego>                table.setModel(model);<newline46mondego>            } catch (IOException e3) {<newline46mondego>                e3.printStackTrace();<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    out.close();<newline46mondego>                    fos.close();<newline46mondego>                } catch (IOException e1) {<newline46mondego>                    e1.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } else if (e.getSource() == menuOpen) {<newline46mondego>            System.out.println(<doubleQuotes46>Open!<doubleQuotes46>);<newline46mondego>            try {<newline46mondego>                fis = new FileInputStream(filename);<newline46mondego>                in = new ObjectInputStream(fis);<newline46mondego>                DefaultTableModel modelRead = (DefaultTableModel) in.readObject();<newline46mondego>                setModel(modelRead);<newline46mondego>                System.out.println(<doubleQuotes46>data loaded<doubleQuotes46>);<newline46mondego>                in.close();<newline46mondego>                fis.close();<newline46mondego>            } catch (IOException e1) {<newline46mondego>                e1.printStackTrace();<newline46mondego>            } catch (ClassNotFoundException e2) {<newline46mondego>                e2.printStackTrace();<newline46mondego>            }<newline46mondego>        } else if (e.getSource() == menuExit) {<newline46mondego>            System.out.println(<doubleQuotes46>Exit!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                Save3 ex = new Save3();<newline46mondego>                ex.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1746splitHere46","12035478splitHere46","table.setModel(new DefaultTableModel());<newline46mondego>out.writeObject(model);<newline46mondego>table.setModel(model);<newline46mondego>"
"1747splitHere46","12035521splitHere46","firstname"
"1748splitHere46","12035521splitHere46","String"
"1749splitHere46","12035521splitHere46","Map<String,Integer>"
"1750splitHere46","12035521splitHere46","map"
"1751splitHere46","12035521splitHere46","Integer temp = map.get(human.firstName); //search for the current number of occurances<newline46mondego>if (temp == null) map.put(human.firstName, 1); //first occurance of this firstname<newline46mondego>else map.put(human.firstName,temp+1); //not first occurance, modify the map.<newline46mondego>"
"1752splitHere46","12035521splitHere46","map"
"1753splitHere46","12035521splitHere46","firstName"
"1754splitHere46","12035659splitHere46","String fileName = null;<newline46mondego><newline46mondego>       try {<newline46mondego>            fileName = args[0];<newline46mondego>        } catch (Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>Enter the name of the file :<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        File file = new File(fileName);<newline46mondego>"
"1755splitHere46","12035659splitHere46","null"
"1756splitHere46","12035659splitHere46","File"
"1757splitHere46","12035659splitHere46","NPE"
"1758splitHere46","12035659splitHere46","File"
"1759splitHere46","12035659splitHere46","try catch"
"1760splitHere46","12035659splitHere46","File"
"1761splitHere46","12036088splitHere46","fromString"
"1762splitHere46","12036088splitHere46","static final Map"
"1763splitHere46","12036088splitHere46","fromString"
"1764splitHere46","12036206splitHere46","get()"
"1765splitHere46","12036206splitHere46","midPoint"
"1766splitHere46","12036206splitHere46","p1.midPoint(p2);<newline46mondego>"
"1767splitHere46","12036206splitHere46","Point"
"1768splitHere46","12036206splitHere46","Point p3 = p1.midPoint(p2);<newline46mondego>"
"1769splitHere46","12036245splitHere46","Criteria c = s.createCriteria(College.class,<doubleQuotes46>clg<doubleQuotes46>);<newline46mondego>c.createCriteria(<doubleQuotes46>students<doubleQuotes46>, <doubleQuotes46>s<doubleQuotes46>);<newline46mondego>c.add(Restrictions.eq(<doubleQuotes46>id<doubleQuotes46>,new Integer(1)));<newline46mondego>c.add(Restrictions.eq(<doubleQuotes46>s.id<doubleQuotes46>, new Integer(1)));<newline46mondego><newline46mondego>ProjectionList properties = Projections.projectionList();<newline46mondego>properties.add(Projections.property(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>properties.add(Projections.property(<doubleQuotes46>s.name<doubleQuotes46>));<newline46mondego>c.setProjection(properties);<newline46mondego><newline46mondego>List l=c.list();<newline46mondego>Iterator it=l.iterator();<newline46mondego>while(it.hasNext())<newline46mondego>{<newline46mondego>    Object ob[] = (Object[])it.next();<newline46mondego>    System.out.println(ob[0]+<doubleQuotes46>--------<doubleQuotes46>+ob[1]);<newline46mondego>}<newline46mondego>"
"1770splitHere46","12036499splitHere46","static"
"1771splitHere46","12036499splitHere46","protected static"
"1772splitHere46","12036499splitHere46","// Java<newline46mondego>public class BaseStatic extends Base {<newline46mondego>  protected int getCount() { return Base.count; }<newline46mondego>  protected void setCount(int c) { Base.count = c; }<newline46mondego>}<newline46mondego>"
"1773splitHere46","12036499splitHere46","// Scala<newline46mondego>class Derived extends BaseStatic {<newline46mondego>  println(getCount());<newline46mondego>}<newline46mondego>"
"1774splitHere46","12036499splitHere46","protected static"
"1775splitHere46","12036568splitHere46","Geom.groovy<newline46mondego>-------------------<newline46mondego>package webservices<newline46mondego><newline46mondego>import javax.jws.WebService<newline46mondego>import javax.jws.soap.SOAPBinding.Style<newline46mondego>import javax.jws.soap.SOAPBinding<newline46mondego><newline46mondego>@WebService<newline46mondego>@SOAPBinding(style=Style.RPC)<newline46mondego>interface Geom {<newline46mondego>    double getArea(double val)<newline46mondego>}<newline46mondego><newline46mondego>Circle.groovy<newline46mondego>-------------------<newline46mondego>package webservices<newline46mondego><newline46mondego>import javax.jws.WebService<newline46mondego><newline46mondego>@WebService(endpointInterface='webservices.Geom')<newline46mondego>class Circle implements Geom {<newline46mondego>        double getArea(double r) { Math.PI*r*r }<newline46mondego>}<newline46mondego><newline46mondego>publish.groovy<newline46mondego>--------------------<newline46mondego>package webservices<newline46mondego><newline46mondego>import javax.xml.ws.Endpoint<newline46mondego><newline46mondego>Endpoint.publish('http://localhost:5555/circle',new Circle())<newline46mondego>println 'ready to receive requests...'<newline46mondego>"
"1776splitHere46","12036578splitHere46","form2"
"1777splitHere46","12036578splitHere46","displayCompleteNewsScreen"
"1778splitHere46","12036578splitHere46","removeAll"
"1779splitHere46","12036578splitHere46","setTitleComponent"
"1780splitHere46","12036578splitHere46","form2"
"1781splitHere46","12036578splitHere46","Command"
"1782splitHere46","12036578splitHere46","displayCompleteNewsScreen"
"1783splitHere46","12036819splitHere46",".level = WARNING<newline46mondego>"
"1784splitHere46","12036819splitHere46","log.info(msg);<newline46mondego><newline46mondego>/* which is same as */<newline46mondego>log.log(Level.INFO, msg);<newline46mondego>"
"1785splitHere46","12036819splitHere46","import java.util.logging.Level;<newline46mondego>import java.util.logging.Logger;<newline46mondego>/* ... */<newline46mondego>log.log(Level.INFO, <doubleQuotes46>a info msg<doubleQuotes46>); //info<newline46mondego>log.log(Level.WARNING, <doubleQuotes46>a warning msg<doubleQuotes46>); //warning<newline46mondego>log.log(Level.FINEST, <doubleQuotes46>a fine(st) msg<doubleQuotes46>); //debug (as finest)<newline46mondego>"
"1786splitHere46","12036819splitHere46","# Set the default logging level for all loggers to WARNING<newline46mondego>.level = WARNING<newline46mondego><newline46mondego># Set level for your app<newline46mondego>oed.server.level = INFO<newline46mondego>oed.server.data.datastore.myInjector.level = FINEST<newline46mondego>"
"1787splitHere46","12036819splitHere46","GWT.log(message);"
"1788splitHere46","12036819splitHere46","your-app.gwt.xml"
"1789splitHere46","12036819splitHere46","*.gwt.xml"
"1790splitHere46","12036819splitHere46","logging.properties"
"1791splitHere46","12036819splitHere46","gwt.xml"
"1792splitHere46","12036819splitHere46","<!-- Logging configuration --><newline46mondego>  <inherits name=<doubleQuotes46>com.google.gwt.logging.Logging<doubleQuotes46>/><newline46mondego><newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.logLevel<doubleQuotes46> value=<doubleQuotes46>INFO<doubleQuotes46>/>  <!-- # To change the default logLevel --><newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.enabled<doubleQuotes46> value=<doubleQuotes46>TRUE<doubleQuotes46>/>  <newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.simpleRemoteHandler<doubleQuotes46> value=<doubleQuotes46>ENABLED<doubleQuotes46> /> <!-- Remote logging (linked with servlet) --><newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.popupHandler<doubleQuotes46> value=<doubleQuotes46>DISABLED<doubleQuotes46> /><newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.developmentModeHandler<doubleQuotes46> value=<doubleQuotes46>ENABLED<doubleQuotes46> />  <newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.systemHandler<doubleQuotes46> value=<doubleQuotes46>ENABLED<doubleQuotes46> /><newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.firebugHandler<doubleQuotes46> value=<doubleQuotes46>DISABLED<doubleQuotes46> /><newline46mondego>  <set-property name=<doubleQuotes46>gwt.logging.consoleHandler<doubleQuotes46> value=<doubleQuotes46>ENABLED<doubleQuotes46>/><newline46mondego>"
"1793splitHere46","12036819splitHere46","web.xml"
"1794splitHere46","12036819splitHere46","<servlet><newline46mondego>        <servlet-name>remoteLogging</servlet-name><newline46mondego>        <servlet-class>com.google.gwt.logging.server.RemoteLoggingServiceImpl</servlet-class><newline46mondego>    </servlet><newline46mondego>    <servlet-mapping><newline46mondego>        <servlet-name>remoteLogging</servlet-name><newline46mondego>        <url-pattern>/your-app-name/remote_logging</url-pattern><newline46mondego>    </servlet-mapping><newline46mondego>"
"1795splitHere46","12036907splitHere46","for(i <- 0 to page.getProduct().getRichContent().size())<newline46mondego>"
"1796splitHere46","12037015splitHere46","/**<newline46mondego> * @return the Reference<newline46mondego> */<newline46mondego>public int getReference() {<newline46mondego>    if(Reference > 0){<newline46mondego>        replyWith = <doubleQuotes46>Duck<doubleQuotes46>;<newline46mondego>    }else{<newline46mondego>        replyWith = <doubleQuotes46>Fruck<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    EntityManager em;<newline46mondego>    Armazem find = em.find(Armazem.class, Reference);<newline46mondego>    replyWith = find.getNome();<newline46mondego>    return Reference;<newline46mondego>}<newline46mondego>"
"1797splitHere46","12037015splitHere46","listener"
"1798splitHere46","12037015splitHere46","<f:ajax>"
"1799splitHere46","12037015splitHere46","<h:inputText value=<doubleQuotes46>#{armazemController.reference}<doubleQuotes46> > <newline46mondego>    <f:ajax event=<doubleQuotes46>keyup<doubleQuotes46> listener=<doubleQuotes46>#{armazemController.referenceOnkeyup}<doubleQuotes46> render=<doubleQuotes46>text<doubleQuotes46> /> <newline46mondego></h:inputText> <newline46mondego><h:outputText id=<doubleQuotes46>text<doubleQuotes46> value=<doubleQuotes46>#{armazemController.replyWith}<doubleQuotes46> /> <newline46mondego>"
"1800splitHere46","12037015splitHere46","private int reference;<newline46mondego>private String replyWith;<newline46mondego><newline46mondego>public void referenceOnkeyup() {<newline46mondego>    replyWith = em.find(Armazem.class, Reference).getNome();<newline46mondego>}<newline46mondego><newline46mondego>public int getReference() {<newline46mondego>    return reference;<newline46mondego>}<newline46mondego><newline46mondego>public void setReference(int reference) {<newline46mondego>    this.reference = reference;<newline46mondego>}<newline46mondego><newline46mondego>public String getReplyWith() {<newline46mondego>    return replyWith;<newline46mondego>}<newline46mondego>"
"1801splitHere46","12037122splitHere46","WatchService"
"1802splitHere46","12037130splitHere46","ChangeListener l = new ChangeListener() {<newline46mondego><newline46mondego>    Component lastSelected = tabbedPane.getSelectedComponent();<newline46mondego>    @Override<newline46mondego>    public void stateChanged(ChangeEvent e) {<newline46mondego>        if (lastSelected != tabbedPane.getSelectedComponent()) {<newline46mondego>            LOG.info(<doubleQuotes46>changed: <doubleQuotes46> + tabbedPane.getSelectedIndex());<newline46mondego>            lastSelected = tabbedPane.getSelectedComponent();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>};<newline46mondego>tabbedPane.addChangeListener(l);<newline46mondego>"
"1803splitHere46","12037206splitHere46","@Cacheable"
"1804splitHere46","12037316splitHere46","s2 = s2.intern();"
"1805splitHere46","12037316splitHere46","true"
"1806splitHere46","12037316splitHere46","intern()"
"1807splitHere46","12037316splitHere46","=="
"1808splitHere46","12037316splitHere46","String s1=<doubleQuotes46>MyString<doubleQuotes46>;<newline46mondego>String s2=new String(<doubleQuotes46>MyString<doubleQuotes46>);<newline46mondego>s2 = s2.intern();<newline46mondego>System.out.println(s1==s2);<newline46mondego>"
"1809splitHere46","12037316splitHere46","String.intern()"
"1810splitHere46","12037316splitHere46","/**<newline46mondego> * Returns a canonical representation for the string object.<newline46mondego> * <p><newline46mondego> * A pool of strings, initially empty, is maintained privately by the<newline46mondego> * class <code>String</code>.<newline46mondego> * <p><newline46mondego> * When the intern method is invoked, if the pool already contains a<newline46mondego> * string equal to this <code>String</code> object as determined by<newline46mondego> * the {@link #equals(Object)} method, then the string from the pool is<newline46mondego> * returned. Otherwise, this <code>String</code> object is added to the<newline46mondego> * pool and a reference to this <code>String</code> object is returned.<newline46mondego> * <p><newline46mondego> * It follows that for any two strings <code>s</code> and <code>t</code>,<newline46mondego> * <code>s.intern()& ==& t.intern()</code> is <code>true</code><newline46mondego> * if and only if <code>s.equals(t)</code> is <code>true</code>.<newline46mondego> * <p><newline46mondego> * All literal strings and string-valued constant expressions are<newline46mondego> * interned. String literals are defined in section 3.10.5 of the<newline46mondego> * <cite>The Java&trade; Language Specification</cite>.<newline46mondego> *<newline46mondego> * @return  a string that has the same contents as this string, but is<newline46mondego> *          guaranteed to be from a pool of unique strings.<newline46mondego> */<newline46mondego>public native String intern();<newline46mondego>"
"1811splitHere46","12037322splitHere46","List"
"1812splitHere46","12037322splitHere46","Set"
"1813splitHere46","12037322splitHere46","result.contains(s)"
"1814splitHere46","12037322splitHere46","private static List<String> substrings(int i, String input) {<newline46mondego>    List<String> result = new ArrayList<String>();<newline46mondego>    if (i == 0)<newline46mondego>        return result;<newline46mondego><newline46mondego>    String first = input.substring(0, i);<newline46mondego>    result.add(first);<newline46mondego><newline46mondego>    if (input.length() == i) {<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    // Recursively find substrings of next smaller length not including the first character<newline46mondego>    List<String> tails = substrings(i-1, input.substring(1));<newline46mondego><newline46mondego>    // Append first char to each result of the recursive call.<newline46mondego>    for (String sub: tails) {<newline46mondego>        String s = input.substring(0, 1) + sub;<newline46mondego>        if (!(result.contains(s)))<newline46mondego>            result.add(s);<newline46mondego>    }<newline46mondego><newline46mondego>    // Add all substring of current length not including first character<newline46mondego>    result.addAll(substrings(i, input.substring(1)));<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"1815splitHere46","12037549splitHere46","File"
"1816splitHere46","12037549splitHere46","InputStream"
"1817splitHere46","12037549splitHere46","InputStream"
"1818splitHere46","12037549splitHere46","finally"
"1819splitHere46","12037550splitHere46","xpathExpression.addNamespace(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>http://host.com/subPath<doubleQuotes46>);<newline46mondego>"
"1820splitHere46","12037550splitHere46","String  xpathString = <doubleQuotes46>/soap:Envelope/soap:Body/wmHotelAvailResponse/OTA_HotelAvailRS<doubleQuotes46>; <newline46mondego>"
"1821splitHere46","12037550splitHere46","String  xpathString = <doubleQuotes46>/soap:Envelope/soap:Body/x:wmHotelAvailResponse/x:OTA_HotelAvailRS<doubleQuotes46>;  <newline46mondego>"
"1822splitHere46","12037550splitHere46","/soap:Envelope/soap:Body/wmHotelAvailResponse/OTA_HotelAvailRS<newline46mondego>"
"1823splitHere46","12037550splitHere46","wmHotelAvailResponse"
"1824splitHere46","12037550splitHere46","wmHotelAvailResponse"
"1825splitHere46","12037553splitHere46","SELECT TOP 5 id, lastdate FROM UserLog <newline46mondego>"
"1826splitHere46","12037814splitHere46","x"
"1827splitHere46","12037814splitHere46","x / 100 - gives the 2 left digits<newline46mondego>x % 100 - gives the 2 right digits<newline46mondego>"
"1828splitHere46","12037886splitHere46","web.xml"
"1829splitHere46","12037886splitHere46","<error-page><newline46mondego>    <error-code>500</error-code><newline46mondego>    <location>/myerror.jsp</location><newline46mondego></error-page><newline46mondego>"
"1830splitHere46","12037886splitHere46","<error-page><newline46mondego>    <exception-type>java.lang.Throwable</exception-type><newline46mondego>    <location>/myerror.jsp</location><newline46mondego></error-page><newline46mondego>"
"1831splitHere46","12037999splitHere46","<schema schemaNamespace=<doubleQuotes46>http://your.package.inverted/xsd<doubleQuotes46>/><newline46mondego>"
"1832splitHere46","12037999splitHere46","<schema schemaNamespace=<doubleQuotes46>http://something.google.com/xsd<doubleQuotes46>/><newline46mondego>"
"1833splitHere46","12038029splitHere46","<bean id=<doubleQuotes46>sessionFactory<doubleQuotes46> class=<newline46mondego>    <doubleQuotes46>org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>dataSource<doubleQuotes46> ref=<doubleQuotes46>dataSource<doubleQuotes46> /><newline46mondego>   <property name=<doubleQuotes46>packagesToScan<doubleQuotes46> value=<doubleQuotes46>org.rest<doubleQuotes46> /><newline46mondego><newline46mondego>   <property name=<doubleQuotes46>hibernateProperties<doubleQuotes46>><newline46mondego>      ...<newline46mondego>   </property><newline46mondego></bean><newline46mondego><bean id=<doubleQuotes46>dataSource<doubleQuotes46> class=<newline46mondego>    <doubleQuotes46>org.springframework.jdbc.datasource.DriverManagerDataSource<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>driverClassName<doubleQuotes46> value=<doubleQuotes46>${driverClassName}<doubleQuotes46> /><newline46mondego>   <property name=<doubleQuotes46>url<doubleQuotes46> value=<doubleQuotes46>${url}<doubleQuotes46> /><newline46mondego>   <property name=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46>restUser<doubleQuotes46> /><newline46mondego>   <property name=<doubleQuotes46>password<doubleQuotes46> value=<doubleQuotes46>restmy5ql<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"1834splitHere46","12038029splitHere46","@Autowired<newline46mondego>SessionFactory sessionFactory;<newline46mondego>"
"1835splitHere46","12038029splitHere46","<servlet><newline46mondego>   <servlet-name>dispatcher</servlet-name><newline46mondego>   <servlet-class><newline46mondego>     org.springframework.web.servlet.DispatcherServlet<newline46mondego>   </servlet-class><newline46mondego>   <init-param><newline46mondego>     <param-name>contextConfigLocation</param-name><newline46mondego>     <param-value>/WEB-INF/spring/dispatcher-config.xml</param-value><newline46mondego>   </init-param><newline46mondego>   <load-on-startup>1</load-on-startup><newline46mondego> </servlet><newline46mondego><newline46mondego> <servlet-mapping><newline46mondego>   <servlet-name>dispatcher</servlet-name><newline46mondego>   <url-pattern>/</url-pattern><newline46mondego> </servlet-mapping><newline46mondego>"
"1836splitHere46","12038093splitHere46","myString.split(<doubleQuotes46> <doubleQuotes46>)"
"1837splitHere46","12038093splitHere46","' '"
"1838splitHere46","12038093splitHere46","Integer.valuesOf(..)"
"1839splitHere46","12038098splitHere46","com.healthmarketscience.rmiio.RemoteInputStream"
"1840splitHere46","12038098splitHere46","com.healthmarketscience.rmiio.RemoteOutputStream"
"1841splitHere46","12038130splitHere46","INFORMATION_SCHEMA"
"1842splitHere46","12038130splitHere46","columns"
"1843splitHere46","12038130splitHere46","SELECT    COLUMN_NAME<newline46mondego>FROM      INFORMATION_SCHEMA.COLUMNS<newline46mondego>WHERE     TABLE_SCHEMA = '<<your schema name>>'<newline46mondego>  AND     TABLE_NAME = '<<your table name>>'<newline46mondego>  AND     COLUMN_KEY = 'PRI'<newline46mondego>"
"1844splitHere46","12038130splitHere46","statistics"
"1845splitHere46","12038130splitHere46","String prim_colm = getPrimaryKeyColumn (tableName);<newline46mondego>String newQuery = <doubleQuotes46>select <doubleQuotes46> + prim_colm + <doubleQuotes46> from <doubleQuotes46> + tableName<doubleQuotes46>;<newline46mondego>"
"1846splitHere46","12038130splitHere46","newQuery"
"1847splitHere46","12038136splitHere46","<h:xxx>"
"1848splitHere46","12038136splitHere46","<c:forEach>"
"1849splitHere46","12038136splitHere46","<h:dataTable>"
"1850splitHere46","12038136splitHere46","var"
"1851splitHere46","12038136splitHere46","#{k}"
"1852splitHere46","12038136splitHere46","<c:forEach>"
"1853splitHere46","12038136splitHere46","<ui:repeat>"
"1854splitHere46","12038136splitHere46","<ui:repeat value=<doubleQuotes46>#{requestHeader[k]}<doubleQuotes46> var=<doubleQuotes46>v<doubleQuotes46>><newline46mondego>    <h:outputText value=<doubleQuotes46>#{v}<doubleQuotes46> /><br /><newline46mondego></ui:repeat><newline46mondego>"
"1855splitHere46","12038136splitHere46","Map"
"1856splitHere46","12038136splitHere46","#{header}"
"1857splitHere46","12038136splitHere46","<h:dataTable value=<doubleQuotes46>#{header.keySet().toArray()}<doubleQuotes46> var=<doubleQuotes46>headerName<doubleQuotes46> border=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>    <f:facet name=<doubleQuotes46>header<doubleQuotes46>>HTTP request headers</f:facet><newline46mondego>    <h:column><newline46mondego>        <f:facet name=<doubleQuotes46>header<doubleQuotes46>>Name</f:facet><newline46mondego>        <h:outputText value=<doubleQuotes46>#{headerName}<doubleQuotes46> /><newline46mondego>    </h:column><newline46mondego>    <h:column><newline46mondego>        <f:facet name=<doubleQuotes46>header<doubleQuotes46>>Value</f:facet><newline46mondego>        <ui:repeat value=<doubleQuotes46>#{header[headerName]}<doubleQuotes46> var=<doubleQuotes46>headerValue<doubleQuotes46>><newline46mondego>            <h:outputText value=<doubleQuotes46>#{headerValue}<doubleQuotes46> /><br /><newline46mondego>        </ui:repeat><newline46mondego>    </h:column><newline46mondego></h:dataTable><newline46mondego>"
"1858splitHere46","12038222splitHere46","PriorityBlockingQueue<Runnable>"
"1859splitHere46","12038222splitHere46","PriorityBlockingQueue <mRunnable>"
"1860splitHere46","12038222splitHere46","PriorityBlockingQueue<? extends Runnable>"
"1861splitHere46","12038265splitHere46","Map.Entry"
"1862splitHere46","12038265splitHere46","HashMap"
"1863splitHere46","12038265splitHere46","entrySet"
"1864splitHere46","12038265splitHere46","keySet"
"1865splitHere46","12038265splitHere46","map.get(key)"
"1866splitHere46","12038265splitHere46","entry.getValue()"
"1867splitHere46","12038324splitHere46","java -Dfile.encoding=utf-8 your_main_class<newline46mondego>"
"1868splitHere46","12038334splitHere46","Object o = new Object();<newline46mondego>"
"1869splitHere46","12038334splitHere46","Stack<newline46mondego>---------------------------<newline46mondego>====== caller stack frame ==== <newline46mondego>100(o)    ==>     1000<newline46mondego>==============================<newline46mondego><newline46mondego>Heap<newline46mondego>------------------------------<newline46mondego>1000   ==>   object data 1<newline46mondego>"
"1870splitHere46","12038334splitHere46","void foo(Object x) { .... }<newline46mondego>foo(o);<newline46mondego>"
"1871splitHere46","12038334splitHere46","Stack<newline46mondego>---------------------------<newline46mondego>====== caller stack frame ====<newline46mondego>100(o)    ==>     1000<newline46mondego>==============================<newline46mondego>====== foo stack frame =======<newline46mondego>200(x)   ==>     1000<newline46mondego>==============================<newline46mondego><newline46mondego>Heap<newline46mondego>------------------------------<newline46mondego>1000   ==>   object data 1<newline46mondego>"
"1872splitHere46","12038334splitHere46","void foo(Object x) {<newline46mondego>   x = new Object();<newline46mondego>}<newline46mondego>"
"1873splitHere46","12038334splitHere46","Stack<newline46mondego>---------------------------<newline46mondego>====== caller stack frame ====<newline46mondego>100(o)    ==>     1000<newline46mondego>==============================<newline46mondego>====== foo stack frame =======<newline46mondego>200(x)    ==>     2000    <newline46mondego>==============================<newline46mondego><newline46mondego>Heap<newline46mondego>------------------------------<newline46mondego>1000   ==>   object data 1 <newline46mondego>2000   ==>   object data 2<newline46mondego>"
"1874splitHere46","12038334splitHere46","Stack<newline46mondego>---------------------------<newline46mondego>====== caller stack frame ====<newline46mondego>100(o)    ==>     1000<newline46mondego>==============================<newline46mondego><newline46mondego>Heap<newline46mondego>------------------------------<newline46mondego>1000   ==>   object data 1<newline46mondego>2000   ==>   object data 2<newline46mondego>"
"1875splitHere46","12038365splitHere46","List"
"1876splitHere46","12038365splitHere46","public List<String> validation() {<newline46mondego>    List<String> accnumbers = new ArrayList<String>();<newline46mondego>    Scanner sc = new Scanner(System.in);<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>Enter account numbers (blank to finish):<doubleQuotes46>);<newline46mondego>    while (true) {<newline46mondego>        String accno = sc.nextLine(); <newline46mondego>        if (accno.equals(<doubleQuotes46><doubleQuotes46>)) { // blank ends input<newline46mondego>            return accnumbers;<newline46mondego>        }<newline46mondego>        accnumbers.add(accno); // will take any number of account numbers<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1877splitHere46","12038365splitHere46","search"
"1878splitHere46","12038365splitHere46","list.contains()"
"1879splitHere46","12038504splitHere46","<ImageView<newline46mondego>    android:id=<doubleQuotes46>@+id/country_icon<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:src=<doubleQuotes46>@drawable/image<doubleQuotes46>/><newline46mondego>"
"1880splitHere46","12038724splitHere46","@Override<newline46mondego>    public int getCount() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getItemId(int arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>"
"1881splitHere46","12038724splitHere46","@Override<newline46mondego>    public int getCount() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return mData.length;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getItemId(int arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return mData[arg0];<newline46mondego>    }<newline46mondego>"
"1882splitHere46","12038724splitHere46","ViewHolder"
"1883splitHere46","12038892splitHere46","remove()/removeAll()"
"1884splitHere46","12038892splitHere46","GridBagLayout"
"1885splitHere46","12038892splitHere46","XYLayout"
"1886splitHere46","12038892splitHere46","constraints"
"1887splitHere46","12038892splitHere46","GridBagLayout"
"1888splitHere46","12038892splitHere46","GridBagConstraints"
"1889splitHere46","12038892splitHere46","GridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;<newline46mondego>"
"1890splitHere46","12038918splitHere46","*-service.jar"
"1891splitHere46","12038918splitHere46","[TOMCAT_HOME]/lib/ext"
"1892splitHere46","12038918splitHere46","[TOMCAT_HOME]/lib/ext"
"1893splitHere46","12038918splitHere46","jar"
"1894splitHere46","12038918splitHere46","jar"
"1895splitHere46","12038918splitHere46","webapps/plugin-project"
"1896splitHere46","12038918splitHere46","[TOMCAT_HOME]/lib/ext"
"1897splitHere46","12038918splitHere46","import"
"1898splitHere46","12038973splitHere46","Order"
"1899splitHere46","12038973splitHere46","DatabaseTableConfig"
"1900splitHere46","12038973splitHere46","Order"
"1901splitHere46","12038973splitHere46","@DatabaseTable<newline46mondego>public class FooOrder extends Order {<newline46mondego>    // fields will be gotten from Order<newline46mondego>}<newline46mondego><newline46mondego>@DatabaseTable<newline46mondego>public class BarOrder extends Order {<newline46mondego>    // fields will be gotten from Order<newline46mondego>}<newline46mondego>"
"1902splitHere46","12038973splitHere46","Order"
"1903splitHere46","12038973splitHere46","fooorder"
"1904splitHere46","12038973splitHere46","barorder"
"1905splitHere46","12038987splitHere46","GradientPaint"
"1906splitHere46","12038987splitHere46","GradientPaint"
"1907splitHere46","12038987splitHere46","LinearGradientPaint"
"1908splitHere46","12038987splitHere46","LinearGradientPaint lgp = new LinearGradientPaint(<newline46mondego>                new Point2D.Float(0, minY),<newline46mondego>                new Point2D.Float(0, maxY),<newline46mondego>                new float[] {0f, 0.5f, 1f},<newline46mondego>                new Color[] {Color.BLUE, Color.RED, Color.BLUE}<newline46mondego>                );<newline46mondego>g2d.setPaint(lgp);<newline46mondego>    // Render all your samples, don't reapply or change you paint...<newline46mondego>"
"1909splitHere46","12039169splitHere46","<dependencyManagement/>"
"1910splitHere46","12039169splitHere46","<groupId>com.test</groupId><newline46mondego><artifactId>com.test.buildDefinition</artifactId><newline46mondego><version>1.0-SNAPSHOT</version><newline46mondego><packaging>pom</packaging><newline46mondego><newline46mondego><modules><newline46mondego>    <module>child1</module><newline46mondego>    <module>child2</module><newline46mondego></modules><newline46mondego><newline46mondego><dependencyManagement><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>com.test</groupId><newline46mondego>            <artifactId>com.test.child1</artifactId><newline46mondego>            <version>${project.version}</version><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>com.test</groupId><newline46mondego>            <artifactId>com.test.child2</artifactId><newline46mondego>            <version>${project.version}</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego></dependencyManagement><newline46mondego>"
"1911splitHere46","12039169splitHere46","<parent><newline46mondego>    <groupId>com.test</groupId><newline46mondego>    <artifactId>com.test.buildDefinition</artifactId><newline46mondego>    <version>1.0-SNAPSHOT</version><newline46mondego></parent><newline46mondego><newline46mondego><!-- groupId and version can be skipped since it will be inherited from parent --><newline46mondego><artifactId>com.test.child1</artifactId><newline46mondego>"
"1912splitHere46","12039169splitHere46","<parent><newline46mondego>    <groupId>com.test</groupId><newline46mondego>    <artifactId>com.test.buildDefinition</artifactId><newline46mondego>    <version>1.0-SNAPSHOT</version><newline46mondego></parent><newline46mondego><newline46mondego><!-- groupId and version can be skipped since it will be inherited from parent --><newline46mondego><artifactId>com.test.child2</artifactId><newline46mondego><newline46mondego><dependencies><newline46mondego>    <dependency><newline46mondego>        <groupId>com.test</groupId><newline46mondego>        <artifactId>com.test.child1</artifactId><newline46mondego>    </dependency><newline46mondego></dependencies><newline46mondego>"
"1913splitHere46","12039169splitHere46","dependencyManagement"
"1914splitHere46","12039211splitHere46","String s = <doubleQuotes46>Page 1 of 6<doubleQuotes46>;<newline46mondego>String[] values = s.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>System.out.println(Integer.parseInt(values[values.length - 1]));<newline46mondego>"
"1915splitHere46","12039285splitHere46","System.loadLibrary"
"1916splitHere46","12039285splitHere46","Runtime.getRuntime().loadLibrary(name)"
"1917splitHere46","12039285splitHere46","loadLibrary"
"1918splitHere46","12039557splitHere46","public static String hexToString(String hex) {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    char[] hexData = hex.toCharArray();<newline46mondego>    for (int count = 0; count < hexData.length - 1; count += 2) {<newline46mondego>        int firstDigit = Character.digit(hexData[count], 16);<newline46mondego>        int lastDigit = Character.digit(hexData[count + 1], 16);<newline46mondego>        int decimal = firstDigit * 16 + lastDigit;<newline46mondego>        sb.append((char)decimal);<newline46mondego>    }<newline46mondego>    return sb.toString();<newline46mondego>}<newline46mondego>"
"1919splitHere46","12039557splitHere46","Character#digit"
"1920splitHere46","12039557splitHere46","private static final Map<String, Character> lookupHex = new HashMap<String, Character>();<newline46mondego><newline46mondego>static {<newline46mondego>    for(int i = 0; i < 256; i++) {<newline46mondego>        String key = Integer.toHexString(i);<newline46mondego>        Character value = (char)(Integer.parseInt(key, 16));<newline46mondego>        lookupHex.put(key, value);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static String hexToString(String hex) {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    for (int count = 0; count < hex.length() - 1; count += 2) {<newline46mondego>        String output = hex.substring(count, (count + 2));<newline46mondego>        sb.append((char)lookupHex.get(output));<newline46mondego>    }<newline46mondego>    return sb.toString();<newline46mondego>}<newline46mondego>"
"1921splitHere46","12039598splitHere46","Int"
"1922splitHere46","12039598splitHere46","int"
"1923splitHere46","12039598splitHere46","Object"
"1924splitHere46","12039598splitHere46","int"
"1925splitHere46","12039598splitHere46","java.lang.Integer"
"1926splitHere46","12039598splitHere46","java.lang.Object"
"1927splitHere46","12039598splitHere46","AnyRef"
"1928splitHere46","12039598splitHere46","Int"
"1929splitHere46","12039598splitHere46","AnyRef"
"1930splitHere46","12039598splitHere46","Any"
"1931splitHere46","12039598splitHere46","Any"
"1932splitHere46","12039598splitHere46","java.lang.Object"
"1933splitHere46","12039598splitHere46","Any"
"1934splitHere46","12039598splitHere46","Int"
"1935splitHere46","12039598splitHere46","AnyRef"
"1936splitHere46","12039598splitHere46","Any"
"1937splitHere46","12039598splitHere46","AnyRef"
"1938splitHere46","12039810splitHere46","<% String fname = request.getParameter(<doubleQuotes46>**uname**<doubleQuotes46>);%>"
"1939splitHere46","12039810splitHere46","<% String fname = request.getParameter(<doubleQuotes46>**name**<doubleQuotes46>);%>"
"1940splitHere46","12039810splitHere46","name"
"1941splitHere46","12039810splitHere46","response.sendRedirect(<doubleQuotes46>**welcome.jsp?name=<doubleQuotes46>+uname);**"
"1942splitHere46","12039842splitHere46","The framework wiring object for the framework can be obtained by calling bundle.adapt(FrameworkWiring.class) on the system bundle. Only the system bundle can be adapted to a FrameworkWiring object."
"1943splitHere46","12040024splitHere46","-fx-padding: 10px;"
"1944splitHere46","12040024splitHere46","import javafx.application.Application;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.RadioButton;<newline46mondego>import javafx.scene.layout.BorderPane;<newline46mondego>import javafx.stage.Stage;<newline46mondego><newline46mondego>public class CssTest extends Application <newline46mondego>{<newline46mondego>    public void start(Stage stage) throws Exception<newline46mondego>    {<newline46mondego>        BorderPane root = new BorderPane();<newline46mondego>        RadioButton radio = new RadioButton(<doubleQuotes46>radio-text<doubleQuotes46>);<newline46mondego>        root.setCenter(radio);<newline46mondego>        root.getStylesheets().add(getClass().getResource(<doubleQuotes46>/radio.css<doubleQuotes46>).toExternalForm());<newline46mondego>        stage.setScene(new Scene(root));<newline46mondego>        stage.show();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        launch(args);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1945splitHere46","12040024splitHere46",".radio-button .radio {<newline46mondego>    -fx-border-width: 1px;<newline46mondego>    -fx-border-color: #000;<newline46mondego>    -fx-background-color: white;<newline46mondego>    -fx-background-image: null;<newline46mondego>    -fx-border-radius: 15px;<newline46mondego>    -fx-padding: 4px;<newline46mondego>}<newline46mondego>.radio-button .radio:selected {<newline46mondego>    -fx-background-color: white;<newline46mondego>    -fx-background-image: null;<newline46mondego>}<newline46mondego>.radio-button -radio:armed {<newline46mondego>    -fx-background-color: white;<newline46mondego>    -fx-background-image: null;<newline46mondego>}<newline46mondego>.radio-button -radio:determinate {<newline46mondego>    -fx-background-color: white;<newline46mondego>    -fx-background-image: null;<newline46mondego>}<newline46mondego>.radio-button -radio:indeterminate {<newline46mondego>    -fx-background-color: white;<newline46mondego>    -fx-background-image: null;<newline46mondego>}<newline46mondego>.radio-button .dot {<newline46mondego>    -fx-background-radius: 15px;<newline46mondego>    -fx-padding: 8px;<newline46mondego>}<newline46mondego>"
"1946splitHere46","12040041splitHere46","fat jar"
"1947splitHere46","12040041splitHere46","File -> Export -> Other -> One Jar Exporter"
"1948splitHere46","12040120splitHere46","instanceof"
"1949splitHere46","12040120splitHere46","Entity"
"1950splitHere46","12040120splitHere46","instanceof"
"1951splitHere46","12040120splitHere46","accept"
"1952splitHere46","12040120splitHere46","visit"
"1953splitHere46","12040120splitHere46","accept"
"1954splitHere46","12040120splitHere46","Entity"
"1955splitHere46","12040120splitHere46","draw()"
"1956splitHere46","12040120splitHere46","draw()"
"1957splitHere46","12040120splitHere46","draw()"
"1958splitHere46","12040120splitHere46","List<Entity>"
"1959splitHere46","12040120splitHere46","draw()"
"1960splitHere46","12040120splitHere46","draw()"
"1961splitHere46","12040310splitHere46","dll"
"1962splitHere46","12040310splitHere46","so"
"1963splitHere46","12040310splitHere46","src/main/resources/lib/win-x86/<dlls for 32-bit windows><newline46mondego>src/main/resources/lib/linux-x86/<so for 32-bit linux><newline46mondego>src/main/resources/lib/linux-x86_64/<so for 64-bit linux><newline46mondego>src/main/resources/lib/linux-ia64/<so for 64-bit linux on itanium><newline46mondego>"
"1964splitHere46","12040310splitHere46","deleteOnExit"
"1965splitHere46","12040310splitHere46","NativeLoader.java"
"1966splitHere46","12040310splitHere46","public class NativeLoader {<newline46mondego><newline46mondego>    public static final Logger LOG = Logger.getLogger(NativeLoader.class);<newline46mondego><newline46mondego>    public NativeLoader() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void loadLibrary(String library) {<newline46mondego>        try {<newline46mondego>            System.load(saveLibrary(library));<newline46mondego>        } catch (IOException e) {<newline46mondego>            LOG.warn(<doubleQuotes46>Could not find library <doubleQuotes46> + library +<newline46mondego>                    <doubleQuotes46> as resource, trying fallback lookup through System.loadLibrary<doubleQuotes46>);<newline46mondego>            System.loadLibrary(library);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    private String getOSSpecificLibraryName(String library, boolean includePath) {<newline46mondego>        String osArch = System.getProperty(<doubleQuotes46>os.arch<doubleQuotes46>);<newline46mondego>        String osName = System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>).toLowerCase();<newline46mondego>        String name;<newline46mondego>        String path;<newline46mondego><newline46mondego>        if (osName.startsWith(<doubleQuotes46>win<doubleQuotes46>)) {<newline46mondego>            if (osArch.equalsIgnoreCase(<doubleQuotes46>x86<doubleQuotes46>)) {<newline46mondego>                name = library + <doubleQuotes46>.dll<doubleQuotes46>;<newline46mondego>                path = <doubleQuotes46>win-x86/<doubleQuotes46>;<newline46mondego>            } else {<newline46mondego>                throw new UnsupportedOperationException(<doubleQuotes46>Platform <doubleQuotes46> + osName + <doubleQuotes46>:<doubleQuotes46> + osArch + <doubleQuotes46> not supported<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        } else if (osName.startsWith(<doubleQuotes46>linux<doubleQuotes46>)) {<newline46mondego>            if (osArch.equalsIgnoreCase(<doubleQuotes46>amd64<doubleQuotes46>)) {<newline46mondego>                name = <doubleQuotes46>lib<doubleQuotes46> + library + <doubleQuotes46>.so<doubleQuotes46>;<newline46mondego>                path = <doubleQuotes46>linux-x86_64/<doubleQuotes46>;<newline46mondego>            } else if (osArch.equalsIgnoreCase(<doubleQuotes46>ia64<doubleQuotes46>)) {<newline46mondego>                name = <doubleQuotes46>lib<doubleQuotes46> + library + <doubleQuotes46>.so<doubleQuotes46>;<newline46mondego>                path = <doubleQuotes46>linux-ia64/<doubleQuotes46>;<newline46mondego>            } else if (osArch.equalsIgnoreCase(<doubleQuotes46>i386<doubleQuotes46>)) {<newline46mondego>                name = <doubleQuotes46>lib<doubleQuotes46> + library + <doubleQuotes46>.so<doubleQuotes46>;<newline46mondego>                path = <doubleQuotes46>linux-x86/<doubleQuotes46>;<newline46mondego>            } else {<newline46mondego>                throw new UnsupportedOperationException(<doubleQuotes46>Platform <doubleQuotes46> + osName + <doubleQuotes46>:<doubleQuotes46> + osArch + <doubleQuotes46> not supported<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            throw new UnsupportedOperationException(<doubleQuotes46>Platform <doubleQuotes46> + osName + <doubleQuotes46>:<doubleQuotes46> + osArch + <doubleQuotes46> not supported<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        return includePath ? path + name : name;<newline46mondego>    }<newline46mondego><newline46mondego>    private String saveLibrary(String library) throws IOException {<newline46mondego>        InputStream in = null;<newline46mondego>        OutputStream out = null;<newline46mondego><newline46mondego>        try {<newline46mondego>            String libraryName = getOSSpecificLibraryName(library, true);<newline46mondego>            in = this.getClass().getClassLoader().getResourceAsStream(<doubleQuotes46>lib/<doubleQuotes46> + libraryName);<newline46mondego>            String tmpDirName = System.getProperty(<doubleQuotes46>java.io.tmpdir<doubleQuotes46>);<newline46mondego>            File tmpDir = new File(tmpDirName);<newline46mondego>            if (!tmpDir.exists()) {<newline46mondego>                tmpDir.mkdir();<newline46mondego>            }<newline46mondego>            File file = File.createTempFile(library + <doubleQuotes46>-<doubleQuotes46>, <doubleQuotes46>.tmp<doubleQuotes46>, tmpDir);<newline46mondego>            // Clean up the file when exiting<newline46mondego>            file.deleteOnExit();<newline46mondego>            out = new FileOutputStream(file);<newline46mondego><newline46mondego>            int cnt;<newline46mondego>            byte buf[] = new byte[16 * 1024];<newline46mondego>            // copy until done.<newline46mondego>            while ((cnt = in.read(buf)) >= 1) {<newline46mondego>                out.write(buf, 0, cnt);<newline46mondego>            }<newline46mondego>            LOG.info(<doubleQuotes46>Saved libfile: <doubleQuotes46> + file.getAbsoluteFile());<newline46mondego>            return file.getAbsolutePath();<newline46mondego>        } finally {<newline46mondego>            if (in != null) {<newline46mondego>                try {<newline46mondego>                    in.close();<newline46mondego>                } catch (IOException ignore) {<newline46mondego>                }<newline46mondego>            }<newline46mondego>            if (out != null) {<newline46mondego>                try {<newline46mondego>                    out.close();<newline46mondego>                } catch (IOException ignore) {<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1967splitHere46","12040310splitHere46","NativeLoader"
"1968splitHere46","12040310splitHere46","loadLibrary(<doubleQuotes46>thelibrary<doubleQuotes46>)"
"1969splitHere46","12040360splitHere46","cd Desktop<newline46mondego>"
"1970splitHere46","12040562splitHere46","<%@ taglib uri=<doubleQuotes46>http://ckeditor.com<doubleQuotes46> prefix=<doubleQuotes46>ckeditor<doubleQuotes46> %>"
"1971splitHere46","12040562splitHere46","CKEditor"
"1972splitHere46","12040815splitHere46","TableWrapData twd = new TableWrapData(TableWrapData.FILL_GRAB);<newline46mondego>"
"1973splitHere46","12040900splitHere46","String s = URLDecoder.decode(myString, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"1974splitHere46","12040922splitHere46","public static Bitmap createBlackAndWhite(Bitmap src) {<newline46mondego>    int width = src.getWidth();<newline46mondego>    int height = src.getHeight();<newline46mondego>    // create output bitmap<newline46mondego>    Bitmap bmOut = Bitmap.createBitmap(width, height, src.getConfig());<newline46mondego>    // color information<newline46mondego>    int A, R, G, B;<newline46mondego>    int pixel;<newline46mondego><newline46mondego>    // scan through all pixels<newline46mondego>    for (int x = 0; x < width; ++x) {<newline46mondego>        for (int y = 0; y < height; ++y) {<newline46mondego>            // get pixel color<newline46mondego>            pixel = src.getPixel(x, y);<newline46mondego>            A = Color.alpha(pixel);<newline46mondego>            R = Color.red(pixel);<newline46mondego>            G = Color.green(pixel);<newline46mondego>            B = Color.blue(pixel);<newline46mondego>            int gray = (int) (0.2989 * R + 0.5870 * G + 0.1140 * B);<newline46mondego><newline46mondego>            // use 128 as threshold, above -> white, below -> black<newline46mondego>            if (gray > 128) <newline46mondego>                gray = 255;<newline46mondego>            else<newline46mondego>                gray = 0;<newline46mondego>            // set new pixel color to output bitmap<newline46mondego>            bmOut.setPixel(x, y, Color.argb(A, gray, gray, gray));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return bmOut;<newline46mondego>}<newline46mondego>"
"1975splitHere46","12040922splitHere46","gray = 0.2989 * R + 0.5870 * G + 0.1140 * B"
"1976splitHere46","12040922splitHere46","public static Bitmap createGrayscale(Bitmap src) {<newline46mondego>    int width = src.getWidth();<newline46mondego>    int height = src.getHeight();<newline46mondego>    // create output bitmap<newline46mondego>    Bitmap bmOut = Bitmap.createBitmap(width, height, src.getConfig());<newline46mondego>    // color information<newline46mondego>    int A, R, G, B;<newline46mondego>    int pixel;<newline46mondego><newline46mondego>    // scan through all pixels<newline46mondego>    for (int x = 0; x < width; ++x) {<newline46mondego>        for (int y = 0; y < height; ++y) {<newline46mondego>            // get pixel color<newline46mondego>            pixel = src.getPixel(x, y);<newline46mondego>            A = Color.alpha(pixel);<newline46mondego>            R = Color.red(pixel);<newline46mondego>            G = Color.green(pixel);<newline46mondego>            B = Color.blue(pixel);<newline46mondego>            int gray = (int) (0.2989 * R + 0.5870 * G + 0.1140 * B);<newline46mondego>            // set new pixel color to output bitmap<newline46mondego>            bmOut.setPixel(x, y, Color.argb(A, gray, gray, gray));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return bmOut;<newline46mondego>}<newline46mondego>"
"1977splitHere46","12040922splitHere46","// code from that answer put into method from above<newline46mondego>public static Bitmap createGrayscale(Bitmap src) {<newline46mondego>    int width = src.getWidth();<newline46mondego>    int height = src.getHeight();<newline46mondego>    Bitmap bmOut = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);<newline46mondego>    Canvas canvas = new Canvas(bmOut);<newline46mondego>    ColorMatrix ma = new ColorMatrix();<newline46mondego>    ma.setSaturation(0);<newline46mondego>    Paint paint = new Paint();<newline46mondego>    paint.setColorFilter(new ColorMatrixColorFilter(ma));<newline46mondego>    canvas.drawBitmap(src, 0, 0, paint);<newline46mondego>    return bmOut;<newline46mondego>}<newline46mondego>"
"1978splitHere46","12041059splitHere46","<html xmlns:f=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46><newline46mondego>      xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46>><newline46mondego>"
"1979splitHere46","12041059splitHere46","<h:commandButton image=<doubleQuotes46>buscar.png<doubleQuotes46> action=<doubleQuotes46>#{bean2.addData}<doubleQuotes46><newline46mondego>    immediate=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>    <f:setPropertyActionListener target=<doubleQuotes46>#{bean2.data}<doubleQuotes46> value=<doubleQuotes46>#{bean1.data}<doubleQuotes46> /><newline46mondego>    <f:setPropertyActionListener target=<doubleQuotes46>#{bean2.strReference}<doubleQuotes46> value=<doubleQuotes46>test<doubleQuotes46> /><newline46mondego></h:commandButton><newline46mondego>"
"1980splitHere46","12041133splitHere46","?WSDL"
"1981splitHere46","12041133splitHere46","SOAP"
"1982splitHere46","12041133splitHere46","Spring"
"1983splitHere46","12041431splitHere46","-XX:+PrintCompilation"
"1984splitHere46","12041431splitHere46","$ java -XX:+PrintCompilation weird<newline46mondego>    168    1             weird$CountByOne::getNext (28 bytes)<newline46mondego>    174    1 %           weird::main @ 18 (220 bytes)<newline46mondego>    279    1 %           weird::main @ -2 (220 bytes)   made not entrant<newline46mondego>113727636<newline46mondego>    280    2 %           weird::main @ 91 (220 bytes)<newline46mondego>106265475<newline46mondego>427228826<newline46mondego>"
"1985splitHere46","12041431splitHere46","-XX:+PrintCompilation -XX:+UnlockDiagnosticVMOption"
"1986splitHere46","12041431splitHere46","hsdis-amd64.so"
"1987splitHere46","12041431splitHere46","0x00007fa35505fc5b: add    $0x1,%r8           ;*ladd<newline46mondego>                                                ; - weird$CountByOne::getNext@6 (line 12)<newline46mondego>                                                ; - weird::main@28 (line 31)<newline46mondego>  0x00007fa35505fc5f: mov    %r8,0x10(%rbx)     ;*putfield i<newline46mondego>                                                ; - weird$CountByOne::getNext@7 (line 12)<newline46mondego>                                                ; - weird::main@28 (line 31)<newline46mondego>  0x00007fa35505fc63: add    $0x1,%r14          ;*ladd<newline46mondego>                                                ; - weird::main@31 (line 31)<newline46mondego>"
"1988splitHere46","12041431splitHere46","0x00007fa35505f05d: add    $0x1,%r8           ;*ladd<newline46mondego>                                                ; - weird$CountByOne::getNext@6 (line 12)<newline46mondego>                                                ; - weird::main@101 (line 42)<newline46mondego>  0x00007fa35505f061: mov    %r8,0x10(%rbx)     ;*putfield i<newline46mondego>                                                ; - weird$CountByOne::getNext@7 (line 12)<newline46mondego>                                                ; - weird::main@101 (line 42)<newline46mondego>  0x00007fa35505f065: add    $0x1,%r13          ;*ladd<newline46mondego>"
"1989splitHere46","12041431splitHere46","0x00007fa35505f20c: xor    %r10d,%r10d<newline46mondego>  0x00007fa35505f20f: xor    %r8d,%r8d          ;*lload<newline46mondego>                                                ; - weird::main@171 (line 53)<newline46mondego>  0x00007fa35505f212: mov    %r8d,0x10(%rsp)<newline46mondego>  0x00007fa35505f217: mov    %r10,0x8(%rsp)<newline46mondego>  0x00007fa35505f21c: mov    %rbp,%rsi<newline46mondego>  0x00007fa35505f21f: callq  0x00007fa355037c60  ; OopMap{rbp=Oop off=580}<newline46mondego>                                                ;*invokevirtual getNext<newline46mondego>                                                ; - weird::main@174 (line 53)<newline46mondego>                                                ;   {optimized virtual_call}<newline46mondego>  0x00007fa35505f224: mov    0x8(%rsp),%r10<newline46mondego>  0x00007fa35505f229: add    %rax,%r10          ;*ladd<newline46mondego>                                                ; - weird::main@177 (line 53)<newline46mondego>  0x00007fa35505f22c: mov    0x10(%rsp),%r8d<newline46mondego>  0x00007fa35505f231: inc    %r8d               ;*iinc<newline46mondego>                                                ; - weird::main@180 (line 52)<newline46mondego>  0x00007fa35505f234: cmp    $0x5f5e100,%r8d<newline46mondego>  0x00007fa35505f23b: jl     0x00007fa35505f212  ;*if_icmpge<newline46mondego>                                                ; - weird::main@168 (line 52)<newline46mondego>"
"1990splitHere46","12041510splitHere46","command.getDataCriteria()"
"1991splitHere46","12041510splitHere46","synchronized getNextCommandToExecute()"
"1992splitHere46","12041510splitHere46","commands"
"1993splitHere46","12041510splitHere46","private static List<Command> commands;"
"1994splitHere46","12041510splitHere46","get()"
"1995splitHere46","12041510splitHere46","commands"
"1996splitHere46","12041510splitHere46","commands.get()"
"1997splitHere46","12041510splitHere46","synchronized"
"1998splitHere46","12041510splitHere46","Command"
"1999splitHere46","12041510splitHere46","List<Command> commands"
"2000splitHere46","12041570splitHere46","Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>).newInstance();<newline46mondego>Connection con = DriverManager.getConnection(<doubleQuotes46>jdbc:mysql://localhost/t<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>Statement st = con.createStatement();<newline46mondego>String sql = (<doubleQuotes46>SELECT * FROM posts ORDER BY id DESC LIMIT 1;<doubleQuotes46>);<newline46mondego>ResultSet rs = st.executeQuery(sql);<newline46mondego>if(rs.next()) { <newline46mondego> int id = rs.getInt(<doubleQuotes46>first_column_name<doubleQuotes46>); <newline46mondego> String str1 = rs.getString(<doubleQuotes46>second_column_name<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>con.close();<newline46mondego>"
"2001splitHere46","12041570splitHere46","rs.getInt"
"2002splitHere46","12041570splitHere46","rs.getString"
"2003splitHere46","12041570splitHere46","column_id"
"2004splitHere46","12041570splitHere46","1"
"2005splitHere46","12041570splitHere46","column_name"
"2006splitHere46","12041570splitHere46","table"
"2007splitHere46","12041570splitHere46","index"
"2008splitHere46","12041570splitHere46","column"
"2009splitHere46","12041570splitHere46","rs.next"
"2010splitHere46","12041653splitHere46","<form:input path=<doubleQuotes46>categoriesList[0].name<doubleQuotes46> id=<doubleQuotes46>categoriesList[0].name<doubleQuotes46> size=<doubleQuotes46>4<doubleQuotes46>/><newline46mondego><form:input path=<doubleQuotes46>categoriesList[1].name<doubleQuotes46> id=<doubleQuotes46>categoriesList[1].name<doubleQuotes46> size=<doubleQuotes46>4<doubleQuotes46>/><newline46mondego>"
"2011splitHere46","12041663splitHere46","<xsl:param>"
"2012splitHere46","12041663splitHere46","<xsl:param>"
"2013splitHere46","12041663splitHere46","<xsl:template>"
"2014splitHere46","12041663splitHere46","<xsl:template>"
"2015splitHere46","12041663splitHere46","<xsl:param>"
"2016splitHere46","12041663splitHere46","xsl:stylesheet"
"2017splitHere46","12041663splitHere46","xsl:param"
"2018splitHere46","12041663splitHere46","xsl:template"
"2019splitHere46","12041663splitHere46","xsl:param"
"2020splitHere46","12041739splitHere46",".class"
"2021splitHere46","12041739splitHere46",".class"
"2022splitHere46","12041846splitHere46",">>> '%04x %02x%02x %x%x' % (0x1201, 0x12, 0x01, 0x12, 0x01)<newline46mondego>'1201 1201 121'<newline46mondego>"
"2023splitHere46","12041879splitHere46","OneToMany"
"2024splitHere46","12041879splitHere46","@JoinColumn"
"2025splitHere46","12041879splitHere46","@OneToMany<newline46mondego>@JoinColumn(name=<doubleQuotes46>TXTHEAD_CODE<doubleQuotes46>)<newline46mondego>private Set<Text> text;<newline46mondego>"
"2026splitHere46","12041879splitHere46","Set"
"2027splitHere46","12041879splitHere46","List"
"2028splitHere46","12041879splitHere46","referencedColumnName"
"2029splitHere46","12041879splitHere46","@OneToMany<newline46mondego>@JoinColumn(name=<doubleQuotes46>TXTHEAD_CODE<doubleQuotes46>, referencedColumnName=<doubleQuotes46>DATREG_META_CODE<doubleQuotes46>)<newline46mondego>private Set<Text> text;<newline46mondego>"
"2030splitHere46","12041928splitHere46","interface PropertyInfo {<newline46mondego>    Object get();<newline46mondego>    void set(Object value);<newline46mondego>}<newline46mondego>"
"2031splitHere46","12041928splitHere46","parse()"
"2032splitHere46","12041928splitHere46","private PropertyInfo parse(...) { // take some parameters<newline46mondego>    // Find your getter and setter through reflection<newline46mondego>    final Method getter = ...<newline46mondego>    final Method setter = ...<newline46mondego>    return new PropertyInfo() {<newline46mondego>        public Object get() {<newline46mondego>            // Use the getter<newline46mondego>        }<newline46mondego>        public void set(Object value) {<newline46mondego>            // Use the setter<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"2033splitHere46","12041928splitHere46","PropertyInfo p = parse(...); // pass whatever needs to be parsed<newline46mondego>if (p.get() == 123) ...<newline46mondego>"
"2034splitHere46","12041928splitHere46","PropertyInfo p = parse(...); // pass whatever needs to be parsed<newline46mondego>p.set(123);<newline46mondego>"
"2035splitHere46","12042079splitHere46","SwingX"
"2036splitHere46","12042199splitHere46","public class LinkedList<E><newline46mondego>    extends AbstractSequentialList<E><newline46mondego>    implements List<E>, Deque<E>, Cloneable, java.io.Serializable<newline46mondego>{<newline46mondego>"
"2037splitHere46","12042199splitHere46","LinkedList<E>"
"2038splitHere46","12042199splitHere46","Queue<E>"
"2039splitHere46","12042199splitHere46","Deque<E>"
"2040splitHere46","12042199splitHere46","Queue<E>"
"2041splitHere46","12042199splitHere46","public interface Deque<E> extends Queue<E> {<newline46mondego>"
"2042splitHere46","12042199splitHere46","LinkedList<E>"
"2043splitHere46","12042199splitHere46","Queue<E>"
"2044splitHere46","12042199splitHere46","LinkedList<E>"
"2045splitHere46","12042355splitHere46","${Brand Name} ${Colour} ${Product Description} - ${ID}"
"2046splitHere46","12042355splitHere46","System.out.println(camelSplit(<doubleQuotes46>ThisIsAFunkyCamelString<doubleQuotes46>));<newline46mondego><newline46mondego>/** Returns a copy of s with a space in front of each capital letter. */<newline46mondego><newline46mondego>public String camelSplit(String s) {<newline46mondego>    if (s == null || s.length < 2) {<newline46mondego>        return s;<newline46mondego>    }<newline46mondego>    return s.substring(0, 1) + s.substring(1).replaceAll(<doubleQuotes46>([A-Z])<doubleQuotes46>, <doubleQuotes46> $1<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2047splitHere46","12042355splitHere46","USA"
"2048splitHere46","12042403splitHere46","float y = points.get(++i);<newline46mondego>"
"2049splitHere46","12042403splitHere46","i = points.size()-1"
"2050splitHere46","12042403splitHere46","points.get(++i);"
"2051splitHere46","12042403splitHere46","i = points.size()"
"2052splitHere46","12042403splitHere46","++"
"2053splitHere46","12042403splitHere46","List<Point> points = ...<newline46mondego><newline46mondego>protected void doDraw(Canvas canvas) {<newline46mondego>   Paint p = new Paint();<newline46mondego>   p.setStyle(Paint.Style.FILL);<newline46mondego>   p.setColor(Color.WHITE);<newline46mondego><newline46mondego>   for (Point p : points) {<newline46mondego>      canvas.drawPoint(p.x, p.y, p);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>public boolean onTouchEvent(MotionEvent event) {   <newline46mondego>   float x = event.getX();<newline46mondego>   float y = event.getY();<newline46mondego><newline46mondego>   points.add(new Point(x, y));<newline46mondego><newline46mondego>   return true;<newline46mondego>}<newline46mondego>"
"2054splitHere46","12042408splitHere46","Calendar"
"2055splitHere46","12042408splitHere46","SimpleDateFormat"
"2056splitHere46","12042408splitHere46","LocalDate"
"2057splitHere46","12042408splitHere46","import java.util.*;<newline46mondego>import org.joda.time.*;<newline46mondego>import org.joda.time.format.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        DateTimeFormatter formatter = DateTimeFormat.forPattern(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>)<newline46mondego>            .withLocale(Locale.UK);<newline46mondego><newline46mondego>        LocalDate date = formatter.parseLocalDate(<doubleQuotes46>18/08/2012<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println(date.getYear());  // 2012<newline46mondego>        System.out.println(date.getMonthOfYear()); // 8<newline46mondego>        System.out.println(date.getDayOfMonth());   // 18<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2058splitHere46","12042615splitHere46","public String post(String str) {<newline46mondego>        String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        try {<newline46mondego>            HttpParams httpParameters = new BasicHttpParams();<newline46mondego>            int timeoutConnection = 3000;<newline46mondego>            HttpConnectionParams.setConnectionTimeout(httpParameters, timeoutConnection);<newline46mondego>            int timeoutSocket = 5000;<newline46mondego>            HttpConnectionParams.setSoTimeout(httpParameters, timeoutSocket);<newline46mondego>            DefaultHttpClient httpClient = new DefaultHttpClient(httpParameters);<newline46mondego>            HttpPost postRequest = new HttpPost(SERVER_ADDRESS);<newline46mondego>            StringEntity input = new StringEntity(str);<newline46mondego>            input.setContentType(<doubleQuotes46>application/json<doubleQuotes46>);<newline46mondego>            postRequest.setEntity(input);<newline46mondego>            HttpResponse response = httpClient.execute(postRequest);<newline46mondego>            result = getResult(response).toString();<newline46mondego>            httpClient.getConnectionManager().shutdown();<newline46mondego>        } catch (Exception e) {<newline46mondego>            System.out.println(e.getMessage());<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>}<newline46mondego><newline46mondego>private StringBuilder getResult(HttpResponse response) throws IllegalStateException, IOException {<newline46mondego>            StringBuilder result = new StringBuilder();<newline46mondego>            BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())), 1024);<newline46mondego>            String output;<newline46mondego>            while ((output = br.readLine()) != null) <newline46mondego>                result.append(output);<newline46mondego><newline46mondego>            return result;      <newline46mondego>}<newline46mondego>"
"2059splitHere46","12042978splitHere46","@Aspect<newline46mondego>@Component<newline46mondego>public class MyAspect {<newline46mondego><newline46mondego>    @DeclareParents(defaultImpl = Guitar.class, value = <doubleQuotes46>com.proxy.SpookerImp<doubleQuotes46>)<newline46mondego>    private Performer guitar;<newline46mondego><newline46mondego>}<newline46mondego>"
"2060splitHere46","12042978splitHere46","Spoker spoker = (Spoker)context.getBean(<doubleQuotes46>SpokerImp<doubleQuotes46>);<newline46mondego>spoker.spook();<newline46mondego>((Performer)spoker).perform();<newline46mondego>"
"2061splitHere46","12042978splitHere46","spoker"
"2062splitHere46","12042978splitHere46","Performer"
"2063splitHere46","12042978splitHere46","SpokerImpl"
"2064splitHere46","12042978splitHere46","Performer"
"2065splitHere46","12042978splitHere46","Guitar"
"2066splitHere46","12043075splitHere46","public class ThreadControl {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        MyRunnable myRunnable = new MyRunnable(<doubleQuotes46>MyRunnable<doubleQuotes46>);<newline46mondego>        Thread thread = new Thread(myRunnable);<newline46mondego>        thread.setDaemon(true);<newline46mondego>        thread.start();<newline46mondego><newline46mondego>        myRunnable.whoAmI();//call method from within thread<newline46mondego><newline46mondego>        try {<newline46mondego>            Thread.sleep(6000);<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>        }<newline46mondego>        myRunnable.isStopped.set(true);//stop thread<newline46mondego>    }<newline46mondego><newline46mondego> class MyRunnable implements Runnable {<newline46mondego>        public String threadName;<newline46mondego>        public AtomicBoolean isStopped=new AtomicBoolean(false);<newline46mondego><newline46mondego>        public MyRunnable() {<newline46mondego>        }<newline46mondego><newline46mondego>        public MyRunnable(String threadName) {<newline46mondego>            this.threadName = threadName;<newline46mondego>        }<newline46mondego><newline46mondego>        public void run() {<newline46mondego>            System.out.println(<doubleQuotes46>Thread started, threadName=<doubleQuotes46> + this.threadName + <doubleQuotes46>, hashCode=<doubleQuotes46><newline46mondego>                    + this.hashCode());<newline46mondego><newline46mondego>            while (!this.isStopped.get()) {<newline46mondego>                try {<newline46mondego>                    Thread.sleep(3000);<newline46mondego>                } catch (InterruptedException e) {<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46>Thread looping, threadName=<doubleQuotes46> + this.threadName + <doubleQuotes46>, hashCode=<doubleQuotes46><newline46mondego>                        + this.hashCode());<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void whoAmI() {<newline46mondego>            System.out.println(<doubleQuotes46>whoAmI, threadName=<doubleQuotes46> + this.threadName + <doubleQuotes46>, hashCode=<doubleQuotes46><newline46mondego>                    + this.hashCode());<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2067splitHere46","12043338splitHere46","/Library/Java/JavaVirtualMachines/jdk1.7.0_06.jdk/Contents/Home"
"2068splitHere46","12043428splitHere46","HttpPost"
"2069splitHere46","12043428splitHere46","EntityUtils.toString(HttpEntity entity)"
"2070splitHere46","12043428splitHere46","HttpPost"
"2071splitHere46","12043429splitHere46","awk"
"2072splitHere46","12043429splitHere46","awk"
"2073splitHere46","12043429splitHere46","{"
"2074splitHere46","12043429splitHere46","}"
"2075splitHere46","12043429splitHere46","{"
"2076splitHere46","12043429splitHere46","}"
"2077splitHere46","12043429splitHere46","{"
"2078splitHere46","12043429splitHere46","}"
"2079splitHere46","12043429splitHere46","int *(*(*foo(char *s))(int x))[SIZE] { ... }<newline46mondego>"
"2080splitHere46","12043429splitHere46","foo"
"2081splitHere46","12043429splitHere46","SIZE"
"2082splitHere46","12043429splitHere46","int"
"2083splitHere46","12043429splitHere46","BEGIN"
"2084splitHere46","12043429splitHere46","{"
"2085splitHere46","12043429splitHere46","}"
"2086splitHere46","12043530splitHere46","TreeCheckingModel"
"2087splitHere46","12043530splitHere46","setPathEnabled"
"2088splitHere46","12043530splitHere46","setPathEnabled(treePath, false)"
"2089splitHere46","12043530splitHere46","TreePath"
"2090splitHere46","12043538splitHere46","String"
"2091splitHere46","12043538splitHere46","String"
"2092splitHere46","12043538splitHere46","Strings"
"2093splitHere46","12043538splitHere46","input.trim();<newline46mondego>"
"2094splitHere46","12043538splitHere46","String output = input.trim();<newline46mondego>"
"2095splitHere46","12043641splitHere46","indexOf"
"2096splitHere46","12043641splitHere46","List"
"2097splitHere46","12043641splitHere46","Integer"
"2098splitHere46","12043641splitHere46","List"
"2099splitHere46","12043641splitHere46","size()"
"2100splitHere46","12043709splitHere46","dialog =  new conflict(this, ...);<newline46mondego>"
"2101splitHere46","12043709splitHere46","this"
"2102splitHere46","12043709splitHere46","UI"
"2103splitHere46","12043709splitHere46","this"
"2104splitHere46","12043709splitHere46","conflict"
"2105splitHere46","12043709splitHere46","Conflict"
"2106splitHere46","12043709splitHere46","showConflictDialog"
"2107splitHere46","12043709splitHere46","send_mode"
"2108splitHere46","12043709splitHere46","sendMode"
"2109splitHere46","12043723splitHere46","database-migration:1.1"
"2110splitHere46","12043723splitHere46","grails dbm-create-changelog changelog.groovy"
"2111splitHere46","12043723splitHere46","grails dbm-changelog-sync"
"2112splitHere46","12043723splitHere46","grails dbm-update"
"2113splitHere46","12043844splitHere46","foo.bar.name"
"2114splitHere46","12043844splitHere46","/**<newline46mondego> * Creates a detached criteria from the given Type and given map of filters.<newline46mondego> * <newline46mondego> * @param type Target type the Criteria is build for.<newline46mondego> * @param identifierPropertyName If provided (not null) the identifier<newline46mondego> *            property name can be identified for the given type to simplify<newline46mondego> *            the queries if the identifier property is the only property<newline46mondego> *            used on the parent no subqueries are needed.<newline46mondego> * @param filters<newline46mondego> * <newline46mondego> * @see #createTree(Set, String)<newline46mondego> * @see #addRestrictions(DetachedCriteria, TreeNode)<newline46mondego> * <newline46mondego> * @return<newline46mondego> */<newline46mondego>public static DetachedCriteria createDetachedCriteria(final Class<?> type, final String identifierPropertyName,<newline46mondego>    final Map<String, Criterion> filters)<newline46mondego>{<newline46mondego>    final DetachedCriteria criteria = DetachedCriteria.forClass(type);<newline46mondego><newline46mondego>    // add restrictions using tree<newline46mondego>    final TreeNode<Entry<String, Criterion>> rootNode = HibernateUtils2.createTree(filters.entrySet(),<newline46mondego>        identifierPropertyName);<newline46mondego><newline46mondego>    final Iterator<TreeNode<Entry<String, Criterion>>> it = rootNode.getChildren().iterator();<newline46mondego><newline46mondego>    while (it.hasNext())<newline46mondego>        HibernateUtils.addRestrictions(criteria, it.next());<newline46mondego><newline46mondego>    return criteria;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Creates a Tree from the given Set using a fictional root TreeNode.<newline46mondego> * <newline46mondego> * @param <T><newline46mondego> * <newline46mondego> * @param filters<newline46mondego> * @param identifierPropertyName Property name which is merged with its<newline46mondego> *            parent property. Example: <b>user.id</b> is treated as single<newline46mondego> *            property.<newline46mondego> * @return<newline46mondego> */<newline46mondego>public static <T extends Object> TreeNode<Entry<String, T>> createTree(final Set<Entry<String, T>> filters,<newline46mondego>    final String identifierPropertyName)<newline46mondego>{<newline46mondego><newline46mondego>    final Iterator<Entry<String, Object>> it = filters.iterator();<newline46mondego><newline46mondego>    /*<newline46mondego>     * create key property tree for Entity properties<newline46mondego>     */<newline46mondego>    final TreeNode<Entry<String, Object>> rootNode = new TreeNode<Entry<String, Object>>(<newline46mondego>        new SimpleEntry<String, Object>(<doubleQuotes46>root<doubleQuotes46>, null));<newline46mondego><newline46mondego>    while (it.hasNext())<newline46mondego>    {<newline46mondego>        final Entry<String, Object> entry = it.next();<newline46mondego>        // foo.bar.name<newline46mondego>        final String key = entry.getKey();<newline46mondego><newline46mondego>        String[] props;<newline46mondego><newline46mondego>        /*<newline46mondego>         * check if we have a nested hierarchy<newline46mondego>         */<newline46mondego>        if (key.contains(<doubleQuotes46>.<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            props = key.split(<doubleQuotes46>\\.<doubleQuotes46>);<newline46mondego>            // check for identifier since identifier property name does not<newline46mondego>            // need new subcriteria<newline46mondego>            if (!StringUtils.isBlank(identifierPropertyName))<newline46mondego>            {<newline46mondego>                int propsTempLength = props.length - 1;<newline46mondego>                if (props[propsTempLength].equals(identifierPropertyName))<newline46mondego>                {<newline46mondego>                    props = Arrays.copyOf(props, propsTempLength);<newline46mondego>                    propsTempLength--;<newline46mondego>                    props[propsTempLength] = props[propsTempLength] + <doubleQuotes46>.<doubleQuotes46> + identifierPropertyName;<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            // check for <doubleQuotes46>this<doubleQuotes46> identifier of beginning, which needs to be<newline46mondego>            // added for projections because of hibernate not recognizing it<newline46mondego>            if (props.length > 1 && props[0].equals(<doubleQuotes46>this<doubleQuotes46>))<newline46mondego>            {<newline46mondego>                props[0] = <doubleQuotes46>this.<doubleQuotes46> + props[1];<newline46mondego><newline46mondego>                props = ArrayUtils.remove(props, 1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        else<newline46mondego>            props = new String[]<newline46mondego>            {<newline46mondego>                key<newline46mondego>            };<newline46mondego><newline46mondego>        TreeNode<Entry<String, Object>> currNode = rootNode;<newline46mondego><newline46mondego>        // create nested criteria<newline46mondego>        for (int i = 0; i < props.length; i++)<newline46mondego>        {<newline46mondego>            Object valueAdd;<newline46mondego><newline46mondego>            // only leaf needs value<newline46mondego>            if (i != props.length - 1)<newline46mondego>                valueAdd = null;<newline46mondego>            else<newline46mondego>                valueAdd = entry.getValue();<newline46mondego><newline46mondego>            final TreeNode<Entry<String, Object>> childTempNode = new TreeNode<Entry<String, Object>>(<newline46mondego>                new SimpleEntry<String, Object>(props[i], valueAdd));<newline46mondego><newline46mondego>            // try to get the real node<newline46mondego>            TreeNode<Entry<String, Object>> childNode = currNode.getChild(childTempNode.getElement());<newline46mondego>            // check if we already have a unique node<newline46mondego>            if (childNode == null)<newline46mondego>            {<newline46mondego>                childNode = childTempNode;<newline46mondego>                // add new child to set if its a new node<newline46mondego>                currNode.addChild(childNode);<newline46mondego>            }<newline46mondego><newline46mondego>            currNode = childNode;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return rootNode;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Recursively adds the given Restriction's wrapped in the given TreeNode to<newline46mondego> * the Criteria.<newline46mondego> * <newline46mondego> * @param criteria<newline46mondego> * @param treeNode<newline46mondego> */<newline46mondego>public static void addRestrictions(final DetachedCriteria criteria,<newline46mondego>    final TreeNode<Entry<String, Criterion>> treeNode)<newline46mondego>{<newline46mondego>    // if we have a leaf simply add restriction<newline46mondego>    if (treeNode.getChildren().size() == 0)<newline46mondego>        criteria.add(treeNode.getElement().getValue());<newline46mondego>    else<newline46mondego>    {<newline46mondego>        // create new sub Criteria and iterate children's<newline46mondego>        final DetachedCriteria subCriteria = criteria.createCriteria(treeNode.getElement().getKey());<newline46mondego><newline46mondego>        final Iterator<TreeNode<Entry<String, Criterion>>> it = treeNode.getChildren().iterator();<newline46mondego><newline46mondego>        while (it.hasNext())<newline46mondego>            HibernateUtils.addRestrictions(subCriteria, it.next());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/*<newline46mondego> * Utility classes<newline46mondego> */<newline46mondego><newline46mondego>/**<newline46mondego> * Generic TreeNode implementation with a Set to hold its children to only allow<newline46mondego> * unique children's.<newline46mondego> */<newline46mondego>public class TreeNode<T><newline46mondego>{<newline46mondego>    private final T element;<newline46mondego><newline46mondego>    private final Set<TreeNode<T>> childrens;<newline46mondego><newline46mondego>    public TreeNode(final T element)<newline46mondego>    {<newline46mondego>        if (element == null)<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>Element cannot be null<doubleQuotes46>);<newline46mondego><newline46mondego>        this.element = element;<newline46mondego><newline46mondego>        this.childrens = new HashSet<TreeNode<T>>();<newline46mondego>    }<newline46mondego><newline46mondego>    public void addChildren(final TreeNode<T> children)<newline46mondego>    {<newline46mondego>        this.childrens.add(children);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Retrieves the children which equals the given one.<newline46mondego>     * <newline46mondego>     * @param children<newline46mondego>     * @return If no children equals the given one returns null.<newline46mondego>     */<newline46mondego>    public TreeNode<T> getChildren(final TreeNode<T> children)<newline46mondego>    {<newline46mondego>        final Iterator<TreeNode<T>> it = this.childrens.iterator();<newline46mondego><newline46mondego>        TreeNode<T> next = null;<newline46mondego><newline46mondego>        while (it.hasNext())<newline46mondego>        {<newline46mondego>            next = it.next();<newline46mondego>            if (next.equals(children))<newline46mondego>                return next;<newline46mondego>        }<newline46mondego><newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    public T getElement()<newline46mondego>    {<newline46mondego>        return this.element;<newline46mondego>    }<newline46mondego><newline46mondego>    public Set<TreeNode<T>> getChildrens()<newline46mondego>    {<newline46mondego>        return this.childrens;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Checks if the element of this instance equals the one of the given<newline46mondego>     * Object.<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public boolean equals(final Object obj)<newline46mondego>    {<newline46mondego>        if (this == obj)<newline46mondego>            return true;<newline46mondego><newline46mondego>        if (obj != null && obj instanceof TreeNode)<newline46mondego>        {<newline46mondego>            final TreeNode<?> treeNode = (TreeNode<?>) obj;<newline46mondego><newline46mondego>            return this.element.equals(treeNode.element);<newline46mondego>        }<newline46mondego>        else<newline46mondego>            return false;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode()<newline46mondego>    {<newline46mondego>        int hash = 1;<newline46mondego>        hash = hash * 17 + this.element.hashCode();<newline46mondego>        return hash;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2115splitHere46","12043844splitHere46","Map<String, Object> filters = new HashMap<String, Object>();<newline46mondego>filters.put(<doubleQuotes46>foo.bar.name<doubleQuotes46>, Restrictions.like(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>peter<doubleQuotes46>));<newline46mondego>filters.put(<doubleQuotes46>foo.test.id<doubleQuotes46>, Restrictions.eq(<doubleQuotes46>id<doubleQuotes46>, 2));<newline46mondego><newline46mondego>List<Class> data = HibernateUtils.createDetachedCriteria(Class, <doubleQuotes46>get identifier from sessionFactory<doubleQuotes46>, filters).getExecutableCriteria(session).list();<newline46mondego>"
"2116splitHere46","12043844splitHere46","Criterion"
"2117splitHere46","12043844splitHere46","ClassMetadata"
"2118splitHere46","12043924splitHere46","List<?> i"
"2119splitHere46","12043924splitHere46","?"
"2120splitHere46","12043924splitHere46","i.get(0)"
"2121splitHere46","12043924splitHere46","Object"
"2122splitHere46","12043924splitHere46","?"
"2123splitHere46","12043924splitHere46","?"
"2124splitHere46","12043924splitHere46","Object"
"2125splitHere46","12043924splitHere46","i.set(0, i.get(0))"
"2126splitHere46","12043924splitHere46","List<Foo> fooz = /* init */;<newline46mondego>Object foo = fooz.get(0);<newline46mondego>fooz.set(0, foo); // won't compile because foo is an object, not a Foo<newline46mondego>"
"2127splitHere46","12043982splitHere46","Queue<Command> concurrentQueue = new ConcurrentLinkedQueue<Command>();<newline46mondego> Command command = new Command();<newline46mondego> ...<newline46mondego> concurrentQueue.add(command);<newline46mondego>"
"2128splitHere46","12043982splitHere46","List"
"2129splitHere46","12043982splitHere46","Collections.synchronizedList(...)"
"2130splitHere46","12043982splitHere46","ConcurrentLinkedQueue"
"2131splitHere46","12043982splitHere46","// turn the commands list into a synchronized list by wrapping it<newline46mondego>commands = Collections.synchronizedList(commands);<newline46mondego>"
"2132splitHere46","12043982splitHere46","List.add(...)"
"2133splitHere46","12043984splitHere46","\"
"2134splitHere46","12043984splitHere46","<doubleQuotes46>^(?:(2\\d\\d\\d)\\s+)?(?:Comm\\. Rep\\.\\s+)?(?:CONG\\s+)?(\\S+)\\s+(\\S+)\\s+(?:No\\.\\s+)?(\\S+)(?:\\s+\\(.*?\\))?$<doubleQuotes46><newline46mondego>"
"2135splitHere46","12044132splitHere46","@GET @Path(IMAGE_ID_PATH_PARAM)<newline46mondego>    @Produces(<doubleQuotes46>image/*<doubleQuotes46>)<newline46mondego>    public Response getImage(@PathParam(<doubleQuotes46>imageId<doubleQuotes46>) String imageId,<newline46mondego>        @PathParam(<doubleQuotes46>extension<doubleQuotes46>) String extension, @QueryParam(<doubleQuotes46>mods<doubleQuotes46>) String mods) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>    @PUT @Path(IMAGE_ID_PATH_PARAM)<newline46mondego>    @Consumes(<doubleQuotes46>image/*<doubleQuotes46>)<newline46mondego>    public Response putImage(@PathParam(<doubleQuotes46>imageId<doubleQuotes46>) String imageId, File image) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>"
"2136splitHere46","12044132splitHere46","PUT http://localhost:9090/images/abcde"
"2137splitHere46","12044132splitHere46","http://localhost:9090/images/abcde"
"2138splitHere46","12044132splitHere46","IMAGE_ID_PATH_PARAM"
"2139splitHere46","12044132splitHere46","GET"
"2140splitHere46","12044132splitHere46","PUT"
"2141splitHere46","12044132splitHere46","getImage"
"2142splitHere46","12044132splitHere46","@GET @Path(IMAGE_ID_PATH_PARAM + EXTENSION_PATH_PARAM)<newline46mondego>@Produces(<doubleQuotes46>image/*<doubleQuotes46>)<newline46mondego>public Response getImage(@PathParam(<doubleQuotes46>imageId<doubleQuotes46>) String imageId,<newline46mondego>    @PathParam(<doubleQuotes46>extension<doubleQuotes46>) String extension, @QueryParam(<doubleQuotes46>mods<doubleQuotes46>) String mods) {<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>@PUT @Path(IMAGE_ID_PATH_PARAM)<newline46mondego>@Consumes(<doubleQuotes46>image/*<doubleQuotes46>)<newline46mondego>public Response putImage(@PathParam(<doubleQuotes46>imageId<doubleQuotes46>) String imageId, File image) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"2143splitHere46","12044132splitHere46","PUT http://localhost:9090/images/abcde"
"2144splitHere46","12044132splitHere46","getImage"
"2145splitHere46","12044132splitHere46","@GET"
"2146splitHere46","12044132splitHere46","getImage"
"2147splitHere46","12044132splitHere46","putImage"
"2148splitHere46","12044132splitHere46","@Path({imageId}{extension})"
"2149splitHere46","12044132splitHere46","getImage"
"2150splitHere46","12044132splitHere46","@Path({imageId})"
"2151splitHere46","12044132splitHere46","putImage"
"2152splitHere46","12044132splitHere46","http://localhost:9090/application.wadl"
"2153splitHere46","12044132splitHere46","<application xmlns=<doubleQuotes46>http://research.sun.com/wadl/2006/10<doubleQuotes46>><newline46mondego><resources base=<doubleQuotes46>http://localhost:9090/<doubleQuotes46>><newline46mondego><resource path=<doubleQuotes46>images<doubleQuotes46>><newline46mondego>  <resource path=<doubleQuotes46>{imageId : [A-Za-z0-9_\-]+}<doubleQuotes46>><newline46mondego>    <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>imageId<doubleQuotes46> style=<doubleQuotes46>template<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>    <method id=<doubleQuotes46>putImage<doubleQuotes46> name=<doubleQuotes46>PUT<doubleQuotes46>><newline46mondego>      <request><newline46mondego>        <representation mediaType=<doubleQuotes46>image/*<doubleQuotes46>/><newline46mondego>      </request><newline46mondego>      <response><newline46mondego>        <representation mediaType=<doubleQuotes46>*/*<doubleQuotes46>/><newline46mondego>      </response><newline46mondego>    </method><newline46mondego>  </resource><newline46mondego>  <resource path=<doubleQuotes46>{imageId : [A-Za-z0-9_\-]+}{extension : (\.[A-Za-z]+)?}<doubleQuotes46>><newline46mondego>    <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>extension<doubleQuotes46> style=<doubleQuotes46>template<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>    <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>imageId<doubleQuotes46> style=<doubleQuotes46>template<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>    <method id=<doubleQuotes46>getImage<doubleQuotes46> name=<doubleQuotes46>GET<doubleQuotes46>><newline46mondego>      <request><newline46mondego>        <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>mods<doubleQuotes46> style=<doubleQuotes46>query<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>      </request><newline46mondego>      <response><newline46mondego>        <representation mediaType=<doubleQuotes46>image/*<doubleQuotes46>/><newline46mondego>      </response><newline46mondego>    </method><newline46mondego>  </resource><newline46mondego></resource><newline46mondego></resources><newline46mondego></application><newline46mondego>"
"2154splitHere46","12044132splitHere46","images"
"2155splitHere46","12044132splitHere46","EXTENSION_PATH_PARAM"
"2156splitHere46","12044132splitHere46","putImage"
"2157splitHere46","12044132splitHere46","@Path"
"2158splitHere46","12044132splitHere46","<application xmlns=<doubleQuotes46>http://research.sun.com/wadl/2006/10<doubleQuotes46>><newline46mondego>  <resources base=<doubleQuotes46>http://localhost:9090/<doubleQuotes46>><newline46mondego>    <resource path=<doubleQuotes46>images<doubleQuotes46>><newline46mondego>      <resource path=<doubleQuotes46>{imageId : [A-Za-z0-9_\-]+}{extension : (\.[A-Za-z]+)?}<doubleQuotes46>><newline46mondego>        <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>extension<doubleQuotes46> style=<doubleQuotes46>template<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>        <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>imageId<doubleQuotes46> style=<doubleQuotes46>template<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>        <method id=<doubleQuotes46>putImage<doubleQuotes46> name=<doubleQuotes46>PUT<doubleQuotes46>><newline46mondego>          <request><newline46mondego>            <representation mediaType=<doubleQuotes46>image/*<doubleQuotes46>/><newline46mondego>          </request><newline46mondego>          <response><newline46mondego>            <representation mediaType=<doubleQuotes46>*/*<doubleQuotes46>/><newline46mondego>          </response><newline46mondego>        </method><newline46mondego>        <method id=<doubleQuotes46>getImage<doubleQuotes46> name=<doubleQuotes46>GET<doubleQuotes46>><newline46mondego>         <request><newline46mondego>           <param xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>mods<doubleQuotes46> style=<doubleQuotes46>query<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>         </request><newline46mondego>         <response><newline46mondego>           <representation mediaType=<doubleQuotes46>image/*<doubleQuotes46>/><newline46mondego>         </response><newline46mondego>        </method><newline46mondego>      </resource><newline46mondego>    </resource><newline46mondego>  </resources><newline46mondego></application><newline46mondego>"
"2159splitHere46","12044132splitHere46","images"
"2160splitHere46","12044360splitHere46","e.consume()<newline46mondego>"
"2161splitHere46","12044408splitHere46","Multimap<String, String> mmap = ArrayListMultimap.create();<newline46mondego>mmap.put(<doubleQuotes46>Program1<doubleQuotes46>, <doubleQuotes46>SubProgramType1<doubleQuotes46>);<newline46mondego>mmap.put(<doubleQuotes46>Program1<doubleQuotes46>, <doubleQuotes46>SubProgramType2<doubleQuotes46>);<newline46mondego>// etc.<newline46mondego><newline46mondego>mmap.get(<doubleQuotes46>Program1<doubleQuotes46>)<newline46mondego>"
"2162splitHere46","12044408splitHere46","[SubProgramType1, SubProgramType2, SubProgramType7, SubProgramType9]<newline46mondego>"
"2163splitHere46","12044645splitHere46","long"
"2164splitHere46","12044645splitHere46","int"
"2165splitHere46","12044645splitHere46","Long"
"2166splitHere46","12044645splitHere46","long firstLastMessageTime = //...<newline46mondego>long lastLastMessageTime = //...<newline46mondego>return Long.valueOf(firstLastMessageTime).compareTo(Long.valueOf(lastLastMessageTime));<newline46mondego>"
"2167splitHere46","12044715splitHere46","KeyBindings"
"2168splitHere46","12044715splitHere46","InputMap im = textArea.getInputMap(WHEN_FOCUSED);<newline46mondego>ActionMap am = textArea.getActionMap();<newline46mondego><newline46mondego>am.get(<doubleQuotes46>caret-down<doubleQuotes46>).setEnabled(false);<newline46mondego>am.get(<doubleQuotes46>caret-up<doubleQuotes46>).setEnabled(false);<newline46mondego>"
"2169splitHere46","12044715splitHere46","selection-up = shift pressed UP<newline46mondego>caret-next-word = ctrl pressed RIGHT<newline46mondego>selection-previous-word = shift ctrl pressed LEFT<newline46mondego>selection-up = shift pressed KP_UP<newline46mondego>caret-down = pressed DOWN<newline46mondego>caret-previous-word = ctrl pressed LEFT<newline46mondego>caret-end-line = pressed END<newline46mondego>selection-page-up = shift pressed PAGE_UP<newline46mondego>caret-up = pressed KP_UP<newline46mondego>delete-next = pressed DELETE<newline46mondego>caret-begin = ctrl pressed HOME<newline46mondego>selection-backward = shift pressed LEFT<newline46mondego>caret-end = ctrl pressed END<newline46mondego>delete-previous = pressed BACK_SPACE<newline46mondego>selection-next-word = shift ctrl pressed RIGHT<newline46mondego>caret-backward = pressed LEFT<newline46mondego>caret-backward = pressed KP_LEFT<newline46mondego>selection-forward = shift pressed KP_RIGHT<newline46mondego>delete-previous = ctrl pressed H<newline46mondego>unselect = ctrl pressed BACK_SLASH<newline46mondego>insert-break = pressed ENTER<newline46mondego>selection-begin-line = shift pressed HOME<newline46mondego>caret-forward = pressed RIGHT<newline46mondego>selection-page-left = shift ctrl pressed PAGE_UP<newline46mondego>selection-down = shift pressed DOWN<newline46mondego>page-down = pressed PAGE_DOWN<newline46mondego>delete-previous-word = ctrl pressed BACK_SPACE<newline46mondego>delete-next-word = ctrl pressed DELETE<newline46mondego>selection-backward = shift pressed KP_LEFT<newline46mondego>selection-page-right = shift ctrl pressed PAGE_DOWN<newline46mondego>caret-next-word = ctrl pressed KP_RIGHT<newline46mondego>selection-end-line = shift pressed END<newline46mondego>caret-previous-word = ctrl pressed KP_LEFT<newline46mondego>caret-begin-line = pressed HOME<newline46mondego>caret-down = pressed KP_DOWN<newline46mondego>selection-forward = shift pressed RIGHT<newline46mondego>selection-end = shift ctrl pressed END<newline46mondego>selection-previous-word = shift ctrl pressed KP_LEFT<newline46mondego>selection-down = shift pressed KP_DOWN<newline46mondego>insert-tab = pressed TAB<newline46mondego>caret-up = pressed UP<newline46mondego>selection-begin = shift ctrl pressed HOME<newline46mondego>selection-page-down = shift pressed PAGE_DOWN<newline46mondego>delete-previous = shift pressed BACK_SPACE<newline46mondego>caret-forward = pressed KP_RIGHT<newline46mondego>selection-next-word = shift ctrl pressed KP_RIGHT<newline46mondego>page-up = pressed PAGE_UP<newline46mondego>"
"2170splitHere46","12044733splitHere46","public ShoppingCart() {<newline46mondego>  this(Optional.<DiscountCoupon>absent());<newline46mondego>}<newline46mondego>"
"2171splitHere46","12044733splitHere46","Optional"
"2172splitHere46","12044775splitHere46","boolean value = new Boolean(<doubleQuotes46>true<doubleQuotes46>).booleanValue();<newline46mondego>"
"2173splitHere46","12044775splitHere46","Boolean"
"2174splitHere46","12044775splitHere46","booleanValue()"
"2175splitHere46","12044775splitHere46","boolean value = Boolean.valueOf(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>"
"2176splitHere46","12044775splitHere46","Boolean"
"2177splitHere46","12044775splitHere46","boolean value = Boolean.parseBoolean(<doubleQuotes46>true<doubleQuotes46>);<newline46mondego>"
"2178splitHere46","12044775splitHere46","private static boolean toBoolean(String name) { <newline46mondego>  return ((name != null) && name.equalsIgnoreCase(<doubleQuotes46>true<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"2179splitHere46","12044775splitHere46","toBoolean(String name)"
"2180splitHere46","12044775splitHere46","boolean value = <doubleQuotes46>true<doubleQuotes46>.equals(yourString);<newline46mondego>"
"2181splitHere46","12044785splitHere46","LayoutManager"
"2182splitHere46","12044785splitHere46","setLayout(null);"
"2183splitHere46","12044785splitHere46","LayoutManager"
"2184splitHere46","12044785splitHere46","paintComponent()"
"2185splitHere46","12044785splitHere46","gamePanel"
"2186splitHere46","12044785splitHere46","@Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.setColor(Color.BLUE);<newline46mondego>        g.fillRect(0, 0, this.getWidth(), this.getHeight());<newline46mondego>    }<newline46mondego>"
"2187splitHere46","12044785splitHere46","JLabel"
"2188splitHere46","12044785splitHere46","g.drawImage(Image image,int x,int y,ImageObserver iO)"
"2189splitHere46","12044785splitHere46","setLayout(null);"
"2190splitHere46","12044922splitHere46","public interface ArithmaticResource {<newline46mondego><newline46mondego>@Get(<doubleQuotes46>json?n0&n1<doubleQuotes46>)<newline46mondego>public int add ();<newline46mondego><newline46mondego>@Get(<doubleQuotes46>json?n0&n1&n2<doubleQuotes46>)<newline46mondego>public int add ();<newline46mondego>}<newline46mondego>"
"2191splitHere46","12045093splitHere46","hashCode"
"2192splitHere46","12045093splitHere46","Object"
"2193splitHere46","12045093splitHere46","contains"
"2194splitHere46","12045093splitHere46","true"
"2195splitHere46","12045093splitHere46","override"
"2196splitHere46","12045093splitHere46","hashCode"
"2197splitHere46","12045093splitHere46","equals"
"2198splitHere46","12045168splitHere46","getHttpClient()"
"2199splitHere46","12045168splitHere46","synchronized"
"2200splitHere46","12045168splitHere46","synchronized"
"2201splitHere46","12045168splitHere46","customHttpClient == null"
"2202splitHere46","12045168splitHere46","synchronized"
"2203splitHere46","12045168splitHere46","HttpClient"
"2204splitHere46","12045168splitHere46","HttpConnectionParams.setConnectionTimeout(params, 5000);"
"2205splitHere46","12045168splitHere46","HttpClient"
"2206splitHere46","12045168splitHere46","AndroidHttpClient"
"2207splitHere46","12045168splitHere46","AndroidHttpClient"
"2208splitHere46","12045168splitHere46","AndroidHttpClient"
"2209splitHere46","12045168splitHere46","// Default connection and socket timeout of 60 seconds.  Tweak to taste.<newline46mondego>private static final int SOCKET_OPERATION_TIMEOUT = 60 * 1000;<newline46mondego><newline46mondego>// ---------------------------------------------------------------------- //<newline46mondego>HttpParams params = new BasicHttpParams();<newline46mondego><newline46mondego>// Turn off stale checking.  Our connections break all the time anyway,<newline46mondego>// and it's not worth it to pay the penalty of checking every time.<newline46mondego>HttpConnectionParams.setStaleCheckingEnabled(params, false);<newline46mondego><newline46mondego>HttpConnectionParams.setConnectionTimeout(params, SOCKET_OPERATION_TIMEOUT);<newline46mondego>HttpConnectionParams.setSoTimeout(params, SOCKET_OPERATION_TIMEOUT);<newline46mondego>HttpConnectionParams.setSocketBufferSize(params, 8192);<newline46mondego><newline46mondego>// Don't handle redirects -- return them to the caller.  Our code<newline46mondego>// often wants to re-POST after a redirect, which we must do ourselves.<newline46mondego>HttpClientParams.setRedirecting(params, false);<newline46mondego><newline46mondego>// Use a session cache for SSL sockets<newline46mondego>SSLSessionCache sessionCache = context == null ? null : new SSLSessionCache(context);<newline46mondego><newline46mondego>// Set the specified user agent and register standard protocols.<newline46mondego>HttpProtocolParams.setUserAgent(params, userAgent);<newline46mondego>SchemeRegistry schemeRegistry = new SchemeRegistry();<newline46mondego>schemeRegistry.register(new Scheme(<doubleQuotes46>http<doubleQuotes46>,<newline46mondego>        PlainSocketFactory.getSocketFactory(), 80));<newline46mondego>schemeRegistry.register(new Scheme(<doubleQuotes46>https<doubleQuotes46>,<newline46mondego>        SSLCertificateSocketFactory.getHttpSocketFactory(<newline46mondego>        SOCKET_OPERATION_TIMEOUT, sessionCache), 443));<newline46mondego><newline46mondego>ClientConnectionManager manager =<newline46mondego>        new ThreadSafeClientConnManager(params, schemeRegistry);<newline46mondego><newline46mondego>return new DefaultHttpClient(manager, params);<newline46mondego>"
"2210splitHere46","12045168splitHere46","HttpURLConnection"
"2211splitHere46","12045209splitHere46","try  {<newline46mondego>    readsource();<newline46mondego>} catch (IOException e) {<newline46mondego>   // do something, never catch an exception and not do anything<newline46mondego>}<newline46mondego><newline46mondego>//continue.<newline46mondego>"
"2212splitHere46","12045627splitHere46","App Library"
"2213splitHere46","12045627splitHere46","App Free"
"2214splitHere46","12045627splitHere46","App Library"
"2215splitHere46","12045627splitHere46","App Free"
"2216splitHere46","12045627splitHere46","App Library"
"2217splitHere46","12045628splitHere46","private static void matchParts(String line){<newline46mondego>   Pattern pattern = Pattern.compile(<doubleQuotes46>: \\[(\\w+),\\*(\\+\\d{11})\\*]<doubleQuotes46>);<newline46mondego>   Matcher matcher = pattern.matcher(line);<newline46mondego>   String phone;<newline46mondego>   String status;<newline46mondego>   while (matcher.find()) {<newline46mondego>      System.out.println(<doubleQuotes46>phone:<doubleQuotes46> +matcher.group(2) + <doubleQuotes46>, status: <doubleQuotes46>+matcher.group(1) );<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2218splitHere46","12045628splitHere46","private static void matchParts(String line){<newline46mondego>   Pattern pattern = Pattern.compile(<doubleQuotes46>Called\<doubleQuotes46>:\<doubleQuotes46>(\\+\\d{11}).*\<doubleQuotes46>Duration\<doubleQuotes46>:\<doubleQuotes46>(\\d+)<doubleQuotes46>);<newline46mondego>   Matcher matcher = pattern.matcher(line);<newline46mondego>   String phone;<newline46mondego>   String status;<newline46mondego>   while (matcher.find()) {<newline46mondego>      System.out.println(<doubleQuotes46>phone:<doubleQuotes46> +matcher.group(1) + <doubleQuotes46>, duration: <doubleQuotes46>+matcher.group(2) );<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2219splitHere46","12045628splitHere46","Pattern.compile(<doubleQuotes46>\\[(\\w+),\\*(\\+\\d{11})\\*].*?Called\<doubleQuotes46>:\<doubleQuotes46>(\\+\\d{11}).*?\<doubleQuotes46>Duration\<doubleQuotes46>:\<doubleQuotes46>(\\d+)<doubleQuotes46>, Pattern.MULTILINE);<newline46mondego>"
"2220splitHere46","12045652splitHere46","<p>${field-message}</p><newline46mondego>"
"2221splitHere46","12045652splitHere46","<p>${requestScope['field-message']}</p>"
"2222splitHere46","12045716splitHere46","working"
"2223splitHere46","12045745splitHere46","Set"
"2224splitHere46","12045745splitHere46","final Set<String> set = new HashSet<>(Arrays.asList(titles));<newline46mondego>for (final String title : set) {<newline46mondego>  /* title is unique */<newline46mondego>  System.out.println(title);<newline46mondego>}<newline46mondego>"
"2225splitHere46","12045745splitHere46","println"
"2226splitHere46","12045745splitHere46","printf(<doubleQuotes46>%s\n<doubleQuotes46>, ...)"
"2227splitHere46","12045745splitHere46","for"
"2228splitHere46","12045745splitHere46","Set<String>"
"2229splitHere46","12045745splitHere46","String[]"
"2230splitHere46","12045745splitHere46","titles"
"2231splitHere46","12045859splitHere46","d.display()"
"2232splitHere46","12045859splitHere46","Animal.display()"
"2233splitHere46","12045859splitHere46","Dog.display()"
"2234splitHere46","12045859splitHere46","public void display(){  <newline46mondego>    super.display();<newline46mondego> }<newline46mondego>"
"2235splitHere46","12045859splitHere46","public void display(){  <newline46mondego>    System.out.println(<doubleQuotes46>My name is <doubleQuotes46>+ this.name); //<-- note the this<newline46mondego> } <newline46mondego>"
"2236splitHere46","12045859splitHere46","Animal.display()"
"2237splitHere46","12045859splitHere46","Dog"
"2238splitHere46","12045859splitHere46","name"
"2239splitHere46","12045861splitHere46","<prop key=<doubleQuotes46>hibernate.current_session_context_class<doubleQuotes46>>org.hibernate.context.ThreadLocalSessionContext</prop><newline46mondego>"
"2240splitHere46","12045861splitHere46","<bean id=<doubleQuotes46>sessionFactory<doubleQuotes46> class=<doubleQuotes46>org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>dataSource<doubleQuotes46> ref=<doubleQuotes46>datasource<doubleQuotes46> /><newline46mondego>        <property name=<doubleQuotes46>packagesToScan<doubleQuotes46> value=<doubleQuotes46>sample.model<doubleQuotes46>/><newline46mondego>        <property name=<doubleQuotes46>annotatedPackages<doubleQuotes46>><newline46mondego>            <list><newline46mondego>                <value>sample.model</value><newline46mondego>            </list><newline46mondego>        </property><newline46mondego>        <property name=<doubleQuotes46>hibernateProperties<doubleQuotes46>><newline46mondego>            <props><newline46mondego>                <prop key=<doubleQuotes46>hibernate.dialect<doubleQuotes46>> org.hibernate.dialect.H2Dialect</prop><newline46mondego>                <prop key=<doubleQuotes46>hibernate.show_sql<doubleQuotes46>>true</prop><newline46mondego>                <prop key=<doubleQuotes46>hibernate.hbm2ddl.auto<doubleQuotes46>>create</prop><newline46mondego>                   <prop key=<doubleQuotes46>hibernate.current_session_context_class<doubleQuotes46>>org.hibernate.context.ThreadLocalSessionContext</prop><newline46mondego>               </props><newline46mondego>        </property><newline46mondego>    </bean><newline46mondego>"
"2241splitHere46","12045981splitHere46","SystemColor.control"
"2242splitHere46","12045981splitHere46","SystemColor"
"2243splitHere46","12045999splitHere46","private static final BlockingQueue<Runnable> sPoolWorkQueue =<newline46mondego>        new LinkedBlockingQueue<Runnable>(10);<newline46mondego><newline46mondego>/**<newline46mondego> * An {@link Executor} that can be used to execute tasks in parallel.<newline46mondego> */<newline46mondego>public static final Executor THREAD_POOL_EXECUTOR<newline46mondego>        = new ThreadPoolExecutor(CORE_POOL_SIZE, MAXIMUM_POOL_SIZE, KEEP_ALIVE,<newline46mondego>                TimeUnit.SECONDS, sPoolWorkQueue, sThreadFactory);<newline46mondego><newline46mondego>/**<newline46mondego> * An {@link Executor} that executes tasks one at a time in serial<newline46mondego> * order. This serialization is global to a particular process.<newline46mondego> */<newline46mondego>public static final Executor SERIAL_EXECUTOR = new SerialExecutor();<newline46mondego>"
"2244splitHere46","12045999splitHere46","com.company.AsyncTask asyncTask = new com.company.AsyncTask();<newline46mondego>asyncTask.setPriority(1);<newline46mondego>asyncTask.executeOnExecutor(com.company.AsyncTask.PRIORITY_THREAD_POOL_EXECUTOR, (Void[]) null);<newline46mondego>"
"2245splitHere46","12046056splitHere46","for i = 0 to 2^n - 1<newline46mondego>    set subtotal = 0<newline46mondego>    for each bit in i<newline46mondego>        if bit i is set, add ith element to subtotal<newline46mondego>    check subtotal against desired total (i.e., 10)<newline46mondego>"
"2246splitHere46","12046056splitHere46","validate(set, index, subtotal, total)<newline46mondego>    if index >= set.length return false;<newline46mondego>    if subtotal == total return true;<newline46mondego>    return validate(set, index + 1, subtotal + set[index], total) || <newline46mondego>           validate(set, index + 1, subtotal, total);<newline46mondego>"
"2247splitHere46","12046056splitHere46","validate(set, 0, 0, 10);<newline46mondego>"
"2248splitHere46","12046322splitHere46","myThread.defineMain(...)"
"2249splitHere46","12046322splitHere46","Main"
"2250splitHere46","12046322splitHere46","defineMain(...)"
"2251splitHere46","12046322splitHere46","teste(...)"
"2252splitHere46","12046322splitHere46","myMain"
"2253splitHere46","12046322splitHere46","null"
"2254splitHere46","12046322splitHere46","myMain.teste(<doubleQuotes46>The sum is: <doubleQuotes46> + soma);<newline46mondego>"
"2255splitHere46","12046322splitHere46","CoolThread myThread = new CoolThread(1, 2);<newline46mondego>// this must be done _before_ the thread starts below<newline46mondego>myThread.defineMain(this);<newline46mondego>Thread t_myThread = new Thread(myThread);<newline46mondego>t_myThread.start();<newline46mondego>"
"2256splitHere46","12046322splitHere46","null"
"2257splitHere46","12046322splitHere46","CoolThread"
"2258splitHere46","12046322splitHere46","Thread"
"2259splitHere46","12046322splitHere46","new CoolThread()"
"2260splitHere46","12046322splitHere46","coolThread.start()"
"2261splitHere46","12046322splitHere46","CoolThread"
"2262splitHere46","12046322splitHere46","Runnable"
"2263splitHere46","12046322splitHere46","Thread"
"2264splitHere46","12046322splitHere46","CoolThread myThread = new CoolThread(1, 2);<newline46mondego>// this must be done _before_ the thread starts below<newline46mondego>myThread.defineMain(this);<newline46mondego>Thread t_myThread = new Thread(myThread);<newline46mondego>t_myThread.start();<newline46mondego>...<newline46mondego><newline46mondego>public class CoolThread implements Runnable {<newline46mondego>    public void run() {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2265splitHere46","12046351splitHere46","String.substring()"
"2266splitHere46","12046351splitHere46","trim()"
"2267splitHere46","12046351splitHere46","String"
"2268splitHere46","12046404splitHere46","GeneratedMethodAccessor1"
"2269splitHere46","12046404splitHere46","Used only for the first few invocations of a Method; afterward, switches to bytecode-based implementation"
"2270splitHere46","12046536splitHere46","public class Foo001 {<newline46mondego>   // private static final String REGEX1 = <doubleQuotes46>\\b<doubleQuotes46>;<newline46mondego>   private static final String REGEX2 = <doubleQuotes46>(?= )|(?<= )<doubleQuotes46>;<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      String str = <doubleQuotes46> 0 +Ve<doubleQuotes46>;<newline46mondego><newline46mondego>      String[] tokens = str.split(REGEX2);<newline46mondego>      for (int i = 0; i < tokens.length; i++) {<newline46mondego>         System.out.printf(<doubleQuotes46>token %d: \<doubleQuotes46>%s\<doubleQuotes46>%n<doubleQuotes46>, i, tokens[i]);<newline46mondego>      }<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2271splitHere46","12046536splitHere46","token 0: <doubleQuotes46><doubleQuotes46><newline46mondego>token 1: <doubleQuotes46> <doubleQuotes46><newline46mondego>token 2: <doubleQuotes46>0<doubleQuotes46><newline46mondego>token 3: <doubleQuotes46> <doubleQuotes46><newline46mondego>token 4: <doubleQuotes46>+Ve<doubleQuotes46><newline46mondego>"
"2272splitHere46","12046659splitHere46","Music.stopMusic()"
"2273splitHere46","12046659splitHere46","Music.stopMusic()"
"2274splitHere46","12046659splitHere46","Thread t = new Thread(new Runnable() { <newline46mondego>     public void run() {<newline46mondego>         Music.stop();<newline46mondego>     }<newline46mondego>});<newline46mondego>t.start();<newline46mondego>"
"2275splitHere46","12046659splitHere46","Clip"
"2276splitHere46","12046659splitHere46","MixerClip"
"2277splitHere46","12046659splitHere46","// stop the sample.  this invalidates the sample voice id.<newline46mondego>nStop(id);<newline46mondego><newline46mondego>// wait for the callback<newline46mondego>synchronized(lock) {<newline46mondego>    if (id!=0) {<newline46mondego>    try {<newline46mondego>        //long time=System.currentTimeMillis();<newline46mondego>        lock.wait(3000);<newline46mondego>        //if (System.currentTimeMillis()-time > 2500) {<newline46mondego>        //System.out.println(<doubleQuotes46> WAITING TIMED OUT!<doubleQuotes46>); System.out.flush();<newline46mondego>        //id=0;<newline46mondego>        //}<newline46mondego>    } catch (InterruptedException e) { }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2278splitHere46","12046913splitHere46","getClass()"
"2279splitHere46","12046913splitHere46","Class<? extends |X|>"
"2280splitHere46","12046913splitHere46","|X|"
"2281splitHere46","12046913splitHere46","getClass"
"2282splitHere46","12046913splitHere46","class BaseTest {<newline46mondego>    private final int i = 1;<newline46mondego><newline46mondego>    void test(Object o) {<newline46mondego>        if (getClass().isInstance(o)) {                <newline46mondego>            TestAccess to = TestAccess.class.cast(o);<newline46mondego>            //System.out.println(to.i);  // ERROR: i has private access in BaseTest<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class TestAccess extends BaseTest{}<newline46mondego>"
"2283splitHere46","12046979splitHere46","public class Person {<newline46mondego>        public String name;<newline46mondego>        public int age;<newline46mondego>        @JsonSerialize(using = IntToStringSerializer.class, as=String.class)<newline46mondego>        public int favoriteNumber:<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego> public class IntToStringSerializer extends JsonSerializer<Integer><newline46mondego> {<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void serialize(Integer tmpInt, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException, JsonProcessingException<newline46mondego>     {<newline46mondego>         jsonGenerator.writeObject(tmpInt.toString());<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"2284splitHere46","12047036splitHere46","<label>"
"2285splitHere46","12047036splitHere46","<input>"
"2286splitHere46","12047036splitHere46","<label>"
"2287splitHere46","12047036splitHere46","<label class=<doubleQuotes46>${not empty message ? 'error' : ''}<doubleQuotes46>>Field name</label><newline46mondego><input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>field-name<doubleQuotes46>><newline46mondego><c:if test=<doubleQuotes46>${not empty message}<doubleQuotes46>><small class=<doubleQuotes46>error<doubleQuotes46>>${message}</small></c:if><newline46mondego>"
"2288splitHere46","12047036splitHere46","<c:if>"
"2289splitHere46","12047036splitHere46","<small>"
"2290splitHere46","12047036splitHere46","<label class=<doubleQuotes46>${not empty message ? 'error' : ''}<doubleQuotes46>>Field name</label><newline46mondego><input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>field-name<doubleQuotes46>><newline46mondego><small class=<doubleQuotes46>error<doubleQuotes46>>${message}</small><newline46mondego>"
"2291splitHere46","12047036splitHere46","<span>"
"2292splitHere46","12047036splitHere46","<small>"
"2293splitHere46","12047036splitHere46","<label class=<doubleQuotes46>${not empty message ? 'error' : ''}<doubleQuotes46>>Field name</label><newline46mondego><input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>field-name<doubleQuotes46>><newline46mondego><span class=<doubleQuotes46>error<doubleQuotes46>>${message}</span><newline46mondego>"
"2294splitHere46","12047111splitHere46","String s = in.next();<newline46mondego>"
"2295splitHere46","12047111splitHere46","String s = in.nextLine();<newline46mondego>"
"2296splitHere46","12047194splitHere46","Pattern"
"2297splitHere46","12047194splitHere46","Pattern.DOTALL"
"2298splitHere46","12047194splitHere46","(?s)"
"2299splitHere46","12047194splitHere46","."
"2300splitHere46","12047194splitHere46","\n"
"2301splitHere46","12047194splitHere46","System.out.println(input.replaceAll(<doubleQuotes46>(?s)\\\\begin\\{comment\\}.*?\\\\end\\{comment\\}<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"2302splitHere46","12047265splitHere46","DIS QL(TEST.*) CURDEPTH<newline46mondego>"
"2303splitHere46","12047268splitHere46","displayText.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>ã€€ã€€ã€€ã€€ã€€ã€€displayContents = display.getText().toString();<newline46mondego>            displayTwo.setText(displayContents);<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"2304splitHere46","12047322splitHere46","int quit_position = input.indexOf(<doubleQuotes46>quit<doubleQuotes46>);<newline46mondego>if (quit_position >= 0) {<newline46mondego>    System.out.println(input.substring(0, quit_position));<newline46mondego>} else {<newline46mondego>    System.out.println(input);<newline46mondego>}<newline46mondego>"
"2305splitHere46","12047336splitHere46","com.test.TestClass x = new com.test.TestClass(); // change <doubleQuotes46>com.test<doubleQuotes46> for the real package<newline46mondego>"
"2306splitHere46","12047350splitHere46","run()"
"2307splitHere46","12047350splitHere46","synchronized"
"2308splitHere46","12047350splitHere46","synchronized"
"2309splitHere46","12047350splitHere46","this"
"2310splitHere46","12047350splitHere46","Task"
"2311splitHere46","12047350splitHere46","synchronized"
"2312splitHere46","12047350splitHere46","syncObject"
"2313splitHere46","12047350splitHere46","synchronized"
"2314splitHere46","12047350splitHere46","run()"
"2315splitHere46","12047350splitHere46","run()"
"2316splitHere46","12047350splitHere46","syncObject"
"2317splitHere46","12047350splitHere46","syncObject"
"2318splitHere46","12047350splitHere46","final"
"2319splitHere46","12047401splitHere46","draw(Graphics2D)"
"2320splitHere46","12047401splitHere46","repaint()"
"2321splitHere46","12047401splitHere46","paint(Graphics)"
"2322splitHere46","12047401splitHere46","paintComponent(Graphics)"
"2323splitHere46","12047401splitHere46","JOptionPane"
"2324splitHere46","12047651splitHere46","NavigationHandler"
"2325splitHere46","12047651splitHere46","ConfigurableNavigationHandler"
"2326splitHere46","12047651splitHere46","<h:link>"
"2327splitHere46","12047651splitHere46","NavigationHandler"
"2328splitHere46","12047651splitHere46","ConfigurableNavigationHandler"
"2329splitHere46","12047651splitHere46","public class HistoryNavigationHandler extends ConfigurableNavigationHandler {<newline46mondego><newline46mondego>    private NavigationHandler wrapped;<newline46mondego><newline46mondego>    public HistoryNavigationHandler(NavigationHandler wrapped) {<newline46mondego>        this.wrapped = wrapped;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void handleNavigation(FacesContext context, String from, String outcome) {<newline46mondego><newline46mondego>        // TODO: Do your job here. <newline46mondego><newline46mondego>        wrapped.handleNavigation(context, from, outcome);        <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public NavigationCase getNavigationCase(FacesContext context, String fromAction, String outcome) {<newline46mondego>        return (wrapped instanceof ConfigurableNavigationHandler)<newline46mondego>            ? ((ConfigurableNavigationHandler) wrapped).getNavigationCase(context, fromAction, outcome)<newline46mondego>            : null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Map<String, Set<NavigationCase>> getNavigationCases() {<newline46mondego>        return (wrapped instanceof ConfigurableNavigationHandler)<newline46mondego>            ? ((ConfigurableNavigationHandler) wrapped).getNavigationCases()<newline46mondego>            : null;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2330splitHere46","12047779splitHere46","<c:out value=<doubleQuotes46>${Comments.commentCount}<doubleQuotes46> /> <newline46mondego>"
"2331splitHere46","12047779splitHere46","commentCount"
"2332splitHere46","12047779splitHere46","CommentCount"
"2333splitHere46","12047779splitHere46","<c:out>"
"2334splitHere46","12047779splitHere46","Comments: ${Comments.commentCount} <br /><newline46mondego>"
"2335splitHere46","12047779splitHere46","<c:out>"
"2336splitHere46","12047779splitHere46","<%@ taglib prefix=<doubleQuotes46>fn<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/functions<doubleQuotes46> %><newline46mondego>"
"2337splitHere46","12047779splitHere46","<c:out value=<doubleQuotes46>${fn:length(allComments)}<doubleQuotes46> /> <newline46mondego>"
"2338splitHere46","12047779splitHere46","Comments: ${fn:length(allComments)} <br /><newline46mondego>"
"2339splitHere46","12047808splitHere46","Manifest-Version: 1.0<newline46mondego>Main-Class: com.mycompany.mypackage.App<newline46mondego>Class-Path: MyApp.jar MyCore.jar log4j.jar <newline46mondego>"
"2340splitHere46","12047820splitHere46","private ArrayList myArrayList;<newline46mondego><newline46mondego>// setting the ArrayList Value <newline46mondego>public void setArrayList ( ArrayList myArrayList )<newline46mondego>{<newline46mondego>     this.myArrayList = myArrayList;<newline46mondego>}<newline46mondego><newline46mondego>// getting the ArrayList value <newline46mondego>public ArrayList getArrayList() <newline46mondego>{<newline46mondego>     return myArrayList;<newline46mondego>}<newline46mondego>"
"2341splitHere46","12047820splitHere46","private static ArrayList myArrayList = null; <newline46mondego><newline46mondego>... <newline46mondego>// assign arraylist <newline46mondego><newline46mondego>public static ArrayList getArrayList()<newline46mondego>{<newline46mondego>      return myArrayList;<newline46mondego>}<newline46mondego>"
"2342splitHere46","12047820splitHere46","private ArrayList newArrayList = null;<newline46mondego><newline46mondego>newArrayList = A.getArrayList();<newline46mondego>"
"2343splitHere46","12047979splitHere46","InfoLinePane"
"2344splitHere46","12047979splitHere46","mapaPanel"
"2345splitHere46","12047979splitHere46","thread"
"2346splitHere46","12048069splitHere46","UTF-8"
"2347splitHere46","12048069splitHere46","ISO-8859-1"
"2348splitHere46","12048069splitHere46","iconv"
"2349splitHere46","12048069splitHere46","var Iconv  = require('iconv').Iconv;<newline46mondego>var ic8859 = new Iconv('UTF-8', 'ISO-8859-1');<newline46mondego><newline46mondego>console.log( ic8859.convert(new Buffer('645553dd')) );<newline46mondego>"
"2350splitHere46","12048069splitHere46","0x64 == 100"
"2351splitHere46","12048069splitHere46","<SlowBuffer 36 34 35 35 35 33 64 64><newline46mondego>"
"2352splitHere46","12048069splitHere46","EILSEQ"
"2353splitHere46","12048069splitHere46","ISO-8859-1"
"2354splitHere46","12048069splitHere46","var ic8859 = new Iconv('UTF-8', 'ISO-8859-1//IGNORE');<newline46mondego>"
"2355splitHere46","12048069splitHere46","console.log(new Buffer('645553dd'));<newline46mondego>// <Buffer 36 34 35 35 35 33 64 64><newline46mondego>"
"2356splitHere46","12048122splitHere46","pack()"
"2357splitHere46","12048122splitHere46","frame.pack();<newline46mondego>frame.setVisible(true);<newline46mondego>frame.setMinimumSize(frame.getSize());<newline46mondego>"
"2358splitHere46","12048122splitHere46","btn1"
"2359splitHere46","12048122splitHere46","PAGE_START"
"2360splitHere46","12048122splitHere46","BorderLayout"
"2361splitHere46","12048122splitHere46","LINE_START"
"2362splitHere46","12048122splitHere46","btn2"
"2363splitHere46","12048122splitHere46","CENTER"
"2364splitHere46","12048239splitHere46","C:\Program Files\Java\jdk1.6.0_34\bin"
"2365splitHere46","12048239splitHere46","C:\Program Files\Java\jdk1.6.0_34\"
"2366splitHere46","12048261splitHere46","import java.sql.*;<newline46mondego>"
"2367splitHere46","12048382splitHere46","final LayoutInflater layoutInflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>    final ArrayList<HashMap<String, String>> headerData = new ArrayList<HashMap<String, String>>();<newline46mondego><newline46mondego>    final HashMap<String, String> group1 = new HashMap<String, String>();<newline46mondego>    group1.put(NAME, <doubleQuotes46>OrderInfo<doubleQuotes46>);<newline46mondego>    headerData.add( group1 );<newline46mondego><newline46mondego>    final HashMap<String, String> group2 = new HashMap<String, String>();<newline46mondego>    group2.put(NAME, <doubleQuotes46>CustomerInfo<doubleQuotes46>);<newline46mondego>    headerData.add( group2);<newline46mondego><newline46mondego>    final ArrayList<ArrayList<HashMap<String, Object>>> childData = new ArrayList<ArrayList<HashMap<String, Object>>>();<newline46mondego><newline46mondego>    final ArrayList<HashMap<String, Object>> group1data = new ArrayList<HashMap<String, Object>>();<newline46mondego>    childData.add(group1data);<newline46mondego><newline46mondego>    final ArrayList<HashMap<String, Object>> group2data = new ArrayList<HashMap<String, Object>>();<newline46mondego>    childData.add(group2data);<newline46mondego>"
"2368splitHere46","12048471splitHere46","GetBestMove(...)"
"2369splitHere46","12048471splitHere46","MakeMove(...)"
"2370splitHere46","12048471splitHere46","GetBestMove(...)"
"2371splitHere46","12048471splitHere46","GetBestMove(...)"
"2372splitHere46","12048493splitHere46","enum"
"2373splitHere46","12048493splitHere46","KittenConstants"
"2374splitHere46","12048493splitHere46","enum"
"2375splitHere46","12048493splitHere46","enum"
"2376splitHere46","12048493splitHere46","Constants"
"2377splitHere46","12048493splitHere46","enum"
"2378splitHere46","12048493splitHere46","public enum Constants {<newline46mondego>        PLANCK_CONSTANT(6.62606896e-34),<newline46mondego>        PI(3.14.59);<newline46mondego><newline46mondego>        public final double value;<newline46mondego><newline46mondego>        Constants(double value) {this.value = value);<newline46mondego>    }<newline46mondego>"
"2379splitHere46","12048493splitHere46","import static Constants.*;<newline46mondego>    ....<newline46mondego>    public double getReducedPlanckConstant() {<newline46mondego>        return PLANCK_CONSTANT.value / (2 * PI.value);<newline46mondego>    }<newline46mondego>"
"2380splitHere46","12048584splitHere46","[A-Za-z][0-9]{1,}"
"2381splitHere46","12048584splitHere46","i5"
"2382splitHere46","12048584splitHere46","// doesn't match<newline46mondego>[0-9]{1,}[A-Za-z]{1,}|<newline46mondego>// matches <doubleQuotes46>i5<doubleQuotes46><newline46mondego>[A-Za-z][0-9]{1,}|<newline46mondego>// the following are never even checked, because of the previous match<newline46mondego>[a-zA-Z][a-zA-Z0-9\\.\\-_/#]{2,}|<newline46mondego>[0-9]{3,}[A-Za-z][a-zA-Z0-9\\.\\-_/#]*|<newline46mondego>[0-9][0-9\\-]{4,}|<newline46mondego>[0-9][0-9\\-]{3,}[a-zA-Z0-9\\.\\-_/#]<newline46mondego>"
"2383splitHere46","12048584splitHere46","0---#"
"2384splitHere46","12048584splitHere46","\b"
"2385splitHere46","12048584splitHere46","-"
"2386splitHere46","12048584splitHere46","$"
"2387splitHere46","12048584splitHere46","^"
"2388splitHere46","12048584splitHere46","^existing_regex$"
"2389splitHere46","12048584splitHere46","i5"
"2390splitHere46","12048787splitHere46","for (Component comp : panel.getComponents())<newline46mondego>    if (comp instanceof JButton && searchText.equals(((JButton) comp).getText()))<newline46mondego>        return (JButton) comp;<newline46mondego>"
"2391splitHere46","12048787splitHere46","Map<String, JButton> buttonMap"
"2392splitHere46","12048787splitHere46","buttonMap.get(searchText)"
"2393splitHere46","12048787splitHere46","JPanel panel = new JPanel(new GridLayout(3, 3));<newline46mondego>for (int i = 1; i <= 9; i++) {<newline46mondego>    JButton button = new JButton(<doubleQuotes46>Button <doubleQuotes46> + i);<newline46mondego>    panel.add(button);<newline46mondego><newline46mondego>    // save it to a map for easy retrieval<newline46mondego>    buttonMap.put(button.getText(), button);<newline46mondego>}<newline46mondego>"
"2394splitHere46","12048854splitHere46","yourLabel.setText(<doubleQuotes46>your new text<doubleQuotes46>)"
"2395splitHere46","12048854splitHere46","setText"
"2396splitHere46","12048854splitHere46","SwingUtilities.invokeLater"
"2397splitHere46","12048854splitHere46","revalidate()"
"2398splitHere46","12048854splitHere46","repaint()"
"2399splitHere46","12048904splitHere46","JComboBox"
"2400splitHere46","12048904splitHere46","cmb_emp_id.setSelectedIndex(0);<newline46mondego>"
"2401splitHere46","12049139splitHere46","URLBitmapField wmf= new  util.URLBitmapField(<doubleQuotes46>http://www.asianmirror.lk/english/images/stories/demo/hot_news/top_news/sanga1_latest.jpg<doubleQuotes46>)<newline46mondego>add(wmf);<newline46mondego>"
"2402splitHere46","12049139splitHere46","public class URLBitmapField extends BitmapField implements URLDataCallback {<newline46mondego>EncodedImage result=null ;<newline46mondego>public static Bitmap myImage;<newline46mondego><newline46mondego>public static EncodedImage _encoded_img=null ;<newline46mondego><newline46mondego>int _imgWidth = 140;<newline46mondego>int _imgHeight = 140;<newline46mondego>int _imgMargin = 10;<newline46mondego><newline46mondego>public URLBitmapField(String url) {<newline46mondego>    try {<newline46mondego>        http_image_data_extrator.getWebData(url, this);<newline46mondego>    }<newline46mondego>    catch (Exception e) {}<newline46mondego>}<newline46mondego><newline46mondego>public Bitmap getBitmap() {<newline46mondego>    if (_encoded_img == null) return null;<newline46mondego>    return _encoded_img.getBitmap();<newline46mondego>}<newline46mondego><newline46mondego>public void callback(final String data) {<newline46mondego>    if (data.startsWith(<doubleQuotes46>Exception<doubleQuotes46>)) return;<newline46mondego><newline46mondego>    try {<newline46mondego>        byte[] dataArray = data.getBytes();<newline46mondego><newline46mondego>        //bitmap = EncodedImage.createEncodedImage(dataArray, 0, dataArray.length);//no scale<newline46mondego><newline46mondego>        _encoded_img = EncodedImage.createEncodedImage(dataArray, 0, dataArray.length); // with scale<newline46mondego>        _encoded_img = sizeImage(_encoded_img, _imgWidth, _imgHeight);<newline46mondego><newline46mondego>    constants.image=_encoded_img;<newline46mondego><newline46mondego>        //myImage=cropImage(_encoded_img.getBitmap());<newline46mondego><newline46mondego>        setImage(_encoded_img);<newline46mondego>        UiApplication.getUiApplication().getActiveScreen().invalidate();<newline46mondego>    }<newline46mondego>    catch (final Exception e){}<newline46mondego>}<newline46mondego><newline46mondego>public EncodedImage sizeImage(EncodedImage image, int width, int height) {<newline46mondego><newline46mondego><newline46mondego>      int currentWidthFixed32 = Fixed32.toFP(image.getWidth());<newline46mondego>      int currentHeightFixed32 = Fixed32.toFP(image.getHeight());<newline46mondego><newline46mondego>      int requiredWidthFixed32 = Fixed32.toFP(width);<newline46mondego>      int requiredHeightFixed32 = Fixed32.toFP(height);<newline46mondego><newline46mondego>      int scaleXFixed32 = Fixed32.div(currentWidthFixed32,<newline46mondego>        requiredWidthFixed32);<newline46mondego>      int scaleYFixed32 = Fixed32.div(currentHeightFixed32,<newline46mondego>        requiredHeightFixed32);<newline46mondego><newline46mondego>      result = image.scaleImage32(scaleXFixed32, scaleYFixed32);<newline46mondego>      return result;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class http_image_data_extrator {<newline46mondego>    static String url_=<doubleQuotes46><doubleQuotes46>;<newline46mondego>    static StringBuffer rawResponse=null;<newline46mondego>    //static String result = null;<newline46mondego>         public static void getWebData(String url, final URLDataCallback callback) throws IOException {<newline46mondego>             //url_=url;<newline46mondego><newline46mondego>                 HttpConnection connection = null;  <newline46mondego>                 InputStream inputStream = null;  <newline46mondego><newline46mondego>                try {  <newline46mondego><newline46mondego><newline46mondego>                    if ((WLANInfo.getWLANState() == WLANInfo.WLAN_STATE_CONNECTED)<newline46mondego>                            && RadioInfo<newline46mondego>                                    .areWAFsSupported(RadioInfo.WAF_WLAN)) {<newline46mondego>                        url += <doubleQuotes46>;interface=wifi<doubleQuotes46>;<newline46mondego>                    }<newline46mondego><newline46mondego>                    connection = (HttpConnection) Connector.open(url, Connector.READ, true);  <newline46mondego><newline46mondego>                    String location=connection.getHeaderField(<doubleQuotes46>location<doubleQuotes46>);<newline46mondego><newline46mondego>                    if(location!=null){<newline46mondego><newline46mondego><newline46mondego>                        if ((WLANInfo.getWLANState() == WLANInfo.WLAN_STATE_CONNECTED)<newline46mondego>                                && RadioInfo<newline46mondego>                                        .areWAFsSupported(RadioInfo.WAF_WLAN)) {<newline46mondego>                            location += <doubleQuotes46>;interface=wifi<doubleQuotes46>;<newline46mondego>                        }<newline46mondego><newline46mondego><newline46mondego>                        connection = (HttpConnection) Connector.open(location, Connector.READ, true);  <newline46mondego><newline46mondego>                    }else{<newline46mondego>                        connection = (HttpConnection) Connector.open(url, Connector.READ, true);  <newline46mondego>                    }<newline46mondego><newline46mondego><newline46mondego>                    inputStream = connection.openInputStream();  <newline46mondego>                    byte[] responseData = new byte[10000];  <newline46mondego>                    int length = 0;  <newline46mondego>                    rawResponse = new StringBuffer();  <newline46mondego>                    while (-1 != (length = inputStream.read(responseData))) { <newline46mondego>                        rawResponse.append(new String(responseData, 0, length));  <newline46mondego>                    }  <newline46mondego>                    int responseCode = connection.getResponseCode();  <newline46mondego>                    if (responseCode != HttpConnection.HTTP_OK){<newline46mondego>                        throw new IOException(<doubleQuotes46>HTTP response code: <doubleQuotes46>+ responseCode);  <newline46mondego>                    }  <newline46mondego><newline46mondego>                    final String  result = rawResponse.toString();<newline46mondego>                    UiApplication.getUiApplication().invokeAndWait(new Runnable() {  <newline46mondego>                        public void run(){  <newline46mondego><newline46mondego>                            callback.callback(result);<newline46mondego><newline46mondego><newline46mondego>                        }  <newline46mondego>                    });  <newline46mondego>                }  <newline46mondego>                catch (final Exception ex) {  <newline46mondego>                    UiApplication.getUiApplication().invokeLater(new Runnable() {  <newline46mondego>                        public void run() {  <newline46mondego>                            callback.callback(<doubleQuotes46>Exception (<doubleQuotes46> + ex.getClass() + <doubleQuotes46>): <doubleQuotes46> + ex.getMessage());  <newline46mondego>                        }  <newline46mondego>                    });  <newline46mondego>                }<newline46mondego>    }  <newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public interface URLDataCallback {<newline46mondego><newline46mondego>    public void callback(String data);<newline46mondego><newline46mondego>}<newline46mondego>"
"2403splitHere46","12049254splitHere46","(?<=^|\s|\d{8})(?!\d{8})\S+(?=$|\s|\d{8})<newline46mondego>"
"2404splitHere46","12049254splitHere46","PS Home:\> [regex]::Matches('hello, dflk 1234 12345678, wod-=0, 87654321', '(?<=^|\s|\d{8})(?!\d{8})\S+(?=$|\s|\d{8})')|<newline46mondego>select -exp Value<newline46mondego>hello,<newline46mondego>dflk<newline46mondego>1234<newline46mondego>,<newline46mondego>wod-=0,<newline46mondego>"
"2405splitHere46","12049342splitHere46","new MyClass()"
"2406splitHere46","12049342splitHere46","MyClass"
"2407splitHere46","12049371splitHere46","PackageManager packageManager = getPackageManager();<newline46mondego>        List<PackageInfo> packageList = packageManager.getInstalledPackages(0);<newline46mondego>        for (PackageInfo pi : packageList) {<newline46mondego>            ApplicationInfo ai = pi.applicationInfo;<newline46mondego>            if ((ai.flags & ApplicationInfo.FLAG_SYSTEM) == 1){<newline46mondego>                Log.d(<doubleQuotes46>APP_NAME<doubleQuotes46>, ai.loadLabel(packageManager).toString());<newline46mondego>                Log.d(<doubleQuotes46>PACKAGE_NAME<doubleQuotes46>, pi.packageName);<newline46mondego>                Log.d(<doubleQuotes46>APP_VERSION<doubleQuotes46>, pi.versionName);<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"2408splitHere46","12049484splitHere46","UserDetailsService"
"2409splitHere46","12049511splitHere46","var myFormValues='id='+uuid;<newline46mondego>    $.getJSON('myAction',myFormValues,function(data) {<newline46mondego>     $.each(data.myObject,function(key, value){<newline46mondego>         alert(key);<newline46mondego>                 alert(value);<newline46mondego>    });<newline46mondego>     });<newline46mondego>"
"2410splitHere46","12049511splitHere46","myAction"
"2411splitHere46","12049511splitHere46","myFormValues"
"2412splitHere46","12049511splitHere46","public class MyAction extends ActionSupport{<newline46mondego>   private String id;<newline46mondego>   //getter and setter<newline46mondego>   private String vallue1;<newline46mondego>   private String vallue2;<newline46mondego>   private String vallue3;<newline46mondego>   //there getter ans setters<newline46mondego><newline46mondego>   public String execute() throw Exception{<newline46mondego>       //Fill you values based on the condition<newline46mondego>       return SUCCESS;<newline46mondego>   }<newline46mondego>}<newline46mondego><package name=<doubleQuotes46>JSON<doubleQuotes46> extends=<doubleQuotes46>json-default<doubleQuotes46>><newline46mondego>   <action name=<doubleQuotes46>myAction<doubleQuotes46>  class=<doubleQuotes46>MyAction<doubleQuotes46>><newline46mondego>     <result type=<doubleQuotes46>json<doubleQuotes46>></result><newline46mondego> </action><newline46mondego>"
"2413splitHere46","12049689splitHere46","Date elapsed = new Date(checkVar);<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>);<newline46mondego>String formatedTime = sdf.format(elapsed);<newline46mondego>"
"2414splitHere46","12049833splitHere46","Calendar"
"2415splitHere46","12049833splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>(\\d+)\\s+(.*?)s? ago<doubleQuotes46>);<newline46mondego><newline46mondego>Map<String, Integer> fields = new HashMap<String, Integer>() {{<newline46mondego>    put(<doubleQuotes46>second<doubleQuotes46>, Calendar.SECOND);<newline46mondego>    put(<doubleQuotes46>minute<doubleQuotes46>, Calendar.MINUTE);<newline46mondego>    put(<doubleQuotes46>hour<doubleQuotes46>,   Calendar.HOUR);<newline46mondego>    put(<doubleQuotes46>day<doubleQuotes46>,    Calendar.DATE);<newline46mondego>    put(<doubleQuotes46>week<doubleQuotes46>,   Calendar.WEEK_OF_YEAR);<newline46mondego>    put(<doubleQuotes46>month<doubleQuotes46>,  Calendar.MONTH);<newline46mondego>    put(<doubleQuotes46>year<doubleQuotes46>,   Calendar.YEAR);<newline46mondego>}};<newline46mondego><newline46mondego>String[] tests = {<newline46mondego>        <doubleQuotes46>3 days ago<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>1 minute ago<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>2 years ago<doubleQuotes46><newline46mondego>};<newline46mondego><newline46mondego>for (String test : tests) {<newline46mondego><newline46mondego>    Matcher m = p.matcher(test);<newline46mondego><newline46mondego>    if (m.matches()) {<newline46mondego>        int amount = Integer.parseInt(m.group(1));<newline46mondego>        String unit = m.group(2);<newline46mondego><newline46mondego>        Calendar cal = Calendar.getInstance();<newline46mondego>        cal.add(fields.get(unit), -amount);<newline46mondego>        System.out.printf(<doubleQuotes46>%s: %tF, %<tT%n<doubleQuotes46>, test, cal);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2416splitHere46","12049833splitHere46","3 days ago: 2012-08-18, 09:21:38<newline46mondego>1 minute ago: 2012-08-21, 09:20:38<newline46mondego>2 years ago: 2010-08-21, 09:21:38<newline46mondego>"
"2417splitHere46","12049834splitHere46","AutoMateParser"
"2418splitHere46","12049834splitHere46","Parser"
"2419splitHere46","12049834splitHere46","AutoMateParserImpl"
"2420splitHere46","12049834splitHere46","Parser"
"2421splitHere46","12049834splitHere46","parseCar"
"2422splitHere46","12049834splitHere46","AutoMateParser"
"2423splitHere46","12049834splitHere46","ParserImpl"
"2424splitHere46","12049834splitHere46","Parser"
"2425splitHere46","12049834splitHere46","Parser"
"2426splitHere46","12049834splitHere46","public interface Parser {<newline46mondego>   //public methods that you need to call<newline46mondego>}<newline46mondego><newline46mondego>public interface AutoMateParser extends Parser {<newline46mondego>    //any extra or overriden method declarations<newline46mondego>}<newline46mondego><newline46mondego>public abstract class AbstractParser implements Parser {<newline46mondego>    //common code and implemented methods<newline46mondego>    protected abstract Vehicle parseCar(String carData);<newline46mondego>}<newline46mondego><newline46mondego>public class AutoMateParserImpl extends AbstractParser implements AutoMateParser {<newline46mondego>    //any extra or overriden method implementations defined in AutoMateParser<newline46mondego>    protected Vehicle parseCar(String vehicleData) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class DMSServiceLocator {<newline46mondego><newline46mondego>    @Inject<newline46mondego>    private AutoMateParser autoMateParser;<newline46mondego>    //more services<newline46mondego><newline46mondego>    public Parser getParser() {<newline46mondego>        if(automate) {<newline46mondego>           return autoMateParser();<newline46mondego>        } else {<newline46mondego>           //Different data scrubber, but also extends Parser<newline46mondego>           return homenetParser();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2427splitHere46","12049953splitHere46","floor"
"2428splitHere46","12049953splitHere46","floor"
"2429splitHere46","12049953splitHere46","t(input) = nosFloorCalls(input) * floorTime + otherTime(input)<newline46mondego>"
"2430splitHere46","12049953splitHere46","floorTime"
"2431splitHere46","12049953splitHere46","floor"
"2432splitHere46","12049953splitHere46","floorTime"
"2433splitHere46","12049953splitHere46","floor"
"2434splitHere46","12050025splitHere46","formData4ClientArea.right = new FormAttachment(label,-5);"
"2435splitHere46","12050025splitHere46","label"
"2436splitHere46","12050025splitHere46","null"
"2437splitHere46","12050025splitHere46","clientArea"
"2438splitHere46","12050025splitHere46","label"
"2439splitHere46","12050025splitHere46","label"
"2440splitHere46","12050025splitHere46","clientArea"
"2441splitHere46","12050193splitHere46","String s = <doubleQuotes46>abcdefghabcd<doubleQuotes46>;<newline46mondego>s = s.replaceFirst(<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>0<doubleQuotes46>);<newline46mondego>System.out.println(s);<newline46mondego>"
"2442splitHere46","12050193splitHere46","0bcdefghabcd<newline46mondego>"
"2443splitHere46","12050193splitHere46","replaceFirst()"
"2444splitHere46","12050193splitHere46","["
"2445splitHere46","12050193splitHere46","\"
"2446splitHere46","12050193splitHere46","\"
"2447splitHere46","12050193splitHere46","s = s.replaceFirst(<doubleQuotes46>\\[<doubleQuotes46>, <doubleQuotes46>0<doubleQuotes46>);<newline46mondego>"
"2448splitHere46","12050364splitHere46","FileUploadField"
"2449splitHere46","12050364splitHere46","List<FileUpload>"
"2450splitHere46","12050364splitHere46","FileUpload"
"2451splitHere46","12050364splitHere46","<input type=<doubleQuotes46>file<doubleQuotes46> multiple=<doubleQuotes46>multiple<doubleQuotes46>/>"
"2452splitHere46","12050372splitHere46","ByteBuffer"
"2453splitHere46","12050372splitHere46","order(ByteOrder.LITTE_ENDIAN)"
"2454splitHere46","12050420splitHere46","maven-jxr-plugin"
"2455splitHere46","12050420splitHere46","reportingPlugin"
"2456splitHere46","12050420splitHere46","<reporting><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.apache.maven.plugins</groupId><newline46mondego>            <artifactId>maven-jxr-plugin</artifactId><newline46mondego>            <version>2.3</version><newline46mondego>        </plugin><newline46mondego>    </plugins><newline46mondego></reporting><newline46mondego>"
"2457splitHere46","12050420splitHere46","jxr:jxr"
"2458splitHere46","12050423splitHere46","join"
"2459splitHere46","12050423splitHere46","select"
"2460splitHere46","12050423splitHere46","<hibernate-mapping><newline46mondego>    <class name=<doubleQuotes46>com.mkyong.common.Stock<doubleQuotes46> table=<doubleQuotes46>stock<doubleQuotes46>><newline46mondego>        <set name=<doubleQuotes46>stockDailyRecords<doubleQuotes46>  cascade=<doubleQuotes46>all<doubleQuotes46> inverse=<doubleQuotes46>true<doubleQuotes46> <newline46mondego>            table=<doubleQuotes46>stock_daily_record<doubleQuotes46> batch-size=<doubleQuotes46>10<doubleQuotes46> fetch=<doubleQuotes46>join<doubleQuotes46>><newline46mondego>            <key><newline46mondego>                <column name=<doubleQuotes46>STOCK_ID<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>            </key><newline46mondego>            <one-to-many class=<doubleQuotes46>com.mkyong.common.StockDailyRecord<doubleQuotes46> /><newline46mondego>        </set><newline46mondego>    </class><newline46mondego></hibernate-mapping><newline46mondego>"
"2461splitHere46","12050511splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class FrameTest {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        JFrame f = new JFrame();<newline46mondego>        f.add(new JComponent() {<newline46mondego>            public void paintComponent(Graphics g) {<newline46mondego><newline46mondego>                // Some parameters.<newline46mondego>                String text = <doubleQuotes46>Some Label<doubleQuotes46>;<newline46mondego>                int centerX = 150, centerY = 100;<newline46mondego>                int ovalWidth = 200, ovalHeight = 100;<newline46mondego><newline46mondego>                // Draw oval<newline46mondego>                g.setColor(Color.BLUE);<newline46mondego>                g.fillOval(centerX-ovalWidth/2, centerY-ovalHeight/2,<newline46mondego>                           ovalWidth, ovalHeight);<newline46mondego><newline46mondego>                // Draw centered text<newline46mondego>                FontMetrics fm = g.getFontMetrics();<newline46mondego>                double textWidth = fm.getStringBounds(text, g).getWidth();<newline46mondego>                g.setColor(Color.WHITE);<newline46mondego>                g.drawString(text, (int) (centerX - textWidth/2),<newline46mondego>                                   (int) (centerY + fm.getMaxAscent() / 2));<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.setSize(300, 300);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2462splitHere46","12050539splitHere46","UserType"
"2463splitHere46","12050539splitHere46","UserType"
"2464splitHere46","12050539splitHere46","UserType"
"2465splitHere46","12050539splitHere46","UserType"
"2466splitHere46","12050539splitHere46","UserType"
"2467splitHere46","12050588splitHere46","HttpClient"
"2468splitHere46","12050588splitHere46","GetMethod get = new GetMethod(<doubleQuotes46>http://www.example.com/page<doubleQuotes46>);<newline46mondego>method.setQueryString(new NameValuePair[] {<newline46mondego>    new NameValuePair(<doubleQuotes46>q<doubleQuotes46>, <doubleQuotes46>add<doubleQuotes46>),<newline46mondego>  new NameValuePair(<doubleQuotes46>array<doubleQuotes46>, <doubleQuotes46>[{<doubleQuotes46>amount<doubleQuotes46>:<doubleQuotes46>3<doubleQuotes46>,<doubleQuotes46>test<doubleQuotes46>:<doubleQuotes46>test<doubleQuotes46>}]<doubleQuotes46>),<newline46mondego>});<newline46mondego>"
"2469splitHere46","12050588splitHere46","client.execute(post);"
"2470splitHere46","12050638splitHere46","Class"
"2471splitHere46","12050638splitHere46","@SuppressWarnings({ <doubleQuotes46>unchecked<doubleQuotes46>, <doubleQuotes46>rawtypes<doubleQuotes46> })<newline46mondego>Class<List<MyType>> clazz = (Class) List.class<newline46mondego>"
"2472splitHere46","12050650splitHere46","grant {<newline46mondego>  permission java.io.FilePermission <newline46mondego>    <doubleQuotes46>/usr/bin/whoami<doubleQuotes46>, <doubleQuotes46>execute<doubleQuotes46>;<newline46mondego>};<newline46mondego>"
"2473splitHere46","12050888splitHere46","MemoryAnalyzer.ini"
"2474splitHere46","12050888splitHere46","-vmargs<newline46mondego>-Xmx2048M<newline46mondego>"
"2475splitHere46","12050888splitHere46","2048M"
"2476splitHere46","12050888splitHere46","eclipse.ini"
"2477splitHere46","12050902splitHere46","ON DUPLICATE KEY UPDATE"
"2478splitHere46","12050990splitHere46","Comparable"
"2479splitHere46","12050990splitHere46","<T extends Comparable<T>>"
"2480splitHere46","12050990splitHere46","T"
"2481splitHere46","12050990splitHere46","extends"
"2482splitHere46","12050990splitHere46","T"
"2483splitHere46","12050990splitHere46","Comparable"
"2484splitHere46","12051036splitHere46","@Id<newline46mondego>    @GeneratedValue(generator=<doubleQuotes46>MySequence<doubleQuotes46>, strategy=GenerationType.SEQUENCE)<newline46mondego>    @SequenceGenerator(allocationSize=1, name=<doubleQuotes46>MySequence<doubleQuotes46>, sequenceName=<doubleQuotes46>MySequence<doubleQuotes46>)<newline46mondego>"
"2485splitHere46","12051036splitHere46","select mySequence.nextval from dual"
"2486splitHere46","12051105splitHere46","VM"
"2487splitHere46","12051105splitHere46","JVM"
"2488splitHere46","12051170splitHere46","rulesTable"
"2489splitHere46","12051170splitHere46","rulesTable[0][0].contains(rules_input.substring(0, 4));<newline46mondego>"
"2490splitHere46","12051199splitHere46","quine"
"2491splitHere46","12051199splitHere46","Term"
"2492splitHere46","12051199splitHere46","quine"
"2493splitHere46","12051199splitHere46","Term"
"2494splitHere46","12051199splitHere46","quine"
"2495splitHere46","12051199splitHere46","Term"
"2496splitHere46","12051231splitHere46","public interface Lotto { }<newline46mondego><newline46mondego>public class LottoImplSecond implements Lotto { }<newline46mondego>public class LottoImplFirst implements Lotto { }<newline46mondego><newline46mondego>public class MyClass {<newline46mondego>   public List<? extends Lotto> getLotto(Integer number){<newline46mondego>       List<? extends Lotto> listaLotto;<newline46mondego>       if(number==1) listaLotto=new ArrayList<LottoImplFirst>();<newline46mondego>       else if(numeber==1) listaLotto=new ArrayList<LottoImplSecond>();<newline46mondego>       return listaLotto;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2497splitHere46","12051261splitHere46","import javax.swing.*;    <newline46mondego>import java.awt.*;<newline46mondego>import java.util.Random;<newline46mondego><newline46mondego>public class VirusGamePanel extends JPanel {<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    Random colour = new Random();<newline46mondego>    int score = 0;<newline46mondego><newline46mondego>    public void paint(Graphics g)<newline46mondego>    {<newline46mondego>        super.paint(g);<newline46mondego>        g.setColor(Color.magenta);<newline46mondego>        g.drawString(<doubleQuotes46>Score: <doubleQuotes46>+ score,200,200);<newline46mondego>        g.setColor(Color.orange);<newline46mondego>        g.drawOval(200,150,200,200);<newline46mondego>        Color rand = new Color(colour.nextInt(255),colour.nextInt(255),colour.nextInt(255));<newline46mondego>        g.setColor(rand);<newline46mondego>        g.fillOval(270,50,50,50);<newline46mondego>        g.fillOval(100,100,50,50);<newline46mondego>        g.fillOval(450,100,50,50);//this line is causing the problem<newline46mondego>        g.fillOval(100,400,50,50);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame f=new JFrame();<newline46mondego>        f.setSize(600,600);<newline46mondego>        f.add(new VirusGamePanel());<newline46mondego>        f.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2498splitHere46","12051311splitHere46","INSERT INTO xml_docs(id, gkuzu) VALUES (1, XMLPARSE('<foo><bar>Hello</bar></foo>'));<newline46mondego>"
"2499splitHere46","12051311splitHere46","String sql = <doubleQuotes46>INSERT INTO xml_docs(id, gkuzu) VALUES (?, XMLPARSE(?))<doubleQuotes46>;<newline46mondego>[...]<newline46mondego>stmt.setString(2, <doubleQuotes46><foo>Hello World!</foo><doubleQuotes46>);<newline46mondego>"
"2500splitHere46","12051311splitHere46","INSERT INTO xml_docs(id, gkuzu) VALUES (1, XMLPARSE('<foo>Hello World!</foo>'));<newline46mondego>"
"2501splitHere46","12051376splitHere46","%USER_HOME%/.m2/settings.xml"
"2502splitHere46","12051376splitHere46","database.properties"
"2503splitHere46","12051376splitHere46","log4j.properties"
"2504splitHere46","12051376splitHere46","src<newline46mondego>  |-main<newline46mondego>       |-filters<newline46mondego>       |       |-derby.properties<newline46mondego>       |       |-h2.properties<newline46mondego>       |       |-mssql.properties<newline46mondego>       |       |-mysql.properties<newline46mondego>       |-templates<newline46mondego>                 |-db.properties<newline46mondego>"
"2505splitHere46","12051376splitHere46","pom.xml"
"2506splitHere46","12051376splitHere46","<profiles><newline46mondego>    <profile><newline46mondego>        <id>derby</id><newline46mondego>        <build><newline46mondego>            <filters><newline46mondego>                <filter>src/main/filters/derby.properties</filter><newline46mondego>            </filters><newline46mondego>            <resources><newline46mondego>                <resource><newline46mondego>                    <directory>src/main/templates</directory><newline46mondego>                    <filtering>true</filtering><newline46mondego>                </resource><newline46mondego>            </resources><newline46mondego>        </build><newline46mondego>    </profile><newline46mondego>    <profile><newline46mondego>        <id>mysql</id><newline46mondego>        <build><newline46mondego>            <filters><newline46mondego>                <filter>src/main/filters/mysql.properties</filter><newline46mondego>            </filters><newline46mondego>            <resources><newline46mondego>                <resource><newline46mondego>                    <directory>src/main/templates</directory><newline46mondego>                    <filtering>true</filtering><newline46mondego>                </resource><newline46mondego>            </resources><newline46mondego>        </build><newline46mondego>    </profile><newline46mondego>    <profile><newline46mondego>        <id>mssql</id><newline46mondego>        <build><newline46mondego>            <filters><newline46mondego>                <filter>src/main/filters/mssql.properties</filter><newline46mondego>            </filters><newline46mondego>            <resources><newline46mondego>                <resource><newline46mondego>                    <directory>src/main/templates</directory><newline46mondego>                    <filtering>true</filtering><newline46mondego>                </resource><newline46mondego>            </resources><newline46mondego>        </build><newline46mondego>    </profile><newline46mondego>    <profile><newline46mondego>        <id>h2</id><newline46mondego>        <build><newline46mondego>            <filters><newline46mondego>                <filter>src/main/filters/h2.properties</filter><newline46mondego>            </filters><newline46mondego>            <resources><newline46mondego>                <resource><newline46mondego>                    <directory>src/main/templates</directory><newline46mondego>                    <filtering>true</filtering><newline46mondego>                </resource><newline46mondego>            </resources><newline46mondego>        </build><newline46mondego>    </profile><newline46mondego></profiles><newline46mondego>"
"2507splitHere46","12051399splitHere46","public ActionErrors validate(ActionMapping mapping,<newline46mondego>            HttpServletRequest request) {<newline46mondego><newline46mondego>         //Write your code for range checking here<newline46mondego><newline46mondego>            return errors;<newline46mondego>    }<newline46mondego>"
"2508splitHere46","12051399splitHere46","ApplicationResources.property file"
"2509splitHere46","12051554splitHere46","<%@ page language=<doubleQuotes46>java<doubleQuotes46> contentType=<doubleQuotes46>text/html; charset=UTF-8<doubleQuotes46><newline46mondego>    pageEncoding=<doubleQuotes46>UTF-8<doubleQuotes46>%><newline46mondego><newline46mondego><newline46mondego><%@ page import=<doubleQuotes46>java.io.BufferedReader<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>java.io.IOException<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>java.io.InputStreamReader<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>java.io.PrintWriter<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>javax.servlet.ServletException<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>javax.servlet.http.HttpServlet<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>javax.servlet.http.HttpServletRequest<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>javax.servlet.http.HttpServletResponse<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>java.net.*<doubleQuotes46> %><newline46mondego><%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> %><newline46mondego><newline46mondego><!DOCTYPE html PUBLIC <doubleQuotes46>-//W3C//DTD HTML 4.01 Transitional//EN<doubleQuotes46> <doubleQuotes46>http://www.w3.org/TR/html4/loose.dtd<doubleQuotes46>><newline46mondego><html><newline46mondego><head><newline46mondego><meta http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=UTF-8<doubleQuotes46>><newline46mondego><title>Test</title><newline46mondego></head><newline46mondego><body><newline46mondego><newline46mondego><%<newline46mondego>URL url;<newline46mondego>try {<newline46mondego>    url = new URL(<doubleQuotes46>http://www.w3schools.com/xml/note.xml<doubleQuotes46>);<newline46mondego>    BufferedReader in = new BufferedReader(new InputStreamReader(<newline46mondego>            url.openStream()));<newline46mondego><newline46mondego>    String inputLine = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    while ((inputLine = in.readLine()) != null) {<newline46mondego>%><newline46mondego><newline46mondego><c:out value=<doubleQuotes46><%=inputLine%><doubleQuotes46>/><newline46mondego><newline46mondego><%<newline46mondego>    }<newline46mondego>    in.close();<newline46mondego>} catch (MalformedURLException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IOException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego><newline46mondego>%><newline46mondego><newline46mondego></body><newline46mondego></html><newline46mondego>"
"2510splitHere46","12051654splitHere46","String s = new String(<doubleQuotes46>A2345678Z<doubleQuotes46>);<newline46mondego>if (s.matches(<doubleQuotes46>[A-Z][0-9]{7}[A-Z]<doubleQuotes46>)))<newline46mondego>{<newline46mondego>}<newline46mondego>"
"2511splitHere46","12051654splitHere46","[A-Z]"
"2512splitHere46","12051654splitHere46","[0-9]{7}"
"2513splitHere46","12051738splitHere46","ac.getResponse.getWriter().flush()"
"2514splitHere46","12051738splitHere46","IOException"
"2515splitHere46","12051738splitHere46","ServletOutputStream"
"2516splitHere46","12051738splitHere46","try {<newline46mondego>   ServletOutputStream out = ac.getResponse().getOutputStream();<newline46mondego>   out.print(stuff);<newline46mondego>   out.flush(); // throws IOException<newline46mondego>}<newline46mondego>catch(IOException e) {<newline46mondego>   // handle a error<newline46mondego>}<newline46mondego>"
"2517splitHere46","12051876splitHere46","HashMap ubermap"
"2518splitHere46","12051876splitHere46","ArrayList<HashMap>"
"2519splitHere46","12051876splitHere46","putAll()"
"2520splitHere46","12051876splitHere46","ubermap"
"2521splitHere46","12051907splitHere46","e"
"2522splitHere46","12051907splitHere46","e = new SomeOtherException();"
"2523splitHere46","12051907splitHere46","public void method1() throws IOException {<newline46mondego>    try {<newline46mondego>        throw new IOException();<newline46mondego>    } catch (Exception e) { // e is not modified in catch => implicitly final<newline46mondego>        throw e; //compiles OK<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//it works because method1 is semantically equivalent to method2:<newline46mondego>public void method2() throws IOException {<newline46mondego>    try {<newline46mondego>        throw new IOException();<newline46mondego>    } catch (final Exception e) {<newline46mondego>        throw e;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void method3() throws IOException {<newline46mondego>    try {<newline46mondego>        throw new IOException(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>    } catch (Exception e) {<newline46mondego>        e = new IOException(<doubleQuotes46>2<doubleQuotes46>); //e modified: not implicitly final any more<newline46mondego>        throw e; //does not compile<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2524splitHere46","12051981splitHere46","is.read(_xyzFile, 0, size);"
"2525splitHere46","12051981splitHere46","size"
"2526splitHere46","12051981splitHere46","size"
"2527splitHere46","12051981splitHere46","is.read"
"2528splitHere46","12051981splitHere46","IOUtils.toByteArray(InputStream)"
"2529splitHere46","12052103splitHere46","Staff"
"2530splitHere46","12052103splitHere46","Employees"
"2531splitHere46","12052103splitHere46","groovy"
"2532splitHere46","12052103splitHere46","class Staff {<newline46mondego><newline46mondego>    def members = [:] // A collection<newline46mondego><newline46mondego>    void hire(Employee employee) {<newline46mondego>        // Add to collection<newline46mondego>    }<newline46mondego><newline46mondego>    void fire(Employee employee) {<newline46mondego>        // Remove from collection<newline46mondego>    }<newline46mondego><newline46mondego>    void print() {<newline46mondego>        // iterate over collection and print content<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2533splitHere46","12052103splitHere46","public class Staff {<newline46mondego><newline46mondego>    private Employee[] emp = new Employee[100];<newline46mondego><newline46mondego>    public Staff() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void hire() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2534splitHere46","12052103splitHere46","ArrayList"
"2535splitHere46","12052103splitHere46","public class Staff {<newline46mondego><newline46mondego>    private ArrayList<Employee> emp = new ArrayList<Employee>();<newline46mondego><newline46mondego>    public Staff() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void hire() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2536splitHere46","12052103splitHere46","Employee"
"2537splitHere46","12052103splitHere46","public class Employee {<newline46mondego>    ... // all your code<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        // Create a string by using StringBuilder.append() and return sb.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2538splitHere46","12052103splitHere46","Tradesman"
"2539splitHere46","12052131splitHere46","@Get<newline46mondego>@Path(<doubleQuotes46>/subscribers<doubleQuotes46>)<newline46mondego>public void get(@QueryParam(<doubleQuotes46>name<doubleQuotes46>) String name) {<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"2540splitHere46","12052131splitHere46","http://mydomain/subscribers?name=abcde"
"2541splitHere46","12052188splitHere46","CharSequence"
"2542splitHere46","12052188splitHere46","CharSequence seq;<newline46mondego>Charset charset;<newline46mondego>...<newline46mondego>byte[] bytes = seq.toString().getBytes(charset);<newline46mondego>"
"2543splitHere46","12052188splitHere46","CharSequence seq2 = new String(bytes, charset);<newline46mondego>"
"2544splitHere46","12052188splitHere46","CharSequence"
"2545splitHere46","12052188splitHere46","String"
"2546splitHere46","12052188splitHere46","StringBuilder"
"2547splitHere46","12052188splitHere46","StringBuffer"
"2548splitHere46","12052188splitHere46","String"
"2549splitHere46","12052188splitHere46","CharSequence"
"2550splitHere46","12052188splitHere46","CharSequence"
"2551splitHere46","12052188splitHere46","String"
"2552splitHere46","12052188splitHere46","CharSequence"
"2553splitHere46","12052188splitHere46","toString()"
"2554splitHere46","12052188splitHere46","String"
"2555splitHere46","12052188splitHere46","UTF-8"
"2556splitHere46","12052188splitHere46","UTF-16"
"2557splitHere46","12052188splitHere46","Charset charset = Charset.forName(<doubleQuotes46>UTF-8<doubleQuotes46>); <newline46mondego>"
"2558splitHere46","12052188splitHere46","UTF-16"
"2559splitHere46","12052188splitHere46","UTF-8"
"2560splitHere46","12052188splitHere46","UTF-8"
"2561splitHere46","12052296splitHere46","public class TestPy {<newline46mondego><newline46mondego>    private Thread thread;<newline46mondego><newline46mondego>    public void die() {<newline46mondego>        synchronized (thread) {<newline46mondego>            thread.interrupt();<newline46mondego>        }    <newline46mondego>    }<newline46mondego><newline46mondego>    public TestPy() {<newline46mondego>        thread = new Thread(){<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    while (!Thread.interrupted()) {<newline46mondego>                        Thread.sleep(500);<newline46mondego>                    }<newline46mondego>                } catch (InterruptedException e) {<newline46mondego>                    Thread.currentThread().interrupt();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        thread.start();    <newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        TestPy tp = new TestPy();<newline46mondego>        GatewayServer server = new GatewayServer(tp);<newline46mondego>        server.start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2562splitHere46","12052296splitHere46","gateway = JavaGateway()<newline46mondego>do your stuff here using the lib<newline46mondego>tp = gateway.entry_point<newline46mondego>tp.die()<newline46mondego>"
"2563splitHere46","12052356splitHere46","final DateFormat df = DateFormat.getDateTimeInstance();<newline46mondego>final Calendar c = Calendar.getInstance();<newline46mondego>c.clear();<newline46mondego>for (c.set(2011, Calendar.JANUARY, 1, 0, 0, 0);<newline46mondego>     c.get(Calendar.YEAR) == 2011;<newline46mondego>     c.add(Calendar.HOUR_OF_DAY, 1))<newline46mondego>  System.out.println(df.format(c.getTime()));<newline46mondego>"
"2564splitHere46","12052356splitHere46","Oct 30, 2011 12:00:00 AM<newline46mondego>Oct 30, 2011 1:00:00 AM<newline46mondego>Oct 30, 2011 2:00:00 AM<newline46mondego>Oct 30, 2011 2:00:00 AM<newline46mondego>Oct 30, 2011 3:00:00 AM<newline46mondego>"
"2565splitHere46","12052392splitHere46","(x,y)"
"2566splitHere46","12052392splitHere46","private Ellipse2D getEllipseFromCenter(double x, double y, double width, double height)<newline46mondego>{<newline46mondego>    double newX = x - width / 2.0;<newline46mondego>    double newY = y - height / 2.0;<newline46mondego><newline46mondego>    Ellipse2D ellipse = new Ellipse2D.Double(newX, newY, width, height);<newline46mondego><newline46mondego>    return ellipse;<newline46mondego>}<newline46mondego>"
"2567splitHere46","12052392splitHere46","Ellipse2D"
"2568splitHere46","12052537splitHere46",".+"
"2569splitHere46","12052537splitHere46",".+?(_[a-z]{2,3}(_[A-Z]{2,3}){0,1}){0,1}<newline46mondego>"
"2570splitHere46","12052537splitHere46",".+?(?:_([a-z]{2,3})(?:_([A-Z]{2,3}))?)?<newline46mondego>"
"2571splitHere46","12052537splitHere46","for"
"2572splitHere46","12052537splitHere46","i <= matcher.groupCount()"
"2573splitHere46","12052537splitHere46","bundle"
"2574splitHere46","12052537splitHere46","Group 0 = bundle<newline46mondego>Group 1 = null<newline46mondego>Group 2 = null<newline46mondego>"
"2575splitHere46","12052537splitHere46","bundle_en"
"2576splitHere46","12052537splitHere46","Group 0 = bundle_en<newline46mondego>Group 1 = en<newline46mondego>Group 2 = null<newline46mondego>"
"2577splitHere46","12052537splitHere46","bundle_en_US"
"2578splitHere46","12052537splitHere46","Group 0 = bundle_en_US<newline46mondego>Group 1 = en<newline46mondego>Group 2 = US<newline46mondego>"
"2579splitHere46","12052628splitHere46","Term term = qWindow.new Term();<newline46mondego>"
"2580splitHere46","12052697splitHere46","TabCellListener"
"2581splitHere46","12052697splitHere46","TableCellEditor"
"2582splitHere46","12052697splitHere46","TableModel"
"2583splitHere46","12052697splitHere46","getTableCellEditorComponent()"
"2584splitHere46","12052697splitHere46","getCellEditorValue()"
"2585splitHere46","12052697splitHere46","TableModel"
"2586splitHere46","12052697splitHere46","TableModel"
"2587splitHere46","12052697splitHere46","TableModelListener"
"2588splitHere46","12052697splitHere46","CellEditor"
"2589splitHere46","12052697splitHere46","TextColumnEditor"
"2590splitHere46","12052697splitHere46","fireEditingCanceled()"
"2591splitHere46","12052732splitHere46","int i=1;<newline46mondego>int j=i++;<newline46mondego>int k=++i;<newline46mondego>"
"2592splitHere46","12052732splitHere46","j"
"2593splitHere46","12052732splitHere46","1"
"2594splitHere46","12052732splitHere46","k"
"2595splitHere46","12052732splitHere46","3"
"2596splitHere46","12052732splitHere46","i++"
"2597splitHere46","12052732splitHere46","i"
"2598splitHere46","12052732splitHere46","j"
"2599splitHere46","12052732splitHere46","i"
"2600splitHere46","12052732splitHere46","j=1,i=2 ok :)<newline46mondego>"
"2601splitHere46","12052732splitHere46","++i"
"2602splitHere46","12052732splitHere46","k"
"2603splitHere46","12052732splitHere46","k=3,i=3 ok :)<newline46mondego>"
"2604splitHere46","12052732splitHere46","int z = 1; System.out.println(z++ == ++z);<newline46mondego>"
"2605splitHere46","12052732splitHere46","z++"
"2606splitHere46","12052732splitHere46","++z"
"2607splitHere46","12052732splitHere46","3"
"2608splitHere46","12052732splitHere46","false"
"2609splitHere46","12052732splitHere46","System.out.println(++z == z++);<newline46mondego>"
"2610splitHere46","12052732splitHere46","++z"
"2611splitHere46","12052732splitHere46","4"
"2612splitHere46","12052732splitHere46","z++"
"2613splitHere46","12052732splitHere46","4"
"2614splitHere46","12052732splitHere46","true"
"2615splitHere46","12052766splitHere46","<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>"
"2616splitHere46","12052766splitHere46","M"
"2617splitHere46","12052766splitHere46","m"
"2618splitHere46","12052766splitHere46","SimpleDateFormat"
"2619splitHere46","12052862splitHere46","MetaData"
"2620splitHere46","12052862splitHere46","[CustomObject [Metadata  fullName='lead_5273_custom_reg__c']<newline46mondego>"
"2621splitHere46","12052862splitHere46","CustomObject__c"
"2622splitHere46","12052862splitHere46","__c"
"2623splitHere46","12052862splitHere46","[CustomObject [Metadata  fullName='lead_5273_custom_reg__c' type='CustomObject__c']<newline46mondego>"
"2624splitHere46","12052862splitHere46","fullname"
"2625splitHere46","12052873splitHere46","complete"
"2626splitHere46","12052873splitHere46","watcherExecutor.execute(new Runnable(){<newline46mondego>                        public void run() {<newline46mondego>                           // publish a new bid event to a watcher<newline46mondego>                           aCtx.getResponse().getWriter().print(<doubleQuotes46>A new bid on the item was placed. The current price ..., next bid price is ...<doubleQuotes46>);<newline46mondego>                           aCtx.complete();<newline46mondego>                        };<newline46mondego>                     });<newline46mondego>"
"2627splitHere46","12052999splitHere46","URL url = Test.class.getClassLoader().getResource(Test.class.getName().concat(<doubleQuotes46>.class<doubleQuotes46>));<newline46mondego>System.out.println(url.getPath());<newline46mondego>"
"2628splitHere46","12053174splitHere46","String str = <doubleQuotes46>1, 2 and 3, 93<doubleQuotes46>;<newline46mondego><newline46mondego>    Matcher m = Pattern.compile(<doubleQuotes46>\\d+<doubleQuotes46>).matcher(str);<newline46mondego>    while (m.find()) {<newline46mondego>        System.out.println(m.group(0));<newline46mondego>    }<newline46mondego>"
"2629splitHere46","12053204splitHere46","Object bar1 = new Object();<newline46mondego>Object foo = bar1;<newline46mondego>synchronized(foo) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"2630splitHere46","12053204splitHere46","foo"
"2631splitHere46","12053204splitHere46","bar1"
"2632splitHere46","12053265splitHere46","UNSIGNED"
"2633splitHere46","12053265splitHere46","UNIQUE"
"2634splitHere46","12053265splitHere46","NULL"
"2635splitHere46","12053279splitHere46","String nameOfFile = <doubleQuotes46>D:\\abckjk.csv<doubleQuotes46>;<newline46mondego>   try {   <newline46mondego>      PrintWriter pw = new PrintWriter(new FileOutputStream(nameOfFile));<newline46mondego>      pw.println(str);<newline46mondego>      //clean up<newline46mondego>      pw.close();<newline46mondego>   } catch(IOException e) {<newline46mondego>      out.println(e.getMessage());<newline46mondego>   }<newline46mondego>"
"2636splitHere46","12053397splitHere46","public void calculate() {<newline46mondego>    // Center of circle is at (250, 250). Radius is 40.<newline46mondego>    //THIS ALGORITHM IS PROVEN TO BE BETTER THAN I FEARED...<newline46mondego><newline46mondego>    /*      What it does:<newline46mondego>     *          Moves object around in a circle, if object is <newline46mondego>     *              inside of circle.<newline46mondego>     *          Does not move the object towards the center, <newline46mondego>     *              nor outwards. This is crucial.<newline46mondego>     *          Object always stays on the rim of the circle, <newline46mondego>     *              if the collision detection allows it to.<newline46mondego>     * <newline46mondego>     *      Algorithm I used. (DOES WORK, NOT EXPECTING THIS THOUGH.):<newline46mondego>     *          N is normalized vector. <newline46mondego>     *          R = -2*(V dot N)*N + V<newline46mondego>     */<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    double nx = x - 250;<newline46mondego>    double ny = y - 250;<newline46mondego>    double nd = Math.hypot(nx, ny);<newline46mondego>    if (nd < 40){<newline46mondego>        vx += Accelero.X * 0.1;<newline46mondego>        vy += Accelero.Y * 0.1;<newline46mondego>        x -= vx;<newline46mondego>        y -= vy;<newline46mondego>        vx *= 0.9;<newline46mondego>        vy *= 0.9;<newline46mondego>        return;<newline46mondego>    }<newline46mondego><newline46mondego>    vx += Accelero.X * 0.1;<newline46mondego>    vy += Accelero.Y * 0.1;<newline46mondego><newline46mondego><newline46mondego>    if (nd == 0)<newline46mondego>        nd = 1;<newline46mondego>    nx /= nd;<newline46mondego>    ny /= nd;<newline46mondego>    double dotProduct = vx * nx + vy * ny;<newline46mondego>    vx += (float) (-2 * dotProduct * nx);<newline46mondego>    vy += (float) (-2 * dotProduct * ny);<newline46mondego>    x -= vx * 2;<newline46mondego>    y -= vy * 2;<newline46mondego>    vx *= 0.99;<newline46mondego>    vy *= 0.99;<newline46mondego>}<newline46mondego>"
"2637splitHere46","12053469splitHere46","AES"
"2638splitHere46","12053469splitHere46","3DES"
"2639splitHere46","12053469splitHere46","PKI"
"2640splitHere46","12053469splitHere46","AES keys"
"2641splitHere46","12053469splitHere46","RSA"
"2642splitHere46","12053469splitHere46","RSA"
"2643splitHere46","12053469splitHere46","public static void main(String[] args) throws Exception<newline46mondego>{<newline46mondego>    // Initialise secret key with predefined byte array [] like below. I<newline46mondego>    // have used simple string to array method to generate 16 byte array.<newline46mondego>    // AES Key must be minimum 16 bytes.<newline46mondego>    // Now you can put this byte array some where is .SO file.<newline46mondego>    // Generate new Key using this byte []<newline46mondego>    // Then you can generate a key using device specific information at<newline46mondego>    // first boot up.<newline46mondego>    // Use second key to encrypt data and first key to encrypt the second<newline46mondego>    // key<newline46mondego>    // I Hope it clears all the doubts<newline46mondego>    SecretKey key = new SecretKeySpec(<doubleQuotes46>ABCDEFGHIJKLMNOP<doubleQuotes46>.getBytes(), <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>    System.out.println(Arrays.toString(key.getEncoded()));<newline46mondego>    // Initialise Cipher with AES Algorithm<newline46mondego>    Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>    // Set The Encrypt Mode<newline46mondego>    cipher.init(Cipher.ENCRYPT_MODE, key);<newline46mondego>    // Encrypt some bytes<newline46mondego>    byte[] encrypted = cipher.doFinal(<doubleQuotes46>ABCDEFGH<doubleQuotes46>.getBytes());<newline46mondego>    // Print it to vefiry<newline46mondego>    System.out.println(Arrays.toString(encrypted));<newline46mondego><newline46mondego>    // Get The IV<newline46mondego>    byte[] iv = cipher.getIV();<newline46mondego>    System.out.println(iv.length);<newline46mondego>    // Now why storing you can create structure like [16 IV][Encrypted Data]<newline46mondego>    // And while decrypting you can read first [16] bytes IV and then<newline46mondego>    // decrypt remaining bytes<newline46mondego><newline46mondego>    //byte[] iv = new byte[16];<newline46mondego>    // System.arraycopy(encrypted, 0, iv, 0, 16)<newline46mondego>    //Copy remaining bytes to decrypt<newline46mondego><newline46mondego><newline46mondego>    // set cipher to decrypt mode<newline46mondego><newline46mondego>    cipher.init(Cipher.DECRYPT_MODE, key,new IvParameterSpec(iv));<newline46mondego><newline46mondego>    // decrypt it<newline46mondego>    byte[] decrypted = cipher.doFinal(encrypted);<newline46mondego>    System.out.println(new String(decrypted));<newline46mondego><newline46mondego>}<newline46mondego>"
"2644splitHere46","12053469splitHere46","C"
"2645splitHere46","12053469splitHere46",".SO"
"2646splitHere46","12053469splitHere46","byte []"
"2647splitHere46","12053469splitHere46","Native calls"
"2648splitHere46","12053514splitHere46",".wav"
"2649splitHere46","12053514splitHere46","String path = System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>);"
"2650splitHere46","12053514splitHere46","InputStream stream = Play.class.getResourceAsStream(<doubleQuotes46>/result.wav<doubleQuotes46>);<newline46mondego>"
"2651splitHere46","12053514splitHere46","AudioSystem"
"2652splitHere46","12053514splitHere46","getAudioInputStream"
"2653splitHere46","12053514splitHere46","InputStream"
"2654splitHere46","12053514splitHere46","File"
"2655splitHere46","12053514splitHere46","public class Play{<newline46mondego>    public AudioInputStream find(String s) throws UnsupportedAudioFileException, IOException{<newline46mondego>        // Probably some try catch over the next statement to log the error if `result.wav` is not found.<newline46mondego>        InputStream stream = Play.class.getResourceAsStream(<doubleQuotes46>/result.wav<doubleQuotes46>);<newline46mondego>        return AudioSystem.getAudioInputStream(stream); <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2656splitHere46","12053514splitHere46","*.wav"
"2657splitHere46","12053514splitHere46","sint/src"
"2658splitHere46","12053514splitHere46","wav"
"2659splitHere46","12053514splitHere46","/"
"2660splitHere46","12053514splitHere46","/result.wav"
"2661splitHere46","12053514splitHere46","/x_SECOND.wav"
"2662splitHere46","12053514splitHere46","AudioInputStream"
"2663splitHere46","12053514splitHere46","public class A {    <newline46mondego>    @Test<newline46mondego>    public void testAudioInputStream() throws UnsupportedAudioFileException, IOException {<newline46mondego>        InputStream stream = A.class.getResourceAsStream(<doubleQuotes46>/result.wav<doubleQuotes46>);<newline46mondego>        System.out.println(stream != null);<newline46mondego>        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(stream);<newline46mondego>        System.out.println(audioInputStream != null);<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"2664splitHere46","12053514splitHere46","true"
"2665splitHere46","12053514splitHere46","fat jar"
"2666splitHere46","12053514splitHere46","File -> Export -> Other -> One Jar Exporter"
"2667splitHere46","12053527splitHere46","O(n)"
"2668splitHere46","12053527splitHere46","O(1)"
"2669splitHere46","12053527splitHere46","List<Integer> list = ...<newline46mondego>Integer max = Collections.max(list);<newline46mondego>"
"2670splitHere46","12053541splitHere46","jaxbUnmarshaller.setSchema(schemaLocation);<newline46mondego>"
"2671splitHere46","12053541splitHere46","import java.io.File;<newline46mondego>import javax.xml.XMLConstants;<newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.JAXBException;<newline46mondego>import javax.xml.bind.Unmarshaller;<newline46mondego>import javax.xml.transform.stream.StreamSource;<newline46mondego>import javax.xml.validation.Schema;<newline46mondego>import javax.xml.validation.SchemaFactory;<newline46mondego><newline46mondego>import org.xml.sax.SAXException;<newline46mondego><newline46mondego>import com.piyush.STDMP;<newline46mondego><newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     * @throws JAXBException <newline46mondego>     * @throws SAXException <newline46mondego>     */<newline46mondego>    public static void main(String[] args) throws JAXBException, SAXException {<newline46mondego>        JAXBContext jaxbContext = JAXBContext.newInstance(STDMP.class);<newline46mondego>        SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);<newline46mondego>        Schema schema = factory.newSchema(new StreamSource(new File(<doubleQuotes46>C:/Users/CDAC/workspace/Testing/src/STD_MP.xsd<doubleQuotes46>)));<newline46mondego>        Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();<newline46mondego>        jaxbUnmarshaller.setSchema(schema);<newline46mondego>        STDMP ts = (STDMP)jaxbUnmarshaller.unmarshal(new File(<doubleQuotes46>E:/Testing.xml<doubleQuotes46>));<newline46mondego><newline46mondego>        System.out.println(ts.getCoordSystems());<newline46mondego>        System.out.println(ts.getEDocument());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>     }<newline46mondego>"
"2672splitHere46","12053548splitHere46","StringBuilder sb = new StringBuilder();<newline46mondego>String sep = <doubleQuotes46><doubleQuotes46>;<newline46mondego>for (String s : listObjs) {<newline46mondego>    sb.append(sep).append(s);<newline46mondego>    sep = <doubleQuotes46>, <doubleQuotes46>;<newline46mondego>}<newline46mondego>System.out.println(sb);<newline46mondego>"
"2673splitHere46","12053649splitHere46","<c:set var=<doubleQuotes46>letter<doubleQuotes46> value=<doubleQuotes46>${param.colorLetter.toLowerCase().charAt(0).toString()}<doubleQuotes46> /><newline46mondego><newline46mondego><c:choose><newline46mondego>    <c:when test=<doubleQuotes46>${letter eq 'v'}<doubleQuotes46>><newline46mondego>        <lable>Color Name: </lable>Violet<br/><newline46mondego>    </c:when><newline46mondego></c:choose><newline46mondego>"
"2674splitHere46","12053649splitHere46","${}"
"2675splitHere46","12053649splitHere46","toString()"
"2676splitHere46","12053649splitHere46","charAt(0)"
"2677splitHere46","12053649splitHere46","Character"
"2678splitHere46","12053649splitHere46","String"
"2679splitHere46","12053669splitHere46","Distance between <newline46mondego>'Mary and Meera are my classmates.' <newline46mondego>and 'Meera and Mary are my classmates.': <newline46mondego>6<newline46mondego>Distance between <newline46mondego>'Mary and Meera are my classmates.' <newline46mondego>and 'Alice and Bobe are not my classmates.': <newline46mondego>14<newline46mondego>Distance between <newline46mondego>'Mary and Meera are my classmates.' <newline46mondego>and 'Some totally different sentence.': <newline46mondego>29<newline46mondego>"
"2680splitHere46","12053669splitHere46","public class LevenshteinDistance {<newline46mondego><newline46mondego>    private static int minimum(int a, int b, int c) {<newline46mondego>        return Math.min(Math.min(a, b), c);<newline46mondego>    }<newline46mondego><newline46mondego>    public static int computeDistance(CharSequence str1,<newline46mondego>            CharSequence str2) {<newline46mondego><newline46mondego>        int[][] distance = new int[str1.length() + 1][str2.length() + 1];<newline46mondego><newline46mondego>        for (int i = 0; i <= str1.length(); i++){<newline46mondego>            distance[i][0] = i;<newline46mondego>        }<newline46mondego>        for (int j = 0; j <= str2.length(); j++){<newline46mondego>            distance[0][j] = j;<newline46mondego>        }<newline46mondego>        for (int i = 1; i <= str1.length(); i++){<newline46mondego>            for (int j = 1; j <= str2.length(); j++){<newline46mondego>                distance[i][j] = minimum(<newline46mondego>                    distance[i - 1][j] + 1,<newline46mondego>                    distance[i][j - 1] + 1,<newline46mondego>                    distance[i - 1][j - 1]<newline46mondego>                        + ((str1.charAt(i - 1) == str2.charAt(j - 1)) ? 0 : 1));<newline46mondego>            }<newline46mondego>        }<newline46mondego>        int result = distance[str1.length()][str2.length()];<newline46mondego>        //log.debug(<doubleQuotes46>distance:<doubleQuotes46>+result);<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String sent1=<doubleQuotes46>Mary and Meera are my classmates.<doubleQuotes46>;<newline46mondego>        String sent2=<doubleQuotes46>Meera and Mary are my classmates.<doubleQuotes46>;       <newline46mondego>        String sent3=<doubleQuotes46>Alice and Bobe are not my classmates.<doubleQuotes46>;<newline46mondego>        String sent4=<doubleQuotes46>Some totally different sentence.<doubleQuotes46>;<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Distance between \n'<doubleQuotes46>+sent1+<doubleQuotes46>' \nand '<doubleQuotes46>+sent2+<doubleQuotes46>': \n<doubleQuotes46>+computeDistance(sent1, sent2));<newline46mondego>    System.out.println(<doubleQuotes46>Distance between \n'<doubleQuotes46>+sent1+<doubleQuotes46>' \nand '<doubleQuotes46>+sent3+<doubleQuotes46>': \n<doubleQuotes46>+computeDistance(sent1, sent3));<newline46mondego>    System.out.println(<doubleQuotes46>Distance between \n'<doubleQuotes46>+sent1+<doubleQuotes46>' \nand '<doubleQuotes46>+sent4+<doubleQuotes46>': \n<doubleQuotes46>+computeDistance(sent1, sent4));<newline46mondego><newline46mondego>        }<newline46mondego>}<newline46mondego>"
"2681splitHere46","12053757splitHere46","public int compare(Object o1, Object o2) {<newline46mondego>    Field oo1 = (Field ) o1;<newline46mondego>    Field oo2 = (Field ) o2;<newline46mondego><newline46mondego>    return oo1.getFieldID().compareTo(oo2.getFieldID());<newline46mondego>}<newline46mondego>"
"2682splitHere46","12053757splitHere46","public static void main(String[] args) throws InterruptedException {<newline46mondego>    List<Field> originalList = new ArrayList<Field>();<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38637<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38469<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38468<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38638<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38637<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38469<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38468<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38468<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38469<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38468<doubleQuotes46>));<newline46mondego>    originalList.add(new Field(<doubleQuotes46>field_38637<doubleQuotes46>));<newline46mondego><newline46mondego>    System.out.println(originalList);<newline46mondego>    List<Field> groupedList = new ArrayList<Field>(originalList.size());<newline46mondego>    while (!originalList.isEmpty()) {<newline46mondego>        String id = originalList.get(0).getFieldID();<newline46mondego>        for (Iterator<Field> it = originalList.iterator(); it.hasNext();) {<newline46mondego>            Field f = it.next();<newline46mondego>            if (f.getFieldID().equals(id)) {<newline46mondego>                it.remove();<newline46mondego>                groupedList.add(f);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(groupedList);<newline46mondego>}<newline46mondego><newline46mondego>public static class Field {<newline46mondego><newline46mondego>    private final String fieldID;<newline46mondego><newline46mondego>    public Field(String fieldID) {<newline46mondego>        this.fieldID = fieldID;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getFieldID() {<newline46mondego>        return fieldID;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>Field{<doubleQuotes46> + <doubleQuotes46>fieldID=<doubleQuotes46> + fieldID + '}';<newline46mondego>    }<newline46mondego>}        <newline46mondego>"
"2683splitHere46","12053770splitHere46","VisualVM"
"2684splitHere46","12053770splitHere46","JConsole"
"2685splitHere46","12053872splitHere46","a()"
"2686splitHere46","12054056splitHere46","BigDecimal"
"2687splitHere46","12054056splitHere46","setScale()"
"2688splitHere46","12054056splitHere46","BigDecimal bd = new BigDecimal(<doubleQuotes46>1.23456789<doubleQuotes46>);<newline46mondego>System.out.println(bd.setScale(3,BigDecimal.ROUND_HALF_UP));<newline46mondego>"
"2689splitHere46","12054056splitHere46","1.235<newline46mondego>"
"2690splitHere46","12054097splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>E cachedEntity = (E) cache.get(cacheKey);<newline46mondego><newline46mondego>if (cachedEntity != null) {<newline46mondego>    entity = cachedEntity;          <newline46mondego>}<newline46mondego>else {<newline46mondego>    entity = pm.getObjectById(Eclass, key);<newline46mondego>    cache.put(cacheKey, pm.detachCopy(entity));<newline46mondego>}<newline46mondego>"
"2691splitHere46","12054097splitHere46","entity = pm.makePersistent(entity)"
"2692splitHere46","12054097splitHere46","Datastore.GET"
"2693splitHere46","12054097splitHere46","datanucleus.attachSameDatastore"
"2694splitHere46","12054097splitHere46","false"
"2695splitHere46","12054097splitHere46","Datastore.GET"
"2696splitHere46","12054333splitHere46","SortNames"
"2697splitHere46","12054333splitHere46","SortNames<T extends Comparable<? super T>>"
"2698splitHere46","12054333splitHere46","String[]"
"2699splitHere46","12054333splitHere46","T[]"
"2700splitHere46","12054333splitHere46","Collections.sort()"
"2701splitHere46","12054333splitHere46","public class SortNames<T extends Comparable<? super T>> {<newline46mondego>    public void sort(T[] s) {<newline46mondego>        for (int i = 0; i<s.length; i++) {<newline46mondego>            for (int j = i+1; j < s.length; j++) {<newline46mondego>                if (s[i].compareTo(s[j])>0) {<newline46mondego>                    T t = s[i]; s[i] = s[j]; s[j] = t;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    // or static <T extends Comparable<? super T>> void, for static methods<newline46mondego>}<newline46mondego>"
"2702splitHere46","12054420splitHere46","call(@Conditional * *.*(..))"
"2703splitHere46","12054420splitHere46","@Around(<doubleQuotes46>execution(@Conditional * *.*(..)) && @annotation(conditional)<doubleQuotes46> )"
"2704splitHere46","12054718splitHere46","Â°"
"2705splitHere46","12054718splitHere46","0176"
"2706splitHere46","12054718splitHere46","0176"
"2707splitHere46","12054718splitHere46","176"
"2708splitHere46","12054718splitHere46","0"
"2709splitHere46","12054767splitHere46","public class SomeClass implements Comparable<SomeClass><newline46mondego>{<newline46mondego>   private String someField;<newline46mondego><newline46mondego>   public int compareTo(final SomeClass o)<newline46mondego>   {<newline46mondego>     int res = 0;<newline46mondego><newline46mondego>     if (someField.startsWith(<doubleQuotes46>BB<doubleQuotes46>) && o.someField.startsWith(<doubleQuotes46>BB<doubleQuotes46>))<newline46mondego>     {<newline46mondego>       res = o.someField.compareTo(someField);<newline46mondego>     }<newline46mondego>     else<newline46mondego>     {<newline46mondego>       res = someField.compareTo(o.someField);<newline46mondego>     }<newline46mondego>     return res;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2710splitHere46","12054848splitHere46","pw.flush();"
"2711splitHere46","12054848splitHere46","public class FlushPrintWriter {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException  {<newline46mondego>        FileReader fileIn = new FileReader(<doubleQuotes46>in.txt<doubleQuotes46>);<newline46mondego>        FileWriter out = new FileWriter(<doubleQuotes46>out.txt<doubleQuotes46>);<newline46mondego>        PrintWriter pw = new PrintWriter(out);<newline46mondego>        int c;        <newline46mondego>        while ((c = fileIn.read()) != -1) {<newline46mondego>            if(c!=59) {<newline46mondego>               pw.print((char)c);<newline46mondego>            } else {<newline46mondego>               pw.println();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        pw.flush();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2712splitHere46","12054848splitHere46","IOException"
"2713splitHere46","12054848splitHere46","fileIn"
"2714splitHere46","12054848splitHere46",";"
"2715splitHere46","12054939splitHere46","@ContextConfiguration({<doubleQuotes46>/applicationContext.xml<doubleQuotes46>, <doubleQuotes46>/applicationContext-test.xml<doubleQuotes46>})<newline46mondego>"
"2716splitHere46","12054993splitHere46","FileItemStream.getContentType()"
"2717splitHere46","12055093splitHere46","Run Configuration"
"2718splitHere46","12055093splitHere46","Remote Debug"
"2719splitHere46","12055093splitHere46","Add Source"
"2720splitHere46","12055093splitHere46","Java Projects"
"2721splitHere46","12055093splitHere46","Source"
"2722splitHere46","12055093splitHere46","so"
"2723splitHere46","12055274splitHere46","CRL Distribution Point"
"2724splitHere46","12055274splitHere46","CRL Issuer"
"2725splitHere46","12055337splitHere46","static void printCode(int code) {<newline46mondego>  final StringBuilder buffer = new StringBuilder();<newline46mondego>  do {<newline46mondego>    final int digit = (code - 1) % 26;<newline46mondego>    buffer.insert(0, (char)(digit + 'a'));<newline46mondego>    code = (code - digit - 1) / 26;<newline46mondego>  } while (code > 0);<newline46mondego>  System.out.println(buffer);<newline46mondego>}<newline46mondego>"
"2726splitHere46","12055423splitHere46","finally"
"2727splitHere46","12055423splitHere46","boolean closedStrangely = false;<newline46mondego>try {<newline46mondego>   ...<newline46mondego>} catch (StrangeException e) {<newline46mondego>    closeStrangely();<newline46mondego>    closedStrangely = true;<newline46mondego>    throw e; // Or maybe not, or maybe throwing some custom exception<newline46mondego>} finally {<newline46mondego>    if (!closedStrangely) {<newline46mondego>        close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2728splitHere46","12055423splitHere46","closeStrangely()"
"2729splitHere46","12055423splitHere46","closedStrangely"
"2730splitHere46","12055423splitHere46","closeStrangely"
"2731splitHere46","12055423splitHere46","Exception"
"2732splitHere46","12055561splitHere46","create-drop"
"2733splitHere46","12055660splitHere46","setText"
"2734splitHere46","12055685splitHere46","$(document).ready(function() {<newline46mondego>    $('#form').submit(function() {<newline46mondego>        var searchtext = $('#search').val();<newline46mondego>        $.ajax({<newline46mondego>            type:       <doubleQuotes46>post<doubleQuotes46>,<newline46mondego>            url:        <doubleQuotes46>/PathToServlet<doubleQuotes46>,<newline46mondego>            data:       <doubleQuotes46>q=<doubleQuotes46> + searchtext ,<newline46mondego>            success:    function(data) {<newline46mondego>              alert('Data Recieved : ' + data);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    return false;<newline46mondego>    });<newline46mondego>});<newline46mondego>"
"2735splitHere46","12055809splitHere46","public String charArrayToString(char[] array, int startingIndex, int lastIndex) {<newline46mondego>    return new String(array, startIndex, lastIndex - startIndex + 1);<newline46mondego>}<newline46mondego>"
"2736splitHere46","12055809splitHere46","char[] coords = <doubleQuotes46>000175001022<doubleQuotes46>.toCharArray();<newline46mondego><newline46mondego>StringBuilder sb = new StringBuilder();<newline46mondego>sb.append(<doubleQuotes46>( <doubleQuotes46>);<newline46mondego>sb.append(coords, 0, 6);<newline46mondego>sb.append(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>sb.append(coords, 6, 6);<newline46mondego>sb.append(<doubleQuotes46> )<doubleQuotes46>);<newline46mondego>System.out.println(sb); // prints ( 000175, 001022 )<newline46mondego>"
"2737splitHere46","12056005splitHere46","getClass().getResource(<doubleQuotes46>csvFile.csv<doubleQuotes46>);<newline46mondego>"
"2738splitHere46","12056005splitHere46","getClass().getClassLoader().getResource(<doubleQuotes46>csvFile.csv<doubleQuotes46>);<newline46mondego>"
"2739splitHere46","12056005splitHere46","src/main/java"
"2740splitHere46","12056005splitHere46","src/main/resources"
"2741splitHere46","12056005splitHere46","csvFile.csv"
"2742splitHere46","12056005splitHere46","public class B {<newline46mondego>    B() {<newline46mondego>        URL resource = getClass().getClassLoader().getResource(<doubleQuotes46>csvFile.csv<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Found <doubleQuotes46>+resource);<newline46mondego>    }<newline46mondego>    public static void main(String... args) {<newline46mondego>        new B();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2743splitHere46","12056005splitHere46","Found file:/C:/untitled/target/classes/csvFile.csv<newline46mondego>"
"2744splitHere46","12056025splitHere46","...<newline46mondego><newline46mondego>switch (someByte()) {<newline46mondego>    case FOO:<newline46mondego>    case BAR:<newline46mondego>        ...<newline46mondego>}<newline46mondego>"
"2745splitHere46","12056121splitHere46","String#concat"
"2746splitHere46","12056121splitHere46","product = product.concat(t.product.concat(<doubleQuotes46>|<doubleQuotes46>));<newline46mondego>"
"2747splitHere46","12056294splitHere46","try {<newline46mondego>        // Set System L&F<newline46mondego>        UIManager.setLookAndFeel(<newline46mondego>            UIManager.getSystemLookAndFeelClassName());<newline46mondego>    } <newline46mondego>    catch (UnsupportedLookAndFeelException e) {<newline46mondego>       // handle exception<newline46mondego>    }<newline46mondego>    catch (ClassNotFoundException e) {<newline46mondego>       // handle exception<newline46mondego>    }<newline46mondego>    catch (InstantiationException e) {<newline46mondego>       // handle exception<newline46mondego>    }<newline46mondego>    catch (IllegalAccessException e) {<newline46mondego>       // handle exception<newline46mondego>    }<newline46mondego>"
"2748splitHere46","12056307splitHere46","ArrayList<Integer> mylist = new ArrayList<Integer>();<newline46mondego>while (sc.hasNextInt()) {<newline46mondego>    int i = sc.nextInt();<newline46mondego>    mylist.add(i);<newline46mondego>}<newline46mondego>"
"2749splitHere46","12056521splitHere46","myConnection.runQuery(<doubleQuotes46>Select * from hr.numbers order by dbms_random.value<doubleQuotes46>);<newline46mondego>"
"2750splitHere46","12056521splitHere46","runQuery"
"2751splitHere46","12056521splitHere46","myConnection"
"2752splitHere46","12056521splitHere46","run"
"2753splitHere46","12056695splitHere46","Date"
"2754splitHere46","12056783splitHere46","public Node find(Node node, int target) {<newline46mondego>    if(node == null || node.value == target) {<newline46mondego>        return node;<newline46mondego>    }<newline46mondego>    if(node.value > target) {<newline46mondego>        return find(node.left, target);<newline46mondego>    } else {<newline46mondego>        return find(node.right, target);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2755splitHere46","12056783splitHere46","public Node findLca(Node node, int t1, int t2) {<newline46mondego>    if(node == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    if(node.value > t2 && node.value > t1) {<newline46mondego>        // both targets are left<newline46mondego>        return findLca(node.left, t1, t2);<newline46mondego>    } else if (node.value < t2 && node.value < t1) {<newline46mondego>        // both targets are right<newline46mondego>        return findLca(node.right, t1, t2);<newline46mondego>    } else {<newline46mondego>        // either we are diverging or both targets are equal<newline46mondego>        // in both cases so we've found the LCA<newline46mondego>        // check for actual existence of targets here, if you like<newline46mondego>        return node;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2756splitHere46","12056804splitHere46","String getString(string fieldName);<newline46mondego>int getInt(string fieldName);<newline46mondego>DateTime getDateTime(fieldName);<newline46mondego>...<newline46mondego>object getObject(fieldName); // for special scenarios<newline46mondego>void setInt(string fieldName, int value);<newline46mondego>void setString(String fieldnName, String value);<newline46mondego>...<newline46mondego>"
"2757splitHere46","12056858splitHere46","int exp"
"2758splitHere46","12056858splitHere46","MemcachedClient.get"
"2759splitHere46","12056858splitHere46","MemcachedClient.set"
"2760splitHere46","12056858splitHere46","int expr"
"2761splitHere46","12056858splitHere46","-1"
"2762splitHere46","12056858splitHere46","int expr"
"2763splitHere46","12056858splitHere46","2592000"
"2764splitHere46","12056870splitHere46","session-timeout"
"2765splitHere46","12056870splitHere46","web.xml"
"2766splitHere46","12056984splitHere46","<doubleQuotes46> where Part_number = '<doubleQuotes46> + partno + <doubleQuotes46>'<doubleQuotes46>;<newline46mondego>"
"2767splitHere46","12056984splitHere46","PreparedStatement"
"2768splitHere46","12057072splitHere46","join()"
"2769splitHere46","12057072splitHere46","ApplicationShutdownHooks.runHooks()"
"2770splitHere46","12057072splitHere46","static void runHooks() {<newline46mondego>    ...<newline46mondego>    for (Thread hook : threads) {<newline46mondego>        hook.start();<newline46mondego>    }<newline46mondego>    for (Thread hook : threads) {<newline46mondego>        hook.join();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2771splitHere46","12057072splitHere46","System.exit(1);"
"2772splitHere46","12057124splitHere46","private BodyPartDOM collectBodyParts(Part part) throws IOException, MessagingException {<newline46mondego><newline46mondego>        BodyPartDOM dom = new BodyPartDOM();<newline46mondego><newline46mondego>        Object content = part.getContent();<newline46mondego><newline46mondego>        if (content instanceof String) {<newline46mondego><newline46mondego>            // process as string<newline46mondego><newline46mondego>        } else if (content instanceof Multipart) {<newline46mondego><newline46mondego><newline46mondego>            Multipart innerMultiPart = (Multipart) content;<newline46mondego>            int count = innerMultiPart.getCount();<newline46mondego><newline46mondego>            for (int i = 0; i < count; i++) {<newline46mondego><newline46mondego>                BodyPart innerBodyPart = innerMultiPart.getBodyPart(i);<newline46mondego>                BodyPartDOM subDom = collectBodyParts(innerBodyPart);<newline46mondego>                // further recursive processing<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        } else if (content instanceof InputStream) {<newline46mondego><newline46mondego>            // process inputStream<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return dom;<newline46mondego><newline46mondego>    }<newline46mondego>"
"2773splitHere46","12057201splitHere46","String w = scanner.next();<newline46mondego>"
"2774splitHere46","12057201splitHere46","w"
"2775splitHere46","12057201splitHere46","words"
"2776splitHere46","12057201splitHere46","Set"
"2777splitHere46","12057201splitHere46","String[] wordsArray = str.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>for(String word:wordsArray)<newline46mondego>        {<newline46mondego>            //add to set<newline46mondego>        }<newline46mondego>"
"2778splitHere46","12057241splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>         xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego>    <groupId>myproject</groupId><newline46mondego>    <artifactId>aspectj-project</artifactId><newline46mondego>    <version>0.0.1-SNAPSHOT</version><newline46mondego>    <packaging>jar</packaging><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>org.aspectj</groupId><newline46mondego>            <artifactId>aspectjrt</artifactId><newline46mondego>            <version>1.6.8</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>                <groupId>org.codehaus.mojo</groupId><newline46mondego>                <artifactId>aspectj-maven-plugin</artifactId><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <goals><newline46mondego>                            <goal>compile</goal><newline46mondego>                        </goals><newline46mondego>                        <configuration><newline46mondego>                            <source>1.6</source><newline46mondego>                            <target>1.6</target><newline46mondego>                        </configuration><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>            </plugin><newline46mondego>            <plugin><newline46mondego>                <groupId>org.codehaus.mojo</groupId><newline46mondego>                <artifactId>aspectj-maven-plugin</artifactId><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <goals><newline46mondego>                            <goal>compile</goal><newline46mondego>                        </goals><newline46mondego>                        <configuration><newline46mondego>                            <source>1.6</source><newline46mondego>                            <target>1.6</target><newline46mondego>                        </configuration><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>            </plugin><newline46mondego>            <plugin><newline46mondego>                <groupId>org.codehaus.mojo</groupId><newline46mondego>                <artifactId>exec-maven-plugin</artifactId><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <goals><newline46mondego>                            <goal>java</goal><newline46mondego>                        </goals><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>                <configuration><newline46mondego>                    <mainclass>myproject.Main</mainClass><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>        </plugins><newline46mondego>    </build><newline46mondego></project><newline46mondego>"
"2779splitHere46","12057327splitHere46","<authentication-manager><newline46mondego><authentication-provider><newline46mondego><jdbc-user-service id=<doubleQuotes46>jdbcUserService<doubleQuotes46> data-source-ref=<doubleQuotes46>dataSource<doubleQuotes46><newline46mondego>  users-by-username-query=<doubleQuotes46>select username,password, enabled from users where username=?<doubleQuotes46> <newline46mondego>  authorities-by-username-query=<doubleQuotes46>select u.username, ur.authority from users u, user_roles ur where u.user_id = ur.user_id and u.username =?  <doubleQuotes46> <newline46mondego>/><newline46mondego></authentication-provider><newline46mondego></authentication-manager><newline46mondego>"
"2780splitHere46","12057327splitHere46","@Autowired<newline46mondego>@Qualifier(<doubleQuotes46>jdbcUserService<doubleQuotes46>)  // <-- this references the bean id<newline46mondego>public UserDetailsManager userDetailsManager;<newline46mondego>"
"2781splitHere46","12057327splitHere46","@RequestMapping(<doubleQuotes46>/automatic/login/test<doubleQuotes46>)<newline46mondego>public @ResponseBody String automaticLoginTest(HttpServletRequest request) <newline46mondego>{<newline46mondego>    String username = <doubleQuotes46>anyUserName@YourSite.com<doubleQuotes46>;<newline46mondego><newline46mondego>    Boolean result = authenticateUserAndInitializeSessionByUsername(username, userDetailsManager, request);<newline46mondego><newline46mondego>    return result.toString();<newline46mondego>}<newline46mondego><newline46mondego>public boolean authenticateUserAndInitializeSessionByUsername(String username, UserDetailsManager userDetailsManager, HttpServletRequest request)<newline46mondego>{<newline46mondego>    boolean result = true;<newline46mondego><newline46mondego>    try<newline46mondego>    {<newline46mondego>        // generate session if one doesn't exist<newline46mondego>        request.getSession();<newline46mondego><newline46mondego>        // Authenticate the user<newline46mondego>        UserDetails user = userDetailsManager.loadUserByUsername(username);<newline46mondego>        Authentication auth = new UsernamePasswordAuthenticationToken(user, null, user.getAuthorities());<newline46mondego>        SecurityContextHolder.getContext().setAuthentication(auth);<newline46mondego>    }<newline46mondego>    catch (Exception e)<newline46mondego>    {<newline46mondego>      System.out.println(e.getMessage());<newline46mondego><newline46mondego>      result = false;<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"2782splitHere46","12057441splitHere46","main()"
"2783splitHere46","12057441splitHere46","MyList ml = new MyList(list);<newline46mondego>"
"2784splitHere46","12057441splitHere46","LinkedList<Integer>"
"2785splitHere46","12057441splitHere46","public class MyList {<newline46mondego>    private LinkedList<Integer> list;<newline46mondego>    //...<newline46mondego>"
"2786splitHere46","12057441splitHere46","import java.util.LinkedList;<newline46mondego><newline46mondego>public class MyList {<newline46mondego>    private LinkedList<Integer> list;<newline46mondego><newline46mondego>    public MyList(LinkedList<Integer> list) {<newline46mondego>        this.list = list;<newline46mondego>    }<newline46mondego><newline46mondego>    public LinkedList<Integer> reverse() {<newline46mondego>        //Create a reversed list<newline46mondego><newline46mondego>        return rList;<newline46mondego>    }<newline46mondego><newline46mondego>    public LinkedList<Integer> odd() {<newline46mondego>        //Create a list of the odd elements<newline46mondego><newline46mondego>        return oddList<newline46mondego>    }<newline46mondego><newline46mondego>    public LinkedList<Integer> even() {<newline46mondego>        //Create a list of the even elements<newline46mondego><newline46mondego>        return evenList;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return list.toString();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        LinkedList<Integer> list = new LinkedList<Integer>();<newline46mondego>        list.add(0);<newline46mondego>        list.add(2);<newline46mondego>        list.add(4);<newline46mondego><newline46mondego>        MyList ml = new MyList(list);<newline46mondego>        System.out.println(<doubleQuotes46>MyList: <doubleQuotes46> + ml);<newline46mondego>        LinkedList<Integer> tsil = ml.reverse();<newline46mondego>        System.out.println(<doubleQuotes46>Reversed: <doubleQuotes46> + tsil);<newline46mondego>        LinkedList<Integer> ls = ml.odd();<newline46mondego>        System.out.println(<doubleQuotes46>Odd: <doubleQuotes46> + ls);<newline46mondego>        LinkedList<Integer> it = ml.even();<newline46mondego>        System.out.println(<doubleQuotes46>Even: <doubleQuotes46> + it);<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"2787splitHere46","12057464splitHere46","PageContext"
"2788splitHere46","12057464splitHere46","PageContext"
"2789splitHere46","12057464splitHere46","findAttribute"
"2790splitHere46","12057464splitHere46","request"
"2791splitHere46","12057464splitHere46","HttpServletRequest.setAttribute(<doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>fooValue<doubleQuotes46>)"
"2792splitHere46","12057464splitHere46","${foo}"
"2793splitHere46","12057566splitHere46","System.getenv(<doubleQuotes46>ProgramFiles(X86)<doubleQuotes46>)<newline46mondego>"
"2794splitHere46","12057760splitHere46","(def f<newline46mondego>  (future<newline46mondego>    (let [sound-file (java.io.File. <doubleQuotes46>/path/to/file.wav<doubleQuotes46>)<newline46mondego>          sound-in (javax.sound.sampled.AudioSystem/getAudioInputStream sound-file)<newline46mondego>          format (.getFormat sound-in)<newline46mondego>          info (javax.sound.sampled.DataLine$Info. javax.sound.sampled.Clip format)<newline46mondego>          clip (javax.sound.sampled.AudioSystem/getLine info)<newline46mondego>          stop (fn [] (.stop clip))]<newline46mondego>      (.open clip sound-in)<newline46mondego>      (.loop clip javax.sound.sampled.Clip/LOOP_CONTINUOUSLY)<newline46mondego>       stop)))<newline46mondego><newline46mondego>(def stop-loop @f)<newline46mondego>(stop-loop) <newline46mondego>"
"2795splitHere46","12057829splitHere46","@JoinColumn"
"2796splitHere46","12057829splitHere46","@Column"
"2797splitHere46","12057829splitHere46","@ManyToOne<newline46mondego>@JoinColumn(name=<doubleQuotes46>PREFACE_AUTHOR<doubleQuotes46>)<newline46mondego>private Author prefaceAuthor;<newline46mondego><newline46mondego>@ManyToOne<newline46mondego>@JoinColumn(name=<doubleQuotes46>BOOK_AUTHOR<doubleQuotes46>)<newline46mondego>private Author bookAuthor;<newline46mondego>"
"2798splitHere46","12057972splitHere46","}     <newline46mondego>enterToken(<doubleQuotes46>X<doubleQuotes46>, inputString,column); <newline46mondego>"
"2799splitHere46","12057972splitHere46","enterToken(<doubleQuotes46>X<doubleQuotes46>, inputString,column); <newline46mondego>}     <newline46mondego>"
"2800splitHere46","12057987splitHere46","queryForMap(String sql, Object... args)"
"2801splitHere46","12057987splitHere46","Map<String,Object> results = <newline46mondego>        getJdbcTemplate().queryForMap(<newline46mondego>        <doubleQuotes46>SELECT userName, password FROM tblusers WHERE userName = ? AND password = ? <doubleQuotes46><newline46mondego>        ,login.getUserName(), login.getPassword());<newline46mondego><newline46mondego>String dbUserName = (String)results.get(<doubleQuotes46>userName<doubleQuotes46>);<newline46mondego>String dbPassword = (String)results.get(<doubleQuotes46>password<doubleQuotes46>);<newline46mondego>"
"2802splitHere46","12058077splitHere46","Node returnUrlNode = doc.createElement(<doubleQuotes46>returnurl<doubleQuotes46>);<newline46mondego>returnUrlNode.appendChild(<newline46mondego>    doc.createCDATASection(<newline46mondego>        <doubleQuotes46>Whatever text you wanted to go in here, including unescaped < and >.<doubleQuotes46>));<newline46mondego>"
"2803splitHere46","12058077splitHere46","<![CDATA["
"2804splitHere46","12058077splitHere46","]]>"
"2805splitHere46","12058167splitHere46","UserDetails user = userDetailsManager.loadUserByUsername(username);<newline46mondego>    Authentication auth = new UsernamePasswordAuthenticationToken(user, null, user.getAuthorities());<newline46mondego>    SecurityContextHolder.getContext().setAuthentication(auth);<newline46mondego>"
"2806splitHere46","12058422splitHere46","public interface InnerClass{<newline46mondego>    public void doSomething();<newline46mondego>}<newline46mondego>"
"2807splitHere46","12058422splitHere46","public showThis(InnerClass innerObj){<newline46mondego>    innerObj.doSomething();<newline46mondego>}<newline46mondego>"
"2808splitHere46","12058422splitHere46","public static void main (String[] args){<newline46mondego>    OuterClass outer = new OuterClass();<newline46mondego><newline46mondego>    // This is the key part: Here you are creating a new instance of inner class <newline46mondego>    // AND defining its body. If you are using Eclipse, and only write the <newline46mondego>    // new InnerClass() part, you'll notice that the IDE complains that you need <newline46mondego>    // to implement the doSomething() method, which you will do as though you<newline46mondego>    // were creating a plain 'ol class definition<newline46mondego>    outer.showThis(new InnerClass(){ <newline46mondego>        public void doSomething(){<newline46mondego>            System.out.println(<doubleQuotes46>This is the inner anonymous class speaking!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"2809splitHere46","12058530splitHere46","<suite name=<doubleQuotes46>My test suite<doubleQuotes46>><newline46mondego>  <test name=<doubleQuotes46>testing<doubleQuotes46>><newline46mondego>    <classes><newline46mondego>       <class name=<doubleQuotes46>TestNGTest1<doubleQuotes46> /><newline46mondego>       <class name=<doubleQuotes46>TestNGTest2<doubleQuotes46> /><newline46mondego>    </classes><newline46mondego>  </test><newline46mondego></suite><newline46mondego>"
"2810splitHere46","12058530splitHere46","Run / Run... (or Run / Debug...)"
"2811splitHere46","12058530splitHere46","Common"
"2812splitHere46","12058637splitHere46","public JSONObject toJSON(Node node, List<Node> others) {<newline46mondego>    JSONObject json = new JSONObject();<newline46mondego>    json.put(<doubleQuotes46>id<doubleQuotes46>, node.id); // and so on<newline46mondego>    ...<newline46mondego>    List children = new ArrayList<JSONObject>();<newline46mondego>    for(Node subnode : others) {<newline46mondego>        if(isChildOf(subnode, node)) {<newline46mondego>            others.remove(subnode);<newline46mondego>            children.add(toJSON(subnode, others));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    json.put(<doubleQuotes46>children<doubleQuotes46>, children);<newline46mondego>    return json;<newline46mondego>}<newline46mondego>"
"2813splitHere46","12058637splitHere46","isChildOf()"
"2814splitHere46","12058638splitHere46","Use"
"2815splitHere46","12058638splitHere46","Initialization"
"2816splitHere46","12058638splitHere46","Delete"
"2817splitHere46","12058646splitHere46","V_*.sql"
"2818splitHere46","12058646splitHere46","<bean id=<doubleQuotes46>flyway<doubleQuotes46> class=<doubleQuotes46>com.googlecode.flyway.core.Flyway<doubleQuotes46> init-method=<doubleQuotes46>migrate<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>dataSource<doubleQuotes46> ref=<doubleQuotes46>...<doubleQuotes46>/><newline46mondego>  ...<newline46mondego></bean><newline46mondego>"
"2819splitHere46","12058646splitHere46","@Bean(initMethod = <doubleQuotes46>migrate<doubleQuotes46>)<newline46mondego>def flyway() = {<newline46mondego>    val fly = new Flyway()<newline46mondego>    fly.setDataSource(dataSource)<newline46mondego>    fly<newline46mondego>}<newline46mondego>"
"2820splitHere46","12058743splitHere46","DECIMAL"
"2821splitHere46","12058743splitHere46","NUMERIC"
"2822splitHere46","12058743splitHere46","DECIMAL(x, y)"
"2823splitHere46","12058743splitHere46","x"
"2824splitHere46","12058743splitHere46","y"
"2825splitHere46","12058743splitHere46","DECIMAL(10, 5)"
"2826splitHere46","12058776splitHere46","FirefoxProfile profile = new FirefoxProfile();<newline46mondego>        profile.setPreference(<doubleQuotes46>network.http.phishy-userpass-length<doubleQuotes46>, 255);<newline46mondego>        profile.setAssumeUntrustedCertificateIssuer(false);<newline46mondego>"
"2827splitHere46","12058801splitHere46","// If execution reaches this point, that means the program ran successfully.<newline46mondego>"
"2828splitHere46","12058801splitHere46","// No assertions have been made here because the state is unpredictable.<newline46mondego>// Any problems with execution will be detected during integration tests.<newline46mondego>"
"2829splitHere46","12058809splitHere46","Deserializer"
"2830splitHere46","12058809splitHere46","Class"
"2831splitHere46","12058809splitHere46","public class Deserializer<T> implements JsonDeserializer<JsonList<T>> {<newline46mondego><newline46mondego>  public static <T> Deserializer<T> newInstance(Class<T> c) {<newline46mondego>    return new Deserializer<T>(c);<newline46mondego>  }<newline46mondego><newline46mondego>  private final Class<T> clazz;<newline46mondego>  private Deserializer(Class<T> c) { this.clazz = c; }<newline46mondego><newline46mondego>  public T someMethod(){<newline46mondego>    ...<newline46mondego>    T tag = gson.fromJson(obj, clazz); // takes a class e.g. something.class<newline46mondego>    ...<newline46mondego>  }                       <newline46mondego>}<newline46mondego>"
"2832splitHere46","12058809splitHere46","Deserializer<String> d = Deserializer.newInstance(String.class);<newline46mondego>"
"2833splitHere46","12058906splitHere46","import javax.swing.*;<newline46mondego><newline46mondego>public class InputVerifierEg {<newline46mondego>   private JPanel mainPanel = new JPanel();<newline46mondego>   private JTextField txtJobType = new JTextField(10);<newline46mondego>   private JTextField txtPriorityCode = new JTextField(10);<newline46mondego><newline46mondego>   public InputVerifierEg() {<newline46mondego>      txtJobType.setInputVerifier(new MyInputVerifier(<doubleQuotes46>jobType<doubleQuotes46>, <doubleQuotes46>jobCode<doubleQuotes46>,<newline46mondego>            JobType.class));<newline46mondego>      txtPriorityCode.setInputVerifier(new MyInputVerifier(<doubleQuotes46>priority<doubleQuotes46>, <doubleQuotes46>priorityCode<doubleQuotes46>,<newline46mondego>            Priority.class));<newline46mondego><newline46mondego>      mainPanel.add(new JLabel(<doubleQuotes46>Job Type:<doubleQuotes46>));<newline46mondego>      mainPanel.add(txtJobType);<newline46mondego>      mainPanel.add(Box.createHorizontalStrut(15));<newline46mondego>      mainPanel.add(new JLabel(<doubleQuotes46>Priority Code:<doubleQuotes46>));<newline46mondego>      mainPanel.add(txtPriorityCode);<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>   public JPanel getMainPanel() {<newline46mondego>      return mainPanel;<newline46mondego>   }<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>InputVerifierEg<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(new InputVerifierEg().getMainPanel());<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class MyInputVerifier extends InputVerifier {<newline46mondego>   private String fieldName;<newline46mondego>   private String codeName;<newline46mondego>   private Class<?> classType;<newline46mondego><newline46mondego>   public MyInputVerifier(String fieldName, String codeName, Class<?> classType) {<newline46mondego>      this.fieldName = fieldName;<newline46mondego>      this.codeName = codeName;<newline46mondego>      this.classType = classType;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public boolean verify(JComponent input) {<newline46mondego>      JTextField tField = (JTextField) input;<newline46mondego><newline46mondego>      // assuming that the checkFieldExists is a static method of a utility class<newline46mondego>      if (!FieldCheckerUtil.checkFieldExists(tField.getText(), fieldName,<newline46mondego>            codeName, classType)) {<newline46mondego>         return false;<newline46mondego>      }<newline46mondego><newline46mondego>      if (tField.getText().trim().isEmpty()) {<newline46mondego>         return false;<newline46mondego>      }<newline46mondego>      return true;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public boolean shouldYieldFocus(JComponent input) {<newline46mondego>      JTextField tField = (JTextField) input;<newline46mondego><newline46mondego>      if (verify(input)) {<newline46mondego>         return true;<newline46mondego>      } else {<newline46mondego>         tField.selectAll();<newline46mondego>         // show JOptionPane error message?<newline46mondego>         return false;<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2834splitHere46","12058991splitHere46","people"
"2835splitHere46","12058991splitHere46","person"
"2836splitHere46","12059029splitHere46",".java"
"2837splitHere46","12059029splitHere46",".h"
"2838splitHere46","12059029splitHere46",".cpp"
"2839splitHere46","12059029splitHere46","#include <jni.h>"
"2840splitHere46","12059029splitHere46",".cpp"
"2841splitHere46","12059029splitHere46",".cpp"
"2842splitHere46","12059029splitHere46",".h"
"2843splitHere46","12059029splitHere46","(jni_env)->ReleaseStringUTFChars(msg, message);"
"2844splitHere46","12059029splitHere46",".cpp"
"2845splitHere46","12059029splitHere46","#include <doubleQuotes46>HelloNative.h<doubleQuotes46><newline46mondego><newline46mondego>JNIEXPORT void JNICALL Java_HelloNative_printString(JNIEnv* jni_env, jobject java_obj, jstring msg){<newline46mondego>    printf(<doubleQuotes46>inside native method\n<doubleQuotes46>);<newline46mondego>    jboolean iscopy;<newline46mondego>    const char *message = (jni_env)->GetStringUTFChars( msg, &iscopy);<newline46mondego>    printf(<doubleQuotes46>%s<doubleQuotes46>, message);<newline46mondego>    (jni_env)->ReleaseStringUTFChars(msg, message);<newline46mondego>}<newline46mondego>"
"2846splitHere46","12059029splitHere46","load"
"2847splitHere46","12059029splitHere46","loadLibrary"
"2848splitHere46","12059031splitHere46","actionPerformed(...)"
"2849splitHere46","12059031splitHere46","public void actionPerformed(ActionEvent e)<newline46mondego>{<newline46mondego>    if(e.getSource()==start)<newline46mondego>    {<newline46mondego>        //what to do here?<newline46mondego>        CardLayout cardLayout = (CardLayout) Virus.thegame.getLayout();<newline46mondego>        cardLayout.next(Virus.thegame);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2850splitHere46","12059031splitHere46","paint()"
"2851splitHere46","12059031splitHere46","paintComponent(Graphics g)"
"2852splitHere46","12059031splitHere46","JPanel/JComponent"
"2853splitHere46","12059031splitHere46","JFrame"
"2854splitHere46","12059031splitHere46","JFrame"
"2855splitHere46","12059031splitHere46","JPanel"
"2856splitHere46","12059031splitHere46","getPreferredSize()"
"2857splitHere46","12059031splitHere46","Dimension"
"2858splitHere46","12059031splitHere46","public Virus(){<newline46mondego>    jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    jf.setResizable(false);                               <newline46mondego>    thegame.add(start);<newline46mondego>    thegame.add(game);<newline46mondego>    jf.add(thegame);        <newline46mondego>    jf.pack();<newline46mondego>    jf.setLocationRelativeTo(null);<newline46mondego>    jf.setVisible(true);<newline46mondego>}<newline46mondego>"
"2859splitHere46","12059031splitHere46","import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Font;<newline46mondego>import java.awt.Color;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.CardLayout;<newline46mondego><newline46mondego>public class Virus extends JFrame{<newline46mondego>    private static final long serialVersionUID =1L;<newline46mondego>    JFrame jf = new JFrame(<doubleQuotes46>Virus<doubleQuotes46>);<newline46mondego>    static JPanel thegame = new JPanel(new CardLayout());<newline46mondego>    JPanel game = new VirusGamePanel();<newline46mondego>    JPanel start = new StartScreen();<newline46mondego><newline46mondego>    public Virus(){<newline46mondego>        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        jf.setResizable(false);                               <newline46mondego>        thegame.add(start);<newline46mondego>        thegame.add(game);<newline46mondego>        jf.add(thegame);        <newline46mondego>        jf.pack();<newline46mondego>        jf.setLocationRelativeTo(null);<newline46mondego>        jf.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new Virus();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class StartScreen extends JPanel implements ActionListener{<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    JButton start = new JButton(<doubleQuotes46>Start<doubleQuotes46>);<newline46mondego>    public StartScreen(){<newline46mondego>        start.addActionListener(this);<newline46mondego>        start.setBounds(new Rectangle(400,300,100,30));<newline46mondego>        this.add(start);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g){<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.setFont(new Font(<doubleQuotes46>Impact<doubleQuotes46>,Font.BOLD,72));<newline46mondego>        g.setColor(Color.MAGENTA);<newline46mondego>        g.drawString(<doubleQuotes46>Virus<doubleQuotes46>,275,300);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize()<newline46mondego>    {<newline46mondego>        return (new Dimension(600, 600));<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e)<newline46mondego>    {<newline46mondego>        if(e.getSource()==start)<newline46mondego>        {<newline46mondego>            //what to do here?<newline46mondego>            CardLayout cardLayout = (CardLayout) Virus.thegame.getLayout();<newline46mondego>            cardLayout.next(Virus.thegame);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class VirusGamePanel extends JPanel<newline46mondego>{<newline46mondego>    public VirusGamePanel()<newline46mondego>    {<newline46mondego>        JLabel label = new JLabel(<doubleQuotes46>I am ON<doubleQuotes46>, JLabel.CENTER);<newline46mondego>        add(label);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize()<newline46mondego>    {<newline46mondego>        return (new Dimension(600, 600));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2860splitHere46","12059057splitHere46","Preference prefereces=findPreference(<doubleQuotes46>rateus<doubleQuotes46>);<newline46mondego>preference.setOnPreferenceClickListener (new Preference.OnPreferenceClickListener(){<newline46mondego>    public boolean onPreferenceClick(Preference preference){<newline46mondego>        Intent intent = new Intent(Intent.ACTION_VIEW,Uri.parse(<doubleQuotes46>market://details?id=com.xyz.xyz<doubleQuotes46>));<newline46mondego>        startActivity(intent);<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"2861splitHere46","12059062splitHere46","FileInputStream fileInputStream = new FileInputStream( <doubleQuotes46>my_image_file_path<doubleQuotes46> );<newline46mondego><newline46mondego>int nRead;<newline46mondego>byte[] data = new byte[16384];<newline46mondego><newline46mondego>try {<newline46mondego>    while( (nRead = fileInputStream.read(data, 0, data.length)) != -1 ){<newline46mondego>        networkOutputStream.write( data, 0, nRead );<newline46mondego>    }<newline46mondego><newline46mondego>} catch( IOException e ){<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>fileInputStream.close();<newline46mondego>"
"2862splitHere46","12059524splitHere46","POST"
"2863splitHere46","12059524splitHere46","route"
"2864splitHere46","12059524splitHere46","POST  /login/submit           controllers.Users.loginSubmit()<newline46mondego>"
"2865splitHere46","12059524splitHere46","<!-- syntax: @routes.ControllerName.methodName() --><newline46mondego><form method=<doubleQuotes46>post<doubleQuotes46> action=<doubleQuotes46>@routes.Users.loginSubmit()<doubleQuotes46>><newline46mondego>  <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>username<doubleQuotes46> /><br/><newline46mondego>  <input type=<doubleQuotes46>password<doubleQuotes46> name=<doubleQuotes46>password<doubleQuotes46> /><br/><newline46mondego><newline46mondego>  <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Login<doubleQuotes46> /><newline46mondego></form><newline46mondego>"
"2866splitHere46","12059524splitHere46","public static Result loginSubmit(){<newline46mondego>    DynamicForm dynamicForm = form().bindFromRequest();<newline46mondego>    Logger.info(<doubleQuotes46>Username is: <doubleQuotes46> + dynamicForm.get(<doubleQuotes46>username<doubleQuotes46>));<newline46mondego>    return ok(<doubleQuotes46>ok, I recived POST data. That's all...<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2867splitHere46","12059524splitHere46","@helper.form(action = routes.User.loginSubmit()) {<newline46mondego>    <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>username<doubleQuotes46> /><br/><newline46mondego>    <input type=<doubleQuotes46>password<doubleQuotes46> name=<doubleQuotes46>password<doubleQuotes46> /><br/><newline46mondego><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Login<doubleQuotes46> /><newline46mondego>}<newline46mondego>"
"2868splitHere46","12059524splitHere46","pre-filled"
"2869splitHere46","12059691splitHere46","getModifiers()"
"2870splitHere46","12059735splitHere46","imageId"
"2871splitHere46","12059735splitHere46","http://localhost:8080/myAppContext/ImageAction?imageId=darksouls.jpg<newline46mondego>"
"2872splitHere46","12059941splitHere46","<Resource name=<doubleQuotes46>jdbc/jasperserver<doubleQuotes46> auth=<doubleQuotes46>Container<doubleQuotes46> type=<doubleQuotes46>javax.sql.DataSource<doubleQuotes46><newline46mondego>    maxActive=<doubleQuotes46>100<doubleQuotes46> maxIdle=<doubleQuotes46>30<doubleQuotes46> maxWait=<doubleQuotes46>10000<doubleQuotes46><newline46mondego>    username=<doubleQuotes46>postgres<doubleQuotes46> password=<doubleQuotes46>12345<doubleQuotes46><newline46mondego>    driverClassName=<doubleQuotes46>org.postgresql.Driver<doubleQuotes46><newline46mondego>    validationQuery=<doubleQuotes46>SELECT 1<doubleQuotes46><newline46mondego>    testOnBorrow=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    url=<doubleQuotes46>jdbc:postgresql://localhost:5432/jrs47_repo<doubleQuotes46>  /><newline46mondego>"
"2873splitHere46","12059975splitHere46","router"
"2874splitHere46","12059975splitHere46","route"
"2875splitHere46","12059975splitHere46","GET   /home    controllers.Application.index<newline46mondego>"
"2876splitHere46","12059975splitHere46","Application controller"
"2877splitHere46","12059975splitHere46","public static String linkMeta(play.api.mvc.Call path) {<newline46mondego>    return <doubleQuotes46>http://meta.domain.tld<doubleQuotes46> + path;<newline46mondego>}<newline46mondego>"
"2878splitHere46","12059975splitHere46","<a href='@Application.linkMeta(routes.Application.index)'>Absoulte URL link to meta's index</a><newline46mondego>URL: http://meta.domain.tld/home<newline46mondego><newline46mondego><a href='@routes.Application.index'>Relative URL to meta's index</a><newline46mondego>URL: /home<newline46mondego>"
"2879splitHere46","12060082splitHere46","<doubleQuotes46><doubleQuotes46>"
"2880splitHere46","12060082splitHere46","<doubleQuotes46> <doubleQuotes46>"
"2881splitHere46","12060082splitHere46","char"
"2882splitHere46","12060082splitHere46","String"
"2883splitHere46","12060082splitHere46","String"
"2884splitHere46","12060082splitHere46","String.equals(<doubleQuotes46><doubleQuotes46>)"
"2885splitHere46","12060082splitHere46","true"
"2886splitHere46","12060082splitHere46","char"
"2887splitHere46","12060082splitHere46","char"
"2888splitHere46","12060082splitHere46","char noChars[] = new char[0];<newline46mondego>String str = new String(noChars);<newline46mondego>// now str is the empty String<newline46mondego>"
"2889splitHere46","12060103splitHere46","StringRequestEntity requestEntity = new StringRequestEntity(<newline46mondego>    JSON_STRING,<newline46mondego>    <doubleQuotes46>application/json<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego><newline46mondego>PostMethod postMethod = new PostMethod(<doubleQuotes46>http://example.com/action<doubleQuotes46>);<newline46mondego>postMethod.setRequestEntity(requestEntity);<newline46mondego><newline46mondego>int statusCode = httpClient.executeMethod(postMethod);<newline46mondego>"
"2890splitHere46","12060120splitHere46","public class PausablePlayer {<newline46mondego><newline46mondego>    private final static int NOTSTARTED = 0;<newline46mondego>    private final static int PLAYING = 1;<newline46mondego>    private final static int PAUSED = 2;<newline46mondego>    private final static int FINISHED = 3;<newline46mondego><newline46mondego>    // the player actually doing all the work<newline46mondego>    private final Player player;<newline46mondego><newline46mondego>    // locking object used to communicate with player thread<newline46mondego>    private final Object playerLock = new Object();<newline46mondego><newline46mondego>    // status variable what player thread is doing/supposed to do<newline46mondego>    private int playerStatus = NOTSTARTED;<newline46mondego><newline46mondego>    public PausablePlayer(final InputStream inputStream) throws JavaLayerException {<newline46mondego>        this.player = new Player(inputStream);<newline46mondego>    }<newline46mondego><newline46mondego>    public PausablePlayer(final InputStream inputStream, final AudioDevice audioDevice) throws JavaLayerException {<newline46mondego>        this.player = new Player(inputStream, audioDevice);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Starts playback (resumes if paused)<newline46mondego>     */<newline46mondego>    public void play() throws JavaLayerException {<newline46mondego>        synchronized (playerLock) {<newline46mondego>            switch (playerStatus) {<newline46mondego>                case NOTSTARTED:<newline46mondego>                    final Runnable r = new Runnable() {<newline46mondego>                        public void run() {<newline46mondego>                            playInternal();<newline46mondego>                        }<newline46mondego>                    };<newline46mondego>                    final Thread t = new Thread(r);<newline46mondego>                    t.setDaemon(true);<newline46mondego>                    t.setPriority(Thread.MAX_PRIORITY);<newline46mondego>                    playerStatus = PLAYING;<newline46mondego>                    t.start();<newline46mondego>                    break;<newline46mondego>                case PAUSED:<newline46mondego>                    resume();<newline46mondego>                    break;<newline46mondego>                default:<newline46mondego>                    break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Pauses playback. Returns true if new state is PAUSED.<newline46mondego>     */<newline46mondego>    public boolean pause() {<newline46mondego>        synchronized (playerLock) {<newline46mondego>            if (playerStatus == PLAYING) {<newline46mondego>                playerStatus = PAUSED;<newline46mondego>            }<newline46mondego>            return playerStatus == PAUSED;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Resumes playback. Returns true if the new state is PLAYING.<newline46mondego>     */<newline46mondego>    public boolean resume() {<newline46mondego>        synchronized (playerLock) {<newline46mondego>            if (playerStatus == PAUSED) {<newline46mondego>                playerStatus = PLAYING;<newline46mondego>                playerLock.notifyAll();<newline46mondego>            }<newline46mondego>            return playerStatus == PLAYING;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Stops playback. If not playing, does nothing<newline46mondego>     */<newline46mondego>    public void stop() {<newline46mondego>        synchronized (playerLock) {<newline46mondego>            playerStatus = FINISHED;<newline46mondego>            playerLock.notifyAll();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void playInternal() {<newline46mondego>        while (playerStatus != FINISHED) {<newline46mondego>            try {<newline46mondego>                if (!player.play(1)) {<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            } catch (final JavaLayerException e) {<newline46mondego>                break;<newline46mondego>            }<newline46mondego>            // check if paused or terminated<newline46mondego>            synchronized (playerLock) {<newline46mondego>                while (playerStatus == PAUSED) {<newline46mondego>                    try {<newline46mondego>                        playerLock.wait();<newline46mondego>                    } catch (final InterruptedException e) {<newline46mondego>                        // terminate player<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        close();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Closes the player, regardless of current state.<newline46mondego>     */<newline46mondego>    public void close() {<newline46mondego>        synchronized (playerLock) {<newline46mondego>            playerStatus = FINISHED;<newline46mondego>        }<newline46mondego>        try {<newline46mondego>            player.close();<newline46mondego>        } catch (final Exception e) {<newline46mondego>            // ignore, we are terminating anyway<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // demo how to use<newline46mondego>    public static void main(String[] argv) {<newline46mondego>        try {<newline46mondego>            FileInputStream input = new FileInputStream(<doubleQuotes46>myfile.mp3<doubleQuotes46>); <newline46mondego>            PausablePlayer player = new PausablePlayer(input);<newline46mondego><newline46mondego>            // start playing<newline46mondego>            player.play();<newline46mondego><newline46mondego>            // after 5 secs, pause<newline46mondego>            Thread.sleep(5000);<newline46mondego>            player.pause();     <newline46mondego><newline46mondego>            // after 5 secs, resume<newline46mondego>            Thread.sleep(5000);<newline46mondego>            player.resume();<newline46mondego>        } catch (final Exception e) {<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2891splitHere46","12060132splitHere46","package com.ggl.traffic.signal.model;<newline46mondego><newline46mondego>import java.awt.Dimension;<newline46mondego><newline46mondego>public class TrafficSignalModel {<newline46mondego><newline46mondego>    public static final int RED_LIGHT_TIME = 15;<newline46mondego>    public static final int YELLOW_LIGHT_TIME = 5;<newline46mondego>    public static final int GREEN_LIGHT_TIME = 10;<newline46mondego><newline46mondego>    public static final Dimension LIGHT_SIZE = new Dimension(32, 32);<newline46mondego>}<newline46mondego>"
"2892splitHere46","12060132splitHere46","package com.ggl.traffic.signal;<newline46mondego><newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>import com.ggl.traffic.signal.view.TrafficSignalFrame;<newline46mondego><newline46mondego>public class TrafficSignal implements Runnable {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        new TrafficSignalFrame();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new TrafficSignal());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2893splitHere46","12060132splitHere46","package com.ggl.traffic.signal.view;<newline46mondego><newline46mondego>import java.awt.FlowLayout;<newline46mondego>import java.awt.event.WindowAdapter;<newline46mondego>import java.awt.event.WindowEvent;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public class TrafficSignalFrame {<newline46mondego><newline46mondego>    protected ButtonPanel bPanel;<newline46mondego><newline46mondego>    protected JFrame frame;<newline46mondego><newline46mondego>    protected TrafficSignalPanel tsPanel;<newline46mondego><newline46mondego>    public TrafficSignalFrame() {<newline46mondego>        createPartControl();<newline46mondego>    }<newline46mondego><newline46mondego>    protected void createPartControl() {<newline46mondego>        tsPanel = new TrafficSignalPanel();<newline46mondego>        bPanel = new ButtonPanel();<newline46mondego><newline46mondego>        bPanel.setTrafficSignalPanel(tsPanel);<newline46mondego><newline46mondego>        frame = new JFrame();<newline46mondego>        frame.setTitle(<doubleQuotes46>Traffic Signal<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);<newline46mondego>        frame.addWindowListener(new WindowAdapter() {<newline46mondego>            @Override<newline46mondego>            public void windowClosing(WindowEvent event) {<newline46mondego>                exitProcedure();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego><newline46mondego>        frame.setLayout(new FlowLayout());<newline46mondego>        frame.add(bPanel.getPanel());<newline46mondego>        frame.add(tsPanel.getPanel());<newline46mondego>        frame.pack();<newline46mondego>//      frame.setBounds(100, 100, 400, 200);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public void exitProcedure() {<newline46mondego>        frame.dispose();<newline46mondego>        System.exit(0);<newline46mondego>    }<newline46mondego><newline46mondego>    public JFrame getFrame() {<newline46mondego>        return frame;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2894splitHere46","12060132splitHere46","package com.ggl.traffic.signal.view;<newline46mondego><newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Graphics;<newline46mondego><newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class TrafficSignalLightPanel extends JPanel {<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    protected boolean lightOn;<newline46mondego><newline46mondego>    protected Color lightColor;<newline46mondego>    protected Color darkColor;<newline46mondego><newline46mondego>    public TrafficSignalLightPanel(Color lightColor) {<newline46mondego>        this.lightColor = lightColor;<newline46mondego>        this.darkColor = Color.WHITE;<newline46mondego>        this.lightOn = false;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLightOn(boolean lightOn) {<newline46mondego>        this.lightOn = lightOn;<newline46mondego>        this.repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        if (lightOn) {<newline46mondego>            g.setColor(lightColor);<newline46mondego>        } else {<newline46mondego>            g.setColor(darkColor);<newline46mondego>        }<newline46mondego>        g.fillRect(0, 0, getWidth(), getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2895splitHere46","12060132splitHere46","package com.ggl.traffic.signal.view;<newline46mondego><newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.FlowLayout;<newline46mondego><newline46mondego>import javax.swing.BorderFactory;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.border.Border;<newline46mondego><newline46mondego>import com.ggl.traffic.signal.model.TrafficSignalModel;<newline46mondego><newline46mondego>public class TrafficSignalPanel {<newline46mondego><newline46mondego>    protected JPanel panel;<newline46mondego><newline46mondego>    protected TrafficSignalLightPanel redLight;<newline46mondego>    protected TrafficSignalLightPanel yellowLight;<newline46mondego>    protected TrafficSignalLightPanel greenLight;<newline46mondego><newline46mondego>    public TrafficSignalPanel() {<newline46mondego>        createPartControl();<newline46mondego>    }<newline46mondego><newline46mondego>    protected void createPartControl() {<newline46mondego>        Border border = BorderFactory.createLineBorder(Color.BLACK, 4);<newline46mondego><newline46mondego>        redLight = new TrafficSignalLightPanel(Color.RED);<newline46mondego>        redLight.setBorder(border);<newline46mondego>        redLight.setPreferredSize(TrafficSignalModel.LIGHT_SIZE);<newline46mondego><newline46mondego>        yellowLight = new TrafficSignalLightPanel(Color.YELLOW);<newline46mondego>        yellowLight.setBorder(border);<newline46mondego>        yellowLight.setPreferredSize(TrafficSignalModel.LIGHT_SIZE);<newline46mondego><newline46mondego>        greenLight = new TrafficSignalLightPanel(Color.GREEN);<newline46mondego>        greenLight.setBorder(border);<newline46mondego>        greenLight.setPreferredSize(TrafficSignalModel.LIGHT_SIZE);<newline46mondego><newline46mondego>        panel = new JPanel();<newline46mondego>        panel.setLayout(new FlowLayout());<newline46mondego>        panel.setPreferredSize(<newline46mondego>                new Dimension(TrafficSignalModel.LIGHT_SIZE.width + 10, <newline46mondego>                        TrafficSignalModel.LIGHT_SIZE.height * 3 + 25));<newline46mondego><newline46mondego>        panel.add(redLight);<newline46mondego>        panel.add(yellowLight);<newline46mondego>        panel.add(greenLight);<newline46mondego>    }<newline46mondego><newline46mondego>    public JPanel getPanel() {<newline46mondego>        return panel;<newline46mondego>    }<newline46mondego><newline46mondego>    public TrafficSignalLightPanel getRedLight() {<newline46mondego>        return redLight;<newline46mondego>    }<newline46mondego><newline46mondego>    public TrafficSignalLightPanel getYellowLight() {<newline46mondego>        return yellowLight;<newline46mondego>    }<newline46mondego><newline46mondego>    public TrafficSignalLightPanel getGreenLight() {<newline46mondego>        return greenLight;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2896splitHere46","12060132splitHere46","package com.ggl.traffic.signal.view;<newline46mondego><newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.FlowLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>import com.ggl.traffic.signal.thread.TrafficSignalCycle;<newline46mondego><newline46mondego>public class ButtonPanel {<newline46mondego><newline46mondego>    protected JButton startButton;<newline46mondego>    protected JButton stopButton;<newline46mondego><newline46mondego>    protected JPanel panel;<newline46mondego><newline46mondego>    protected TrafficSignalCycle thread;<newline46mondego><newline46mondego>    protected TrafficSignalPanel tsPanel;<newline46mondego><newline46mondego>    public ButtonPanel() {<newline46mondego>        this.thread = null;<newline46mondego>        createPartControl();<newline46mondego>    }<newline46mondego><newline46mondego>    protected void createPartControl() {<newline46mondego>        panel = new JPanel();<newline46mondego>        panel.setLayout(new FlowLayout());<newline46mondego><newline46mondego>        startButton = new JButton(<doubleQuotes46>Start<doubleQuotes46>);<newline46mondego>        startButton.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent event) {<newline46mondego>                if (thread != null) {<newline46mondego>                    thread.stopRunning();<newline46mondego>                }<newline46mondego>                tsPanel.getRedLight().setLightOn(false);<newline46mondego>                tsPanel.getYellowLight().setLightOn(false);<newline46mondego>                tsPanel.getGreenLight().setLightOn(false);<newline46mondego>                thread = new TrafficSignalCycle(tsPanel);<newline46mondego>                thread.start();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        panel.add(startButton);<newline46mondego><newline46mondego>        stopButton = new JButton(<doubleQuotes46>Stop<doubleQuotes46>);<newline46mondego>        stopButton.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent event) {<newline46mondego>                if (thread != null) {<newline46mondego>                    thread.stopRunning();<newline46mondego>                    thread = null;<newline46mondego>                }<newline46mondego>                tsPanel.getRedLight().setLightOn(true);<newline46mondego>                tsPanel.getYellowLight().setLightOn(false);<newline46mondego>                tsPanel.getGreenLight().setLightOn(false);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        panel.add(stopButton);<newline46mondego><newline46mondego>        setButtonSizes(startButton, stopButton);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void setButtonSizes(JButton ... buttons) {<newline46mondego>        Dimension preferredSize = new Dimension();<newline46mondego>        for (JButton button : buttons) {<newline46mondego>            Dimension d = button.getPreferredSize();<newline46mondego>            preferredSize = setLarger(preferredSize, d);<newline46mondego>        }<newline46mondego>        for (JButton button : buttons) {<newline46mondego>            button.setPreferredSize(preferredSize);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    protected Dimension setLarger(Dimension a, Dimension b) {<newline46mondego>        Dimension d = new Dimension();<newline46mondego>        d.height = Math.max(a.height, b.height);<newline46mondego>        d.width = Math.max(a.width, b.width);<newline46mondego>        return d;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTrafficSignalPanel(TrafficSignalPanel tsPanel) {<newline46mondego>        this.tsPanel = tsPanel;<newline46mondego>    }<newline46mondego><newline46mondego>    public JPanel getPanel() {<newline46mondego>        return panel;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2897splitHere46","12060132splitHere46","package com.ggl.traffic.signal.thread;<newline46mondego><newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>import com.ggl.traffic.signal.model.TrafficSignalModel;<newline46mondego>import com.ggl.traffic.signal.view.TrafficSignalLightPanel;<newline46mondego>import com.ggl.traffic.signal.view.TrafficSignalPanel;<newline46mondego><newline46mondego>public class TrafficSignalCycle extends Thread {<newline46mondego><newline46mondego>    protected boolean isRunning;<newline46mondego>    protected boolean isFinished;<newline46mondego><newline46mondego>    protected TrafficSignalPanel tsPanel;<newline46mondego><newline46mondego>    public TrafficSignalCycle(TrafficSignalPanel tsPanel) {<newline46mondego>        this.tsPanel = tsPanel;<newline46mondego>        this.isRunning = true;<newline46mondego>        this.isFinished = false;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        while (isRunning) {<newline46mondego>            signalLightOn(tsPanel.getGreenLight(), TrafficSignalModel.GREEN_LIGHT_TIME);<newline46mondego>            signalLightOn(tsPanel.getYellowLight(), TrafficSignalModel.YELLOW_LIGHT_TIME);<newline46mondego>            signalLightOn(tsPanel.getRedLight(), TrafficSignalModel.RED_LIGHT_TIME);<newline46mondego>        }<newline46mondego>        this.isFinished = true;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void signalLightOn(TrafficSignalLightPanel light, int seconds) {<newline46mondego>        if (isRunning) {<newline46mondego>            setLightOn(light, true);<newline46mondego>        }<newline46mondego><newline46mondego>        for (int i = 0; i < 1000 && isRunning; i++) {<newline46mondego>            try {<newline46mondego>                Thread.sleep(1L * seconds);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>            }<newline46mondego>        }<newline46mondego>        setLightOn(light, false);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void setLightOn(final TrafficSignalLightPanel light,<newline46mondego>            final boolean isLightOn) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                light.setLightOn(isLightOn);<newline46mondego><newline46mondego>            }       <newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void stopRunning() {<newline46mondego>        this.isRunning = false;<newline46mondego>        while (!isFinished) {<newline46mondego>            try {<newline46mondego>                Thread.sleep(10L);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2898splitHere46","12060317splitHere46","Future"
"2899splitHere46","12060317splitHere46","InterruptedException"
"2900splitHere46","12060317splitHere46","sleep()"
"2901splitHere46","12060317splitHere46","wait()"
"2902splitHere46","12060317splitHere46","InterruptedException"
"2903splitHere46","12060317splitHere46","if (Thread.currentThread().isInterrupted()) {<newline46mondego>"
"2904splitHere46","12060317splitHere46","InterruptedException"
"2905splitHere46","12060317splitHere46","try {<newline46mondego>   Thread.sleep(1000);<newline46mondego>} catch (InterruptedException e) {<newline46mondego>   // this is a good pattern otherwise the interrupt bit is cleared by the catch<newline46mondego>   Thread.currentThread().interrupt();<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"2906splitHere46","12060317splitHere46","lo.cancel(true)"
"2907splitHere46","12060370splitHere46","null"
"2908splitHere46","12060431splitHere46","<mvc:view-controller path=<doubleQuotes46>/login<doubleQuotes46> view-name=<doubleQuotes46>login<doubleQuotes46>/><newline46mondego>"
"2909splitHere46","12060431splitHere46","<bean id=<doubleQuotes46>viewResolver<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.servlet.view.InternalResourceViewResolver<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>prefix<doubleQuotes46> value=<doubleQuotes46>/WEB-INF/views/<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>suffix<doubleQuotes46> value=<doubleQuotes46>.jsp<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"2910splitHere46","12060431splitHere46","/login"
"2911splitHere46","12060431splitHere46","/WEB-INF/views/login.jsp"
"2912splitHere46","12060570splitHere46","%%k\bin\java.exe --version<newline46mondego>"
"2913splitHere46","12060570splitHere46","<doubleQuotes46>%%k\bin\java.exe<doubleQuotes46> -version<newline46mondego>"
"2914splitHere46","12060644splitHere46","JTables"
"2915splitHere46","12060644splitHere46","BoundedRangeModel"
"2916splitHere46","12060644splitHere46","JScrollPane"
"2917splitHere46","12060644splitHere46","JPanel"
"2918splitHere46","12060644splitHere46","class ParallelTables {<newline46mondego>    static JScrollPane createTable() {<newline46mondego>        DefaultTableModel model = new DefaultTableModel(100, 2);<newline46mondego>        for (int row=model.getRowCount(); --row>=0;) {<newline46mondego>            model.setValueAt(row, row, 0);<newline46mondego>        }<newline46mondego>        JTable table = new JTable(model);<newline46mondego>        return new JScrollPane(table);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego><newline46mondego>        JScrollPane scrollerA = createTable();<newline46mondego>        JScrollPane scrollerB = createTable();<newline46mondego>        scrollerA.setVerticalScrollBarPolicy(<newline46mondego>                JScrollPane.VERTICAL_SCROLLBAR_NEVER);<newline46mondego>        // the following statement binds the same BoundedRangeModel to both vertical scrollbars.<newline46mondego>        scrollerA.getVerticalScrollBar().setModel(<newline46mondego>                scrollerB.getVerticalScrollBar().getModel());<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.add(scrollerA);<newline46mondego>        panel.add(scrollerB);<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(panel);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2919splitHere46","12060746splitHere46","string"
"2920splitHere46","12060746splitHere46","String s = new String(bytes,<doubleQuotes46>ASCII<doubleQuotes46>);<newline46mondego>System.out.println(s);<newline46mondego>"
"2921splitHere46","12060746splitHere46","String example = <doubleQuotes46>This is an example<doubleQuotes46>;<newline46mondego>    byte[] bytes = example.getBytes();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Text : <doubleQuotes46> + example);<newline46mondego>    System.out.println(<doubleQuotes46>Text [Byte Format] : <doubleQuotes46> + bytes);<newline46mondego>    System.out.println(<doubleQuotes46>Text [Byte Format] : <doubleQuotes46> + bytes.toString());<newline46mondego><newline46mondego>    String s = null;<newline46mondego>    try {<newline46mondego>        s = new String(bytes, <doubleQuotes46>ASCII<doubleQuotes46>);<newline46mondego>    } catch (UnsupportedEncodingException ex) {<newline46mondego>        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>Text from bytes: <doubleQuotes46> + s);<newline46mondego>"
"2922splitHere46","12060890splitHere46","HttpClient client = new HttpClient();<newline46mondego>int statusCode = client.executeMethod(method);<newline46mondego>"
"2923splitHere46","12060890splitHere46","javax.net.ssl.HttpsURLConnection"
"2924splitHere46","12060890splitHere46","SSLContext"
"2925splitHere46","12060890splitHere46","HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());<newline46mondego>"
"2926splitHere46","12060890splitHere46","SSLContext"
"2927splitHere46","12060890splitHere46","SecureProtocolSocketFactory"
"2928splitHere46","12060890splitHere46","SSLContext"
"2929splitHere46","12060890splitHere46","SSLContext"
"2930splitHere46","12060939splitHere46","JFrame"
"2931splitHere46","12060939splitHere46","setOpacity()"
"2932splitHere46","12060939splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>import static java.awt.GraphicsDevice.WindowTranslucency.*;<newline46mondego><newline46mondego>public class TranslucentWindowDemo extends JFrame {<newline46mondego><newline46mondego>    public TranslucentWindowDemo() {<newline46mondego>        super(<doubleQuotes46>TranslucentWindow<doubleQuotes46>);<newline46mondego>        setLayout(new GridBagLayout());<newline46mondego><newline46mondego>        setSize(300, 200);<newline46mondego>        setLocationRelativeTo(null);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        //Add a sample button.<newline46mondego>        add(new JButton(<doubleQuotes46>I am a Button<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        // Determine if the GraphicsDevice supports translucency.<newline46mondego>        GraphicsEnvironment ge =<newline46mondego>                GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>        GraphicsDevice gd = ge.getDefaultScreenDevice();<newline46mondego><newline46mondego>        //If translucent windows aren't supported, exit.<newline46mondego>        if (!gd.isWindowTranslucencySupported(TRANSLUCENT)) {<newline46mondego>            System.err.println(<newline46mondego>                    <doubleQuotes46>Translucency is not supported<doubleQuotes46>);<newline46mondego>            System.exit(0);<newline46mondego>        }<newline46mondego><newline46mondego>        JFrame.setDefaultLookAndFeelDecorated(true);<newline46mondego><newline46mondego>        // Create the GUI on the event-dispatching thread<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                TranslucentWindowDemo tw = new TranslucentWindowDemo();<newline46mondego><newline46mondego>                // Set the window to 55% opaque (45% translucent).<newline46mondego>                tw.setOpacity(0.55f);<newline46mondego><newline46mondego>                // Display the window.<newline46mondego>                tw.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2933splitHere46","12061016splitHere46","Open Resource"
"2934splitHere46","12061016splitHere46","Switch Between Tabs"
"2935splitHere46","12061016splitHere46","Groups"
"2936splitHere46","12061016splitHere46","Execute"
"2937splitHere46","12061044splitHere46","validate()"
"2938splitHere46","12061052splitHere46","boolean root = someStr.matches(<doubleQuotes46>[A-Za-z]:[\\\\/].*<doubleQuotes46>);<newline46mondego>"
"2939splitHere46","12061156splitHere46","javac"
"2940splitHere46","12061156splitHere46","T"
"2941splitHere46","12061156splitHere46","X"
"2942splitHere46","12061156splitHere46","X"
"2943splitHere46","12061156splitHere46","T"
"2944splitHere46","12061156splitHere46","List<ThingA> a = handle(new ThingA());<newline46mondego>List<ThingA> b = handle(new ModifiedThingA());<newline46mondego>"
"2945splitHere46","12061156splitHere46","CAP#1"
"2946splitHere46","12061156splitHere46","T"
"2947splitHere46","12061156splitHere46","glb(BaseThing<CAP#1>) = BaseThing<CAP#1>"
"2948splitHere46","12061156splitHere46","X"
"2949splitHere46","12061156splitHere46","T"
"2950splitHere46","12061156splitHere46","T"
"2951splitHere46","12061156splitHere46","private <T extends BaseThing<T>> List<T> handle(BaseThing<? extends T> object) {<newline46mondego>    return new ArrayList<T>(object.getList());<newline46mondego>    // or (using guava's ImmutableList)<newline46mondego>    return ImmutableList.copyOf(object.getList());<newline46mondego>}<newline46mondego>"
"2952splitHere46","12061319splitHere46","x"
"2953splitHere46","12061319splitHere46","y"
"2954splitHere46","12061319splitHere46","array[y][x]"
"2955splitHere46","12061319splitHere46","n"
"2956splitHere46","12061319splitHere46","[y][x]"
"2957splitHere46","12061319splitHere46","[x][n - y]"
"2958splitHere46","12061319splitHere46","n = 17 - 1;<newline46mondego><newline46mondego>c = n / 2;<newline46mondego><newline46mondego>dx = x - c;<newline46mondego>dy = y - c;<newline46mondego><newline46mondego>nx = c - dy = c - (y - c) = 2 * c - y = n - y<newline46mondego>ny = c + dx = c + (x - c) = x<newline46mondego>"
"2959splitHere46","12061362splitHere46","DAO layer"
"2960splitHere46","12061362splitHere46","public class SomeDaoImpl implements SomeDaoInterface {<newline46mondego><newline46mondego>   public void someDaoMethod() throws Exception { <newline46mondego>      // code ...<newline46mondego><newline46mondego>      try {<newline46mondego>         // code<newline46mondego>      } catch(EmptyResultDataAccessException dataAccessException) {<newline46mondego>         // rethrow exception<newline46mondego>         throw new Exception(dataAccessException.toString()); // you can rethrow RuntimeException or Custom exceptions<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2961splitHere46","12061385splitHere46","Image picture = new Image(<doubleQuotes46>picture<doubleQuotes46>,<newline46mondego>                new ContextRelativeResource(<doubleQuotes46>images/races/<doubleQuotes46><newline46mondego>                        + dynamicPicture));<newline46mondego>"
"2962splitHere46","12061428splitHere46","boolean[][] newCells = cells.clone();<newline46mondego>"
"2963splitHere46","12061472splitHere46","ISO-8859-1"
"2964splitHere46","12061665splitHere46","TableViewer"
"2965splitHere46","12061665splitHere46","ContentProvider"
"2966splitHere46","12061714splitHere46","update"
"2967splitHere46","12061909splitHere46","[]"
"2968splitHere46","12061909splitHere46","|"
"2969splitHere46","12061909splitHere46","or"
"2970splitHere46","12061909splitHere46","exp(<doubleQuotes46>baba|bebe|bibi|bobo|bubu|fafa|fefe|fofo|fufu<doubleQuotes46>);<newline46mondego>"
"2971splitHere46","12061909splitHere46","exp(<doubleQuotes46>bibi|([bf][aeou])\\1<doubleQuotes46>);<newline46mondego>"
"2972splitHere46","12061933splitHere46","getAvailableLocales()"
"2973splitHere46","12061933splitHere46","new Locale( <doubleQuotes46>gd<doubleQuotes46>, <doubleQuotes46>GB<doubleQuotes46>)"
"2974splitHere46","12061933splitHere46","Locale"
"2975splitHere46","12061951splitHere46","ClientConnectionRequest connRequest = connMrg.requestConnection(<newline46mondego>        new HttpRoute(new HttpHost(<doubleQuotes46>localhost<doubleQuotes46>, 80)), null);<newline46mondego>ManagedClientConnection conn = connRequest.getConnection(10, TimeUnit.SECONDS);<newline46mondego>try {<newline46mondego>    BasicHttpRequest request = new BasicHttpRequest(<doubleQuotes46>GET<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>    conn.sendRequestHeader(request);<newline46mondego>    HttpResponse response = conn.receiveResponseHeader();<newline46mondego>    conn.receiveResponseEntity(response);<newline46mondego>    HttpEntity entity = response.getEntity();<newline46mondego>    if (entity != null) {<newline46mondego>        BasicManagedEntity managedEntity = new BasicManagedEntity(entity, conn, true);<newline46mondego>        // Replace entity<newline46mondego>        response.setEntity(managedEntity);<newline46mondego>    }<newline46mondego>    // Do something useful with the response<newline46mondego>    // The connection will be released automatically <newline46mondego>    // as soon as the response content has been consumed<newline46mondego>} catch (IOException ex) {<newline46mondego>    // Abort connection upon an I/O error.<newline46mondego>    conn.abortConnection();<newline46mondego>    throw ex;<newline46mondego>}<newline46mondego>"
"2976splitHere46","12061981splitHere46","static synchronized"
"2977splitHere46","12061981splitHere46","static"
"2978splitHere46","12061981splitHere46","private static final Object lock = new Object();<newline46mondego><newline46mondego> void yourMethod() {<newline46mondego>     synchronized (lock) {<newline46mondego>         // your code here<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"2979splitHere46","12062007splitHere46","<newline46mondego><newline46mondego>    import java.util.ArrayList;<newline46mondego>    import java.util.Collection;<newline46mondego>    import java.util.Date;<newline46mondego>    import java.util.List;<newline46mondego>    import java.util.concurrent.Callable;<newline46mondego>    import java.util.concurrent.CompletionService;<newline46mondego>    import java.util.concurrent.ExecutionException;<newline46mondego>    import java.util.concurrent.ExecutorCompletionService;<newline46mondego>    import java.util.concurrent.Executors;<newline46mondego>    import java.util.concurrent.Future;<newline46mondego>    import java.util.concurrent.TimeUnit;<newline46mondego><newline46mondego>    class TaskWorker implements Callable {<newline46mondego>        private final int number;<newline46mondego><newline46mondego>        public TaskWorker(int number) {<newline46mondego>            this.number = number;<newline46mondego>        }<newline46mondego><newline46mondego>        public Boolean call() throws InterruptedException {<newline46mondego>            while (!Thread.currentThread().isInterrupted()) {<newline46mondego>                myBusyFunction();<newline46mondego>            }<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        private boolean isValid() {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        private void myBusyFunction() {<newline46mondego>            //while (isValid()) {<newline46mondego>            System.out.println(number + <doubleQuotes46>>....Working.....<doubleQuotes46>);<newline46mondego>            //}<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public class Test {<newline46mondego>        public static void main(final String[] args) {<newline46mondego>            CompletionService cs = new ExecutorCompletionService(Executors.newFixedThreadPool(1));<newline46mondego>            Collection tasks = new ArrayList(10);<newline46mondego>            tasks.add(new TaskWorker(1));<newline46mondego>            List> futures = new ArrayList>(tasks.size());<newline46mondego>            try {<newline46mondego>                for (Callable task : tasks) {<newline46mondego>                    futures.add(cs.submit(task));<newline46mondego>                }<newline46mondego>                //----<newline46mondego>                for (int t = 0; t  result = cs.poll(10, TimeUnit.SECONDS);<newline46mondego>                    if (result == null) {<newline46mondego>                        System.out.println(new Date() + <doubleQuotes46>:Worker Timedout:<doubleQuotes46>);<newline46mondego>                        //So lets cancel the first futures we find that havent completed<newline46mondego>                        for (Future future : futures) {<newline46mondego>                            System.out.println(<doubleQuotes46>Checking future<doubleQuotes46>);<newline46mondego>                            if (future.isDone()) {<newline46mondego>                                continue;<newline46mondego>                            } else {<newline46mondego>                                future.cancel(true);<newline46mondego>                                System.out.println(<doubleQuotes46>Cancelled<doubleQuotes46>);<newline46mondego>                                break;<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                        continue;<newline46mondego>                    } else {<newline46mondego>                        try {<newline46mondego>                            if (result.isDone() && !result.isCancelled() && result.get()) {<newline46mondego>                                System.out.println(new Date() + <doubleQuotes46>:Worker Completed:<doubleQuotes46>);<newline46mondego>                            } else if (result.isDone() && !result.isCancelled() && !result.get()) {<newline46mondego>                                System.out.println(new Date() + <doubleQuotes46>:Worker Failed<doubleQuotes46>);<newline46mondego>                            }<newline46mondego>                        } catch (ExecutionException ee) {<newline46mondego>                            ee.printStackTrace(System.out);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } catch (InterruptedException ie) {<newline46mondego>            } finally {<newline46mondego>                //Cancel by interrupting any existing tasks currently running in Executor Service<newline46mondego>                for (Future f : futures) {<newline46mondego>                    f.cancel(true);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            System.out.println(new Date() + <doubleQuotes46>:Done<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>"
"2980splitHere46","12062226splitHere46","//footer.scala.html<newline46mondego><div id=<doubleQuotes46>footer<doubleQuotes46>><newline46mondego>  <div class=<doubleQuotes46>input-append<doubleQuotes46>><newline46mondego>    <form id=<doubleQuotes46>_form<doubleQuotes46> action=<doubleQuotes46>@routes.ApplicationController.saveSubscription<doubleQuotes46>><newline46mondego>      <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>emailAddress<doubleQuotes46> placeholder=<doubleQuotes46>Your Email<doubleQuotes46> /><newline46mondego>      <input id=<doubleQuotes46>_process<doubleQuotes46> class=<doubleQuotes46>btn<doubleQuotes46> type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Subscribe<doubleQuotes46> /><newline46mondego>      <img id=<doubleQuotes46>spinner<doubleQuotes46> src=<doubleQuotes46>/assets/img/loader.gif<doubleQuotes46> alt=<doubleQuotes46>loading...<doubleQuotes46> /><newline46mondego>    </form><newline46mondego>  </div><newline46mondego></div><newline46mondego><newline46mondego><div id=<doubleQuotes46>status<doubleQuotes46>><newline46mondego>  <div class=<doubleQuotes46>alert alert-error<doubleQuotes46>></div><newline46mondego></div><newline46mondego><style type=<doubleQuotes46>text/css<doubleQuotes46>><newline46mondego>  #spinner, #status { display: none; }<newline46mondego></style><newline46mondego><newline46mondego>//ApplicationController.java<newline46mondego>public class ApplicationController extends Controller {<newline46mondego>  public static Result saveSubscription() {<newline46mondego>    // save subscription<newline46mondego>    ...<newline46mondego>    // pseudo code<newline46mondego>    if(success) <newline46mondego>      Ok( i18n(<doubleQuotes46>subscription success<doubleQuotes46>).toJson() );<newline46mondego>    else<newline46mondego>      Conflict( i18n(<doubleQuotes46>subscription fail<doubleQuotes46>).toJson() );<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>//main.coffee<newline46mondego>jQuery -><newline46mondego>  $.ajaxSetup<newline46mondego>    type:     <doubleQuotes46>POST<doubleQuotes46><newline46mondego>    cache:    false<newline46mondego>    dataType: <doubleQuotes46>json<doubleQuotes46><newline46mondego><newline46mondego>  # prevent form submit on keypress<newline46mondego>  $('form').find('input').keypress (e) -> e.preventDefault() if(e.which == 13)<newline46mondego><newline46mondego>  jParse = (data) -> <newline46mondego>    try jQuery.parseJSON(data)<newline46mondego>    catch e<newline46mondego>      data<newline46mondego><newline46mondego>  jText = (data) -> jParse(data.responseText)<newline46mondego><newline46mondego>  toSuccess = (msg) -> <newline46mondego>    $('#status > div').removeClass('alert-error').addClass('alert-success')<newline46mondego>    $('#status > div').html( jParse(msg) )<newline46mondego>    $('#status').fadeIn()<newline46mondego><newline46mondego>  toFail = (data) -> <newline46mondego>    $('#status > div').html( jText(data) )<newline46mondego>    $('#status').fadeIn()<newline46mondego><newline46mondego>//subscribe.coffee<newline46mondego>jQuery -><newline46mondego>  $('#_process').click (e) -><newline46mondego>    e.preventDefault()<newline46mondego><newline46mondego>    isValid = $('#_form').validate().form() // assumes jQuery validation plugin<newline46mondego>    if isValid<newline46mondego>      $('#spinner').show()<newline46mondego>      $.ajax<newline46mondego>        data: $('#_form').serialize()<newline46mondego>        success: (msg) -><newline46mondego>          toSuccess(msg)<newline46mondego>          fade = () -> $('#status').fadeOut('slow')<newline46mondego>          setTimeout fade, 2000<newline46mondego><newline46mondego>        error: (data) -> toFail(data)<newline46mondego><newline46mondego>        complete: () -> $('#spinner').hide()<newline46mondego>"
"2981splitHere46","12062269splitHere46","float angle; //angle in radians<newline46mondego>float droneX = drone.getRadius() * Math.sin(angle); <newline46mondego>float droneY = drone.getRadius() * Math.cos(angle);<newline46mondego>"
"2982splitHere46","12062538splitHere46","class one{<newline46mondego> Integer b;<newline46mondego> {<newline46mondego>    b=Integer.valueOf(2);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"2983splitHere46","12062538splitHere46","super()"
"2984splitHere46","12062538splitHere46","static { }"
"2985splitHere46","12062538splitHere46","class one{<newline46mondego> static final Integer b;<newline46mondego><newline46mondego> static {<newline46mondego>    b=Integer.valueOf(2);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"2986splitHere46","12062758splitHere46","System.Drawing.dll"
"2987splitHere46","12062758splitHere46","Vector2"
"2988splitHere46","12062758splitHere46","Dimension"
"2989splitHere46","12062758splitHere46","Vector2"
"2990splitHere46","12062827splitHere46","Project project = new Project();<newline46mondego>project.setName(<doubleQuotes46>myproject<doubleQuotes46>);<newline46mondego>project.init();<newline46mondego><newline46mondego>Target target = new Target();<newline46mondego>target.setName(<doubleQuotes46>junitreport<doubleQuotes46>);<newline46mondego>project.addTarget(target);<newline46mondego><newline46mondego>FileSet fs = new FileSet();<newline46mondego>fs.setDir(new File(<doubleQuotes46>./junitreports<doubleQuotes46>));<newline46mondego>fs.createInclude().setName(<doubleQuotes46>*.xml<doubleQuotes46>);<newline46mondego>XMLResultAggregator aggregator = new XMLResultAggregator();<newline46mondego>aggregator.setProject(project);<newline46mondego>aggregator.addFileSet(fs);<newline46mondego>AggregateTransformer transformer = aggregator.createReport();<newline46mondego>transformer.setTodir(new File(<doubleQuotes46>./testreport<doubleQuotes46>));<newline46mondego><newline46mondego>target.addTask(aggregator);<newline46mondego>project.executeTarget(<doubleQuotes46>junitreport<doubleQuotes46>);<newline46mondego>"
"2991splitHere46","12062870splitHere46","TileSelection t = new TileSelection();<newline46mondego>    System.out.println(t.jk);<newline46mondego>"
"2992splitHere46","12062870splitHere46","TileSelection"
"2993splitHere46","12062870splitHere46","jk"
"2994splitHere46","12062870splitHere46","patternList.setSelectedIndex(0);//sets first option in combobox to default value<newline46mondego>jk=(String) patternList.getSelectedItem();<newline46mondego>"
"2995splitHere46","12062870splitHere46","TileSelection"
"2996splitHere46","12062870splitHere46","public void TileSelection(){<newline46mondego>}<newline46mondego>"
"2997splitHere46","12062870splitHere46","void"
"2998splitHere46","12062870splitHere46","TileSelection t = new TileSelection();"
"2999splitHere46","12062870splitHere46","jk"
"3000splitHere46","12062870splitHere46","null"
"3001splitHere46","12062870splitHere46","void"
"3002splitHere46","12062870splitHere46","TileSelection t = new TileSelection().TileSelection(); <newline46mondego>"
"3003splitHere46","12062870splitHere46","TileSelection t = new TileSelection();<newline46mondego>"
"3004splitHere46","12062870splitHere46","TileSelection"
"3005splitHere46","12062870splitHere46","System.out.println(t.jk);<newline46mondego>"
"3006splitHere46","12062870splitHere46","public"
"3007splitHere46","12062967splitHere46","protected int getLineNumber(int modelPos) throws BadLocationException {<newline46mondego><newline46mondego>    return textArea.getLineOfOffset(modelPos) + 1;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>Rectangle viewRect = scrollPane.getViewport().getViewRect();<newline46mondego><newline46mondego>Point startPoint = viewRect.getLocation();<newline46mondego>int pos = textArea.viewToModel(startPoint);<newline46mondego><newline46mondego>try {<newline46mondego><newline46mondego>    int startLine = getLineNumber(pos);<newline46mondego><newline46mondego>    Point endPoint = startPoint;<newline46mondego>    endPoint.y += viewRect.height;<newline46mondego><newline46mondego>    pos = textArea.viewToModel(endPoint);<newline46mondego>    int endLine = getLineNumber(pos);<newline46mondego><newline46mondego>    System.out.println(startLine + <doubleQuotes46> - <doubleQuotes46> + endLine);<newline46mondego><newline46mondego>} catch (BadLocationException exp) {<newline46mondego>}<newline46mondego>"
"3008splitHere46","12063014splitHere46","enum"
"3009splitHere46","12063014splitHere46","enum"
"3010splitHere46","12063132splitHere46","DataSource"
"3011splitHere46","12063132splitHere46","SelectItem"
"3012splitHere46","12063132splitHere46","ListGridField"
"3013splitHere46","12063132splitHere46","CellFormatter"
"3014splitHere46","12063244splitHere46","@RequestMapping(value=<doubleQuotes46>value/{someVal}<doubleQuotes46>)<newline46mondego>public void handleBooleanParameter(@PathVariable(<doubleQuotes46>someVal<doubleQuotes46>)boolean someVal){<newline46mondego>   //do something<newline46mondego>}<newline46mondego>"
"3015splitHere46","12063244splitHere46","http://<base url>/value/true<newline46mondego>"
"3016splitHere46","12063244splitHere46","http://<base url>/value/false<newline46mondego>"
"3017splitHere46","12063251splitHere46","MyClass myClass = new MyClass();<newline46mondego>Class objClass = myClass.getClass();<newline46mondego>Set<Method> getMethods = new HashSet<Method>();<newline46mondego><newline46mondego>for (Method method : objClass.getMethods()) {<newline46mondego>    if(method.getName().contains(<doubleQuotes46>getVar<doubleQuotes46>)) {<newline46mondego>        getMethods.add(method);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3018splitHere46","12063311splitHere46","ExternalContext#redirect()"
"3019splitHere46","12063311splitHere46","public void doRedirect() throws IOException {<newline46mondego>    FacesContext.getCurrentInstance().getExternalContext().redirect(<doubleQuotes46>newlocation<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3020splitHere46","12063311splitHere46","public void doRedirect() throws IOException {<newline46mondego>    ExternalContext ec = FacesContext.getCurrentInstance().getExternalContext();<newline46mondego>    ec.redirect(ec.getRequestContextPath() + <doubleQuotes46>/newlocation<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3021splitHere46","12063333splitHere46","Entity"
"3022splitHere46","12063427splitHere46","private ServerHandler serverH;<newline46mondego>"
"3023splitHere46","12063427splitHere46","serverH = new ServerHandler();<newline46mondego>"
"3024splitHere46","12063454splitHere46","GroovyShell shell = new GroovyShell();<newline46mondego>Script script = (Script)shell.parse(new FileReader(<doubleQuotes46>x.groovy<doubleQuotes46>));<newline46mondego>Method[] methods = script.getClass().getMethods();<newline46mondego>"
"3025splitHere46","12063454splitHere46","method"
"3026splitHere46","12063552splitHere46","public class MainWindow extends JFrame{<newline46mondego><newline46mondego>    public MainWindow(){<newline46mondego>        JPanel central = new JPanel();<newline46mondego>        // I assume you define your other 5 panels here<newline46mondego>        getContentPane().add(north, BorderLayout.CENTER);<newline46mondego>        registerRefreshAction();<newline46mondego>    }<newline46mondego><newline46mondego>    private void registerRefreshAction(){<newline46mondego>        javax.swing.Action refresh = new AbstractAction() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent ae) {<newline46mondego>                JFrame frame = (JFrame) getTopLevelAncestor();<newline46mondego>                frame.setVisible(false);<newline46mondego>                frame.getContentPane().repaint();<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        };<newline46mondego>        KeyStroke keyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0);<newline46mondego>        getContentPane().getActionMap().put(<doubleQuotes46>Refresh<doubleQuotes46>, refresh);<newline46mondego>        getContentPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(keyStroke, <doubleQuotes46>Refresh<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3027splitHere46","12063595splitHere46","attribute1"
"3028splitHere46","12063595splitHere46","childElement"
"3029splitHere46","12063664splitHere46","Ball"
"3030splitHere46","12063664splitHere46","public void setLocation(int x, int y) {<newline46mondego>   mx1 = x;<newline46mondego>   my1 = y;<newline46mondego>}<newline46mondego>"
"3031splitHere46","12063664splitHere46","ball.setLocation(mx, my); <newline46mondego>"
"3032splitHere46","12063664splitHere46","MouseListener"
"3033splitHere46","12063664splitHere46","Ball"
"3034splitHere46","12063683splitHere46","Expression<T>"
"3035splitHere46","12063683splitHere46","CriteriaBuilder.equal(Expression<?> x, java.lang.Object y)"
"3036splitHere46","12063683splitHere46","Expression<?>"
"3037splitHere46","12063683splitHere46","CriteriaBuiler"
"3038splitHere46","12063683splitHere46","CriteriaBuilder.ge(Expression<? extends java.lang.Number> x, Expression<? extends java.lang.Number> y)"
"3039splitHere46","12063683splitHere46","CriteriaBuilder.equal(Expression<T> x, T y)"
"3040splitHere46","12063777splitHere46","Bundle args = new Bundle();<newline46mondego>args.putLong(<doubleQuotes46>key<doubleQuotes46>, value);<newline46mondego>yourFragment.setArguments(args);<newline46mondego>"
"3041splitHere46","12063777splitHere46","Type value = getArguments().getType(<doubleQuotes46>key<doubleQuotes46>);<newline46mondego>"
"3042splitHere46","12063907splitHere46","List<WebElement> allElements = driver.findElements(By.xpath(<doubleQuotes46>//*<doubleQuotes46>));<newline46mondego>"
"3043splitHere46","12063907splitHere46","List<WebElement> allElements = driver.findElements(By.cssSelector(<doubleQuotes46>*<doubleQuotes46>));<newline46mondego>"
"3044splitHere46","12063923splitHere46",".zipWithIndex"
"3045splitHere46","12063923splitHere46","scala> List(<doubleQuotes46>foo<doubleQuotes46>,<doubleQuotes46>bar<doubleQuotes46>)<newline46mondego>res0: List[java.lang.String] = List(foo, bar)<newline46mondego><newline46mondego>scala> for((x,i) <- res0.zipWithIndex) println(i + <doubleQuotes46> : <doubleQuotes46> +x)<newline46mondego>0 : foo<newline46mondego>1 : bar<newline46mondego>"
"3046splitHere46","12063923splitHere46","hasNext"
"3047splitHere46","12063923splitHere46","next()"
"3048splitHere46","12063923splitHere46","var counter = 0<newline46mondego>while (lines.hasNext) {<newline46mondego>  val line = lines.next()<newline46mondego>  if(counter % 100 == 0) {<newline46mondego>    // now write to another file<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3049splitHere46","12063923splitHere46","lines.grouped(100).foreach(l => l.foreach(/* write line to file*/))<newline46mondego>"
"3050splitHere46","12064501splitHere46","JFrame"
"3051splitHere46","12064501splitHere46","JLabel picLabel = new JLabel();<newline46mondego>theGUI.add(picLabel);<newline46mondego>while (true) <newline46mondego>{<newline46mondego>    BufferedImage screenShot = robot.createScreenCapture(new Rectangle(1280,720));<newline46mondego>    picLabel.setIcon(new ImageIcon(screenShot));   <newline46mondego><newline46mondego>}<newline46mondego>"
"3052splitHere46","12064501splitHere46","Graphics"
"3053splitHere46","12064501splitHere46","JLabel"
"3054splitHere46","12064501splitHere46","paintComponent"
"3055splitHere46","12064501splitHere46","public class ScreenShotPanel extends JLabel<newline46mondego>{<newline46mondego><newline46mondego>    @override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        BufferedImage screenShot = robot.createScreenCapture(new Rectangle(1280,720));<newline46mondego>        g.drawImage(screenShot,0,0,this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3056splitHere46","12064718splitHere46","PreparedStatement#setTimestamp()"
"3057splitHere46","12064718splitHere46","TIMESTAMP/DATETIME"
"3058splitHere46","12064718splitHere46","setDate()"
"3059splitHere46","12064718splitHere46","DATE"
"3060splitHere46","12064718splitHere46","String sql = <doubleQuotes46>INSERT INTO<doubleQuotes46><newline46mondego>    + <doubleQuotes46> APP.TRUMPS (TRUMPID, DEPART, ARRIVE, START, PLACES, PROPOSING_USER_LOGIN, CLOSING_HOURS)<doubleQuotes46><newline46mondego>    + <doubleQuotes46> VALUES (?, ?, ?, ?, ?, ?, ?)<doubleQuotes46>;<newline46mondego>// ...<newline46mondego><newline46mondego>PreparedStatement preparedStatement = null;<newline46mondego>// ...<newline46mondego><newline46mondego>try {<newline46mondego>    // ...<newline46mondego>    preparedStatement = connection.prepareStatement(sql);<newline46mondego>    preparedStatement.setString(1, newTrampTrumpistClient.login+dateForm.getText()+timeForm.getText());<newline46mondego>    preparedStatement.setString(2, from);<newline46mondego>    preparedStatement.setString(3, to);<newline46mondego>    preparedStatement.setTimestamp(4, new Timestamp(calendar.getTimeInMillis()));<newline46mondego>    preparedStatement.setInt(5, places);<newline46mondego>    preparedStatement.setString(6, newTrampTrumpistClient.login);<newline46mondego>    preparedStatement.setInt(7, closinghours);<newline46mondego>    preparedStatement.executeUpdate();<newline46mondego>    // ...<newline46mondego>} finally {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"3061splitHere46","12064718splitHere46","String"
"3062splitHere46","12064718splitHere46","Calendar"
"3063splitHere46","12064718splitHere46","SimpleDateFormat"
"3064splitHere46","12064718splitHere46","String"
"3065splitHere46","12064718splitHere46","Date"
"3066splitHere46","12064718splitHere46","new Timestamp(date.getTime())"
"3067splitHere46","12064723splitHere46","frame.pack()"
"3068splitHere46","12064794splitHere46","JScrollPane"
"3069splitHere46","12064794splitHere46","JTable"
"3070splitHere46","12064794splitHere46","JTableHeader"
"3071splitHere46","12064794splitHere46","JTableHeader"
"3072splitHere46","12064794splitHere46","BorderLayout"
"3073splitHere46","12064794splitHere46","JTableHeader"
"3074splitHere46","12064794splitHere46","South"
"3075splitHere46","12064794splitHere46","North"
"3076splitHere46","12064808splitHere46","private String enterToken(String tokenSymbol, String inputString, int column) {<newline46mondego>    int colWidth = inputString.length() / 7;<newline46mondego>    int tokenPos = (column-1) * colWidth;<newline46mondego>    String inputStart = inputString.substring(0, tokenPos);<newline46mondego>    String inputEnd = inputString.substring(tokenPos+1);<newline46mondego>    return inputStart + tokenSymbol+inputEnd;<newline46mondego>}<newline46mondego>"
"3077splitHere46","12064974splitHere46","windowClosing"
"3078splitHere46","12064974splitHere46","void windowClosing(WindowEvent e)"
"3079splitHere46","12064974splitHere46","f.setVisible(false);<newline46mondego>f.dispose();<newline46mondego>"
"3080splitHere46","12065012splitHere46","python -u someFileName.py<newline46mondego>"
"3081splitHere46","12065013splitHere46","int nextNode = this.getUnvisitedAdjacentNode(stack.peek().index);<newline46mondego>"
"3082splitHere46","12065013splitHere46","int nextNode = this.getUnvisitedAdjacentNode(this.nodeList.indexOf(stack.peek()));<newline46mondego>"
"3083splitHere46","12065040splitHere46","users@ejb-spec.java.net"
"3084splitHere46","12065040splitHere46","EJBContext"
"3085splitHere46","12065149splitHere46","POST"
"3086splitHere46","12065149splitHere46","GET"
"3087splitHere46","12065149splitHere46","Content-Type"
"3088splitHere46","12065149splitHere46","connection.setDoOutput(true)"
"3089splitHere46","12065149splitHere46","DataOutputStream"
"3090splitHere46","12065162splitHere46","<form>"
"3091splitHere46","12065162splitHere46","<input>"
"3092splitHere46","12065290splitHere46","public class GSONClass {<newline46mondego>    private Response json;<newline46mondego><newline46mondego>    public static class Response {<newline46mondego>        private String[] errors;<newline46mondego>        private Data data;<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Data {<newline46mondego>        private String modhash = <doubleQuotes46>hi<doubleQuotes46>;<newline46mondego>        private String cookie;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3093splitHere46","12065290splitHere46","import com.google.gson.Gson;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String response = <doubleQuotes46>{\<doubleQuotes46>json\<doubleQuotes46>: {\<doubleQuotes46>errors\<doubleQuotes46>: [], \<doubleQuotes46>data\<doubleQuotes46>: {\<doubleQuotes46>modhash\<doubleQuotes46>: \<doubleQuotes46>dosiom5o6abbbb758729039f04762a05778db4aeeeacd8eb4a\<doubleQuotes46>, \<doubleQuotes46>cookie\<doubleQuotes46>: \<doubleQuotes46>14756159,2012-08-21T12:05:05,0971bdec35d71af4073cf56ad82fb0ae7c5fe2d1\<doubleQuotes46>}}}<doubleQuotes46>;<newline46mondego>        GSONClass target = new Gson().fromJson(response, GSONClass.class);<newline46mondego>        System.out.println(target);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3094splitHere46","12065386splitHere46","ViewDeclarationLanguage#buildView()"
"3095splitHere46","12065386splitHere46","context.getApplication().getViewHandler()<newline46mondego>    .getViewDeclarationLanguage(context, viewId).buildView(context, viewRoot);<newline46mondego>"
"3096splitHere46","12065386splitHere46","ViewHandlerWrapper"
"3097splitHere46","12065474splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import javax.swing.AbstractAction;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.WindowConstants;<newline46mondego>import org.jfree.chart.ChartFactory;<newline46mondego>import org.jfree.chart.ChartPanel;<newline46mondego>import org.jfree.chart.JFreeChart;<newline46mondego>import org.jfree.chart.axis.ValueAxis;<newline46mondego>import org.jfree.chart.plot.XYPlot;<newline46mondego>import org.jfree.data.time.Day;<newline46mondego>import org.jfree.data.time.TimePeriodValues;<newline46mondego>import org.jfree.data.time.TimePeriodValuesCollection;<newline46mondego><newline46mondego>/**<newline46mondego> * @see http://stackoverflow.com/a/12065474/230513<newline46mondego> */<newline46mondego>public class DisappearingTest {<newline46mondego><newline46mondego>    private static ChartPanel chartPanel;<newline46mondego>    private static ValueAxis range;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                buildFrame();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private static void buildFrame() {<newline46mondego>        JFrame f = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>        f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);<newline46mondego>        initChartPanel();<newline46mondego>        f.add(chartPanel, BorderLayout.CENTER);<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.add(new JButton(new AbstractAction(<doubleQuotes46>Reset<doubleQuotes46>) {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                chartPanel.restoreAutoBounds();<newline46mondego>                range.setLowerBound(0);<newline46mondego>                range.setUpperBound(1);<newline46mondego>            }<newline46mondego>        }));<newline46mondego>        f.add(panel, BorderLayout.SOUTH);<newline46mondego>        f.pack();<newline46mondego>        f.setLocationRelativeTo(null);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    static void initChartPanel() {<newline46mondego>        TimePeriodValues values = new TimePeriodValues(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>        values.add(new Day(1, 1, 2012), 0.2);<newline46mondego>        values.add(new Day(2, 1, 2012), 0.2);<newline46mondego>        values.add(new Day(3, 1, 2012), 0.8);<newline46mondego>        values.add(new Day(1, 2, 2012), 0.8);<newline46mondego>        TimePeriodValuesCollection data = new TimePeriodValuesCollection();<newline46mondego>        data.addSeries(values);<newline46mondego>        JFreeChart chart = ChartFactory.createTimeSeriesChart(<newline46mondego>            <doubleQuotes46>Title<doubleQuotes46>, <doubleQuotes46>Time<doubleQuotes46>, <doubleQuotes46>Value<doubleQuotes46>, data, true, true, false);<newline46mondego>        XYPlot plot = chart.getXYPlot();<newline46mondego>        plot.setDomainPannable(true);<newline46mondego>        range = plot.getRangeAxis();<newline46mondego>        range.setLowerBound(0);<newline46mondego>        range.setUpperBound(1);<newline46mondego>        chartPanel = new ChartPanel(chart);<newline46mondego>        chartPanel.setMouseWheelEnabled(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3098splitHere46","12065491splitHere46","prepareStatement()"
"3099splitHere46","12065491splitHere46","java.sql.PreparedStatement"
"3100splitHere46","12065491splitHere46","com.mysql.jdbc.PreparedStatement"
"3101splitHere46","12065491splitHere46","java.sql.PreparedStatement"
"3102splitHere46","12065491splitHere46","java.sql"
"3103splitHere46","12065537splitHere46","PreparedStatement.setObject(...)"
"3104splitHere46","12065537splitHere46","PreparedStatement.setObject()"
"3105splitHere46","12065537splitHere46","Types.ARRAY"
"3106splitHere46","12065537splitHere46","Array"
"3107splitHere46","12065537splitHere46","java.sql.Array"
"3108splitHere46","12065537splitHere46","Array"
"3109splitHere46","12065537splitHere46","byte[]"
"3110splitHere46","12065537splitHere46","A Java array may be passed as an input parameter by calling the method<newline46mondego>PreparedSatement.setObject.<newline46mondego>"
"3111splitHere46","12065537splitHere46","Array"
"3112splitHere46","12065537splitHere46","Array"
"3113splitHere46","12065537splitHere46","String[]"
"3114splitHere46","12065537splitHere46","java.sql.Array"
"3115splitHere46","12065537splitHere46","Connection.createArrayOf(...)"
"3116splitHere46","12065537splitHere46","@Array"
"3117splitHere46","12065537splitHere46","Array sqlArray = conn.createArrayOf(<doubleQuotes46>text<doubleQuotes46>, strArray);<newline46mondego>    pstmt.setArray(1, sqlArray);<newline46mondego>    pstmt.executeUpdate();<newline46mondego>"
"3118splitHere46","12065537splitHere46","conn"
"3119splitHere46","12065537splitHere46","pstmt"
"3120splitHere46","12065537splitHere46","java.sql.Connection"
"3121splitHere46","12065537splitHere46","PreparedStatement"
"3122splitHere46","12065537splitHere46","strArray"
"3123splitHere46","12065537splitHere46","String[]"
"3124splitHere46","12065537splitHere46","createArrayOf"
"3125splitHere46","12065537splitHere46","java.sql.Types"
"3126splitHere46","12065537splitHere46","VARCHAR"
"3127splitHere46","12065537splitHere46","text"
"3128splitHere46","12065537splitHere46","org/postgresql/test/jdbc2/ArrayTest.java"
"3129splitHere46","12065537splitHere46","ArrayTest.testSetArray()"
"3130splitHere46","12065537splitHere46","pstmt.setObject(1, arr);<newline46mondego>    pstmt.executeUpdate();<newline46mondego>"
"3131splitHere46","12065537splitHere46","arr"
"3132splitHere46","12065537splitHere46","java.sql.Array"
"3133splitHere46","12065537splitHere46","int[]"
"3134splitHere46","12065712splitHere46","doc.createElement"
"3135splitHere46","12065712splitHere46","Element person=document.createElement(<doubleQuotes46>Person<doubleQuotes46>);<newline46mondego>person.setAttribute(<doubleQuotes46>ID<doubleQuotes46>, String.valueOf(i+1)); // to add attribute<newline46mondego>Element pantsColor=doc.createElement(<doubleQuotes46>PantsColor<doubleQuotes46>);<newline46mondego>Element shirtColor=doc.createElement(<doubleQuotes46>ShirtColor<doubleQuotes46>);<newline46mondego>pantsColor.appendChild(doc.createTextNode(in));<newline46mondego>person.appendChild(pantsColor);<newline46mondego>person.appendChild(shirtColor);<newline46mondego>root.appendChild(person);<newline46mondego>...<newline46mondego>"
"3136splitHere46","12065712splitHere46","doc"
"3137splitHere46","12065712splitHere46","TransformerFactory transFactory=TransformerFactory.newInstance();<newline46mondego>Transformer trans=transFactory.newTransformer();<newline46mondego><newline46mondego>trans.setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>trans.setOutputProperty(<doubleQuotes46>{http://xml.apache.org/xslt}indent-amount<doubleQuotes46>, <doubleQuotes46>5<doubleQuotes46>);<newline46mondego><newline46mondego>trans.transform(new DOMSource(doc),new StreamResult(<doubleQuotes46>c:\\file.xml<doubleQuotes46>));<newline46mondego>"
"3138splitHere46","12065789splitHere46","~"
"3139splitHere46","12065789splitHere46","File"
"3140splitHere46","12065789splitHere46","s = s.replace(<doubleQuotes46>~<doubleQuotes46>,System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>));<newline46mondego>"
"3141splitHere46","12065881splitHere46","ReadXMLFile.getString"
"3142splitHere46","12065881splitHere46","ReadXMLFile.getString()"
"3143splitHere46","12065881splitHere46","final byte[] data = Base64.decode(ReadXMLFile.getString().getBytes());<newline46mondego>sig.update(data);<newline46mondego>boolean verifies = sig.verify(data);<newline46mondego>"
"3144splitHere46","12065881splitHere46","Signature.update"
"3145splitHere46","12065881splitHere46","Signature.verify"
"3146splitHere46","12065881splitHere46","verify"
"3147splitHere46","12065881splitHere46","sig.verify(Base64.decode(sign))"
"3148splitHere46","12065881splitHere46","pub.arm"
"3149splitHere46","12066094splitHere46","start"
"3150splitHere46","12066094splitHere46","end"
"3151splitHere46","12066094splitHere46","i"
"3152splitHere46","12066094splitHere46","start"
"3153splitHere46","12066094splitHere46","j"
"3154splitHere46","12066094splitHere46","if (i - start > 1) {<newline46mondego>        _sort(start, i);<newline46mondego>    }<newline46mondego>    if (end - i > 1) {<newline46mondego>        _sort(i, end);<newline46mondego>    }<newline46mondego>"
"3155splitHere46","12066094splitHere46","if (j > start) {<newline46mondego>        _sort(start, j);<newline46mondego>    }<newline46mondego>    if (end > i) {<newline46mondego>        _sort(i, end);<newline46mondego>    }<newline46mondego>"
"3156splitHere46","12066094splitHere46","i"
"3157splitHere46","12066094splitHere46","j"
"3158splitHere46","12066094splitHere46","// here ----v<newline46mondego>        if (i <= j) {<newline46mondego>            int t = arr[i];<newline46mondego>            arr[i] = arr[j];<newline46mondego>            arr[j] = t;<newline46mondego>            i++;<newline46mondego>            j--;<newline46mondego>        }<newline46mondego>"
"3159splitHere46","12066222splitHere46","Application"
"3160splitHere46","12066222splitHere46","run-now"
"3161splitHere46","12066367splitHere46","GWT.create(MyClientBundle.class)"
"3162splitHere46","12066620splitHere46","getArray()[i++]"
"3163splitHere46","12066620splitHere46","null"
"3164splitHere46","12066620splitHere46","NullPointerException"
"3165splitHere46","12066620splitHere46","getArray()[i++][i++]"
"3166splitHere46","12066620splitHere46","i++"
"3167splitHere46","12066620splitHere46","ArrayAccess:<newline46mondego>    ExpressionName [ Expression ]<newline46mondego>    PrimaryNoNewArray [ Expression ]<newline46mondego>"
"3168splitHere46","12066620splitHere46","null"
"3169splitHere46","12066620splitHere46","NullPointerException"
"3170splitHere46","12066620splitHere46","length"
"3171splitHere46","12066620splitHere46","ArrayIndexOutOfBoundsException"
"3172splitHere46","12066620splitHere46","int[][]"
"3173splitHere46","12066620splitHere46","int[]"
"3174splitHere46","12066620splitHere46","i++"
"3175splitHere46","12066620splitHere46","getArray()"
"3176splitHere46","12066620splitHere46","i++"
"3177splitHere46","12066620splitHere46","getArray()[i++][i++]"
"3178splitHere46","12066620splitHere46","getArray()[i++]"
"3179splitHere46","12066620splitHere46","getArray()"
"3180splitHere46","12066620splitHere46","null"
"3181splitHere46","12066620splitHere46","i++"
"3182splitHere46","12066620splitHere46","i"
"3183splitHere46","12066620splitHere46","NullPointerException"
"3184splitHere46","12066620splitHere46","i++"
"3185splitHere46","12066620splitHere46","i"
"3186splitHere46","12066748splitHere46","java.swingx.Timer"
"3187splitHere46","12066748splitHere46","ActionPerformed"
"3188splitHere46","12066748splitHere46","EDT"
"3189splitHere46","12066748splitHere46","captureThread.getTempBuffer"
"3190splitHere46","12066748splitHere46","// Samples is a 2D int array (int[][]), where the first index is the channel, the second is the sample for that channel<newline46mondego>if (samples != null) {<newline46mondego><newline46mondego>    Graphics2D g2d = (Graphics2D) g;<newline46mondego><newline46mondego>    int length = samples[0].length;<newline46mondego><newline46mondego>    int width = getWidth() - 1;<newline46mondego>    int height = getHeight() - 1;<newline46mondego><newline46mondego>    int oldX = 0;<newline46mondego>    int oldY = height / 2;<newline46mondego>    int frame = 0;<newline46mondego><newline46mondego>    // min, max is the min/max range of the samples, ie the highest and lowest samples<newline46mondego>    int range = max + (min * -2);<newline46mondego>    float scale = (float) height / (float) range;<newline46mondego><newline46mondego>    int minY = Math.round(((height / 2) + (min * scale)));<newline46mondego>    int maxY = Math.round(((height / 2) + (max * scale)));<newline46mondego><newline46mondego>    LinearGradientPaint lgp = new LinearGradientPaint(<newline46mondego>            new Point2D.Float(0, minY),<newline46mondego>            new Point2D.Float(0, maxY),<newline46mondego>            new float[]{0f, 0.5f, 1f},<newline46mondego>            new Color[]{Color.BLUE, Color.RED, Color.BLUE});<newline46mondego>    g2d.setPaint(lgp);<newline46mondego>    for (int sample : samples[0]) {<newline46mondego><newline46mondego>        if (sample % 64 == 0) {<newline46mondego><newline46mondego>            int x = Math.round(((float) frame / (float) length) * width);<newline46mondego>            int y = Math.round((height / 2) + (sample * scale));<newline46mondego><newline46mondego>            g2d.drawLine(oldX, oldY, x, y);<newline46mondego><newline46mondego>            oldX = x;<newline46mondego>            oldY = y;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        frame++;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3191splitHere46","12066748splitHere46","AudioStream"
"3192splitHere46","12066754splitHere46","N"
"3193splitHere46","12066754splitHere46","id.length"
"3194splitHere46","12066835splitHere46","int no=101;<newline46mondego>    int no1;<newline46mondego>try<newline46mondego>        {<newline46mondego>           dbStatement = con.createStatement();<newline46mondego>           dbResult= dbStatement.executeQuery(<doubleQuotes46>select payslip_no from tbl_add_payroll ORDER BY  payslip_no  DESC LIMIT 1<doubleQuotes46>);<newline46mondego><newline46mondego>          if(dbResult.next()==false)<newline46mondego>          {<newline46mondego>               jTextField3.setText(String.valueOf(no));<newline46mondego><newline46mondego>          }<newline46mondego>         else<newline46mondego>          {         <newline46mondego>            dbResult= dbStatement.executeQuery(<doubleQuotes46>select payslip_no from tbl_add_payroll ORDER BY payslip_no DESC LIMIT 1<doubleQuotes46>);      <newline46mondego>                    while(dbResult.next())<newline46mondego><newline46mondego>                           {<newline46mondego>                           deptno=dbResult.getInt(<doubleQuotes46>payslip_no<doubleQuotes46>);<newline46mondego><newline46mondego>                             }<newline46mondego><newline46mondego><newline46mondego>                             no1=deptno+1;<newline46mondego>                             jTextField3.setText(String.valueOf(no1));<newline46mondego>          }<newline46mondego><newline46mondego><newline46mondego>     }catch(Exception E)<newline46mondego>     {<newline46mondego><newline46mondego>     }<newline46mondego>"
"3195splitHere46","12066998splitHere46","java.lang"
"3196splitHere46","12066998splitHere46","stdlib.jar"
"3197splitHere46","12066998splitHere46","stdlib.jar"
"3198splitHere46","12066998splitHere46","stdlib.jar"
"3199splitHere46","12067022splitHere46","private static final StringBuffer appendParsedText( StringBuffer parsedText, String snippet )<newline46mondego>{<newline46mondego>    if ( parsedText.length() > 0 )<newline46mondego>    {<newline46mondego>        return parsedText.append( <doubleQuotes46>, <doubleQuotes46> + snippet );<newline46mondego>    }<newline46mondego>    return parsedText.append( snippet );<newline46mondego>}<newline46mondego><newline46mondego>public static final String parseAccess( final String text )<newline46mondego>{<newline46mondego>    StringBuffer parsedText = new StringBuffer();<newline46mondego><newline46mondego>    if ( text.contains( <doubleQuotes46>string1<doubleQuotes46> ) )<newline46mondego>    {<newline46mondego>        parsedText = appendParsedText( parsedText, <doubleQuotes46>string1<doubleQuotes46> );<newline46mondego>    }<newline46mondego><newline46mondego>    if ( text.contains( <doubleQuotes46>string2<doubleQuotes46> ) )<newline46mondego>    {<newline46mondego>        parsedText = appendParsedText( parsedText, <doubleQuotes46>string2<doubleQuotes46> );<newline46mondego>    }<newline46mondego><newline46mondego>    if ( text.contains( <doubleQuotes46>string3<doubleQuotes46> ) )<newline46mondego>    {<newline46mondego>        parsedText = appendParsedText( parsedText, <doubleQuotes46>string3<doubleQuotes46> );<newline46mondego>    }<newline46mondego><newline46mondego>    return parsedText.toString();<newline46mondego>}<newline46mondego>"
"3200splitHere46","12067048splitHere46","JTable table = ...;<newline46mondego>JFrame frame = ...;<newline46mondego>JPanel contentPane = new JPanel( new BorderLayout() );<newline46mondego>contentPane.add( new JScrollPane( table ), BorderLayout.CENTER );<newline46mondego>frame.setContentPane( contentPane );<newline46mondego>"
"3201splitHere46","12067048splitHere46","JTable"
"3202splitHere46","12067048splitHere46","JFrame"
"3203splitHere46","12067048splitHere46","JTable"
"3204splitHere46","12067048splitHere46","JFrame"
"3205splitHere46","12067048splitHere46","JTable"
"3206splitHere46","12067048splitHere46","JScrollPane"
"3207splitHere46","12067048splitHere46","JScrollPane"
"3208splitHere46","12067048splitHere46","JFrame"
"3209splitHere46","12067048splitHere46","JScrollPane"
"3210splitHere46","12067064splitHere46","<your JDK folder>\src.zip"
"3211splitHere46","12067081splitHere46","new Throwable().printStackTrace()"
"3212splitHere46","12067081splitHere46","public ConTest()<newline46mondego>{<newline46mondego>    super();<newline46mondego>    new Throwable().printStackTrace(); // you will not see super() (Object.<init>) in this stack trace.<newline46mondego>}<newline46mondego>"
"3213splitHere46","12067133splitHere46","Random.nextInt"
"3214splitHere46","12067133splitHere46","Random"
"3215splitHere46","12067133splitHere46","randomLevel"
"3216splitHere46","12067133splitHere46","randomLevel"
"3217splitHere46","12067133splitHere46","0"
"3218splitHere46","12067133splitHere46","1"
"3219splitHere46","12067133splitHere46","2"
"3220splitHere46","12067133splitHere46","6"
"3221splitHere46","12067133splitHere46","Random.nextInt"
"3222splitHere46","12067137splitHere46","if(row.getCell(0))==null || getCellValue(row.getCell(0)).trim().isEmpty()){<newline46mondego>   cell.setCellValue(<doubleQuotes46>ENTER VALUE<doubleQuotes46>);<newline46mondego>"
"3223splitHere46","12067137splitHere46","private String getCellValue(Cell cell) {<newline46mondego>    if (cell == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    if (cell.getCellType() == Cell.CELL_TYPE_STRING) {<newline46mondego>        return cell.getStringCellValue();<newline46mondego>    } else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC) {<newline46mondego>        return cell.getNumericCellValue() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>    } else if (cell.getCellType() == Cell.CELL_TYPE_BOOLEAN) {<newline46mondego>        return cell.getBooleanCellValue() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>    }else if(cell.getCellType() == Cell.CELL_TYPE_BLANK){<newline46mondego>        return cell.getStringCellValue();<newline46mondego>    }else if(cell.getCellType() == Cell.CELL_TYPE_ERROR){<newline46mondego>        return cell.getErrorCellValue() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>    } <newline46mondego>    else {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3224splitHere46","12067152splitHere46","Player"
"3225splitHere46","12067152splitHere46","GameDriver"
"3226splitHere46","12067152splitHere46","Player"
"3227splitHere46","12067152splitHere46","GameDriver"
"3228splitHere46","12067152splitHere46","Map"
"3229splitHere46","12067152splitHere46","GameDriver"
"3230splitHere46","12067152splitHere46","Player"
"3231splitHere46","12067152splitHere46","Map"
"3232splitHere46","12067152splitHere46","GameDriver"
"3233splitHere46","12067152splitHere46","Player"
"3234splitHere46","12067152splitHere46","Map"
"3235splitHere46","12067259splitHere46","public class DataPacket {<newline46mondego>  private String fn;<newline46mondego>  private ChatPacket p; // will be a StringMap<newline46mondego>}<newline46mondego>"
"3236splitHere46","12067259splitHere46","String testStr = <doubleQuotes46>{fn: chat, data: {roomId: 1, message: \<doubleQuotes46>Some brabble\<doubleQuotes46>}}<doubleQuotes46>;<newline46mondego>DataPacket dp = new Gson().fromJson(testStr, DataPacket.class); <newline46mondego>JsonParser parser = new JsonParser(); <newline46mondego>JsonElement e = parser.parse(testStr); <newline46mondego>ChatPacket cp = new Gson().fromJson(e.getAsJsonObject().getAsJsonObject(<doubleQuotes46>data<doubleQuotes46>), ChatPacket.class);<newline46mondego>"
"3237splitHere46","12067304splitHere46","tables.select(<doubleQuotes46>a[href]<doubleQuotes46>).attr(<doubleQuotes46>href<doubleQuotes46>); // to get your String<newline46mondego>"
"3238splitHere46","12067304splitHere46","tables.select(<doubleQuotes46>a[href]<doubleQuotes46>).text(); // to get your number<newline46mondego>"
"3239splitHere46","12067304splitHere46","Elements tables = doc.select(<doubleQuotes46>table<doubleQuotes46>);<newline46mondego>  String hrefAttr = tables.select(<doubleQuotes46>a[href]<doubleQuotes46>).attr(<doubleQuotes46>href<doubleQuotes46>);<newline46mondego>  System.out.println(<doubleQuotes46>href attribute: <doubleQuotes46> + hrefAttr);<newline46mondego>  String number = tables.select(<doubleQuotes46>a[href]<doubleQuotes46>).text();<newline46mondego>  System.out.println(<doubleQuotes46>number: <doubleQuotes46> + number);<newline46mondego>"
"3240splitHere46","12067358splitHere46","public class CopyDirectoryExample<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {   <newline46mondego>        File srcFolder = new File(<doubleQuotes46>c:\\mkyong<doubleQuotes46>);<newline46mondego>        File destFolder = new File(<doubleQuotes46>c:\\mkyong-new<doubleQuotes46>);<newline46mondego><newline46mondego>        //make sure source exists<newline46mondego>        if(!srcFolder.exists()){<newline46mondego><newline46mondego>           System.out.println(<doubleQuotes46>Directory does not exist.<doubleQuotes46>);<newline46mondego>           //just exit<newline46mondego>           System.exit(0);<newline46mondego><newline46mondego>        }else{<newline46mondego><newline46mondego>           try{<newline46mondego>            copyFolder(srcFolder,destFolder);<newline46mondego>           }catch(IOException e){<newline46mondego>            e.printStackTrace();<newline46mondego>            //error, just exit<newline46mondego>                System.exit(0);<newline46mondego>           }<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void copyFolder(File src, File dest)<newline46mondego>        throws IOException{<newline46mondego><newline46mondego>        if(src.isDirectory()){<newline46mondego><newline46mondego>            //if directory not exists, create it<newline46mondego>            if(!dest.exists()){<newline46mondego>               dest.mkdir();<newline46mondego>               System.out.println(<doubleQuotes46>Directory copied from <doubleQuotes46> <newline46mondego>                              + src + <doubleQuotes46>  to <doubleQuotes46> + dest);<newline46mondego>            }<newline46mondego><newline46mondego>            //list all the directory contents<newline46mondego>            String files[] = src.list();<newline46mondego><newline46mondego>            for (String file : files) {<newline46mondego>               //construct the src and dest file structure<newline46mondego>               File srcFile = new File(src, file);<newline46mondego>               File destFile = new File(dest, file);<newline46mondego>               //recursive copy<newline46mondego>               copyFolder(srcFile,destFile);<newline46mondego>            }<newline46mondego><newline46mondego>        }else{<newline46mondego>            //if file, then copy it<newline46mondego>            //Use bytes stream to support all file types<newline46mondego>            InputStream in = new FileInputStream(src);<newline46mondego>                OutputStream out = new FileOutputStream(dest); <newline46mondego><newline46mondego>                byte[] buffer = new byte[1024];<newline46mondego><newline46mondego>                int length;<newline46mondego>                //copy the file content in bytes <newline46mondego>                while ((length = in.read(buffer)) > 0){<newline46mondego>                   out.write(buffer, 0, length);<newline46mondego>                }<newline46mondego><newline46mondego>                in.close();<newline46mondego>                out.close();<newline46mondego>                System.out.println(<doubleQuotes46>File copied from <doubleQuotes46> + src + <doubleQuotes46> to <doubleQuotes46> + dest);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3241splitHere46","12067413splitHere46","export java files and resources.<newline46mondego>"
"3242splitHere46","12067501splitHere46","MEMORY_APPENDER=false<newline46mondego>"
"3243splitHere46","12067501splitHere46","log4j.rootLogger=ERROR, console<newline46mondego>log4j.appender.console=org.apache.log4j.ConsoleAppender<newline46mondego><newline46mondego>log4j.logger.nz.ac.massey.cs.sdc.log4jassignment.s06005586.MemoryAppender = ERROR, MEMORY_APPENDER<newline46mondego>log4j.additivity.nz.ac.massey.cs.sdc.log4jassignment.s06005586.MemoryAppender = false<newline46mondego>"
"3244splitHere46","12067501splitHere46","nz.ac.massey.cs.sdc.log4jassignment.s06005586.MemoryAppender"
"3245splitHere46","12067501splitHere46","log4j.properties"
"3246splitHere46","12067501splitHere46","nz.ac.massey.cs.sdc.log4jassignment"
"3247splitHere46","12067501splitHere46","Log4jMemoryAppender"
"3248splitHere46","12067501splitHere46","MEMORY_APPENDER"
"3249splitHere46","12067501splitHere46","BasicConfigurator.configure()"
"3250splitHere46","12067501splitHere46","log4j.properties"
"3251splitHere46","12067501splitHere46","package com.mycompany;<newline46mondego><newline46mondego>public class MyClass {<newline46mondego>    private static final Logger log = Logger.getLogger(MyClass.class);<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3252splitHere46","12067501splitHere46","com.mycompany.MyClass"
"3253splitHere46","12067501splitHere46","log4j.properties"
"3254splitHere46","12067501splitHere46","log4j.rootLogger=ERROR, console<newline46mondego>log4j.appender.console=org.apache.log4j.ConsoleAppender<newline46mondego><newline46mondego>log4j.logger.com.mycompany=INFO, file<newline46mondego>log4j.additivity.com.mycompany=false<newline46mondego><newline46mondego>logfj.appender.file = <some file appender><newline46mondego>"
"3255splitHere46","12067501splitHere46","src/main/java/Log4JTest.java"
"3256splitHere46","12067501splitHere46","package org.stackoverflow;<newline46mondego><newline46mondego>import org.apache.log4j.Logger;<newline46mondego><newline46mondego>/**<newline46mondego> * @author maba, 2012-08-22<newline46mondego> */<newline46mondego>public class Log4JTest {<newline46mondego><newline46mondego>    public static final Logger log = Logger.getLogger(Log4JTest.class);<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        log.error(<doubleQuotes46>Error in main<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3257splitHere46","12067501splitHere46","src/main/resources/log4j.properties"
"3258splitHere46","12067501splitHere46","log4j.rootLogger = ERROR, console<newline46mondego><newline46mondego>log4j.appender.console = org.apache.log4j.ConsoleAppender<newline46mondego>log4j.appender.console.layout=org.apache.log4j.PatternLayout<newline46mondego>log4j.appender.console.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n<newline46mondego>"
"3259splitHere46","12067501splitHere46","log4j.properties"
"3260splitHere46","12067501splitHere46","log4j.jar"
"3261splitHere46","12067501splitHere46","0    [main] ERROR org.stackoverflow.Log4JTest  - Error in main<newline46mondego>"
"3262splitHere46","12067517splitHere46","maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46>"
"3263splitHere46","12067517splitHere46","@gkzmin @mhan @dan"
"3264splitHere46","12067530splitHere46","equal"
"3265splitHere46","12067617splitHere46","JTextArea"
"3266splitHere46","12067617splitHere46","JScrollPane"
"3267splitHere46","12067617splitHere46","JTextArea"
"3268splitHere46","12067617splitHere46","HorizontalScrollBarPolicy"
"3269splitHere46","12067617splitHere46","VerticalScrollBarPolicy"
"3270splitHere46","12067617splitHere46","JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS"
"3271splitHere46","12067617splitHere46","JScrollPane.VERTICAL_SCROLLBAR_ALWAYS"
"3272splitHere46","12067617splitHere46","HORIZONTAL_SCROLLBAR_AS_NEEDED"
"3273splitHere46","12067617splitHere46","VERTICAL_SCROLLBAR_AS_NEEDED"
"3274splitHere46","12067626splitHere46","Java serialization process  only continues in object hierarchy till the class<newline46mondego>is Serializable i.e. implements Serializable interface in Java.<newline46mondego>"
"3275splitHere46","12067626splitHere46","super"
"3276splitHere46","12067626splitHere46","During deserialization, the fields of non-serializable classes will be <newline46mondego>initialized using the public or protected no-arg constructor of the class.<newline46mondego>A no-arg constructor must be accessible to the subclass that is serializable.<newline46mondego>The fields of serializable subclasses will be restored from the stream.<newline46mondego>"
"3277splitHere46","12067664splitHere46","XYChart.Series<Number, Number> s = lineChart.getData().get(0);<newline46mondego>"
"3278splitHere46","12067664splitHere46","s.getData().remove(0);<newline46mondego>s.getData().add(new LineChart.Data<Number,Number>(time_from_server, data_from_server));<newline46mondego>"
"3279splitHere46","12067775splitHere46","int i = (int) (new Date().getTime()/1000);<newline46mondego>    System.out.println(<doubleQuotes46>Integer : <doubleQuotes46> + i);<newline46mondego>    System.out.println(<doubleQuotes46>Long : <doubleQuotes46>+ new Date().getTime());<newline46mondego>    System.out.println(<doubleQuotes46>Long date : <doubleQuotes46> + new Date(new Date().getTime()));<newline46mondego>    System.out.println(<doubleQuotes46>Int Date : <doubleQuotes46> + new Date(((long)i)*1000L));<newline46mondego><newline46mondego>Integer : 1345619256<newline46mondego>Long : 1345619256308<newline46mondego>Long date : Wed Aug 22 16:37:36 CST 2012<newline46mondego>Int Date : Wed Aug 22 16:37:36 CST 2012<newline46mondego>"
"3280splitHere46","12067859splitHere46","escape  false   true<newline46mondego>escapeCsv   false   false<newline46mondego>escapeHtml  false   true<newline46mondego>escapeXml   false   false<newline46mondego>"
"3281splitHere46","12067879splitHere46","jdoconfig.xml"
"3282splitHere46","12067879splitHere46","persistence.xml"
"3283splitHere46","12067886splitHere46","Object signal = new Object();<newline46mondego>volatile boolean shouldWait = true;<newline46mondego>"
"3284splitHere46","12067886splitHere46","// ...    <newline46mondego>synchronized(signal) {<newline46mondego>   while(shouldWait) {<newline46mondego>      signal.wait();<newline46mondego>   }    <newline46mondego>}<newline46mondego>"
"3285splitHere46","12067886splitHere46","synchronized(signal) {<newline46mondego>   shouldWait = false;<newline46mondego>   signal.notify();<newline46mondego>}<newline46mondego>"
"3286splitHere46","12067976splitHere46","BlobInfo"
"3287splitHere46","12067976splitHere46","FileService"
"3288splitHere46","12067976splitHere46","BlobInfo"
"3289splitHere46","12067976splitHere46","BlobInfo"
"3290splitHere46","12067985splitHere46","FontMetrics"
"3291splitHere46","12068024splitHere46","public"
"3292splitHere46","12068024splitHere46","protected"
"3293splitHere46","12068024splitHere46","default"
"3294splitHere46","12068024splitHere46","public"
"3295splitHere46","12068024splitHere46","protected"
"3296splitHere46","12068024splitHere46","default"
"3297splitHere46","12068024splitHere46","protected"
"3298splitHere46","12068024splitHere46","public ActivityClass<newline46mondego>{<newline46mondego>    private Integer[] imageIDs = ...;<newline46mondego><newline46mondego>    protected Integer[] getImageIDs()<newline46mondego>    {<newline46mondego>        return this.imageIDs;<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"3299splitHere46","12068024splitHere46","public SomeOtherClass extends ActivityClass<newline46mondego>{<newline46mondego>    ...    <newline46mondego>    Integer[] imageIDs = this.getImageIDs();<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3300splitHere46","12068024splitHere46","GridView gridView = (GridView) findViewById(R.id.gridview);<newline46mondego>    gridView.setAdapter(new ImageAdapter(this));<newline46mondego><newline46mondego>    gridView.setOnItemClickListener(new OnItemClickListener() <newline46mondego>    {<newline46mondego>        public void onItemClick(AdapterView<?> parent, <newline46mondego>        View v, int position, long id) <newline46mondego>        {   <newline46mondego>             //Integer[] imageIDs = this.getImageIDs();<newline46mondego>            // clicked picture here<newline46mondego>            Integer[] imageIDs = this.getImageIDs();<newline46mondego>            //Toast.makeText(getBaseContext(),<doubleQuotes46>pic<doubleQuotes46> + (position + 1) + <doubleQuotes46> selected<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego>            //Integer[] imageIDs = ImageAdapter.this.getImageIDs();<newline46mondego>            //for (Integer imageId : ImageAdapter.getImageIDs()){<newline46mondego>                //  System.out.println(imageId );<newline46mondego>                //}<newline46mondego>        }<newline46mondego>    });  <newline46mondego>"
"3301splitHere46","12068024splitHere46","gridView.setOnItemClickListener(new OnItemClickListener() <newline46mondego>        {<newline46mondego>            public void onItemClick(AdapterView<?> parent, <newline46mondego>            View v, int position, long id) <newline46mondego>            {   <newline46mondego>                 //Integer[] imageIDs = this.getImageIDs();<newline46mondego>                // clicked picture here<newline46mondego>                Integer[] imageIDs = this.getImageIDs();<newline46mondego>                //Toast.makeText(getBaseContext(),<doubleQuotes46>pic<doubleQuotes46> + (position + 1) + <doubleQuotes46> selected<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego>                //Integer[] imageIDs = ImageAdapter.this.getImageIDs();<newline46mondego>                //for (Integer imageId : ImageAdapter.getImageIDs()){<newline46mondego>                    //  System.out.println(imageId );<newline46mondego>                    //}<newline46mondego>            }<newline46mondego>        }); <newline46mondego>"
"3302splitHere46","12068024splitHere46","The method getImageIDs() is undefined for the type new AdapterView.OnItemClickListener(){}"
"3303splitHere46","12068024splitHere46","GridView gridView = (GridView) findViewById(R.id.gridview);<newline46mondego>    gridView.setAdapter(new ImageAdapter(this));<newline46mondego>    final Integer[] imageIDs = this.getImageIDs();<newline46mondego><newline46mondego>    gridView.setOnItemClickListener(new OnItemClickListener() <newline46mondego>    {<newline46mondego>        public void onItemClick(AdapterView<?> parent, <newline46mondego>        View v, int position, long id) <newline46mondego>        {   <newline46mondego>            for (Integer imageId : imageIDs){<newline46mondego>                System.out.println(imageId );<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"3304splitHere46","12068141splitHere46","balintake.setScale(2,RoundingMode.HALF_UP);<newline46mondego>"
"3305splitHere46","12068141splitHere46","balintake = balintake.setScale(2,RoundingMode.HALF_UP);<newline46mondego>"
"3306splitHere46","12068145splitHere46","document.select(<doubleQuotes46>a<doubleQuotes46>).unwrap()<newline46mondego>"
"3307splitHere46","12068227splitHere46","INFORMATION_SCHEMA"
"3308splitHere46","12068227splitHere46","<database><newline46mondego>  <schemata><newline46mondego>    <schema><newline46mondego>      <inputSchema>...</inputSchema><newline46mondego>    </schema><newline46mondego>    [ <schema>...</schema> ... ]<newline46mondego>  </schemata><newline46mondego></database><newline46mondego>"
"3309splitHere46","12068238splitHere46","public static String replaceMatching(String input, String lowerBound, String upperBound{<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>.*?<doubleQuotes46>+lowerBound+<doubleQuotes46>(.*?)<doubleQuotes46>+upperBound+<doubleQuotes46>.*?<doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(input);<newline46mondego>    String textToRemove = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    while(m.find()){<newline46mondego>        textToRemove = m.group(1);<newline46mondego>    }<newline46mondego>    return input.replace(textToRemove, <doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3310splitHere46","12068238splitHere46","public static String replaceMatching2(String input, String lowerBound, String upperBound){<newline46mondego>      String result = input.replaceAll(<doubleQuotes46>(.*?<doubleQuotes46>+lowerBound + <doubleQuotes46>)<doubleQuotes46> + <doubleQuotes46>(.*?)<doubleQuotes46> + <doubleQuotes46>(<doubleQuotes46> + upperBound + <doubleQuotes46>.*)<doubleQuotes46>, <doubleQuotes46>$1$3<doubleQuotes46>);<newline46mondego>      return result;<newline46mondego> }<newline46mondego>"
"3311splitHere46","12068270splitHere46","int tabsCount = 6;<newline46mondego><newline46mondego>    Button btnOne = new Button(<doubleQuotes46> Tab 1 <doubleQuotes46>);<newline46mondego>    btnOne.setPreferredW(Display.getInstance().getDisplayWidth()/tabsCount);<newline46mondego><newline46mondego>    Button btnTwo = new Button(<doubleQuotes46> Tab 2 <doubleQuotes46>);<newline46mondego>    btnTwo.setPreferredW(Display.getInstance().getDisplayWidth()/tabsCount);<newline46mondego><newline46mondego>    Button btnThree = new Button(<doubleQuotes46> Tab 3 <doubleQuotes46>);<newline46mondego>    btnThree.setPreferredW(Display.getInstance().getDisplayWidth()/tabsCount);<newline46mondego><newline46mondego>    Button btnFour = new Button(<doubleQuotes46> Tab 4 <doubleQuotes46>);<newline46mondego>    btnFour.setPreferredW(Display.getInstance().getDisplayWidth()/tabsCount);<newline46mondego><newline46mondego>    Button btnFive = new Button(<doubleQuotes46> Tab 5 <doubleQuotes46>);<newline46mondego>    btnFive.setPreferredW(Display.getInstance().getDisplayWidth()/tabsCount);<newline46mondego><newline46mondego>    Button btnSix = new Button(<doubleQuotes46> Tab 6 <doubleQuotes46>);<newline46mondego>    btnSix.setPreferredW(Display.getInstance().getDisplayWidth()/tabsCount);<newline46mondego><newline46mondego><newline46mondego>    tabs.addTab(btnOne, new Label(<doubleQuotes46>Tab one selected<doubleQuotes46>));<newline46mondego>    tabs.addTab(btnTwo, new Label(<doubleQuotes46>Tab Two selected<doubleQuotes46>));<newline46mondego>    tabs.addTab(btnThree, new Label(<doubleQuotes46>Tab three selected<doubleQuotes46>));<newline46mondego>    tabs.addTab(btnFour, new Label(<doubleQuotes46>Tab four selected<doubleQuotes46>));<newline46mondego>    tabs.addTab(btnFive, new Label(<doubleQuotes46>Tab five selected<doubleQuotes46>));<newline46mondego>    tabs.addTab(btnSix, new Label(<doubleQuotes46>Tab six selected<doubleQuotes46>));<newline46mondego>"
"3312splitHere46","12068315splitHere46","@RequestScoped"
"3313splitHere46","12068315splitHere46","@Scope(<doubleQuotes46>session<doubleQuotes46>)"
"3314splitHere46","12068570splitHere46","List<HttpCookie> getCookies()<newline46mondego>"
"3315splitHere46","12068583splitHere46","directionY"
"3316splitHere46","12068583splitHere46","float directionY = pSceneTouchEvent.getY() - gun.getY();<newline46mondego>"
"3317splitHere46","12068583splitHere46","directionX"
"3318splitHere46","12068583splitHere46","directionY"
"3319splitHere46","12068583splitHere46","[top,left]"
"3320splitHere46","12068583splitHere46","[top,left]"
"3321splitHere46","12068583splitHere46","gun.setRotationCenter(0, 0);<newline46mondego>"
"3322splitHere46","12068583splitHere46","fix anchor body"
"3323splitHere46","12068583splitHere46","gun"
"3324splitHere46","12068583splitHere46","RevoluteJoint"
"3325splitHere46","12068583splitHere46","Mouse Joint"
"3326splitHere46","12068583splitHere46","Physics\Using a RevoluteJoint + MouseJoint"
"3327splitHere46","12068598splitHere46","public long removeDigits(long number, int digitsToRemove) {<newline46mondego>    return number / (long)Math.pow(10, digitsToRemove);<newline46mondego>}<newline46mondego>"
"3328splitHere46","12068711splitHere46","=="
"3329splitHere46","12068711splitHere46","int"
"3330splitHere46","12068711splitHere46","Integer"
"3331splitHere46","12068711splitHere46","=="
"3332splitHere46","12068711splitHere46","Integer"
"3333splitHere46","12068754splitHere46","JTable"
"3334splitHere46","12068754splitHere46","JScrollPane"
"3335splitHere46","12068754splitHere46","this.add(table);"
"3336splitHere46","12068754splitHere46","this.add(new JScrollPane(table));"
"3337splitHere46","12068754splitHere46","JScrollPane scrollPane = new JScrollPane(table);"
"3338splitHere46","12068754splitHere46","this.add(table);"
"3339splitHere46","12068754splitHere46","this.add(scrollpane);"
"3340splitHere46","12068922splitHere46","<doubleQuotes46>-Djavafx.autoproxy.disable=true<doubleQuotes46>"
"3341splitHere46","12068947splitHere46","String value5=comboGrade.getText();<newline46mondego>"
"3342splitHere46","12068947splitHere46","String value5 = (String) comboGrade.getSelectedItem();<newline46mondego>"
"3343splitHere46","12069083splitHere46","switch"
"3344splitHere46","12069083splitHere46","switch (align) {<newline46mondego>    case <doubleQuotes46>SWT.TOP<doubleQuotes46>:<newline46mondego>        gd.verticalAlignment = SWT.TOP;<newline46mondego>    /* etc */<newline46mondego>}<newline46mondego>"
"3345splitHere46","12069083splitHere46","<doubleQuotes46>STW.TOP<doubleQuotes46>"
"3346splitHere46","12069083splitHere46","int"
"3347splitHere46","12069083splitHere46","switch"
"3348splitHere46","12069221splitHere46","public class Directory {<newline46mondego>  public static void main(String args[]) throws IOException {<newline46mondego><newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>Directory<doubleQuotes46>);<newline46mondego>    frame.setPreferredSize(new Dimension(300, 300));<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>    final JProgressBar searchprogress = new JProgressBar();<newline46mondego>    JPanel panel = new JPanel();<newline46mondego>    final JButton searchbutton = new JButton(<doubleQuotes46>Search<doubleQuotes46>);<newline46mondego>    final JTextField searchfield = new JTextField();<newline46mondego>    searchfield.setPreferredSize(new Dimension(100, 30));<newline46mondego>    searchprogress.setPreferredSize(new Dimension(200, 30));<newline46mondego>    searchbutton.setLocation(100, 100);<newline46mondego><newline46mondego>    /* Start Buffered Reader */<newline46mondego>    final List<String> housetypes = new ArrayList<String>();<newline46mondego>    String line = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    BufferedReader br = new BufferedReader(new FileReader(<doubleQuotes46>test1.txt<doubleQuotes46>));<newline46mondego>    while (line != null) {<newline46mondego>        line = br.readLine();<newline46mondego>        housetypes.add(line);<newline46mondego>        String housenumber = br.readLine();<newline46mondego>        String housestreet = br.readLine();<newline46mondego>        String housepostal = br.readLine();<newline46mondego>        String houseplace = br.readLine();<newline46mondego>        String seperation = br.readLine();<newline46mondego>    }<newline46mondego>    /* Finish Buffered Reader */<newline46mondego><newline46mondego>    /* Start Content Code */<newline46mondego>    JButton done = new JButton(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego>    done.setVisible(false);<newline46mondego>    JLabel housetype_label = new JLabel();<newline46mondego>    JLabel housenumber_label = new JLabel();<newline46mondego>    JLabel housestreet_label = new JLabel();<newline46mondego>    JLabel housepostal_label = new JLabel();<newline46mondego>    JLabel houseplace_label = new JLabel();<newline46mondego><newline46mondego>    /* Finish Content Code */<newline46mondego><newline46mondego>    /* Start Button Code */<newline46mondego>    searchbutton.addActionListener(new ActionListener() {<newline46mondego>        public void actionPerformed(ActionEvent ae) {<newline46mondego>            String searchquery = searchfield.getText();<newline46mondego>            searchprogress.setValue(100);<newline46mondego>            searchfield.setEnabled(false);<newline46mondego>            for (String housetype : housetypes) {<newline46mondego>                if (searchquery.equals(housetype)) {<newline46mondego>                    System.out.println(<doubleQuotes46>We Have Found  A Record!!<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    /* Finish Button Code */<newline46mondego>    /* Test Field */<newline46mondego><newline46mondego>    /* End Test Field */<newline46mondego><newline46mondego>    panel.add(searchfield);<newline46mondego>    panel.add(done);<newline46mondego>    panel.add(searchbutton);<newline46mondego>    panel.add(searchprogress);<newline46mondego>    frame.add(panel);<newline46mondego>    frame.pack();<newline46mondego>    frame.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3349splitHere46","12069312splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego><newline46mondego>import org.apache.log4j.FileAppender;<newline46mondego>import org.apache.log4j.Logger;<newline46mondego>import org.apache.log4j.PatternLayout;<newline46mondego><newline46mondego>public class DemoClass {<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    Logger logger = Logger.getLogger(<doubleQuotes46>main<doubleQuotes46>);<newline46mondego>    FileAppender fileAppender = new FileAppender();<newline46mondego>    fileAppender.setLayout(new PatternLayout(<doubleQuotes46>%-5p [%t]: %m%n<doubleQuotes46>));<newline46mondego>    logger.addAppender(fileAppender);<newline46mondego>    String userLogFileName = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    BufferedReader  reader = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>    try {<newline46mondego>      userLogFileName = reader.readLine();//read the users input<newline46mondego>    } catch (IOException e) {<newline46mondego>      System.out.println(<doubleQuotes46>error on reading user input<doubleQuotes46>);<newline46mondego>      e.printStackTrace();<newline46mondego>    }<newline46mondego>    File file = new File(userLogFileName);<newline46mondego>    try {<newline46mondego>      if(!file.exists()) {//if the file does not exist<newline46mondego>        file.createNewFile();//create a new file<newline46mondego>      }<newline46mondego>    } catch (IOException e) {<newline46mondego>      System.out.println(<doubleQuotes46>error on creating file<doubleQuotes46>);<newline46mondego>      e.printStackTrace();<newline46mondego>    }<newline46mondego>    fileAppender.setFile(userLogFileName);//the file must exist<newline46mondego>    fileAppender.activateOptions();//activate the new file<newline46mondego>    logger.error(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3350splitHere46","12069312splitHere46","DailyRollingFileAppender"
"3351splitHere46","12069348splitHere46","ImageView"
"3352splitHere46","12069348splitHere46","Image"
"3353splitHere46","12069348splitHere46","from"
"3354splitHere46","12069348splitHere46","ScaleTransition"
"3355splitHere46","12069348splitHere46","ScaleTransition st = ScaleTransitionBuilder.create()<newline46mondego>    .fromX(1).fromY(1)<newline46mondego>    .byX(2).byY(2).node(imageView)<newline46mondego>    .duration(Duration.millis(500)).build();<newline46mondego>"
"3356splitHere46","12069572splitHere46","MenuPresenter"
"3357splitHere46","12069572splitHere46","PhoneCallMenuPresenter"
"3358splitHere46","12069572splitHere46","PhoneCallPresenter"
"3359splitHere46","12069572splitHere46","/phonecall"
"3360splitHere46","12069572splitHere46","PhoneCallPresenter"
"3361splitHere46","12069572splitHere46","PhoneCallMenuPresenter"
"3362splitHere46","12069572splitHere46","MenuPresenter"
"3363splitHere46","12069572splitHere46","Presenter"
"3364splitHere46","12069572splitHere46","PresenterWidget"
"3365splitHere46","12069572splitHere46","Presenter"
"3366splitHere46","12069572splitHere46","MenuPresenterWidget"
"3367splitHere46","12069572splitHere46","LayoutPresenter"
"3368splitHere46","12069572splitHere46","LayoutPresenter.SIDE"
"3369splitHere46","12069572splitHere46","MenuPresenterWidget"
"3370splitHere46","12069572splitHere46","LayoutPresenter"
"3371splitHere46","12069572splitHere46","onReset()"
"3372splitHere46","12069572splitHere46","MenuPresenter"
"3373splitHere46","12069572splitHere46","Presenter"
"3374splitHere46","12069572splitHere46","MenuPresenter"
"3375splitHere46","12069572splitHere46","MenuPresenter"
"3376splitHere46","12069572splitHere46","Presenter"
"3377splitHere46","12069572splitHere46","MenuPresenterWidget"
"3378splitHere46","12069616splitHere46","List"
"3379splitHere46","12069616splitHere46","String"
"3380splitHere46","12069616splitHere46","Collection"
"3381splitHere46","12069616splitHere46","List<Name>"
"3382splitHere46","12069616splitHere46","List<Name>"
"3383splitHere46","12069616splitHere46","List<String>"
"3384splitHere46","12069616splitHere46","public static List<String> toNameStrings(List<Name> names) {<newline46mondego>    List<String> list = new ArrayList<String>(names.size());<newline46mondego>    for (Name name : names) {<newline46mondego>        list.add(name.getName());<newline46mondego>    }<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"3385splitHere46","12069616splitHere46","List"
"3386splitHere46","12069616splitHere46","list.setStringMode(false)"
"3387splitHere46","12069616splitHere46","List<Name>"
"3388splitHere46","12069616splitHere46","Object"
"3389splitHere46","12069616splitHere46","list.setStringMode(true)"
"3390splitHere46","12069616splitHere46","List<String>"
"3391splitHere46","12069616splitHere46","public class NameAndStringList extends ArrayList<Object> implements List<Object><newline46mondego>{<newline46mondego>    private boolean stringMode = false;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean add(Object object)<newline46mondego>    {<newline46mondego>        return super.add(toName(object));<newline46mondego>    }<newline46mondego><newline46mondego>    // Do the same for add(index, element)<newline46mondego>    // Do the same for set(index, element)<newline46mondego>    // Do the same for remove(object)<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean addAll(Collection<? extends Object> collection)<newline46mondego>    {<newline46mondego>        final List<Name> convertedCollection = new ArrayList<Name>();<newline46mondego>        for (Object object : collection)<newline46mondego>        {<newline46mondego>            convertedCollection.add(toName(object));<newline46mondego>        }<newline46mondego>        return super.addAll(convertedCollection);<newline46mondego>    }<newline46mondego><newline46mondego>    // Do the same for addAll(index, collection)<newline46mondego>    // Do the same for removeAll(index, collection)<newline46mondego>    // Do the same for retainAll(index, collection)<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean contains(Object o)<newline46mondego>    {<newline46mondego>        return super.contains(toName(o));<newline46mondego>    }<newline46mondego><newline46mondego>    // Do the same for containsAll(collection)<newline46mondego>    // Do the same for indexOf(object)<newline46mondego>    // Implement Iterator that checks the stringMode variable before returning value.<newline46mondego>    // Override all iterator methods to retrieve custom Iterator implementation.<newline46mondego>    // Override subList(fromIndex, toIndex) to make subList be an instance of NameAndStringList as well.<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object get(int index)<newline46mondego>    {<newline46mondego>        if (stringMode)<newline46mondego>        {<newline46mondego>            return ((Name) super.get(index)).getName();<newline46mondego>        }<newline46mondego>        return super.get(index);<newline46mondego>    }<newline46mondego><newline46mondego>    // Implement setStringMode(boolean)<newline46mondego><newline46mondego>    protected Object toNameString(Object object)<newline46mondego>    {<newline46mondego>        if (object instanceof Name)<newline46mondego>        {<newline46mondego>            // Convert to String here<newline46mondego>        }<newline46mondego>        return object;<newline46mondego>    }<newline46mondego><newline46mondego>    protected Name toName(Object object)<newline46mondego>    {<newline46mondego>        if (object instanceof String)<newline46mondego>        {<newline46mondego>            // Convert to Name here.<newline46mondego>        }<newline46mondego>        return object;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3392splitHere46","12069616splitHere46","String"
"3393splitHere46","12069616splitHere46","Name"
"3394splitHere46","12069616splitHere46","Name"
"3395splitHere46","12069616splitHere46","List"
"3396splitHere46","12069616splitHere46","Name"
"3397splitHere46","12069616splitHere46","String"
"3398splitHere46","12069616splitHere46","List<Object>"
"3399splitHere46","12069701splitHere46","<p:lineChart  id=<doubleQuotes46>basic<doubleQuotes46> value=<doubleQuotes46>#{userBean.categoryModel}<doubleQuotes46> legendPosition=<doubleQuotes46>ne<doubleQuotes46> <newline46mondego>   datatipFormat=<doubleQuotes46>#{userBean.datatipFormat}<doubleQuotes46>  title=<doubleQuotes46>Basic Bar Chart<doubleQuotes46> min=<doubleQuotes46>0<doubleQuotes46><newline46mondego>    max=<doubleQuotes46>200<doubleQuotes46> style=<doubleQuotes46>height:300px<doubleQuotes46>/><newline46mondego>"
"3400splitHere46","12069701splitHere46","public String getDatatipFormat(){<newline46mondego>   return <doubleQuotes46><span style=\<doubleQuotes46>display:none;\<doubleQuotes46>>%s</span><span>%s</span><doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"3401splitHere46","12069814splitHere46","LocalDate date1 = new LocalDate(<doubleQuotes46>2011-12-12<doubleQuotes46>);<newline46mondego> LocalDate date2 = new LocalDate(<doubleQuotes46>2012-11-11<doubleQuotes46>); <newline46mondego> while(date1.isBefore(date2)){<newline46mondego>     System.out.println(date1.toString(<doubleQuotes46>MMM/yyyy<doubleQuotes46>));<newline46mondego>     date1 = date1.plus(Period.months(1));<newline46mondego> }<newline46mondego>"
"3402splitHere46","12069945splitHere46","ResourceURL"
"3403splitHere46","12069945splitHere46","renderResponse.createResourceURL()"
"3404splitHere46","12069945splitHere46","resourceID"
"3405splitHere46","12069945splitHere46","ResourceURL"
"3406splitHere46","12069945splitHere46","usermanual.html"
"3407splitHere46","12069954splitHere46","HashSet"
"3408splitHere46","12069954splitHere46","HashMap"
"3409splitHere46","12069976splitHere46","public TestGUI() throws IOException{<newline46mondego>      initComponents();<newline46mondego>      private final CountDownLatch latch = new CountDownLatch(1);<newline46mondego>      Item.importItems(progressBar, latch); // static method that execute a new thread to import item witouth freeze my UI (I update a progressBar in it)<newline46mondego>      latch.await();<newline46mondego>      table.refresh(); //Metodh that I need to execute only after <doubleQuotes46>importItems()<doubleQuotes46> methods is completed<newline46mondego>  }<newline46mondego>"
"3410splitHere46","12069976splitHere46","public Item implements Runnable{<newline46mondego>      private JProgressBar progressBar;<newline46mondego>      public void importItems (JProgressBar progressBar, CountDownLatch latch) throws IOException //Metodo per importare articoli da un file esterno. Usa i Thread.{<newline46mondego><newline46mondego>     this.progressBar = progressBar;<newline46mondego><newline46mondego>    Thread importThread = new Thread (new RefreshTable(),<doubleQuotes46>Importer Thread<doubleQuotes46>);<newline46mondego><newline46mondego>    importThread.start();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>void run (){<newline46mondego><newline46mondego>    // I execute here all the DB operation that i need. I also update the progress bar           here<newline46mondego>    //After everything finishes:<newline46mondego>    latch.countDown(); // you want this to be executed in a finally block of the try catch<newline46mondego>}<newline46mondego>"
"3411splitHere46","12070140splitHere46","@WebMethod<newline46mondego>public void throwFault(){<newline46mondego>    try {<newline46mondego>        SOAPFactory factory = SOAPFactory.newInstance();            <newline46mondego>        IndexOutOfBoundsException e = new IndexOutOfBoundsException(<doubleQuotes46>index out of bounds<doubleQuotes46>);         <newline46mondego>        SOAPFault fault = factory.createFault(getStackTraceString(e), new QName(<doubleQuotes46>http://whatever.com<doubleQuotes46>,<doubleQuotes46>CustomFault<doubleQuotes46>));          <newline46mondego>        throw new SOAPFaultException(fault);<newline46mondego>    } catch (SOAPException e) {<newline46mondego>        // ignore for the example           <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private String getStackTraceString(Exception e){<newline46mondego>    StringWriter sw = new StringWriter();<newline46mondego>    PrintWriter pw = new PrintWriter(sw);<newline46mondego>    e.printStackTrace(pw);<newline46mondego>    return sw.toString();<newline46mondego>}<newline46mondego>"
"3412splitHere46","12070140splitHere46","throwFault"
"3413splitHere46","12070140splitHere46","SOAPFault"
"3414splitHere46","12070140splitHere46","getStackTraceString"
"3415splitHere46","12070140splitHere46","<S:Envelope xmlns:S=<doubleQuotes46>http://schemas.xmlsoap.org/soap/envelope/<doubleQuotes46>><newline46mondego> <S:Body><newline46mondego> <S:Fault xmlns:ns4=<doubleQuotes46>http://www.w3.org/2003/05/soap-envelope<doubleQuotes46>><newline46mondego>  <faultcode xmlns:ns0=<doubleQuotes46>http://whatever.com<doubleQuotes46>>ns0:CustomFault</faultcode> <newline46mondego>  <faultstring>java.lang.IndexOutOfBoundsException: index out of bounds at Faulter.throwUndeclaredFault(Faulter.java:23) at  <!--rest of stacktrace omitted for readability--!> </faultstring> <newline46mondego> </S:Fault><newline46mondego>  </S:Body><newline46mondego>  </S:Envelope><newline46mondego>"
"3416splitHere46","12070140splitHere46","error"
"3417splitHere46","12070140splitHere46","throw new CustomException(getStackTraceString(error),error);<newline46mondego>"
"3418splitHere46","12070201splitHere46","bridgeEndpoint"
"3419splitHere46","12070201splitHere46","<to uri=<doubleQuotes46>jetty//http://172.28.128.158:8983/solr/targetjobs.co.uk.gtimedia.test/select?bridgeEndpoint=true&amp;throwExceptionOnFailure=false<doubleQuotes46>/><newline46mondego>"
"3420splitHere46","12070266splitHere46","Callable"
"3421splitHere46","12070266splitHere46","ExecutorService"
"3422splitHere46","12070266splitHere46","ScheduledExecutorService"
"3423splitHere46","12070266splitHere46","interface FileDetectedHandler { void fileDetected(File f); }<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>  final ScheduledExecutorService scheduler = <newline46mondego>     Executors.newSingleThreadScheduledExecutor();<newline46mondego>  final FileDetectedHandler h = new FileDetectedHandler(File f) {<newline46mondego>    public void fileDetected(File f) {<newline46mondego>      System.out.format(<doubleQuotes46>File detected: %s\n<doubleQuotes46>, f);<newline46mondego>  }};<newline46mondego>  final Runnable r = new Runnable() { public void run() {<newline46mondego>    File f = null;<newline46mondego>    //detect file<newline46mondego>    if (f != null) h.fileDetected(f);<newline46mondego>  }};<newline46mondego>  scheduler.scheduleWithFixedDelay(r, 0, 2, TimeUnit.SECONDS);<newline46mondego>}<newline46mondego>"
"3424splitHere46","12070287splitHere46","networkOutputStream"
"3425splitHere46","12070434splitHere46","Xxxxx.PRODUCTION"
"3426splitHere46","12070526splitHere46","public static String dukePath(int n, String initPosition) {<newline46mondego>    int x = initPosition.charAt(0) - 'a';<newline46mondego>    int y = n - (initPosition.charAt(1) - '0');<newline46mondego>    boolean grid[][] = new boolean[n][n];<newline46mondego>    StringBuilder s = new StringBuilder(initPosition);<newline46mondego><newline46mondego>    while (true) {<newline46mondego>        grid[x][y] = true;<newline46mondego><newline46mondego>        if (x < (n - 1) && !grid[x + 1][y])<newline46mondego>            x++; // Right<newline46mondego>        else if (y > 0 && !grid[x][y - 1])<newline46mondego>            y--; // Up<newline46mondego>        else if (y < (n - 1) && !grid[x][y + 1])<newline46mondego>            y++; // Down<newline46mondego>        else if (x > 0 && !grid[x - 1][y])<newline46mondego>            x--; // Left<newline46mondego>        else<newline46mondego>            break; // Nowhere left to go!<newline46mondego><newline46mondego>        s.append(<doubleQuotes46>-<doubleQuotes46> + (char)('a' + x) + (char)('0' + n - y));<newline46mondego>    }<newline46mondego><newline46mondego>    if (s.length() > 40) {<newline46mondego>        s.replace(20, s.length() - 20, <doubleQuotes46>...<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    return s.toString();<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String args[])<newline46mondego>{<newline46mondego>    System.out.println(dukePath(3, <doubleQuotes46>b2<doubleQuotes46>));<newline46mondego>    System.out.println(dukePath(4, <doubleQuotes46>d4<doubleQuotes46>));<newline46mondego>    System.out.println(dukePath(3, <doubleQuotes46>a2<doubleQuotes46>));<newline46mondego>    System.out.println(dukePath(4, <doubleQuotes46>d3<doubleQuotes46>));<newline46mondego>    System.out.println(dukePath(8, <doubleQuotes46>a8<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"3427splitHere46","12070526splitHere46","b2-c2-c3-b3-a3-a2-a1-b1-c1<newline46mondego>d4-d3-d2-d1-c1-c2-c3...b3-b2-b1-a1-a2-a3-a4<newline46mondego>a2-b2-c2-c3-b3-a3<newline46mondego>d3-d4-c4-c3-c2-d2-d1...b2-b3-b4-a4-a3-a2-a1<newline46mondego>a8-b8-c8-d8-e8-f8-g8...a1-a2-a3-a4-a5-a6-a7<newline46mondego>"
"3428splitHere46","12070600splitHere46","classpath"
"3429splitHere46","12070600splitHere46","classpath"
"3430splitHere46","12070600splitHere46","java a.b.c.D<newline46mondego>"
"3431splitHere46","12070600splitHere46","a/b/c/D.class"
"3432splitHere46","12070729splitHere46","java.lang.NoSuchMethodError"
"3433splitHere46","12070819splitHere46","META-INF/services/org.apache.tika.parser.Parser"
"3434splitHere46","12070939splitHere46","editText.setInputType(InputType.TYPE_CLASS_NUMBER);<newline46mondego>"
"3435splitHere46","12070966splitHere46","Sources"
"3436splitHere46","12070966splitHere46","Encoding"
"3437splitHere46","12070966splitHere46","UTF-8"
"3438splitHere46","12070971splitHere46","break"
"3439splitHere46","12070971splitHere46","continue"
"3440splitHere46","12070971splitHere46","OUTER: for (x : xList) {<newline46mondego>          for (y : yList) {<newline46mondego>              // Do something, then:<newline46mondego>              if (x > y) {<newline46mondego>                  // This goes to the next iteration of x, whereas a standard<newline46mondego>                  // <doubleQuotes46>continue<doubleQuotes46> would go to the next iteration of y<newline46mondego>                  continue OUTER;<newline46mondego>              }<newline46mondego>          }<newline46mondego>       }<newline46mondego>"
"3441splitHere46","12070971splitHere46","for"
"3442splitHere46","12071046splitHere46","JFrame"
"3443splitHere46","12071046splitHere46","JDialog"
"3444splitHere46","12071046splitHere46","JWindow"
"3445splitHere46","12071046splitHere46","validate(); (revalidate in Java7 )<newline46mondego>repaint();<newline46mondego>"
"3446splitHere46","12071046splitHere46","CardLayout"
"3447splitHere46","12071046splitHere46","remove"
"3448splitHere46","12071046splitHere46","add"
"3449splitHere46","12071046splitHere46","JPanel"
"3450splitHere46","12071270splitHere46","InformationSchemaFactory"
"3451splitHere46","12071270splitHere46","INFORMATION_SCHEMA"
"3452splitHere46","12071270splitHere46","// This query...<newline46mondego>new InformationSchemaFactory(conn).selectFrom(INFORMATION_SCHEMA.TABLES).fetch();<newline46mondego><newline46mondego>// ... renders this SQL (with the asterisk expanded):<newline46mondego>SELECT * FROM <doubleQuotes46>TABLES<doubleQuotes46>;<newline46mondego>"
"3453splitHere46","12071270splitHere46","InformationSchemaFactory"
"3454splitHere46","12071270splitHere46","<doubleQuotes46>TABLES<doubleQuotes46>"
"3455splitHere46","12071270splitHere46","<doubleQuotes46>INFORMATION_SCHEMA<doubleQuotes46>"
"3456splitHere46","12071270splitHere46","// This query...<newline46mondego>new Factory(H2, conn).selectFrom(INFORMATION_SCHEMA.TABLES).fetch();<newline46mondego><newline46mondego>// ... renders this SQL:<newline46mondego>SELECT * FROM <doubleQuotes46>INFORMATION_SCHEMA<doubleQuotes46>.<doubleQuotes46>TABLES<doubleQuotes46>;<newline46mondego>"
"3457splitHere46","12071270splitHere46","PublicFactory"
"3458splitHere46","12071270splitHere46","// This query...<newline46mondego>new PublicFactory(conn).selectFrom(INFORMATION_SCHEMA.TABLES).fetch();<newline46mondego><newline46mondego>// ... renders this SQL:<newline46mondego>SELECT * FROM <doubleQuotes46>INFORMATION_SCHEMA<doubleQuotes46>.<doubleQuotes46>TABLES<doubleQuotes46>;<newline46mondego>"
"3459splitHere46","12071324splitHere46","KeyListener"
"3460splitHere46","12071324splitHere46","INSTANCE"
"3461splitHere46","12071324splitHere46","enum eSingleton implements KeyListener {<newline46mondego>    INSTANCE;<newline46mondego><newline46mondego>    private boolean[] keyUp = new boolean[256];<newline46mondego>    private boolean[] keyDown = new boolean[256];<newline46mondego>    private boolean listen;<newline46mondego><newline46mondego>    public void update(){<newline46mondego>        keyUp = new boolean[256];<newline46mondego>    }<newline46mondego><newline46mondego>    public void listen(final boolean startStop){<newline46mondego>        listen = startStop;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isKeyUp(int key){<newline46mondego>        return keyUp[key];<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isKeyDown(int key){<newline46mondego>        return keyDown[key];<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyPressed(KeyEvent e) {<newline46mondego>        keyUp[e.getKeyCode()] = false;<newline46mondego>        keyDown[e.getKeyCode()] = true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyReleased(KeyEvent e) {<newline46mondego>        keyUp[e.getKeyCode()] = true;<newline46mondego>        keyDown[e.getKeyCode()] = false;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyTyped(KeyEvent e) {}<newline46mondego>}<newline46mondego>"
"3462splitHere46","12071347splitHere46","Button btnHyperlink = new Button(<doubleQuotes46>Hyperlink<doubleQuotes46>);<newline46mondego>btnHyperlink.getUnselectedStyle().setBorder(null);<newline46mondego>btnHyperlink.getSelectedStyle().setBorder(null);<newline46mondego>btnHyperlink.getUnselectedStyle().setFont(Font.createSystemFont(Font.FACE_SYSTEM,Font.STYLE_UNDERLINED, Font.SIZE_MEDIUM));<newline46mondego>btnHyperlink.getSelectedStyle().setFont(Font.createSystemFont(Font.FACE_SYSTEM,Font.STYLE_UNDERLINED | Font.STYLE_BOLD, Font.SIZE_MEDIUM));<newline46mondego>btnHyperlink.getUnselectedStyle().setFgColor(0x0000ff);<newline46mondego>btnHyperlink.getSelectedStyle().setFgColor(0x0000ff);<newline46mondego>"
"3463splitHere46","12071430splitHere46","Thread.sleep(1000)<newline46mondego>"
"3464splitHere46","12071488splitHere46","public class SimpleEula {<newline46mondego><newline46mondego>    private String EULA_PREFIX = <doubleQuotes46>eula<doubleQuotes46>;<newline46mondego>    private Activity mActivity;<newline46mondego><newline46mondego>    public SimpleEula(Activity context) {<newline46mondego>        mActivity = context;<newline46mondego>    }<newline46mondego><newline46mondego>    public void show() {<newline46mondego>        final String eulaKey = EULA_PREFIX;<newline46mondego>        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(mActivity);<newline46mondego>            ...<newline46mondego>"
"3465splitHere46","12071507splitHere46","getServletContext()"
"3466splitHere46","12071508splitHere46","Thread.stop()"
"3467splitHere46","12071508splitHere46","System.exit()"
"3468splitHere46","12071704splitHere46","onClick()"
"3469splitHere46","12071704splitHere46","this"
"3470splitHere46","12071704splitHere46","DialogInterface.OnClickListener"
"3471splitHere46","12071704splitHere46","public void onClick(DialogInterface dialog, int which) {<newline46mondego>    if (dialog == renderView.getLosingDialog()) {<newline46mondego>        if (which == DialogInterface.BUTTON_POSITIVE) {<newline46mondego>            // TODO: Polish the dialog.<newline46mondego>            // TODO: Add a method of obtaining the score from RenderView.<newline46mondego>            renderView.getStage().reset();<newline46mondego>            renderView.setDialogFlag(false);<newline46mondego>        } else if (which == DialogInterface.BUTTON_NEGATIVE) {<newline46mondego>            PlayActivity.this.onBackPressed();<newline46mondego>        }<newline46mondego>    } else if dialog == renderView.getWinningDialog()) {<newline46mondego>        // etc...<newline46mondego>    } else if dialog == renderView.getPausingDialog()) {<newline46mondego>        // etc...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3472splitHere46","12071717splitHere46","Cell.CELL_TYPE_BLANK"
"3473splitHere46","12071717splitHere46","Row"
"3474splitHere46","12071717splitHere46","null"
"3475splitHere46","12071846splitHere46","capacity = capacity << 1;"
"3476splitHere46","12071846splitHere46","initialCapacity"
"3477splitHere46","12071846splitHere46","initialCapacity"
"3478splitHere46","12071846splitHere46","capacity"
"3479splitHere46","12071894splitHere46","web.xml"
"3480splitHere46","12071894splitHere46","@WebServlet"
"3481splitHere46","12071894splitHere46","loadOnStartup"
"3482splitHere46","12071894splitHere46",".java"
"3483splitHere46","12071894splitHere46","@WebServlet(name=<doubleQuotes46>MyServlet<doubleQuotes46>, value=<doubleQuotes46>/MyServlet<doubleQuotes46>, loadOnStartup=1)<newline46mondego>public class MyServlet extends HttpServlet {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3484splitHere46","12072040splitHere46","runOnUiThread(new Runnable() {          <newline46mondego>   public void run() {                 <newline46mondego>    Toast.makeText(null, <doubleQuotes46>Could not connect to server<doubleQuotes46>, Toast.LENGTH_LONG).show();     <newline46mondego> }            <newline46mondego>}); <newline46mondego>"
"3485splitHere46","12072055splitHere46","class LevelItem<newline46mondego>{<newline46mondego>   private final Level level;<newline46mondego>   public LevelItem(Level level) {this.level=level;}<newline46mondego>   public String toString()<newline46mondego>   {<newline46mondego>     if(Level.WARNING.equals(level) return <doubleQuotes46>Warning<doubleQuotes46>;<newline46mondego>     if(Level.INFO.equals(level) return <doubleQuotes46>Information<doubleQuotes46>;<newline46mondego>...<newline46mondego>     }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3486splitHere46","12072110splitHere46","File dbfile = new File(<doubleQuotes46>/sdcard/someFolderName/app.db<doubleQuotes46> ); <newline46mondego>SQLiteDatabase db2 = SQLiteDatabase.openOrCreateDatabase(dbfile, null);<newline46mondego>"
"3487splitHere46","12072110splitHere46","Environment.getExternalStorageDirectory()"
"3488splitHere46","12072110splitHere46","/sdcard"
"3489splitHere46","12072110splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.WRITE_EXTERNAL_STORAGE<doubleQuotes46> /><newline46mondego>"
"3490splitHere46","12072110splitHere46",".db"
"3491splitHere46","12072110splitHere46","air"
"3492splitHere46","12072110splitHere46","java"
"3493splitHere46","12072193splitHere46","final BlockingQueue<Runnable> queue = ...<newline46mondego><newline46mondego>Runnable runs = new Runnable() { public void run() {<newline46mondego>    while(running)<newline46mondego>        queue.take().run();<newline46mondego>}};<newline46mondego>"
"3494splitHere46","12072227splitHere46","${locale}<newline46mondego>"
"3495splitHere46","12072227splitHere46","<bean id=<doubleQuotes46>viewShoppingCart<doubleQuotes46> class=<doubleQuotes46>x.y.z.ViewShoppingCartController<doubleQuotes46>><newline46mondego>"
"3496splitHere46","12072227splitHere46","<bean class=<doubleQuotes46>org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping<doubleQuotes46>/><newline46mondego><bean class=<doubleQuotes46>org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter<doubleQuotes46>/><newline46mondego><context:component-scan base-package=<doubleQuotes46>com.example.springmvc<doubleQuotes46>/><newline46mondego>"
"3497splitHere46","12072227splitHere46","<beans xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46><newline46mondego>xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>xmlns:mvc=<doubleQuotes46>http://www.springframework.org/schema/mvc<doubleQuotes46><newline46mondego>    xmlns:context=<doubleQuotes46>http://www.springframework.org/schema/context<doubleQuotes46><newline46mondego>xsi:schemaLocation=<doubleQuotes46>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<newline46mondego>    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd<newline46mondego>    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd<doubleQuotes46>><newline46mondego><newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>  <!-- Configures Handler Interceptors --><newline46mondego>  <mvc:interceptors><newline46mondego>    <!-- Changes the locale when a 'locale' request parameter is sent; e.g. <newline46mondego>    /?locale=de --><newline46mondego>    <bean class=<doubleQuotes46>org.springframework.web.servlet.i18n.LocaleChangeInterceptor<doubleQuotes46> /><newline46mondego>  </mvc:interceptors><newline46mondego>  <bean id=<doubleQuotes46>localeResolver<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.servlet.i18n.CookieLocaleResolver<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>cookieName<doubleQuotes46> value=<doubleQuotes46>myCookie<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>defaultLocale<doubleQuotes46> value=<doubleQuotes46>de<doubleQuotes46> /><newline46mondego>  </bean><newline46mondego>....<newline46mondego></beans><newline46mondego>"
"3498splitHere46","12072335splitHere46","BigInteger"
"3499splitHere46","12072335splitHere46","long"
"3500splitHere46","12072347splitHere46","public class MyClass{<newline46mondego><newline46mondego>    private int[][] myArray;<newline46mondego>    private int myArraySize;<newline46mondego><newline46mondego>    public MyClass(int N){<newline46mondego><newline46mondego>      if(N <= 0) <newline46mondego>        throw new IndexOutOfBoundsException(<doubleQuotes46>Input Error: N <= 0<doubleQuotes46>);  <newline46mondego><newline46mondego>      myArray = new int[N][N];<newline46mondego>      myArraySize = N;            <newline46mondego>    }<newline46mondego><newline46mondego>    ...<newline46mondego> }<newline46mondego>"
"3501splitHere46","12072347splitHere46","public void aMethod(int i, int j){<newline46mondego><newline46mondego>    // N won't work here. Is myArray.length the best alternative       <newline46mondego>    if(i < 0 || i >= myArray.length ) <newline46mondego>      throw new IndexOutOfBoundsException(<doubleQuotes46>Index i out of bounds<doubleQuotes46>);<newline46mondego>    if(j < 0 || j >= myArray[i].length) <newline46mondego>      throw new IndexOutOfBoundsException(<doubleQuotes46>Column index j out of bounds<doubleQuotes46>);            <newline46mondego>}<newline46mondego>"
"3502splitHere46","12072539splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    String dthours = <doubleQuotes46>07:4856:35563333<doubleQuotes46>;<newline46mondego>    SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>HH:MM:SS<doubleQuotes46>);<newline46mondego>    df.setLenient(false);<newline46mondego>    try<newline46mondego>    {<newline46mondego>        Date d = df.parse(dthours);<newline46mondego>        System.out.println(<doubleQuotes46>d = <doubleQuotes46> + d);<newline46mondego>    }<newline46mondego>    catch (ParseException e)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>parseError<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3503splitHere46","12072566splitHere46","rowSorter.toggleSortOrder(colIndex);<newline46mondego>"
"3504splitHere46","12072634splitHere46","<dependency><newline46mondego>        <groupId>other-group</groupId><newline46mondego>        <artifactId>dependency-id</artifactId><newline46mondego>        <exclusions><newline46mondego>            <exclusion><newline46mondego>                <groupId>org.slf4j</groupId><newline46mondego>                                    <!-- or slf4j-jdk14, etc --><newline46mondego>                <artifactId>slf4j-simple</artifactId><newline46mondego>            </exclusion><newline46mondego>        </exclusions><newline46mondego>    </dependency><newline46mondego>"
"3505splitHere46","12072708splitHere46","<T extends OuterClass.InnerClass> Class<T> some_method()<newline46mondego>"
"3506splitHere46","12072708splitHere46","InnerClass"
"3507splitHere46","12072742splitHere46","public void sendMessage(View view) {<newline46mondego>    Log.w(<doubleQuotes46>msg<doubleQuotes46>, <doubleQuotes46>user click<doubleQuotes46>);<newline46mondego><newline46mondego>    Intent intent = new Intent(this, DisplayMessageActivity.class);<newline46mondego>    startActivity(intent);<newline46mondego>}<newline46mondego>"
"3508splitHere46","12072773splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><company><newline46mondego><URL><newline46mondego>    <RequestUrl>http://www.google.com</RequestUrl><newline46mondego>    <RequestData><newline46mondego>    <![CDATA[<newline46mondego>        <v:Envelope xmlns:i=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>                 xmlns:d=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> xmlns:c=<doubleQuotes46>http://schemas.xmlsoap.org/soap/encoding/<doubleQuotes46> xmlns:v=<doubleQuotes46>http://schemas.xmlsoap.org/soap/envelope/<doubleQuotes46>><v:Header /><v:Body><PingMe xmlns=<doubleQuotes46>visum.Server.Service<doubleQuotes46> id=<doubleQuotes46>o0<doubleQuotes46> c:root=<doubleQuotes46>1<doubleQuotes46>><Data i:type=<doubleQuotes46>d:string<doubleQuotes46>>ping</Data></PingMe></v:Body></v:Envelope><newline46mondego>    ]]><newline46mondego>    </RequestData><newline46mondego></URL><newline46mondego></company><newline46mondego>"
"3509splitHere46","12072807splitHere46","SomeClass s2 = s1;<newline46mondego>"
"3510splitHere46","12072807splitHere46","s2"
"3511splitHere46","12072807splitHere46","s1"
"3512splitHere46","12072807splitHere46","SomeClass"
"3513splitHere46","12072807splitHere46","s1"
"3514splitHere46","12072807splitHere46","s2"
"3515splitHere46","12072807splitHere46","int, double, float, boolean, char, byte, short, long"
"3516splitHere46","12072807splitHere46","="
"3517splitHere46","12072807splitHere46","int b = a;<newline46mondego>"
"3518splitHere46","12072807splitHere46","b"
"3519splitHere46","12072807splitHere46","a"
"3520splitHere46","12072807splitHere46","a"
"3521splitHere46","12072807splitHere46","b"
"3522splitHere46","12072807splitHere46","s1"
"3523splitHere46","12072807splitHere46","SomeClass s1 = new SomeClass(<doubleQuotes46>first<doubleQuotes46>);<newline46mondego>SomeClass s2 = new SomeClass(s1.getText());<newline46mondego>"
"3524splitHere46","12072807splitHere46","SomeClass"
"3525splitHere46","12072807splitHere46","class SomeClass {<newline46mondego>  private String text;<newline46mondego>  // all your fields and methods go here<newline46mondego><newline46mondego>  public SomeClass(SomeClass copyInstance) {<newline46mondego>    this.text = new String(copyInstance.text);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3526splitHere46","12072807splitHere46","SomeClass s2 = new SomeClass(s1);<newline46mondego>"
"3527splitHere46","12072908splitHere46","."
"3528splitHere46","12072908splitHere46","<doubleQuotes46>(?s).*</p:panelGrid>.*<doubleQuotes46><newline46mondego>"
"3529splitHere46","12072910splitHere46","Locale locale = new Locale(<doubleQuotes46>abcd<doubleQuotes46>);"
"3530splitHere46","12072910splitHere46","widget_abcd.properties"
"3531splitHere46","12072910splitHere46","ResourceBundle resource = ResourceBundle.getBundle(<doubleQuotes46>widget<doubleQuotes46>, new Locale(<doubleQuotes46>abcd<doubleQuotes46>));"
"3532splitHere46","12072910splitHere46","java.util.Locale"
"3533splitHere46","12072910splitHere46","Because a Locale object is just an identifier for a region, no validity check is performed when you construct a Locale. If you want to see whether particular resources are available for the Locale you construct, you must query those resources."
"3534splitHere46","12072910splitHere46","Locale.getAvailableLocales()"
"3535splitHere46","12072942splitHere46","class Superclass {<newline46mondego>    public static final void method() { }<newline46mondego>}<newline46mondego><newline46mondego>class Subclass extends Superclass {<newline46mondego>    public static void method() { } // doesn't compile<newline46mondego>}<newline46mondego>"
"3536splitHere46","12072942splitHere46","class Superclass {<newline46mondego>    public static void method() { }<newline46mondego>}<newline46mondego>"
"3537splitHere46","12073033splitHere46","class Feeder<C extends Consumer<F>, F extends FoodType>{}<newline46mondego>"
"3538splitHere46","12073033splitHere46","class Feeder<C extends Consumer<? super F>, F extends FoodType>{}<newline46mondego>"
"3539splitHere46","12073033splitHere46","extend"
"3540splitHere46","12073033splitHere46","super"
"3541splitHere46","12073159splitHere46","setLocationRelativeTo(null);"
"3542splitHere46","12073159splitHere46","pack()"
"3543splitHere46","12073159splitHere46","setLocationRelativeTo(null);"
"3544splitHere46","12073159splitHere46","setLocationByPlatform(true)"
"3545splitHere46","12073160splitHere46","DATE"
"3546splitHere46","12073160splitHere46","Date"
"3547splitHere46","12073160splitHere46","cannot cast Long to Date"
"3548splitHere46","12073160splitHere46","Long"
"3549splitHere46","12073160splitHere46","Date"
"3550splitHere46","12073160splitHere46","new Date((long) object)"
"3551splitHere46","12073160splitHere46","new Date(1000 * (long) object)"
"3552splitHere46","12073160splitHere46","DateTime"
"3553splitHere46","12073160splitHere46","Date"
"3554splitHere46","12073180splitHere46","def uploadFile() = <newline46mondego>    Action( parse.multipartFormData(myPartHandler) ) <newline46mondego>    {<newline46mondego>      request => Ok(<doubleQuotes46>Done<doubleQuotes46>)<newline46mondego>    }<newline46mondego><newline46mondego>def myPartHandler: BodyParsers.parse.Multipart.PartHandler[MultipartFormData.FilePart[Result]] = {<newline46mondego>        parse.Multipart.handleFilePart {<newline46mondego>          case parse.Multipart.FileInfo(partName, filename, contentType) =><newline46mondego>            //Still dirty: the path of the file is in the partName...<newline46mondego>            String path = partName;<newline46mondego><newline46mondego>            //Set up the PipedOutputStream here, give the input stream to a worker thread<newline46mondego>            val pos:PipedOutputStream = new PipedOutputStream();<newline46mondego>            val pis:PipedInputStream  = new PipedInputStream(pos);<newline46mondego>            val worker:UploadFileWorker = new UploadFileWorker(path,pis);<newline46mondego>            worker.contentType = contentType.get;<newline46mondego>            worker.start();<newline46mondego><newline46mondego>            //Read content to the POS<newline46mondego>            Iteratee.fold[Array[Byte], PipedOutputStream](pos) { (os, data) =><newline46mondego>              os.write(data)<newline46mondego>              os<newline46mondego>            }.mapDone { os =><newline46mondego>              os.close()<newline46mondego>              Ok(<doubleQuotes46>upload done<doubleQuotes46>)<newline46mondego>            }<newline46mondego>        }<newline46mondego>   }<newline46mondego>"
"3555splitHere46","12073180splitHere46","public class UploadFileWorker extends Thread {<newline46mondego>String path;<newline46mondego>PipedInputStream pis;<newline46mondego><newline46mondego>public String contentType = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>public UploadFileWorker(String path, PipedInputStream pis) {<newline46mondego>    super();<newline46mondego>    this.path = path;<newline46mondego>    this.pis = pis;<newline46mondego>}<newline46mondego><newline46mondego>public void run() {<newline46mondego>    try {<newline46mondego>        myApi.store(pis, path, contentType);<newline46mondego>        pis.close();<newline46mondego>    } catch (Exception ex) {<newline46mondego>        ex.printStackTrace();<newline46mondego>        try {pis.close();} catch (Exception ex2) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3556splitHere46","12073189splitHere46","some.key=C''est la vie!<newline46mondego>"
"3557splitHere46","12073238splitHere46","String s = <doubleQuotes46>ERR|appLogger|[Manager|Request]RequestFailed[com.package.file]uploading[com.file]<doubleQuotes46>;<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>\\[([A-Za-z0-9.]+)\\]<doubleQuotes46>);<newline46mondego>Matcher m = pattern.matcher(s);<newline46mondego>if (m.find()) {<newline46mondego>    System.out.println(m.group(1)); // com.package.file<newline46mondego>}<newline46mondego>"
"3558splitHere46","12073339splitHere46","hash"
"3559splitHere46","12073464splitHere46","fr.la.juserright.metier.Ressource"
"3560splitHere46","12073464splitHere46","public Ressource(int arg1, String arg2, String arg3, String arg4, int arg5) {}<newline46mondego>"
"3561splitHere46","12073464splitHere46","new Resource()"
"3562splitHere46","12073464splitHere46","ResourceDAO"
"3563splitHere46","12073464splitHere46","Ressource"
"3564splitHere46","12073464splitHere46","List<Ressource>"
"3565splitHere46","12073464splitHere46","RessourceDAO"
"3566splitHere46","12073464splitHere46","Ressource"
"3567splitHere46","12073464splitHere46","javax.faces"
"3568splitHere46","12073464splitHere46","java.lang"
"3569splitHere46","12073533splitHere46","Map<String, Integer> cout = new HashMap<String, Integer>();<newline46mondego><newline46mondego>for (String line : StringArray) {<newline46mondego>  for (String s : line.split(<doubleQuotes46>-<doubleQuotes46>)) {<newline46mondego>     Integer currentCount = counts.get(s);<newline46mondego>     if (currentCount == null)<newline46mondego>       counts.put(s, 1);<newline46mondego>     else<newline46mondego>       counts.put(s, currentCount + 1);<newline46mondego>  }<newline46mondego>}<newline46mondego>//Look in currentCount all keys with a value larger than 1.<newline46mondego>"
"3570splitHere46","12073533splitHere46","else"
"3571splitHere46","12073643splitHere46","[ref1,ref2,ref3,...,refN]<newline46mondego>ref1 -> object1<newline46mondego>ref2 -> object2<newline46mondego>...<newline46mondego>refN -> objectN<newline46mondego>"
"3572splitHere46","12073643splitHere46","[object1,object2,...,objectN]<newline46mondego>"
"3573splitHere46","12073643splitHere46","length"
"3574splitHere46","12073661splitHere46","onBackPressed()"
"3575splitHere46","12073661splitHere46","public void onBackPressed ()<newline46mondego>"
"3576splitHere46","12073661splitHere46","@Override<newline46mondego>    public void onBackPressed() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>            //this is where you start your activity<newline46mondego>    }<newline46mondego>"
"3577splitHere46","12073767splitHere46","Hand.add()"
"3578splitHere46","12073767splitHere46","for (int i = 0; i < cards.length; i++)<newline46mondego>   cards[i] = new Card(card.valueReturn(), card.suitReturn());<newline46mondego>}<newline46mondego>"
"3579splitHere46","12073767splitHere46","for (int i = 0; i < cards.length; i++)<newline46mondego>   if (cards[i] == null) {<newline46mondego>     cards[i] = card;<newline46mondego>     return;<newline46mondego>   } <newline46mondego>}<newline46mondego>"
"3580splitHere46","12074047splitHere46","config.set(<doubleQuotes46>hbase.zookeeper.quorum<doubleQuotes46>, <doubleQuotes46>172.80.72.86<doubleQuotes46>);  // Your remote Pc where the zookeeper is running. Mention the port if needed.<doubleQuotes46>172.80.72.86:60020<doubleQuotes46><newline46mondego>"
"3581splitHere46","12074220splitHere46","javafx.application.Platform.runLater(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        // some code here<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3582splitHere46","12074415splitHere46","Desktop#open"
"3583splitHere46","12074415splitHere46","File"
"3584splitHere46","12074489splitHere46","<%! %>"
"3585splitHere46","12074489splitHere46","ServletContext"
"3586splitHere46","12074489splitHere46","getServletContext()"
"3587splitHere46","12074489splitHere46","init(ServletConfig)"
"3588splitHere46","12074489splitHere46","application"
"3589splitHere46","12074489splitHere46","ServletContext"
"3590splitHere46","12074489splitHere46","<% application.setAttribute(<doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>bar<doubleQuotes46>); %><newline46mondego>"
"3591splitHere46","12074529splitHere46","CustomAction"
"3592splitHere46","12074529splitHere46","returnValue"
"3593splitHere46","12074529splitHere46","allowing(mockedObject).f();<newline46mondego>will(new CustomAction(<doubleQuotes46>Returns new BusinessObj instance<doubleQuotes46>) {<newline46mondego>  @Override<newline46mondego>  public Object invoke(Invocation invocation) throws Throwable {<newline46mondego>    return new BusinessObj();<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"3594splitHere46","12074529splitHere46","import org.jmock.Expectations;<newline46mondego>import org.jmock.Mockery;<newline46mondego>import org.jmock.api.Invocation;<newline46mondego>import org.jmock.integration.junit4.JMock;<newline46mondego>import org.jmock.integration.junit4.JUnit4Mockery;<newline46mondego>import org.jmock.lib.action.CustomAction;<newline46mondego>import org.junit.Assert;<newline46mondego>import org.junit.Test;<newline46mondego>import org.junit.runner.RunWith;<newline46mondego><newline46mondego>@RunWith(JMock.class)<newline46mondego>public class TestClass {<newline46mondego><newline46mondego>  Mockery context = new JUnit4Mockery();<newline46mondego><newline46mondego>  @Test<newline46mondego>  public void testMethod() {<newline46mondego>    final Foo foo = context.mock(Foo.class);<newline46mondego><newline46mondego>    context.checking(new Expectations() {<newline46mondego>      {<newline46mondego>        allowing(foo).f();<newline46mondego>        will(new CustomAction(<doubleQuotes46>Returns new BusinessObj instance<doubleQuotes46>) {<newline46mondego>          @Override<newline46mondego>          public Object invoke(Invocation invocation) throws Throwable {<newline46mondego>            return new BusinessObj();<newline46mondego>          }<newline46mondego>        });<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    BusinessObj obj1 = foo.f();<newline46mondego>    BusinessObj obj2 = foo.f();<newline46mondego><newline46mondego>    Assert.assertNotNull(obj1);<newline46mondego>    Assert.assertNotNull(obj2);<newline46mondego>    Assert.assertNotSame(obj1, obj2);<newline46mondego>  }<newline46mondego><newline46mondego>  private interface Foo {<newline46mondego>    BusinessObj f();<newline46mondego>  }<newline46mondego><newline46mondego>  private static class BusinessObj {<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3595splitHere46","12074582splitHere46","Comparable<T>"
"3596splitHere46","12074582splitHere46","public interface Identifiable<T extends Comparable<T>> {    <newline46mondego>    public T getIdentifier();<newline46mondego>}<newline46mondego><newline46mondego>public class Agreement implements Identifiable<Long> {<newline46mondego><newline46mondego>    private final Long id;<newline46mondego><newline46mondego>    public Long getIdentifier() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3597splitHere46","12074582splitHere46","T"
"3598splitHere46","12074582splitHere46","T"
"3599splitHere46","12074582splitHere46","class Funny implements Comparable<Long> { ... }<newline46mondego>class Funnier implements Identifiable {<newline46mondego>    public Comparable<Long> getIdentifier() {<newline46mondego>        return new Funny();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>Identifiable<Funny> funnier;<newline46mondego>funnier.getIdentifier().compareTo(funnier.getIdentifier());<newline46mondego>// You just tried to pass a Funny to compareTo(Long)<newline46mondego>"
"3600splitHere46","12074625splitHere46","List"
"3601splitHere46","12074625splitHere46","Set"
"3602splitHere46","12074625splitHere46","@Fetch(FetchMode.SELECT)"
"3603splitHere46","12074625splitHere46","fetch = FetchType.EAGER"
"3604splitHere46","12074625splitHere46","One"
"3605splitHere46","12074625splitHere46","@Fetch(FetchMode.SUBSELECT)"
"3606splitHere46","12074625splitHere46","fetch = FetchType.EAGER"
"3607splitHere46","12074625splitHere46","List<SomethingElse>"
"3608splitHere46","12074750splitHere46","NavigableMap<Integer, Integer> map = new TreeMap<>();<newline46mondego>map.put(1, 10);<newline46mondego>map.put(0, -10);<newline46mondego>map.put(5, 25);<newline46mondego>map.put(3, 20);<newline46mondego><newline46mondego>// find the value below.<newline46mondego>int key = 2;<newline46mondego>Map.Entry<Integer, Integer> entry1 = map.floorEntry(key);<newline46mondego>Map.Entry<Integer, Integer> entry2 = map.ceilingEntry(key);<newline46mondego>System.out.println(key + <doubleQuotes46> is between <doubleQuotes46> + entry1 + <doubleQuotes46> and <doubleQuotes46> + entry2);<newline46mondego>"
"3609splitHere46","12074750splitHere46","2 is between 1=10 and 3=20<newline46mondego>"
"3610splitHere46","12074750splitHere46","O(log N)"
"3611splitHere46","12074857splitHere46","cs.execute();<newline46mondego>double x = cs.getBigDecimal(3).doubleValue(); <newline46mondego>double y = cs.getBigDecimal(4).doubleValue();<newline46mondego>"
"3612splitHere46","12074920splitHere46","java.lang.NoClassDefFoundError: uk/co/caprica/vlcj/component/EmbeddedMediaPlayerComponent.<newline46mondego>"
"3613splitHere46","12074920splitHere46","uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent"
"3614splitHere46","12074920splitHere46","archive"
"3615splitHere46","12074920splitHere46","applet"
"3616splitHere46","12074920splitHere46","<applet <newline46mondego>    code=<doubleQuotes46>Test<doubleQuotes46> <newline46mondego>    archive=<doubleQuotes46>SignedTest.jar,vlcj-2.1.0.jar,platform-3.4.0.jar,jna-3.4.0.jar<doubleQuotes46> <newline46mondego>    width=200 <newline46mondego>    height=200><newline46mondego></applet><newline46mondego>"
"3617splitHere46","12074943splitHere46","ImageIO"
"3618splitHere46","12074943splitHere46","File"
"3619splitHere46","12074943splitHere46","ImageIO.write"
"3620splitHere46","12074943splitHere46","FileOutputStream"
"3621splitHere46","12074943splitHere46","write"
"3622splitHere46","12074943splitHere46","ImageIO.write"
"3623splitHere46","12074943splitHere46","stream = createImageOutputStream(output);<newline46mondego>"
"3624splitHere46","12074943splitHere46","stream.close();<newline46mondego>"
"3625splitHere46","12074943splitHere46","createImageOutputStream"
"3626splitHere46","12074943splitHere46","null"
"3627splitHere46","12075018splitHere46","JAXBContext"
"3628splitHere46","12075018splitHere46","JAXBContext jc = JAXBContext.newInstance(<doubleQuotes46>org.w3._2004._08.xop.include<doubleQuotes46>);<newline46mondego>"
"3629splitHere46","12075018splitHere46","ContextResolver"
"3630splitHere46","12075018splitHere46","JAXBContext"
"3631splitHere46","12075018splitHere46","import java.util.*;<newline46mondego>import javax.ws.rs.Produces;<newline46mondego>import javax.ws.rs.ext.*;<newline46mondego>import javax.xml.bind.*;<newline46mondego>import org.eclipse.persistence.jaxb.JAXBContextFactory;<newline46mondego><newline46mondego>@Provider<newline46mondego>@Produces({<doubleQuotes46>application/xml<doubleQuotes46>, <doubleQuotes46>application/json<doubleQuotes46>})<newline46mondego>public class SampleContextResolver implements ContextResolver<JAXBContext> {<newline46mondego><newline46mondego>    private JAXBContext jc;<newline46mondego><newline46mondego>    public SampleContextResolver() {<newline46mondego>        try {<newline46mondego>            jc = JAXBContext.newInstance(<doubleQuotes46>org.w3._2004._08.xop.include<doubleQuotes46>);<newline46mondego>        } catch(JAXBException e) {<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public JAXBContext getContext(Class<?> clazz) {<newline46mondego>        if(clazz.getPackage().getName().equals(<doubleQuotes46>org.w3._2004._08.xop.include<doubleQuotes46>)) {<newline46mondego>            return jc;<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3632splitHere46","12075027splitHere46","paintComponent"
"3633splitHere46","12075027splitHere46","paintComponent"
"3634splitHere46","12075027splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class TempProject extends JPanel{<newline46mondego>    /** Stores info about circles  */<newline46mondego>    public ArrayList<CircleInfo> circles = new ArrayList<CircleInfo>();<newline46mondego><newline46mondego>    /** fields that were in example code */<newline46mondego>    public int count = 0;<newline46mondego>    public final int radius = 20;<newline46mondego>    public final int clients = 20;<newline46mondego><newline46mondego>    public TempProject(){<newline46mondego><newline46mondego>        addMouseListener(new MouseAdapter(){<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseClicked(MouseEvent evt) {<newline46mondego>                count += 1;<newline46mondego>                if (count <= clients) {<newline46mondego>                        // Store info about the circle to draw<newline46mondego>                    circles.add(new CircleInfo(evt.getX() - (radius / 2), evt.getY() - (radius / 2), radius));<newline46mondego>                        // Tell swing to repaint asap<newline46mondego>                    repaint();<newline46mondego>                }<newline46mondego>            }});<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g ) {<newline46mondego>            super.paintComponent(g);<newline46mondego><newline46mondego>            //Iterates through saved circles and paints them<newline46mondego>        for(CircleInfo circle : circles){<newline46mondego>            g.drawOval(circle.x - circle.radius, circle.y - circle.radius, 2 * circle.radius, 2 * circle.radius);<newline46mondego>            g.setColor(Color.BLACK);<newline46mondego>            g.fillOval(circle.x - circle.radius, circle.y - circle.radius, 2 * circle.radius, 2 * circle.radius);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[])    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                frame.setContentPane(new TempProject());  <newline46mondego>                frame.setPreferredSize(new Dimension(400, 300));<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    /** Simple class for storing Circle info */<newline46mondego>    public static class CircleInfo{<newline46mondego>        int x = 0;<newline46mondego>        int y = 0;<newline46mondego>        int radius = 0;<newline46mondego><newline46mondego>        public CircleInfo(int x, int y, int radius){<newline46mondego>            this.x = x; this.y = y; this.radius = radius;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3635splitHere46","12075203splitHere46","AdjustmentListener"
"3636splitHere46","12075203splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class TempProject extends JPanel{<newline46mondego><newline46mondego>    public static void main(String args[])    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                JPanel panel = new JPanel();<newline46mondego>                panel.setPreferredSize(new Dimension(300, 2000));<newline46mondego>                JScrollPane pane = new JScrollPane(panel);<newline46mondego>                pane.setPreferredSize(new Dimension(400, 300));<newline46mondego>                pane.getVerticalScrollBar().addAdjustmentListener(new AdjustmentListener(){<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void adjustmentValueChanged(AdjustmentEvent e) {<newline46mondego>                        System.out.println(<doubleQuotes46>Hi Mom!<doubleQuotes46>);<newline46mondego>                    }});<newline46mondego><newline46mondego>                frame.setContentPane(pane); <newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3637splitHere46","12075390splitHere46","s= s.replaceAll(<doubleQuotes46>'<doubleQuotes46>, <doubleQuotes46>''<doubleQuotes46>);"
"3638splitHere46","12075453splitHere46","play-authenticate-usage"
"3639splitHere46","12075525splitHere46","static"
"3640splitHere46","12075525splitHere46","Class"
"3641splitHere46","12075525splitHere46","ClassLoader"
"3642splitHere46","12075525splitHere46","public static synchronized int getCount(){<newline46mondego>"
"3643splitHere46","12075525splitHere46","Counter.class"
"3644splitHere46","12075525splitHere46","public static int getCount() {<newline46mondego>    synchronized (Counter.class) {<newline46mondego>    }<newline46mondego>"
"3645splitHere46","12075525splitHere46","static"
"3646splitHere46","12075525splitHere46","public synchronized void setCount(int count){<newline46mondego>"
"3647splitHere46","12075525splitHere46","Counter"
"3648splitHere46","12075525splitHere46","public void setCount(int count){<newline46mondego>    synchronized (this) {<newline46mondego>       ...<newline46mondego>"
"3649splitHere46","12075525splitHere46","Counter"
"3650splitHere46","12075525splitHere46","counter1"
"3651splitHere46","12075525splitHere46","counter2"
"3652splitHere46","12075525splitHere46","counter1.getCount()"
"3653splitHere46","12075525splitHere46","counter2.getCount()"
"3654splitHere46","12075525splitHere46","Class"
"3655splitHere46","12075525splitHere46","counter1.setCount(...)"
"3656splitHere46","12075525splitHere46","counter2.setCount()"
"3657splitHere46","12075525splitHere46","counter1"
"3658splitHere46","12075525splitHere46","counter2"
"3659splitHere46","12075525splitHere46","static"
"3660splitHere46","12075525splitHere46","getCount()"
"3661splitHere46","12075525splitHere46","Counter.class"
"3662splitHere46","12075525splitHere46","setCount(...)"
"3663splitHere46","12075525splitHere46","counter1"
"3664splitHere46","12075525splitHere46","counter2"
"3665splitHere46","12075525splitHere46","Counter.class"
"3666splitHere46","12075525splitHere46","Counter.class"
"3667splitHere46","12075525splitHere46","synchronized"
"3668splitHere46","12075622splitHere46","INSTANCE"
"3669splitHere46","12075622splitHere46","getInstance"
"3670splitHere46","12075622splitHere46","volatile"
"3671splitHere46","12075622splitHere46","SingletonHolder"
"3672splitHere46","12075622splitHere46","getInstance()"
"3673splitHere46","12075791splitHere46","import java.io.File;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class FindStringInFileTest {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        File f = new File(<doubleQuotes46>c:/test.txt<doubleQuotes46>);<newline46mondego>        String res = find(f);<newline46mondego><newline46mondego>        if (res != null) {<newline46mondego>            System.out.println(<doubleQuotes46>Found Meta Http-Equiv tag<doubleQuotes46>);<newline46mondego>            System.out.println(res);//print META HTTP-EQUIV line<newline46mondego>            //check the line for whatver dates etc here<newline46mondego>        } else {<newline46mondego>            System.out.println(<doubleQuotes46>Couldnt find Meta Http-Equiv tag<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static String find(File f) {<newline46mondego>        String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        Scanner in = null;<newline46mondego>        try {<newline46mondego>            in = new Scanner(new FileReader(f));<newline46mondego>            while (in.hasNextLine()) {<newline46mondego>                String tmp = in.nextLine();<newline46mondego>                if (containsMetaHttpEquiv(tmp)) {<newline46mondego>                    result = tmp;//assign line which has META HTTP-EQUIV tag<newline46mondego>                    break;//so we dont check more<newline46mondego>                } else {<newline46mondego>                    result = null;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } finally {<newline46mondego>            try {<newline46mondego>                in.close();<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    public static boolean containsMetaHttpEquiv(String str) {<newline46mondego>        if (str.contains(<doubleQuotes46><META HTTP-EQUIV=\<doubleQuotes46>Expires\<doubleQuotes46> CONTENT=<doubleQuotes46>)) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3674splitHere46","12075791splitHere46","META HTTP-EQUIV"
"3675splitHere46","12075791splitHere46","null"
"3676splitHere46","12075791splitHere46","META HTTP-EQUIV"
"3677splitHere46","12075791splitHere46","substring()"
"3678splitHere46","12075791splitHere46","indexOf()"
"3679splitHere46","12075791splitHere46","SimpleDateFormat"
"3680splitHere46","12075791splitHere46","public static String getContentOfMetaTag(String tag) {<newline46mondego>    String search = <doubleQuotes46>CONTENT=<doubleQuotes46>;<newline46mondego>    return tag.substring(tag.indexOf(<doubleQuotes46>CONTENT=<doubleQuotes46>) + search.length() + 1, tag.indexOf('>') - 1);<newline46mondego>}<newline46mondego>"
"3681splitHere46","12075791splitHere46","String"
"3682splitHere46","12075791splitHere46","find(new File)"
"3683splitHere46","12075791splitHere46","getContentOfMetaTag(String tag)"
"3684splitHere46","12075939splitHere46","http://www.xn--htel-vqa.fr/"
"3685splitHere46","12075995splitHere46","public class ExcelParser {<newline46mondego><newline46mondego>    private HSSFWorkbook wb;<newline46mondego><newline46mondego>    public ExcelParser(File xlsFile) throws Exception{<newline46mondego><newline46mondego>        wb = new HSSFWorkbook(new FileInputStream(xlsFile));<newline46mondego>    }<newline46mondego><newline46mondego>    public String getValue(String sheetName, int rowNum, int celNum) throws Exception{<newline46mondego>        try{<newline46mondego>            HSSFSheet sheet = null;<newline46mondego>            for(int i=0; i<wb.getNumberOfSheets();i++){<newline46mondego>                if(wb.getSheetName(i).trim().toLowerCase().equals(sheetName.trim().toLowerCase())){<newline46mondego>                    sheet = wb.getSheetAt(i);<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            if(sheet == null){<newline46mondego>                throw new Exception(<doubleQuotes46>Sheet name '<doubleQuotes46>+sheetName+<doubleQuotes46>' not found.<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>            HSSFRow row     = sheet.getRow(rowNum);        <newline46mondego>            if(row == null){return <doubleQuotes46><doubleQuotes46>;}<newline46mondego>            HSSFCell cell   = row.getCell(celNum);<newline46mondego>            if(cell== null){return <doubleQuotes46><doubleQuotes46>;}<newline46mondego><newline46mondego>            if(cell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC){<newline46mondego>                return String.valueOf(cell.getNumericCellValue()).trim();<newline46mondego>            } else if (cell.getCellType() == HSSFCell.CELL_TYPE_STRING){<newline46mondego>                return cell.getStringCellValue().trim();        <newline46mondego>            }  else if (cell.getCellType() == HSSFCell.CELL_TYPE_ERROR){<newline46mondego>                return <doubleQuotes46><doubleQuotes46>;//cell.getErrorCellValue();        <newline46mondego>            }else if (cell.getCellType() == HSSFCell.CELL_TYPE_FORMULA){<newline46mondego>                try{<newline46mondego><newline46mondego>                    return cell.getStringCellValue().trim();<newline46mondego>                } catch (Exception e) {<newline46mondego>                    return <doubleQuotes46><doubleQuotes46>;<newline46mondego>                }<newline46mondego>            } else{<newline46mondego>                return cell.getStringCellValue().trim();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        catch (Exception e) {<newline46mondego>            throw new Exception(e.getMessage()+<doubleQuotes46> in row:<doubleQuotes46>+rowNum+<doubleQuotes46> col:<doubleQuotes46>+celNum+<doubleQuotes46> sheet:<doubleQuotes46>+sheetName);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3686splitHere46","12075995splitHere46","XSSF <newline46mondego>"
"3687splitHere46","12075995splitHere46","HSSF<newline46mondego>"
"3688splitHere46","12076135splitHere46","glEnable(GL_TEXTURE_2D)"
"3689splitHere46","12076135splitHere46","glDisable(GL_TEXTURE_2D)"
"3690splitHere46","12076234splitHere46","readPassword(String fmt, Object... args) <newline46mondego>"
"3691splitHere46","12076234splitHere46","public class SecurityCheckerMain {<newline46mondego><newline46mondego>    static String enteredPassword;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Console console = System.console();<newline46mondego><newline46mondego>        enteredPassword =<newline46mondego>            new String(console.readPassword(<doubleQuotes46>Please enter your password: <doubleQuotes46>));<newline46mondego>        Checker tc = new Checker(enteredPassword);<newline46mondego>        tc.checkSecurity();<newline46mondego><newline46mondego>    }<newline46mondego>"
"3692splitHere46","12076284splitHere46","public String extractWordFour(String text){<newline46mondego>    int i=0;<newline46mondego>    while (i<=text.length){<newline46mondego>        return text.charAt(0) + extractWordFour(text.substring(i));<newline46mondego>        i++;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3693splitHere46","12076284splitHere46","public String extractWordFour(String text){<newline46mondego>    for(int i=0;i<=text.length();i++){<newline46mondego>        return text.charAt(0) + text.substring(1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3694splitHere46","12076291splitHere46","<build><newline46mondego>        <pluginManagement><newline46mondego>                <plugins><newline46mondego>                    <plugin><newline46mondego>                        <artifactId>maven-compiler-plugin</artifactId><newline46mondego>                        <configuration><newline46mondego>                            <compilerId>eclipse</compilerId><newline46mondego>                            <source>1.6</source><newline46mondego>                            <target>1.6</target><newline46mondego>                        </configuration><newline46mondego>                        <dependencies><newline46mondego>                            <dependency><newline46mondego>                                <groupId>org.codehaus.plexus</groupId><newline46mondego>                                <artifactId>plexus-compiler-eclipse</artifactId><newline46mondego>                                <version>1.8.6</version><newline46mondego>                            </dependency><newline46mondego>                        </dependencies><newline46mondego>                    </plugin><newline46mondego>                </plugins><newline46mondego>         </pluginManagement><newline46mondego>   </build><newline46mondego>"
"3695splitHere46","12076415splitHere46","import com.itextpdf.text.Document;<newline46mondego>import com.itextpdf.text.DocumentException;<newline46mondego>import com.itextpdf.text.PageSize;<newline46mondego>import com.itextpdf.text.Paragraph;<newline46mondego>import com.itextpdf.text.pdf.PdfWriter;<newline46mondego>import java.io.FileOutputStream;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego><newline46mondego>public class MyPDF {<newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Document document = new Document(PageSize.A4, 50, 50, 50, 50);<newline46mondego>        try {<newline46mondego><newline46mondego>            PdfWriter.getInstance(document, new FileOutputStream(new File(<newline46mondego>                    <doubleQuotes46>Test.pdf<doubleQuotes46>)));<newline46mondego>            document.open();<newline46mondego>            String content = <doubleQuotes46>pdf data...<doubleQuotes46>;<newline46mondego>            Paragraph paragraph = new Paragraph(content);<newline46mondego>            document.add(paragraph);<newline46mondego><newline46mondego>        } catch (DocumentException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (FileNotFoundException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } finally {<newline46mondego>            document.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3696splitHere46","12076626splitHere46","XMLStreamReader"
"3697splitHere46","12076626splitHere46","XMLStreamReader"
"3698splitHere46","12076626splitHere46","XMLStreamReader"
"3699splitHere46","12076626splitHere46","package bgc.objects.rosy.standarderror.v3;<newline46mondego><newline46mondego>import javax.xml.bind.*;<newline46mondego>import javax.xml.stream.*;<newline46mondego>import javax.xml.transform.stream.StreamSource;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        XMLInputFactory xif = XMLInputFactory.newFactory();<newline46mondego>        StreamSource xml = new StreamSource(<doubleQuotes46>src/bgc/objects/rosy/standarderror/v3/input.xml<doubleQuotes46>);<newline46mondego>        XMLStreamReader xsr = xif.createXMLStreamReader(xml);<newline46mondego>        while(xsr.hasNext()) {<newline46mondego>            if(xsr.isStartElement() && xsr.getLocalName().equals(<doubleQuotes46>StandardError<doubleQuotes46>)) {<newline46mondego>                break;<newline46mondego>            }<newline46mondego>            xsr.next();<newline46mondego>        }<newline46mondego>        System.out.println(xsr.getLocalName());<newline46mondego><newline46mondego>        JAXBContext jc = JAXBContext.newInstance(StandardError.class);<newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        JAXBElement<StandardError> jb = unmarshaller.unmarshal(xsr, StandardError.class);<newline46mondego>        StandardError response = jb.getValue();<newline46mondego>        System.out.println(response);<newline46mondego><newline46mondego>        xsr.close();<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(jb, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3700splitHere46","12076626splitHere46","StandardError"
"3701splitHere46","12076626splitHere46","package bgc.objects.rosy.standarderror.v3;<newline46mondego><newline46mondego>//Compiled from StandardError.java (version 1.5 : 49.0, super bit)<newline46mondego>@javax.xml.bind.annotation.XmlAccessorType(value = javax.xml.bind.annotation.XmlAccessType.FIELD)<newline46mondego>@javax.xml.bind.annotation.XmlType(name = <doubleQuotes46><doubleQuotes46>, propOrder = { <doubleQuotes46>code<doubleQuotes46>, <doubleQuotes46>category<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>severity<doubleQuotes46>, <doubleQuotes46>description<doubleQuotes46>, <doubleQuotes46>environment<doubleQuotes46>, <doubleQuotes46>correlationId<doubleQuotes46> })<newline46mondego>@javax.xml.bind.annotation.XmlRootElement(name = <doubleQuotes46>StandardError<doubleQuotes46>)<newline46mondego>public class StandardError {<newline46mondego><newline46mondego>    // Field descriptor #15 J<newline46mondego>    protected long code;<newline46mondego><newline46mondego>    // Field descriptor #17 Ljava/lang/String;<newline46mondego>    @javax.xml.bind.annotation.XmlElement(required = true)<newline46mondego>    protected java.lang.String category;<newline46mondego><newline46mondego>    // Field descriptor #17 Ljava/lang/String;<newline46mondego>    @javax.xml.bind.annotation.XmlElement(required = true)<newline46mondego>    protected java.lang.String severity;<newline46mondego><newline46mondego>    // Field descriptor #24 Ljava/util/List;<newline46mondego>    // Signature: Ljava/util/List<Ljava/lang/String;>;<newline46mondego>    @javax.xml.bind.annotation.XmlElement(required = true)<newline46mondego>    protected java.util.List description;<newline46mondego><newline46mondego>    // Field descriptor #17 Ljava/lang/String;<newline46mondego>    @javax.xml.bind.annotation.XmlElement(required = true)<newline46mondego>    protected java.lang.String environment;<newline46mondego><newline46mondego>    // Field descriptor #17 Ljava/lang/String;<newline46mondego>    @javax.xml.bind.annotation.XmlElement(required = true)<newline46mondego>    protected java.lang.String correlationId;<newline46mondego><newline46mondego>    // Field descriptor #17 Ljava/lang/String;<newline46mondego>    @javax.xml.bind.annotation.XmlAttribute<newline46mondego>    protected java.lang.String version;<newline46mondego><newline46mondego>}<newline46mondego>"
"3702splitHere46","12076626splitHere46","@XmlSchema"
"3703splitHere46","12076626splitHere46","package-info"
"3704splitHere46","12076626splitHere46","bgc.objects.rosy.standarderror.v3"
"3705splitHere46","12076626splitHere46","@XmlSchema(namespace=<doubleQuotes46>urn:v3.standarderror.vss.objects.bgc<doubleQuotes46>, elementFormDefault=XmlNsForm.QUALIFIED)<newline46mondego>package bgc.objects.rosy.standarderror.v3;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>"
"3706splitHere46","12076626splitHere46","StandardError<newline46mondego>bgc.objects.rosy.standarderror.v3.StandardError@31884174<newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><StandardError xmlns=<doubleQuotes46>urn:v3.standarderror.vss.objects.bgc<doubleQuotes46>><newline46mondego>    <code>209526</code><newline46mondego>    <category>TECHNICAL</category><newline46mondego>    <severity>ERROR</severity><newline46mondego>    <description xmlns:ns10=<doubleQuotes46>urn:v3.standarderror.vss.objects.bgc<doubleQuotes46>>APC operation AUDIT on position L02LAB00075:1-1-1-5<newline46mondego>                returned an error : APC audit operation failed Caused by:<newline46mondego>                com.alcatel.ni.commands.framework.model.UnsupportedDslamException:<newline46mondego>                unsupported.dslam.message Caused by: Unsupported DSLAM. Internal<newline46mondego>                rollback of failed action : success.</description><newline46mondego>    <environment>PRO</environment><newline46mondego>    <correlationId></correlationId><newline46mondego></StandardError><newline46mondego>"
"3707splitHere46","12076712splitHere46","doSomething()"
"3708splitHere46","12076712splitHere46","Person"
"3709splitHere46","12076712splitHere46","Person"
"3710splitHere46","12076712splitHere46","person2"
"3711splitHere46","12076712splitHere46","doSomething"
"3712splitHere46","12076712splitHere46","Person"
"3713splitHere46","12076712splitHere46","doSomething"
"3714splitHere46","12076712splitHere46","ClassCastException"
"3715splitHere46","12076717splitHere46","driver.switchTo().defaultContent();<newline46mondego>"
"3716splitHere46","12076938splitHere46","*"
"3717splitHere46","12076967splitHere46","C:\images\"
"3718splitHere46","12077044splitHere46","/**<newline46mondego>     * Make sure that Date columns are sorted in a DESCENDING order by default<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    protected void onHeaderClick(Grid<ModelData> grid, int column)<newline46mondego>    {<newline46mondego>        if (cm.getColumn(column).getDateTimeFormat() != null)<newline46mondego>        {<newline46mondego>            SortInfo state = getSortState();<newline46mondego><newline46mondego>            if (state.getSortField() != null && state.getSortField().equals(cm.getColumn(column).getId()))<newline46mondego>            {<newline46mondego>                super.onHeaderClick(grid, column);<newline46mondego>                return;<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                this.headerColumnIndex = column;<newline46mondego>                if (!headerDisabled && cm.isSortable(column))<newline46mondego>                {<newline46mondego>                    doSort(column, SortDir.DESC);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            super.onHeaderClick(grid, column);<newline46mondego>            return;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"3719splitHere46","12077046splitHere46","@OneToOne"
"3720splitHere46","12077060splitHere46","ResultSet results = aJBDCStatement.executeQuery(<newline46mondego>        <doubleQuotes46>Select columnName FROM tableName<doubleQuotes46>);<newline46mondego>DefaultComboBoxModel model = new DefaultComboBoxModel();<newline46mondego>while (result.next()) {<newline46mondego>    model.addElement(results.getString(1));<newline46mondego>}<newline46mondego>JComboBox comboBox = new JComboBox(model);<newline46mondego>"
"3721splitHere46","12077060splitHere46","model.addElement(elementString);<newline46mondego>"
"3722splitHere46","12077140splitHere46","WSRequest rpxRequest = WS.url(<doubleQuotes46>https://rpxnow.com/api/v2/auth_info<doubleQuotes46>);<newline46mondego>        // get RPX<newline46mondego>        rpxRequest.setParameter(<doubleQuotes46>token<doubleQuotes46>, token);<newline46mondego>        rpxRequest.setParameter(<doubleQuotes46>apiKey<doubleQuotes46>, rpxApi);<newline46mondego><newline46mondego>        HttpResponse res = null;<newline46mondego>        try {<newline46mondego>            res = rpxRequest.post();<newline46mondego>        } catch (JavaExecutionException ex) {<newline46mondego>            Log.error(<doubleQuotes46>unknown error <doubleQuotes46>, ex);<newline46mondego>            Validation.addError(<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>Unknown Error: please try again<doubleQuotes46>);<newline46mondego>            Validation.keep();<newline46mondego>            Secure.login();<newline46mondego>        } catch (Exception ex) {<newline46mondego>            Log.error(<doubleQuotes46>Most likely SSL error<doubleQuotes46>, ex);<newline46mondego>            Validation.addError(<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>SSL Error: please try again<doubleQuotes46>);<newline46mondego>            Validation.keep();<newline46mondego>            Secure.login();<newline46mondego>        }<newline46mondego>        if (res.getStatus() != 200) {<newline46mondego>            Log.error(<doubleQuotes46>status 200 error<doubleQuotes46>);<newline46mondego>            Validation.addError(<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>Status 200 error: please try again<doubleQuotes46>);<newline46mondego>            Validation.keep();<newline46mondego>            Secure.login();<newline46mondego>        }<newline46mondego>        JsonElement rpxJson = res.getJson();<newline46mondego>        JsonElement profile = rpxJson.getAsJsonObject().get(<doubleQuotes46>profile<doubleQuotes46>);<newline46mondego>        JsonObject profileJson = profile.getAsJsonObject();<newline46mondego>"
"3723splitHere46","12077141splitHere46","[]"
"3724splitHere46","12077141splitHere46","String"
"3725splitHere46","12077141splitHere46","hidden"
"3726splitHere46","12077141splitHere46","original"
"3727splitHere46","12077141splitHere46","Strings"
"3728splitHere46","12077141splitHere46","original.charAt(i)"
"3729splitHere46","12077141splitHere46","Strings"
"3730splitHere46","12077141splitHere46","hidden"
"3731splitHere46","12077141splitHere46","StringBuilder"
"3732splitHere46","12077141splitHere46","char[]"
"3733splitHere46","12077141splitHere46","// in your class member declarations:<newline46mondego>char hidden[] = createHidden();<newline46mondego><newline46mondego>// possible implementation of createHidden:<newline46mondego>char[] createHidden()<newline46mondego>{<newline46mondego>    if (original != null)<newline46mondego>        return new char[original.length()];<newline46mondego>    else return null;<newline46mondego>}<newline46mondego>"
"3734splitHere46","12077141splitHere46","original.charAt"
"3735splitHere46","12077141splitHere46","if (this.original.charAt(i) == input)<newline46mondego>{<newline46mondego>    found = true;<newline46mondego>    this.hidden[i] = this.original.charAt(i);<newline46mondego>"
"3736splitHere46","12077300splitHere46","invokeLater()"
"3737splitHere46","12077300splitHere46","Runnable"
"3738splitHere46","12077308splitHere46","ReCaptchaFactory.newReCaptcha(  //...<newline46mondego>"
"3739splitHere46","12077308splitHere46","ReCaptchaFactory.newSecureReCaptcha(  //...<newline46mondego>"
"3740splitHere46","12077464splitHere46","java.lang.Object"
"3741splitHere46","12077464splitHere46","hashCode"
"3742splitHere46","12077464splitHere46","ClassB"
"3743splitHere46","12077464splitHere46","constitutingObjects"
"3744splitHere46","12077464splitHere46","ClassA"
"3745splitHere46","12077683splitHere46","<property name=<doubleQuotes46>ear.file1<doubleQuotes46>          value=<doubleQuotes46>file1.ear<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>war.file1<doubleQuotes46>          value=<doubleQuotes46>war1.war<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>war.file<doubleQuotes46>           value=<doubleQuotes46>war.war<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>war.file.backup<doubleQuotes46>    value=<doubleQuotes46>warBk.war<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>text.file1<doubleQuotes46>         value=<doubleQuotes46>1.txt<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>text.file2<doubleQuotes46>         value=<doubleQuotes46>2.txt<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>xml.application1<doubleQuotes46>   value=<doubleQuotes46>application.xml<doubleQuotes46>/><newline46mondego><newline46mondego><target name=<doubleQuotes46>clean<doubleQuotes46>><newline46mondego>    <delete file=<doubleQuotes46>${ear.file1}<doubleQuotes46>/><newline46mondego>    <delete file=<doubleQuotes46>${war.file}<doubleQuotes46>/><newline46mondego>    <delete file=<doubleQuotes46>${war.file.backup}<doubleQuotes46>/><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>run<doubleQuotes46>><newline46mondego><newline46mondego>    <!-- Our war file contains 1.txt, allows us add 2.txt and verify updates properly --><newline46mondego>    <copy file=<doubleQuotes46>${war.file1}<doubleQuotes46> tofile=<doubleQuotes46>${war.file}<doubleQuotes46>/><newline46mondego><newline46mondego>    <!-- simple ear that will be updated --><newline46mondego>    <ear earfile=<doubleQuotes46>${ear.file1}<doubleQuotes46> appxml=<doubleQuotes46>${xml.application1}<doubleQuotes46>><newline46mondego>        <fileset dir=<doubleQuotes46>.<doubleQuotes46> includes=<doubleQuotes46>${text.file1}<doubleQuotes46>/><newline46mondego>        <fileset dir=<doubleQuotes46>.<doubleQuotes46> includes=<doubleQuotes46>${war.file}<doubleQuotes46>/><newline46mondego>    </ear>  <newline46mondego><newline46mondego>    <!-- Backup war, for comparision purposes --><newline46mondego>    <move file=<doubleQuotes46>${war.file}<doubleQuotes46> tofile=<doubleQuotes46>${war.file.backup}<doubleQuotes46> overwrite=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego><newline46mondego>    <!-- Extact the war we just added --><newline46mondego>    <unzip dest=<doubleQuotes46>.<doubleQuotes46> src=<doubleQuotes46>${ear.file1}<doubleQuotes46> overwrite=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <patternset><newline46mondego>            <include name=<doubleQuotes46>${war.file}<doubleQuotes46> /><newline46mondego>        </patternset><newline46mondego>    </unzip><newline46mondego><newline46mondego>    <!-- Update the war by adding a file --><newline46mondego>    <war destfile=<doubleQuotes46>${war.file}<doubleQuotes46> update=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <fileset dir=<doubleQuotes46>.<doubleQuotes46> includes=<doubleQuotes46>${text.file2}<doubleQuotes46>/><newline46mondego>    </war><newline46mondego><newline46mondego>    <!-- Update the ear with our updated war --><newline46mondego>    <ear earfile=<doubleQuotes46>${ear.file1}<doubleQuotes46> appxml=<doubleQuotes46>${xml.application1}<doubleQuotes46> update=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <fileset dir=<doubleQuotes46>.<doubleQuotes46> includes=<doubleQuotes46>${war.file}<doubleQuotes46>/><newline46mondego>    </ear>  <newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>main<doubleQuotes46> depends=<doubleQuotes46>clean,run<doubleQuotes46>/><newline46mondego>"
"3746splitHere46","12077703splitHere46","//The command to execute<newline46mondego>String pingCmd = <doubleQuotes46>ping <doubleQuotes46> + ip + <doubleQuotes46> -t<doubleQuotes46>;<newline46mondego><newline46mondego>//get the runtime to execute the command<newline46mondego>Runtime runtime = Runtime.getRuntime();<newline46mondego>Process process = runtime.exec(pingCmd);     <newline46mondego><newline46mondego>//Gets the inputstream to read the output of the command<newline46mondego>BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));<newline46mondego><newline46mondego>//reads the outputs<newline46mondego>String inputLine = in.readLine();<newline46mondego>while ((inputLine != null)) {<newline46mondego>    if (inputLine.length() > 0) {<newline46mondego>       ........<newline46mondego>    }<newline46mondego>    inputLine = in.readLine();<newline46mondego>}<newline46mondego>"
"3747splitHere46","12077703splitHere46","public class PingDemo {    <newline46mondego>    public static void main(String[] args) {<newline46mondego>        String ip = <doubleQuotes46>localhost<doubleQuotes46>;<newline46mondego>        String time = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>        //The command to execute<newline46mondego>        String pingCmd = <doubleQuotes46>ping <doubleQuotes46> + ip;<newline46mondego><newline46mondego>        //get the runtime to execute the command<newline46mondego>        Runtime runtime = Runtime.getRuntime();<newline46mondego>        try {<newline46mondego>            Process process = runtime.exec(pingCmd);<newline46mondego><newline46mondego>            //Gets the inputstream to read the output of the command<newline46mondego>            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));<newline46mondego><newline46mondego>            //reads the outputs<newline46mondego>            String inputLine = in.readLine();<newline46mondego>            while ((inputLine != null)) {<newline46mondego>                if (inputLine.length() > 0 && inputLine.contains(<doubleQuotes46>time<doubleQuotes46>)) {<newline46mondego>                     time = inputLine.substring(inputLine.indexOf(<doubleQuotes46>time<doubleQuotes46>));<newline46mondego>                     break;                        <newline46mondego>                }<newline46mondego>                inputLine = in.readLine();<newline46mondego>            }    <newline46mondego>            System.out.println(<doubleQuotes46>time --> <doubleQuotes46> + time);    <newline46mondego>        } catch (Exception ex) {<newline46mondego>            System.out.println(ex);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3748splitHere46","12077783splitHere46","drinkar.keySet().toArray()"
"3749splitHere46","12077783splitHere46","Object[]"
"3750splitHere46","12077783splitHere46","String[]"
"3751splitHere46","12077783splitHere46","keySet"
"3752splitHere46","12077791splitHere46","AtomicReference"
"3753splitHere46","12077791splitHere46","AtomicReference"
"3754splitHere46","12077791splitHere46","compareAndSet"
"3755splitHere46","12077791splitHere46","private final AtomicReference<List<String>> listRef = new AtomicReference<>();<newline46mondego>...<newline46mondego>while (true) {<newline46mondego>    List<String> currentList = listRef.get();<newline46mondego>    List<String> newList = new ArrayList<String>(currentList);<newline46mondego>    newList.add(stringToAdd);<newline46mondego>    // if we update the list reference, make sure we don't overwrite another one<newline46mondego>    if (listRef.compareAndSet(currentList, newList))<newline46mondego>        break;<newline46mondego>}<newline46mondego>"
"3756splitHere46","12077791splitHere46","String"
"3757splitHere46","12077791splitHere46","volatile"
"3758splitHere46","12077791splitHere46","compareAndSet"
"3759splitHere46","12077791splitHere46","AtomicReference"
"3760splitHere46","12077791splitHere46","myMember.set(...)"
"3761splitHere46","12077794splitHere46","double"
"3762splitHere46","12077794splitHere46","((int)d == d)"
"3763splitHere46","12077794splitHere46","(int)((double)i) == i"
"3764splitHere46","12077794splitHere46","long"
"3765splitHere46","12077865splitHere46","Set"
"3766splitHere46","12077865splitHere46","HashSet"
"3767splitHere46","12077865splitHere46","HashSet"
"3768splitHere46","12077865splitHere46","LinkedHashSet"
"3769splitHere46","12077865splitHere46","TreeSet"
"3770splitHere46","12077990splitHere46","Foo foo = new Foo.Builder().setBar(10).build();<newline46mondego>"
"3771splitHere46","12077990splitHere46","Foo.Builder"
"3772splitHere46","12077990splitHere46","Foo"
"3773splitHere46","12077990splitHere46","FooBuilder"
"3774splitHere46","12077990splitHere46","new A.B(SomeObject)"
"3775splitHere46","12077990splitHere46","B"
"3776splitHere46","12077990splitHere46","SomeObject"
"3777splitHere46","12077990splitHere46","A"
"3778splitHere46","12077995splitHere46","List"
"3779splitHere46","12077995splitHere46","List"
"3780splitHere46","12077995splitHere46","List<Object>"
"3781splitHere46","12077995splitHere46","instanceof"
"3782splitHere46","12077995splitHere46","assignableFrom"
"3783splitHere46","12078166splitHere46","JLabel"
"3784splitHere46","12078166splitHere46","setText"
"3785splitHere46","12078186splitHere46","<sql-query name=<doubleQuotes46>random_write_query<doubleQuotes46> callable=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>        <synchronize table=<doubleQuotes46>USER<doubleQuotes46>/><newline46mondego>        <synchronize table=<doubleQuotes46>USER_ADDRESS<doubleQuotes46>/><newline46mondego>        {CALL PACKAGE.FUNCTION(?)}<newline46mondego></sql-query><newline46mondego>"
"3786splitHere46","12078186splitHere46","<sql-query name=<doubleQuotes46>random_read_query<doubleQuotes46>><newline46mondego>         <synchronize table=<doubleQuotes46>USER<doubleQuotes46>/><newline46mondego>         <synchronize table=<doubleQuotes46>USER_ADDRESS<doubleQuotes46>/><newline46mondego>         <return-scalar column=<doubleQuotes46>USERNAME<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46>/><newline46mondego>        <![CDATA[<newline46mondego>            SELECT USERNAME FROM USER, USER_ADDRESS...<newline46mondego>        ]]><newline46mondego>    </sql-query><newline46mondego>"
"3787splitHere46","12078238splitHere46","jTable1.repaint();<newline46mondego>"
"3788splitHere46","12078238splitHere46","RegistryValues.arp(null);<newline46mondego>"
"3789splitHere46","12078238splitHere46","DefaultTableModel model = (DefaultTableModel) table.getModel();<newline46mondego>model.setValueAt(RegistryValues.arp(null), 0, 1);<newline46mondego>// set more row data, etc.<newline46mondego>"
"3790splitHere46","12078399splitHere46","/etc/cron.d/"
"3791splitHere46","12078399splitHere46","/path/to/stuff.zip"
"3792splitHere46","12078456splitHere46","public abstract class Foo {<newline46mondego>    protected Foo(int value) {<newline46mondego>       ... use value ...<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>public class Bar extends Foo {<newline46mondego>    public Foo(int value) {<newline46mondego>        super(value);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3793splitHere46","12078498splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> id=<doubleQuotes46>yourParam<doubleQuotes46> name=<doubleQuotes46>yourParam<doubleQuotes46> value=<doubleQuotes46>3<doubleQuotes46>/><newline46mondego>"
"3794splitHere46","12078498splitHere46","@RequestParam"
"3795splitHere46","12078498splitHere46","@RequestMapping(value = <doubleQuotes46>/yourMapping<doubleQuotes46>, method = RequestMethod.POST)<newline46mondego> public ModelAndView showForm(@RequestParam String yourParam, YourModelObject yourModelObject...) {<newline46mondego>     // You can retrieve here the value of your JSP input<newline46mondego><newline46mondego> }<newline46mondego>"
"3796splitHere46","12078713splitHere46","copy()"
"3797splitHere46","12078713splitHere46","public Chapter copy(){<newline46mondego>    Chapter copy = new Chapter();<newline46mondego>    copy.setTitle(this.title);<newline46mondego>    copy.setLink(this.link);<newline46mondego>    copy.setDescription(this.description);<newline46mondego>    copy.setDate(this.date);<newline46mondego>    return copy;<newline46mondego>}<newline46mondego>"
"3798splitHere46","12078740splitHere46","cipher.getParameters()"
"3799splitHere46","12078740splitHere46","AlgorithmParameters"
"3800splitHere46","12078740splitHere46","getEncoded()"
"3801splitHere46","12078740splitHere46","04h"
"3802splitHere46","12078740splitHere46","04h"
"3803splitHere46","12078740splitHere46","10h"
"3804splitHere46","12078769splitHere46","PreparedStatement"
"3805splitHere46","12078769splitHere46","Statement"
"3806splitHere46","12078769splitHere46","PreparedStatement stmt = connection.prepareStatement(<doubleQuotes46>insert into test (firstname, lastname) values (?, ?<doubleQuotes46>);<newline46mondego>stmt.setString(1, name);<newline46mondego>stmt.setString(2, lname);<newline46mondego>stmt.executeUpdate();<newline46mondego>"
"3807splitHere46","12078926splitHere46","@Test // note the <doubleQuotes46>mock parameter<doubleQuotes46> below (or declare a mock field)<newline46mondego>public void regularTest(@Mocked final IAmAnInterface mock)<newline46mondego>{<newline46mondego>    // Record expectations if/as needed:<newline46mondego>    new NonStrictExpectations() {{<newline46mondego>        mock.someMethod(); result = 123;<newline46mondego>    }};<newline46mondego><newline46mondego>    // Use the mock object in the SUT.<newline46mondego>    ...<newline46mondego><newline46mondego>    // Verify expectations if/as needed:<newline46mondego>    new Verifications() {{ mock.doSomething(); }};<newline46mondego>}<newline46mondego><newline46mondego>@Test // this is the equivalent to a Mockito <doubleQuotes46>spy<doubleQuotes46><newline46mondego>public void testUsingPartialMocking()<newline46mondego>{<newline46mondego>   final IAmAnInterface realObject = new SomeImplementation();<newline46mondego><newline46mondego>   new NonStrictExpectations(realObject) {{<newline46mondego>      // Record zero or more expectations.<newline46mondego>      // Calls to <doubleQuotes46>realObject<doubleQuotes46> *not* recorded here will execute real code.<newline46mondego>   }};<newline46mondego><newline46mondego>   // call the SUT<newline46mondego><newline46mondego>   // verify expectations, if any<newline46mondego>}<newline46mondego>"
"3808splitHere46","12078937splitHere46","public boolean shouldOverrideUrlLoading(WebView view, String url) {<newline46mondego>    if (url.endsWith(<doubleQuotes46>.mp3<doubleQuotes46>)) { //or whatever other extension<newline46mondego>      //Prompt user for action (save or view)<newline46mondego>    }<newline46mondego>    return false;<newline46mondego> }<newline46mondego>"
"3809splitHere46","12079006splitHere46","JRadioButton"
"3810splitHere46","12079006splitHere46","dm.setDataVector(new Object[][] { { <doubleQuotes46>Group 1<doubleQuotes46>, new JRadioButton(<doubleQuotes46>A<doubleQuotes46>) },<newline46mondego>    { <doubleQuotes46>Group 1<doubleQuotes46>, new JRadioButton(<doubleQuotes46>B<doubleQuotes46>, true) },<newline46mondego>    { <doubleQuotes46>Group 1<doubleQuotes46>, new JRadioButton(<doubleQuotes46>C<doubleQuotes46>) },<newline46mondego>    { <doubleQuotes46>Group 2<doubleQuotes46>, new JRadioButton(<doubleQuotes46>a<doubleQuotes46>) },<newline46mondego>    { <doubleQuotes46>Group 2<doubleQuotes46>, new JRadioButton(<doubleQuotes46>b<doubleQuotes46>) } }, new Object[] {<newline46mondego>    <doubleQuotes46>String<doubleQuotes46>, <doubleQuotes46>JRadioButton<doubleQuotes46> });<newline46mondego>"
"3811splitHere46","12079006splitHere46","((JRadioButton) dm.getValueAt(0, 1)).setSelected(true);<newline46mondego>"
"3812splitHere46","12079006splitHere46","ButtonGroup.setSelected()"
"3813splitHere46","12079006splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego>import javax.swing.plaf.*;<newline46mondego>import javax.swing.table.*;<newline46mondego><newline46mondego>public class ButtonGroupMockupTest {<newline46mondego>    private static void createAndShowGUI() {<newline46mondego>        DefaultTableModel model = new DefaultTableModel(new Object[][] {<newline46mondego>                { <doubleQuotes46>Group 1<doubleQuotes46>, Boolean.FALSE }, { <doubleQuotes46>Group 2<doubleQuotes46>, Boolean.FALSE },<newline46mondego>                { <doubleQuotes46>Group 3<doubleQuotes46>, Boolean.FALSE } },<newline46mondego>                new Object[] { <doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>State<doubleQuotes46> }) {<newline46mondego><newline46mondego>            private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Class getColumnClass(int col) {<newline46mondego>                if (col == 1)<newline46mondego>                    return Boolean.class;<newline46mondego>                return super.getColumnClass(col);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void setValueAt(Object value, int row, int col) {<newline46mondego>                super.setValueAt(value, row, col);<newline46mondego>                if (col == 1 && value.equals(Boolean.TRUE))<newline46mondego>                    deselectValues(row, col);<newline46mondego>            }<newline46mondego><newline46mondego>            private void deselectValues(int selectedRow, int col) {<newline46mondego>                for (int row = 0; row < getRowCount(); row++) {<newline46mondego>                    if (getValueAt(row, col).equals(Boolean.TRUE)<newline46mondego>                            && row != selectedRow) {<newline46mondego>                        setValueAt(Boolean.FALSE, row, col);<newline46mondego>                        fireTableCellUpdated(row, col);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        JTable table = new JTable(model);<newline46mondego>        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);<newline46mondego>        table.setDefaultRenderer(Boolean.class, new BooleanRadionRenderer());<newline46mondego>        table.setDefaultEditor(Boolean.class, new BooleanRadioEditor());<newline46mondego><newline46mondego>        JFrame f = new JFrame();<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(new JScrollPane(table));<newline46mondego><newline46mondego>        f.pack();<newline46mondego>        f.setLocationByPlatform(true);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    static class BooleanRadionRenderer implements TableCellRenderer, UIResource {<newline46mondego>        JRadioButton radioButton;<newline46mondego>        Border emptyBorder;<newline46mondego><newline46mondego>        public BooleanRadionRenderer() {<newline46mondego>            radioButton = new JRadioButton();<newline46mondego>            radioButton.setHorizontalAlignment(JRadioButton.CENTER);<newline46mondego>            radioButton.setBorderPainted(true);<newline46mondego>            emptyBorder = BorderFactory.createEmptyBorder(1, 1, 1, 1);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getTableCellRendererComponent(JTable table, Object value,<newline46mondego>                boolean isSelected, boolean hasFocus, int row, int col) {<newline46mondego>            if (isSelected) {<newline46mondego>                radioButton.setBackground(table.getSelectionBackground());<newline46mondego>                radioButton.setForeground(table.getSelectionForeground());<newline46mondego>            } else {<newline46mondego>                radioButton.setBackground(table.getBackground());<newline46mondego>                radioButton.setForeground(table.getForeground());<newline46mondego>            }<newline46mondego>            if (hasFocus)<newline46mondego>                radioButton.setBorder(UIManager<newline46mondego>                        .getBorder(<doubleQuotes46>Table.focusCellHighlightBorder<doubleQuotes46>));<newline46mondego>            else<newline46mondego>                radioButton.setBorder(emptyBorder);<newline46mondego><newline46mondego>            radioButton.setSelected(((Boolean) value).booleanValue());<newline46mondego>            return radioButton;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static class BooleanRadioEditor extends AbstractCellEditor <newline46mondego>                                    implements TableCellEditor {<newline46mondego>        private static final long serialVersionUID = 1L;<newline46mondego>        private JRadioButton radioButton;<newline46mondego><newline46mondego>        public BooleanRadioEditor() {<newline46mondego>            radioButton = new JRadioButton();<newline46mondego>            radioButton.setHorizontalAlignment(JRadioButton.CENTER);<newline46mondego>            radioButton.addActionListener(new ActionListener() {<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    // prevent deselection to mimic button group<newline46mondego>                    if (!radioButton.isSelected())<newline46mondego>                        cancelCellEditing();<newline46mondego>                    stopCellEditing();<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getTableCellEditorComponent(JTable table, Object value,<newline46mondego>                boolean isSelected, int row, int col) {<newline46mondego>            radioButton.setSelected(((Boolean) value).booleanValue());<newline46mondego>            return radioButton;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getCellEditorValue() {<newline46mondego>            return Boolean.valueOf(radioButton.isSelected());<newline46mondego>        }<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"3814splitHere46","12079082splitHere46",".jar"
"3815splitHere46","12079136splitHere46","\]\s*([^\[]*?)\s*\[<newline46mondego>"
"3816splitHere46","12079136splitHere46","\\]\\s*([^\\[]*?)\\s*\\[<newline46mondego>"
"3817splitHere46","12079167splitHere46","<OrderHistory>...</OrderHistory><newline46mondego>"
"3818splitHere46","12079167splitHere46","<OrderHistory xmlns=<doubleQuotes46>_http://orderhistory.shc.com/common/domain<doubleQuotes46>>...</OrderHistory><newline46mondego>"
"3819splitHere46","12079167splitHere46","setNamespaceAware(true)"
"3820splitHere46","12079167splitHere46","DocumentBuilderFactory"
"3821splitHere46","12079376splitHere46","<build><newline46mondego>  <plugins><newline46mondego>    <plugin><newline46mondego>      <groupId>org.apache.maven.plugins</groupId><newline46mondego>      <artifactId>maven-resources-plugin</artifactId><newline46mondego>      <version>2.6</version><newline46mondego>    </plugin><newline46mondego>  </plugins><newline46mondego></build><newline46mondego>"
"3822splitHere46","12079377splitHere46","MediaStore"
"3823splitHere46","12079377splitHere46","MediaStore"
"3824splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3825splitHere46","12079438splitHere46","<doubleQuotes46>prime<doubleQuotes46>: 1000 0000<newline46mondego>(hash1 ^ hash2): 1111 1111<newline46mondego>"
"3826splitHere46","12079438splitHere46","product: [0111 1111] 1000 0000<newline46mondego>"
"3827splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3828splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3829splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3830splitHere46","12079438splitHere46","prime"
"3831splitHere46","12079438splitHere46","prime"
"3832splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3833splitHere46","12079438splitHere46","prime"
"3834splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3835splitHere46","12079438splitHere46","prime"
"3836splitHere46","12079438splitHere46","0010 0000 1111 1011"
"3837splitHere46","12079438splitHere46","0000 0000 0011 1011"
"3838splitHere46","12079438splitHere46","(hash1 ^ hash2) * 8443"
"3839splitHere46","12079438splitHere46","(hash1 ^ hash2)"
"3840splitHere46","12079438splitHere46","A"
"3841splitHere46","12079438splitHere46","B"
"3842splitHere46","12079438splitHere46","(x, y)"
"3843splitHere46","12079438splitHere46","(y, x)"
"3844splitHere46","12079438splitHere46","A"
"3845splitHere46","12079438splitHere46","B"
"3846splitHere46","12079438splitHere46","hash(x, y) = hash(y, x)"
"3847splitHere46","12079438splitHere46","long lhash = prime * (hash1 ^ hash2);"
"3848splitHere46","12079438splitHere46","(int)((lhash >> 32) ^ lhash)"
"3849splitHere46","12079438splitHere46","n"
"3850splitHere46","12079438splitHere46","p"
"3851splitHere46","12079438splitHere46","k"
"3852splitHere46","12079438splitHere46","n"
"3853splitHere46","12079438splitHere46","k"
"3854splitHere46","12079438splitHere46","n * p"
"3855splitHere46","12079438splitHere46","n = 0011 0000"
"3856splitHere46","12079438splitHere46","p = 0011 1011"
"3857splitHere46","12079438splitHere46","00110000 * p = 00100000 * p + 00010000 * p<newline46mondego>             = p << 5 + p << 4<newline46mondego>"
"3858splitHere46","12079438splitHere46","p = 59"
"3859splitHere46","12079438splitHere46","64: 0011 1011 * 0100 0000 = [ 0000 1110 ] 1100 0000 (192)<newline46mondego>128: 0011 1011 * 1000 0000 = [ 0001 1101 ] 1000 0000 (128)<newline46mondego>192: 0011 1011 * 1100 0000 = [ 0010 1100 ] 0100 0000 (64)<newline46mondego>"
"3860splitHere46","12079438splitHere46","64: 0011 1011 * 0100 0000 = 0000 1110 1100 0000 => 1100 1110 (206)<newline46mondego>128: 0011 1011 * 1000 0000 = 0001 1101 1000 0000 => 1001 1101 (157)<newline46mondego>192: 0011 1011 * 1100 0000 = 0010 1100 0100 0000 => 0110 1100 (204)<newline46mondego>"
"3861splitHere46","12079592splitHere46","<dependency><newline46mondego>    <groupId>org.aspectj</groupId><newline46mondego>    <artifactId>com.springsource.org.aspectj.weaver</artifactId><newline46mondego>    <version>1.6.2.RELEASE</version><newline46mondego></dependency><newline46mondego>"
"3862splitHere46","12079601splitHere46","if(tempChallenge == decryptedChallenge){<newline46mondego>"
"3863splitHere46","12079601splitHere46","if( decryptedChallenge.equals(tempChallenge) ){<newline46mondego>"
"3864splitHere46","12079601splitHere46","in.readline()"
"3865splitHere46","12079601splitHere46","while(!in.ready()){} // you can drop this line.<newline46mondego>"
"3866splitHere46","12079613splitHere46","<jsp:include>"
"3867splitHere46","12079613splitHere46","@UrlBinding(<doubleQuotes46>/sharedContent<doubleQuotes46>)<newline46mondego>public class SharedContentBean implements ActionBean {<newline46mondego><newline46mondego>    String contentParam;<newline46mondego><newline46mondego>    @DefaultHandler<newline46mondego>    public Resolution view() {<newline46mondego>        return new ForwardResolution(<doubleQuotes46>/sharedContent.jsp<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3868splitHere46","12079613splitHere46","<!-- Import Registration Form here --><newline46mondego><jsp:include page=<doubleQuotes46>/sharedContent<doubleQuotes46>><newline46mondego>    <jsp:param value=<doubleQuotes46>myValue<doubleQuotes46> name=<doubleQuotes46>contentParam<doubleQuotes46>/><newline46mondego></jsp:include><newline46mondego>"
"3869splitHere46","12079613splitHere46","INCLUDE"
"3870splitHere46","12079613splitHere46","<filter-mapping>"
"3871splitHere46","12079613splitHere46","<filter-mapping><newline46mondego>    <filter-name>StripesFilter</filter-name><newline46mondego>    <url-pattern>/*</url-pattern><newline46mondego>    <servlet-name>StripesDispatcher</servlet-name><newline46mondego>    <dispatcher>REQUEST</dispatcher><newline46mondego>    <dispatcher>INCLUDE</dispatcher><newline46mondego>    <dispatcher>FORWARD</dispatcher><newline46mondego>    <dispatcher>ERROR</dispatcher><newline46mondego></filter-mapping><newline46mondego>"
"3872splitHere46","12079717splitHere46","<dependency><newline46mondego>  <groupId>com.company.groupId</groupId><newline46mondego>  <artifactId>foo</artifactId><newline46mondego>  <version>1.0.0</version><newline46mondego>  <scope>system</scope><newline46mondego>  <systemPath>${basedir}/lib/foo-1.0.0.jar</systemPath><newline46mondego></dependency> <newline46mondego>"
"3873splitHere46","12079717splitHere46","${basedir}"
"3874splitHere46","12079717splitHere46","pom.xml"
"3875splitHere46","12079717splitHere46","build-helper-maven-plugin"
"3876splitHere46","12079717splitHere46","<plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>build-helper-maven-plugin</artifactId><newline46mondego>        <version>1.7</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <id>attach-artifacts</id><newline46mondego>            <phase>package</phase><newline46mondego>            <goals><newline46mondego>              <goal>attach-artifact</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>              <artifacts><newline46mondego>                <artifact><newline46mondego>                  <file>${basedir}/lib/foo-1.0.0.jar</file><newline46mondego>                  <type>jar</type><newline46mondego>                  <classifier>optional</classifier><newline46mondego>                </artifact><newline46mondego>              </artifacts><newline46mondego>            </configuration><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>"
"3877splitHere46","12079771splitHere46","byte[]"
"3878splitHere46","12079771splitHere46","int[]"
"3879splitHere46","12079771splitHere46","BitSet bitSet = new BitSet();<newline46mondego>// set bit 100<newline46mondego>bitSet.set(100);<newline46mondego>// get bit 99<newline46mondego>System.out.println(<doubleQuotes46>bit 99 is <doubleQuotes46> + bitSet.get(99));<newline46mondego>System.out.println(<doubleQuotes46>bit 100 is <doubleQuotes46> + bitSet.get(100) + <doubleQuotes46> after set<doubleQuotes46>);<newline46mondego>bitSet.clear(100);<newline46mondego>System.out.println(<doubleQuotes46>bit 100 is <doubleQuotes46> + bitSet.get(100) + <doubleQuotes46> after clear<doubleQuotes46>);<newline46mondego>"
"3880splitHere46","12079771splitHere46","bit 99 is false<newline46mondego>bit 100 is true after set<newline46mondego>bit 100 is false after clear<newline46mondego>"
"3881splitHere46","12079812splitHere46","Intent intent = new Intent(view.getContext(),ResultsActivity.class);<newline46mondego>intent.putExtra(<doubleQuotes46>extraname<doubleQuotes46>, <doubleQuotes46>extravalue<doubleQuotes46>);<newline46mondego>intent.putExtra(<doubleQuotes46>extraname2<doubleQuotes46>, 9.99);<newline46mondego>startActivityForResult(intent,0);<newline46mondego>finish();<newline46mondego>"
"3882splitHere46","12079812splitHere46","@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_results);<newline46mondego>String extra = getIntent().getStringExtra(<doubleQuotes46>extraname<doubleQuotes46>) //returns null if nothing<newline46mondego>Double extra2 = getIntent().getDoubleExtra(<doubleQuotes46>extraname2<doubleQuotes46>)<newline46mondego>"
"3883splitHere46","12079959splitHere46","List<People> myPeopleList = new ArrayList<People>(); <newline46mondego>"
"3884splitHere46","12079959splitHere46","public interface List<E> extends Collection<E> {<newline46mondego>...<newline46mondego>"
"3885splitHere46","12079959splitHere46","public class NameOfTheClass<E> {<newline46mondego>....<newline46mondego>public doSome(E e){<newline46mondego>    doSomeGenericOperationWith(e);<newline46mondego>}<newline46mondego>"
"3886splitHere46","12079959splitHere46","NameOfTheClass<AType> instance = new NameOfTheClass<AType>();<newline46mondego>Atype yourType = ...<newline46mondego>doSome(yourType);<newline46mondego>"
"3887splitHere46","12080141splitHere46","Map"
"3888splitHere46","12080141splitHere46","Collections"
"3889splitHere46","12080141splitHere46","synchronizedMap()"
"3890splitHere46","12080141splitHere46","synchronized"
"3891splitHere46","12080141splitHere46","ReentrantReadWriteLock"
"3892splitHere46","12080141splitHere46","ConcurrentHashMap"
"3893splitHere46","12080141splitHere46","keySet()"
"3894splitHere46","12080141splitHere46","synchronized"
"3895splitHere46","12080141splitHere46","synchronized"
"3896splitHere46","12080141splitHere46","Collections.synchronizedMap()"
"3897splitHere46","12080141splitHere46","keySet()"
"3898splitHere46","12080141splitHere46","SynchronizedSet"
"3899splitHere46","12080141splitHere46","Map"
"3900splitHere46","12080321splitHere46","ActionSupport"
"3901splitHere46","12080321splitHere46","<s:property value=<doubleQuotes46>getText('your.key')<doubleQuotes46>/><newline46mondego>"
"3902splitHere46","12080321splitHere46","your.key"
"3903splitHere46","12080321splitHere46","your.key"
"3904splitHere46","12080321splitHere46","<s:property value=<doubleQuotes46>getText(yourProperty)<doubleQuotes46>/><newline46mondego>"
"3905splitHere46","12080456splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>cal.setTime(theDate);<newline46mondego>boolean monday = cal.get(Calendar.DAY_OF_WEEK) == Calendar.MONDAY;<newline46mondego>"
"3906splitHere46","12080505splitHere46","<sso reauthenticate=<doubleQuotes46>false<doubleQuotes46>/>"
"3907splitHere46","12080505splitHere46","<subsystem xmlns=<doubleQuotes46>urn:jboss:domain:web:1.1<doubleQuotes46> native=<doubleQuotes46>false<doubleQuotes46> default-virtual-server=<doubleQuotes46>default-host<doubleQuotes46>><newline46mondego>        <connector name=<doubleQuotes46>http<doubleQuotes46> protocol=<doubleQuotes46>HTTP/1.1<doubleQuotes46> scheme=<doubleQuotes46>http<doubleQuotes46> socket-binding=<doubleQuotes46>http<doubleQuotes46>/><newline46mondego>        <virtual-server name=<doubleQuotes46>default-host<doubleQuotes46> enable-welcome-root=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>            <alias name=<doubleQuotes46>localhost<doubleQuotes46>/><newline46mondego>            <alias name=<doubleQuotes46>example.com<doubleQuotes46>/><newline46mondego>            <sso reauthenticate=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego>        </virtual-server><newline46mondego>    </subsystem><newline46mondego>"
"3908splitHere46","12080545splitHere46","// Get the native look and feel class name<newline46mondego>String nativeLF = UIManager.getSystemLookAndFeelClassName();<newline46mondego><newline46mondego>// Install the look and feel<newline46mondego>try {<newline46mondego> UIManager.setLookAndFeel(nativeLF);<newline46mondego>} catch (InstantiationException e) {<newline46mondego>} catch (ClassNotFoundException e) {<newline46mondego>} catch (UnsupportedLookAndFeelException e) {<newline46mondego>} catch (IllegalAccessException e) {<newline46mondego>}<newline46mondego>"
"3909splitHere46","12080580splitHere46","actionListener=<doubleQuotes46>#{BotaoBean.sorteiaBotao}<doubleQuotes46>"
"3910splitHere46","12080580splitHere46","h:"
"3911splitHere46","12080580splitHere46","xmlns:h=<doubleQuotes46> http://java.sun.com/jsf/html<doubleQuotes46><newline46mondego>"
"3912splitHere46","12080580splitHere46","xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46><newline46mondego>"
"3913splitHere46","12080580splitHere46","f:"
"3914splitHere46","12080625splitHere46","Aircraft a = em.getReference(Aircraft.class, reference.getAircraft().getId());<newline46mondego>"
"3915splitHere46","12080625splitHere46","reference.setAircraft(a);<newline46mondego>"
"3916splitHere46","12080667splitHere46","public interface PopupMenuListener extends EventListener {<newline46mondego><newline46mondego>    /**<newline46mondego>     *  This method is called before the popup menu becomes visible <newline46mondego>     */<newline46mondego>    void popupMenuWillBecomeVisible(PopupMenuEvent e);<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method is called before the popup menu becomes invisible<newline46mondego>     * Note that a JPopupMenu can become invisible any time <newline46mondego>     */<newline46mondego>    void popupMenuWillBecomeInvisible(PopupMenuEvent e);<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method is called when the popup menu is canceled<newline46mondego>     */<newline46mondego>    void popupMenuCanceled(PopupMenuEvent e);<newline46mondego>}<newline46mondego>"
"3917splitHere46","12080670splitHere46","new A()"
"3918splitHere46","12080670splitHere46","@Configurable"
"3919splitHere46","12080670splitHere46","@Configurable<newline46mondego>public class A {<newline46mondego>    @Inject private B b;<newline46mondego>}<newline46mondego>"
"3920splitHere46","12080670splitHere46","@Configurable"
"3921splitHere46","12080672splitHere46","Collection<ClassB<? extends ClassA>>"
"3922splitHere46","12080672splitHere46","Collection<ClassB<A>>"
"3923splitHere46","12080672splitHere46","ClassB<? extends ClassA>"
"3924splitHere46","12080672splitHere46","ClassB<A>"
"3925splitHere46","12080672splitHere46","A"
"3926splitHere46","12080672splitHere46","A"
"3927splitHere46","12080672splitHere46","ClassB<A>"
"3928splitHere46","12080672splitHere46","A"
"3929splitHere46","12080672splitHere46","ClassB<? extends ClassA>"
"3930splitHere46","12080672splitHere46","String"
"3931splitHere46","12080672splitHere46","Object"
"3932splitHere46","12080672splitHere46","Collection<String>"
"3933splitHere46","12080672splitHere46","Collection<Object>"
"3934splitHere46","12080672splitHere46","foo()"
"3935splitHere46","12080672splitHere46","private static <T extends ClassB<? extends ClassA>> Collection<T> foo(Collection<T> as) {<newline46mondego>    return as;<newline46mondego>}<newline46mondego>"
"3936splitHere46","12080672splitHere46","private Collection<? extends ClassB<? extends ClassA>> bar(Collection<? extends ClassB<? extends ClassA>> as) {<newline46mondego>    return foo(as);<newline46mondego>}<newline46mondego>"
"3937splitHere46","12080889splitHere46","filter-mapping"
"3938splitHere46","12080889splitHere46","web.xml"
"3939splitHere46","12080889splitHere46","<filter-mapping><newline46mondego>        <filter-name>springSecurityFilterChain</filter-name><newline46mondego>        <url-pattern>/*</url-pattern><newline46mondego></filter-mapping><newline46mondego>"
"3940splitHere46","12080889splitHere46","REQUEST"
"3941splitHere46","12080889splitHere46","INCLUDE"
"3942splitHere46","12080889splitHere46","FORWARD"
"3943splitHere46","12080889splitHere46","ERROR"
"3944splitHere46","12080889splitHere46","ERROR"
"3945splitHere46","12080889splitHere46","<filter-mapping><newline46mondego>        <filter-name>springSecurityFilterChain</filter-name><newline46mondego>        <url-pattern>/*</url-pattern><newline46mondego>        <dispatcher>REQUEST</dispatcher><newline46mondego><newline46mondego>        <!-- apply Spring Security authentication to error-pages --><newline46mondego>        <dispatcher>ERROR</dispatcher><newline46mondego></filter-mapping><newline46mondego>"
"3946splitHere46","12080889splitHere46","<dispatcher>INCLUDE</dispatcher>"
"3947splitHere46","12080900splitHere46","public void GameMusic(Context context){<newline46mondego>    count = 0;<newline46mondego>    MediaPlayer mp = MediaPlayer.create(context, R.raw.title1);<newline46mondego>    mp.start();<newline46mondego>}<newline46mondego>"
"3948splitHere46","12080900splitHere46","this"
"3949splitHere46","12080900splitHere46","try {<newline46mondego>    mp.setDataSource(titles[count]);<newline46mondego>    count++;<newline46mondego>    mp.prepare(); <newline46mondego>    mp.start();<newline46mondego>}<newline46mondego>catch(IOException e) {<newline46mondego>    // Do something when MediaPlayer fails<newline46mondego>}<newline46mondego>"
"3950splitHere46","12081223splitHere46","<doubleQuotes46>Te<doubleQuotes46> + <doubleQuotes46>st<doubleQuotes46>"
"3951splitHere46","12081223splitHere46","<doubleQuotes46>Test<doubleQuotes46>"
"3952splitHere46","12081223splitHere46","javap -c StringPoolPerformance"
"3953splitHere46","12081223splitHere46","public static long perform1();<newline46mondego>  Code:<newline46mondego>...<newline46mondego>   7:   ldc #3; //int 1000000<newline46mondego>   9:   if_icmpge   21<newline46mondego>   12:  ldc #5; //String Test<newline46mondego>   14:  astore_3<newline46mondego>   15:  iinc    2, 1<newline46mondego>...<newline46mondego><newline46mondego>public static long perform2();<newline46mondego>  Code:<newline46mondego>...<newline46mondego>   7:   ldc #3; //int 1000000<newline46mondego>   9:   if_icmpge   21<newline46mondego>   12:  ldc #5; //String Test<newline46mondego>   14:  astore_3<newline46mondego>   15:  iinc    2, 1<newline46mondego>...<newline46mondego>"
"3954splitHere46","12081223splitHere46","perform1()"
"3955splitHere46","12081362splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><data><newline46mondego>    <row id=<doubleQuotes46>7101<doubleQuotes46>><newline46mondego>        <language-from>English</language-from><newline46mondego>        <language-to>Mandarin</language-to><newline46mondego>        <cost>5.00</cost><newline46mondego>        <comment><![CDATA[Some comment]]></comment><newline46mondego>    </row><newline46mondego></data><newline46mondego>"
"3956splitHere46","12081362splitHere46","/data/row[@id=7101]/cost/number()<newline46mondego>"
"3957splitHere46","12081381splitHere46","setItemType(...)"
"3958splitHere46","12081381splitHere46","findObj(...)"
"3959splitHere46","12081381splitHere46","itemType"
"3960splitHere46","12081381splitHere46","public boolean findObj(String itemType, int id){...} <newline46mondego>public boolean deleteObj(String itemType, int id){...}<newline46mondego>public boolean updateObj(String itemType, Obj obj){...}<newline46mondego>"
"3961splitHere46","12081381splitHere46","itemType"
"3962splitHere46","12081491splitHere46","RenderedOp op = JAI.create(<doubleQuotes46>fileload<doubleQuotes46>, filename);<newline46mondego>        // gets the number of channels (R / RGB / RGBA)<newline46mondego>        channels =  op.getColorModel().getNumColorComponents();<newline46mondego>        // gets the depth of each component (16 16 16)<newline46mondego>        depth = new int[channels];<newline46mondego>        for(int i=0; i<op.getColorModel().getNumColorComponents(); i++)<newline46mondego>        {<newline46mondego>            depth[i] = op.getColorModel().getComponentSize(i);<newline46mondego>        }<newline46mondego>        // gets the BufferedImage<newline46mondego>        image = op.getAsBufferedImage();<newline46mondego>"
"3963splitHere46","12081498splitHere46","//   Get the URL for Patrac-ejb.jar:<newline46mondego>   Set<URL> urls = ClasspathHelper.forWebInfLib(webUtil.getServletContext());<newline46mondego>   URL patracJarUrl = null;<newline46mondego>   for(URL url : urls)<newline46mondego>   {<newline46mondego>       if(url.getFile().endsWith(<doubleQuotes46>Patrac-ejb.jar<doubleQuotes46>))<newline46mondego>       {<newline46mondego>           patracJarUrl = url;<newline46mondego>           break;<newline46mondego>       }<newline46mondego>   }<newline46mondego>   if(null == patracJarUrl)<newline46mondego>   {<newline46mondego>       throw new IllegalStateException(<doubleQuotes46>Patrac-ejb.jar not found.<doubleQuotes46>);<newline46mondego>   }<newline46mondego><newline46mondego>   //   Add the Patrac-ejb.jar URL to the configuration.<newline46mondego>   Configuration configuration = new ConfigurationBuilder()<newline46mondego>       .filterInputsBy(new FilterBuilder()<newline46mondego>                       .include(FilterBuilder.prefix(<doubleQuotes46>com.patrac<doubleQuotes46>)))<newline46mondego>       .setScanners(new MethodAnnotationsScanner(), new TypeAnnotationsScanner())<newline46mondego>       .setUrls(patracJarUrl);<newline46mondego>"
"3964splitHere46","12081509splitHere46","Snapshot.getState()"
"3965splitHere46","12081509splitHere46","describeSnapshots()"
"3966splitHere46","12081509splitHere46","String snapState = snap.getState();<newline46mondego>System.out.println(<doubleQuotes46>snapState is <doubleQuotes46> + snapState);<newline46mondego><newline46mondego>System.out.print(<doubleQuotes46>Waiting for snapshot to be created<doubleQuotes46>);<newline46mondego>// Wait for the snapshot to be created<newline46mondego>while (snapState.equals(<doubleQuotes46>pending<doubleQuotes46>))<newline46mondego>{<newline46mondego>    Thread.sleep(500);<newline46mondego>    System.out.print(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>    DescribeSnapshotsResult describeSnapRes <newline46mondego>        = ec2.describeSnapshots(new DescribeSnapshotsRequest().withSnapshotIds(snap.getSnapshotId()));<newline46mondego>snapState = describeSnapRes.getSnapshots().get(0).getState();<newline46mondego> }<newline46mondego> System.out.println(<doubleQuotes46>\nDone.<doubleQuotes46>);<newline46mondego>"
"3967splitHere46","12081602splitHere46","Node"
"3968splitHere46","12081602splitHere46","DefaultMutableTreeNode"
"3969splitHere46","12081602splitHere46","depthFirstEnumeration()"
"3970splitHere46","12081602splitHere46","breadthFirstEnumeration()"
"3971splitHere46","12081602splitHere46","setUserObject(Object)"
"3972splitHere46","12081602splitHere46","public class Node {<newline46mondego>  private final int value;<newline46mondego>  private final List<Node> children;<newline46mondego><newline46mondego>  public Node(int value) {<newline46mondego>    this.value = value;<newline46mondego>    this.children = new LinkedList<Node>();<newline46mondego>  }<newline46mondego><newline46mondego>  public int getValue() {<newline46mondego>    return value;<newline46mondego>  }<newline46mondego><newline46mondego>  public List<? extends Node> getChildren() {<newline46mondego>    return Collections.unmodifiableList(children);<newline46mondego>  }<newline46mondego><newline46mondego>  public void addChild(Node child) { <newline46mondego>    children.add(child);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3973splitHere46","12081733splitHere46","LocationResult locationResult = new LocationResult(){<newline46mondego>    @Override<newline46mondego>    public void gotLocation(Location location){<newline46mondego>        //Got the location!<newline46mondego>        //Here goes your code<newline46mondego>        //This method will be called when location data arrive<newline46mondego>    }<newline46mondego>};<newline46mondego>MyLocation myLocation = new MyLocation();<newline46mondego>myLocation.getLocation(this, locationResult);<newline46mondego>"
"3974splitHere46","12081742splitHere46","1"
"3975splitHere46","12081742splitHere46","await()"
"3976splitHere46","12081742splitHere46","MyThread"
"3977splitHere46","12081742splitHere46","countDown()"
"3978splitHere46","12081742splitHere46","MySignal"
"3979splitHere46","12081770splitHere46","public void itemStateChanged( ItemEvent event ) {<newline46mondego>    if( event.getStateChanged() == ItemEvent.SELECTED ) {<newline46mondego>        // code here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3980splitHere46","12081936splitHere46","public class Holder<T> extends Vector<T>{<newline46mondego><newline46mondego>           public addTo(T item){<newline46mondego>               super.add(item);<newline46mondego>           }<newline46mondego><newline46mondego>           public takeFrom(T item){<newline46mondego>                super.remove(item);<newline46mondego>           }<newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego>     public class Refrigerator extends Holder<FoodItem>{<newline46mondego>     }<newline46mondego><newline46mondego>     public class Wallet extends Holder<Money>{<newline46mondego>     }<newline46mondego>"
"3981splitHere46","12082004splitHere46","b"
"3982splitHere46","12082004splitHere46","if(e.getSource().equals(b))"
"3983splitHere46","12082004splitHere46","b"
"3984splitHere46","12082011splitHere46","LinkedList"
"3985splitHere46","12082011splitHere46","O(1)"
"3986splitHere46","12082011splitHere46","LinkedList"
"3987splitHere46","12082011splitHere46","ArrayList"
"3988splitHere46","12082011splitHere46","ArrayDeque"
"3989splitHere46","12082011splitHere46","O(1)"
"3990splitHere46","12082029splitHere46","Can't load IA 32-bit .dll on a AMD 64-bit platform"
"3991splitHere46","12082029splitHere46","C:\Windows\SysWOW64"
"3992splitHere46","12082029splitHere46","C:\Windows\System32"
"3993splitHere46","12082029splitHere46","C:\Windows\SysWOW64"
"3994splitHere46","12082029splitHere46","util.USBUIRT$NotInitializedException"
"3995splitHere46","12082029splitHere46","SysWOW64"
"3996splitHere46","12082029splitHere46","System32"
"3997splitHere46","12082029splitHere46","C:\tmp"
"3998splitHere46","12082029splitHere46","-Djava.library.path=<doubleQuotes46>C:\tmp;${env_var:PATH}<doubleQuotes46><newline46mondego>"
"3999splitHere46","12082029splitHere46","C:\tmp"
"4000splitHere46","12082029splitHere46","PATH"
"4001splitHere46","12082029splitHere46","UnsatisfiedLinkError"
"4002splitHere46","12082029splitHere46","uuirtdrv.dll"
"4003splitHere46","12082029splitHere46","import util.USBUIRT;<newline46mondego>public class Uirt {<newline46mondego>    static {<newline46mondego>        System.loadLibrary(<doubleQuotes46>uuirtdrv<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    String code = <doubleQuotes46>0000<doubleQuotes46>;   <newline46mondego>    try {<newline46mondego>        USBUIRT.transmitIR(code, 2, 3, 2);<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4004splitHere46","12082099splitHere46","org.apache.catalina.filters.RemoteIpFilter"
"4005splitHere46","12082099splitHere46","<filter><newline46mondego>   <filter-name>RemoteIpFilter</filter-name><newline46mondego>   <filter-class>org.apache.catalina.filters.RemoteIpFilter</filter-class><newline46mondego>   <init-param><newline46mondego>     <param-name>allowedInternalProxies</param-name><newline46mondego>     <param-value>192\.168\.0\.10|192\.168\.0\.11</param-value><newline46mondego>   </init-param><newline46mondego>   <init-param><newline46mondego>     <param-name>remoteIpHeader</param-name><newline46mondego>     <param-value>x-forwarded-for</param-value><newline46mondego>   </init-param><newline46mondego>   <init-param><newline46mondego>     <param-name>remoteIpProxiesHeader</param-name><newline46mondego>     <param-value>x-forwarded-by</param-value><newline46mondego>   </init-param><newline46mondego>   <init-param><newline46mondego>     <param-name>protocolHeader</param-name><newline46mondego>     <param-value>x-forwarded-proto</param-value><newline46mondego>   </init-param><newline46mondego> </filter><newline46mondego>"
"4006splitHere46","12082420splitHere46","String.contains"
"4007splitHere46","12082420splitHere46","if (myString.contains(<doubleQuotes46>..<doubleQuotes46>)){<newline46mondego>    System.out.print(<doubleQuotes46>it works<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4008splitHere46","12082420splitHere46","if(myString.indexOf('.', myString.indexOf('.') + 1) != -1) {<newline46mondego>    System.out.print(<doubleQuotes46>it works<doubleQuotes46>); //there are two or more dots in this string<newline46mondego>}<newline46mondego>"
"4009splitHere46","12082667splitHere46","true"
"4010splitHere46","12082667splitHere46","false"
"4011splitHere46","12082667splitHere46","int x = 10;<newline46mondego>while (x > 0) { // x > 0 is an expression with a boolean result<newline46mondego>   System.out.println(x); // nested statement 1<newline46mondego>   x--;                   // nested statement 2<newline46mondego>}<newline46mondego>"
"4012splitHere46","12082794splitHere46","Content-Type"
"4013splitHere46","12082794splitHere46","text/html"
"4014splitHere46","12082794splitHere46","application/json"
"4015splitHere46","12082794splitHere46","http://example.com"
"4016splitHere46","12082794splitHere46","{<newline46mondego>    <doubleQuotes46>users<doubleQuotes46> : <doubleQuotes46>http://example.com/users<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>todos<doubleQuotes46> : <doubleQuotes46>http://example.com/todos<doubleQuotes46><newline46mondego>}<newline46mondego>"
"4017splitHere46","12082794splitHere46","http://example.com/todos"
"4018splitHere46","12082794splitHere46","[<newline46mondego>    {<newline46mondego>        <doubleQuotes46>description<doubleQuotes46> : <doubleQuotes46>Do dishes<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>user<doubleQuotes46> : <doubleQuotes46>http://example.com/users/20<doubleQuotes46><newline46mondego>    },<newline46mondego>    {<newline46mondego>        <doubleQuotes46>description<doubleQuotes46> : <doubleQuotes46>Do dishes<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>user<doubleQuotes46> : <doubleQuotes46>http://example.com/users/42<doubleQuotes46><newline46mondego>    }<newline46mondego>]<newline46mondego>"
"4019splitHere46","12082934splitHere46","NavigableSet.headSet"
"4020splitHere46","12082934splitHere46","toElement"
"4021splitHere46","12082934splitHere46","compareTo"
"4022splitHere46","12082934splitHere46","/* use this in place of an array */<newline46mondego>final NavigableSet<BigDecimal> values = new TreeSet<BigDecimal>();<newline46mondego>/* read from the user e.g. Scanner.nextBigDecimal() */<newline46mondego>final BigDecimal ceiling = ...;<newline46mondego>for (final BigDecimal lower : values.headSet(ceiling)) {<newline46mondego>  /* lower will be less than ceiling */<newline46mondego>}<newline46mondego>"
"4023splitHere46","12082966splitHere46","class D extends B"
"4024splitHere46","12082966splitHere46","class D : public B"
"4025splitHere46","12082966splitHere46","struct D : B1, private B2, protected B3"
"4026splitHere46","12082966splitHere46","super"
"4027splitHere46","12082966splitHere46","implements"
"4028splitHere46","12083032splitHere46","log2(N!) > N log2(N) - N log2(e)"
"4029splitHere46","12083032splitHere46","log2(200M)>27"
"4030splitHere46","12083032splitHere46","(200M * 25.5) / (8bits/byte) ~ 608 MiB"
"4031splitHere46","12083047splitHere46","public class ListViewDemo extends ListActivity {<newline46mondego><newline46mondego>    ArrayList<String> listItems=new ArrayList<String>();<newline46mondego>    ArrayAdapter<String> adapter;<newline46mondego><newline46mondego>    TextView theFact;<newline46mondego>    String shareFact;<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle icicle) {<newline46mondego>        super.onCreate(icicle);<newline46mondego>        setContentView(R.layout.main);<newline46mondego><newline46mondego>        theFact = (TextView) findViewById(R.id.tvContent)<newline46mondego>        shareFact = theFact.getText().toString();<newline46mondego><newline46mondego>        adapter=new ArrayAdapter<String>(this,<newline46mondego>        android.R.layout.simple_list_item_1,<newline46mondego>        listItems);<newline46mondego>        setListAdapter(adapter);<newline46mondego><newline46mondego>        listItems.add(shareFact);<newline46mondego>        adapter.notifyDataSetChanged();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4032splitHere46","12083047splitHere46","public void addItems(View v) {<newline46mondego>    listItems.add(shareFact);<newline46mondego>    adapter.notifyDataSetChanged();<newline46mondego>}<newline46mondego>"
"4033splitHere46","12083072splitHere46","List<LocalDate> dates = new ArrayList<LocalDate>();<newline46mondego>int days = Days.daysBetween(startDate, endDate).getDays()+1;<newline46mondego>for (int i=0; i < days; i++) {<newline46mondego>    LocalDate d = startDate.withFieldAdded(DurationFieldType.days(), i);<newline46mondego>    dates.add(d);<newline46mondego>}<newline46mondego>"
"4034splitHere46","12083189splitHere46","input.nextInt()"
"4035splitHere46","12083189splitHere46","while"
"4036splitHere46","12083189splitHere46","int choice = 0;<newline46mondego>for (;;) {<newline46mondego>    while(!input.hasNextInt()) {<newline46mondego>        System.out.println(<doubleQuotes46>Numbers Only!<doubleQuotes46>);<newline46mondego>        System.out.print(<doubleQuotes46>Try again: <doubleQuotes46>);<newline46mondego>        input.nextLine();<newline46mondego>    }<newline46mondego>    choice = input.nextInt();<newline46mondego>    if (choice <= diff.length) break;<newline46mondego>    System.out.println(<doubleQuotes46>Out of bounds<doubleQuotes46>);<newline46mondego>}<newline46mondego>System.out.println(choice);<newline46mondego>"
"4037splitHere46","12083238splitHere46","public class RegionUtil {<newline46mondego><newline46mondego>    boolean coordinateInRegion(Region region, Coordinate coord) {<newline46mondego>        int i, j;<newline46mondego>        boolean isInside = false;<newline46mondego>        //create an array of coordinates from the region boundary list<newline46mondego>        Coordinate[] verts = (Coordinate)region.getBoundary().toArray(new Coordinate[region.size()]);<newline46mondego>        int sides = verts.length;<newline46mondego>        for (i = 0, j = sides - 1; i < sides; j = i++) {<newline46mondego>            //verifying if your coordinate is inside your region<newline46mondego>            if (<newline46mondego>                (<newline46mondego>                 (<newline46mondego>                  (verts[i].getLongitude() <= coord.getLongitude()) && (coord.getLongitude() < verts[j].getLongitude())<newline46mondego>                 ) || (<newline46mondego>                  (verts[j].getLongitude() <= coord.getLongitude()) && (coord.getLongitude() < verts[i].getLongitude())<newline46mondego>                 )<newline46mondego>                ) &&<newline46mondego>                (coord.getLatitude() < (verts[j].getLatitude() - verts[i].getLatitude()) * (coord.y - verts[i].getLongitude()) / (verts[j].getLongitude() - verts[i].getLongitude()) + verts[i].getLatitude())<newline46mondego>               ) {<newline46mondego>                isInside = !isInside;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return isInside;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4038splitHere46","12083307splitHere46","if"
"4039splitHere46","12083307splitHere46","getNumberInput(int bound)"
"4040splitHere46","12083307splitHere46","while"
"4041splitHere46","12083307splitHere46","public static int getNumberInput(int bound){<newline46mondego>    Scanner input = new Scanner(System.in);<newline46mondego>    for (;;) {<newline46mondego>        if (!Inputs.isANumber(input)) {<newline46mondego>            System.out.println(<doubleQuotes46>Negative Numbers and Letters are not allowed<doubleQuotes46>);<newline46mondego>            input.reset();<newline46mondego>            continue;<newline46mondego>        }<newline46mondego>        int val = getNumberInput();<newline46mondego>        if (val <= bound) {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>Maximum Input is only up to: <doubleQuotes46>+ bound+<doubleQuotes46> Please Try Again: <doubleQuotes46>);<newline46mondego>        input.reset();<newline46mondego>    }<newline46mondego>    return val;<newline46mondego>}<newline46mondego>"
"4042splitHere46","12083356splitHere46","ImageIO.read(URL)"
"4043splitHere46","12083356splitHere46","File"
"4044splitHere46","12083356splitHere46","main()"
"4045splitHere46","12083356splitHere46","super.paint(g);"
"4046splitHere46","12083356splitHere46","paintComponent(g)"
"4047splitHere46","12083356splitHere46","paintComponent()"
"4048splitHere46","12083356splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.net.URL;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class JavaGame extends JPanel {<newline46mondego><newline46mondego>    int x, y;<newline46mondego>    private Image dbImage;<newline46mondego>    private Graphics dbg;<newline46mondego>    Image ghost;<newline46mondego>    Image bg;<newline46mondego><newline46mondego>    public class AL extends KeyAdapter {<newline46mondego>        public void keyPressed(KeyEvent e) {<newline46mondego>            int keyCode = e.getKeyCode();<newline46mondego><newline46mondego>            if (keyCode == e.VK_LEFT) {<newline46mondego>                if (x <= 8)<newline46mondego>                    x = 8;<newline46mondego>                else<newline46mondego>                    x += -5;<newline46mondego>            }<newline46mondego>            if (keyCode == e.VK_RIGHT) {<newline46mondego>                if (x >= 235)<newline46mondego>                    x = 235;<newline46mondego>                else<newline46mondego>                    x += +5;<newline46mondego>            }<newline46mondego>            if (keyCode == e.VK_UP) {<newline46mondego>                if (y <= 18)<newline46mondego>                    y = 18;<newline46mondego>                else<newline46mondego>                    y += -5;<newline46mondego>            }<newline46mondego>            if (keyCode == e.VK_DOWN) {<newline46mondego>                if (y >= 235)<newline46mondego>                    y = 235;<newline46mondego>                else<newline46mondego>                    y += +5;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void keyReleased(KeyEvent e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public JavaGame() throws Exception {<newline46mondego>        // Load images<newline46mondego>        //ImageIcon i = new ImageIcon(<newline46mondego>            //  <doubleQuotes46>C:/Users/Taylor/workspace/Java game/src/ghost.png<doubleQuotes46>);<newline46mondego>        URL urlGhost = new URL(<doubleQuotes46>http://1point1c.org/gif/thum/plnttm.gif<doubleQuotes46>);<newline46mondego>        ghost = Toolkit.getDefaultToolkit().createImage(urlGhost);<newline46mondego><newline46mondego>        //ImageIcon j = new ImageIcon(<newline46mondego>            //  <doubleQuotes46>C:/Users/Taylor/workspace/Java game/src/bg.png<doubleQuotes46>);<newline46mondego>        URL urlBG = new URL(<doubleQuotes46>http://pscode.org/media/stromlo2.jpg<doubleQuotes46>);<newline46mondego>        bg = Toolkit.getDefaultToolkit().createImage(urlBG);<newline46mondego><newline46mondego>        setFocusable(true);<newline46mondego><newline46mondego>        // Game properties<newline46mondego>        addKeyListener(new AL());<newline46mondego>        x = 150;<newline46mondego>        y = 150;<newline46mondego><newline46mondego>        ActionListener al = new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent ae) {<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        Timer timer = new Timer(50,al);<newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego><newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.drawImage(bg, 0, 0, null);<newline46mondego><newline46mondego>        //dbImage = createImage(getWidth(), getHeight());<newline46mondego>        //dbg = dbImage.getGraphics();<newline46mondego>        //paintComponent(dbg);<newline46mondego>        g.drawImage(dbImage, x, y, this);<newline46mondego><newline46mondego>        g.setColor(Color.WHITE);<newline46mondego>        g.drawImage(ghost, x, y, this);<newline46mondego><newline46mondego>        //repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    JFrame f = new JFrame(<doubleQuotes46>Java Game<doubleQuotes46>);<newline46mondego>                    f.setSize(500, 500);<newline46mondego>                    f.setResizable(false);<newline46mondego>                    f.setVisible(true);<newline46mondego>                    f.setBackground(Color.GRAY);<newline46mondego>                    f.setContentPane(new JavaGame());<newline46mondego>                    f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>                } catch (Exception e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4049splitHere46","12083547splitHere46","Date.toString()"
"4050splitHere46","12083547splitHere46","Date.parse()"
"4051splitHere46","12083547splitHere46","toString()"
"4052splitHere46","12083547splitHere46","parse()"
"4053splitHere46","12083713splitHere46","int sleepMillis = 0;<newline46mondego>sleep(sleepMillis);<newline46mondego>sleepMillis++;<newline46mondego>"
"4054splitHere46","12083718splitHere46","age"
"4055splitHere46","12083718splitHere46","int"
"4056splitHere46","12083804splitHere46","else"
"4057splitHere46","12083804splitHere46","public boolean checkCircleCollision(float x1, float y1, float r1,<newline46mondego>    float x2, float y2, float r2) {<newline46mondego>  if (Math.sqrt(((x2 - x1) ^ 2) + ((y2 - y1) ^ 2)) <= (r1 + r2)){<newline46mondego>    return true;<newline46mondego>  } else {<newline46mondego>    return false;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4058splitHere46","12083804splitHere46","public boolean checkCircleCollision(float x1, float y1, float r1,<newline46mondego>    float x2, float y2, float r2) {<newline46mondego>  return Math.sqrt(((x2 - x1) ^ 2) + ((y2 - y1) ^ 2)) <= (r1 + r2);<newline46mondego>}<newline46mondego>"
"4059splitHere46","12083804splitHere46","^"
"4060splitHere46","12083804splitHere46","Math.pow()"
"4061splitHere46","12083804splitHere46","public boolean checkCircleCollision(float x1, float y1, float r1,<newline46mondego>    float x2, float y2, float r2) {<newline46mondego>  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)) <= (r1 + r2);<newline46mondego>}<newline46mondego>"
"4062splitHere46","12083804splitHere46","Math.hypot"
"4063splitHere46","12083804splitHere46","public boolean checkCircleCollision(float x1, float y1, float r1,<newline46mondego>    float x2, float y2, float r2) {<newline46mondego>  return Math.hypot(x2 - x1, y2 - y1) <= (r1 + r2);<newline46mondego>}<newline46mondego>"
"4064splitHere46","12083937splitHere46","Timer.schedule(int delayMillis)"
"4065splitHere46","12083937splitHere46","/**<newline46mondego>   * Schedules a timer to elapse in the future.<newline46mondego>   * <newline46mondego>   * @param delayMillis how long to wait before the timer elapses, in<newline46mondego>   *          milliseconds<newline46mondego>   */<newline46mondego>  public void schedule(int delayMillis) {<newline46mondego>    if (delayMillis < 0) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>must be non-negative<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    cancel();<newline46mondego>    isRepeating = false;<newline46mondego>    timerId = createTimeout(this, delayMillis);<newline46mondego>    timers.add(this);  // <-- Adds itself to a static ArrayList<Timer> here<newline46mondego>  }<newline46mondego>"
"4066splitHere46","12084038splitHere46","Observer"
"4067splitHere46","12084038splitHere46","RealVector"
"4068splitHere46","12084038splitHere46","RealVector attributes"
"4069splitHere46","12084038splitHere46","public class Observation {<newline46mondego><newline46mondego>    private RealVector attributes;<newline46mondego><newline46mondego>    public double distance(RealVector weight){<newline46mondego>        return weight.distance(attributes);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Neuron {<newline46mondego><newline46mondego>    private RealVector weight;<newline46mondego><newline46mondego>    public double distance(Observation obs) {<newline46mondego>        return obs.distance(weight);<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"4070splitHere46","12084069splitHere46","doc.getElementsByTagName(<doubleQuotes46>root<doubleQuotes46>)"
"4071splitHere46","12084069splitHere46","NodeList"
"4072splitHere46","12084069splitHere46","Element root = doc.getDocumentElement();<newline46mondego>"
"4073splitHere46","12084070splitHere46","MouseMotionListener"
"4074splitHere46","12084144splitHere46","class TranslationCost<newline46mondego>{<newline46mondego>    private int id;<newline46mondego>    private String sourceLang;<newline46mondego>    private String targetLang;<newline46mondego>    private float cost;<newline46mondego>    private String comment;<newline46mondego>}<newline46mondego><newline46mondego>Map<Integer, TranslationCost> idTocostMap;<newline46mondego><newline46mondego>public float calculateCost(int id, int countOfWords)<newline46mondego>{<newline46mondego>    TranslationCost costObj = idToCostMap.get(id);<newline46mondego>    if (null == costObj) {<newline46mondego>        // throw exception<newline46mondego>    }<newline46mondego>    return costObj.getCost() * countOfWords;<newline46mondego>}<newline46mondego>"
"4075splitHere46","12084274splitHere46","private javax.swing.Timer paintTimer;<newline46mondego><newline46mondego>public void start() {<newline46mondego>    // Your normal setup...<newline46mondego><newline46mondego>    paintTimer = new javax.swing.Timer(250, new ActionListener() {<newline46mondego>        public void actionPerformed(ActionEvent evt) {<newline46mondego>            Graphics gr = getGraphics();      <newline46mondego>            paint(gr);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    paintTimer.setRepeats(true);<newline46mondego>    paintTimer.setCoalesce(true);<newline46mondego>    paintTimer.start();<newline46mondego>}<newline46mondego><newline46mondego>public void mouseMoved( MouseEvent e ) {<newline46mondego>    x = e.getX();<newline46mondego>    y = e.getY();<newline46mondego><newline46mondego>    // You could wait for the timer to trigger the repaint for you...<newline46mondego>    repaintTimer.restart();<newline46mondego><newline46mondego>    Graphics gr = getGraphics();      <newline46mondego>    paint(gr);<newline46mondego>}  <newline46mondego>"
"4076splitHere46","12084310splitHere46","DefaultListCellRenderer dlcr = new DefaultListCellRenderer(); <newline46mondego>dlcr.setHorizontalAlignment(DefaultListCellRenderer.CENTER); <newline46mondego>com.setRenderer(dlcr); <newline46mondego>"
"4077splitHere46","12084310splitHere46","import javax.swing.DefaultListCellRenderer; <newline46mondego>"
"4078splitHere46","12084325splitHere46","outputString = outputString.replaceAll(<doubleQuotes46>,<doubleQuotes46>,<doubleQuotes46>,\n<doubleQuotes46> + <doubleQuotes46> <doubleQuotes46> );<newline46mondego> outputString = outputString.replaceAll(<doubleQuotes46>\\{<doubleQuotes46>,<doubleQuotes46>\\{\n<doubleQuotes46> +<doubleQuotes46> <doubleQuotes46>);<newline46mondego> outputString = outputString.replaceAll(<doubleQuotes46>:<doubleQuotes46>,<doubleQuotes46>: <doubleQuotes46>);<newline46mondego> outputString = outputString.replaceAll(<doubleQuotes46>}<doubleQuotes46>,<doubleQuotes46>,\n}<doubleQuotes46>);<newline46mondego> StringTokenizer output2 = new StringTokenizer(outputString,<doubleQuotes46>, <doubleQuotes46>,true);<newline46mondego>"
"4079splitHere46","12084653splitHere46","onCreate()"
"4080splitHere46","12084653splitHere46","MediaPlayer mpSplash = MediaPlayer.create(this, R.raw.explosion);<newline46mondego>"
"4081splitHere46","12084653splitHere46","this.mpSplash = MediaPlayer.create(this, R.raw.explosion);<newline46mondego>"
"4082splitHere46","12084653splitHere46","onDestroy()"
"4083splitHere46","12084653splitHere46","mpSlash.release()"
"4084splitHere46","12084653splitHere46","onCreate()"
"4085splitHere46","12084708splitHere46","Context"
"4086splitHere46","12084708splitHere46","Context"
"4087splitHere46","12084708splitHere46","public void actualizatrat(Context context){<newline46mondego>    dbHelper(context);<newline46mondego>    db4oHelper.deleteAll();<newline46mondego>    (...)<newline46mondego>}<newline46mondego><newline46mondego>private Db4oHelper dbHelper(Context context) {<newline46mondego>    if (db4oHelper == null) {<newline46mondego>        db4oHelper = new Db4oHelper(context);<newline46mondego>        db4oHelper.db();<newline46mondego>    }<newline46mondego>    return db4oHelper;<newline46mondego>}<newline46mondego>"
"4088splitHere46","12085082splitHere46","exec('<doubleQuotes46>pushd d:\class & java login username password id name Daily Detailed  20120820<doubleQuotes46>',$output,$return);)"
"4089splitHere46","12085082splitHere46","&"
"4090splitHere46","12085082splitHere46","cmd /c"
"4091splitHere46","12085082splitHere46","cmd /?"
"4092splitHere46","12085082splitHere46","/c"
"4093splitHere46","12085085splitHere46","int numUnique = new HashSet<String>(Store).size();<newline46mondego>"
"4094splitHere46","12085085splitHere46","StoreItems"
"4095splitHere46","12085085splitHere46","getName()"
"4096splitHere46","12085085splitHere46","Set<String> itemNames = new HashSet<String>();<newline46mondego>for (StoreItem item : Store)<newline46mondego>    itemNames.add(item.getName());<newline46mondego>int numUnique = itemNames.size();<newline46mondego>"
"4097splitHere46","12085213splitHere46","net.miginfocom.swing.MigLayout"
"4098splitHere46","12085213splitHere46","net.miginfocom.swt.MigLayout"
"4099splitHere46","12085324splitHere46","new"
"4100splitHere46","12085324splitHere46","create panel = new create();<newline46mondego>"
"4101splitHere46","12085383splitHere46","char"
"4102splitHere46","12085383splitHere46","+"
"4103splitHere46","12085395splitHere46","TVFS.umount()"
"4104splitHere46","12085395splitHere46","buildZip"
"4105splitHere46","12085395splitHere46","workingArchive"
"4106splitHere46","12085395splitHere46","TFile"
"4107splitHere46","12085395splitHere46","File"
"4108splitHere46","12085395splitHere46","dir.mkdir()"
"4109splitHere46","12085395splitHere46","importApkFiles()"
"4110splitHere46","12085551splitHere46","Override"
"4111splitHere46","12085551splitHere46","onPostExecute()"
"4112splitHere46","12085551splitHere46","@Override<newline46mondego>    protected void onPostExecute(String result) {<newline46mondego>        TextView tv = findViewById(R.id.textView1);<newline46mondego>        tv.setText(result);<newline46mondego>    }<newline46mondego>"
"4113splitHere46","12085675splitHere46","countries"
"4114splitHere46","12085675splitHere46","countries[0]<newline46mondego>"
"4115splitHere46","12085675splitHere46","getCountries()"
"4116splitHere46","12085675splitHere46","[0]"
"4117splitHere46","12085675splitHere46","countries"
"4118splitHere46","12085675splitHere46","getCountries().get(0)<newline46mondego>"
"4119splitHere46","12085675splitHere46","sysout"
"4120splitHere46","12085675splitHere46","getCountries()"
"4121splitHere46","12085797splitHere46","M"
"4122splitHere46","12085797splitHere46","data = <doubleQuotes46>start<doubleQuotes46>;<newline46mondego>int chunk = threadNumber;<newline46mondego>while (data != null) {<newline46mondego>  requestChunk(chunk);<newline46mondego>  chunk += numberOfThreads;<newline46mondego>}<newline46mondego>"
"4123splitHere46","12085797splitHere46","null"
"4124splitHere46","12085797splitHere46","requestChunk()"
"4125splitHere46","12085824splitHere46","ArrayList<Integer> array_image = new ArrayList<Integer>();<newline46mondego>array_image.add(R.drawable.image6);<newline46mondego>array_image.add(R.drawable.image1);<newline46mondego>"
"4126splitHere46","12085958splitHere46","@ModelAttribute<newline46mondego>    public void fillUsers(Model model) {<newline46mondego>        model.addAttribute(<doubleQuotes46>USERS<doubleQuotes46>, userService.getUsers());<newline46mondego>    }<newline46mondego><newline46mondego>    @ModelAttribute<newline46mondego>    public void getUser(@RequestParam(required = false) String userName, Model model) {<newline46mondego>        User user = null;<newline46mondego>        if (userName != null) {<newline46mondego>            user = userService.getUserByName(userName);<newline46mondego>        }<newline46mondego>        if (user == null) {<newline46mondego>            user = new User();<newline46mondego>        }<newline46mondego>        model.addAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>    }<newline46mondego><newline46mondego>    @RequestMapping(<doubleQuotes46>/toAddFriend<doubleQuotes46>)<newline46mondego>    public String toAddNewFriend() {<newline46mondego>        return <doubleQuotes46>addFriend<doubleQuotes46>;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @RequestMapping(value = <doubleQuotes46>/requestForFriends<doubleQuotes46>, method = RequestMethod.POST)<newline46mondego>    public String requestNewFriend(@ModelAttribute(<doubleQuotes46>user<doubleQuotes46>) User user) {<newline46mondego>        System.out.println(user.getUserName());<newline46mondego>        System.out.println(user.getEmail());<newline46mondego>        return <doubleQuotes46>addFriend<doubleQuotes46>;<newline46mondego><newline46mondego>    }<newline46mondego>"
"4127splitHere46","12086018splitHere46","public static BinaryTreeNode findLCA( BinaryTreeNode root, BinaryTreeNode node1 , BinaryTreeNode node2) {       <newline46mondego><newline46mondego>    if (root == null) {<newline46mondego>        return null;<newline46mondego>    }       <newline46mondego><newline46mondego>    BinaryTreeNode left = root.getLeft();<newline46mondego>    BinaryTreeNode right = root.getRight();<newline46mondego>    BinaryTreeNode lcaNode1;<newline46mondego>    BinaryTreeNode lcaNode2;<newline46mondego><newline46mondego>    if (left != null && (left == node1 || left == node2)) {<newline46mondego>        return root;                <newline46mondego>    }<newline46mondego><newline46mondego>    if (right != null && (right == node1 || right == node2)) {<newline46mondego>        return root;                <newline46mondego>    }<newline46mondego>    lcaNode1 =  findLCA(left, node1, node2);<newline46mondego>    lcaNode2 =  findLCA(right, node1, node2);<newline46mondego><newline46mondego>    if (( lcaNode1 != null) && lcaNode2 != null) {          <newline46mondego>        return root;<newline46mondego>    }<newline46mondego><newline46mondego>    if (lcaNode1 != null) {<newline46mondego>        return lcaNode1;<newline46mondego>    }<newline46mondego><newline46mondego>    if (lcaNode2 != null) {<newline46mondego>        return lcaNode2;<newline46mondego>    }       <newline46mondego><newline46mondego>    return null;        <newline46mondego>}<newline46mondego>"
"4128splitHere46","12086064splitHere46","JAVA_HOME=/usr/lib/jvm/default-java"
"4129splitHere46","12086069splitHere46","<action name=<doubleQuotes46>List*s<doubleQuotes46> class=<doubleQuotes46>actions.List{1}s<doubleQuotes46>><newline46mondego>  <result>list{1}s.jsp</result><newline46mondego></action><newline46mondego>"
"4130splitHere46","12086135splitHere46","attributes.getvalue(<doubleQuotes46>name of attribute here<doubleQuotes46>)"
"4131splitHere46","12086173splitHere46","split()"
"4132splitHere46","12086173splitHere46","net.rim.device.api.util.StringUtilities#stringToWords"
"4133splitHere46","12086196splitHere46","mysql_query(<doubleQuotes46>SET NAMES"
"4134splitHere46","12086196splitHere46","<doubleQuotes46>);"
"4135splitHere46","12086196splitHere46","mysql_connect(<doubleQuotes46>127.0.0.1<doubleQuotes46>,<doubleQuotes46>root<doubleQuotes46>,<doubleQuotes46>root<doubleQuotes46>);<newline46mondego><newline46mondego>mysql_select_db(<doubleQuotes46>peopledata<doubleQuotes46>);<newline46mondego>"
"4136splitHere46","12086196splitHere46","mysql_connect(<doubleQuotes46>127.0.0.1<doubleQuotes46>,<doubleQuotes46>root<doubleQuotes46>,<doubleQuotes46>root<doubleQuotes46>);<newline46mondego>mysql_query(<doubleQuotes46>SET NAMES `utf8`<doubleQuotes46>);<newline46mondego>mysql_select_db(<doubleQuotes46>peopledata<doubleQuotes46>);<newline46mondego>"
"4137splitHere46","12086221splitHere46","<object wicket:id=<doubleQuotes46>myFile<doubleQuotes46> data=<doubleQuotes46><doubleQuotes46> border=<doubleQuotes46>1<doubleQuotes46> width=<doubleQuotes46>100%<doubleQuotes46> height=<doubleQuotes46>600px<doubleQuotes46>></object><newline46mondego><newline46mondego>    WebMarkupContainer wmc = new WebMarkupContainer(<doubleQuotes46>myFile<doubleQuotes46>);<newline46mondego>    wmc.add(new AttributeModifier(<doubleQuotes46>data<doubleQuotes46>, (String) urlFor(rr, null)+<doubleQuotes46>#page=<doubleQuotes46>+ pageNmbr));<newline46mondego>    add(wmc);<newline46mondego>"
"4138splitHere46","12086284splitHere46","test2()"
"4139splitHere46","12086284splitHere46","public static void test2(Value str) {<newline46mondego>        str=new Value();<newline46mondego>        str.setValue(<doubleQuotes46>test2<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4140splitHere46","12086289splitHere46","JdbcTemplate"
"4141splitHere46","12086289splitHere46","Servlet"
"4142splitHere46","12086289splitHere46","Controller"
"4143splitHere46","12086289splitHere46","DAO"
"4144splitHere46","12086289splitHere46","JdbcTemplate"
"4145splitHere46","12086289splitHere46","JdbcTemplate"
"4146splitHere46","12086289splitHere46","DataSource"
"4147splitHere46","12086289splitHere46","UserDao"
"4148splitHere46","12086289splitHere46","<bean class=<doubleQuotes46>com.xxx.dao.UserDAOImpl<doubleQuotes46> id=<doubleQuotes46>userDAO<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>jdbcTemplate<doubleQuotes46> ref=<doubleQuotes46>jdbcTemplate<doubleQuotes46>/><newline46mondego></bean><newline46mondego><bean class=<doubleQuotes46>org.springframework.jdbc.core.JdbcTemplate<doubleQuotes46> id=<doubleQuotes46>jdbcTemplate<doubleQuotes46>><newline46mondego>   <constructor-arg ref=<doubleQuotes46>dataSource<doubleQuotes46>/><newline46mondego></bean><newline46mondego>and here you need to difine your <doubleQuotes46>dataSource<doubleQuotes46> there are multiple ways to configure it, You may get better help from google.<newline46mondego>"
"4149splitHere46","12086289splitHere46","UserDaoImpl"
"4150splitHere46","12086289splitHere46","public class UserDAOImpl implements UserDAO {<newline46mondego>   private JdbcTemplate jdbcTemplate;<newline46mondego>   //setter and getter for jdbcTemplate<newline46mondego><newline46mondego>   public List<Map<String, Object>> getUsers() {<newline46mondego>       String query = <doubleQuotes46>select * from user<doubleQuotes46>;<newline46mondego>       return jdbcTemplate.queryForList(query, new HashMap<String, String>());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4151splitHere46","12086289splitHere46","ServiceLocator"
"4152splitHere46","12086289splitHere46","...<newline46mondego>public UserDAO getUserDao() {<newline46mondego>   return ServiceLocator.getBean(UserDAO.class);<newline46mondego>}<newline46mondego>...<newline46mondego>"
"4153splitHere46","12086289splitHere46","ServiceLocator"
"4154splitHere46","12086289splitHere46","public class ServiceLocator implements ApplicationContextAware {<newline46mondego><newline46mondego>    private static ApplicationContext applicationContext;<newline46mondego><newline46mondego>    /**<newline46mondego>     * @return Returns the applicationContext.<newline46mondego>     */<newline46mondego>    public static ApplicationContext getApplicationContext() {<newline46mondego>        return applicationContext;<newline46mondego>    }<newline46mondego><newline46mondego>    public static <T> T getBean(Class<T> requiredType) throws BeansException {<newline46mondego>        return getApplicationContext().getBean(requiredType);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param applicationContext The applicationContext to set.<newline46mondego>     */<newline46mondego>    public void setApplicationContext(ApplicationContext applicationContext) {<newline46mondego>        ServiceLocator.applicationContext = applicationContext;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4155splitHere46","12086457splitHere46","request.getRequestDispatcher(<doubleQuotes46>doctor_result.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>"
"4156splitHere46","12086457splitHere46","response.sendRedirect(<doubleQuotes46>doctor_result.jsp<doubleQuotes46>);<newline46mondego>"
"4157splitHere46","12086626splitHere46","Bin     Freq        Magnitude<newline46mondego>  0     0 (DC)        2.5483305001488234E-16<newline46mondego>  1     Fs/8        920.0<newline46mondego>  2     Fs/4          4.0014578493024757E-14<newline46mondego>  3     3Fs/8         2.2914314707516465E-13<newline46mondego>  4     Fs/2 (Nyq)    5.658858581079313E-14<newline46mondego>  5     3Fs/8         2.2914314707516465E-13  # redundant - mirror image of bin 3<newline46mondego>  6     Fs/4          4.0014578493024757E-14  # redundant - mirror image of bin 2<newline46mondego>  7     Fs/8        920.0                     # redundant - mirror image of bin 1<newline46mondego>"
"4158splitHere46","12086691splitHere46","getWidth() - 1"
"4159splitHere46","12086778splitHere46","resource"
"4160splitHere46","12086778splitHere46","resource"
"4161splitHere46","12086778splitHere46","Resource"
"4162splitHere46","12086778splitHere46","volatile"
"4163splitHere46","12086789splitHere46","boolean foundMatch = false;<newline46mondego>try {<newline46mondego>    Pattern regex = Pattern.compile(<doubleQuotes46>\\b(?:(https?|ftp|file)://|www\\.)?[-A-Z0-9+&#/%?=~_|$!:,.;]*[A-Z0-9+&@#/%=~_|$]\\.[-A-Z0-9+&@#/%?=~_|$!:,.;]*[A-Z0-9+&@#/%=~_|$]<doubleQuotes46>, Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);<newline46mondego>    Matcher regexMatcher = regex.matcher(subjectString);<newline46mondego>    foundMatch = regexMatcher.matches();<newline46mondego>} catch (PatternSyntaxException ex) {<newline46mondego>    // Syntax error in the regular expression<newline46mondego>}<newline46mondego>"
"4164splitHere46","12086828splitHere46","SendFailedException"
"4165splitHere46","12086828splitHere46","getValidUnsentAddresses"
"4166splitHere46","12086840splitHere46","SWT.Verify"
"4167splitHere46","12086840splitHere46","VerifyListener"
"4168splitHere46","12086840splitHere46","VerifyEvent"
"4169splitHere46","12086840splitHere46","event.getSource()"
"4170splitHere46","12086840splitHere46","Listener"
"4171splitHere46","12086840splitHere46","final Text textField = new Text(shell, SWT.BORDER);<newline46mondego>textField.addListener(SWT.Verify, new Listener() {<newline46mondego>    @Override<newline46mondego>    public void handleEvent(Event e) {<newline46mondego>        // You can access textField, since it is final<newline46mondego>        final String oldS = textField.getText();<newline46mondego>        String newS = oldS.substring(0, e.start) + e.text + oldS.substring(e.end);<newline46mondego><newline46mondego>        boolean isValid = true;<newline46mondego><newline46mondego>        if(<doubleQuotes46><doubleQuotes46>.equals(newS))<newline46mondego>        {<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                // first check, if text really is a number<newline46mondego>                float value = Float.parseFloat(newS);<newline46mondego><newline46mondego>                // then check if it's between 0 and 100<newline46mondego>                if(value < 0 || 100 < value)<newline46mondego>                    isValid = false;<newline46mondego>            }<newline46mondego>            catch(NumberFormatException ex)<newline46mondego>            {<newline46mondego>                isValid = false;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // if text is not a valid number, prevent user input<newline46mondego>        if(!isValid)<newline46mondego>            e.doit = false;<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4172splitHere46","12086840splitHere46","Listener"
"4173splitHere46","12086840splitHere46","textField"
"4174splitHere46","12086840splitHere46","getSource()"
"4175splitHere46","12086840splitHere46","textField"
"4176splitHere46","12087000splitHere46","public class MyGameAndroidActivity extends AndroidApplication implements<newline46mondego>        ActionResolver {<newline46mondego>public void showScoreloop() {<newline46mondego>        Intent intent = new Intent(this, EntryScreenActivity.class);<newline46mondego>        this.startActivity(intent);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4177splitHere46","12087016splitHere46","JFrame"
"4178splitHere46","12087101splitHere46","<plugin><newline46mondego><groupId>org.apache.maven.plugins</groupId><newline46mondego><artifactId>maven-assembly-plugin</artifactId><newline46mondego><configuration><newline46mondego>    <descriptors><newline46mondego>        <descriptor>assembly.xml</descriptor><newline46mondego>    </descriptors><newline46mondego></configuration><newline46mondego></plugin><newline46mondego>"
"4179splitHere46","12087101splitHere46","<assembly xmlns=<doubleQuotes46>http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd<doubleQuotes46>><newline46mondego><id>bin</id><newline46mondego><formats><newline46mondego>    <format>tar.gz</format><newline46mondego></formats><newline46mondego><includeBaseDirectory>true</includeBaseDirectory><newline46mondego><fileSets><newline46mondego>    <fileSet><newline46mondego>        <directory>${project.build.directory}</directory><newline46mondego>        <outputDirectory>/</outputDirectory><newline46mondego>        <includes><newline46mondego>            <include>${project.artifactId}-${project.version}.jar</include><newline46mondego>        </includes><newline46mondego>    </fileSet><newline46mondego></fileSets><newline46mondego><dependencySets><newline46mondego>    <dependencySet><newline46mondego>        <outputDirectory>/lib</outputDirectory><newline46mondego>        <useProjectArtifact>false</useProjectArtifact><newline46mondego>        <unpack>false</unpack><newline46mondego>    </dependencySet><newline46mondego></dependencySets><newline46mondego></assembly><newline46mondego>"
"4180splitHere46","12087185splitHere46","and"
"4181splitHere46","12087185splitHere46","AND"
"4182splitHere46","12087185splitHere46","&&"
"4183splitHere46","12087185splitHere46","[#if entry1?? && entry2??]bla bla[/#if]"
"4184splitHere46","12087185splitHere46","&&"
"4185splitHere46","12087185splitHere46","&amp;&amp;"
"4186splitHere46","12087185splitHere46","AND"
"4187splitHere46","12087185splitHere46","<AND>"
"4188splitHere46","12087200splitHere46","select * from SYSIBM.SYSINDEXES where TBNAME= 'TABLE_NAME';<newline46mondego>"
"4189splitHere46","12087200splitHere46","drop index INDEX_NAME;<newline46mondego>"
"4190splitHere46","12087220splitHere46","10.9 <aggregate function><newline46mondego><newline46mondego>Format<newline46mondego><aggregate function> ::=<newline46mondego>      COUNT <left paren> <asterisk> <right paren> [ <filter clause> ]<newline46mondego>    | <general set function> [ <filter clause> ]<newline46mondego><newline46mondego><general set function> ::=<newline46mondego>  <set function type> <left paren> [ <set quantifier> ]<newline46mondego>    <value expression> <right paren><newline46mondego>"
"4191splitHere46","12087220splitHere46","DISTINCT"
"4192splitHere46","12087220splitHere46","COUNT(DISTINCT expr,[expr...])<newline46mondego>"
"4193splitHere46","12087220splitHere46","Field<Integer> myCount = Factory.field(<newline46mondego>  <doubleQuotes46>count(distinct {0}, {1})<doubleQuotes46>, Integer.class, c2, c3);<newline46mondego>"
"4194splitHere46","12087220splitHere46","Factory.field(String, Class<T>, QueryPart...)"
"4195splitHere46","12087220splitHere46","Field<Integer> count = Factory.countDistinct(c2, c3);<newline46mondego>"
"4196splitHere46","12087220splitHere46","Factory.countDistinct(Field...)"
"4197splitHere46","12087265splitHere46","@Valid"
"4198splitHere46","12087265splitHere46","AccountDetails"
"4199splitHere46","12087265splitHere46","AccountDetailsForm"
"4200splitHere46","12087265splitHere46","public class AccountDetailsForm {<newline46mondego><newline46mondego>    @Valid<newline46mondego>    private AccountDetails accountDetails;<newline46mondego><newline46mondego>    @NotNull<newline46mondego>    private String confirmPassword;<newline46mondego><newline46mondego>        //setter and getters<newline46mondego>}<newline46mondego>"
"4201splitHere46","12087265splitHere46","AccountDetailsForm"
"4202splitHere46","12087265splitHere46","@Valid"
"4203splitHere46","12087265splitHere46","AccountDetails"
"4204splitHere46","12087279splitHere46","1137           // According to JLS3 <doubleQuotes46>Binary Compatibility<doubleQuotes46> (13.1) the binary<newline46mondego> 1138           // name of non-package classes (not top level) is the binary<newline46mondego> 1139           // name of the immediately enclosing class followed by a '$' followed by:<newline46mondego> 1140           // (for nested and inner classes): the simple name.<newline46mondego> 1141           // (for local classes): 1 or more digits followed by the simple name.<newline46mondego> 1142           // (for anonymous classes): 1 or more digits.<newline46mondego>"
"4205splitHere46","12087292splitHere46","@Entity(name = <doubleQuotes46>A<doubleQuotes46>)<newline46mondego>@Table(name = <doubleQuotes46>A<doubleQuotes46>)<newline46mondego>@Inheritance(strategy = InheritanceType.JOINED)<newline46mondego>public class A {<newline46mondego>    @SuppressWarnings(<doubleQuotes46>unused<doubleQuotes46>)<newline46mondego>    @Id<newline46mondego>    @Column(name = <doubleQuotes46>A_ID<doubleQuotes46>)<newline46mondego>    private int id;<newline46mondego>}<newline46mondego>"
"4206splitHere46","12087292splitHere46","SINGLE_TABLE"
"4207splitHere46","12087425splitHere46","public void largeMethodThatDoesSomething() {<newline46mondego> //do A<newline46mondego> //do B<newline46mondego> //do C<newline46mondego>}<newline46mondego>"
"4208splitHere46","12087425splitHere46","public void largeMethodThatDoesSomething() {<newline46mondego> doA();<newline46mondego> doB();<newline46mondego> doC();<newline46mondego>}<newline46mondego><newline46mondego>private void doA() {};<newline46mondego>private void doB() {};<newline46mondego>private void doC() {};<newline46mondego>"
"4209splitHere46","12087450splitHere46","store.connect(<doubleQuotes46>pop3<doubleQuotes46>,<doubleQuotes46>admin<doubleQuotes46>,<doubleQuotes46>Your_Required_Password<doubleQuotes46>);<newline46mondego>"
"4210splitHere46","12087507splitHere46","jar xf {jarname}"
"4211splitHere46","12087561splitHere46","Person"
"4212splitHere46","12087561splitHere46","Thread"
"4213splitHere46","12087561splitHere46","Person"
"4214splitHere46","12087561splitHere46","PersonImpl"
"4215splitHere46","12087561splitHere46","Person"
"4216splitHere46","12087581splitHere46","[^\\p{L}]"
"4217splitHere46","12087581splitHere46","Pattern"
"4218splitHere46","12087581splitHere46","UNICODE_CHARACTER_CLASS"
"4219splitHere46","12087720splitHere46","InputSource"
"4220splitHere46","12087720splitHere46","InputSource"
"4221splitHere46","12087720splitHere46","InputSource"
"4222splitHere46","12087720splitHere46","StringReader"
"4223splitHere46","12087720splitHere46","InputSource docXml = new InputSource(new StringReader(responseBody)); <newline46mondego>"
"4224splitHere46","12087720splitHere46","Document"
"4225splitHere46","12087731splitHere46","Mat src = imread(<doubleQuotes46>input.jpg<doubleQuotes46>), tmp;<newline46mondego>cvtColor(src, tmp, CV_BGR2GRAY);<newline46mondego>threshold(tmp, tmp, 200, 255, THRESH_BINARY);<newline46mondego>"
"4226splitHere46","12087763splitHere46","R.drawable.picture"
"4227splitHere46","12087763splitHere46","R.*.*"
"4228splitHere46","12087763splitHere46","public final class R {<newline46mondego>    public static final class attr {<newline46mondego>    }<newline46mondego>    public static final class drawable {<newline46mondego>        public static final int help=0x7f020000;<newline46mondego>        public static final int ic_action_search=0x7f020001;<newline46mondego>        public static final int ic_launcher=0x7f020002;<newline46mondego>        public static final int splash1=0x7f020003;<newline46mondego>    }<newline46mondego>    public static final class id {<newline46mondego>        public static final int userName=0x7f070002;<newline46mondego>    }<newline46mondego>    public static final class layout {<newline46mondego>        public static final int splash=0x7f030003;<newline46mondego>    }<newline46mondego>    public static final class menu {<newline46mondego>        public static final int action=0x7f060000;<newline46mondego>        public static final int menu=0x7f060001;<newline46mondego>    }<newline46mondego>    public static final class string {<newline46mondego>        public static final int app_name=0x7f040000;<newline46mondego>        public static final int create_user=0x7f040004;<newline46mondego>        public static final int help=0x7f040001;<newline46mondego>        public static final int image=0x7f040002;<newline46mondego>        public static final int primarymodtext=0x7f040003;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4229splitHere46","12087763splitHere46","R.drawable.picture"
"4230splitHere46","12087763splitHere46","R.drawable.picture"
"4231splitHere46","12087763splitHere46","R.drawable.picture"
"4232splitHere46","12087796splitHere46",".split()"
"4233splitHere46","12087796splitHere46","String s = <doubleQuotes46>name=type,info1;101;localhost;-1;false;false<doubleQuotes46>;<newline46mondego>String[] words = s.split(<doubleQuotes46>=|,<doubleQuotes46>);<newline46mondego>String name = words[0];<newline46mondego>String type = words[1];<newline46mondego>String info = words[2];<newline46mondego>System.out.println(<doubleQuotes46>Name: <doubleQuotes46> + name + <doubleQuotes46>\nType: <doubleQuotes46> + type + <doubleQuotes46>\nInfo: <doubleQuotes46> + info);<newline46mondego>"
"4234splitHere46","12087796splitHere46","Name: name<newline46mondego>Type: type<newline46mondego>Info: info1;101;localhost;-1;false;false<newline46mondego>"
"4235splitHere46","12087822splitHere46","Maps"
"4236splitHere46","12087822splitHere46","Lists"
"4237splitHere46","12087822splitHere46","public interface Data {<newline46mondego>   public Map<String,String>> getGlobalConf();<newline46mondego>}<newline46mondego><newline46mondego>public interface DataFactory extends AutoBeanFactory {<newline46mondego>   AutoBean<Data> getData();<newline46mondego>}<newline46mondego><newline46mondego>final String jsObject = GeneralContextNativeReader.read(<doubleQuotes46>globalConf<doubleQuotes46>);<newline46mondego>DataFactory dataFactory = GWT.create(DataFactory.class);<newline46mondego>Data data = AutoBeanCodex.decode(dataFactory, Data.class, jsObject).as();<newline46mondego>Map<String, String> globalConf = data.getGlobalConf();<newline46mondego>"
"4238splitHere46","12087822splitHere46","{<doubleQuotes46>globalConf<doubleQuotes46>:{ <doubleQuotes46>element<doubleQuotes46>:<doubleQuotes46>value<doubleQuotes46>,<doubleQuotes46>element2<doubleQuotes46>:<doubleQuotes46>value2<doubleQuotes46>,...}}<newline46mondego>"
"4239splitHere46","12087892splitHere46","-classpath"
"4240splitHere46","12087892splitHere46","-D"
"4241splitHere46","12087892splitHere46","net.minecraft.client.Minecraft"
"4242splitHere46","12087892splitHere46","username"
"4243splitHere46","12087892splitHere46","password"
"4244splitHere46","12087892splitHere46","-Dproperty=value"
"4245splitHere46","12087892splitHere46","-D"
"4246splitHere46","12087892splitHere46","java.library.path"
"4247splitHere46","12088043splitHere46","<converter type=<doubleQuotes46>de.kba.resper.customconverter.DateTimeCustomConverter<doubleQuotes46>><newline46mondego>        <class-a>org.joda.time.DateTime</class-a><newline46mondego>        <class-b>org.joda.time.DateTime</class-b><newline46mondego>    </converter><newline46mondego>"
"4248splitHere46","12088043splitHere46","public class DateTimeCustomConverter extends DozerConverter<DateTime, DateTime> {<newline46mondego><newline46mondego>    public DateTimeCustomConverter() {<newline46mondego>        super(DateTime.class, DateTime.class);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public DateTime convertTo(final DateTime source, final DateTime destination) {<newline46mondego><newline46mondego>        if (source == null) {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        return new DateTime(source);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public DateTime convertFrom(final DateTime source, final DateTime destination) {<newline46mondego><newline46mondego>        if (source == null) {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        return new DateTime(source);<newline46mondego>        }<newline46mondego><newline46mondego>}<newline46mondego>"
"4249splitHere46","12088048splitHere46","O(lg(n))"
"4250splitHere46","12088048splitHere46","c*lg(n)"
"4251splitHere46","12088048splitHere46","c"
"4252splitHere46","12088048splitHere46","lg(n)"
"4253splitHere46","12088048splitHere46","lgn"
"4254splitHere46","12088048splitHere46","~1.44*lg(n)"
"4255splitHere46","12088070splitHere46","WindowsAdapter"
"4256splitHere46","12088135splitHere46","@BeforeClass"
"4257splitHere46","12088135splitHere46","@BeforeClass"
"4258splitHere46","12088135splitHere46","@Autowire"
"4259splitHere46","12088135splitHere46","setUp()"
"4260splitHere46","12088135splitHere46","@Before"
"4261splitHere46","12088135splitHere46","boolean"
"4262splitHere46","12088135splitHere46","private boolean setUpIsDone = false;<newline46mondego>.....<newline46mondego>public void setUp() {<newline46mondego>    if (setUpIsDone) {<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    // do the setup<newline46mondego>    setUpIsDone = true;<newline46mondego>}<newline46mondego>"
"4263splitHere46","12088190splitHere46","private List<Element> executeForEachElement(List<Element> oldList)<newline46mondego>    List<Element> newElements = new LinkedList<Element>();<newline46mondego>    for (Element elem : oldList {<newline46mondego>            newElements.addAll(generateNewElements(elem));<newline46mondego>    }<newline46mondego>    if (!newElements.isEmpty()) {<newline46mondego>        oldList.addAll(executeForEachElement(newElements));<newline46mondego>    }<newline46mondego><newline46mondego>    return oldList;<newline46mondego>}<newline46mondego>"
"4264splitHere46","12088371splitHere46","stmt = conn.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY);<newline46mondego>stmt.setFetchSize(Integer.MIN_VALUE);<newline46mondego>"
"4265splitHere46","12088417splitHere46","// if random is needed [see here][1] to adapt the criteria<newline46mondego>var answers = session.createCriteria(Answer.class)<newline46mondego>    .setFetchMode(<doubleQuotes46>Question<doubleQuotes46>, FetchMode.eager)<newline46mondego>    .list<Answer>();<newline46mondego><newline46mondego><newline46mondego>// map of orginal question to voting question<newline46mondego>Map<Question, Question> questions = new Hashmap<Question, Question>();<newline46mondego>for (Answer answer : answers)<newline46mondego>{<newline46mondego>    if (questions.ContainsKey(answer.getQuestion()))<newline46mondego>    {<newline46mondego>        Question votingQuestion = questions.get(answer.getQuestion());<newline46mondego>        if (votingQuestion.getPossibleAnswers().Count() < 4)<newline46mondego>            votingQuestion.getPossibleAnswers().add(answer.Text);<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        Question votingQuestion = createVotingQuestion(answer.getQuestion());<newline46mondego>        votingQuestion.getPossibleAnswers().add(answer.Text);<newline46mondego>        questions.add(answer.getQuestion(), votingQuestion);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4266splitHere46","12088463splitHere46","BigInteger"
"4267splitHere46","12088463splitHere46","int"
"4268splitHere46","12088463splitHere46","Integer.MAX_VALUE"
"4269splitHere46","12088468splitHere46","BigDecimals"
"4270splitHere46","12088468splitHere46","System.out.println(new BigDecimal(<doubleQuotes46>660000.00<doubleQuotes46>).scale()); // 2<newline46mondego>System.out.println(new BigDecimal(660000.00).scale());   // 0<newline46mondego>"
"4271splitHere46","12088468splitHere46","BigDecimal bd1 = new BigDecimal(<doubleQuotes46>660000.00<doubleQuotes46>);<newline46mondego>BigDecimal bd2 = new BigDecimal(660000.00);<newline46mondego><newline46mondego>int s = Math.max(bd1.scale(), bd2.scale());<newline46mondego>.. bd1.setScale(s).equals(bd2.setScale(s)) ..   // == true.<newline46mondego>"
"4272splitHere46","12088468splitHere46",".1"
"4273splitHere46","12088468splitHere46","System.out.println(new BigDecimal(.1));<newline46mondego>"
"4274splitHere46","12088468splitHere46","new BigDecimal(<doubleQuotes46>.1<doubleQuotes46>)"
"4275splitHere46","12088468splitHere46","new BigDecimal(.1).equals(new BigDecimal(<doubleQuotes46>.1<doubleQuotes46>))<newline46mondego>"
"4276splitHere46","12089015splitHere46","new B(B)"
"4277splitHere46","12089015splitHere46","B"
"4278splitHere46","12089015splitHere46","addData"
"4279splitHere46","12089015splitHere46","B"
"4280splitHere46","12089015splitHere46","bOb"
"4281splitHere46","12089015splitHere46","Type"
"4282splitHere46","12089015splitHere46","java.lang.String"
"4283splitHere46","12089044splitHere46","ordinal()"
"4284splitHere46","12089044splitHere46","name()"
"4285splitHere46","12089044splitHere46","equals()"
"4286splitHere46","12089044splitHere46","hashCode()"
"4287splitHere46","12089044splitHere46","public interface EnumInterface<E extends Enum<E>> {<newline46mondego>}<newline46mondego>"
"4288splitHere46","12089044splitHere46","public enum MyInterfaceImpl implements EnumInterface<MyInterfaceImpl> {<newline46mondego>  FOO,<newline46mondego>  BAR;<newline46mondego>}<newline46mondego>"
"4289splitHere46","12089044splitHere46","class NotAnEnum implements EnumInterface<MyInterfaceImpl> {<newline46mondego>}<newline46mondego>"
"4290splitHere46","12089066splitHere46","Base"
"4291splitHere46","12089066splitHere46","D1"
"4292splitHere46","12089066splitHere46","Main"
"4293splitHere46","12089066splitHere46","Main"
"4294splitHere46","12089066splitHere46","Main"
"4295splitHere46","12089066splitHere46","Object oo = cc.getConstructor(Main.class).newInstance(new Main()); <newline46mondego>"
"4296splitHere46","12089066splitHere46","static"
"4297splitHere46","12089066splitHere46","Main"
"4298splitHere46","12089066splitHere46","Main"
"4299splitHere46","12089066splitHere46","D1"
"4300splitHere46","12089066splitHere46","public"
"4301splitHere46","12089066splitHere46","setAccessible(true)"
"4302splitHere46","12089103splitHere46","public class CameraView extends Activity implements SurfaceHolder.Callback {<newline46mondego><newline46mondego>android.hardware.Camera mCamera;<newline46mondego>boolean mPreviewRunning = false;<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState)<newline46mondego>{<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    getWindow().setFormat(PixelFormat.TRANSLUCENT);<newline46mondego>    requestWindowFeature(Window.FEATURE_NO_TITLE);<newline46mondego>    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);<newline46mondego><newline46mondego>    setContentView(R.layout.camera_surface);<newline46mondego>    SurfaceView mSurfaceView = (SurfaceView)findViewById(R.id.surface_camera);<newline46mondego>    SurfaceHolder mSurfaceHolder = mSurfaceView.getHolder();<newline46mondego>    mSurfaceHolder.addCallback(this);<newline46mondego>    mSurfaceHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Override<newline46mondego>public void surfaceCreated(SurfaceHolder holder) {<newline46mondego>try {<newline46mondego>        mCamera.setPreviewDisplay(previewHolder);   <newline46mondego>    }<newline46mondego>    catch (Throwable t) {<newline46mondego>        Log.e(TAG, <doubleQuotes46>Exception in setPreviewDisplay()<doubleQuotes46>, t);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Override<newline46mondego> public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {<newline46mondego>    Camera.Parameters parameters=camera.getParameters();<newline46mondego>    Camera.Size size=getBestPreviewSize(width, height, parameters);<newline46mondego><newline46mondego>    if (size!=null) {<newline46mondego>        parameters.setPreviewSize(size.width, size.height);<newline46mondego>        camera.setParameters(parameters);<newline46mondego>        camera.startPreview();<newline46mondego>        inPreview=true;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>@Override<newline46mondego>public void surfaceDestroyed(SurfaceHolder holder) {<newline46mondego>    mCamera.stopPreview();<newline46mondego>    mPreviewRunning = false;<newline46mondego>    mCamera.release();<newline46mondego>}<newline46mondego><newline46mondego>android.hardware.Camera.PictureCallback mPictureCallback = new android.hardware.Camera.PictureCallback() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onPictureTaken(byte[] data, android.hardware.Camera camera) {<newline46mondego><newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>    private Camera.Size getBestPreviewSize(int width, int height, Camera.Parameters parameters) {<newline46mondego>    Camera.Size result=null;<newline46mondego><newline46mondego>    for (Camera.Size size : parameters.getSupportedPreviewSizes()) {<newline46mondego>        if (size.width<=width && size.height<=height) {<newline46mondego>            if (result==null) {<newline46mondego>                result=size;<newline46mondego>            }<newline46mondego>            else {<newline46mondego>                int resultArea=result.width*result.height;<newline46mondego>                int newArea=size.width*size.height;<newline46mondego><newline46mondego>                if (newArea>resultArea) {<newline46mondego>                    result=size;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return(result);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"4303splitHere46","12089234splitHere46","Mat src = imread(<doubleQuotes46>input.jpg<doubleQuotes46>), tmp;<newline46mondego><newline46mondego>cvtColor(src, tmp, CV_BGR2GRAY);<newline46mondego>threshold(tmp, tmp, 200, 255, THRESH_OTSU);<newline46mondego><newline46mondego>Mat element = getStructuringElement(MORPH_RECT, Size(3, 3), Point(1, 1));<newline46mondego>dilate(tmp, tmp, element);<newline46mondego>erode(tmp, tmp, element);<newline46mondego>"
"4304splitHere46","12089372splitHere46","public static void main(String[] args) throws InterruptedException {<newline46mondego>    Runnable r = new Runnable() {<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            JTextField jtx = new JTextField();<newline46mondego>            jtx.setText(<doubleQuotes46>TEST<doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>Before: <doubleQuotes46> + jtx.getText());<newline46mondego>            jtx.setEnabled(false);<newline46mondego>            System.out.println(<doubleQuotes46>After: <doubleQuotes46> + jtx.getText());<newline46mondego>        }<newline46mondego>    };<newline46mondego>    SwingUtilities.invokeLater(r);<newline46mondego>}<newline46mondego>"
"4305splitHere46","12089436splitHere46","<field name=<doubleQuotes46>_version_<doubleQuotes46> type=<doubleQuotes46>long<doubleQuotes46>     indexed=<doubleQuotes46>true<doubleQuotes46>  stored=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"4306splitHere46","12089436splitHere46","<updateHandler class=<doubleQuotes46>solr.DirectUpdateHandler2<doubleQuotes46>><newline46mondego><updateLog><newline46mondego>  <str name=<doubleQuotes46>dir<doubleQuotes46>>${solr.data.dir:}</str><newline46mondego></updateLog><newline46mondego>"
"4307splitHere46","12089466splitHere46","Icon"
"4308splitHere46","12089466splitHere46","ImageIcon"
"4309splitHere46","12089466splitHere46","JLabel"
"4310splitHere46","12089466splitHere46","JXLayer"
"4311splitHere46","12089887splitHere46","<analyzer><newline46mondego>  <tokenizer class=<doubleQuotes46>solr.NGramTokenizerFactory<doubleQuotes46>/><newline46mondego></analyzer><newline46mondego>"
"4312splitHere46","12089924splitHere46","TableViewer viewer = new TableViewer(this, SWT.BORDER | SWT.MULTI | SWT.FULL_SELECTION); <newline46mondego>    table = viewer.getTable();<newline46mondego>"
"4313splitHere46","12089956splitHere46","Logger"
"4314splitHere46","12089956splitHere46","// Standard logger<newline46mondego>private static Logger log = Logger.getLogger(MyClass.class)<newline46mondego><newline46mondego>// XYZ logger<newline46mondego>private static Logger logXYZ = Logger.getLogger(<doubleQuotes46>logs.xyz<doubleQuotes46>);<newline46mondego>"
"4315splitHere46","12089998splitHere46","prev"
"4316splitHere46","12089998splitHere46","if (prev != null)<newline46mondego>    prev.setNext(next);  // make prev discard its reference to me (this).<newline46mondego><newline46mondego>if (next != null)<newline46mondego>    next.setPrev(prev);  // make next discard its reference to me (this).<newline46mondego>"
"4317splitHere46","12090128splitHere46","prependId=<doubleQuotes46>false<doubleQuotes46>"
"4318splitHere46","12090128splitHere46","dataTable"
"4319splitHere46","12090128splitHere46","@parent"
"4320splitHere46","12090172splitHere46","index.jsp"
"4321splitHere46","12090172splitHere46","welcom.jsp"
"4322splitHere46","12090172splitHere46","<welcome-page>"
"4323splitHere46","12090172splitHere46","<welcome-file-list><newline46mondego>            <welcome-file>index</welcome-file><newline46mondego></welcome-file-list><newline46mondego>"
"4324splitHere46","12090172splitHere46","index"
"4325splitHere46","12090172splitHere46","<action name=<doubleQuotes46>index<doubleQuotes46> class=<doubleQuotes46>welcomeAction<doubleQuotes46>><newline46mondego>     <result>/ab.jsp</result><newline46mondego> </action><newline46mondego>"
"4326splitHere46","12090172splitHere46","www.myapp.com/myApp"
"4327splitHere46","12090362splitHere46","start"
"4328splitHere46","12090362splitHere46","downloadAllUpdater"
"4329splitHere46","12090362splitHere46","Runnable downloadAllUpdater = new Runnable() { //rest unchanged<newline46mondego>"
"4330splitHere46","12090362splitHere46","doInBackground"
"4331splitHere46","12090362splitHere46","new Thread(downloadAllUpdater).start();<newline46mondego>"
"4332splitHere46","12090362splitHere46","doInBackground"
"4333splitHere46","12090362splitHere46","downloadAllUpdater.run();"
"4334splitHere46","12090592splitHere46","import org.apache.cxf.endpoint.Client;<newline46mondego>import org.apache.cxf.frontend.ClientProxy;<newline46mondego>import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;<newline46mondego>import org.apache.cxf.transport.http.HTTPConduit;<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();<newline46mondego><newline46mondego>//factory.getInInterceptors().add(new LoggingInInterceptor());<newline46mondego>//factory.getOutInterceptors().add(new LoggingOutInterceptor());<newline46mondego><newline46mondego>factory.setServiceClass(IAbc.class);<newline46mondego>factory.setAddress(<doubleQuotes46>https://hiddendomain.com/abc/abc.svc/soap<doubleQuotes46>); <- must be /soap there, otherwise 404<newline46mondego><newline46mondego>IAbc info = (IAbc) factory.create();<newline46mondego><newline46mondego>Client client = ClientProxy.getClient(info);<newline46mondego>HTTPConduit http = (HTTPConduit) client.getConduit();<newline46mondego><newline46mondego>http.getAuthorization().setUserName(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego>http.getAuthorization().setPassword(<doubleQuotes46>pass<doubleQuotes46>);<newline46mondego><newline46mondego>String abc = info.abc();<newline46mondego>"
"4335splitHere46","12090634splitHere46","BigDecimal"
"4336splitHere46","12090634splitHere46","BigDecimal bytes = new BigDecimal(<doubleQuotes46>1.2GB<doubleQuotes46>.replace(<doubleQuotes46>GB<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>bytes = bytes.multiply(BigDecimal.valueOf(1024).pow(3));<newline46mondego>long value = bytes.longValue();<newline46mondego>"
"4337splitHere46","12090634splitHere46","public static long toBytes(String filesize) {<newline46mondego>    long returnValue = -1;<newline46mondego>    Pattern patt = Pattern.compile(<doubleQuotes46>([\\d.]+)([GMK]B)<doubleQuotes46>, Pattern.CASE_INSENSITIVE);<newline46mondego>    Matcher matcher = patt.matcher(filesize);<newline46mondego>    Map<String, Integer> powerMap = new HashMap<String, Integer>();<newline46mondego>    powerMap.put(<doubleQuotes46>GB<doubleQuotes46>, 3);<newline46mondego>    powerMap.put(<doubleQuotes46>MB<doubleQuotes46>, 2);<newline46mondego>    powerMap.put(<doubleQuotes46>KB<doubleQuotes46>, 1);<newline46mondego>    if (matcher.find()) {<newline46mondego>      String number = matcher.group(1);<newline46mondego>      int pow = powerMap.get(matcher.group(2).toUpperCase());<newline46mondego>      BigDecimal bytes = new BigDecimal(number);<newline46mondego>      bytes = bytes.multiply(BigDecimal.valueOf(1024).pow(pow));<newline46mondego>      returnValue = bytes.longValue();<newline46mondego>    }<newline46mondego>    return returnValue;<newline46mondego>}<newline46mondego>"
"4338splitHere46","12090634splitHere46","long bytes = toBytes(<doubleQuotes46>1.2GB<doubleQuotes46>);<newline46mondego>"
"4339splitHere46","12090881splitHere46","resource.xml"
"4340splitHere46","12090881splitHere46","XE"
"4341splitHere46","12090881splitHere46","<target name=<doubleQuotes46>something<doubleQuotes46> ...<newline46mondego>...<newline46mondego>  <scriptdef language=<doubleQuotes46>javascript<doubleQuotes46> name=<doubleQuotes46>split<doubleQuotes46>><newline46mondego>    <attribute name=<doubleQuotes46>input<doubleQuotes46>/><newline46mondego>    <attribute name=<doubleQuotes46>output<doubleQuotes46>/><newline46mondego>    values = attributes.get(<doubleQuotes46>input<doubleQuotes46>);<newline46mondego>    project.setProperty(attributes.get(<doubleQuotes46>output<doubleQuotes46>), values.split(<doubleQuotes46>;<doubleQuotes46>)[2]);<newline46mondego>  </scriptdef><newline46mondego><newline46mondego>  <xmlproperty file=<doubleQuotes46>resource.xml<doubleQuotes46>/><newline46mondego>  <echo message=<doubleQuotes46>Original: ${databases.driver.attributes}<doubleQuotes46>/><newline46mondego>  <split input=<doubleQuotes46>${databases.driver.attributes}<doubleQuotes46> output=<doubleQuotes46>result<doubleQuotes46> /><newline46mondego>  <echo message=<doubleQuotes46>Split: ${result}<doubleQuotes46>/><newline46mondego>...<newline46mondego></target><newline46mondego>"
"4342splitHere46","12090881splitHere46","something:<newline46mondego>[xmlproperty] Loading /home/code/resource.xml<newline46mondego>     [echo] Original: localhost;1521;XE;false<newline46mondego>     [echo] Split: XE<newline46mondego>"
"4343splitHere46","12090916splitHere46","Socket"
"4344splitHere46","12090916splitHere46","Background Task"
"4345splitHere46","12090916splitHere46","Swing GUI"
"4346splitHere46","12090916splitHere46","Background Task"
"4347splitHere46","12090916splitHere46","Runnable#Thread"
"4348splitHere46","12090916splitHere46","invokeLater"
"4349splitHere46","12090916splitHere46","while(true){"
"4350splitHere46","12090916splitHere46","Boolean variable"
"4351splitHere46","12090916splitHere46","true"
"4352splitHere46","12090916splitHere46","Socket"
"4353splitHere46","12090916splitHere46","send.addActionListener(new ActionListener(){"
"4354splitHere46","12090916splitHere46","JButtons"
"4355splitHere46","12090916splitHere46","SwingWorker"
"4356splitHere46","12090916splitHere46","Runnable#Thread"
"4357splitHere46","12090916splitHere46","SwingWorker"
"4358splitHere46","12090916splitHere46","SwingWorker"
"4359splitHere46","12090918splitHere46","int i = -1;<newline46mondego>  System.out.format(<doubleQuotes46>%3d = %s\n<doubleQuotes46>, i, Integer.toBinaryString(i));<newline46mondego>  i <<= 5;<newline46mondego>  System.out.format(<doubleQuotes46>%3d = %s\n<doubleQuotes46>, i, Integer.toBinaryString(i));<newline46mondego>"
"4360splitHere46","12090918splitHere46","-1 = 11111111111111111111111111111111<newline46mondego>-32 = 11111111111111111111111111100000<newline46mondego>"
"4361splitHere46","12090940splitHere46","Integer.parseInt"
"4362splitHere46","12090940splitHere46","this.id = FacesContext.getCurrentInstance().getExternalContext().<newline46mondego>          getRequestParameterMap().get(<doubleQuotes46>id<doubleQuotes46>);<newline46mondego>"
"4363splitHere46","12090978splitHere46","Pattern.compile(<doubleQuotes46>.*impl-[0-9]{1,2}\\.[0-9]{1,2}.xml<doubleQuotes46>);"
"4364splitHere46","12090978splitHere46","Pattern.compile(<doubleQuotes46>impl-[0-9]+\\.[0-9]+.xml<doubleQuotes46>);"
"4365splitHere46","12090978splitHere46","final Pattern patt = Pattern.compile(<doubleQuotes46>^\\p{Alnum}+\\-[0-9]+\\.[0-9]+.xml$<doubleQuotes46>);<newline46mondego>"
"4366splitHere46","12090978splitHere46","impl-3.0.xml<newline46mondego>api-3.0.xml<newline46mondego>x10-2.0.xml<newline46mondego>"
"4367splitHere46","12090978splitHere46","^"
"4368splitHere46","12091198splitHere46","private class loadingTask extends AsyncTask<String, Void, List<Manga>> {<newline46mondego>    @Override<newline46mondego>    protected String doInBackground(String... urls) {<newline46mondego>        try {<newline46mondego>            return loadXmlFromNetwork(urls[0]);<newline46mondego>        } catch (IOException e) {<newline46mondego>            return null;<newline46mondego>        } catch (XmlPullParserException e) {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPostExecute(List<Manga> result) {  <newline46mondego>        setContentView(R.layout.activity_main);<newline46mondego>        // Displays the HTML string in the UI via a WebView<newline46mondego>        listview1.setAdapter(new EfficientAdapter(MainActivity.this, result));<newline46mondego>        ShowProgress.dismiss();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public List<Manga> loadXmlFromNetwork(String urlString) throws XmlPullParserException, IOException {<newline46mondego><newline46mondego>....<newline46mondego>"
"4369splitHere46","12091266splitHere46","<queryString><newline46mondego>        <![CDATA[SELECT reference, name FROM table WHERE $P!{whereCondition}]]><newline46mondego></queryString><newline46mondego>"
"4370splitHere46","12091266splitHere46","Map<String, Object> params = new HashMap<String, Object>();<newline46mondego>params.put(<doubleQuotes46>whereCondition<doubleQuotes46>, <doubleQuotes46>reference > 0<doubleQuotes46>);<newline46mondego>JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);<newline46mondego>JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params, connection);<newline46mondego>"
"4371splitHere46","12091343splitHere46","public class Main {<newline46mondego>    public static void main(String[] args) throws InterruptedException {<newline46mondego>        for (int i = 0; i < 10; i++) {<newline46mondego>            measurementIteration();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void measurementIteration() {<newline46mondego>        long s, t1 = 0, t2 = 0;<newline46mondego>        float mFloat = 3.3f;<newline46mondego>        int f, n1 = 0, n2 = 0;<newline46mondego>        for (int i = 0; i < 1E4; i++) {<newline46mondego>            switch ((int) (Math.random() * 2)) {<newline46mondego>            case 0:<newline46mondego>                n1 += 1E4;<newline46mondego>                s = System.currentTimeMillis();<newline46mondego>                for (int k = 0; k < 1E4; k++)<newline46mondego>                    f = (int) (mFloat + 0.5);<newline46mondego>                t1 += System.currentTimeMillis() - s;<newline46mondego>                break;<newline46mondego>            case 1:<newline46mondego>                n2 += 1E4;<newline46mondego>                s = System.currentTimeMillis();<newline46mondego>                for (int k = 0; k < 1E4; k++)<newline46mondego>                    f = Math.round(mFloat);<newline46mondego>                t2 += System.currentTimeMillis() - s;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        System.out.println(String.format(<doubleQuotes46>(int) (mFloat + 0.5): n1 = %d    -> %.3fms/1000<doubleQuotes46>, n1, t1 * 1000.0 / n1));<newline46mondego>        System.out.println(String.format(<doubleQuotes46>Math.round(mFloat)  : n2 = %d    -> %.3fms/1000<doubleQuotes46>, n2, t2 * 1000.0 / n2));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4372splitHere46","12091343splitHere46","(int) (mFloat + 0.5): n1 = 500410000    -> 0.003ms/1000<newline46mondego>Math.round(mFloat)  : n2 = 499590000    -> 0.022ms/1000<newline46mondego>"
"4373splitHere46","12091343splitHere46","(int) (mFloat + 0.5): n1 = 50120000 -> 0,002ms/1000<newline46mondego>Math.round(mFloat) : n2 = 49880000 -> 0,002ms/1000<newline46mondego>"
"4374splitHere46","12091343splitHere46","Math.round"
"4375splitHere46","12091460splitHere46","enum"
"4376splitHere46","12091460splitHere46","HashMap"
"4377splitHere46","12091556splitHere46","wait"
"4378splitHere46","12091576splitHere46","ConnJKSEngine.ConnJKSEngine"
"4379splitHere46","12091576splitHere46","META-INF/<newline46mondego>META-INF/MANIFEST.MF<newline46mondego>ConnJKSEngine.class<newline46mondego>ConnJKSEngine_GenKey.class<newline46mondego>ConnJKSEngine_GetPubKey.class<newline46mondego>ConnJKSEngine_Operation.class<newline46mondego>ConnJKSEngine_PrivDec.class<newline46mondego>ConnJKSEngine_Sign.class<newline46mondego>"
"4380splitHere46","12091649splitHere46","_id"
"4381splitHere46","12092124splitHere46","<myclass1><newline46mondego>    <myclass2></myclass2><newline46mondego>    <myclass1><newline46mondego>        <myclass3></myclass3><newline46mondego>    </myclass1><newline46mondego></myclass1><newline46mondego>"
"4382splitHere46","12092124splitHere46","import java.util.List;<newline46mondego><newline46mondego>public interface Myinterface {<newline46mondego>    List<? extends Myinterface> getChildren();<newline46mondego>}    <newline46mondego>"
"4383splitHere46","12092124splitHere46","@XStreamImplicit"
"4384splitHere46","12092124splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import com.thoughtworks.xstream.annotations.XStreamImplicit;<newline46mondego><newline46mondego>public class MyAbstract implements Myinterface {<newline46mondego>    @XStreamImplicit<newline46mondego>    private List<? extends Myinterface> children = new ArrayList<Myinterface>();<newline46mondego><newline46mondego><newline46mondego>    public List<? extends Myinterface> getChildren() {<newline46mondego>        return children;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4385splitHere46","12092124splitHere46","@XStreamAlias"
"4386splitHere46","12092124splitHere46","import com.thoughtworks.xstream.annotations.XStreamAlias;<newline46mondego><newline46mondego>@XStreamAlias(value=<doubleQuotes46>myclass1<doubleQuotes46>)<newline46mondego>public class Myclass1 extends MyAbstract {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@XStreamAlias(value=<doubleQuotes46>myclass2<doubleQuotes46>)<newline46mondego>public class Myclass2 extends MyAbstract {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@XStreamAlias(value=<doubleQuotes46>myclass3<doubleQuotes46>)<newline46mondego>public class Myclass3 extends MyAbstract {<newline46mondego><newline46mondego>}<newline46mondego>"
"4387splitHere46","12092124splitHere46","processAnnotations"
"4388splitHere46","12092124splitHere46","import com.thoughtworks.xstream.XStream;<newline46mondego><newline46mondego>public class XStreamTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        XStream xStream = new XStream();<newline46mondego>        xStream.processAnnotations(Myclass1.class);<newline46mondego>        xStream.processAnnotations(Myclass2.class);<newline46mondego>        xStream.processAnnotations(Myclass3.class);<newline46mondego><newline46mondego>        Object fromXML = xStream.fromXML(XStreamTest.class.getResourceAsStream(<doubleQuotes46>source.xml<doubleQuotes46>));<newline46mondego>        System.out.println(fromXML);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4389splitHere46","12092135splitHere46","A"
"4390splitHere46","12092135splitHere46","public class BasicAuthSecurityHandler implements Handler {<newline46mondego><newline46mondego>    private ConstraintSecurityHandler securityHandler;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ConstraintSecurityHandler getSecurityHandler() {<newline46mondego>        return securityHandler;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSecurityHandler(ConstraintSecurityHandler securityHandler) {<newline46mondego>        this.securityHandler = securityHandler;<newline46mondego>    }        <newline46mondego><newline46mondego>}<newline46mondego>"
"4391splitHere46","12092135splitHere46","public interface Handler {<newline46mondego><newline46mondego>    ConstraintSecurityHandler getSecurityHandler();<newline46mondego><newline46mondego>}<newline46mondego>"
"4392splitHere46","12092135splitHere46","A"
"4393splitHere46","12092135splitHere46","Spring"
"4394splitHere46","12092135splitHere46","OSGi"
"4395splitHere46","12092135splitHere46","<bean id=<doubleQuotes46>basicAuthSecurityHandler<doubleQuotes46> class=<doubleQuotes46>com.groupgti.handler.authentication.basic.BasicAuthSecurityHandler<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>securityHandler<doubleQuotes46> ref=<doubleQuotes46>securityHandler<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><osgi:service ref=<doubleQuotes46>basicAuthSecurityHandler<doubleQuotes46> interface=<doubleQuotes46>com.groupgti.handler.authentication.basic.Handler<doubleQuotes46>/><newline46mondego>"
"4396splitHere46","12092135splitHere46","B"
"4397splitHere46","12092135splitHere46","<osgi:reference id=<doubleQuotes46>basicAuthSecurityHandler<doubleQuotes46> interface=<doubleQuotes46>com.groupgti.handler.authentication.basic.Handler<doubleQuotes46>/><newline46mondego><bean id=<doubleQuotes46>securityHandler<doubleQuotes46> factory-bean=<doubleQuotes46>basicAuthSecurityHandler<doubleQuotes46> factory-method=<doubleQuotes46>getSecurityHandler<doubleQuotes46>/><newline46mondego>"
"4398splitHere46","12092334splitHere46","foo.bar.TestedClass   c1 = new foo.bar.TestedClass();<newline46mondego>baz.plugh.TestedClass c2 = new baz.plugh.TestedClass();<newline46mondego>assertEquals(c1.add(42), c2.add(42));<newline46mondego>"
"4399splitHere46","12092334splitHere46","Class.forName(<doubleQuotes46>...<doubleQuotes46>).newInstance()"
"4400splitHere46","12092579splitHere46","scan = new Scanner(br.readLine());"
"4401splitHere46","12092579splitHere46","if(cont == 'N')<newline46mondego>        {System.out.print(<doubleQuotes46>\nPlease re-enter\n\t:<doubleQuotes46>);}"
"4402splitHere46","12092664splitHere46","drive.permissions.update"
"4403splitHere46","12092664splitHere46","role"
"4404splitHere46","12092664splitHere46","permission"
"4405splitHere46","12092664splitHere46","fileId"
"4406splitHere46","12092664splitHere46","permissionId"
"4407splitHere46","12092664splitHere46","role"
"4408splitHere46","12092664splitHere46","additionalRoles[]"
"4409splitHere46","12092664splitHere46","commenter"
"4410splitHere46","12092664splitHere46","drive.files.list"
"4411splitHere46","12092664splitHere46","fileId"
"4412splitHere46","12092664splitHere46","drive.permissions.list"
"4413splitHere46","12092664splitHere46","fileId"
"4414splitHere46","12092664splitHere46","permissionId"
"4415splitHere46","12092664splitHere46","id"
"4416splitHere46","12092664splitHere46","fileId"
"4417splitHere46","12092664splitHere46","permissionId"
"4418splitHere46","12092664splitHere46","drive.permissions.update"
"4419splitHere46","12092664splitHere46","role"
"4420splitHere46","12092720splitHere46","Menu"
"4421splitHere46","12092720splitHere46","Ctrl + Shift + T or R"
"4422splitHere46","12092720splitHere46","Small down"
"4423splitHere46","12092720splitHere46","Select Working Set"
"4424splitHere46","12092720splitHere46","Ctrl + Shift + T Or R<newline46mondego>>Menu<newline46mondego> >Select Working Set<newline46mondego>  >New<newline46mondego>   >Java<newline46mondego>     >Add Or Add All<newline46mondego>      >Click on Selected Working set in Select Working set Dialog<newline46mondego>        >Select Working set and you are done. <newline46mondego>"
"4425splitHere46","12092721splitHere46","titledPane.addRightDecoration(new MyRemoveControl(titkedPane));<newline46mondego>"
"4426splitHere46","12092752splitHere46","public class DoStuff implement ApplicationContextAware {    <newline46mondego>private ApplicationContext CONTEXT;<newline46mondego>public void setApplicationContext(ApplicationContext context) throws BeansException {<newline46mondego>    CONTEXT = context;<newline46mondego>}<newline46mondego><newline46mondego>    public void originalMethod() {           <newline46mondego>        getSpringProxy().doDatabaseStuff()              <newline46mondego>        doNonDatabaseStuff()       <newline46mondego>    }<newline46mondego><newline46mondego>    private DoStuff getSpringProxy() {<newline46mondego>        return context.getBean(this.getClass());     <newline46mondego>    } <newline46mondego>    @Transactional       <newline46mondego>    public void doDatabaseStuff() {           <newline46mondego>        ...       <newline46mondego>    }          <newline46mondego><newline46mondego>    public void doNonDatabaseStuff() {           <newline46mondego>        ...       <newline46mondego>    }   <newline46mondego>} <newline46mondego>"
"4427splitHere46","12092752splitHere46","ApplicationContextAware"
"4428splitHere46","12092946splitHere46","class MyDatasourceRegisteringBeanFactoryPostProcessor implements BeanFactoryPostProcessor {<newline46mondego><newline46mondego>    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {<newline46mondego>        //Read in details from legacy properties.. build custom bean definitions and register with bean factory<newline46mondego>        //for each legacy property...<newline46mondego>            BeanDefinitionBuilder datasourceDefinitionBuilder = BeanDefinitionBuilder.rootBeanDefinition(BasicDataSource.class).addPropertyValue(<doubleQuotes46>url<doubleQuotes46>, <doubleQuotes46>jdbc..<doubleQuotes46>);<newline46mondego>            beanFactory.registerBeanDefinition(datasourceDefinitionBuilder.getBeanDefinition());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4429splitHere46","12092966splitHere46","Map<String, Object> parameters = new HashMap<String, Object>();<newline46mondego><newline46mondego>//if you want this to be compiled in runtime<newline46mondego><newline46mondego>JasperReport jasperReport = JasperCompileManager.compileReport(your JRXMLReport path file here);<newline46mondego>JasperReport subReport = JasperCompileManager.compileReport(your JRXMLSubReport path file here);<newline46mondego><newline46mondego>//you can notice that there're a lot of overloaded mathods to compile it, you can choose<newline46mondego>//what is better in your case<newline46mondego><newline46mondego>//if you want to use the complied file *.jasper<newline46mondego>JasperReport jasperReport = (JasperReport)JRLoader.loadObject(new File(<doubleQuotes46>filenameReport.jasper<doubleQuotes46>));<newline46mondego><newline46mondego>JasperReport subReport = (JasperReport)JRLoader.loadObject(new File(<doubleQuotes46>filenameSubReport.jasper<doubleQuotes46>));<newline46mondego><newline46mondego><newline46mondego>//Then you add your subReport in your parameter Map<newline46mondego>parameters.put(<doubleQuotes46>SUBREPORT_JASPER_FILE<doubleQuotes46>, subReport);<newline46mondego><newline46mondego>JasperFillManager.fillReport(jasperReport, parameters,<newline46mondego>                new JRBeanCollectionDataSource(yourList));<newline46mondego>"
"4430splitHere46","12092966splitHere46","<parameter name=<doubleQuotes46>SUBREPORT_JASPER_FILE<doubleQuotes46> class=<doubleQuotes46>java.lang.Object<doubleQuotes46>/> // you can also create this using the option in your iReport<newline46mondego><newline46mondego><newline46mondego><subreport><newline46mondego>    <reportElement uuid=<doubleQuotes46>c62c7896-f37a-4e76-a4cb-70e2545947da<doubleQuotes46> style=<doubleQuotes46>Style<doubleQuotes46> x=<doubleQuotes46>279<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>296<doubleQuotes46> height=<doubleQuotes46>15<doubleQuotes46>/><newline46mondego>       <dataSourceExpression><newline46mondego>            <![CDATA[new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource($F{yourSubList})]]>  <newline46mondego>       </dataSourceExpression><newline46mondego>            <subreportExpression><![CDATA[$P{SUBREPORT_JASPER_FILE}]]></subreportExpression><newline46mondego></subreport><newline46mondego>"
"4431splitHere46","12093080splitHere46","Hierarchy"
"4432splitHere46","12093080splitHere46","refresh()"
"4433splitHere46","12093080splitHere46","FormattedHierarchy"
"4434splitHere46","12093080splitHere46","Hierarchy"
"4435splitHere46","12093080splitHere46","Hierarchy"
"4436splitHere46","12093080splitHere46","FormattedHierarchy"
"4437splitHere46","12093080splitHere46","FormattedHierarchy"
"4438splitHere46","12093185splitHere46","AJAX"
"4439splitHere46","12093185splitHere46","AJAX"
"4440splitHere46","12093185splitHere46","document.getElementById('other-component').style.visibility='visible'; <newline46mondego>"
"4441splitHere46","12093185splitHere46","mystring=document.getElementById('other-component').value; <newline46mondego>if(!mystring.match(/\S/)){<newline46mondego>alert ('Empty value is not allowed');<newline46mondego>return false;<newline46mondego>}else{<newline46mondego> alert (<doubleQuotes46>correct input<doubleQuotes46>);<newline46mondego> return true;<newline46mondego>}<newline46mondego>"
"4442splitHere46","12093197splitHere46","text file"
"4443splitHere46","12093197splitHere46","OnCreate()"
"4444splitHere46","12093197splitHere46","SharedPreference"
"4445splitHere46","12093197splitHere46","DataBase"
"4446splitHere46","12093353splitHere46","class A{<newline46mondego><newline46mondego>   ......<newline46mondego><newline46mondego>   @JoinColumn(nullable=true)<newline46mondego>   private B b;<newline46mondego><newline46mondego>   .......<newline46mondego>}<newline46mondego>"
"4447splitHere46","12093513splitHere46","FileInputStream"
"4448splitHere46","12093513splitHere46","InputStreamReader"
"4449splitHere46","12093513splitHere46","Charset.isSupported"
"4450splitHere46","12093513splitHere46","Charset.availableCharsets"
"4451splitHere46","12093591splitHere46","Cloneable"
"4452splitHere46","12093696splitHere46","show"
"4453splitHere46","12093696splitHere46","AlertDialog"
"4454splitHere46","12093729splitHere46","pos"
"4455splitHere46","12093729splitHere46","add(panel, <doubleQuotes46>id large, pos 0 0 container.h container.h<doubleQuotes46>);<newline46mondego>"
"4456splitHere46","12093729splitHere46","panel"
"4457splitHere46","12093729splitHere46","add(otherPanel, <doubleQuotes46>pos large.x2 0 container.w container.h<doubleQuotes46>);<newline46mondego>"
"4458splitHere46","12093955splitHere46","public class VirusGamePanel extends JPanel{<newline46mondego>    private static final long serialVersionUID = 1L;//serialVersionUID field<newline46mondego>    Random colour = new Random();//the outside ovals will always be a random colour<newline46mondego>    private int sizeX = 0;//the x size of the outside ovals <newline46mondego>    private int sizeY = 0;//the y size of the outside ovals<newline46mondego>    int score = 0;<newline46mondego>    static String scorestring = <doubleQuotes46>Score: <doubleQuotes46>;<newline46mondego>    Color rand = new Color(colour.nextInt(255), colour.nextInt(255), colour.nextInt(255)); //generate the random colour<newline46mondego><newline46mondego>    public void paint(Graphics g)<newline46mondego>    {<newline46mondego>        super.paint(g);<newline46mondego>        g.setColor(Color.magenta);<newline46mondego>        g.drawString(scorestring+score,275,250);<newline46mondego>        g.setColor(Color.orange);<newline46mondego>        g.drawOval(200, 150, 200, 200);<newline46mondego>        g.setColor(rand);<newline46mondego>        g.fillOval(270 - sizeX / 2, 50 - sizeY / 2, sizeX, sizeY);//these six ovals are supposed to increase in size<newline46mondego>        g.fillOval(100 - sizeX / 2,100 - sizeY / 2, sizeX, sizeY);<newline46mondego>        g.fillOval(450 - sizeX / 2,100 - sizeY / 2, sizeX, sizeY);<newline46mondego>        g.fillOval(100 - sizeX / 2,400 - sizeY / 2, sizeX, sizeY);<newline46mondego>        g.fillOval(450 - sizeX / 2,400 - sizeY / 2, sizeX, sizeY);<newline46mondego>        g.fillOval(275 - sizeX / 2,450 - sizeY / 2, sizeX, sizeY);<newline46mondego>        inc();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>      JPanel panel = new VirusGamePanel();<newline46mondego><newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>Virus<doubleQuotes46>);<newline46mondego>      frame.setSize(700, 700);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(panel);<newline46mondego>      frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private void inc()//increase the size of the ovals<newline46mondego>    {<newline46mondego>            sizeX++;<newline46mondego>            sizeY++;<newline46mondego>            repaint();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4459splitHere46","12093955splitHere46","inc"
"4460splitHere46","12093955splitHere46","drawOval"
"4461splitHere46","12093955splitHere46","fillOval"
"4462splitHere46","12093955splitHere46","inc()"
"4463splitHere46","12093955splitHere46","paint"
"4464splitHere46","12093955splitHere46","try {<newline46mondego>    Thread.sleep(100);<newline46mondego>} catch (InterruptedException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"4465splitHere46","12094085splitHere46","copiedppList.size() - 1"
"4466splitHere46","12094085splitHere46","size() - 1"
"4467splitHere46","12094085splitHere46","size() - 1"
"4468splitHere46","12094085splitHere46","copiedppList.get(domainData + 1);<newline46mondego>"
"4469splitHere46","12094085splitHere46","+ 1"
"4470splitHere46","12094085splitHere46","if (domainData < copiedppList.size() - 1)<newline46mondego>{<newline46mondego>    copiedppList.get(domainData + 1); // This is now safe, assuming<newline46mondego>                                      // nothing reduces the size of<newline46mondego>                                      // copiedppList since the if check.<newline46mondego>}<newline46mondego>"
"4471splitHere46","12094117splitHere46","Footnote"
"4472splitHere46","12094117splitHere46","Content"
"4473splitHere46","12094117splitHere46","contentId"
"4474splitHere46","12094117splitHere46","content_id"
"4475splitHere46","12094117splitHere46","@ManyToOne(cascade=CascadeType.ALL, optional = false)"
"4476splitHere46","12094198splitHere46","test (A a) {}"
"4477splitHere46","12094248splitHere46","?"
"4478splitHere46","12094248splitHere46","&"
"4479splitHere46","12094248splitHere46","url(DisplayImage?mainID=tempo1&id=1)"
"4480splitHere46","12094437splitHere46","Collection.hashCode"
"4481splitHere46","12094437splitHere46","Set"
"4482splitHere46","12094437splitHere46","List"
"4483splitHere46","12094437splitHere46","hashCode"
"4484splitHere46","12094437splitHere46","transformedCollection1.equals(transformedCollection2)"
"4485splitHere46","12094437splitHere46","Collection"
"4486splitHere46","12094437splitHere46","equals"
"4487splitHere46","12094437splitHere46","ImmutableList.copyOf(transformedCollection)"
"4488splitHere46","12094440splitHere46","Object"
"4489splitHere46","12094440splitHere46","public static final Object monitor = new Object();<newline46mondego>public static boolean monitorState = false;<newline46mondego>"
"4490splitHere46","12094440splitHere46","public static void waitForThread() {<newline46mondego>  monitorState = true;<newline46mondego>  while (monitorState) {<newline46mondego>    synchronized (monitor) {<newline46mondego>      try {<newline46mondego>        monitor.wait(); // wait until notified<newline46mondego>      } catch (Exception e) {}<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4491splitHere46","12094440splitHere46","public static void unlockWaiter() {<newline46mondego>  synchronized (monitor) {<newline46mondego>    monitorState = false;<newline46mondego>    monitor.notifyAll(); // unlock again<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4492splitHere46","12094440splitHere46","new Thread(new Runnable() {<newline46mondego>  @Override<newline46mondego>  public void run() {<newline46mondego>    // do your fancy calculations<newline46mondego>    unlockWaiter();<newline46mondego>  }<newline46mondego>}).start();<newline46mondego><newline46mondego>// do some stuff    <newline46mondego>waitForThread();    <newline46mondego>// do some stuff that is dependent on the results of the thread<newline46mondego>"
"4493splitHere46","12094441splitHere46","split()"
"4494splitHere46","12094441splitHere46","String[] splits = strLine.split(delims); <newline46mondego>  //use the splits[0] & splits[4] to create the Strings you want<newline46mondego>"
"4495splitHere46","12094441splitHere46","while((strLine=br.readLine())!=null){<newline46mondego>             System.out.println(<doubleQuotes46>Being read:<doubleQuotes46>);<newline46mondego>             System.out.println(strLine);<newline46mondego>             parsedit.add(strLine.split(delims));<newline46mondego> }<newline46mondego>"
"4496splitHere46","12094441splitHere46","while((strLine=br.readLine())!=null){<newline46mondego>             System.out.println(<doubleQuotes46>Being read:<doubleQuotes46>);<newline46mondego>             String splits[] = strLine.split(delims);<newline46mondego>             System.out.println(splits[0]+<doubleQuotes46> <doubleQuotes46>+splits[4]);<newline46mondego>             parsedit.add(splits);<newline46mondego> }<newline46mondego>"
"4497splitHere46","12094603splitHere46","private String upperCase(String str) {<newline46mondego>    Document document = Jsoup.parse(str);<newline46mondego>    upperCase(document.body());<newline46mondego>    return document.html();<newline46mondego>}<newline46mondego><newline46mondego>private void upperCase(Node node) {<newline46mondego>    if (node instanceof TextNode) {<newline46mondego>        TextNode textnode = (TextNode) node;<newline46mondego>        textnode.text(textnode.text().toUpperCase());<newline46mondego>    }<newline46mondego>    for (Node child : node.childNodes()) {<newline46mondego>        upperCase(child);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4498splitHere46","12094603splitHere46","upperCase(<doubleQuotes46>This is some <a href=\<doubleQuotes46>http://arnout.engelen.eu\<doubleQuotes46>>text& with& entities</a><doubleQuotes46>);<newline46mondego>"
"4499splitHere46","12094603splitHere46","<html><newline46mondego>  <head></head><newline46mondego>  <body><newline46mondego>    THIS IS SOME <newline46mondego>    <a href=<doubleQuotes46>http://arnout.engelen.eu<doubleQuotes46>>TEXT& WITH& ENTITIES</a><newline46mondego>  </body><newline46mondego></html><newline46mondego>"
"4500splitHere46","12094606splitHere46","Provider[] provides=Security.getProviders(<doubleQuotes46>Cipher.RSA<doubleQuotes46>);<newline46mondego>    for (int i = 0; i < provides.length; i++) {<newline46mondego>        System.out.println(<doubleQuotes46>provider:<doubleQuotes46>+provides[i].getName());            <newline46mondego>    }<newline46mondego>"
"4501splitHere46","12094737splitHere46","grant codeBase <doubleQuotes46>file:lib/jborat-agent.jar<doubleQuotes46> {<newline46mondego>  permission java.security.AllPermission;<newline46mondego>};<newline46mondego>"
"4502splitHere46","12094772splitHere46","^[@!#%^*()_&-]?M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})[@!#%^*()_&-]?$<newline46mondego>"
"4503splitHere46","12094772splitHere46","[@!#%^*()_&-]?"
"4504splitHere46","12095009splitHere46","<groupId>maven-ear-plugin</groupId><newline46mondego><artifactId>maven-ear-plugin</artifactId><newline46mondego>"
"4505splitHere46","12095009splitHere46","<groupId>org.apache.maven.plugins</groupId><newline46mondego><artifactId>maven-ear-plugin</artifactId><newline46mondego>"
"4506splitHere46","12095009splitHere46","<includeLibInApplicationXml>true</includeLibInApplicationXml><newline46mondego>"
"4507splitHere46","12095009splitHere46","<includeInApplicationXml>true</includeInApplicationXml><newline46mondego>"
"4508splitHere46","12095009splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego>    <groupId>com.blah</groupId><newline46mondego>    <artifactId>MyApp.EAR</artifactId><newline46mondego>    <version>1.0</version><newline46mondego>    <packaging>ear</packaging><newline46mondego><newline46mondego>    <properties><newline46mondego>        <weblogic.version>10.3</weblogic.version><newline46mondego>        <weblogic.version.minor>${weblogic.version}.4</weblogic.version.minor><newline46mondego>        <weblogic.host>***</weblogic.host><newline46mondego>        <weblogic.port>***</weblogic.port><newline46mondego>        <weblogic.username>***</weblogic.username><newline46mondego>        <weblogic.password>***</weblogic.password><newline46mondego>    </properties><newline46mondego><newline46mondego>    <build><newline46mondego>        <finalName>MyApp</finalName><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>                <groupId>org.apache.maven.plugins</groupId><newline46mondego>                <artifactId>maven-ear-plugin</artifactId><newline46mondego>                <version>2.7</version><newline46mondego>                <configuration><newline46mondego>                    <applicationName>MyApp</applicationName><newline46mondego>          <includeLibInApplicationXml>true</includeLibInApplicationXml><newline46mondego>                    <modules><newline46mondego>                        <ejbModule><newline46mondego>                            <groupId>com.blah</groupId><newline46mondego>                            <artifactId>MyApp.EJB</artifactId><newline46mondego>                        </ejbModule><newline46mondego>                        <webModule><newline46mondego>                            <groupId>com.blah</groupId><newline46mondego>                            <artifactId>MyApp.Web</artifactId><newline46mondego>                            <contextRoot>MyApp</contextRoot><newline46mondego>                        </webModule><newline46mondego>                    </modules><newline46mondego>                    <archive><newline46mondego>                        <manifestEntries><newline46mondego>                            <WebLogic-Application-Version>${weblogic.version}</WebLogic-Application-Version><newline46mondego>                        </manifestEntries><newline46mondego>                    </archive><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego><newline46mondego>            <plugin><newline46mondego>                <groupId>com.oracle.weblogic</groupId><newline46mondego>                <artifactId>weblogic-maven-plugin</artifactId><newline46mondego>                <version>10.3.4</version><newline46mondego>                <configuration><newline46mondego>                    <adminurl>t3://${weblogic.host}:${weblogic.port}</adminurl><newline46mondego>                    <user>${weblogic.username}</user><newline46mondego>                    <password>${weblogic.password}</password><newline46mondego>                    <upload>true</upload><newline46mondego>                    <action>deploy</action><newline46mondego>                    <remote>false</remote><newline46mondego>                    <verbose>true</verbose><newline46mondego>                    <source>${project.build.directory}/${project.build.finalName}.${project.packaging}</source><newline46mondego>                    <name>${project.build.finalName}</name><newline46mondego>                </configuration><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <phase>install</phase><newline46mondego>                        <goals><newline46mondego>                            <goal>deploy</goal><newline46mondego>                        </goals><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>            </plugin><newline46mondego><newline46mondego>        </plugins><newline46mondego><newline46mondego>        <pluginManagement><newline46mondego>            <plugins><newline46mondego>                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.--><newline46mondego>                <plugin><newline46mondego>                    <groupId>org.eclipse.m2e</groupId><newline46mondego>                    <artifactId>lifecycle-mapping</artifactId><newline46mondego>                    <version>1.0.0</version><newline46mondego>                    <configuration><newline46mondego>                        <lifecycleMappingMetadata><newline46mondego>                            <pluginExecutions><newline46mondego>                                <pluginExecution><newline46mondego>                                    <pluginExecutionFilter><newline46mondego>                                        <groupId>org.apache.maven.plugins</groupId><newline46mondego>                                        <artifactId>maven-ear-plugin</artifactId><newline46mondego>                                        <versionRange>[2.7,)</versionRange><newline46mondego>                                        <goals><newline46mondego>                                            <goal>generate-application-xml</goal><newline46mondego>                                        </goals><newline46mondego>                                    </pluginExecutionFilter><newline46mondego>                                    <action><newline46mondego>                                        <ignore></ignore><newline46mondego>                                    </action><newline46mondego>                                </pluginExecution><newline46mondego>                            </pluginExecutions><newline46mondego>                        </lifecycleMappingMetadata><newline46mondego>                    </configuration><newline46mondego>                </plugin><newline46mondego>            </plugins><newline46mondego>        </pluginManagement><newline46mondego>    </build><newline46mondego><newline46mondego>    <dependencies><newline46mondego>    <dependency><newline46mondego>      <groupId>com.blah</groupId><newline46mondego>      <artifactId>MyApp.EJB</artifactId><newline46mondego>      <version>1.0</version><newline46mondego>      <type>ejb</type><newline46mondego>    </dependency><newline46mondego>    <dependency><newline46mondego>      <groupId>com.blah</groupId><newline46mondego>      <artifactId>MyApp.Web</artifactId><newline46mondego>      <version>1.0</version><newline46mondego>      <type>war</type><newline46mondego>    </dependency><newline46mondego>    </dependencies><newline46mondego></project><newline46mondego>"
"4509splitHere46","12095136splitHere46","RequestServlet"
"4510splitHere46","12095203splitHere46","btnExp.addActionListener(new ActionListener() {<newline46mondego>  public void actionPerformed(ActionEvent e) {<newline46mondego>    // add here the contents in your actionPerformed method<newline46mondego>  }<newline46mondego>})<newline46mondego>"
"4511splitHere46","12095280splitHere46","commit()"
"4512splitHere46","12095280splitHere46","conn.setAutoCommit(false)"
"4513splitHere46","12095369splitHere46","CXF"
"4514splitHere46","12095369splitHere46","CXF"
"4515splitHere46","12095369splitHere46","JAX-WS"
"4516splitHere46","12095369splitHere46","JAX-WS"
"4517splitHere46","12095369splitHere46","EJB"
"4518splitHere46","12095369splitHere46","@EJB"
"4519splitHere46","12095369splitHere46","@EJB"
"4520splitHere46","12095369splitHere46","EJB"
"4521splitHere46","12095369splitHere46","EJB"
"4522splitHere46","12095369splitHere46","JNDI"
"4523splitHere46","12095369splitHere46","/**<newline46mondego> * Java global JNDI.<newline46mondego> */<newline46mondego>private static final String JAVA_GLOBAL = <doubleQuotes46>java:global/<doubleQuotes46>;<newline46mondego><newline46mondego>/**<newline46mondego> * Application name in application server.<newline46mondego> */<newline46mondego>private static final String APP_NAME = <doubleQuotes46>YourAppName/<doubleQuotes46>;<newline46mondego><newline46mondego>/**<newline46mondego> * Application EJB jar name.<newline46mondego> */<newline46mondego>private static final String APP_EJB = <doubleQuotes46>your-ejb/<doubleQuotes46>;<newline46mondego><newline46mondego>/**<newline46mondego> * Credit EJB constant.<newline46mondego> */<newline46mondego>public static final String CREDIT_EJB = JAVA_GLOBAL + APP_NAME + APP_EJB + <doubleQuotes46>CreditcardFacade!your.package.CreditcardFacadeLocal<doubleQuotes46>;<newline46mondego>"
"4524splitHere46","12095369splitHere46","EJB"
"4525splitHere46","12095369splitHere46","JNDI"
"4526splitHere46","12095369splitHere46","/**<newline46mondego> * Gets local EJB from JNDI.<newline46mondego> *<newline46mondego> * @param jndiName JNDI constant name to look up for EJB<newline46mondego> * @param <T> generic object<newline46mondego> * @return local EJB object loaded from JNDI<newline46mondego> */<newline46mondego>public static <T> T getLocalEJB(String jndiName) {<newline46mondego>    try {<newline46mondego>        InitialContext context = new InitialContext();<newline46mondego>        return (T) context.lookup(jndiName);<newline46mondego>    } catch (NamingException e) {<newline46mondego>        LOGGER.error(<doubleQuotes46>Naming exception occurred while trying to load EJB from JNDI with JNDI name: <doubleQuotes46> + jndiName, e);<newline46mondego>        throw new RuntimeException(<doubleQuotes46>Naming exception occurred while trying to load EJB from JNDI with JNDI name: <doubleQuotes46> + jndiName, e);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4527splitHere46","12095369splitHere46","CreditcardFacadeLocal facade = JndiUtils.getLocalEJB(JndiUtils.CREDIT_EJB);<newline46mondego>"
"4528splitHere46","12095397splitHere46","CreateItemFault"
"4529splitHere46","12095397splitHere46","wsdl:message"
"4530splitHere46","12095397splitHere46","public class CreateItemFault extends java.lang.Exception {<newline46mondego>    private org.example.www.service.ServerMessageDocument faultMessage;<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4531splitHere46","12095397splitHere46","ServerMessageDocument"
"4532splitHere46","12095397splitHere46","public interface ServerMessageDocument extends org.apache.xmlbeans.XmlObject {<newline46mondego>    ...<newline46mondego>    org.example.www.service.ServerMessage getServerMessage();<newline46mondego><newline46mondego>    void setServerMessage(org.example.www.service.ServerMessage serverMessage);<newline46mondego><newline46mondego>    org.example.www.service.ServerMessage addNewServerMessage();<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4533splitHere46","12095397splitHere46","ServerMessage"
"4534splitHere46","12095397splitHere46","public interface ServerMessage extends org.apache.xmlbeans.XmlObject {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4535splitHere46","12095397splitHere46","CreateItemFault"
"4536splitHere46","12095446splitHere46","public class SomeDialog extends FormDialog {<newline46mondego><newline46mondego>  public SomeDialog(Shell shell) {<newline46mondego>    super(shell);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected void createFormContent() {<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4537splitHere46","12095452splitHere46","public static void main(String[] args){<newline46mondego>    try {<newline46mondego>        test();<newline46mondego>    } catch (UnsupportedOperationException e) {<newline46mondego>        System.out.println(e);<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private static void test() {<newline46mondego>    throw new UnsupportedOperationException(<doubleQuotes46>Not yet implemented<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4538splitHere46","12095491splitHere46","cars"
"4539splitHere46","12095491splitHere46","List<Car>"
"4540splitHere46","12095491splitHere46","List<String>"
"4541splitHere46","12095491splitHere46","Car"
"4542splitHere46","12095491splitHere46","name"
"4543splitHere46","12095491splitHere46","color"
"4544splitHere46","12095702splitHere46","@Autowired"
"4545splitHere46","12095702splitHere46","applicationContent.xml"
"4546splitHere46","12095702splitHere46","<context:component-scan base-package=<doubleQuotes46>com.MyProject<doubleQuotes46>/><newline46mondego><bean id=<doubleQuotes46>conversionService<doubleQuotes46> class=<doubleQuotes46>com.MyProject.MyAppConversionServiceFactoryBean<doubleQuotes46> /><newline46mondego>"
"4547splitHere46","12095702splitHere46","MyAppConversionServiceFactoryBean.java"
"4548splitHere46","12095702splitHere46","public class MyAppConversionServiceFactoryBean implements<newline46mondego>        FactoryBean<ConversionService>, InitializingBean {<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    private Set<BaseConverter> converters;<newline46mondego><newline46mondego>}<newline46mondego>"
"4549splitHere46","12095702splitHere46","@Component"
"4550splitHere46","12095702splitHere46","@Autowired"
"4551splitHere46","12095956splitHere46","user"
"4552splitHere46","12095956splitHere46","USER"
"4553splitHere46","12095956splitHere46","<subsystem xmlns=<doubleQuotes46>urn:jboss:domain:logging:1.1<doubleQuotes46>><newline46mondego>    ...<newline46mondego>    <size-rotating-file-handler name=<doubleQuotes46>USER<doubleQuotes46> autoflush=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>        <level name=<doubleQuotes46>ALL<doubleQuotes46>/><newline46mondego>        <file relative-to=<doubleQuotes46>jboss.server.log.dir<doubleQuotes46> path=<doubleQuotes46>user.log<doubleQuotes46>/><newline46mondego>        <rotate-size value=<doubleQuotes46>50m<doubleQuotes46>/><newline46mondego>        <append value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    </size-rotating-file-handler><newline46mondego>    <logger category=<doubleQuotes46>USER<doubleQuotes46> use-parent-handlers=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>        <level name=<doubleQuotes46>ALL<doubleQuotes46>/><newline46mondego>        <handlers><newline46mondego>            <handler name=<doubleQuotes46>USER<doubleQuotes46>/><newline46mondego>        </handlers><newline46mondego>    </logger><newline46mondego>    ...<newline46mondego></subsystem><newline46mondego>"
"4554splitHere46","12096136splitHere46","outFile.close()"
"4555splitHere46","12096136splitHere46","outFile = null;<newline46mondego>System.gc();<newline46mondego>"
"4556splitHere46","12096136splitHere46","public class FileDeleteExample {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        File f = new File(<doubleQuotes46>test.txt<doubleQuotes46>);<newline46mondego><newline46mondego>        FileOutputStream outFile = null;<newline46mondego><newline46mondego>        try {<newline46mondego>            outFile = new FileOutputStream(f);<newline46mondego>            outFile.write(<doubleQuotes46>Test<doubleQuotes46>.getBytes());<newline46mondego>        } finally {<newline46mondego>            outFile.flush();<newline46mondego>            outFile.close();<newline46mondego>            outFile = null;<newline46mondego>            System.gc();<newline46mondego>        }<newline46mondego><newline46mondego>        f.delete();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4557splitHere46","12096136splitHere46","outFile=null; System.gc;"
"4558splitHere46","12096136splitHere46","FileOutputStream"
"4559splitHere46","12096136splitHere46","void closeQuietly(FileOutputStream out) {<newline46mondego>    try { out.flush(); out.close(); } catch(Exception e) {} <newline46mondego>}<newline46mondego>"
"4560splitHere46","12096136splitHere46","finally"
"4561splitHere46","12096141splitHere46","d"
"4562splitHere46","12096141splitHere46","public class Gregorian {<newline46mondego>    private final Date d;<newline46mondego><newline46mondego>    public Gregorian(Date d_) {<newline46mondego>        this.d = d_;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isLeapyear() {<newline46mondego>        ... // implemented as above<newline46mondego>    }<newline46mondego><newline46mondego>    ... // Other methods as above, but all non-static.<newline46mondego>}<newline46mondego>"
"4563splitHere46","12096141splitHere46","public static void main (String[] args){<newline46mondego>    Date d = new Date(9, <doubleQuotes46>June<doubleQuotes46>, 8);<newline46mondego>    Gregorian g = new Gregorian(d);<newline46mondego>    System.out.println(g.getGregorianDateNumber());<newline46mondego>    System.out.println(g.getISO8601Date());<newline46mondego>    System.out.println(g.leapYear());<newline46mondego>}<newline46mondego>"
"4564splitHere46","12096193splitHere46","while (scan.next() == <doubleQuotes46>Y<doubleQuotes46>);      // Is checking for reference equality<newline46mondego>"
"4565splitHere46","12096193splitHere46","equals()"
"4566splitHere46","12096193splitHere46","while (scan.next().equals(<doubleQuotes46>Y<doubleQuotes46>));<newline46mondego>"
"4567splitHere46","12096193splitHere46","=="
"4568splitHere46","12096232splitHere46","Hello"
"4569splitHere46","12096232splitHere46","com"
"4570splitHere46","12096232splitHere46","com.Hello"
"4571splitHere46","12096232splitHere46","main"
"4572splitHere46","12096232splitHere46","java com.Hello<newline46mondego>"
"4573splitHere46","12096232splitHere46","com.Hello"
"4574splitHere46","12096232splitHere46","Exception"
"4575splitHere46","12096232splitHere46","-d"
"4576splitHere46","12096232splitHere46","javac -d . Hello.java<newline46mondego>"
"4577splitHere46","12096232splitHere46","javac com\Hello.java<newline46mondego>"
"4578splitHere46","12096232splitHere46","-d"
"4579splitHere46","12096295splitHere46","oneBtn.setOnClickListener(new View.OnClickListener() {<newline46mondego>    @Override<newline46mondego>    public void onClick(View v) {<newline46mondego>        // no need to use onBtn here cuz the param v is the clicked View<newline46mondego>        Button clickedButton = (Button) v;<newline46mondego>        clickedButton.setText(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        numTxt.setText(numTxt.getText().toString() + <doubleQuotes46> <doubleQuotes46> + clickedButton.getText());<newline46mondego>        //numTxt.append(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4580splitHere46","12096398splitHere46","SSLContext"
"4581splitHere46","12096398splitHere46","openssl s_client -tls1 -showcerts -connect appserver.gtportalbase.com:443<newline46mondego>"
"4582splitHere46","12096398splitHere46","openssl s_client -ssl3 -showcerts -connect appserver.gtportalbase.com:443<newline46mondego>"
"4583splitHere46","12096398splitHere46","org.apache.http.conn.ssl.SSLSocketFactory"
"4584splitHere46","12096398splitHere46","SSLSocket"
"4585splitHere46","12096398splitHere46","sslSocket.setEnabledProtocols(new String[] {<doubleQuotes46>SSLv3<doubleQuotes46>});"
"4586splitHere46","12096487splitHere46","tools.jar"
"4587splitHere46","12096487splitHere46",".properties"
"4588splitHere46","12096487splitHere46","tools.jar"
"4589splitHere46","12096488splitHere46","{"
"4590splitHere46","12096488splitHere46","}"
"4591splitHere46","12096488splitHere46","["
"4592splitHere46","12096488splitHere46","]"
"4593splitHere46","12096488splitHere46","FileAttachment"
"4594splitHere46","12096488splitHere46","return [ files ];"
"4595splitHere46","12096488splitHere46","FileAttachment"
"4596splitHere46","12096488splitHere46","@RequestParam(<doubleQuotes46>fileAttachment<doubleQuotes46>) FileAttachment fileAttachment"
"4597splitHere46","12096488splitHere46","@RequestParam(<doubleQuotes46>fileAttachment<doubleQuotes46>)"
"4598splitHere46","12096488splitHere46","@RequestParam(<doubleQuotes46>filename<doubleQuotes46>)"
"4599splitHere46","12096513splitHere46","Pattern.compile(<doubleQuotes46>----\\.|-----|---\\.\\.|...<doubleQuotes46>)<newline46mondego>"
"4600splitHere46","12096513splitHere46","SKIP : { <doubleQuotes46> <doubleQuotes46> }<newline46mondego>TOKEN : { < A : <doubleQuotes46>-.<doubleQuotes46> > }<newline46mondego>TOKEN : { < B : <doubleQuotes46>-...<doubleQuotes46> > }<newline46mondego>TOKEN : { < C : <doubleQuotes46>-.-.<doubleQuotes46> > }<newline46mondego>...<newline46mondego><newline46mondego>String translate() :<newline46mondego>{ StringBuilder sb; }<newline46mondego>{<newline46mondego>  { sb = new StringBuilder(); }<newline46mondego><newline46mondego>  (<newline46mondego>    letter(sb)<newline46mondego>  )*<newline46mondego>  <EOF><newline46mondego><newline46mondego>  { return sb.toString(); }<newline46mondego>}<newline46mondego><newline46mondego>void letter(StringBuilder sb) :<newline46mondego>{}<newline46mondego>{<newline46mondego>  ( <A><newline46mondego>    { sb.append('a'); }<newline46mondego>  | <B><newline46mondego>    { sb.append('b'); }<newline46mondego>  | <C><newline46mondego>    { sb.append('c'); }<newline46mondego>  ...<newline46mondego>  )<newline46mondego>}<newline46mondego>"
"4601splitHere46","12096952splitHere46","for(loop conditions)<newline46mondego>        if (numbers[index] != null && (numbers[index].equals(accnum))) {<newline46mondego>            return String.valueOf(index);<newline46mondego>            //your text goes here;<newline46mondego>        }<newline46mondego>        break;//I suggest you take this line out of your original code. Your for loop will end this once you have iterated through the entire array, or you will automatically break out if you find the value.<newline46mondego>}<newline46mondego>"
"4602splitHere46","12097072splitHere46","ssh-keygen -t rsa<newline46mondego>"
"4603splitHere46","12097102splitHere46","fileName.getBytes()"
"4604splitHere46","12097102splitHere46","String fileName = getFileNameToReadFromUserInput();<newline46mondego>FileInputStream is = new FileInputStream(fileName);<newline46mondego>InputStreamReader isr = new InputStreamReader(is, getCorrectCharsetToApply());<newline46mondego>BufferedReader buffReader = new BufferedReader(isr);<newline46mondego>"
"4605splitHere46","12097380splitHere46","DefaultHttpClient sendClient = new DefaultHttpClient();<newline46mondego><newline46mondego>        CookieStore originalCookies = Globals.getClient().getCookieStore();<newline46mondego>        sendClient.setCookieStore(originalCookies);<newline46mondego>"
"4606splitHere46","12097405splitHere46","Unmarshaller.Listener"
"4607splitHere46","12097405splitHere46","Unmarshaller"
"4608splitHere46","12097405splitHere46","afterUnmarshal"
"4609splitHere46","12097405splitHere46","HasDate"
"4610splitHere46","12097405splitHere46","setDate"
"4611splitHere46","12097493splitHere46","JScrollPane"
"4612splitHere46","12097493splitHere46","scrollPane.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);<newline46mondego>"
"4613splitHere46","12097493splitHere46","public NotesPanel(Note note){<newline46mondego>    this.setLayout(new BoxLayout(this,BoxLayout.Y_AXIS));<newline46mondego>    JLabel creatorLabel = new JLabel(<doubleQuotes46>Note by <doubleQuotes46>+note.getCreator()+ <doubleQuotes46> @ <doubleQuotes46>+note.getDateCreated());<newline46mondego>    creatorLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);<newline46mondego>    creatorLabel.setHorizontalAlignment(JLabel.LEFT);<newline46mondego><newline46mondego><newline46mondego>    JTextArea notesContentsArea = new JTextArea(note.getContents());<newline46mondego>    notesContentsArea.setEditable(false);<newline46mondego>    JScrollPane scrollPane = new JScrollPane(notesContentsArea);<newline46mondego>    scrollPane.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);<newline46mondego><newline46mondego>    JLabel editorLabel = new JLabel(<doubleQuotes46> -- Last edited by <doubleQuotes46>+note.getLastEdited() +<doubleQuotes46> at <doubleQuotes46>+note.getDateModified());<newline46mondego>    editorLabel.setAlignmentX(Component.LEFT_ALIGNMENT);<newline46mondego>    editorLabel.setHorizontalAlignment(JLabel.LEFT);<newline46mondego><newline46mondego>    this.add(creatorLabel);<newline46mondego>    this.add(scrollPane);<newline46mondego>    this.add(editorLabel);<newline46mondego>    this.setBorder(new BevelBorder(BevelBorder.RAISED));<newline46mondego>}<newline46mondego>"
"4614splitHere46","12097551splitHere46","@JsonProperty(<doubleQuotes46>customer<doubleQuotes46>)<newline46mondego>public Long getCustomerId(){<newline46mondego>  if (customer != null){<newline46mondego>    return customer.getId();<newline46mondego>  }<newline46mondego>  else {<newline46mondego>    return null;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4615splitHere46","12097551splitHere46","{<doubleQuotes46>orderNum<doubleQuotes46>:<doubleQuotes46>11111<doubleQuotes46>, <doubleQuotes46>customer<doubleQuotes46>:<doubleQuotes46>99<doubleQuotes46>}<newline46mondego>"
"4616splitHere46","12097822splitHere46","org.springframework.context.support-3.1.1.RELEASE.jar"
"4617splitHere46","12097822splitHere46","<dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-context-support</artifactId><newline46mondego>    <version>3.1.1.RELEASE</version><newline46mondego></dependency><newline46mondego>"
"4618splitHere46","12097951splitHere46","JXTreeTable"
"4619splitHere46","12097951splitHere46","JTable"
"4620splitHere46","12097951splitHere46","JTable"
"4621splitHere46","12097951splitHere46","JTable API"
"4622splitHere46","12097951splitHere46","public Rectangle getCellRect(int row, int column, boolean includeSpacing)<newline46mondego>"
"4623splitHere46","12097951splitHere46","SwingUtilities.convertRectangle"
"4624splitHere46","12098540splitHere46","public class MyConfigurationBuilder {<newline46mondego>    private ConfigurationBuilder cb; <newline46mondego>    private Twitter twitter;<newline46mondego><newline46mondego>    public MyConfigurationBuilder() {<newline46mondego>      cb = new ConfigurationBuilder();<newline46mondego>      cb.setDebugEnabled(true)<newline46mondego>        .setOAuthConsumerKey(<doubleQuotes46>***<doubleQuotes46>)<newline46mondego>        .setOAuthConsumerSecret(<doubleQuotes46>***<doubleQuotes46>)<newline46mondego>        .setOAuthAccessToken(<doubleQuotes46>***<doubleQuotes46>)<newline46mondego>        .setOAuthAccessTokenSecret(<doubleQuotes46>***<doubleQuotes46>);<newline46mondego>      TwitterFactory tf = new TwitterFactory(cb.build());<newline46mondego>      twitter = tf.getInstance();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4625splitHere46","12098758splitHere46","1.Read uncommitted (the lowest level where transactions are isolated only enough to ensure that physically corrupt data is not read)<newline46mondego><newline46mondego>2.Read committed (Database Engine default level)<newline46mondego><newline46mondego>3.Repeatable read<newline46mondego><newline46mondego>4.Serializable (the highest level, where transactions are completely isolated from one another)<newline46mondego>"
"4626splitHere46","12098923splitHere46","ScrapeablePersonImportPart"
"4627splitHere46","12098923splitHere46","XYZPart"
"4628splitHere46","12098923splitHere46","HashMap"
"4629splitHere46","12098994splitHere46","\0"
"4630splitHere46","12098994splitHere46","Pattern.compile (<doubleQuotes46>[^\0]+<doubleQuotes46>);<newline46mondego>"
"4631splitHere46","12098994splitHere46","+"
"4632splitHere46","12098994splitHere46","\0"
"4633splitHere46","12099081splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><xsl:stylesheet <newline46mondego>  version=<doubleQuotes46>1.0<doubleQuotes46> <newline46mondego>  xmlns:xsl=<doubleQuotes46>http://www.w3.org/1999/XSL/Transform<doubleQuotes46>><newline46mondego>"
"4634splitHere46","12099100splitHere46","i &= 0xfffffff0; // Sets i to the greatest multiple of 16 less than i, or 0 for i < 16<newline46mondego>"
"4635splitHere46","12099100splitHere46","int i = 50;<newline46mondego>i &= 0xfffffff0; // i == 48<newline46mondego><newline46mondego>i = 39;<newline46mondego>i &= 0xfffffff0; // i == 32<newline46mondego><newline46mondego>i = 16;<newline46mondego>i &= 0xfffffff0; // i == 16<newline46mondego>"
"4636splitHere46","12099144splitHere46","EntityUtils#toString()"
"4637splitHere46","12099144splitHere46","// ...<newline46mondego>HttpResponse response = client.execute(get);<newline46mondego>String responseAsString = EntityUtils.toString(response.getEntity());<newline46mondego>// ...<newline46mondego>"
"4638splitHere46","12099181splitHere46","StringBuilder"
"4639splitHere46","12099192splitHere46","throw new ConstraintViolationException(<newline46mondego>    new HashSet<ConstraintViolation<?>>(violations));<newline46mondego>"
"4640splitHere46","12099267splitHere46","TelephoneFeature.getTelephone()<newline46mondego>"
"4641splitHere46","12099267splitHere46","TelephoneFeature.getTelephoneParameterTypes()<newline46mondego>"
"4642splitHere46","12099267splitHere46","Iterator"
"4643splitHere46","12099267splitHere46","Iterator<TelephoneFeature> itNumbers = vcard.getTelephoneNumbers();<newline46mondego>while (itNumbers.hasNext()) {<newline46mondego><newline46mondego>    TelephoneFeature next1 = itNumbers.next();<newline46mondego>    String telephone = next1.getTelephone();<newline46mondego><newline46mondego>    System.out.println(telephone);<newline46mondego>    System.out.println(<doubleQuotes46>types = <doubleQuotes46> + next1.getExtendedTelephoneParameterSize());<newline46mondego><newline46mondego>    Iterator<XTelephoneParameterType> itTypes = next1.getExtendedTelephoneParameterTypes();<newline46mondego>    while (itTypes.hasNext()) {<newline46mondego><newline46mondego>        XTelephoneParameterType next = itTypes.next();<newline46mondego>        System.out.println(<doubleQuotes46> - <doubleQuotes46> + next.getType() + <doubleQuotes46> / <doubleQuotes46> + next.getDescription());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4644splitHere46","12099267splitHere46","Iterator<TelephoneParameterType> itNTypes = next1.getTelephoneParameterTypes();<newline46mondego>while (itNTypes .hasNext()) {<newline46mondego><newline46mondego>    TelephoneParameterType next = itNTypes .next();<newline46mondego>    System.out.println(<doubleQuotes46> - <doubleQuotes46> + next.getType() + <doubleQuotes46> / <doubleQuotes46> + next.getDescription());<newline46mondego><newline46mondego>}<newline46mondego>"
"4645splitHere46","12099531splitHere46","public class AccountDao implements GenericDao<Account, Long> {<newline46mondego>  // your save, insert, delete, find, etc<newline46mondego>}<newline46mondego>"
"4646splitHere46","12099531splitHere46","@Service<newline46mondego>public class AccountService {<newline46mondego><newline46mondego>   @Autowired<newline46mondego>   private AccountDao dao;<newline46mondego><newline46mondego>   @Transactional<newline46mondego>   public void makePayment(Long fromId, Long toId, double amount) {<newline46mondego>      Account from = dao.find(fromId);<newline46mondego>      from.withdrawl(amount);<newline46mondego><newline46mondego>      Account to = dao.find(toId);<newline46mondego>      to.deposit(amount);<newline46mondego><newline46mondego>      dao.save(from);<newline46mondego>      dao.save(to);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4647splitHere46","12099550splitHere46","TitleAreaDialog"
"4648splitHere46","12099550splitHere46","Dialog"
"4649splitHere46","12099550splitHere46","public class CheckboxDialog extends Dialog {<newline46mondego><newline46mondego>    private String message = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    private String checkboxMessage = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    private boolean checkValue;<newline46mondego><newline46mondego>    private Button checkButton;<newline46mondego><newline46mondego>    /* Constructor, set shell style and set block on open (rest of gui is blocked until closed) */<newline46mondego>    public CheckboxDialog(Shell parentShell) {<newline46mondego>        super(parentShell);<newline46mondego>        setShellStyle(SWT.CLOSE | SWT.TITLE | SWT.BORDER | SWT.OK | SWT.APPLICATION_MODAL);<newline46mondego>        setBlockOnOpen(true);<newline46mondego>    }<newline46mondego><newline46mondego>    /* creates the content of the dialog */<newline46mondego>    protected Control createDialogArea(Composite parent) {<newline46mondego>        Composite composite = (Composite) super.createDialogArea(parent);<newline46mondego><newline46mondego>        /* set the layout for the content (gridlayout with 1 column)*/<newline46mondego>        GridLayout layout = new GridLayout(1, false);<newline46mondego>        layout.marginHeight = 15;<newline46mondego>        layout.marginWidth = 30;<newline46mondego>        composite.setLayout(layout);<newline46mondego><newline46mondego>        /* add a label with some text */<newline46mondego>        final Label content = new Label(composite, SWT.NONE);<newline46mondego>        content.setLayoutData(new GridData(SWT.FILL, SWT.TOP, true, false));<newline46mondego>        content.setText(message);<newline46mondego><newline46mondego>        /* add a checkbox button */<newline46mondego>        checkButton = new Button(composite, SWT.CHECK);<newline46mondego>        checkButton.setText(checkboxMessage);<newline46mondego>        checkButton.setSelection(true);<newline46mondego>        checkButton.setLayoutData(new GridData(SWT.FILL, SWT.TOP, true, false));<newline46mondego><newline46mondego>        return composite;<newline46mondego>    }<newline46mondego><newline46mondego>    /* create the dialog buttons (in this case, only an OK button) */<newline46mondego>    protected void createButtonsForButtonBar(Composite parent)<newline46mondego>    {<newline46mondego>        createButton(parent, IDialogConstants.OK_ID, <doubleQuotes46>OK<doubleQuotes46>, true);<newline46mondego>    }<newline46mondego><newline46mondego>    /* configure the dialog's shell (set title) */<newline46mondego>    protected void configureShell(Shell newShell) {<newline46mondego>        super.configureShell(newShell);<newline46mondego>        newShell.setText(<doubleQuotes46>Error<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    /* this method is executed if the OK button is pressed */<newline46mondego>    public void okPressed()<newline46mondego>    {<newline46mondego>        checkValue = checkButton.getSelection();<newline46mondego>        close();<newline46mondego>    }<newline46mondego><newline46mondego>    /* getter and setter methods */<newline46mondego>    public void setMessage(String message) {<newline46mondego>        this.message = message;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setCheckboxMessage(String checkboxMessage) {<newline46mondego>        this.checkboxMessage = checkboxMessage;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean getCheckBoxValue()<newline46mondego>    {<newline46mondego>        return checkValue;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4650splitHere46","12099550splitHere46","add"
"4651splitHere46","12099550splitHere46","TitleAreaDialog"
"4652splitHere46","12099585splitHere46","Foo.Bar barInstance = fooInstance.new Bar();<newline46mondego>"
"4653splitHere46","12099590splitHere46","web.xml"
"4654splitHere46","12099590splitHere46","public class InitVariables implements ServletContextListener<newline46mondego>{<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void contextDestroyed(final ServletContextEvent event)<newline46mondego>   {<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void contextInitialized(final ServletContextEvent event)<newline46mondego>   {<newline46mondego>      final String props = <doubleQuotes46>/file.properties<doubleQuotes46>;<newline46mondego>      final Properties propsFromFile = new Properties();<newline46mondego>      try<newline46mondego>      {<newline46mondego>         propsFromFile.load(getClass().getResourceAsStream(props));<newline46mondego>      }<newline46mondego>      catch (final IOException e)<newline46mondego>      {<newline46mondego>          // can't get resource<newline46mondego>      }<newline46mondego>      for (String prop : propsFromFile.stringPropertyNames())<newline46mondego>      {<newline46mondego>         if (System.getProperty(prop) == null)<newline46mondego>         {<newline46mondego>             System.setProperty(prop, propsFromFile.getProperty(prop));<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego>}  <newline46mondego>"
"4655splitHere46","12099590splitHere46","<listener>       <newline46mondego>      <listener-class><newline46mondego>         com.company.InitVariables<newline46mondego>      </listener-class><newline46mondego>   </listener>  <newline46mondego>"
"4656splitHere46","12099590splitHere46","System.getProperty(...)<newline46mondego>"
"4657splitHere46","12099590splitHere46","<param-name>param-name</param-name><newline46mondego><param-value>${param-name}</param-value><newline46mondego>"
"4658splitHere46","12099665splitHere46","public static void main ( String[ ] args )<newline46mondego>{<newline46mondego>    new SoundBang( );<newline46mondego>    Thread.sleep(2000); // Sleep 2 seconds<newline46mondego>}<newline46mondego>"
"4659splitHere46","12099759splitHere46","subList(30, 38);"
"4660splitHere46","12099759splitHere46","sublist(30, size());"
"4661splitHere46","12099759splitHere46","dataList = dataList.subList(30, 38 > dataList.size() ? dataList.size() : 38);<newline46mondego>"
"4662splitHere46","12099897splitHere46","Rectangle"
"4663splitHere46","12099897splitHere46","Rectangle panelBounds = panel.getBounds();<newline46mondego>Rectangle cellBounds = getRowBounds(row); // getPathBounds(path);<newline46mondego>if (panelBounds.intersects(cellBounds)) {<newline46mondego>    // We have a collision<newline46mondego>}<newline46mondego>"
"4664splitHere46","12099897splitHere46","Rectangle"
"4665splitHere46","12099897splitHere46","getBounds"
"4666splitHere46","12099900splitHere46","HashMap<String, InfoStor> mapper = new HashMap<String, InfoStor>();<newline46mondego>"
"4667splitHere46","12099900splitHere46","InfoStor"
"4668splitHere46","12099900splitHere46","InfoStor myStor = mapper.get(<doubleQuotes46>somekey<doubleQuotes46>);<newline46mondego>myStor.getMemory(); // this will work<newline46mondego>"
"4669splitHere46","12099900splitHere46","HashMap<String, Object>"
"4670splitHere46","12099900splitHere46","Object obj = mapper.get(<doubleQuotes46>somekey<doubleQuotes46>);<newline46mondego>((InfoStor)obj).getMemory(); // cast is required<newline46mondego>obj.getMemory(); // this will not compile<newline46mondego>"
"4671splitHere46","12099931splitHere46","if( myObject == null && myObject.getAlwaysTrue() )<newline46mondego>"
"4672splitHere46","12099931splitHere46","myObject"
"4673splitHere46","12099931splitHere46","if( myObject != null && myObject.getAlwaysTrue() )<newline46mondego>"
"4674splitHere46","12099931splitHere46","&&"
"4675splitHere46","12099931splitHere46","||"
"4676splitHere46","12099931splitHere46","a && b"
"4677splitHere46","12099931splitHere46","a"
"4678splitHere46","12099931splitHere46","b"
"4679splitHere46","12100117splitHere46","stdin"
"4680splitHere46","12100117splitHere46","Scanner"
"4681splitHere46","12100117splitHere46","Scanner scanner = new Scanner(System.in);<newline46mondego>String a = scanner.next();<newline46mondego>"
"4682splitHere46","12100143splitHere46","Intent sendIntent = new Intent(Intent.ACTION_VIEW);<newline46mondego>sendIntent.putExtra(<doubleQuotes46>SMS Body<doubleQuotes46>, sms);<newline46mondego>sendIntent.setType(<doubleQuotes46>vnd.android-dir/mms-sms<doubleQuotes46>);<newline46mondego>startActivity(sendIntent);<newline46mondego>"
"4683splitHere46","12100202splitHere46","super();"
"4684splitHere46","12100202splitHere46","new HashMap<String,Integer>();"
"4685splitHere46","12100226splitHere46","public void newUserInput(View view) {<newline46mondego>    LayoutInflater inflater = (LayoutInflater)<newline46mondego>        Launch.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego><newline46mondego>    View inflatedView = inflater.inflate(R.layout.popup_layout,null,false);<newline46mondego><newline46mondego>    if (myOption == 0) {<newline46mondego>        TextView tv = (TextView) inflatedView.findViewById(R.id.my_text_view);<newline46mondego>        tv.setVisibility(TextView.INVISIBLE);<newline46mondego>    }<newline46mondego><newline46mondego>    PopupWindow pw = new PopupWindow(inflatedView,300,400,true);<newline46mondego><newline46mondego>    pw.showAtLocation(findViewById(R.id.button1), Gravity.CENTER, 0, 0);<newline46mondego>}<newline46mondego>"
"4686splitHere46","12100252splitHere46","JButton"
"4687splitHere46","12100252splitHere46","JButton"
"4688splitHere46","12100252splitHere46","getListCellRendererComponent"
"4689splitHere46","12100252splitHere46","JCombobox"
"4690splitHere46","12100252splitHere46","Component"
"4691splitHere46","12100252splitHere46","JTable"
"4692splitHere46","12100252splitHere46","JTable"
"4693splitHere46","12100252splitHere46","import javax.swing.JComboBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.event.ItemEvent;<newline46mondego>import java.awt.event.ItemListener;<newline46mondego><newline46mondego>public class ComboboxTest {<newline46mondego><newline46mondego>  public static void main( String[] args ) {<newline46mondego>    EventQueue.invokeLater( new Runnable() {<newline46mondego>      @Override<newline46mondego>      public void run() {<newline46mondego>        JFrame frame = new JFrame( <doubleQuotes46>TestFrame<doubleQuotes46> );<newline46mondego>        JComboBox<String> comboBox = new JComboBox<>(new String[]{<doubleQuotes46>Item1<doubleQuotes46>, <doubleQuotes46>Item2<doubleQuotes46>});<newline46mondego>        final String browse = <doubleQuotes46><<BROWSE>><doubleQuotes46>;<newline46mondego>        comboBox.addItem( browse );<newline46mondego>        comboBox.addItemListener( new ItemListener() {<newline46mondego>          @Override<newline46mondego>          public void itemStateChanged( ItemEvent e ) {<newline46mondego>            if ( e.getStateChange() == ItemEvent.SELECTED && <newline46mondego>                browse.equals( e.getItem() ) ){<newline46mondego>              System.out.println(<doubleQuotes46>Show filechooser<doubleQuotes46>);<newline46mondego>            }<newline46mondego>          }<newline46mondego>        } );<newline46mondego>        frame.add( comboBox );<newline46mondego>        frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>        frame.setVisible( true );<newline46mondego>        frame.pack();<newline46mondego>      }<newline46mondego>    } );<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4694splitHere46","12100352splitHere46","gzipOutputStream.flush();<newline46mondego>"
"4695splitHere46","12100352splitHere46","gzipOutputStream.close();<newline46mondego>"
"4696splitHere46","12100492splitHere46","#ifndef __FIRSTCLASS_IDL__<newline46mondego>#define __FIRSTCLASS_IDL__<newline46mondego><newline46mondego>#include <doubleQuotes46>interface2.idl<doubleQuotes46><newline46mondego><newline46mondego>interface FirstClass<newline46mondego>{<newline46mondego>    typedef sequence<SecondClass> secondVector;<newline46mondego>    FirstClass create();<newline46mondego>};<newline46mondego><newline46mondego>#endif<newline46mondego>"
"4697splitHere46","12100492splitHere46","#ifndef __SECONDCLASS_IDL__<newline46mondego>#define __SECONDCLASS_IDL__<newline46mondego><newline46mondego>interface FirstClass;<newline46mondego><newline46mondego>interface SecondClass<newline46mondego>{<newline46mondego>    typedef sequence<FirstClass> firstVector;<newline46mondego>    SecondClass create();<newline46mondego>};<newline46mondego><newline46mondego>#include <doubleQuotes46>interface1.idl<doubleQuotes46><newline46mondego><newline46mondego>#endif<newline46mondego>"
"4698splitHere46","12100492splitHere46","include"
"4699splitHere46","12100511splitHere46","*"
"4700splitHere46","12100511splitHere46","File[] files = new File(<doubleQuotes46>/home/benuni/CompileFiles/<doubleQuotes46> + project + <doubleQuotes46>/<doubleQuotes46> + s).listFiles(new FilenameFilter() {<newline46mondego>        @Override<newline46mondego>        public boolean accept(File dir, String name) {<newline46mondego>            return name.endsWith(<doubleQuotes46>.java<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    StringBuilder command = new StringBuilder(<doubleQuotes46>javac<doubleQuotes46>);<newline46mondego>    for(File file : files) {<newline46mondego>        command.append(<doubleQuotes46> <doubleQuotes46>).append(file.getAbsolutePath());<newline46mondego>    }<newline46mondego>"
"4701splitHere46","12100529splitHere46","class Test2 {<newline46mondego>    public int number = 0;<newline46mondego>}<newline46mondego>"
"4702splitHere46","12100529splitHere46","class Test2 {<newline46mondego>    public int number;<newline46mondego><newline46mondego>    public Test2() {<newline46mondego>        super();<newline46mondego>        number = 0;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4703splitHere46","12100529splitHere46","number"
"4704splitHere46","12100529splitHere46","number"
"4705splitHere46","12100587splitHere46","addBatch()"
"4706splitHere46","12100587splitHere46","trasaction"
"4707splitHere46","12100587splitHere46","boolean autoCommit = connection.getAutoCommit();<newline46mondego>try{<newline46mondego>    connection.setAutoCommit(false //Turn off autoCommit<newline46mondego>    pstatement = db_connection.prepareStatement(PDSLnPConstants.UPSERT_SQL);<newline46mondego><newline46mondego>    int batchLimit = 1000;<newline46mondego><newline46mondego>    try{<newline46mondego>        for (Entry<Integer, LinkedHashMap<Integer, String>> entry : MAPPING.entrySet()) {<newline46mondego>            pstatement.setInt(1, entry.getKey());<newline46mondego>            pstatement.setString(2, entry.getValue().get(LnPConstants.CGUID_ID));<newline46mondego>            pstatement.setString(3, entry.getValue().get(LnPConstants.PGUID_ID));<newline46mondego>            pstatement.setString(4, entry.getValue().get(LnPConstants.SGUID_ID));<newline46mondego>            pstatement.setString(5, entry.getValue().get(LnPConstants.UID_ID));<newline46mondego>            pstatement.setString(6, entry.getValue().get(LnPConstants.ULOC_ID));<newline46mondego>            pstatement.setString(7, entry.getValue().get(LnPConstants.SLOC_ID));<newline46mondego>            pstatement.setString(8, entry.getValue().get(LnPConstants.PLOC_ID));<newline46mondego>            pstatement.setString(9, entry.getValue().get(LnPConstants.ALOC_ID));<newline46mondego>            pstatement.setString(10, entry.getValue().get(LnPConstants.SITE_ID));<newline46mondego><newline46mondego>            pstatement.addBatch();<newline46mondego>            batchLimit--;<newline46mondego><newline46mondego>            if(batchLimit == 0){<newline46mondego>                pstatement.executeBatch();<newline46mondego>                pstatement.clearBatch<newline46mondego>                batchLimit = 1000;<newline46mondego>            }<newline46mondego>             pstatement.clearParameters();<newline46mondego>        }<newline46mondego>    }finally{<newline46mondego>        //for the remaining ones<newline46mondego>        pstatement.executeBatch();<newline46mondego><newline46mondego>        //commit your updates<newline46mondego>        connection.commit();<newline46mondego>    }<newline46mondego>}finally{<newline46mondego>    connection.setAutoCommit(autoCommit);<newline46mondego>}<newline46mondego>"
"4708splitHere46","12100587splitHere46","batchLimit"
"4709splitHere46","12100587splitHere46","transaction"
"4710splitHere46","12100587splitHere46","commit"
"4711splitHere46","12100587splitHere46","commit"
"4712splitHere46","12100587splitHere46","rollback"
"4713splitHere46","12100587splitHere46","transaction"
"4714splitHere46","12100651splitHere46","BitSet"
"4715splitHere46","12100651splitHere46","byte[] argb = ...<newline46mondego>BitSet bits = BitSet.valueOf(argb);<newline46mondego>bits.set(0); // sets the 0th bit to true<newline46mondego>bits.clear(0); // sets the 0th bit to false<newline46mondego><newline46mondego>byte[] newArgb = bits.toByteArray();<newline46mondego>"
"4716splitHere46","12100651splitHere46","byte[]"
"4717splitHere46","12100651splitHere46","int"
"4718splitHere46","12100651splitHere46","int i = 0;<newline46mondego>for(byte b : newArgb) { // you could also omit this loop<newline46mondego>    i <<= 8;            // and do this all on one line<newline46mondego>    i |= (b & 0xFF);    // but it can get kind of messy.<newline46mondego>}<newline46mondego>"
"4719splitHere46","12100651splitHere46","ByteBuffer bb = ByteBuffer.allocate(4);<newline46mondego>bb.put(newArgb);<newline46mondego>int i = bb.getInt();<newline46mondego>"
"4720splitHere46","12100958splitHere46","public class Convertor {<newline46mondego>    public static void convert(int []a, int []b) {<newline46mondego>        int left = (a[0] << 24) | (a[1] << 16) | (a[2] << 8) | a[3];<newline46mondego>        int right = left | 0xff;<newline46mondego>        int end = (b[0] << 24) | (b[1] << 16) | (b[2] << 8) | b[3];<newline46mondego>        while ( right < end ) {<newline46mondego>            System.out.printf(<doubleQuotes46>%s -> %s\n<doubleQuotes46>, toIp(left), toIp(right));<newline46mondego>            left = right + 1; right += 256;<newline46mondego>        }<newline46mondego>        System.out.printf(<doubleQuotes46>%s -> %s\n<doubleQuotes46>, toIp(left), toIp(end));<newline46mondego>    }<newline46mondego><newline46mondego>    private static String toIp(int value) {<newline46mondego>        return String.format(<doubleQuotes46>%d.%d.%d.%d<doubleQuotes46>,<newline46mondego>                             value >> 24 & 0xFF,<newline46mondego>                             value >> 16 & 0xFF,<newline46mondego>                             value >> 8 & 0xFF,<newline46mondego>                             value & 0xFF);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4721splitHere46","12100958splitHere46","Convertor.convert(new int[]{1, 2, 3, 4}, new int[]{1, 2, 5, 6});<newline46mondego>"
"4722splitHere46","12100958splitHere46","1.2.3.4 -> 1.2.3.255<newline46mondego>1.2.4.0 -> 1.2.4.255<newline46mondego>1.2.5.0 -> 1.2.5.6<newline46mondego>"
"4723splitHere46","12100985splitHere46","Map<String,Object><newline46mondego>"
"4724splitHere46","12100985splitHere46","cls.getConstructor(Map.class) will be enough<newline46mondego>"
"4725splitHere46","12101103splitHere46","@Override<newline46mondego>"
"4726splitHere46","12101534splitHere46","NumberFormat"
"4727splitHere46","12101534splitHere46","Locale"
"4728splitHere46","12101534splitHere46","parse"
"4729splitHere46","12101534splitHere46","NumberFormat nf = NumberFormat.getNumberInstance(new Locale(<doubleQuotes46>pt<doubleQuotes46>, <doubleQuotes46>PT<doubleQuotes46>));<newline46mondego>DecimalFormat df = (DecimalFormat)nf;<newline46mondego>df.setParseBigDecimal(true);<newline46mondego>BigDecimal decimal = (BigDecimal)df.parse(<doubleQuotes46>12.090.129.019.201.920.192.091.029.102.901.920.192.019.201.920<doubleQuotes46>);<newline46mondego>BigInteger big = decimal.toBigInteger();<newline46mondego>"
"4730splitHere46","12101569splitHere46","driver.findElement(By.XPath(<doubleQuotes46>//li[@class='li_class']/a<doubleQuotes46>)).Click();"
"4731splitHere46","12101844splitHere46","content = content.replaceAll(<doubleQuotes46>(?m)^=(.+)=$<doubleQuotes46>, <doubleQuotes46><size:large>$1</size:large><doubleQuotes46>);<newline46mondego>"
"4732splitHere46","12101844splitHere46","^"
"4733splitHere46","12101844splitHere46","$"
"4734splitHere46","12101890splitHere46","PdfReader reader = new PdfReader(/*String*/fileName);<newline46mondego>reader.consolidateNamedDestinations();<newline46mondego>"
"4735splitHere46","12101920splitHere46","if (rulesTable[1][substring_marker].length() >= 2) <newline46mondego>"
"4736splitHere46","12101920splitHere46","if (rulesTable[k][substring_marker].length() >= 2)<newline46mondego>"
"4737splitHere46","12101940splitHere46","public class DAOSuite{<newline46mondego>    Class[] testClasses = {<newline46mondego>        UserDAOTest.class,<newline46mondego>        BooksDAOTest.class,<newline46mondego>        BorrowsDAOTest.class<newline46mondego>    };<newline46mondego>    TestSuite = new TestSuite(testClasses);<newline46mondego>}<newline46mondego>"
"4738splitHere46","12101986splitHere46","ip tuntap"
"4739splitHere46","12102301splitHere46","Serializable"
"4740splitHere46","12102301splitHere46","Window"
"4741splitHere46","12102301splitHere46","Preference"
"4742splitHere46","12102301splitHere46","Java"
"4743splitHere46","12102301splitHere46","Compiler"
"4744splitHere46","12102301splitHere46","Errors/Warnings"
"4745splitHere46","12102301splitHere46","Serializable class without a serialVersionID"
"4746splitHere46","12102301splitHere46","CTRL + 1"
"4747splitHere46","12102499splitHere46","ArrayList"
"4748splitHere46","12102499splitHere46","ArrayList<employee>"
"4749splitHere46","12102499splitHere46","Object"
"4750splitHere46","12102499splitHere46","Employee"
"4751splitHere46","12102499splitHere46","System.out.println(((employee)employeeList.get(0)).getEmployee());<newline46mondego>"
"4752splitHere46","12102634splitHere46","remove() on iterator"
"4753splitHere46","12102634splitHere46","list.remove(obj)"
"4754splitHere46","12102878splitHere46","KeyListener"
"4755splitHere46","12102878splitHere46","KeyListener"
"4756splitHere46","12102878splitHere46","public class Keyer implements KeyListener{<newline46mondego><newline46mondego>        /** Stores currently pressed keys */<newline46mondego>        HashSet<Integer> pressedKeys = new HashSet<Integer>();<newline46mondego><newline46mondego>        public Keyer(){<newline46mondego><newline46mondego>            //Check every 100ms if there's keys pressed<newline46mondego>            //(This is the Swing Timer they talk about)<newline46mondego>            new Timer(100, new ActionListener(){<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent arg0) {<newline46mondego>                    String keysString = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                    if(!pressedKeys.isEmpty()){<newline46mondego>                        Iterator<Integer> i = pressedKeys.iterator();<newline46mondego>                        while(i.hasNext()){<newline46mondego>                            keysString += i.next() + <doubleQuotes46>,<doubleQuotes46>;<newline46mondego>                        }<newline46mondego>                    } <newline46mondego>                    System.out.println(keysString);<newline46mondego>                }<newline46mondego>            }).start();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void keyPressed(KeyEvent ovent){<newline46mondego>            //Add key to hashSet when pressed<newline46mondego>            int keyCode = ovent.getKeyCode();<newline46mondego>            pressedKeys.add(keyCode);<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void keyReleased(KeyEvent ovent){<newline46mondego>            //Remove key from hashset when released<newline46mondego>            int keyCode = ovent.getKeyCode();<newline46mondego>            pressedKeys.remove(keyCode);<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void keyTyped(KeyEvent ovent){}<newline46mondego>    }<newline46mondego>"
"4757splitHere46","12102878splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.util.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.Timer;<newline46mondego><newline46mondego>public class TempProject extends JPanel{<newline46mondego>    /** Label to update with currently pressed keys */<newline46mondego>    JLabel output = new JLabel();<newline46mondego><newline46mondego>    public TempProject(){<newline46mondego>        super();<newline46mondego>        setFocusable(true);<newline46mondego>        add(output, BorderLayout.CENTER);<newline46mondego>        requestFocus();<newline46mondego>        addKeyListener(new Keyer());<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                frame.setContentPane(new TempProject());    <newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>                new TempProject();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class Keyer implements KeyListener{<newline46mondego><newline46mondego>        /** Stores currently pressed keys */<newline46mondego>        HashSet<Integer> pressedKeys = new HashSet<Integer>();<newline46mondego><newline46mondego>        public Keyer(){<newline46mondego><newline46mondego>            //Check every 100ms if there's keys pressed<newline46mondego>            //(This is the Swing Timer they talk about)<newline46mondego>            new Timer(100, new ActionListener(){<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent arg0) {<newline46mondego>                    String keysString = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                    if(!pressedKeys.isEmpty()){<newline46mondego>                        Iterator<Integer> i = pressedKeys.iterator();<newline46mondego>                        while(i.hasNext()){<newline46mondego>                            keysString += i.next() + <doubleQuotes46>,<doubleQuotes46>;<newline46mondego>                        }<newline46mondego>                    } <newline46mondego>                    output.setText(keysString);<newline46mondego>                }<newline46mondego>            }).start();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void keyPressed(KeyEvent ovent){<newline46mondego>            //Add key to hashSet when pressed<newline46mondego>            int keyCode = ovent.getKeyCode();<newline46mondego>            pressedKeys.add(keyCode);<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void keyReleased(KeyEvent ovent){<newline46mondego>            //Remove key from hashset when released<newline46mondego>            int keyCode = ovent.getKeyCode();<newline46mondego>            pressedKeys.remove(keyCode);<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void keyTyped(KeyEvent ovent){}<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"4758splitHere46","12102878splitHere46","KeyListener"
"4759splitHere46","12102948splitHere46",".equals()"
"4760splitHere46","12102948splitHere46","ObjectSet"
"4761splitHere46","12102948splitHere46","Tra"
"4762splitHere46","12102948splitHere46","result.getNext().equals(tram)"
"4763splitHere46","12102948splitHere46","equals()"
"4764splitHere46","12102948splitHere46","public class Tra {<newline46mondego><newline46mondego>    /* Existing Code */<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object obj) {<newline46mondego>        if (obj == null) return false;<newline46mondego>        if (obj == this) return true;<newline46mondego><newline46mondego>        if (obj instanceof Tra) {<newline46mondego>            Tra param = (Tra) obj;<newline46mondego>            return this.x == param.x<newline46mondego>                    && this.y == param.y<newline46mondego>                    && this.z == param.z;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4765splitHere46","12103038splitHere46","EventQueue.invokeLater(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego><newline46mondego>        Image img = null;<newline46mondego>        try {<newline46mondego>            img = ImageIO.read(new File(<doubleQuotes46>...<doubleQuotes46>));<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        TrayIcon ti = new TrayIcon(img, <doubleQuotes46>Tooltip<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            // You need to add it to the system tray first<newline46mondego>            SystemTray.getSystemTray().add(ti);<newline46mondego>        } catch (AWTException ex) {<newline46mondego>          ex.printStackTrace();<newline46mondego>        }<newline46mondego>        ti.displayMessage(<doubleQuotes46>Low Disk Space<doubleQuotes46>, <doubleQuotes46>Diskspace is very low<doubleQuotes46>,<newline46mondego>                MessageType.WARNING);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>});<newline46mondego>"
"4766splitHere46","12103147splitHere46","actionPerformed"
"4767splitHere46","12103147splitHere46","actionPerformed"
"4768splitHere46","12103147splitHere46","actionPerformed"
"4769splitHere46","12103147splitHere46","ActionEvent.getSource"
"4770splitHere46","12103147splitHere46","ActionEvent.getActionCommand"
"4771splitHere46","12103147splitHere46","if (BadApplet.checkWin == true) {<newline46mondego>    // Stuff here<newline46mondego>} <newline46mondego>if (BadApplet.boardFull == false && BadApplet.checkWin == false) {<newline46mondego>    // more stuff here<newline46mondego>}<newline46mondego>"
"4772splitHere46","12103147splitHere46","if (BadApplet.checkWin == true) {<newline46mondego>    // Stuff here<newline46mondego>}  else if (BadApplet.boardFull == false && BadApplet.checkWin == false) {<newline46mondego>    // more stuff here<newline46mondego>}<newline46mondego>"
"4773splitHere46","12103261splitHere46","private String URL = <doubleQuotes46>jdbc:jtds:sqlserver://localhost/brandix;instance=sqlexpress<doubleQuotes46>;<newline46mondego>"
"4774splitHere46","12103261splitHere46","private String URL = <doubleQuotes46>jdbc:jtds:sqlserver://localhost/brandix;instance=sqlexpress;useNTLMv2=truâ€Œâ€‹e;domain=workgroup<doubleQuotes46>;<newline46mondego>"
"4775splitHere46","12103261splitHere46","sqljdbc4.jar"
"4776splitHere46","12103261splitHere46","Class.forName(com.microsoft.sqlserver.jdbc.SQLServerDriver);"
"4777splitHere46","12103261splitHere46","jdbc:sqlserver://localhost;user=root;password=â€Œâ€‹123;<doubleQuotes46>"
"4778splitHere46","12103461splitHere46","JDC: Why is Throwable not an interface? The name kind of suggests it should have been.  <newline46mondego>Being able to catch for types, that is, something like try{}catch (<some interface or <newline46mondego>class>), instead of only classes. That would make [the] Java [programming language] <newline46mondego>much more flexible.<newline46mondego><newline46mondego>JG: The reason that the Throwable and the rest of those guys are not interfaces is <newline46mondego>because we decided, or I decided fairly early on. I decided that I wanted to have some <newline46mondego>state associated with every exception that gets thrown. And you can't do that with <newline46mondego>interfaces; you can only do that with classes. The state that's there is basically <newline46mondego>standard. There's a message, there's a snapshot, stuff like that â€” that's always there.    <newline46mondego>and also, if you make Throwable an interface the temptation is to assign, to make any <newline46mondego>old object be a Throwable thing. It feels stylistically that throwing general objects <newline46mondego>is probably a bad idea, that the things you want to throw really ought to be things <newline46mondego>that are intended to be exceptions that really capture the nature of the exception and <newline46mondego>what went on. They're not just general data structures.<newline46mondego>"
"4779splitHere46","12103600splitHere46","base.findViewById<newline46mondego>"
"4780splitHere46","12103600splitHere46","base.findViewWithTag <newline46mondego>"
"4781splitHere46","12103779splitHere46","public class PNRExpirationThread extends Thread {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        while (true) {  //or while !stop, or while Server.isRunning(), you get the idea<newline46mondego>            try {<newline46mondego>                Thread.sleep(30000);  //wait 30 seconds; adjust this to your liking<newline46mondego>                //it's pseudo-SQL, but you get the idea; I'm assuming your data model has the required fields for this to work<newline46mondego>                Database.executeTxn(<doubleQuotes46>DELETE FROM pnrRecords WHERE NOW() - createDate > 12h AND confirmed = 0<doubleQuotes46>);  <newline46mondego>            }<newline46mondego>            catch (Throwable ignored) {<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4782splitHere46","12103779splitHere46","//keep a reference to this if you want to terminate the thread gracefully at shutdown time<newline46mondego>new PNRExpirationThread().start();<newline46mondego>"
"4783splitHere46","12103792splitHere46","public class Test implements Closeable {<newline46mondego>    private RuntimeException ex = new RuntimeException();<newline46mondego><newline46mondego>    public void doStuff() {<newline46mondego>        throw ex;<newline46mondego>    }<newline46mondego><newline46mondego>    public void close() {<newline46mondego>        throw ex;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>try (Test t = new Test()) {<newline46mondego>    t.doStuff();<newline46mondego>}<newline46mondego>"
"4784splitHere46","12103957splitHere46","next()"
"4785splitHere46","12103957splitHere46","if(rs!=null)<newline46mondego>"
"4786splitHere46","12103957splitHere46","executeQuery"
"4787splitHere46","12103957splitHere46","next()"
"4788splitHere46","12103957splitHere46","if (rs.next())<newline46mondego>"
"4789splitHere46","12103966splitHere46","JLabel label = new JLabel(<doubleQuotes46>Test text<doubleQuotes46>);//initialize the label<newline46mondego>//do some stuff with label here maybe...<newline46mondego>panel.add(label);//now add it<newline46mondego>"
"4790splitHere46","12103966splitHere46","JFrame frame = new JFrame(<doubleQuotes46>Basic Swing<doubleQuotes46>);//Make a frame<newline46mondego>    frame.setSize(300, 300);//Give it a size<newline46mondego>    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);//Make it go away on close<newline46mondego>    JPanel panel = new JPanel();//Make a panel<newline46mondego>    frame.add(panel);//Add it to your frame<newline46mondego><newline46mondego>    JLabel label = new JLabel(<doubleQuotes46>Hello StackOverflow!<doubleQuotes46>);//Make a label<newline46mondego>    panel.add(label);//Add it to the panel (which is on the frame)<newline46mondego><newline46mondego>    frame.setVisible(true);//Show the frame<newline46mondego>"
"4791splitHere46","12104145splitHere46","String selectedItem = parent.getItemAtPosition(pos).toString();<newline46mondego>"
"4792splitHere46","12104356splitHere46","public static void display2DArray(String[][] array){<newline46mondego>    for (int i = 0; i < array.length; i++) {<newline46mondego>        for (int j = 0; j < array[i].length; j++) {<newline46mondego>            System.out.println(<doubleQuotes46>Document <doubleQuotes46>+i+ <doubleQuotes46>  Section <doubleQuotes46>+j);<newline46mondego>            System.out.println(<doubleQuotes46> <doubleQuotes46>+array[i][j]);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4793splitHere46","12104393splitHere46","whiteJLabel.setBackground(Color.WHITE)<newline46mondego>whiteJLabel.setOpaque(true);<newline46mondego>"
"4794splitHere46","12104405splitHere46","random()"
"4795splitHere46","12104405splitHere46","StdRandom.random()"
"4796splitHere46","12104432splitHere46","appengine-web.xml"
"4797splitHere46","12104432splitHere46","<!-- Configure serving/caching of GWT files --><newline46mondego><static-files><newline46mondego>  <include path=<doubleQuotes46>**<doubleQuotes46> /><newline46mondego><newline46mondego>  <!-- The following line requires App Engine 1.3.2 SDK --><newline46mondego>  <include path=<doubleQuotes46>**.nocache.*<doubleQuotes46> expiration=<doubleQuotes46>0s<doubleQuotes46> /><newline46mondego><newline46mondego>  <include path=<doubleQuotes46>**.cache.*<doubleQuotes46> expiration=<doubleQuotes46>365d<doubleQuotes46> /><newline46mondego>  <exclude path=<doubleQuotes46>**.gwt.rpc<doubleQuotes46> /><newline46mondego></static-files><newline46mondego>"
"4798splitHere46","12104631splitHere46","public void somethingElse(){<newline46mondego>    try {<newline46mondego>           String line;//Added a variable to store the current line to; readLine is <newline46mondego>           //dynamic, it returns the next line each call, so if we store to a variable,<newline46mondego>           //we only call it once, and hold that value<newline46mondego>           if((line = in.readLine()) != null){// (line = in.readLine()) != null is shorthand to store readLine to line, and then check if that returned value is null or not<newline46mondego>               System.out.println(line);//Print out the line<newline46mondego>               chat.append(recipient + <doubleQuotes46>: <doubleQuotes46> + line + <doubleQuotes46>\n<doubleQuotes46>);//Append it<newline46mondego>           }<newline46mondego>     } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>     }     <newline46mondego>}<newline46mondego>"
"4799splitHere46","12104713splitHere46","exec-maven-plugin"
"4800splitHere46","12104713splitHere46","pom.xml"
"4801splitHere46","12104713splitHere46","<build><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego>            <artifactId>exec-maven-plugin</artifactId><newline46mondego>            <version>1.2.1</version><newline46mondego>            <executions><newline46mondego>                <execution><newline46mondego>                    <goals><newline46mondego>                        <goal>java</goal><newline46mondego>                    </goals><newline46mondego>                </execution><newline46mondego>            </executions><newline46mondego>            <configuration><newline46mondego>                <mainClass>com.company.package.YourApplicationMain</mainClass><newline46mondego>            </configuration><newline46mondego>        </plugin><newline46mondego>    </plugins><newline46mondego></build><newline46mondego>"
"4802splitHere46","12104713splitHere46","mvn package exec:java<newline46mondego>"
"4803splitHere46","12104713splitHere46","mvn exec:java<newline46mondego>"
"4804splitHere46","12104766splitHere46",".class.getResource(...)"
"4805splitHere46","12104766splitHere46",".class.getResourceaAsStream(...)"
"4806splitHere46","12104766splitHere46","URL url = ClazzInTheFolderOfMyMidiFile.class.getResource(nameOfMidiFile);<newline46mondego>"
"4807splitHere46","12104766splitHere46","InputStream resourceAsStream = ClazzInTheFolderOfMyMidiFile.class.getResourceAsStream(nameOfMidiFile);<newline46mondego>"
"4808splitHere46","12104877splitHere46","t.start()"
"4809splitHere46","12104877splitHere46","run()"
"4810splitHere46","12104877splitHere46","run()"
"4811splitHere46","12104913splitHere46","Map<String, Class<? extends Milkshake>> obj2impl =<newline46mondego>    new HashMap<String, Class<? extends Milkshake>>();<newline46mondego>obj2impl.put(<doubleQuotes46>Fruit<doubleQuotes46>, FruitMilkshake.class);<newline46mondego>obj2impl.put(<doubleQuotes46>Banana<doubleQuotes46>, BananaMilkshake.class);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>Milkshake milkshake = obj2impl.get(text).newInstance();<newline46mondego>"
"4812splitHere46","12104913splitHere46","Provider"
"4813splitHere46","12104913splitHere46","Map<String, Provider<Milkshake>> map = ...;<newline46mondego>// Fill the map with providers, some of which could create a new instance,<newline46mondego>// and some could reuse an existing one<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>Milkshake milkshake = map.get(text).get();<newline46mondego>"
"4814splitHere46","12104913splitHere46","Map<Class<?>, Provider<Milkshake>>"
"4815splitHere46","12104913splitHere46","Fruit"
"4816splitHere46","12104913splitHere46","makeMilkshake"
"4817splitHere46","12104915splitHere46","doc.select"
"4818splitHere46","12104915splitHere46","Elements"
"4819splitHere46","12104915splitHere46","Element"
"4820splitHere46","12104915splitHere46","try<newline46mondego>{<newline46mondego>    Document doc = Jsoup.connect(urlget).get();<newline46mondego>    Elements tables = doc.select(<doubleQuotes46>div.itembody<doubleQuotes46>);<newline46mondego>    if(tables.isEmpty())<newline46mondego>        noDivItembodyInHTML();<newline46mondego>    else<newline46mondego>        websiteaddress = tables.first().text();<newline46mondego>}<newline46mondego>catch (IOException ee)<newline46mondego>{<newline46mondego>}<newline46mondego>"
"4821splitHere46","12104918splitHere46","ClassNotFoundException"
"4822splitHere46","12105010splitHere46","Object.equals"
"4823splitHere46","12105010splitHere46","public boolean equals(Object other)<newline46mondego>"
"4824splitHere46","12105010splitHere46","@Override"
"4825splitHere46","12105010splitHere46","other"
"4826splitHere46","12105010splitHere46","RouteHeadSignPair"
"4827splitHere46","12105010splitHere46","RouteHeadSignPair"
"4828splitHere46","12105010splitHere46","route"
"4829splitHere46","12105010splitHere46","headSign"
"4830splitHere46","12105022splitHere46","Maps"
"4831splitHere46","12105022splitHere46","key/value pairs"
"4832splitHere46","12105022splitHere46","other collections"
"4833splitHere46","12105022splitHere46","just values"
"4834splitHere46","12105053splitHere46","MenuItem mi = null; // TODO<newline46mondego><newline46mondego>    // Selection<newline46mondego>    if (null != mi.getCommand()) {<newline46mondego>        mi.getCommand().menuSelected(mi);<newline46mondego>    }<newline46mondego><newline46mondego>    // Toggle checked<newline46mondego>    if (mi.isCheckable()) {<newline46mondego>        mi.setChecked(!mi.isChecked());<newline46mondego>    }<newline46mondego>"
"4835splitHere46","12105069splitHere46","<h:dataTable>"
"4836splitHere46","12105069splitHere46","<h:panelGrid>"
"4837splitHere46","12105069splitHere46","<h:dataTable>"
"4838splitHere46","12105069splitHere46","<f:facet />"
"4839splitHere46","12105090splitHere46","SwingExample"
"4840splitHere46","12105090splitHere46","final"
"4841splitHere46","12105090splitHere46","public class SwingExample {<newline46mondego><newline46mondego>    private JLabel lblLabel;    <newline46mondego>    private static SwingExample instance;    <newline46mondego><newline46mondego>    SwingExample() {<newline46mondego>        // code omitted<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLabel() {<newline46mondego>        lblLabel.setText(<doubleQuotes46>Bye Bye !!!<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                instance = new SwingExample();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        // ...<newline46mondego><newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>              instance.setLabel();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4842splitHere46","12105203splitHere46","// use semaphore to limit number of parallel threads<newline46mondego>semaphore.acquire();<newline46mondego>try {<newline46mondego>  doMyWork();<newline46mondego>}<newline46mondego>finally {<newline46mondego>  semaphore.release();<newline46mondego>}<newline46mondego>"
"4843splitHere46","12105297splitHere46","System.getProperty(<doubleQuotes46>sun.arch.data.model<doubleQuotes46>);<newline46mondego>"
"4844splitHere46","12105297splitHere46","sun.arch.data.model"
"4845splitHere46","12105353splitHere46","+-- MyProject<newline46mondego>+-- common-test-util<newline46mondego>|   +-- src<newline46mondego>|   |    +-- main<newline46mondego>|   |        +-- java<newline46mondego>|   +-- pom.xml<newline46mondego>+-- moduleA<newline46mondego>|   +-- src<newline46mondego>|   |    +-- main<newline46mondego>|   |    |   +-- java<newline46mondego>|   |    +-- test<newline46mondego>|   |        +-- java<newline46mondego>|   +-- pom.xml<newline46mondego>+-- moduleB<newline46mondego>|   +-- src<newline46mondego>|   |    +-- main<newline46mondego>|   |    |   +-- java<newline46mondego>|   |    +-- test<newline46mondego>|   |        +-- java<newline46mondego>|   +-- pom.xml<newline46mondego>+-- pom.xml<newline46mondego>"
"4846splitHere46","12105353splitHere46","common-test-util"
"4847splitHere46","12105353splitHere46","<scope>test</scope>"
"4848splitHere46","12105353splitHere46","mvn test<newline46mondego>"
"4849splitHere46","12105411splitHere46","Thread"
"4850splitHere46","12105411splitHere46","Runnable#Thread"
"4851splitHere46","12105411splitHere46","invokeLater()"
"4852splitHere46","12105436splitHere46","String hostName = InetAddress.getLocalHost().getHostName();<newline46mondego><newline46mondego>InetAddress addrs[] = InetAddress.getAllByName(hostName);<newline46mondego><newline46mondego>String myIp = <doubleQuotes46>UNKNOWN<doubleQuotes46>;<newline46mondego>for (InetAddress addr: addrs) {<newline46mondego>  System.out.println (<doubleQuotes46>addr.getHostAddress() = <doubleQuotes46> + addr.getHostAddress());<newline46mondego>  System.out.println (<doubleQuotes46>addr.getHostName() = <doubleQuotes46> + addr.getHostName());<newline46mondego>  System.out.println (<doubleQuotes46>addr.isAnyLocalAddress() = <doubleQuotes46> + addr.isAnyLocalAddress());<newline46mondego>  System.out.println (<doubleQuotes46>addr.isLinkLocalAddress() = <doubleQuotes46> + addr.isLinkLocalAddress());<newline46mondego>  System.out.println (<doubleQuotes46>addr.isLoopbackAddress() = <doubleQuotes46> + addr.isLoopbackAddress());<newline46mondego>  System.out.println (<doubleQuotes46>addr.isMulticastAddress() = <doubleQuotes46> + addr.isMulticastAddress());<newline46mondego>  System.out.println (<doubleQuotes46>addr.isSiteLocalAddress() = <doubleQuotes46> + addr.isSiteLocalAddress());<newline46mondego>  System.out.println (<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>  if (!addr.isLoopbackAddress() && addr.isSiteLocalAddress()) {<newline46mondego>    myIp = addr.getHostAddress();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4853splitHere46","12105491splitHere46","JTabbedPane"
"4854splitHere46","12105531splitHere46","Container parent = titleLabel.getParent();<newline46mondego>parent.scrollRectToVisible(parent.getBounds());<newline46mondego>"
"4855splitHere46","12105531splitHere46","final JLabel last = new JLabel(<doubleQuotes46>I'm the last<doubleQuotes46>);<newline46mondego><newline46mondego>int maxRow = 20;<newline46mondego>int maxColumn = 10;<newline46mondego><newline46mondego>JComponent content = new JPanel(new GridLayout(maxRow, maxColumn));<newline46mondego>for (int row = 0; row < maxRow; row++) {<newline46mondego>    for (int column = 0; column < maxColumn; column++) {<newline46mondego>        JComponent parent = new JPanel();<newline46mondego>        JLabel label = new JLabel(<doubleQuotes46>i'm in <doubleQuotes46> + row + <doubleQuotes46>/<doubleQuotes46> + column);<newline46mondego>        if (row == (maxRow - 1) && column == (maxColumn - 1)) {<newline46mondego>            label = last;<newline46mondego>            last.setBorder(BorderFactory.createLineBorder(Color.RED));<newline46mondego>        }<newline46mondego>        parent.add(label);<newline46mondego>        content.add(parent);<newline46mondego>    }<newline46mondego>}<newline46mondego>JXFrame frame = wrapWithScrollingInFrame(content, <doubleQuotes46>scroll<doubleQuotes46>);<newline46mondego>Action action = new AbstractAction(<doubleQuotes46>scrollLastVisible<doubleQuotes46>) {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        last.scrollRectToVisible(last.getBounds());<newline46mondego>    }<newline46mondego>};<newline46mondego>addAction(frame, action);<newline46mondego>show(frame, frame.getPreferredSize().width / 2, frame.getPreferredSize().height / 2);<newline46mondego>"
"4856splitHere46","12105711splitHere46","list.add(42, yourElement);<newline46mondego>list.remove(7);<newline46mondego>"
"4857splitHere46","12106188splitHere46","An inner class is implicitly associated with an instance of its outer class, it cannot define any static methods itself."
"4858splitHere46","12106188splitHere46","Foo"
"4859splitHere46","12106188splitHere46","test()"
"4860splitHere46","12106188splitHere46","Foo.test();<newline46mondego>"
"4861splitHere46","12106188splitHere46","Bar"
"4862splitHere46","12106188splitHere46","innerTest()"
"4863splitHere46","12106188splitHere46","Foo.Bar.innerTest();<newline46mondego>"
"4864splitHere46","12106188splitHere46","Bar"
"4865splitHere46","12106188splitHere46","static"
"4866splitHere46","12106188splitHere46","innertest"
"4867splitHere46","12106213splitHere46","parse.groovy"
"4868splitHere46","12106213splitHere46","import org.apache.maven.artifact.ant.shaded.xml.XmlStreamReader<newline46mondego>/**<newline46mondego> * @author maba, 2012-08-24<newline46mondego> */<newline46mondego><newline46mondego>def root = new XmlSlurper().parse(new XmlStreamReader(new File('path/to/data', 'data.xml')))<newline46mondego>def msgText = root.Param[2].ParamId.text()<newline46mondego>"
"4869splitHere46","12106213splitHere46","def root = new XmlSlurper().parseText(response.xmlText())<newline46mondego>"
"4870splitHere46","12106213splitHere46","response"
"4871splitHere46","12106213splitHere46","XmlTokenSource"
"4872splitHere46","12106213splitHere46","XmlBeans"
"4873splitHere46","12106213splitHere46","XmlHolder"
"4874splitHere46","12106213splitHere46","def root = new XmlSlurper().parseText(response.getXml())<newline46mondego>"
"4875splitHere46","12106243splitHere46","int num_of_record_inserted = fileAttachmentMapper.insertSelective(fileAttachment);<newline46mondego><newline46mondego>int id = fileAttachment.getId();<newline46mondego>"
"4876splitHere46","12106243splitHere46","selectKey"
"4877splitHere46","12106243splitHere46","fileAttachment"
"4878splitHere46","12106243splitHere46","id"
"4879splitHere46","12106337splitHere46","SingleThreadModel"
"4880splitHere46","12106491splitHere46","<dependency><newline46mondego>   <groupId>org.powermock</groupId><newline46mondego>   <artifactId>powermock-api-easymock</artifactId><newline46mondego>   <version>1.4.11</version><newline46mondego></dependency><newline46mondego>"
"4881splitHere46","12106623splitHere46","/** <newline46mondego>     This method determines if there is a sense in attempting to append. <newline46mondego><newline46mondego>     <p>It checks whether there is a set output target and also if <newline46mondego>     there is a set layout. If these checks fail, then the boolean <newline46mondego>     value <code>false</code> is returned. */  <newline46mondego><newline46mondego>  protected   boolean checkEntryConditions() {  <newline46mondego>    if(this.closed) {  <newline46mondego>      LogLog.warn(<doubleQuotes46>Not allowed to write to a closed appender.<doubleQuotes46>);  <newline46mondego>      return false;  <newline46mondego>    }  <newline46mondego><newline46mondego>    if(this.qw == null) {  <newline46mondego>      errorHandler.error(<doubleQuotes46>No output stream or file set for the appender named [<doubleQuotes46>+  <newline46mondego>            name+<doubleQuotes46>].<doubleQuotes46>);  <newline46mondego>      return false;  <newline46mondego>    }  <newline46mondego><newline46mondego>    if(this.layout == null) {  <newline46mondego>      errorHandler.error(<doubleQuotes46>No layout set for the appender named [<doubleQuotes46>+ name+<doubleQuotes46>].<doubleQuotes46>);  <newline46mondego>      return false;  <newline46mondego>    }  <newline46mondego>    return true;  <newline46mondego>  }  <newline46mondego>"
"4882splitHere46","12106678splitHere46","private static URLClassLoader resourceLoader= null;<newline46mondego><newline46mondego>/**<newline46mondego> * Initialize class loader.<newline46mondego> */<newline46mondego>static{<newline46mondego>    ClassLoader currentThreadClassLoader<newline46mondego>     = Thread.currentThread().getContextClassLoader();<newline46mondego><newline46mondego>    //assuming that current path is the project directory<newline46mondego>    try {<newline46mondego>        resourceLoader<newline46mondego>         = new URLClassLoader(new URL[]{new File(<doubleQuotes46>.<doubleQuotes46>).toURI().toURL()},<newline46mondego>                              currentThreadClassLoader);<newline46mondego>    } catch (MalformedURLException e) {<newline46mondego>        logger.error(e);<newline46mondego>    }   <newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Properties bundle name.<newline46mondego> */<newline46mondego>private static final String BUNDLE_NAME = <doubleQuotes46>resource.ExternalizedLogMessages<doubleQuotes46>; //$NON-NLS-1$<newline46mondego><newline46mondego>/**<newline46mondego> * Resource bundle object.<newline46mondego> */<newline46mondego>private static final ResourceBundle RESOURCE_BUNDLE = ResourceBundle<newline46mondego>        .getBundle(BUNDLE_NAME,Locale.US,resourceLoader);<newline46mondego>"
"4883splitHere46","12106795splitHere46","replaceAll()"
"4884splitHere46","12106795splitHere46","\s+$"
"4885splitHere46","12106795splitHere46","return cadena.replaceAll(<doubleQuotes46>\\s+$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4886splitHere46","12106795splitHere46","\\s"
"4887splitHere46","12106851splitHere46","//request for Connection came in <newline46mondego>ClientServerConnection csc = new ClientServerConnection(this, <doubleQuotes46>and everything you need, at least client IP for connecting the socket<doubleQuotes46>);<newline46mondego>csc.run(); //running in its own thread, of cause ClientServerConnection should extend Thread<newline46mondego>connectionList.add(csc); //a list of the connections the Server holds<newline46mondego>"
"4888splitHere46","12106851splitHere46","//A request to the use a functionality of the Server come in, in the easiest way you are sending a String, and than trying to match it here<newline46mondego>if(recievedString==<doubleQuotes46>doWhatever<doubleQuotes46>){<newline46mondego>Server server.doWhatever(); //calling the according method on the Server Object you passed by creation of the ClientServerConnection Object<newline46mondego>//now return something to the client, according to whatever the Method did <newline46mondego>}else if(recievedString==<doubleQuotes46>doSomethingElse<doubleQuotes46>){<newline46mondego>//same again, according to whatever the now requested method does<newline46mondego>}else{<newline46mondego>//the client requested something you do not provide, need some sort of handling here<newline46mondego>}<newline46mondego>"
"4889splitHere46","12107112splitHere46","www.google.com"
"4890splitHere46","12107119splitHere46","return"
"4891splitHere46","12107170splitHere46","_send.write(command+<doubleQuotes46> <doubleQuotes46>+param+<doubleQuotes46>\n<doubleQuotes46>); // Don't forget new line here!<newline46mondego>_send.flush();<newline46mondego>"
"4892splitHere46","12107170splitHere46","PrintWriter"
"4893splitHere46","12107170splitHere46","_send.println(command+<doubleQuotes46> <doubleQuotes46>+param);<newline46mondego>"
"4894splitHere46","12107170splitHere46","\n"
"4895splitHere46","12107170splitHere46","\r\n"
"4896splitHere46","12107238splitHere46","@XmlAccessorType(XmlAccessType.FIELD) <newline46mondego>public class Document {<newline46mondego>    @XmlElement<newline46mondego>    private String title;<newline46mondego>    @XmlElement<newline46mondego>    private String id;<newline46mondego>    @XmlElement<newline46mondego>    private int version;<newline46mondego>}  <newline46mondego><newline46mondego><newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class MapJson {<newline46mondego>    @XmlElement<newline46mondego>    private LinkedHashMap<String, String> documents; <newline46mondego>}  <newline46mondego>"
"4897splitHere46","12107238splitHere46","new org.codehaus.jackson.map.ObjectMapper().writeValueAsString(instanceofMapJson);  <newline46mondego>"
"4898splitHere46","12107238splitHere46","new com.google.gson.Gson().toJson(instanceofMapJson);  <newline46mondego>"
"4899splitHere46","12107399splitHere46","c.setBackground(Color.WHITE);"
"4900splitHere46","12107405splitHere46","String str = <doubleQuotes46>hello_how_are_you_?<doubleQuotes46><newline46mondego>String[] words = str.split(<doubleQuotes46>_<doubleQuotes46>);<newline46mondego>"
"4901splitHere46","12107405splitHere46","words[0]; // hello<newline46mondego>words[1]; // how<newline46mondego>words[2]; // are<newline46mondego>words[3]; // you<newline46mondego>words[4]; // ?<newline46mondego>"
"4902splitHere46","12107577splitHere46","Converter"
"4903splitHere46","12107645splitHere46","? extends Employee"
"4904splitHere46","12107841splitHere46","paintComponent()"
"4905splitHere46","12107841splitHere46","paint()"
"4906splitHere46","12107841splitHere46","JPanel"
"4907splitHere46","12107841splitHere46","JComponent"
"4908splitHere46","12107841splitHere46","Canvas"
"4909splitHere46","12107841splitHere46","java.awt.Canvas"
"4910splitHere46","12107841splitHere46","javax.swing.JPanel"
"4911splitHere46","12107841splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.util.Random;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JTextField;<newline46mondego><newline46mondego>public class MainCode {<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                MainView fc = new MainView();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private static class MainView implements ActionListener {<newline46mondego><newline46mondego>        private JFrame f = new JFrame();<newline46mondego>        private JButton colorButton = new JButton(<doubleQuotes46>Color<doubleQuotes46>);<newline46mondego>        private JButton quitButton = new JButton(<doubleQuotes46>Quit<doubleQuotes46>);<newline46mondego>        private JButton infoButton = new JButton(<doubleQuotes46>Info<doubleQuotes46>);<newline46mondego>        private JLabel x_loc = new JLabel(<doubleQuotes46>X:<doubleQuotes46>);<newline46mondego>        private JLabel y_loc = new JLabel(<doubleQuotes46>Y:<doubleQuotes46>);<newline46mondego>        private JLabel w_label = new JLabel(<doubleQuotes46>Width:<doubleQuotes46>);<newline46mondego>        private JLabel h_label = new JLabel(<doubleQuotes46>Height:<doubleQuotes46>);<newline46mondego>        private JTextField x_loc_box = new JTextField(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        private JTextField y_loc_box = new JTextField(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        private JTextField w_loc_box = new JTextField(<doubleQuotes46>100<doubleQuotes46>);<newline46mondego>        private JTextField h_loc_box = new JTextField(<doubleQuotes46>100<doubleQuotes46>);<newline46mondego>        private JOptionPane info1 = new JOptionPane();<newline46mondego>        private JPanel panel1 = new JPanel();<newline46mondego>        private JPanel panel2 = new JPanel();<newline46mondego>        private GraphicsClass graphicsClass = new GraphicsClass();<newline46mondego><newline46mondego>        public MainView() {<newline46mondego>            panel1.add(x_loc);<newline46mondego>            panel1.add(x_loc_box);<newline46mondego>            panel1.add(y_loc);<newline46mondego>            panel1.add(y_loc_box);<newline46mondego>            panel1.add(w_label);<newline46mondego>            panel1.add(w_loc_box);<newline46mondego>            panel1.add(h_label);<newline46mondego>            panel1.add(h_loc_box);<newline46mondego>            colorButton.addActionListener(this);<newline46mondego>            quitButton.addActionListener(this);<newline46mondego>            infoButton.addActionListener(this);<newline46mondego>            panel2.add(colorButton);<newline46mondego>            panel2.add(quitButton);<newline46mondego>            panel2.add(infoButton);<newline46mondego>            f.add(panel1, BorderLayout.NORTH);<newline46mondego>            f.add(graphicsClass, BorderLayout.CENTER);<newline46mondego>            f.add(panel2, BorderLayout.SOUTH);<newline46mondego>            f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            f.setTitle(<doubleQuotes46>Graphics Toolbox v2<doubleQuotes46>);<newline46mondego>            f.pack();<newline46mondego>            f.setLocationRelativeTo(null);<newline46mondego>            f.setVisible(true);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            if (e.getSource() == infoButton) {<newline46mondego>                JOptionPane.showMessageDialog(f, <doubleQuotes46>hahahahahaha<doubleQuotes46>);<newline46mondego>            } else if (e.getSource() == quitButton) {<newline46mondego>                System.exit(0);<newline46mondego>            } else if (e.getSource() == colorButton) {<newline46mondego>                graphicsClass.randomColor();<newline46mondego>                graphicsClass.repaint();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static class GraphicsClass extends JPanel {<newline46mondego><newline46mondego>        private static final int SIZE = 128;<newline46mondego>        private static final Random r = new Random();<newline46mondego>        private Color color = Color.green;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(SIZE, SIZE);<newline46mondego>        }<newline46mondego><newline46mondego>        public void randomColor() {<newline46mondego>            this.color = new Color(r.nextInt());<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            g.setColor(color);<newline46mondego>            int w = getWidth();<newline46mondego>            int h = getHeight();<newline46mondego>            g.fillArc(0, h / 4, w, h, 45, 90);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4912splitHere46","12107979splitHere46","HttpServletRequest httpRequest = (HttpServletRequest) request;<newline46mondego>String userIpAddress = httpRequest.getHeader(<doubleQuotes46>X-Forwarded-For<doubleQuotes46>);<newline46mondego>"
"4913splitHere46","12107979splitHere46","HTTP"
"4914splitHere46","12107979splitHere46","getHeader(<doubleQuotes46>X-Forwarded-For<doubleQuotes46>)"
"4915splitHere46","12107979splitHere46","<c:set var=<doubleQuotes46>userIp<doubleQuotes46> value=<doubleQuotes46>${requestScope.header('x-forwarded-for')}<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46> /><newline46mondego>"
"4916splitHere46","12107979splitHere46","<c:out value=<doubleQuotes46>${sessionScope.userIp}<doubleQuotes46> />"
"4917splitHere46","12107979splitHere46","session.getAttribute('userIp');"
"4918splitHere46","12107990splitHere46","db.things.findOne({name:<doubleQuotes46>mongo<doubleQuotes46>}, {type : 1});<newline46mondego>"
"4919splitHere46","12108082splitHere46","maven-plugin"
"4920splitHere46","12108082splitHere46",".<newline46mondego> |-- pom.xml<newline46mondego> |-- plugin<newline46mondego> |   `-- pom.xml<newline46mondego> |   `-- src<newline46mondego> |       `-- main<newline46mondego> |           `-- java<newline46mondego> `-- app<newline46mondego>     `-- pom.xml<newline46mondego>     `-- src<newline46mondego>         `-- main<newline46mondego>             `-- java<newline46mondego>"
"4921splitHere46","12108082splitHere46","pom.xml"
"4922splitHere46","12108082splitHere46","app"
"4923splitHere46","12108082splitHere46","pom.xml"
"4924splitHere46","12108082splitHere46","pom.xml"
"4925splitHere46","12108082splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46><newline46mondego>         xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>         xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego><newline46mondego>    <groupId>com.stackoverflow</groupId><newline46mondego>    <artifactId>Q12082277</artifactId><newline46mondego>    <version>1.0-SNAPSHOT</version><newline46mondego>    <packaging>pom</packaging><newline46mondego><newline46mondego>    <name>${project.artifactId}-${project.version}</name><newline46mondego><newline46mondego>    <modules><newline46mondego>        <module>plugin</module><newline46mondego>        <module>app</module><newline46mondego>    </modules><newline46mondego><newline46mondego></project><newline46mondego>"
"4926splitHere46","12108082splitHere46","plugin/pom.xml"
"4927splitHere46","12108082splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46><newline46mondego>         xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>         xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego><newline46mondego>    <parent><newline46mondego>        <groupId>com.stackoverflow</groupId><newline46mondego>        <artifactId>Q12082277</artifactId><newline46mondego>        <version>1.0-SNAPSHOT</version><newline46mondego>    </parent><newline46mondego><newline46mondego>    <artifactId>Q12082277-plugin</artifactId><newline46mondego>    <packaging>maven-plugin</packaging><newline46mondego><newline46mondego>    <name>${project.artifactId}-${project.version}</name><newline46mondego><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>org.apache.maven</groupId><newline46mondego>            <artifactId>maven-plugin-api</artifactId><newline46mondego>            <version>3.0.4</version><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>org.apache.maven</groupId><newline46mondego>            <artifactId>maven-project</artifactId><newline46mondego>            <version>2.2.1</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego></project><newline46mondego>"
"4928splitHere46","12108082splitHere46","plugin/src/main/java/com/stackoverflow/Q12082277/plugin/PropertiesMojo.java"
"4929splitHere46","12108082splitHere46","package com.stackoverflow.Q12082277.plugin;<newline46mondego><newline46mondego>import org.apache.maven.plugin.AbstractMojo;<newline46mondego>import org.apache.maven.plugin.MojoExecutionException;<newline46mondego>import org.apache.maven.plugin.MojoFailureException;<newline46mondego>import org.apache.maven.plugin.logging.Log;<newline46mondego>import org.apache.maven.project.MavenProject;<newline46mondego><newline46mondego>import java.io.File;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.Properties;<newline46mondego><newline46mondego>/**<newline46mondego> * @author maba, 2012-08-24<newline46mondego> *<newline46mondego> * @goal extract<newline46mondego> */<newline46mondego>public class PropertiesMojo extends AbstractMojo {<newline46mondego><newline46mondego>    private Log log;<newline46mondego><newline46mondego>    /**<newline46mondego>     * The current project representation.<newline46mondego>     * @parameter expression=<doubleQuotes46>${project}<doubleQuotes46><newline46mondego>     * @required<newline46mondego>     * @readonly<newline46mondego>     */<newline46mondego>    private MavenProject project;<newline46mondego><newline46mondego>    /**<newline46mondego>     * A properties file<newline46mondego>     *<newline46mondego>     * @parameter expression=<doubleQuotes46>${propertiesFile}<doubleQuotes46><newline46mondego>     * @required<newline46mondego>     */<newline46mondego>    private File propertiesFile;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void execute() throws MojoExecutionException, MojoFailureException {<newline46mondego>        log.info(<doubleQuotes46>Executing PropertiesMojo on <doubleQuotes46> + propertiesFile.getAbsolutePath());<newline46mondego><newline46mondego>        try {<newline46mondego>            Properties fileProperties = new Properties();<newline46mondego>            fileProperties.load(new FileInputStream(propertiesFile));<newline46mondego>            Properties projectProperties = project.getProperties();<newline46mondego>            for (Object key : fileProperties.keySet()) {<newline46mondego>                projectProperties.setProperty((String)key, (String) fileProperties.get(key));<newline46mondego>            }<newline46mondego>            project.getProperties().list(System.out);<newline46mondego>        } catch (FileNotFoundException e) {<newline46mondego>            throw new MojoFailureException(<doubleQuotes46>The file <doubleQuotes46> + propertiesFile.getAbsolutePath() + <doubleQuotes46> was not found!<doubleQuotes46>, e);<newline46mondego>        } catch (IOException e) {<newline46mondego>            log.error(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setLog(Log log) {<newline46mondego>        this.log = log;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4930splitHere46","12108082splitHere46","app/pom.xml"
"4931splitHere46","12108082splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46><newline46mondego>         xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>         xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego><newline46mondego>    <parent><newline46mondego>        <groupId>com.stackoverflow</groupId><newline46mondego>        <artifactId>Q12082277</artifactId><newline46mondego>        <version>1.0-SNAPSHOT</version><newline46mondego>    </parent><newline46mondego><newline46mondego>    <artifactId>Q12082277-app</artifactId><newline46mondego><newline46mondego>    <name>${project.artifactId}-${project.version}</name><newline46mondego><newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>                <groupId>com.stackoverflow</groupId><newline46mondego>                <artifactId>Q12082277-plugin</artifactId><newline46mondego>                <version>1.0-SNAPSHOT</version><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <phase>initialize</phase><newline46mondego>                        <goals><newline46mondego>                            <goal>extract</goal><newline46mondego>                        </goals><newline46mondego>                        <configuration><newline46mondego>                            <propertiesFile>${user.home}/my.properties</propertiesFile><newline46mondego>                        </configuration><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>            </plugin><newline46mondego>            <plugin><newline46mondego>                <groupId>org.codehaus.mojo</groupId><newline46mondego>                <artifactId>exec-maven-plugin</artifactId><newline46mondego>                <version>1.2.1</version><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <goals><newline46mondego>                            <goal>java</goal><newline46mondego>                        </goals><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>                <configuration><newline46mondego>                    <mainClass>com.stackoverflow.Q12082277.App</mainClass><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>        </plugins><newline46mondego>        <resources><newline46mondego>            <resource><newline46mondego>                <directory>src/main/resources</directory><newline46mondego>                <filtering>true</filtering><newline46mondego>            </resource><newline46mondego>        </resources><newline46mondego>    </build><newline46mondego></project><newline46mondego>"
"4932splitHere46","12108082splitHere46","app.properties"
"4933splitHere46","12108082splitHere46","app.properties"
"4934splitHere46","12108082splitHere46","app/src/main/resources/app.properties"
"4935splitHere46","12108082splitHere46","res.dir=${res.dir}<newline46mondego>resource.dir=${resource.dir}<newline46mondego>bin.dir=${bin.dir}<newline46mondego>cfg.dir=${cfg.dir}<newline46mondego>"
"4936splitHere46","12108082splitHere46","app.properties"
"4937splitHere46","12108082splitHere46","app/src/main/java/com/stackoverflow/Q12082277/App.java"
"4938splitHere46","12108082splitHere46","package com.stackoverflow.Q12082277;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.util.Properties;<newline46mondego><newline46mondego>/**<newline46mondego> * @author maba, 2012-08-23<newline46mondego> */<newline46mondego>public class App {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        ClassLoader loader = App.class.getClassLoader();<newline46mondego>        InputStream in = loader.getResourceAsStream(<doubleQuotes46>app.properties<doubleQuotes46>);<newline46mondego>        Properties properties = new Properties();<newline46mondego>        properties.load(in);<newline46mondego>        properties.list(System.out);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4939splitHere46","12108082splitHere46","mvn install<newline46mondego>"
"4940splitHere46","12108082splitHere46","app"
"4941splitHere46","12108082splitHere46","mvn exec:java<newline46mondego>"
"4942splitHere46","12108082splitHere46","-- listing properties --<newline46mondego>resource.dir=C://my/stuff/here<newline46mondego>cfg.dir=C://my/stuff/here/config<newline46mondego>bin.dir=C://my/stuff/here/bin<newline46mondego>res.dir=/my/stuff/here<newline46mondego>"
"4943splitHere46","12108142splitHere46","int counter2 = 0; // reset counter    <newline46mondego>for (Checkbox chk : allCheckboxes)  <newline46mondego>    {   <newline46mondego>       if (chk.isChecked() && isGreen(chk)) {<newline46mondego>           counter2++;<newline46mondego>       }  <newline46mondego>    }   <newline46mondego>    //...<newline46mondego>"
"4944splitHere46","12108142splitHere46","private boolean isGreen(Checkbox chk)  <newline46mondego>{  <newline46mondego> // return true is checkbox is green  <newline46mondego>}<newline46mondego>"
"4945splitHere46","12108247splitHere46","OrderedUnorderedList"
"4946splitHere46","12108247splitHere46","ListItem"
"4947splitHere46","12108247splitHere46","List"
"4948splitHere46","12108247splitHere46","/**<newline46mondego> * Adds an <CODE>Element</CODE> to the <CODE>List</CODE>.<newline46mondego> *<newline46mondego> * @param   o       the element to add.<newline46mondego> * @return true if adding the object succeeded<newline46mondego> * @since 5.0.1 (signature changed to use Element)<newline46mondego> */<newline46mondego>@Override<newline46mondego>public boolean add(final Element o) {<newline46mondego>    if (o instanceof ListItem) {<newline46mondego>        ListItem item = (ListItem) o;<newline46mondego>        if (this.numbered || this.lettered) {<newline46mondego>            Chunk chunk = new Chunk(this.preSymbol, this.symbol.getFont());<newline46mondego>            chunk.setAttributes(this.symbol.getAttributes());<newline46mondego>            int index = this.first + this.list.size();<newline46mondego>            if ( this.lettered )<newline46mondego>                chunk.append(RomanAlphabetFactory.getString(index, this.lowercase));<newline46mondego>            else<newline46mondego>                chunk.append(String.valueOf(index));<newline46mondego>            chunk.append(this.postSymbol);<newline46mondego>            item.setListSymbol(chunk);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            item.setListSymbol(this.symbol);<newline46mondego>        }<newline46mondego>        item.setIndentationLeft(this.symbolIndent, this.autoindent);<newline46mondego>        item.setIndentationRight(0);<newline46mondego>        return this.list.add(item);<newline46mondego>    }<newline46mondego>    else if (o instanceof List) {<newline46mondego>        List nested = (List) o;<newline46mondego>        nested.setIndentationLeft(nested.getIndentationLeft() + this.symbolIndent);<newline46mondego>        this.first--;<newline46mondego>        return this.list.add(nested);<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"4949splitHere46","12108247splitHere46","this.symbol.getFont()"
"4950splitHere46","12108247splitHere46","public class List implements TextElementArray, Indentable {<newline46mondego><newline46mondego>    [...]    <newline46mondego><newline46mondego>    /** This is the listsymbol of a list that is not numbered. */<newline46mondego>    protected Chunk symbol = new Chunk(<doubleQuotes46>- <doubleQuotes46>);<newline46mondego>"
"4951splitHere46","12108247splitHere46","Chunk"
"4952splitHere46","12108247splitHere46","Font"
"4953splitHere46","12108247splitHere46","<ol>"
"4954splitHere46","12108266splitHere46","1.5"
"4955splitHere46","12108266splitHere46","1.5.6"
"4956splitHere46","12108266splitHere46","1.5.6.7"
"4957splitHere46","12108266splitHere46","1.5.6.7.8"
"4958splitHere46","12108266splitHere46","12.60.70"
"4959splitHere46","12108266splitHere46","1.5"
"4960splitHere46","12108266splitHere46","."
"4961splitHere46","12108266splitHere46","1.5.6"
"4962splitHere46","12108266splitHere46","1.5"
"4963splitHere46","12108266splitHere46","."
"4964splitHere46","12108266splitHere46",".1.5"
"4965splitHere46","12108266splitHere46","(?!\.)(\d+(\.\d+)+)(?![\d\.])<newline46mondego>"
"4966splitHere46","12108266splitHere46","Pattern pattern    = Pattern.compile(<doubleQuotes46>(?!\\.)(\\d+(\\.\\d+)+)(?![\\d\\.])<doubleQuotes46>);<newline46mondego>Matcher matcher    = pattern.matcher(inputStr);<newline46mondego>boolean matchFound = matcher.find();<newline46mondego><newline46mondego>if (matchFound)<newline46mondego>{<newline46mondego>    String version = matcher.group(1);<newline46mondego>    System.out.println(<doubleQuotes46>Version number: <doubleQuotes46> + version);<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>No match for the input!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4967splitHere46","12108316splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego><project basedir=<doubleQuotes46>C:\Users\workspace\fm\src\com\fm\APIClient<doubleQuotes46> default=<doubleQuotes46>doc<doubleQuotes46> name=<doubleQuotes46>api docs<doubleQuotes46>><newline46mondego><target name=<doubleQuotes46>doc<doubleQuotes46> description=<doubleQuotes46>my docs<doubleQuotes46>><newline46mondego><javadoc destdir=<doubleQuotes46>C:\Users\workspace\fm\doc<doubleQuotes46> doctitle=<doubleQuotes46>Testing the Title<doubleQuotes46> verbose=<doubleQuotes46>on<doubleQuotes46> <newline46mondego>    use=<doubleQuotes46>true<doubleQuotes46> <newline46mondego>    classpath=<doubleQuotes46>F:\android SDK and eclipse\android-sdk-windows\platforms\android-10\android.jar;C:\Users\workspace\fm\libs<newline46mondego><newline46mondego>\android-query-full.0.22.10.jar;C:\Users\workspace\fm\libs\commons-httpclient-3.0.1.jar;C:\Users\workspace\fm\libs\gcm.jar;C:\Users\workspace\fm\libs\httpmime-4.1.jar;F:\android SDK and eclipse\android-sdk-windows\add-ons<newline46mondego><newline46mondego>\addon_google_apis_google_inc_8\libs\maps.jar<doubleQuotes46>  <newline46mondego>    sourcepath=<doubleQuotes46>C:\Users\workspace\fm\src;C:\Users\workspace\fm\gen<doubleQuotes46><newline46mondego>    packagenames=<doubleQuotes46>com.fm.APIClient<doubleQuotes46> <newline46mondego>    linkoffline=<doubleQuotes46>http://d.android.com/reference F:\android SDK and eclipse\android-sdk-windows\docs\reference<doubleQuotes46><newline46mondego>    stylesheetfile=<doubleQuotes46>F:\android SDK and eclipse\android-sdk-windows\docs\assets\android-developer-docs.css<doubleQuotes46><newline46mondego>    ><newline46mondego></javadoc><newline46mondego></target><newline46mondego></project><newline46mondego>"
"4968splitHere46","12108540splitHere46","new Thread(new Inner(parameter)).start();<newline46mondego>"
"4969splitHere46","12108540splitHere46","Thread t = new Thread(new Inner(parameter));<newline46mondego>t.start();<newline46mondego>"
"4970splitHere46","12108540splitHere46","t.join();"
"4971splitHere46","12108540splitHere46","Thread[] tArray = new Thread[n];<newline46mondego><newline46mondego>for (int j = 0; j < tArray .length; j++) {<newline46mondego><newline46mondego>//your code to start the thread goes here<newline46mondego><newline46mondego>}<newline46mondego>"
"4972splitHere46","12108540splitHere46","for (int j = 0; j < tarray .length; j++) {<newline46mondego><newline46mondego>tArray.join()<newline46mondego><newline46mondego>}<newline46mondego>"
"4973splitHere46","12108642splitHere46","Window -> Preferences -> Java Persistence -> JPA -> Errors/Warnings -> Attributes -> Cannot resolve attribute name"
"4974splitHere46","12108791splitHere46","View result= inflater.inflate(R.layout.activity_main, container);<newline46mondego>"
"4975splitHere46","12108791splitHere46","View result= inflater.inflate(R.layout.activity_main, container, false);<newline46mondego>"
"4976splitHere46","12108826splitHere46","-Xms"
"4977splitHere46","12108969splitHere46","WebDriver driver = new FirefoxDriver();<newline46mondego>JavascriptExecutor jse = (JavascriptExecutor)driver;<newline46mondego>WebElement actualYahooId = (WebElement)jse.executeScript(<doubleQuotes46>return document.getElementById('username');<doubleQuotes46>);<newline46mondego>WebElement expectedYahooId = (WebElement)jse.executeScript(<doubleQuotes46>return document.activeElement;<doubleQuotes46>);<newline46mondego>assertEquals(actualYahooId, expectedYahooId);<newline46mondego>"
"4978splitHere46","12109067splitHere46","put"
"4979splitHere46","12109067splitHere46","event.getData()"
"4980splitHere46","12109067splitHere46","event.getData()"
"4981splitHere46","12109067splitHere46","batch.put(event.getData())"
"4982splitHere46","12109082splitHere46","import java.util.concurrent.TimeUnit;<newline46mondego><newline46mondego>import play.*;<newline46mondego>import play.mvc.*;<newline46mondego>import play.mvc.Http.RequestHeader;<newline46mondego><newline46mondego>import static play.mvc.Results.*;<newline46mondego>import play.libs.Akka;<newline46mondego>import akka.actor.ActorSystem;<newline46mondego>import akka.actor.ActorRef;<newline46mondego>import akka.actor.UntypedActorFactory;<newline46mondego>import akka.actor.UntypedActor;<newline46mondego>import akka.actor.Props;<newline46mondego>import akka.actor.ActorRefFactory;<newline46mondego><newline46mondego>import akka.util.*;<newline46mondego>public class Global extends GlobalSettings {<newline46mondego><newline46mondego>    ActorRef tickActor;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onStart(Application app) {<newline46mondego>        Logger.info(<doubleQuotes46>D<doubleQuotes46>);<newline46mondego>        tickActor = Akka.system().actorOf((new Props().withCreator(new UntypedActorFactory() {<newline46mondego>              public UntypedActor create() {<newline46mondego>                    return new UntypedActor() {<newline46mondego>                      public void onReceive(Object message) {<newline46mondego>                        if (message.equals(<doubleQuotes46>Log<doubleQuotes46>)) {<newline46mondego>                                 //Do something<newline46mondego>                         // controllers.Application.log();<newline46mondego>                        } else {<newline46mondego>                          unhandled(message);<newline46mondego>                        }<newline46mondego>                      }<newline46mondego>                    };<newline46mondego>                  }<newline46mondego>                })));<newline46mondego>        Akka.system().scheduler().schedule(<newline46mondego>                  Duration.create(0, TimeUnit.MILLISECONDS),<newline46mondego>                  Duration.create(30, TimeUnit.MINUTES),<newline46mondego>                  tickActor, <newline46mondego>                  <doubleQuotes46>Log<doubleQuotes46><newline46mondego>                );<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"4983splitHere46","12109086splitHere46","longValue"
"4984splitHere46","12109086splitHere46","doubleValue"
"4985splitHere46","12109086splitHere46","long"
"4986splitHere46","12109086splitHere46","double"
"4987splitHere46","12109086splitHere46","long"
"4988splitHere46","12109086splitHere46","double"
"4989splitHere46","12109086splitHere46","double"
"4990splitHere46","12109086splitHere46","Object"
"4991splitHere46","12109089splitHere46","String date = <doubleQuotes46>Wed, 22 Aug 2012 06:29:31 +0530<doubleQuotes46>;<newline46mondego>String shortDate = date.substring(0, 16);<newline46mondego>"
"4992splitHere46","12109140splitHere46","encodeBase64String(byte[] data"
"4993splitHere46","12109140splitHere46","Base64"
"4994splitHere46","12109140splitHere46","decodeBase64String(String data)"
"4995splitHere46","12109214splitHere46","app/views/Helpers/bootstrapInput.scala.html"
"4996splitHere46","12109214splitHere46","@(elements: helper.FieldElements)<newline46mondego><newline46mondego>@*****************************************************<newline46mondego>* Generate input according to twitter bootsrap rules *<newline46mondego>******************************************************@<newline46mondego><div class=<doubleQuotes46>control-group @if(elements.hasErrors) {error}<doubleQuotes46>><newline46mondego>  <label class=<doubleQuotes46>control-label<doubleQuotes46> for=<doubleQuotes46>@elements.id<doubleQuotes46>>@elements.label</label><newline46mondego>  <div class=<doubleQuotes46>controls<doubleQuotes46>><newline46mondego>    @elements.input<newline46mondego>    <span class=<doubleQuotes46>help-inline<doubleQuotes46>>@elements.errors(elements.lang).mkString(<doubleQuotes46>, <doubleQuotes46>)</span><newline46mondego>  </div><newline46mondego></div><newline46mondego>"
"4997splitHere46","12109214splitHere46","@implicitField = @{ FieldConstructor(views.html.Helpers.bootstrapInput.f) }<newline46mondego>"
"4998splitHere46","12109282splitHere46","popup.getInvoker();<newline46mondego>"
"4999splitHere46","12109282splitHere46","/**<newline46mondego> * Returns whether the component is part of the parent's<newline46mondego> * container hierarchy. If a parent in the chain is of type <newline46mondego> * JPopupMenu, the parent chain of its invoker is walked.<newline46mondego> * <newline46mondego> * @param focusOwner<newline46mondego> * @param parent<newline46mondego> * @return true if the component is contained under the parent's <newline46mondego> *    hierarchy, coping with JPopupMenus.<newline46mondego> */<newline46mondego>public static boolean isDescendingFrom(Component focusOwner, Component parent) {<newline46mondego>    while (focusOwner !=  null) {<newline46mondego>        if (focusOwner instanceof JPopupMenu) {<newline46mondego>            focusOwner = ((JPopupMenu) focusOwner).getInvoker();<newline46mondego>            if (focusOwner == null) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if (focusOwner == parent) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        focusOwner = focusOwner.getParent();<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"5000splitHere46","12109284splitHere46","and()"
"5001splitHere46","12109284splitHere46","Triplestore.find.where().and(Expr.isNotNull(<doubleQuotes46>owningAdmin<doubleQuotes46>),Expr.eq(<doubleQuotes46>is_public<doubleQuotes46>, true)).findList();<newline46mondego>"
"5002splitHere46","12109284splitHere46","com.avaje.ebean.Expr"
"5003splitHere46","12109301splitHere46","// set global layout<newline46mondego>this.setLayout(new MigLayout(<doubleQuotes46>wrap 3, debug<doubleQuotes46>, null, <doubleQuotes46>[top]<doubleQuotes46>));<newline46mondego>"
"5004splitHere46","12109301splitHere46","this.add(getSearchPanel(), <doubleQuotes46>span 3, wrap, grow<doubleQuotes46>);<newline46mondego>"
"5005splitHere46","12109301splitHere46","final JLabel lblEmission = new JLabel(<doubleQuotes46>Show<doubleQuotes46>);<newline46mondego>final JTextField txtEmission = new JTextField(10);<newline46mondego>final JTextField txtEM = new JTextField(5);<newline46mondego><newline46mondego>this.add(lblEmission, <doubleQuotes46>width 2%, span 3, split 3<doubleQuotes46>);<newline46mondego>this.add(txtEmission, <doubleQuotes46>right,width 60%, growx<doubleQuotes46>);<newline46mondego>this.add(txtEM, <doubleQuotes46>width 38%, growx<doubleQuotes46>);<newline46mondego>"
"5006splitHere46","12109301splitHere46","SearchPanel"
"5007splitHere46","12109413splitHere46","public abstract class MyAsyncTask<R, T> extends AsyncTask<Void, Void, R> {<newline46mondego>    private Context context;<newline46mondego>    private MyProgressDialog dialog;<newline46mondego>    private OnAsyncTaskCompletedListener listener;<newline46mondego>    private T search;<newline46mondego>    private int task_id;<newline46mondego><newline46mondego>    public MyAsyncTask(int task_id, Context context,<newline46mondego>            OnAsyncTaskCompletedListener listener) {<newline46mondego>        super();<newline46mondego><newline46mondego>        this.context = context;<newline46mondego>        this.listener = listener;<newline46mondego>        this.task_id = task_id;<newline46mondego>    }<newline46mondego><newline46mondego>    public MyAsyncTask(int task_id, Context context,<newline46mondego>            OnAsyncTaskCompletedListener listener, T search) {<newline46mondego>        this(task_id, context, listener);<newline46mondego><newline46mondego>        this.search = search;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void attach(Context context, OnAsyncTaskCompletedListener listener) {<newline46mondego>        this.context = context;<newline46mondego>        this.listener = listener;<newline46mondego><newline46mondego>        processCreateDialog();<newline46mondego>    }<newline46mondego><newline46mondego>    protected void detach() {<newline46mondego>        processDismissDialog();<newline46mondego><newline46mondego>        if (context != null) {<newline46mondego>            context = null;<newline46mondego>        }<newline46mondego><newline46mondego>        if (listener != null) {<newline46mondego>            listener = null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPostExecute(R result) {<newline46mondego>        if (listener != null) {<newline46mondego>            listener.onAsyncTaskCompleted(task_id, result);<newline46mondego>        }<newline46mondego><newline46mondego>        detach();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPreExecute() {<newline46mondego>        processCreateDialog();<newline46mondego>    }<newline46mondego><newline46mondego>    private void processCreateDialog() {<newline46mondego>        if (context != null) {<newline46mondego>            dialog = MyProgressDialog.show(context, null, null, true, false);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void processDismissDialog() {<newline46mondego>        if (dialog != null) {<newline46mondego>            try {<newline46mondego>                dialog.dismiss();<newline46mondego>            } catch (Exception exception) {<newline46mondego>            }<newline46mondego><newline46mondego>            dialog = null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"5008splitHere46","12109413splitHere46","public class MyAsyncTaskimpl extends MyAsyncTask<Cursor, String> {<newline46mondego><newline46mondego>    public MyAsyncTaskimpl(int task_id, Context context,<newline46mondego>            OnAsyncTaskCompletedListener listener, String search) {<newline46mondego>        super(task_id, context, listener, search);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Cursor doInBackground(Void... params) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5009splitHere46","12109435splitHere46","\u00ed"
"5010splitHere46","12109435splitHere46","Ã­"
"5011splitHere46","12109435splitHere46","StringEscapeUtils"
"5012splitHere46","12109435splitHere46","String input = <doubleQuotes46>\\u00ed<doubleQuotes46>;<newline46mondego>String unescaped = StringEscapeUtils.unescapeJava(input);<newline46mondego>System.out.println(unescaped);<newline46mondego>"
"5013splitHere46","12109435splitHere46","Ã­<newline46mondego>"
"5014splitHere46","12109443splitHere46","CXF Servlet"
"5015splitHere46","12109443splitHere46","Web Service"
"5016splitHere46","12109443splitHere46","ServletContextListener"
"5017splitHere46","12109443splitHere46","contextInitialized"
"5018splitHere46","12109443splitHere46","ServletContextListener"
"5019splitHere46","12109443splitHere46","public class YourContextListener implements ServletContextListener {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void contextInitialized(ServletContextEvent sce) {      <newline46mondego>        //This method is called by the container on start up<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void contextDestroyed(ServletContextEvent sce) {        <newline46mondego>    }   <newline46mondego><newline46mondego>}<newline46mondego>"
"5020splitHere46","12109443splitHere46","web.xml"
"5021splitHere46","12109443splitHere46","<listener><newline46mondego>    <listener-class>your.package.YourContextListener</listener-class><newline46mondego></listener><newline46mondego>"
"5022splitHere46","12109443splitHere46","contextInitialized"
"5023splitHere46","12109443splitHere46","ServletContext context = sce.getServletContext();<newline46mondego>"
"5024splitHere46","12109691splitHere46","readUrl"
"5025splitHere46","12109691splitHere46","middle"
"5026splitHere46","12109691splitHere46","class"
"5027splitHere46","12109691splitHere46","td"
"5028splitHere46","12109691splitHere46","int tdIndex = readUrl.indexOf(<doubleQuotes46>&lt;td align=\<doubleQuotes46>left\<doubleQuotes46> valign=\<doubleQuotes46>middle\<doubleQuotes46> class=\<doubleQuotes46>celebrity-details-description-txt\<doubleQuotes46>><doubleQuotes46>);<newline46mondego>"
"5029splitHere46","12109691splitHere46","int tdIndex = readUrl.indexOf(<doubleQuotes46>class=\<doubleQuotes46>celebrity-details-description-txt\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"5030splitHere46","12109705splitHere46","FXMLLoader"
"5031splitHere46","12109705splitHere46","@Override<newline46mondego>public void initialize(URL url, ResourceBundle rb) {<newline46mondego>    topTabController.sessionLabel.setText(<doubleQuotes46>Real blabla<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>sessionLabel= <doubleQuotes46> + topTabController.sessionLabel.getText());<newline46mondego>}<newline46mondego>"
"5032splitHere46","12109738splitHere46","String"
"5033splitHere46","12109738splitHere46","Object"
"5034splitHere46","12109738splitHere46","public void setValue(Object aValue)"
"5035splitHere46","12109738splitHere46","Foo<Object>"
"5036splitHere46","12109738splitHere46","Foo<String>"
"5037splitHere46","12109738splitHere46","public class FooBar extends Bar {<newline46mondego>    public Foo<String> adapt() {<newline46mondego>        return new Foo<String>() {<newline46mondego>            public void setValue(String value) {<newline46mondego>                FooBar.this.setValue( value );<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5038splitHere46","12109738splitHere46","adapt()"
"5039splitHere46","12109738splitHere46","this"
"5040splitHere46","12109812splitHere46","T"
"5041splitHere46","12109812splitHere46","<T extends SomeSuperClass>"
"5042splitHere46","12109812splitHere46","Element"
"5043splitHere46","12109812splitHere46","visit(T t)"
"5044splitHere46","12109812splitHere46","T"
"5045splitHere46","12109812splitHere46","Visitor.visit(Element e)"
"5046splitHere46","12109812splitHere46","Visitor<SubElement>"
"5047splitHere46","12109812splitHere46","Element"
"5048splitHere46","12109812splitHere46","Element"
"5049splitHere46","12109812splitHere46","Visitor<Element>"
"5050splitHere46","12109812splitHere46","accept(Visitor<? extends Element> v)"
"5051splitHere46","12109812splitHere46","v"
"5052splitHere46","12109812splitHere46","Visitor<T>"
"5053splitHere46","12109812splitHere46","T extends Element"
"5054splitHere46","12109812splitHere46","Visitor<? extends Element>"
"5055splitHere46","12109883splitHere46","<doubleQuotes46>AES/CBC/NoPadding<doubleQuotes46>"
"5056splitHere46","12109883splitHere46","<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>"
"5057splitHere46","12109883splitHere46","getBytes()"
"5058splitHere46","12109883splitHere46","byte[] plainBytes = plaintextString.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"5059splitHere46","12109892splitHere46","String"
"5060splitHere46","12109892splitHere46","BigInteger"
"5061splitHere46","12109892splitHere46","int"
"5062splitHere46","12109892splitHere46","String"
"5063splitHere46","12109892splitHere46","int"
"5064splitHere46","12109892splitHere46","new BigInteger(theString.getBytes(<doubleQuotes46><doubleQuotes46>))"
"5065splitHere46","12109892splitHere46","hashCode"
"5066splitHere46","12109892splitHere46","String"
"5067splitHere46","12109892splitHere46","hashCode"
"5068splitHere46","12109932splitHere46","01110"
"5069splitHere46","12109932splitHere46","01111"
"5070splitHere46","12109953splitHere46","forkMode=never<newline46mondego>"
"5071splitHere46","12110115splitHere46","mvn clean install -DskipTests<newline46mondego>"
"5072splitHere46","12110211splitHere46","select p from Person p where not exists <newline46mondego>(select a from Person pe left join pe.addresses a where p = pe and a.id = ?1)<newline46mondego>"
"5073splitHere46","12110238splitHere46","X-UA-Compatible"
"5074splitHere46","12110238splitHere46","MSIE"
"5075splitHere46","12110238splitHere46","Trident"
"5076splitHere46","12110238splitHere46","X-UA-Compatible"
"5077splitHere46","12110238splitHere46","public void doFilter(ServletRequest request, ServletResponse response, <newline46mondego>        FilterChain filterChain) throws IOException, ServletException {<newline46mondego><newline46mondego>    HttpServletRequest httpReq = (HttpServletRequest)request;<newline46mondego>    String ua = httpReq.getHeader(<doubleQuotes46>User-Agent<doubleQuotes46>);<newline46mondego><newline46mondego>    Pattern patternEngineIE = Pattern.compile(<doubleQuotes46>.*Trident/(\\d).*<doubleQuotes46>);<newline46mondego>    Matcher mEngineIE = patternEngineIE.matcher(ua);<newline46mondego><newline46mondego>    if (mEngineIE.find()) {<newline46mondego>        int versionEngineIE = Integer.parseInt(mEngineIE.group(1));<newline46mondego>        switch (versionEngineIE) {<newline46mondego>        case 4:<newline46mondego>            ua = ua.replaceAll(<doubleQuotes46>MSIE 7.0<doubleQuotes46>, <doubleQuotes46>MSIE 8.0<doubleQuotes46>);<newline46mondego>            response.addHeader(<doubleQuotes46>X-UA-Compatible<doubleQuotes46>, <doubleQuotes46>IE=8<doubleQuotes46>);<newline46mondego>            break;<newline46mondego>        case 5:<newline46mondego>            ua = ua.replaceAll(<doubleQuotes46>MSIE 7.0<doubleQuotes46>, <doubleQuotes46>MSIE 9.0<doubleQuotes46>);<newline46mondego>            response.addHeader(<doubleQuotes46>X-UA-Compatible<doubleQuotes46>, <doubleQuotes46>IE=9<doubleQuotes46>);<newline46mondego>            break;<newline46mondego>        case 6:<newline46mondego>            ua = ua.replaceAll(<doubleQuotes46>MSIE 7.0<doubleQuotes46>, <doubleQuotes46>MSIE 10.0<doubleQuotes46>);<newline46mondego>            response.addHeader(<doubleQuotes46>X-UA-Compatible<doubleQuotes46>, <doubleQuotes46>IE=10<doubleQuotes46>);<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    httpReq.addHeader(<doubleQuotes46>User-Agent<doubleQuotes46>, ua);<newline46mondego>    filterChain.doFilter(httpReq, response);<newline46mondego>}<newline46mondego>"
"5078splitHere46","12110238splitHere46","Trident"
"5079splitHere46","12110238splitHere46","MSIE 7.0"
"5080splitHere46","12110238splitHere46","MSIE 8.0"
"5081splitHere46","12110238splitHere46","MSIE 9.0"
"5082splitHere46","12110256splitHere46","questionImg.setImageResource(R.drawable.wt_you_should_wear_2)<newline46mondego>"
"5083splitHere46","12110279splitHere46","\uFFFD"
"5084splitHere46","12110279splitHere46","\uFFFD"
"5085splitHere46","12110279splitHere46","testÃ¯Â¿Â½.txt"
"5086splitHere46","12110279splitHere46","test\uFFFD.txt"
"5087splitHere46","12110279splitHere46","test\uFFFD.txt"
"5088splitHere46","12110279splitHere46","testÃ¯Â¿Â½.txt"
"5089splitHere46","12110279splitHere46","ren test*.txt test.txt"
"5090splitHere46","12110279splitHere46","?"
"5091splitHere46","12110279splitHere46","\u003f"
"5092splitHere46","12110279splitHere46","new String( bytes )"
"5093splitHere46","12110296splitHere46","env = new Hashtable<String, String>();<newline46mondego>env.put(Context.INITIAL_CONTEXT_FACTORY, <doubleQuotes46>com.sun.jndi.ldap.LdapCtxFactory<doubleQuotes46>);<newline46mondego>env.put(Context.SECURITY_AUTHENTICATION, <doubleQuotes46>simple<doubleQuotes46>);<newline46mondego>env.put(Context.PROVIDER_URL, <doubleQuotes46><LDAP HOST><doubleQuotes46>);<newline46mondego>env.put(Context.SECURITY_PRINCIPAL, <doubleQuotes46><LDAP USER LOGIN><doubleQuotes46>);<newline46mondego>env.put(Context.SECURITY_CREDENTIALS, <doubleQuotes46><LDAP USER PASSWORD><doubleQuotes46>);<newline46mondego><newline46mondego>LdapContext context = new InitialLdapContext(env);<newline46mondego>// To get only 1000 results at a time.<newline46mondego>context.setRequestControls(<newline46mondego>    new Control[]{new PagedResultsControl(1000, Control.CRITICAL))});<newline46mondego><newline46mondego>String attrs = <doubleQuotes46><List of attrs to be retrieved for each matching LDAP entry><doubleQuotes46>;<newline46mondego>String base = <doubleQuotes46><Base of the search tree><doubleQuotes46>;<newline46mondego>String filter = <doubleQuotes46><Your filter><doubleQuotes46>;<newline46mondego>SearchControls controls = new SearchControls();<newline46mondego>controls.setSearchScope(SearchControls.SUBTREE_SCOPE);<newline46mondego>controls.setReturningAttributes(attrs);<newline46mondego>SearchResults searchResults;<newline46mondego>do {<newline46mondego>    searchResults = ctx.search(base, filter, controls);<newline46mondego>    while (searchResults.hasMoreElements()) {<newline46mondego>        // Process result.<newline46mondego>    }<newline46mondego>    // Process response controls to get the cookie <newline46mondego>    // and keep searching until it is null.<newline46mondego>}<newline46mondego>while (cookie is not null);<newline46mondego>"
"5094splitHere46","12110304splitHere46","Fragment-Host"
"5095splitHere46","12110475splitHere46","new Object() { ... }<newline46mondego>"
"5096splitHere46","12110475splitHere46","Object"
"5097splitHere46","12110475splitHere46","Object"
"5098splitHere46","12110475splitHere46","new ArrayList<String>(){{<newline46mondego>   add(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>   add(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>}};<newline46mondego>"
"5099splitHere46","12110616splitHere46","ChatClient"
"5100splitHere46","12110625splitHere46","try{<newline46mondego><newline46mondego>    if (cursor.getCount() != 1) { //HERE IS THE PROBLEM<newline46mondego>        return -1;<newline46mondego>    }<newline46mondego><newline46mondego>    int i = 0;<newline46mondego>    i++;<newline46mondego>    cursor.moveToFirst();<newline46mondego>   return cursor.getInt(0);<newline46mondego><newline46mondego>}finally{<newline46mondego>if(cursor != null)<newline46mondego>   cursor.close();<newline46mondego>}<newline46mondego>"
"5101splitHere46","12110942splitHere46","AbstractAction"
"5102splitHere46","12110960splitHere46","getButton"
"5103splitHere46","12110960splitHere46","ActionEvent.getSource()"
"5104splitHere46","12110960splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class TempProject extends Box{<newline46mondego>    /** Label to update with currently pressed keys */<newline46mondego>    JLabel output = new JLabel();<newline46mondego><newline46mondego>    public TempProject(){<newline46mondego>        super(BoxLayout.Y_AXIS);<newline46mondego>        for(char i = 'A'; i <= 'Z'; i++){<newline46mondego>            String buttonText = new Character(i).toString();<newline46mondego>            JButton button = getButton(buttonText);<newline46mondego>            add(button);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public JButton getButton(final String text){<newline46mondego>        final JButton button = new JButton(text);<newline46mondego>        button.addActionListener(new ActionListener(){<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                JOptionPane.showMessageDialog(null, <doubleQuotes46>You have clicked: <doubleQuotes46>+text);<newline46mondego>                //If you want to do something with the button:<newline46mondego>                button.setText(<doubleQuotes46>Clicked<doubleQuotes46>); // (can access button because it's marked as final)<newline46mondego>            }<newline46mondego>        });<newline46mondego>        return button;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                frame.setContentPane(new TempProject());    <newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>                new TempProject();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"5105splitHere46","12111067splitHere46","//access field s in the object<newline46mondego>jfieldID fid = (env)->GetFieldID(clazz, <doubleQuotes46>s<doubleQuotes46>, <doubleQuotes46>Ljava/lang/String;<doubleQuotes46>);<newline46mondego>if (fid == NULL) {<newline46mondego>    return; /* failed to find the field */<newline46mondego>}<newline46mondego><newline46mondego>jstring jstr = (env)->GetObjectField(obj, fid);<newline46mondego>jboolean iscopy;<newline46mondego>const char *str = (env)->GetStringUTFChars(jstr, &iscopy);<newline46mondego>if (str == NULL) {<newline46mondego>    return; // usually this means out of memory<newline46mondego>}<newline46mondego><newline46mondego>//use your string<newline46mondego>...<newline46mondego><newline46mondego>(env)->ReleaseStringUTFChars(jstr, str);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>//access integer field val in the object<newline46mondego>jfieldID ifld = (env)->GetFieldID(clazz, <doubleQuotes46>val<doubleQuotes46>, <doubleQuotes46>I<doubleQuotes46>);<newline46mondego>if (ifld == NULL) {<newline46mondego>    return; /* failed to find the field */<newline46mondego>}<newline46mondego>jint ival = env->GetIntField(obj, ifld);<newline46mondego>int value = (int)ival;<newline46mondego>"
"5106splitHere46","12111067splitHere46","JNIEnv"
"5107splitHere46","12111335splitHere46","int s = 5;<newline46mondego>int idx = 0;<newline46mondego><newline46mondego>while (idx < ArrayList2.size())<newline46mondego>{<newline46mondego>   if(ArrayList2.get(idx) == s)<newline46mondego>   {<newline46mondego>     // Remove item<newline46mondego>     ArrayList1.remove(idx);<newline46mondego>     ArrayList2.remove(idx);<newline46mondego>  }<newline46mondego>  else<newline46mondego>  {<newline46mondego>    ++idx;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5108splitHere46","12111373splitHere46","Canvas"
"5109splitHere46","12111373splitHere46","Canvas"
"5110splitHere46","12111373splitHere46","Canvas"
"5111splitHere46","12111373splitHere46","public class DrawObject {<newline46mondego><newline46mondego>    Paint paint = new Paint();<newline46mondego><newline46mondego>    public void setColor(int color) {<newline46mondego>        paint.setColor(color);<newline46mondego>    }<newline46mondego><newline46mondego>    // I want to draw an arrow to instead of a line<newline46mondego>    public void drawArrow(Canvas canvas, float startPointX, float startPointY, float endPointX, float endPointY) {<newline46mondego>        canvas.drawLine(startPointX, startPointY, endPointX, endPointY, paint);<newline46mondego>        // draw the rest of the arrow here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5112splitHere46","12111373splitHere46","public void onDraw(Canvas canvas){<newline46mondego>    drawObject.drawArrow(canvas, 10,10,100,100);<newline46mondego>            // I want to draw the arrow here but it is not working.<newline46mondego>}<newline46mondego>"
"5113splitHere46","12111465splitHere46","ProgressMonitor"
"5114splitHere46","12111465splitHere46","doSomethingAndUpdateProgress()"
"5115splitHere46","12111465splitHere46","ProgressMonitor"
"5116splitHere46","12111465splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class TempProject extends Box{<newline46mondego><newline46mondego>    public TempProject(){<newline46mondego>        super(BoxLayout.Y_AXIS);<newline46mondego>        final ProgressMonitor pm = new ProgressMonitor(this, <doubleQuotes46>checking<doubleQuotes46>, <doubleQuotes46>...<doubleQuotes46>, 0, 100);<newline46mondego>        final SwingWorker sw = new SwingWorker<Integer, Integer>()<newline46mondego>        {<newline46mondego>            protected Integer doInBackground() throws Exception <newline46mondego>            {<newline46mondego>                int i = 0;<newline46mondego>                //While still doing work and progress  monitor wasn't canceled<newline46mondego>                 while (i++ < 100 && !pm.isCanceled()) {<newline46mondego>                     System.out.println(i);<newline46mondego>                     publish(i);<newline46mondego>                     Thread.sleep(100);<newline46mondego>                 }<newline46mondego>                 return null;<newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>             @Override<newline46mondego>             protected void process(java.util.List<Integer> chunks) {<newline46mondego>                 for (int number : chunks) {<newline46mondego>                     pm.setProgress(number);<newline46mondego>                 }<newline46mondego>             }<newline46mondego><newline46mondego>        };<newline46mondego><newline46mondego>        sw.execute();<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>                frame.setContentPane(new TempProject());    <newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }   <newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"5117splitHere46","12111714splitHere46","java -jar MyJarFile.jar"
"5118splitHere46","12111714splitHere46","java MyCompiledClass"
"5119splitHere46","12111719splitHere46","private Recipe(Parcel in) {<newline46mondego>        id = in.readInt();<newline46mondego>        name =in.readString();<newline46mondego>        ingredients = in.readList();<newline46mondego>        method = in.readList();<newline46mondego>        comment = in.readString();<newline46mondego>        }<newline46mondego>"
"5120splitHere46","12111777splitHere46","OPCPackage"
"5121splitHere46","12111777splitHere46","WorkbookFactory"
"5122splitHere46","12111777splitHere46","OPCPackage"
"5123splitHere46","12111777splitHere46",".xlsx"
"5124splitHere46","12111777splitHere46","WorkbookFactory.create(InputStream input)"
"5125splitHere46","12111885splitHere46","final Statement statement = con.createStatement();<newline46mondego> final ResultSet result = statement.executeQuery(query1);<newline46mondego> //do stuff with the resultset<newline46mondego> //result.getString(something), see http://docs.oracle.com/javase/6/docs/api/java/sql/ResultSet.html<newline46mondego>"
"5126splitHere46","12111908splitHere46","List.toArray"
"5127splitHere46","12111908splitHere46","List<Contact> lstContacts"
"5128splitHere46","12111908splitHere46","Contact[] arrContacts = lstContacts.toArray(new Contact[0]);<newline46mondego>"
"5129splitHere46","12111969splitHere46","MyApi.ShowDialog"
"5130splitHere46","12111969splitHere46","ShowDialog"
"5131splitHere46","12111969splitHere46","MyDialog.ShowDialog()"
"5132splitHere46","12111969splitHere46","if(!CheckAccess())<newline46mondego>    MyDialog.Dispatcher.BeginInvoke(DeleageToShowDialog);<newline46mondego>"
"5133splitHere46","12111975splitHere46","public class RepositionTestActivity extends Activity {<newline46mondego><newline46mondego>    private ImageView imageView;<newline46mondego>    private Button button;<newline46mondego>    private SQLiteDatabase db;<newline46mondego>    private Cursor cursor;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.reposition_test_layout);<newline46mondego>        imageView = (ImageView)findViewById(R.id.android_image);<newline46mondego>        button = (Button)findViewById(R.id.reposition_button);<newline46mondego>        ViewTreeObserver viewTreeObserver = imageView.getViewTreeObserver();<newline46mondego>        if(viewTreeObserver.isAlive()) {<newline46mondego>            viewTreeObserver.addOnGlobalLayoutListener(new OnGlobalLayoutListener() {<newline46mondego>                public void onGlobalLayout() {<newline46mondego>                    db = openOrCreateDatabase(<doubleQuotes46>DB_DATING<doubleQuotes46>, MODE_PRIVATE, null);<newline46mondego>                    db.execSQL(<doubleQuotes46><doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>CREATE TABLE IF NOT EXISTS tbl_images (<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>   id INTEGER PRIMARY KEY AUTOINCREMENT,<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>   name VARCHAR(50) UNIQUE NOT NULL,<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>   scale_x FLOAT NOT NULL,<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>   scale_y FLOAT NOT NULL,<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>   trans_x FLOAT NOT NULL,<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>   trans_y FLOAT NOT NULL<doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>);<doubleQuotes46>);<newline46mondego>                    cursor = db.query(<doubleQuotes46>tbl_images<doubleQuotes46>, new String[] {<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>scale_x<doubleQuotes46>, <doubleQuotes46>scale_y<doubleQuotes46>, <doubleQuotes46>trans_x<doubleQuotes46>, <doubleQuotes46>trans_y<doubleQuotes46>}, <doubleQuotes46>name = \<doubleQuotes46>android\<doubleQuotes46><doubleQuotes46>, null, null, null, null);<newline46mondego>                    imageView.setScaleType(ScaleType.MATRIX);<newline46mondego>                    cursor.moveToNext();<newline46mondego>                    if(cursor.getCount() > 0) {<newline46mondego>                        Matrix matrix = new Matrix();<newline46mondego>                        matrix.postScale(cursor.getFloat(1), cursor.getFloat(2));<newline46mondego>                        matrix.postTranslate(cursor.getFloat(3), cursor.getFloat(4));<newline46mondego>                        imageView.setImageMatrix(matrix);<newline46mondego>                    }<newline46mondego>                    imageView.setOnTouchListener(new Touch(imageView.getImageMatrix()));<newline46mondego>                    button.setOnClickListener(new OnClickListener() {<newline46mondego>                        public void onClick(View view) {<newline46mondego>                            float[] values = new float[9];<newline46mondego>                            imageView.getImageMatrix().getValues(values);<newline46mondego>                            ContentValues contentValues = new ContentValues();<newline46mondego>                            contentValues.put(<doubleQuotes46>scale_x<doubleQuotes46>, values[Matrix.MSCALE_X]);<newline46mondego>                            contentValues.put(<doubleQuotes46>scale_y<doubleQuotes46>, values[Matrix.MSCALE_Y]);<newline46mondego>                            contentValues.put(<doubleQuotes46>trans_x<doubleQuotes46>, values[Matrix.MTRANS_X]);<newline46mondego>                            contentValues.put(<doubleQuotes46>trans_y<doubleQuotes46>, values[Matrix.MTRANS_Y]);<newline46mondego>                            if(cursor.getCount() > 0) {<newline46mondego>                                long count = db.update(<doubleQuotes46>tbl_images<doubleQuotes46>, contentValues, <doubleQuotes46>name = \<doubleQuotes46>android\<doubleQuotes46><doubleQuotes46>, null);<newline46mondego>                                Log.d(<doubleQuotes46>Update Count<doubleQuotes46>, <doubleQuotes46>===========> <doubleQuotes46> + count);<newline46mondego>                            }<newline46mondego>                            else {<newline46mondego>                                contentValues.put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>android<doubleQuotes46>);<newline46mondego>                                long count = db.insert(<doubleQuotes46>tbl_images<doubleQuotes46>, null, contentValues);<newline46mondego>                                Log.d(<doubleQuotes46>Insert Count<doubleQuotes46>, <doubleQuotes46>===========> <doubleQuotes46> + count);<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                    });<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5134splitHere46","12112069splitHere46","Axis2"
"5135splitHere46","12112069splitHere46","Axis"
"5136splitHere46","12112092splitHere46","<newline46mondego>"
"5137splitHere46","12112308splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    Display display = Display.getDefault();<newline46mondego>    Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new FillLayout());<newline46mondego><newline46mondego>    ScrolledComposite scrollComp = new ScrolledComposite(shell, SWT.V_SCROLL | SWT.H_SCROLL);<newline46mondego>    Composite innerComp = new Composite(scrollComp, SWT.NONE);<newline46mondego>    innerComp.setLayout(new GridLayout(4, true));<newline46mondego><newline46mondego>    for(int i = 0; i < 32; i++)<newline46mondego>        new Button(innerComp, SWT.PUSH).setText(<doubleQuotes46>Button<doubleQuotes46>);<newline46mondego><newline46mondego>    scrollComp.setMinHeight(innerComp.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);<newline46mondego>    scrollComp.setMinWidth(innerComp.computeSize(SWT.DEFAULT, SWT.DEFAULT).x);<newline46mondego>    scrollComp.setContent(innerComp);<newline46mondego>    scrollComp.setExpandHorizontal(true);<newline46mondego>    scrollComp.setExpandVertical(true);<newline46mondego>    scrollComp.setAlwaysShowScrollBars(true);<newline46mondego><newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego><newline46mondego>    shell.setSize(200, 200);<newline46mondego><newline46mondego>    while(!shell.isDisposed())<newline46mondego>    {<newline46mondego>        if(!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5138splitHere46","12112308splitHere46","GridLayout"
"5139splitHere46","12112508splitHere46","@JsonCreator<newline46mondego>public static MyKey fromJSON(String val) throws JsonParseException, JsonMappingException, IOException {<newline46mondego>    return new MyKey(val);<newline46mondego>}<newline46mondego>"
"5140splitHere46","12112508splitHere46","MyKey a = mapper.readValue(val,MyKey .class);<newline46mondego>"
"5141splitHere46","12112527splitHere46","replaceAll(<doubleQuotes46>/|\\..*<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"5142splitHere46","12112601splitHere46","private HttpEntity makeAllUppercase(final HttpEntity entity)<newline46mondego>{<newline46mondego>    Header h = entity.getContentType();<newline46mondego>    ContentType contentType = h != null ? ContentType.parse(h.getValue()) : ContentType.DEFAULT_TEXT;<newline46mondego>    String content = EntityUtils.toString(entity, contentType.getCharset());<newline46mondego>    return new StringEntity(content.toUpperCase(Locale.US), contentType);<newline46mondego>}<newline46mondego>"
"5143splitHere46","12112615splitHere46","try {<newline46mondego>                    Thread.sleep(1000/60);<newline46mondego>                } catch (InterruptedException e) {<newline46mondego>                    // TODO Auto-generated catch block<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>"
"5144splitHere46","12112615splitHere46","start()"
"5145splitHere46","12112615splitHere46","stop()"
"5146splitHere46","12112640splitHere46","getNextObject()"
"5147splitHere46","12112640splitHere46","getNextTextScanner()"
"5148splitHere46","12112719splitHere46","i=i++;"
"5149splitHere46","12112719splitHere46","i++"
"5150splitHere46","12112719splitHere46","i=i++"
"5151splitHere46","12112719splitHere46","i++;"
"5152splitHere46","12112822splitHere46","File.separator"
"5153splitHere46","12112822splitHere46","File"
"5154splitHere46","12112822splitHere46","FileUtils"
"5155splitHere46","12112835splitHere46","createButtonArea()"
"5156splitHere46","12112835splitHere46","createButtonsForButtonBar"
"5157splitHere46","12112835splitHere46","/**<newline46mondego> * Create contents of the button bar.<newline46mondego> * @param parent<newline46mondego> */<newline46mondego>@Override<newline46mondego>protected void createButtonsForButtonBar(Composite parent) {<newline46mondego>    createButton(parent, IDialogConstants.OK_ID, <doubleQuotes46>Test Button<doubleQuotes46>,<newline46mondego>            true);<newline46mondego>    createButton(parent, IDialogConstants.CANCEL_ID,<newline46mondego>            IDialogConstants.CANCEL_LABEL, false);<newline46mondego>}<newline46mondego>"
"5158splitHere46","12112863splitHere46","ObjectInputStream"
"5159splitHere46","12112863splitHere46","ByteArrayOutputStream"
"5160splitHere46","12112931splitHere46","LinearLayout linLayout = (LinearLayout) view.findViewById(R.id.menuTabs);"
"5161splitHere46","12112994splitHere46","public class Response {<newline46mondego>    private String kind;<newline46mondego>    private ResponseData data;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5162splitHere46","12112994splitHere46","ResponseData"
"5163splitHere46","12112994splitHere46","public class ResponseData {<newline46mondego>    private String modhash;<newline46mondego>    private List<ResponseChildData> children; // I imagine this is where you're having<newline46mondego>                                              // some confusion. You can use a list here<newline46mondego>                                              // and you should be fine.<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5164splitHere46","12112994splitHere46","ResponseChildData"
"5165splitHere46","12112994splitHere46","public class ResponseChildData {<newline46mondego>    private String kind;<newline46mondego>    private ChildData data; // This could be a Map<String, String>, but then you'd<newline46mondego>                            // possibly lose type information. I haven't used GSON <newline46mondego>                            // enough to know if it would balk when it sees that some<newline46mondego>                            // values are int and boolean and refuse to deserialize.<newline46mondego>                            // Using a specific type here is probably better anyway<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5166splitHere46","12112994splitHere46","ChildData"
"5167splitHere46","12112994splitHere46","public class ChildData {<newline46mondego>    private String domain;<newline46mondego>    private String banned_by;<newline46mondego>    ...<newline46mondego>    ...<newline46mondego>    private int ups;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5168splitHere46","12112994splitHere46","Gson gson = new Gson();    <newline46mondego>Response target2 = gson.fromJson(objectName, Response.class);<newline46mondego>"
"5169splitHere46","12113026splitHere46","getUrl = (String) request.getAttribute(<doubleQuotes46>url<doubleQuotes46>);<newline46mondego>"
"5170splitHere46","12113026splitHere46","getUrl = request.getParameter(<doubleQuotes46>url<doubleQuotes46>);<newline46mondego>"
"5171splitHere46","12113026splitHere46","url"
"5172splitHere46","12113026splitHere46","encodeURIComponent()"
"5173splitHere46","12113026splitHere46","data"
"5174splitHere46","12113026splitHere46","$.getJSON()"
"5175splitHere46","12113106splitHere46","public void handle(some parameters) {<newline46mondego>    //handle params<newline46mondego>}<newline46mondego>public void handle() {<newline46mondego>    handle(null, null, -1, w/e);<newline46mondego>}<newline46mondego>"
"5176splitHere46","12113113splitHere46","Planet p = new Planet();<newline46mondego>p.setName(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>IPlanet ip = getProxy(IPlanet.class, p);<newline46mondego>Genson genson = new Genson();<newline46mondego>System.out.println(genson.serialize(ip));<newline46mondego>"
"5177splitHere46","12113176splitHere46","public void printBackward(int n) {<newline46mondego><newline46mondego>    if (n > 0) {<newline46mondego>        ListIterator<E> itr = listIterator(); /** Initialisation 1 **/          <newline46mondego>        int count = 0; /** Initialisation 2 **/<newline46mondego><newline46mondego>        E item;<newline46mondego>        while (itr.hasNext()) {<newline46mondego>            /** Block 1 **/             <newline46mondego>            item = itr.next();<newline46mondego>            if (++count == n) {<newline46mondego>                System.out.println(item); //prints here<newline46mondego>                printBackward(n-1);<newline46mondego>            }               <newline46mondego>        }<newline46mondego>        /** Block 2 **/<newline46mondego>        // nothing<newline46mondego>    } else {            <newline46mondego>        /** Block 3 **/<newline46mondego>        // nothing<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5178splitHere46","12113176splitHere46","java.util.LinkedList"
"5179splitHere46","12113176splitHere46","java.util.ListIterator"
"5180splitHere46","12113176splitHere46","public static void main(String[] args) {<newline46mondego>    MyLinkedList<String> list = new MyLinkedList<String>();<newline46mondego>    list.add(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>    list.add(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>    list.add(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego>    list.printBackward(list.size());<newline46mondego>}<newline46mondego>"
"5181splitHere46","12113217splitHere46","replace"
"5182splitHere46","12113217splitHere46","@Override<newline46mondego>    public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException<newline46mondego>    {<newline46mondego>        if(fb.getDocument().getLength()+text.length()>numberOfLetters)<newline46mondego>        {<newline46mondego>            return;<newline46mondego>        }<newline46mondego><newline46mondego>        super.insertString(fb, offset, text, attrs);<newline46mondego>    }<newline46mondego>"
"5183splitHere46","12113217splitHere46","super.insertString"
"5184splitHere46","12113217splitHere46","super.replace"
"5185splitHere46","12113217splitHere46","setText"
"5186splitHere46","12113217splitHere46","replace"
"5187splitHere46","12113342splitHere46","ValidationResult"
"5188splitHere46","12113342splitHere46","boolean"
"5189splitHere46","12113342splitHere46","boolean"
"5190splitHere46","12113342splitHere46","boolean isValid(Foo foo) {<newline46mondego>    validate(foo).isValid();<newline46mondego>}<newline46mondego><newline46mondego>ValidationResult validate(Foo foo) {<newline46mondego>    //logging and <doubleQuotes46>real<doubleQuotes46> validation<newline46mondego>}<newline46mondego>"
"5191splitHere46","12113384splitHere46","public class ModelA extends Observable {<newline46mondego><newline46mondego>   public void notify() {<newline46mondego>       this.setChanged();<newline46mondego>       this.notifyObservers(new ArrayList<A>());<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>public class ModelB extends Observable {<newline46mondego><newline46mondego>   public void notify() {<newline46mondego>       this.setChanged();<newline46mondego>       this.notifyObservers(new ArrayList<B>());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5192splitHere46","12113440splitHere46","<target name=<doubleQuotes46>Helloworld<doubleQuotes46> description=<doubleQuotes46>Hello world<doubleQuotes46>><newline46mondego>    <java classname=<doubleQuotes46>your.package.Helloworld<doubleQuotes46>><newline46mondego>        <arg value=<doubleQuotes46>arg1<doubleQuotes46>/><newline46mondego>        <arg value=<doubleQuotes46>arg2<doubleQuotes46>/><newline46mondego>        ...<newline46mondego>    </java><newline46mondego></target><newline46mondego>"
"5193splitHere46","12113440splitHere46","<arg value=<doubleQuotes46>...<doubleQuotes46>/>"
"5194splitHere46","12113440splitHere46","main( String[] args )"
"5195splitHere46","12113440splitHere46","Helloworld"
"5196splitHere46","12113488splitHere46","public class User {<newline46mondego>  private String firstName;<newline46mondego>  private String lastName;<newline46mondego>  // etc.<newline46mondego><newline46mondego>  public User(String firstName, String lastName /*etc.*/){<newline46mondego>    this.firstName = firstName;<newline46mondego>    this.lastName = lastName;<newline46mondego>    // etc.<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5197splitHere46","12113488splitHere46","userInfo"
"5198splitHere46","12113488splitHere46","ArrayList<User> userInfo = new ArrayList<User>();<newline46mondego>userInfo.add( new User(<doubleQuotes46>Some<doubleQuotes46>, <doubleQuotes46>Guy<doubleQuotes46> /*...*/) );<newline46mondego>"
"5199splitHere46","12113503splitHere46","Path path = new Path(<doubleQuotes46>/icons/doodledebug-icon.png<doubleQuotes46>);<newline46mondego>"
"5200splitHere46","12113544splitHere46","JAVA.CHANNEL"
"5201splitHere46","12113544splitHere46","mqm"
"5202splitHere46","12113544splitHere46","ALTER QMGR CHLAUTH(DISABLED)"
"5203splitHere46","12113544splitHere46","runmqsc"
"5204splitHere46","12113544splitHere46","mquser"
"5205splitHere46","12113544splitHere46","mquser"
"5206splitHere46","12113544splitHere46","mquser"
"5207splitHere46","12113544splitHere46","mqm"
"5208splitHere46","12113544splitHere46","SET CHLAUTH('JAVA.CHANNEL') TYPE(USERMAP) +<newline46mondego>    CLNTUSER('mquser') USERSRC(MAP) +<newline46mondego>    MCAUSER('mquser') ACTION(ADD) <newline46mondego>"
"5209splitHere46","12113544splitHere46","mquser"
"5210splitHere46","12113544splitHere46","JAVA.CHANNEL"
"5211splitHere46","12113544splitHere46","mquser"
"5212splitHere46","12113544splitHere46","setmqaut"
"5213splitHere46","12113544splitHere46","-g"
"5214splitHere46","12113544splitHere46","-p"
"5215splitHere46","12113544splitHere46","ALTER QMGR AUTHOREV(ENABLED)"
"5216splitHere46","12113544splitHere46","SYSTEM.ADMIN.QMGR.EVENT"
"5217splitHere46","12113555splitHere46","ArrayVisualizer"
"5218splitHere46","12113555splitHere46","T<String>"
"5219splitHere46","12113555splitHere46","class ArrayVisualizer<E, T extends IterableCollection<E>> {<newline46mondego>  public void draw(T vector) { ... }<newline46mondego>}<newline46mondego>"
"5220splitHere46","12113555splitHere46","Iterable"
"5221splitHere46","12113555splitHere46","Collection"
"5222splitHere46","12113555splitHere46","IterableCollection"
"5223splitHere46","12113590splitHere46","String"
"5224splitHere46","12113590splitHere46","wordList[0] = myString;<newline46mondego>"
"5225splitHere46","12113590splitHere46","myString"
"5226splitHere46","12113711splitHere46","proc(5)"
"5227splitHere46","12113711splitHere46","sysctl(2)"
"5228splitHere46","12113826splitHere46","# sqlite3<newline46mondego>SQLite version 3.7.11 2012-03-20 11:35:50<newline46mondego>Enter <doubleQuotes46>.help<doubleQuotes46> for instructions<newline46mondego>Enter SQL statements terminated with a <doubleQuotes46>;<doubleQuotes46><newline46mondego>sqlite> create table foo (i text);<newline46mondego>sqlite> insert into foo values ('a');<newline46mondego>sqlite> insert into foo values ('b');<newline46mondego>sqlite> .dump<newline46mondego>PRAGMA foreign_keys=OFF;<newline46mondego>BEGIN TRANSACTION;<newline46mondego>CREATE TABLE foo (i text);<newline46mondego>INSERT INTO foo VALUES('a');<newline46mondego>INSERT INTO foo VALUES('b');<newline46mondego>COMMIT;<newline46mondego>"
"5229splitHere46","12113913splitHere46","MangaItemDB.mangaCount = String.valueOf(int mangaCount);<newline46mondego>"
"5230splitHere46","12113913splitHere46","MangaItemDB.mangaCount = String.valueOf(mangaCount);<newline46mondego>"
"5231splitHere46","12113913splitHere46","MangaItemDB.mangaCount = String.valueOf(mangaCount);<newline46mondego>MangaItemDB.alphaCount = Integer.toString(getAlphaCount());<newline46mondego>MangaItemDB.mangaComplete = String.valueOf(getMangaComplete());<newline46mondego>"
"5232splitHere46","12113913splitHere46","MangaItemDB.mangaCount = mangaCount;<newline46mondego>MangaItemDB.alphaCount = getAlphaCount();<newline46mondego>MangaItemDB.mangaComplete = getMangaComplete();<newline46mondego>"
"5233splitHere46","12114010splitHere46","@Local"
"5234splitHere46","12114089splitHere46","Pill"
"5235splitHere46","12114101splitHere46","WEB-INF"
"5236splitHere46","12114101splitHere46","/WEB-INF/web.xml"
"5237splitHere46","12114105splitHere46","google-api-client-1.10.3-beta.jar<newline46mondego>google-oauth-client-1.10.3-beta.jar<newline46mondego>google-http-client-1.10.3-beta.jar<newline46mondego>commons-logging-1.1.1.jar<newline46mondego>gson-2.1.jar<newline46mondego>guava-11.0.1.jar<newline46mondego>httpclient-4.0.3.jar<newline46mondego>httpcore-4.0.1.jar<newline46mondego>jackson-core-asl-1.9.4.jar<newline46mondego>jsr305-1.3.9.jar<newline46mondego>protobuf-java-2.2.0.jar<newline46mondego>xpp3-1.1.4c.jar<newline46mondego>"
"5238splitHere46","12114136splitHere46","java -classpath <myclasspath> com.silly.project.ClassWithMainMethod <arguments><newline46mondego>"
"5239splitHere46","12114138splitHere46","Process proc = rt.exec( new String [] {<doubleQuotes46>C:\\cygwin\\bin\\bash.exe<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, <doubleQuotes46>C:\\scripts\\login.exp<doubleQuotes46>});"
"5240splitHere46","12114138splitHere46","<doubleQuotes46>-c<doubleQuotes46>"
"5241splitHere46","12114138splitHere46","Process proc = rt.exec( new String [] {<doubleQuotes46>C:\\scripts\\login.exp<doubleQuotes46>});"
"5242splitHere46","12114399splitHere46","resultSet.absolute(...);"
"5243splitHere46","12114399splitHere46","resultSet.absolute(table.getSelectedRow());"
"5244splitHere46","12114399splitHere46","dTableModel.removeRow(table.getSelectedRow());"
"5245splitHere46","12114399splitHere46","resultSet.absolute(table.getSelectedRow());"
"5246splitHere46","12114399splitHere46","table.getSelectedRow()"
"5247splitHere46","12114399splitHere46","absolute(-1)"
"5248splitHere46","12114399splitHere46","resultSet.deleteRow();"
"5249splitHere46","12114399splitHere46","JButton removeEmployee = new JButton(<doubleQuotes46>Remove Selected<doubleQuotes46>);<newline46mondego>    removeEmployee.addActionListener(new ActionListener()<newline46mondego>    {<newline46mondego>      public void actionPerformed(ActionEvent e)<newline46mondego>      {<newline46mondego>        try<newline46mondego>        {/* here I added +1 because it moves the row to the selected row -1 <newline46mondego>            I don't know why. But it now works well */<newline46mondego>          resultSet.absolute(table.getSelectedRow()+1);<newline46mondego>          resultSet.deleteRow();<newline46mondego>          dTableModel.removeRow(table.getSelectedRow());<newline46mondego>        } catch (SQLException e1)<newline46mondego>        {<newline46mondego>          e1.printStackTrace();<newline46mondego>        }<newline46mondego>      }<newline46mondego>    });<newline46mondego>"
"5250splitHere46","12114454splitHere46","session.createCriteria(patient.class)"
"5251splitHere46","12114467splitHere46","FileInputStream"
"5252splitHere46","12114467splitHere46","InputStream"
"5253splitHere46","12114467splitHere46","ClassLoader#getResourceAsStream()"
"5254splitHere46","12114467splitHere46","FileInputStream"
"5255splitHere46","12114467splitHere46","foo.ext"
"5256splitHere46","12114467splitHere46","DataManager"
"5257splitHere46","12114467splitHere46","InputStream"
"5258splitHere46","12114467splitHere46","InputStream input = getClass().getResourceAsStream(<doubleQuotes46>foo.ext<doubleQuotes46>);<newline46mondego>"
"5259splitHere46","12114467splitHere46","static"
"5260splitHere46","12114467splitHere46","InputStream input = DataManager.class.getResourceAsStream(<doubleQuotes46>foo.ext<doubleQuotes46>);<newline46mondego>"
"5261splitHere46","12114467splitHere46","foo.ext"
"5262splitHere46","12114467splitHere46","com.example"
"5263splitHere46","12114467splitHere46","InputStream"
"5264splitHere46","12114467splitHere46","/"
"5265splitHere46","12114467splitHere46","InputStream input = getClass().getResourceAsStream(<doubleQuotes46>/com/example/foo.ext<doubleQuotes46>);<newline46mondego>"
"5266splitHere46","12114467splitHere46","getClass()"
"5267splitHere46","12114467splitHere46","Foo.class"
"5268splitHere46","12114467splitHere46","ClassLoader"
"5269splitHere46","12114467splitHere46","ClassLoader"
"5270splitHere46","12114467splitHere46","/"
"5271splitHere46","12114467splitHere46","InputStream input = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>com/example/foo.ext<doubleQuotes46>);<newline46mondego>"
"5272splitHere46","12114489splitHere46","Row r = sheet.getRow(9); // 10-1<newline46mondego>if (r == null) {<newline46mondego>   // First cell in the row, create<newline46mondego>   r = sheet.createRow(9);<newline46mondego>}<newline46mondego><newline46mondego>Cell c = r.getCell(3); // 4-1<newline46mondego>if (c == null) {<newline46mondego>    // New cell<newline46mondego>    c = r.createCell(3, Cell.CELL_TYPE_NUMERIC);<newline46mondego>}<newline46mondego>c.setCellValue(100);<newline46mondego>"
"5273splitHere46","12114639splitHere46","java.lang"
"5274splitHere46","12114639splitHere46","@Deprecated"
"5275splitHere46","12114639splitHere46","@Override"
"5276splitHere46","12114639splitHere46","@SuppressWarnings"
"5277splitHere46","12114639splitHere46","@SafeVarargs"
"5278splitHere46","12114639splitHere46","java.lang.annotation"
"5279splitHere46","12114639splitHere46","javax.annotation"
"5280splitHere46","12114659splitHere46","<mvc:annotation-driven/>"
"5281splitHere46","12114659splitHere46","<mvc:interceptors..>"
"5282splitHere46","12114659splitHere46","<mvc:interceptors><newline46mondego>    <bean class=<doubleQuotes46>..<doubleQuotes46>/><newline46mondego></mvc:interceptors><newline46mondego>"
"5283splitHere46","12114659splitHere46","<mvc:interceptors><newline46mondego>    <mvc:interceptor><newline46mondego>        <mvc:mapping path=<doubleQuotes46>/test<doubleQuotes46>/><newline46mondego>        <bean class=<doubleQuotes46>test<doubleQuotes46>></bean><newline46mondego>    </mvc:interceptor><newline46mondego></mvc:interceptors><newline46mondego>"
"5284splitHere46","12114659splitHere46","RequestMappingHandlerMapping"
"5285splitHere46","12114659splitHere46","mvc:annotation-driven"
"5286splitHere46","12114699splitHere46","int result = 1;<newline46mondego>for (int i = from; i <= to; i++) result *= i;<newline46mondego>System.out.println(<doubleQuotes46>Result is <doubleQuotes46> + result);<newline46mondego>"
"5287splitHere46","12114699splitHere46","while"
"5288splitHere46","12114699splitHere46","int result = 1, i = from;<newline46mondego>while (i <= to) result *= i++;<newline46mondego>System.out.println(<doubleQuotes46>Result is <doubleQuotes46> + result);<newline46mondego>"
"5289splitHere46","12114934splitHere46","-injars       calc.jar<newline46mondego>-outjars      calc_obf.jar<newline46mondego>-libraryjars  <java.home>/lib/rt.jar<newline46mondego>-keep class Calc {<newline46mondego>  public static void main(java.lang.String[]);<newline46mondego>}<newline46mondego>"
"5290splitHere46","12114934splitHere46","public"
"5291splitHere46","12114934splitHere46","class Calc"
"5292splitHere46","12115020splitHere46","ALTER SEQUENCE serial RESTART WITH 105;"
"5293splitHere46","12115020splitHere46","105"
"5294splitHere46","12115035splitHere46","@(form: Form[_])<newline46mondego>"
"5295splitHere46","12115038splitHere46","JsonSerializer"
"5296splitHere46","12115038splitHere46","public class RawHolder {<newline46mondego>   @JsonProperty(<doubleQuotes46>1<doubleQuotes46>)<newline46mondego>   public String raw;<newline46mondego>}<newline46mondego><newline46mondego>public class Thing {<newline46mondego>   public String name;<newline46mondego>   public RawHolder content;<newline46mondego>}<newline46mondego>"
"5297splitHere46","12115070splitHere46","<aop:scoped-proxy>"
"5298splitHere46","12115070splitHere46","request.getSession()"
"5299splitHere46","12115076splitHere46","catch (TypeAException e)<newline46mondego>{<newline46mondego>    // exception specific logic <newline46mondego>    throw e;       <newline46mondego>}<newline46mondego>catch (TypeBException e)<newline46mondego>{<newline46mondego>    // exception specific logic <newline46mondego>    throw e;       <newline46mondego>}<newline46mondego>catch (TypeCException e)<newline46mondego>{<newline46mondego>    // exception specific logic <newline46mondego>    throw e;       <newline46mondego>}<newline46mondego>"
"5300splitHere46","12115145splitHere46","javax.mail"
"5301splitHere46","12115145splitHere46","mail.jar"
"5302splitHere46","12115145splitHere46","javamail1_4_5.zip"
"5303splitHere46","12115145splitHere46","mail.jar"
"5304splitHere46","12115155splitHere46","<doubleQuotes46>image<doubleQuotes46>:<doubleQuotes46>/9j/4AAQSkZJRgAB...<doubleQuotes46><newline46mondego>"
"5305splitHere46","12115155splitHere46","byte[]"
"5306splitHere46","12115155splitHere46","<doubleQuotes46>a<doubleQuotes46>:[96,-76,32,-69,56,81,-39,-44...<newline46mondego>"
"5307splitHere46","12115155splitHere46","byte[]"
"5308splitHere46","12115156splitHere46","getNextRows"
"5309splitHere46","12115156splitHere46","rows"
"5310splitHere46","12115220splitHere46","Image"
"5311splitHere46","12115220splitHere46","javaxt"
"5312splitHere46","12115220splitHere46","javaxt.io.Image image = new javaxt.io.Image(<doubleQuotes46>D:\\codeTest\\arun.jpg<doubleQuotes46>);<newline46mondego>double[] gps = image.getGPSCoordinate();<newline46mondego>"
"5313splitHere46","12115220splitHere46","javaxt.io.Image"
"5314splitHere46","12115254splitHere46","Locale"
"5315splitHere46","12115254splitHere46","Locale"
"5316splitHere46","12115254splitHere46","LocaleResolver"
"5317splitHere46","12115322splitHere46","this."
"5318splitHere46","12115322splitHere46","static"
"5319splitHere46","12115322splitHere46","this.registerForContextMenu()Â <newline46mondego>"
"5320splitHere46","12115322splitHere46","static"
"5321splitHere46","12115322splitHere46","ClassName.staticRegisterForContextMenu()<newline46mondego>"
"5322splitHere46","12115436splitHere46","import java.awt.Component;<newline46mondego>import java.awt.Dialog.ModalityType;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Toolkit;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class MovingDialog {<newline46mondego>   private static void createAndShowGui() {<newline46mondego>      JPanel panel = new JPanel();<newline46mondego>      panel.add(new JButton(new ShowMovingDialogAction()));<newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>MovingDialog<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(panel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class ShowMovingDialogAction extends AbstractAction {<newline46mondego>   private JPanel panel = new JPanel();<newline46mondego><newline46mondego>   public ShowMovingDialogAction() {<newline46mondego>      super(<doubleQuotes46>Show Moving Dialog<doubleQuotes46>);<newline46mondego>      panel.add(new JLabel(<doubleQuotes46>label<doubleQuotes46>));<newline46mondego>      panel.add(new JTextField(<doubleQuotes46>TextField<doubleQuotes46>, 10));<newline46mondego>      panel.add(new JButton(<doubleQuotes46>Button<doubleQuotes46>));<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void actionPerformed(ActionEvent e) {<newline46mondego>      JFrame owner = (JFrame) SwingUtilities.getWindowAncestor((Component) e<newline46mondego>            .getSource());<newline46mondego>      final JDialog dialog = new JDialog(owner, <doubleQuotes46>Dialog<doubleQuotes46>,<newline46mondego>            ModalityType.APPLICATION_MODAL);<newline46mondego>      dialog.getContentPane().add(panel);<newline46mondego>      dialog.pack();<newline46mondego>      dialog.setLocation(0, 0);<newline46mondego><newline46mondego>      int delay = 20;<newline46mondego>      new Timer(delay , new ActionListener() {<newline46mondego>         int x = 0;<newline46mondego>         int y = 0;<newline46mondego>         Dimension scrn = Toolkit.getDefaultToolkit().getScreenSize();<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent e) {<newline46mondego>            int maxX = scrn.width - dialog.getWidth();<newline46mondego>            int maxY = scrn.height - dialog.getHeight();<newline46mondego>            if (x < maxX  && y < maxY) {<newline46mondego>               x++;<newline46mondego>               y++;<newline46mondego>               dialog.setLocation(x, y);<newline46mondego>            } else {<newline46mondego>               ((Timer)e.getSource()).stop();<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }).start();<newline46mondego><newline46mondego>      dialog.setVisible(true);<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5323splitHere46","12115577splitHere46","i++"
"5324splitHere46","12115577splitHere46","++i"
"5325splitHere46","12115767splitHere46","="
"5326splitHere46","12115767splitHere46","=="
"5327splitHere46","12115767splitHere46","if(firstPicked = false){<newline46mondego>"
"5328splitHere46","12115767splitHere46","if(firstPicked == false){"
"5329splitHere46","12115767splitHere46","if(!firstPicked){"
"5330splitHere46","12115767splitHere46","boolean FALSE = false;<newline46mondego>if(FALSE == false) {//false is false, executes<newline46mondego>   ....<newline46mondego>"
"5331splitHere46","12115767splitHere46","boolean FALSE = false;<newline46mondego>if(!FALSE) {//!false is true, executes<newline46mondego>   ....<newline46mondego>"
"5332splitHere46","12115767splitHere46","if(someBoolean) {"
"5333splitHere46","12115767splitHere46","if(someBoolean == true) {"
"5334splitHere46","12115882splitHere46","public void actionPerformed(ActionEvent e) {<newline46mondego>   // If the action is for getting data from DB then do,<newline46mondego>   DefaultTableModel dtm = (DefaultTableModel) myTable.getModel();<newline46mondego>   // int rowCount = dtm.getRowCount();<newline46mondego>   /*<newline46mondego>     for (int row = rowCount - 1; row >= 0; row--) {<newline46mondego>        dtm.removeRow(row); <newline46mondego>   } */<newline46mondego>   // or<newline46mondego>   if(dtm.getRowCount() > 0) {<newline46mondego>     dtm.setRowCount(0);<newline46mondego>   }<newline46mondego>// Add code to get your 3 rows from the database.<newline46mondego>}<newline46mondego>"
"5335splitHere46","12115911splitHere46","events.addAll(vendor1Calls.values());<newline46mondego>vendor1Calls.clear();<newline46mondego>"
"5336splitHere46","12115911splitHere46","for (Iterator<Event> iter = vendor1Calls.values().iterator(); iter.hasNext(); ) {<newline46mondego>    Event e = iter.next();<newline46mondego>    events.add(e);<newline46mondego>    iter.remove();<newline46mondego>}<newline46mondego>"
"5337splitHere46","12115991splitHere46","Pipe P = new Pipe (fname,x1name,x2name,x3name,oname);<newline46mondego>try {<newline46mondego>    view.setText(P.Pipeit());<newline46mondego>} catch (TransformerConfigurationException e) {<newline46mondego>    //log/handle the exception<newline46mondego>} catch (TransformerException e) {<newline46mondego>    //log/handle the exception<newline46mondego>} catch (SAXException e) {<newline46mondego>    //log/handle the exception<newline46mondego>} catch (IOException e) {<newline46mondego>    //log/handle the exception<newline46mondego>}<newline46mondego>"
"5338splitHere46","12116029splitHere46","public int getSelectedIndex(JSpinner spinner, List<?> values) {<newline46mondego>    int index=0;<newline46mondego>    for(Object o :values) {<newline46mondego>        if(o.equals(spinner.getValue()))<newline46mondego>            return index;<newline46mondego>        index++;<newline46mondego>    }<newline46mondego>    return -1;<newline46mondego>}<newline46mondego>public void setSelectedIndex(JSpinner spinner, List<?> values, int index) {<newline46mondego>    spinner.setValue(values.get(index));<newline46mondego>}<newline46mondego>"
"5339splitHere46","12116054splitHere46","InternetAddress[] to = new InternetAddress[addressTo.size()];<newline46mondego> to                    = addressTo.toArray(to);<newline46mondego><newline46mondego> MimeMessage msg  = new MimeMessage(session);<newline46mondego> msg.setSubject(subject);<newline46mondego> msg.setFrom(new InternetAddress(fromAddressStringl));<newline46mondego> msg.setRecipients(Message.RecipientType.TO, to);<newline46mondego>"
"5340splitHere46","12116184splitHere46","to_date"
"5341splitHere46","12116184splitHere46","START_DATE"
"5342splitHere46","12116184splitHere46","END_DATE"
"5343splitHere46","12116184splitHere46","INSERT"
"5344splitHere46","12116184splitHere46","INSERT"
"5345splitHere46","12116184splitHere46","START_DATE"
"5346splitHere46","12116184splitHere46","END_DATE"
"5347splitHere46","12116184splitHere46","to_date(START_DATE)"
"5348splitHere46","12116184splitHere46","to_date(END_DATE)"
"5349splitHere46","12116184splitHere46","TO_DATE"
"5350splitHere46","12116184splitHere46","INSERT"
"5351splitHere46","12116184splitHere46","Date"
"5352splitHere46","12116184splitHere46","DATE"
"5353splitHere46","12116298splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    Display display = Display.getDefault();<newline46mondego>    Shell shell = new Shell(display);<newline46mondego>    shell.setLayout(new FillLayout());<newline46mondego><newline46mondego>    Tree tree = new Tree(shell, SWT.NONE);<newline46mondego>    tree.setHeaderVisible(true);        <newline46mondego><newline46mondego>    TreeColumn column1 = new TreeColumn(tree, SWT.LEFT);<newline46mondego>    column1.setText(<doubleQuotes46>Column 1<doubleQuotes46>);<newline46mondego>    column1.setWidth(50);<newline46mondego>    TreeColumn column2 = new TreeColumn(tree, SWT.LEFT);<newline46mondego>    column2.setText(<doubleQuotes46>Column 2<doubleQuotes46>);<newline46mondego>    column2.setWidth(50);<newline46mondego>    TreeColumn column3 = new TreeColumn(tree, SWT.LEFT);<newline46mondego>    column3.setText(<doubleQuotes46>Column 3<doubleQuotes46>);<newline46mondego>    column3.setWidth(50);<newline46mondego><newline46mondego>    Image image = YOUR_IMAGE_HERE;<newline46mondego><newline46mondego>    TreeItem item = new TreeItem(tree, SWT.NONE);<newline46mondego>    item.setImage(0, image);<newline46mondego>    item.setImage(1, image);<newline46mondego>    item.setImage(2, image);<newline46mondego><newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego><newline46mondego>    while(!shell.isDisposed())<newline46mondego>    {<newline46mondego>        if(!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5354splitHere46","12116335splitHere46","EntityFactory"
"5355splitHere46","12116335splitHere46","Entity"
"5356splitHere46","12116335splitHere46","Entity"
"5357splitHere46","12116335splitHere46","public interface EntityFactory<T extends Entity><newline46mondego>    T create(String str);<newline46mondego>}<newline46mondego>"
"5358splitHere46","12116341splitHere46","${status.description}<newline46mondego>"
"5359splitHere46","12116341splitHere46","${order.status.description}<newline46mondego>"
"5360splitHere46","12116376splitHere46","listFiles"
"5361splitHere46","12116391splitHere46","run()"
"5362splitHere46","12116391splitHere46","public class FileReader extends Thread {<newline46mondego><newline46mondego>  private final File file;<newline46mondego>  private String[] lines;<newline46mondego><newline46mondego>  public FileReader(File file) {<newline46mondego>    this.file = file;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void run() {<newline46mondego>    // Read file here (populate `lines`)..<newline46mondego>  }<newline46mondego><newline46mondego>  public String[] getLines() {<newline46mondego>    return lines;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5363splitHere46","12116391splitHere46","main"
"5364splitHere46","12116391splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>  List<FileReader> threads = new ArrayList<FileReader>();<newline46mondego><newline46mondego>  threads.add(new FileReader(new File(<doubleQuotes46>foo1<doubleQuotes46>)));<newline46mondego>  threads.add(new FileReader(new File(<doubleQuotes46>foo2<doubleQuotes46>)));<newline46mondego>  threads.add(new FileReader(new File(<doubleQuotes46>foo3<doubleQuotes46>)));<newline46mondego>  threads.add(new FileReader(new File(<doubleQuotes46>foo4<doubleQuotes46>)));<newline46mondego><newline46mondego>  for (FileReader t : threads) {<newline46mondego>    t.start();<newline46mondego>  }<newline46mondego><newline46mondego>  List<String> allLines = new ArrayList<String>();<newline46mondego><newline46mondego>  for (FileReader t : threads) {<newline46mondego>    t.join();<newline46mondego>    allLines.addAll(Arrays.asList(t.getLines()));<newline46mondego>  }    <newline46mondego><newline46mondego>  // File lines now in allLines<newline46mondego>}<newline46mondego>"
"5365splitHere46","12116526splitHere46","private void startDialog() {<newline46mondego>  final JDialog d = new JDialog(this, <doubleQuotes46>Test<doubleQuotes46>, true);<newline46mondego>  d.getContentPane().add(new JLabel(<doubleQuotes46>Something<doubleQuotes46>));<newline46mondego>  d.setBounds(100, 100, 400, 300);<newline46mondego>  Thread t = new Thread(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>      for (int i = 0; i < 50; i++) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>          public void run() {<newline46mondego>            Point p = d.getLocation();<newline46mondego>            d.setLocation(p.x + 10, p.y + 10);<newline46mondego>          }<newline46mondego>        });<newline46mondego>        try {<newline46mondego>          Thread.sleep(100);<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>          // ignore<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>  });<newline46mondego>  t.start();<newline46mondego>  d.setVisible(true);<newline46mondego>}<newline46mondego>"
"5366splitHere46","12116526splitHere46","Timer"
"5367splitHere46","12116526splitHere46","Thread"
"5368splitHere46","12116528splitHere46","for(int i = 0; i < gc.size(); i++){<newline46mondego>        if( gc.get(i) instanceof Bug ){<newline46mondego>            ((Bug)(gc.get(i)).moveNorth();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"5369splitHere46","12116528splitHere46","graphicsObject"
"5370splitHere46","12116528splitHere46","abstract public void defaultAction();<newline46mondego>"
"5371splitHere46","12116528splitHere46","@Override<newline46mondego>    public void defaultAction() {<newline46mondego>        moveNorth();<newline46mondego>    }      <newline46mondego>"
"5372splitHere46","12116528splitHere46","for(GraphicsObject go : gc){<newline46mondego>        go.defaultAction();<newline46mondego>    }<newline46mondego>"
"5373splitHere46","12116984splitHere46","Table"
"5374splitHere46","12116984splitHere46","TableViewer"
"5375splitHere46","12116984splitHere46","ContentProvider"
"5376splitHere46","12116984splitHere46","ArrayContentProvider"
"5377splitHere46","12117017splitHere46","asdf = `java -version 2>&1`<newline46mondego>puts asdf<newline46mondego>"
"5378splitHere46","12117017splitHere46","java version <doubleQuotes46>1.6.0_33<doubleQuotes46><newline46mondego>Java(TM) SE Runtime Environment (build 1.6.0_33-b03-424-10M3720)<newline46mondego>Java HotSpot(TM) 64-Bit Server VM (build 20.8-b03-424, mixed mode)<newline46mondego>"
"5379splitHere46","12117017splitHere46","man sh"
"5380splitHere46","12117017splitHere46","REDIRECTION"
"5381splitHere46","12117017splitHere46","/REDIRECTION"
"5382splitHere46","12117225splitHere46","JTable table = new JTable();<newline46mondego>DefaultTableModel model = (DefaultTableModel)table.getModel();<newline46mondego>model.addColumn(<doubleQuotes46>Names<doubleQuotes46>, s1.toArray(new String[0]));<newline46mondego>model.addColumn(<doubleQuotes46>Sizes<doubleQuotes46>, s2.toArray(new String[0]));<newline46mondego>"
"5383splitHere46","12117261splitHere46","@Factory(Foo.FooFactory.class)<newline46mondego>"
"5384splitHere46","12117296splitHere46","ArrayList"
"5385splitHere46","12117296splitHere46","List<MyObj> list = new ArrayList<MyObj>();<newline46mondego>int size = list.size();<newline46mondego>for(int i = 0; i < size; i++) {<newline46mondego>    MyObj mo = list.get(i);<newline46mondego>    mo.doSomething();<newline46mondego>    if (size > list.size()) {<newline46mondego>        size = list.size();<newline46mondego>        i--;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5386splitHere46","12117317splitHere46","Content-Type"
"5387splitHere46","12117317splitHere46","application/pdf"
"5388splitHere46","12117317splitHere46","http://myapp.com/test.pdf"
"5389splitHere46","12117317splitHere46","Content-Type: image/jpeg"
"5390splitHere46","12117317splitHere46","Content-Type: image/jpeg"
"5391splitHere46","12117317splitHere46","Content-Type"
"5392splitHere46","12117469splitHere46","calNow.add(Calendar.HOUR, calNow.get(Calendar.HOUR_OF_DAY));<newline46mondego>calNow.add(Calendar.MINUTE, calNow.get(Calendar.MINUTE));<newline46mondego>"
"5393splitHere46","12117469splitHere46","00:20:49"
"5394splitHere46","12117469splitHere46","00:40:49"
"5395splitHere46","12117623splitHere46","if(population1 < population2)<newline46mondego>    return -1;<newline46mondego>else if(population1 > population2)<newline46mondego>    return 1;<newline46mondego>return 0;<newline46mondego>"
"5396splitHere46","12117623splitHere46","population1 - popultaion2"
"5397splitHere46","12117623splitHere46","compareTo(..)"
"5398splitHere46","12117675splitHere46","Arrays.toString(arr)"
"5399splitHere46","12117675splitHere46","Arrays.deepToString(arr)"
"5400splitHere46","12117760splitHere46","dos.writeBytes(twoHyphens + boundary + lineEnd); <newline46mondego>dos.writeBytes(<doubleQuotes46>Content-Disposition: form-data; name=\<doubleQuotes46>mystring\<doubleQuotes46><doubleQuotes46> + lineEnd + lineEnd);<newline46mondego>dos.writeBytes(<doubleQuotes46>myString<doubleQuotes46> + lineEnd);<newline46mondego>"
"5401splitHere46","12117760splitHere46","$myString=<doubleQuotes46><doubleQuotes46>;       <newline46mondego><newline46mondego>if(isset($_POST['mystring'])) {<newline46mondego>    $attachToFile = $_POST['myString']; <newline46mondego>}<newline46mondego>"
"5402splitHere46","12117776splitHere46","e.printStackTrace"
"5403splitHere46","12117776splitHere46","loadSave"
"5404splitHere46","12117776splitHere46","java.lang.NullPointerException<newline46mondego>          at com.humans.vs.technology.Save.loadSave(Save.java:14)<newline46mondego>          at com.humans.vs.technology.Screen.define(Screen.java:39)<newline46mondego>          at com.humans.vs.technology.Screen.paintComponent(Screen.java:47)<newline46mondego>          ...<newline46mondego>"
"5405splitHere46","12117776splitHere46","Screen.room.block[y][x].groundID = loadScanner.nextInt();<newline46mondego>"
"5406splitHere46","12117776splitHere46","loadScanner"
"5407splitHere46","12117776splitHere46","null"
"5408splitHere46","12117776splitHere46","null"
"5409splitHere46","12117776splitHere46","Scene.room.block[y][x].groundID"
"5410splitHere46","12117776splitHere46","Screen.room"
"5411splitHere46","12117776splitHere46","Screen.room.block"
"5412splitHere46","12117776splitHere46","null"
"5413splitHere46","12117776splitHere46","loadScanner"
"5414splitHere46","12117776splitHere46","block[y][x]"
"5415splitHere46","12117776splitHere46","null"
"5416splitHere46","12117776splitHere46","Room.block"
"5417splitHere46","12117776splitHere46","Room.define"
"5418splitHere46","12117776splitHere46","public void define(){<newline46mondego>    block = new Block[worldHeight][worldWidth];<newline46mondego><newline46mondego>    for(int y=0;y<block.length;y++){<newline46mondego>        for(int x=0;x<block.length;x++){<newline46mondego>            block[y][x] = new Block((Screen.myWidth/2) - ((worldWidth * blockSize)/2) + (x * blockSize), y * blockSize, blockSize, blockSize, Value.groundGrass, Value.airAir);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5419splitHere46","12117776splitHere46","x"
"5420splitHere46","12117776splitHere46","y"
"5421splitHere46","12117776splitHere46","block.length"
"5422splitHere46","12117776splitHere46","block.length"
"5423splitHere46","12117776splitHere46","worldHeight"
"5424splitHere46","12117776splitHere46","Screen.room.block[y][x].groundID"
"5425splitHere46","12117776splitHere46","null"
"5426splitHere46","12117776splitHere46","NullPointerException"
"5427splitHere46","12117776splitHere46","blocks"
"5428splitHere46","12117776splitHere46","groundID"
"5429splitHere46","12117776splitHere46","0"
"5430splitHere46","12117776splitHere46","public static int groundGrass = 0;<newline46mondego>"
"5431splitHere46","12117776splitHere46","Room.draw"
"5432splitHere46","12117776splitHere46","block[y][x].draw(g)"
"5433splitHere46","12117776splitHere46","Room.define"
"5434splitHere46","12117776splitHere46","Room.draw"
"5435splitHere46","12117776splitHere46","for(int y=0;y<worldHeight;y++){<newline46mondego>        for(int x=0;x<worldWidth;x++){<newline46mondego>            block[y][x] = new Block((Screen.myWidth/2) - ((worldWidth * blockSize)/2) + (x * blockSize), y * blockSize, blockSize, blockSize, Value.groundGrass, Value.airAir);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"5436splitHere46","12117776splitHere46","Room.define"
"5437splitHere46","12117776splitHere46","Room.draw"
"5438splitHere46","12117776splitHere46","for(int y=0;y<worldHeight;y++){<newline46mondego>        for(int x=0;x<worldWidth;x++){<newline46mondego>            block[y][x].draw(g);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"5439splitHere46","12117826splitHere46","Function<Domain, Range>"
"5440splitHere46","12117834splitHere46","String[] wordArray = new String[10];<newline46mondego>int index = 0;<newline46mondego>String word = null; // word to be read from file...<newline46mondego>// Use buffered reader to read each line...<newline46mondego>    wordArray[index] = word;<newline46mondego>    index++;<newline46mondego>"
"5441splitHere46","12117834splitHere46","public static void readUnknownWords() {<newline46mondego><newline46mondego>    // Reference to the words file<newline46mondego>    File words = new File(<doubleQuotes46>Words.txt<doubleQuotes46>);<newline46mondego>    // Use a StringBuilder to buffer the content as it's read from the file<newline46mondego>    StringBuilder sb = new StringBuilder(128);<newline46mondego><newline46mondego>    BufferedReader reader = null;<newline46mondego>    try {<newline46mondego><newline46mondego>        // Create the reader.  A File reader would be just as fine in this<newline46mondego>        // example, but hay ;)<newline46mondego>        reader = new BufferedReader(new FileReader(words));<newline46mondego>        // The read buffer to use to read data into<newline46mondego>        char[] buffer = new char[1024];<newline46mondego>        int bytesRead = -1;<newline46mondego>        // Read the file to we get to the end<newline46mondego>        while ((bytesRead = reader.read(buffer)) != -1) {<newline46mondego><newline46mondego>            // Append the results to the string builder<newline46mondego>            sb.append(buffer, 0, bytesRead);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        // Split the string builder into individal words by the line break<newline46mondego>        String[] wordArray = sb.toString().split(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Read <doubleQuotes46> + wordArray.length + <doubleQuotes46> words<doubleQuotes46>);<newline46mondego><newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            reader.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5442splitHere46","12117834splitHere46","public static void readKnownWords() <newline46mondego><newline46mondego>    // This is just the same as the previous example, except we<newline46mondego>    // know in advance the number of lines we will be reading    <newline46mondego>    File words = new File(<doubleQuotes46>Words.txt<doubleQuotes46>);<newline46mondego><newline46mondego>    BufferedReader reader = null;<newline46mondego>    try {<newline46mondego><newline46mondego>        // Create the word array of a known quantity<newline46mondego>        // The quantity value could be defined as a constant<newline46mondego>        // ie public static final int WORD_COUNT = 10;<newline46mondego>        String[] wordArray = new String[10];<newline46mondego><newline46mondego>        reader = new BufferedReader(new FileReader(words));<newline46mondego>        // Instead of reading to a char buffer, we are<newline46mondego>        // going to take the easy route and read each line<newline46mondego>        // straight into a String<newline46mondego>        String text = null;<newline46mondego>        // The current array index<newline46mondego>        int index = 0;<newline46mondego>        // Read the file till we reach the end<newline46mondego>        // ps- my file had lots more words, so I put a limit<newline46mondego>        // in the loop to prevent index out of bounds exceptions<newline46mondego>        while ((text = reader.readLine()) != null && index < 10) {<newline46mondego><newline46mondego>            wordArray[index] = text;<newline46mondego>            index++;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Read <doubleQuotes46> + wordArray.length + <doubleQuotes46> words<doubleQuotes46>);<newline46mondego><newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            reader.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5443splitHere46","12117834splitHere46","System.getProperties().getProperty(<doubleQuotes46>line.separator<doubleQuotes46>)"
"5444splitHere46","12117941splitHere46","util/<newline46mondego>    Employee.java<newline46mondego>    unit10Assignment.java<newline46mondego>bin/<newline46mondego>"
"5445splitHere46","12117941splitHere46","bin/"
"5446splitHere46","12117941splitHere46","Employee"
"5447splitHere46","12117941splitHere46","javac -sourcepath $HOME/util -d $HOME/bin *.java<newline46mondego>"
"5448splitHere46","12117941splitHere46","java -cp $HOME/bin util.$MAIN_CLASS<newline46mondego>"
"5449splitHere46","12117941splitHere46","-sourcepath"
"5450splitHere46","12117941splitHere46","-d"
"5451splitHere46","12117941splitHere46","-cp"
"5452splitHere46","12117968splitHere46","<dependencySets><newline46mondego>    <dependencySet><newline46mondego>        <includes><newline46mondego>            <include>${project.groupId}:*:war:${project.version}</include><newline46mondego>        </includes><newline46mondego>        <useProjectArtifact>true</useProjectArtifact><newline46mondego>        <outputDirectory>webapp</outputDirectory><newline46mondego>        <unpack>false</unpack><newline46mondego>    </dependencySet><newline46mondego>    <dependencySet><newline46mondego>        <excludes><newline46mondego>            <exclude>${project.groupId}:*:war:${project.version}</exclude><newline46mondego>        </excludes><newline46mondego>        <useProjectArtifact>true</useProjectArtifact><newline46mondego>        <outputDirectory>lib</outputDirectory><newline46mondego>        <unpack>false</unpack><newline46mondego>    </dependencySet><newline46mondego></dependencySets><newline46mondego>"
"5453splitHere46","12117975splitHere46","asadmin.bat"
"5454splitHere46","12117975splitHere46","start-domain your_domain_name"
"5455splitHere46","12117975splitHere46","http://your_server_name:4848"
"5456splitHere46","12117995splitHere46","import java.awt.GridLayout;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Foo003 {<newline46mondego>   public static void main(String[] args) {<newline46mondego>      JButton upButton = new JButton(<doubleQuotes46>Up<doubleQuotes46>);<newline46mondego>      JButton downButton = new JButton(<doubleQuotes46>Down<doubleQuotes46>);<newline46mondego>      JButton leftButton = new JButton(<doubleQuotes46>Left<doubleQuotes46>);<newline46mondego>      JButton rightButton = new JButton(<doubleQuotes46>Right<doubleQuotes46>);<newline46mondego>      JComponent[][] components = { <newline46mondego>            { new JLabel(), upButton, new JLabel() },<newline46mondego>            { leftButton, new JLabel(), rightButton },<newline46mondego>            { new JLabel(), downButton, new JLabel() } };<newline46mondego><newline46mondego>      JPanel panel = new JPanel(new GridLayout(components.length,<newline46mondego>            components[0].length, 8, 8));<newline46mondego>      for (int i = 0; i < components.length; i++) {<newline46mondego>         for (int j = 0; j < components[i].length; j++) {<newline46mondego>            panel.add(components[i][j]);<newline46mondego>         }<newline46mondego>      }<newline46mondego><newline46mondego>      int eb = 15;<newline46mondego>      panel.setBorder(BorderFactory.createEmptyBorder(eb, eb, eb, eb));<newline46mondego><newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>Grid e.g.<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(panel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationRelativeTo(null);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5457splitHere46","12118030splitHere46","public class MyThreadFactory implements ThreadFactory {<newline46mondego>   public Thread newThread(Runnable r) {<newline46mondego>     Thread t =  new Thread(r);<newline46mondego>     t.setPriority(Thread.MAX_PRIORITY); //Or whatever priority<newline46mondego>     return t;<newline46mondego>   }<newline46mondego> }<newline46mondego><newline46mondego>ExecutorService es = Executors.newFixedThreadPool(NTHREADS,new MyThreadFactory());<newline46mondego>"
"5458splitHere46","12118147splitHere46","start"
"5459splitHere46","12118147splitHere46","manAndDog"
"5460splitHere46","12118147splitHere46","repaint"
"5461splitHere46","12118147splitHere46","init"
"5462splitHere46","12118147splitHere46","super.paint(g)"
"5463splitHere46","12118147splitHere46","paint"
"5464splitHere46","12118147splitHere46","JApplet"
"5465splitHere46","12118147splitHere46","paintComponent"
"5466splitHere46","12118147splitHere46","setLocation"
"5467splitHere46","12118147splitHere46","public void mouseDragged(MouseEvent e) {<newline46mondego>    dog.setLocation(xposR, yposR);<newline46mondego>    xposR = e.getX();<newline46mondego>    yposR = e.getY();<newline46mondego>    repaint();<newline46mondego>}<newline46mondego>"
"5468splitHere46","12118147splitHere46","manAndDog"
"5469splitHere46","12118296splitHere46","import java.util.ArrayList;<newline46mondego><newline46mondego>public class SecondProgram {<newline46mondego><newline46mondego>    private static ArrayList <String>file = new ArrayList();<newline46mondego><newline46mondego>    public synchronized boolean  writeFile(String str){<newline46mondego>        //wrtite file to your list<newline46mondego>        file.add(str);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    public static void main(String args[]) {<newline46mondego>        //read file and use the synchronized method to write it to your list<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"5470splitHere46","12118456splitHere46","<Context path=<doubleQuotes46>MyApp<doubleQuotes46>><newline46mondego>   <Resource auth=<doubleQuotes46>Container<doubleQuotes46> driverClassName=<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46> maxActive=<doubleQuotes46>30<doubleQuotes46> maxIdle=<doubleQuotes46>10<doubleQuotes46>    maxWait=<doubleQuotes46>10000<doubleQuotes46> name=<doubleQuotes46>jdbc/myDb<doubleQuotes46> password=<doubleQuotes46>pass<doubleQuotes46> type=<doubleQuotes46>javax.sql.DataSource<doubleQuotes46> url=<doubleQuotes46>jdbc:mysql://localhost/myDb<doubleQuotes46> username=<doubleQuotes46>user<doubleQuotes46>/><newline46mondego></Context><newline46mondego>"
"5471splitHere46","12118572splitHere46","Component"
"5472splitHere46","12118572splitHere46","paint"
"5473splitHere46","12118572splitHere46","repaint"
"5474splitHere46","12118572splitHere46","paint"
"5475splitHere46","12118572splitHere46","JButton"
"5476splitHere46","12118572splitHere46","JButton"
"5477splitHere46","12118572splitHere46","public void mouseEntered(MouseEvent e) {<newline46mondego>    AbstractButton b = (AbstractButton) e.getSource();<newline46mondego>    ButtonModel model = b.getModel();<newline46mondego>    if (b.isRolloverEnabled() && !SwingUtilities.isLeftMouseButton(e)) {<newline46mondego>        model.setRollover(true);<newline46mondego>    }<newline46mondego>    if (model.isPressed())<newline46mondego>            model.setArmed(true);<newline46mondego>}<newline46mondego>"
"5478splitHere46","12118572splitHere46","ButtonModel.setRollover"
"5479splitHere46","12118572splitHere46","ChangeEvent"
"5480splitHere46","12118572splitHere46","AbstractButton"
"5481splitHere46","12118572splitHere46","public void stateChanged(ChangeEvent e) {<newline46mondego>    Object source = e.getSource();<newline46mondego><newline46mondego>    updateMnemonicProperties();<newline46mondego>    if (isEnabled() != model.isEnabled()) {<newline46mondego>        setEnabled(model.isEnabled());<newline46mondego>    }<newline46mondego>    fireStateChanged();<newline46mondego>    repaint();<newline46mondego>}<newline46mondego>"
"5482splitHere46","12118572splitHere46","repaint"
"5483splitHere46","12118572splitHere46","JButton"
"5484splitHere46","12118661splitHere46","ulimit -a"
"5485splitHere46","12118661splitHere46","ulimit -Hn <number>"
"5486splitHere46","12118716splitHere46","public String[] getSongIds(String whereClause) throws FetchSongException {<newline46mondego>  String countQuery = <doubleQuotes46>SELECT  songid FROM TABLE_INDEX WHERE <doubleQuotes46> + whereClause;<newline46mondego>  try {<newline46mondego>    Cursor cursor = db.rawQuery(countQuery, null);<newline46mondego>    int cursorSize = cursor.getCount();<newline46mondego><newline46mondego>    int[] songIds = new int[cursorSize];<newline46mondego>    int count=0;<newline46mondego>    if (cursor != null) {<newline46mondego>      if (cursor.moveToFirst()) {<newline46mondego>        do {<newline46mondego>          songIds[count] = cursor.getInt(cursor.getColumnIndex(<doubleQuotes46>songid<doubleQuotes46>));<newline46mondego>          count++;<newline46mondego>        } while(cursor.moveToNext());<newline46mondego>      }<newline46mondego>      cursor.close(); // you should put this in a finally block<newline46mondego>      db.close();<newline46mondego>      return getSongTitles(songIds);<newline46mondego>    }<newline46mondego>  } catch (SQLException sqle) {<newline46mondego>    throw new FetchSongException(<doubleQuotes46>Unable to fetch song ids.<doubleQuotes46>, sqle);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5487splitHere46","12118716splitHere46","getSongIds"
"5488splitHere46","12118716splitHere46","try {<newline46mondego>  String[] result = getSongsIds(<doubleQuotes46>something<doubleQuotes46>);<newline46mondego>} catch (FetchSongException e) {<newline46mondego>  // Display user message with e.getMessage();<newline46mondego>}<newline46mondego>"
"5489splitHere46","12118778splitHere46","_"
"5490splitHere46","12118825splitHere46","public class Save {<newline46mondego>  private javax.swing.JTextField refernce; <---- ISSUE<newline46mondego>  ...<newline46mondego>  String refernceText = refernce.toString();  <newline46mondego>}<newline46mondego>"
"5491splitHere46","12118825splitHere46","null"
"5492splitHere46","12118825splitHere46","Constructor"
"5493splitHere46","12118825splitHere46","Save"
"5494splitHere46","12118825splitHere46","public class Save {<newline46mondego>  private javax.swing.JTextField refernce;<newline46mondego>  public Save(javax.swing.JTextField refernce){<newline46mondego>    this.refernce=refernce;<newline46mondego>  } <newline46mondego>  ...<newline46mondego>  //and use JTextField in your methods<newline46mondego>  void testMethod() {<newline46mondego>    if(refernce!=null){<newline46mondego>     String refernceText = refernce.getText();<newline46mondego>     .....<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5495splitHere46","12118841splitHere46","import au.edu.uow.Collection.*;<newline46mondego>"
"5496splitHere46","12118841splitHere46","import au.edu.uow.Collection.Album;<newline46mondego>"
"5497splitHere46","12118891splitHere46","for (int i=0; i<24; i++) {<newline46mondego>    int x = (i%6)*100;<newline46mondego>    int y = (i/6)*50;<newline46mondego>    //Array indexes start from 1, whereas this  <newline46mondego>    //loop starts from 0, hence adjusting below<newline46mondego>    rects[i+1].setLocation(x, y);<newline46mondego>}<newline46mondego>"
"5498splitHere46","12118891splitHere46","rects"
"5499splitHere46","12118946splitHere46","UIComponent#getFacets()"
"5500splitHere46","12118946splitHere46","<h:panelGroup rendered=<doubleQuotes46>#{not empty cc.facets.foo}<doubleQuotes46>><newline46mondego>    The facet with name <doubleQuotes46>foo<doubleQuotes46> has been definied for this composite!<newline46mondego></h:panelGroup><newline46mondego>"
"5501splitHere46","12119079splitHere46","String url = <doubleQuotes46>https://graph.facebook.com/<doubleQuotes46> +facebook_User_name +<doubleQuotes46>/statuses&limit=20&access_token=<doubleQuotes46> + access_token<newline46mondego>"
"5502splitHere46","12119079splitHere46","HttpGet httpget = new HttpGet(url);    <newline46mondego>HttpResponse response;  <newline46mondego>try {<newline46mondego>   response = httpclient.execute(httpget);          <newline46mondego>   HttpEntity entity = response.getEntity();             <newline46mondego>   if (entity != null) {    <newline46mondego>       InputStream instream = entity.getContent();<newline46mondego>       result= convertStreamToString(instream);<newline46mondego>       JSONObject json = new JSONObject(result);             <newline46mondego>           JSONArray valArray = json.getJSONArray(<doubleQuotes46>data<doubleQuotes46>);<newline46mondego><newline46mondego>       for(int i=0;i<valArray.length();i++) {             <newline46mondego><newline46mondego>           String info = main_object.getString(<doubleQuotes46>message<doubleQuotes46>);<newline46mondego>       }<newline46mondego>       instream.close();<newline46mondego>    }            <newline46mondego>} <newline46mondego>catch (ClientProtocolException e) {             <newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"5503splitHere46","12119097splitHere46","public void characters(char ch[], int start, int length) {<newline46mondego>    String theString = new String(ch, start, length);<newline46mondego><newline46mondego>    switch (currentstate) {<newline46mondego>    case RSS_TITLE:<newline46mondego>        _item.setTitle(theString);<newline46mondego>        // currentstate = 0;<newline46mondego>        break;<newline46mondego>    case RSS_LINK:<newline46mondego>        _item.setLink(theString);<newline46mondego>        // currentstate = 0;<newline46mondego>        break;<newline46mondego>    case RSS_DESCRIPTION:<newline46mondego>        _item.setDescription(theString);<newline46mondego>        // currentstate = 0;<newline46mondego>        break;<newline46mondego>    case RSS_CATEGORY:<newline46mondego>        _item.setCategory(theString);<newline46mondego>        // currentstate = 0;<newline46mondego>        break;<newline46mondego>    case RSS_PUBDATE:<newline46mondego>        _item.setPubDate(theString);<newline46mondego>        // currentstate = 0;<newline46mondego>        break;<newline46mondego>    default:<newline46mondego>        return;<newline46mondego>    }<newline46mondego>"
"5504splitHere46","12119097splitHere46","void setDescription(String description) {<newline46mondego>    _description = _description + Html.fromHtml(description).toString();<newline46mondego>}<newline46mondego>"
"5505splitHere46","12119130splitHere46","choiceOption"
"5506splitHere46","12119130splitHere46","public void choiceOption() throws InvalidInputException {<newline46mondego>    char choice = <doubleQuotes46>0<doubleQuotes46>;<newline46mondego><newline46mondego>    while (choice != <doubleQuotes46>q<doubleQuotes46>){<newline46mondego>        printMenu();<newline46mondego><newline46mondego>        System.in.read(choice);<newline46mondego>        switch(choice){<newline46mondego>        case <doubleQuotes46>1<doubleQuotes46>: DisplayNumAlbums();<newline46mondego>        case <doubleQuotes46>2<doubleQuotes46>: ListAllTitles();<newline46mondego>        case <doubleQuotes46>3<doubleQuotes46>: DisplayAlbumDetail();<newline46mondego>        case <doubleQuotes46>q<doubleQuotes46>: System.out.println(<doubleQuotes46>Invalid input...<doubleQuotes46>);<newline46mondego>                  return;<newline46mondego>        default: System.out.println(<doubleQuotes46>Invalid input...<doubleQuotes46>);<newline46mondego>                 throw new InvalidInputException();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5507splitHere46","12119130splitHere46","InvalidInputException"
"5508splitHere46","12119439splitHere46","myPanel.setLayout(null);<newline46mondego>"
"5509splitHere46","12119771splitHere46","public void logIn() {<newline46mondego>    facebookSpinner.setVisibility(View.VISIBLE);<newline46mondego>    mLoginButton.setVisibility(View.GONE);<newline46mondego>    facebook.authorize(FacebookLogInActivity.this, PERMISSIONS, Facebook.FORCE_DIALOG_AUTH, new DialogListener() {<newline46mondego>        @Override<newline46mondego>        public void onComplete(Bundle values) {<newline46mondego>            SharedPreferences.Editor editor = mPrefs.edit();<newline46mondego>            editor.putString(<doubleQuotes46>access_token<doubleQuotes46>, facebook.getAccessToken());<newline46mondego>            editor.putLong(<doubleQuotes46>access_expires<doubleQuotes46>, facebook.getAccessExpires());<newline46mondego>            editor.commit();<newline46mondego>            requestUserData();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onFacebookError(FacebookError e) {<newline46mondego>            mLoginButton.setVisibility(View.VISIBLE);<newline46mondego>            hideSpinners();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onError(DialogError e) {<newline46mondego>            mLoginButton.setVisibility(View.VISIBLE);<newline46mondego>            hideSpinners();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onCancel() {<newline46mondego>            mLoginButton.setVisibility(View.VISIBLE);<newline46mondego>            hideSpinners();<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"5510splitHere46","12119922splitHere46","JavaClass target;<newline46mondego>try {<newline46mondego>  target = Repository.lookupClass(<doubleQuotes46>Target<doubleQuotes46>);<newline46mondego>} catch (final ClassNotFoundException ex) {<newline46mondego>  throw new RuntimeException(<doubleQuotes46>unable to resolve Target<doubleQuotes46>, ex);<newline46mondego>}<newline46mondego>final ClassGen targetGen = new ClassGen(target);<newline46mondego>final ConstantPoolGen pool = targetGen.getConstantPool();<newline46mondego>final ConstantMethodref ref = (ConstantMethodref) pool.getConstant(<newline46mondego>    pool.lookupMethodref(<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>getName<doubleQuotes46>, <doubleQuotes46>()Ljava/lang/String;<doubleQuotes46>));<newline46mondego>ref.setClassIndex(pool.lookupClass(<doubleQuotes46>Target<doubleQuotes46>));<newline46mondego>ref.setNameAndTypeIndex(pool.addNameAndType(<doubleQuotes46>$Name$getName<doubleQuotes46>, <doubleQuotes46>()Ljava/lang/String;<doubleQuotes46>));<newline46mondego>final InstructionList code = new InstructionList();<newline46mondego>final InstructionFactory factory = new InstructionFactory(targetGen, pool);<newline46mondego>code.append(factory.createConstant(<doubleQuotes46>overriden-name<doubleQuotes46>));<newline46mondego>code.append(factory.createReturn(Type.STRING));<newline46mondego>code.setPositions();<newline46mondego>final MethodGen methodGen = new MethodGen(<newline46mondego>    Constants.ACC_PRIVATE | Constants.ACC_SYNTHETIC | Constants.ACC_STATIC,<newline46mondego>    Type.STRING, new Type[0], new String[0], <doubleQuotes46>$Name$getName<doubleQuotes46>, <doubleQuotes46>Target<doubleQuotes46>,<newline46mondego>    code, pool);<newline46mondego>methodGen.setMaxLocals(0);<newline46mondego>methodGen.setMaxStack(1);<newline46mondego>targetGen.addMethod(methodGen.getMethod());<newline46mondego>try {<newline46mondego>  targetGen.getJavaClass().dump(<doubleQuotes46>Target.class<doubleQuotes46>);<newline46mondego>} catch (final IOException ex) {<newline46mondego>  throw new RuntimeException(<doubleQuotes46>unable to save Target<doubleQuotes46>, ex);<newline46mondego>}<newline46mondego>"
"5511splitHere46","12119922splitHere46","C:\dev\scrap>javac Target.java<newline46mondego>C:\dev\scrap>java Target<newline46mondego>original-name<newline46mondego>C:\dev\scrap>javac -cp .;bcel-6.0.jar Instrumenter.java<newline46mondego>C:\dev\scrap>java -cp .;bcel-6.0.jar Instrumenter<newline46mondego>C:\dev\scrap>java Target<newline46mondego>overriden-name<newline46mondego>"
"5512splitHere46","12120027splitHere46","#{ ... #{} ...}"
"5513splitHere46","12120027splitHere46","<p:commandButton ajax=<doubleQuotes46>false<doubleQuotes46> style=<doubleQuotes46>#{patentInfo.photoType.contains('application')?'visibility:visible;width:200px;height:200px;background-image: url(DisplayImage?mainID=tempo1&amp;id='.concat(patentInfo.photoType).concat(';background-repeat: no-repeat;background-size: 100% 100%;'):'visibility:hidden;width:2px;height:2px;'}<doubleQuotes46>>"
"5514splitHere46","12120187splitHere46","java.lang.management"
"5515splitHere46","12120187splitHere46","ManagementFactory.getMemoryPoolMXBeans"
"5516splitHere46","12120187splitHere46","final List<MemoryPoolMXBeans> pools = ManagementFactory.getMemoryPoolMXBeans();<newline46mondego>for (final MemoryPoolMXBean pool : pools) {<newline46mondego>  if (pool.getType() == MemoryType.HEAP) {<newline46mondego>    final String name = pool.getName();<newline46mondego>    final MemoryUsage usage = pool.getUsage();<newline46mondego>    if (name.startsWith(<doubleQuotes46>Eden<doubleQuotes46>)) {<newline46mondego>      System.out.println(<doubleQuotes46>found eden: <doubleQuotes46> + usage);<newline46mondego>    } else if (name.startsWith(<doubleQuotes46>Tenured<doubleQuotes46>)) {<newline46mondego>      System.out.println(<doubleQuotes46>found tenured: <doubleQuotes46> + usage);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5517splitHere46","12120187splitHere46","jvisualvm"
"5518splitHere46","12120227splitHere46","if (s == null || s.length() == 0) // if the String is null or empty.<newline46mondego>"
"5519splitHere46","12120227splitHere46","if (s != null && s.length() > 0) // if the String is not empty<newline46mondego>"
"5520splitHere46","12120227splitHere46","||"
"5521splitHere46","12120227splitHere46","&&"
"5522splitHere46","12120235splitHere46","class Panel : View<newline46mondego>{<newline46mondego>    public Panel(Context context) : base(context)<newline46mondego>    {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5523splitHere46","12120254splitHere46","selectedPoint"
"5524splitHere46","12120254splitHere46","mouseDragged"
"5525splitHere46","12120254splitHere46","quadCurve = new QuadCurve2D.Double(a.x, a.y, ctrl.x, ctrl.y, b.x, b.y);<newline46mondego>"
"5526splitHere46","12120254splitHere46","if(aMark!=null&&bMark!=null&&ctrlMark!=null){<newline46mondego>     if(aMark.contains(e.getX(),e.getY())){<newline46mondego>         selectedMarker = aMark;<newline46mondego>     }else if(bMark.contains(e.getX(),e.getY())){<newline46mondego>         selectedMarker = bMark;<newline46mondego>     }else if(ctrlMark.contains(e.getX(),e.getY())){<newline46mondego>         selectedMarker = ctrlMark;<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"5527splitHere46","12120254splitHere46","public void mouseDragged(MouseEvent e){<newline46mondego>        if(selectedMarker !=null){<newline46mondego>            if (0 == selectedMarker.getName().compareTo(<doubleQuotes46>ctrlMark<doubleQuotes46>))<newline46mondego>                ctrl.x = e.getX();<newline46mondego>                ctrl.y = e.getY();<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"5528splitHere46","12120254splitHere46","mouseListener"
"5529splitHere46","12120254splitHere46","mouseMotionListener"
"5530splitHere46","12120254splitHere46","MouseDragged"
"5531splitHere46","12120254splitHere46","MouseClicked"
"5532splitHere46","12120254splitHere46","paintComponent"
"5533splitHere46","12120254splitHere46","public void paintComponent(Graphics g){super.paintComponent(g);"
"5534splitHere46","12120254splitHere46","import javax.swing.*;<newline46mondego>import java.awt.geom.*;<newline46mondego>import java.awt.*;<newline46mondego>import javax.swing.event.MouseInputAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>public class MyCurveApplet extends JApplet{<newline46mondego>     private static Marker selectedMarker;<newline46mondego>    @Override<newline46mondego>    public void init(){<newline46mondego>        this.add(pane);<newline46mondego>        pane.addMouseListener(new MouseHandler());<newline46mondego>        pane.addMouseMotionListener(new MouseHandler());<newline46mondego>    }<newline46mondego>    private class CurvePane extends JComponent{<newline46mondego>        @Override<newline46mondego>        public void paintComponent(Graphics g){<newline46mondego>            super.paintComponent(g);<newline46mondego>            Graphics2D g2D = (Graphics2D)g;<newline46mondego>            if(a!=null&&b!=null&&ctrl!=null){<newline46mondego>                System.out.println(<doubleQuotes46>Repainted!<doubleQuotes46>);<newline46mondego>                String text;<newline46mondego>                aMark = new Marker(a,<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>                bMark = new Marker(b,<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>                ctrlMark = new Marker(ctrl,<doubleQuotes46>ctrl<doubleQuotes46>);<newline46mondego>                quadCurve = new QuadCurve2D.Double(a.x, a.y, ctrl.x, ctrl.y, b.x, b.y);<newline46mondego><newline46mondego>                aMark.draw(g);<newline46mondego>                g2D.setPaint(Color.BLACK);<newline46mondego>                text = <doubleQuotes46>A<doubleQuotes46>+<doubleQuotes46>\n<doubleQuotes46>+<doubleQuotes46>(<doubleQuotes46>+a.x+<doubleQuotes46>,<doubleQuotes46>+a.y+<doubleQuotes46>)<doubleQuotes46>;<newline46mondego>                g2D.drawString(text,(int)a.x,(int)a.y+30);<newline46mondego>                bMark.draw(g);<newline46mondego>                g2D.setPaint(Color.BLACK);<newline46mondego>                text = <doubleQuotes46>B<doubleQuotes46>+<doubleQuotes46>\n<doubleQuotes46>+<doubleQuotes46>(<doubleQuotes46>+b.x+<doubleQuotes46>,<doubleQuotes46>+b.y+<doubleQuotes46>)<doubleQuotes46>;<newline46mondego>                g2D.drawString(text,(int)b.x,(int)b.y+30);<newline46mondego>                ctrlMark.draw(g);<newline46mondego>                g2D.setPaint(Color.BLACK);<newline46mondego>                text = <doubleQuotes46>Control<doubleQuotes46>+<doubleQuotes46>\n<doubleQuotes46>+<doubleQuotes46>(<doubleQuotes46>+ctrl.x+<doubleQuotes46>,<doubleQuotes46>+ctrl.y+<doubleQuotes46>)<doubleQuotes46>;<newline46mondego>                g2D.drawString(text,(int)ctrl.x,(int)ctrl.y+30);<newline46mondego><newline46mondego>                g2D.setPaint(Color.BLACK);<newline46mondego>                g2D.draw(quadCurve);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    private class MouseHandler extends java.awt.event.MouseAdapter{<newline46mondego>        @Override<newline46mondego>        public void mousePressed(MouseEvent e){<newline46mondego><newline46mondego>            if(a==null||b==null||ctrl==null){<newline46mondego>                System.out.println(<doubleQuotes46>FOO<doubleQuotes46>);<newline46mondego>                if(a==null){<newline46mondego>                    a = new Point2D.Double(e.getX(), e.getY());<newline46mondego>                }else if(b==null){<newline46mondego>                    b = new Point2D.Double(e.getX(), e.getY());<newline46mondego>                }else{<newline46mondego>                    ctrl = new Point2D.Double(e.getX(), e.getY());<newline46mondego>                }<newline46mondego>            }else if(aMark!=null&&bMark!=null&&ctrlMark!=null){<newline46mondego>                if(aMark.contains(e.getX(),e.getY())){<newline46mondego>                    System.out.println(<doubleQuotes46>SelecteMarker A<doubleQuotes46>);<newline46mondego>                    selectedMarker = aMark;<newline46mondego>                }else if(bMark.contains(e.getX(),e.getY())){<newline46mondego>                    System.out.println(<doubleQuotes46>SelecteMarker B<doubleQuotes46>);<newline46mondego>                    selectedMarker = bMark;<newline46mondego>                }else if(ctrlMark.contains(e.getX(),e.getY())){<newline46mondego>                    System.out.println(<doubleQuotes46>SelecteMarker CTRL<doubleQuotes46>);<newline46mondego>                    selectedMarker = ctrlMark;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void mouseDragged(MouseEvent e){<newline46mondego>            if(selectedMarker!=null){<newline46mondego>                if (0 == selectedMarker.name.compareTo(<doubleQuotes46>a<doubleQuotes46>)){<newline46mondego>                    a.x = e.getX();<newline46mondego>                    a.y = e.getY(); <newline46mondego>                }else if (0 == selectedMarker.name.compareTo(<doubleQuotes46>b<doubleQuotes46>)){<newline46mondego>                    b.x = e.getX();<newline46mondego>                    b.y = e.getY();<newline46mondego>                }else if (0 == selectedMarker.name.compareTo(<doubleQuotes46>ctrl<doubleQuotes46>)){<newline46mondego>                    ctrl.x = e.getX();<newline46mondego>                    ctrl.y = e.getY();<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>                pane.repaint();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void mouseReleased(MouseEvent e){<newline46mondego>            System.out.println(<doubleQuotes46>SelectedMark NULL<doubleQuotes46>);<newline46mondego>            selectedMarker = null;<newline46mondego>            pane.repaint();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    private class Marker{<newline46mondego>        public String name;<newline46mondego>        public Marker(Point2D.Double center, String name){<newline46mondego>            this.name = name;<newline46mondego>            this.center.setLocation(center);<newline46mondego>            circle = new Ellipse2D.Double(center.x,center.y,r,r);<newline46mondego>        }<newline46mondego>        public void draw(Graphics g){<newline46mondego>            Graphics2D g2D = (Graphics2D)g;<newline46mondego>            if(circle!=null){<newline46mondego>                g2D.setPaint(selectedColor);<newline46mondego>                g2D.draw(circle);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        public boolean contains(int x,int y){<newline46mondego>            return circle.contains(x, y);<newline46mondego>        }<newline46mondego>        public void setLocation(int x,int y){<newline46mondego>            center.x = x;<newline46mondego>            center.y = y;<newline46mondego>            circle = new Ellipse2D.Double(center.x,center.y,r,r);<newline46mondego>        }<newline46mondego>        public Point2D.Double center = new Point2D.Double();<newline46mondego>        private Ellipse2D.Double circle;<newline46mondego>        private static final double r = 6;<newline46mondego>    }<newline46mondego><newline46mondego>    private Point2D.Double a;<newline46mondego>    private Point2D.Double b;<newline46mondego>    private Point2D.Double ctrl;<newline46mondego>    private QuadCurve2D.Double quadCurve;<newline46mondego>    Marker aMark;<newline46mondego>    Marker bMark;<newline46mondego>    Marker ctrlMark;<newline46mondego>    private Color selectedColor = Color.orange;<newline46mondego>    private CurvePane pane = new CurvePane();<newline46mondego>}<newline46mondego>"
"5535splitHere46","12120264splitHere46","// This should be a global singleton<newline46mondego>    JedisPool jedisPool = new JedisPool(poolConfig,<doubleQuotes46>localhost<doubleQuotes46>, 6379, 100);<newline46mondego><newline46mondego>    ExecutorService newFixedThreadPool = Executors.newFixedThreadPool(10);<newline46mondego>    newFixedThreadPool.submit(new Runnable() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            while(true){<newline46mondego>                try {<newline46mondego>                    Thread.sleep(1000);<newline46mondego>                } catch (InterruptedException e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>                Jedis jedis = jedisPool.getResource();<newline46mondego>                try {<newline46mondego>                   jedis.publish(<doubleQuotes46>CC<doubleQuotes46>, new Date().toString());<newline46mondego>                } catch (Exception e) {<newline46mondego>                   e.printStackTrace();<newline46mondego>                } finally {<newline46mondego>                   jedisPool.returnResource(jedis);<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"5536splitHere46","12120264splitHere46","new Thread(new Runnable() {<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            Jedis subscriberJedis = new Jedis(<doubleQuotes46>localhost<doubleQuotes46>);<newline46mondego>            try {<newline46mondego>                subscriberJedis.subscribe(new JedisPubSub() â€¦..,<doubleQuotes46>CC<doubleQuotes46>);<newline46mondego>            } catch (Exception e) {<newline46mondego>               e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }).start();<newline46mondego>"
"5537splitHere46","12120265splitHere46","org.eclipse.jface.dialogs.Dialog"
"5538splitHere46","12120265splitHere46","setShellStyle(SWT.CLOSE | SWT.TITLE | SWT.BORDER | SWT.OK | SWT.APPLICATION_MODAL);"
"5539splitHere46","12120265splitHere46","public CheckboxDialog(Shell parentShell) {<newline46mondego>    super(parentShell);<newline46mondego>    setShellStyle(SWT.CLOSE | SWT.TITLE | SWT.BORDER | SWT.OK | SWT.APPLICATION_MODAL);<newline46mondego>    setBlockOnOpen(true);<newline46mondego>}<newline46mondego>"
"5540splitHere46","12120265splitHere46","parentShell"
"5541splitHere46","12120288splitHere46","aTransformer .setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>aTransformer .setOutputProperty(OutputKeys.METHOD, <doubleQuotes46>xml<doubleQuotes46>);<newline46mondego>aTransformer .setOutputProperty(<doubleQuotes46>{http://xml.apache.org/xslt}indent-amount<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>);<newline46mondego>"
"5542splitHere46","12120288splitHere46","List<String> headers = new ArrayList<String>(5);<newline46mondego><newline46mondego>File file = new File(<doubleQuotes46>Names2.csv<doubleQuotes46>);<newline46mondego>BufferedReader reader = null;<newline46mondego><newline46mondego>try {<newline46mondego><newline46mondego>    DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder domBuilder = domFactory.newDocumentBuilder();<newline46mondego><newline46mondego>    Document newDoc = domBuilder.newDocument();<newline46mondego>    // Root element<newline46mondego>    Element rootElement = newDoc.createElement(<doubleQuotes46>XMLCreators<doubleQuotes46>);<newline46mondego>    newDoc.appendChild(rootElement);<newline46mondego><newline46mondego>    reader = new BufferedReader(new FileReader(file));<newline46mondego>    int line = 0;<newline46mondego><newline46mondego>    String text = null;<newline46mondego>    while ((text = reader.readLine()) != null) {<newline46mondego><newline46mondego>        StringTokenizer st = new StringTokenizer(text, <doubleQuotes46> <doubleQuotes46>, false);    <newline46mondego>        String[] rowValues = new String[st.countTokens()];<newline46mondego>        int index = 0;<newline46mondego>        while (st.hasMoreTokens()) {<newline46mondego><newline46mondego>            String next = st.nextToken();<newline46mondego>            rowValues[index++] = next;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        //String[] rowValues = text.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego><newline46mondego>        if (line == 0) { // Header row<newline46mondego>            for (String col : rowValues) {<newline46mondego>                headers.add(col);<newline46mondego>            }<newline46mondego>        } else { // Data row<newline46mondego>            Element rowElement = newDoc.createElement(<doubleQuotes46>row<doubleQuotes46>);<newline46mondego>            rootElement.appendChild(rowElement);<newline46mondego>            for (int col = 0; col < headers.size(); col++) {<newline46mondego>                String header = headers.get(col);<newline46mondego>                String value = null;<newline46mondego><newline46mondego>                if (col < rowValues.length) {<newline46mondego>                    value = rowValues[col];<newline46mondego>                } else {<newline46mondego>                    // ?? Default value<newline46mondego>                    value = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                }<newline46mondego><newline46mondego>                Element curElement = newDoc.createElement(header);<newline46mondego>                curElement.appendChild(newDoc.createTextNode(value));<newline46mondego>                rowElement.appendChild(curElement);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        line++;<newline46mondego>    }<newline46mondego><newline46mondego>    ByteArrayOutputStream baos = null;<newline46mondego>    OutputStreamWriter osw = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        baos = new ByteArrayOutputStream();<newline46mondego>        osw = new OutputStreamWriter(baos);<newline46mondego><newline46mondego>        TransformerFactory tranFactory = TransformerFactory.newInstance();<newline46mondego>        Transformer aTransformer = tranFactory.newTransformer();<newline46mondego>        aTransformer.setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>        aTransformer.setOutputProperty(OutputKeys.METHOD, <doubleQuotes46>xml<doubleQuotes46>);<newline46mondego>        aTransformer.setOutputProperty(<doubleQuotes46>{http://xml.apache.org/xslt}indent-amount<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>);<newline46mondego><newline46mondego>        Source src = new DOMSource(newDoc);<newline46mondego>        Result result = new StreamResult(osw);<newline46mondego>        aTransformer.transform(src, result);<newline46mondego><newline46mondego>        osw.flush();<newline46mondego>        System.out.println(new String(baos.toByteArray()));<newline46mondego>    } catch (Exception exp) {<newline46mondego>        exp.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            osw.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>        try {<newline46mondego>            baos.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>} catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"5543splitHere46","12120288splitHere46","List"
"5544splitHere46","12120288splitHere46","Map"
"5545splitHere46","12120288splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego><XMLCreators><newline46mondego>    <row><newline46mondego>        <Name>chi</Name><newline46mondego>        <Age>23</Age><newline46mondego>        <Sex/><newline46mondego>    </row><newline46mondego>    <row><newline46mondego>        <Name>kay</Name><newline46mondego>        <Age>19</Age><newline46mondego>        <Sex>male</Sex><newline46mondego>    </row><newline46mondego>    <row><newline46mondego>        <Name>John</Name><newline46mondego>        <Age>male</Age><newline46mondego>        <Sex/><newline46mondego>    </row><newline46mondego></XMLCreators><newline46mondego>"
"5546splitHere46","12120288splitHere46","public class XMLCreators {<newline46mondego>    // Protected Properties<newline46mondego><newline46mondego>    protected DocumentBuilderFactory domFactory = null;<newline46mondego>    protected DocumentBuilder domBuilder = null;<newline46mondego><newline46mondego>    public XMLCreators() {<newline46mondego>        try {<newline46mondego>            domFactory = DocumentBuilderFactory.newInstance();<newline46mondego>            domBuilder = domFactory.newDocumentBuilder();<newline46mondego>        } catch (FactoryConfigurationError exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        } catch (ParserConfigurationException exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        } catch (Exception exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public int convertFile(String csvFileName, String xmlFileName,<newline46mondego>                    String delimiter) {<newline46mondego><newline46mondego>        int rowsCount = -1;<newline46mondego>        try {<newline46mondego>            Document newDoc = domBuilder.newDocument();<newline46mondego>            // Root element<newline46mondego>            Element rootElement = newDoc.createElement(<doubleQuotes46>XMLCreators<doubleQuotes46>);<newline46mondego>            newDoc.appendChild(rootElement);<newline46mondego>            // Read csv file<newline46mondego>            BufferedReader csvReader;<newline46mondego>            csvReader = new BufferedReader(new FileReader(csvFileName));<newline46mondego><newline46mondego>//                int fieldCount = 0;<newline46mondego>//                String[] csvFields = null;<newline46mondego>//                StringTokenizer stringTokenizer = null;<newline46mondego>//<newline46mondego>//                // Assumes the first line in CSV file is column/field names<newline46mondego>//                // The column names are used to name the elements in the XML file,<newline46mondego>//                // avoid the use of Space or other characters not suitable for XML element<newline46mondego>//                // naming<newline46mondego>//<newline46mondego>//                String curLine = csvReader.readLine();<newline46mondego>//                if (curLine != null) {<newline46mondego>//                    // how about other form of csv files?<newline46mondego>//                    stringTokenizer = new StringTokenizer(curLine, delimiter);<newline46mondego>//                    fieldCount = stringTokenizer.countTokens();<newline46mondego>//                    if (fieldCount > 0) {<newline46mondego>//                        csvFields = new String[fieldCount];<newline46mondego>//                        int i = 0;<newline46mondego>//                        while (stringTokenizer.hasMoreElements()) {<newline46mondego>//                            csvFields[i++] = String.valueOf(stringTokenizer.nextElement());<newline46mondego>//                        }<newline46mondego>//                    }<newline46mondego>//                }<newline46mondego>//<newline46mondego>//                // At this point the coulmns are known, now read data by lines<newline46mondego>//                while ((curLine = csvReader.readLine()) != null) {<newline46mondego>//                    stringTokenizer = new StringTokenizer(curLine, delimiter);<newline46mondego>//                    fieldCount = stringTokenizer.countTokens();<newline46mondego>//                    if (fieldCount > 0) {<newline46mondego>//                        Element rowElement = newDoc.createElement(<doubleQuotes46>row<doubleQuotes46>);<newline46mondego>//                        int i = 0;<newline46mondego>//                        while (stringTokenizer.hasMoreElements()) {<newline46mondego>//                            try {<newline46mondego>//                                String curValue = String.valueOf(stringTokenizer.nextElement());<newline46mondego>//                                Element curElement = newDoc.createElement(csvFields[i++]);<newline46mondego>//                                curElement.appendChild(newDoc.createTextNode(curValue));<newline46mondego>//                                rowElement.appendChild(curElement);<newline46mondego>//                            } catch (Exception exp) {<newline46mondego>//                            }<newline46mondego>//                        }<newline46mondego>//                        rootElement.appendChild(rowElement);<newline46mondego>//                        rowsCount++;<newline46mondego>//                    }<newline46mondego>//                }<newline46mondego>//                csvReader.close();<newline46mondego>//<newline46mondego>//                // Save the document to the disk file<newline46mondego>//                TransformerFactory tranFactory = TransformerFactory.newInstance();<newline46mondego>//                Transformer aTransformer = tranFactory.newTransformer();<newline46mondego>//                Source src = new DOMSource(newDoc);<newline46mondego>//                Result result = new StreamResult(new File(xmlFileName));<newline46mondego>//                aTransformer.transform(src, result);<newline46mondego>//                rowsCount++;<newline46mondego>            int line = 0;<newline46mondego>            List<String> headers = new ArrayList<String>(5);<newline46mondego><newline46mondego>            String text = null;<newline46mondego>            while ((text = csvReader.readLine()) != null) {<newline46mondego><newline46mondego>                StringTokenizer st = new StringTokenizer(text, delimiter, false);<newline46mondego>                String[] rowValues = new String[st.countTokens()];<newline46mondego>                int index = 0;<newline46mondego>                while (st.hasMoreTokens()) {<newline46mondego><newline46mondego>                    String next = st.nextToken();<newline46mondego>                    rowValues[index++] = next;<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>                if (line == 0) { // Header row<newline46mondego><newline46mondego>                    for (String col : rowValues) {<newline46mondego>                        headers.add(col);<newline46mondego>                    }<newline46mondego><newline46mondego>                } else { // Data row<newline46mondego><newline46mondego>                    rowsCount++;<newline46mondego><newline46mondego>                    Element rowElement = newDoc.createElement(<doubleQuotes46>row<doubleQuotes46>);<newline46mondego>                    rootElement.appendChild(rowElement);<newline46mondego>                    for (int col = 0; col < headers.size(); col++) {<newline46mondego><newline46mondego>                        String header = headers.get(col);<newline46mondego>                        String value = null;<newline46mondego><newline46mondego>                        if (col < rowValues.length) {<newline46mondego><newline46mondego>                            value = rowValues[col];<newline46mondego><newline46mondego>                        } else {<newline46mondego>                            // ?? Default value<newline46mondego>                            value = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                        }<newline46mondego><newline46mondego>                        Element curElement = newDoc.createElement(header);<newline46mondego>                        curElement.appendChild(newDoc.createTextNode(value));<newline46mondego>                        rowElement.appendChild(curElement);<newline46mondego><newline46mondego>                    }<newline46mondego><newline46mondego>                }<newline46mondego>                line++;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            ByteArrayOutputStream baos = null;<newline46mondego>            OutputStreamWriter osw = null;<newline46mondego><newline46mondego>            try {<newline46mondego><newline46mondego>                baos = new ByteArrayOutputStream();<newline46mondego>                osw = new OutputStreamWriter(baos);<newline46mondego><newline46mondego>                TransformerFactory tranFactory = TransformerFactory.newInstance();<newline46mondego>                Transformer aTransformer = tranFactory.newTransformer();<newline46mondego>                aTransformer.setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>                aTransformer.setOutputProperty(OutputKeys.METHOD, <doubleQuotes46>xml<doubleQuotes46>);<newline46mondego>                aTransformer.setOutputProperty(<doubleQuotes46>{http://xml.apache.org/xslt}indent-amount<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>);<newline46mondego><newline46mondego>                Source src = new DOMSource(newDoc);<newline46mondego>                Result result = new StreamResult(osw);<newline46mondego>                aTransformer.transform(src, result);<newline46mondego><newline46mondego>                osw.flush();<newline46mondego>                System.out.println(new String(baos.toByteArray()));<newline46mondego><newline46mondego>            } catch (Exception exp) {<newline46mondego>                exp.printStackTrace();<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    osw.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                }<newline46mondego>                try {<newline46mondego>                    baos.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            // Output to console for testing<newline46mondego>            // Resultt result = new StreamResult(System.out);<newline46mondego><newline46mondego>        } catch (IOException exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        } catch (Exception exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        }<newline46mondego>        return rowsCount;<newline46mondego>        // <doubleQuotes46>XLM Document has been created<doubleQuotes46> + rowsCount;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5547splitHere46","12120288splitHere46","public class XMLCreators {<newline46mondego>    // Protected Properties<newline46mondego><newline46mondego>    protected DocumentBuilderFactory domFactory = null;<newline46mondego>    protected DocumentBuilder domBuilder = null;<newline46mondego><newline46mondego>    public XMLCreators() {<newline46mondego>        try {<newline46mondego>            domFactory = DocumentBuilderFactory.newInstance();<newline46mondego>            domBuilder = domFactory.newDocumentBuilder();<newline46mondego>        } catch (FactoryConfigurationError exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        } catch (ParserConfigurationException exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        } catch (Exception exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public int convertFile(String csvFileName, String xmlFileName,<newline46mondego>                    String delimiter) {<newline46mondego><newline46mondego>        int rowsCount = -1;<newline46mondego>        BufferedReader csvReader;<newline46mondego>        try {<newline46mondego>            Document newDoc = domBuilder.newDocument();<newline46mondego>            // Root element<newline46mondego>            Element rootElement = newDoc.createElement(<doubleQuotes46>XMLCreators<doubleQuotes46>);<newline46mondego>            newDoc.appendChild(rootElement);<newline46mondego>            // Read csv file<newline46mondego>            csvReader = new BufferedReader(new FileReader(csvFileName));<newline46mondego><newline46mondego>            //** Now using the OpenCSV **//<newline46mondego>            CSVReader reader = new CSVReader(new FileReader(<doubleQuotes46>names.csv<doubleQuotes46>), delimiter.charAt(0));<newline46mondego>            //CSVReader reader = new CSVReader(csvReader);<newline46mondego>            String[] nextLine;<newline46mondego>            int line = 0;<newline46mondego>            List<String> headers = new ArrayList<String>(5);<newline46mondego>            while ((nextLine = reader.readNext()) != null) {<newline46mondego><newline46mondego>                if (line == 0) { // Header row<newline46mondego>                    for (String col : nextLine) {<newline46mondego>                        headers.add(col);<newline46mondego>                    }<newline46mondego>                } else { // Data row<newline46mondego>                    Element rowElement = newDoc.createElement(<doubleQuotes46>row<doubleQuotes46>);<newline46mondego>                    rootElement.appendChild(rowElement);<newline46mondego><newline46mondego>                    int col = 0;<newline46mondego>                    for (String value : nextLine) {<newline46mondego>                        String header = headers.get(col);<newline46mondego><newline46mondego>                        Element curElement = newDoc.createElement(header);<newline46mondego>                        curElement.appendChild(newDoc.createTextNode(value.trim()));<newline46mondego>                        rowElement.appendChild(curElement);<newline46mondego><newline46mondego>                        col++;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                line++;<newline46mondego>            }<newline46mondego>            //** End of CSV parsing**//<newline46mondego><newline46mondego>            FileWriter writer = null;<newline46mondego><newline46mondego>            try {<newline46mondego><newline46mondego>                writer = new FileWriter(new File(xmlFileName));<newline46mondego><newline46mondego>                TransformerFactory tranFactory = TransformerFactory.newInstance();<newline46mondego>                Transformer aTransformer = tranFactory.newTransformer();<newline46mondego>                aTransformer.setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>                aTransformer.setOutputProperty(OutputKeys.METHOD, <doubleQuotes46>xml<doubleQuotes46>);<newline46mondego>                aTransformer.setOutputProperty(<doubleQuotes46>{http://xml.apache.org/xslt}indent-amount<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>);<newline46mondego><newline46mondego>                Source src = new DOMSource(newDoc);<newline46mondego>                Result result = new StreamResult(writer);<newline46mondego>                aTransformer.transform(src, result);<newline46mondego><newline46mondego>                writer.flush();<newline46mondego><newline46mondego>            } catch (Exception exp) {<newline46mondego>                exp.printStackTrace();<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    writer.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            // Output to console for testing<newline46mondego>            // Resultt result = new StreamResult(System.out);<newline46mondego><newline46mondego>        } catch (IOException exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        } catch (Exception exp) {<newline46mondego>            System.err.println(exp.toString());<newline46mondego>        }<newline46mondego>        return rowsCount;<newline46mondego>        // <doubleQuotes46>XLM Document has been created<doubleQuotes46> + rowsCount;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5548splitHere46","12120365splitHere46","Runtime.addShutdownHook"
"5549splitHere46","12120365splitHere46","exit"
"5550splitHere46","12120365splitHere46","System.exit"
"5551splitHere46","12120365splitHere46","^C"
"5552splitHere46","12120365splitHere46","exit"
"5553splitHere46","12120365splitHere46","SIGKILL"
"5554splitHere46","12120365splitHere46","TerminateProcess"
"5555splitHere46","12120365splitHere46","JOptionPane"
"5556splitHere46","12120393splitHere46","Filters"
"5557splitHere46","12120393splitHere46","Filters"
"5558splitHere46","12120446splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>    <resources><newline46mondego>    <string-array name=<doubleQuotes46>listDisplayWord<doubleQuotes46>><newline46mondego>     <item>Option 1</item><newline46mondego>     <item>Option 2</item><newline46mondego>     <item>Option 3</item><newline46mondego>    </string-array><newline46mondego>    <string-array name=<doubleQuotes46>listReturnValue<doubleQuotes46>><newline46mondego>     <item>1 is selected</item><newline46mondego>     <item>2 is selected</item><newline46mondego>     <item>3 is selected</item><newline46mondego>    </string-array><newline46mondego>    </resources><newline46mondego>"
"5559splitHere46","12120446splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><PreferenceScreen xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46>><newline46mondego> <ListPreference<newline46mondego>  android:title=<doubleQuotes46>List Preference<doubleQuotes46><newline46mondego>  android:summary=<doubleQuotes46>Select the option of the list<doubleQuotes46><newline46mondego>  android:key=<doubleQuotes46>listPref<doubleQuotes46><newline46mondego>  android:entries=<doubleQuotes46>@array/listDisplayWord<doubleQuotes46><newline46mondego>  android:entryValues=<doubleQuotes46>@array/listReturnValue<doubleQuotes46> /><newline46mondego></PreferenceScreen><newline46mondego>"
"5560splitHere46","12120446splitHere46","package com.exercise.AndroidListPreference;<newline46mondego>import com.exercise.AndroidListPreference.R;<newline46mondego><newline46mondego>import android.os.Bundle;<newline46mondego>import android.preference.PreferenceActivity;<newline46mondego><newline46mondego>public class SetPreferences extends PreferenceActivity {<newline46mondego><newline46mondego> @Override<newline46mondego> protected void onCreate(Bundle savedInstanceState) {<newline46mondego>  // TODO Auto-generated method stub<newline46mondego>  super.onCreate(savedInstanceState);<newline46mondego>  addPreferencesFromResource(R.xml.preferences);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"5561splitHere46","12120446splitHere46","package com.exercise.AndroidListPreference;<newline46mondego><newline46mondego>import android.app.Activity;<newline46mondego>import android.content.Intent;<newline46mondego>import android.content.SharedPreferences;<newline46mondego>import android.os.Bundle;<newline46mondego>import android.preference.PreferenceManager;<newline46mondego>import android.view.View;<newline46mondego>import android.widget.Button;<newline46mondego>import android.widget.TextView;<newline46mondego>import android.widget.Toast;<newline46mondego><newline46mondego>public class AndroidListPreference extends Activity {<newline46mondego><newline46mondego> TextView myListPref;<newline46mondego><newline46mondego>   /** Called when the activity is first created. */<newline46mondego>   @Override<newline46mondego>   public void onCreate(Bundle savedInstanceState) {<newline46mondego>       super.onCreate(savedInstanceState);<newline46mondego>       setContentView(R.layout.main);<newline46mondego>       myListPref = (TextView)findViewById(R.id.list_pref);<newline46mondego>       Button buttonSetPreference = (Button)findViewById(R.id.setpreference);<newline46mondego><newline46mondego>       buttonSetPreference.setOnClickListener(new Button.OnClickListener(){<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void onClick(View v) {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego>    startActivity(new Intent(AndroidListPreference.this, SetPreferences.class));<newline46mondego>   }});<newline46mondego>   }<newline46mondego><newline46mondego> @Override<newline46mondego> protected void onResume() {<newline46mondego>  // TODO Auto-generated method stub<newline46mondego>  super.onResume();<newline46mondego>  Toast.makeText(this, <doubleQuotes46>onResume<doubleQuotes46>, Toast.LENGTH_LONG).show();<newline46mondego>  SharedPreferences myPreference=PreferenceManager.getDefaultSharedPreferences(this);<newline46mondego>  String myListPreference = myPreference.getString(<doubleQuotes46>listPref<doubleQuotes46>, <doubleQuotes46>default choice<doubleQuotes46>);<newline46mondego>  myListPref.setText(myListPreference);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"5562splitHere46","12120446splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><manifest xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>     package=<doubleQuotes46>com.exercise.AndroidListPreference<doubleQuotes46><newline46mondego>     android:versionCode=<doubleQuotes46>1<doubleQuotes46><newline46mondego>     android:versionName=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego>   <application android:icon=<doubleQuotes46>@drawable/icon<doubleQuotes46> android:label=<doubleQuotes46>@string/app_name<doubleQuotes46>><newline46mondego>       <activity android:name=<doubleQuotes46>.AndroidListPreference<doubleQuotes46><newline46mondego>                 android:label=<doubleQuotes46>@string/app_name<doubleQuotes46>><newline46mondego>           <intent-filter><newline46mondego>               <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego>               <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>           </intent-filter><newline46mondego>       </activity><newline46mondego>  <activity android:name=<doubleQuotes46>.SetPreferences<doubleQuotes46> /><newline46mondego>   </application><newline46mondego>   <uses-sdk android:minSdkVersion=<doubleQuotes46>4<doubleQuotes46> /><newline46mondego><newline46mondego></manifest><newline46mondego>"
"5563splitHere46","12120585splitHere46","Request"
"5564splitHere46","12120585splitHere46","Request"
"5565splitHere46","12120585splitHere46","instanceof"
"5566splitHere46","12120619splitHere46","@(route: Call)<newline46mondego><newline46mondego>@helper.form(action = route) {<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"5567splitHere46","12120643splitHere46","// Observe the <doubleQuotes46>local<doubleQuotes46> in the connection string!<newline46mondego>Connection con = DriverManager.getConnection(<newline46mondego>    <doubleQuotes46>jdbc:firebirdsql:local:C:/data/firebird/test.db<doubleQuotes46>, <doubleQuotes46>TEST<doubleQuotes46>, <doubleQuotes46>TEST<doubleQuotes46>);<newline46mondego>"
"5568splitHere46","12120643splitHere46","// With this connection, I'm not able to reproduce the issue:<newline46mondego>Connection con1 = DriverManager.getConnection(<newline46mondego>    <doubleQuotes46>jdbc:firebirdsql:localhost:C:/data/firebird/test.db<doubleQuotes46>, <doubleQuotes46>TEST<doubleQuotes46>, <doubleQuotes46>TEST<doubleQuotes46>);<newline46mondego>"
"5569splitHere46","12120736splitHere46","import java.util.ArrayList;<newline46mondego><newline46mondego>import weka.core.Attribute;<newline46mondego>import weka.core.DenseInstance;<newline46mondego>import weka.core.Instance;<newline46mondego>import weka.core.Instances;<newline46mondego><newline46mondego>public class Program {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        ArrayList<Attribute> atts = new ArrayList<Attribute>(2);<newline46mondego>        ArrayList<String> classVal = new ArrayList<String>();<newline46mondego>        classVal.add(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>        classVal.add(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>        atts.add(new Attribute(<doubleQuotes46>content<doubleQuotes46>,(ArrayList<String>)null));<newline46mondego>        atts.add(new Attribute(<doubleQuotes46>@@class@@<doubleQuotes46>,classVal));<newline46mondego><newline46mondego>        Instances dataRaw = new Instances(<doubleQuotes46>TestInstances<doubleQuotes46>,atts,0);<newline46mondego>        System.out.println(<doubleQuotes46>Before adding any instance<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>--------------------------<doubleQuotes46>);<newline46mondego>        System.out.println(dataRaw);<newline46mondego>        System.out.println(<doubleQuotes46>--------------------------<doubleQuotes46>);<newline46mondego><newline46mondego>        double[] instanceValue1 = new double[dataRaw.numAttributes()];<newline46mondego><newline46mondego>        instanceValue1[0] = dataRaw.attribute(0).addStringValue(<doubleQuotes46>This is a string!<doubleQuotes46>);<newline46mondego>        instanceValue1[1] = 0;<newline46mondego><newline46mondego>        dataRaw.add(new DenseInstance(1.0, instanceValue1));<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>After adding a instance<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>--------------------------<doubleQuotes46>);<newline46mondego>        System.out.println(dataRaw);<newline46mondego>        System.out.println(<doubleQuotes46>--------------------------<doubleQuotes46>);<newline46mondego><newline46mondego>        double[] instanceValue2 = new double[dataRaw.numAttributes()];<newline46mondego><newline46mondego>        instanceValue2[0] = dataRaw.attribute(0).addStringValue(<doubleQuotes46>This is second string!<doubleQuotes46>);<newline46mondego>        instanceValue2[1] = 1;<newline46mondego><newline46mondego>        dataRaw.add(new DenseInstance(1.0, instanceValue2));<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>After adding second instance<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>--------------------------<doubleQuotes46>);<newline46mondego>        System.out.println(dataRaw);<newline46mondego>        System.out.println(<doubleQuotes46>--------------------------<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5570splitHere46","12120736splitHere46","Before adding any instance<newline46mondego>--------------------------<newline46mondego>@relation TestInstances<newline46mondego><newline46mondego>@attribute content string<newline46mondego>@attribute @@class@@ {A,B}<newline46mondego><newline46mondego>@data<newline46mondego><newline46mondego>--------------------------<newline46mondego>After adding a instance<newline46mondego>--------------------------<newline46mondego>@relation TestInstances<newline46mondego><newline46mondego>@attribute content string<newline46mondego>@attribute @@class@@ {A,B}<newline46mondego><newline46mondego>@data<newline46mondego>'This is a string!',A<newline46mondego>--------------------------<newline46mondego>After adding second instance<newline46mondego>--------------------------<newline46mondego>@relation TestInstances<newline46mondego><newline46mondego>@attribute content string<newline46mondego>@attribute @@class@@ {A,B}<newline46mondego><newline46mondego>@data<newline46mondego>'This is a string!',A<newline46mondego>'This is second string!',B<newline46mondego>--------------------------<newline46mondego>"
"5571splitHere46","12120927splitHere46","JFrame"
"5572splitHere46","12120927splitHere46","Registry"
"5573splitHere46","12120927splitHere46","Registry"
"5574splitHere46","12120927splitHere46","ActionListener"
"5575splitHere46","12120927splitHere46","re"
"5576splitHere46","12120927splitHere46","Registry"
"5577splitHere46","12120927splitHere46","public JFrame getFrame() {<newline46mondego>   return frame;<newline46mondego>}<newline46mondego>"
"5578splitHere46","12120927splitHere46","BeansTest.save()"
"5579splitHere46","12120927splitHere46","if (re.getFrame() != null) {<newline46mondego>   encoder.writeObject(re.getFrame());<newline46mondego>}<newline46mondego>"
"5580splitHere46","12121014splitHere46","TreeMap<Integer, Object>"
"5581splitHere46","12121014splitHere46","put"
"5582splitHere46","12121014splitHere46","values()"
"5583splitHere46","12121298splitHere46","session.createConsumer(..)"
"5584splitHere46","12121298splitHere46","consumer.receive()"
"5585splitHere46","12121298splitHere46","consumer.receive(timeout)"
"5586splitHere46","12121330splitHere46","String.split(<doubleQuotes46>,<doubleQuotes46>)"
"5587splitHere46","12121330splitHere46","String str = <doubleQuotes46>Angelo,Marco,Nick,Brandon,Paul<doubleQuotes46>;<newline46mondego>String[] myStrings = str.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>String marco = myStrings[1];<newline46mondego>"
"5588splitHere46","12121334splitHere46","boolean cancel(boolean mayInterruptIfRunning)<newline46mondego>"
"5589splitHere46","12121334splitHere46","mayInterruptIfRunning=true<newline46mondego>"
"5590splitHere46","12121474splitHere46","executorThread.start();<newline46mondego>"
"5591splitHere46","12121474splitHere46","executorThread.join();<newline46mondego>"
"5592splitHere46","12121474splitHere46","sleep()"
"5593splitHere46","12121683splitHere46","import java.awt.BorderLayout;<newline46mondego>import javax.swing.JComponent;<newline46mondego>import javax.swing.JDesktopPane;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JInternalFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.plaf.DesktopPaneUI;<newline46mondego><newline46mondego>public class AddingInternalFramestoaJDesktopPane {<newline46mondego>  public static void main(final String[] args) throws Exception {<newline46mondego>    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>    JFrame.setDefaultLookAndFeelDecorated(true);<newline46mondego>    JFrame frame = new JFrame();<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    JDesktopPane desktop = new JDesktopPane();<newline46mondego>    desktop.setUI(new DesktopPaneUI() {<newline46mondego>    @Override<newline46mondego>        public void installUI(JComponent c) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            try {<newline46mondego>                UIManager.setLookAndFeel(<doubleQuotes46>com.sun.java.swing.plaf.motif.MotifLookAndFeel<doubleQuotes46>);<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>            super.installUI(c);<newline46mondego>        }   <newline46mondego>    });<newline46mondego>    JInternalFrame internalFrame = new JInternalFrame(<doubleQuotes46>Can Do All<doubleQuotes46>, true, true, true, true);<newline46mondego>    desktop.add(internalFrame);<newline46mondego>    internalFrame.setBounds(25, 25, 200, 100);<newline46mondego>    JLabel label = new JLabel(internalFrame.getTitle(), JLabel.CENTER);<newline46mondego>    internalFrame.add(label, BorderLayout.CENTER);<newline46mondego>    internalFrame.setVisible(true);<newline46mondego>    frame.add(desktop, BorderLayout.CENTER);<newline46mondego>    frame.setSize(500, 300);<newline46mondego>    frame.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5594splitHere46","12121719splitHere46",".ipa"
"5595splitHere46","12121719splitHere46",".APK"
"5596splitHere46","12121719splitHere46",".XAP"
"5597splitHere46","12121719splitHere46",".cod"
"5598splitHere46","12121719splitHere46",".jad"
"5599splitHere46","12121719splitHere46",".azw"
"5600splitHere46","12121719splitHere46",".txt"
"5601splitHere46","12121719splitHere46",".MOBI"
"5602splitHere46","12121719splitHere46",".APK"
"5603splitHere46","12121817splitHere46","import au.edu.uow.Collection.Album;<newline46mondego>"
"5604splitHere46","12121817splitHere46","public class DVDAlbum implements au.edu.uow.Collection.Album{ }<newline46mondego>"
"5605splitHere46","12122115splitHere46","List<String> itemNos = new ArrayList<String>();<newline46mondego>List<String> itemNames = new ArrayList<String>();<newline46mondego>for (Order order : orderHistory.getOrders()) {<newline46mondego>  for (OrderItem item : order.getItems()) {<newline46mondego>    itemNos.add(item.getItemNo());<newline46mondego>    itemNames.add(item.getItemName());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5606splitHere46","12122194splitHere46","Location"
"5607splitHere46","12122194splitHere46","distanceBetween(startLatitude, startLongitude, endLatitude, endLongitude, results)"
"5608splitHere46","12122207splitHere46","O(logN)"
"5609splitHere46","12122218splitHere46","ArrayPerm"
"5610splitHere46","12122218splitHere46","public ArrayPerm(int n) {<newline46mondego>    size = n;<newline46mondego>    int[] Stack = new int[n];<newline46mondego>    top = -1;<newline46mondego>}<newline46mondego>"
"5611splitHere46","12122218splitHere46","Stack"
"5612splitHere46","12122218splitHere46","Stack = new int[n];<newline46mondego>"
"5613splitHere46","12122294splitHere46","arrayMin"
"5614splitHere46","12122294splitHere46","min"
"5615splitHere46","12122294splitHere46","arrayMin"
"5616splitHere46","12122294splitHere46","min"
"5617splitHere46","12122294splitHere46","Integer.MAX_VALUE"
"5618splitHere46","12122294splitHere46","1"
"5619splitHere46","12122294splitHere46","2"
"5620splitHere46","12122294splitHere46","return min"
"5621splitHere46","12122294splitHere46","min"
"5622splitHere46","12122294splitHere46","i"
"5623splitHere46","12122294splitHere46","public static int arrayMin(int[] arr) {<newline46mondego>    int i = 0;<newline46mondego>    int min = Integer.MAX_VALUE;<newline46mondego>    if (arr == null) {<newline46mondego>        return 0; // What if 0 is the minimum value? What do you want to do in this case?<newline46mondego>    } else {<newline46mondego>        while (i < arr.length) {<newline46mondego>            if (arr[i] < min) {<newline46mondego>              min = arr[i];<newline46mondego>            }<newline46mondego>            i++;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return min;<newline46mondego>}<newline46mondego>"
"5624splitHere46","12122316splitHere46","@Controller"
"5625splitHere46","12122316splitHere46","@Service"
"5626splitHere46","12122316splitHere46","@Repository"
"5627splitHere46","12122316splitHere46","userData"
"5628splitHere46","12122316splitHere46","/data"
"5629splitHere46","12122316splitHere46","@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/data<doubleQuotes46>)<newline46mondego>public class UserDataController<newline46mondego>{<newline46mondego>    @Autowired<newline46mondego>    private UserService userService;<newline46mondego><newline46mondego>    @RequestMapping(value = <doubleQuotes46><doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>    public ModelAndView data(final Principal principal) {<newline46mondego>        Assert.notNull(principal); // throw if assertion fails<newline46mondego>        Assert.hasText(principal.getName());<newline46mondego><newline46mondego>        final UserData userData = this.userService.findByUserName(principal.getName());<newline46mondego>        Assert.notNull(userData, <doubleQuotes46>userData not found<doubleQuotes46>);<newline46mondego><newline46mondego>        return new ModelAndView(<doubleQuotes46>userData<doubleQuotes46>, <doubleQuotes46>userData<doubleQuotes46>, userData);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Service(<doubleQuotes46>userService<doubleQuotes46>)<newline46mondego>public class userService <newline46mondego>{<newline46mondego>    private static final String USERDATA_CACHE = <doubleQuotes46>com.acme.foo.UserData<doubleQuotes46>;<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    private UserDataRepository userDataRepository;<newline46mondego><newline46mondego>    @Cacheable(USERDATA_CACHE)<newline46mondego>    public UserData findByUserName(final String userName) {<newline46mondego>        return this.userDataRepository.findByUserName(userName);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Repository<newline46mondego>public class UserDataRepository<newline46mondego>{<newline46mondego>    // or use spring-data-jpa<newline46mondego><newline46mondego>    public UserData findByUserName(final String userName) {<newline46mondego>        // query table userData and create an UserData from results.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5630splitHere46","12122316splitHere46","@Cachable"
"5631splitHere46","12122318splitHere46","PieChartDemo2"
"5632splitHere46","12122318splitHere46","StandardPieSectionLabelGenerator"
"5633splitHere46","12122398splitHere46","CachingSurfaceManager"
"5634splitHere46","12122398splitHere46","sun.awt.image"
"5635splitHere46","12122522splitHere46","Foo foo = new Foo();<newline46mondego>foo = this.fooRepository.save(foo); // also work on Collections<newline46mondego>this.fooRepository.flush();<newline46mondego>// use foo.getId();<newline46mondego>"
"5636splitHere46","12122567splitHere46","int[] variableName;"
"5637splitHere46","12122567splitHere46","int variableName[];"
"5638splitHere46","12122567splitHere46","int[] x"
"5639splitHere46","12122567splitHere46","int x[]"
"5640splitHere46","12122567splitHere46","x"
"5641splitHere46","12122567splitHere46","int x[][][];<newline46mondego>int[] x[][];<newline46mondego>int[][] x[];<newline46mondego>int[][][] x;  // this one is the easiest to read!<newline46mondego>"
"5642splitHere46","12122567splitHere46","int m() [][][] {return null;}<newline46mondego>int[] m() [][] {return null;}<newline46mondego>int[][] m() [] {return null;}<newline46mondego>int[][][]  m() {return null;}  // this one is the easiest to read!<newline46mondego>"
"5643splitHere46","12122695splitHere46","MyComposite"
"5644splitHere46","12122695splitHere46","ChildEvent"
"5645splitHere46","12122695splitHere46","ChildEventListener"
"5646splitHere46","12122695splitHere46","MyComposite"
"5647splitHere46","12122695splitHere46","ChildEvent"
"5648splitHere46","12122695splitHere46","Composite"
"5649splitHere46","12122695splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.events.TypedEvent;<newline46mondego>import org.eclipse.swt.internal.SWTEventListener;<newline46mondego>import org.eclipse.swt.widgets.*;<newline46mondego><newline46mondego>/*<newline46mondego> * This example demonstrates the minimum amount of code required<newline46mondego> * to open an SWT Shell and process the events.<newline46mondego> */<newline46mondego>public class HelloWorld1 {<newline46mondego><newline46mondego>public static void main (String [] args) {<newline46mondego>    Display display = new Display ();<newline46mondego>    Shell shell = new HelloWorld1 ().open (display);<newline46mondego>    while (!shell.isDisposed ()) {<newline46mondego>        if (!display.readAndDispatch ()) display.sleep ();<newline46mondego>    }<newline46mondego>    display.dispose ();<newline46mondego>}<newline46mondego><newline46mondego>public Shell open (Display display) {<newline46mondego>    Shell shell = new Shell (display);<newline46mondego>    MyComposite parent = new MyComposite(shell, SWT.NONE);<newline46mondego>    parent.addChildEventListener(new ChildEventListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void add(ChildEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>Child added.<doubleQuotes46>);<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>    MyComposite child = new MyComposite(parent, SWT.NONE);<newline46mondego><newline46mondego>//  shell.open ();<newline46mondego>    return shell;<newline46mondego>}<newline46mondego>}<newline46mondego><newline46mondego>class MyComposite extends Composite {<newline46mondego><newline46mondego>    ChildEventListener[] childEventListeners = new ChildEventListener[0];<newline46mondego><newline46mondego>    public MyComposite(Composite parent, int style) {<newline46mondego>        super(parent, style);<newline46mondego>        if (parent instanceof MyComposite){<newline46mondego>            ((MyComposite)parent).fireChildEvent(new ChildEvent(this));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public void addChildEventListener (ChildEventListener listener) {<newline46mondego>        checkWidget();<newline46mondego>        if (listener == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);<newline46mondego>        ChildEventListener[] newChildEventListeners = new ChildEventListener[childEventListeners.length + 1];<newline46mondego>        System.arraycopy(childEventListeners, 0, newChildEventListeners, 0, childEventListeners.length);<newline46mondego>        childEventListeners = newChildEventListeners;<newline46mondego>        childEventListeners[childEventListeners.length - 1] = listener;<newline46mondego>    }<newline46mondego>    public void removeChildEventListener (ChildEventListener listener) {<newline46mondego>        if (childEventListeners.length == 0) return;<newline46mondego>        int index = -1;<newline46mondego>        for (int i = 0; i < childEventListeners.length; i++) {<newline46mondego>            if (listener == childEventListeners[i]){<newline46mondego>                index = i;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if (index == -1) return;<newline46mondego>        if (childEventListeners.length == 1) {<newline46mondego>            childEventListeners = new ChildEventListener[0];<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        ChildEventListener[] newChildEventListeners = new ChildEventListener[childEventListeners.length - 1];<newline46mondego>        System.arraycopy (childEventListeners, 0, newChildEventListeners, 0, index);<newline46mondego>        System.arraycopy (childEventListeners, index + 1, newChildEventListeners, index, childEventListeners.length - index - 1);<newline46mondego>        childEventListeners = newChildEventListeners;<newline46mondego>    }<newline46mondego>    public void fireChildEvent(ChildEvent event){<newline46mondego>        for (int i = 0; i < childEventListeners.length; i++) {<newline46mondego>            childEventListeners[i].add (event);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>interface ChildEventListener extends SWTEventListener {<newline46mondego>    public void add(ChildEvent e);<newline46mondego>}<newline46mondego><newline46mondego>class ChildEvent extends TypedEvent {<newline46mondego><newline46mondego>    public ChildEvent(Widget widget) {<newline46mondego>        super(widget);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5650splitHere46","12122774splitHere46","setElement()"
"5651splitHere46","12122774splitHere46","getElement()"
"5652splitHere46","12122774splitHere46","public class HelloWorld extends UIObject {<newline46mondego><newline46mondego>  private static HelloWorldUiBinder uiBinder = <newline46mondego>        GWT.create(HelloWorldUiBinder.class);<newline46mondego><newline46mondego>  interface HelloWorldUiBinder extends UiBinder<Element, HelloWorld> {<newline46mondego>  }<newline46mondego><newline46mondego>  @UiField<newline46mondego>  SpanElement nameSpan;<newline46mondego><newline46mondego>  public HelloWorld() {<newline46mondego>    setElement(uiBinder.createAndBindUi(this));<newline46mondego>  }<newline46mondego><newline46mondego>  public void setName(String name) { <newline46mondego>    nameSpan.setInnerText(name); <newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"5653splitHere46","12122774splitHere46","public class HelloWorld implements EntryPoint {<newline46mondego><newline46mondego>  interface HelloWorldUiBinder extends UiBinder<Element, HelloWorld> {<newline46mondego>  }<newline46mondego><newline46mondego>  @UiField SpanElement nameSpan;<newline46mondego><newline46mondego>  public void onModuleLoad() {<newline46mondego>    final HelloWorldUiBinder uiBinder = GWT.create(HelloWorldUiBinder.class);<newline46mondego>    final Element element = uiBinder.createAndBindUi(this);<newline46mondego>    nameSpan.setInnerText(<doubleQuotes46>world<doubleQuotes46>);<newline46mondego>    Document.get().getBody().appendChild(element);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5654splitHere46","12123119splitHere46","Date temp = null;<newline46mondego>try {<newline46mondego>    temp = dateFormat.parse(timestamp);<newline46mondego>} catch (ParseException ex) {<newline46mondego>    Logger.getLogger(Visit.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>}<newline46mondego><newline46mondego>this.timestamp = (temp == null ? <some default Date value> : temp);<newline46mondego>"
"5655splitHere46","12123119splitHere46","IllegalArgumentException"
"5656splitHere46","12123143splitHere46","String.replaceAll(...)"
"5657splitHere46","12123289splitHere46","Pattern pat = Pattern.compile(<doubleQuotes46>[:?!@#$%^&*()]<doubleQuotes46>);<newline46mondego>String  str = <doubleQuotes46>SUGAR :::: SUGAR<doubleQuotes46>;<newline46mondego>Matcher m = pat.matcher(str);<newline46mondego>if (m.find()) {<newline46mondego>    System.out.println(<doubleQuotes46>string contains pattern<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5658splitHere46","12123289splitHere46",","
"5659splitHere46","12123485splitHere46","double aPower(double a, double x, int n)<newline46mondego>"
"5660splitHere46","12123485splitHere46","double aPower(double a, double x, int n){<newline46mondego>    if ( n == 0 ) return 1.0;<newline46mondego>    if ( n == 1 ) return a*x;<newline46mondego>"
"5661splitHere46","12123498splitHere46","server"
"5662splitHere46","12123498splitHere46","-server -XX:+PrintCompilation"
"5663splitHere46","12123498splitHere46","public static void main(String[] args) throws InterruptedException {<newline46mondego><newline46mondego>    for (int i = 0; i < 3; i++) {<newline46mondego>        loop1();<newline46mondego>        loop2();<newline46mondego>        loopBoth();<newline46mondego>    }<newline46mondego><newline46mondego>    long start = System.nanoTime();<newline46mondego><newline46mondego>    loop1();<newline46mondego><newline46mondego>    long end = System.nanoTime();<newline46mondego>    System.out.println((end - start) / 1000000);<newline46mondego><newline46mondego>    start = System.nanoTime();<newline46mondego>    loop2();<newline46mondego>    end = System.nanoTime();<newline46mondego>    System.out.println((end - start) / 1000000);<newline46mondego><newline46mondego>    start = System.nanoTime();<newline46mondego>    loopBoth();<newline46mondego>    end = System.nanoTime();<newline46mondego>    System.out.println((end - start) / 1000000);<newline46mondego>}<newline46mondego><newline46mondego>public static void loop1() {<newline46mondego>    int a = 188, aMax = 0;<newline46mondego>    for (int i = 0; i < 1000000000; i++) {<newline46mondego>        int t = a ^ i;<newline46mondego>        if (t > aMax) {<newline46mondego>            aMax = t;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(aMax);<newline46mondego>}<newline46mondego><newline46mondego>public static void loop2() {<newline46mondego>    int b = 144, bMax = 0;<newline46mondego>    for (int i = 0; i < 1000000000; i++) {<newline46mondego>        int t = b ^ i;<newline46mondego>        if (t > bMax) {<newline46mondego>            bMax = t;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(bMax);<newline46mondego>}<newline46mondego><newline46mondego>public static void loopBoth() {<newline46mondego>    int a = 188, b = 144, aMax = 0, bMax = 0;<newline46mondego><newline46mondego>    for (int i = 0; i < 1000000000; i++) {<newline46mondego>        int t = a ^ i;<newline46mondego>        if (t > aMax) {<newline46mondego>            aMax = t;<newline46mondego>        }<newline46mondego>        int u = b ^ i;<newline46mondego>        if (u > bMax) {<newline46mondego>            bMax = u;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(aMax);<newline46mondego>    System.out.println(bMax);<newline46mondego>}<newline46mondego>"
"5664splitHere46","12123563splitHere46","import java.util.*;<newline46mondego>import java.io.*;<newline46mondego>public class HangmanProject{<newline46mondego>   public static void main(String[] args) throws FileNotFoundException{ //this is the first thing that runs, the main method<newline46mondego>      GetFile gf = new GetFile();  //this will create the getFile object<newline46mondego>      try {<newline46mondego>         gf.getWords(); //runs the method that we make later<newline46mondego>      }<newline46mondego>      catch(FileNotFoundException potatoes) {   //this will print out error message if there is no words.txt<newline46mondego>         System.out.println(potatoes.getMessage());<newline46mondego>      }                                <newline46mondego>    } //closes main method<newline46mondego>}<newline46mondego>"
"5665splitHere46","12123563splitHere46","import java.util.*;<newline46mondego>import java.io.*;<newline46mondego>public class GetFile {        <newline46mondego>    //Here are your variables<newline46mondego>    private String[] wordList = new String[10];   <newline46mondego>    private int x = 0;                             <newline46mondego>    //good practice to have variables private;<newline46mondego>    //Now it is time for the constructor.<newline46mondego>    public GetFile() <newline46mondego>       { <newline46mondego>     //empty constructor; you don't need to have any instance variables declared.<newline46mondego>       } <newline46mondego>    public void getWords() throws FileNotFoundException {  //the big method for doing stuff<newline46mondego>        Scanner keyboard = new Scanner(System.in);    // to read user's input<newline46mondego>        System.out.println(<doubleQuotes46>Welcome to Hangman Project!<doubleQuotes46>);<newline46mondego>        Scanner wordScan = null;<newline46mondego>        wordScan = new Scanner(new File(<doubleQuotes46>words.txt<doubleQuotes46>));<newline46mondego>        while (wordScan.hasNext()) { //checking if there are more words<newline46mondego>            wordList[x] = wordScan.next();  <newline46mondego>            System.out.println(wordList[x]);  //print them out as the array is filled<newline46mondego>            x++;  <newline46mondego>            }<newline46mondego>        if (wordScan != null)<newline46mondego>           {<newline46mondego>           wordScan.close(); //close the file after you are finished<newline46mondego>           }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5666splitHere46","12123573splitHere46","initComponents()"
"5667splitHere46","12123573splitHere46","JScrollPane"
"5668splitHere46","12123573splitHere46","pnlResults"
"5669splitHere46","12123573splitHere46","JScrollPane"
"5670splitHere46","12123703splitHere46","ComponentRestraints"
"5671splitHere46","12123703splitHere46","MigLayout layout;<newline46mondego><newline46mondego>public Constructor(){<newline46mondego>   layout = new MigLayout();<newline46mondego>   ...<newline46mondego>   container.setLayout(layout);<newline46mondego>}<newline46mondego><newline46mondego>public void onMouseDrag(JPanel panel, int newX, int newY){<newline46mondego>   layout.setComponentConstraints(panel, <doubleQuotes46>pos <doubleQuotes46> + newX + <doubleQuotes46> <doubleQuotes46> + newY + <doubleQuotes46>, w 100%/3, h 100%<doubleQuotes46>);<newline46mondego>   container.validate(); // probably not necessary<newline46mondego>}<newline46mondego>"
"5672splitHere46","12123750splitHere46","/** Class with a non-default constructor and no-default constructor. */<newline46mondego>public class A {<newline46mondego>    private int value;<newline46mondego><newline46mondego>    /** No-arg constructor */<newline46mondego>    public A() { <newline46mondego>        this.value = 0;<newline46mondego>    }<newline46mondego><newline46mondego>    /** Non-default constructor */<newline46mondego>    public A(int value) { <newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getValue() { <newline46mondego>        return this.value;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/** Class that has a method that returns a reference to A using an anonymous inner class that inherits from A. */<newline46mondego>public class B {<newline46mondego>    public B() { ; }<newline46mondego><newline46mondego>    /** Returns reference of class A using anonymous inner class inheriting from A */<newline46mondego>    public A getReference() {<newline46mondego>         return new A(5) {<newline46mondego>              public int getValue() {<newline46mondego>                  return super.getValue() * 2;<newline46mondego>              }<newline46mondego>         };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5673splitHere46","12123935splitHere46","Callable<T>"
"5674splitHere46","12123935splitHere46","T call()"
"5675splitHere46","12123935splitHere46","public interface CallableWithString<T> {<newline46mondego>    T call(String arg); //Assuming you want a string argument<newline46mondego>}<newline46mondego>"
"5676splitHere46","12123935splitHere46","public static <T> T foo(CallableWithString<T> func) {<newline46mondego>    return func.call(<doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5677splitHere46","12124012splitHere46","**"
"5678splitHere46","12124012splitHere46","public class Register extends Activity {<newline46mondego><newline46mondego>    // <doubleQuotes46>private<doubleQuotes46> means it can only be accessed from this class<newline46mondego>    private String myLat = null; // ** Declare myLat<newline46mondego>    private String myLon = null; // ** Declare myLon<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_register);<newline46mondego>        final EditText email_id = (EditText)  findViewById(R.id.email_id) ;<newline46mondego>        final EditText name = (EditText) findViewById(R.id.name);<newline46mondego>        final EditText password = (EditText) findViewById(R.id.password);<newline46mondego>        Button button = (Button) findViewById(R.id.button1) ;<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        //generate GCM id<newline46mondego>        GCMRegistrar.checkDevice(this);<newline46mondego>        GCMRegistrar.checkManifest(this);<newline46mondego>        final String regId = GCMRegistrar.getRegistrationId(this);<newline46mondego>        if (regId.equals(<doubleQuotes46><doubleQuotes46>)) {<newline46mondego>          GCMRegistrar.register(this, <doubleQuotes46>12356<doubleQuotes46>);<newline46mondego><newline46mondego>        } else {<newline46mondego>        String TAG = null;<newline46mondego>        Log.v(TAG, regId);<newline46mondego><newline46mondego>        }<newline46mondego>        //generate GCM id ended<newline46mondego>        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();<newline46mondego>        StrictMode.setThreadPolicy(policy); <newline46mondego>        //get current location<newline46mondego><newline46mondego>        LocationManager manager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);<newline46mondego>        LocationListener listner = new LocationListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onStatusChanged(String arg0, int arg1, Bundle arg2) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onProviderEnabled(String arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onProviderDisabled(String arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onLocationChanged(Location location) {<newline46mondego>                double myLonDouble = location.getLongitude();<newline46mondego>                myLon = Double.toString(myLonDouble); // ** Define myLon<newline46mondego>                double myLatDouble = location.getLatitude();<newline46mondego>                myLat = Double.toString(myLatDouble); // ** Define myLat<newline46mondego><newline46mondego>            }<newline46mondego>        };<newline46mondego>        manager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, listner);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        //end get current location<newline46mondego><newline46mondego>        button.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View arg0) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        // ** Check if they have been defined<newline46mondego>        if (myLat == null || myLon == null)<newline46mondego>            return;<newline46mondego><newline46mondego>        //postData();<newline46mondego>          HttpClient httpclient = new DefaultHttpClient();<newline46mondego>            HttpPost httppost = new HttpPost(<doubleQuotes46>http://xyz.com/folder/register.php<doubleQuotes46>);<newline46mondego><newline46mondego>            try {<newline46mondego>            // Add your data<newline46mondego>            List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>email<doubleQuotes46>, email_id.getText().toString()));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>name<doubleQuotes46>, name.getText().toString()));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>password<doubleQuotes46>, password.getText().toString()));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>regid<doubleQuotes46>, regId));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>uid<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>lat<doubleQuotes46>,myLat ));<newline46mondego>            nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>lon<doubleQuotes46>,myLon));<newline46mondego>               httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));<newline46mondego><newline46mondego>            // Execute HTTP Post Request<newline46mondego>               //Toast.makeText(this, resId, duration)<newline46mondego>            HttpResponse response = httpclient.execute(httppost);<newline46mondego><newline46mondego>            } catch (ClientProtocolException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            } catch (IOException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"5679splitHere46","12124016splitHere46","compareTo"
"5680splitHere46","12124016splitHere46","equals"
"5681splitHere46","12124016splitHere46","public static void main(String[] args) {<newline46mondego>    Map<String, String> brokenMap = new TreeMap<String, String> (new Comparator<String>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int compare(String o1, String o2) {<newline46mondego>            return 0;<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    brokenMap.put(<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>a<doubleQuotes46>);<newline46mondego>    brokenMap.put(<doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>size: <doubleQuotes46> + brokenMap.size());<newline46mondego>    System.out.println(<doubleQuotes46>content: <doubleQuotes46> + brokenMap);<newline46mondego>}<newline46mondego>"
"5682splitHere46","12124090splitHere46","String someJson =<doubleQuotes46>{\<doubleQuotes46>to\<doubleQuotes46>:\<doubleQuotes46>broadcast\<doubleQuotes46>, \<doubleQuotes46>type\<doubleQuotes46>:\<doubleQuotes46>50\<doubleQuotes46>, \<doubleQuotes46>payload\<doubleQuotes46>:[{\<doubleQuotes46>name\<doubleQuotes46>:\<doubleQuotes46>John Doe Jr.\<doubleQuotes46>},{\<doubleQuotes46>name2\<doubleQuotes46>:\<doubleQuotes46>John Doe\<doubleQuotes46>}]}<doubleQuotes46>;<newline46mondego><newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>.*?payload\<doubleQuotes46>:(.*)}<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(someJson);<newline46mondego>if (m.matches()) {<newline46mondego>  String payload = m.group(1);<newline46mondego>}<newline46mondego>"
"5683splitHere46","12124090splitHere46","[{<doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>John Doe Jr.<doubleQuotes46>},{<doubleQuotes46>name2<doubleQuotes46>:<doubleQuotes46>John Doe<doubleQuotes46>}]<newline46mondego>"
"5684splitHere46","12124090splitHere46","{<doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>John Doe<doubleQuotes46>}"
"5685splitHere46","12124090splitHere46","JSONObject"
"5686splitHere46","12124090splitHere46","JSONObject json = new JSONObject(someJson);<newline46mondego>try {<newline46mondego>  JSONArray payload = json.getJSONArray(<doubleQuotes46>payload<doubleQuotes46>);<newline46mondego>} catch (Exception e) {<newline46mondego>  // array conversion can fail for single object <newline46mondego>  JSONObject payload = json.getJSONObject(<doubleQuotes46>payload<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5687splitHere46","12124108splitHere46","e"
"5688splitHere46","12124108splitHere46","import java.io.FileReader;<newline46mondego>import javax.xml.stream.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        XMLInputFactory factory = XMLInputFactory.newInstance();<newline46mondego>        XMLStreamReader sr = factory.createXMLStreamReader(new FileReader(<doubleQuotes46>test.xml<doubleQuotes46>));<newline46mondego>        System.out.println(sr.getClass());<newline46mondego><newline46mondego>        while (sr.hasNext()) {<newline46mondego>            int eventType = sr.next();<newline46mondego><newline46mondego>            if (eventType == XMLStreamReader.START_DOCUMENT) {<newline46mondego>                continue;<newline46mondego>            } else if (eventType == XMLStreamReader.END_ELEMENT) {<newline46mondego>                System.out.println(<doubleQuotes46>End Element:    <doubleQuotes46> + sr.getLocalName());<newline46mondego>            } else if (eventType == XMLStreamReader.START_ELEMENT) {<newline46mondego>                System.out.println(<doubleQuotes46>Start Element:  <doubleQuotes46> + sr.getLocalName());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5689splitHere46","12124108splitHere46","class com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl<newline46mondego>Start Element:  ts<newline46mondego>Start Element:  tr<newline46mondego>Start Element:  node<newline46mondego>End Element:    node<newline46mondego>End Element:    tr<newline46mondego>End Element:    ts<newline46mondego>"
"5690splitHere46","12124207splitHere46","When an interface has no direct SuperInterface, it will create abstract public method for  all those public methods present in the Object class"
"5691splitHere46","12124207splitHere46","toString()"
"5692splitHere46","12124253splitHere46","@ModelAttribute(<doubleQuotes46>isXXXActivated<doubleQuotes46>)<newline46mondego>public boolean isXXXActivated(){<newline46mondego>    return isXXXActivated;<newline46mondego>}<newline46mondego>"
"5693splitHere46","12124303splitHere46","Resources res = context.getResources(); <newline46mondego>res.getString(R.string.deal_details) <newline46mondego>"
"5694splitHere46","12124346splitHere46","public void drawImage(Bitmap img, int x, int y, float angle)<newline46mondego>{<newline46mondego>  transform.setRotate(angle, img_width/2, img_height/2);<newline46mondego>  transform.postTranslate(x, y);<newline46mondego>  canvas.drawBitmap(img, transform, null);<newline46mondego>}<newline46mondego>"
"5695splitHere46","12124370splitHere46","Shop.getOwner()"
"5696splitHere46","12124370splitHere46","shop:getOwner($item))"
"5697splitHere46","12124370splitHere46","getOwner()"
"5698splitHere46","12124370splitHere46","valid:isNotEmptyData(shop:getOwner($item)) != true()<newline46mondego>"
"5699splitHere46","12124370splitHere46","not(string(shop:getOwner($item)))<newline46mondego>"
"5700splitHere46","12124370splitHere46","string-length(shop:getOwner($item)) = 0<newline46mondego>"
"5701splitHere46","12124483splitHere46","BufferedImage"
"5702splitHere46","12124483splitHere46","TexturePaint"
"5703splitHere46","12124567splitHere46","blobstoreService.serve(key, res);<newline46mondego>return Response.created(null).status(HttpServletResponse.SC_OK).build();<newline46mondego>"
"5704splitHere46","12124567splitHere46","null"
"5705splitHere46","12124567splitHere46","@GET"
"5706splitHere46","12124598splitHere46","<session-config><newline46mondego>      <session-timeout>30</session-timeout>    <newline46mondego>    </session-config><newline46mondego>"
"5707splitHere46","12124598splitHere46","Connection: Keep-Alive<newline46mondego>"
"5708splitHere46","12124636splitHere46","public class JTableSearchAndHighlight extends JFrame {<newline46mondego><newline46mondego>   private JTextField searchField;<newline46mondego>   private JTable table;<newline46mondego>   private JPanel panel;<newline46mondego>   private JScrollPane scroll;<newline46mondego><newline46mondego>   public JTableSearchAndHighlight() {<newline46mondego><newline46mondego>     initializeInventory();<newline46mondego>   }<newline46mondego><newline46mondego>private void initializeInventory() {<newline46mondego><newline46mondego>    panel = new JPanel();<newline46mondego><newline46mondego>    searchField = new JTextField();<newline46mondego><newline46mondego>    panel.setLayout(null);<newline46mondego><newline46mondego>    final String[] columnNames = {<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Surname<doubleQuotes46>, <doubleQuotes46>Age<doubleQuotes46>};<newline46mondego><newline46mondego>    final Object[][] data = {{<doubleQuotes46>Jhon<doubleQuotes46>, <doubleQuotes46>Java<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>}, {<doubleQuotes46>Stupid<doubleQuotes46>, <doubleQuotes46>Stupido<doubleQuotes46>, <doubleQuotes46>500<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Michael<doubleQuotes46>, <doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>}, {<doubleQuotes46>Winnie<doubleQuotes46>, <doubleQuotes46>Thepoor<doubleQuotes46>, <doubleQuotes46>23<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Max<doubleQuotes46>, <doubleQuotes46>Dumbass<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>}, {<doubleQuotes46>Melanie<doubleQuotes46>, <doubleQuotes46>Martin<doubleQuotes46>, <doubleQuotes46>500<doubleQuotes46>},<newline46mondego>                            {<doubleQuotes46>Jollibe<doubleQuotes46>, <doubleQuotes46>Mcdonalds<doubleQuotes46>, <doubleQuotes46>15<doubleQuotes46>}};<newline46mondego><newline46mondego>    table = new JTable(data, columnNames);<newline46mondego>    table.setColumnSelectionAllowed(true);<newline46mondego>    table.setRowSelectionAllowed(true);<newline46mondego><newline46mondego>    scroll = new JScrollPane(table);<newline46mondego>    scroll.setBounds(0, 200, 900, 150);<newline46mondego><newline46mondego>    searchField.setBounds(10, 100, 150, 20);<newline46mondego>    searchField.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>            String value = searchField.getText();<newline46mondego><newline46mondego>            for (int row = 0; row <= table.getRowCount() - 1; row++) {<newline46mondego><newline46mondego>                for (int col = 0; col <= table.getColumnCount() - 1; col++) {<newline46mondego><newline46mondego>                    if (value.equals(table.getValueAt(row, col))) {<newline46mondego><newline46mondego>                        // this will automatically set the view of the scroll in the location of the value<newline46mondego>                        table.scrollRectToVisible(table.getCellRect(row, 0, true));<newline46mondego><newline46mondego>                        // this will automatically set the focus of the searched/selected row/value<newline46mondego>                        table.setRowSelectionInterval(row, row);<newline46mondego><newline46mondego>                        for (int i = 0; i <= table.getColumnCount() - 1; i++) {<newline46mondego><newline46mondego>                            table.getColumnModel().getColumn(i).setCellRenderer(new HighlightRenderer());<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    panel.add(searchField);<newline46mondego>    panel.add(scroll);<newline46mondego><newline46mondego>    getContentPane().add(panel);<newline46mondego><newline46mondego>    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    setTitle(<doubleQuotes46>Inventory Window<doubleQuotes46>);<newline46mondego>    setSize(900, 400);<newline46mondego>    setLocationRelativeTo(null);<newline46mondego>    setVisible(true);<newline46mondego>}<newline46mondego><newline46mondego>private class HighlightRenderer extends DefaultTableCellRenderer {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego><newline46mondego>        // everything as usual<newline46mondego>        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);<newline46mondego><newline46mondego>        // added behavior<newline46mondego>        if(row == table.getSelectedRow()) {<newline46mondego><newline46mondego>            // this will customize that kind of border that will be use to highlight a row<newline46mondego>            setBorder(BorderFactory.createMatteBorder(2, 1, 2, 1, Color.BLACK));<newline46mondego>        }<newline46mondego><newline46mondego>        return this;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego><newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>        public void run() {<newline46mondego><newline46mondego>            new JTableSearchAndHighlight();<newline46mondego>        }<newline46mondego>    });<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5709splitHere46","12124744splitHere46","GZIPInputStream"
"5710splitHere46","12124744splitHere46","InflaterInputStream"
"5711splitHere46","12124744splitHere46","InflaterInputStream"
"5712splitHere46","12124744splitHere46","protected Inflater inf"
"5713splitHere46","12124744splitHere46","Inflater"
"5714splitHere46","12124744splitHere46","Inflater.getBytesRead"
"5715splitHere46","12124744splitHere46","GZIPInputStream"
"5716splitHere46","12124744splitHere46","inf"
"5717splitHere46","12124744splitHere46","Inflater"
"5718splitHere46","12124744splitHere46","public final class ExposedGZIPInputStream extends GZIPInputStream {<newline46mondego><newline46mondego>  public ExposedGZIPInputStream(final InputStream stream) {<newline46mondego>    super(stream);<newline46mondego>  }<newline46mondego><newline46mondego>  public ExposedGZIPInputStream(final InputStream stream, final int n) {<newline46mondego>    super(stream, n);<newline46mondego>  }<newline46mondego><newline46mondego>  public Inflater inflater() {<newline46mondego>    return super.inf;<newline46mondego>  }<newline46mondego>}<newline46mondego>...<newline46mondego>final ExposedGZIPInputStream gzip = new ExposedGZIPInputStream(...);<newline46mondego>...<newline46mondego>final Inflater inflater = gzip.inflater();<newline46mondego>final long read = inflater.getBytesRead();<newline46mondego>"
"5719splitHere46","12124801splitHere46","enum Attributes {<newline46mondego>    SPEED, SHOOTING;<newline46mondego>};<newline46mondego><newline46mondego>private Map<Attributes,Integer> ratings = new LinkedHashMap<Attributes, Integer>();<newline46mondego><newline46mondego>int getRating(Attribute attribute) {<newline46mondego>    return ratings.get(attribute);<newline46mondego>}<newline46mondego><newline46mondego>int getSpeed() {<newline46mondego>    return getAttribute(Attributes.SPEED);<newline46mondego>}<newline46mondego><newline46mondego>int getOverall() {<newline46mondego>    int total = 0;<newline46mondego>    for (int i : ratings.values()) {<newline46mondego>        total += i;<newline46mondego>    }<newline46mondego>    return total / Attributes.values().length;<newline46mondego>}<newline46mondego>"
"5720splitHere46","12124818splitHere46","frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>"
"5721splitHere46","12124879splitHere46","BufferedReader buffer_input = new BufferedReader(new InputStreamReader(connection.getInputStream()));<newline46mondego>"
"5722splitHere46","12124879splitHere46","BufferedReader buffer_input = new BufferedReader(new InputStreamReader(connection.getInputStream(),<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"5723splitHere46","12124889splitHere46","str.replaceAll(<doubleQuotes46>[\r\n]+<doubleQuotes46>, <doubleQuotes46>\n<doubleQuotes46>) <newline46mondego>"
"5724splitHere46","12124906splitHere46","System.in"
"5725splitHere46","12124906splitHere46","Scanner scan = new Scanner(System.in);<newline46mondego>...<newline46mondego>scan.close();<newline46mondego>"
"5726splitHere46","12124906splitHere46","Scanner.nextLine"
"5727splitHere46","12124906splitHere46","NoSuchElementException"
"5728splitHere46","12124906splitHere46","IllegalStateException"
"5729splitHere46","12124906splitHere46","IllegalStateException"
"5730splitHere46","12124906splitHere46","NoSuchElementException"
"5731splitHere46","12124906splitHere46","Scanner.throwFor"
"5732splitHere46","12124906splitHere46","if ((sourceClosed) && (position == buf.limit()))<newline46mondego>    throw new NoSuchElementException();<newline46mondego>"
"5733splitHere46","12124906splitHere46","0"
"5734splitHere46","12124906splitHere46","getUserChar"
"5735splitHere46","12124906splitHere46","run"
"5736splitHere46","12124906splitHere46","do{<newline46mondego>      userInput = mainMenu();<newline46mondego>      if(isUserInputValid(userInput))<newline46mondego>        ...<newline46mondego>      else System.out.println(<doubleQuotes46>\nMainMenu<doubleQuotes46>);<newline46mondego>    } while(!(wantToQuit));<newline46mondego>"
"5737splitHere46","12124906splitHere46","<doubleQuotes46>\nMainMenu\n<doubleQuotes46>"
"5738splitHere46","12124906splitHere46","Scanner"
"5739splitHere46","12124906splitHere46","System.in"
"5740splitHere46","12124956splitHere46","Base.show"
"5741splitHere46","12124956splitHere46","Derive.show"
"5742splitHere46","12124956splitHere46","static"
"5743splitHere46","12124956splitHere46","static"
"5744splitHere46","12124956splitHere46","class Super {<newline46mondego>    static String greeting() { return <doubleQuotes46>Goodnight<doubleQuotes46>; }<newline46mondego>    String name() { return <doubleQuotes46>Richard<doubleQuotes46>; }<newline46mondego>}<newline46mondego>class Sub extends Super {<newline46mondego>    static String greeting() { return <doubleQuotes46>Hello<doubleQuotes46>; }<newline46mondego>    String name() { return <doubleQuotes46>Dick<doubleQuotes46>; }<newline46mondego>}<newline46mondego>class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Super s = new Sub();<newline46mondego>        System.out.println(s.greeting() + <doubleQuotes46>, <doubleQuotes46> + s.name());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5745splitHere46","12124956splitHere46","Goodnight, Dick"
"5746splitHere46","12124956splitHere46","s"
"5747splitHere46","12124956splitHere46","Super"
"5748splitHere46","12124956splitHere46","name"
"5749splitHere46","12124956splitHere46","s"
"5750splitHere46","12124956splitHere46","Sub"
"5751splitHere46","12124972splitHere46","ArrayList<String> test = new ArrayList<String>();<newline46mondego>test.add(<doubleQuotes46>\<doubleQuotes46>C:\\Program Files\\USBDeview\\USBDeview.exe\<doubleQuotes46><doubleQuotes46>);<newline46mondego>test.add(<doubleQuotes46>/enable<doubleQuotes46>);<newline46mondego>test.add(<doubleQuotes46>\<doubleQuotes46>My USB Device\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"5752splitHere46","12125151splitHere46","NPC"
"5753splitHere46","12125151splitHere46","class SomeClass extends NPC {<newline46mondego>// will be called during deserialization<newline46mondego>public SomeClass(){<newline46mondego>// call custom constructor of NPC<newline46mondego>super(null);<newline46mondego>}<newline46mondego>}<newline46mondego><newline46mondego>class Person extends SomeClass implements Serializable {<newline46mondego>// ..<newline46mondego>}<newline46mondego>"
"5754splitHere46","12125176splitHere46","@RequestMapping(value=<doubleQuotes46>/rest/postalcode/list/filter<doubleQuotes46>, method = RequestMethod.GET, produces=<doubleQuotes46>application/json<doubleQuotes46>)<newline46mondego>public @ResponseBody JsonPostalCodeList findFilteredPostalCodes(@RequestParam(<doubleQuotes46>lang<doubleQuotes46>) String lang, @RequestParam(<doubleQuotes46>postalcode<doubleQuotes46>) String postalcode, @RequestParam(<doubleQuotes46>country<doubleQuotes46>) Long country, @RequestParam(<doubleQuotes46>city<doubleQuotes46>) String city, Model model) throws Exception {<newline46mondego>}<newline46mondego>"
"5755splitHere46","12125176splitHere46","@Override<newline46mondego>public JsonPostalCodeList findPostalCodes(<newline46mondego>        JsonPostalCodeSelectorData selectorData) {<newline46mondego>    String url = getWebserviceLocation()+<doubleQuotes46>/rest/postalcode/list/filter?lang={lang}&postalcode={postalcode}&country={country}&city={city}<doubleQuotes46>;<newline46mondego>    MbaLog.debugLog(logger,<doubleQuotes46>Calling webservice with url: <doubleQuotes46> + url);<newline46mondego>    return getRestTemplate().getForObject(url, JsonPostalCodeList.class, selectorData.getContactLanguage(), selectorData.getPostalCode(), selectorData.getCountry(), selectorData.getCity());       <newline46mondego>}<newline46mondego>"
"5756splitHere46","12125200splitHere46","Date"
"5757splitHere46","12125200splitHere46","Date"
"5758splitHere46","12125200splitHere46","SimpleDateFormat"
"5759splitHere46","12125200splitHere46","SimpleDateFormat inputFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>,<newline46mondego>                                                    Locale.US);<newline46mondego>// TODO: Set the time zone appropriately<newline46mondego>Date date = inputFormat.parse(inputText);<newline46mondego><newline46mondego>SimpleDateFormat outputFormat = new SimpleDateFormat(<doubleQuotes46>d MMM<doubleQuotes46>, targetLocale);<newline46mondego>// TODO: Set the time zone appropriately<newline46mondego>String outputText = outputFormat.format(date);<newline46mondego>"
"5760splitHere46","12125260splitHere46","private class MouseInput extends MouseAdapter{<newline46mondego>    public void mouseClicked(MouseEvent e){<newline46mondego>        if(layer==0){<newline46mondego>            int x = e.getX();<newline46mondego>            int y = e.getY();<newline46mondego>            log.info(<doubleQuotes46>About to modify geometry; x=<doubleQuotes46> + x + <doubleQuotes46>; y=<doubleQuotes46> + y);<newline46mondego>            modifyGeometry(x, y, currentTile);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5761splitHere46","12125260splitHere46","private void modifyGeometry(int x, int y, char tile) {<newline46mondego>    log.info(<doubleQuotes46>Within modifyGeometry; x=<doubleQuotes46> + x + <doubleQuotes46>; y=<doubleQuotes46>+ y);<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5762splitHere46","12125360splitHere46","matches"
"5763splitHere46","12125360splitHere46","<doubleQuotes46>0.*<doubleQuotes46>"
"5764splitHere46","12125360splitHere46","^"
"5765splitHere46","12125360splitHere46","matches"
"5766splitHere46","12125360splitHere46","Pattern"
"5767splitHere46","12125360splitHere46","if (pattern.matcher(text).lookingAt())<newline46mondego>"
"5768splitHere46","12125360splitHere46","if (text.startsWith(<doubleQuotes46>0<doubleQuotes46>))<newline46mondego>"
"5769splitHere46","12125375splitHere46","private static final int SECOND = 1000;<newline46mondego>private static final int MINUTE = 60 * SECOND;<newline46mondego>private static final int HOUR = 60 * MINUTE;<newline46mondego>private static final int DAY = 24 * HOUR;<newline46mondego><newline46mondego>// TODO: this is the value in ms<newline46mondego>long ms = 10304004543l;<newline46mondego>StringBuffer text = new StringBuffer(<doubleQuotes46><doubleQuotes46>);<newline46mondego>if (ms > DAY) {<newline46mondego>  text.append(ms / DAY).append(<doubleQuotes46> days <doubleQuotes46>);<newline46mondego>  ms %= DAY;<newline46mondego>}<newline46mondego>if (ms > HOUR) {<newline46mondego>  text.append(ms / HOUR).append(<doubleQuotes46> hours <doubleQuotes46>);<newline46mondego>  ms %= HOUR;<newline46mondego>}<newline46mondego>if (ms > MINUTE) {<newline46mondego>  text.append(ms / MINUTE).append(<doubleQuotes46> minutes <doubleQuotes46>);<newline46mondego>  ms %= MINUTE;<newline46mondego>}<newline46mondego>if (ms > SECOND) {<newline46mondego>  text.append(ms / SECOND).append(<doubleQuotes46> seconds <doubleQuotes46>);<newline46mondego>  ms %= SECOND;<newline46mondego>}<newline46mondego>text.append(ms + <doubleQuotes46> ms<doubleQuotes46>);<newline46mondego>System.out.println(text.toString());<newline46mondego>"
"5770splitHere46","12125435splitHere46","mvn -T 3.0C clean package<newline46mondego>"
"5771splitHere46","12125435splitHere46","mvn -pl module -am package<newline46mondego>"
"5772splitHere46","12125493splitHere46","Object"
"5773splitHere46","12125493splitHere46","Object"
"5774splitHere46","12125531splitHere46","MouseListener"
"5775splitHere46","12125531splitHere46","JMenu"
"5776splitHere46","12125531splitHere46","mouseEntered"
"5777splitHere46","12125531splitHere46","doClick"
"5778splitHere46","12125531splitHere46","jMenuFile.addMouseListener(new MouseListener(){<newline46mondego>    public void mouseEntered(MouseEvent e) {<newline46mondego>       jMenuFile.doClick();<newline46mondego>    }<newline46mondego>  ...<newline46mondego>});<newline46mondego>"
"5779splitHere46","12125531splitHere46","JMenuBar"
"5780splitHere46","12125531splitHere46","JMenu"
"5781splitHere46","12125531splitHere46","MouseListener ml = new MouseListener(){<newline46mondego>    public void mouseClicked(MouseEvent e) {}<newline46mondego>    public void mousePressed(MouseEvent e) {}<newline46mondego>    public void mouseReleased(MouseEvent e) {}<newline46mondego>    public void mouseExited(MouseEvent e) {}<newline46mondego>    public void mouseEntered(MouseEvent e) {<newline46mondego>        ((JMenu)e.getSource()).doClick();<newline46mondego>    }<newline46mondego>  };<newline46mondego>  jMenuFile.addMouseListener(ml);<newline46mondego>  jMenuHelp.addMouseListener(ml);<newline46mondego>"
"5782splitHere46","12125531splitHere46","for (Component c: jMenuBar1.getComponents()) {<newline46mondego>    if (c instanceof JMenu){<newline46mondego>        c.addMouseListener(ml);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5783splitHere46","12125591splitHere46","String startTime = <doubleQuotes46>12:00:00<doubleQuotes46>;<newline46mondego>String endTime = 01:00:00;<newline46mondego>"
"5784splitHere46","12125623splitHere46","Map<String, Runnable> actions2methods = new HashMap<>;<newline46mondego>actions2methods.put(<doubleQuotes46>Action1<doubleQuotes46>, new Runnable { public void run() { testAction1(); }));<newline46mondego>"
"5785splitHere46","12125623splitHere46","Runnable"
"5786splitHere46","12125690splitHere46","c = getContentResolver().query(contactData, null, Contacts.DISPLAY_NAME, null, null);<newline46mondego>"
"5787splitHere46","12125690splitHere46","c = getContentResolver().query(contactData, new String[] { ContactsContract.Contacts.DISPLAY_NAME }, null, null, null);<newline46mondego>"
"5788splitHere46","12125757splitHere46","JTable"
"5789splitHere46","12125829splitHere46","derby.system.home"
"5790splitHere46","12125829splitHere46","System.setProperty(<doubleQuotes46>derby.system.home<doubleQuotes46>, DERBY_HOME_PATH);"
"5791splitHere46","12125829splitHere46","public class Test {<newline46mondego>   public static final String DERBY_HOME = <doubleQuotes46>derby.system.home<doubleQuotes46>;<newline46mondego><newline46mondego>   // ***** the two Strings below will be different for you *****<newline46mondego>   public static final String DERBY_HOME_PATH = <doubleQuotes46>D:/DerbyDB<doubleQuotes46>;<newline46mondego>   private static final String DB_NAME = <doubleQuotes46>sample<doubleQuotes46>;<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      System.setProperty(DERBY_HOME, DERBY_HOME_PATH);<newline46mondego>      Connection conn = null;<newline46mondego>      try {<newline46mondego>         Class.forName(<doubleQuotes46>org.apache.derby.jdbc.EmbeddedDriver<doubleQuotes46>).newInstance();<newline46mondego>         conn = DriverManager.getConnection(<doubleQuotes46>jdbc:derby:<doubleQuotes46> + DB_NAME);<newline46mondego><newline46mondego>      } catch (InstantiationException | IllegalAccessException<newline46mondego>            | ClassNotFoundException | SQLException e) {<newline46mondego>         e.printStackTrace();<newline46mondego>      } finally {<newline46mondego>         if (conn == null) {<newline46mondego>            System.exit(-1);<newline46mondego>         }<newline46mondego>      }<newline46mondego><newline46mondego>      // .... etc...<newline46mondego>"
"5792splitHere46","12126188splitHere46","grid"
"5793splitHere46","12126188splitHere46","Site[][] grid = new Site[N][N];<newline46mondego>"
"5794splitHere46","12126305splitHere46","String yourString = <doubleQuotes46>This&aIs&aA&aTest<doubleQuotes46>;<newline46mondego>yourString = yourString.replace(<doubleQuotes46>&a<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"5795splitHere46","12126691splitHere46","public static byte convert(BitSet bits, int offset) {<newline46mondego>  byte value = 0;<newline46mondego>  for (int i = offset; (i < bits.length() && ((i + offset) < 8)) ; ++i) {<newline46mondego>    value += bits.get(i) ? (1 << i) : 0;<newline46mondego>  }<newline46mondego>  return value;<newline46mondego>}<newline46mondego>"
"5796splitHere46","12126691splitHere46","BitSet b = ....;<newline46mondego>byte b1 = Helper.convert(b, 0);<newline46mondego>byte b2 = Helper.convert(b, 8);<newline46mondego>"
"5797splitHere46","12126713splitHere46","CDAlbum"
"5798splitHere46","12126713splitHere46","public CDAlbum() {<newline46mondego>  i = 0;<newline46mondego>  title = <doubleQuotes46>Unknown CD<doubleQuotes46>;<newline46mondego>  genre = <doubleQuotes46>Unknown genre<doubleQuotes46>;<newline46mondego>  artist = <doubleQuotes46>Unknown artist<doubleQuotes46>;<newline46mondego>  tracks.add(<doubleQuotes46>-- no tracks --<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5799splitHere46","12126713splitHere46","tracks"
"5800splitHere46","12126713splitHere46","tracks"
"5801splitHere46","12126713splitHere46","tracks = new ArrayList<>(Collections.singleton(<doubleQuotes46>-- no tracks --<doubleQuotes46>));<newline46mondego>"
"5802splitHere46","12126713splitHere46","private String title = <doubleQuotes46>Unknown CD<doubleQuotes46>;<newline46mondego>"
"5803splitHere46","12126791splitHere46","// Database Storage<newline46mondego>    private ResultSet executeQuery(String statement, String... param) {<newline46mondego><newline46mondego>      String databaseName = <doubleQuotes46>'HTML5', '1.0',<doubleQuotes46> <newline46mondego>         +<doubleQuotes46> 'Offline document storage', 100*1024<doubleQuotes46>;<newline46mondego><newline46mondego>      return ((DatabaseStorage) driver).executeSQL(databaseName, statement, (Object[]) param);<newline46mondego>    }<newline46mondego>"
"5804splitHere46","12126800splitHere46","int n = x - y;<newline46mondego>if (n >= -20 && n <= 20) {<newline46mondego>    // etc...<newline46mondego>}<newline46mondego>"
"5805splitHere46","12126800splitHere46","Math.abs"
"5806splitHere46","12126800splitHere46","if (Math.abs(x - y) <= 20) {<newline46mondego>    // etc ...<newline46mondego>}<newline46mondego>"
"5807splitHere46","12126850splitHere46","Integer[] integerArray = ArrayUtils.toObject(intArray);<newline46mondego>"
"5808splitHere46","12126850splitHere46","List<Integer>"
"5809splitHere46","12126850splitHere46","List<Integer> integerList = Arrays.asList(ArrayUtils.toObject(intArray));<newline46mondego>"
"5810splitHere46","12126961splitHere46","someThread"
"5811splitHere46","12126961splitHere46","myObj"
"5812splitHere46","12126961splitHere46","myObj"
"5813splitHere46","12126961splitHere46","myObj"
"5814splitHere46","12126961splitHere46","someThread"
"5815splitHere46","12126961splitHere46","void foo() {<newline46mondego>    final Object something = new String(<doubleQuotes46>I'm alive!<doubleQuotes46>);<newline46mondego>    new Thread() {<newline46mondego>        public void run() {<newline46mondego>            try {Thread.sleep(10000);} catch (InterruptedException e) {}<newline46mondego>            System.out.println(something);<newline46mondego>        }<newline46mondego>    }.start();<newline46mondego>}<newline46mondego>"
"5816splitHere46","12126961splitHere46","something"
"5817splitHere46","12126961splitHere46","void foo() {<newline46mondego>    new ThreadStartingObject(<doubleQuotes46>I'm alive!<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>class ThreadStartingObject {<newline46mondego>    private String message;<newline46mondego><newline46mondego>    public void ThreadStartingObject(String msg) {<newline46mondego>        this.message = msg;<newline46mondego>        new Thread() {<newline46mondego>            public void run() {<newline46mondego>                try {Thread.sleep(10000);} catch (InterruptedException e) {}<newline46mondego>                System.out.println(message);<newline46mondego>            }<newline46mondego>        }.start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5818splitHere46","12126961splitHere46","this"
"5819splitHere46","12126961splitHere46","ThreadStartingObject"
"5820splitHere46","12127002splitHere46","File.mkdir"
"5821splitHere46","12127002splitHere46","File.mkdirs"
"5822splitHere46","12127002splitHere46","private void writeDir(File f){<newline46mondego>    try{<newline46mondego>         if(f.mkdirs()) { <newline46mondego>             System.out.println(<doubleQuotes46>Directory Created<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>        System.out.println(<doubleQuotes46>Directory is not created<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } catch(Exception e){<newline46mondego>            //  Demo purposes only.  Do NOT do this in real code.  EVER.<newline46mondego>            //  It squashes exceptions ...<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5823splitHere46","12127002splitHere46","f.mkdir()"
"5824splitHere46","12127002splitHere46","f.mkdirs()"
"5825splitHere46","12127017splitHere46","binding"
"5826splitHere46","12127017splitHere46","<h:button id=<doubleQuotes46>sampleButton<doubleQuotes46> binding=<doubleQuotes46>#{sampleButton}<doubleQuotes46> value=<doubleQuotes46>Sample<doubleQuotes46> /><newline46mondego><h:outputText value=<doubleQuotes46>sampleButton's client ID : #{sampleButton.clientId}<doubleQuotes46> /><newline46mondego>"
"5827splitHere46","12127193splitHere46","1)Right click on the  panel.<newline46mondego><newline46mondego>2)Select  Properties and select events tab and mouse enterd event.<newline46mondego>"
"5828splitHere46","12127213splitHere46","GLES20.glActiveTexture( m_nGLTextureChannel ); //Activate the texture channel<newline46mondego><newline46mondego>  GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, nGLTextureID); //Bind here!<newline46mondego>//Bind before you draw<newline46mondego>"
"5829splitHere46","12127237splitHere46","ResultSet rs = stmt.executeQuery(<doubleQuotes46>select * from user order by<doubleQuotes46>+var);<newline46mondego>                                                             ^---missing space<newline46mondego>"
"5830splitHere46","12127237splitHere46","... order bysomefield<newline46mondego>           ^---<newline46mondego>"
"5831splitHere46","12127332splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.Closeable;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.FileOutputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.OutputStream;<newline46mondego>import java.net.URI;<newline46mondego>import java.net.URISyntaxException;<newline46mondego>import java.net.URL;<newline46mondego>import java.security.CodeSource;<newline46mondego>import java.security.ProtectionDomain;<newline46mondego>import java.util.zip.ZipEntry;<newline46mondego>import java.util.zip.ZipException;<newline46mondego>import java.util.zip.ZipFile;<newline46mondego><newline46mondego>public class Sandbox<newline46mondego>{<newline46mondego>    public static void main(final String[] args)<newline46mondego>        throws URISyntaxException,<newline46mondego>               ZipException,<newline46mondego>               IOException<newline46mondego>    {<newline46mondego>        final URI uri;<newline46mondego>        final URI exe;<newline46mondego><newline46mondego>        uri = getJarURI();<newline46mondego>        // Extract the adb application<newline46mondego>        exe = getFile(uri, <doubleQuotes46>adb.exe<doubleQuotes46>);<newline46mondego>        // Extract the AdbWinApi dll file.<newline46mondego>        getFile(uri, <doubleQuotes46>AdbWinApi.dll<doubleQuotes46>);<newline46mondego>        System.out.println(exe);<newline46mondego>    }<newline46mondego><newline46mondego>    private static URI getJarURI()<newline46mondego>        throws URISyntaxException<newline46mondego>    {<newline46mondego>        final ProtectionDomain domain;<newline46mondego>        final CodeSource       source;<newline46mondego>        final URL              url;<newline46mondego>        final URI              uri;<newline46mondego><newline46mondego>        domain = Sandbox.class.getProtectionDomain();<newline46mondego>        source = domain.getCodeSource();<newline46mondego>        url    = source.getLocation();<newline46mondego>        uri    = url.toURI();<newline46mondego><newline46mondego>        return (uri);<newline46mondego>    }    <newline46mondego><newline46mondego>    private static URI getFile(final URI    where,<newline46mondego>                               final String fileName)<newline46mondego>        throws ZipException,<newline46mondego>               IOException<newline46mondego>    {<newline46mondego>        final File location;<newline46mondego>        final URI  fileURI;<newline46mondego><newline46mondego>        location = new File(where);<newline46mondego><newline46mondego>        // not in a JAR, just return the path on disk<newline46mondego>        if(location.isDirectory())<newline46mondego>        {<newline46mondego>            fileURI = URI.create(where.toString() + fileName);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            final ZipFile zipFile;<newline46mondego><newline46mondego>            zipFile = new ZipFile(location);<newline46mondego><newline46mondego>            try<newline46mondego>            {<newline46mondego>                fileURI = extract(zipFile, fileName);<newline46mondego>            }<newline46mondego>            finally<newline46mondego>            {<newline46mondego>                zipFile.close();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return (fileURI);<newline46mondego>    }<newline46mondego><newline46mondego>    private static URI extract(final ZipFile zipFile,<newline46mondego>                           final String  fileName)<newline46mondego>        throws IOException<newline46mondego>    {<newline46mondego>        final File         tempFile;<newline46mondego>        final ZipEntry     entry;<newline46mondego>        final InputStream  zipStream;<newline46mondego>        OutputStream       fileStream;<newline46mondego><newline46mondego>        //tempFile = File.createTempFile(fileName,     Long.toString(System.currentTimeMillis()));<newline46mondego>        tempFile = new File(System.getProperty(<doubleQuotes46>java.io.tmpdir<doubleQuotes46>) + File.separator + fileName);<newline46mondego><newline46mondego>        tempFile.deleteOnExit();<newline46mondego>        entry    = zipFile.getEntry(fileName);<newline46mondego><newline46mondego>        if(entry == null)<newline46mondego><newline46mondego>        {<newline46mondego>            throw new FileNotFoundException(<doubleQuotes46>cannot find file: <doubleQuotes46> + fileName + <doubleQuotes46> in archive: <doubleQuotes46> + zipFile.getName());<newline46mondego>        }<newline46mondego><newline46mondego>        zipStream  = zipFile.getInputStream(entry);<newline46mondego>        fileStream = null;<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego>            final byte[] buf;<newline46mondego>            int          i;<newline46mondego><newline46mondego>            fileStream = new FileOutputStream(tempFile);<newline46mondego>            buf        = new byte[1024];<newline46mondego>            i          = 0;<newline46mondego><newline46mondego>            while((i = zipStream.read(buf)) != -1)<newline46mondego>            {<newline46mondego>                fileStream.write(buf, 0, i);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        finally<newline46mondego>        {<newline46mondego>            close(zipStream);<newline46mondego>            close(fileStream);<newline46mondego>        }<newline46mondego><newline46mondego>        return (tempFile.toURI());<newline46mondego>    }<newline46mondego><newline46mondego>    private static void close(final Closeable stream)<newline46mondego>    {<newline46mondego>        if(stream != null)<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                stream.close();<newline46mondego>            }<newline46mondego>            catch(final IOException ex)<newline46mondego>            {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5832splitHere46","12127342splitHere46","indexOf"
"5833splitHere46","12127342splitHere46","substring"
"5834splitHere46","12127342splitHere46","String s = <doubleQuotes46>Armor_Blessed_Robes<doubleQuotes46>;<newline46mondego>int idx = s.indexOf(<doubleQuotes46>_<doubleQuotes46>);<newline46mondego>System.out.println(s.substring(0, idx)); // Armor<newline46mondego>System.out.println(s.substring(idx + 1)); // Blessed_Robes<newline46mondego>"
"5835splitHere46","12127342splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>([^_]+)_(.+)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>if (m.find()) {<newline46mondego>  String first = m.group(1);  // Armor<newline46mondego>  String second = m.group(2); // Blessed_Robes<newline46mondego>}<newline46mondego>"
"5836splitHere46","12127536splitHere46","column"
"5837splitHere46","12127536splitHere46","ArrayList"
"5838splitHere46","12127536splitHere46","column"
"5839splitHere46","12127536splitHere46","ArrayList"
"5840splitHere46","12127536splitHere46","StringBuilder buffer = new StringBuilder();<newline46mondego>boolean processedFirst = false;<newline46mondego>String firstParam = null, secondParam = null;<newline46mondego><newline46mondego>try{<newline46mondego>    for(String record: arrayList1){<newline46mondego>        if(processedFirst)<newline46mondego>            buffer.append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        buffer.append(record);<newline46mondego>        processedFirst = true;<newline46mondego>    }<newline46mondego>    firstParam = buffer.toString();<newline46mondego>}finally{<newline46mondego>    buffer = null;<newline46mondego>}<newline46mondego>processedFirst = false;<newline46mondego>buffer = new StringBuilder();<newline46mondego>try{<newline46mondego>    for(String record: arrayList2){<newline46mondego>        if(processedFirst)<newline46mondego>            buffer.append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        buffer.append(record);<newline46mondego>        processedFirst = true;<newline46mondego>    }<newline46mondego>    secondParam = buffer.toString();<newline46mondego>}finally{<newline46mondego>    buffer = null;<newline46mondego>}<newline46mondego>secondParam = buffer.toString();<newline46mondego><newline46mondego>String sql = <doubleQuotes46>INSERT INTO soundsdata.splog (arraylist1, arraylist2) VALUES(?,?)<doubleQuotes46>;<newline46mondego>try{<newline46mondego>    psmt = (PreparedStatement) con.prepareStatement(sql);<newline46mondego>    pstmt.setString(1,firstParam);<newline46mondego>    pstmt.setString(2,secondParam);<newline46mondego>    pstmt.executeUpdate();<newline46mondego>}finally {<newline46mondego>    pstmt.close();<newline46mondego>}<newline46mondego>"
"5841splitHere46","12127561splitHere46","Rectangle"
"5842splitHere46","12127561splitHere46","componentRect"
"5843splitHere46","12127561splitHere46","Area"
"5844splitHere46","12127561splitHere46","componentArea"
"5845splitHere46","12127561splitHere46","new Area(componentRect)"
"5846splitHere46","12127561splitHere46","Area"
"5847splitHere46","12127561splitHere46","selectionArea"
"5848splitHere46","12127561splitHere46","selectionRectangle"
"5849splitHere46","12127561splitHere46","componentArea.subtract(selectionArea)"
"5850splitHere46","12127561splitHere46","Graphics.setClip(componentArea)"
"5851splitHere46","12127599splitHere46","org.hibernate.Session session = (Session)entityManager.getDelegate();<newline46mondego>"
"5852splitHere46","12127696splitHere46","package com.example.teststack;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.apache.http.HttpResponse;<newline46mondego>import org.apache.http.NameValuePair;<newline46mondego>import org.apache.http.client.entity.UrlEncodedFormEntity;<newline46mondego>import org.apache.http.client.methods.HttpPost;<newline46mondego>import org.apache.http.impl.client.DefaultHttpClient;<newline46mondego>import org.apache.http.message.BasicNameValuePair;<newline46mondego>import org.apache.http.protocol.HTTP;<newline46mondego>import org.apache.http.util.EntityUtils;<newline46mondego><newline46mondego>import android.app.Activity;<newline46mondego>import android.content.Intent;<newline46mondego>import android.os.Bundle;<newline46mondego>import android.view.Menu;<newline46mondego>import android.view.View;<newline46mondego>import android.view.View.OnClickListener;<newline46mondego>import android.webkit.WebView;<newline46mondego>import android.widget.Button;<newline46mondego>import android.widget.EditText;<newline46mondego><newline46mondego>public class MainRequest extends Activity {<newline46mondego><newline46mondego>    EditText textPersonName = null;<newline46mondego>    EditText textPostalAddress = null;<newline46mondego>    EditText phone = null;<newline46mondego>    EditText textMultiLine = null;<newline46mondego>    Button submit = null;<newline46mondego>    String action = <doubleQuotes46>http://www.omokoroacomputerhelp.com/<doubleQuotes46>;<newline46mondego>    HttpPost httpRequest = null;<newline46mondego>    List<NameValuePair> params = null;<newline46mondego>    HttpResponse httpResponse = null;<newline46mondego>    WebView webView = null;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main_request);<newline46mondego>        textPersonName = (EditText) findViewById(R.id.personName);<newline46mondego>        textPostalAddress = (EditText) findViewById(R.id.postalAddress);<newline46mondego>        phone = (EditText) findViewById(R.id.phone);<newline46mondego>        textMultiLine = (EditText) findViewById(R.id.multiLine);<newline46mondego>        submit = (Button) findViewById(R.id.submit);<newline46mondego>        submit.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego>                httpRequest = new HttpPost(action);<newline46mondego>                params = new ArrayList<NameValuePair>();<newline46mondego>                params.add(new BasicNameValuePair(<doubleQuotes46>name<doubleQuotes46>, textPersonName<newline46mondego>                        .getText().toString()));<newline46mondego>                params.add(new BasicNameValuePair(<doubleQuotes46>phone<doubleQuotes46>, phone.getText()<newline46mondego>                        .toString()));<newline46mondego>                params.add(new BasicNameValuePair(<doubleQuotes46>addr<doubleQuotes46>, textPostalAddress<newline46mondego>                        .getText().toString()));<newline46mondego>                params.add(new BasicNameValuePair(<doubleQuotes46>comment<doubleQuotes46>, textMultiLine<newline46mondego>                        .getText().toString()));<newline46mondego>                try {<newline46mondego>                    // send http request<newline46mondego>                    httpRequest.setEntity(new UrlEncodedFormEntity(params,<newline46mondego>                            HTTP.UTF_8));<newline46mondego>                    // get http response<newline46mondego>                    httpResponse = new DefaultHttpClient().execute(httpRequest);<newline46mondego>                    //<newline46mondego>                    Intent gotoIntent = new Intent(MainRequest.this,<newline46mondego>                            Webpage.class);<newline46mondego>                    gotoIntent.putExtra(<doubleQuotes46>source<doubleQuotes46>,<newline46mondego>                            EntityUtils.toString(httpResponse.getEntity()));<newline46mondego>                    startActivity(gotoIntent);<newline46mondego>                } catch (Exception e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        getMenuInflater().inflate(R.menu.activity_main_request, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5853splitHere46","12127696splitHere46","package com.example.teststack;<newline46mondego><newline46mondego>import android.app.Activity;<newline46mondego>import android.content.Intent;<newline46mondego>import android.os.Bundle;<newline46mondego>import android.view.Menu;<newline46mondego>import android.webkit.WebView;<newline46mondego><newline46mondego>public class Webpage extends Activity {<newline46mondego>    WebView webView;<newline46mondego><newline46mondego>    final String mimeType = <doubleQuotes46>text/html<doubleQuotes46>;<newline46mondego><newline46mondego>    final String encoding = <doubleQuotes46>utf-8<doubleQuotes46>;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_webpage);<newline46mondego>        Intent webPageIntent = getIntent();<newline46mondego>        String htmlSource = webPageIntent.getStringExtra(<doubleQuotes46>source<doubleQuotes46>);<newline46mondego>        webView = (WebView) findViewById(R.id.webview);<newline46mondego>        webView.loadData(htmlSource, mimeType, encoding);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        getMenuInflater().inflate(R.menu.activity_webpage, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5854splitHere46","12127696splitHere46","<RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    xmlns:tools=<doubleQuotes46>http://schemas.android.com/tools<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46> ><newline46mondego><newline46mondego>    <EditText<newline46mondego>        android:id=<doubleQuotes46>@+id/personName<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentRight=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignParentTop=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:ems=<doubleQuotes46>10<doubleQuotes46><newline46mondego>        android:inputType=<doubleQuotes46>textPersonName<doubleQuotes46> /><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/textView1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignParentTop=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Name:<doubleQuotes46><newline46mondego>        android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46><newline46mondego>        android:textSize=<doubleQuotes46>20dp<doubleQuotes46> /><newline46mondego><newline46mondego>    <EditText<newline46mondego>        android:id=<doubleQuotes46>@+id/postalAddress<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignLeft=<doubleQuotes46>@+id/personName<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@+id/personName<doubleQuotes46><newline46mondego>        android:ems=<doubleQuotes46>10<doubleQuotes46><newline46mondego>        android:inputType=<doubleQuotes46>textPostalAddress<doubleQuotes46> /><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/textView2<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignTop=<doubleQuotes46>@+id/postalAddress<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Address:<doubleQuotes46><newline46mondego>        android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46><newline46mondego>        android:textSize=<doubleQuotes46>20dp<doubleQuotes46> /><newline46mondego><newline46mondego>    <EditText<newline46mondego>        android:id=<doubleQuotes46>@+id/phone<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentRight=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@+id/postalAddress<doubleQuotes46><newline46mondego>        android:ems=<doubleQuotes46>10<doubleQuotes46><newline46mondego>        android:inputType=<doubleQuotes46>phone<doubleQuotes46> /><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/textView3<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@+id/postalAddress<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Phone:<doubleQuotes46><newline46mondego>        android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46><newline46mondego>        android:textSize=<doubleQuotes46>20dp<doubleQuotes46> /><newline46mondego><newline46mondego>    <EditText<newline46mondego>        android:id=<doubleQuotes46>@+id/multiLine<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>200dp<doubleQuotes46><newline46mondego>        android:layout_alignLeft=<doubleQuotes46>@+id/phone<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@+id/phone<doubleQuotes46><newline46mondego>        android:ems=<doubleQuotes46>10<doubleQuotes46><newline46mondego>        android:inputType=<doubleQuotes46>textMultiLine<doubleQuotes46> /><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/textView4<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_alignTop=<doubleQuotes46>@+id/multiLine<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Comments:<doubleQuotes46><newline46mondego>        android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46><newline46mondego>        android:textSize=<doubleQuotes46>15dp<doubleQuotes46> /><newline46mondego><newline46mondego>    <Button<newline46mondego>        android:id=<doubleQuotes46>@+id/submit<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>300dp<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>50dp<doubleQuotes46><newline46mondego>        android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:layout_below=<doubleQuotes46>@+id/multiLine<doubleQuotes46><newline46mondego>        android:layout_toLeftOf=<doubleQuotes46>@+id/multiLine<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>Done<doubleQuotes46> /><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"5855splitHere46","12127696splitHere46","<RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    xmlns:tools=<doubleQuotes46>http://schemas.android.com/tools<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46> ><newline46mondego><newline46mondego>   <WebView  <newline46mondego>        android:id=<doubleQuotes46>@+id/webview<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        /><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"5856splitHere46","12127696splitHere46","<manifest xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    package=<doubleQuotes46>com.example.teststack<doubleQuotes46><newline46mondego>    android:versionCode=<doubleQuotes46>1<doubleQuotes46><newline46mondego>    android:versionName=<doubleQuotes46>1.0<doubleQuotes46> ><newline46mondego><newline46mondego>    <uses-sdk<newline46mondego>        android:minSdkVersion=<doubleQuotes46>8<doubleQuotes46><newline46mondego>        android:targetSdkVersion=<doubleQuotes46>15<doubleQuotes46> /><newline46mondego><newline46mondego>    <uses-permission android:name=<doubleQuotes46>android.permission.INTERNET<doubleQuotes46> /><newline46mondego><newline46mondego>    <application<newline46mondego>        android:icon=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46><newline46mondego>        android:label=<doubleQuotes46>@string/app_name<doubleQuotes46><newline46mondego>        android:theme=<doubleQuotes46>@style/AppTheme<doubleQuotes46> ><newline46mondego>        <activity<newline46mondego>            android:name=<doubleQuotes46>.MainRequest<doubleQuotes46><newline46mondego>            android:label=<doubleQuotes46>@string/title_activity_main<doubleQuotes46> ><newline46mondego>            <intent-filter><newline46mondego>                <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego><newline46mondego>                <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>            </intent-filter><newline46mondego>        </activity><newline46mondego>        <activity<newline46mondego>            android:name=<doubleQuotes46>.Webpage<doubleQuotes46><newline46mondego>            android:label=<doubleQuotes46>@string/title_activity_webpage<doubleQuotes46> ><newline46mondego>            <intent-filter><newline46mondego>                <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego><newline46mondego>                <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>            </intent-filter><newline46mondego>        </activity><newline46mondego>    </application><newline46mondego><newline46mondego></manifest><newline46mondego>"
"5857splitHere46","12127778splitHere46","packet"
"5858splitHere46","12127778splitHere46",".getAddress()"
"5859splitHere46","12127778splitHere46","packet"
"5860splitHere46","12127778splitHere46","/etc/hosts"
"5861splitHere46","12127779splitHere46","<property name=<doubleQuotes46>eclipselink.logging.level<doubleQuotes46> value=<doubleQuotes46>DEBUG<doubleQuotes46>/><newline46mondego>"
"5862splitHere46","12127779splitHere46","<property name=<doubleQuotes46>eclipselink.ddl-generation<doubleQuotes46> value=<doubleQuotes46>create-tables<doubleQuotes46>/><newline46mondego>"
"5863splitHere46","12127779splitHere46","<exclude-unlisted-classes>true</exclude-unlisted-classes><newline46mondego>"
"5864splitHere46","12127846splitHere46","int localStart = 0;<newline46mondego>    int localEnd = end - start;<newline46mondego>    Number[] local = new Number[5];<newline46mondego>    tempMedianArray[0] = list[localStart + start];<newline46mondego>    tempMedianArray[1] = list[(localStart + localEnd) / 4 + start];<newline46mondego>    tempMedianArray[2] = list[(localStart + localEnd) / 4 * 3 + start];<newline46mondego>    tempMedianArray[3] = list[(localStart + localEnd) / 2 + start];<newline46mondego>    tempMedianArray[4] = list[localEnd + start];<newline46mondego>"
"5865splitHere46","12127897splitHere46","SQLite"
"5866splitHere46","12127897splitHere46","file"
"5867splitHere46","12127987splitHere46","testRunner.testCase.testSteps[<doubleQuotes46>Name of your teststeup<doubleQuotes46>].testRequest.response.getRequestContent()<newline46mondego>"
"5868splitHere46","12128015splitHere46","<uses-sdk<newline46mondego>    android:minSdkVersion=<doubleQuotes46>8<doubleQuotes46><newline46mondego>    android:targetSdkVersion=<doubleQuotes46>15<doubleQuotes46> /><newline46mondego>"
"5869splitHere46","12128038splitHere46","Album"
"5870splitHere46","12128038splitHere46","getArtist"
"5871splitHere46","12128038splitHere46","getTrackList"
"5872splitHere46","12128038splitHere46","public interface Album {<newline46mondego>    /**<newline46mondego>     * This method returns the media type of the album. <newline46mondego>     * @return the media type of the album, either CD or DVD<newline46mondego>     * @see #getTitle()<newline46mondego>     * @see #getGenre()<newline46mondego>     */<newline46mondego>     String getMediaType();<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method returns the title of the album. <newline46mondego>     * @return the title of the album<newline46mondego>     * @see #getMediaType()<newline46mondego>     * @see #getGenre()<newline46mondego>     */<newline46mondego>     String getTitle();<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method returns the genre of the album. <newline46mondego>     * @return the genre of the album<newline46mondego>     * @see #getTitle()<newline46mondego>     * @see #getMediaType()<newline46mondego>     */<newline46mondego>    String getGenre();<newline46mondego><newline46mondego>}<newline46mondego>"
"5873splitHere46","12128038splitHere46","CDAlbum"
"5874splitHere46","12128038splitHere46","Album"
"5875splitHere46","12128038splitHere46","CDAlbum"
"5876splitHere46","12128038splitHere46","DVDAlbum"
"5877splitHere46","12128038splitHere46","Album.getMediaType"
"5878splitHere46","12128038splitHere46","CDAlbum"
"5879splitHere46","12128038splitHere46","getArtist"
"5880splitHere46","12128038splitHere46","getTrackList"
"5881splitHere46","12128038splitHere46","for (final Album album : albumCollection) {<newline46mondego>  final String type = album.getMediaType();<newline46mondego>  System.out.print(type + <doubleQuotes46> album: <doubleQuotes46> + album.getTitle()<newline46mondego>      + <doubleQuotes46> (<doubleQuotes46> + album.getGenre() + <doubleQuotes46>) - <doubleQuotes46>);<newline46mondego>  if (type.equals(<doubleQuotes46>CD<doubleQuotes46>)) {<newline46mondego>    final CDAlbum cd = (CDAlbum) album;<newline46mondego>    System.out.println(cd.getArtist());<newline46mondego>    int n = 0;<newline46mondego>    for (final String track : cd.getTrackList()) {<newline46mondego>      System.out.printf(<doubleQuotes46>#%2d - %s\n<doubleQuotes46>, ++n, track);<newline46mondego>    }<newline46mondego>  } else {<newline46mondego>    final DVDAlbum dvd = (DVDAlbum) album;<newline46mondego>    System.out.println(dvd.getDirector());<newline46mondego>    System.out.println(dvd.getPlotOutline());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5882splitHere46","12128065splitHere46","java"
"5883splitHere46","12128065splitHere46","javac -classpath . assignment1/Percolation.java"
"5884splitHere46","12128065splitHere46","java -cp . assignment1.Percolation"
"5885splitHere46","12128100splitHere46","int[] list = {34, 17, 23, 35, 45, 9, 1};<newline46mondego>...<newline46mondego>selectionSort(list);<newline46mondego>"
"5886splitHere46","12128100splitHere46","selectionSort()"
"5887splitHere46","12128100splitHere46","selectionSort(E[])"
"5888splitHere46","12128100splitHere46","int"
"5889splitHere46","12128100splitHere46","Comparable"
"5890splitHere46","12128100splitHere46","Integer[]"
"5891splitHere46","12128100splitHere46","Integer"
"5892splitHere46","12128100splitHere46","Comparable<Integer>"
"5893splitHere46","12128100splitHere46","selectionSort()"
"5894splitHere46","12128100splitHere46","Arrays.sort()"
"5895splitHere46","12128100splitHere46","printArray()"
"5896splitHere46","12128313splitHere46","Preference prefereces=findPreference(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>        prefereces.setOnPreferenceClickListener (new Preference.OnPreferenceClickListener(){<newline46mondego>            public boolean onPreferenceClick(Preference preference){<newline46mondego>                Intent intent = new Intent();<newline46mondego>                intent.setType(<doubleQuotes46>image/*<doubleQuotes46>);<newline46mondego>                intent.setAction(Intent.ACTION_GET_CONTENT);<newline46mondego>                int PICK_IMAGE = 1;<newline46mondego>                startActivityForResult(Intent.createChooser(intent, <doubleQuotes46>Select Picture<doubleQuotes46>), PICK_IMAGE);<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"5897splitHere46","12128313splitHere46","protected void onActivityResult(int requestCode, int resultCode, Intent imageReturnedIntent) { <newline46mondego>        super.onActivityResult(requestCode, resultCode, imageReturnedIntent); <newline46mondego><newline46mondego>            if(resultCode == RESULT_OK){  <newline46mondego>                Uri selectedImage = imageReturnedIntent.getData();<newline46mondego>                String[] filePathColumn = {MediaStore.Images.Media.DATA};<newline46mondego><newline46mondego>                Cursor cursor = getContentResolver().query(selectedImage, filePathColumn, null, null, null);<newline46mondego>                cursor.moveToFirst();<newline46mondego><newline46mondego>                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);<newline46mondego>                String filePath = cursor.getString(columnIndex);<newline46mondego>                cursor.close();<newline46mondego><newline46mondego><newline46mondego>                Log.d(LOG_TAG, <doubleQuotes46>Data Recieved! <doubleQuotes46> + filePath);<newline46mondego><newline46mondego>        }<newline46mondego>"
"5898splitHere46","12128400splitHere46","%JAVACMD%"
"5899splitHere46","12128400splitHere46","%JAVA_HOME%"
"5900splitHere46","12128400splitHere46","%JAVA_HOME%\bin\java.exe"
"5901splitHere46","12128400splitHere46","java.exe"
"5902splitHere46","12128400splitHere46","%JAVA_HOME%"
"5903splitHere46","12128400splitHere46","Ant.bat"
"5904splitHere46","12128400splitHere46","java.exe"
"5905splitHere46","12128400splitHere46","%JAVA_HOME%"
"5906splitHere46","12128400splitHere46","JAVA_HOME C:\Program Files\Java\jdk1.7.0_06<newline46mondego>"
"5907splitHere46","12128400splitHere46","%PATH%"
"5908splitHere46","12128400splitHere46","%CLASSPATH%"
"5909splitHere46","12128400splitHere46","build.xml"
"5910splitHere46","12128400splitHere46","%CLASSPATH%"
"5911splitHere46","12128413splitHere46","abstract"
"5912splitHere46","12128413splitHere46","objectType"
"5913splitHere46","12128413splitHere46","getter/setter"
"5914splitHere46","12128413splitHere46","public abstract class ParentObject {<newline46mondego><newline46mondego>    private double hSpeed;<newline46mondego>    private double vSpeed;<newline46mondego><newline46mondego>    /** Getter/setter methods */<newline46mondego><newline46mondego>    public double gethSpeed() {<newline46mondego>        return hSpeed;<newline46mondego>    }<newline46mondego>    public void sethSpeed(double hSpeed) {<newline46mondego>        this.hSpeed = hSpeed;<newline46mondego>    }<newline46mondego>    public double getvSpeed() {<newline46mondego>        return vSpeed;<newline46mondego>    }<newline46mondego>    public void setvSpeed(double vSpeed) {<newline46mondego>        this.vSpeed = vSpeed;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5915splitHere46","12128413splitHere46","ObjectType"
"5916splitHere46","12128413splitHere46","extend"
"5917splitHere46","12128413splitHere46","ParentObject"
"5918splitHere46","12128413splitHere46","setPlayerFriction()"
"5919splitHere46","12128413splitHere46","public void setPlayerFriction(ParentObject objectType, double hspeed, double vspeed){<newline46mondego><newline46mondego>    double hSpeed = objectType.gethSpeed();<newline46mondego>    if(hSpeed >= GameWindow.friction){<newline46mondego>          objectType.sethSpeed(hSpeed - GameWindow.friction);<newline46mondego>    }else if(hSpeed <= -GameWindow.friction){<newline46mondego>          objectType.sethSpeed(hSpeed + GameWindow.friction);<newline46mondego>    }else{<newline46mondego>          objectType.sethSpeed(0);<newline46mondego>    }<newline46mondego><newline46mondego>    double vSpeed = getvSpeed();<newline46mondego>    if(vSpeed >= GameWindow.friction){<newline46mondego>          objectType.setvSpeed(vSpeed - GameWindow.friction);<newline46mondego>    }else if(obj.vspeed <= -GameWindow.friction){<newline46mondego>          objectType.setvSpeed(vSpeed + GameWindow.friction);<newline46mondego>    }else{<newline46mondego>          objectType.setvSpeed(0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5920splitHere46","12128413splitHere46","ParentObject"
"5921splitHere46","12128413splitHere46","public class ObjImpl extends ParentObject{<newline46mondego>    //Concrete implementation<newline46mondego>}<newline46mondego><newline46mondego>public class ObjImpl2 extends ParentObject{<newline46mondego>    //Concrete implementation<newline46mondego>}<newline46mondego><newline46mondego>public class TestClass{<newline46mondego>    public void setPlayerFriction(ParentObject objectType, double hspeed, double vspeed){   <newline46mondego>        double hSpeed = objectType.gethSpeed();<newline46mondego>        if(hSpeed >= GameWindow.friction){<newline46mondego>              objectType.sethSpeed(hSpeed - GameWindow.friction);<newline46mondego>        }else if(hSpeed <= -GameWindow.friction){<newline46mondego>              objectType.sethSpeed(hSpeed + GameWindow.friction);<newline46mondego>        }else{<newline46mondego>              objectType.sethSpeed(0);<newline46mondego>        }<newline46mondego><newline46mondego>        double vSpeed = getvSpeed();<newline46mondego>        if(vSpeed >= GameWindow.friction){<newline46mondego>              objectType.setvSpeed(vSpeed - GameWindow.friction);<newline46mondego>        }else if(obj.vspeed <= -GameWindow.friction){<newline46mondego>              objectType.setvSpeed(vSpeed + GameWindow.friction);<newline46mondego>        }else{<newline46mondego>              objectType.setvSpeed(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        ParentObject object1    = new ObjImpl();<newline46mondego>        ParentObject object2    = new ObjImpl2();<newline46mondego><newline46mondego>        setPlayerFriction(object1, 1.0d, 2.0d);<newline46mondego>        setPlayerFriction(object2, 2.25d, 2.0d);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5922splitHere46","12128453splitHere46","paintComponent"
"5923splitHere46","12128453splitHere46","paint"
"5924splitHere46","12128453splitHere46","Thread.sleep"
"5925splitHere46","12128453splitHere46","Timer"
"5926splitHere46","12128479splitHere46","Boolean  [][] ba ;<newline46mondego>Boolean  [] ba [];<newline46mondego>Boolean  ba [][] ;<newline46mondego>"
"5927splitHere46","12128479splitHere46","int a[];<newline46mondego>"
"5928splitHere46","12128479splitHere46","int[] a;<newline46mondego>"
"5929splitHere46","12128479splitHere46","Boolean[][] ba ;<newline46mondego>"
"5930splitHere46","12128808splitHere46","rest:<newline46mondego>  ~('\n'|'\r')* '\r'? ('\n'|EOF)<newline46mondego>;<newline46mondego>"
"5931splitHere46","12128808splitHere46","~"
"5932splitHere46","12128808splitHere46","~('\n'|'\r')"
"5933splitHere46","12128808splitHere46","'\n'"
"5934splitHere46","12128808splitHere46","'\r'"
"5935splitHere46","12128808splitHere46","\r"
"5936splitHere46","12128808splitHere46","\n"
"5937splitHere46","12128808splitHere46","'\n'"
"5938splitHere46","12128808splitHere46","'\r'"
"5939splitHere46","12128808splitHere46","'\n'"
"5940splitHere46","12128808splitHere46","rest"
"5941splitHere46","12128808splitHere46","WS"
"5942splitHere46","12128808splitHere46","rest"
"5943splitHere46","12128808splitHere46","0: IN 0,0,0<newline46mondego>1: LDC 1,1,0 r1=0<newline46mondego>"
"5944splitHere46","12128808splitHere46","'rule:'"
"5945splitHere46","12128808splitHere46","token[type=INTEGER text='0']<newline46mondego>token[type=':'     text=':']<newline46mondego>token[type='IN'    text='IN']<newline46mondego>token[type=INTEGER text='0']<newline46mondego>token[type=','     text=',']<newline46mondego>token[type=INTEGER text='0']<newline46mondego>token[type=','     text=',']<newline46mondego>token[type=INTEGER text='0']<newline46mondego>token[type=INTEGER text='1']<newline46mondego>token[type=':'     text=':']<newline46mondego>token[type='LDC'   text='LDC']<newline46mondego>token[type=INTEGER text='1']<newline46mondego>token[type=','     text=',']<newline46mondego>token[type=INTEGER text='1']<newline46mondego>token[type=','     text=',']<newline46mondego>token[type=INTEGER text='0']<newline46mondego>token[type=INTEGER text='1']<newline46mondego>token[type=INTEGER text='0']<newline46mondego>"
"5946splitHere46","12128808splitHere46","'='"
"5947splitHere46","12128808splitHere46","'r'"
"5948splitHere46","12128808splitHere46","line 2:13 no viable alternative at character 'r'<newline46mondego>line 2:15 no viable alternative at character '='<newline46mondego>"
"5949splitHere46","12128808splitHere46","START : INTEGER ':';<newline46mondego>"
"5950splitHere46","12128808splitHere46","rule"
"5951splitHere46","12128808splitHere46","rule<newline46mondego> : START ro=rocommand i1=INTEGER ',' i2=INTEGER ',' i3=INTEGER rest ...<newline46mondego> | ...<newline46mondego> ;<newline46mondego>"
"5952splitHere46","12128808splitHere46","rest"
"5953splitHere46","12128808splitHere46","START"
"5954splitHere46","12128808splitHere46","rest<newline46mondego> : ~START*<newline46mondego> ;<newline46mondego>"
"5955splitHere46","12128808splitHere46","'='"
"5956splitHere46","12128808splitHere46","'r'"
"5957splitHere46","12128808splitHere46","ANY"
"5958splitHere46","12128808splitHere46","ANY : . ; // match any char<newline46mondego>"
"5959splitHere46","12128808splitHere46","LINE_BREAK"
"5960splitHere46","12128808splitHere46","LINE_BREAK : '\r'? '\n' | '\r';<newline46mondego>"
"5961splitHere46","12128808splitHere46","\r"
"5962splitHere46","12128808splitHere46","\n"
"5963splitHere46","12128808splitHere46","WS"
"5964splitHere46","12128808splitHere46","rule<newline46mondego> : INTEGER ':' ro=rocommand i1=INTEGER ',' i2=INTEGER ',' i3=INTEGER rest LINE_BREAK ...<newline46mondego> | ...<newline46mondego> ;<newline46mondego><newline46mondego>rest<newline46mondego> : ~LINE_BREAK*<newline46mondego> ;<newline46mondego>"
"5965splitHere46","12128861splitHere46","FilterOutputStream"
"5966splitHere46","12128867splitHere46","System.out.println"
"5967splitHere46","12128867splitHere46","Float.toString()"
"5968splitHere46","12128867splitHere46","FloatingDecimal"
"5969splitHere46","12128867splitHere46","FloatingDecimal#toJavaFormatString()"
"5970splitHere46","12128867splitHere46","BigDecimal bd = new BigDecimal(0.1f);<newline46mondego>System.out.println(bd);<newline46mondego>"
"5971splitHere46","12128900splitHere46","minimum distance between point and line segment"
"5972splitHere46","12129058splitHere46","eclipse.ini"
"5973splitHere46","12129058splitHere46","-vm"
"5974splitHere46","12129198splitHere46","//"
"5975splitHere46","12129492splitHere46","com.google.gwt.user.client.History"
"5976splitHere46","12129619splitHere46","if (N == 0) System.out.println(prefix);<newline46mondego>"
"5977splitHere46","12129619splitHere46","System.out.print"
"5978splitHere46","12129619splitHere46","System.out.println"
"5979splitHere46","12129623splitHere46","<repository><newline46mondego>        <id>java.net</id><newline46mondego>        <name>java.net Maven Repository</name><newline46mondego>        <url>https://maven-repository.dev.java.net/nonav/repository</url><newline46mondego>    </repository><newline46mondego>"
"5980splitHere46","12129623splitHere46","<dependency><newline46mondego>        <groupId>javax.xml.bind</groupId><newline46mondego>        <artifactId>jaxb-api</artifactId><newline46mondego>        <version>2.2</version><newline46mondego>    </dependency><newline46mondego>"
"5981splitHere46","12129629splitHere46","javaw"
"5982splitHere46","12129629splitHere46","javaw"
"5983splitHere46","12129629splitHere46","javaw"
"5984splitHere46","12129629splitHere46","javaw"
"5985splitHere46","12129629splitHere46","import javax.swing.*;<newline46mondego>public class JavavsJavaw {<newline46mondego>    private static void renderGUI() {<newline46mondego>        JFrame jFrame = new JFrame(<doubleQuotes46>HelloWorld Swing<doubleQuotes46>);<newline46mondego>        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        JLabel helloLabel = new JLabel(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>        jFrame.getContentPane().add(helloLabel);<newline46mondego>        jFrame.pack();<newline46mondego>        jFrame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                renderGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5986splitHere46","12129629splitHere46","C:\>java JavavsJavaw"
"5987splitHere46","12129629splitHere46","C:\>javaw JavavsJavaw"
"5988splitHere46","12129739splitHere46","Person"
"5989splitHere46","12129739splitHere46",":"
"5990splitHere46","12129739splitHere46","Person"
"5991splitHere46","12129739splitHere46","for(Person p: a.contacts())<newline46mondego>        System.out.println(p);<newline46mondego>"
"5992splitHere46","12129739splitHere46","List"
"5993splitHere46","12129739splitHere46","Set"
"5994splitHere46","12129739splitHere46","contacts()"
"5995splitHere46","12129739splitHere46","Person"
"5996splitHere46","12129739splitHere46","Set"
"5997splitHere46","12129739splitHere46","public Set<Person> contacts() {<newline46mondego>    return friends;<newline46mondego>}<newline46mondego>"
"5998splitHere46","12129881splitHere46","q=ids:(ID1 OR ID2)"
"5999splitHere46","12129881splitHere46","q=*:*&fq=ids:(ID1 OR ID2)"
"6000splitHere46","12129919splitHere46","Calendar"
"6001splitHere46","12129919splitHere46","11"
"6002splitHere46","12129919splitHere46","12"
"6003splitHere46","12129997splitHere46","C:\Program Files\Java\jdk1.7.0_06\bin"
"6004splitHere46","12129997splitHere46","C:\activiti-5.10\activiti-5.10\apps\h2\h2.start.bat"
"6005splitHere46","12129997splitHere46","java"
"6006splitHere46","12129997splitHere46","java.exe"
"6007splitHere46","12130021splitHere46","probability=True"
"6008splitHere46","12130021splitHere46","SVC"
"6009splitHere46","12130099splitHere46","<Connector connectionTimeout=<doubleQuotes46>20000<doubleQuotes46> port=<doubleQuotes46>8080<doubleQuotes46> <newline46mondego>           protocol=<doubleQuotes46>org.apache.coyote.http11.Http11NioProtocol<doubleQuotes46> <newline46mondego>           redirectPort=<doubleQuotes46>8443<doubleQuotes46>/><newline46mondego>"
"6010splitHere46","12130157splitHere46","Export->Java->JAR file"
"6011splitHere46","12130157splitHere46","import"
"6012splitHere46","12130157splitHere46","Build Path ---> Configure Path ----> Click Project Tab ---> Add the project."
"6013splitHere46","12130157splitHere46","Jar"
"6014splitHere46","12130157splitHere46","more easier while importing and exporting"
"6015splitHere46","12130157splitHere46","version numbers"
"6016splitHere46","12130175splitHere46","public aspect WormholeAspect {<newline46mondego>    pointcut callerSpace(<caller context>) :<newline46mondego>        <caller pointcut>;<newline46mondego><newline46mondego>    pointcut calleeSpace(<callee context>) :<newline46mondego>        <callee pointcut>;<newline46mondego><newline46mondego>    pointcut wormhole(<caller context>, <callee context>) :<newline46mondego>        cflow(callerSpace(<caller context>)) && <newline46mondego>        calleeSpace(<callee context>);<newline46mondego><newline46mondego>    // advice to wormhole<newline46mondego>    before(<caller context>, <callee context>) :<newline46mondego>        wormhole(<caller context>, <callee context>)<newline46mondego>    {<newline46mondego>            ... advice body<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6017splitHere46","12130175splitHere46","cflow()"
"6018splitHere46","12130175splitHere46","cflow()"
"6019splitHere46","12130175splitHere46","ThreadLocal"
"6020splitHere46","12130309splitHere46","ExpandoMetaClass"
"6021splitHere46","12130398splitHere46","sb"
"6022splitHere46","12130398splitHere46","StringBuilder"
"6023splitHere46","12130459splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>(\\\\\<doubleQuotes46>|[^\<doubleQuotes46> ])+|\<doubleQuotes46>(\\\\\<doubleQuotes46>|[^\<doubleQuotes46>])*\<doubleQuotes46><doubleQuotes46>); <newline46mondego>"
"6024splitHere46","12130588splitHere46","import javafx.application.Application<newline46mondego>import javafx.scene.Scene<newline46mondego>import javafx.scene.layout.StackPane<newline46mondego>import javafx.stage.Stage<newline46mondego>import javafx.scene.control.Label<newline46mondego><newline46mondego>class Test extends Application {<newline46mondego>  println(<doubleQuotes46>Test()<doubleQuotes46>)<newline46mondego><newline46mondego>  override def start(primaryStage: Stage) {<newline46mondego>    primaryStage.setTitle(<doubleQuotes46>Sup!<doubleQuotes46>)<newline46mondego><newline46mondego>    val root = new StackPane<newline46mondego>    root.getChildren.add(new Label(<doubleQuotes46>Hello world!<doubleQuotes46>))<newline46mondego><newline46mondego>    primaryStage.setScene(new Scene(root, 300, 300))<newline46mondego>    primaryStage.show()<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>object Test {<newline46mondego>  def main(args: Array[String]) {<newline46mondego>    Application.launch(classOf[Test], args: _*)<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6025splitHere46","12130588splitHere46","def main()"
"6026splitHere46","12130588splitHere46","Application.launch(classOf[Test], args: _*)"
"6027splitHere46","12130588splitHere46","Application.launch(args : _*)"
"6028splitHere46","12130633splitHere46","go(short s)"
"6029splitHere46","12130633splitHere46","short"
"6030splitHere46","12130633splitHere46","int"
"6031splitHere46","12130633splitHere46","short"
"6032splitHere46","12130633splitHere46","Short"
"6033splitHere46","12130633splitHere46","go(int n)"
"6034splitHere46","12130639splitHere46","9,766,322,441"
"6035splitHere46","12130639splitHere46","4,294,967,295"
"6036splitHere46","12130650splitHere46","<newline46mondego>//layout of the composite doesn't work<newline46mondego>//composite.layout(true, true);<newline46mondego><newline46mondego>//layout of parent works<newline46mondego>composite.getParent().layout(true, true);<newline46mondego><newline46mondego>//marks the composite's screen are as invalidates, which will force a <newline46mondego>composite.redraw(); redraw on next paint request <newline46mondego><newline46mondego>//tells the application to do all outstanding paint requests immediately<newline46mondego>composite.update(); <newline46mondego><newline46mondego>"
"6037splitHere46","12130721splitHere46","df"
"6038splitHere46","12130721splitHere46","DatatypeFactory df;<newline46mondego>"
"6039splitHere46","12130721splitHere46","df.newXMLGregorianCalendar(gc);<newline46mondego>^<newline46mondego>"
"6040splitHere46","12130721splitHere46","DatatypeFactory df = DatatypeFactory.newInstance(); <newline46mondego>"
"6041splitHere46","12130791splitHere46","String#split"
"6042splitHere46","12130791splitHere46","String s = <doubleQuotes46>14.015_AUDI<doubleQuotes46>;<newline46mondego>String[] parts = s.split(<doubleQuotes46>_<doubleQuotes46>); //returns an array with the 2 parts<newline46mondego>String firstPart = parts[0]; //14.015<newline46mondego>"
"6043splitHere46","12130808splitHere46","a"
"6044splitHere46","12130808splitHere46","d"
"6045splitHere46","12130808splitHere46","int"
"6046splitHere46","12130829splitHere46","JApplet"
"6047splitHere46","12130829splitHere46","import acm.graphics.GMath;<newline46mondego>import acm.graphics.GPolygon;<newline46mondego>import acm.program.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>/**<newline46mondego>* This program creates a five-pointed star every time the user clicks the mouse<newline46mondego>* on the canvas.<newline46mondego>*/<newline46mondego>public class DrawStarMap extends GraphicsProgram {<newline46mondego><newline46mondego>    public void init() {<newline46mondego>        addMouseListeners();<newline46mondego>        add(new JButton(<doubleQuotes46>ClearN<doubleQuotes46>), NORTH);<newline46mondego>        add(new JButton(<doubleQuotes46>ClearW<doubleQuotes46>), WEST);<newline46mondego>        add(new JButton(<doubleQuotes46>ClearE<doubleQuotes46>), EAST);<newline46mondego>        add(new JButton(<doubleQuotes46>ClearS<doubleQuotes46>), SOUTH);<newline46mondego>        addActionListeners();<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>    * Called whenever the user clicks the mouse.<newline46mondego>    */<newline46mondego>    public void mouseClicked(MouseEvent e) {<newline46mondego>        GStar star = new GStar(STAR_SIZE);<newline46mondego>        star.setFilled(true);<newline46mondego>        add(star, e.getX(), e.getY());<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>    * Removes all the graphical objects from the canvas<newline46mondego>    */<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        System.out.println(e.getActionCommand());<newline46mondego>        if (e.getActionCommand().startsWith(<doubleQuotes46>Clear<doubleQuotes46>)) {<newline46mondego>            removeAll();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>    * Private constants<newline46mondego>    */<newline46mondego>    private static final double STAR_SIZE = 20;<newline46mondego><newline46mondego>    private static class GStar extends GPolygon {<newline46mondego>        ...  <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6048splitHere46","12130881splitHere46","conf/evolutions/default/1.sql"
"6049splitHere46","12130881splitHere46","# --- Created by Ebean DDL<newline46mondego># To stop Ebean DDL generation, remove this comment and start using Evolutions<newline46mondego><newline46mondego># --- !Ups<newline46mondego>...<newline46mondego>"
"6050splitHere46","12130881splitHere46","conf/evolutions/default/2.sql"
"6051splitHere46","12130881splitHere46","# --- !Ups<newline46mondego>ALTER TABLE USER ADD COLUMN last_ip varchar(30) DEFAULT NULL;<newline46mondego><newline46mondego># --- !Downs<newline46mondego><newline46mondego>ALTER TABLE USER DELETE COLUMN last_ip;<newline46mondego>"
"6052splitHere46","12130885splitHere46","parser"
"6053splitHere46","12130885splitHere46","public enum Logger {<newline46mondego>    INFO,<newline46mondego>    DEBUG;<newline46mondego>}<newline46mondego>"
"6054splitHere46","12130885splitHere46","import java.lang.annotation.ElementType;<newline46mondego>import java.lang.annotation.Retention;<newline46mondego>import java.lang.annotation.RetentionPolicy;<newline46mondego>import java.lang.annotation.Target;<newline46mondego><newline46mondego>@Retention( RetentionPolicy.RUNTIME ) // the annotation will be available during runtime<newline46mondego>@Target( ElementType.METHOD )         // this can just used in methods<newline46mondego>public @interface LogMethodCall {<newline46mondego><newline46mondego>    Logger logLevel() default Logger.INFO;<newline46mondego><newline46mondego>}<newline46mondego>"
"6055splitHere46","12130885splitHere46","public class Person {<newline46mondego><newline46mondego>    // will use the default log level (INFO)<newline46mondego>    @LogMethodCall<newline46mondego>    public void foo( int a ) {<newline46mondego>        System.out.println( <doubleQuotes46>foo! <doubleQuotes46> + a );<newline46mondego>    }<newline46mondego><newline46mondego>    @LogMethodCall( logLevel = Logger.DEBUG )<newline46mondego>    public void bar( int b ) {<newline46mondego>        System.out.println( <doubleQuotes46>bar! <doubleQuotes46> + b );<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6056splitHere46","12130885splitHere46","public class Utils {<newline46mondego><newline46mondego>    public static void log( Object o, String methodName ) {<newline46mondego><newline46mondego>        // gets the object class<newline46mondego>        Class klass = o.getClass();<newline46mondego><newline46mondego>        // iterate over its methods<newline46mondego>        for ( Method m : klass.getMethods() ) {<newline46mondego><newline46mondego>            // verify if the method is the wanted one<newline46mondego>            if ( m.getName().equals( methodName ) ) {<newline46mondego><newline46mondego>                // yes, it is<newline46mondego>                // so, iterate over its annotations<newline46mondego>                for ( Annotation a : m.getAnnotations() ) {<newline46mondego><newline46mondego>                    // verify if it is a LogMethodCall annotation<newline46mondego>                    if ( a instanceof LogMethodCall ) {<newline46mondego><newline46mondego>                        // yes, it is<newline46mondego>                        // so, cast it<newline46mondego>                        LogMethodCall lmc = ( LogMethodCall ) a;<newline46mondego><newline46mondego>                        // verify the log level<newline46mondego>                        switch ( lmc.logLevel() ) {<newline46mondego>                            case INFO:<newline46mondego>                                System.out.println( <doubleQuotes46>performing info log for \<doubleQuotes46><doubleQuotes46> + m.getName() + <doubleQuotes46>\<doubleQuotes46> method<doubleQuotes46> );<newline46mondego>                                break;<newline46mondego>                            case DEBUG:<newline46mondego>                                System.out.println( <doubleQuotes46>performing debug log for \<doubleQuotes46><doubleQuotes46> + m.getName() + <doubleQuotes46>\<doubleQuotes46> method<doubleQuotes46> );<newline46mondego>                                break;<newline46mondego>                        }<newline46mondego><newline46mondego>                    }<newline46mondego>                }<newline46mondego><newline46mondego>                // method encountered, so the loop can be break<newline46mondego>                break;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6057splitHere46","12130885splitHere46","public class AnnotationProcessing {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Person p = new Person();<newline46mondego>        Utils.log( p, <doubleQuotes46>foo<doubleQuotes46> );<newline46mondego>        p.foo( 2 );<newline46mondego>        Utils.log( p, <doubleQuotes46>bar<doubleQuotes46> );<newline46mondego>        p.bar( 3 );<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6058splitHere46","12130944splitHere46","Picture"
"6059splitHere46","12130944splitHere46","Account"
"6060splitHere46","12130944splitHere46","isFavourite"
"6061splitHere46","12130944splitHere46","getFavourite"
"6062splitHere46","12131029splitHere46","throws"
"6063splitHere46","12131029splitHere46","UncheckedException"
"6064splitHere46","12131029splitHere46","Exception"
"6065splitHere46","12131069splitHere46","if (savedInstanceState == null)<newline46mondego>{<newline46mondego>  web.loadUrl(webURL);<newline46mondego>}<newline46mondego>"
"6066splitHere46","12131069splitHere46","@Override<newline46mondego>protected void onSaveInstanceState(Bundle outState )<newline46mondego>{<newline46mondego>super.onSaveInstanceState(outState);<newline46mondego>web.saveState(outState);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>protected void onRestoreInstanceState(Bundle savedInstanceState)<newline46mondego>{<newline46mondego>super.onRestoreInstanceState(savedInstanceState);<newline46mondego>web.restoreState(savedInstanceState);<newline46mondego>}<newline46mondego>"
"6067splitHere46","12131085splitHere46","java.util.Date"
"6068splitHere46","12131085splitHere46","java.sql.Date"
"6069splitHere46","12131085splitHere46","java.util.Date utilStartDate = jDateChooserStart.getDate();<newline46mondego>java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());<newline46mondego>"
"6070splitHere46","12131088splitHere46","BinaryTree<Number>"
"6071splitHere46","12131088splitHere46","Integer"
"6072splitHere46","12131088splitHere46","BinaryTree<Number> numTree = new BinaryTree<>();<newline46mondego>Integer i = 1;<newline46mondego>numTree.add(i);<newline46mondego>"
"6073splitHere46","12131088splitHere46","E"
"6074splitHere46","12131088splitHere46","Integer"
"6075splitHere46","12131088splitHere46","Integer"
"6076splitHere46","12131088splitHere46","Number"
"6077splitHere46","12131088splitHere46","Number"
"6078splitHere46","12131088splitHere46","E"
"6079splitHere46","12131088splitHere46","numTree.<Number>add(i);<newline46mondego>"
"6080splitHere46","12131088splitHere46","public <E extends T> E add(E value) {<newline46mondego>   ...<newline46mondego>   return value;<newline46mondego>}<newline46mondego><newline46mondego>public <E extends T> E add(E value, Node node) {<newline46mondego>   ...<newline46mondego>   return value;<newline46mondego>}<newline46mondego>"
"6081splitHere46","12131088splitHere46","Integer i2 = numTree.add(i);<newline46mondego>"
"6082splitHere46","12131088splitHere46","numTree.add"
"6083splitHere46","12131088splitHere46","Number"
"6084splitHere46","12131088splitHere46","Integer"
"6085splitHere46","12131140splitHere46","mail.smtps.*"
"6086splitHere46","12131140splitHere46","mail.smtp.*"
"6087splitHere46","12131140splitHere46","SSLSocketFactory"
"6088splitHere46","12131140splitHere46","SSLSocketFactory"
"6089splitHere46","12131140splitHere46","sslSocket.setEnabledProtocols(new String[] { <doubleQuotes46>TLSv1<doubleQuotes46> })"
"6090splitHere46","12131140splitHere46","SSLSocketFactory"
"6091splitHere46","12131140splitHere46","mail.smtps.ssl.socketFactory"
"6092splitHere46","12131140splitHere46","mail.smtps.ssl.socketFactory.class"
"6093splitHere46","12131140splitHere46","getDefault"
"6094splitHere46","12131140splitHere46","mail.smtps.ssl.checkserveridentity"
"6095splitHere46","12131140splitHere46","true"
"6096splitHere46","12131140splitHere46","false"
"6097splitHere46","12131210splitHere46","java.awt.event"
"6098splitHere46","12131210splitHere46","java.awt"
"6099splitHere46","12131210splitHere46","ID | Package   | Name<newline46mondego>--------------------------<newline46mondego>1  | awt       | SomeClassName1<newline46mondego>2  | awt.event | SomeClassName2<newline46mondego>"
"6100splitHere46","12131210splitHere46","SELECT * FROM MyTable WHERE Package = 'awt'<newline46mondego>"
"6101splitHere46","12131210splitHere46","awt"
"6102splitHere46","12131231splitHere46","HTTPUrlConnection"
"6103splitHere46","12131231splitHere46","Java/1.*"
"6104splitHere46","12131231splitHere46","Host"
"6105splitHere46","12131295splitHere46","thufir@dur"
"6106splitHere46","12131295splitHere46","thufir@dur.com"
"6107splitHere46","12131295splitHere46","authentication = new PasswordAuthentication(user, *pass*);//You must hand it username and pass, not two usernames like before<newline46mondego>    Properties props = new Properties();<newline46mondego>    props.put(<doubleQuotes46>mail.user<doubleQuotes46>, user);<newline46mondego>    props.put(<doubleQuotes46>mail.host<doubleQuotes46>, host);<newline46mondego>    props.put(<doubleQuotes46>mail.debug<doubleQuotes46>, debug ? <doubleQuotes46>true<doubleQuotes46> : <doubleQuotes46>false<doubleQuotes46>);<newline46mondego>    props.put(<doubleQuotes46>mail.store.protocol<doubleQuotes46>, pop3Provider);//an example provider is pop.gmail.com, or I think aol is pop.aol.com, many follow that pattern, this is used for reading inbox/incoming messages (hence the store)<newline46mondego>    props.put(<doubleQuotes46>mail.transport.protocol<doubleQuotes46>, smtpProvider);//follows same as above, but smtp not pop, this is used for outgoing messages (hence the transport)<newline46mondego>    session = Session.getDefaultInstance(props);<newline46mondego>"
"6108splitHere46","12131375splitHere46","BufferedReader br = new BufferedReader(<newline46mondego>        new InputStreamReader(fstream));<newline46mondego>String strLine;<newline46mondego>boolean registered = false;<newline46mondego>while ((strLine = br.readLine()) != null) {<newline46mondego>    if (strLine.startsWith(un)) {<newline46mondego>        registered = true;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>if(registered) {<newline46mondego>    //blah<newline46mondego>} else {<newline46mondego>    //blah<newline46mondego>}<newline46mondego>"
"6109splitHere46","12131375splitHere46","setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);<newline46mondego>"
"6110splitHere46","12131375splitHere46","javax.swing.WindowConstants.DISPOSE_ON_CLOSE"
"6111splitHere46","12131476splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>email<doubleQuotes46> value='@signupForm.field(<doubleQuotes46>email<doubleQuotes46>).value' /><newline46mondego>"
"6112splitHere46","12131476splitHere46","name"
"6113splitHere46","12131476splitHere46","Form"
"6114splitHere46","12131476splitHere46","saveBlank"
"6115splitHere46","12131476splitHere46","form.scala.view"
"6116splitHere46","12131476splitHere46","public static Result saveBlank(){<newline46mondego>    signupForm = signupForm.bindFromRequest();<newline46mondego>    if (signupForm.hasErrors()){<newline46mondego>        return badRequest(form.render(signupForm));<newline46mondego>    }<newline46mondego><newline46mondego>    User user = new User();<newline46mondego>    user = signupForm.get();<newline46mondego>    user.save();<newline46mondego><newline46mondego>    return ok(<doubleQuotes46>user saved);<newline46mondego>}<newline46mondego>"
"6117splitHere46","12131476splitHere46","public static Result edit(Long id){<newline46mondego>    signupform = signupForm.fill(User.find.byId(id));<newline46mondego>    return ok(form.render(signupForm));<newline46mondego>}<newline46mondego>"
"6118splitHere46","12131476splitHere46","DynamicForm"
"6119splitHere46","12131476splitHere46","public static Result saySomething(){<newline46mondego>    DynamicForm df = form().bindFromRequest();<newline46mondego>    return(<doubleQuotes46>you entered :<doubleQuotes46> + df.get(<doubleQuotes46>email<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"6120splitHere46","12131476splitHere46","public static Result sayShorter(){<newline46mondego>    return(<doubleQuotes46>you entered :<doubleQuotes46> + form().bindFromRequest().get(<doubleQuotes46>email<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"6121splitHere46","12131544splitHere46","// assuming you have List<List<?>> lists that is non-empty<newline46mondego>  Set<?> result = Sets.newLinkedHashSet(lists.get(0));<newline46mondego>  for (int i = 1; i < lists.size(); i++) {<newline46mondego>    result.retainAll(ImmutableSet.copyOf(lists.get(i)));<newline46mondego>  }<newline46mondego><newline46mondego>  return result;<newline46mondego>"
"6122splitHere46","12131605splitHere46","Project_name<newline46mondego>  /src<newline46mondego>     /Fonts<newline46mondego>        -Origin-Light.ttf<newline46mondego>     -Core(package)<newline46mondego>     -game(package)<newline46mondego>"
"6123splitHere46","12131605splitHere46","try { <newline46mondego>    font = Font.createFont(Font.TRUETYPE_FONT, <newline46mondego>            trial.class.getClassLoader().getResourceAsStream(<doubleQuotes46>Fonts/Origin-Light.ttf<doubleQuotes46>)); <newline46mondego>} catch (Exception e) { <newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"6124splitHere46","12131616splitHere46","Configure..."
"6125splitHere46","12131616splitHere46","Add Remote Catalog..."
"6126splitHere46","12131682splitHere46","ImageIO.write(input,<doubleQuotes46>PNG<doubleQuotes46>,(ImageOutputStream) cos);<newline46mondego>"
"6127splitHere46","12131682splitHere46","FileOutputStream output = new FileOutputStream(<doubleQuotes46>sheepTest.png<doubleQuotes46>);<newline46mondego>        CipherOutputStream cos = new CipherOutputStream(output, pbeCipher);<newline46mondego>        ImageIO.write(input, <doubleQuotes46>PNG<doubleQuotes46>, cos);<newline46mondego>        cos.close();<newline46mondego>"
"6128splitHere46","12131725splitHere46","ensureInjected()"
"6129splitHere46","12131740splitHere46","volatile"
"6130splitHere46","12131740splitHere46","get"
"6131splitHere46","12131740splitHere46","1555 protected void complete()<newline46mondego> 1556       {<newline46mondego> 1557           if (!isTimeSet)<newline46mondego> 1558               updateTime();<newline46mondego> 1559           if (!areFieldsSet || !areAllFieldsSet) {<newline46mondego> 1560               computeFields(); // fills in unset fields<newline46mondego> 1561               areAllFieldsSet = areFieldsSet = true;<newline46mondego> 1562           }<newline46mondego> 1563       }<newline46mondego>"
"6132splitHere46","12131740splitHere46","Calendar"
"6133splitHere46","12131740splitHere46","GregorianCalendar"
"6134splitHere46","12131796splitHere46","current = Integer.parseInt(guessTextField.getText().trim()); <newline46mondego>if (!firstTime) {<newline46mondego>    if (getUserInput > previous) {<newline46mondego>        getContentPane().setBackground(Color.red);<newline46mondego>    } else {<newline46mondego>        getContentPane().setBackground(Color.blue);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6135splitHere46","12131796splitHere46","firstTime"
"6136splitHere46","12131796splitHere46","previous"
"6137splitHere46","12131796splitHere46","previous"
"6138splitHere46","12131796splitHere46","getUserInput == randomNumber"
"6139splitHere46","12131796splitHere46","if (getUserInput < randomNumber) {<newline46mondego>   clueLabel.setText(<doubleQuotes46>Too Low<doubleQuotes46>);<newline46mondego>   getContentPane().setBackground(Color.blue); <------ remove this extra call<newline46mondego>   previous = getUserInput;<newline46mondego>}<newline46mondego>"
"6140splitHere46","12131852splitHere46","dev_appserver.sh"
"6141splitHere46","12131852splitHere46","./dev_appserver.sh"
"6142splitHere46","12131868splitHere46","CREATE TABLE"
"6143splitHere46","12131868splitHere46","db.execSQL(<newline46mondego>    <doubleQuotes46>create table <doubleQuotes46> + TASKS_TABLE +<doubleQuotes46> (<doubleQuotes46> +<newline46mondego>    TASK_ID + <doubleQuotes46> integer primary key autoincrement not null,<doubleQuotes46> +<newline46mondego>    TASK_NAME + <doubleQuotes46> text,<doubleQuotes46> +<newline46mondego>    TASK_COMPLETE + <doubleQuotes46> text,<doubleQuotes46> +<newline46mondego>    TASK_RESPONSIBLE + <doubleQuotes46> text<doubleQuotes46> + // <--- missing a comma<newline46mondego>    TASK_PRIORITY + <doubleQuotes46> integer<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>);<doubleQuotes46><newline46mondego>);<newline46mondego>"
"6144splitHere46","12131962splitHere46","import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class AddAt {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));<newline46mondego>        JLabel one = new JLabel(<doubleQuotes46>one<doubleQuotes46>);<newline46mondego>        JLabel two = new JLabel(<doubleQuotes46>two<doubleQuotes46>);<newline46mondego>        JLabel between = new JLabel(<doubleQuotes46>between<doubleQuotes46>);<newline46mondego><newline46mondego>        frame.add(panel);<newline46mondego>        panel.add(one);<newline46mondego>        panel.add(two);<newline46mondego>        panel.add(between, 1);<newline46mondego><newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6145splitHere46","12132050splitHere46","public DjPageDownloader() {<newline46mondego>    try {<newline46mondego>        url = new URL(<doubleQuotes46>http://stackoverflow.com/<doubleQuotes46>);<newline46mondego>        is = url.openStream();  // throws an IOException<newline46mondego>        dis = new DataInputStream(new BufferedInputStream(is));<newline46mondego><newline46mondego>        while ((line = dis.readLine()) != null) {<newline46mondego>            System.out.println(line);<newline46mondego>        }<newline46mondego>    } catch (MalformedURLException mue) {<newline46mondego>         mue.printStackTrace();<newline46mondego>    } catch (IOException ioe) {<newline46mondego>         ioe.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            is.close();<newline46mondego>        } catch (IOException ioe) {<newline46mondego>            // nothing to see here<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6146splitHere46","12132050splitHere46","public static void main(String []args){<newline46mondego>    new DjPageDownloader();//If you use it more later, store to a variable, but atm you aren't<newline46mondego>}<newline46mondego>"
"6147splitHere46","12132249splitHere46","setVisible"
"6148splitHere46","12132249splitHere46","frame2"
"6149splitHere46","12132249splitHere46","paint"
"6150splitHere46","12132249splitHere46","MyCanvas"
"6151splitHere46","12132249splitHere46","public void setColorFlag(int color)<newline46mondego>"
"6152splitHere46","12132328splitHere46","int nR;<newline46mondego>int nC;<newline46mondego><newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>    // Convert the String into its corresponding integer<newline46mondego>    //by calling one of the methods of the integer wrapper class<newline46mondego>    int xnR = Integer.parseInt(args[0]);<newline46mondego>    int xnC = Integer.parseInt(args[1]);<newline46mondego>    System.out.println(<doubleQuotes46>The rows are: <doubleQuotes46> +xnR);<newline46mondego>    System.out.println(<doubleQuotes46>The columns are: <doubleQuotes46> +xnC);<newline46mondego><newline46mondego>    W1Graphics w = new W1Graphics(xnR, xnC);<newline46mondego>    w.setVisible(true);<newline46mondego>}<newline46mondego><newline46mondego>public W1Graphics(int nR, int nC)<newline46mondego>{<newline46mondego>    this.nR = nR;<newline46mondego>    this.nC = nC;<newline46mondego>"
"6153splitHere46","12132339splitHere46","EventHandler"
"6154splitHere46","12132339splitHere46","KeyListener"
"6155splitHere46","12132339splitHere46","addKeyListener()"
"6156splitHere46","12132339splitHere46","class EventHandler implements KeyListener{<newline46mondego>    @Override<newline46mondego>    public void keyPressed(KeyEvent e) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyReleased(KeyEvent e) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyTyped(KeyEvent e) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego><newline46mondego>    }<newline46mondego>}   <newline46mondego><newline46mondego>/**<newline46mondego>* Usage<newline46mondego>*/<newline46mondego>EventHandler eh = new EventHandler();<newline46mondego>nameOfComponent.addKeyListener(eh);  <newline46mondego>"
"6157splitHere46","12132554splitHere46","mvn install"
"6158splitHere46","12132554splitHere46","~/.m2/repository"
"6159splitHere46","12132554splitHere46","ln -s ~/.m2/repository/com/google/ ."
"6160splitHere46","12132554splitHere46","StringBuilderBenchmark"
"6161splitHere46","12132554splitHere46","mvn install"
"6162splitHere46","12132554splitHere46","java -cp .:\<newline46mondego>./google/caliper/caliper/1.0-SNAPSHOT/caliper-1.0-SNAPSHOT.jar:\<newline46mondego>./google/guava/guava/12.0/guava-12.0.jar \<newline46mondego>examples/StringBuilderBenchmark<newline46mondego>"
"6163splitHere46","12132554splitHere46","com/google/gson/JsonParser"
"6164splitHere46","12132554splitHere46","maven"
"6165splitHere46","12132565splitHere46","Date"
"6166splitHere46","12132565splitHere46","Date.getTime"
"6167splitHere46","12132565splitHere46","long millisLeft = target.getTime() - now.getTime();<newline46mondego>"
"6168splitHere46","12132650splitHere46","RemovalNotification"
"6169splitHere46","12132650splitHere46","softValues()"
"6170splitHere46","12132674splitHere46","MessageFormat"
"6171splitHere46","12132674splitHere46","MessageFormat.format(<doubleQuotes46>Some {0}, {1}, {2}<doubleQuotes46>, var1, var2, var3);<newline46mondego>"
"6172splitHere46","12132674splitHere46","String.format"
"6173splitHere46","12132693splitHere46","JPanel"
"6174splitHere46","12132693splitHere46","new Color(238, 238, 238);"
"6175splitHere46","12132791splitHere46","ElementClass"
"6176splitHere46","12132791splitHere46","ElementClass"
"6177splitHere46","12132791splitHere46","String name"
"6178splitHere46","12132791splitHere46","Element"
"6179splitHere46","12132791splitHere46","public Element(String name) {<newline46mondego>  this.name = name.toLowerCase().intern();<newline46mondego>}<newline46mondego>"
"6180splitHere46","12132791splitHere46","element.name == <doubleQuotes46>special<doubleQuotes46>"
"6181splitHere46","12132903splitHere46","import javax.xml.parsers.*;<newline46mondego>import org.w3c.dom.*;<newline46mondego>import java.io.File;<newline46mondego><newline46mondego>public dumpXMLTags(...) {<newline46mondego>  String[] keys; // you would need that with appropriate size initialized<newline46mondego>  String[] values;  <newline46mondego><newline46mondego>  // Parse your XML file and construct DOM tree<newline46mondego>  File fXmlFile = new File(PATH_TO_YOUR_XML_FILE);<newline46mondego>  DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();<newline46mondego>  Document doc = dBuilder.parse(fXmlFile);<newline46mondego>  doc.getDocumentElement().normalize();<newline46mondego><newline46mondego>  // Traverse DOM tree (make sure is not empty first, etc)<newline46mondego>  NodeIterator iterator = traversal.createNodeIterator(<newline46mondego>      doc.getDocumentElement(), NodeFilter.SHOW_ELEMENT, null, true);<newline46mondego><newline46mondego>  int i = 0;  // index to you key/value Array<newline46mondego><newline46mondego>  for (Node n = iterator.nextNode(); n != null; n = iterator.nextNode()) {<newline46mondego>     keys[i] = ((Element) n).getTagName();<newline46mondego>     values[i] = ((Element)n).getNodeValue();<newline46mondego>     i++;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6182splitHere46","12132903splitHere46","//@* | //*[not(*)]<newline46mondego>"
"6183splitHere46","12132903splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();<newline46mondego>    Document doc = builder.parse(new InputSource(new StringReader(xml)));<newline46mondego><newline46mondego>    XPathFactory xpf = XPathFactory.newInstance();<newline46mondego>    XPath xp = xpf.newXPath();<newline46mondego>    NodeList nodes = (NodeList)xp.evaluate(<doubleQuotes46>//@* | //*[not(*)]<doubleQuotes46>, doc, XPathConstants.NODESET);<newline46mondego><newline46mondego>    System.out.println(nodes.getLength());<newline46mondego><newline46mondego>    for (int i=0, len=nodes.getLength(); i<len; i++) {<newline46mondego>        Node item = nodes.item(i);<newline46mondego>        System.out.println(item.getNodeName() + <doubleQuotes46> : <doubleQuotes46> + item.getTextContent());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6184splitHere46","12132912splitHere46","hashCode"
"6185splitHere46","12132912splitHere46","equals"
"6186splitHere46","12132922splitHere46","cl"
"6187splitHere46","12132961splitHere46","((Node) foodNode.getChildNodes().item(0)).getNodeValue()<newline46mondego>"
"6188splitHere46","12132967splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.border.EmptyBorder;<newline46mondego><newline46mondego>public class Stack extends JFrame {<newline46mondego><newline46mondego>private JPanel contentPane;<newline46mondego><newline46mondego>/**<newline46mondego> * Launch the application.<newline46mondego> */<newline46mondego>public static void main(String[] args) {<newline46mondego>    EventQueue.invokeLater(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            try {<newline46mondego>                Stack frame = new Stack();<newline46mondego>                frame.setVisible(true);<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Create the frame.<newline46mondego> */<newline46mondego>public Stack() {<newline46mondego>    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    setBounds(100, 100, 450, 300);<newline46mondego>    contentPane = new JPanel();<newline46mondego>    contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));<newline46mondego>    contentPane.setLayout(new BorderLayout(0, 0));<newline46mondego>    setContentPane(contentPane);<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6189splitHere46","12133021splitHere46","toString"
"6190splitHere46","12133021splitHere46","toString"
"6191splitHere46","12133021splitHere46","Object"
"6192splitHere46","12133021splitHere46","toString"
"6193splitHere46","12133021splitHere46","String"
"6194splitHere46","12133021splitHere46","System.out.println(myObject.toString());"
"6195splitHere46","12133021splitHere46","super.toString"
"6196splitHere46","12133043splitHere46","null"
"6197splitHere46","12133043splitHere46","Boolean.TRUE"
"6198splitHere46","12133043splitHere46","if (myMap.get(someKey) != null) { ... }<newline46mondego>"
"6199splitHere46","12133043splitHere46","if (myMap.containsKey(someKey)) { ... }<newline46mondego>"
"6200splitHere46","12133103splitHere46","Date fiveMinsAgo = new Date(new Date().getTime() - 5 * 60 * 1000);<newline46mondego>"
"6201splitHere46","12133293splitHere46","someMethod()"
"6202splitHere46","12133293splitHere46","Collection<List<Long>>"
"6203splitHere46","12133293splitHere46","someMethod()"
"6204splitHere46","12133301splitHere46","refresh"
"6205splitHere46","12133301splitHere46","list"
"6206splitHere46","12133301splitHere46","String[] values = {<doubleQuotes46>1<doubleQuotes46>,<doubleQuotes46>2<doubleQuotes46>,<doubleQuotes46>3<doubleQuotes46>};<newline46mondego>List<String> list = new ArrayList<String>(Arrays.asList(values));<newline46mondego>"
"6207splitHere46","12133301splitHere46","final ComboViewer comboViewer = new ComboViewer(shell, SWT.DROP_DOWN);<newline46mondego>comboViewer.setLabelProvider(new LabelProvider());<newline46mondego>comboViewer.setContentProvider(new ArrayContentProvider());<newline46mondego>comboViewer.setInput(list);<newline46mondego>Button button1 = new Button(shell, SWT.PUSH);<newline46mondego>button1.setText(<doubleQuotes46>Button 5<doubleQuotes46>);<newline46mondego>button1.addSelectionListener(new SelectionListener(){<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void widgetSelected(SelectionEvent e) {<newline46mondego>     // TODO Auto-generated method stub<newline46mondego>     System.out.println(<doubleQuotes46>Button 5<doubleQuotes46>);<newline46mondego>     list.add(<doubleQuotes46>4<doubleQuotes46>);<newline46mondego>     comboViewer.refresh();             <newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void widgetDefaultSelected(SelectionEvent e) {<newline46mondego>     // TODO Auto-generated method stub     <newline46mondego>  }<newline46mondego><newline46mondego>});<newline46mondego>"
"6208splitHere46","12133397splitHere46","ListView.getSelectionMode()"
"6209splitHere46","12133397splitHere46","sendRightButton.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>        public void handle(ActionEvent event) {<newline46mondego>            ObservableList<String> potential = <newline46mondego>                FXCollections.observableArrayList( //copy<newline46mondego>                    candidatesListView.getSelectionModel().getSelectedItems());<newline46mondego>            if (potential != null) {<newline46mondego>                heroes.addAll(potential);<newline46mondego>                candidates.removeAll(potential);<newline46mondego>                candidatesListView.getSelectionModel().clearSelection();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"6210splitHere46","12133431splitHere46","str"
"6211splitHere46","12133431splitHere46","if (str == null | str.length() == 0) {<newline46mondego>"
"6212splitHere46","12133431splitHere46","||"
"6213splitHere46","12133431splitHere46","|"
"6214splitHere46","12133431splitHere46","true"
"6215splitHere46","12133431splitHere46","||"
"6216splitHere46","12133431splitHere46","|"
"6217splitHere46","12133445splitHere46","public class TestTrayIcon {<newline46mondego><newline46mondego>    protected static final PopupFrame POPUP_FRAME = new PopupFrame();<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                try {<newline46mondego>                    TrayIcon trayIcon = new TrayIcon(ImageIO.read(new File(<doubleQuotes46>D:/DevWork/common/icons/iconex_v_bundle_png/iconexperience/v_collections_png/basic_foundation/16x16/plain/about.png<doubleQuotes46>)));<newline46mondego>                    trayIcon.addMouseListener(new MouseAdapter() {<newline46mondego>                        @Override<newline46mondego>                        public void mouseClicked(MouseEvent e) {<newline46mondego><newline46mondego>                            Point pos = e.getLocationOnScreen();<newline46mondego>                            Rectangle screen = getScreenBoundsAt(pos);<newline46mondego><newline46mondego>                            if (pos.x + POPUP_FRAME.getWidth() > screen.x + screen.width) {<newline46mondego>                                pos.x = screen.x + screen.width - POPUP_FRAME.getWidth();<newline46mondego>                            }<newline46mondego>                            if (pos.x < screen.x) {<newline46mondego>                                pos.x = screen.x;<newline46mondego>                            }<newline46mondego><newline46mondego>                            if (pos.y + POPUP_FRAME.getHeight() > screen.y + screen.height) {<newline46mondego>                                pos.y = screen.y + screen.height - POPUP_FRAME.getHeight();<newline46mondego>                            }<newline46mondego>                            if (pos.y < screen.y) {<newline46mondego>                                pos.y = screen.y;<newline46mondego>                            }<newline46mondego><newline46mondego>                            POPUP_FRAME.setLocation(pos);<newline46mondego>                            POPUP_FRAME.setVisible(true);<newline46mondego><newline46mondego>                        }<newline46mondego>                    });<newline46mondego>                    SystemTray.getSystemTray().add(trayIcon);<newline46mondego>                } catch (Exception ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static class PopupFrame extends JFrame {<newline46mondego><newline46mondego>        public PopupFrame() throws HeadlessException {<newline46mondego>            setLayout(new BorderLayout());<newline46mondego>            add(new JLabel(<doubleQuotes46>Hello world<doubleQuotes46>));<newline46mondego>            pack();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static Rectangle getScreenBoundsAt(Point pos) {<newline46mondego>        GraphicsDevice gd = getGraphicsDeviceAt(pos);<newline46mondego>        Rectangle bounds = null;<newline46mondego><newline46mondego>        if (gd != null) {<newline46mondego>            bounds = gd.getDefaultConfiguration().getBounds();<newline46mondego>            Insets insets = Toolkit.getDefaultToolkit().getScreenInsets(gd.getDefaultConfiguration());<newline46mondego><newline46mondego>            bounds.x += insets.left;<newline46mondego>            bounds.y += insets.top;<newline46mondego>            bounds.width -= (insets.left + insets.right);<newline46mondego>            bounds.height -= (insets.top + insets.bottom);<newline46mondego>        }<newline46mondego>        return bounds;<newline46mondego>    }<newline46mondego><newline46mondego>    public static GraphicsDevice getGraphicsDeviceAt(Point pos) {<newline46mondego>        GraphicsDevice device = null;<newline46mondego><newline46mondego>        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>        GraphicsDevice lstGDs[] = ge.getScreenDevices();<newline46mondego><newline46mondego>        ArrayList<GraphicsDevice> lstDevices = new ArrayList<GraphicsDevice>(lstGDs.length);<newline46mondego><newline46mondego>        for (GraphicsDevice gd : lstGDs) {<newline46mondego>            GraphicsConfiguration gc = gd.getDefaultConfiguration();<newline46mondego>            Rectangle screenBounds = gc.getBounds();<newline46mondego><newline46mondego>            if (screenBounds.contains(pos)) {<newline46mondego>                lstDevices.add(gd);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        if (lstDevices.size() == 1) {<newline46mondego>            device = lstDevices.get(0);<newline46mondego>        }<newline46mondego>        return device;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6218splitHere46","12133488splitHere46","name"
"6219splitHere46","12133488splitHere46",".data(name, value)"
"6220splitHere46","12133488splitHere46","data"
"6221splitHere46","12133562splitHere46","import java.util.ArrayList;<newline46mondego><newline46mondego>class A {<newline46mondego>}<newline46mondego><newline46mondego>class B extends A {<newline46mondego>}<newline46mondego><newline46mondego>class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        ArrayList<A> arraylist = new ArrayList<A>();<newline46mondego>        arraylist.add(new B());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6222splitHere46","12133562splitHere46","A"
"6223splitHere46","12133562splitHere46","B"
"6224splitHere46","12133643splitHere46","Test.class"
"6225splitHere46","12133643splitHere46","getClass.getResource(<doubleQuotes46>test.fxml<doubleQuotes46>)<newline46mondego>"
"6226splitHere46","12133643splitHere46","getClass.getResource(<doubleQuotes46>/com/mysite/main/test.fxml<doubleQuotes46>)<newline46mondego>"
"6227splitHere46","12133643splitHere46","ClassLoader"
"6228splitHere46","12133643splitHere46","getClass.getClassLoader.getResource(<doubleQuotes46>com/mysite/main/test.fxml<doubleQuotes46>)<newline46mondego>"
"6229splitHere46","12133643splitHere46",";?*.fxml"
"6230splitHere46","12133643splitHere46","Settings"
"6231splitHere46","12133643splitHere46","Preferences"
"6232splitHere46","12133643splitHere46","Compiler"
"6233splitHere46","12133663splitHere46","String next[] = {};<newline46mondego>HashMap<String, String> dataMap = new HashMap<String, String>();<newline46mondego><newline46mondego>try {<newline46mondego>    CSVReader reader = new CSVReader(new InputStreamReader(getAssets().open(<doubleQuotes46>inputFile.csv<doubleQuotes46>)));<newline46mondego>    for(;;) {<newline46mondego>        next = reader.readNext();<newline46mondego>        if(next != null) {<newline46mondego>            dataMap.put(next[0], next[1]);<newline46mondego>        } else {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"6234splitHere46","12133663splitHere46","dataMap.keySet();<newline46mondego>"
"6235splitHere46","12133663splitHere46","dataMap.values();<newline46mondego>"
"6236splitHere46","12133663splitHere46","String[] terms = new String[dataMap.keySet().size()];<newline46mondego>terms = dataMap.keySet().toArray(terms);<newline46mondego>"
"6237splitHere46","12133668splitHere46","@Override"
"6238splitHere46","12133668splitHere46","@Override"
"6239splitHere46","12133763splitHere46","WhileStatement:<newline46mondego>    while ( Expression ) Statement<newline46mondego>"
"6240splitHere46","12133763splitHere46","Expression:<newline46mondego>    AssignmentExpression<newline46mondego>"
"6241splitHere46","12133763splitHere46","AssignmentExpression:<newline46mondego>    ConditionalExpression<newline46mondego>    Assignment<newline46mondego><newline46mondego>Assignment:<newline46mondego>    LeftHandSide AssignmentOperator AssignmentExpression<newline46mondego><newline46mondego>LeftHandSide:<newline46mondego>    ExpressionName<newline46mondego>    FieldAccess<newline46mondego>    ArrayAccess<newline46mondego>"
"6242splitHere46","12133763splitHere46","LeftHandSide"
"6243splitHere46","12133851splitHere46","DataSourceProvider datasource = new JdbcDataSource(<doubleQuotes46>com.microsoft.sqlserver.jdbc.SQLServerDriver<doubleQuotes46>, <doubleQuotes46>jdbc:sqlserver://localhost:1433;DatabaseName=Northwind<doubleQuotes46>, <doubleQuotes46>username, <doubleQuotes46>password<doubleQuotes46>);<newline46mondego>Map map = new HashMap();<newline46mondego>map.put(<doubleQuotes46>now<doubleQuotes46>, new Date());<newline46mondego>datasource.setMap(map);<newline46mondego>"
"6244splitHere46","12133891splitHere46","getNumericValue"
"6245splitHere46","12133891splitHere46","A"
"6246splitHere46","12133891splitHere46","int"
"6247splitHere46","12133911splitHere46","null"
"6248splitHere46","12133911splitHere46","final"
"6249splitHere46","12133911splitHere46","null"
"6250splitHere46","12133911splitHere46","final"
"6251splitHere46","12134003splitHere46","public static boolean isOverriden(Method parent, Method toCheck) {<newline46mondego>    if (parent.getDeclaringClass().isAssignableFrom(toCheck.getDeclaringClass())<newline46mondego>            && parent.getName().equals(toCheck.getName())) {<newline46mondego>         Class<?>[] params1 = parent.getParameterTypes();<newline46mondego>         Class<?>[] params2 = toCheck.getParameterTypes();<newline46mondego>         if (params1.length == params2.length) {<newline46mondego>             for (int i = 0; i < params1.length; i++) {<newline46mondego>                 if (!params1[i].equals(params2[i])) {<newline46mondego>                     return false;<newline46mondego>                 }<newline46mondego>             }<newline46mondego>             return true;<newline46mondego>         }<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"6252splitHere46","12134023splitHere46","android:background=<doubleQuotes46>@null<doubleQuotes46> or <doubleQuotes46>#00000000<doubleQuotes46>//transparent<newline46mondego>"
"6253splitHere46","12134039splitHere46","String sql = <doubleQuotes46>SELECT * FROM foobar_table WHERE 1 = 1 <doubleQuotes46>;<newline46mondego>ArrayList paramList = new ArrayList();<newline46mondego><newline46mondego>if ( foo != 0 ) {<newline46mondego>    sql += <doubleQuotes46> AND foo=?<doubleQuotes46>;<newline46mondego>    paramList.add(foo);<newline46mondego>}<newline46mondego><newline46mondego>if ( !bar ) {<newline46mondego>    sql += <doubleQuotes46> AND bar=?<doubleQuotes46>;<newline46mondego>    paramList.add(bar);<newline46mondego>}<newline46mondego><newline46mondego>try{<newline46mondego><newline46mondego>    PreparedStatement getStmt = con.prepareStatement(sql);<newline46mondego><newline46mondego>    int index = 1;<newline46mondego><newline46mondego>    for (Object param : paramList) {<newline46mondego>        getStmt.setObject(index, param);<newline46mondego>        index++;<newline46mondego>    }<newline46mondego><newline46mondego>    // execute<newline46mondego><newline46mondego>} catch (SQLException e ){<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"6254splitHere46","12134141splitHere46","mButton.setOnClickListener(new OnClickListener() {<newline46mondego>    @Override<newline46mondego>    public void onClick(final View v) {<newline46mondego>    String uri = String.format(<doubleQuotes46>geo:%f,%f<doubleQuotes46>, latitude, longitude); // for example pass geo:75.333000,30.003030 to search for latitude = 75.333000 and longitude = 30.003030 as your default search query<newline46mondego>    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(uri));<newline46mondego>    startActivity(intent);<newline46mondego>        }<newline46mondego>    });   <newline46mondego>"
"6255splitHere46","12134203splitHere46","File->Export->Runnable jar"
"6256splitHere46","12134329splitHere46","reader.read()"
"6257splitHere46","12134329splitHere46","ReaderUtils.read(file)"
"6258splitHere46","12134329splitHere46","ReaderUtils"
"6259splitHere46","12134329splitHere46","Reader"
"6260splitHere46","12134329splitHere46","FileReader"
"6261splitHere46","12134329splitHere46","DatabaseReader"
"6262splitHere46","12134329splitHere46","HttpReader"
"6263splitHere46","12134329splitHere46","reader.read()"
"6264splitHere46","12134363splitHere46","// ... other standard includes ...<newline46mondego>#include <sys/ioctl.h><newline46mondego>#include <linux/fb.h><newline46mondego><newline46mondego>//...<newline46mondego><newline46mondego>struct fb_var_screeninfo fb_var;<newline46mondego>int fd = open(<doubleQuotes46>/dev/graphics/fb0<doubleQuotes46>, O_RDONLY);<newline46mondego>ioctl(fd, FBIOGET_VSCREENINFO, &fb_var);<newline46mondego>close(fd);<newline46mondego>// screen size will be in fb_var.xres and fb_var.yres<newline46mondego>"
"6265splitHere46","12134450splitHere46","keyPressed<newline46mondego>keyDown<newline46mondego>keyTyped<newline46mondego>"
"6266splitHere46","12134450splitHere46","try<newline46mondego>{<newline46mondego>    Thread.sleep(500);<newline46mondego>}<newline46mondego>catch(InterruptedException e)<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>Error!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6267splitHere46","12134470splitHere46","JLabel label = new JLabel(<doubleQuotes46>Your text here<doubleQuotes46>);<newline46mondego>"
"6268splitHere46","12134470splitHere46","setLayout(new GridLayout(rows,columns,x_spacing,y_spacing));<newline46mondego>"
"6269splitHere46","12134470splitHere46","x_spacing"
"6270splitHere46","12134470splitHere46","y_spacing"
"6271splitHere46","12134470splitHere46","setLayout(new GridLayout(2,2,10,10));<newline46mondego>add(new JLabel(<doubleQuotes46>Text 1<doubleQuotes46>));<newline46mondego>add(text1);<newline46mondego>add(new JLabel(<doubleQuotes46>text 2<doubleQuotes46>));<newline46mondego>add(text2);<newline46mondego>"
"6272splitHere46","12134600splitHere46","void iterate() {<newline46mondego>        for (int i = 0; i < nVectors; i++) {<newline46mondego>            calc(data, i * vectorSize, vectorSize);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"6273splitHere46","12134600splitHere46","calc"
"6274splitHere46","12134600splitHere46","iterate"
"6275splitHere46","12134600splitHere46","calc"
"6276splitHere46","12134600splitHere46","iterate"
"6277splitHere46","12134600splitHere46","FloatBuffer"
"6278splitHere46","12134600splitHere46","ByteBuffer"
"6279splitHere46","12134600splitHere46","byte[]"
"6280splitHere46","12134600splitHere46","private static final class ArrayByteBufferTest extends IterationTest {<newline46mondego>    private final FloatBuffer floatBuffer;<newline46mondego>    private final int vectorSize;<newline46mondego>    private final int nVectors;<newline46mondego><newline46mondego>    ArrayByteBufferTest(float[] data, int vectorSize, int nVectors) {<newline46mondego>      ByteBuffer bb = ByteBuffer.wrap(new byte[data.length * 4]);<newline46mondego>      for (int i = 0; i < data.length; i++) {<newline46mondego>        bb.putFloat(data[i]);<newline46mondego>      }<newline46mondego>      bb.rewind();<newline46mondego>      this.floatBuffer = bb.asFloatBuffer();<newline46mondego>      this.vectorSize = vectorSize;<newline46mondego>      this.nVectors = nVectors;<newline46mondego>    }<newline46mondego><newline46mondego>    float iterate() {<newline46mondego>      float sum = 0;<newline46mondego>      floatBuffer.rewind();<newline46mondego>      float[] vector = new float[vectorSize];<newline46mondego>      for (int i = 0; i < nVectors; i++) {<newline46mondego>        floatBuffer.get(vector);<newline46mondego>        sum += calc(vector, 0, vector.length);<newline46mondego>      }<newline46mondego>      return sum;<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"6281splitHere46","12134612splitHere46","import java.awt.Dimension;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Test extends JFrame{<newline46mondego>    JPanel panel = new JPanel();<newline46mondego>    JLabel lbl1 = new JLabel(<doubleQuotes46>First<doubleQuotes46>);<newline46mondego>    JLabel lbl2 = new JLabel(<doubleQuotes46>Second<doubleQuotes46>);<newline46mondego><newline46mondego>    public Test(){<newline46mondego>        super(<doubleQuotes46>BoxLayout Test<doubleQuotes46>);<newline46mondego>        panel.setLayout(new BoxLayout(panel, BoxLayout.PAGE_AXIS));<newline46mondego>        panel.setPreferredSize(new Dimension(300,200));<newline46mondego>        panel.add(lbl1);<newline46mondego>        panel.add(lbl2);<newline46mondego>        add(panel);<newline46mondego><newline46mondego>    }<newline46mondego>    public static void main(String [] args){<newline46mondego>        SwingUtilities.invokeLater(new Runnable(){<newline46mondego>            public void run() {<newline46mondego>                Test t = new Test();<newline46mondego>                t.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                t.pack();<newline46mondego>                t.setVisible(true);<newline46mondego>        }});<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6282splitHere46","12134649splitHere46","JsonSerializer"
"6283splitHere46","12134649splitHere46","public class Response {<newline46mondego>  private String status;<newline46mondego>  private String error;<newline46mondego><newline46mondego>  @JsonProperty(<doubleQuotes46>p<doubleQuotes46>)<newline46mondego>  @JsonSerialize(using = CustomSerializer.class)<newline46mondego>  private Object data;<newline46mondego><newline46mondego>  // ...<newline46mondego>}<newline46mondego><newline46mondego>public class CustomSerializer extends JsonSerializer<Object> {<newline46mondego>  public void serialize(Object value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {<newline46mondego>    jgen.writeStartObject();<newline46mondego>    jgen.writeObjectField(value.getClass().getName(), value);<newline46mondego>    jgen.writeEndObject();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6284splitHere46","12134649splitHere46","public static void main(String... args) throws Exception {<newline46mondego>  ObjectMapper mapper = new ObjectMapper();<newline46mondego>  Response r1 = new Response(<doubleQuotes46>Error<doubleQuotes46>, <doubleQuotes46>Some error<doubleQuotes46>, 20);<newline46mondego>  System.out.println(mapper.writeValueAsString(r1));<newline46mondego>  Response r2 = new Response(<doubleQuotes46>Error<doubleQuotes46>, <doubleQuotes46>Some error<doubleQuotes46>, <doubleQuotes46>some string<doubleQuotes46>);<newline46mondego>  System.out.println(mapper.writeValueAsString(r2));<newline46mondego>}<newline46mondego>"
"6285splitHere46","12134649splitHere46","{<doubleQuotes46>status<doubleQuotes46>:<doubleQuotes46>Error<doubleQuotes46>,<doubleQuotes46>error<doubleQuotes46>:<doubleQuotes46>Some error<doubleQuotes46>,<doubleQuotes46>p<doubleQuotes46>:{<doubleQuotes46>java.lang.Integer<doubleQuotes46>:20}}<newline46mondego>"
"6286splitHere46","12134649splitHere46","{<doubleQuotes46>status<doubleQuotes46>:<doubleQuotes46>Error<doubleQuotes46>,<doubleQuotes46>error<doubleQuotes46>:<doubleQuotes46>Some error<doubleQuotes46>,<doubleQuotes46>p<doubleQuotes46>:{<doubleQuotes46>java.lang.String<doubleQuotes46>:<doubleQuotes46>some string<doubleQuotes46>}}<newline46mondego>"
"6287splitHere46","12134649splitHere46","p"
"6288splitHere46","12134649splitHere46","p"
"6289splitHere46","12134649splitHere46","JsonSerializer<Response>"
"6290splitHere46","12134703splitHere46","sortListOfIpv4s"
"6291splitHere46","12134703splitHere46","s.substring(1)"
"6292splitHere46","12134703splitHere46","s"
"6293splitHere46","12134703splitHere46","sortListOfIpv4s"
"6294splitHere46","12134703splitHere46","Map"
"6295splitHere46","12134703splitHere46","prefix-free IP -> prefix"
"6296splitHere46","12134703splitHere46","Map<String, String> prefixMap = new HashMap<String, String>();<newline46mondego>for (String ip : unsortedIPv4s) {<newline46mondego>  prefixMap.put(ip.substring(1), ip.substring(0, 1));<newline46mondego>}<newline46mondego>"
"6297splitHere46","12134703splitHere46","Map"
"6298splitHere46","12134703splitHere46","List<String> sortedIPV4s = sortListOfIpv4s(unsortedIPv4s);<newline46mondego>for (String ip : sortedIPV4s) {<newline46mondego>  String prefix = prefixMap.get(ip);<newline46mondego>  String originalIp = prefix + ip;<newline46mondego>}<newline46mondego>"
"6299splitHere46","12134725splitHere46","getThreadLocalRequest()"
"6300splitHere46","12134725splitHere46","processCall(String)"
"6301splitHere46","12134725splitHere46","public class MyServiceImpl extends RemoteServiceServlet implements MyService {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String processCall( String payload ) {<newline46mondego>        HttpServletRequest req = getThreadLocalRequest();<newline46mondego>        HttpSession session = req.getSession();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6302splitHere46","12134825splitHere46","remove(0)"
"6303splitHere46","12134825splitHere46","Map<Integer, LinkedList<Integer>> map = new HashMap<Integer, LinkedList<Integer>>();<newline46mondego>"
"6304splitHere46","12134901splitHere46","HashMap<String, ArrayList<Item>> items = new HashMap<String, ArrayList<Item>>();<newline46mondego><newline46mondego>public synchronized void addToList(String mapKey, Item myItem) {<newline46mondego>    List<Item> itemsList = items.get(mapKey);<newline46mondego><newline46mondego>    // if list does not exist create it<newline46mondego>    if(itemsList == null) {<newline46mondego>         itemsList = new ArrayList<Item>();<newline46mondego>         itemsList.add(myItem);<newline46mondego>         items.put(mapKey, itemsList);<newline46mondego>    } else {<newline46mondego>        // add if item is not already in list<newline46mondego>        if(!itemsList.contains(myItem)) itemsList.add(myItem);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6305splitHere46","12134905splitHere46","showFriendship"
"6306splitHere46","12134905splitHere46","Relationship"
"6307splitHere46","12134913splitHere46","hstore"
"6308splitHere46","12134913splitHere46","hstore"
"6309splitHere46","12134913splitHere46","bytea"
"6310splitHere46","12134913splitHere46","xml"
"6311splitHere46","12134913splitHere46","xml"
"6312splitHere46","12134913splitHere46","JSON"
"6313splitHere46","12134913splitHere46","json"
"6314splitHere46","12134913splitHere46","hstore"
"6315splitHere46","12134913splitHere46","@Embedded"
"6316splitHere46","12134913splitHere46","CREATE TYPE person AS ( name text, surname text, miasto text );<newline46mondego><newline46mondego>CREATE TABLE some_table (id integer primary key, blah text, this_person person);<newline46mondego><newline46mondego>INSERT INTO some_table(id,blah,this_person)<newline46mondego>VALUES (1,'fred',ROW('a','b','c'));<newline46mondego><newline46mondego>SELECT (this_person).name FROM some_table;<newline46mondego>"
"6317splitHere46","12134913splitHere46","regress=# SELECT * FROM some_table ;<newline46mondego> id | blah | this_person <newline46mondego>----+------+-------------<newline46mondego>  1 | fred | (a,b,c)<newline46mondego>(1 row)<newline46mondego>"
"6318splitHere46","12134913splitHere46","regress=# SELECT t.id, t.blah, (t.this_person).* FROM some_table t;<newline46mondego> id | blah | name | surname | miasto <newline46mondego>----+------+------+---------+--------<newline46mondego>  1 | fred | a    | b       | c<newline46mondego>(1 row)<newline46mondego>"
"6319splitHere46","12134913splitHere46","regress=# SELECT (t.this_person).* FROM some_table t;<newline46mondego> name | surname | miasto <newline46mondego>------+---------+--------<newline46mondego> a    | b       | c<newline46mondego>(1 row)<newline46mondego>"
"6320splitHere46","12134913splitHere46","xpath"
"6321splitHere46","12134913splitHere46","IS DOCUMENT"
"6322splitHere46","12134913splitHere46","xpath"
"6323splitHere46","12134913splitHere46","CREATE TABLE some_table (id integer primary key, blah text, this_person xml);<newline46mondego><newline46mondego>INSERT INTO some_table(id,blah,this_person)<newline46mondego>VALUES (1,'fred', '<person><name>a</name><surname>b</surname><miasto>c</miasto></person>');<newline46mondego><newline46mondego>SELECT (xpath('/person/name/text()', this_person))[1] from some_table ;<newline46mondego>"
"6324splitHere46","12134913splitHere46","-- in Pg 9.2 and above; for 9.1 use the json91 backport<newline46mondego>CREATE EXTENSION json;<newline46mondego><newline46mondego>CREATE TABLE some_table (id integer primary key, blah text, this_person json);<newline46mondego><newline46mondego>INSERT INTO some_table(id,blah,this_person)<newline46mondego>VALUES (1,'fred', '{<doubleQuotes46>name<doubleQuotes46>: <doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>surname<doubleQuotes46>:<doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>miasto<doubleQuotes46>:<doubleQuotes46>c<doubleQuotes46>}');<newline46mondego><newline46mondego>-- No easy way to subscript out json values in 9.1, but it's very convenient<newline46mondego>-- with any app that has json support.<newline46mondego>"
"6325splitHere46","12134913splitHere46","hstore"
"6326splitHere46","12134913splitHere46","org/postgresql/util/HStoreConverter.java"
"6327splitHere46","12134913splitHere46","hstore"
"6328splitHere46","12134913splitHere46","hstore"
"6329splitHere46","12134913splitHere46","CHECK"
"6330splitHere46","12134913splitHere46","hstore"
"6331splitHere46","12134913splitHere46","-- In Pg 9.1 and above; for older versions hstore is available but is<newline46mondego>-- added differently. See the documentation.<newline46mondego>CREATE EXTENSION hstore;<newline46mondego><newline46mondego>CREATE TABLE some_table (id integer primary key, blah text, this_person hstore);<newline46mondego><newline46mondego>INSERT INTO some_table(id,blah,this_person)<newline46mondego>VALUES (1,'fred', hstore(ARRAY['name','surname','miatso'], ARRAY['a','b','c']));<newline46mondego><newline46mondego>SELECT this_person -> 'name' from some_table ;<newline46mondego>"
"6332splitHere46","12134913splitHere46","bytea"
"6333splitHere46","12135035splitHere46","yourButton.addActionListener(new ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        System.exit(0);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"6334splitHere46","12135068splitHere46","// Regex to match a <doubleQuotes46>state zip<doubleQuotes46> sequence, and capture each part in its own group<newline46mondego>String regex = <doubleQuotes46>(W[AY]|C[AO])\\s+(\\d{5})<doubleQuotes46>;<newline46mondego><newline46mondego>// Some sample input<newline46mondego>String input = <doubleQuotes46>blah blah WA 98121 blah blah CA 56679 blah blah<doubleQuotes46>;<newline46mondego><newline46mondego>Matcher matcher = Pattern.compile(regex).getMatcher(input);<newline46mondego>while (matcher.find()) { // move to next match, if one exists<newline46mondego>    String state = matcher.group(1);<newline46mondego>    String zip = matcher.group(2);<newline46mondego>    // Work with state and zip values<newline46mondego>    System.out.println(<doubleQuotes46>State = <doubleQuotes46> + state + <doubleQuotes46>, zip = <doubleQuotes46> + zip);<newline46mondego>}<newline46mondego>"
"6335splitHere46","12135068splitHere46","State = WA, zip = 98121<newline46mondego>State = CA, zip = 56679<newline46mondego>"
"6336splitHere46","12135068splitHere46","1"
"6337splitHere46","12135068splitHere46","0"
"6338splitHere46","12135329splitHere46","import java.awt.*;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego><newline46mondego>//retrieve the default sound from windows system sounds<newline46mondego>//for another sound replace <doubleQuotes46>default<doubleQuotes46> accordingly<newline46mondego>    final Runnable SOUND = (Runnable)Toolkit.getDefaultToolkit().getDesktopProperty<newline46mondego>    (<doubleQuotes46>win.sound.default<doubleQuotes46>);<newline46mondego>"
"6339splitHere46","12135329splitHere46","if(SOUND != null)SOUND.run();<newline46mondego>"
"6340splitHere46","12135329splitHere46","JDK"
"6341splitHere46","12135390splitHere46","int counter = 0;<newline46mondego>String input = <doubleQuotes46>Pool<doubleQuotes46>;<newline46mondego>char replacement = 'l';<newline46mondego>char[] inputArray = input.toCharArray();<newline46mondego>for(char ch : inputArray) {<newline46mondego>    if(ch == 'o') {<newline46mondego>        inputArray[counter] = replacement;<newline46mondego>    }<newline46mondego>    counter += 1;<newline46mondego>}<newline46mondego>String output = new String(inputArray);<newline46mondego>System.out.println(output);<newline46mondego>"
"6342splitHere46","12135419splitHere46","GApplet"
"6343splitHere46","12135419splitHere46","GApplet"
"6344splitHere46","12135451splitHere46","movesLeft"
"6345splitHere46","12135451splitHere46","makeTextPane"
"6346splitHere46","12135451splitHere46","makeTextPane"
"6347splitHere46","12135451splitHere46","protected class TextPane extends JPanel {<newline46mondego><newline46mondego>    private JLabel name;<newline46mondego>    private JLabel icon;<newline46mondego>    private JLabel lblClass;<newline46mondego>    private JLabel pClass;<newline46mondego>    private JLabel lblRole;<newline46mondego>    private JLabel role;<newline46mondego>    private JLabel lblStr;<newline46mondego>    private JLabel str;<newline46mondego>    private JLabel lblDex;<newline46mondego>    private JLabel dex;<newline46mondego>    private JLabel lblEnd;<newline46mondego>    private JLabel end;<newline46mondego>    private JLabel wiz;<newline46mondego>    private JLabel lblHp;<newline46mondego>    private JLabel health;<newline46mondego>    private JLabel lblMoves;<newline46mondego>    private JLabel movesLeft;<newline46mondego>    private JLabel lblSkill1;<newline46mondego>    private JButton skill1;<newline46mondego>    private final JLabel lblSkill2;<newline46mondego>    private final JButton skill2;<newline46mondego>    private final JLabel lblSkill3;<newline46mondego>    private final JButton skill3;<newline46mondego>    private final JLabel lblSkill4;<newline46mondego>    private final JButton skill4;<newline46mondego><newline46mondego>    public TextPane() {<newline46mondego><newline46mondego>        //add(filler);<newline46mondego>        setLayout(new GridBagLayout());<newline46mondego>        GridBagConstraints c = new GridBagConstraints();<newline46mondego><newline46mondego>        JLabel dash;<newline46mondego><newline46mondego>        name = new JLabel(MiniRPG.MiniRPG.players.get(setupPlayerIndex).getName());<newline46mondego>        c.insets = new Insets(5, 5, 5, 5);<newline46mondego>        c.gridx = 0;<newline46mondego>        c.gridy = 1;<newline46mondego>        c.gridwidth = 2;<newline46mondego>        add(name, c);<newline46mondego><newline46mondego>        icon = new JLabel(MiniRPG.players.get(setupPlayerIndex).getIcon());<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 2;<newline46mondego>        add(icon, c);<newline46mondego><newline46mondego>        lblClass = new JLabel(<doubleQuotes46>Class:<doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 3;<newline46mondego>        c.gridwidth = 1;<newline46mondego>        add(lblClass, c);<newline46mondego><newline46mondego>        pClass = new JLabel(MiniRPG.players.get(setupPlayerIndex).getclass());<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 3;<newline46mondego>        add(pClass, c);<newline46mondego><newline46mondego>        lblRole = new JLabel(<doubleQuotes46>Role:<doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 4;<newline46mondego>        add(lblRole, c);<newline46mondego><newline46mondego>        role = new JLabel(MiniRPG.players.get(setupPlayerIndex).getRole());<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 4;<newline46mondego>        add(role, c);<newline46mondego><newline46mondego>        dash = new JLabel(<doubleQuotes46>--------------------STATS--------------------<doubleQuotes46>);<newline46mondego>        c.gridwidth = 4;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 5;<newline46mondego>        add(dash, c);<newline46mondego><newline46mondego>        lblStr = new JLabel(<doubleQuotes46>Strengh:<doubleQuotes46>);<newline46mondego>        c.gridwidth = 2;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 6;<newline46mondego>        add(lblStr, c);<newline46mondego><newline46mondego>        str = new JLabel(Integer.toString(<newline46mondego>                MiniRPG.MiniRPG.players.get(setupPlayerIndex).getStr()));<newline46mondego>        //c.insets = new Insets(5, 5, 5, 5);<newline46mondego>        c.gridwidth = 1;<newline46mondego>        c.gridx = 3;<newline46mondego>        c.gridy = 6;<newline46mondego>        add(str, c);<newline46mondego><newline46mondego>        lblDex = new JLabel(<doubleQuotes46>Dexterity:<doubleQuotes46>);<newline46mondego>        c.gridwidth = 2;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 7;<newline46mondego>        add(lblDex, c);<newline46mondego><newline46mondego>        dex = new JLabel(Integer.toString(<newline46mondego>                MiniRPG.MiniRPG.players.get(setupPlayerIndex).getDex()));<newline46mondego>        c.gridwidth = 1;<newline46mondego>        c.gridx = 3;<newline46mondego>        c.gridy = 7;<newline46mondego>        add(dex, c);<newline46mondego><newline46mondego>        lblEnd = new JLabel(<doubleQuotes46>Endurance:<doubleQuotes46>);<newline46mondego>        c.gridwidth = 2;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 8;<newline46mondego>        add(lblEnd, c);<newline46mondego><newline46mondego>        end = new JLabel(Integer.toString(<newline46mondego>                MiniRPG.MiniRPG.players.get(setupPlayerIndex).getEnd()));<newline46mondego>        c.gridwidth = 1;<newline46mondego>        c.gridx = 3;<newline46mondego>        c.gridy = 8;<newline46mondego>        add(end, c);<newline46mondego><newline46mondego>        lblDex = new JLabel(<doubleQuotes46>Wisdom:<doubleQuotes46>);<newline46mondego>        c.gridwidth = 2;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 9;<newline46mondego>        add(lblDex, c);<newline46mondego><newline46mondego>        wiz = new JLabel(Integer.toString(<newline46mondego>                MiniRPG.MiniRPG.players.get(setupPlayerIndex).getWis()));<newline46mondego>        c.gridwidth = 1;<newline46mondego>        c.gridx = 3;<newline46mondego>        c.gridy = 9;<newline46mondego>        add(wiz, c);<newline46mondego><newline46mondego>        lblHp = new JLabel(<doubleQuotes46>HP: <doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 10;<newline46mondego>        add(lblHp, c);<newline46mondego><newline46mondego><newline46mondego>        health = new JLabel(Integer.toString(<newline46mondego>                MiniRPG.MiniRPG.players.get(setupPlayerIndex).getHp()));<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 10;<newline46mondego>        add(health, c);<newline46mondego><newline46mondego>        lblMoves = new JLabel(<doubleQuotes46>Moves Left: <doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 11;<newline46mondego>        add(lblMoves, c);<newline46mondego><newline46mondego>        movesLeft = new JLabel(Integer.toString(<newline46mondego>                MiniRPG.players.get(setupPlayerIndex).getMoves()));<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 11;<newline46mondego>        add(movesLeft, c);<newline46mondego><newline46mondego>        dash = new JLabel(<doubleQuotes46>--------------------SKILLS--------------------<doubleQuotes46>);<newline46mondego>        c.gridwidth = 4;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 12;<newline46mondego>        add(dash, c);<newline46mondego><newline46mondego>        lblSkill1 = new JLabel(<doubleQuotes46>Skill 1:<doubleQuotes46>);<newline46mondego>        c.gridwidth = 1;<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 13;<newline46mondego>        add(lblSkill1, c);<newline46mondego><newline46mondego>        skill1 = new JButton(MiniRPG.players.get(setupPlayerIndex).getSkill1());<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 13;<newline46mondego>        add(skill1, c);<newline46mondego><newline46mondego>        lblSkill2 = new JLabel(<doubleQuotes46>Skill 2:<doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 14;<newline46mondego>        add(lblSkill2, c);<newline46mondego><newline46mondego>        skill2 = new JButton(MiniRPG.players.get(setupPlayerIndex).getSkill2());<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 14;<newline46mondego>        add(skill2, c);<newline46mondego>        skill2.setEnabled(false);<newline46mondego><newline46mondego>        lblSkill3 = new JLabel(<doubleQuotes46>Skill 3:<doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 15;<newline46mondego>        add(lblSkill3, c);<newline46mondego><newline46mondego>        skill3 = new JButton(MiniRPG.players.get(setupPlayerIndex).getSkill3());<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 15;<newline46mondego>        add(skill3, c);<newline46mondego>        skill3.setEnabled(false);<newline46mondego><newline46mondego>        lblSkill4 = new JLabel(<doubleQuotes46>Skill 4:<doubleQuotes46>);<newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 16;<newline46mondego>        add(lblSkill4, c);<newline46mondego><newline46mondego>        skill4 = new JButton(MiniRPG.players.get(setupPlayerIndex).getSkill4());<newline46mondego>        c.gridx = 2;<newline46mondego>        c.gridy = 16;<newline46mondego>        add(skill4, c);<newline46mondego>        skill4.setEnabled(false);<newline46mondego><newline46mondego>        skill1.addActionListener(e);<newline46mondego>        skill2.addActionListener(e);<newline46mondego>        skill3.addActionListener(e);<newline46mondego>        skill4.addActionListener(e);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void setMovesLeft(int value) {<newline46mondego>        movesLeft.setText(Integer.toString(value));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6348splitHere46","12135451splitHere46","final JTabbedPane characterInfoPane = new JTabbedPane();<newline46mondego><newline46mondego>TextPane[] textPanes = new TextPane[4];<newline46mondego>while (setupPlayerIndex < 4) {<newline46mondego>    textPanes[setupPlayerIndex] = new TextPane();<newline46mondego>    characterInfoPane.addTab(minirpg.MiniRPG.players.get(setupPlayerIndex).getName(), null, textPanes[setupPlayerIndex],<newline46mondego>            <doubleQuotes46><doubleQuotes46>);<newline46mondego>    setupPlayerIndex++;<newline46mondego>}<newline46mondego>"
"6349splitHere46","12135451splitHere46","TextPane"
"6350splitHere46","12135451splitHere46","textPanes[x].setMovesLeft(MiniRPG.players.get(x).getMoves());<newline46mondego>"
"6351splitHere46","12135521splitHere46","scpButtons.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);<newline46mondego>"
"6352splitHere46","12135521splitHere46","applyComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);"
"6353splitHere46","12135521splitHere46","setSize(getWidth() + 1, getHeight() + 1);"
"6354splitHere46","12135521splitHere46","SwingUtilities"
"6355splitHere46","12135521splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.ComponentOrientation;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.GridBagConstraints;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.Insets;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class MyFrame extends JFrame {<newline46mondego>private JButton[] arrayButton = new JButton[9];<newline46mondego>    private JButton btnLeft = new JButton(<doubleQuotes46><<doubleQuotes46>);<newline46mondego>    private JButton btnRight = new JButton(<doubleQuotes46>><doubleQuotes46>);<newline46mondego>    private JScrollPane scpButtons = new JScrollPane();<newline46mondego><newline46mondego>    public MyFrame() {<newline46mondego>        for (int i = 0; i < arrayButton.length; i++)<newline46mondego>            arrayButton[i] = new JButton(<doubleQuotes46>btn<doubleQuotes46>);<newline46mondego><newline46mondego>        JMenu mnuSettings = new JMenu(<doubleQuotes46>MENU<doubleQuotes46>);<newline46mondego>        JMenuBar menubar = new JMenuBar();<newline46mondego>        menubar.add(mnuSettings);<newline46mondego>        setJMenuBar(menubar);<newline46mondego><newline46mondego>        JPanel pnlButton = initPnlButton();<newline46mondego>        scpButtons.setViewportView(pnlButton);<newline46mondego>        setLayout(new BorderLayout());<newline46mondego>        setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>        add(scpButtons, BorderLayout.CENTER);<newline46mondego><newline46mondego>        pack();<newline46mondego>        // [1]<newline46mondego>        setExtendedState(JFrame.MAXIMIZED_BOTH);<newline46mondego>        //setSize(getWidth() + 1, getHeight() + 1);<newline46mondego>        // [2]<newline46mondego>        setVisible(true);<newline46mondego>        // SwingUtilities.invokeLater(new Runnable() {<newline46mondego>        // public void run() {<newline46mondego>        applyComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);<newline46mondego>//here<newline46mondego>        scpButtons.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);<newline46mondego>        // }<newline46mondego>        // });<newline46mondego>    }<newline46mondego><newline46mondego>    private JPanel initPnlButton() {<newline46mondego>        JPanel pnlButton = new JPanel(new GridBagLayout());<newline46mondego>        GridBagConstraints gbc = new GridBagConstraints(0, 0, 1, 1, 1, 1, 10,<newline46mondego>                1, new Insets(0, 0, 0, 0), 0, 0);<newline46mondego><newline46mondego>        int ind = 0;<newline46mondego>        int row = 3;<newline46mondego>        int column = 4;<newline46mondego>        for (int i = 0; i < row; i++) {<newline46mondego>            for (int j = 1; j < column; j++) {<newline46mondego>                gbc.gridx = j;<newline46mondego>                gbc.gridy = i;<newline46mondego>                pnlButton.add(arrayButton[ind++], gbc);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        gbc.weightx = 0;<newline46mondego>        gbc.gridheight = 3;<newline46mondego>        gbc.gridx = 0;<newline46mondego>        gbc.gridy = 0;<newline46mondego>        pnlButton.add(btnRight, gbc);<newline46mondego>        gbc.gridx = 4;<newline46mondego>        gbc.gridy = 0;<newline46mondego>        pnlButton.add(btnLeft, gbc);<newline46mondego>        pnlButton.setPreferredSize(new Dimension(1000, 700));<newline46mondego>        return pnlButton;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new MyFrame();<newline46mondego>    }<newline46mondego>"
"6356splitHere46","12135552splitHere46","d"
"6357splitHere46","12135552splitHere46","Integer.MAX_VALUE"
"6358splitHere46","12135791splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    int count = 0;<newline46mondego>    accnums = new Integer[] {1,2,null,null,null};<newline46mondego>    for (int index = 0; index < accnums.length; index++) <newline46mondego>    {<newline46mondego>        if(accnums[index] != null)<newline46mondego>        {<newline46mondego>            count++;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>You have used <doubleQuotes46> + count + <doubleQuotes46> slots);<newline46mondego><newline46mondego>}<newline46mondego>"
"6359splitHere46","12136077splitHere46","available()"
"6360splitHere46","12136077splitHere46","while"
"6361splitHere46","12136077splitHere46","BufferedReader"
"6362splitHere46","12136077splitHere46","public static String getStringFromInputStream(InputStream is)<newline46mondego>        throws IOException {<newline46mondego>   StringBuffer sb=new StringBuffer();<newline46mondego>   BufferedReader reader=null;<newline46mondego>   String line=null;<newline46mondego>   try{<newline46mondego>      reader=new BufferedReader(new InputStreamReader(is));<newline46mondego>      while( (line=reader.readLine()) !=null){<newline46mondego>           sb.append(line);<newline46mondego>      }<newline46mondego>   }catch(Exception ex){<newline46mondego>       //<newline46mondego>   }finally{<newline46mondego>      if(reader!=null){<newline46mondego>          try{<newline46mondego>              reader.close();<newline46mondego>          }catch(Exception ex) { }<newline46mondego>      }<newline46mondego>   }<newline46mondego>  return sb.toString();<newline46mondego>}<newline46mondego>"
"6363splitHere46","12136077splitHere46","public static byte[] getBytesFromInputStream(InputStream is)<newline46mondego><newline46mondego>    .....<newline46mondego>    ByteArrayOutputStream bos=new ByteArrayOutputStream();<newline46mondego>    BufferedInputStream bin=new BufferedInputStream(is);<newline46mondego><newline46mondego>    int numRead=0;<newline46mondego>    byte []bytes=new byte[1024];<newline46mondego>    while( (numRead=bin.read(bytes))>0)<newline46mondego>    {<newline46mondego>        bos.write(bytes, 0, numRead);<newline46mondego>    }<newline46mondego>    bos.flush();<newline46mondego>    byte []totalBytes=bos.toByteArray();<newline46mondego>    .....<newline46mondego>    return totalBytes;<newline46mondego>"
"6364splitHere46","12136205splitHere46","java.util.concurrent"
"6365splitHere46","12136205splitHere46","synchronized"
"6366splitHere46","12136205splitHere46","Semaphore"
"6367splitHere46","12136205splitHere46","public class Shared {<newline46mondego>  public final Semaphore mutex = new Semaphore(1);<newline46mondego>}<newline46mondego>"
"6368splitHere46","12136205splitHere46","// synchronizing with other clients...<newline46mondego>// now we're at the critical section.  Block until we have the lock<newline46mondego>Shared.mutex.acquireUninterruptibly();<newline46mondego>// update state<newline46mondego>Shared.mutex.release();<newline46mondego>// critical section over.  Schedule an update on the GUI thread.<newline46mondego>"
"6369splitHere46","12136205splitHere46","// if the critical section is free, check for updated state.  Else, just wait<newline46mondego>if (Shared.mutex.tryAcquire())  {<newline46mondego>   try {<newline46mondego>     // read state and update GUI<newline46mondego>   } finally {<newline46mondego>     Shared.mutex.release();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6370splitHere46","12136312splitHere46","InputMap"
"6371splitHere46","12136312splitHere46","UIManager"
"6372splitHere46","12136312splitHere46","im.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0), NIL);<newline46mondego>"
"6373splitHere46","12136312splitHere46","ActionListener"
"6374splitHere46","12136312splitHere46","button.getActionMap().put(NIL, nil);<newline46mondego>"
"6375splitHere46","12136312splitHere46","doNothing"
"6376splitHere46","12136312splitHere46","/**<newline46mondego> * @see http://stackoverflow.com/q/12133795/230513<newline46mondego> */<newline46mondego>public class NilBindingTest extends JPanel {<newline46mondego><newline46mondego>    private static final String NIL = <doubleQuotes46>none<doubleQuotes46>;<newline46mondego>    private Action nil = new AbstractAction(NIL) {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + e.getActionCommand() + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego>    };<newline46mondego>    private JButton button = new JButton(nil);<newline46mondego>    //private InputMap im = button.getInputMap();<newline46mondego>    private InputMap im = (InputMap) UIManager.get(<doubleQuotes46>Button.focusInputMap<doubleQuotes46>);<newline46mondego><newline46mondego>    public NilBindingTest() {<newline46mondego>        this.add(new JButton(<doubleQuotes46>foo<doubleQuotes46>));<newline46mondego>        System.out.println(Arrays.toString(im.keys()));<newline46mondego>        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0), NIL);<newline46mondego>        //button.getActionMap().put(NIL, nil);<newline46mondego>        this.add(button);<newline46mondego>    }<newline46mondego><newline46mondego>    private void display() {<newline46mondego>        JFrame f = new JFrame(<doubleQuotes46>NilBindingTest<doubleQuotes46>);<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(this);<newline46mondego>        f.pack();<newline46mondego>        f.setLocationRelativeTo(null);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new NilBindingTest().display();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6377splitHere46","12136359splitHere46","convertedString = StringEscapeUtils.unescapeHtml(convertedString);<newline46mondego>convertedString = convertedString.replaceAll(<doubleQuotes46>& <doubleQuotes46>, <doubleQuotes46>&amp; <doubleQuotes46>); // Also note the added space<newline46mondego>"
"6378splitHere46","12136359splitHere46","StringEscapeUtils.unescapeHtml()"
"6379splitHere46","12136359splitHere46","&amp;"
"6380splitHere46","12136359splitHere46","&"
"6381splitHere46","12136391splitHere46","PhraseOMatic.main(apples.java:2)"
"6382splitHere46","12136391splitHere46","PhraseOMatic"
"6383splitHere46","12136391splitHere46","PhraseOMatic.java"
"6384splitHere46","12136391splitHere46","top-level"
"6385splitHere46","12136437splitHere46","accnums[1] = new Integer (1);<newline46mondego>"
"6386splitHere46","12136481splitHere46","<context-param><newline46mondego>    <param-name>contextConfigLocation</param-name><newline46mondego>    <param-value><newline46mondego>        WEB-INF/applicationContext.xml,<newline46mondego>        classpath:hibernate-context.xml<newline46mondego>    </param-value><newline46mondego>  </context-param><newline46mondego>"
"6387splitHere46","12136485splitHere46","JPanel pnlDetails = new JPanel(new GridBagLayout());<newline46mondego>JTextField userNameField = new JTextField(10);<newline46mondego>JPasswordField passwordField = new JPasswordField(10);<newline46mondego><newline46mondego>GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>gbc.gridx = 0;<newline46mondego>gbc.gridy = 0;<newline46mondego>gbc.anchor = GridBagConstraints.WEST;<newline46mondego>gbc.insets = new Insets(2, 2, 2, 2);<newline46mondego><newline46mondego>pnlDetails.add(new JLabel(<doubleQuotes46>User name:<doubleQuotes46>), gbc);<newline46mondego>gbc.gridy++;<newline46mondego>pnlDetails.add(new JLabel(<doubleQuotes46>Password:<doubleQuotes46>), gbc);<newline46mondego><newline46mondego>gbc.gridx = 1;<newline46mondego>gbc.gridy = 0;<newline46mondego>gbc.anchor = GridBagConstraints.EAST;<newline46mondego>pnlDetails.add(userNameField, gbc);<newline46mondego>gbc.gridy++;<newline46mondego>pnlDetails.add(passwordField, gbc);<newline46mondego><newline46mondego>// The result from the dialog, will be OK or CANCEL<newline46mondego>int operation;<newline46mondego>// Flag used to determine if the credentials are okay or not<newline46mondego>boolean badCredentials = true;<newline46mondego>do {<newline46mondego><newline46mondego>    operation = JOptionPane.showConfirmDialog(null, pnlDetails, <doubleQuotes46>Login<doubleQuotes46>, JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);<newline46mondego><newline46mondego>    String userName = userNameField.getText();<newline46mondego>    char[] password = passwordField.getPassword();<newline46mondego><newline46mondego>    // You would valid you credintals here :P<newline46mondego>    if (userName.equals(<doubleQuotes46>super<doubleQuotes46>) && new String(password).equals(<doubleQuotes46>happy<doubleQuotes46>)) {<newline46mondego><newline46mondego>        badCredentials = false;<newline46mondego><newline46mondego>    } else if (operation != JOptionPane.CANCEL_OPTION) {<newline46mondego><newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>Invalid Credentials<doubleQuotes46>, <doubleQuotes46>Error<doubleQuotes46>, JOptionPane.ERROR_MESSAGE);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>} while (operation != JOptionPane.CANCEL_OPTION && badCredentials);<newline46mondego><newline46mondego>if (!badCredentials && operation != JOptionPane.CANCEL_OPTION) {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Continue program<doubleQuotes46>);<newline46mondego><newline46mondego>} else {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Exit program<doubleQuotes46>);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>System.exit(0);<newline46mondego>"
"6388splitHere46","12136513splitHere46","void"
"6389splitHere46","12136513splitHere46","when(mockedInstance.someMethod()).thenThrow(new IllegalArgumentException());<newline46mondego>"
"6390splitHere46","12136513splitHere46","doThrow(new IllegalArgumentException()).when(mockedInstance).someMethod();<newline46mondego>"
"6391splitHere46","12136513splitHere46","Effect<T>"
"6392splitHere46","12136513splitHere46","Effect<T>"
"6393splitHere46","12136513splitHere46","doSomething()"
"6394splitHere46","12136513splitHere46","doSomething().onEffectFor(proxyInstanceOfA).methodA();<newline46mondego>"
"6395splitHere46","12136513splitHere46","Effect<T>"
"6396splitHere46","12136513splitHere46","Effect<T>"
"6397splitHere46","12136513splitHere46","VoidEffect<MyType> effect = effectForVoid(proxyOfMyClass);<newline46mondego>effect.on().myVoidMethod();<newline46mondego>"
"6398splitHere46","12136513splitHere46","VoidEffect<T>"
"6399splitHere46","12136513splitHere46","Effect<Void>"
"6400splitHere46","12136513splitHere46","on()"
"6401splitHere46","12136513splitHere46","IllegalStateException"
"6402splitHere46","12136513splitHere46","on()"
"6403splitHere46","12136513splitHere46","effect"
"6404splitHere46","12136575splitHere46","@Singleton<newline46mondego>@Startup<newline46mondego>public class ClientResetBean {<newline46mondego><newline46mondego>    // Injected database connection:<newline46mondego>    @PersistenceContext private EntityManager em;<newline46mondego><newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    private void resetClientState() {<newline46mondego>        Query query = em.createQuery(<doubleQuotes46>UPDATE Client c SET c.online = false<doubleQuotes46>);<newline46mondego>        query.executeUpdate();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6405splitHere46","12136623splitHere46","BufferedImage input = ImageIO.read(inputFile);<newline46mondego>"
"6406splitHere46","12136623splitHere46","ImageIO.read"
"6407splitHere46","12136623splitHere46","ImageIO.write(input,<doubleQuotes46>PNG<doubleQuotes46>,  cos);<newline46mondego>"
"6408splitHere46","12136623splitHere46","ImageIO.read"
"6409splitHere46","12136854splitHere46","Elements myTdsstudent = tables.select(<doubleQuotes46>tr<doubleQuotes46>);<newline46mondego>"
"6410splitHere46","12136854splitHere46","myTdsstudent"
"6411splitHere46","12136854splitHere46","for (Element myTdsstudentIterator: myTdsstudent) {<newline46mondego>    System.out.println(myTdsstudentIterator.select(<doubleQuotes46>td:eq(0)<doubleQuotes46>) + <doubleQuotes46> = <doubleQuotes46> + myTdsstudentIterator.select(<doubleQuotes46>td:eq(1)<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"6412splitHere46","12136892splitHere46","while"
"6413splitHere46","12136892splitHere46","public static void main( String[] args ) {<newline46mondego>    String input = <doubleQuotes46>New England 12 Philidelphia 24 (Final)<doubleQuotes46>;<newline46mondego>    String regex = <doubleQuotes46>([a-zA-Z ]+)\\s+(\\d+)\\s+([a-zA-Z ]+)\\s+(\\d+)\\s+\\((\\w+)\\)<doubleQuotes46>;<newline46mondego>    Matcher matcher = Pattern.compile( regex ).matcher( input);<newline46mondego>    while (matcher.find( )) {<newline46mondego>        String team1 = matcher.group(1);<newline46mondego>        String score1 = matcher.group(2);<newline46mondego>        String team2 = matcher.group(3);<newline46mondego>        String score2 = matcher.group(4);<newline46mondego>        String result = matcher.group(5);<newline46mondego>        System.out.println( team1 + <doubleQuotes46> scored <doubleQuotes46> + score1 + <doubleQuotes46>, <doubleQuotes46> + team2 + <doubleQuotes46> scored <doubleQuotes46> + score2 + <doubleQuotes46>, which was <doubleQuotes46> + result);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6414splitHere46","12136892splitHere46","New England scored 12, Philidelphia scored 24, which was Final<newline46mondego>"
"6415splitHere46","12136905splitHere46","mvn package<newline46mondego>"
"6416splitHere46","12136905splitHere46","mvn verify<newline46mondego>"
"6417splitHere46","12136962splitHere46","DBObject one = cur.next();  <newline46mondego><newline46mondego>if (one.get(<doubleQuotes46>photos<doubleQuotes46>) == null)<newline46mondego>  one.put(<doubleQuotes46>photos<doubleQuotes46>, new Object[0]);<newline46mondego><newline46mondego>return JSON.serialize(one);<newline46mondego>"
"6418splitHere46","12136972splitHere46","clear()"
"6419splitHere46","12136972splitHere46","tab"
"6420splitHere46","12136972splitHere46","transient"
"6421splitHere46","12136972splitHere46","HashMap"
"6422splitHere46","12136972splitHere46","readObject"
"6423splitHere46","12136972splitHere46","writeObject"
"6424splitHere46","12136972splitHere46","transient"
"6425splitHere46","12137247splitHere46","BasicDBObject imageDoc = new BasicDBObject();<newline46mondego>imageDoc(<doubleQuotes46>name<doubleQuotes46>, img.getName());<newline46mondego>imageDoc(<doubleQuotes46>imgMetaList<doubleQuotes46>, img.getImgMetaList());<newline46mondego>collection.insert(imageDoc);<newline46mondego>"
"6426splitHere46","12137250splitHere46","SELECT present_status, count(*) as `present_days` <newline46mondego>FROM  tbl_intime_status <newline46mondego>WHERE employee_status = 'Out' and <newline46mondego>      present_status IN ('Full Day','Half Day')<newline46mondego>      date LIKE '%/<doubleQuotes46>+month2+<doubleQuotes46>/<doubleQuotes46>+year1+<doubleQuotes46>' and <newline46mondego>      employee_id=<doubleQuotes46>+ EmpId+<newline46mondego>GROUP BY present_status<newline46mondego>"
"6427splitHere46","12137250splitHere46","SELECT count(*) as `present_days` <newline46mondego>FROM  tbl_intime_status <newline46mondego>WHERE employee_status = 'Out' and <newline46mondego>      present_status IN ('Full Day','Half Day')<newline46mondego>      date LIKE '%/<doubleQuotes46>+month2+<doubleQuotes46>/<doubleQuotes46>+year1+<doubleQuotes46>' and <newline46mondego>      employee_id=<doubleQuotes46>+ EmpId+<newline46mondego>"
"6428splitHere46","12137259splitHere46","private HashMap<String, Double> spinnerValues;<newline46mondego>"
"6429splitHere46","12137259splitHere46","private void createSpinnerValues(){<newline46mondego>    spinnerValues=new HashMap<String, Double>();<newline46mondego>    spinnerValues.put(<doubleQuotes46>Sedentary<doubleQuotes46>, 1.2);<newline46mondego>    spinnerValues.put(<doubleQuotes46>Lightly Active<doubleQuotes46>, 1.375);<newline46mondego>    spinnerValues.put(<doubleQuotes46>Moderately Active<doubleQuotes46>, 1.55);<newline46mondego>    spinnerValues.put(<doubleQuotes46>Heavily Active<doubleQuotes46>, 1.725);<newline46mondego>}<newline46mondego>"
"6430splitHere46","12137259splitHere46","private void calculateMen(){<newline46mondego><newline46mondego>    //Your Code Goes here...<newline46mondego><newline46mondego>     String age, in, ft, weight;<newline46mondego>     Double answer;<newline46mondego>     age =  etage.getText().toString();<newline46mondego>     in =  etin.getText().toString();    <newline46mondego>     ft = etft.getText().toString();<newline46mondego>     weight = etweight.getText().toString();<newline46mondego><newline46mondego>     answer=getAnswer(age,in,ft,weight,getSelectedItemValueFromSpinnerText(spinnerText));<newline46mondego><newline46mondego>     BigDecimal bd = BigDecimal.valueOf(answer);<newline46mondego>     bd = bd.setScale(2, BigDecimal.ROUND_FLOOR);<newline46mondego><newline46mondego>     etanswer.setText(bd.toString()); <newline46mondego><newline46mondego>     // call for custom toast<newline46mondego>     viewBMRSavedToast();<newline46mondego>    }<newline46mondego><newline46mondego>private Double getAnswer(String age, String in, String ft, String weight,<newline46mondego>        Double selectedItemValueFromSpinner) {<newline46mondego>    double answer = ( ( 66 + ( 6.2377 * Double.parseDouble( weight ) ) + <newline46mondego>             ( 12.7084 * ( Double.parseDouble( in ) * 12 + Double.parseDouble( ft ) ) )<newline46mondego>             - ( 6.8 * Double.parseDouble( age ) ) ) * selectedItemValueFromSpinner ); <newline46mondego>    return answer;<newline46mondego>}<newline46mondego><newline46mondego>private Double getSelectedItemValueFromSpinnerText(String spinnerText) {<newline46mondego>    return spinnerValues.get(spinnerText);<newline46mondego>}<newline46mondego>"
"6431splitHere46","12137281splitHere46","java.lang.AbstractMethodError"
"6432splitHere46","12137351splitHere46","private static final String SELECTED_ITEM = <doubleQuotes46>SelectedItem<doubleQuotes46>;<newline46mondego>private SharedPreferences sharedPreference;<newline46mondego>private Editor sharedPrefEditor;<newline46mondego><newline46mondego>private void showAlert() {<newline46mondego>    final CharSequence[] items = {<doubleQuotes46>Red<doubleQuotes46>, <doubleQuotes46>Green<doubleQuotes46>, <doubleQuotes46>Blue<doubleQuotes46>};<newline46mondego><newline46mondego>    AlertDialog.Builder builder = new AlertDialog.Builder(this);<newline46mondego>    builder.setTitle(<doubleQuotes46>Pick a color<doubleQuotes46>);               <newline46mondego>    builder.setSingleChoiceItems(items, getSelectedItem(), new DialogInterface.OnClickListener() {<newline46mondego>        public void onClick(DialogInterface dialog, int item) {<newline46mondego>            saveSelectedItem(item);<newline46mondego>            Toast.makeText(getApplicationContext(), items[item], Toast.LENGTH_SHORT).show();<newline46mondego>        }       <newline46mondego>    });<newline46mondego>    AlertDialog alert = builder.create();<newline46mondego>    alert.show();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>private int getSelectedItem() {<newline46mondego>    if (sharedPreference == null) {<newline46mondego>        sharedPreference = PreferenceManager<newline46mondego>                .getDefaultSharedPreferences(this);<newline46mondego>    }<newline46mondego>    return sharedPreference.getInt(SELECTED_ITEM, -1);<newline46mondego>}<newline46mondego><newline46mondego>private void saveSelectedItem(int item) {<newline46mondego>    if (sharedPreference == null) {<newline46mondego>        sharedPreference = PreferenceManager<newline46mondego>                .getDefaultSharedPreferences(this);<newline46mondego>    }<newline46mondego>    sharedPrefEditor = sharedPreference.edit();<newline46mondego>    sharedPrefEditor.putInt(SELECTED_ITEM, item);<newline46mondego>    sharedPrefEditor.commit();<newline46mondego>}<newline46mondego>"
"6433splitHere46","12137474splitHere46","enum"
"6434splitHere46","12137474splitHere46","Card"
"6435splitHere46","12137474splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>// This is just sample example  and it is just to show an approach. I had not enough time    to make code perfect but it works fine.<newline46mondego>public enum Deck<newline46mondego>{<newline46mondego>DECK;<newline46mondego>enum Rank<newline46mondego>{<newline46mondego>    DEUCE(2), THREE(3), FOUR(4), FIVE(5), SIX(6),<newline46mondego>    SEVEN(7), EIGHT(8), NINE(9), TEN(10), JACK(10), QUEEN(10), KING(10), ACE(11);<newline46mondego><newline46mondego>    Rank(int rank)<newline46mondego>    {<newline46mondego>        this.rank = rank;<newline46mondego>    }<newline46mondego><newline46mondego>    private final int rank;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>enum Type<newline46mondego>{<newline46mondego>    SPADES,<newline46mondego>    HEARTS,<newline46mondego>    DIAMONDS,<newline46mondego>    CLUBS;<newline46mondego>}<newline46mondego><newline46mondego>class Card<newline46mondego>{<newline46mondego>    private final Rank rank;<newline46mondego>    private final Type type;<newline46mondego><newline46mondego>    Card(Rank rank, Type type)<newline46mondego>    {<newline46mondego>        this.rank = rank;<newline46mondego>        this.type = type;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString()<newline46mondego>    {<newline46mondego>        return type.name() + rank.name();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>static List<Deck.Card> cards = new ArrayList<Deck.Card>();<newline46mondego>static<newline46mondego>{<newline46mondego>    for (Rank rank : Deck.Rank.values())<newline46mondego>    {<newline46mondego>        for (Type type : Deck.Type.values())<newline46mondego>        {<newline46mondego>            cards.add(DECK.new Card(rank, type));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>List<Deck.Card> shuffle()<newline46mondego>{<newline46mondego>    Collections.shuffle(cards);<newline46mondego>    System.out.println(cards);<newline46mondego>    System.out.println(cards.size());<newline46mondego>    return Collections.unmodifiableList(cards);<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>    DECK.shuffle();<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6436splitHere46","12137486splitHere46","5[12345]{1}"
"6437splitHere46","12137486splitHere46","String s = <doubleQuotes46>55<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>5[12345]{1}<doubleQuotes46>);<newline46mondego>if (p.matcher(s).find()) {<newline46mondego>    System.out.println(<doubleQuotes46>Found<doubleQuotes46>);<newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>Not Found<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6438splitHere46","12137638splitHere46","System.out.println(<doubleQuotes46>panel1 height = <doubleQuotes46> + panel1.getHeight());<newline46mondego>System.out.println(<doubleQuotes46>label1 height = <doubleQuotes46> + label1_x.getHeight())<newline46mondego>"
"6439splitHere46","12137638splitHere46","panel1 height = 42<newline46mondego>label1 height = 20<newline46mondego>"
"6440splitHere46","12137638splitHere46","inst2.paintComponent(panel2.getGraphics());<newline46mondego>"
"6441splitHere46","12137638splitHere46","getGraphics()"
"6442splitHere46","12137638splitHere46","paintComponent()"
"6443splitHere46","12137638splitHere46","java.awt.Canvas"
"6444splitHere46","12137655splitHere46","ArrayList< HashMap< String,String >> arrayList=populateArrayList();<newline46mondego>    Collections.sort(arrayList, new Comparator<HashMap< String,String >>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int compare(HashMap<String, String> lhs,<newline46mondego>                HashMap<String, String> rhs) {<newline46mondego>            // Do your comparison logic here and retrn accordingly.<newline46mondego>            return 0;<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"6445splitHere46","12137984splitHere46","Thread.sleep()"
"6446splitHere46","12137984splitHere46","Timer"
"6447splitHere46","12137984splitHere46","TimerTask"
"6448splitHere46","12138080splitHere46","READ ONLY"
"6449splitHere46","12138381splitHere46","ProcessBuilderFactory"
"6450splitHere46","12138381splitHere46","public interface ProcessBuilderFactory {<newline46mondego>    ProcessBuilder createProcessBuilder(String command);<newline46mondego>}<newline46mondego><newline46mondego>public class DefaultProcessBuilderFactory implements ProcessBuilderFactory {<newline46mondego>    public ProcessBuilder createProcessBuilder(String command) {<newline46mondego>        return new ProcessBuilder(command);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class ProcessExecutor {<newline46mondego>    private ProcessBuilderFactory processBuilderFactory;<newline46mondego>    private ProcessExecutor(ProcessBuilderFactory processBuilderFactory) {<newline46mondego>        this.processBuilderFactory = processBuilderFactory;<newline46mondego>    }<newline46mondego><newline46mondego>    public void execute(String command) {<newline46mondego>        ProcessBuilder processBuilder = processBuilderFactory.createProcessBuilder(command);<newline46mondego>        Process process = processBuilder.start();<newline46mondego><newline46mondego>        int exitValue = process.waitFor();<newline46mondego>        if (exitValue != 0) {<newline46mondego>            throw new RuntimeException(<doubleQuotes46>a message here...<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6451splitHere46","12138381splitHere46","ProcessBuilderFactory"
"6452splitHere46","12138381splitHere46","ProcessBuilderFactory"
"6453splitHere46","12138381splitHere46","ProcessBuilder"
"6454splitHere46","12138381splitHere46","ProcessBuilder"
"6455splitHere46","12138381splitHere46","final"
"6456splitHere46","12138381splitHere46","ProcessBuilder"
"6457splitHere46","12138381splitHere46","ProcessBuilderFactory"
"6458splitHere46","12138411splitHere46","MessageFormat.format"
"6459splitHere46","12138411splitHere46","String msg = <doubleQuotes46>Your blood pressure is {0}<doubleQuotes46>;<newline46mondego>System.out.println(MessageFormat.format(msg, 120));<newline46mondego>"
"6460splitHere46","12138627splitHere46","addConfigurationProvider"
"6461splitHere46","12138627splitHere46","addContainerProvider"
"6462splitHere46","12138627splitHere46","configurationManager.addConfigurationProvider(c);<newline46mondego>"
"6463splitHere46","12138627splitHere46","configurationManager.addContainerProvider( c );<newline46mondego>"
"6464splitHere46","12138989splitHere46","<error-page><newline46mondego>    <error-code>404</error-code><newline46mondego>    <location>/WEB-INF/jsp/error.jsp</location><newline46mondego></error-page><newline46mondego><newline46mondego><error-page><newline46mondego>    <error-code>403</error-code><newline46mondego>    <location>/WEB_INF/jsp/accessDenied.jsp</location><newline46mondego></error-page><newline46mondego>"
"6465splitHere46","12139021splitHere46","ALTER SYSTEM SET OPEN_CURSORS=1337 SID='*' SCOPE=BOTH;"
"6466splitHere46","12139021splitHere46","try/finally"
"6467splitHere46","12139021splitHere46","Statement stmt;<newline46mondego>try {<newline46mondego>   stmt = con.createStatement();<newline46mondego>   // do something with the statement<newline46mondego>} catch (SQLException e) {<newline46mondego>   LOG.error(<doubleQuotes46>SQL error<doubleQuotes46>, e);<newline46mondego>} finally {<newline46mondego>   try { if (stmt != null) stmt.close(); } catch (SQLException se) { LOG.error(<doubleQuotes46>Error closing the statement<doubleQuotes46>, se); }<newline46mondego>   // if using Apache utils you could do<newline46mondego>   // IOUtils.closeQuietly(stmt);<newline46mondego>}<newline46mondego>"
"6468splitHere46","12139021splitHere46","try (Statement stmt = con.createStatement()) {<newline46mondego>   // do something with the statement<newline46mondego>} catch(SQLException e) {<newline46mondego>   LOG.error(<doubleQuotes46>SQL error<doubleQuotes46>, e);<newline46mondego>}<newline46mondego>"
"6469splitHere46","12139021splitHere46","try"
"6470splitHere46","12139021splitHere46","AutoCloseable"
"6471splitHere46","12139195splitHere46","01 public class A{<newline46mondego>02   void test(){};<newline46mondego>03   public class B{<newline46mondego>04     void test(){<newline46mondego>05       test();  // local B.test() method, so recursion, use A.this.test();<newline46mondego>06     }<newline46mondego>07   }<newline46mondego>08 }<newline46mondego>"
"6472splitHere46","12139202splitHere46","switch"
"6473splitHere46","12139202splitHere46","String"
"6474splitHere46","12139202splitHere46","// storing<newline46mondego>Map<String, String> map = new HashMap<String, String>();<newline46mondego>map.put(<doubleQuotes46>Women<doubleQuotes46>, <doubleQuotes46>Ladys<doubleQuotes46>);<newline46mondego>// add other values<newline46mondego><newline46mondego>// retrieving<newline46mondego>String ladys = map.get(<doubleQuotes46>Women<doubleQuotes46>);<newline46mondego>"
"6475splitHere46","12139202splitHere46",".properties"
"6476splitHere46","12139202splitHere46","InputStream in = new FileInputStream(new File(<doubleQuotes46>mapping.properties<doubleQuotes46>));<newline46mondego>Properties props = new Properties();<newline46mondego>props.load(in);<newline46mondego>in.close();<newline46mondego>String ladys = props.getProperty(<doubleQuotes46>Women<doubleQuotes46>);<newline46mondego>"
"6477splitHere46","12139211splitHere46","DataTable"
"6478splitHere46","12139211splitHere46","Chart"
"6479splitHere46","12139211splitHere46","DataTable"
"6480splitHere46","12139211splitHere46","Chart"
"6481splitHere46","12139211splitHere46","Chart"
"6482splitHere46","12139211splitHere46","Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load<newline46mondego>    Dim table = New DataTable()<newline46mondego>    table.Columns.Add(<doubleQuotes46>Sales Rep<doubleQuotes46>, GetType(String))<newline46mondego>    table.Columns.Add(<doubleQuotes46># of Sales<doubleQuotes46>, GetType(Integer))<newline46mondego>    table.Columns.Add(<doubleQuotes46>Date<doubleQuotes46>, GetType(Date))<newline46mondego><newline46mondego>    table.Rows.Add(<doubleQuotes46>Anthony<doubleQuotes46>, 15, <doubleQuotes46>2012 August 1<doubleQuotes46>)<newline46mondego>    table.Rows.Add(<doubleQuotes46>Mark<doubleQuotes46>, 27, <doubleQuotes46>2012 August 1<doubleQuotes46>)<newline46mondego>    table.Rows.Add(<doubleQuotes46>David<doubleQuotes46>, 27, <doubleQuotes46>2012 August 1<doubleQuotes46>)<newline46mondego><newline46mondego>    table.Rows.Add(<doubleQuotes46>Anthony<doubleQuotes46>, 17, <doubleQuotes46>2012 August 2<doubleQuotes46>)<newline46mondego>    table.Rows.Add(<doubleQuotes46>Mark<doubleQuotes46>, 30, <doubleQuotes46>2012  August 2<doubleQuotes46>)<newline46mondego>    table.Rows.Add(<doubleQuotes46>David<doubleQuotes46>, 14, <doubleQuotes46>2012 August 2<doubleQuotes46>)<newline46mondego><newline46mondego>    Chart1.Series.RemoveAt(0)<newline46mondego>    Chart1.DataBindCrossTable(table.DefaultView, <doubleQuotes46>Sales Rep<doubleQuotes46>, <doubleQuotes46>Date<doubleQuotes46>, <doubleQuotes46># of Sales<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego><newline46mondego>    For Each s In Chart1.Series<newline46mondego>        s.ChartType = SeriesChartType.Line<newline46mondego>    Next<newline46mondego>End Sub<newline46mondego>"
"6483splitHere46","12139318splitHere46","[NSString stringWithFormat:@<doubleQuotes46>%d! = %d<doubleQuotes46>, i, factorial(i)]<newline46mondego>"
"6484splitHere46","12139318splitHere46","String.format(<doubleQuotes46>%d! = %d<doubleQuotes46>, i, factorial(i));<newline46mondego>"
"6485splitHere46","12139321splitHere46","paintComponent(Graphics)"
"6486splitHere46","12139321splitHere46","// now we have set a paint, DO SOMETHING WITH IT!<newline46mondego>g.fillRect(0, 0, getWidth(), getHeight());<newline46mondego>"
"6487splitHere46","12139516splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class SimpleDrawing extends JFrame {<newline46mondego><newline46mondego>public SimpleDrawing() {<newline46mondego><newline46mondego>    setSize(new Dimension(500, 500));<newline46mondego>    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    setVisible(true);<newline46mondego>}<newline46mondego><newline46mondego>public void paint(Graphics g) {<newline46mondego><newline46mondego>    g.setColor(Color.red);<newline46mondego>    g.fillOval(20, 50, 100, 100);<newline46mondego>    g.setColor(Color.blue);<newline46mondego>    g.fillRect(100, 100, 100, 200);<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String arg[]) {<newline46mondego><newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            new SimpleDrawing();<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6488splitHere46","12139547splitHere46","FormattingConversionService"
"6489splitHere46","12139547splitHere46","FormattingConversionServiceFactoryBean"
"6490splitHere46","12139547splitHere46","@NumberFormat"
"6491splitHere46","12139641splitHere46","<!DOCTYPE beans PUBLIC <doubleQuotes46>-//SPRING//DTD BEAN//EN<doubleQuotes46> <doubleQuotes46>http://www.springframework.org/dtd/spring-beans.dtd<doubleQuotes46>><newline46mondego>            <beans><newline46mondego>                <bean id=<doubleQuotes46>A<doubleQuotes46> class=<doubleQuotes46>...<doubleQuotes46>><newline46mondego>                    <property name=<doubleQuotes46>x<doubleQuotes46> value=<doubleQuotes46>150<doubleQuotes46> /><newline46mondego>                </bean><newline46mondego><newline46mondego>                <bean id=<doubleQuotes46>B<doubleQuotes46> class=<doubleQuotes46>...<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46>><newline46mondego>                    <property name=<doubleQuotes46>y<doubleQuotes46> value=<doubleQuotes46>20<doubleQuotes46> /><newline46mondego>                    <property name=<doubleQuotes46>z<doubleQuotes46> value=<doubleQuotes46>7<doubleQuotes46> /><newline46mondego>                    <property name=<doubleQuotes46>w<doubleQuotes46> value=<doubleQuotes46>7<doubleQuotes46> /><newline46mondego>                    <property name=<doubleQuotes46>bclist<doubleQuotes46>><newline46mondego>                        <list><newline46mondego>                            <ref bean=<doubleQuotes46>C<doubleQuotes46> /><newline46mondego>                        </list><newline46mondego>                </bean><newline46mondego><newline46mondego>                <bean id=<doubleQuotes46>C<doubleQuotes46> class=<doubleQuotes46>...<doubleQuotes46>><newline46mondego>                    <property name=<doubleQuotes46>v<doubleQuotes46> value=<doubleQuotes46>3<doubleQuotes46> /><newline46mondego>                    <property name=<doubleQuotes46>l<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46> /><newline46mondego>                </bean><newline46mondego>            </beans><newline46mondego>"
"6492splitHere46","12139641splitHere46","class **A** implements runnable{<newline46mondego>    int x;<newline46mondego>    Collection<**B**> clist;         //not fixed size list, <newline46mondego>    run(){<newline46mondego>       // if (something happens) <newline46mondego>       //           new Thread((B)context.getBean(<doubleQuotes46>B<doubleQuotes46>))<newline46mondego>    }<newline46mondego>  } <newline46mondego>"
"6493splitHere46","12139645splitHere46","Response"
"6494splitHere46","12139645splitHere46","ResponseBuilder"
"6495splitHere46","12139645splitHere46","@POST<newline46mondego>@Path(<doubleQuotes46>/foo<doubleQuotes46>)<newline46mondego>@Consumes(<doubleQuotes46>application/json<doubleQuotes46>)<newline46mondego>public Response fooService(MyObject obj) {<newline46mondego>   MyResponseEntity entity = MyObjectService.retrieveSomethingFrom(obj);<newline46mondego>   return Response.status(200).entity(entity).type(obj.isXml() ? <doubleQuotes46>text/xml<doubleQuotes46> : <doubleQuotes46>application/json<doubleQuotes46>).build();<newline46mondego>}<newline46mondego>"
"6496splitHere46","12139645splitHere46","MyObject"
"6497splitHere46","12139645splitHere46","xml"
"6498splitHere46","12139645splitHere46","Response"
"6499splitHere46","12139645splitHere46","text/xml"
"6500splitHere46","12139645splitHere46","application/json"
"6501splitHere46","12139678splitHere46","MergeCommand"
"6502splitHere46","12139678splitHere46","CheckoutCommand"
"6503splitHere46","12139678splitHere46","Git git = ... // you get it through a CloneCommand, InitCommand <newline46mondego>              // or another I don't remember<newline46mondego>CheckoutCommand coCmd = git.checkout(); <newline46mondego>// Commands are part of the api module, which include git-like calls<newline46mondego>coCmd.setName(<doubleQuotes46>master<doubleQuotes46>);<newline46mondego>coCmd.setCreateBranch(false); // probably not needed, just to make sure<newline46mondego>coCmd.call(); // switch to <doubleQuotes46>master<doubleQuotes46> branch<newline46mondego><newline46mondego>MergeCommand mgCmd = git.merge();<newline46mondego>mgCmd.include(<doubleQuotes46>foo<doubleQuotes46>); // I think <doubleQuotes46>foo<doubleQuotes46> is considered as a Ref to a branch<newline46mondego>MergeResult res = mgCmd.call(); // actually do the merge<newline46mondego><newline46mondego>if (res.getMergeStatus().equals(MergeResult.MergeStatus.CONFLICTING)){<newline46mondego>   System.out.println(res.getConflicts().toString());<newline46mondego>}<newline46mondego>"
"6504splitHere46","12139830splitHere46","byte[]"
"6505splitHere46","12139830splitHere46","byte"
"6506splitHere46","12139830splitHere46","{int1B1, int1B2, int2B1, int2B2, int3B1, int3B2, ...}"
"6507splitHere46","12139830splitHere46","int[] audio = new int[byteArray.length/2];<newline46mondego>for (int i = 0; i < byteArray.length/2; i++) { // read in the samples<newline46mondego>  int ub1 = byteArray[i * 2 + 0] & 0xFF;<newline46mondego>  int ub2 = byteArray[i * 2 + 1] & 0xFF;<newline46mondego>  audio[i] = (ub2 << 8) + ub1;<newline46mondego>}<newline46mondego>"
"6508splitHere46","12139878splitHere46","equals"
"6509splitHere46","12139878splitHere46","new X"
"6510splitHere46","12139878splitHere46","new String"
"6511splitHere46","12139878splitHere46","intern"
"6512splitHere46","12139924splitHere46","JVM_OPTS"
"6513splitHere46","12139946splitHere46","?faces-redirect=true <newline46mondego>"
"6514splitHere46","12139988splitHere46","Jsoup.connect(urlVal)"
"6515splitHere46","12139988splitHere46","close()"
"6516splitHere46","12139988splitHere46","Connection"
"6517splitHere46","12139988splitHere46","get"
"6518splitHere46","12139988splitHere46","out.close();"
"6519splitHere46","12139988splitHere46","null"
"6520splitHere46","12139988splitHere46","close()"
"6521splitHere46","12139988splitHere46","finally"
"6522splitHere46","12139988splitHere46","close()"
"6523splitHere46","12139988splitHere46","null"
"6524splitHere46","12139988splitHere46","private static void storeFile(String id, String url, String cat, <newline46mondego>                              String title, String contents) {<newline46mondego>    try (BufferedWriter out = new BufferedWriter(<newline46mondego>                new OutputStreamWriter(<newline46mondego>                new FileOutputStream(<newline46mondego>                new File(path + <doubleQuotes46>/<doubleQuotes46> + id + <doubleQuotes46>.webtrec<doubleQuotes46>)),<doubleQuotes46>UTF8<doubleQuotes46>))) {<newline46mondego>        // write in TREC format<newline46mondego>        out.write(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>        out.close();<newline46mondego>    } catch (IOException e) {<newline46mondego>        System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6525splitHere46","12139988splitHere46","Closeable"
"6526splitHere46","12140532splitHere46","Preferences<newline46mondego> >Java<newline46mondego>  >Code Style<newline46mondego>   >Formatter <newline46mondego>     > Edit<newline46mondego>      > Braces Tab<newline46mondego>         >Method Declaration<newline46mondego>          > Change Option to Next Line<newline46mondego>      > Line Wrapping <newline46mondego>          > Method Declarations<newline46mondego>          > Declaration<newline46mondego>           > Do Not Wrap<newline46mondego>"
"6527splitHere46","12140532splitHere46","Method Body"
"6528splitHere46","12140532splitHere46","// ${todo} Auto-generated method stub<newline46mondego>  ${body_statement}<newline46mondego>"
"6529splitHere46","12140532splitHere46","**TODO**"
"6530splitHere46","12140532splitHere46","Preferences<newline46mondego> >Java<newline46mondego>  >Code Style<newline46mondego>   >Code Template<newline46mondego>    >Code<newline46mondego>     >Method Body<newline46mondego>      >Edit<newline46mondego>       >Paste the value in pattern<newline46mondego>"
"6531splitHere46","12140622splitHere46","BufferedOutputStream"
"6532splitHere46","12140622splitHere46","compressedOutput.flush()"
"6533splitHere46","12140622splitHere46","compressedOutput.close()"
"6534splitHere46","12140622splitHere46","xxx.txt.gz"
"6535splitHere46","12140622splitHere46","dos.writeInt(yourList.size()); // tell how many items<newline46mondego>for (SubImage si: yourList) {<newline46mondego>   // write every field, in order (this should be a method called writeSubImage :)<newline46mondego>   dos.writeInt(...);<newline46mondego>   dos.writeInt(...);<newline46mondego>   ...<newline46mondego>}<newline46mondego><newline46mondego>// to read the thing just:<newline46mondego>int size = dis.readInt();<newline46mondego>for (int i=0; i<size; i++) {<newline46mondego>   // read every field, in the same order (this should be a method called readSubImage :)<newline46mondego>   dis.readInt(...);<newline46mondego>   dis.readInt(...);<newline46mondego>   ...<newline46mondego>   // create the subimage<newline46mondego>   // add it to the list you are recreating<newline46mondego>}<newline46mondego>"
"6536splitHere46","12140622splitHere46","Object -> JSON -> OutputStreamWriter(UTF-8) -> GZippedOutputStream -> FileOutputStream<newline46mondego>"
"6537splitHere46","12140909splitHere46","DirectoryDialog"
"6538splitHere46","12140909splitHere46","public static void main(String[] args) {<newline46mondego>    Display display = new Display();<newline46mondego>    Shell shell = new Shell(display);<newline46mondego>    shell.open();<newline46mondego>    DirectoryDialog dialog = new DirectoryDialog(shell);<newline46mondego>    dialog.setFilterPath(<doubleQuotes46>c:\\<doubleQuotes46>); // Windows specific<newline46mondego>    System.out.println(<doubleQuotes46>RESULT=<doubleQuotes46> + dialog.open());<newline46mondego>    while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"6539splitHere46","12140977splitHere46","textPane.setContentType ( <doubleQuotes46>text/html<doubleQuotes46> );<newline46mondego>"
"6540splitHere46","12141062splitHere46","PersistenceExceptionTranslationPostProcessor"
"6541splitHere46","12141062splitHere46","<!--<newline46mondego>        Post-processor to perform exception translation on @Repository classes<newline46mondego>        (from native exceptions such as JPA PersistenceExceptions to<newline46mondego>        Spring's DataAccessException hierarchy).<newline46mondego>    --><newline46mondego>    <bean class=<doubleQuotes46>org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor<doubleQuotes46> /><newline46mondego>"
"6542splitHere46","12141062splitHere46","@Repository"
"6543splitHere46","12141062splitHere46","PersistenceExceptionTranslationAdvisor"
"6544splitHere46","12141062splitHere46","DataAccessException"
"6545splitHere46","12141062splitHere46","PersistenceExceptionTranslator"
"6546splitHere46","12141191splitHere46","RaccoltaPunti"
"6547splitHere46","12141191splitHere46","Serializable"
"6548splitHere46","12141191splitHere46","import java.io.Serializable;<newline46mondego>    ...<newline46mondego><newline46mondego>    public class RaccoltaPunti implements Serializable {<newline46mondego>    ...<newline46mondego>"
"6549splitHere46","12141191splitHere46","RaccoltaPunti"
"6550splitHere46","12141191splitHere46","public  RaccoltaPunti(<newline46mondego>        String nomeRaccolta,<newline46mondego>        String nomePromoter,<newline46mondego>        String numeroTessera,<newline46mondego>        Long puntiPusseduti,<newline46mondego>        String dataScadenzaPunti,<newline46mondego>        String sitoWeb,<newline46mondego>        String sitoWebUsername) {<newline46mondego>"
"6551splitHere46","12141191splitHere46","oos.writeObject(this.raccoltePuntiList);    <newline46mondego>"
"6552splitHere46","12141191splitHere46","Globals"
"6553splitHere46","12141242splitHere46","<div>"
"6554splitHere46","12141242splitHere46","<div jwcid=<doubleQuotes46>licenceAuthRequiredDiv@Any<doubleQuotes46>><newline46mondego><td valign=<doubleQuotes46>center<doubleQuotes46> align=<doubleQuotes46>left<doubleQuotes46> class=<doubleQuotes46>rightTD<doubleQuotes46> height=<doubleQuotes46>30<doubleQuotes46> ><newline46mondego>     <span jwcid=<doubleQuotes46>@If<doubleQuotes46> condition=<doubleQuotes46>ognl:company.shopStatus == @valueobject.ShopStatus@Pass<doubleQuotes46> renderTag=<doubleQuotes46>literal:false<doubleQuotes46>><newline46mondego>        <input jwcid=<doubleQuotes46>shopApprovalDateRequired@CustomDatePicker<doubleQuotes46> disabled=<doubleQuotes46>ognl:disabled || isShopApprovalDateDisabled()<doubleQuotes46><newline46mondego>        value=<doubleQuotes46>ognl:company.shopApprovalDate<doubleQuotes46> displayName=<doubleQuotes46>message:company.shopApprovalDate<doubleQuotes46> validators=<doubleQuotes46>validators:maxDateToday,required<doubleQuotes46> /><newline46mondego>     </span><newline46mondego>     <span jwcid=<doubleQuotes46>@Else<doubleQuotes46> renderTag=<doubleQuotes46>literal:false<doubleQuotes46>><newline46mondego>        <input jwcid=<doubleQuotes46>shopApprovalDate@CustomDatePicker<doubleQuotes46> disabled=<doubleQuotes46>ognl:disabled || isShopApprovalDateDisabled()<doubleQuotes46><newline46mondego>        value=<doubleQuotes46>ognl:company.shopApprovalDate<doubleQuotes46> displayName=<doubleQuotes46>message:company.shopApprovalDate<doubleQuotes46> validators=<doubleQuotes46>validators:maxDateToday<doubleQuotes46> /><newline46mondego>     </span><newline46mondego>    </td><newline46mondego></div> <newline46mondego>"
"6555splitHere46","12141242splitHere46","@EventListener(targets=<doubleQuotes46>licensingStatus<doubleQuotes46>, events=<doubleQuotes46>onchange<doubleQuotes46>)<newline46mondego>public void onLicenseStatusChange(IRequestCycle cycle){<newline46mondego>    cycle.getResponseBuilder().updateComponent(<doubleQuotes46>licenceAuthRequiredDiv<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6556splitHere46","12141257splitHere46","this.getClass()"
"6557splitHere46","12141391splitHere46","Hibernate Spatial version 1.0 is compatible with Hibernate 3.2.x - 3.5.x<newline46mondego>Hibernate Spatial version 1.1.x is compatible with Hibernate 3.6.x<newline46mondego>Hibernate Spatial version 4.0 is compatible with Hibernate 4.x<newline46mondego>"
"6558splitHere46","12141495splitHere46","||"
"6559splitHere46","12141495splitHere46","true"
"6560splitHere46","12141495splitHere46","&&"
"6561splitHere46","12141559splitHere46","<bean id=<doubleQuotes46>BlackListRepository<doubleQuotes46> class=<doubleQuotes46><snip>.JPABlackListRepository<doubleQuotes46> />"
"6562splitHere46","12141559splitHere46","test-applicationcontext.xml"
"6563splitHere46","12141559splitHere46","<import resource=<doubleQuotes46>prod-context.xml<doubleQuotes46>/><newline46mondego> <bean id=<doubleQuotes46>BlackListRepository<doubleQuotes46> class=<doubleQuotes46>..InMemoryBlackListRepository<doubleQuotes46>/><newline46mondego>"
"6564splitHere46","12141559splitHere46","<bean name=<doubleQuotes46>blacklistService<doubleQuotes46> class=<doubleQuotes46>..BlackListServiceImpl<doubleQuotes46>/><newline46mondego><newline46mondego><bean id=<doubleQuotes46>mailserverBeansExporter<doubleQuotes46> class=<doubleQuotes46>org.springframework.jmx.export.annotation.AnnotationMBeanExporter<doubleQuotes46>><newline46mondego><property name=<doubleQuotes46>beans<doubleQuotes46>><newline46mondego>    <map><newline46mondego>        <entry key=<doubleQuotes46>bean:name=BlacklistServiceImpl<doubleQuotes46> value-ref=<doubleQuotes46>blacklistService<doubleQuotes46>><newline46mondego><newline46mondego>        </entry><newline46mondego>    </map><newline46mondego></property><newline46mondego>"
"6565splitHere46","12141582splitHere46","private"
"6566splitHere46","12141582splitHere46","username"
"6567splitHere46","12141582splitHere46","password"
"6568splitHere46","12141582splitHere46","username"
"6569splitHere46","12141582splitHere46","password"
"6570splitHere46","12141582splitHere46","public"
"6571splitHere46","12141582splitHere46","username"
"6572splitHere46","12141582splitHere46","password"
"6573splitHere46","12141582splitHere46","public class Login extends javax.swing.JFrame {<newline46mondego>private String username,password;//assign private global fields for the instance<newline46mondego><newline46mondego>//the variables are assigned when you accept user input<newline46mondego><newline46mondego>public String getUsername() {<newline46mondego>return username;<newline46mondego>}<newline46mondego>public String getPassword() {<newline46mondego>return password;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6574splitHere46","12141582splitHere46","Login lg=new Login();//create new instance to gain access to getter methods<newline46mondego>//wait for it to return or until user has enetered the credentials<newline46mondego>System.out.println(lg.getUsername());<newline46mondego>System.out.println(lg.getPassword());<newline46mondego>"
"6575splitHere46","12141602splitHere46","public void method(String... strings) {<newline46mondego>    // strings is actually an array<newline46mondego>    String firstParam = strings[0];<newline46mondego>    String secondParam = strings[1];<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6576splitHere46","12141602splitHere46","method(<doubleQuotes46>string1<doubleQuotes46>);<newline46mondego>method(<doubleQuotes46>string1<doubleQuotes46>, <doubleQuotes46>string2<doubleQuotes46>, <doubleQuotes46>string3<doubleQuotes46>);<newline46mondego>// as many string args as you want<newline46mondego>"
"6577splitHere46","12141709splitHere46","private static void createViewer(Composite parent) {<newline46mondego>    viewer = new TableViewer(parent, SWT.MULTI | SWT.H_SCROLL<newline46mondego>            | SWT.V_SCROLL | SWT.FULL_SELECTION | SWT.BORDER);<newline46mondego>    createColumns(parent, viewer);<newline46mondego>    final Table table = viewer.getTable();<newline46mondego>    table.setHeaderVisible(true);<newline46mondego>    table.setLinesVisible(true);<newline46mondego><newline46mondego>    viewer.setContentProvider(new ArrayContentProvider());<newline46mondego>    // Get the content for the viewer, setInput will call getElements in the<newline46mondego>    // contentProvider<newline46mondego>    viewer.setInput(ModelProvider.INSTANCE.getPersons());<newline46mondego>    // Set the sorter for the table<newline46mondego><newline46mondego>    // Layout the viewer<newline46mondego>    GridData gridData = new GridData();<newline46mondego>    gridData.verticalAlignment = GridData.FILL;<newline46mondego>    gridData.horizontalSpan = 2;<newline46mondego>    gridData.grabExcessHorizontalSpace = true;<newline46mondego>    gridData.grabExcessVerticalSpace = true;<newline46mondego>    gridData.horizontalAlignment = GridData.FILL;<newline46mondego>    viewer.getControl().setLayoutData(gridData);<newline46mondego><newline46mondego>    comparator = new PersonViewerComparator();<newline46mondego>    viewer.setComparator(comparator);<newline46mondego>}<newline46mondego><newline46mondego>// This will create the columns for the table<newline46mondego>private static void createColumns(final Composite parent,<newline46mondego>        final TableViewer viewer) {<newline46mondego>    String[] titles = { <doubleQuotes46>First name<doubleQuotes46>, <doubleQuotes46>Last name<doubleQuotes46>, <doubleQuotes46>Gender<doubleQuotes46>, <doubleQuotes46>Married<doubleQuotes46> };<newline46mondego>    int[] bounds = { 100, 100, 100, 100 };<newline46mondego><newline46mondego>    // First column is for the first name<newline46mondego>    TableViewerColumn col = createTableViewerColumn(titles[0], bounds[0], 0);<newline46mondego>    col.setLabelProvider(new ColumnLabelProvider() {<newline46mondego>        @Override<newline46mondego>        public String getText(Object element) {<newline46mondego>            Person p = (Person) element;<newline46mondego>            return p.getFirstName();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    col.setEditingSupport(new CheckLengthEditingSupport(viewer)); <newline46mondego><newline46mondego>    // Second column is for the last name<newline46mondego>    col = createTableViewerColumn(titles[1], bounds[1], 1);<newline46mondego>    col.setLabelProvider(new ColumnLabelProvider() {<newline46mondego>        @Override<newline46mondego>        public String getText(Object element) {<newline46mondego>            Person p = (Person) element;<newline46mondego>            return p.getLastName();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    // Now the gender<newline46mondego>    col = createTableViewerColumn(titles[2], bounds[2], 2);<newline46mondego>    col.setLabelProvider(new ColumnLabelProvider() {<newline46mondego>        @Override<newline46mondego>        public String getText(Object element) {<newline46mondego>            Person p = (Person) element;<newline46mondego>            return p.getGender();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    // // Now the status married<newline46mondego>    col = createTableViewerColumn(titles[3], bounds[3], 3);<newline46mondego>    col.setLabelProvider(new ColumnLabelProvider() {<newline46mondego>        @Override<newline46mondego>        public String getText(Object element) {<newline46mondego>            return <doubleQuotes46><doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Image getImage(Object element) {<newline46mondego>            if (((Person) element).isMarried()) {<newline46mondego>                return CHECKED;<newline46mondego>            } else {<newline46mondego>                return UNCHECKED;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>static class CheckLengthEditingSupport extends EditingSupport {<newline46mondego><newline46mondego>    private final TableViewer viewer;<newline46mondego>    private TextCellEditor editor = null;<newline46mondego><newline46mondego>    public FirstNameEditingSupport(TableViewer viewer) {<newline46mondego>        super(viewer);<newline46mondego>        this.viewer = viewer;<newline46mondego>        editor = new TextCellEditor(viewer.getTable());<newline46mondego><newline46mondego>        Text text = (Text) editor.getControl();<newline46mondego><newline46mondego>        //  set maximal length HERE<newline46mondego>        text.setTextLimit(3);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected CellEditor getCellEditor(Object element) {<newline46mondego>        return editor;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected boolean canEdit(Object element) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Object getValue(Object element) {<newline46mondego>        return ((YourObject) element).getName();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void setValue(Object element, Object value) {<newline46mondego>        ((YourObject) element).setName(String.valueOf(value));<newline46mondego>        viewer.update(element, null);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6578splitHere46","12141709splitHere46","TextCellEditor"
"6579splitHere46","12141709splitHere46","EditingSupport"
"6580splitHere46","12141709splitHere46","protected CellEditor getCellEditor(Object element)"
"6581splitHere46","12141709splitHere46","VerifyListener"
"6582splitHere46","12141709splitHere46","text"
"6583splitHere46","12141709splitHere46","TextCellEditor"
"6584splitHere46","12141713splitHere46","Thread-1: x = 1, get(x)<newline46mondego>Thread-2: x = 1, get(x)<newline46mondego>Thread-1: put(x + 1) => 2<newline46mondego>Thread-2: put(x + 1) => 2<newline46mondego>"
"6585splitHere46","12141713splitHere46","java.util.concurrent.atomic"
"6586splitHere46","12141765splitHere46","setChunkedStreamingMode()"
"6587splitHere46","12141765splitHere46","setFixedStreamingMode()"
"6588splitHere46","12141765splitHere46","HttpEngine.DEFAULT_CHUNK_LENGTH"
"6589splitHere46","12141866splitHere46","toString()"
"6590splitHere46","12141944splitHere46","public static class MyNewClass{<newline46mondego>    private Person person;<newline46mondego>    private Dog dog;<newline46mondego>    ... // two constructors and getters and setters<newline46mondego><newline46mondego> public static class Person{<newline46mondego>     private String id;<newline46mondego>     ... // two constructors and getters and setters<newline46mondego> }<newline46mondego> public static class Dog{<newline46mondego>     private String dateOfBirth;<newline46mondego>     private String price;<newline46mondego>     ... // two constructors and getters and setters<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6591splitHere46","12141944splitHere46","JsonNode tree = mapper.readTree(jsonString);<newline46mondego>    Iterator<JsonNode> iter = tree.path(<doubleQuotes46>data<doubleQuotes46>).getElements();<newline46mondego>    while (iter.hasNext()){<newline46mondego>        JsonNode node = iter.next();<newline46mondego>        Person person = mapper.readValue(node.path(<doubleQuotes46>Person<doubleQuotes46>), Person.class);<newline46mondego>        Dog dog = mapper.readValue(node.path(<doubleQuotes46>Dog<doubleQuotes46>), Dog.class);<newline46mondego>        MyNewClass myNewClass = new MyNewClass(person , dog);<newline46mondego>        ... //Do something with it<newline46mondego>    }<newline46mondego>"
"6592splitHere46","12142202splitHere46","String dawaaList[] = {emportPref.getString(<doubleQuotes46>subject<doubleQuotes46>, null)};<newline46mondego>setListAdapter(new ArrayAdapter<String>(DawaaActivity.this,<newline46mondego>android.R.layout.simple_list_item_1, dawaaList));<newline46mondego>"
"6593splitHere46","12142202splitHere46","if (dawaaList[] == null) { <newline46mondego>   new String[]{<doubleQuotes46>No subjects<doubleQuotes46>}; <newline46mondego>}<newline46mondego>"
"6594splitHere46","12142202splitHere46","<ListView<newline46mondego>        android:id=<doubleQuotes46>@+id/myListView<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        /><newline46mondego>"
"6595splitHere46","12142202splitHere46","setContentView(R.layout.main);<newline46mondego>    ListView listView = (ListView) findViewById(R.id.myListView);<newline46mondego>    SharedPreferences pref = getSharedPreferences(<doubleQuotes46>dawaaData<doubleQuotes46>, MODE_PRIVATE);<newline46mondego>    String items = pref.getString(<doubleQuotes46>subject<doubleQuotes46>, <doubleQuotes46>item1,item2,item3<doubleQuotes46>);<newline46mondego>    String[] listItems = items.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    listView.setAdapter(new ArrayAdapter<String>(this,  android.R.layout.simple_list_item_1, listItems));<newline46mondego>"
"6596splitHere46","12142303splitHere46","View"
"6597splitHere46","12142303splitHere46","ObjectMapper"
"6598splitHere46","12142303splitHere46","public static class FooReference {<newline46mondego>    public DBRef<Foo> foo;<newline46mondego><newline46mondego>    @JsonView(Views.WebView.class)<newline46mondego>    public Foo getFoo() {<newline46mondego>        return foo.fetch();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6599splitHere46","12142303splitHere46","class Views {<newline46mondego>    static class WebView { }<newline46mondego>}<newline46mondego>"
"6600splitHere46","12142303splitHere46","SerializationConfig conf = objectMapper.getSerializationConfig().withView(Views.WebView.class);<newline46mondego>objectMapper.setSerializationConfig(conf);<newline46mondego>"
"6601splitHere46","12142303splitHere46","objectMapper.configure(SerializationConfig.Feature.DEFAULT_VIEW_INCLUSION, false);<newline46mondego>"
"6602splitHere46","12142325splitHere46","comapareTo"
"6603splitHere46","12142325splitHere46","compareTo"
"6604splitHere46","12142325splitHere46","compareTo"
"6605splitHere46","12142325splitHere46","return Long.valueOf(this.ripe).compareTo(that.ripe);<newline46mondego>"
"6606splitHere46","12142569splitHere46","JTextArea.setWrapStyleWord(true);<newline46mondego>"
"6607splitHere46","12142569splitHere46","setRows(int rows)"
"6608splitHere46","12142569splitHere46","revalidate()"
"6609splitHere46","12142569splitHere46","repaint()"
"6610splitHere46","12142585splitHere46","lightSourceId"
"6611splitHere46","12142618splitHere46","getReference()"
"6612splitHere46","12142618splitHere46","A a = entityManager.getReference(A.class, knownIdForA);<newline46mondego>B b = entityManager.getReference(B.class, knownIdForB);<newline46mondego><newline46mondego>X x = new X();<newline46mondego>x.setA(a);<newline46mondego>x.setB(b);<newline46mondego><newline46mondego>entityManager.persist(x);<newline46mondego>"
"6613splitHere46","12142644splitHere46","ElementListSelectionDialog dialog = <newline46mondego>    new ElementListSelectionDialog(PlatformUI.getWorkbench().getDisplay().getActiveShell(), new LabelProvider());<newline46mondego>"
"6614splitHere46","12142668splitHere46","getBasicConstraints()"
"6615splitHere46","12142668splitHere46","!= -1"
"6616splitHere46","12142668splitHere46","CA certificate"
"6617splitHere46","12142668splitHere46","CA certificates"
"6618splitHere46","12142760splitHere46","public void functionName(View view);<newline46mondego>"
"6619splitHere46","12142777splitHere46","ThreadSafe"
"6620splitHere46","12142777splitHere46","sum"
"6621splitHere46","12142777splitHere46","Thread"
"6622splitHere46","12142777splitHere46","ThreadSafe"
"6623splitHere46","12142777splitHere46","sum"
"6624splitHere46","12142777splitHere46","main"
"6625splitHere46","12142777splitHere46","public static void main(String...d) {<newline46mondego>    ThreadSafe ts=new ThreadSafe();<newline46mondego>    Thread t=new Thread(ts);<newline46mondego>    Thread t1=new Thread(ts);<newline46mondego>    t1.start();<newline46mondego>    t.start();<newline46mondego>  }<newline46mondego>"
"6626splitHere46","12142777splitHere46","ThreadSafe"
"6627splitHere46","12142777splitHere46","class ThreadSafe implements Runnable {<newline46mondego>  int arr[]=new int[]{1,2,3,4,5};<newline46mondego>  volatile int sum=0;<newline46mondego>"
"6628splitHere46","12142780splitHere46","-Djava.rmi.server.hostname=<ip>"
"6629splitHere46","12142813splitHere46",","
"6630splitHere46","12142813splitHere46","<doubleQuotes46>,<doubleQuotes46>"
"6631splitHere46","12142813splitHere46",","
"6632splitHere46","12142994splitHere46","@JsonAnySetter<newline46mondego>public void anySet(String key, Detail value) {<newline46mondego>    detailMap.put(key, value);<newline46mondego>}<newline46mondego>"
"6633splitHere46","12143053splitHere46","main"
"6634splitHere46","12143053splitHere46","public class TestCompare {<newline46mondego>    public static void main() {<newline46mondego>      List<String> list = Arrays.asList(<doubleQuotes46>10<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>20<doubleQuotes46>, <doubleQuotes46>11<doubleQuotes46>, <doubleQuotes46>21<doubleQuotes46>, <doubleQuotes46>12<doubleQuotes46>);<newline46mondego>      Comparator<String> cmp = new Comparator<String>() {<newline46mondego>      public int compare(String o1, String o2) {<newline46mondego>        return Integer.valueOf(o1).compareTo(Integer.valueOf(o2));<newline46mondego>      }<newline46mondego>      };<newline46mondego>      Collections.sort(list, cmp);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6635splitHere46","12143170splitHere46","javax/javaee-api/provided"
"6636splitHere46","12143170splitHere46","javax.mail/mail/1.4.5"
"6637splitHere46","12143170splitHere46","javax/javaee-api/provided"
"6638splitHere46","12143170splitHere46","javax.mail/mail/1.4.5"
"6639splitHere46","12143170splitHere46","javax/javaee-api/provided"
"6640splitHere46","12143170splitHere46","javax/javaee-api/provided"
"6641splitHere46","12143170splitHere46","<dependency><newline46mondego>        <groupId>org.jboss.spec</groupId><newline46mondego>        <artifactId>jboss-javaee-6.0</artifactId><newline46mondego>        <version>1.0.0.Final</version><newline46mondego>        <type>pom</type><newline46mondego>        <scope>provided</scope><newline46mondego>     </dependency><newline46mondego>"
"6642splitHere46","12143315splitHere46","deviceprofile.xsd"
"6643splitHere46","12143315splitHere46","urn:schemas-ce-org:ce-html-server-caps-1-0"
"6644splitHere46","12143315splitHere46","ref"
"6645splitHere46","12143315splitHere46","foo"
"6646splitHere46","12143315splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><xs:schema xmlns=<doubleQuotes46>urn:schemas-upnp-org:remoteui:uilist-1-0<doubleQuotes46><newline46mondego>    targetNamespace=<doubleQuotes46>urn:schemas-upnp-org:remoteui:uilist-1-0<doubleQuotes46> <newline46mondego>    xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>    xmlns:foo=<doubleQuotes46>urn:schemas-ce-org:ce-html-server-caps-1-0<doubleQuotes46><newline46mondego>    elementFormDefault=<doubleQuotes46>qualified<doubleQuotes46> <newline46mondego>    attributeFormDefault=<doubleQuotes46>unqualified<doubleQuotes46> id=<doubleQuotes46>uilist<doubleQuotes46>><newline46mondego>    <xs:import namespace=<doubleQuotes46>urn:schemas-ce-org:ce-html-server-caps-1-0<doubleQuotes46><newline46mondego>        schemaLocation=<doubleQuotes46>relatedtype.xsd<doubleQuotes46> /><newline46mondego>    <xs:element name=<doubleQuotes46>uilist<doubleQuotes46>><newline46mondego>        <xs:complexType><newline46mondego>            <xs:sequence><newline46mondego>                <xs:element ref=<doubleQuotes46>foo:relatedData<doubleQuotes46> minOccurs=<doubleQuotes46>1<doubleQuotes46> maxOccurs=<doubleQuotes46>1<doubleQuotes46> /><newline46mondego>            </xs:sequence><newline46mondego>        </xs:complexType><newline46mondego>    </xs:element><newline46mondego></xs:schema><newline46mondego>"
"6647splitHere46","12143489splitHere46","JPQL"
"6648splitHere46","12143489splitHere46","find()"
"6649splitHere46","12143489splitHere46","UPDATE MyTable SET MyValue = :newValue WHERE MyId = :id <newline46mondego>"
"6650splitHere46","12143711splitHere46","public interface XMPPmessageListener {<newline46mondego>    public void readMsg(String senderJID, String msg); <newline46mondego>}<newline46mondego>"
"6651splitHere46","12143711splitHere46","private LinkedList<XMPPmessageListener> listeners = new LinkedList<XMPPmessageListener>();<newline46mondego><newline46mondego>public void addMsgListener(XMPPmessageListener listener){<newline46mondego>    listeners.add(listener);<newline46mondego>}<newline46mondego><newline46mondego>public boolean removeMsgListener(XMPPmessageListener listener){<newline46mondego>    return listeners.remove(listener);<newline46mondego>}       <newline46mondego>"
"6652splitHere46","12143711splitHere46","public void processMessage(Chat chat, Message message) {<newline46mondego>    if (message.getType() == Message.Type.chat) {<newline46mondego>        for(XMPPmessageListener l: listeners){<newline46mondego>            l.readMsg(chat.getParticipant().toString(), message.getBody().toString());<newline46mondego>        }<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"6653splitHere46","12143711splitHere46","XmppHandler xmpp = new XmppHandler(XMPPuser, XMPPpassword, XMPPaddress, XMPPdomain, XMPPport);<newline46mondego><newline46mondego>XMPPmessageListener msglistener = new XMPPmessageListener() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void readMsg(String senderJID, String msg) {<newline46mondego>                    String asw=xmlHandler.processMsg(msg,senderJID);<newline46mondego><newline46mondego>                }<newline46mondego>            };<newline46mondego>            xmpp.addMsgListener(msglistener);<newline46mondego>"
"6654splitHere46","12143746splitHere46","public List<Object> getValues(Map<String, Object> map) {<newline46mondego><newline46mondego>    List<Object> retVal = new ArrayList<Object>();<newline46mondego><newline46mondego>    for (Map.Entry<String, Object> entry : map.entrySet()) {<newline46mondego>        Object value = entry.getValue();<newline46mondego><newline46mondego>        if (value instanceof Map) {<newline46mondego>            retVal.addAll(getValues((Map) value));<newline46mondego>        } else {<newline46mondego>            retVal.add(value);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return retVal;<newline46mondego>}<newline46mondego>"
"6655splitHere46","12143898splitHere46","getMin/getMax/getMedian"
"6656splitHere46","12143898splitHere46","getMin/getMax"
"6657splitHere46","12143898splitHere46","getMedian"
"6658splitHere46","12143898splitHere46","getMin/getMax"
"6659splitHere46","12143898splitHere46","getMedian"
"6660splitHere46","12143898splitHere46","getMin/getMax"
"6661splitHere46","12144048splitHere46","@XmlRootElement"
"6662splitHere46","12144048splitHere46","@XmlElementDecl"
"6663splitHere46","12144048splitHere46","ObjectFactory"
"6664splitHere46","12144053splitHere46","DocumentListener"
"6665splitHere46","12144053splitHere46","JTextArea"
"6666splitHere46","12144053splitHere46","JTextArea.getDocument().addDocumentListener(new DocumentListener() {<newline46mondego>  public void changedUpdate(DocumentEvent e) {<newline46mondego>    check();<newline46mondego>  }<newline46mondego>  public void removeUpdate(DocumentEvent e) {<newline46mondego>    check();<newline46mondego>  }<newline46mondego>  public void insertUpdate(DocumentEvent e) {<newline46mondego>    check();<newline46mondego>  }<newline46mondego><newline46mondego>  public void check() {<newline46mondego>     if (JTextArea.getLineCount()>4){//make sure no more than 4 lines<newline46mondego>       JOptionPane.showMessageDialog(null, <doubleQuotes46>Error: Cant have more than 4 lines<doubleQuotes46>, JOptionPane.ERROR_MESSAGE);<newline46mondego>     }<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"6667splitHere46","12144074splitHere46","javac gendemo/GenDemo2.java"
"6668splitHere46","12144074splitHere46","java -cp . gendemo.GenDemo2"
"6669splitHere46","12144129splitHere46","PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();<newline46mondego>DocFlavor flavor = DocFlavor.INPUT_STREAM.AUTOSENSE;<newline46mondego>PrintService printService[] = PrintServiceLookup.lookupPrintServices(flavor, pras);<newline46mondego>PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();<newline46mondego>PrintService service = ServiceUI.printDialog(GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration(), 200, 200,<newline46mondego>                      printService, defaultService, flavor, pras);<newline46mondego>if (service != null) {<newline46mondego>    DocPrintJob job = service.createPrintJob();<newline46mondego>    FileInputStream fis = new FileInputStream(doc);<newline46mondego>    DocAttributeSet das = new HashDocAttributeSet();<newline46mondego>    Doc document = new SimpleDoc(fis, flavor, das);<newline46mondego>    job.print(document, pras);<newline46mondego>}<newline46mondego>"
"6670splitHere46","12144220splitHere46","public class ScreenshotTestRule implements MethodRule {<newline46mondego>    public Statement apply(final Statement statement, final FrameworkMethod frameworkMethod, final Object o) {<newline46mondego>        return new Statement() {<newline46mondego>            @Override<newline46mondego>            public void evaluate() throws Throwable {<newline46mondego>                try {<newline46mondego>                    statement.evaluate();<newline46mondego><newline46mondego>                } catch (Throwable t) {<newline46mondego>                    captureScreenshot(frameworkMethod.getName());<newline46mondego>                    throw t; // rethrow to allow the failure to be reported to JUnit                     <newline46mondego>                } finally {<newline46mondego>                    tearDown();<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            public void tearDown() {<newline46mondego>                //logout to the system;<newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>            public void captureScreenshot(String fileName) {<newline46mondego>                try {<newline46mondego>                    new File(<doubleQuotes46>target/surefire-reports/screenshot<doubleQuotes46>).mkdirs(); // Insure directory is there<newline46mondego>                    FileOutputStream out = new FileOutputStream(<doubleQuotes46>target/surefire-reports/screenshot/screenshot-<doubleQuotes46> + fileName + <doubleQuotes46>.png<doubleQuotes46>);<newline46mondego>                    out.write(((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES));<newline46mondego>                    out.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                    // No need to crash the tests if the screenshot fails<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6671splitHere46","12144321splitHere46","Reader"
"6672splitHere46","12144321splitHere46","InputStream"
"6673splitHere46","12144321splitHere46","PropertyResourceBundle"
"6674splitHere46","12144365splitHere46","1 @Override<newline46mondego>2 public Intent getMainApplicationIntent() {<newline46mondego>3     return new Intent(Intent.ACTION_VIEW, Uri.parse(getString(R.string.app_url)));<newline46mondego>4 }<newline46mondego>"
"6675splitHere46","12144365splitHere46","1  @Override<newline46mondego>2  public Intent getMainApplicationIntent() {<newline46mondego>3      return new Intent(<newline46mondego>4          Intent.ACTION_VIEW, <newline46mondego>5          Uri.parse(<newline46mondego>6              getString(<newline46mondego>7                  R.string.app_url<newline46mondego>8              )<newline46mondego>9          )<newline46mondego>10     );<newline46mondego>11 }<newline46mondego>"
"6676splitHere46","12144500splitHere46","!="
"6677splitHere46","12144500splitHere46","ne"
"6678splitHere46","12144500splitHere46","<c:if test=<doubleQuotes46>${content.contentType.name ne 'MCE'}<doubleQuotes46>><newline46mondego>    <%-- snip --%><newline46mondego></c:if><newline46mondego>"
"6679splitHere46","12144506splitHere46","Arrays.asList()"
"6680splitHere46","12144506splitHere46","public static WeaponsData AngelicAxe = new WeaponsData(<newline46mondego>    new ArrayList<NPC>(<newline46mondego>       Arrays.asList(<newline46mondego>          new NPC(<doubleQuotes46>Rat<doubleQuotes46>, <doubleQuotes46>None<doubleQuotes46>, 0),<newline46mondego>          new NPC(<doubleQuotes46>Dog<doubleQuotes46>, <doubleQuotes46>None<doubleQuotes46>, 0)<newline46mondego>       )<newline46mondego>    ),<newline46mondego>// etc<newline46mondego>);<newline46mondego>"
"6681splitHere46","12144506splitHere46","public static WeaponsData AngelicAxe = new WeaponsData(<newline46mondego>    Lists.newArrayList(<newline46mondego>        new NPC(<doubleQuotes46>Rat<doubleQuotes46>, <doubleQuotes46>None<doubleQuotes46>, 0),<newline46mondego>        new NPC(<doubleQuotes46>Dog<doubleQuotes46>, <doubleQuotes46>None<doubleQuotes46>, 0)<newline46mondego>    ),<newline46mondego>// etc.<newline46mondego>);<newline46mondego>"
"6682splitHere46","12144506splitHere46","public static final WeaponsData ANGELIC_AXE = new WeaponsData(<newline46mondego>    ImmutableList.of(<newline46mondego>        new NPC(<doubleQuotes46>Rat<doubleQuotes46>, <doubleQuotes46>None<doubleQuotes46>, 0),<newline46mondego>        new NPC(<doubleQuotes46>Dog<doubleQuotes46>, <doubleQuotes46>None<doubleQuotes46>, 0)<newline46mondego>    ),<newline46mondego>// etc.<newline46mondego>);<newline46mondego>"
"6683splitHere46","12144534splitHere46","JSONArray"
"6684splitHere46","12144534splitHere46","Collection"
"6685splitHere46","12144534splitHere46","JSONObject"
"6686splitHere46","12144534splitHere46","put()"
"6687splitHere46","12144534splitHere46","JSONArray"
"6688splitHere46","12144534splitHere46","JSONObject.put()"
"6689splitHere46","12144534splitHere46","jsonObject.put(<doubleQuotes46>aoColumnDefs<doubleQuotes46>,(Object)arr);<newline46mondego>"
"6690splitHere46","12144534splitHere46","JSONObject.put(String,Collection)"
"6691splitHere46","12144605splitHere46","servlet"
"6692splitHere46","12144605splitHere46","url-pattern"
"6693splitHere46","12144605splitHere46","@WebServlet(name = <doubleQuotes46>SampleServlet<doubleQuotes46>, urlPatterns = {<doubleQuotes46>/sample<doubleQuotes46>})<newline46mondego>public class SampleServlet extends HttpServlet {<newline46mondego><newline46mondego>@Override<newline46mondego>protected void doGet(HttpServletRequest request, HttpServletResponse response)<newline46mondego>        throws ServletException, IOException {<newline46mondego>   request.setAttribute(<doubleQuotes46>ID<doubleQuotes46>, <doubleQuotes46>MyID<doubleQuotes46>);<newline46mondego>   request.setAttribute(<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>MyName<doubleQuotes46>);<newline46mondego>   RequestDispatcher dispatcher = request<newline46mondego>                       .getRequestDispatcher(<doubleQuotes46>/MangeNotifications.jsp<doubleQuotes46>);  <newline46mondego>   if (dispatcher != null){  <newline46mondego>      dispatcher.forward(request, response);  <newline46mondego>   }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6694splitHere46","12144605splitHere46","<br/>ID : ${ID}     Or scriptlets  <%-- <%=request.getAttribute(<doubleQuotes46>ID<doubleQuotes46>)%>  --%> <newline46mondego><br/>ID : ${Name}<newline46mondego>"
"6695splitHere46","12144605splitHere46","http://localhost:8084/your_context/sample<newline46mondego>"
"6696splitHere46","12144645splitHere46","Timer"
"6697splitHere46","12144645splitHere46","@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.main);<newline46mondego><newline46mondego>    TimerTask task = new RepeatingTask();<newline46mondego>    Timer timer = new Timer();<newline46mondego>    timer.scheduleAtFixedRate(task, 0, 3000);<newline46mondego>}<newline46mondego><newline46mondego>public class RepeatingTask extends TimerTask {<newline46mondego><newline46mondego> private int len = 0; <newline46mondego><newline46mondego> private byte[] input = new byte[len];<newline46mondego><newline46mondego><newline46mondego> public RepeatingTask() {<newline46mondego>     //try {<newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>Before inputJSON String<doubleQuotes46>);<newline46mondego>        //inputJSON = dataInputStream.readUTF();<newline46mondego>        //URL url = new URL(<doubleQuotes46>tcp://23.23.175.213:1337<doubleQuotes46>);<newline46mondego>        //inputJSON = dataInputStream.readUTF();<newline46mondego>        //inputstrrd = new InputStreamReader(socket.getInputStream());<newline46mondego>        String hello = <doubleQuotes46>hello world<doubleQuotes46>;<newline46mondego>        //String inputJSON = getStringFromBuffer(new InputStreamReader(socket.getInputStream()));<newline46mondego><newline46mondego>        //Convert <newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>After inputJSON String:<doubleQuotes46> + inputJSON); <newline46mondego>     /*}<newline46mondego>     catch (UnknownHostException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>     } catch (IOException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>     }*/<newline46mondego><newline46mondego>     //LOOK HERE FIRST  <newline46mondego>     //inputJSON is what is received back from the server - Take the inputJSON <newline46mondego>     //String and use regular expressions HERE to remove all the other characters in the <newline46mondego>     //string except the payload JSON.<newline46mondego>     //refreshViewModels(inputJSON);<newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public void run() { <newline46mondego>      try {<newline46mondego>          Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON<doubleQuotes46>);<newline46mondego>          //outputstrwr.write(outputJSONserv);  //UNCOMMENT IF NEED TO SEND DATA TO GET JSON BACK<newline46mondego>          //inputJSON = ConvertByteArrayToString(getBytesFromInputStream(inputStr));<newline46mondego>          inputJSON = ConvertByteArrayToString(getFileBytes(inputStr));<newline46mondego>      } catch (IOException e) {<newline46mondego>          // TODO Auto-generated catch block<newline46mondego>          e.printStackTrace();<newline46mondego>      }<newline46mondego><newline46mondego>      Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON2:<doubleQuotes46> + inputJSON);<newline46mondego>      refreshViewModels(inputJSON);<newline46mondego> }<newline46mondego>"
"6698splitHere46","12144650splitHere46","public abstract class Holidays {<newline46mondego><newline46mondego>    protected final static Calendar calendar = Calendar.getInstance();<newline46mondego><newline46mondego>    protected static class Holiday {<newline46mondego><newline46mondego>        private int month;<newline46mondego>        private int day;<newline46mondego><newline46mondego>        protected Holiday(int month, int day) {<newline46mondego>            this.month = month;<newline46mondego>            this.day = day;<newline46mondego>        }<newline46mondego><newline46mondego>        protected Holiday(Date date) {<newline46mondego>            calendar.setTime(date);<newline46mondego>            this.month = calendar.get(Calendar.MONTH) + 1;<newline46mondego>            this.day = calendar.get(Calendar.DAY_OF_MONTH);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean equals(Object obj) {<newline46mondego>            return obj instanceof Holiday && obj.hashCode() == hashCode();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int hashCode() {<newline46mondego>            return Arrays.hashCode(new Object[] { month, day });<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public abstract boolean contains(Date date);<newline46mondego><newline46mondego>}<newline46mondego>"
"6699splitHere46","12144650splitHere46","public class StaticHolidays extends Holidays {<newline46mondego><newline46mondego>    private Set<Holiday> staticHolidays = new HashSet<Holiday>();<newline46mondego><newline46mondego>    public StaticHolidays() {<newline46mondego>        staticHolidays.add(new Holiday(1, 1));<newline46mondego>        staticHolidays.add(new Holiday(5, 1));<newline46mondego>        staticHolidays.add(new Holiday(5, 8));<newline46mondego>        staticHolidays.add(new Holiday(7, 14));<newline46mondego>        staticHolidays.add(new Holiday(8, 15));<newline46mondego>        staticHolidays.add(new Holiday(11, 1));<newline46mondego>        staticHolidays.add(new Holiday(11, 11));<newline46mondego>        staticHolidays.add(new Holiday(12, 25));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean contains(Date date) {<newline46mondego>        Holiday staticHoliday = new Holiday(date);<newline46mondego>        return staticHolidays.contains(staticHoliday);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6700splitHere46","12144650splitHere46","public class DynamicHolidays extends Holidays {<newline46mondego><newline46mondego>    private Map<Integer, Set<Holiday>> dynamicHolidays = new HashMap<Integer, Set<Holiday>>();<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean contains(Date date) {<newline46mondego>        calendar.setTime(date);<newline46mondego>        int year = calendar.get(Calendar.YEAR);<newline46mondego>        if (!dynamicHolidays.containsKey(year)) {<newline46mondego>            addYear(year);<newline46mondego>        }<newline46mondego>        Set<Holiday> dynamicHolidays = this.dynamicHolidays.get(year);<newline46mondego>        Holiday dynamicHoliday = new Holiday(date);<newline46mondego>        return dynamicHolidays.contains(dynamicHoliday);<newline46mondego>    }<newline46mondego><newline46mondego>    private void addYear(int year) {<newline46mondego>        Date easterSunday = getEasterSunday(year);<newline46mondego>        Set<Holiday> dynamicHolidays = new HashSet<Holiday>();<newline46mondego>        dynamicHolidays.add(new Holiday(getEasterMonday(easterSunday)));<newline46mondego>        dynamicHolidays.add(new Holiday(getAscensionThursday(easterSunday)));<newline46mondego>        dynamicHolidays.add(new Holiday(getPentecostMonday(easterSunday)));<newline46mondego>        this.dynamicHolidays.put(year, dynamicHolidays);<newline46mondego>    }<newline46mondego><newline46mondego>    public static Date getEasterSunday(int year) {<newline46mondego><newline46mondego>        int initialYear = year;<newline46mondego><newline46mondego>        if (year < 1900) {<newline46mondego>            year += 1900;<newline46mondego>        }<newline46mondego><newline46mondego>        int a = year % 19;<newline46mondego>        int b = year / 100;<newline46mondego>        int c = year % 100;<newline46mondego>        int d = b / 4;<newline46mondego>        int e = b % 4;<newline46mondego>        int f = (b + 8) / 25;<newline46mondego>        int g = (b - f + 1) / 3;<newline46mondego>        int h = (19 * a + b - d - g + 15) % 30;<newline46mondego>        int i = c / 4;<newline46mondego>        int j = c % 4;<newline46mondego>        int k = (32 + 2 * e + 2 * i - h - j) % 7;<newline46mondego>        int l = (a + 11 * h + 22 * k) / 451;<newline46mondego>        int m = (h + k - 7 * l + 114) % 31;<newline46mondego><newline46mondego>        int month = (h + k - 7 * l + 114) / 31 - 1;<newline46mondego>        int day = m + 1;<newline46mondego><newline46mondego>        calendar.set(initialYear, month, day);<newline46mondego>        return calendar.getTime();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static Date getEasterMonday(Date easterSunday) {<newline46mondego>        calendar.setTime(easterSunday);<newline46mondego>        calendar.add(Calendar.DAY_OF_MONTH, 1);<newline46mondego>        return calendar.getTime();<newline46mondego>    }<newline46mondego><newline46mondego>    public static Date getAscensionThursday(Date easterSunday) {<newline46mondego>        calendar.setTime(easterSunday);<newline46mondego>        calendar.add(Calendar.DAY_OF_MONTH, 39);<newline46mondego>        return calendar.getTime();<newline46mondego>    }<newline46mondego><newline46mondego>    public static Date getPentecostMonday(Date easterSunday) {<newline46mondego>        calendar.setTime(easterSunday);<newline46mondego>        calendar.add(Calendar.DAY_OF_MONTH, 50);<newline46mondego>        return calendar.getTime();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6701splitHere46","12144650splitHere46","public class DateHelper {<newline46mondego><newline46mondego>    private final static Calendar calendar = Calendar.getInstance();<newline46mondego>    private final static DateFormat formatter = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego><newline46mondego>    private final static Holidays staticHolidays = new StaticHolidays();<newline46mondego>    private final static Holidays dynamicHolidays = new DynamicHolidays();<newline46mondego><newline46mondego>    public static int getBusinessDaysCount(Date d1, Date d2) {<newline46mondego><newline46mondego>        try {<newline46mondego>            d1 = formatter.parse(formatter.format(d1));<newline46mondego>            d2 = formatter.parse(formatter.format(d2));<newline46mondego>        } catch (ParseException e) {<newline46mondego>            throw new DateHelperRuntimeException(e);<newline46mondego>        }<newline46mondego><newline46mondego>        if (!isWorkingDay(d1) || !isWorkingDay(d2)) {<newline46mondego>            throw new DateHelperRuntimeException(<doubleQuotes46>Initial dates should both be working days<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        int businessDaysCount = 0;<newline46mondego><newline46mondego>        if (d1.equals(d2)) {<newline46mondego>            return businessDaysCount;<newline46mondego>        }<newline46mondego><newline46mondego>        Date min = d1.before(d2) ? d1 : d2;<newline46mondego>        Date max = min.equals(d2) ? d1 : d2;<newline46mondego><newline46mondego>        calendar.setTime(min);<newline46mondego>        do {<newline46mondego>            calendar.add(Calendar.DAY_OF_MONTH, 1);<newline46mondego>            if (isWorkingDay(calendar.getTime())) {<newline46mondego>                businessDaysCount++;<newline46mondego>            }<newline46mondego>        } while (calendar.getTime().before(max));<newline46mondego><newline46mondego>        return businessDaysCount;<newline46mondego>    }<newline46mondego><newline46mondego>    public static boolean isWorkingDay(Date date) {<newline46mondego>        calendar.setTime(date);<newline46mondego>        int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);<newline46mondego>        if (dayOfWeek == Calendar.SATURDAY || dayOfWeek == Calendar.SUNDAY) {<newline46mondego>            return false;<newline46mondego>        } else if (staticHolidays.contains(date)) {<newline46mondego>            return false;<newline46mondego>        } else if (dynamicHolidays.contains(date)) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public static class DateHelperRuntimeException extends RuntimeException {<newline46mondego><newline46mondego>        private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>        public DateHelperRuntimeException(String message) {<newline46mondego>            super(message);<newline46mondego>        }<newline46mondego><newline46mondego>        public DateHelperRuntimeException(Throwable e) {<newline46mondego>            super(e);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6702splitHere46","12144650splitHere46","DateHelper.getBusinessDaysCount(d1, d2);<newline46mondego>"
"6703splitHere46","12144697splitHere46","JFrame"
"6704splitHere46","12144697splitHere46","newFrame.setLocation(previousLocation.x + constant, previoudLocation.y + constant);<newline46mondego>"
"6705splitHere46","12144697splitHere46","getLocation()"
"6706splitHere46","12144697splitHere46","JFrame"
"6707splitHere46","12144724splitHere46","@Override<newline46mondego>public void execute(Database database) throws CustomChangeException {<newline46mondego>    JdbcConnection connection = (JdbcConnection) database.getConnection();<newline46mondego>    DataSource dataSource = new SingleConnectionDataSource(connection.getUnderlyingConnection(), true);<newline46mondego>    JdbcTemplate template = new JdbcTemplate(dataSource, false);<newline46mondego>}<newline46mondego>"
"6708splitHere46","12144883splitHere46","model"
"6709splitHere46","12144883splitHere46","<view-state id=<doubleQuotes46>SchoolVisitReport<doubleQuotes46> view=<doubleQuotes46>SchoolVisitReportSmall.jsp<doubleQuotes46> model=<doubleQuotes46>visit<doubleQuotes46>><newline46mondego><newline46mondego><transition on=<doubleQuotes46>submit<doubleQuotes46> to=<doubleQuotes46>endState<doubleQuotes46> /><newline46mondego><transition on=<doubleQuotes46>cancel<doubleQuotes46> to=<doubleQuotes46>endState<doubleQuotes46> bind=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego></view-state><newline46mondego>"
"6710splitHere46","12144883splitHere46","visit"
"6711splitHere46","12144883splitHere46","command/modelAttribute"
"6712splitHere46","12144883splitHere46","model"
"6713splitHere46","12144897splitHere46","${workspace_loc:<resource path>}"
"6714splitHere46","12145018splitHere46","setThreadPriority"
"6715splitHere46","12145018splitHere46","getThreadPriority"
"6716splitHere46","12145018splitHere46","poolExecutor.execute (new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);<newline46mondego>         ...<newline46mondego>    }<newline46mondego>"
"6717splitHere46","12145040splitHere46","enum EnumA {<newline46mondego>    FIRST,<newline46mondego>    SECOND,<newline46mondego>    THIRD<newline46mondego>}<newline46mondego><newline46mondego>enum EnumB {<newline46mondego>    FIRST,<newline46mondego>    SECOND,<newline46mondego>    THIRD<newline46mondego>}<newline46mondego><newline46mondego>private static <A extends Enum<A>, B extends Enum<B>> List<B> enumListFromEnumList(List<A> sourceEnumsList, Class<B> classObject) {<newline46mondego>    List<B> enums = new ArrayList<B>();<newline46mondego><newline46mondego>    if (sourceEnumsList != null) {<newline46mondego>        for (A enumObject : sourceEnumsList) {<newline46mondego>            enums.add(Enum.valueOf(classObject, enumObject.toString().toUpperCase()));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return enums;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    List<EnumA> listA = new ArrayList<EnumA>();<newline46mondego>    listA.add(EnumA.FIRST);<newline46mondego>    listA.add(EnumA.THIRD);<newline46mondego>    List<EnumB> listB = enumListFromEnumList(listA, EnumB.class);<newline46mondego>    System.out.println(listB);<newline46mondego>}<newline46mondego>"
"6718splitHere46","12145049splitHere46","class Team<newline46mondego>{<newline46mondego>    public String teamName;<newline46mondego>    public int score;<newline46mondego>    public String category;<newline46mondego>    public int numberOfTurns;<newline46mondego><newline46mondego>    public Team(...){...} // the constructor<newline46mondego>}<newline46mondego>"
"6719splitHere46","12145049splitHere46","List<Team> list = new ArrayList<Team>();<newline46mondego>"
"6720splitHere46","12145049splitHere46","list.add(new Team(...));<newline46mondego>"
"6721splitHere46","12145049splitHere46","list.get(0).score++;<newline46mondego>"
"6722splitHere46","12145092splitHere46","class"
"6723splitHere46","12145092splitHere46","List"
"6724splitHere46","12145092splitHere46","ArrayList"
"6725splitHere46","12145092splitHere46","List"
"6726splitHere46","12145092splitHere46","@ElementList<newline46mondego>protected ArrayList<Element> elements;<newline46mondego>"
"6727splitHere46","12145092splitHere46","@Path(<doubleQuotes46>elements<doubleQuotes46>)<newline46mondego>@ElementList(inline=true)<newline46mondego>protected List<Element> elements;<newline46mondego>"
"6728splitHere46","12145135splitHere46","Image image;<newline46mondego>image = new Image(texture1);<newline46mondego>image = new Image(texture2); //new Image(texture1) can now be GC'ed<newline46mondego>"
"6729splitHere46","12145135splitHere46","new Image(texture1)"
"6730splitHere46","12145145splitHere46","var autoRefreshCheckBox : CheckBox = CheckBox {<newline46mondego>            text: <doubleQuotes46>Autorefresh<doubleQuotes46><newline46mondego> ..<newline46mondego>"
"6731splitHere46","12145210splitHere46","isAssignableFrom"
"6732splitHere46","12145210splitHere46","if (YourInterface.class.isAssignableFrom(clazz)) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6733splitHere46","12145215splitHere46","<assertions>"
"6734splitHere46","12145215splitHere46","<project>"
"6735splitHere46","12145215splitHere46","<junit>"
"6736splitHere46","12145215splitHere46","<assertions><enable/></assertions>"
"6737splitHere46","12145215splitHere46","<junit>"
"6738splitHere46","12145220splitHere46","false"
"6739splitHere46","12145220splitHere46","<forkMode>"
"6740splitHere46","12145220splitHere46","false"
"6741splitHere46","12145220splitHere46","once"
"6742splitHere46","12145252splitHere46","mail"
"6743splitHere46","12145252splitHere46","mailx"
"6744splitHere46","12145252splitHere46","mutt"
"6745splitHere46","12145252splitHere46","mutt -s Subject -a file send@to<newline46mondego>"
"6746splitHere46","12145252splitHere46","stderr"
"6747splitHere46","12145252splitHere46","mutt -s Subject -a info.xls send@to < logfile<newline46mondego>"
"6748splitHere46","12145304splitHere46","public class NewApplication extends OldSuperApplication {}<newline46mondego>"
"6749splitHere46","12145304splitHere46","public static void setApplication(RGCApplication a) {<newline46mondego>    CONSTANT_1 = a.CONSTANT_1;<newline46mondego>    ...<newline46mondego>} <newline46mondego>"
"6750splitHere46","12145304splitHere46","NewApplication.setApplication(new AApplication());<newline46mondego>"
"6751splitHere46","12145304splitHere46","NewApplication.setApplication(new BApplication());<newline46mondego>"
"6752splitHere46","12145335splitHere46","StyleContext context = new StyleContext();<newline46mondego>    StyledDocument document = new DefaultStyledDocument(context);<newline46mondego>    Style style = context.getStyle(StyleContext.DEFAULT_STYLE);<newline46mondego>    StyleConstants.setAlignment(style, StyleConstants.ALIGN_CENTER);<newline46mondego>    JTextPane output = new JTextPane(document);<newline46mondego>    output.setFont(font);  <newline46mondego>"
"6753splitHere46","12145362splitHere46","File.listRoots()"
"6754splitHere46","12145362splitHere46","/"
"6755splitHere46","12145362splitHere46","/Volumes"
"6756splitHere46","12145362splitHere46","if"
"6757splitHere46","12145362splitHere46","getDriveRunningOn()"
"6758splitHere46","12145362splitHere46","new File(<doubleQuotes46>/Volumes<doubleQuotes46>).listFiles()"
"6759splitHere46","12145362splitHere46","File.listRoots()"
"6760splitHere46","12145502splitHere46","brighter()"
"6761splitHere46","12145502splitHere46","import java.awt.Color;<newline46mondego><newline46mondego>public class QuickTest {<newline46mondego><newline46mondego>    public static void brighten(Color color, int d) {<newline46mondego>        System.out.println(<doubleQuotes46>brighten<doubleQuotes46>);<newline46mondego>        while(d > 0)<newline46mondego>        {<newline46mondego>            System.out.println(color);<newline46mondego>            color = color.brighter();<newline46mondego>            d = d-1;<newline46mondego>        }<newline46mondego>        System.out.println(color);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        int d = 3;<newline46mondego>        brighten(Color.red,3);<newline46mondego>        brighten(new Color(45,125,0),3);<newline46mondego>        brighten(new Color(45,125,1),3);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6762splitHere46","12145502splitHere46","brighten<newline46mondego>java.awt.Color[r=255,g=0,b=0]<newline46mondego>java.awt.Color[r=255,g=0,b=0]<newline46mondego>java.awt.Color[r=255,g=0,b=0]<newline46mondego>java.awt.Color[r=255,g=0,b=0]<newline46mondego>brighten<newline46mondego>java.awt.Color[r=45,g=125,b=0]<newline46mondego>java.awt.Color[r=64,g=178,b=0]<newline46mondego>java.awt.Color[r=91,g=254,b=0]<newline46mondego>java.awt.Color[r=130,g=255,b=0]<newline46mondego>brighten<newline46mondego>java.awt.Color[r=45,g=125,b=1]<newline46mondego>java.awt.Color[r=64,g=178,b=4]<newline46mondego>java.awt.Color[r=91,g=254,b=5]<newline46mondego>java.awt.Color[r=130,g=255,b=7]<newline46mondego>"
"6763splitHere46","12145502splitHere46","brighten(new Color(0,0,0),3);<newline46mondego>"
"6764splitHere46","12145502splitHere46","brighten<newline46mondego>java.awt.Color[r=0,g=0,b=0]<newline46mondego>java.awt.Color[r=3,g=3,b=3]<newline46mondego>java.awt.Color[r=4,g=4,b=4]<newline46mondego>java.awt.Color[r=5,g=5,b=5]<newline46mondego>"
"6765splitHere46","12145525splitHere46","Look and Feel"
"6766splitHere46","12145525splitHere46","Look and Feel"
"6767splitHere46","12145525splitHere46","Object<newline46mondego>           |<newline46mondego>        Component<newline46mondego>           |<newline46mondego>        Container<newline46mondego>  ---------|---------<newline46mondego><newline46mondego>  |                 |<newline46mondego>JComponent        Window<newline46mondego>  |                 |<newline46mondego>JPanel            Frame<newline46mondego>                    |<newline46mondego>                  JFrame<newline46mondego>"
"6768splitHere46","12145525splitHere46","AWT component"
"6769splitHere46","12145525splitHere46","Swing component"
"6770splitHere46","12145565splitHere46","Iterator itr = myList.iterator();<newline46mondego><newline46mondego>while(itr.hasNext())<newline46mondego>{<newline46mondego>    Object o = itr.next();<newline46mondego><newline46mondego>    if(o meets some condition)<newline46mondego>    { <newline46mondego>        //YOURE MODIFYING THE LIST<newline46mondego>        myList.remove(o);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6771splitHere46","12145565splitHere46","while(itr.hasNext())<newline46mondego>{<newline46mondego>     Object o = itr.next();<newline46mondego><newline46mondego>     try<newline46mondego>     {<newline46mondego>         if(o meets some condition)<newline46mondego>            myList.remove(o);<newline46mondego>     }<newline46mondego>     catch(ConcurrentModificationException e)<newline46mondego>     {<newline46mondego>         //Whoops I abused my iterator. Do something else.<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"6772splitHere46","12145728splitHere46","TRUE AND NOT (TRUE AND FALSE)"
"6773splitHere46","12145728splitHere46","A AND TRUE = TRUE"
"6774splitHere46","12145780splitHere46","Customer"
"6775splitHere46","12145780splitHere46","Customer"
"6776splitHere46","12145780splitHere46","Customer"
"6777splitHere46","12145780splitHere46","Customer"
"6778splitHere46","12145780splitHere46","Customer"
"6779splitHere46","12145780splitHere46","JTable"
"6780splitHere46","12145780splitHere46","Customer"
"6781splitHere46","12145813splitHere46","struts.xml"
"6782splitHere46","12145813splitHere46","tiles"
"6783splitHere46","12145813splitHere46","jQuery"
"6784splitHere46","12145813splitHere46","Ajax"
"6785splitHere46","12145813splitHere46","<!-- This is the normal action the users select from menu --><newline46mondego>    <action name=<doubleQuotes46>loadBrokerReport<doubleQuotes46> method=<doubleQuotes46>loadBrokerReport<doubleQuotes46> class=<doubleQuotes46>ee.reinmets.intra.action.BrokerReportsAction<doubleQuotes46>><newline46mondego>        <result type=<doubleQuotes46>tiles<doubleQuotes46>>brokerReport</result><newline46mondego>    </action><newline46mondego><newline46mondego>    <!-- This is the action called via ajax --><newline46mondego>    <action name=<doubleQuotes46>loadBrokerReportAjax<doubleQuotes46> method=<doubleQuotes46>loadBrokerReport<doubleQuotes46> class=<doubleQuotes46>ee.reinmets.intra.action.BrokerReportsAction<doubleQuotes46>><newline46mondego>        <result>/WEB-INF/pages/brokerReports/ajaxReport.jsp</result><newline46mondego>    </action><newline46mondego><newline46mondego>    <!-- This is the tile i'm referencing above, in tiles.xml --><newline46mondego>    <definition name=<doubleQuotes46>brokerReport<doubleQuotes46> extends=<doubleQuotes46>default<doubleQuotes46>><newline46mondego>      <put-attribute name=<doubleQuotes46>body<doubleQuotes46> value=<doubleQuotes46>/WEB-INF/pages/brokerReports/normalReport.jsp<doubleQuotes46> /><newline46mondego>    </definition><newline46mondego>"
"6786splitHere46","12145979splitHere46","HeadMethod head = new HeadMethod(<doubleQuotes46>http://jakarta.apache.org<doubleQuotes46>);<newline46mondego>// execute the method and handle any error responses.<newline46mondego>...<newline46mondego>// Retrieve all the headers.<newline46mondego>Header[] headers = head.getResponseHeaders();<newline46mondego><newline46mondego>// Retrieve just the last modified header value.<newline46mondego>String lastModified = head.getResponseHeader(<doubleQuotes46>last-modified<doubleQuotes46>).getValue();<newline46mondego>"
"6787splitHere46","12146073splitHere46","Green UML"
"6788splitHere46","12146073splitHere46","euml2"
"6789splitHere46","12146440splitHere46","this.getClass.getResourceAsStream (<doubleQuotes46><filename><doubleQuotes46>)"
"6790splitHere46","12146440splitHere46","this.getClass.getResource (<doubleQuotes46><filename><doubleQuotes46>).toString ().substring (5)"
"6791splitHere46","12146654splitHere46","Styled Text Areas"
"6792splitHere46","12146654splitHere46","JEditorPane"
"6793splitHere46","12146663splitHere46","val"
"6794splitHere46","12146663splitHere46","str.getBytes()"
"6795splitHere46","12146663splitHere46","arr"
"6796splitHere46","12146663splitHere46","String str = new String(<doubleQuotes46>hi<doubleQuotes46>);<newline46mondego>String val = Hex.encodeHexString(str.getBytes());<newline46mondego>root.setString(str);<newline46mondego>root.setArr(val.getBytes());<newline46mondego>"
"6797splitHere46","12146663splitHere46","String str = new String(<doubleQuotes46>hi<doubleQuotes46>);<newline46mondego>String val = Hex.encodeHexString(str.getBytes());<newline46mondego>root.setString(str);<newline46mondego>root.setArr(str.getBytes());<newline46mondego>"
"6798splitHere46","12146663splitHere46","val=6869<newline46mondego>getString =hi<newline46mondego>getArr=hi<newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><root xsi:schemaLocation=<doubleQuotes46>http://www.example.com/schema.xsd<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>><newline46mondego>    <string>hi</string><newline46mondego>    <a>6869</a><newline46mondego></root><newline46mondego>"
"6799splitHere46","12146663splitHere46","String str = new String(<doubleQuotes46>hi<doubleQuotes46>);<newline46mondego>    System.out.print(<doubleQuotes46>String:  <doubleQuotes46> + str);<newline46mondego>    System.out.println(<doubleQuotes46> hexBinary:  <doubleQuotes46> + Hex.encodeHexString(str.getBytes()));<newline46mondego>    String val = Hex.encodeHexString(str.getBytes());<newline46mondego>    System.out.print(<doubleQuotes46>String:  <doubleQuotes46> + val);<newline46mondego>    System.out.println(<doubleQuotes46> hexBinary:  <doubleQuotes46> + Hex.encodeHexString(val.getBytes()));<newline46mondego>"
"6800splitHere46","12146663splitHere46","String:  hi hexBinary:  6869<newline46mondego>String:  6869 hexBinary:  36383639<newline46mondego>"
"6801splitHere46","12146663splitHere46","String"
"6802splitHere46","12146663splitHere46","500000"
"6803splitHere46","12146663splitHere46","package forum12146217;<newline46mondego><newline46mondego>import java.io.*;<newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Root.class);<newline46mondego><newline46mondego>        // Build a long String<newline46mondego>        StringBuilder stringBuilder = new StringBuilder();<newline46mondego>        for(int x=0; x<500000; x++) {<newline46mondego>            stringBuilder.append(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        Root root = new Root();<newline46mondego>        root.setString(stringBuilder.toString());<newline46mondego>        System.out.println(root.getString().length());<newline46mondego><newline46mondego>        // Marshal the object to a StringWriter<newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_ENCODING, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION, <doubleQuotes46>http://www.example.com/schema.xsd<doubleQuotes46>);<newline46mondego>        StringWriter stringWriter = new StringWriter();<newline46mondego>        marshaller.marshal(root, stringWriter);<newline46mondego><newline46mondego>        // Convert StringWriter to String<newline46mondego>        String xml = stringWriter.toString();<newline46mondego>        //System.out.println(xml);<newline46mondego><newline46mondego>        // Unmarshal the XML and check length of long String<newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        Root unmarshalledRoot = (Root) unmarshaller.unmarshal(new StringReader(xml));<newline46mondego>        System.out.println(unmarshalledRoot.getString().length());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6804splitHere46","12146663splitHere46","package forum12146217;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>public class Root {<newline46mondego><newline46mondego>    private String string;<newline46mondego><newline46mondego>    public String getString() {<newline46mondego>        return string;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setString(String string) {<newline46mondego>        this.string = string;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6805splitHere46","12146663splitHere46","500000<newline46mondego>500000<newline46mondego>"
"6806splitHere46","12146769splitHere46","inbound"
"6807splitHere46","12146769splitHere46","NodeList"
"6808splitHere46","12146769splitHere46","final class NodeList extends ArrayList<Node> { }<newline46mondego>"
"6809splitHere46","12146769splitHere46","Object inbound = ois.readObject();<newline46mondego>if (inbound instanceof List<?>) {<newline46mondego>  Type t = inbound.getClass().getGenericSuperclass();<newline46mondego>  if (t instanceof ParameterizedType) {<newline46mondego>    ParameterizedType pt = (ParameterizedType) t;<newline46mondego>    for (Type p : pt.getActualTypeArguments()) {<newline46mondego>      if (p instanceof TypeVariable<?>)<newline46mondego>        System.out.println(<doubleQuotes46>Unknown<doubleQuotes46>);<newline46mondego>      else<newline46mondego>        System.out.println(p); /* Prints <doubleQuotes46>interface Node<doubleQuotes46> */<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6810splitHere46","12146796splitHere46","Collection.remove()"
"6811splitHere46","12146796splitHere46","remove()"
"6812splitHere46","12146829splitHere46","A view that shows items in a vertically scrolling list.<newline46mondego>"
"6813splitHere46","12146829splitHere46","ListAdapter"
"6814splitHere46","12146829splitHere46","ListView"
"6815splitHere46","12146829splitHere46","extend"
"6816splitHere46","12146829splitHere46","getView"
"6817splitHere46","12146834splitHere46","document.getDocumentElement().appendChild(blobKey_E)"
"6818splitHere46","12146991splitHere46","<project><newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>            <groupId>org.apache.maven.plugi ns</groupId><newline46mondego>            <artifactId>maven-compiler-plug in</artifactId><newline46mondego>            <configuration><newline46mondego>            <!-- put your configurations here --><newline46mondego>            </configuration><newline46mondego>            </plugin><newline46mondego>        </plugins><newline46mondego>    </build><newline46mondego></project><newline46mondego>"
"6819splitHere46","12147202splitHere46","mContextualTag"
"6820splitHere46","12147202splitHere46","return"
"6821splitHere46","12147202splitHere46","return"
"6822splitHere46","12147202splitHere46","sswitch_9"
"6823splitHere46","12147202splitHere46","sswitch_d"
"6824splitHere46","12147202splitHere46","sswitch"
"6825splitHere46","12147330splitHere46","052"
"6826splitHere46","12147330splitHere46","0x2a"
"6827splitHere46","12147362splitHere46","\0"
"6828splitHere46","12147362splitHere46","\n"
"6829splitHere46","12147362splitHere46","RecordReader"
"6830splitHere46","12147369splitHere46","Location.hasSpeed()"
"6831splitHere46","12147369splitHere46","Location.getAccuracy()"
"6832splitHere46","12147383splitHere46","SharedPreference"
"6833splitHere46","12147383splitHere46","PreferenceScreen"
"6834splitHere46","12147383splitHere46","PreferenceActivity"
"6835splitHere46","12147383splitHere46","SharedPreference"
"6836splitHere46","12147383splitHere46","onReceive"
"6837splitHere46","12147572splitHere46","Test"
"6838splitHere46","12147572splitHere46","ScreensType"
"6839splitHere46","12147572splitHere46","public void generateXml() throws JAXBException, IOException {<newline46mondego>    Test test = new Test();<newline46mondego>    ScreensType screens = new ScreensType();<newline46mondego>    test.getOption1OrOption2OrOption3().add(screens);<newline46mondego>    ScreenType screen = new ScreenType();<newline46mondego>    screen.setName1(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>    screen.setName2(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>    screen.setName3(<doubleQuotes46>c<doubleQuotes46>);<newline46mondego>    screens.getScreen().add(screen);<newline46mondego><newline46mondego>    File f = new File(<doubleQuotes46>new.xml<doubleQuotes46>);<newline46mondego>    JAXBContext context= JAXBContext.newInstance(<doubleQuotes46>com.q1labs.qa.xmlgenerator.model.generatedxmlclasses<doubleQuotes46>);<newline46mondego>    Marshaller jaxbMarshaller = context.createMarshaller();<newline46mondego>    jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego><newline46mondego>    jaxbMarshaller.marshal(test, f);<newline46mondego>    jaxbMarshaller.marshal(test, System.out);<newline46mondego>}<newline46mondego>"
"6840splitHere46","12147572splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><Test xmlns=<doubleQuotes46>http://ibm.org/seleniumframework<doubleQuotes46>><newline46mondego>    <Option3><newline46mondego>        <Screen name1=<doubleQuotes46>a<doubleQuotes46> name2=<doubleQuotes46>b<doubleQuotes46> name3=<doubleQuotes46>c<doubleQuotes46>/><newline46mondego>    </Option3><newline46mondego></Test><newline46mondego>"
"6841splitHere46","12147575splitHere46","glEnable(GL_BLEND);  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);"
"6842splitHere46","12147626splitHere46","//Declaration <newline46mondego><newline46mondego> private int[] tabDrawables = new int[] {<newline46mondego>                    R.drawable.image1,R.drawable.image2,<newline46mondego>                    R.drawable.image3, R.drawable.image4,<newline46mondego>                    R.drawable.image5};<newline46mondego><newline46mondego><newline46mondego><newline46mondego>     private ArrayList<ImageView> listImages = new ArrayList<ImageView>();<newline46mondego><newline46mondego><newline46mondego>    //When you find your images on the onCreate method<newline46mondego>    //add all images here<newline46mondego><newline46mondego>    listImages.add(imageView1);<newline46mondego>    listImages.add(imageView2);<newline46mondego>        ...<newline46mondego><newline46mondego>    for (int i = 0; i < tabDrawables.length; i++) {<newline46mondego>         listImages.get(i).setImageResource(tabDrawables[i]);<newline46mondego>}<newline46mondego>"
"6843splitHere46","12147648splitHere46","i=i++;<newline46mondego>"
"6844splitHere46","12147701splitHere46","statistic#"
"6845splitHere46","12147701splitHere46",";"
"6846splitHere46","12147701splitHere46",";"
"6847splitHere46","12147701splitHere46",";"
"6848splitHere46","12147715splitHere46","item"
"6849splitHere46","12147715splitHere46","null"
"6850splitHere46","12147715splitHere46","getuserId"
"6851splitHere46","12147715splitHere46","null"
"6852splitHere46","12147715splitHere46","itemsImagesMap.get(item.getuserId())"
"6853splitHere46","12147715splitHere46","null"
"6854splitHere46","12147715splitHere46","toString"
"6855splitHere46","12147715splitHere46","null"
"6856splitHere46","12147786splitHere46","GridLayout"
"6857splitHere46","12147786splitHere46","MigLayout"
"6858splitHere46","12147786splitHere46","GridLayout"
"6859splitHere46","12147786splitHere46","LineBorder"
"6860splitHere46","12147786splitHere46","MigLayout"
"6861splitHere46","12147786splitHere46","this.setLayout(new MigLayout(<doubleQuotes46>ins 0, wrap <doubleQuotes46> + COLS + <doubleQuotes46>, gap 1<doubleQuotes46>, <doubleQuotes46>grow<doubleQuotes46>, <doubleQuotes46>grow<doubleQuotes46>));<newline46mondego><newline46mondego><newline46mondego>        for (int row = 0; row < ROWS; row++)<newline46mondego>            for (int col = 0; col < COLS; col++)<newline46mondego>                this.add(new Location(row, col), <doubleQuotes46>grow<doubleQuotes46>);<newline46mondego>"
"6862splitHere46","12147786splitHere46","this.setLayout(new GridLayout(ROWS, COLS, 1, 1));<newline46mondego>this.setBorder(new LineBorder(Color.RED));<newline46mondego><newline46mondego><newline46mondego>    for (int row = 0; row < ROWS; row++)<newline46mondego>        for (int col = 0; col < COLS; col++)<newline46mondego>            this.add(new Location(row, col));<newline46mondego>"
"6863splitHere46","12147795splitHere46","RefUpdate.link()"
"6864splitHere46","12147795splitHere46","Result updateHead(<newline46mondego>    Repository repo, String newHead, boolean force, boolean detach<newline46mondego>) throws IOException {<newline46mondego>    RefUpdate refUpdate = repo.getRefDatabase().newUpdate(Constants.HEAD, detach);<newline46mondego>    refUpdate.setForceUpdate(force);<newline46mondego>    return refUpdate.link(newHead);<newline46mondego>}<newline46mondego>"
"6865splitHere46","12147800splitHere46","if (Collections.frequency(list, list.get(0)) == list.size()) {<newline46mondego>  /* duplicates */<newline46mondego>}<newline46mondego>"
"6866splitHere46","12147800splitHere46","final int n = list.size();<newline46mondego>if (n == 0 || Collections.frequency(list, list.get(0)) == n) {<newline46mondego>  /* duplicates */<newline46mondego>}<newline46mondego>"
"6867splitHere46","12147800splitHere46","Collections.frequency"
"6868splitHere46","12147800splitHere46","Collections.nCopies(list.get(0), list.size()).equals(list)"
"6869splitHere46","12147829splitHere46","anonymous"
"6870splitHere46","12147829splitHere46","anonymous"
"6871splitHere46","12147829splitHere46","anonymous"
"6872splitHere46","12147829splitHere46","BindRequest"
"6873splitHere46","12147829splitHere46","// exception handling is not shown<newline46mondego>final String dn = ....;<newline46mondego>final byte[] password = ....;<newline46mondego>final BindRequest bindRequest = new SimpleBindRequest(dn,password);<newline46mondego>final LDAPConnection ldapConnection = new LDAPConnection(hostname,port);<newline46mondego>final BindResult bindResult = ldapConnection.bind(bindRequest);<newline46mondego>final ResultCode resultCode = bindResult.getResultCode();<newline46mondego>if(resultCode.equals(ResultCode.SUCCESS))<newline46mondego>{<newline46mondego>    // user is authenticated<newline46mondego>}<newline46mondego>ldapConnection.close();<newline46mondego>"
"6874splitHere46","12147922splitHere46","JTable"
"6875splitHere46","12147922splitHere46","public Object getValueAt(int rowIndex, int columnIndex)"
"6876splitHere46","12147970splitHere46","import org.stringtemplate.v4.*;<newline46mondego>import net.sf.json.*;<newline46mondego><newline46mondego>class STExampleApp {<newline46mondego><newline46mondego>        public static void main(String args[]) {<newline46mondego>                String template = <doubleQuotes46>decl(type, name, value) ::= \<doubleQuotes46><type> <name><init(value)>;\<doubleQuotes46>\n<doubleQuotes46><newline46mondego>                                + <doubleQuotes46>init(v) ::= \<doubleQuotes46><if(v)> = <v><endif>\<doubleQuotes46><doubleQuotes46>;<newline46mondego>                STGroup views = new STGroupString(template);<newline46mondego>                ST decl = views.getInstanceOf(<doubleQuotes46>decl<doubleQuotes46>);<newline46mondego>                decl.add(<doubleQuotes46>type<doubleQuotes46>, <doubleQuotes46>int<doubleQuotes46>);<newline46mondego>                decl.add(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>x<doubleQuotes46>);<newline46mondego>                decl.add(<doubleQuotes46>value<doubleQuotes46>, 12);<newline46mondego>                System.out.println(decl.render());<newline46mondego>        }<newline46mondego><newline46mondego>}<newline46mondego>"
"6877splitHere46","12147995splitHere46","document.getDocumentElement()"
"6878splitHere46","12147995splitHere46","null"
"6879splitHere46","12147995splitHere46","getDocumentElement()"
"6880splitHere46","12147995splitHere46","This is a convenience attribute that allows direct access to the child node that is the root element of the document. <newline46mondego>"
"6881splitHere46","12147995splitHere46","root"
"6882splitHere46","12147995splitHere46","element"
"6883splitHere46","12147995splitHere46","document.appendChild(blobKey_E);"
"6884splitHere46","12147995splitHere46","blobKey_E"
"6885splitHere46","12147995splitHere46","public void write(String name) {<newline46mondego>    try {<newline46mondego>        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>        DocumentBuilder db = dbf.newDocumentBuilder();            <newline46mondego>        Document document = db.newDocument();<newline46mondego><newline46mondego>        Element blobKey_E = document.createElement(<doubleQuotes46>first-name<doubleQuotes46>);<newline46mondego>        blobKey_E.appendChild( document.createTextNode( name ) );<newline46mondego><newline46mondego>        /*<newline46mondego>         * Here blobKey_E is treated as the root element for the document that you've created<newline46mondego>         */<newline46mondego>        document.appendChild(blobKey_E); <newline46mondego>//            // LINE 27 <newline46mondego>//            document.getDocumentElement().appendChild(blobKey_E); // append the new tag under the root<newline46mondego><newline46mondego>        /*<newline46mondego>         * Post this point, if you do a document.getDocumentElement(), it will no longer return <newline46mondego>         * a nullpointerexception because blobKey_E will be treated as the root element.<newline46mondego>         */<newline46mondego><newline46mondego>        TransformerFactory tf = TransformerFactory.newInstance();<newline46mondego>        Transformer transformer = tf.newTransformer();<newline46mondego>        DOMSource source = new DOMSource(document);<newline46mondego>        StreamResult result = new StreamResult(new File(<doubleQuotes46>/home/non-admin/NetBeansProjects/Personal Site_Testers/web/xml/xml_1.xml<doubleQuotes46>));<newline46mondego>        transformer.transform(source, result);            <newline46mondego>    }catch(Exception exc) {<newline46mondego>        exc.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6886splitHere46","12148110splitHere46","contents"
"6887splitHere46","12148110splitHere46","ArrayList"
"6888splitHere46","12148110splitHere46","toString"
"6889splitHere46","12148110splitHere46","equals"
"6890splitHere46","12148110splitHere46","T"
"6891splitHere46","12148110splitHere46","T"
"6892splitHere46","12148110splitHere46","interface Foo {<newline46mondego>  int getSomething();<newline46mondego>  void setSomethingElse(String somethingElse);<newline46mondego>}<newline46mondego><newline46mondego>public class TestClass<T extends Foo> implements AbstractDataType<T> {<newline46mondego>  T[] contents;<newline46mondego><newline46mondego>  public TestClass(int length) {<newline46mondego>    this.contents = (T[])new Object[length];<newline46mondego>  }<newline46mondego><newline46mondego>  public void doSomethingInteresting(int index, String str) {<newline46mondego>    T obj = contents[index];<newline46mondego>    System.out.println(obj.getSomething());<newline46mondego>    obj.setSomethingElse(str);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6893splitHere46","12148110splitHere46","Object"
"6894splitHere46","12148143splitHere46","String className = <doubleQuotes46>org.powertac.common.Rate<doubleQuotes46>;<newline46mondego>String ctorArg = <doubleQuotes46>8<doubleQuotes46>;<newline46mondego>Class<Rate> clazz = (Class<Rate>) Class.forName(className);<newline46mondego>Constructor<Rate> ctor = clazz.getConstructor(String.class);<newline46mondego>Rate rate = ctor.newInstance(ctorArg);<newline46mondego>"
"6895splitHere46","12148143splitHere46","String methodName = <doubleQuotes46>setTariffId<doubleQuotes46>;<newline46mondego>String methodArg = <doubleQuotes46>1<doubleQuotes46>;<newline46mondego>Method setTariffId = clazz.getMethod(methodName, String.class);<newline46mondego>setTariffId.invoke(rate, methodArg);<newline46mondego>"
"6896splitHere46","12148189splitHere46","count"
"6897splitHere46","12148189splitHere46","<c:set var=<doubleQuotes46>count<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46> scope=<doubleQuotes46>page<doubleQuotes46> />"
"6898splitHere46","12148189splitHere46","varStatus"
"6899splitHere46","12148189splitHere46","<c:forEach items=<doubleQuotes46>${usersList}<doubleQuotes46> var=<doubleQuotes46>userNames<doubleQuotes46> varStatus=<doubleQuotes46>stat<doubleQuotes46>><newline46mondego>    <c:set var=<doubleQuotes46>counter<doubleQuotes46> value=<doubleQuotes46>${stat.count + 1}<doubleQuotes46> scope=<doubleQuotes46>page<doubleQuotes46>/><newline46mondego>    <li class=<doubleQuotes46>msImages<doubleQuotes46>><newline46mondego>        <c:choose><newline46mondego>            <c:when test=<doubleQuotes46>${counter lt 4}<doubleQuotes46>><newline46mondego>                <p> <span> I am creating an image</span> </p><newline46mondego>            </c:when><newline46mondego>            <c:when test=<doubleQuotes46>${counter eq 4}<doubleQuotes46>><newline46mondego>                <span>See More </span><newline46mondego>            </c:when><newline46mondego>        </c:choose><newline46mondego>    </li><newline46mondego></c:forEach><newline46mondego>"
"6900splitHere46","12148200splitHere46","disconnect()"
"6901splitHere46","12148206splitHere46","export ArgPath='/Foo Path/foo.zip'<newline46mondego><newline46mondego>$JAVA_HOME/bin/java -cp ./foo.jar foopackage.main -a <doubleQuotes46>$ArgPath<doubleQuotes46><newline46mondego>"
"6902splitHere46","12148347splitHere46","if ( obj.isPrime ( i ) )<newline46mondego>    System.out.println ( i );<newline46mondego>    record.add(i);<newline46mondego>"
"6903splitHere46","12148347splitHere46","if ( obj.isPrime ( i ) ) { // notice the curly bracket<newline46mondego>    System.out.println ( i );<newline46mondego>    record.add(i);<newline46mondego>} // notice the curly bracket<newline46mondego>"
"6904splitHere46","12148388splitHere46","class Password {<newline46mondego>    final String password; // the string to mask<newline46mondego>    Password(String password) { this.password = password; } // needs null protection<newline46mondego>    // allow this to be equal to any string<newline46mondego>    // reconsider this approach if adding it to a map or something?<newline46mondego>    public boolean equals(Object o) {<newline46mondego>        return password.equals(o);<newline46mondego>    }<newline46mondego>    // we don't need anything special that the string doesnt<newline46mondego>    public int hashCode() { return password.hashCode(); }<newline46mondego>    // send stars if anyone asks to see the string - consider sending just<newline46mondego>    // <doubleQuotes46>******<doubleQuotes46> instead of the length, that way you don't reveal the password's length<newline46mondego>    // which might be protected information<newline46mondego>    public String toString() {<newline46mondego>        StringBuilder sb = new StringBuilder();<newline46mondego>        for(int i = 0; < password.length(); i++) <newline46mondego>            sb.append(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>        return sb.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6905splitHere46","12148388splitHere46","class Hangman {<newline46mondego>    final String word;<newline46mondego>    final BitSet revealed;<newline46mondego>    public Hangman(String word) {<newline46mondego>        this.word = word;<newline46mondego>        this.revealed = new BitSet(word.length());<newline46mondego>        reveal(' ');<newline46mondego>        reveal('-');<newline46mondego>    }<newline46mondego>    public void reveal(char c) {<newline46mondego>        for(int i = 0; i < word.length; i++) {<newline46mondego>            if(word.charAt(i) == c) revealed.set(i);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public boolean solve(String guess) {<newline46mondego>        return word.equals(guess);<newline46mondego>    }<newline46mondego>    public String toString() {<newline46mondego>         StringBuilder sb = new StringBuilder(word.length());<newline46mondego>         for(int i = 0; i < word.length; i++) {<newline46mondego>             char c = revealed.isSet(i) ? word.charAt(i) : <doubleQuotes46>*<doubleQuotes46>;<newline46mondego>         }<newline46mondego>         return sb.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6906splitHere46","12148413splitHere46","tweetType < 0 || tweetType > 2"
"6907splitHere46","12148413splitHere46","default:<newline46mondego>    break;<newline46mondego>"
"6908splitHere46","12148413splitHere46","messages"
"6909splitHere46","12148413splitHere46","default"
"6910splitHere46","12148413splitHere46","throw"
"6911splitHere46","12148413splitHere46","return"
"6912splitHere46","12148413splitHere46","default:<newline46mondego>    throw new IllegalArgumentException(<doubleQuotes46>Invalid tweet type : <doubleQuotes46> + tweetType);<newline46mondego>"
"6913splitHere46","12148413splitHere46","tweetType"
"6914splitHere46","12148413splitHere46","enum"
"6915splitHere46","12148413splitHere46","enum TweetType {<newline46mondego>  MENTIONS,<newline46mondego>  DIRECT_MESSAGES,<newline46mondego>  ALL_MESSAGES,<newline46mondego>  ;<newline46mondego>}<newline46mondego>"
"6916splitHere46","12148413splitHere46","int tweetType"
"6917splitHere46","12148413splitHere46","TweetType tweetType"
"6918splitHere46","12148580splitHere46","log4j.category.com.mchange=DEBUG<newline46mondego>"
"6919splitHere46","12148589splitHere46","<rich:autocomplete>"
"6920splitHere46","12148589splitHere46","<rich:suggestionBox>"
"6921splitHere46","12148589splitHere46","<rich:autocomplete>"
"6922splitHere46","12148589splitHere46","<rich:suggestionBox>"
"6923splitHere46","12148589splitHere46","<rich:comboBox>"
"6924splitHere46","12148751splitHere46","public List<Car> searchCars(String makePattern, Set<Security> requiredSecuirtySet) {<newline46mondego><newline46mondego>        CriteriaBuilder cb = em.getCriteriaBuilder();<newline46mondego><newline46mondego>        CriteriaQuery<Car> cq = cb.createQuery(Car.class);<newline46mondego>        Root<Car> car = cq.from(Car.class);<newline46mondego><newline46mondego>        Predicate criteria = cb.conjunction();<newline46mondego>        for (Security security : carQueryData.getSecurityCriteria()) {<newline46mondego>            criteria = cb.and(criteria, car.get(Car_.securityList).in(security) );<newline46mondego>        }<newline46mondego>        // Add more predicates, for instance:<newline46mondego>        // for (Equipment equipment : carQueryData.getEquipmentsCriteria()) {<newline46mondego>        //    criteria = cb.and(criteria, car.get(Car_.equipmentList).in(equipment) );<newline46mondego>        // }<newline46mondego><newline46mondego>        Predicate makePredicate = cb.equal(car.get(Car_.make), makePattern);<newline46mondego><newline46mondego>        cq.select(car).where(makePredicate, criteria);<newline46mondego><newline46mondego>        return em.createQuery(cq).getResultList();<newline46mondego>    }<newline46mondego>"
"6925splitHere46","12148821splitHere46","process = Runtime.getRuntime().exec(new String[]{<doubleQuotes46>java<doubleQuotes46>,<doubleQuotes46>-cp<doubleQuotes46>,<doubleQuotes46>/tmp/test.jar<doubleQuotes46>, <doubleQuotes46>AnotherClass<doubleQuotes46>, <doubleQuotes46>0<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>});<newline46mondego>"
"6926splitHere46","12148821splitHere46","String"
"6927splitHere46","12148848splitHere46","Element"
"6928splitHere46","12148848splitHere46","Element element1 = new Element();<newline46mondego>    screenData.getElement().add(element1);<newline46mondego>    element1.setName(<doubleQuotes46>name1<doubleQuotes46>);<newline46mondego>    element1.setType(<doubleQuotes46>type1<doubleQuotes46>);<newline46mondego>    element1.setValueAttribute(<doubleQuotes46>value1<doubleQuotes46>);<newline46mondego><newline46mondego>    Element element2 = new Element();<newline46mondego>    screenData.getElement().add(element2);<newline46mondego>    element2.setName(<doubleQuotes46>name2<doubleQuotes46>);<newline46mondego>    element2.setType(<doubleQuotes46>type2<doubleQuotes46>);<newline46mondego>    element2.setValueAttribute(<doubleQuotes46>value2<doubleQuotes46>);<newline46mondego>"
"6929splitHere46","12148953splitHere46","java -cp yourjar.jar;JLayer.jar;other_jars FullPathToYourClass<newline46mondego>"
"6930splitHere46","12148953splitHere46","FullPathToYourClass"
"6931splitHere46","12148953splitHere46","com.something.else.ClassName"
"6932splitHere46","12148958splitHere46","Matcher"
"6933splitHere46","12148958splitHere46","String s = <doubleQuotes46>225:org.powertac.common.Competition::0::new::game-0<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>([^:]+):([^:]+)::([\\d]+)::([^:]+)::(.+)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>if (m.find()) {<newline46mondego>  String id = m.group(1);<newline46mondego>  String className = m.group(2);<newline46mondego>  int orderOfExecution = Integer.valueOf(m.group(3));<newline46mondego>  String methodNameOrNew = m.group(4);<newline46mondego>  String[] arguments = m.group(5).split(<doubleQuotes46>::<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6934splitHere46","12148958splitHere46","java.util.Scanner"
"6935splitHere46","12148958splitHere46","::?"
"6936splitHere46","12148958splitHere46","Scanner scanner = new Scanner(s);<newline46mondego>scanner.useDelimiter(<doubleQuotes46>::?<doubleQuotes46>);<newline46mondego>int id = scanner.nextInt();<newline46mondego>String className = scanner.next();<newline46mondego>int orderOfExecution = scanner.nextInt();<newline46mondego>String methodNameOrNew = scanner.next();<newline46mondego>scanner.useDelimiter(<doubleQuotes46>$<doubleQuotes46>).skip(<doubleQuotes46>::<doubleQuotes46>);<newline46mondego>String[] arguments = scanner.next().split(<doubleQuotes46>::<doubleQuotes46>);<newline46mondego>"
"6937splitHere46","12149007splitHere46","setDisplayOrientation"
"6938splitHere46","12149007splitHere46","public void surfaceCreated(SurfaceHolder holder) {<newline46mondego>    if (Build.VERSION.SDK_INT >= 8) mCamera.setDisplayOrientation(90);<newline46mondego>}<newline46mondego>"
"6939splitHere46","12149007splitHere46","params.set(<doubleQuotes46>orientation<doubleQuotes46>..."
"6940splitHere46","12149035splitHere46",","
"6941splitHere46","12149038splitHere46","JSONObject o = gson.fromJson(String)"
"6942splitHere46","12149038splitHere46","o.getElement(<doubleQuotes46>data<doubleQuotes46>).isList()"
"6943splitHere46","12149038splitHere46","gson.fromJson(JSONObject,Class)"
"6944splitHere46","12149284splitHere46","package com.example.stackoverflow;<newline46mondego><newline46mondego>import java.io.DataInputStream;<newline46mondego>import java.io.DataOutputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.OutputStream;<newline46mondego>import java.net.Socket;<newline46mondego>import java.util.Timer;<newline46mondego>import java.util.TimerTask;<newline46mondego><newline46mondego>import android.app.Activity;<newline46mondego>import android.os.Bundle;<newline46mondego>import android.util.Log;<newline46mondego>import android.view.Menu;<newline46mondego><newline46mondego>public class MainActivity extends Activity {<newline46mondego>   private static final String LOG_TAG = <doubleQuotes46>TEMP<doubleQuotes46>;<newline46mondego>   InputStream inputStr;<newline46mondego>   String inputJSON = null;<newline46mondego>   Socket socket = new Socket();<newline46mondego>   String outputJSONserv = <doubleQuotes46>asdasd<doubleQuotes46>;<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego>    Log.e(LOG_TAG, <doubleQuotes46>Start Repeat Timer<doubleQuotes46>);<newline46mondego>    TimerTask task = new RepeatingTask();<newline46mondego>    Timer timer = new Timer();<newline46mondego>    timer.scheduleAtFixedRate(task, 0, 3000);<newline46mondego>    Log.e(LOG_TAG, <doubleQuotes46>Started Repeat Timer<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>    getMenuInflater().inflate(R.menu.activity_main, menu);<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>public class RepeatingTask extends TimerTask {<newline46mondego>    // private int len = 0;<newline46mondego>    // private byte[] input = new byte[len];<newline46mondego><newline46mondego>    public RepeatingTask() {<newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>In RepeatingTask()<doubleQuotes46>);<newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>Before inputJSON String<doubleQuotes46>);<newline46mondego><newline46mondego>        try {<newline46mondego>            inputJSON = ConvertByteArrayToString(readBytes(inputStr));<newline46mondego>            sendBytes(ConvertStringToByteArray(inputJSON), 0,<newline46mondego>                    ConvertStringToByteArray(inputJSON).length);<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        // Convert<newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>After inputJSON String:<doubleQuotes46> + inputJSON);<newline46mondego><newline46mondego>        // LOOK HERE FIRST<newline46mondego>        // inputJSON is what is received back from the server - Take the<newline46mondego>        // inputJSON<newline46mondego>        // String and use regular expressions HERE to remove all the other<newline46mondego>        // characters in the<newline46mondego>        // string except the payload JSON.<newline46mondego>        // refreshViewModels(inputJSON);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        /*<newline46mondego>         * try { Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON<doubleQuotes46>);<newline46mondego>         * //outputstrwr.write(outputJSONserv); //UNCOMMENT IF NEED TO SEND<newline46mondego>         * DATA TO GET JSON BACK //inputJSON =<newline46mondego>         * ConvertByteArrayToString(getBytesFromInputStream(inputStr));<newline46mondego>         * inputJSON = ConvertByteArrayToString(getFileBytes(inputStr)); }<newline46mondego>         * catch (IOException e) { // TODO Auto-generated catch block<newline46mondego>         * e.printStackTrace(); }<newline46mondego>         * <newline46mondego>         * Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON2:<doubleQuotes46> + inputJSON);<newline46mondego>         * refreshViewModels(inputJSON);<newline46mondego>         */<newline46mondego><newline46mondego>        try {<newline46mondego>            Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON<doubleQuotes46>);<newline46mondego>            // outputstrwr.write(outputJSONserv); //UNCOMMENT IF NEED TO<newline46mondego>            // SEND DATA TO GET JSON BACK<newline46mondego>            // byte[] = myByteArray = readBytes(inputStr);<newline46mondego>            sendBytes(ConvertStringToByteArray(outputJSONserv), 0,<newline46mondego>                    ConvertStringToByteArray(outputJSONserv).length);<newline46mondego>            // sendBytes(myByteArray, 0, myByteArray.length);<newline46mondego>            Log.e(LOG_TAG, <doubleQuotes46>AFTER SENDING DATA<doubleQuotes46>);<newline46mondego>            // inputJSON =<newline46mondego>            // ConvertByteArrayToString(getBytesFromInputStream(inputStr));<newline46mondego>            inputJSON = ConvertByteArrayToString(readBytes(inputStr));<newline46mondego>            Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON2:<doubleQuotes46> + inputJSON);<newline46mondego>        } catch (IOException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>IN REPEATINGTHREAD-INPUTJSON3:<doubleQuotes46> + inputJSON);<newline46mondego>        //refreshViewModels(inputJSON);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void sendBytes(byte[] myByteArray, int start, int len)<newline46mondego>                                                             throws IOException {<newline46mondego>    if (len < 0)<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>Negative length not allowed<doubleQuotes46>);<newline46mondego>    if (start < 0 || start >= myByteArray.length)<newline46mondego>        throw new IndexOutOfBoundsException(<doubleQuotes46>Out of bounds: <doubleQuotes46> + start);<newline46mondego>    // Other checks if needed.<newline46mondego><newline46mondego>    // May be better to save the streams in the support class;<newline46mondego>    // just like the socket variable.<newline46mondego><newline46mondego>    OutputStream out = socket.getOutputStream();<newline46mondego>    DataOutputStream dos = new DataOutputStream(out);<newline46mondego><newline46mondego>    dos.writeInt(len);<newline46mondego>    if (len > 0) {<newline46mondego>        dos.write(myByteArray, start, len);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public byte[] readBytes(InputStream in) throws IOException {<newline46mondego>    // Again, probably better to store these objects references in the<newline46mondego>    // support class<newline46mondego>    in = socket.getInputStream();<newline46mondego>    DataInputStream dis = new DataInputStream(in);<newline46mondego><newline46mondego>    int len = dis.readInt();<newline46mondego>    byte[] data = new byte[len];<newline46mondego>    if (len > 0) {<newline46mondego>        dis.readFully(data);<newline46mondego>    }<newline46mondego>    return data;<newline46mondego>}<newline46mondego><newline46mondego>public String ConvertByteArrayToString(byte[] b) {<newline46mondego>    // byte[] to string<newline46mondego>    String input = new String(b);<newline46mondego>    return input;<newline46mondego>}<newline46mondego><newline46mondego>public byte[] ConvertStringToByteArray(String str) {<newline46mondego>    // string to byte[]<newline46mondego>    byte[] bytes = str.getBytes();<newline46mondego>    return bytes;<newline46mondego>}<newline46mondego>"
"6945splitHere46","12149330splitHere46","blah.com/workorder/{id}<newline46mondego>"
"6946splitHere46","12149330splitHere46","blah.com/workorder?dealer_code=1&cust_id=1<newline46mondego>"
"6947splitHere46","12149331splitHere46","public class User {<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego>"
"6948splitHere46","12149331splitHere46","javax.validation.constraints"
"6949splitHere46","12149331splitHere46","public class User {<newline46mondego><newline46mondego>    @NotNull<newline46mondego>    private String name;<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego>"
"6950splitHere46","12149331splitHere46","@RequestMapping(value=<doubleQuotes46>/user<doubleQuotes46>, method=RequestMethod.POST)<newline46mondego>public createUser(Model model, @Valid @ModelAttribute(<doubleQuotes46>user<doubleQuotes46>) User user, BindingResult result){<newline46mondego>    if (result.hasErrors()){<newline46mondego>      // do something<newline46mondego>    }<newline46mondego>    else {<newline46mondego>      // do something else<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6951splitHere46","12149331splitHere46","org.springframework.validation.Validator"
"6952splitHere46","12149331splitHere46","public class User {<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>    private Integer birthYear;<newline46mondego>    private User responsibleUser;<newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego>"
"6953splitHere46","12149331splitHere46","public class UserValidator implements Validator {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean supports(Class clazz) {<newline46mondego>      return User.class.equals(clazz);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void validate(Object target, Errors errors) {<newline46mondego>      User user = (User) target;<newline46mondego><newline46mondego>      if(user.getName() == null) {<newline46mondego>          errors.rejectValue(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>your_error_code<doubleQuotes46>);<newline46mondego>      }<newline46mondego><newline46mondego>      // do <doubleQuotes46>complex<doubleQuotes46> validation here<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6954splitHere46","12149331splitHere46","@RequestMapping(value=<doubleQuotes46>/user<doubleQuotes46>, method=RequestMethod.POST)<newline46mondego>    public createUser(Model model, @ModelAttribute(<doubleQuotes46>user<doubleQuotes46>) User user, BindingResult result){<newline46mondego>        UserValidator userValidator = new UserValidator();<newline46mondego>        userValidator.validate(user, result);<newline46mondego><newline46mondego>        if (result.hasErrors()){<newline46mondego>          // do something<newline46mondego>        }<newline46mondego>        else {<newline46mondego>          // do something else<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"6955splitHere46","12149343splitHere46","String seriesClass = null;<newline46mondego>for(String styleClass : series.getNode().getStyleClass())<newline46mondego>{<newline46mondego>    if(styleClass.startsWith(<doubleQuotes46>series<doubleQuotes46>))<newline46mondego>    {<newline46mondego>        for(javafx.scene.Node n : _chart.lookupAll(<doubleQuotes46>.<doubleQuotes46> + seriesClass))<newline46mondego>        {<newline46mondego>             n.setStyle(<doubleQuotes46>-fx-stroke-dash-array: 10 10<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6956splitHere46","12149364splitHere46","List"
"6957splitHere46","12149364splitHere46","double[]"
"6958splitHere46","12149364splitHere46","double"
"6959splitHere46","12149364splitHere46","double[]"
"6960splitHere46","12149364splitHere46","x.get(0)[0]<newline46mondego>"
"6961splitHere46","12149364splitHere46","x.get()"
"6962splitHere46","12149364splitHere46","List"
"6963splitHere46","12149364splitHere46","double"
"6964splitHere46","12149364splitHere46","doubles"
"6965splitHere46","12149364splitHere46","List"
"6966splitHere46","12149364splitHere46","List<Double> addArray(List<Double> o, double[] a) {<newline46mondego>  for(Double d : a)<newline46mondego>    o.add(d);<newline46mondego><newline46mondego>  return o;<newline46mondego>}<newline46mondego>"
"6967splitHere46","12149422splitHere46","public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>    ....<newline46mondego>    TextView mytext = findViewById(R.id.myText);<newline46mondego>    int yourVar = getItem(position).var;<newline46mondego>    if(yourVar > 0)<newline46mondego>    {<newline46mondego>        mytext.setTextColor(0x0000FF);<newline46mondego>    }else{<newline46mondego>        mytext.setTextColor(0xFF0000);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6968splitHere46","12149422splitHere46","String someText1 = <doubleQuotes46><font color='#FF0000'>this is red text</font><doubleQuotes46>;<newline46mondego>String someText2 = <doubleQuotes46>Standard text<doubleQuotes46><newline46mondego>yourTextView.setText(Html.fromHtml(someText1 + someText2));<newline46mondego>"
"6969splitHere46","12149436splitHere46","String"
"6970splitHere46","12149436splitHere46","public class CustomComboBoxModel<String> extends AbstractListModel<String> {<newline46mondego>                                 ^^^^^^<newline46mondego>"
"6971splitHere46","12149436splitHere46","String"
"6972splitHere46","12149436splitHere46","java.lang.String"
"6973splitHere46","12149436splitHere46","class Foo<String><newline46mondego>{<newline46mondego>    String s = <doubleQuotes46><doubleQuotes46>; // error: incompatible types<newline46mondego>}<newline46mondego>"
"6974splitHere46","12149558splitHere46","<plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>idlj-maven-plugin</artifactId><newline46mondego>        <version>1.2.1</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <goals><newline46mondego>              <goal>generate</goal><newline46mondego>            </goals><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>        <configuration><newline46mondego>            <debug>true</debug><newline46mondego>            <compiler>jacorb</compiler><newline46mondego>            <sourceDirectory>../../idl</sourceDirectory><newline46mondego>            <sources><newline46mondego>                <source><newline46mondego>                    <additionalArguments><newline46mondego>                        <list>-i2jpackage</list><newline46mondego>                        <list>Tester:com.mycompany.tester</list><newline46mondego>                    </additionalArguments><newline46mondego>                </source><newline46mondego>            </sources><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>"
"6975splitHere46","12149558splitHere46","<compiler>idlj</compiler>"
"6976splitHere46","12149558splitHere46","<additionalArguments>"
"6977splitHere46","12149558splitHere46","<additionalArguments><newline46mondego>    <list>-pkgTranslate</list><newline46mondego>    <list>Tester</list><newline46mondego>    <list>com.mycompany.tester</list><newline46mondego></additionalArguments><newline46mondego>"
"6978splitHere46","12149667splitHere46","array_count_values"
"6979splitHere46","12149667splitHere46","public static <T> Map<T, Integer> countValues(List<T> values) {<newline46mondego>    Map<T, Integer> result = new HashMap<T, Integer>();<newline46mondego>    // iterate through values, and increment its corresponding value in result<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"6980splitHere46","12149667splitHere46","java.util.Collections.sort(List list, Comparator c)"
"6981splitHere46","12149667splitHere46","public class CountComparator<T> implements Comparator<T> {<newline46mondego>    private Map<T, Integer> counts;<newline46mondego><newline46mondego>    public CountComparator(Map<T, Integer> counts) {<newline46mondego>        this.counts = counts;<newline46mondego>    }<newline46mondego><newline46mondego>    public int compare(T o1, T o2) {<newline46mondego>        // assumes that the map contains all keys<newline46mondego>        return counts.get(o1).compareTo(counts.get(o2));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6982splitHere46","12149731splitHere46","xpath.compile(<doubleQuotes46>/algorithms/info[name=s]/description/text()<doubleQuotes46>)<newline46mondego>"
"6983splitHere46","12149731splitHere46","xpath.compile(<doubleQuotes46>/algorithms/info[name=<doubleQuotes46>+s+<doubleQuotes46>]/description/text()<doubleQuotes46>)<newline46mondego>"
"6984splitHere46","12149827splitHere46","sb.append(<doubleQuotes46><td title=\<doubleQuotes46><doubleQuotes46> + t.getValue(<doubleQuotes46>block_type_desc<doubleQuotes46>) + <doubleQuotes46>\<doubleQuotes46>><doubleQuotes46>);<newline46mondego>"
"6985splitHere46","12149844splitHere46","TIMESTAMP"
"6986splitHere46","12149844splitHere46","TIMESTAMP WITH TIME ZONE"
"6987splitHere46","12149844splitHere46","TIMESTAMP WITH LOCAL TIME ZONE"
"6988splitHere46","12149844splitHere46","TIMESTAMP"
"6989splitHere46","12149844splitHere46","TIMESTAMP WITH TIME ZONE"
"6990splitHere46","12149844splitHere46","TIMESTAMP WITH LOCAL TIME ZONE"
"6991splitHere46","12149844splitHere46","TIMESTAMP WITH TIME ZONE"
"6992splitHere46","12149844splitHere46","TIMESTAMP WITH LOCAL TIME ZONE"
"6993splitHere46","12149844splitHere46","import java.sql.Connection;<newline46mondego>import java.sql.DriverManager;<newline46mondego>import java.sql.PreparedStatement;<newline46mondego>import java.sql.ResultSet;<newline46mondego>import java.sql.Timestamp;<newline46mondego>import java.util.Date;<newline46mondego><newline46mondego>// create table x_tst_ts_tab(<newline46mondego>// os_name varchar(256)<newline46mondego>// ts timestamp,<newline46mondego>// ts_with_tz timestamp with time zone,<newline46mondego>// ts_with_local_tz timestamp with local time zone<newline46mondego>// )<newline46mondego>class TSTest {<newline46mondego>    public static final void main(String[] argv) throws Exception {<newline46mondego>        Class.forName(<doubleQuotes46>oracle.jdbc.OracleDriver<doubleQuotes46>);<newline46mondego>        Connection conn = DriverManager.getConnection(<newline46mondego>            <doubleQuotes46>your_connection_string<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>your_user_name<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>your_password<doubleQuotes46>);<newline46mondego><newline46mondego>        try {<newline46mondego>            // Insert some data<newline46mondego>            Date nowDate = new Date();<newline46mondego>            Timestamp nowTimestamp = new Timestamp(nowDate.getTime());<newline46mondego>            PreparedStatement insertStmt = conn.prepareStatement(<newline46mondego>                <doubleQuotes46>INSERT INTO x_tst_ts_tab<doubleQuotes46><newline46mondego>                + <doubleQuotes46> (os_name, ts, ts_with_tz, ts_with_local_tz)<doubleQuotes46><newline46mondego>                + <doubleQuotes46> VALUES (?, ?, ?, ?)<doubleQuotes46>);<newline46mondego>            try {<newline46mondego>                insertStmt.setString(1, System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>));<newline46mondego>                insertStmt.setTimestamp(2, nowTimestamp);<newline46mondego>                insertStmt.setTimestamp(3, nowTimestamp);<newline46mondego>                insertStmt.setTimestamp(4, nowTimestamp);<newline46mondego>                insertStmt.executeUpdate();<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    insertStmt.close();<newline46mondego>                } catch (Throwable t) {<newline46mondego>                    // do nothing<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>os_name, ts, ts_with_tz, ts_with_local_tz<doubleQuotes46>);<newline46mondego><newline46mondego>            // Read back everything in the DB<newline46mondego>            PreparedStatement selectStmt = conn.prepareStatement(<newline46mondego>                <doubleQuotes46>SELECT os_name, ts, ts_with_tz, ts_with_local_tz<doubleQuotes46><newline46mondego>                + <doubleQuotes46> FROM dom_fraud_beacon.x_tst_ts_tab<doubleQuotes46>);<newline46mondego>            ResultSet result = null;<newline46mondego>            try {<newline46mondego>                result = selectStmt.executeQuery();<newline46mondego>                while (result.next()) {<newline46mondego>                    System.out.println(<newline46mondego>                        String.format(<doubleQuotes46>%s,%s,%s,%s<doubleQuotes46>,<newline46mondego>                                      result.getString(1),<newline46mondego>                                      result.getTimestamp(2).toString(),<newline46mondego>                                      result.getTimestamp(3).toString(),<newline46mondego>                                      result.getTimestamp(4).toString()<newline46mondego>                                      ));<newline46mondego>                }<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    result.close();<newline46mondego>                } catch (Throwable t) {<newline46mondego>                    // do nothing<newline46mondego>                } finally {<newline46mondego>                    try {<newline46mondego>                        selectStmt.close();<newline46mondego>                    } catch (Throwable t) {<newline46mondego>                        // do nothing<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } finally {<newline46mondego>            try {<newline46mondego>                conn.close();<newline46mondego>            } catch (Throwable t) {<newline46mondego>                // do nothing<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6994splitHere46","12149972splitHere46","import java.util.ArrayList;<newline46mondego><newline46mondego>class State{}<newline46mondego><newline46mondego>class Framework<State> <newline46mondego>{<newline46mondego>    public ArrayList< Action< ? super State > >actions = new ArrayList< Action< ?super State > >();<newline46mondego><newline46mondego>    void add(Action<? super State> a) {<newline46mondego><newline46mondego>        actions.add(a);<newline46mondego><newline46mondego>    } <newline46mondego><newline46mondego>    void doRun(State s) {<newline46mondego>        for(Action<? super State> a : actions) {<newline46mondego>            a.perform(s);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>interface IState1 {}<newline46mondego><newline46mondego>interface IState2 {}<newline46mondego><newline46mondego>interface Action<State> {<newline46mondego>    public void perform(State s);<newline46mondego>}<newline46mondego><newline46mondego>class Action1 implements Action<IState1> {<newline46mondego>    public void perform( IState1 s )<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Do something 1<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Action2 implements Action<IState2> {<newline46mondego><newline46mondego>    public void perform( IState2 s )<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Do something 2<doubleQuotes46>);<newline46mondego>    }   <newline46mondego>}<newline46mondego><newline46mondego>class CombinedState implements IState1, IState2 {}<newline46mondego><newline46mondego>class Untitled {<newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>         Framework<CombinedState> f = new Framework<CombinedState>();<newline46mondego><newline46mondego>            // add is expecting Action<? super CombinedState> but getting Action<IState1><newline46mondego>            f.add(new Action1()); // This doesn't seem to work<newline46mondego>            f.add(new Action2());<newline46mondego><newline46mondego>            f.doRun(new CombinedState());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6995splitHere46","12150100splitHere46","java -cp karel.jar;CollectNewspaperKarel.class CollectNewspaperKarel<newline46mondego>"
"6996splitHere46","12150100splitHere46","java -cp karel.jar:CollectNewspaperKarel.class CollectNewspaperKarel<newline46mondego>"
"6997splitHere46","12150100splitHere46","java -cp karel.jar;CollectNewspaperKarel.class stanford.karel.Karel code=CollectNewspaperKarel<newline46mondego>"
"6998splitHere46","12150100splitHere46","java -cp karel.jar:CollectNewspaperKarel.class stanford.karel.Karel code=CollectNewspaperKarel<newline46mondego>"
"6999splitHere46","12150105splitHere46","<s:property value=<doubleQuotes46>myVariable<doubleQuotes46> />"
"7000splitHere46","12150105splitHere46","myVariable"
"7001splitHere46","12150105splitHere46","<s:action name=<doubleQuotes46>actionName<doubleQuotes46> executeResult=<doubleQuotes46>false<doubleQuotes46>> <newline46mondego>    <s:param name=<doubleQuotes46>switch<doubleQuotes46>>true</s:param><newline46mondego></s:action><newline46mondego><s:property value=<doubleQuotes46>myVariable<doubleQuotes46> /><newline46mondego>"
"7002splitHere46","12150105splitHere46","actionName"
"7003splitHere46","12150105splitHere46","var"
"7004splitHere46","12150105splitHere46","<s:action name=<doubleQuotes46>actionName<doubleQuotes46> var=<doubleQuotes46>innerAction<doubleQuotes46> executeResult=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>   <s:param name=<doubleQuotes46>switch<doubleQuotes46>>true</s:param><newline46mondego></s:action><newline46mondego><s:property value=<doubleQuotes46>#innerAction.myVariable<doubleQuotes46> /><newline46mondego>"
"7005splitHere46","12150105splitHere46","// in your inner action: <newline46mondego>ServletActionContext.getRequest().setAttribute(<doubleQuotes46>myVariable<doubleQuotes46>, <doubleQuotes46>blah blah<doubleQuotes46>);<newline46mondego><newline46mondego><s:property value=<doubleQuotes46>#attr.myVariable<doubleQuotes46> /><newline46mondego>"
"7006splitHere46","12150288splitHere46","."
"7007splitHere46","12150288splitHere46","\n"
"7008splitHere46","12150288splitHere46","DOTALL"
"7009splitHere46","12150288splitHere46","(?s)"
"7010splitHere46","12150288splitHere46","(?s)(\\s)*</(\\w)*>.*"
"7011splitHere46","12150348splitHere46","JLabel"
"7012splitHere46","12150348splitHere46","JLabel label = new JLabel(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>label.setSize(100, 100);<newline46mondego>frame.getContentPane().add(label);<newline46mondego>"
"7013splitHere46","12150348splitHere46","JPanel"
"7014splitHere46","12150551splitHere46","partial class"
"7015splitHere46","12150551splitHere46","// File:  One.cs<newline46mondego>using System;<newline46mondego><newline46mondego>public class One<newline46mondego>{<newline46mondego>    static void Main()<newline46mondego>    {<newline46mondego>        // Your Main method here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7016splitHere46","12150551splitHere46","// File:  One.Externs.cs<newline46mondego>using System;<newline46mondego><newline46mondego>public partial class One<newline46mondego>{<newline46mondego>    extern static void func1();<newline46mondego>    extern static void func2();<newline46mondego>}<newline46mondego>"
"7017splitHere46","12150551splitHere46","using"
"7018splitHere46","12150551splitHere46","import"
"7019splitHere46","12150551splitHere46","using"
"7020splitHere46","12150551splitHere46","namespace"
"7021splitHere46","12150551splitHere46","import"
"7022splitHere46","12150573splitHere46","abs"
"7023splitHere46","12150573splitHere46","-1mm"
"7024splitHere46","12150573splitHere46","1mm"
"7025splitHere46","12150772splitHere46","ArrayList"
"7026splitHere46","12150772splitHere46","/**<newline46mondego> * The array buffer into which the elements of the ArrayList are stored.<newline46mondego> * The capacity of the ArrayList is the length of this array buffer.<newline46mondego> */<newline46mondego>private transient Object[] elementData;<newline46mondego>"
"7027splitHere46","12150884splitHere46","@Id<newline46mondego>@GeneratedValue(strategy = GenerationType.AUTO)<newline46mondego>private Long id;<newline46mondego>"
"7028splitHere46","12150912splitHere46","Calendar calendar = Calendar.getInstance();<newline46mondego>calendar.setTimeInMillis(System.currentTimeMillis());<newline46mondego>calendar.set(Calendar.SECOND, 0);<newline46mondego>calendar.set(Calendar.MINUTE, 0);<newline46mondego>calendar.set(Calendar.HOUR, 0);<newline46mondego>calendar.set(Calendar.AM_PM, Calendar.AM);<newline46mondego>calendar.add(Calendar.DAY_OF_MONTH, 1); <newline46mondego><newline46mondego>AlarmManager alarmManager = (AlarmManager)context.getSystemService(Context.ALARM_SERVICE);<newline46mondego>alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), AlarmManager.INTERVAL_DAY, service);<newline46mondego>"
"7029splitHere46","12150912splitHere46","onEnabled()"
"7030splitHere46","12150958splitHere46","Process:<newline46mondego>1) Run the installer exe with the required JVM<newline46mondego>2) During the installation save the embedded JVM to a file<newline46mondego>3) Once the instillation is complete the program exe can launch using the saved JVM<newline46mondego>"
"7031splitHere46","12151136splitHere46","-Xms"
"7032splitHere46","12151173splitHere46","org.aspectj.lang.Signature"
"7033splitHere46","12151173splitHere46","<dependency><newline46mondego>    <groupId>aspectj</groupId><newline46mondego>    <artifactId>aspectjrt</artifactId><newline46mondego>    <version>1.5.4</version><newline46mondego></dependency><newline46mondego>"
"7034splitHere46","12151229splitHere46","TransferHandler"
"7035splitHere46","12151229splitHere46","Swing"
"7036splitHere46","12151246splitHere46","String new1 =<doubleQuotes46><doubleQuotes46> ;"
"7037splitHere46","12151246splitHere46","String textLarge =<doubleQuotes46><doubleQuotes46> ;<newline46mondego>String textSmall =<doubleQuotes46><doubleQuotes46> ;<newline46mondego>"
"7038splitHere46","12151246splitHere46","new1 = stl + stl1;"
"7039splitHere46","12151246splitHere46","textLarge = stl;<newline46mondego>textSmall = stl1;<newline46mondego>"
"7040splitHere46","12151246splitHere46","cb.setFontAndSize(bf, 18);        <newline46mondego>cb.showTextAligned(PdfContentByte.ALIGN_LEFT, textLarge, 20 + x, 663 + y, 0);<newline46mondego>cb.setFontAndSize(bf, 14);        <newline46mondego>cb.showTextAligned(PdfContentByte.ALIGN_LEFT, textSmall, 20 + ? + x, 663 + y, 0);<newline46mondego>"
"7041splitHere46","12151246splitHere46","BaseFont.getWidthPoint(String text, float fontSize)"
"7042splitHere46","12151246splitHere46","chunk.getWidthPoint()"
"7043splitHere46","12151262splitHere46","Pattern"
"7044splitHere46","12151262splitHere46","Scanner.useDelimiter"
"7045splitHere46","12151262splitHere46","x.useDelimiter(<doubleQuotes46>,|<doubleQuotes46> + System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>));<newline46mondego>"
"7046splitHere46","12151329splitHere46","re-using"
"7047splitHere46","12151329splitHere46","PreparedStatement"
"7048splitHere46","12151329splitHere46","addBatch()"
"7049splitHere46","12151329splitHere46","executeBatch()"
"7050splitHere46","12151329splitHere46","public void insertARow(PreparedStatement ps, ArrayList<String> row){<newline46mondego> //your code<newline46mondego>}<newline46mondego><newline46mondego>public void calledMethod(){<newline46mondego> String insert = <doubleQuotes46>INSERT INTO user.info(cola,colb) values(?,?)<doubleQuotes46>;<newline46mondego> PreparedStatement ps = null;<newline46mondego><newline46mondego> try{<newline46mondego>   ps = con.prepareStatement(insert);<newline46mondego>   /**<newline46mondego>    * Here you make the call to insertARow passing it the preparedstatement that you<newline46mondego>    * have created. This in your case will be called multiple times.<newline46mondego>    */<newline46mondego>   insertARow(ps, row);<newline46mondego> }finally{<newline46mondego>   if(ps != null){<newline46mondego>     //close ps<newline46mondego>   }<newline46mondego> }<newline46mondego>}<newline46mondego>"
"7051splitHere46","12151420splitHere46","<doubleQuotes46>Dinosaur<doubleQuotes46>.indexOf(<doubleQuotes46>A<doubleQuotes46>)"
"7052splitHere46","12151420splitHere46","<doubleQuotes46>Dinosaur<doubleQuotes46>.indexOf(<doubleQuotes46>a<doubleQuotes46>)"
"7053splitHere46","12151420splitHere46","original.toLowerCase().indexOf(button.getText().toLowerCase())!=-1<newline46mondego>"
"7054splitHere46","12151454splitHere46","httpGet.setHeader(name, value);<newline46mondego>"
"7055splitHere46","12151584splitHere46","URLConnection.setReadTimeout"
"7056splitHere46","12151584splitHere46","SocketTimeoutException"
"7057splitHere46","12151584splitHere46","try (BufferedReader buffer_input = new BufferedReader(<newline46mondego>         new InputStreamReader(connection.getInputStream(), <doubleQuotes46>cp1251<doubleQuotes46>))) {<newline46mondego>  String line;<newline46mondego>  while ((line = buffer_input.readLine()) != null) {<newline46mondego>    buffer_page.append(line);<newline46mondego>  }<newline46mondego>} catch (SocketTimeoutException ex) {<newline46mondego>  /* handle time-out */<newline46mondego>}<newline46mondego>"
"7058splitHere46","12151584splitHere46","readLine"
"7059splitHere46","12151584splitHere46","\r"
"7060splitHere46","12151584splitHere46","\n"
"7061splitHere46","12151599splitHere46","passwordlogin.getBytes()<newline46mondego>"
"7062splitHere46","12151599splitHere46","passwordlogin.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>)"
"7063splitHere46","12151599splitHere46","if(res.next()) {<newline46mondego>                    user = new String( res.getBytes(1), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>                    pass =  new String( res.getBytes(2), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>                }<newline46mondego>"
"7064splitHere46","12151599splitHere46","java -Dfile.encoding=<doubleQuotes46>UTF-8<doubleQuotes46> ..."
"7065splitHere46","12151604splitHere46","JOptionPane"
"7066splitHere46","12151604splitHere46","MessageDialog"
"7067splitHere46","12151604splitHere46","Swing"
"7068splitHere46","12151816splitHere46","for (int i = 0; i < sectionList.size(); i++) {<newline46mondego>        sections[i] = sectionList.get(i);<newline46mondego>    }<newline46mondego><newline46mondego>    for (int i = 0; i < sections.length - 1; i++) {<newline46mondego>        sections[i] = sectionList.get(i);<newline46mondego>    }<newline46mondego>"
"7069splitHere46","12151816splitHere46","Iterator"
"7070splitHere46","12151816splitHere46","ArrayList.toArray"
"7071splitHere46","12151816splitHere46","String[]"
"7072splitHere46","12151816splitHere46","sections = sectionList.toArray(new String[sectionList.size()]);<newline46mondego>"
"7073splitHere46","12151816splitHere46","TreeMap"
"7074splitHere46","12151816splitHere46","HashMap"
"7075splitHere46","12151816splitHere46","TreeMap.keySet"
"7076splitHere46","12151934splitHere46","LinkedList<Integer>"
"7077splitHere46","12151934splitHere46","Map<?, ?>"
"7078splitHere46","12151934splitHere46","-Xmx14g"
"7079splitHere46","12152018splitHere46","public static void main( String[] args ) throws IllegalStateException, IOException<newline46mondego>{<newline46mondego>    HttpClient client = new DefaultHttpClient();<newline46mondego>    HttpGet request = new HttpGet(<doubleQuotes46>http://ifconfig.me/<doubleQuotes46>);<newline46mondego>    request.setHeader(<doubleQuotes46>User-Agent<doubleQuotes46>,<doubleQuotes46>curl/7.16.3 (i686-pc-cygwin) libcurl/7.16.3 OpenSSL/0.9.8h zlib/1.2.3 libssh2/0.15-CVS<doubleQuotes46>);<newline46mondego>    HttpResponse response = client.execute(request);<newline46mondego><newline46mondego>    // Get the response<newline46mondego>    String addr = IOUtils.toString(new InputStreamReader(response.getEntity().getContent()));<newline46mondego>    System.out.println(addr);<newline46mondego>}<newline46mondego>"
"7080splitHere46","12152047splitHere46","Class.getConstructor(Class...)"
"7081splitHere46","12152047splitHere46","Constructor.newInstance(Object...)"
"7082splitHere46","12152047splitHere46","1 : CONSUMPTION"
"7083splitHere46","12152047splitHere46","Object[] arguments = new Object[]{Integer.valueOf(1), <doubleQuotes46>CONSUMPTION<doubleQuotes46>};<newline46mondego>"
"7084splitHere46","12152047splitHere46","Class clazz = ... //Whatever class reference you have<newline46mondego>Constructor c = clazz.getConstructor(Integer.class, String.class);<newline46mondego>Object obj = c.newInstance(arguments);<newline46mondego>"
"7085splitHere46","12152047splitHere46","Constructor.getParameterTypes()"
"7086splitHere46","12152047splitHere46","Class.getConstructors()"
"7087splitHere46","12152047splitHere46","Class.isAssignableFrom(Class)"
"7088splitHere46","12152047splitHere46","public boolean canConstruct(Object[] args, Constructor<?> c){<newline46mondego>        Class<?>[] paramTypes = c.getParameterTypes(); <newline46mondego>        if(args.length != paramTypes.length){<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>        int i = 0;<newline46mondego>        for(Object arg: args){<newline46mondego>            if(!paramTypes[i].isAssignableFrom(arg.getClass())){<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>                    i++;<newline46mondego>        }<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego>"
"7089splitHere46","12152076splitHere46","File sourcePath = new File(<doubleQuotes46>/path/to/be/backed/up<doubleQuotes46>);<newline46mondego>File destPath = new File(<doubleQuotes46>X:/BackupHere<doubleQuotes46>);<newline46mondego><newline46mondego>// Get all the files from sourcePath<newline46mondego>List<File> listFiles = getFilesFrom(sourcePath);<newline46mondego><newline46mondego>for (File toBackup : listFiles) {<newline46mondego><newline46mondego>    // Now we need to strip off the sourcePath<newline46mondego>    // Get the name of the file<newline46mondego>    String fileName = toBackup.getName();<newline46mondego>    // Get parent folder's path<newline46mondego>    String path = toBackup.getParent();<newline46mondego>    // Remove the source path from file path<newline46mondego>    path = path.substring(sourcePath.getPath().length());<newline46mondego><newline46mondego>    // Append the file name to the path<newline46mondego>    path = path + File.separator + fileName;<newline46mondego><newline46mondego>    // Now we have the name of the back up file<newline46mondego>    String backupFile = destPath + path;<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Backup to <doubleQuotes46> + backupFile);<newline46mondego><newline46mondego>}<newline46mondego>"
"7090splitHere46","12152128splitHere46","if( args.length != 2 ){<newline46mondego>    System.out.println(<doubleQuotes46>usage: Greetin <firstName> <lastName><doubleQuotes46>);<newline46mondego>}<newline46mondego>else{<newline46mondego>    String firstName = args[0];<newline46mondego>    String lastName = args[1];<newline46mondego>    System.out.println(<doubleQuotes46>Hello, <doubleQuotes46> + firstName + <doubleQuotes46> <doubleQuotes46> + lastName);<newline46mondego>    System.out.println(<doubleQuotes46>Congratulations on your second program!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7091splitHere46","12152128splitHere46","java Greetin Annabel Lee"
"7092splitHere46","12152142splitHere46","it"
"7093splitHere46","12152142splitHere46","it.hasNext()"
"7094splitHere46","12152162splitHere46","<dependency><newline46mondego>        <groupId>com.sun.jersey.contribs</groupId><newline46mondego>        <artifactId>jersey-spring</artifactId><newline46mondego>        <version>1.13</version><newline46mondego>        <exclusions><newline46mondego>            <exclusion><newline46mondego>                <groupId>org.springframework</groupId><newline46mondego>                <artifactId>spring</artifactId><newline46mondego>            </exclusion><newline46mondego>            <exclusion><newline46mondego>                <groupId>org.springframework</groupId><newline46mondego>                <artifactId>spring-core</artifactId><newline46mondego>            </exclusion><newline46mondego>            <exclusion><newline46mondego>                <groupId>org.springframework</groupId><newline46mondego>                <artifactId>spring-web</artifactId><newline46mondego>            </exclusion><newline46mondego>            <exclusion><newline46mondego>                <groupId>org.springframework</groupId><newline46mondego>                <artifactId>spring-beans</artifactId><newline46mondego>            </exclusion><newline46mondego>            <exclusion><newline46mondego>                <groupId>org.springframework</groupId><newline46mondego>                <artifactId>spring-context</artifactId><newline46mondego>            </exclusion><newline46mondego>        </exclusions><newline46mondego>    </dependency><newline46mondego>"
"7095splitHere46","12152162splitHere46","mvn dependency-tree"
"7096splitHere46","12152224splitHere46","Component.getAlignmentY"
"7097splitHere46","12152224splitHere46","JTextPane"
"7098splitHere46","12152224splitHere46","setAlignmentY"
"7099splitHere46","12152224splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JTextPane;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class TextPaneDemo {<newline46mondego>    private static void createAndShowGUI() {<newline46mondego>        final JTextPane pane = new JTextPane();<newline46mondego>        pane.setText(<doubleQuotes46>Some text<doubleQuotes46>);<newline46mondego><newline46mondego>        JButton buttonButton = new JButton(<doubleQuotes46>Insert label<doubleQuotes46>);<newline46mondego>        buttonButton.addActionListener(new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent event) {<newline46mondego>                JLabel label = new JLabel(<doubleQuotes46>label<doubleQuotes46>);<newline46mondego>                label.setAlignmentY(0.85f);<newline46mondego>                pane.insertComponent(label);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        JPanel panel = new JPanel(new BorderLayout());<newline46mondego>        panel.add(buttonButton, BorderLayout.SOUTH);<newline46mondego>        panel.add(pane, BorderLayout.CENTER);<newline46mondego><newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(panel);<newline46mondego>        frame.setSize(400, 200);<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7100splitHere46","12152277splitHere46","class FileWorker extends SwingWorker<File, File>"
"7101splitHere46","12152277splitHere46","class Supervisor extends SwingWorker<Queue<File>, File>"
"7102splitHere46","12152277splitHere46","FileWorker"
"7103splitHere46","12152277splitHere46","Supervisor"
"7104splitHere46","12152277splitHere46","cancel()"
"7105splitHere46","12152277splitHere46","SwingWorker"
"7106splitHere46","12152302splitHere46","Thread.start()"
"7107splitHere46","12152352splitHere46","Calendar cal = Calendar.getInstance(); // returns current time in user's default TimeZone<newline46mondego>cal.set(Calendar.MILLISECOND, 0);<newline46mondego>cal.set(Calendar.SECOND, 0);<newline46mondego>cal.set(Calendar.MINUTE, 0);<newline46mondego>cal.set(Calendar.HOUR_OF_DAY, 19);<newline46mondego>long time = cal.getTime().getTime();<newline46mondego>"
"7108splitHere46","12152403splitHere46","\b<newline46mondego>"
"7109splitHere46","12152403splitHere46","strLine.split(<doubleQuotes46>\\b<doubleQuotes46> +variableN[1] + <doubleQuotes46>\\b<doubleQuotes46>);<newline46mondego>"
"7110splitHere46","12152403splitHere46","strLine.replaceAll(<doubleQuotes46>\\b<doubleQuotes46> +variableN[1] + <doubleQuotes46>\\b<doubleQuotes46>, <doubleQuotes46>VARIABLE_TO_MONITOR_<doubleQuotes46> + variableN[1]);<newline46mondego>"
"7111splitHere46","12152410splitHere46","Element root = document.getDocumentElement();<newline46mondego>root.appendChild(document.createElement(<doubleQuotes46>first-name<doubleQuotes46>));<newline46mondego>"
"7112splitHere46","12152410splitHere46","first-name"
"7113splitHere46","12152410splitHere46","Element root = document.getDocumentElement();<newline46mondego>if (root.hasChildNodes()) {<newline46mondego>    Node firstChild = root.getFirstChild();<newline46mondego>    root.insertBefore(document.createElement(<doubleQuotes46>first-name<doubleQuotes46>), firstChild);<newline46mondego>} else {<newline46mondego>    // Append to as per previous example<newline46mondego>}<newline46mondego>"
"7114splitHere46","12152410splitHere46","Eleement firstName = document.createElement(<doubleQuotes46>first-name<doubleQuotes46>);<newline46mondego>firstName.setTextContent(<doubleQuotes46>Henry<doubleQuotes46>);<newline46mondego>"
"7115splitHere46","12152433splitHere46","<bean id=<doubleQuotes46>partneriLogicImpl<doubleQuotes46> class=<doubleQuotes46>org.springframework.remoting.caucho.HessianProxyFactoryBean<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>serviceUrl<doubleQuotes46> value=<doubleQuotes46>http://localhost:8080/hr.spi.service/hessian/lcspi/lczaj/partneri<doubleQuotes46> /><newline46mondego>  <property name=<doubleQuotes46>serviceInterface<doubleQuotes46> value=<doubleQuotes46>hr.spi.logic.lcspi.lczaj.PartneriLogic<doubleQuotes46> /><newline46mondego>  <property name=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46>${username}<doubleQuotes46> /><newline46mondego>  <property name=<doubleQuotes46>password<doubleQuotes46> value=<doubleQuotes46>${password}<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"7116splitHere46","12152443splitHere46","@Test<newline46mondego>public void testJackson() throws Exception {<newline46mondego>    List<Number> numbers = new ArrayList<Number>();<newline46mondego>    numbers.add(100L);<newline46mondego>    numbers.add(new Long(Integer.MAX_VALUE) + 1000L);<newline46mondego>    numbers.add(10.0);<newline46mondego>    ObjectMapper om = new ObjectMapper();<newline46mondego>    System.out.println(om.writeValueAsString(numbers));<newline46mondego>    List<Number> newNumbers = om.readValue(om.writeValueAsString(numbers), ArrayList.class);<newline46mondego>    System.out.println(newNumbers);<newline46mondego>    assertEquals(Integer.class, newNumbers.get(0).getClass());<newline46mondego>    assertEquals(newNumbers.get(1).getClass(), Long.class);<newline46mondego>    assertTrue(! numbers.equals(newNumbers) );<newline46mondego>}<newline46mondego>"
"7117splitHere46","12152443splitHere46","numbers"
"7118splitHere46","12152443splitHere46","newNumbers"
"7119splitHere46","12152443splitHere46","100L"
"7120splitHere46","12152491splitHere46","1) Open RAD and Start WCS server.<newline46mondego>2) Log on to WebSphere administration console.<newline46mondego>3) Select Servers-->Server types -->WebSphere application servers --> server1 -->Java and process management --> Process definition -->Java virtual machine.<newline46mondego>4) Change the value of Maximum heap size field.(Eg 512 to 1024)<newline46mondego>5) Save and restart the server.And Republish the application.<newline46mondego>"
"7121splitHere46","12152539splitHere46","list1.setOnItemClickListener(new OnItemClickListener() {<newline46mondego>    @Override<newline46mondego>    public void onItemClick(AdapterView<?> parent, View v, int position, long id) {<newline46mondego>        // Do whatever you want with m_photo_captions here<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7122splitHere46","12152539splitHere46","getView()"
"7123splitHere46","12152539splitHere46","public class PhotoAdapter extends ArrayAdapter<Photo> {<newline46mondego>    LayoutInflater mInflater;<newline46mondego><newline46mondego>    public PhotoAdapter(Context context, int textViewResourceId,<newline46mondego>            ArrayList<Photo> objects) {<newline46mondego>        super(context, textViewResourceId, objects);<newline46mondego>        mInflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        final Photo i = get(position);<newline46mondego>        View v = convertView;<newline46mondego><newline46mondego>        if (v == null) {<newline46mondego>            v = mInflater.inflate(R.layout.listview_row, null);<newline46mondego>            // Initialize your ViewHolder here!<newline46mondego>        }<newline46mondego><newline46mondego>        // Update your TextViews, ImageViews, etc here<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7124splitHere46","12152584splitHere46","String s = Double.valueOf(<doubleQuotes46>+000011111.11<doubleQuotes46>).toString();<newline46mondego>"
"7125splitHere46","12152615splitHere46","TestSync"
"7126splitHere46","12152615splitHere46","public static void main (String[] args) throws java.lang.Exception {<newline46mondego>        for (int i = 0; i < 10; i++) {  <newline46mondego>            new Thread1().start();  <newline46mondego>        }  <newline46mondego>}<newline46mondego><newline46mondego>//no need for this to be an instance method, or internally synchronized<newline46mondego>public static int getNum(int i) {  <newline46mondego>       return i + 1;  <newline46mondego>}<newline46mondego><newline46mondego>static class Thread1 extends Thread {  <newline46mondego>    static Integer value = 0;  <newline46mondego><newline46mondego>    @Override  <newline46mondego>    public void run() {  <newline46mondego>        while (value < 100) {<newline46mondego>            synchronized(Thread1.class) {  //this ensures that all the threads use the same lock<newline46mondego>                value = getNum(value);  <newline46mondego>                System.out.println(<doubleQuotes46>Thread-<doubleQuotes46> + this.getId() + <doubleQuotes46>:  <doubleQuotes46> + value);  <newline46mondego>            }<newline46mondego><newline46mondego>            //for the sake of illustration, we sleep to ensure some other thread goes next<newline46mondego>            try {Thread.sleep(100);} catch (Exception ignored) {} <newline46mondego>        }<newline46mondego>    }  <newline46mondego>}<newline46mondego>"
"7127splitHere46","12152615splitHere46","getNum()"
"7128splitHere46","12152615splitHere46","value = getNum(value);"
"7129splitHere46","12152615splitHere46","value++;"
"7130splitHere46","12152855splitHere46","for"
"7131splitHere46","12152855splitHere46","for (int i = 0; i < 100; i++)<newline46mondego>    ;<newline46mondego><newline46mondego>{<newline46mondego>    count++;<newline46mondego>}<newline46mondego>"
"7132splitHere46","12152855splitHere46","count++"
"7133splitHere46","12152855splitHere46","for"
"7134splitHere46","12152855splitHere46","count++"
"7135splitHere46","12152855splitHere46","for (int i = 0; i < 100; i++);"
"7136splitHere46","12152855splitHere46","for (int i = 0; i < 100; i++)<newline46mondego>{ ; } // no statement in the body of the loop.<newline46mondego>"
"7137splitHere46","12152855splitHere46","for"
"7138splitHere46","12152855splitHere46","indexOfSpace"
"7139splitHere46","12152855splitHere46","String"
"7140splitHere46","12152855splitHere46","int idx;<newline46mondego><newline46mondego>// for loop with no body, just incrementing idx:<newline46mondego>for (idx = 0; string.charAt(idx) != ' '; idx++);<newline46mondego><newline46mondego>// now idx will point to the index of the ' '<newline46mondego>"
"7141splitHere46","12152896splitHere46","tratdb4o.getMedication()==tratJson.getMedication()<newline46mondego>"
"7142splitHere46","12152896splitHere46","tratdb4o.getMedication().equals(tratJson.getMedication())<newline46mondego>"
"7143splitHere46","12153167splitHere46","while(true)"
"7144splitHere46","12153167splitHere46","while(someBooleanVariable)"
"7145splitHere46","12153167splitHere46","public class MovementThread extends Runnable{<newline46mondego><newline46mondego>    private float[] myObject;<newline46mondego>    volatile boolean stillAlive = true;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>       while (stillAlive)<newline46mondego>       {<newline46mondego>          processMyObject();<newline46mondego>          Thread.sleep(1000);<newline46mondego>       }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private synchronized void processMyObject()<newline46mondego>    {<newline46mondego>       // Modify or read myObject<newline46mondego>    }<newline46mondego><newline46mondego>    public void kill()<newline46mondego>    {<newline46mondego>       stillAlive = false;<newline46mondego>    }  <newline46mondego><newline46mondego>    public synchronized void setMyObject(float[] array) {<newline46mondego>        myObject = array;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7146splitHere46","12153242splitHere46","EventListenerList"
"7147splitHere46","12153242splitHere46","JComponent"
"7148splitHere46","12153242splitHere46","JFreeChart"
"7149splitHere46","12153242splitHere46","JComponent"
"7150splitHere46","12153266splitHere46","compareTo"
"7151splitHere46","12153266splitHere46","public boolean inRange(String lowerBound, String upperBound, String input) {<newline46mondego>    // (First, be sure to check for null values)<newline46mondego>    return input.compareToIgnoreCase(lowerBound) >= 0 && input.compareToIgnoreCase(upperBound) <= 0<newline46mondego>}<newline46mondego>"
"7152splitHere46","12153434splitHere46","equals"
"7153splitHere46","12153434splitHere46","hashCode"
"7154splitHere46","12153434splitHere46","public boolean equals(final Object other) {<newline46mondego>  if (other instanceof NewClass) {<newline46mondego>    final NewClass _other = (NewClass) other;<newline46mondego>    return name.equals(_other.name)<newline46mondego>      && (surname == null && surname == _other.surname<newline46mondego>        || surname.equals(_other.surname))<newline46mondego>      && (address == null && address == _other.address<newline46mondego>        || address.equals(_other.address));<newline46mondego>  } else {<newline46mondego>    return false;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public int hashCode() {<newline46mondego>  return name.hashCode() * 961<newline46mondego>    + (surname == null ? 0 : surname.hashCode()) * 31<newline46mondego>    + (address == null ? 0 : address.hashCode());<newline46mondego>}<newline46mondego>"
"7155splitHere46","12153434splitHere46","NewClass"
"7156splitHere46","12153434splitHere46","/* they are equal */<newline46mondego>assert new NewClass(<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>).equals(new NewClass(<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>));<newline46mondego>"
"7157splitHere46","12153484splitHere46","gsdll64"
"7158splitHere46","12153506splitHere46","getTableCellRendererComponent"
"7159splitHere46","12153506splitHere46","getTableCellRendererComponent"
"7160splitHere46","12153612splitHere46","AbstractInitializer"
"7161splitHere46","12153612splitHere46","private final Class<INTERACTION> interactionType;<newline46mondego>private final Class<INVOCATION> invocationType;<newline46mondego>private final Constructor<INTERACTION> interactionConstructor;<newline46mondego><newline46mondego>public AbstractInitializer(final Class<INTERACTION> interactionType,<newline46mondego>    final Class<INVOCATION> invocationType) throws NoSuchMethodException {<newline46mondego>  this.interactionType = interactionType;<newline46mondego>  this.invocationType = invocationType;<newline46mondego>  interactionConstructor = interactionType.getConstructor(invocationType);<newline46mondego>}<newline46mondego><newline46mondego>public INTERACTION handle(Message message) throws IOException, MessageException,<newline46mondego>        InvocationTargetException, InstantiationException, IllegalAccessException {<newline46mondego>  checkMessageIsNotNull(message);<newline46mondego>  INVOCATION invocation = construct(message.getBody().toString());<newline46mondego>  l.debug(<doubleQuotes46>handling in initializer...  {}<doubleQuotes46>, invocation);<newline46mondego>  return interactionConstructor.newInstance(invocation);<newline46mondego>}<newline46mondego><newline46mondego>public INVOCATION construct(String message) throws IOException, MessageException {<newline46mondego>  ObjectMapper mapper = new ObjectMapper();<newline46mondego>  INVOCATION invocation;<newline46mondego>  try {<newline46mondego>    invocation = mapper.readValue(message, invocationType);<newline46mondego>  } catch (IOException e) {<newline46mondego>    throw new MessageException(<doubleQuotes46>Can't deserialize message<doubleQuotes46>, e);<newline46mondego>  }<newline46mondego>  return invocation;<newline46mondego>}<newline46mondego>"
"7162splitHere46","12153612splitHere46","public final class PingInitializer<newline46mondego>    extends AbstractInitializer<PingInteraction, PingInvocation> {<newline46mondego><newline46mondego>  public PingInitializer() {<newline46mondego>    super(PingInteraction.class, PingInvocation.class);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7163splitHere46","12153612splitHere46","abstract"
"7164splitHere46","12153612splitHere46","public static GenericInitializer<A, B> createInitializer(final Class<A> a,<newline46mondego>    final Class<B> b) {<newline46mondego>  return new GenericInitializer<A, B>(a, b);<newline46mondego>}<newline46mondego><newline46mondego>final GenericInitializer<PingInteraction, PingInvocation> pingInitializer<newline46mondego>    = createInitializer(PingInteraction.class, PingInvocation.class);<newline46mondego>"
"7165splitHere46","12153669splitHere46","Class.getResource"
"7166splitHere46","12153669splitHere46","/"
"7167splitHere46","12153669splitHere46","ClassLoader.getResource"
"7168splitHere46","12153669splitHere46","/"
"7169splitHere46","12153669splitHere46","URL resource = MyJavaFile.class<newline46mondego>      .getResource(<doubleQuotes46>/PackageB/PackageBa/PackageBaa/MyImage.png<doubleQuotes46>);<newline46mondego>"
"7170splitHere46","12153669splitHere46","URL resource = MyJavaFile.class.getClassLoader()<newline46mondego>      .getResource(<doubleQuotes46>PackageB/PackageBa/PackageBaa/MyImage.png<doubleQuotes46>);<newline46mondego>"
"7171splitHere46","12153669splitHere46","Class.getResource"
"7172splitHere46","12153669splitHere46","URL resource = SomeClassInPackageBaa.class.getResource(<doubleQuotes46>MyImage.png<doubleQuotes46>);<newline46mondego>"
"7173splitHere46","12153669splitHere46","URL"
"7174splitHere46","12153669splitHere46","Image"
"7175splitHere46","12153669splitHere46","getResourceAsStream"
"7176splitHere46","12153669splitHere46","Class"
"7177splitHere46","12153669splitHere46","ClassLoader"
"7178splitHere46","12153776splitHere46","PrinterJob"
"7179splitHere46","12153776splitHere46","PrinterJob pj = PrinterJob.getPrinterJob();<newline46mondego>    pj.printDialog();<newline46mondego>"
"7180splitHere46","12153813splitHere46","given().<newline46mondego>        queryParam(<doubleQuotes46>name, <doubleQuotes46>value<doubleQuotes46>).<newline46mondego>        body(..).<newline46mondego>when().<newline46mondego>        post(..);<newline46mondego>"
"7181splitHere46","12153826splitHere46","public static void logToConsole(String str) {</p><newline46mondego><newline46mondego><pre><code>     System.out.println(str);<newline46mondego>"
"7182splitHere46","12153826splitHere46","//Vector which will hold your logs"
"7183splitHere46","12153826splitHere46","<newline46mondego>private static Vector logData = new Vector();</p><newline46mondego><newline46mondego><p>public static void logToScreen(String str) {</p><newline46mondego><newline46mondego><pre><code>    logData.add(str);<newline46mondego>"
"7184splitHere46","12153826splitHere46","<newline46mondego>public static Vector getLogData() {</p><newline46mondego><newline46mondego><pre><code>    return logData;<newline46mondego>"
"7185splitHere46","12153900splitHere46","^SDPCDR\w+(\d{8})-\w+.asn$<newline46mondego>"
"7186splitHere46","12153949splitHere46","Action actionA = new AbstractAction(<doubleQuotes46>Synch A to clock<doubleQuotes46>) {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        // do stuff A<newline46mondego>    }<newline46mondego>};<newline46mondego>JRadioButtonMenuItem buttonA = new JRadioButtonMenuItem(actionA);<newline46mondego>Action actionB = new AbstractAction(<doubleQuotes46>Synch B to clock<doubleQuotes46>) {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        // do stuff B<newline46mondego>    }<newline46mondego>};<newline46mondego>JRadioButtonMenuItem buttonB = new JRadioButtonItem(actionB);<newline46mondego>ButtonGroup ... // add buttons to group<newline46mondego>JPopupMenu ... // add buttons to menu<newline46mondego>"
"7187splitHere46","12153962splitHere46","SparseArray"
"7188splitHere46","12153962splitHere46","public"
"7189splitHere46","12153962splitHere46","clone"
"7190splitHere46","12154000splitHere46","<dependency><newline46mondego>    <groupId>org.hsqldb</groupId><newline46mondego>    <artifactId>hsqldb</artifactId><newline46mondego>    <version>2.2.8</version><newline46mondego></dependency><newline46mondego>"
"7191splitHere46","12154000splitHere46","systemPath"
"7192splitHere46","12154000splitHere46","<dependency><newline46mondego>   <groupId>com.oracle.jdbc</groupId><newline46mondego>   <artifactId>ojdbc6_g</artifactId><newline46mondego>   <version>11.2.0.2.0</version><newline46mondego>   <systemPath><doubleQuotes46>C:/ThirpartyJars/Oracle/ojdbc6_g.jar<doubleQuotes46></systemPath><newline46mondego></dependency><newline46mondego>"
"7193splitHere46","12154135splitHere46","stop()"
"7194splitHere46","12154135splitHere46","setDefaultCloseOperation()"
"7195splitHere46","12154135splitHere46","Platform.exit()"
"7196splitHere46","12154135splitHere46","onCloseRequest"
"7197splitHere46","12154135splitHere46","Application"
"7198splitHere46","12154372splitHere46","0.2989 * R + 0.5870 * G + 0.1140 * B<newline46mondego>"
"7199splitHere46","12154396splitHere46","try{<newline46mondego>    //try formatting with simpledate instance with year<newline46mondego> }catch (Exception thrown when no year){<newline46mondego>    try{<newline46mondego>       //try formatting with simple date instace without year<newline46mondego>    } catch (Exception e)<newline46mondego>       //something went wrong both did not accept it<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7200splitHere46","12154519splitHere46","driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);<newline46mondego>try {<newline46mondego>    driver.findElement(By.id(<doubleQuotes46>element_id<doubleQuotes46>));<newline46mondego>    System.out.println(<doubleQuotes46>Element Found<doubleQuotes46>);<newline46mondego>} catch (NoSuchElementException e) {<newline46mondego>    System.out.println(<doubleQuotes46>Element Not Found<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7201splitHere46","12154703splitHere46","archive"
"7202splitHere46","12154703splitHere46","archive"
"7203splitHere46","12154703splitHere46","resources"
"7204splitHere46","12154703splitHere46","<resources os=<doubleQuotes46>SunOS<doubleQuotes46> arch=<doubleQuotes46>sparc<doubleQuotes46>><newline46mondego>  <nativelib href=<doubleQuotes46>lib/solaris/corelibs.jar<doubleQuotes46>/><newline46mondego></resources><newline46mondego>"
"7205splitHere46","12154703splitHere46","os"
"7206splitHere46","12154703splitHere46","arch"
"7207splitHere46","12154765splitHere46","ClassNode classNode = (ClassNode) astNode;<newline46mondego>classNode.getCompileUnit().getClass(<doubleQuotes46>de.foo.bar.OtherClass<doubleQuotes46>)<newline46mondego>"
"7208splitHere46","12154765splitHere46","ClassNode"
"7209splitHere46","12154840splitHere46","javax.servlet.Filter"
"7210splitHere46","12154840splitHere46","web.xml"
"7211splitHere46","12154840splitHere46","<filter><newline46mondego>  <filter-name>DomainNameFilter</filter-name><newline46mondego>  <filter-class>com.whatever.blah.DomainNameFilter</filter-class><newline46mondego></filter>   <newline46mondego><newline46mondego> <filter-mapping><newline46mondego>  <filter-name>DomainNameFilter</filter-name><newline46mondego>  <url-pattern>/*</url-pattern><newline46mondego></filter-mapping><newline46mondego>"
"7212splitHere46","12154840splitHere46","DomainNameFilter"
"7213splitHere46","12154840splitHere46","javax.servlet.Filter"
"7214splitHere46","12154840splitHere46","doFilter()"
"7215splitHere46","12154840splitHere46","request.getServerName()<newline46mondego>"
"7216splitHere46","12154840splitHere46","chain.doFilter(request, response);"
"7217splitHere46","12154840splitHere46","doFilter()"
"7218splitHere46","12154840splitHere46","request.setAttribute(<doubleQuotes46>title<doubleQuotes46>, titleMap.get(request.getServerName()));<newline46mondego>"
"7219splitHere46","12154840splitHere46","titleMap"
"7220splitHere46","12154840splitHere46","HashMap"
"7221splitHere46","12154840splitHere46","Filter"
"7222splitHere46","12154840splitHere46","init()"
"7223splitHere46","12154840splitHere46","<title><%=request.getAttribute(<doubleQuotes46>title<doubleQuotes46>)%></title><newline46mondego>"
"7224splitHere46","12154910splitHere46","T[T=String] = String"
"7225splitHere46","12154910splitHere46","B.foo(String)"
"7226splitHere46","12154910splitHere46","A<String>.foo(String)"
"7227splitHere46","12154910splitHere46","B.foo(String)"
"7228splitHere46","12154910splitHere46","A<String>.foo(String)"
"7229splitHere46","12154910splitHere46","B"
"7230splitHere46","12154910splitHere46","A"
"7231splitHere46","12154910splitHere46","A<String>.foo(String)"
"7232splitHere46","12154910splitHere46","B.foo(String)"
"7233splitHere46","12154910splitHere46","A<String>.foo(String)"
"7234splitHere46","12154937splitHere46","public static ArrayList proc(Document htmlFile)<newline46mondego>{<newline46mondego>    Elements body = htmlFile.select(<doubleQuotes46>body<doubleQuotes46>);<newline46mondego>    ArrayList HTMLPlainText = new ArrayList();<newline46mondego><newline46mondego>    HTMLPlainText.add(htmlFile.title());<newline46mondego><newline46mondego>    for(Iterator<Element> it = body.iterator(); it.hasNext();)<newline46mondego>    {<newline46mondego>        Element pBody = it.next();<newline46mondego>        Elements. pTag = pBody.getElementsByTag(<doubleQuotes46>p<doubleQuotes46>);parents();<newline46mondego><newline46mondego>            for(int pTagCount = 0; pTagCount < pTag.size(); pTagCount++)<newline46mondego>            {<newline46mondego>                Element p = pTag.get(pTagCount);<newline46mondego>                String pt = p.text();<newline46mondego><newline46mondego>                if(pt.length() != 0)<newline46mondego>                {<newline46mondego>                    HTMLPainText.add(pt);<newline46mondego>                    pTagCount++:<newline46mondego>                }<newline46mondego><newline46mondego>                pTag.parents().empty();     <newline46mondego><newline46mondego>            }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7235splitHere46","12154955splitHere46","public static void main(String[] args){<newline46mondego>    File[] files = new File(<doubleQuotes46>temp<doubleQuotes46>).listFiles();<newline46mondego>    showFiles(files);<newline46mondego>}<newline46mondego><newline46mondego>public static void showFiles(File[] files) {<newline46mondego>    for (File file : files) {<newline46mondego>        if (file.isDirectory()) {<newline46mondego>            System.out.println(<doubleQuotes46>Directory: <doubleQuotes46> + file.getName());<newline46mondego>            showFiles(file.listFiles()); <newline46mondego>        } else {<newline46mondego>            System.out.println(<doubleQuotes46>File: <doubleQuotes46> + file.getName());<newline46mondego>            getFileNameAndSuffix(file);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>public static void getFileNameAndSuffix(File file) <newline46mondego>{<newline46mondego>    int index = file.getName().lastIndexOf('.');<newline46mondego>    System.out.println(file.getName().substring(0, index));<newline46mondego>    System.out.println(file.getName().substring(index));<newline46mondego>}<newline46mondego>"
"7236splitHere46","12155027splitHere46","ActionMap am = table.getActionMap();<newline46mondego>am.put(<doubleQuotes46>selectPreviousColumnCell<doubleQuotes46>, new PreviousFocusHandler());    <newline46mondego>am.put(<doubleQuotes46>selectNextColumnCell<doubleQuotes46>, new NextFocusHandler());    <newline46mondego>"
"7237splitHere46","12155027splitHere46","public class PreviousFocusHandler extends AbstractAction {<newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();<newline46mondego>        manager.focusPreviousComponent();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class NextFocusHandler extends AbstractAction {<newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();<newline46mondego>        manager.focusNextComponent();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7238splitHere46","12155027splitHere46","Action"
"7239splitHere46","12155027splitHere46","ActionMap am = table.getActionMap();<newline46mondego>am.get(<doubleQuotes46>selectPreviousColumnCell<doubleQuotes46>).setEnabled(false);<newline46mondego>am.get(<doubleQuotes46>selectNextColumnCell<doubleQuotes46>).setEnabled(false);<newline46mondego>"
"7240splitHere46","12155027splitHere46","Actions"
"7241splitHere46","12155276splitHere46","<a>"
"7242splitHere46","12155276splitHere46","<doubleQuotes46>foo  MyCDATA  baz<doubleQuotes46>"
"7243splitHere46","12155277splitHere46","userServiceImpl"
"7244splitHere46","12155421splitHere46","Thread"
"7245splitHere46","12155421splitHere46","run()"
"7246splitHere46","12155421splitHere46","repaint()"
"7247splitHere46","12155421splitHere46","paint()"
"7248splitHere46","12155421splitHere46","paintComponent()"
"7249splitHere46","12155421splitHere46","d = Math.sqrt((c.x - p.x) * (c.x - p.x) + (c.y - p.y) * (c.y - p.y))<newline46mondego>"
"7250splitHere46","12155421splitHere46","d = Math.sqrt((c.x - p.x) * (c.x - p.x) + (c.y - p.y) * (c.y - p.y))<newline46mondego>"
"7251splitHere46","12155421splitHere46","d, c.x, c.y, p.x"
"7252splitHere46","12155421splitHere46","p.y = c.y - Math.sqrt(d * d - ((c.x - p.x) * (c.x - p.x))<newline46mondego>"
"7253splitHere46","12155544splitHere46","Object returnedValue = A();<newline46mondego>if (returnedValue instanceof String)<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>else if (returnedValue instanceof String[])<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7254splitHere46","12155733splitHere46","public interface Node {<newline46mondego>    public int getId();<newline46mondego>    public String getName();<newline46mondego><newline46mondego>    public void saveTo(SaveVisitor visitor);<newline46mondego>}<newline46mondego><newline46mondego>public abstract class AbstractNode {<newline46mondego>    public List<Node> children;<newline46mondego><newline46mondego>    //Getters<newline46mondego>    public List<Node> getChildren() { return children; }<newline46mondego><newline46mondego>    public void addChild(Node node) {<newline46mondego>        if (children == null) {<newline46mondego>            children = new ArrayList<Node>();<newline46mondego>        }<newline46mondego><newline46mondego>        children.add(node);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void saveTo(SaveVisitor visitor) {<newline46mondego>        if (visitor != null) {<newline46mondego>            visitor.setId(getId());<newline46mondego>            visitor.setName(getName());<newline46mondego><newline46mondego>            if (children != null) {<newline46mondego>                for (Node child: children) {<newline46mondego>                    child.saveTo(visitor);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class Book extends AbstractNode {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Title extends AbstractNode {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Chapter extends AbstractNode {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Section extends AbstractNode {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Article extends AbstractNode {<newline46mondego><newline46mondego>}<newline46mondego>"
"7255splitHere46","12155733splitHere46","SaveVisitor"
"7256splitHere46","12155733splitHere46","ID"
"7257splitHere46","12155733splitHere46","Name"
"7258splitHere46","12155874splitHere46","new JSONObject(map);<newline46mondego>"
"7259splitHere46","12156026splitHere46","Object readProperty(Object source, PropertyDescriptor propertyDescriptor)"
"7260splitHere46","12156099splitHere46","LinkedList"
"7261splitHere46","12156099splitHere46","Iterator"
"7262splitHere46","12156099splitHere46","someBean.getSpecialList().iterator()"
"7263splitHere46","12156117splitHere46","Mediaplayer.pause();<newline46mondego>length = Mediaplayer.getCurrentPosition();  <newline46mondego>Mediaplayer.seekTo(length);<newline46mondego>Mediaplayer.start();<newline46mondego>"
"7264splitHere46","12156117splitHere46","length = 4 * 1000; //milliseconds, starts at 0:04<newline46mondego>Mediaplayer.seekTo(length);<newline46mondego>Mediaplayer.start();<newline46mondego>"
"7265splitHere46","12156158splitHere46","public boolean equals(Object o) { ... }<newline46mondego>"
"7266splitHere46","12156158splitHere46","public boolean equals(TestEquals o) { return false; }<newline46mondego>"
"7267splitHere46","12156195splitHere46","JScrollPane"
"7268splitHere46","12156195splitHere46","FlowLayout"
"7269splitHere46","12156195splitHere46","FlowLayout"
"7270splitHere46","12156195splitHere46","BorderLayout"
"7271splitHere46","12156195splitHere46","JPanel tableHolderPanel = new JPanel(new BorderLayout());<newline46mondego>mainPanel.add(tableHolderPanel);<newline46mondego>tableHolderPanel.add(Box.createHorizontalStrut(30), BorderLayout.WEST);<newline46mondego>tableHolderPanel.add(collectionTableScrollPane(), BorderLayout.CENTER);<newline46mondego>tableHolderPanel.add(Box.createHorizontalStrut(30), BorderLayout.EAST);<newline46mondego>"
"7272splitHere46","12156236splitHere46","-javaagent:loosejar.jar<newline46mondego>"
"7273splitHere46","12156427splitHere46","ExecutorService executor = Executors.newFixedThreadPool(10);<newline46mondego>List<Runnable> runnables = new ArrayList<Runnable> ();<newline46mondego><newline46mondego>for (int i = 0; i < 10; i++) {<newline46mondego>    Runnable r = new ClassImplementingRunnable();<newline46mondego>    runnables.add(r);<newline46mondego>    executor.submit(r);<newline46mondego>}<newline46mondego><newline46mondego>executor.shutdown();<newline46mondego>//wait until all tasks are finished<newline46mondego>executor.awaitTermination(Integer.MAX_VALUE, TimeUnit.SECONDS);<newline46mondego><newline46mondego>//re run the tasks sequentially<newline46mondego>for (ClassImplementingRunnable r : runnables) {<newline46mondego>    //the method below can access some variable in <newline46mondego>    //your ClassImplementingRunnable object, that was <newline46mondego>    //set during the first parallel run<newline46mondego>    r.doSomethingElse(); <newline46mondego>}<newline46mondego>"
"7274splitHere46","12156766splitHere46","@RunWith(MockitoJUnitRunner.class)<newline46mondego>public class ClassToTestTest {<newline46mondego><newline46mondego>    @Mock AnotherClass anotherClass;<newline46mondego>    @InjectMocks ClassToTest classToTest;<newline46mondego><newline46mondego>    @Test public void ensure_that_value___Z___is_passed_to___AnotherClass() {<newline46mondego>        classToTest.methodToTest(1, 2);<newline46mondego><newline46mondego>        verify(anotherClass).receiveSomething(eq(3));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7275splitHere46","12156766splitHere46","eq"
"7276splitHere46","12156766splitHere46","ArgumentCaptor"
"7277splitHere46","12156766splitHere46","@RunWith(MockitoJUnitRunner.class)<newline46mondego>public class ClassToTestTest {<newline46mondego><newline46mondego>    ...<newline46mondego>    @Captor ArgumentCaptor<List<Z>> listCaptor<newline46mondego><newline46mondego>    @Test public void ensure_that_list_with_value___Z___is_passed_to___AnotherClass() {<newline46mondego>        // given<newline46mondego><newline46mondego>        // when<newline46mondego>        ...<newline46mondego><newline46mondego>        // then<newline46mondego>        verify(anotherClass).receiveList(listCaptor.capture());<newline46mondego>        assertThat(listCaptor.getValue()).contains(Z);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7278splitHere46","12156804splitHere46","public QueryBase(Context context) { <newline46mondego>    super(context, DATABASE_NAME, null, DATABASE_VERSION);  <newline46mondego><newline46mondego>    this.sqh = new QueryBase(context);<newline46mondego>    this.sqdb = sqh.getWritableDatabase();<newline46mondego>}<newline46mondego>"
"7279splitHere46","12156804splitHere46","public QueryBase(Context context) { <newline46mondego>    super(context, DATABASE_NAME, null, DATABASE_VERSION);  <newline46mondego><newline46mondego>    this.sqh = this;<newline46mondego>    this.sqdb = sqh.getWritableDatabase();<newline46mondego>}<newline46mondego>"
"7280splitHere46","12156804splitHere46","sqh"
"7281splitHere46","12156804splitHere46","sqh == this"
"7282splitHere46","12156871splitHere46","curl http://localhost:8983/solr/db/dataimport?command=full-import <newline46mondego>"
"7283splitHere46","12156871splitHere46","#!/bin/bash<newline46mondego>curl http://localhost:8983/solr/db/dataimport?command=$1<newline46mondego>"
"7284splitHere46","12156871splitHere46","$ my-indexing-script.sh full-import<newline46mondego>"
"7285splitHere46","12157194splitHere46","public class NetworkStateReceiver extends BroadcastReceiver {<newline46mondego>    public void onReceive(Context context, Intent intent) {<newline46mondego>     super.onReceive(context, intent);<newline46mondego>     Log.d(<doubleQuotes46>app<doubleQuotes46>,<doubleQuotes46>Network connectivity change<doubleQuotes46>);<newline46mondego>     if(intent.getExtras()!=null) {<newline46mondego>        NetworkInfo ni=(NetworkInfo) intent.getExtras().get(ConnectivityManager.EXTRA_NETWORK_INFO);<newline46mondego>        if(ni!=null && ni.getState()==NetworkInfo.State.CONNECTED) {<newline46mondego>            Log.i(<doubleQuotes46>app<doubleQuotes46>,<doubleQuotes46>Network <doubleQuotes46>+ni.getTypeName()+<doubleQuotes46> connected<doubleQuotes46>);<newline46mondego>        }<newline46mondego>     }<newline46mondego>     if(intent.getExtras().getBoolean(ConnectivityManager.EXTRA_NO_CONNECTIVITY,Boolean.FALSE)) {<newline46mondego>            Log.d(<doubleQuotes46>app<doubleQuotes46>,<doubleQuotes46>There's no network connectivity<doubleQuotes46>);<newline46mondego>     }<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego><receiver android:name=<doubleQuotes46>.NetworkStateReceiver<doubleQuotes46>><newline46mondego>   <intent-filter><newline46mondego>      <action android:name=<doubleQuotes46>android.net.conn.CONNECTIVITY_CHANGE<doubleQuotes46> /><newline46mondego>   </intent-filter><newline46mondego></receiver><newline46mondego><uses-permission android:name=<doubleQuotes46>android.permission.ACCESS_NETWORK_STATE<doubleQuotes46> /><newline46mondego>"
"7286splitHere46","12157262splitHere46","model.write()"
"7287splitHere46","12157262splitHere46","SELECT"
"7288splitHere46","12157262splitHere46","ResultSetFormatter.outputAsRDF()"
"7289splitHere46","12157262splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>...<newline46mondego>int queryType = q.getQueryType();<newline46mondego>switch (queryType) {<newline46mondego>case Query.QueryTypeAsk:<newline46mondego>    boolean b = qe.execAsk();<newline46mondego>    ResultSetFormatter.outputAsRDF(baos, notation, b);<newline46mondego>    retval = baos.toString();<newline46mondego>    break;<newline46mondego>case Query.QueryTypeConstruct:<newline46mondego>    model = qe.execConstruct();<newline46mondego>    model.write(baos, notation);<newline46mondego>    retval = baos.toString();<newline46mondego>    break;<newline46mondego>case Query.QueryTypeDescribe:<newline46mondego>    model = qe.execDescribe();<newline46mondego>    model.write(baos, notation);<newline46mondego>    retval = baos.toString();<newline46mondego>    break;<newline46mondego>case Query.QueryTypeSelect:<newline46mondego>    ResultSet results = qe.execSelect();<newline46mondego>    ResultSetFormatter.out(baos, results);<newline46mondego>    retval = baos.toString();<newline46mondego>    break;<newline46mondego>}<newline46mondego>"
"7290splitHere46","12157491splitHere46","SimpleDateFormat simpleFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss<doubleQuotes46>);"
"7291splitHere46","12157504splitHere46","clone"
"7292splitHere46","12157504splitHere46","System.arrayCopy"
"7293splitHere46","12157504splitHere46","Arrays.copyOf"
"7294splitHere46","12157504splitHere46","public static void main(String[] args) throws InterruptedException,<newline46mondego>        IOException {<newline46mondego>    int sum = 0;<newline46mondego>    int[] warmup = new int[1];<newline46mondego>    warmup[0] = 1;<newline46mondego>    for (int i = 0; i < 15000; i++) { // triggers JIT<newline46mondego>        sum += copyClone(warmup);<newline46mondego>        sum += copyArrayCopy(warmup);<newline46mondego>        sum += copyCopyOf(warmup);<newline46mondego>    }<newline46mondego><newline46mondego>    int count = 10_000_000;<newline46mondego>    int[] array = new int[count];<newline46mondego>    for (int i = 0; i < count; i++) {<newline46mondego>        array[i] = i;<newline46mondego>    }<newline46mondego><newline46mondego>    // additional warmup for main<newline46mondego>    for (int i = 0; i < 10; i++) {<newline46mondego>        sum += copyArrayCopy(array);<newline46mondego>    }<newline46mondego>    System.gc();<newline46mondego>    // copyClone<newline46mondego>    long start = System.nanoTime();<newline46mondego>    for (int i = 0; i < 10; i++) {<newline46mondego>        sum += copyClone(array);<newline46mondego>    }<newline46mondego>    long end = System.nanoTime();<newline46mondego>    System.out.println(<doubleQuotes46>clone: <doubleQuotes46> + (end - start) / 1000000);<newline46mondego>    System.gc();<newline46mondego>    // copyArrayCopy<newline46mondego>    start = System.nanoTime();<newline46mondego>    for (int i = 0; i < 10; i++) {<newline46mondego>        sum += copyArrayCopy(array);<newline46mondego>    }<newline46mondego>    end = System.nanoTime();<newline46mondego>    System.out.println(<doubleQuotes46>arrayCopy: <doubleQuotes46> + (end - start) / 1000000);<newline46mondego>    System.gc();<newline46mondego>    // copyCopyOf<newline46mondego>    start = System.nanoTime();<newline46mondego>    for (int i = 0; i < 10; i++) {<newline46mondego>        sum += copyCopyOf(array);<newline46mondego>    }<newline46mondego>    end = System.nanoTime();<newline46mondego>    System.out.println(<doubleQuotes46>Arrays.copyOf: <doubleQuotes46> + (end - start) / 1000000);<newline46mondego>    // sum<newline46mondego>    System.out.println(sum);<newline46mondego>}<newline46mondego><newline46mondego>private static int copyClone(int[] array) {<newline46mondego>    int[] copy = array.clone();<newline46mondego>    return copy[copy.length - 1];<newline46mondego>}<newline46mondego><newline46mondego>private static int copyArrayCopy(int[] array) {<newline46mondego>    int[] copy = new int[array.length];<newline46mondego>    System.arraycopy(array, 0, copy, 0, array.length);<newline46mondego>    return copy[copy.length - 1];<newline46mondego>}<newline46mondego><newline46mondego>private static int copyCopyOf(int[] array) {<newline46mondego>    int[] copy = Arrays.copyOf(array, array.length);<newline46mondego>    return copy[copy.length - 1];<newline46mondego>}<newline46mondego>"
"7295splitHere46","12157648splitHere46","Search.this.objAdapter"
"7296splitHere46","12157648splitHere46","objAdapter"
"7297splitHere46","12157648splitHere46","Search.this"
"7298splitHere46","12157648splitHere46","Search"
"7299splitHere46","12157752splitHere46","<?xml version='1.0' encoding='UTF-8' ?><newline46mondego><!DOCTYPE html PUBLIC <doubleQuotes46>-//W3C//DTD XHTML 1.0 Transitional//EN<doubleQuotes46> <doubleQuotes46>http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd<doubleQuotes46>><newline46mondego><html xmlns=<doubleQuotes46>http://www.w3.org/1999/xhtml<doubleQuotes46><newline46mondego>      xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46><newline46mondego>      xmlns:p=<doubleQuotes46>http://primefaces.org/ui<doubleQuotes46><newline46mondego>      xmlns:f=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46><newline46mondego>      ><newline46mondego>    <h:head><newline46mondego>        <title>Facelet Title</title><newline46mondego>    </h:head><newline46mondego>    <h:body><newline46mondego>        <h1>Adicionar ReferÃªncias</h1><newline46mondego>        <h:form id=<doubleQuotes46>formID<doubleQuotes46> onkeypress=<doubleQuotes46>if (event.keyCode == '13') {return false;}<doubleQuotes46>><newline46mondego>            <h:outputLabel>ReferÃªncia</h:outputLabel><newline46mondego>            <h:inputText  id=<doubleQuotes46>referenciaLoookup<doubleQuotes46> value=<doubleQuotes46>#{testController.referencia}<doubleQuotes46><newline46mondego>                          onkeypress=<doubleQuotes46>if (event.keyCode == '13') {document.getElementById('formID:testeButton').click()}<doubleQuotes46><newline46mondego>                          > <newline46mondego>            </h:inputText><newline46mondego><newline46mondego>            <h:inputText value=<doubleQuotes46>#{testController.referencia}<doubleQuotes46> <newline46mondego>                         onkeypress=<doubleQuotes46>if (event.keyCode == 13) { onchange(); return false; }<doubleQuotes46>><newline46mondego>                <f:ajax event=<doubleQuotes46>change<doubleQuotes46> listener=<doubleQuotes46>#{testController.teste(event)}<doubleQuotes46> /><newline46mondego>            </h:inputText><newline46mondego><newline46mondego><newline46mondego>            <p:commandButton id=<doubleQuotes46>lookup<doubleQuotes46> value=<doubleQuotes46>lookup<doubleQuotes46><newline46mondego>                             actionListener=<doubleQuotes46>#{testController.listener(a)}<doubleQuotes46>/><newline46mondego><newline46mondego>            <p:commandButton id=<doubleQuotes46>adicionar<doubleQuotes46> value=<doubleQuotes46>Adicionar<doubleQuotes46> <newline46mondego>                             actionListener=<doubleQuotes46>#{testController.addAction(e)}<doubleQuotes46>><newline46mondego>            </p:commandButton><newline46mondego><newline46mondego>            <p:commandButton id=<doubleQuotes46>testeButton<doubleQuotes46> value=<doubleQuotes46>teste<doubleQuotes46> style=<doubleQuotes46>visibility: hidden;<doubleQuotes46><newline46mondego>                             actionListener=<doubleQuotes46>#{testController.teste(event)}<doubleQuotes46>/><newline46mondego>        </h:form><newline46mondego>    </h:body><newline46mondego></html><newline46mondego>"
"7300splitHere46","12157869splitHere46","GridBagConstraints"
"7301splitHere46","12157869splitHere46","GridBagConstraints c = new GridBagConstraints();<newline46mondego>// Position in upper left corner<newline46mondego>c.gridx = 0;<newline46mondego>c.gridy = 0;<newline46mondego><newline46mondego>panel.add(component, c);<newline46mondego>"
"7302splitHere46","12158045splitHere46","public class HelloApplication extends Application {<newline46mondego>        private int globalVariable=1;<newline46mondego><newline46mondego>        public int getGlobalVariable() {<newline46mondego>                return globalVariable;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setGlobalVariable(int globalVariable) {<newline46mondego>                this.globalVariable = globalVariable;<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        public void onCreate() {<newline46mondego>                //reinitialize variable<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"7303splitHere46","12158045splitHere46","(HelloApplication)getApplication()).setGlobalVariable(10);<newline46mondego>int valiable=((HelloApplication)getApplication()).getGlobalVariable();<newline46mondego>"
"7304splitHere46","12158084splitHere46","A"
"7305splitHere46","12158084splitHere46","public class A {<newline46mondego>   private String attributeName;<newline46mondego><newline46mondego>   public String getAttributeName() {<newline46mondego>       return attributeName;<newline46mondego>   }<newline46mondego><newline46mondego>   public void method(){<newline46mondego>        ...<newline46mondego><newline46mondego>        try {<newline46mondego>            //code is written here.<newline46mondego>            attributeName = lAttribute.getName(); <newline46mondego>        }<newline46mondego>        catch() { <newline46mondego>        } <newline46mondego>   } <newline46mondego>}<newline46mondego>"
"7306splitHere46","12158084splitHere46","public class B {<newline46mondego>    A a = new A();<newline46mondego><newline46mondego>    // somewhere<newline46mondego>    String str = a.getAttributeName();<newline46mondego>}<newline46mondego>"
"7307splitHere46","12158084splitHere46","throws"
"7308splitHere46","12158084splitHere46","public class A {<newline46mondego><newline46mondego>    public void method() throws IOException {<newline46mondego><newline46mondego>        //code is written here.<newline46mondego>        String attributeName = lAttribute.getName(); <newline46mondego>    } <newline46mondego><newline46mondego>    public void anotherMethod() {<newline46mondego>        try {<newline46mondego>            method();<newline46mondego>        } catch(IOException ex) {<newline46mondego>            ...<newline46mondego>        } <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7309splitHere46","12158084splitHere46","method"
"7310splitHere46","12158113splitHere46","<set> <newline46mondego>"
"7311splitHere46","12158113splitHere46","<evaluate expression><newline46mondego>"
"7312splitHere46","12158252splitHere46","http://host/resources?key=somekey&operation=return+{newkey:123,data1:<doubleQuotes46>hello<doubleQuotes46>};<newline46mondego>"
"7313splitHere46","12158348splitHere46","src/main/resources"
"7314splitHere46","12158394splitHere46","System.currentTimeInMillis()"
"7315splitHere46","12158394splitHere46","System.nanoTime()"
"7316splitHere46","12158394splitHere46","Java SNTP Client"
"7317splitHere46","12158722splitHere46","embedded"
"7318splitHere46","12158727splitHere46","@Value"
"7319splitHere46","12158727splitHere46","@Value(<doubleQuotes46>#{UgcDataSource.url}<doubleQuotes46>)<newline46mondego>private String url;<newline46mondego>"
"7320splitHere46","12158734splitHere46","@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, <newline46mondego>   mappedBy = <doubleQuotes46>expExpedientes<doubleQuotes46>)   <newline46mondego>private Set<ExpInstrucciones> expInstrucciones;     <newline46mondego>"
"7321splitHere46","12158734splitHere46","mappedBy"
"7322splitHere46","12158734splitHere46","@OneToMany"
"7323splitHere46","12158734splitHere46","ExpExpedientes"
"7324splitHere46","12158734splitHere46","ExpInstrucciones"
"7325splitHere46","12158751splitHere46","paintComponent"
"7326splitHere46","12158751splitHere46","Graphics"
"7327splitHere46","12158751splitHere46","Graphics#clearRect"
"7328splitHere46","12158751splitHere46","JPanel"
"7329splitHere46","12158763splitHere46","DescribeInstancesRequest request = new DescribeInstancesRequest();<newline46mondego>            List<String> valuesT1 = new ArrayList<String>();<newline46mondego>            valuesT1.add(<doubleQuotes46>my-keypair-name<doubleQuotes46>);<newline46mondego>            Filter filter = new Filter(<doubleQuotes46>key-name<doubleQuotes46>, valuesT1);<newline46mondego><newline46mondego>            DescribeInstancesResult result = ec2.describeInstances(request.withFilters(filter));<newline46mondego><newline46mondego>            List<Reservation> reservations = result.getReservations();<newline46mondego><newline46mondego>            for (Reservation reservation : reservations) {<newline46mondego>                List<Instance> instances = reservation.getInstances();<newline46mondego><newline46mondego>                for (Instance instance : instances) {<newline46mondego><newline46mondego>                    System.out.println(instance.getInstanceId());<newline46mondego><newline46mondego><newline46mondego>                }<newline46mondego>            } <newline46mondego>"
"7330splitHere46","12158782splitHere46","img"
"7331splitHere46","12158782splitHere46","String description = detailNews.getDescription();<newline46mondego>StringBuffer newDescription = new StringBuffer();<newline46mondego>int imgIndex = description.indexOf(<doubleQuotes46><img<doubleQuotes46>);<newline46mondego><newline46mondego>newDescription.append(description.substring(0, imgIndex));<newline46mondego>imgIndex = description.indexOf(<doubleQuotes46>><doubleQuotes46>, imgIndex + 1);<newline46mondego>newDescription.append(description.substring(imgIndex + 1));<newline46mondego>description = newDescription.toString();<newline46mondego>com.setBodyText(description);<newline46mondego>"
"7332splitHere46","12158815splitHere46","JFaceResources.getColorRegistry()"
"7333splitHere46","12158815splitHere46","ITheme.getColorRegistry()"
"7334splitHere46","12158815splitHere46","Display.getSystemColor(...)"
"7335splitHere46","12158979splitHere46","$.parseXML"
"7336splitHere46","12158979splitHere46","XMLDocument"
"7337splitHere46","12158979splitHere46",".find()"
"7338splitHere46","12158979splitHere46",".parent()"
"7339splitHere46","12159092splitHere46","<form:form action=<doubleQuotes46>yourUrl<doubleQuotes46> modelAttribute=<doubleQuotes46>login<doubleQuotes46> method=<doubleQuotes46>POST<doubleQuotes46>><newline46mondego><% ... %><newline46mondego></form:form><newline46mondego>"
"7340splitHere46","12159092splitHere46","// your method that prints the form<newline46mondego>public ModelAndView onGet(@ModelAttribute Login login) {<newline46mondego>    // return ...<newline46mondego>}<newline46mondego><newline46mondego>@RequestMapping(value=<doubleQuotes46>login.htm<doubleQuotes46>)<newline46mondego>public ModelAndView onSubmit(@ModelAttribute Login login) {<newline46mondego>    String userName = login.getUserName();<newline46mondego>    String password = login.getPassword();<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"7341splitHere46","12159092splitHere46","@ModelAttribute"
"7342splitHere46","12159092splitHere46","model.addAttribute(String name, Object value)"
"7343splitHere46","12159092splitHere46","@ModelAttribute Login login"
"7344splitHere46","12159092splitHere46","model.addAttribute(<doubleQuotes46>login<doubleQuotes46>, new Login());"
"7345splitHere46","12159092splitHere46","onGet"
"7346splitHere46","12159092splitHere46","modelAttribute=<doubleQuotes46>login<doubleQuotes46>"
"7347splitHere46","12159092splitHere46","<form:form>"
"7348splitHere46","12159092splitHere46","login"
"7349splitHere46","12159092splitHere46","<form:input path=<doubleQuotes46>userName<doubleQuotes46> />"
"7350splitHere46","12159092splitHere46","userName"
"7351splitHere46","12159092splitHere46","modelAttribute=<doubleQuotes46>login<doubleQuotes46>"
"7352splitHere46","12159092splitHere46","login"
"7353splitHere46","12159092splitHere46","<form:input path=<doubleQuotes46>wtf<doubleQuotes46> />"
"7354splitHere46","12159092splitHere46","Login"
"7355splitHere46","12159092splitHere46","onSubmit"
"7356splitHere46","12159092splitHere46","@ModelAttribute"
"7357splitHere46","12159092splitHere46","login"
"7358splitHere46","12159092splitHere46","ModelAndView"
"7359splitHere46","12159092splitHere46","// the methods can have the name you want<newline46mondego>// not only onGet, onPost, etc. as in servlets<newline46mondego><newline46mondego>@RequestMapping(<doubleQuotes46>url1.htm<doubleQuotes46>)<newline46mondego>public String loadAnyJsp(@ModelAttribute Login login) {<newline46mondego>    return <doubleQuotes46>path/to/my/views/login<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>@RequestMapping(<doubleQuotes46>url2.htm<doubleQuotes46>)<newline46mondego>public String redirectToAnotherController(@ModelAttribute Login login) {<newline46mondego>    return <doubleQuotes46>redirect:url1.htm<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"7360splitHere46","12159092splitHere46","...<newline46mondego><bean class=<doubleQuotes46>org.springframework.web.servlet.view.ContentNegotiatingViewResolver<doubleQuotes46> p:favorPathExtension=<doubleQuotes46>true<doubleQuotes46> p:favorParameter=<doubleQuotes46>true<doubleQuotes46> p:ignoreAcceptHeader=<doubleQuotes46>true<doubleQuotes46> p:defaultContentType=<doubleQuotes46>text/html<doubleQuotes46>><newline46mondego>    <description>Depending on extension, return html with no decoration (.html), json (.json) or xml (.xml), remaining pages are decoracted</description><newline46mondego>    <property name=<doubleQuotes46>mediaTypes<doubleQuotes46>><newline46mondego>        <map><newline46mondego>            <entry key=<doubleQuotes46>xml<doubleQuotes46> value=<doubleQuotes46>application/xml<doubleQuotes46> /><newline46mondego>            <entry key=<doubleQuotes46>json<doubleQuotes46> value=<doubleQuotes46>application/json<doubleQuotes46> /><newline46mondego>            <entry key=<doubleQuotes46>html<doubleQuotes46> value=<doubleQuotes46>text/html<doubleQuotes46> /><newline46mondego>            <entry key=<doubleQuotes46>action<doubleQuotes46> value=<doubleQuotes46>text/html<doubleQuotes46> /><newline46mondego>        </map><newline46mondego>    </property><newline46mondego>    <property name=<doubleQuotes46>defaultViews<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <bean class=<doubleQuotes46>org.springframework.web.servlet.view.xml.MarshallingView<doubleQuotes46> p:marshaller-ref=<doubleQuotes46>xstreamMarshaller<doubleQuotes46> /><newline46mondego>            <bean class=<doubleQuotes46>org.springframework.web.servlet.view.json.MappingJacksonJsonView<doubleQuotes46> /><newline46mondego>        </list><newline46mondego>    </property><newline46mondego>    <property name=<doubleQuotes46>viewResolvers<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <bean id=<doubleQuotes46>nameViewResolver<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.servlet.view.BeanNameViewResolver<doubleQuotes46>><newline46mondego>                <description>Maps a logical view name to a View instance configured as a Spring bean</description><newline46mondego>            </bean><newline46mondego>            <bean class=<doubleQuotes46>org.springframework.web.servlet.view.InternalResourceViewResolver<doubleQuotes46> p:prefix=<doubleQuotes46>/WEB-INF/views/<doubleQuotes46> p:suffix=<doubleQuotes46>.jsp<doubleQuotes46> /><newline46mondego>        </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>...<newline46mondego>"
"7361splitHere46","12159098splitHere46","Handler"
"7362splitHere46","12159098splitHere46","postDelayed(Runnable r, long delayMillis),postAtTime(Runnable r, Object token, long uptimeMillis)"
"7363splitHere46","12159098splitHere46","Handler mHandler =  new Handler() {<newline46mondego>    public void handleMessage(Message msg) {<newline46mondego><newline46mondego>      //Start runnable here.<newline46mondego>    }<newline46mondego>   };<newline46mondego><newline46mondego>mHandler.sendMessageDelayed(msg, delayMillis)<newline46mondego>"
"7364splitHere46","12159105splitHere46","public class WebViewYouTube extends Application {<newline46mondego>    @Override<newline46mondego>    public void start(Stage stage) {<newline46mondego>        StackPane root = new StackPane();<newline46mondego>        WebView webView = new WebView();<newline46mondego><newline46mondego>        final WebEngine webEngine = webView.getEngine();<newline46mondego>        root.getChildren().addAll(webView);<newline46mondego>        stage.setScene(new Scene(root, 450, 350));<newline46mondego><newline46mondego>        webEngine.loadContent(<doubleQuotes46><iframe width='420' height='315' src='http://www.youtube.com/embed/ZDzVLhjB3bk' frameborder='0' allowfullscreen></iframe><doubleQuotes46>);<newline46mondego><newline46mondego>        stage.show();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        launch();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7365splitHere46","12159105splitHere46","<StackPane xmlns:fx=<doubleQuotes46>http://javafx.com/fxml<doubleQuotes46> fx:controller=<doubleQuotes46>fxdemo.SampleController<doubleQuotes46>><newline46mondego>  <children><newline46mondego>    <WebView fx:id=<doubleQuotes46>webView<doubleQuotes46>/><newline46mondego>  </children><newline46mondego></StackPane><newline46mondego>"
"7366splitHere46","12159105splitHere46","public class SampleController implements Initializable {<newline46mondego><newline46mondego>    @FXML //  fx:id=<doubleQuotes46>webView<doubleQuotes46><newline46mondego>    private WebView webView; // Value injected by FXMLLoader<newline46mondego><newline46mondego><newline46mondego>    @Override // This method is called by the FXMLLoader when initialization is complete<newline46mondego>    public void initialize(URL fxmlFileLocation, ResourceBundle resources) {<newline46mondego>        webView.getEngine().loadContent(<doubleQuotes46><iframe width='420' height='315' src='http://www.youtube.com/embed/ZDzVLhjB3bk' /><doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7367splitHere46","12159153splitHere46","setHorizontalTextPosition(int textPosition)"
"7368splitHere46","12159153splitHere46","SwingConstants.RIGHT"
"7369splitHere46","12159157splitHere46","TypeLiteral typeLiteral = ast.newTypeLiteral();<newline46mondego>typeLiteral.setType(ast.newSimpleType(ast.newSimpleName(className)));<newline46mondego>"
"7370splitHere46","12159291splitHere46","JScollPane"
"7371splitHere46","12159291splitHere46","setPreferredSize(new Dimension(794, 1123));<newline46mondego>"
"7372splitHere46","12159429splitHere46","@PathParam"
"7373splitHere46","12159429splitHere46","@Path"
"7374splitHere46","12159429splitHere46","@Path(<doubleQuotes46>Users/{id}<doubleQuotes46>)"
"7375splitHere46","12159429splitHere46","<form>"
"7376splitHere46","12159429splitHere46","@FormParam"
"7377splitHere46","12159489splitHere46","File root = android.os.Environment.getExternalStorageDirectory();<newline46mondego>File dir = new File (root.getAbsolutePath() + <doubleQuotes46>/foldername<doubleQuotes46>);<newline46mondego>dir.mkdirs();<newline46mondego>File file = new File(dir, <doubleQuotes46>filename.txt<doubleQuotes46>);<newline46mondego><newline46mondego>try {<newline46mondego>    FileOutputStream f = new FileOutputStream(file);<newline46mondego>    PrintWriter pw = new PrintWriter(f);<newline46mondego>    pw.println(dane); //your string which you want to store<newline46mondego>    pw.flush();<newline46mondego>    pw.close();<newline46mondego>    f.close();<newline46mondego>} catch (FileNotFoundException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}   <newline46mondego>"
"7378splitHere46","12159501splitHere46","RallyRestApi restApi = new RallyRestApi(new URI(<doubleQuotes46>https://rally1.rallydev.com<doubleQuotes46>), <doubleQuotes46>user@company.com<doubleQuotes46>, <doubleQuotes46>password<doubleQuotes46>);<newline46mondego><newline46mondego>JsonObject newTestCase = new JsonObject();<newline46mondego>newTestCase.addProperty(<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Awesome Test<doubleQuotes46>);<newline46mondego>CreateRequest createRequest = new CreateRequest(<doubleQuotes46>testcase<doubleQuotes46>, newTestCase);<newline46mondego>CreateResponse createResponse = restApi.create(createRequest);<newline46mondego><newline46mondego>String newTestCaseRef = createResponse.getObject().get(<doubleQuotes46>_ref<doubleQuotes46>).getAsString();<newline46mondego>"
"7379splitHere46","12159653splitHere46","ArrayBlockingQueue"
"7380splitHere46","12159653splitHere46","take"
"7381splitHere46","12159760splitHere46","//(...)<newline46mondego>    List<Companions> companionsList = adUnitSizes.getCompanions();<newline46mondego>    iterateOverCompanions(companionsList);<newline46mondego>}<newline46mondego><newline46mondego>private void iterateOverCompanions(List<Companions> companionsList) {<newline46mondego>    for(Companions companion : companionsList) {<newline46mondego>        //Do stuff with companion<newline46mondego>        List<Companions> anotherCompanionList = companion.getCompanionsList();<newline46mondego>        if (anotherCompanionList  != null && anotherCompanionList.size()>0) {<newline46mondego>            iterateOverCompanions(anotherCompanionList);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7382splitHere46","12159760splitHere46","iterateOverCompanions(List<Companions> companionsList, Size size, AnotherStuff stuff)<newline46mondego>"
"7383splitHere46","12159803splitHere46","Child"
"7384splitHere46","12159803splitHere46","Parent"
"7385splitHere46","12159803splitHere46","Parent"
"7386splitHere46","12159803splitHere46","Parent"
"7387splitHere46","12159803splitHere46","Child"
"7388splitHere46","12159803splitHere46","getEmployeeDetails"
"7389splitHere46","12159803splitHere46","public String getEmployeeDetails() {<newline46mondego>    return <doubleQuotes46>Name: <doubleQuotes46> + name;<newline46mondego>}<newline46mondego>"
"7390splitHere46","12159803splitHere46","Child"
"7391splitHere46","12159803splitHere46","@Override<newline46mondego>public String getEmployeeDetails() {<newline46mondego>    return <doubleQuotes46>Name: <doubleQuotes46> + name + <doubleQuotes46> Salary: <doubleQuotes46> + salary;<newline46mondego>}<newline46mondego>"
"7392splitHere46","12159803splitHere46","Parent"
"7393splitHere46","12159803splitHere46","Child"
"7394splitHere46","12159803splitHere46","parent.getEmployeeDetails();<newline46mondego>"
"7395splitHere46","12159803splitHere46","Parent parent = new Parent();<newline46mondego>parent.name = 1;<newline46mondego>Child child = new Child();<newline46mondego>child.name = 2;<newline46mondego>child.salary = 2000;<newline46mondego>Parent[] employees = new Parent[] { parent, child };<newline46mondego>for (Parent employee : employees) {<newline46mondego>    employee.getEmployeeDetails();<newline46mondego>}<newline46mondego>"
"7396splitHere46","12159803splitHere46","Name: 1<newline46mondego>Name: 2 Salary: 2000<newline46mondego>"
"7397splitHere46","12159803splitHere46","Child"
"7398splitHere46","12159803splitHere46","Parent"
"7399splitHere46","12159803splitHere46","Child"
"7400splitHere46","12159803splitHere46","getEmployeeDetails()"
"7401splitHere46","12159803splitHere46","Parent"
"7402splitHere46","12159803splitHere46","Child"
"7403splitHere46","12159803splitHere46","Child.salary"
"7404splitHere46","12159803splitHere46","Child"
"7405splitHere46","12159803splitHere46","Parent"
"7406splitHere46","12159803splitHere46","Child"
"7407splitHere46","12159803splitHere46","Parent"
"7408splitHere46","12159803splitHere46","employee.getEmployeeDetails"
"7409splitHere46","12159803splitHere46","employee.name"
"7410splitHere46","12159803splitHere46","employee"
"7411splitHere46","12159803splitHere46","Parent"
"7412splitHere46","12159803splitHere46","Parent"
"7413splitHere46","12159803splitHere46","Child"
"7414splitHere46","12159803splitHere46","Child"
"7415splitHere46","12159803splitHere46","Parent"
"7416splitHere46","12159803splitHere46","Parent"
"7417splitHere46","12159803splitHere46","Child"
"7418splitHere46","12159903splitHere46","ApplicationManager.getApplicationManager().getVisibleApplications();<newline46mondego>"
"7419splitHere46","12159905splitHere46","fx:value"
"7420splitHere46","12159937splitHere46","actionListener=<doubleQuotes46>#{requestScope[beanName].method}<doubleQuotes46><newline46mondego>"
"7421splitHere46","12159937splitHere46","#{requestScope}"
"7422splitHere46","12159937splitHere46","#{beanName}"
"7423splitHere46","12159937splitHere46","Application#evaluateExpressionGet()"
"7424splitHere46","12159937splitHere46","actionListener=<doubleQuotes46>#{util:getBean(beanName).method}<doubleQuotes46><newline46mondego>"
"7425splitHere46","12159953splitHere46","import javax.annotation.PostConstruct;<newline46mondego>import javax.ejb.Singleton;<newline46mondego>import javax.ejb.Startup;<newline46mondego><newline46mondego>@Singleton<newline46mondego>@Startup<newline46mondego>public class Initializer {<newline46mondego>    @PostConstruct<newline46mondego>    public void populate() {<newline46mondego>        //initialize database here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7426splitHere46","12159966splitHere46","if(xposition == ( (oposition-1) && (oposition != 12 && oposition != 8 && oposition != 4) ) )<newline46mondego>"
"7427splitHere46","12159966splitHere46","int[] numbers = { <newline46mondego>    12, 8, 4, 13, 2, 7<newline46mondego>};<newline46mondego>boolean validation = true;<newline46mondego>for (int i : numbers) {<newline46mondego>    if (oposition == i) {<newline46mondego>        validation = false;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7428splitHere46","12160050splitHere46","@OneToMany"
"7429splitHere46","12160050splitHere46","cascade = CascadeType.ALL"
"7430splitHere46","12160050splitHere46","nullable = false"
"7431splitHere46","12160475splitHere46","java.library.path"
"7432splitHere46","12160475splitHere46","nativelib"
"7433splitHere46","12160517splitHere46","Java.util.Date"
"7434splitHere46","12160517splitHere46","SimpleDateFormat"
"7435splitHere46","12160517splitHere46","java.util.Date"
"7436splitHere46","12160517splitHere46","SimpleDateFormat"
"7437splitHere46","12160613splitHere46","public abstract class AbstractFoo {<newline46mondego>    protected final Log log = LogFactory.getLog(getClass());<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>public class Foo extends AbstractFoo {<newline46mondego>    public void someMethod() {<newline46mondego>        log.info(<doubleQuotes46>Using abstract log<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7438splitHere46","12160613splitHere46","public abstract class AbstractFoo {<newline46mondego>    protected Log log() { return LogFactory.getLog(getClass()); }<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7439splitHere46","12160663splitHere46","REN"
"7440splitHere46","12160672splitHere46","implements TelnetInputListener"
"7441splitHere46","12160672splitHere46","telnetInputAvailable()"
"7442splitHere46","12160672splitHere46","public String connect()<newline46mondego>{<newline46mondego>   String errorMessage = null;<newline46mondego>   tcConnectionHandle = new TelnetClient();<newline46mondego>   tcConnectionHandle.setDefaultTimeout(iTimeOutMilliseconds);<newline46mondego>   tcConnectionHandle.registerInputListener(this);<newline46mondego><newline46mondego>   try<newline46mondego>   {<newline46mondego>      tcConnectionHandle.connect(strConnectionIP, intConnectionPort);<newline46mondego>      osOutput = tcConnectionHandle.getOutputStream();<newline46mondego>      isInput = tcConnectionHandle.getInputStream();<newline46mondego>   }<newline46mondego>   catch(SocketException sX)<newline46mondego>   {<newline46mondego>      errorMessage = sX.getMessage();<newline46mondego>   }<newline46mondego>   catch(IOException ioX)<newline46mondego>   {<newline46mondego>      errorMessage = ioX.getMessage();<newline46mondego>   }<newline46mondego><newline46mondego>   return errorMessage;<newline46mondego>}<newline46mondego><newline46mondego>public Matcher waitForRegularExpression(String regularExpression)<newline46mondego>{<newline46mondego>   Matcher matcher;<newline46mondego>   Pattern pattern = Pattern.compile(<doubleQuotes46>(?s)<doubleQuotes46> + regularExpression);<newline46mondego>   StringBuilder warningLog = new StringBuilder();<newline46mondego><newline46mondego>   synchronized(sbInputBuffer)<newline46mondego>   {<newline46mondego>      matcher = pattern.matcher(sbInputBuffer.toString());<newline46mondego><newline46mondego>      while(!matcher.find())<newline46mondego>      {<newline46mondego>         try<newline46mondego>         {<newline46mondego>            int inputBufferSize = sbInputBuffer.length();<newline46mondego>            sbInputBuffer.wait(iTimeOutMilliseconds);<newline46mondego><newline46mondego>            if(inputBufferSize == sbInputBuffer.length())<newline46mondego>            {<newline46mondego>               warningLog.append(<doubleQuotes46>Did not find pattern and no new input.<doubleQuotes46>);<newline46mondego>               logWarning(warningLog.toString());<newline46mondego>               return null;<newline46mondego>            }<newline46mondego>         }<newline46mondego>         catch(InterruptedException intX)<newline46mondego>         {<newline46mondego>            warningLog.append(<doubleQuotes46>Interrupted waiting on input. <doubleQuotes46>).append(intX.getLocalizedMessage());<newline46mondego>         }<newline46mondego><newline46mondego>         matcher = pattern.matcher(sbInputBuffer.toString());<newline46mondego>      }<newline46mondego><newline46mondego>      sbInputBuffer.delete(0, matcher.end()-1);<newline46mondego>   }<newline46mondego><newline46mondego>   if(!warningLog.toString().isEmpty())<newline46mondego>   {<newline46mondego>      logWarning(warningLog.toString());<newline46mondego>   }<newline46mondego><newline46mondego>   return matcher;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void telnetInputAvailable()<newline46mondego>{<newline46mondego>   synchronized(sbInputBuffer)<newline46mondego>   {<newline46mondego>      StringBuilder warningLog = new StringBuilder();<newline46mondego>      int readBytes = -2;<newline46mondego><newline46mondego>      if(isInput != null)<newline46mondego>      {<newline46mondego>         try<newline46mondego>         {<newline46mondego>            readBytes = isInput.read();<newline46mondego><newline46mondego>            if(readBytes > 0)<newline46mondego>            {<newline46mondego>               sbInputBuffer.append((char)readBytes);<newline46mondego>            }<newline46mondego><newline46mondego>            sbInputBuffer.notify();<newline46mondego>         }<newline46mondego>         catch(IOException ioX)<newline46mondego>         {<newline46mondego>            warningLog.append(<doubleQuotes46>Failed for IO: <doubleQuotes46>).append(ioX.getLocalizedMessage()).append(<doubleQuotes46> - input so far: <doubleQuotes46>)<newline46mondego>               .append(sbInputBuffer.toString()).append(<doubleQuotes46>\nRead bytes: <doubleQuotes46>).append(readBytes).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>            logWarning(warningLog.toString());<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7443splitHere46","12160680splitHere46","Lists.transform"
"7444splitHere46","12160680splitHere46","final List<Integer> ids = Lists.transform(myObjs, new Function<MyObject, Long>() {<newline46mondego>    public Long apply(final MyObject input) {<newline46mondego>        return input.getId();<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7445splitHere46","12160680splitHere46","ToId"
"7446splitHere46","12160680splitHere46","Function<F, T>"
"7447splitHere46","12160681splitHere46","minOccurs=<doubleQuotes46>0<doubleQuotes46>"
"7448splitHere46","12160681splitHere46","null"
"7449splitHere46","12160681splitHere46","Integer"
"7450splitHere46","12160681splitHere46","minOccurs=<doubleQuotes46>1<doubleQuotes46>"
"7451splitHere46","12160681splitHere46","int"
"7452splitHere46","12160681splitHere46","default=<doubleQuotes46>2<doubleQuotes46>"
"7453splitHere46","12160681splitHere46","RetriesCount"
"7454splitHere46","12160681splitHere46","<RetriesCount />"
"7455splitHere46","12160681splitHere46","<RetriesCount></RetriesCount>"
"7456splitHere46","12160681splitHere46","RetriesCount"
"7457splitHere46","12160681splitHere46","null"
"7458splitHere46","12160739splitHere46","uid:j*"
"7459splitHere46","12160739splitHere46","ofy.query(EntityClass.class).filter(<doubleQuotes46>property >=<doubleQuotes46>, <doubleQuotes46>uid:j<doubleQuotes46>)<newline46mondego>                            .filter(<doubleQuotes46>property <<doubleQuotes46>, <doubleQuotes46>uid:j<doubleQuotes46> + <doubleQuotes46>\ufffd<doubleQuotes46>);<newline46mondego>"
"7460splitHere46","12160819splitHere46","hashCode()"
"7461splitHere46","12160819splitHere46","String"
"7462splitHere46","12160819splitHere46","String s = <doubleQuotes46>Hello World<doubleQuotes46>;<newline46mondego>System.out.println(s.hashCode());<newline46mondego>"
"7463splitHere46","12160819splitHere46","Object.toString()"
"7464splitHere46","12160819splitHere46","System.out.println(Integer.toHexString(s.hashCode()));<newline46mondego>"
"7465splitHere46","12160863splitHere46","ServletContext#getRealPath()"
"7466splitHere46","12160863splitHere46","<doubleQuotes46>/<doubleQuotes46>"
"7467splitHere46","12160863splitHere46","web"
"7468splitHere46","12160863splitHere46","YourWebProject<newline46mondego> |-- src<newline46mondego> |    :<newline46mondego> |<newline46mondego> |-- web<newline46mondego> |    |-- META-INF<newline46mondego> |    |    `-- MANIFEST.MF<newline46mondego> |    |-- WEB-INF<newline46mondego> |    |    `-- web.xml<newline46mondego> |    |-- index.jsp<newline46mondego> |    `-- login.jsp<newline46mondego> :    <newline46mondego>"
"7469splitHere46","12160863splitHere46","<doubleQuotes46>/<doubleQuotes46>"
"7470splitHere46","12160863splitHere46","getRealPath()"
"7471splitHere46","12160863splitHere46","/web"
"7472splitHere46","12160863splitHere46","/path/to/server/work/folder/some.war/web"
"7473splitHere46","12160863splitHere46","File"
"7474splitHere46","12160863splitHere46","FileInputStream"
"7475splitHere46","12160863splitHere46","String absolutePathToIndexJSP = servletContext.getRealPath(<doubleQuotes46>/<doubleQuotes46>) + <doubleQuotes46>index.jsp<doubleQuotes46>;<newline46mondego>"
"7476splitHere46","12160863splitHere46","String absolutePathToIndexJSP = servletContext.getRealPath(<doubleQuotes46>/index.jsp<doubleQuotes46>);<newline46mondego>"
"7477splitHere46","12160863splitHere46","null"
"7478splitHere46","12160863splitHere46","FileOutputStream"
"7479splitHere46","12160863splitHere46","getRealPath()"
"7480splitHere46","12160863splitHere46","InputStream"
"7481splitHere46","12160863splitHere46","ServletContext#getResourceAsStream()"
"7482splitHere46","12160912splitHere46","SystemProperty.applicationId.get()"
"7483splitHere46","12160994splitHere46","HttpServletRequest"
"7484splitHere46","12160994splitHere46","HttpServletRequest"
"7485splitHere46","12160994splitHere46","getHeader"
"7486splitHere46","12160994splitHere46","getInputStream"
"7487splitHere46","12160994splitHere46","getContentLength"
"7488splitHere46","12160994splitHere46","getOutputStream"
"7489splitHere46","12160994splitHere46","ServletOutputStream"
"7490splitHere46","12160994splitHere46","getWriter"
"7491splitHere46","12160994splitHere46","getOutputStream"
"7492splitHere46","12160994splitHere46","RequestDispatcher.include(request, response)"
"7493splitHere46","12160994splitHere46","HttpServletRequest"
"7494splitHere46","12160994splitHere46","HttpServletRequestWrapper"
"7495splitHere46","12160994splitHere46","RequestDispatcher.include(request, response)"
"7496splitHere46","12161195splitHere46","import somepackage.*;"
"7497splitHere46","12161230splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/textView1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>all entries<doubleQuotes46> /><newline46mondego><newline46mondego><newline46mondego>    <ListView<newline46mondego>        android:id=<doubleQuotes46>@android:id/list<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> ><newline46mondego><newline46mondego>    </ListView><newline46mondego><newline46mondego></LinearLayout><newline46mondego>"
"7498splitHere46","12161230splitHere46","setListAdapter"
"7499splitHere46","12161230splitHere46","public class SeeAllEntriesActivity extends ListActivity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_all_entries);<newline46mondego><newline46mondego>        ActivitiesObjects ao = (ActivitiesObjects)this.getApplication();<newline46mondego>        List<Customer> listOfCostumer = ao.getListOfCustomers();<newline46mondego><newline46mondego>        ListAdapter listAdapter = new ArrayAdapter(this, R.layout.activity_all_entries, listOfCostumer);<newline46mondego>        // no need to fetch list view instance<newline46mondego>        // ListView listViewCustomer = (ListView) findViewById(R.id.listViewCustomer);<newline46mondego>        setListAdapter(listAdapter);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7500splitHere46","12161230splitHere46","getListView ()"
"7501splitHere46","12161256splitHere46","series.getData().clear()"
"7502splitHere46","12161256splitHere46","ObservableList"
"7503splitHere46","12161256splitHere46","for (XYChart.Series<Number, Number> series : chart.getData()) {<newline46mondego>    List<XYChart.Data<Number, Number>> data = series.getData();<newline46mondego>    ObservableList<XYChart.Data<Number, Number>> newData =<newline46mondego>            FXCollections.<XYChart.Data<Number, Number>>observableArrayList();<newline46mondego>    for (XYChart.Data<Number, Number> item : data) {<newline46mondego>        newData.add(new XYChart.Data<Number, Number>(<newline46mondego>                item.getXValue(),<newline46mondego>                item.getYValue().floatValue() * 1.1));<newline46mondego>    }<newline46mondego>    series.getData().clear();<newline46mondego>    series.setData(newData);<newline46mondego>}<newline46mondego>"
"7504splitHere46","12161276splitHere46","ANSI_X3.4-1968"
"7505splitHere46","12161276splitHere46","ASCII"
"7506splitHere46","12161276splitHere46","=3F"
"7507splitHere46","12161276splitHere46","InternetAddress(mail, name, charset)"
"7508splitHere46","12161276splitHere46","InternetAddress"
"7509splitHere46","12161276splitHere46","UTF-8"
"7510splitHere46","12161322splitHere46","public class Prut {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        example();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void example() {<newline46mondego>        StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();<newline46mondego>        StackTraceElement element = stackTrace[2];<newline46mondego>        System.out.println(<doubleQuotes46>I was called by a method named: <doubleQuotes46> + element.getMethodName());<newline46mondego>        System.out.println(<doubleQuotes46>That method is in class: <doubleQuotes46> + element.getClassName());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7511splitHere46","12161405splitHere46","newX = centerX + (point2x-centerX)*Math.cos(x) - (point2y-centerY)*Math.sin(x);<newline46mondego><newline46mondego>newY = centerY + (point2x-centerX)*Math.sin(x) + (point2y-centerY)*Math.cos(x);<newline46mondego>"
"7512splitHere46","12161405splitHere46","x"
"7513splitHere46","12161405splitHere46","sin(x)"
"7514splitHere46","12161458splitHere46","public static String strReplace(String[] from, String[] to, String s){<newline46mondego>  for(int i=0; i<from.length; i++){<newline46mondego>    s = s.replaceAll(from[i], to[i]);<newline46mondego>  }<newline46mondego>  return s;<newline46mondego>}<newline46mondego>"
"7515splitHere46","12161585splitHere46","java.naming.referral=follow"
"7516splitHere46","12161741splitHere46","while(1)"
"7517splitHere46","12161741splitHere46","while(true)"
"7518splitHere46","12161741splitHere46","String line;<newline46mondego>while ((line = reader.readLine()) != null && TreeIterator.hasNext())<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7519splitHere46","12161789splitHere46","index++"
"7520splitHere46","12161789splitHere46","onClick"
"7521splitHere46","12161789splitHere46","index"
"7522splitHere46","12161789splitHere46","one.setOnClickListener(new View.OnClickListener() {<newline46mondego>    public void onClick(View v) {<newline46mondego>        if ( index == 0 ) {<newline46mondego>            index++;<newline46mondego>            text1.setText(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        } else if (index == 1 ) {<newline46mondego>            text2.setText(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>            index++;<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7523splitHere46","12161793splitHere46","Request request = refDataSvc.createRequest(<doubleQuotes46>HistoricalDataRequest<doubleQuotes46>);<newline46mondego>"
"7524splitHere46","12161793splitHere46","DateTimeFormatter fmt = DateTimeFormat.forPattern(<doubleQuotes46>yyyyMMdd<doubleQuotes46>);<newline46mondego>request.set(<doubleQuotes46>startDate<doubleQuotes46>, startDate.toString(fmt));<newline46mondego>request.set(<doubleQuotes46>endDate<doubleQuotes46>, endDate.toString(fmt));<newline46mondego>"
"7525splitHere46","12161793splitHere46","VWAP_START_TIME"
"7526splitHere46","12161793splitHere46","VWAP_END_TIME"
"7527splitHere46","12161793splitHere46","Element overridesElt = request.getElement(<doubleQuotes46>overrides<doubleQuotes46>);<newline46mondego>Element override = overridesElt.appendElement();<newline46mondego>override.setElement(<doubleQuotes46>fieldId<doubleQuotes46>, <doubleQuotes46>VWAP_START_TIME<doubleQuotes46>);<newline46mondego>override.setElement(<doubleQuotes46>value<doubleQuotes46>, <doubleQuotes46>09:00:00<doubleQuotes46>);<newline46mondego><newline46mondego>override = overridesElt.appendElement();<newline46mondego>override.setElement(<doubleQuotes46>fieldId<doubleQuotes46>, <doubleQuotes46>VWAP_END_TIME<doubleQuotes46>);<newline46mondego>override.setElement(<doubleQuotes46>value<doubleQuotes46>, <doubleQuotes46>11:00:00<doubleQuotes46>);<newline46mondego>"
"7528splitHere46","12161943splitHere46","<%@ page language=<doubleQuotes46>java<doubleQuotes46> import=<doubleQuotes46>java.util.*,java.sql.*,com.sp.model.*<doubleQuotes46> pageEncoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46>%><newline46mondego>"
"7529splitHere46","12162103splitHere46","setQueue"
"7530splitHere46","12162103splitHere46","litemp"
"7531splitHere46","12162103splitHere46","liperm"
"7532splitHere46","12162103splitHere46","E"
"7533splitHere46","12162103splitHere46","enqueue"
"7534splitHere46","12162104splitHere46","<% sBean.getName() %> <newline46mondego>"
"7535splitHere46","12162104splitHere46","<% SessionBean testBean = (SessionBean) session.getAttribute(<doubleQuotes46>sBean<doubleQuotes46>); //try changing name of SessionBean too so it doesn't conflict with the useBean name<newline46mondego>   testBean.getName();<newline46mondego>%><newline46mondego>"
"7536splitHere46","12162104splitHere46","<jsp:getProperty name=<doubleQuotes46>sBean<doubleQuotes46> property=<doubleQuotes46>name<doubleQuotes46> /><newline46mondego>"
"7537splitHere46","12162104splitHere46","<%@ page language=<doubleQuotes46>java<doubleQuotes46> contentType=<doubleQuotes46>text/html; charset=ISO-8859-1<doubleQuotes46> pageEncoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46>%><newline46mondego><newline46mondego><%@ page import=<doubleQuotes46>my.project.SessionBean<doubleQuotes46> %><newline46mondego><jsp:useBean id=<doubleQuotes46>sBean<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46> class=<doubleQuotes46>my.project.SessionBean<doubleQuotes46> /><newline46mondego><newline46mondego><newline46mondego><!DOCTYPE html PUBLIC <doubleQuotes46>-//W3C//DTD HTML 4.01 Transitional//EN<doubleQuotes46> <doubleQuotes46>http://www.w3.org/TR/html4/loose.dtd<doubleQuotes46>><newline46mondego><html><newline46mondego><head><newline46mondego><meta http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=ISO-8859-1<doubleQuotes46>><newline46mondego><title>Insert title here</title><newline46mondego></head><newline46mondego><body><newline46mondego><%<newline46mondego>SessionBean testBean = (SessionBean) session.getAttribute(<doubleQuotes46>sBean<doubleQuotes46>);<newline46mondego>testBean.setName(<doubleQuotes46>Nate<doubleQuotes46>);<newline46mondego>pageContext.forward(<doubleQuotes46>test2.jsp<doubleQuotes46>); //forward to test2.jsp after setting name<newline46mondego><newline46mondego>%><newline46mondego><jsp:getProperty name=<doubleQuotes46>sBean<doubleQuotes46> property=<doubleQuotes46>name<doubleQuotes46> /><newline46mondego><newline46mondego></body><newline46mondego></html><newline46mondego>"
"7538splitHere46","12162104splitHere46","<%@ page language=<doubleQuotes46>java<doubleQuotes46> contentType=<doubleQuotes46>text/html; charset=ISO-8859-1<doubleQuotes46><newline46mondego>pageEncoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46>%><newline46mondego><newline46mondego><jsp:useBean id=<doubleQuotes46>sBean<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46> class=<doubleQuotes46>my.project.SessionBean<doubleQuotes46> /><newline46mondego><%@ page import=<doubleQuotes46>my.project.SessionBean<doubleQuotes46> %><newline46mondego><newline46mondego><newline46mondego><!DOCTYPE html PUBLIC <doubleQuotes46>-//W3C//DTD HTML 4.01 Transitional//EN<doubleQuotes46> <doubleQuotes46>http://www.w3.org/TR/html4/loose.dtd<doubleQuotes46>><newline46mondego><html><newline46mondego><head><newline46mondego><meta http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=ISO-8859-1<doubleQuotes46>><newline46mondego><title>Insert title here</title><newline46mondego></head><newline46mondego><body><newline46mondego><p>page 2</p><newline46mondego><p>from jsp tag</p><newline46mondego><jsp:getProperty name=<doubleQuotes46>sBean<doubleQuotes46> property=<doubleQuotes46>name<doubleQuotes46> /><br /><newline46mondego><newline46mondego><p> from scriptlet</p><newline46mondego><%<newline46mondego>SessionBean testBean = (SessionBean) session.getAttribute(<doubleQuotes46>sBean<doubleQuotes46>);<newline46mondego>out.print(testBean.getName());<newline46mondego>%><newline46mondego><newline46mondego></body><newline46mondego></html><newline46mondego>"
"7539splitHere46","12162150splitHere46","URLCodec codec = new URLCodec();<newline46mondego>String encodedValue = codec.encode(valueToEncode);<newline46mondego>"
"7540splitHere46","12162254splitHere46","Zookeeper"
"7541splitHere46","12162254splitHere46","HadoopMaster"
"7542splitHere46","12162254splitHere46","HadoopMaster"
"7543splitHere46","12162254splitHere46","core-site.xml"
"7544splitHere46","12162254splitHere46","HadoopMaster"
"7545splitHere46","12162254splitHere46","/etc/hosts"
"7546splitHere46","12162254splitHere46","162.18.17.55      HadoopMaster<newline46mondego>"
"7547splitHere46","12162421splitHere46","public class ClassA{ <newline46mondego>  private final int size;       <newline46mondego>  private final ClassB b;<newline46mondego><newline46mondego>  public ClassA(int N){<newline46mondego>    size = N;    <newline46mondego>    b = new ClassB(size);<newline46mondego>  }<newline46mondego><newline46mondego>  public void doSomething(){<newline46mondego>    b.doSomething();        <newline46mondego>  }      <newline46mondego>}<newline46mondego>"
"7548splitHere46","12162664splitHere46","item"
"7549splitHere46","12162664splitHere46","T"
"7550splitHere46","12162664splitHere46","isMember"
"7551splitHere46","12162664splitHere46","item"
"7552splitHere46","12162664splitHere46","Test"
"7553splitHere46","12162664splitHere46","isMember"
"7554splitHere46","12162664splitHere46","T"
"7555splitHere46","12162664splitHere46","Test"
"7556splitHere46","12162664splitHere46","public boolean isMember(T item) {<newline46mondego>    return (item instanceof Test);<newline46mondego>}<newline46mondego>"
"7557splitHere46","12162664splitHere46","if(obj instanceof Test) {...}<newline46mondego>"
"7558splitHere46","12162664splitHere46","if(Test<Something>.isMember(obj)) {...}<newline46mondego>"
"7559splitHere46","12162664splitHere46","item"
"7560splitHere46","12162664splitHere46","Test<T>"
"7561splitHere46","12162966splitHere46","next()"
"7562splitHere46","12162966splitHere46","Carey"
"7563splitHere46","12162966splitHere46","Blem#ITA#6#---#4m49.8"
"7564splitHere46","12162966splitHere46","nextLine()"
"7565splitHere46","12162966splitHere46","Scanner sc = new Scanner(scFile.nextLine()).useDelimiter(<doubleQuotes46>#<doubleQuotes46>);<newline46mondego>"
"7566splitHere46","12163006splitHere46","getValue()"
"7567splitHere46","12163006splitHere46","getValue(int)"
"7568splitHere46","12163137splitHere46","GridFS"
"7569splitHere46","12163137splitHere46",".find(DBObject query)"
"7570splitHere46","12163137splitHere46",".find(String filename)"
"7571splitHere46","12163137splitHere46","List<GridFSDBFile>"
"7572splitHere46","12163137splitHere46","GridFS.find(String filename)"
"7573splitHere46","12163137splitHere46","uploadDate"
"7574splitHere46","12163137splitHere46","Collections.sort()"
"7575splitHere46","12163137splitHere46","ObjectID"
"7576splitHere46","12163137splitHere46","uploadDate"
"7577splitHere46","12163137splitHere46","ObjectID"
"7578splitHere46","12163137splitHere46","uploadDate"
"7579splitHere46","12163137splitHere46","ObjectID"
"7580splitHere46","12163137splitHere46","uploadDate"
"7581splitHere46","12163137splitHere46",".find()"
"7582splitHere46","12163137splitHere46","db.fs.files DBCollection"
"7583splitHere46","12163137splitHere46",".sort()"
"7584splitHere46","12163137splitHere46","DBCursor"
"7585splitHere46","12163137splitHere46","DBCursor"
"7586splitHere46","12163137splitHere46","GridFS"
"7587splitHere46","12163137splitHere46","GridFS.find(ObjectID)"
"7588splitHere46","12163146splitHere46","JobDetail job = newJob(SimpleJob.class)<newline46mondego>    .withIdentity(<doubleQuotes46>job1<doubleQuotes46>, <doubleQuotes46>group1<doubleQuotes46>)<newline46mondego>    .build();<newline46mondego><newline46mondego>CronTrigger trigger = newTrigger()<newline46mondego>    .withIdentity(<doubleQuotes46>trigger1<doubleQuotes46>, <doubleQuotes46>group1<doubleQuotes46>)<newline46mondego>    .withSchedule(cronSchedule(<doubleQuotes46>0/20 * * * * ?<doubleQuotes46>))<newline46mondego>    .build();<newline46mondego><newline46mondego>scheduler.scheduleJob(job, trigger);<newline46mondego>"
"7589splitHere46","12163156splitHere46","TabPane"
"7590splitHere46","12163156splitHere46","// other controls<newline46mondego><TabPane fx:id=<doubleQuotes46>tabPane<doubleQuotes46> id=<doubleQuotes46>tabPane<doubleQuotes46>><newline46mondego>   <tabs><newline46mondego>   </tabs><newline46mondego></TabPane><newline46mondego>// other controls<newline46mondego>"
"7591splitHere46","12163156splitHere46","// TabPane in fxml<newline46mondego>@FXML<newline46mondego>private TabPane tabPane;<newline46mondego><newline46mondego>// The FXMLLoader<newline46mondego>private FXMLLoader fXMLLoader = new FXMLLoader();<newline46mondego><newline46mondego>// City list fetched from server<newline46mondego>private String[] cityList = {<doubleQuotes46>Moscow<doubleQuotes46>, <doubleQuotes46>Stambul<doubleQuotes46>, <doubleQuotes46>New York<doubleQuotes46>, <doubleQuotes46>Bishkek<doubleQuotes46>};<newline46mondego><newline46mondego>// OPTIONAL : Map for <doubleQuotes46>city name - city fxml controller<doubleQuotes46> pairs<newline46mondego>private Map<String, Object> cityControllerMap = new HashMap<String, Object>();<newline46mondego><newline46mondego>// Belows are in init method<newline46mondego><newline46mondego>// Add only tabs dynamically but not their content<newline46mondego>for (String city : cityList) {<newline46mondego>    tabPane.getTabs().add(new Tab(city));<newline46mondego>}<newline46mondego><newline46mondego>// It is important to call it before adding ChangeListener to the tabPane to avoid NPE and<newline46mondego>// to be able fire the manual selection event below. Otherwise the 1st tab will be selected<newline46mondego>// with empty content.<newline46mondego>tabPane.getSelectionModel().clearSelection();<newline46mondego><newline46mondego>// Add Tab ChangeListener<newline46mondego>tabPane.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<Tab>() {<newline46mondego>    @Override<newline46mondego>    public void changed(ObservableValue<? extends Tab> observable, Tab oldValue, Tab newValue) {<newline46mondego>        System.out.println(<doubleQuotes46>Tab selected: <doubleQuotes46> + newValue.getText());<newline46mondego>        if (newValue.getContent() == null) {<newline46mondego>            try {<newline46mondego>                // Loading content on demand<newline46mondego>                Parent root = (Parent) fXMLLoader.load(this.getClass().getResource(newValue.getText() + <doubleQuotes46>.fxml<doubleQuotes46>).openStream());<newline46mondego>                newValue.setContent(root);<newline46mondego><newline46mondego>                // OPTIONAL : Store the controller if needed<newline46mondego>                cityControllerMap.put(newValue.getText(), fXMLLoader.getController());<newline46mondego><newline46mondego>            } catch (IOException ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            // Content is already loaded. Update it if necessary.<newline46mondego>            Parent root = (Parent) newValue.getContent();<newline46mondego>            // Optionally get the controller from Map and manipulate the content<newline46mondego>            // via its controller.<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>// By default, select 1st tab and load its content.<newline46mondego>tabPane.getSelectionModel().selectFirst();<newline46mondego>"
"7592splitHere46","12163156splitHere46","fXMLLoader.setController(new CommonCityController());"
"7593splitHere46","12163209splitHere46","do shell script"
"7594splitHere46","12163209splitHere46","set scriptPath to the POSIX path of (path to me)<newline46mondego>do shell script <doubleQuotes46>SCRIPTDIR=`dirname <doubleQuotes46> & scriptPath & <doubleQuotes46>` ; <doubleQuotes46> Â¬<newline46mondego>    & <doubleQuotes46>java -classpath $SCRIPTDIR/ImageRename_JAVA-1.0.0.jar:$SCRIPTDIR com.mff.image.rename.Main<doubleQuotes46><newline46mondego>"
"7595splitHere46","12163209splitHere46","java"
"7596splitHere46","12163209splitHere46","*"
"7597splitHere46","12163209splitHere46",".jar"
"7598splitHere46","12163209splitHere46","do shell script <doubleQuotes46>java -classpath <doubleQuotes46> Â¬<newline46mondego>  & <doubleQuotes46>/Applications/Something.app/Contents/Resources/Java/\\* com.example.MyClass<doubleQuotes46><newline46mondego>"
"7599splitHere46","12163209splitHere46","*"
"7600splitHere46","12163209splitHere46","\\*"
"7601splitHere46","12163303splitHere46","JTable"
"7602splitHere46","12163303splitHere46","getValueAt()"
"7603splitHere46","12163303splitHere46","TableModel"
"7604splitHere46","12163303splitHere46","extends AbstractTableModel"
"7605splitHere46","12163303splitHere46","SwingWorker"
"7606splitHere46","12163392splitHere46","getActiveScreen"
"7607splitHere46","12163392splitHere46","setLocationRelativeTo(null)"
"7608splitHere46","12163392splitHere46","static boolean windowFitsOnScreen(Window w) {<newline46mondego>    return w.getGraphicsConfiguration().getBounds().contains(w.getBounds());<newline46mondego>}<newline46mondego><newline46mondego>static void centerWindowToScreen(Window w) {<newline46mondego>    Rectangle screen = w.getGraphicsConfiguration().getBounds();<newline46mondego>    w.setLocation(<newline46mondego>        screen.x + (screen.width - w.getWidth()) / 2,<newline46mondego>        screen.y + (screen.height - w.getHeight()) / 2<newline46mondego>    );<newline46mondego>}<newline46mondego>"
"7609splitHere46","12163392splitHere46","JDialog jd;<newline46mondego>...<newline46mondego>if (!windowFitsOnScreen(jd)) centerWindowToScreen(jd);<newline46mondego>"
"7610splitHere46","12163447splitHere46","<set-property name=<doubleQuotes46>user.agent<doubleQuotes46> value=<doubleQuotes46>ie8,safari<doubleQuotes46> />"
"7611splitHere46","12163447splitHere46","safari"
"7612splitHere46","12163477splitHere46","inc()"
"7613splitHere46","12163477splitHere46","n"
"7614splitHere46","12163477splitHere46","x"
"7615splitHere46","12163477splitHere46","n+1"
"7616splitHere46","12163477splitHere46","inc"
"7617splitHere46","12163477splitHere46","n = initial Value"
"7618splitHere46","12163477splitHere46","x=0"
"7619splitHere46","12163477splitHere46","n = initialValue"
"7620splitHere46","12163477splitHere46","x = n + 1"
"7621splitHere46","12163510splitHere46","public class TableModelRowStorage <newline46mondego>    // extends AbstractBean // this is a bean convenience lass  of several binding frameworks<newline46mondego>                            // but simple to implement directly  <newline46mondego>     implements TableModelListener {<newline46mondego><newline46mondego>    private int rowCount;<newline46mondego><newline46mondego>    public TableModelRowStorage(TableModel model) {<newline46mondego>        model.addTableModelListener(this);<newline46mondego>        this.rowCount = model.getRowCount();<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public void tableChanged(TableModelEvent e) {<newline46mondego>        if (((TableModel) e.getSource()).getRowCount() != rowCount) {<newline46mondego>            int old = rowCount;<newline46mondego>            rowCount = ((TableModel) e.getSource()).getRowCount();<newline46mondego>            doStuff(old, rowCount);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    protected void doStuff(int oldRowCount, int newRowCount) {<newline46mondego>        // here goes what you want to do - all in pseudo-code<newline46mondego>        // either directly configuring a label/start timer<newline46mondego>        label.setText(<doubleQuotes46>RowCount: <doubleQuotes46> + newRowCount);<newline46mondego>        label.setForeground(newRowCount - oldRowCount > 0 ? Color.GREEN : Color.RED);<newline46mondego>        timer.start();<newline46mondego><newline46mondego>        // or indirectly by firing a propertyChange<newline46mondego>        firePropertyChange(<doubleQuotes46>rowCount<doubleQuotes46>, oldRowCount, newRowCount);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7622splitHere46","12163675splitHere46","main"
"7623splitHere46","12163675splitHere46","public static void main(String[] args) {<newline46mondego>    int cs; /* state number */<newline46mondego>    char[] data = <doubleQuotes46>xy = 22 wq = 11.46<doubleQuotes46>.toCharArray(); /* input */<newline46mondego>    int p = 0, /* start of input */<newline46mondego>        pe = data.length, /* end of input */<newline46mondego>        eof = pe,<newline46mondego>        ts, /* token start */<newline46mondego>        te, /* token end */<newline46mondego>        act /* used for scanner backtracking */;<newline46mondego><newline46mondego>    %% write init;<newline46mondego><newline46mondego>    %% write exec;<newline46mondego>}<newline46mondego>"
"7624splitHere46","12163675splitHere46","identifier  = [a-zA-Z][a-zA-Z_]+;<newline46mondego>"
"7625splitHere46","12163675splitHere46","identifier  = [a-zA-Z][a-zA-Z_]*;<newline46mondego>"
"7626splitHere46","12163712splitHere46","mount volume"
"7627splitHere46","12163712splitHere46","smb://user:pass@server/shared"
"7628splitHere46","12163712splitHere46","/Volumes/shared"
"7629splitHere46","12163712splitHere46","do shell script <doubleQuotes46>java -classpath /Volumes/shared/jars/\\* myClass<doubleQuotes46><newline46mondego>"
"7630splitHere46","12163715splitHere46","javax/mail/MessagingException"
"7631splitHere46","12163715splitHere46","javaee.jar"
"7632splitHere46","12163715splitHere46","javaee.jar"
"7633splitHere46","12163715splitHere46","mail.jar"
"7634splitHere46","12163715splitHere46","javaee.jar"
"7635splitHere46","12163715splitHere46","javax.mail"
"7636splitHere46","12163715splitHere46","mail.jar"
"7637splitHere46","12163715splitHere46","javax.mail"
"7638splitHere46","12163715splitHere46","javaee.jar"
"7639splitHere46","12163747splitHere46","setActivePage"
"7640splitHere46","12163747splitHere46","pageChange"
"7641splitHere46","12163747splitHere46","FormEditor"
"7642splitHere46","12163747splitHere46","addPageChangedListener"
"7643splitHere46","12163747splitHere46","Display.getDefault().asyncExec"
"7644splitHere46","12163761splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>/**<newline46mondego> * @author dah01<newline46mondego> */<newline46mondego>public class T {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame f= new JFrame();     <newline46mondego>        f.setSize(500,500);<newline46mondego>        f.add(new NotesPanel());<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>class NotesPanel extends JPanel{<newline46mondego>    public NotesPanel(){<newline46mondego>        // -- Setup the layout manager.<newline46mondego>        setBackground(new Color(199, 187, 192));<newline46mondego>        setLayout(new GridLayout());<newline46mondego><newline46mondego><newline46mondego>        // -- Setup the border for the notes pane.<newline46mondego>        this.setBorder(new EmptyBorder(8, 3, 8, 3));<newline46mondego><newline46mondego><newline46mondego>        // -- Setup the border for the notes pane.<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));<newline46mondego>        panel.setAlignmentX(JPanel.LEFT_ALIGNMENT);<newline46mondego>        panel.setBorder(new BevelBorder(BevelBorder.RAISED));<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>        // -- Setup the creator section.<newline46mondego>        JLabel creatorLabel = new JLabel(<doubleQuotes46>Note by <doubleQuotes46>+ <doubleQuotes46> @ <doubleQuotes46>);<newline46mondego>        creatorLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);<newline46mondego><newline46mondego><newline46mondego>        // -- Setup the notes area.<newline46mondego>        JTextArea notesContentsArea = new JTextArea(<doubleQuotes46>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.<doubleQuotes46>);<newline46mondego>        notesContentsArea.setEditable(false);<newline46mondego>        notesContentsArea.setLineWrap(true);<newline46mondego>        notesContentsArea.setWrapStyleWord(true);<newline46mondego><newline46mondego>        JScrollPane scrollPane = new JScrollPane(notesContentsArea);<newline46mondego>        scrollPane.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);<newline46mondego><newline46mondego>        // -- Setup the edited by label.<newline46mondego>        JLabel editorLabel = new JLabel(<doubleQuotes46> -- Last edited by <doubleQuotes46>+<doubleQuotes46> at <doubleQuotes46>);<newline46mondego>        editorLabel.setAlignmentX(Component.LEFT_ALIGNMENT);<newline46mondego><newline46mondego>        // -- Add everything to the view.<newline46mondego>        panel.add(creatorLabel);<newline46mondego>        panel.add(scrollPane);<newline46mondego>        panel.add(editorLabel);<newline46mondego>        this.add(panel);<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>}<newline46mondego>"
"7645splitHere46","12163832splitHere46","System.currentTimeMillis()"
"7646splitHere46","12164113splitHere46","matcher"
"7647splitHere46","12164113splitHere46","matches()"
"7648splitHere46","12164113splitHere46","find()"
"7649splitHere46","12164113splitHere46","matches()"
"7650splitHere46","12164113splitHere46","HEART RATE"
"7651splitHere46","12164113splitHere46","HEART"
"7652splitHere46","12164113splitHere46","RATE"
"7653splitHere46","12164113splitHere46","& 184"
"7654splitHere46","12164113splitHere46","find()"
"7655splitHere46","12164113splitHere46","HEART"
"7656splitHere46","12164113splitHere46","+?"
"7657splitHere46","12164113splitHere46","(.+?)\s+"
"7658splitHere46","12164113splitHere46","HEART RATE& "
"7659splitHere46","12164113splitHere46","HEART& "
"7660splitHere46","12164122splitHere46","public static int copy (InputStream is, OutputStream out) throws IOException {<newline46mondego>    byte [] buff = new byte[1024];<newline46mondego>    int len = is.read(buff);<newline46mondego>    int total = 0;<newline46mondego><newline46mondego>    while (len > 0) {<newline46mondego>        total += len;<newline46mondego>        out.write(buff, 0, len);<newline46mondego>        len = is.read(buff);<newline46mondego>    }<newline46mondego><newline46mondego>    return total;<newline46mondego>}<newline46mondego>"
"7661splitHere46","12164157splitHere46","getBars().add(bar);<newline46mondego>"
"7662splitHere46","12164160splitHere46","NamedParameterJdbcTemplate"
"7663splitHere46","12164160splitHere46","ParsedSql"
"7664splitHere46","12164160splitHere46","PreparedStatement"
"7665splitHere46","12164160splitHere46","ParsedSql"
"7666splitHere46","12164160splitHere46","PreparedStatements"
"7667splitHere46","12164160splitHere46","PreparedStatement"
"7668splitHere46","12164160splitHere46","Statement"
"7669splitHere46","12164160splitHere46","PreparedStatement"
"7670splitHere46","12164160splitHere46","NamedParameterJdbcTemplate"
"7671splitHere46","12164288splitHere46","numberOfVertices - 2"
"7672splitHere46","12164288splitHere46","numberOfVertices/3"
"7673splitHere46","12164288splitHere46","numberOfVertices - 2"
"7674splitHere46","12164288splitHere46","(0,0,0,0)"
"7675splitHere46","12164288splitHere46","0,0"
"7676splitHere46","12164288splitHere46","0,0"
"7677splitHere46","12164288splitHere46","0,0"
"7678splitHere46","12164314splitHere46","EL"
"7679splitHere46","12164314splitHere46","rendered"
"7680splitHere46","12164389splitHere46","A.foo()"
"7681splitHere46","12164389splitHere46","a"
"7682splitHere46","12164389splitHere46","b.last()"
"7683splitHere46","12164389splitHere46","b"
"7684splitHere46","12164389splitHere46","B.bar()"
"7685splitHere46","12164389splitHere46","b1"
"7686splitHere46","12164389splitHere46","a.last()"
"7687splitHere46","12164389splitHere46","a"
"7688splitHere46","12164389splitHere46","synchronized"
"7689splitHere46","12164531splitHere46","null"
"7690splitHere46","12164531splitHere46","Optional.absent()"
"7691splitHere46","12164531splitHere46","public class GsonOptionalDeserializer<T><newline46mondego>implements JsonSerializer<Optional<T>>, JsonDeserializer<Optional<T>> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Optional<T> deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)<newline46mondego>            throws JsonParseException {<newline46mondego>        final JsonArray asJsonArray = json.getAsJsonArray();<newline46mondego>        final JsonElement jsonElement = asJsonArray.get(0);<newline46mondego>        final T value = context.deserialize(jsonElement, ((ParameterizedType) typeOfT).getActualTypeArguments()[0]);<newline46mondego>        return Optional.fromNullable(value);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public JsonElement serialize(Optional<T> src, Type typeOfSrc, JsonSerializationContext context) {<newline46mondego>        final JsonElement element = context.serialize(src.orNull());<newline46mondego>        final JsonArray result = new JsonArray();<newline46mondego>        result.add(element);<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7692splitHere46","12164538splitHere46","java.util.Set"
"7693splitHere46","12164538splitHere46","oldComments.retainAll(newComments);<newline46mondego>oldComments.addAll(newComments);<newline46mondego>"
"7694splitHere46","12164614splitHere46","PopupMenu.border"
"7695splitHere46","12164614splitHere46","UIManager.put(<doubleQuotes46>PopupMenu.border<doubleQuotes46>, BorderFactory.createLineBorder(Color.red, 4));<newline46mondego>"
"7696splitHere46","12164614splitHere46","import java.awt.Color;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>public class CustomPopupMenuBorder<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        UIManager.put(<doubleQuotes46>PopupMenu.border<doubleQuotes46>, BorderFactory.createLineBorder(Color.black, 1));      <newline46mondego>        JDialog myJDialog = new JDialog();<newline46mondego>        myJDialog.setSize(450,300);<newline46mondego>        JMenuBar bar = new JMenuBar();<newline46mondego>        JMenu menu = new JMenu(<doubleQuotes46>It's a me<doubleQuotes46>);<newline46mondego>        JMenuItem item = new JMenuItem(<doubleQuotes46>JMenuItem 1<doubleQuotes46>);<newline46mondego>        JMenuItem item2 = new JMenuItem(<doubleQuotes46>JMenuItem 2<doubleQuotes46>);<newline46mondego>        menu.add(item);<newline46mondego>        JSeparator sep = new JSeparator();    <newline46mondego>        menu.add(sep);<newline46mondego>        menu.add(item2);<newline46mondego>        bar.add(menu);<newline46mondego>        myJDialog.setJMenuBar(bar);<newline46mondego>        myJDialog.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7697splitHere46","12164643splitHere46","AbstractTaxPolicyFactory"
"7698splitHere46","12164643splitHere46","createItemCategoryTaxPolicy()"
"7699splitHere46","12164643splitHere46","createImportDutyTaxPolicy()"
"7700splitHere46","12164643splitHere46","ItemCategoryTaxPolicy"
"7701splitHere46","12164643splitHere46","ImportDutyTaxPolicy"
"7702splitHere46","12164643splitHere46","USTaxPolicyFactory"
"7703splitHere46","12164643splitHere46","ChinaTaxPolicyFactory"
"7704splitHere46","12164643splitHere46","ChinaImportDutyTaxPolicy"
"7705splitHere46","12164643splitHere46","ItemCategoryTaxPolicy"
"7706splitHere46","12164643splitHere46","ImportDutyTaxPolicy"
"7707splitHere46","12164643splitHere46","USItemCategoryTaxPolicy"
"7708splitHere46","12164643splitHere46","USImportDutyTaxPolicy"
"7709splitHere46","12164643splitHere46","ChinaItemCategoryTaxPolicy"
"7710splitHere46","12164643splitHere46","ChinaImportDutyTaxPolicy"
"7711splitHere46","12164643splitHere46","USImportDutyTaxPolicy"
"7712splitHere46","12164643splitHere46","USTaxPolicyFactory"
"7713splitHere46","12164643splitHere46","ImportDutyTaxPolicy"
"7714splitHere46","12164643splitHere46","SalesPolicy"
"7715splitHere46","12164643splitHere46","AbstractTaxPolicyFactory absFactory = new ChinaTaxPolicyFactory();<newline46mondego>// or use a static factory method: <newline46mondego>// TaxPolicyFactoryCreator.createNewFactory(Country.CHINA); <newline46mondego>ItemCategoryTaxPolicy itemCatTaxPolicy = absFactory.createItemCategoryTaxPolicy();<newline46mondego>addTaxPolicy(itemCatTaxPolicy);<newline46mondego>ImportDutyTaxPolicy importDutyTaxPolicy = absFactory.createImportDutyTaxPolicy();<newline46mondego>addTaxPolicy(importDutyTaxPolicy);<newline46mondego>"
"7716splitHere46","12164722splitHere46","sourceId=null[severity=(ERROR 2), summary=(One or more resources have the target of 'head', but no 'head' component has been defined within the view.), detail=(One or more resources have the target of 'head', but no 'head' component has been defined within the view.)]<newline46mondego>"
"7717splitHere46","12164775splitHere46","GLSurfaceView.onPause()"
"7718splitHere46","12164775splitHere46",".onResume();"
"7719splitHere46","12164775splitHere46","@Override<newline46mondego>protected void onPause() //Overrides onPause from Activity<newline46mondego>{<newline46mondego>    surfaceViews.peek().onPause();<newline46mondego>    super.onPause();<newline46mondego>}<newline46mondego>"
"7720splitHere46","12164775splitHere46","SetView"
"7721splitHere46","12164775splitHere46","Stack"
"7722splitHere46","12164775splitHere46","public void SetView(View screen)<newline46mondego>{   <newline46mondego>    if (!screens.empty())<newline46mondego>    {<newline46mondego>        screens.peek().onPause();<newline46mondego>        screens.pop();<newline46mondego>    }<newline46mondego><newline46mondego>    screens.push(screen);<newline46mondego>    setContentView(screens.peek());<newline46mondego>}<newline46mondego>"
"7723splitHere46","12164775splitHere46","onBackPressed()"
"7724splitHere46","12164775splitHere46","@Override<newline46mondego>public void onBackPressed() <newline46mondego>{       <newline46mondego>    if (screens.size() == 1)<newline46mondego>        super.onBackPressed();<newline46mondego>    else<newline46mondego>    {<newline46mondego>        screens.pop();<newline46mondego>        setContentView(screens.peek());<newline46mondego>        screens.peek().onResume();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7725splitHere46","12164781splitHere46","ArrayIndexOutOfBoundsException"
"7726splitHere46","12164781splitHere46","Pages"
"7727splitHere46","12164781splitHere46","{ }"
"7728splitHere46","12164781splitHere46","0"
"7729splitHere46","12164781splitHere46","Pages[i]"
"7730splitHere46","12164781splitHere46","<doubleQuotes46>Page <doubleQuotes46> + p"
"7731splitHere46","12164781splitHere46","String[] Pages = new String[47];"
"7732splitHere46","12164781splitHere46","List<String>"
"7733splitHere46","12164781splitHere46","final List<String> pages = new ArrayList<String>(47);<newline46mondego>for (int i = 1; i <= 47; ++i) {<newline46mondego>  pages.add(<doubleQuotes46>Page <doubleQuotes46> + i);<newline46mondego>}<newline46mondego>"
"7734splitHere46","12164979splitHere46","sessionDestroyed()"
"7735splitHere46","12164979splitHere46","StandardManager.java"
"7736splitHere46","12164979splitHere46","ServletContextListener.contextDestroyed"
"7737splitHere46","12164979splitHere46","Servlet.destroy"
"7738splitHere46","12164979splitHere46","ServletContextListener"
"7739splitHere46","12164979splitHere46","contextDestroyed"
"7740splitHere46","12165070splitHere46","JSONParser jParser = new JSONParser();<newline46mondego><newline46mondego>    // getting JSON string from URL<newline46mondego>    String jsonString = jParser.getJSONFromUrl(url).tostring();<newline46mondego><newline46mondego>    JSONArray json= new JSONArray(jsonString);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    try {<newline46mondego><newline46mondego>        // looping through All Contacts<newline46mondego>            for(int i = 0; i < json.length(); i++){<newline46mondego>              JSONObject contacts = json.getJSONObject(i);<newline46mondego><newline46mondego>                JSONObject user = contacts.getJSONObject(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego><newline46mondego>                String imageUrl = user.getString(<doubleQuotes46>profile_image_url<doubleQuotes46>);<newline46mondego>                String screenName = user.getString(<doubleQuotes46>Screen_name<doubleQuotes46>);<newline46mondego><newline46mondego>            }<newline46mondego>        }catch(Exception e)<newline46mondego>   {<newline46mondego>   }<newline46mondego>"
"7741splitHere46","12165186splitHere46","/WEB-INF/content/customermapping.xml"
"7742splitHere46","12165186splitHere46","customermapping.xml"
"7743splitHere46","12165186splitHere46","WEB-INF/content"
"7744splitHere46","12165186splitHere46","/"
"7745splitHere46","12165251splitHere46","NumberFormat"
"7746splitHere46","12165251splitHere46","NumberFormat#getCurrencyInstance"
"7747splitHere46","12165251splitHere46","Format"
"7748splitHere46","12165251splitHere46","JFormattedTextField"
"7749splitHere46","12165251splitHere46","NumberFormat"
"7750splitHere46","12165251splitHere46","int"
"7751splitHere46","12165396splitHere46","-Xss1m"
"7752splitHere46","12165396splitHere46","1m"
"7753splitHere46","12165403splitHere46","parent"
"7754splitHere46","12165403splitHere46","child"
"7755splitHere46","12165403splitHere46","parent"
"7756splitHere46","12165403splitHere46","parent"
"7757splitHere46","12165403splitHere46","pathname"
"7758splitHere46","12165403splitHere46","Documents<newline46mondego>    Homework<newline46mondego>    Classwork<newline46mondego>    Tests<newline46mondego>"
"7759splitHere46","12165403splitHere46","parent"
"7760splitHere46","12165403splitHere46","File documents = new File(<doubleQuotes46>Documents<doubleQuotes46>);<newline46mondego>File tests = new File(<doubleQuotes46>Documents/Tests<doubleQuotes46>); // new File(String);<newline46mondego><newline46mondego>File homework = new File(documents, <doubleQuotes46>Homework<doubleQuotes46>); // new File(File, String)<newline46mondego><newline46mondego>File classwork = new File(<doubleQuotes46>Documents<doubleQuotes46>, <doubleQuotes46>Classwork<doubleQuotes46>); // new File(String, String)<newline46mondego>"
"7761splitHere46","12165403splitHere46","File(File, String)"
"7762splitHere46","12165403splitHere46","Environment.getProgramDirectory()"
"7763splitHere46","12165403splitHere46","File settingsFile = new File(Environment.getProgramDirectory(), <doubleQuotes46>settings.txt<doubleQuotes46>);<newline46mondego>"
"7764splitHere46","12165433splitHere46","JTextField"
"7765splitHere46","12165449splitHere46","<?import jfxtras.labs.scene.control.*?><newline46mondego><?scenebuilder-classpath-element ../../../libraries/JFXtras2/jfxtras-labs-0.1.jar?><newline46mondego>"
"7766splitHere46","12165526splitHere46","String"
"7767splitHere46","12165526splitHere46","java.lang"
"7768splitHere46","12165526splitHere46","Class clazz = Class.forName(<doubleQuotes46>java.lang.String<doubleQuotes46>);<newline46mondego>"
"7769splitHere46","12165614splitHere46","hibernate-3.2.6.ga.jar"
"7770splitHere46","12165614splitHere46","hibernate-core-3.5.0-Final.jar"
"7771splitHere46","12165614splitHere46","hibernate ga"
"7772splitHere46","12165628splitHere46","@Inheritance(strategy = InheritanceType.JOINED)<newline46mondego>"
"7773splitHere46","12165628splitHere46","//Existing BackOfficeUser, @Inheritance is added<newline46mondego>@Entity<newline46mondego>@Inheritance(strategy = InheritanceType.JOINED)<newline46mondego>public class BackOfficeUser {<newline46mondego>    @Id private Integer id;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>//New class that extends BackOfficeUser. Will have dedicated<newline46mondego>//table for added persistent attributes, shared attributes<newline46mondego>//are persisted to existing table <doubleQuotes46>BackOfficeUser<doubleQuotes46><newline46mondego>@Entity<newline46mondego>public class XxxBackOfficeUser extends BackOfficeUser {<newline46mondego>    private String someAttribute<newline46mondego><newline46mondego>    @ManyToMany (mappedBy = <doubleQuotes46>xxxBackOfficeUsers<doubleQuotes46>)<newline46mondego>    private List<Rule> rules;<newline46mondego>}<newline46mondego><newline46mondego>//New entity class which does have relation to XxxBackOfficeUser<newline46mondego>@Entity<newline46mondego>public class Rule {<newline46mondego>    @Id private Integer id;<newline46mondego><newline46mondego>    @ManyToMany<newline46mondego>    private List<XxxBackOfficeUser> xxxBackOfficeUsers;<newline46mondego>}<newline46mondego>"
"7774splitHere46","12165647splitHere46","public static Boolean validateLogin(String userName, String userPassword) {<newline46mondego>    Hashtable<String, String> env = new Hashtable<String, String>();<newline46mondego><newline46mondego><newline46mondego>    env.put(Context.INITIAL_CONTEXT_FACTORY, <doubleQuotes46>com.sun.jndi.ldap.LdapCtxFactory<doubleQuotes46>);<newline46mondego>    env.put(Context.PROVIDER_URL, <doubleQuotes46>ldap://<doubleQuotes46> + LDAP_SERVER + <doubleQuotes46>:<doubleQuotes46> + LDAP_SERVER_PORT + <doubleQuotes46>/<doubleQuotes46> + LDAP_BASE_DN);<newline46mondego><newline46mondego>    // To get rid of the PartialResultException when using Active Directory<newline46mondego>    env.put(Context.REFERRAL, <doubleQuotes46>follow<doubleQuotes46>);<newline46mondego><newline46mondego>    // Needed for the Bind (User Authorized to Query the LDAP server) <newline46mondego>    env.put(Context.SECURITY_AUTHENTICATION, <doubleQuotes46>simple<doubleQuotes46>);<newline46mondego>    env.put(Context.SECURITY_PRINCIPAL, LDAP_BIND_DN);<newline46mondego>    env.put(Context.SECURITY_CREDENTIALS, LDAP_BIND_PASSWORD);<newline46mondego><newline46mondego>    DirContext ctx;<newline46mondego>    try {<newline46mondego>       ctx = new InitialDirContext(env);<newline46mondego>    } catch (NamingException e) {<newline46mondego>       throw new RuntimeException(e);<newline46mondego>    }<newline46mondego><newline46mondego>    NamingEnumeration<SearchResult> results = null;<newline46mondego><newline46mondego>    try {<newline46mondego>       SearchControls controls = new SearchControls();<newline46mondego>       controls.setSearchScope(SearchControls.SUBTREE_SCOPE); // Search Entire Subtree<newline46mondego>       controls.setCountLimit(1);   //Sets the maximum number of entries to be returned as a result of the search<newline46mondego>       controls.setTimeLimit(5000); // Sets the time limit of these SearchControls in milliseconds<newline46mondego><newline46mondego>       String searchString = <doubleQuotes46>(&(objectCategory=user)(sAMAccountName=<doubleQuotes46> + userName + <doubleQuotes46>))<doubleQuotes46>;<newline46mondego><newline46mondego>       results = ctx.search(<doubleQuotes46><doubleQuotes46>, searchString, controls);<newline46mondego><newline46mondego>       if (results.hasMore()) {<newline46mondego><newline46mondego>           SearchResult result = (SearchResult) results.next();<newline46mondego>           Attributes attrs = result.getAttributes();<newline46mondego>           Attribute dnAttr = attrs.get(<doubleQuotes46>distinguishedName<doubleQuotes46>);<newline46mondego>           String dn = (String) dnAttr.get();<newline46mondego><newline46mondego>           // User Exists, Validate the Password<newline46mondego><newline46mondego>           env.put(Context.SECURITY_PRINCIPAL, dn);<newline46mondego>           env.put(Context.SECURITY_CREDENTIALS, userPassword);<newline46mondego><newline46mondego>           new InitialDirContext(env); // Exception will be thrown on Invalid case<newline46mondego>           return true;<newline46mondego>       } <newline46mondego>       else <newline46mondego>           return false;<newline46mondego><newline46mondego>    } catch (AuthenticationException e) { // Invalid Login<newline46mondego><newline46mondego>        return false;<newline46mondego>    } catch (NameNotFoundException e) { // The base context was not found.<newline46mondego><newline46mondego>        return false;<newline46mondego>    } catch (SizeLimitExceededException e) {<newline46mondego>        throw new RuntimeException(<doubleQuotes46>LDAP Query Limit Exceeded, adjust the query to bring back less records<doubleQuotes46>, e);<newline46mondego>    } catch (NamingException e) {<newline46mondego>       throw new RuntimeException(e);<newline46mondego>    } finally {<newline46mondego><newline46mondego>       if (results != null) {<newline46mondego>          try { results.close(); } catch (Exception e) { /* Do Nothing */ }<newline46mondego>       }<newline46mondego><newline46mondego>       if (ctx != null) {<newline46mondego>          try { ctx.close(); } catch (Exception e) { /* Do Nothing */ }<newline46mondego>       }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7775splitHere46","12165685splitHere46","FileDialog(Dialog parent, String title, int mode)<newline46mondego>"
"7776splitHere46","12165685splitHere46","FileDialog(Frame parent, String title, int mode)<newline46mondego>"
"7777splitHere46","12165685splitHere46","Frame frame = null;<newline46mondego>FileDialog save = new FileDialog(frame, <doubleQuotes46>Save file<doubleQuotes46>, FileDialog.SAVE);<newline46mondego>"
"7778splitHere46","12165724splitHere46","android:name"
"7779splitHere46","12165724splitHere46","android:id"
"7780splitHere46","12165783splitHere46","TableViewer"
"7781splitHere46","12165783splitHere46","Dialog"
"7782splitHere46","12165783splitHere46","ModelProvider"
"7783splitHere46","12165783splitHere46","TableViewer"
"7784splitHere46","12165783splitHere46","public void updateTableViewer()<newline46mondego>{<newline46mondego>    if(viewer != null)<newline46mondego>        viewer.refresh();<newline46mondego>}<newline46mondego>"
"7785splitHere46","12165783splitHere46","ModelProvider"
"7786splitHere46","12165812splitHere46","String br = System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>);<newline46mondego>for (int i = 0, n = Math.min(uniqueList.size(), subtr.size()); i < n; i++)<newline46mondego>    out.write(uniqueList.get(i) + <doubleQuotes46> The number: <doubleQuotes46> + subtr.get(i) + br);<newline46mondego>"
"7787splitHere46","12166129splitHere46","1E19"
"7788splitHere46","12166129splitHere46","1E21"
"7789splitHere46","12166129splitHere46","1.687155E21<newline46mondego>0.03981457E21<newline46mondego>0.5532155E21 <newline46mondego>3.018843E21<newline46mondego>2.0532155E21 <newline46mondego>4.5532155E21<newline46mondego>0.031637913E21<newline46mondego>"
"7790splitHere46","12166204splitHere46","graphics.translate((newImage.getWidth() - oldImage.getWidth()) / 2, (newImage.getHeight() - oldImage.getHeight()) / 2);<newline46mondego>"
"7791splitHere46","12166271splitHere46","public static int numitems;"
"7792splitHere46","12166271splitHere46","ZERO"
"7793splitHere46","12166271splitHere46","int numitems = infile.nextInt();"
"7794splitHere46","12166271splitHere46","numitems"
"7795splitHere46","12166360splitHere46","mvn tomcat:deploy<newline46mondego>"
"7796splitHere46","12166360splitHere46","right click on the Servers view => Add server"
"7797splitHere46","12166360splitHere46","right click the server you just added => add and remove => check <doubleQuotes46>If server is started, publish changes immediately<doubleQuotes46> checkbox<newline46mondego>"
"7798splitHere46","12166360splitHere46","Right click project => Maven => Enable Dependency Management"
"7799splitHere46","12166360splitHere46","Right click on project => Run as => Maven install"
"7800splitHere46","12166539splitHere46","/**<newline46mondego> * Retrieve the maximum text size to fit in a given width.<newline46mondego> * @param str (String): Text to check for size.<newline46mondego> * @param maxWidth (float): Maximum allowed width.<newline46mondego> * @return (int): The desired text size.<newline46mondego> */<newline46mondego>private int determineMaxTextSize(String str, float maxWidth)<newline46mondego>{<newline46mondego>    int size = 0;       <newline46mondego>    Paint paint = new Paint();<newline46mondego><newline46mondego>    do {<newline46mondego>        paint.setTextSize(++ size);<newline46mondego>    } while(paint.measureText(str) < maxWidth);<newline46mondego><newline46mondego>    return size;<newline46mondego>} //End getMaxTextSize()<newline46mondego>"
"7801splitHere46","12166761splitHere46","LinearLayout ll = (LinearLayout) findViewById(R.id.root);<newline46mondego><newline46mondego>try {<newline46mondego>    ImageView image = new ImageView(this);<newline46mondego>    Bitmap bitmap = BitmapFactory.decodeStream(getAssets().open(<doubleQuotes46>tag-logo-android.png<doubleQuotes46>));<newline46mondego>    image.setImageBitmap(bitmap);<newline46mondego>    ll.addView(image);<newline46mondego><newline46mondego>    image = new ImageView(this);<newline46mondego>    Drawable drawable = Drawable.createFromStream(new URL(<doubleQuotes46>http://cdn.sstatic.net/stackoverflow/img/tag-logo-android.png<doubleQuotes46>).openStream(), null);<newline46mondego>    image.setImageDrawable(drawable);<newline46mondego>    ll.addView(image);<newline46mondego>} catch (MalformedURLException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"7802splitHere46","12166761splitHere46","Drawable"
"7803splitHere46","12166761splitHere46","LinearLayout ll = (LinearLayout) findViewById(R.id.root);<newline46mondego><newline46mondego>try {<newline46mondego>    ImageView image = new ImageView(this);<newline46mondego>    Bitmap bitmap = BitmapFactory.decodeStream(getAssets().open(<doubleQuotes46>tag-logo-android.png<doubleQuotes46>));<newline46mondego>    image.setImageBitmap(bitmap);<newline46mondego>    ll.addView(image);<newline46mondego><newline46mondego>    image = new ImageView(this);<newline46mondego>    bitmap = BitmapFactory.decodeStream(new URL(<doubleQuotes46>http://cdn.sstatic.net/stackoverflow/img/tag-logo-android.png<doubleQuotes46>).openStream());<newline46mondego>    image.setImageBitmap(bitmap);<newline46mondego>    ll.addView(image);<newline46mondego>} catch (MalformedURLException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"7804splitHere46","12166761splitHere46","bitmap = BitmapFactory.decodeFile(new File(Environment.getExternalStorageDirectory(), <doubleQuotes46>test.png<doubleQuotes46>))<newline46mondego>"
"7805splitHere46","12166847splitHere46","Thread.stop()"
"7806splitHere46","12166847splitHere46","thread.interrupt()"
"7807splitHere46","12166847splitHere46","isInterrupted()"
"7808splitHere46","12166964splitHere46","public class toArray implements Callable<String[]><newline46mondego>"
"7809splitHere46","12166964splitHere46","call"
"7810splitHere46","12166964splitHere46","public String[] call() throws Exception<newline46mondego>"
"7811splitHere46","12166964splitHere46","public class Test{<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego><newline46mondego>        FutureTask<String[]> task = new FutureTask(new MyCallable(<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>));<newline46mondego>        ExecutorService es = Executors.newSingleThreadExecutor();<newline46mondego>        es.submit (task);<newline46mondego>        try{<newline46mondego>            String[] result = task.get();<newline46mondego>            System.out.println(result[0] + result[1]);<newline46mondego>        }<newline46mondego>        catch(Exception e){<newline46mondego>            System.err.println(e);<newline46mondego>        }<newline46mondego>        es.shutdown();<newline46mondego>    }<newline46mondego><newline46mondego>    public static class MyCallable implements Callable<String[]><newline46mondego>    {<newline46mondego><newline46mondego>        private String string1, string2;<newline46mondego><newline46mondego>        public MyCallable (String first, String second)<newline46mondego>        {<newline46mondego>            string1= first;<newline46mondego>            string2 = second;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String[] call() throws Exception {<newline46mondego>            String [] allStrings = new String[2];<newline46mondego>            allStrings[0] = string1;<newline46mondego>            allStrings[1] = string2;<newline46mondego>            return allStrings;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7812splitHere46","12167002splitHere46","cmd.setButtonCell(myCellFactory.call(null));"
"7813splitHere46","12167217splitHere46","InputStream"
"7814splitHere46","12167217splitHere46","OutputStream"
"7815splitHere46","12167217splitHere46","public void unjar(File jar, File outputPath) throws IOException {<newline46mondego>    JarFile jarFile = null;<newline46mondego>    try {<newline46mondego>        if (outputPath.exits() || outputPathFile.mkdirs()) {<newline46mondego>            jarFile = new JarFile(jar);<newline46mondego>            Enumeration<JarEntry> entries = jarFile.entries();<newline46mondego>            while (entries.hasMoreElements()) {<newline46mondego>                JarEntry entry = entries.nextElement();<newline46mondego>                File path = new File(outputPath + File.separator + entry.getName());<newline46mondego>                if (entry.isDirectory()) {<newline46mondego>                    if (!path.exists() && !path.mkdirs()) {<newline46mondego>                        throw new IOException(<doubleQuotes46>Failed to create output path <doubleQuotes46> + path);<newline46mondego>                    }<newline46mondego>                } else {<newline46mondego>                    System.out.println(<doubleQuotes46>Extracting <doubleQuotes46> + path);<newline46mondego><newline46mondego>                    InputStream is = null;<newline46mondego>                    OutputStream os = null;<newline46mondego>                    try {<newline46mondego>                        is = jarFile.getInputStream(entry);<newline46mondego>                        os = new FileOutputStream(path);<newline46mondego><newline46mondego>                        byte[] byteBuffer = new byte[1024];<newline46mondego>                        int bytesRead = -1;<newline46mondego>                        while ((bytesRead = is.read(byteBuffer)) != -1) {<newline46mondego>                            os.write(byteBuffer, 0, bytesRead);<newline46mondego>                        }<newline46mondego>                        os.flush();<newline46mondego>                    } finally {<newline46mondego>                        try {<newline46mondego>                            os.close();<newline46mondego>                        } catch (Exception e) {<newline46mondego>                        }<newline46mondego>                        try {<newline46mondego>                            is.close();<newline46mondego>                        } catch (Exception e) {<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            throw IOException(<doubleQuotes46>Output path does not exist/could not be created<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            jarFile.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void jar(File jar, File sourcePath) throws IOException {<newline46mondego>    JarOutputStream jos = null;<newline46mondego>    try {<newline46mondego>        jos = new JarOutputStream(new FileOutputStream(jar));<newline46mondego><newline46mondego>        List<File> fileList = getFiles(sourcePath);<newline46mondego>        System.out.println(<doubleQuotes46>Jaring <doubleQuotes46> + fileList.size() + <doubleQuotes46> files<doubleQuotes46>);<newline46mondego><newline46mondego>        List<String> lstPaths = new ArrayList<String>(25);<newline46mondego>        for (File file : fileList) {<newline46mondego>            String path = file.getParent().replace(<doubleQuotes46>\\<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>            String name = file.getName();<newline46mondego><newline46mondego>            path = path.substring(sourcePath.getPath().length());<newline46mondego>            if (path.startsWith(<doubleQuotes46>/<doubleQuotes46>)) {<newline46mondego>                path = path.substring(1);<newline46mondego>            }<newline46mondego><newline46mondego>            if (path.length() > 0) {<newline46mondego>                path += <doubleQuotes46>/<doubleQuotes46>;<newline46mondego>                if (!lstPaths.contains(path)) {<newline46mondego>                    JarEntry entry = new JarEntry(path);<newline46mondego>                    jos.putNextEntry(entry);<newline46mondego>                    jos.closeEntry();<newline46mondego>                    lstPaths.add(path);<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Adding <doubleQuotes46> + path + name);<newline46mondego><newline46mondego>            JarEntry entry = new JarEntry(path + name);<newline46mondego>            jos.putNextEntry(entry);<newline46mondego><newline46mondego>            FileInputStream fis = null;<newline46mondego>            try {<newline46mondego>                fis = new FileInputStream(file);<newline46mondego>                byte[] byteBuffer = new byte[1024];<newline46mondego>                int bytesRead = -1;<newline46mondego>                while ((bytesRead = fis.read(byteBuffer)) != -1) {<newline46mondego>                    jos.write(byteBuffer, 0, bytesRead);<newline46mondego>                }<newline46mondego>                jos.flush();<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    fis.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                }<newline46mondego>            }<newline46mondego>            jos.closeEntry();<newline46mondego>        }<newline46mondego>        jos.flush();<newline46mondego>    } finally {<newline46mondego>        try {<newline46mondego>            jos.close();<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7816splitHere46","12167238splitHere46","total += (b[i] & 255) << shift;<newline46mondego>"
"7817splitHere46","12167238splitHere46","int"
"7818splitHere46","12167238splitHere46","long"
"7819splitHere46","12167238splitHere46","long tmp = (b[i] & 255);<newline46mondego>"
"7820splitHere46","12167238splitHere46","long"
"7821splitHere46","12167238splitHere46","long"
"7822splitHere46","12167238splitHere46","long"
"7823splitHere46","12167238splitHere46","255L"
"7824splitHere46","12167315splitHere46","<s:action name=<doubleQuotes46>person<doubleQuotes46> var=<doubleQuotes46>personAction<doubleQuotes46> executeResult=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego><newline46mondego>Display name: <s:property value=<doubleQuotes46>#personAction.kuPerson.displayName<doubleQuotes46> /><newline46mondego>"
"7825splitHere46","12167395splitHere46","String input = <doubleQuotes46>08-AUG-12 12.00.00 AM<doubleQuotes46>;<newline46mondego>String pattern = <doubleQuotes46>dd-MMM-yy hh.mm.ss aa<doubleQuotes46>;<newline46mondego><newline46mondego>LocalDateTime localDateTime = LocalDateTime.parse(input, DateTimeFormat.forPattern(pattern));<newline46mondego>"
"7826splitHere46","12167395splitHere46","private static String parseDateTime(String input){<newline46mondego>     String pattern = <doubleQuotes46>dd-MMM-yy hh.mm.ss aa<doubleQuotes46>;<newline46mondego>     DateTime dateTime  = DateTime.parse(input, DateTimeFormat.forPattern(pattern));<newline46mondego>     return dateTime.toString(<doubleQuotes46>dd-MMM-yy hh:mm:ss aa<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7827splitHere46","12167499splitHere46","JSONArray"
"7828splitHere46","12167499splitHere46","String jsonString;  //The string data you pulled out of the DB<newline46mondego>JSONArray array = new JSONArray(jsonString);<newline46mondego>"
"7829splitHere46","12167499splitHere46","ArrayList<String> items = new ArrayList<String();<newline46mondego>for(int i=0; i < array.length(); i++) {<newline46mondego>    items.add(array.optString(i));<newline46mondego>}<newline46mondego>"
"7830splitHere46","12167544splitHere46","setCurrent(null)"
"7831splitHere46","12167544splitHere46","form"
"7832splitHere46","12167544splitHere46","setCurrent(Displayable)"
"7833splitHere46","12167544splitHere46","setCurrent"
"7834splitHere46","12167544splitHere46","setCurrent"
"7835splitHere46","12167544splitHere46","Alert"
"7836splitHere46","12167544splitHere46","Form"
"7837splitHere46","12167544splitHere46","Alert"
"7838splitHere46","12167646splitHere46","BoxDaoBean"
"7839splitHere46","12167646splitHere46","@LocalBean"
"7840splitHere46","12167646splitHere46","@WebService"
"7841splitHere46","12167646splitHere46","@Local"
"7842splitHere46","12167646splitHere46","@Remote"
"7843splitHere46","12167646splitHere46","@Stateful<newline46mondego>@LocalBean<newline46mondego>public class BoxDaoBean implements BoxDao {<newline46mondego>   //...<newline46mondego>}<newline46mondego>"
"7844splitHere46","12167646splitHere46","@LocalClient<newline46mondego>public class MyTestCase {<newline46mondego><newline46mondego>    @EJB<newline46mondego>    private BoxDao boxDao;<newline46mondego><newline46mondego>    @EJB<newline46mondego>    private BoxDaoBean boxDaoBean;<newline46mondego><newline46mondego>    ...   <newline46mondego><newline46mondego>}<newline46mondego>"
"7845splitHere46","12167781splitHere46","import static org.hamcrest.CoreMatchers.is;<newline46mondego>import static org.hamcrest.MatcherAssert.assertThat;<newline46mondego>import static org.hamcrest.beans.HasPropertyWithValue.hasProperty;<newline46mondego>import org.hamcrest.collection.IsIterableContainingInAnyOrder;<newline46mondego>"
"7846splitHere46","12167781splitHere46","assertThat(<newline46mondego>        myClass.getMyItems(),<newline46mondego>        IsIterableContainingInAnyOrder.<MyItem> containsInAnyOrder(hasProperty(<doubleQuotes46>name<doubleQuotes46>, is(<doubleQuotes46>foo<doubleQuotes46>)),<newline46mondego>            hasProperty(<doubleQuotes46>name<doubleQuotes46>, is(<doubleQuotes46>bar<doubleQuotes46>))));<newline46mondego>"
"7847splitHere46","12167783splitHere46","class ExampleManagedBean {<newline46mondego><newline46mondego>    @EJB<newline46mondego>    CustomerBeanLocal customerBean;<newline46mondego><newline46mondego>    public String testStuff() {<newline46mondego>        int custCount = customerBean.getCustomerCount();<newline46mondego>        System.out.println(<doubleQuotes46>Number of customers: <doubleQuotes46> + custCount);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7848splitHere46","12167850splitHere46","JPanel middlePanel = new JPanel() {<newline46mondego>   public Dimension getPreferredSize() {<newline46mondego>       return outerPanel.getSize();<newline46mondego>   };<newline46mondego>};<newline46mondego>"
"7849splitHere46","12167887splitHere46","byte b = (byte)0xDC;<newline46mondego>int  i = b & 0xFF;<newline46mondego>"
"7850splitHere46","12167916splitHere46","ConcurrentLinkedQueue<Message>"
"7851splitHere46","12167916splitHere46","// put a breakpoint here<newline46mondego>localMsgQueue = new ConcurrentLinkedQueue<Message>();<newline46mondego>"
"7852splitHere46","12167932splitHere46","public class Context {<newline46mondego>    private final static Context instance = new Context();<newline46mondego><newline46mondego>    public static Context getInstance() {<newline46mondego>        return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    private Country country = new Country();<newline46mondego><newline46mondego>    public Country currentCountry() {<newline46mondego>        return country;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7853splitHere46","12167932splitHere46","@Override<newline46mondego>public void initialize(URL url, ResourceBundle rb) {<newline46mondego>    Context.getInstance().currentCountry().setCountry(<doubleQuotes46>Belgium<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7854splitHere46","12167932splitHere46","SubController1"
"7855splitHere46","12167932splitHere46","@Override<newline46mondego>public void initialize(URL url, ResourceBundle rb) {<newline46mondego>    System.out.println(Context.getInstance().currentCountry().getCountry());<newline46mondego>}<newline46mondego>"
"7856splitHere46","12167932splitHere46","SubController1"
"7857splitHere46","12167932splitHere46","public class Sub1Controller implements Initializable {<newline46mondego>    private Context context;<newline46mondego>    public void setContext(Context context) {<newline46mondego>        this.context = context;<newline46mondego>        // initialize country dependent data here rather then in initialize()<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7858splitHere46","12167932splitHere46","SampleController"
"7859splitHere46","12167932splitHere46","Context currentContext = new Context();<newline46mondego><newline46mondego>@Override<newline46mondego>public void initialize(URL url, ResourceBundle rb) {<newline46mondego>    currentContext.currentCountry().setCountry(<doubleQuotes46>Belgium<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>@FXML<newline46mondego>private void handleButtonAction(ActionEvent event) throws IOException {<newline46mondego>    URL url = getClass().getResource(<doubleQuotes46>Sub1.fxml<doubleQuotes46>);<newline46mondego><newline46mondego>    FXMLLoader fxmlloader = new FXMLLoader();<newline46mondego>    fxmlloader.setLocation(url);<newline46mondego>    fxmlloader.setBuilderFactory(new JavaFXBuilderFactory());<newline46mondego><newline46mondego>    pContent.getChildren().clear();<newline46mondego>    pContent.getChildren().add((Node) fxmlloader.load(url.openStream()));<newline46mondego>            // here we go<newline46mondego>    ((Sub1Controller)fxmlloader.getController()).setContext(currentContext);<newline46mondego>}<newline46mondego>"
"7860splitHere46","12167936splitHere46","routes params"
"7861splitHere46","12167936splitHere46","id"
"7862splitHere46","12167936splitHere46","String"
"7863splitHere46","12167936splitHere46","id"
"7864splitHere46","12167936splitHere46","Long"
"7865splitHere46","12167936splitHere46","GET /Test/:userId   controllers.Application.test(userId: Long)<newline46mondego>"
"7866splitHere46","12167936splitHere46","public static Result test(Long userId) {<newline46mondego>    User user = User.find.byId(userId);<newline46mondego>    return ok(<doubleQuotes46>Now you're watching user: <doubleQuotes46> + user.name);<newline46mondego>}<newline46mondego>"
"7867splitHere46","12167936splitHere46","0/1"
"7868splitHere46","12167936splitHere46","Int/int"
"7869splitHere46","12167936splitHere46","false"
"7870splitHere46","12167936splitHere46","GET /set-admin/:userId    controllers.App.setAdmin(userId: Long, setTo: Int ?= 0)<newline46mondego>"
"7871splitHere46","12167936splitHere46","true"
"7872splitHere46","12167936splitHere46","GET /set-admin/:userId    controllers.App.setAdmin(userId: Long, setTo: Int ?= 1)<newline46mondego>"
"7873splitHere46","12167936splitHere46","public static Result setAdmin(Long userId, int setTo) {<newline46mondego>    User user = User.find.byId(userId);<newline46mondego>    user.isAdmin = (setTo == 1); // of course isAdmin field of User model is type of Boolean<newline46mondego>    user.update(id);<newline46mondego>    return ok(<doubleQuotes46>User <doubleQuotes46> + user.name + <doubleQuotes46> is <doubleQuotes46> + user.isAdmin);<newline46mondego>}<newline46mondego>"
"7874splitHere46","12167936splitHere46","<a href='@routes.App.setAdmin(user.id, 1)'>Set as admin</a><newline46mondego><a href='@routes.App.setAdmin(user.id, 0)'>Set as common user</a><newline46mondego>"
"7875splitHere46","12167957splitHere46","okCommand"
"7876splitHere46","12167957splitHere46","commandAction(Command, Displayable)"
"7877splitHere46","12167957splitHere46","if(c == okCommand){ <newline46mondego>            // show whatever screen you need<newline46mondego>            aDisplay.setCurrent(new Form(<doubleQuotes46>whatever<doubleQuotes46>));<newline46mondego>        } <newline46mondego>"
"7878splitHere46","12167957splitHere46","catch"
"7879splitHere46","12167957splitHere46","okCommand"
"7880splitHere46","12167957splitHere46","commandAction"
"7881splitHere46","12167957splitHere46","setCurrent"
"7882splitHere46","12167957splitHere46","keyPressed"
"7883splitHere46","12167957splitHere46","public class Log {<newline46mondego>    // utility class to keep logging code in one place<newline46mondego>    public static void log (String message) {<newline46mondego>        System.out.println(message);<newline46mondego>        // when debugging at real device, S.o.p above can be refactored<newline46mondego>        //  - based on ideas like one used here (with Form.append):<newline46mondego>        //    http://stackoverflow.com/questions/10649974<newline46mondego>        //  - Another option would be to write log to RMS<newline46mondego>        //    and use dedicated MIDlet to read it from there<newline46mondego>        //  - If MIDlet has network connection, an option is<newline46mondego>        //    to pass log messages over the network. Etc etc...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// ... other classes...<newline46mondego>    // ...<newline46mondego>    catch (Exception e) {<newline46mondego>        Log.log(<doubleQuotes46>unexpected exception: [<doubleQuotes46> + e + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>    public void commandAction(Command c, Displayable s) {<newline46mondego>        Log.log(<doubleQuotes46>command: [<doubleQuotes46> + c.getCommandLabel()<newline46mondego>                + <doubleQuotes46>] at screen: [<doubleQuotes46> + d.getTitle() + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>    public void commandAction(Command c, Item i) {<newline46mondego>        Log.log(<doubleQuotes46>command: [<doubleQuotes46> + c.getCommandLabel()<newline46mondego>                + <doubleQuotes46>] at item: [<doubleQuotes46> + i.getLabel() + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>    Log.log(<doubleQuotes46>set current: [<doubleQuotes46> + someDisplayable.getTitle() + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    display.setCurrent(someDisplayable);<newline46mondego>    // ...<newline46mondego><newline46mondego>    protected void keyPressed(int key) { // in Canvas<newline46mondego>        Log.log(<doubleQuotes46>key pressed: [<doubleQuotes46> + getKeyName(key) + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>"
"7884splitHere46","12167957splitHere46","aform"
"7885splitHere46","12168125splitHere46","@Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);<newline46mondego>        Log.e(LOG_TAG, <doubleQuotes46>Start Repeat Timer<doubleQuotes46>);<newline46mondego><newline46mondego>        Thread thInitializer = new Thread() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                TimerTask task = new RepeatingTask(); // here will block until is readed from socket, but will not block the UI<newline46mondego><newline46mondego>                //after read is done you can set  breakpoint to next statement, but it will repet the run method of the RepeatingTask in each 3 sec<newline46mondego>                Timer timer = new Timer();<newline46mondego>                timer.scheduleAtFixedRate(task, 0, 3000);<newline46mondego>                Log.e(LOG_TAG, <doubleQuotes46>Started Repeat Timer<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        };<newline46mondego>        thInitializer.start();<newline46mondego>        // UI initialization is done, background thread is running an trying to initialize the network stuff        <newline46mondego>    }<newline46mondego>"
"7886splitHere46","12168427splitHere46","ProcessingQueueMember"
"7887splitHere46","12168427splitHere46","AbstractProcessingQueue"
"7888splitHere46","12168427splitHere46","T"
"7889splitHere46","12168427splitHere46","AbstractProcessingQueue"
"7890splitHere46","12168427splitHere46","ProcessingQueueMember"
"7891splitHere46","12168427splitHere46","protected java.util.Queue<AbstractProcessingQueue<T>.ProcessingQueueMember<T>> items;<newline46mondego>"
"7892splitHere46","12168427splitHere46","ProcessingQueueMember<E>"
"7893splitHere46","12168427splitHere46","ProcessingQueueMember"
"7894splitHere46","12168439splitHere46","case <doubleQuotes46>/subscription<doubleQuotes46>:<newline46mondego><newline46mondego>        var notify = function(ids)<newline46mondego>        {<newline46mondego>            response.writeHead(200, {<doubleQuotes46>Content-Type<doubleQuotes46>: <doubleQuotes46>text/html<doubleQuotes46>, <doubleQuotes46>Access-Control-Allow-Origin<doubleQuotes46>: <doubleQuotes46>*<doubleQuotes46>});<newline46mondego>            response.write(JSON.stringify(ids));<newline46mondego>            response.end();<newline46mondego>        }<newline46mondego><newline46mondego>        emitter.once(<doubleQuotes46>event:notify<doubleQuotes46>, notify);<newline46mondego><newline46mondego>        //event will be removed when connection is closed<newline46mondego>        request.on(<doubleQuotes46>close<doubleQuotes46>, function()<newline46mondego>        {<newline46mondego>            emitter.removeListener(<doubleQuotes46>event:notify<doubleQuotes46>, notify);<newline46mondego>        });<newline46mondego>        break;<newline46mondego>"
"7895splitHere46","12168537splitHere46","=3D"
"7896splitHere46","12168705splitHere46","public void onControlChange(final BaseOnScreenControl pBaseOnScreenControl, final float pValueX, final float pValueY) {<newline46mondego>            final Body carBody = CityRacerActivity.this.mCarBody;<newline46mondego><newline46mondego>            final float rotationInRad = (float)Math.atan2(-pValueX, pValueY);<newline46mondego><newline46mondego>            if ((pValueX == 0) && (pValueY == 0))<newline46mondego>            {<newline46mondego>                    //Don't turn the body/sprite of the car<newline46mondego><newline46mondego><newline46mondego>            }else<newline46mondego>            {<newline46mondego>                    carBody.setTransform(carBody.getWorldCenter(), rotationInRad);<newline46mondego>                    //turn the car body in the direction of movement<newline46mondego>                    CityRacerActivity.this.mCar.setRotation(MathUtils.radToDeg(rotationInRad));<newline46mondego>            }<newline46mondego><newline46mondego>            //set the velocity<newline46mondego>            final Vector2 velocity = Vector2Pool.obtain(pValueX * 5, pValueY * 5);<newline46mondego>            carBody.setLinearVelocity(velocity);<newline46mondego>            Vector2Pool.recycle(velocity);<newline46mondego>        }<newline46mondego>"
"7897splitHere46","12168765splitHere46","public boolean isValid( String dateStr ) {<newline46mondego><newline46mondego>    //    K: hour of the day in am/pm<newline46mondego>    //    m: minute of a hour<newline46mondego>    // 'on': static text<newline46mondego>    //  MMM: name of the month with tree letters<newline46mondego>    //   dd: day of the month (you can use just d too)<newline46mondego>    DateFormat df = new SimpleDateFormat( <doubleQuotes46>K:m a 'on' MMM dd<doubleQuotes46>, Locale.US );<newline46mondego><newline46mondego>    try {<newline46mondego>        df.parse( dateStr );<newline46mondego>        return true;<newline46mondego>    } catch ( ParseException exc ) {<newline46mondego>    }<newline46mondego><newline46mondego>    return false;<newline46mondego><newline46mondego>}<newline46mondego>"
"7898splitHere46","12168767splitHere46","public class StockInvetory {<newline46mondego>/*<newline46mondego>  All the code you have now ...<newline46mondego>*/<newline46mondego>  public Stock [] getStocks(){<newline46mondego>      return stocks;<newline46mondego>  }<newline46mondego><newline46mondego>  public setStocks(Stock [] value){<newline46mondego>     //maybe some checking here ...<newline46mondego>      stocks = value;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7899splitHere46","12168767splitHere46","public class StockInterface {<newline46mondego> /*<newline46mondego> What you have just the following line changes ...<newline46mondego> */<newline46mondego>   stockPortfolio.getStocks()[0] = new Stock(stockName, stockRatings, stockPrice, numberShares);<newline46mondego>}<newline46mondego>"
"7900splitHere46","12169070splitHere46","String s = <doubleQuotes46>vendor.2012-07-25 2<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>([^.]+)\\.(\\d{4})-(\\d{2})-(\\d{2}) ?(\\d?)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>if (m.find()) {<newline46mondego>  String vendorName = m.group(1);<newline46mondego>  String year = m.group(2);<newline46mondego>  String month = m.group(3);<newline46mondego>  String day = m.group(4);<newline46mondego>  String multipleFiles = m.groupCount() > 4 ? m.group(5) : <doubleQuotes46><doubleQuotes46>;<newline46mondego>  System.out.printf(<doubleQuotes46>%s %s %s %s %s<doubleQuotes46>, vendorName, year, month, day, multipleFiles);<newline46mondego>}<newline46mondego>"
"7901splitHere46","12169070splitHere46","()"
"7902splitHere46","12169070splitHere46","([^.]+)"
"7903splitHere46","12169070splitHere46","."
"7904splitHere46","12169070splitHere46","(\\d{4})"
"7905splitHere46","12169070splitHere46","\d"
"7906splitHere46","12169070splitHere46","\d{4}"
"7907splitHere46","12169070splitHere46","4"
"7908splitHere46","12169070splitHere46","(\\d{2})"
"7909splitHere46","12169070splitHere46","(\\d{2})"
"7910splitHere46","12169070splitHere46","(\\d?)"
"7911splitHere46","12169070splitHere46","?"
"7912splitHere46","12169070splitHere46","java.Util.Date"
"7913splitHere46","12169070splitHere46","SimpleDateFormat"
"7914splitHere46","12169070splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>([^.]+)\\.(\\d{4}-\\d{2}-\\d{2}) ?(\\d?)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>if (m.find()) {<newline46mondego>  String vendorName = m.group(1);<newline46mondego>  String dateString = m.group(2);<newline46mondego>  SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego>  String multipleFiles = m.groupCount() > 2 ? m.group(3) : <doubleQuotes46><doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"7915splitHere46","12169293splitHere46","int [] cards = new int [52];<newline46mondego><newline46mondego>Field  [] fields = R.drawable.class.getDeclaredFields();<newline46mondego><newline46mondego>String [] names = new String[52];<newline46mondego><newline46mondego>for(int i=0; i<fields.length; i++)<newline46mondego>    if(fields[i].getName().contains(<doubleQuotes46>card_<doubleQuotes46>))<newline46mondego>        names[i] = fields[i].getName();<newline46mondego><newline46mondego>Arrays.sort(names);<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>    for(int i=0; i<names.length; i++)<newline46mondego>        cards[i] = R.drawable.class.getField(names[i]).getInt(null);<newline46mondego>}<newline46mondego>catch(Exception ex){}<newline46mondego>"
"7916splitHere46","12169293splitHere46","//create a Random object, and an integer <newline46mondego>//indicating the current card as a member of your class:<newline46mondego>Random random = new Random();<newline46mondego>int actual = 0;<newline46mondego><newline46mondego>//then for random card selection:<newline46mondego>actual = random.nextInt(52);<newline46mondego>display.setImageResource(cards[actual]);<newline46mondego><newline46mondego>//for getting a higher card:<newline46mondego>actual = actual<51 ? actual+1 : actual;<newline46mondego>display.setImageResource(cards[actual]);<newline46mondego><newline46mondego>//for getting a lower card:<newline46mondego>actual = actual>0 ? actual-1 : actual;<newline46mondego>display.setImageResource(cards[actual]);<newline46mondego>"
"7917splitHere46","12169380splitHere46","str.substring(1)"
"7918splitHere46","12169380splitHere46","reverse()"
"7919splitHere46","12169380splitHere46","reverse()"
"7920splitHere46","12169380splitHere46","+"
"7921splitHere46","12169407splitHere46","InputStream"
"7922splitHere46","12169407splitHere46","URL.openStream()"
"7923splitHere46","12169427splitHere46","public static Map<String, Object> summarizeData(List<String> lines) {<newline46mondego>    Map<String, Integer> map = new HashMap<String, Integer>();<newline46mondego>    for (String line : lines) {<newline46mondego>        String[] temp = line.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>        Integer total = map.get(temp[0]);<newline46mondego>        total = total == null ? 0 : total;<newline46mondego>        map.put(temp[0], total + Integer.valueOf(temp[1]));<newline46mondego>    }<newline46mondego>    return map;<newline46mondego>}<newline46mondego>"
"7924splitHere46","12169466splitHere46","0"
"7925splitHere46","12169466splitHere46","for (int i = 0; i <= 15; i++) {<newline46mondego>    result += s.valAtIndex(i);<newline46mondego>}<newline46mondego>"
"7926splitHere46","12169563splitHere46","numberArea.setLayout(new BorderLayout());<newline46mondego>"
"7927splitHere46","12169563splitHere46","numberArea.add(number,BorderLayout.NORTH);<newline46mondego>"
"7928splitHere46","12169626splitHere46","imaps"
"7929splitHere46","12169626splitHere46","imap"
"7930splitHere46","12169626splitHere46","mail.store.protocol"
"7931splitHere46","12169626splitHere46","imap"
"7932splitHere46","12169626splitHere46","mail.imap.ssl.enable"
"7933splitHere46","12169626splitHere46","true"
"7934splitHere46","12169626splitHere46","mail.imap.*"
"7935splitHere46","12169626splitHere46","mail.imaps.*"
"7936splitHere46","12169802splitHere46","readFile"
"7937splitHere46","12169802splitHere46","readFile"
"7938splitHere46","12169802splitHere46","openFile"
"7939splitHere46","12169846splitHere46","String headerText = String.format(<doubleQuotes46>%.0f kg / %.0f lbs<doubleQuotes46>, dWeightInKg, dWeightInLbs);<newline46mondego>"
"7940splitHere46","12169869splitHere46","i-th"
"7941splitHere46","12169869splitHere46","for (int i = 0; i < wordCharArr.length; i++) {<newline46mondego>  String answer = word.substring(0, i) + word.substring(i + 1);<newline46mondego>  if (list.lookup(answer)) {<newline46mondego>    perm.add(answer);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7942splitHere46","12170013splitHere46","\n\r"
"7943splitHere46","12170013splitHere46","\r"
"7944splitHere46","12170013splitHere46","\r"
"7945splitHere46","12170028splitHere46","SELECT col_name as _id FROM my_table;<newline46mondego>"
"7946splitHere46","12170028splitHere46","SELECT col_name _id FROM my_table;<newline46mondego>"
"7947splitHere46","12170108splitHere46","public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.main );<newline46mondego><newline46mondego>    MyClass work = new MyClass();<newline46mondego>    work.doSomething();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class MyClass{<newline46mondego><newline46mondego>    public void doSomething(){<newline46mondego>        Log.d(<doubleQuotes46>tag<doubleQuotes46>, <doubleQuotes46>yes sir!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7948splitHere46","12170177splitHere46","char ch = (char)raf.readByte();"
"7949splitHere46","12170215splitHere46","HashMap<Int,Boolean>"
"7950splitHere46","12170215splitHere46","if (keyMap.get(VK_COLON) == Boolean.TRUE) //True indicates pressed<newline46mondego>   playerAXPos+= 10;<newline46mondego>"
"7951splitHere46","12170257splitHere46","private List<MyPoint> circles;<newline46mondego>"
"7952splitHere46","12170257splitHere46","List"
"7953splitHere46","12170257splitHere46","MyPoint"
"7954splitHere46","12170257splitHere46","circles = new ArrayList<MyPoint>();<newline46mondego>"
"7955splitHere46","12170257splitHere46","List"
"7956splitHere46","12170257splitHere46","ArrayList"
"7957splitHere46","12170257splitHere46","public class Dog{<newline46mondego><newline46mondego>   private String dName;<newline46mondego>   priavet int dAge;<newline46mondego><newline46mondego>   public Dog(String dName, String dAge){<newline46mondego><newline46mondego>      this.dName = dName;<newline46mondego>      this.dAge = dAge;<newline46mondego><newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>   public String getDName(){<newline46mondego><newline46mondego>        return this.dName;<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>   public String getDName(){<newline46mondego><newline46mondego>        return this.dAge;<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class Test{<newline46mondego><newline46mondego><newline46mondego> public static void main(String[] args){<newline46mondego><newline46mondego>     List<Dog> dAList = new ArrayList<Dog>();<newline46mondego><newline46mondego>     dAList.add(new Dog(<doubleQuotes46>Tommy<doubleQuotes46>,5));<newline46mondego>     dAList.add(new Dog(<doubleQuotes46>Stark<doubleQuotes46>,2));<newline46mondego><newline46mondego>     for(Dog d : dAList){   // Iterating over the List of Dog objects<newline46mondego><newline46mondego>           System.out.println(d.getDName());<newline46mondego>           System.out.println(d.getDAge());<newline46mondego><newline46mondego>         }<newline46mondego><newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"7958splitHere46","12170259splitHere46","Map<String, List<List>>"
"7959splitHere46","12170259splitHere46","Map<String, List<List>> payincash1 = new LinkedHashMap<String, List<List>>();<newline46mondego><newline46mondego>heads.add((String) row[2]);<newline46mondego><newline46mondego>List tails = null;<newline46mondego>tails = new ArrayList();<newline46mondego>tails.add((String) row[0]);<newline46mondego>tails.add((String) row[1]);<newline46mondego>tails.add((String) row[3]);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>heads in dao from iter 1: <doubleQuotes46> + heads);<newline46mondego>System.out.println(<doubleQuotes46>tails in dao from iter1 on: <doubleQuotes46> + tails);<newline46mondego><newline46mondego>List master = payincash1.get((String)row[2]);<newline46mondego>if (master == null) {<newline46mondego><newline46mondego>    master = new List();<newline46mondego>    payincash1.put((String)row[2], master);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>master.add(tails);<newline46mondego>"
"7960splitHere46","12170259splitHere46","public class MyData {<newline46mondego>    private String rec, head, amount, ??; // Apparently you have another variable I don't know about<newline46mondego>    public MyData(String rec, String head, String amount, String ??) {<newline46mondego>        // Initalise...<newline46mondego>    }<newline46mondego>    // Setters and getters not inclueded<newline46mondego>}<newline46mondego>"
"7961splitHere46","12170259splitHere46","Map<String, List<MyData>> payincash1 = new LinkedHashMap<String, List<MyData>>();<newline46mondego><newline46mondego>MyData data = new MyData(row[0], row[1], row[2], row[3]);<newline46mondego><newline46mondego>List master = payincash1.get((String)row[2]);<newline46mondego>if (master == null) {<newline46mondego><newline46mondego>    master = new List<MyData>();<newline46mondego>    payincash1.put((String)row[2], master);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>master.add(data);<newline46mondego>"
"7962splitHere46","12170337splitHere46","aEmployee"
"7963splitHere46","12170337splitHere46","String"
"7964splitHere46","12170337splitHere46","Object"
"7965splitHere46","12170337splitHere46","Employee"
"7966splitHere46","12170337splitHere46","String str = aEmployee.toString() + i;<newline46mondego>"
"7967splitHere46","12170337splitHere46","Employee"
"7968splitHere46","12170337splitHere46","String str = aEmployee.aMethodThatReturnsString() + i;<newline46mondego>"
"7969splitHere46","12170408splitHere46","super()"
"7970splitHere46","12170849splitHere46","applicationContext.xml"
"7971splitHere46","12170849splitHere46","*-servlet.xml"
"7972splitHere46","12170849splitHere46","webmvc-config.xml"
"7973splitHere46","12170849splitHere46","DispatcherServlet"
"7974splitHere46","12170849splitHere46","WebApplicationContext"
"7975splitHere46","12170849splitHere46","WebApplicationContext"
"7976splitHere46","12170849splitHere46","applicationContext.xml"
"7977splitHere46","12170849splitHere46","@ContextConfiguration(locations = <doubleQuotes46>classpath:/META-INF/spring/applicationContext.xml<doubleQuotes46>)<newline46mondego>"
"7978splitHere46","12170849splitHere46","<servlet><newline46mondego>    <servlet-name>my-web</servlet-name><newline46mondego>    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><newline46mondego>    <init-param><newline46mondego>        <param-name>contextConfigLocation</param-name><newline46mondego>        <param-value>/WEB-INF/spring/webmvc-config.xml</param-value><newline46mondego>    </init-param><newline46mondego>    <load-on-startup>1</load-on-startup><newline46mondego></servlet><newline46mondego>"
"7979splitHere46","12170849splitHere46","DispatcherServlet"
"7980splitHere46","12170913splitHere46","System.out.println(<doubleQuotes46>Size: <doubleQuotes46> + charinfo.getMoves().size());<newline46mondego>"
"7981splitHere46","12170938splitHere46","<proxies><newline46mondego>   <proxy><newline46mondego>      <active>true</active><newline46mondego>      <protocol>http</protocol><newline46mondego>      <host>xyz.hk.hsbc</host><newline46mondego>      <port>8080</port>       <newline46mondego>    </proxy><newline46mondego></proxies><newline46mondego>"
"7982splitHere46","12170993splitHere46","Datetime"
"7983splitHere46","12170993splitHere46","SELECT datetime(1346142933585/1000, 'unixepoch');<newline46mondego>"
"7984splitHere46","12171019splitHere46","IPlaybackMonitor pbMonitor = (IPlaybackMonitor)ServiceBroker.getServiceBroker().findService(IPlaybackMonitor.class.getName());<newline46mondego>    if ( pbMonitor != null )<newline46mondego>        pbMonitor.setDescription(IPlaybackMonitor.RUNNING, <doubleQuotes46>MyTestCode<doubleQuotes46>);<newline46mondego>"
"7985splitHere46","12171226splitHere46","beans.xml"
"7986splitHere46","12171226splitHere46","beans.xml"
"7987splitHere46","12171273splitHere46","Inner Classes"
"7988splitHere46","12171273splitHere46","Top Level Classes"
"7989splitHere46","12171273splitHere46","Inner Clas"
"7990splitHere46","12171273splitHere46","Outer Class"
"7991splitHere46","12171273splitHere46","public class Outer{<newline46mondego><newline46mondego><newline46mondego>     class Inner{<newline46mondego><newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego><newline46mondego>public class Test{<newline46mondego><newline46mondego><newline46mondego>   public static void main(String[] args){<newline46mondego><newline46mondego>         Outer o = new Outer();<newline46mondego>         Outer.Inner i = o.new Inner();<newline46mondego><newline46mondego>    }<newline46mondego>} <newline46mondego>"
"7992splitHere46","12171273splitHere46","Top-Level Class"
"7993splitHere46","12171273splitHere46","Top-level"
"7994splitHere46","12171273splitHere46","Static methods and Static variables"
"7995splitHere46","12171273splitHere46","public class Outer{<newline46mondego><newline46mondego><newline46mondego>         class Inner{<newline46mondego><newline46mondego><newline46mondego>         }<newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego>    public class Test{<newline46mondego><newline46mondego><newline46mondego>       public static void main(String[] args){<newline46mondego><newline46mondego><newline46mondego>             Outer.Inner i = new Outer.Inner();<newline46mondego><newline46mondego>        }<newline46mondego>    } <newline46mondego>"
"7996splitHere46","12171369splitHere46","Eclipse helios\plugins\<sdk version>\components\samples\com\rim\samples\device\httpdemo<newline46mondego>"
"7997splitHere46","12171369splitHere46","UiApplication.getUiApplication().invokeLater(new Runnable() <newline46mondego>    {<newline46mondego>        public void run()<newline46mondego>        {<newline46mondego>            <Update UI><newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7998splitHere46","12171431splitHere46","GridData"
"7999splitHere46","12171431splitHere46","area.setLayoutData(gridData);"
"8000splitHere46","12171431splitHere46","gridData = new GridData(SWT.CENTER, SWT.CENTER, true, false);"
"8001splitHere46","12171431splitHere46","composite created by the methods"
"8002splitHere46","12171431splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.events.SelectionAdapter;<newline46mondego>import org.eclipse.swt.events.SelectionEvent;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Button;<newline46mondego>import org.eclipse.swt.widgets.Composite;<newline46mondego>import org.eclipse.swt.widgets.Control;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego>import org.eclipse.swt.widgets.Table;<newline46mondego>import org.eclipse.swt.widgets.TableColumn;<newline46mondego><newline46mondego>public class SideBySide {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        new SideBySide().start();<newline46mondego>    }<newline46mondego><newline46mondego>    private Shell shell;<newline46mondego><newline46mondego>    public void start()<newline46mondego>    {<newline46mondego>        Display display = new Display();<newline46mondego>        shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout(1, true));<newline46mondego><newline46mondego>        GridData gridData = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>        shell.setLayoutData(gridData);<newline46mondego><newline46mondego>        shell.setText(<doubleQuotes46>Side By Side<doubleQuotes46>);<newline46mondego><newline46mondego>        createDialogArea(shell);<newline46mondego><newline46mondego>        shell.open();<newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    protected Control createDialogArea(Composite parent) <newline46mondego>    {<newline46mondego>        final Composite area = new Composite(parent, SWT.NONE);<newline46mondego>        final GridLayout gridLayout = new GridLayout();<newline46mondego>        gridLayout.marginWidth = 15;<newline46mondego>        gridLayout.marginHeight = 10;<newline46mondego>        area.setLayout(gridLayout);<newline46mondego><newline46mondego>        GridData gridData = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>        shell.setLayoutData(gridData);<newline46mondego>        area.setLayoutData(gridData);<newline46mondego><newline46mondego>        createTopButtons(area);<newline46mondego>        createTableViewer(area);<newline46mondego>        return area;<newline46mondego>    }<newline46mondego><newline46mondego>    private void createTableViewer(Composite area)<newline46mondego>    {<newline46mondego>        Table table = new Table(area, SWT.BORDER|SWT.V_SCROLL|SWT.FULL_SELECTION);<newline46mondego>        GridData gridData = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>        table.setLayoutData(gridData);<newline46mondego><newline46mondego>        table.setLinesVisible(true);<newline46mondego>        table.setHeaderVisible(true);<newline46mondego><newline46mondego>        TableColumn column = new TableColumn(table, SWT.LEFT);<newline46mondego>        column.setWidth(320);<newline46mondego>        column.setText(<doubleQuotes46>Column 1<doubleQuotes46>);<newline46mondego><newline46mondego>        column = new TableColumn(table, SWT.LEFT);<newline46mondego>        column.setWidth(320);<newline46mondego>        column.setText(<doubleQuotes46>Column 2<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void createTopButtons(Composite parent) <newline46mondego>    {<newline46mondego><newline46mondego>        Composite composite = new Composite(parent, SWT.NONE);<newline46mondego>        GridLayout gridLayout = new GridLayout(2, false);<newline46mondego>        gridLayout.marginWidth = 0;<newline46mondego>        gridLayout.marginHeight = 0;<newline46mondego>        gridLayout.verticalSpacing = 0;<newline46mondego>        gridLayout.horizontalSpacing = 0;<newline46mondego>        composite.setLayout(gridLayout);<newline46mondego><newline46mondego>        GridData gridData = new GridData(SWT.FILL, SWT.FILL, true, false);<newline46mondego>        composite.setLayoutData(gridData);<newline46mondego><newline46mondego>        gridData = new GridData(SWT.DEFAULT, SWT.FILL, false, false);<newline46mondego><newline46mondego>        Button pdfButton = new Button(composite, SWT.PUSH);<newline46mondego>        pdfButton.setText(<doubleQuotes46>Create PDF<doubleQuotes46>);<newline46mondego>        pdfButton.addSelectionListener(new SelectionAdapter() {<newline46mondego>            public void widgetSelected(SelectionEvent e) {<newline46mondego>                shell.close();<newline46mondego>            }<newline46mondego>        }); <newline46mondego><newline46mondego>        pdfButton.setLayoutData(gridData);<newline46mondego><newline46mondego>        Button plotButton = new Button(composite, SWT.PUSH);<newline46mondego>        plotButton.setText(<doubleQuotes46>Plot<doubleQuotes46>);<newline46mondego>        plotButton.addSelectionListener(new SelectionAdapter() {<newline46mondego>            public void widgetSelected(SelectionEvent e) {<newline46mondego>                shell.close();<newline46mondego>            }<newline46mondego>        });  <newline46mondego>        plotButton.setLayoutData(gridData);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8003splitHere46","12171485splitHere46","AsyncTask<Params, Progress, Result>"
"8004splitHere46","12171485splitHere46","AsyncTask"
"8005splitHere46","12171485splitHere46","class loadFeedTask extends AsyncTask<String, Void, ArrayList<MangaItem>> {<newline46mondego>    protected void onPostExecute(ArrayList<MangaItem> list) {<newline46mondego>        lv1.setAdapter(new EfficientAdapter(MainActivity.this, list));<newline46mondego>        ShowProgress.dismiss();<newline46mondego>    }<newline46mondego>    protected ArrayList<MangaItem> doInBackground(String... params) {<newline46mondego>        ArrayList<MangaItem> list=null;<newline46mondego>        String feedUrl = <doubleQuotes46>http://www.mangapanda.com/alphabetical<doubleQuotes46>; <newline46mondego>        FeedParser parser = new SaxFeedParser(feedUrl);<newline46mondego>        list = parser.parse();<newline46mondego>        MangaItemList=list;<newline46mondego>        return list;<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"8006splitHere46","12171565splitHere46","map.keySet().remove(obj);<newline46mondego>"
"8007splitHere46","12171574splitHere46","btnLogIn.setChangeListener(this);<newline46mondego>"
"8008splitHere46","12171585splitHere46","<component><newline46mondego>  <name>hbm2cfgxml</name><newline46mondego>  <implementation>...</implementation><newline46mondego>  ...<newline46mondego></component><newline46mondego>"
"8009splitHere46","12171602splitHere46","File"
"8010splitHere46","12171602splitHere46","AppEngineFile"
"8011splitHere46","12171602splitHere46","FileService fileService = FileServiceFactory.getFileService();<newline46mondego>AppEngineFile file = fileService.getBlobFile(blob-key); <newline46mondego>FileReadChannel channel = fileService.openReadChannel(file, false);<newline46mondego>// now read from channel<newline46mondego>"
"8012splitHere46","12171690splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Collection;<newline46mondego>import java.util.Enumeration;<newline46mondego>import java.util.NoSuchElementException;<newline46mondego><newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>public class SerializableEnumeration<newline46mondego>   extends ArrayList<newline46mondego>   implements Enumeration<newline46mondego>{<newline46mondego>   /** The serialVersionUID */<newline46mondego>   private static final long serialVersionUID = 8678951571196067510L;<newline46mondego>   private int index;<newline46mondego><newline46mondego>   public SerializableEnumeration () {<newline46mondego>      index = 0;<newline46mondego>   }<newline46mondego><newline46mondego>   public SerializableEnumeration (Collection c) {<newline46mondego>      super(c);<newline46mondego>      index = 0;<newline46mondego>   }<newline46mondego><newline46mondego>   public SerializableEnumeration (int initialCapacity) {<newline46mondego>      super(initialCapacity);<newline46mondego>      index = 0;<newline46mondego>   }<newline46mondego><newline46mondego>   public boolean hasMoreElements() {<newline46mondego>      return (index < size());<newline46mondego>   }<newline46mondego><newline46mondego>   public Object nextElement() throws NoSuchElementException<newline46mondego>   {<newline46mondego>      try {<newline46mondego>         Object nextObj = get(index);<newline46mondego>         index++;<newline46mondego>         return nextObj;<newline46mondego>      }<newline46mondego>      catch (IndexOutOfBoundsException e) {<newline46mondego>         throw new NoSuchElementException();<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   private void writeObject(java.io.ObjectOutputStream out)<newline46mondego>      throws java.io.IOException<newline46mondego>   {<newline46mondego>      // the only thing to write is the index field<newline46mondego>      out.defaultWriteObject();<newline46mondego>   }<newline46mondego><newline46mondego>   private void readObject(java.io.ObjectInputStream in)<newline46mondego>      throws java.io.IOException, ClassNotFoundException<newline46mondego>   {<newline46mondego>      in.defaultReadObject();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"8013splitHere46","12171693splitHere46","checksum = (checksum + ((rom[i] << 8) + rom[i + 1])) % 0x10000;<newline46mondego>//                                                   ^^^^^^^^^<newline46mondego>"
"8014splitHere46","12171767splitHere46","public class BackgroundTask implements Runnable { // extends Thread {<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        for (int i = 0; i < noQueries; i++) {<newline46mondego>            runDatabaseQuery(i);<newline46mondego>            updateProgress(i);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void updateProgress(final int queryNo) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                statusLabel.setText(<doubleQuotes46>Query: <doubleQuotes46> + queryNo);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8015splitHere46","12171767splitHere46","JFrame"
"8016splitHere46","12171767splitHere46","JDialog"
"8017splitHere46","12171767splitHere46","System.exit"
"8018splitHere46","12171792splitHere46","StdRandom"
"8019splitHere46","12171792splitHere46","stdlib.jar"
"8020splitHere46","12171792splitHere46","StdRandom"
"8021splitHere46","12171792splitHere46","import"
"8022splitHere46","12171792splitHere46","import foo.bar.StdRandom;<newline46mondego>"
"8023splitHere46","12171792splitHere46","foo.bar"
"8024splitHere46","12171792splitHere46","StdRandom"
"8025splitHere46","12171792splitHere46","import foo.bar.*;<newline46mondego>"
"8026splitHere46","12171792splitHere46","stdlib.jar"
"8027splitHere46","12171887splitHere46","void"
"8028splitHere46","12171887splitHere46","public MaxIndependentSet() {<newline46mondego>    // blah<newline46mondego>}<newline46mondego>"
"8029splitHere46","12171942splitHere46","<test <newline46mondego>name=<doubleQuotes46>test.nz.ac.massey.cs.sdc.log4jassignment.s06005586.AppenderLayoutTest<doubleQuotes46><newline46mondego>todir=<doubleQuotes46>${coverage.dir}<doubleQuotes46>><newline46mondego>"
"8030splitHere46","12171942splitHere46","<batchtest><newline46mondego>    <fileset dir=<doubleQuotes46>${instr.dir}<doubleQuotes46> includes=<doubleQuotes46>**/*Test.class<doubleQuotes46> /><newline46mondego></batchtest><newline46mondego>"
"8031splitHere46","12171942splitHere46","sysout"
"8032splitHere46","12171957splitHere46","Runtime.getRuntime().exec(<file.exe>).waitfor();<newline46mondego>"
"8033splitHere46","12171962splitHere46","String actualText = searchPage.search(<doubleQuotes46>q<doubleQuotes46>).openFirstResult().selectItemFromCombo().checkName().getNameText() <newline46mondego>"
"8034splitHere46","12172131splitHere46","SELECT COUNT(*) FROM table1 JOIN table2 ON table1.title = table2.title<newline46mondego>"
"8035splitHere46","12172206splitHere46","Abstraction"
"8036splitHere46","12172214splitHere46","\u####"
"8037splitHere46","12172326splitHere46","#"
"8038splitHere46","12172326splitHere46","href"
"8039splitHere46","12172326splitHere46","<a href=<doubleQuotes46>myjsp.jsp?pram1=add<doubleQuotes46> class=<doubleQuotes46>useradd<doubleQuotes46>>Add user</a><newline46mondego>"
"8040splitHere46","12172326splitHere46","if"
"8041splitHere46","12172326splitHere46","<c:if test=<doubleQuotes46>${param.pram1=='add'}<doubleQuotes46>><newline46mondego>    do something<newline46mondego></c:if><newline46mondego>"
"8042splitHere46","12172440splitHere46","import com.google.common.base.Joiner;<newline46mondego>import org.apache.commons.lang.SystemUtils;<newline46mondego>import org.apache.log4j.Logger;<newline46mondego><newline46mondego>import java.nio.file.Path;<newline46mondego>import java.util.Arrays;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import static com.google.common.collect.Lists.newArrayList;<newline46mondego>import static org.apache.ivy.util.Checks.checkNotNull;<newline46mondego><newline46mondego>public class GroovyRunner {<newline46mondego>    private final static Logger logger = LoggerHelper.getLogger();<newline46mondego><newline46mondego>    public static void runGroovyScript(Path scriptPath, String... args) {<newline46mondego>        try {<newline46mondego>            List<String> argsList = newArrayList();<newline46mondego>            String groovyPath = System.getenv(<doubleQuotes46>PLAY_GROOVY_PATH<doubleQuotes46>);<newline46mondego><newline46mondego>            if (SystemUtils.IS_OS_WINDOWS) {<newline46mondego>                // Window, no easy default for PLAY_GROOVY_PATH<newline46mondego>                checkNotNull(groovyPath, <doubleQuotes46>Missing Env Var 'PLAY_GROOVY_PATH'<doubleQuotes46>);<newline46mondego><newline46mondego>                argsList.add(<doubleQuotes46>cmd<doubleQuotes46>);<newline46mondego>                argsList.add(<doubleQuotes46>/c<doubleQuotes46>);<newline46mondego>                argsList.add(groovyPath);<newline46mondego>            } else {<newline46mondego>                if (groovyPath == null) {<newline46mondego>                    // Provide a reasonable default for linux<newline46mondego>                    groovyPath = <doubleQuotes46>/usr/bin/groovy<doubleQuotes46>;<newline46mondego>                }<newline46mondego>                argsList.add(groovyPath);<newline46mondego>            }<newline46mondego><newline46mondego>            argsList.add(scriptPath.toAbsolutePath().toString());<newline46mondego>            Collections.addAll(argsList, args);<newline46mondego><newline46mondego>            String join = Collections3.join(argsList, <doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>            ExecCommand process = new ExecCommand(join);<newline46mondego><newline46mondego>            // Note - out input is the process' output<newline46mondego>            String output = process.getOutput();<newline46mondego>            String error = process.getError();<newline46mondego><newline46mondego>            logger.info(<doubleQuotes46>Groovy output for <doubleQuotes46> + Arrays.toString(args) + <doubleQuotes46>\r\n<doubleQuotes46> + output);<newline46mondego>            logger.info(<doubleQuotes46>Groovy error for <doubleQuotes46> + Arrays.toString(args) + <doubleQuotes46>\r\n<doubleQuotes46> + error);<newline46mondego><newline46mondego><newline46mondego>            if (process.getReturnValue() != 0) {<newline46mondego>                throw new RuntimeException(<doubleQuotes46>Groovy process returned <doubleQuotes46> + process.getReturnValue());<newline46mondego>            }<newline46mondego>        } catch (Throwable e) {<newline46mondego>            throw new RuntimeException(<doubleQuotes46>Failure running groovy script: <doubleQuotes46> + scriptPath + <doubleQuotes46> <doubleQuotes46> + Joiner.on(<doubleQuotes46> <doubleQuotes46>).join(args), e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8043splitHere46","12172609splitHere46","<doubleQuotes46>"
"8044splitHere46","12172609splitHere46","\<doubleQuotes46>"
"8045splitHere46","12172609splitHere46","out.write(<doubleQuotes46>graph[bgcolor=white, size=\<doubleQuotes46>9\<doubleQuotes46>, center=1, margin=\<doubleQuotes46>0.5, 0.5\<doubleQuotes46>];<doubleQuotes46>);<newline46mondego>"
"8046splitHere46","12172667splitHere46","BigDecimal a = new BigDecimal(<doubleQuotes46>0.15<doubleQuotes46>);<newline46mondego>BigDecimal b = new BigDecimal(<doubleQuotes46>0.01<doubleQuotes46>);<newline46mondego>System.out.println(a.subtract(b));<newline46mondego>"
"8047splitHere46","12172667splitHere46","valueOf"
"8048splitHere46","12172667splitHere46","BigDecimal x = new BigDecimal(<doubleQuotes46>0.15<doubleQuotes46>);   // This is ok<newline46mondego>BigDecimal x = BigDecimal.valueOf(0.15); // This is also ok<newline46mondego>"
"8049splitHere46","12172667splitHere46","BigDecimal x = new BigDecimal(0.15); // DON'T DO THIS<newline46mondego>"
"8050splitHere46","12172737splitHere46","Point"
"8051splitHere46","12172750splitHere46","<result type=<doubleQuotes46>json<doubleQuotes46>><newline46mondego>  <param name=<doubleQuotes46>excludeProperties<doubleQuotes46>><newline46mondego>    login.password,<newline46mondego>    studentList.*\.sin<newline46mondego>  </param><newline46mondego></result><newline46mondego>"
"8052splitHere46","12173265splitHere46","Map<String, Object> map = new HashMap<String, Object>();<newline46mondego>map.put(<doubleQuotes46>frm_date<doubleQuotes46>, frm_dte);<newline46mondego>map.put(<doubleQuotes46>to_date<doubleQuotes46>, to_dte);<newline46mondego>"
"8053splitHere46","12173265splitHere46","P${}"
"8054splitHere46","12173346splitHere46","PrinterWriter"
"8055splitHere46","12173346splitHere46","StringWriter"
"8056splitHere46","12173346splitHere46","String"
"8057splitHere46","12173346splitHere46","JavaCompiler"
"8058splitHere46","12173346splitHere46","import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.io.StringWriter;<newline46mondego>import java.lang.reflect.InvocationTargetException;<newline46mondego>import java.net.URI;<newline46mondego>import java.util.Arrays;<newline46mondego><newline46mondego>import javax.tools.Diagnostic;<newline46mondego>import javax.tools.DiagnosticCollector;<newline46mondego>import javax.tools.JavaCompiler;<newline46mondego>import javax.tools.JavaFileObject;<newline46mondego>import javax.tools.SimpleJavaFileObject;<newline46mondego>import javax.tools.ToolProvider;<newline46mondego>import javax.tools.JavaCompiler.CompilationTask;<newline46mondego>import javax.tools.JavaFileObject.Kind;<newline46mondego><newline46mondego>public class CompileSourceInMemory {<newline46mondego>  public static void main(String args[]) throws IOException {<newline46mondego>    JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();<newline46mondego>    DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<JavaFileObject>();<newline46mondego><newline46mondego>    StringWriter writer = new StringWriter();<newline46mondego>    PrintWriter out = new PrintWriter(writer);<newline46mondego>    out.println(<doubleQuotes46>public class HelloWorld {<doubleQuotes46>);<newline46mondego>    out.println(<doubleQuotes46>  public static void main(String args[]) {<doubleQuotes46>);<newline46mondego>    out.println(<doubleQuotes46>    System.out.println(\<doubleQuotes46>This is in another java file\<doubleQuotes46>);<doubleQuotes46>);    <newline46mondego>    out.println(<doubleQuotes46>  }<doubleQuotes46>);<newline46mondego>    out.println(<doubleQuotes46>}<doubleQuotes46>);<newline46mondego>    out.close();<newline46mondego>    JavaFileObject file = new JavaSourceFromString(<doubleQuotes46>HelloWorld<doubleQuotes46>, writer.toString());<newline46mondego><newline46mondego>    Iterable<? extends JavaFileObject> compilationUnits = Arrays.asList(file);<newline46mondego>    CompilationTask task = compiler.getTask(null, null, diagnostics, null, null, compilationUnits);<newline46mondego><newline46mondego>    boolean success = task.call();<newline46mondego>    for (Diagnostic diagnostic : diagnostics.getDiagnostics()) {<newline46mondego>      System.out.println(diagnostic.getCode());<newline46mondego>      System.out.println(diagnostic.getKind());<newline46mondego>      System.out.println(diagnostic.getPosition());<newline46mondego>      System.out.println(diagnostic.getStartPosition());<newline46mondego>      System.out.println(diagnostic.getEndPosition());<newline46mondego>      System.out.println(diagnostic.getSource());<newline46mondego>      System.out.println(diagnostic.getMessage(null));<newline46mondego><newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>Success: <doubleQuotes46> + success);<newline46mondego><newline46mondego>    if (success) {<newline46mondego>      try {<newline46mondego>        Class.forName(<doubleQuotes46>HelloWorld<doubleQuotes46>).getDeclaredMethod(<doubleQuotes46>main<doubleQuotes46>, new Class[] { String[].class })<newline46mondego>            .invoke(null, new Object[] { null });<newline46mondego>      } catch (ClassNotFoundException e) {<newline46mondego>        System.err.println(<doubleQuotes46>Class not found: <doubleQuotes46> + e);<newline46mondego>      } catch (NoSuchMethodException e) {<newline46mondego>        System.err.println(<doubleQuotes46>No such method: <doubleQuotes46> + e);<newline46mondego>      } catch (IllegalAccessException e) {<newline46mondego>        System.err.println(<doubleQuotes46>Illegal access: <doubleQuotes46> + e);<newline46mondego>      } catch (InvocationTargetException e) {<newline46mondego>        System.err.println(<doubleQuotes46>Invocation target: <doubleQuotes46> + e);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class JavaSourceFromString extends SimpleJavaFileObject {<newline46mondego>  final String code;<newline46mondego><newline46mondego>  JavaSourceFromString(String name, String code) {<newline46mondego>    super(URI.create(<doubleQuotes46>string:///<doubleQuotes46> + name.replace('.','/') + Kind.SOURCE.extension),Kind.SOURCE);<newline46mondego>    this.code = code;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public CharSequence getCharContent(boolean ignoreEncodingErrors) {<newline46mondego>    return code;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8059splitHere46","12173413splitHere46","-fx-font-family: 'Helvetica', Arial, sans-serif;<newline46mondego>"
"8060splitHere46","12173413splitHere46","@font-face {<newline46mondego>    font-family: Delicious;<newline46mondego>    src: url('Delicious-Roman.otf');<newline46mondego>}<newline46mondego>"
"8061splitHere46","12173413splitHere46","-fx-"
"8062splitHere46","12173413splitHere46","-fx-font-family: 'Delicious';<newline46mondego>"
"8063splitHere46","12173417splitHere46","dialog.setLocationRelativeTo((Window) caller);<newline46mondego>"
"8064splitHere46","12173417splitHere46","((Window) caller).dispose();<newline46mondego>"
"8065splitHere46","12173438splitHere46","int partitionSize = 2;<newline46mondego>List<List<String>> partitions = new LinkedList<List<String>>();<newline46mondego>for (int i = 0; i < messages.size(); i += partitionSize) {<newline46mondego>    partitions.add(messages.subList(i,<newline46mondego>            i + Math.min(partitionSize, messages.size() - i)));<newline46mondego>}<newline46mondego>"
"8066splitHere46","12173550splitHere46","Document document = new Document(PageSize.A4);<newline46mondego>String filename = <doubleQuotes46><doubleQuotes46>; // Set the relative path and name for the output file<newline46mondego>PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(filename));<newline46mondego>document.open();<newline46mondego>// Fix the path to the font if needed<newline46mondego>BaseFont bf = BaseFont.createFont(<doubleQuotes46>c:/windows/fonts/arial.ttf<doubleQuotes46>, BaseFont.IDENTITY_H, true);<newline46mondego>Font font = new Font(bf, 14);<newline46mondego>ColumnText column = new ColumnText(writer.getDirectContent());<newline46mondego>column.setSimpleColumn(36, 770, 569, 36);<newline46mondego>column.setRunDirection(PdfWriter.RUN_DIRECTION_RTL);<newline46mondego>String text = <doubleQuotes46>×”×˜×§×¡×˜ ×©×œ×š ×‘×¢×‘×¨×™×ª<doubleQuotes46>; // Your text in hebrew<newline46mondego>column.addElement(new Paragraph(text, font));<newline46mondego>column.go();<newline46mondego>document.close();<newline46mondego>"
"8067splitHere46","12173592splitHere46","DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder builder = factory.newDocumentBuilder();<newline46mondego>ClassLoader loader = XmlTestReader.class.getClassLoader();<newline46mondego>InputStream is = loader.getResourceAsStream(<doubleQuotes46>test.xml<doubleQuotes46>);<newline46mondego>Document doc = builder.parse(is);<newline46mondego>"
"8068splitHere46","12173592splitHere46","XPathFactory xPathFactory = XPathFactory.newInstance();<newline46mondego>XPath xPath = xPathFactory.newXPath();<newline46mondego>XPathExpression expr = xPath.compile(<doubleQuotes46>/Main/Port[@name='write_qwe']/output/return/@code<doubleQuotes46>);<newline46mondego>NodeList nl = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);<newline46mondego>"
"8069splitHere46","12173592splitHere46","/Main/Port[@name='write_qwe']/output/return/@code"
"8070splitHere46","12173592splitHere46","code"
"8071splitHere46","12173592splitHere46","Port"
"8072splitHere46","12173592splitHere46","name"
"8073splitHere46","12173592splitHere46","write_qwe"
"8074splitHere46","12173592splitHere46","for (int i = 0; i < nl.getLength(); i++) {<newline46mondego>    Node node = nl.item(i);<newline46mondego>    System.out.println(node.getNodeValue());<newline46mondego>}<newline46mondego>"
"8075splitHere46","12173592splitHere46","/Main/Port[@name='write_qwe']/output/return"
"8076splitHere46","12173592splitHere46","<return>"
"8077splitHere46","12173592splitHere46","for (int i = 0; i < nl.getLength(); i++) {<newline46mondego>    Node node = nl.item(i);<newline46mondego>    System.out.println(node.getAttributes().getNamedItem(<doubleQuotes46>code<doubleQuotes46>).getNodeValue());<newline46mondego>}<newline46mondego>"
"8078splitHere46","12173592splitHere46","InputSource"
"8079splitHere46","12173592splitHere46","XPathExpression#evaluate()"
"8080splitHere46","12173592splitHere46","ClassLoader loader = XmlTestReader.class.getClassLoader();<newline46mondego>InputStream inputStream = loader.getResourceAsStream(<doubleQuotes46>test.xml<doubleQuotes46>);<newline46mondego>InputSource inputSource = new InputSource(inputStream);<newline46mondego><newline46mondego>XPathFactory xPathFactory = XPathFactory.newInstance();<newline46mondego>XPath xPath = xPathFactory.newXPath();<newline46mondego>XPathExpression expr = xPath.compile(<doubleQuotes46>/Main/Port[@name='write_qwe']/output/return/@code<doubleQuotes46>);<newline46mondego>NodeList nl = (NodeList) expr.evaluate(inputSource , XPathConstants.NODESET);<newline46mondego>"
"8081splitHere46","12173636splitHere46","name"
"8082splitHere46","12173636splitHere46","fileName"
"8083splitHere46","12173636splitHere46","return name.contains(<doubleQuotes46>bluetooth<doubleQuotes46>);"
"8084splitHere46","12173636splitHere46","return filename.contains(<doubleQuotes46>bluetooth<doubleQuotes46>);"
"8085splitHere46","12173636splitHere46","return filename.contains(name);"
"8086splitHere46","12173636splitHere46","fileName"
"8087splitHere46","12173636splitHere46","name"
"8088splitHere46","12173636splitHere46","contains()"
"8089splitHere46","12173636splitHere46","standardize"
"8090splitHere46","12173636splitHere46","name"
"8091splitHere46","12173636splitHere46","filename.toLowerCase().contains(name.toLowerCase())"
"8092splitHere46","12173636splitHere46","public class Filter implements FilenameFilter {<newline46mondego> String name; <newline46mondego><newline46mondego> public Filter(String name) {<newline46mondego>    this.name = name; <newline46mondego><newline46mondego> }<newline46mondego> @Override<newline46mondego> public boolean accept(File dir, String filename) {<newline46mondego>    //If you want to perform a case-insensitive search<newline46mondego>    return filename.toLowerCase().contains(name.toLowerCase());<newline46mondego> }<newline46mondego>}<newline46mondego>"
"8093splitHere46","12173648splitHere46","(((a & 0xff) << 24) | ((b & 0xff) << 16) |<newline46mondego>     ((c & 0xff) << 8) | (d & 0xff))<newline46mondego>"
"8094splitHere46","12173707splitHere46","gateway.stopGateway()"
"8095splitHere46","12173778splitHere46","<h:outputText value=<doubleQuotes46>#{itemStatusListReversedString[item.status]}<doubleQuotes46> /><newline46mondego>"
"8096splitHere46","12173778splitHere46","<h:outputText value=<doubleQuotes46>#{item.stringValue}<doubleQuotes46> /><newline46mondego>"
"8097splitHere46","12173778splitHere46","item"
"8098splitHere46","12173778splitHere46","public String getStringValue(){<newline46mondego> return itemStatusListReversedString.get(this.numberValue);<newline46mondego>}<newline46mondego>"
"8099splitHere46","12173778splitHere46","item"
"8100splitHere46","12173778splitHere46","itemStatusListReversedString"
"8101splitHere46","12173778splitHere46","public class MyClass{<newline46mondego>//The necessary stuff<newline46mondego>private Integer valueFromDB; //0, 1, 2...<newline46mondego>private Map<Integer, String> itemStatusListReversedString; //The map you configured in the faces-config.xml<newline46mondego><newline46mondego>//More stuff<newline46mondego><newline46mondego>public String getStringValue(){<newline46mondego> return itemStatusListReversedString.get(this.valueFromDB);<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"8102splitHere46","12173778splitHere46","<bean id=<doubleQuotes46>myClassInstance<doubleQuotes46>              <newline46mondego>class=<doubleQuotes46>package.MyClass<doubleQuotes46> scope=<doubleQuotes46>request<doubleQuotes46>>    <newline46mondego>        <property name=<doubleQuotes46>itemStatusListReversedString<doubleQuotes46> ref=<doubleQuotes46>itemStatusListReversedString<doubleQuotes46>></property><newline46mondego>    </bean><newline46mondego>"
"8103splitHere46","12173778splitHere46","new MyClass()"
"8104splitHere46","12173778splitHere46","WebApplicationContext webApplicationContext = FacesContextUtils.getWebApplicationContext(FacesContext.getCurrentInstance());<newline46mondego>        MyClass bean = (MyClass)webApplicationContext.getBean(<doubleQuotes46>myClassInstance<doubleQuotes46>);<newline46mondego>"
"8105splitHere46","12173889splitHere46","savszelesseg_port = <doubleQuotes46>8500/relay_911<doubleQuotes46>;<newline46mondego>"
"8106splitHere46","12173889splitHere46","SharedPreferences.Editor editor = localSharedPreferences.edit();<newline46mondego>editor.putString(<doubleQuotes46>savszelesseg_mentes<doubleQuotes46>, savszelesseg_port);<newline46mondego>editor.commit();<newline46mondego>"
"8107splitHere46","12173933splitHere46","Note that Google may periodically refresh the registration ID, so you should design your    <newline46mondego>Android application with the understanding that the com.google.android.c2dm.intent.REGISTRATION intent may be called multiple times.<newline46mondego>"
"8108splitHere46","12173949splitHere46","java -cp YOUR_CLASSPATH why.Helloworld"
"8109splitHere46","12173949splitHere46","YOUR_CLASSPATH"
"8110splitHere46","12173949splitHere46","."
"8111splitHere46","12173949splitHere46","classes"
"8112splitHere46","12173949splitHere46","bin"
"8113splitHere46","12174318splitHere46","class YourClass {<newline46mondego>    private volatile Map<String, SomeApplicationObject> map;<newline46mondego><newline46mondego>    //constructors etc.<newline46mondego><newline46mondego>    public void reload() {<newline46mondego>        Map<String,SomeApplicationObject> newMap = getNewValues();<newline46mondego>        map = Collections.unmodifiableMap(newMap);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8114splitHere46","12174318splitHere46","getNewValues"
"8115splitHere46","12174318splitHere46","map"
"8116splitHere46","12174318splitHere46","map"
"8117splitHere46","12174371splitHere46","private int currentPage = -1;<newline46mondego>private Image cachedScaledImage = null;<newline46mondego><newline46mondego>public double getScaleFactor(int iMasterSize, int iTargetSize) {<newline46mondego>    double dScale = 1;<newline46mondego>    if (iMasterSize > iTargetSize) {<newline46mondego>        dScale = (double) iTargetSize / (double) iMasterSize;<newline46mondego>    } else {<newline46mondego>        dScale = (double) iTargetSize / (double) iMasterSize;<newline46mondego>    }<newline46mondego>    return dScale;<newline46mondego>}<newline46mondego><newline46mondego>public double getScaleFactorToFit(BufferedImage img, Dimension size) {<newline46mondego>    double dScale = 1;<newline46mondego>    if (img != null) {<newline46mondego>        int imageWidth = img.getWidth();<newline46mondego>        int imageHeight = img.getHeight();<newline46mondego>        dScale = getScaleFactorToFit(new Dimension(imageWidth, imageHeight), size);<newline46mondego>    }<newline46mondego>    return dScale;<newline46mondego>}<newline46mondego><newline46mondego>public double getScaleFactorToFit(Dimension original, Dimension toFit) {<newline46mondego>    double dScale = 1d;<newline46mondego>    if (original != null && toFit != null) {<newline46mondego>        double dScaleWidth = getScaleFactor(original.width, toFit.width);<newline46mondego>        double dScaleHeight = getScaleFactor(original.height, toFit.height);<newline46mondego><newline46mondego>        dScale = Math.min(dScaleHeight, dScaleWidth);<newline46mondego>    }<newline46mondego>    return dScale;<newline46mondego>}<newline46mondego><newline46mondego>public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {<newline46mondego><newline46mondego>    if (pageIndex >= images.size()) {<newline46mondego>        return Printable.NO_SUCH_PAGE;<newline46mondego>    }<newline46mondego>    RenderedImage image;<newline46mondego><newline46mondego><newline46mondego>    Graphics2D graphics2D = (Graphics2D) graphics;<newline46mondego><newline46mondego>    int width = (int)Math.round(pageFormat.getImageableWidth());<newline46mondego>    int height = (int)Math.round(pageFormat.getImageableHeight());<newline46mondego><newline46mondego>    if (currentPage != pageIndex || cachedScaledImage == null) {<newline46mondego>        currentPage = pageIndx;    <newline46mondego><newline46mondego>        image = new NullOpImage((RenderedImage) images.get(pageIndex), null, null, OpImage.OP_IO_BOUND);<newline46mondego><newline46mondego>        BufferedImage imageCopy = new BufferedImage(image.getWidth(), image.getHeight(), BufferedImage.TYPE_INT_ARGB);<newline46mondego>        Graphics2D g2d = imageCopy.createGraphics();<newline46mondego>        g2d.drawImage(imageCopy, 0, 0, null);<newline46mondego>        g2d.dispose();<newline46mondego><newline46mondego>        double scaleFactor = getScaleFactorToFit(new Dimension(image.getWidth(), image.getHeight()), new Dimension(width, height));<newline46mondego><newline46mondego>        int imageWidth = (int)Math.round(image.getWidth() * scaleFactor);<newline46mondego>        int imageHeight = (int)Math.round(image.getHeight() * scaleFactor);<newline46mondego><newline46mondego>        double x = ((pageFormat.getImageableWidth() - imageWidth) / 2) + pageFormat.getImageableX();<newline46mondego>        double y = ((pageFormat.getImageableHeight() - imageHeight) / 2) + pageFormat.getImageableY();<newline46mondego><newline46mondego>        cachedScaledImage = imageCopy.getScaledInstance(imageWidth, imageHeight, Image.SCALE_SMOOTH);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    graphics2D.drawRenderedImage(cachedScaledImage, AffineTransform.getTranslateInstance(x, y));<newline46mondego><newline46mondego>    return PAGE_EXISTS;<newline46mondego>}<newline46mondego>"
"8118splitHere46","12174416splitHere46","^\p{ASCII}{0,11}$<newline46mondego>"
"8119splitHere46","12174416splitHere46","^\p{ASCII}{11}$<newline46mondego>"
"8120splitHere46","12174418splitHere46","long time = System.currentTimeMillis();<newline46mondego>"
"8121splitHere46","12174418splitHere46","int seconds = new Date(time).getSeconds();<newline46mondego>"
"8122splitHere46","12174418splitHere46","int sleepSecs = 60 - seconds;<newline46mondego>"
"8123splitHere46","12174418splitHere46","handler.postDelayed()"
"8124splitHere46","12174418splitHere46","handler.postDelayed(drawRunner, sleepSecs*1000);<newline46mondego>"
"8125splitHere46","12174480splitHere46","for (int i = 0; i < 1000 * 1000; ++i) {<newline46mondego>    long var = i;<newline46mondego>}<newline46mondego>"
"8126splitHere46","12174480splitHere46","//for (int i = 0; i < 1000 * 1000; ++i) {<newline46mondego>//    long var = i;<newline46mondego>//}<newline46mondego>"
"8127splitHere46","12174492splitHere46","@XmlRootElement(name=<doubleQuotes46>ConnectorCommandType<doubleQuotes46>)"
"8128splitHere46","12174492splitHere46","ConnectorCommandType"
"8129splitHere46","12174492splitHere46","@XmlElementDecl(name=<doubleQuotes46>ConnectorCommandType<doubleQuotes46>)"
"8130splitHere46","12174492splitHere46","ObjectFactory"
"8131splitHere46","12174492splitHere46","package-info"
"8132splitHere46","12174492splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><ConnectorCommandType xmlns=<doubleQuotes46>YOUR_NAMESPACE_HERE<doubleQuotes46>><newline46mondego>     ........ <newline46mondego></ConnectorCommandType><newline46mondego>"
"8133splitHere46","12174492splitHere46","ConnectorCommandType"
"8134splitHere46","12174577splitHere46","TimeSeriesCollection"
"8135splitHere46","12174577splitHere46","TimeSeriesCollection otherDataSet = new TimeSeriesCollection();<newline46mondego>TimeSeries ts1 = new TimeSeries(<doubleQuotes46>Series 1<doubleQuotes46>);<newline46mondego>otherDataSet.addSeries(ts1);<newline46mondego>TimeSeries ts2 = new TimeSeries(<doubleQuotes46>Series 2<doubleQuotes46>);<newline46mondego>otherDataSet.addSeries(ts2);<newline46mondego>TimeSeries ts3 = new TimeSeries(<doubleQuotes46>Series 2<doubleQuotes46>);<newline46mondego>otherDataSet.addSeries(ts3);<newline46mondego>"
"8136splitHere46","12174577splitHere46","TimeSeries"
"8137splitHere46","12174577splitHere46","otherDataSet"
"8138splitHere46","12174577splitHere46","Plot"
"8139splitHere46","12174577splitHere46","OhlcChart"
"8140splitHere46","12174577splitHere46","mapDatasetToRangeAxis"
"8141splitHere46","12174577splitHere46","Renderer"
"8142splitHere46","12174577splitHere46","//Add the otherDataSet to the plot and map it to the same axis at the original plot <newline46mondego>int index = 1;<newline46mondego>plot.setDataset(index, otherDataSet);<newline46mondego>plot.mapDatasetToRangeAxis(index, 0);<newline46mondego><newline46mondego>XYItemRenderer renderer2 = new XYLineAndShapeRenderer();<newline46mondego>plot.setRenderer(1, renderer2);<newline46mondego>plot.setDatasetRenderingOrder(DatasetRenderingOrder.FORWARD);<newline46mondego>"
"8143splitHere46","12174577splitHere46","OHLCDataset"
"8144splitHere46","12174577splitHere46","BoxAndWhiskerXYDataset"
"8145splitHere46","12174629splitHere46","MyClass.methodName1()<newline46mondego>"
"8146splitHere46","12174629splitHere46","Obj1"
"8147splitHere46","12174629splitHere46","obj1.variable1; // note the <doubleQuotes46>o<doubleQuotes46> instead of <doubleQuotes46>O<doubleQuotes46>, please do follow conventions<newline46mondego>"
"8148splitHere46","12174678splitHere46","install http://repository.springsource.com/ivy/bundles/external/org.aspectj/com.springsource.org.aspectj.runtime/1.6.2.RELEASE/com.springsource.org.aspectj.runtime-1.6.2.RELEASE.jar<newline46mondego>install http://repository.springsource.com/ivy/bundles/external/org.aspectj/com.springsource.org.aspectj.weaver/1.6.2.RELEASE/com.springsource.org.aspectj.weaver-1.6.2.RELEASE.jar<newline46mondego>"
"8149splitHere46","12174678splitHere46","org.aopalliance.aop,"
"8150splitHere46","12174678splitHere46","(org.aspectj)"
"8151splitHere46","12174917splitHere46","CachingHttpFilter"
"8152splitHere46","12174917splitHere46","If-Modified-Since"
"8153splitHere46","12174917splitHere46","HTTP 304"
"8154splitHere46","12174917splitHere46","ETag"
"8155splitHere46","12174976splitHere46","run()"
"8156splitHere46","12174976splitHere46","File logFile = mThread.createFile(<doubleQuotes46>/Logs/test.txt<doubleQuotes46>);<newline46mondego>if(logFile!=null)<newline46mondego>//do something<newline46mondego>else<newline46mondego>//do something else<newline46mondego>"
"8157splitHere46","12174976splitHere46","run"
"8158splitHere46","12174976splitHere46","createFile"
"8159splitHere46","12174976splitHere46","createFile"
"8160splitHere46","12174976splitHere46","run()"
"8161splitHere46","12174988splitHere46","@SessionScoped"
"8162splitHere46","12174988splitHere46","private void gotoErrorPage(MethodExpression expression) {<newline46mondego>        FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>        Application application = context.getApplication();<newline46mondego><newline46mondego>        HttpSession session = (HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(false);<newline46mondego>        if (session != null) {<newline46mondego>            session.invalidate();<newline46mondego>        }<newline46mondego><newline46mondego>        NavigationHandler navHandler = application.getNavigationHandler();<newline46mondego>        navHandler.handleNavigation(context, null == expression ? null : expression.getExpressionString(), NAV_ERRORPAGE);<newline46mondego>        context.renderResponse();<newline46mondego>    }<newline46mondego>"
"8163splitHere46","12175090splitHere46","System.out.println(..)"
"8164splitHere46","12175090splitHere46","@Pointcut(<doubleQuotes46>execution(@pack.aop.TestAnnotation * *(..)) <doubleQuotes46>)<newline46mondego>public void logMethod() {}<newline46mondego>"
"8165splitHere46","12175090splitHere46","@Before(<doubleQuotes46>logMethod()<doubleQuotes46>)<newline46mondego>public void beforeLogMethod(JoinPoint joinPoint) {<newline46mondego>    System.out.println(<doubleQuotes46>Logging..<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8166splitHere46","12175090splitHere46","Aspects.aspectOf(pack.aop.BeforeAdvice.class)"
"8167splitHere46","12175090splitHere46","<bean id=<doubleQuotes46>beforeAdvice<doubleQuotes46> class=<doubleQuotes46>apack.aop.BeforeAdvice<doubleQuotes46><newline46mondego>    factory-method=<doubleQuotes46>aspectOf<doubleQuotes46> /><newline46mondego>"
"8168splitHere46","12175232splitHere46","<form> tag with <html:form><newline46mondego>"
"8169splitHere46","12175268splitHere46","addHighlighter(new ColorHighlighter());<newline46mondego>"
"8170splitHere46","12175454splitHere46","File f = new File(file);"
"8171splitHere46","12175454splitHere46","java.io.File"
"8172splitHere46","12175454splitHere46","FileOutputStream"
"8173splitHere46","12175454splitHere46","OutputStream out = new FileOutputStream(<doubleQuotes46>C:\\Temp\\filename.dat<doubleQuotes46>);<newline46mondego>try {<newline46mondego>    // Write data to 'out'<newline46mondego>} finally {<newline46mondego>    // Make sure to close the file when done<newline46mondego>    out.close();<newline46mondego>}<newline46mondego>"
"8174splitHere46","12175549splitHere46","class MyClass {<newline46mondego>    private static int i = 0;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        i = 3; //w<newline46mondego>        System.out.println(i); //r<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8175splitHere46","12175657splitHere46","PhoneAccount[] phoneaccounts = am.getAllAccounts() ;<newline46mondego>for( PhoneAccount phoneaccount  : phoneaccounts)<newline46mondego>{<newline46mondego> System.out.println(phoneaccount.getTotalBill());<newline46mondego>// fetch all the  other properties from phoneaccoun similarly.<newline46mondego>}<newline46mondego>"
"8176splitHere46","12175676splitHere46","PortletRequestWrapper"
"8177splitHere46","12175676splitHere46","HttpServletRequest"
"8178splitHere46","12175676splitHere46","ExternalContext.getSession(boolean)"
"8179splitHere46","12175676splitHere46","HttpServletRequest.getSession(boolean)"
"8180splitHere46","12175676splitHere46","PortletSessionWrapper"
"8181splitHere46","12175676splitHere46","HttpSession"
"8182splitHere46","12175676splitHere46","PortletSession"
"8183splitHere46","12175676splitHere46","PortletSession"
"8184splitHere46","12175676splitHere46","PortletRequest request = (PortletRequest) FacesContext.getCurrentInstance()<newline46mondego>                                                          .getExternalContext()<newline46mondego>                                                          .getRequest();<newline46mondego>    PortletSession session = request.getPortletSession(false);<newline46mondego>    if (session == null) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        return session.getAttribute(<doubleQuotes46>foo<doubleQuotes46>, PortletSession.APPLICATION_SCOPE);<newline46mondego>    }<newline46mondego>"
"8185splitHere46","12175691splitHere46","BigInteger"
"8186splitHere46","12175691splitHere46",".add"
"8187splitHere46","12175691splitHere46","BigInteger total = BigInteger.ZERO;<newline46mondego>total = total.add(fiveThousand);<newline46mondego>total = total.add(fiftyThousand);<newline46mondego>total = total.add(fiveHundredThousand);<newline46mondego>System.out.println(total);<newline46mondego>"
"8188splitHere46","12175691splitHere46","total = total.add(...)"
"8189splitHere46","12175691splitHere46","total"
"8190splitHere46","12175691splitHere46",".add"
"8191splitHere46","12175833splitHere46","HttpConnection"
"8192splitHere46","12175833splitHere46","public String getValuefromUrl(String url)<newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            DefaultHttpClient httpClient = new DefaultHttpClient();<newline46mondego>            HttpGet httpGet = new HttpGet(url);<newline46mondego>            ResponseHandler<String> resHandler = new BasicResponseHandler();<newline46mondego>            String page = httpClient.execute(httpGet, resHandler);<newline46mondego>            Log.v(<doubleQuotes46>PAGE<doubleQuotes46>,page);<newline46mondego>            return page;<newline46mondego>        }<newline46mondego>        catch(Exception ex)<newline46mondego>        {<newline46mondego>            ex.printStackTrace();<newline46mondego>            return <doubleQuotes46>zero<doubleQuotes46>;  <newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"8193splitHere46","12176044splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class PaintRectangle extends JPanel {<newline46mondego><newline46mondego>    private Point mouseLocation;<newline46mondego><newline46mondego>    public PaintRectangle() {<newline46mondego>        setPreferredSize(new Dimension(500, 500));<newline46mondego><newline46mondego>        MouseAdapter listener = new MouseAdapter() {<newline46mondego>            @Override<newline46mondego>            public void mousePressed(MouseEvent e) {<newline46mondego>                updateMouseRectangle(e);<newline46mondego>            }<newline46mondego><newline46mondego>            private void updateMouseRectangle(MouseEvent e) {<newline46mondego>                mouseLocation = e.getPoint();<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseDragged(MouseEvent e) {<newline46mondego>                updateMouseRectangle(e);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseReleased(MouseEvent e) {<newline46mondego>                mouseLocation = null;<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        addMouseListener(listener);<newline46mondego>        addMouseMotionListener(listener);<newline46mondego>    }<newline46mondego><newline46mondego>    private Rectangle getRectangle() {<newline46mondego>        if(mouseLocation != null) {<newline46mondego>            return new Rectangle(mouseLocation.x - 5, mouseLocation.y - 5, 10, 10);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        Rectangle rectangle = getRectangle();<newline46mondego>        if(rectangle != null) {<newline46mondego>            Graphics2D gg = (Graphics2D) g;<newline46mondego>            gg.setColor(Color.BLUE);<newline46mondego>            gg.fill(rectangle);<newline46mondego>            gg.setColor(Color.BLACK);<newline46mondego>            gg.draw(rectangle);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>                frame.getContentPane().add(new PaintRectangle());<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8194splitHere46","12176069splitHere46","CREATE TABLE <doubleQuotes46>table<doubleQuotes46> ( ... );<newline46mondego>"
"8195splitHere46","12176069splitHere46","CREATE TABLE table (...);<newline46mondego>"
"8196splitHere46","12176069splitHere46","SELECT * FROM <doubleQuotes46>table<doubleQuotes46><newline46mondego>"
"8197splitHere46","12176069splitHere46","SELECT * FROM table<newline46mondego>"
"8198splitHere46","12176282splitHere46","UncaughtExceptionHandler"
"8199splitHere46","12176282splitHere46","public class ExceptionHandlingScheduledExecutor extends ScheduledThreadPoolExecutor {<newline46mondego>    private final Thread.UncaughtExceptionHandler ueh;<newline46mondego><newline46mondego>    public ExceptionHandlingScheduledExecutor(int corePoolSize, Thread.UncaughtExceptionHandler ueh) {<newline46mondego>        super(corePoolSize);<newline46mondego>        this.ueh = ueh;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ScheduledFuture<?> schedule(Runnable command, long delay, TimeUnit unit) {<newline46mondego>        return super.schedule(wrap(command), delay, unit);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public <V> ScheduledFuture<V> schedule(Callable<V> callable, long delay, TimeUnit unit) {<newline46mondego>        return super.schedule(wrap(callable), delay, unit); <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ScheduledFuture<?> scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit) {<newline46mondego>        return super.scheduleAtFixedRate(wrap(command), initialDelay, period, unit);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ScheduledFuture<?> scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit) {<newline46mondego>        return super.scheduleWithFixedDelay(wrap(command), initialDelay, delay, unit);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void execute(Runnable command) {<newline46mondego>        super.execute(wrap(command));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Future<?> submit(Runnable task) {<newline46mondego>        return super.submit(wrap(task));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public <T> Future<T> submit(Runnable task, T result) {<newline46mondego>        return super.submit(wrap(task), result);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public <T> Future<T> submit(Callable<T> task) {<newline46mondego>        return super.submit(wrap(task));<newline46mondego>    }<newline46mondego><newline46mondego>    private Runnable wrap(final Runnable runnable) {<newline46mondego>        return new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    runnable.run();<newline46mondego>                } catch (final Throwable t) {<newline46mondego>                    ueh.uncaughtException(Thread.currentThread(), t);<newline46mondego>                    throw t;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego><newline46mondego>    private <T> Callable<T> wrap(final Callable<T> callable) {<newline46mondego>        return new Callable<T>() {<newline46mondego>            @Override<newline46mondego>            public T call() throws Exception {<newline46mondego>                try {<newline46mondego>                    return callable.call();<newline46mondego>                } catch (Throwable t) {<newline46mondego>                    ueh.uncaughtException(Thread.currentThread(), t);<newline46mondego>                    throw t;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8200splitHere46","12176282splitHere46","Future"
"8201splitHere46","12176282splitHere46","ScheduledThreadPoolExecutor"
"8202splitHere46","12176282splitHere46","class MyScheduledExecutor extends ScheduledThreadPoolExecutor {<newline46mondego>  private final Thread.UncaughtExceptionHandler ueh;<newline46mondego>  private final ExecutorService futureService = Executors.newCachedThreadPool();<newline46mondego><newline46mondego>  public MyScheduledExecutor(int corePoolSize, Thread.UncaughtExceptionHandler ueh) {<newline46mondego>    super(corePoolSize);<newline46mondego>    this.ueh = ueh;<newline46mondego>  }<newline46mondego><newline46mondego>  // Copy other constructors<newline46mondego><newline46mondego>  @Override<newline46mondego>  public ScheduledFuture<?> scheduleWithFixedDelay(Runnable command,<newline46mondego>                                                   long initialDelay,<newline46mondego>                                                   long delay,<newline46mondego>                                                   TimeUnit unit) {<newline46mondego>    final ScheduledFuture<?> f = super.scheduleWithFixedDelay(command, initialDelay, delay, unit);<newline46mondego>    futureService.submit(new Runnable() {<newline46mondego>      @Override<newline46mondego>      public void run() {<newline46mondego>        try {<newline46mondego>          f.get();<newline46mondego>        } catch (Throwable t ) {<newline46mondego>          ueh.uncaughtException(null, t.getCause());<newline46mondego>        }<newline46mondego>      }<newline46mondego>    };<newline46mondego><newline46mondego>    return f;<newline46mondego>  }<newline46mondego><newline46mondego>  // Do similarly for other submit/schedule methods<newline46mondego>}<newline46mondego>"
"8203splitHere46","12176282splitHere46","final ScheduledThreadPoolExecutor exec = new MyScheduledExecutor(1, new Thread.UncaughtExceptionHandler() {<newline46mondego>      @Override<newline46mondego>      public void uncaughtException(final Thread t, final Throwable e) {<newline46mondego>        e.printStackTrace();<newline46mondego>      }<newline46mondego>    });<newline46mondego>"
"8204splitHere46","12176282splitHere46","Reached 1<newline46mondego>Reached 2<newline46mondego>Reached 3<newline46mondego>Reached 4<newline46mondego>Reached 5<newline46mondego>java.lang.ArrayIndexOutOfBoundsException: Runtime error!<newline46mondego>   ...<newline46mondego>"
"8205splitHere46","12176326splitHere46","y"
"8206splitHere46","12176326splitHere46","obj2"
"8207splitHere46","12176326splitHere46","y = x"
"8208splitHere46","12176326splitHere46","obj2 ="
"8209splitHere46","12176326splitHere46","int x,y;<newline46mondego>x = 2;<newline46mondego>y = x; //x = 2, y = 2<newline46mondego>x = 3; //x = 3, y = 2 - Changing x does not change y<newline46mondego><newline46mondego>Object a,b;<newline46mondego>a = new MyObject(<doubleQuotes46>foo<doubleQuotes46>); //Create Object O on the heap, a = [Address of Object O]<newline46mondego>b = a; //a = [Address of Object O], b = [Address of Object O]<newline46mondego>a.updateValue(<doubleQuotes46>barr<doubleQuotes46>); //Update a property of Object O<newline46mondego>//a and b still contain [Address of Object O], but Object O has a new value.<newline46mondego>a = new MyObject(<doubleQuotes46>Bazz<doubleQuotes46>); //Create Object P, a = [Address of Object P]<newline46mondego>//a = [Address of Object P], b = [Address of Object O]<newline46mondego>"
"8210splitHere46","12176326splitHere46","="
"8211splitHere46","12176332splitHere46","timeStringLen(int reps)"
"8212splitHere46","12176332splitHere46","reps"
"8213splitHere46","12176332splitHere46","Integer.MAX_VALUE"
"8214splitHere46","12176332splitHere46","-Xmx"
"8215splitHere46","12176332splitHere46","public boolean timeStringLen(int reps){<newline46mondego>    boolean result = false;<newline46mondego><newline46mondego>    for(int i = 0; i<reps; i ++){<newline46mondego>        result ^= mdnCheckRegularMethod(mdn[index]);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"8216splitHere46","12176332splitHere46","reps"
"8217splitHere46","12176332splitHere46","result[i] = Boolean.TRUE<newline46mondego>"
"8218splitHere46","12176332splitHere46","Random random = new Random(0);<newline46mondego>mdn = new String[4][1<<16];<newline46mondego>for (int i=0; i<mdn.length; ++i) {<newline46mondego>    mdn[0][i] = String.format(<doubleQuotes46>%03ddsfasdf00000<doubleQuotes46>, random.nextInt(1000));<newline46mondego>    mdn[1][i] = String.format(<doubleQuotes46>%04d<doubleQuotes46>, random.nextInt(10000));<newline46mondego>    mdn[2][i] = String.format(<doubleQuotes46>%10d<doubleQuotes46>, random.nextInt((int) 1e10));<newline46mondego>    mdn[3][i] = String.format(<doubleQuotes46>%03d-%03d-%03d<doubleQuotes46>, random.nextInt(1000), random.nextInt(1000), random.nextInt(1000));<newline46mondego>}<newline46mondego>"
"8219splitHere46","12176379splitHere46","JFrame frame = new JFrame();<newline46mondego><newline46mondego>                JPanel parentPanel = new JPanel();<newline46mondego>                parentPanel.setBorder(BorderFactory.createTitledBorder(<doubleQuotes46>parent panel<doubleQuotes46>));<newline46mondego><newline46mondego>                JPanel childPanel = new JPanel();<newline46mondego>                childPanel.setBorder(BorderFactory.createTitledBorder(<doubleQuotes46>child panel<doubleQuotes46>));<newline46mondego>                // Add a button to the child panel<newline46mondego>                childPanel.add(new JButton(<doubleQuotes46>button<doubleQuotes46>));<newline46mondego>                // In the instruction below you have to create and add your ChartPanel<newline46mondego>                childPanel.add(yourChartPanel);<newline46mondego>                parentPanel.add(childPanel);<newline46mondego><newline46mondego>                frame.add(parentPanel);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setVisible(true);<newline46mondego>"
"8220splitHere46","12176468splitHere46","String name, uri, action, feedFile;<newline46mondego><newline46mondego>feedFile = <doubleQuotes46>/tmp/feeds.txt<doubleQuotes46>;<newline46mondego>action = request.getParameter(<doubleQuotes46>action<doubleQuotes46>);<newline46mondego>name = request.getParameter(<doubleQuotes46>feedName<doubleQuotes46>);<newline46mondego>uri = request.getParameter(<doubleQuotes46>uri<doubleQuotes46>);<newline46mondego>"
"8221splitHere46","12176468splitHere46","String name = request.getParameter(<doubleQuotes46>feedName<doubleQuotes46>);<newline46mondego>String uri = request.getParameter(<doubleQuotes46>uri<doubleQuotes46>);<newline46mondego>String feedFile  = <doubleQuotes46>/tmp/feeds.txt<doubleQuotes46>;<newline46mondego>String action = request.getParameter(<doubleQuotes46>action<doubleQuotes46>);<newline46mondego>"
"8222splitHere46","12176493splitHere46","clientSocket = new Socket(InetAddress.getByAddress(addr), port);<newline46mondego>"
"8223splitHere46","12176493splitHere46","addr"
"8224splitHere46","12176493splitHere46","port"
"8225splitHere46","12176535splitHere46","Method[] methods = getClass().getDeclaredMethods();<newline46mondego>"
"8226splitHere46","12176764splitHere46","ArrayList"
"8227splitHere46","12176764splitHere46","Row"
"8228splitHere46","12176764splitHere46","Section"
"8229splitHere46","12176764splitHere46","getView"
"8230splitHere46","12176764splitHere46","BaseAdapter"
"8231splitHere46","12176764splitHere46","Row"
"8232splitHere46","12176764splitHere46","Section"
"8233splitHere46","12176817splitHere46","int"
"8234splitHere46","12176817splitHere46","String"
"8235splitHere46","12176837splitHere46","package usepool;<newline46mondego><newline46mondego>import org.apache.tomcat.jdbc.pool.DataSource;<newline46mondego>import org.apache.tomcat.jdbc.pool.PoolProperties;<newline46mondego><newline46mondego>/**<newline46mondego>*<newline46mondego>* @author brainless<newline46mondego>*/<newline46mondego>public class ConnectionPool {<newline46mondego><newline46mondego>private static DataSource datasource;<newline46mondego>public static String dbURL = <doubleQuotes46>jdbc:mysql://localhost:3306/<doubleQuotes46><newline46mondego>                + <doubleQuotes46><YourDataBase>?useUnicode=true&useEncoding=true&characterEncoding=UTF-8<doubleQuotes46>;<newline46mondego>public static String driverClass = <doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>;<newline46mondego>public static String userName = <doubleQuotes46>root<doubleQuotes46>;<newline46mondego>public static String password = <doubleQuotes46>password<doubleQuotes46>;<newline46mondego>public static boolean jmx = true;<newline46mondego>public static boolean testIdle = false;<newline46mondego>public static boolean testBorrow = true;<newline46mondego>public static boolean testReturn = false;<newline46mondego>public static int validationInterval = 30000;<newline46mondego>public static int timeBetweenEviction = 30000;<newline46mondego>public static int maxActive = 100;<newline46mondego>public static int initialSize = 10;<newline46mondego>public static int maxWait = 10000;<newline46mondego>public static int removeAbandonedTimeout = 60;<newline46mondego>public static int minEvictableIdle = 30000;<newline46mondego>public static int minIdle = 10;<newline46mondego>public static boolean logAbandoned = true;<newline46mondego>public static boolean removeAbandoned = true;<newline46mondego>public static String jdbcInterceptors = <doubleQuotes46>org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;<doubleQuotes46><newline46mondego>        + <doubleQuotes46>org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer<doubleQuotes46>;<newline46mondego><newline46mondego>private ConnectionPool() {<newline46mondego>}<newline46mondego><newline46mondego>public static synchronized DataSource getInstance() {<newline46mondego>    if (datasource == null) {<newline46mondego>        PoolProperties p = new PoolProperties();<newline46mondego>        p.setUrl(dbURL);<newline46mondego>        p.setDriverClassName(driverClass);<newline46mondego>        p.setUsername(userName);<newline46mondego>        p.setPassword(password);<newline46mondego>        p.setJmxEnabled(jmx);<newline46mondego>        p.setTestWhileIdle(testIdle);<newline46mondego>        p.setTestOnBorrow(testBorrow);<newline46mondego>        p.setTestOnReturn(testReturn);<newline46mondego>        p.setValidationInterval(validationInterval);<newline46mondego>        p.setTimeBetweenEvictionRunsMillis(timeBetweenEviction);<newline46mondego>        p.setMaxActive(maxActive);<newline46mondego>        p.setInitialSize(initialSize);<newline46mondego>        p.setMaxWait(maxWait);<newline46mondego>        p.setRemoveAbandonedTimeout(removeAbandonedTimeout);<newline46mondego>        p.setMinEvictableIdleTimeMillis(minEvictableIdle);<newline46mondego>        p.setMinIdle(minIdle);<newline46mondego>        p.setLogAbandoned(logAbandoned);<newline46mondego>        p.setRemoveAbandoned(removeAbandoned);<newline46mondego>        p.setJdbcInterceptors(jdbcInterceptors);<newline46mondego>        datasource = new DataSource();<newline46mondego>        datasource.setPoolProperties(p);<newline46mondego>    }<newline46mondego>    return datasource;<newline46mondego>}<newline46mondego><newline46mondego>public static synchronized void closePool() {<newline46mondego>    if (datasource != null) {<newline46mondego>        datasource.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8236splitHere46","12176837splitHere46","import usepool.ConnectionPool;<newline46mondego>/* <newline46mondego>* code<newline46mondego>*/<newline46mondego>connect = ConnectionPool.getInstance().getConnection();<newline46mondego>"
"8237splitHere46","12176932splitHere46","InetSocketAddress inetAddr = (InetSocketAddress)socketAddress;<newline46mondego>String address = inetAddr.getAddress().getHostAddress();<newline46mondego>"
"8238splitHere46","12177040splitHere46","readLine()"
"8239splitHere46","12177040splitHere46","println()"
"8240splitHere46","12177040splitHere46","print()"
"8241splitHere46","12177040splitHere46","while (true) {<newline46mondego>    // Accept a connection<newline46mondego>    Socket socket = servSock.accept();<newline46mondego><newline46mondego>    // Spin off a thread to deal with the client connection<newline46mondego>    new SocketHandler(socket).start();<newline46mondego>}<newline46mondego>"
"8242splitHere46","12177187splitHere46","volatile"
"8243splitHere46","12177187splitHere46","public class Test {<newline46mondego>    private final Map<String, String> map = new ConcurrentHashMap<>();<newline46mondego><newline46mondego>    public void resetMap() { map.clear(); }<newline46mondego><newline46mondego>    public Map<String, String> getMap() { return map; }<newline46mondego>}<newline46mondego>"
"8244splitHere46","12177218splitHere46","General->Existing Projects into Workspace"
"8245splitHere46","12177218splitHere46","Android->Existing Android Code into workspace"
"8246splitHere46","12177307splitHere46","s2 = s1;<newline46mondego>"
"8247splitHere46","12177307splitHere46","s1"
"8248splitHere46","12177307splitHere46","s2"
"8249splitHere46","12177307splitHere46","s1"
"8250splitHere46","12177307splitHere46","s2"
"8251splitHere46","12177307splitHere46","StringBuilder"
"8252splitHere46","12177307splitHere46","ArrayList"
"8253splitHere46","12177307splitHere46","String"
"8254splitHere46","12177307splitHere46","s2"
"8255splitHere46","12177307splitHere46","null"
"8256splitHere46","12177307splitHere46","s1"
"8257splitHere46","12177307splitHere46","String s1 = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>String s2 = s1;<newline46mondego>s1 = <doubleQuotes46>Something else<doubleQuotes46>;<newline46mondego>System.out.println(s2); // Prints hello<newline46mondego>"
"8258splitHere46","12177307splitHere46","String"
"8259splitHere46","12177307splitHere46","s1"
"8260splitHere46","12177307splitHere46","s2 = new String(s1);<newline46mondego>"
"8261splitHere46","12177314splitHere46","<dependency><newline46mondego>    <groupId>javaee</groupId><newline46mondego>    <artifactId>javaee-api</artifactId><newline46mondego>    <version>5</version><newline46mondego></dependency><newline46mondego>"
"8262splitHere46","12177466splitHere46","Class"
"8263splitHere46","12177477splitHere46","/_ah/channel/connected/"
"8264splitHere46","12177477splitHere46","String clientId = userService.getCurrentUser().getUserId();<newline46mondego>"
"8265splitHere46","12177477splitHere46","ChannelService channelService = ChannelServiceFactory.getChannelService();<newline46mondego>String token = channelService.createChannel(clientId);<newline46mondego>"
"8266splitHere46","12177477splitHere46","// --token-- a token received from server<newline46mondego>channel = new goog.appengine.Channel('--token--');<newline46mondego>"
"8267splitHere46","12177477splitHere46","/_ah/channel/connected/"
"8268splitHere46","12177477splitHere46","ChannelService channelService = ChannelServiceFactory.getChannelService();<newline46mondego>ChannelPresence presence = channelService.parsePresence(req);<newline46mondego>String clientId = presence.clientId();<newline46mondego>// clientId equals userId as set in point 1. <newline46mondego>"
"8269splitHere46","12177577splitHere46","for (; !start.after(endDate); start.add(Calendar.DATE, 1)) {<newline46mondego>     Date current = start.getTime();<newline46mondego>     System.out.println(ce.getNextValidTimeAfter(current));<newline46mondego>}<newline46mondego>"
"8270splitHere46","12177577splitHere46","startDate"
"8271splitHere46","12177577splitHere46","endDate"
"8272splitHere46","12177595splitHere46","private class HierarchyScrollPane extends ScrollPane  {<newline46mondego><newline46mondego>    public void update(HierarchiesFromFile hierarchies, String hierarchyName) {<newline46mondego>         // code from createHierarchyScrollPane() which works with <doubleQuotes46>this<doubleQuotes46> instead of new Scroll Pane<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8273splitHere46","12177595splitHere46","Node createHierarchySplitMenu(HierarchiesFromFile hierarchies, String hierarchyName){<newline46mondego><newline46mondego>    VBox vBox = new VBox();<newline46mondego><newline46mondego>    ScrollPaneUpdate hsp = new HierarchyScrollPane();<newline46mondego>    hsp.update(hierarchies, hierarchyName);<newline46mondego>    vBox.getChildren().add(hsp);<newline46mondego>    vBox.getChildren().add(createHierarchyMenu(hsp));<newline46mondego><newline46mondego>    return vBox;<newline46mondego>}<newline46mondego>"
"8274splitHere46","12177595splitHere46","public void createHierarchyMenu(final HierarchyScrollPane hsp) {<newline46mondego>     // ...<newline46mondego>     Button btnSetMin = new Button(<doubleQuotes46>Set Min<doubleQuotes46>);<newline46mondego>     btnSetMinsetOnAction(new EventHandler<ActionEvent>() {<newline46mondego>        public void handle(ActionEvent t) {<newline46mondego>             // your code for data update<newline46mondego>             hsp.update(hierarchies, hierarchyName);<newline46mondego>        }<newline46mondego>     }); <newline46mondego>}<newline46mondego>"
"8275splitHere46","12177681splitHere46","URL url = getClass().getClassLoader().getResource(path);<newline46mondego>        if(url != null) {<newline46mondego>            try {<newline46mondego>                return new File(url.toURI().getPath());<newline46mondego>            } catch (URISyntaxException e) {<newline46mondego>                return null;<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"8276splitHere46","12177681splitHere46","src/main/resources"
"8277splitHere46","12177822splitHere46","<xsl:value-of disable-output-escaping=<doubleQuotes46>yes<doubleQuotes46> select=<doubleQuotes46><newline46mondego>  concat('&lt;abc:href var=<doubleQuotes46>',$href,'<doubleQuotes46>&gt;',$link,'&lt;/abc:href&gt;')<newline46mondego> <doubleQuotes46>/><newline46mondego>"
"8278splitHere46","12177822splitHere46","<xsl:template match=<doubleQuotes46>a<doubleQuotes46>><newline46mondego>  <xsl:value-of disable-output-escaping=<doubleQuotes46>yes<doubleQuotes46> select=<doubleQuotes46><newline46mondego>    concat('&lt;abc:href var=<doubleQuotes46>',@href,'<doubleQuotes46>&gt;',.,'&lt;/abc:href&gt;')<newline46mondego>   <doubleQuotes46>/><newline46mondego></xsl:template><newline46mondego>"
"8279splitHere46","12177926splitHere46","FormDataMultipart"
"8280splitHere46","12177926splitHere46","FormDataBodyPart"
"8281splitHere46","12177926splitHere46","InputStream"
"8282splitHere46","12177926splitHere46","multiple"
"8283splitHere46","12177926splitHere46","<form action=<doubleQuotes46>/files<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>   <fieldset><newline46mondego>       <legend>Multiple inputs with the same name</legend><newline46mondego>       <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>test<doubleQuotes46> multiple=<doubleQuotes46>multiple<doubleQuotes46>/><newline46mondego>       <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>test<doubleQuotes46> /><newline46mondego>       <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>test<doubleQuotes46> /><newline46mondego>   </fieldset><newline46mondego>   <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Upload It<doubleQuotes46> /><newline46mondego></form><newline46mondego>"
"8284splitHere46","12177926splitHere46","FormDataMultipart"
"8285splitHere46","12177926splitHere46","List"
"8286splitHere46","12177926splitHere46","InputStream"
"8287splitHere46","12177926splitHere46","getValueAs"
"8288splitHere46","12177926splitHere46","FormDataBodyPart"
"8289splitHere46","12177926splitHere46","InputStream"
"8290splitHere46","12177926splitHere46","@POST<newline46mondego>@Path(<doubleQuotes46>files<doubleQuotes46>)<newline46mondego>@Consumes(MediaType.MULTIPART_FORM_DATA)<newline46mondego>public Response uploadMultipart(FormDataMultiPart multiPart) throws IOException{        <newline46mondego>    List<FormDataBodyPart> fields = multiPart.getFields(<doubleQuotes46>test<doubleQuotes46>);        <newline46mondego>    for(FormDataBodyPart field : fields){<newline46mondego>        handleInputStream(field.getValueAs(InputStream.class));<newline46mondego>    }<newline46mondego>    //prepare the response<newline46mondego>}<newline46mondego><newline46mondego>private void handleInputStream(InputStream is){<newline46mondego>    //read the stream any way you want<newline46mondego>}<newline46mondego>"
"8291splitHere46","12177940splitHere46","reference as null"
"8292splitHere46","12177940splitHere46","Garbage Collection"
"8293splitHere46","12177949splitHere46","new B().method1()<newline46mondego>"
"8294splitHere46","12177949splitHere46","method1()"
"8295splitHere46","12177949splitHere46","B"
"8296splitHere46","12177949splitHere46","B.method1()"
"8297splitHere46","12177949splitHere46","B"
"8298splitHere46","12177949splitHere46","A.method1()"
"8299splitHere46","12177949splitHere46","B"
"8300splitHere46","12177949splitHere46","A.method1()"
"8301splitHere46","12177949splitHere46","B"
"8302splitHere46","12177949splitHere46","method1()"
"8303splitHere46","12177949splitHere46","A.method1()"
"8304splitHere46","12177949splitHere46","super.method1()"
"8305splitHere46","12177949splitHere46","B"
"8306splitHere46","12178003splitHere46","for(Entry<String, Object> entry : session.entrySet()) {<newline46mondego>   if (condition) {<newline46mondego>      // throws a ConcurrentModificationException<newline46mondego>      session.remove(entry.getKey());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"8307splitHere46","12178003splitHere46","Iterator<Entry<String, Object>> it = session.entrySet().iteration;<newline46mondego>while (it.hasNext) {<newline46mondego>   Entry<String, Object> entry = it.next(); <newline46mondego>   if (condition) {<newline46mondego>      it.remove(); // avoids a ConcurrentModificationException<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"8308splitHere46","12178045splitHere46","OutOfMemoryError"
"8309splitHere46","12178055splitHere46","MiGLayout"
"8310splitHere46","12178055splitHere46","GridBagLayout"
"8311splitHere46","12178055splitHere46","JPanel panel = new JPanel(new MigLayout(<doubleQuotes46>flowy, fillx, filly<doubleQuotes46>, <doubleQuotes46>[fill, grow]<doubleQuotes46>, <doubleQuotes46>[fill, 0:100:300][fill, 0:100:max(100%,300)]<doubleQuotes46>));<newline46mondego>JPanel redPanel = new JPanel();<newline46mondego>redPanel.setBackground(Color.RED);<newline46mondego>JPanel bluePanel = new JPanel();<newline46mondego>bluePanel.setBackground(Color.BLUE);<newline46mondego><newline46mondego>panel.add(redPanel);<newline46mondego>panel.add(bluePanel);<newline46mondego><newline46mondego>JFrame frame = new JFrame();<newline46mondego>frame.add(panel);<newline46mondego>frame.pack();<newline46mondego>frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>frame.setVisible(true);<newline46mondego>"
"8312splitHere46","12178178splitHere46","BigDecimal.divide(BigDecimal divisor)"
"8313splitHere46","12178178splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) throws java.lang.Exception {<newline46mondego>        BigDecimal priceDiff = BigDecimal.ONE.subtract(new BigDecimal(<doubleQuotes46>9.99<doubleQuotes46>).divide(new BigDecimal(<doubleQuotes46>19.99<doubleQuotes46>), MathContext.DECIMAL128))<newline46mondego>                                             .multiply(new BigDecimal(100));<newline46mondego>        System.out.println(priceDiff.toPlainString());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8314splitHere46","12178178splitHere46","50.0250125062531265632816408204102100<newline46mondego>"
"8315splitHere46","12178178splitHere46","BigDecimal(String)"
"8316splitHere46","12178178splitHere46","BigDecimal"
"8317splitHere46","12178178splitHere46","double"
"8318splitHere46","12178252splitHere46","JPanel a = (JPanel) ((Component) arg0.getSource()).getParent();<newline46mondego>JPanel b = (JPanel) a.getComponent(0);<newline46mondego>String textInJLabel = ((JLabel) b.getComponent(0)).getText();<newline46mondego>"
"8319splitHere46","12178252splitHere46","getComponent(int index)"
"8320splitHere46","12178267splitHere46","cudaFree(deviceId);"
"8321splitHere46","12178267splitHere46","cudaFree(deviceId);"
"8322splitHere46","12178507splitHere46","// creates an array full of null values.<newline46mondego>Employee[] employee = new Employee[5];<newline46mondego><newline46mondego>employee[0].setName(<doubleQuotes46>pratap<doubleQuotes46>);<newline46mondego>"
"8323splitHere46","12178507splitHere46","Employee[] employee = {<newline46mondego>    new Employee(<doubleQuotes46>pratap<doubleQuotes46>, <doubleQuotes46>k0100<doubleQuotes46>, 10000),<newline46mondego>    new Employee(<doubleQuotes46>aruna<doubleQuotes46>,  <doubleQuotes46>k0101<doubleQuotes46>,  1000),<newline46mondego>    new Employee(<doubleQuotes46>satyam<doubleQuotes46>, <doubleQuotes46>k0102<doubleQuotes46>,  8000),<newline46mondego>    new Employee(<doubleQuotes46>krishna<doubleQuotes46>,<doubleQuotes46>k0103<doubleQuotes46>,  6000),<newline46mondego>    new Employee(<doubleQuotes46>siva<doubleQuotes46>,   <doubleQuotes46>k0104<doubleQuotes46>,  9000) };<newline46mondego>"
"8324splitHere46","12178743splitHere46","Pattern pat = Pattern.compile(<doubleQuotes46>\\+\\d+now<doubleQuotes46>);<newline46mondego>Matcher mat = pat.matcher(<doubleQuotes46>Input_Text<doubleQuotes46>);<newline46mondego><newline46mondego>while(mat.find()){<newline46mondego><newline46mondego>   // Do whatever you want to do with the data now...<newline46mondego><newline46mondego> }<newline46mondego>"
"8325splitHere46","12178796splitHere46","Channel.isWritable()<newline46mondego>"
"8326splitHere46","12178796splitHere46","org.jboss.netty.handler.stream.ChunkedWriteHandler<newline46mondego>"
"8327splitHere46","12178796splitHere46","public class LimitedChannelSpeaker{<newline46mondego>    Channel channel;<newline46mondego>    final Object lock = new Object();<newline46mondego>    long maxMemorySizeB;<newline46mondego>    long size = 0;<newline46mondego>    Map<ChannelBufferRef, Integer> buffer2readablebytes = new HashMap<ChannelBufferRef, Integer>();<newline46mondego><newline46mondego>    public LimitedChannelSpeaker(Channel channel, long maxMemorySizeB) {<newline46mondego>        this.channel= channel;<newline46mondego>        this.maxMemorySizeB = maxMemorySizeB;<newline46mondego>    }<newline46mondego><newline46mondego>    public ChannelFuture speak(ChannelBuffer buff) {<newline46mondego>        if (buff.readableBytes() > maxMemorySizeB) {<newline46mondego>            throw new IndexOutOfBoundsException(<doubleQuotes46>The buffer is larger than the maximum allowed size of <doubleQuotes46> + maxMemorySizeB + <doubleQuotes46>B.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        synchronized (lock) {<newline46mondego>            while (size + buff.readableBytes() > maxMemorySizeB) {<newline46mondego>                try {<newline46mondego>                    lock.wait();<newline46mondego>                } catch (InterruptedException ex) {<newline46mondego>                    throw new RuntimeException(ex);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            ChannelBufferRef ref = new ChannelBufferRef(buff);<newline46mondego>            ref.register();<newline46mondego>            ChannelFuture future = channel.write(buff);<newline46mondego>            future.addListener(new ChannelBufferRef(buff));<newline46mondego>            return future;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void spoken(ChannelBufferRef ref) {<newline46mondego>        synchronized (lock) {<newline46mondego>            ref.unregister();<newline46mondego>            lock.notifyAll();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private class ChannelBufferRef implements ChannelFutureListener {<newline46mondego><newline46mondego>        int readableBytes;<newline46mondego><newline46mondego>        public ChannelBufferRef(ChannelBuffer buff) {<newline46mondego>            readableBytes = buff.readableBytes();<newline46mondego>        }<newline46mondego><newline46mondego>        public void unregister() {<newline46mondego>            buffer2readablebytes.remove(this);<newline46mondego>            size -= readableBytes;<newline46mondego>        }<newline46mondego><newline46mondego>        public void register() {<newline46mondego>            buffer2readablebytes.put(this, readableBytes);<newline46mondego>            size += readableBytes;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void operationComplete(ChannelFuture future) throws Exception {<newline46mondego>            spoken(this);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8328splitHere46","12178844splitHere46","FileOutputStream fileOuputStream = new FileOutputStream(<doubleQuotes46>C:\\report.pdf<doubleQuotes46>);<newline46mondego>fileOuputStream.write(bytes);<newline46mondego>fileOuputStream.close();<newline46mondego>"
"8329splitHere46","12179227splitHere46","validate()"
"8330splitHere46","12179227splitHere46","repaint()"
"8331splitHere46","12179227splitHere46","KeyListener"
"8332splitHere46","12179363splitHere46","null"
"8333splitHere46","12179363splitHere46","null"
"8334splitHere46","12179363splitHere46","null"
"8335splitHere46","12179363splitHere46","T"
"8336splitHere46","12179363splitHere46","Void"
"8337splitHere46","12179363splitHere46","String prepareUrl()"
"8338splitHere46","12179363splitHere46","String prepareUrl(T)"
"8339splitHere46","12179363splitHere46","T"
"8340splitHere46","12179410splitHere46","setWebViewClient"
"8341splitHere46","12179410splitHere46","webView.setWebViewClient(new WebViewClient() {<newline46mondego>        public void onPageStarted(WebView view, String url, Bitmap favicon) {<newline46mondego>            progess.setVisibility(View.VISIBLE);<newline46mondego>        }<newline46mondego>        public void onPageFinished(WebView view, String url) {<newline46mondego>        progess.setVisibility(View.GONE);<newline46mondego>        }<newline46mondego>"
"8342splitHere46","12179493splitHere46","@RequestMapping(value=<doubleQuotes46>imageuploadsubmit<doubleQuotes46>, method=RequestMethod.POST) <newline46mondego>public void addFile(HttpServletRequest request, HttpServletResponse response) throws IOException {<newline46mondego>    if (!ServletFileUpload.isMultipartContent(request)) {<newline46mondego><newline46mondego>    if (!(request instanceof DefaultMultipartHttpServletRequest)){<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>Request is not multipart, please 'multipart/form-data' enctype for your form.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    DefaultMultipartHttpServletRequest dmhsRequest = (DefaultMultipartHttpServletRequest) request ;<newline46mondego>    MultipartFile multipartFile = (MultipartFile) dmhsRequest.getFile(<doubleQuotes46>image<doubleQuotes46>);<newline46mondego><newline46mondego>    //make traitment like a File object<newline46mondego>}<newline46mondego>"
"8343splitHere46","12179562splitHere46","@Command([Compose];<doubleQuotes46><doubleQuotes46> : <doubleQuotes46>mailfile.nsf<doubleQuotes46>;<doubleQuotes46>Calendar Entry<doubleQuotes46>);<newline46mondego>    @PostedCommand([EditGotoField];<doubleQuotes46>Subject<doubleQuotes46>);<newline46mondego>    @PostedCommand( [EditInsertText]; <doubleQuotes46>Title<doubleQuotes46> );<newline46mondego>    @PostedCommand([EditGotoField];<doubleQuotes46>EnterSendTo<doubleQuotes46>);<newline46mondego>    @PostedCommand([EditInsertText]; <doubleQuotes46>Bob Test<doubleQuotes46>);<newline46mondego>    @PostedCommand([EditGotoField];<doubleQuotes46>Location<doubleQuotes46>);<newline46mondego>    @PostedCommand([EditInsertText]; <doubleQuotes46>Location<doubleQuotes46> );<newline46mondego>    @PostedCommand([EditGotoField];<doubleQuotes46>StartTime<doubleQuotes46>);<newline46mondego>    @PostedCommand([EditInsertText]; @Text(@Time(9;0;0)));<newline46mondego>    @PostedCommand([EditGotoField];<doubleQuotes46>Body<doubleQuotes46>);<newline46mondego>    @PostedCommand([EditInsertText];@UpperCase(<doubleQuotes46>Set Start and End Dates to: <doubleQuotes46> + @Text(@Adjust(BidDay;0;0;-1;0;0;0))));<newline46mondego>"
"8344splitHere46","12179601splitHere46","String"
"8345splitHere46","12179601splitHere46","DocumentFilter"
"8346splitHere46","12179601splitHere46","str = str.replaceAll()?<newline46mondego>"
"8347splitHere46","12179639splitHere46","<rect x=<doubleQuotes46>60.01<doubleQuotes46> width=<doubleQuotes46>855.38<doubleQuotes46> id=<doubleQuotes46>rect_1<doubleQuotes46> y=<doubleQuotes46>-244.35<doubleQuotes46> height=<doubleQuotes46>641.13<doubleQuotes46> style=<doubleQuotes46>stroke-width: 1; stroke: rgb(0, 0, 0); fill: none; <doubleQuotes46>/>"
"8348splitHere46","12179639splitHere46","<rect x=<doubleQuotes46>298.43<doubleQuotes46> width=<doubleQuotes46>340.00<doubleQuotes46> y=<doubleQuotes46>131.12<doubleQuotes46> height=<doubleQuotes46>380.00<doubleQuotes46> id=<doubleQuotes46>rect_1<doubleQuotes46> style=<doubleQuotes46>stroke-width: 1; stroke: rgb(0, 0, 0); fill: rgb(255, 102, 0); <doubleQuotes46>/>"
"8349splitHere46","12179842splitHere46","abstract class"
"8350splitHere46","12179842splitHere46","interface"
"8351splitHere46","12179842splitHere46","absctract class"
"8352splitHere46","12179842splitHere46","@Test"
"8353splitHere46","12179842splitHere46","public interface ITest {<newline46mondego>   @Test<newline46mondego>   public void simpleTest();<newline46mondego>} <newline46mondego><newline46mondego>public class SimpleTest implements ITest<newline46mondego>{<newline46mondego>   @Override<newline46mondego>   public void simpleTest()<newline46mondego>   {<newline46mondego>      Assert.assertTrue(true);<newline46mondego>   }<newline46mondego>}  <newline46mondego>"
"8354splitHere46","12179842splitHere46","Tests in error: <newline46mondego>  initializationError(com.company.tester.SimpleTest)  <newline46mondego>"
"8355splitHere46","12179842splitHere46","public interface ITest {<newline46mondego><newline46mondego>   public void simpleTest();<newline46mondego>}  <newline46mondego><newline46mondego>public class SimpleTest implements ITest<newline46mondego>{<newline46mondego><newline46mondego>   @Test<newline46mondego>   @Override<newline46mondego>   public void simpleTest()<newline46mondego>   {<newline46mondego>      Assert.assertTrue(true);<newline46mondego>   }<newline46mondego>}  <newline46mondego>"
"8356splitHere46","12179842splitHere46","Tests run: 1, Failures: 0, Errors: 0, Skipped: 0 <newline46mondego>"
"8357splitHere46","12179842splitHere46","public abstract class ATest {<newline46mondego><newline46mondego>   @Test<newline46mondego>   public abstract void simpleTest();<newline46mondego>} <newline46mondego><newline46mondego>public class SimpleTest extends ATest<newline46mondego>{<newline46mondego>   @Override<newline46mondego>   public void simpleTest()<newline46mondego>   {<newline46mondego>      Assert.assertTrue(true);<newline46mondego>   }<newline46mondego>}  <newline46mondego><newline46mondego>public class SecondTest extends ATest<newline46mondego>{<newline46mondego>   @Override<newline46mondego>   public void simpleTest()<newline46mondego>   {<newline46mondego>      Assert.assertFalse(false);<newline46mondego>   }<newline46mondego>} <newline46mondego>"
"8358splitHere46","12179842splitHere46","Tests run: 2, Failures: 0, Errors: 0, Skipped: 0<newline46mondego>"
"8359splitHere46","12180000splitHere46","LinkedList"
"8360splitHere46","12180000splitHere46","Queue<String> qe=new LinkedList<String>();<newline46mondego><newline46mondego>    qe.add(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>    qe.add(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>    qe.add(<doubleQuotes46>c<doubleQuotes46>);<newline46mondego><newline46mondego>    //Traverse queue<newline46mondego>    Iterator it=qe.iterator();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Initial Size of Queue :<doubleQuotes46>+ qe.size());<newline46mondego><newline46mondego>    while(it.hasNext())<newline46mondego>    {<newline46mondego>        String iteratorValue=(String)it.next();<newline46mondego>        System.out.println(<doubleQuotes46>Queue Next Value :<doubleQuotes46>+ iteratorValue);<newline46mondego>    }<newline46mondego>"
"8361splitHere46","12180015splitHere46","postProcessAfterInitialization(Object bean, String beanName)"
"8362splitHere46","12180136splitHere46","<Proxy balancer://myApp><newline46mondego>  BalancerMember http://47.168.96.31:2020 route=r1<newline46mondego>  BalancerMember http://192.168.0.2:2020 route=r2<newline46mondego></Proxy><newline46mondego>"
"8363splitHere46","12180136splitHere46","ProxyPass / balancer://myApp<newline46mondego>ProxyPassReverse / balancer://myApp<newline46mondego>"
"8364splitHere46","12180136splitHere46","http://47.168.96.31/StockQuote/StockQuoteService"
"8365splitHere46","12180136splitHere46","http://47.168.96.31/"
"8366splitHere46","12180136splitHere46","ProxyPass / balancer://myApp/StockQuote/StockQuoteService<newline46mondego>ProxyPassReverse / balancer://myApp/StockQuote/StockQuoteService<newline46mondego>"
"8367splitHere46","12180169splitHere46","setScaleType()"
"8368splitHere46","12180169splitHere46","image.setScaleType(ScaleType.FIT_CENTER);<newline46mondego>"
"8369splitHere46","12180187splitHere46","String home = System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>User home directory is: <doubleQuotes46> + home);<newline46mondego>File userHome = new File(home);<newline46mondego>// Put files in a known and reproducible path!<newline46mondego>File file = new File(userHome, <doubleQuotes46>Assets.txt<doubleQuotes46>);<newline46mondego>"
"8370splitHere46","12180456splitHere46","Runnable"
"8371splitHere46","12180456splitHere46","new Runnable()"
"8372splitHere46","12180456splitHere46","Runnable"
"8373splitHere46","12180456splitHere46","userCns"
"8374splitHere46","12180456splitHere46","recipients"
"8375splitHere46","12180456splitHere46","Runnable"
"8376splitHere46","12180456splitHere46","new Thread(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            // lists are local to the runnable<newline46mondego>            List<String> userCns = new ArrayList<String>();<newline46mondego>            List<String> recipients = new ArrayList<String>();<newline46mondego>           ///other codes<newline46mondego>        }<newline46mondego>    }).start();<newline46mondego>"
"8377splitHere46","12180456splitHere46","sendEmailToLegalUsers()"
"8378splitHere46","12180456splitHere46","Runnable"
"8379splitHere46","12180458splitHere46","Collections.sort()"
"8380splitHere46","12180458splitHere46","Comparator<String>"
"8381splitHere46","12180458splitHere46","<doubleQuotes46>The<doubleQuotes46>"
"8382splitHere46","12180458splitHere46","List<String> foo = /* init */;<newline46mondego><newline46mondego>Comparator<String> ignoreLeadingThe = new Comparator<String>() {<newline46mondego>    @Override public int compare(String a, String b) {<newline46mondego>        // TODO check for nulls?<newline46mondego><newline46mondego>        // (?i) makes the match case-insensitive<newline46mondego>        a = a.replaceAll(<doubleQuotes46>(?i)^the\\s+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        b = b.replaceAll(<doubleQuotes46>(?i)^the\\s+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>        // TODO use compareToIgnoreCase() instead?<newline46mondego>        return a.compareTo(b);<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>Collections.sort(foo, ignoreLeadingThe);<newline46mondego>"
"8383splitHere46","12180618splitHere46","Cursor"
"8384splitHere46","12180618splitHere46","SortedMap"
"8385splitHere46","12180618splitHere46","SortedMap"
"8386splitHere46","12180618splitHere46","SortedMap"
"8387splitHere46","12180618splitHere46","Comparator"
"8388splitHere46","12180623splitHere46","public TheType getDescMap() {<newline46mondego>    return desc_map;<newline46mondego>}<newline46mondego>"
"8389splitHere46","12180623splitHere46","${descMap}<newline46mondego>"
"8390splitHere46","12180623splitHere46","<s:property value=<doubleQuotes46>descMap<doubleQuotes46>/><newline46mondego>"
"8391splitHere46","12180691splitHere46","Entity entity = (Entity) document.getDoctype().getEntities().item(i);<newline46mondego>String path = entity.getSystemId();<newline46mondego>"
"8392splitHere46","12180694splitHere46","//span/button[text()='Checkout' and @class='buttonLargeAlt']<newline46mondego>"
"8393splitHere46","12180694splitHere46","//span/button[text()='Checkout'][1]<newline46mondego>"
"8394splitHere46","12180694splitHere46","//span/button[text()='Checkout'][1]<newline46mondego>"
"8395splitHere46","12180694splitHere46","[1]"
"8396splitHere46","12180694splitHere46","'Checkout'"
"8397splitHere46","12180812splitHere46","@helper"
"8398splitHere46","12180812splitHere46","@tags"
"8399splitHere46","12180812splitHere46","Appliaction"
"8400splitHere46","12180812splitHere46","public static Result canvas(){<newline46mondego>    return(views.html.canvas.render());    <newline46mondego>}<newline46mondego><newline46mondego>public static Result canvas(){<newline46mondego>    return(views.html.edit.render());    <newline46mondego>}<newline46mondego><newline46mondego>public static Result canvas(){<newline46mondego>    return(views.html.admin.render());    <newline46mondego>}<newline46mondego>"
"8401splitHere46","12180812splitHere46","route"
"8402splitHere46","12180812splitHere46","conf/routes"
"8403splitHere46","12180812splitHere46","GET   /             controllers.Application.canvas()<newline46mondego>GET   /edit         controllers.Application.edit()<newline46mondego>GET   /admin        controllers.Application.admin()<newline46mondego>"
"8404splitHere46","12180812splitHere46","href"
"8405splitHere46","12180812splitHere46","<div class=<doubleQuotes46>main-nav<doubleQuotes46>><newline46mondego>    <a href='@routes.Application.canvas()'>Canvas page</a><newline46mondego>    <a href='@routes.Application.edit()'>Edit form</a><newline46mondego>    <a href='@routes.Application.admin()'>Admin area</a><newline46mondego></div><newline46mondego>"
"8406splitHere46","12180812splitHere46","view"
"8407splitHere46","12180847splitHere46","java:global[/application name]/module name/enterprise bean name[/interface name]"
"8408splitHere46","12180901splitHere46","public MapView(Context context, int tileSizePixels, ResourceProxy resourceProxy, MapTileProviderBase aTileProvider)"
"8409splitHere46","12180901splitHere46","MySSLSocketFactory"
"8410splitHere46","12180901splitHere46","extends javax.net.ssl.SSLSocketFactory"
"8411splitHere46","12180901splitHere46","MapTileDownloader"
"8412splitHere46","12180901splitHere46","MySSLSocketFactory"
"8413splitHere46","12180901splitHere46","MyTileDownloader"
"8414splitHere46","12180901splitHere46","MapTileProviderBasic"
"8415splitHere46","12180901splitHere46","MyTileDownloader"
"8416splitHere46","12180901splitHere46","MyTileProvider"
"8417splitHere46","12180901splitHere46","new XYTileSource"
"8418splitHere46","12180901splitHere46","MyTileProvider"
"8419splitHere46","12180901splitHere46","MapVew"
"8420splitHere46","12180901splitHere46","MySSLSocketFactory"
"8421splitHere46","12180901splitHere46","MyTileDownloader"
"8422splitHere46","12180901splitHere46","import java.io.BufferedInputStream;<newline46mondego>import java.io.BufferedOutputStream;<newline46mondego>import java.io.ByteArrayInputStream;<newline46mondego>import java.io.ByteArrayOutputStream;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.OutputStream;<newline46mondego>import java.net.HttpURLConnection;<newline46mondego>import java.net.URL;<newline46mondego>import java.net.UnknownHostException;<newline46mondego><newline46mondego>import javax.net.ssl.HttpsURLConnection;<newline46mondego>import javax.net.ssl.SSLSocketFactory;<newline46mondego><newline46mondego>import org.osmdroid.tileprovider.MapTile;<newline46mondego>import org.osmdroid.tileprovider.MapTileRequestState;<newline46mondego>import org.osmdroid.tileprovider.modules.IFilesystemCache;<newline46mondego>import org.osmdroid.tileprovider.modules.INetworkAvailablityCheck;<newline46mondego>import org.osmdroid.tileprovider.modules.MapTileDownloader;<newline46mondego>import org.osmdroid.tileprovider.modules.MapTileModuleProviderBase;<newline46mondego>import org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.LowMemoryException;<newline46mondego>import org.osmdroid.tileprovider.tilesource.ITileSource;<newline46mondego>import org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase;<newline46mondego>import org.osmdroid.tileprovider.util.StreamUtils;<newline46mondego><newline46mondego>import android.graphics.drawable.Drawable;<newline46mondego>import android.text.TextUtils;<newline46mondego>import android.util.Log;<newline46mondego><newline46mondego>/**<newline46mondego> * A drop-in replacement for {@link MapTileDownloader}. This loads tiles from an<newline46mondego> * HTTP or HTTPS server, making use of a custom {@link SSLSocketFactory} for SSL<newline46mondego> * peer verification.<newline46mondego> */<newline46mondego>public class MyTileDownloader extends MapTileModuleProviderBase {<newline46mondego>    private static final String TAG = <doubleQuotes46>MyMapTileDownloader<doubleQuotes46>;<newline46mondego><newline46mondego>    protected OnlineTileSourceBase mTileSource;<newline46mondego>    protected final IFilesystemCache mFilesystemCache;<newline46mondego>    protected final INetworkAvailablityCheck mNetworkAvailablityCheck;<newline46mondego>    protected final SSLSocketFactory mSSLSocketFactory;<newline46mondego><newline46mondego>    public MyTileDownloader(ITileSource pTileSource,<newline46mondego>            IFilesystemCache pFilesystemCache,<newline46mondego>            INetworkAvailablityCheck pNetworkAvailablityCheck,<newline46mondego>            SSLSocketFactory pSSLSocketFactory) {<newline46mondego>        super(4, TILE_DOWNLOAD_MAXIMUM_QUEUE_SIZE);<newline46mondego>        setTileSource(pTileSource);<newline46mondego>        mFilesystemCache = pFilesystemCache;<newline46mondego>        mNetworkAvailablityCheck = pNetworkAvailablityCheck;<newline46mondego>        mSSLSocketFactory = pSSLSocketFactory;<newline46mondego>    }<newline46mondego><newline46mondego>    public ITileSource getTileSource() {<newline46mondego>        return mTileSource;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setTileSource(final ITileSource tileSource) {<newline46mondego>        // We are only interested in OnlineTileSourceBase tile sources<newline46mondego>        if (tileSource instanceof OnlineTileSourceBase)<newline46mondego>            mTileSource = (OnlineTileSourceBase) tileSource;<newline46mondego>        else<newline46mondego>            mTileSource = null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean getUsesDataConnection() {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected String getName() {<newline46mondego>        return <doubleQuotes46>Online Tile Download Provider<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected String getThreadGroupName() {<newline46mondego>        return <doubleQuotes46>downloader<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getMinimumZoomLevel() {<newline46mondego>        return (mTileSource != null ? mTileSource.getMinimumZoomLevel()<newline46mondego>                : MINIMUM_ZOOMLEVEL);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getMaximumZoomLevel() {<newline46mondego>        return (mTileSource != null ? mTileSource.getMaximumZoomLevel()<newline46mondego>                : MAXIMUM_ZOOMLEVEL);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Runnable getTileLoader() {<newline46mondego>        return new TileLoader();<newline46mondego>    };<newline46mondego><newline46mondego>    private class TileLoader extends MapTileModuleProviderBase.TileLoader {<newline46mondego>        @Override<newline46mondego>        public Drawable loadTile(final MapTileRequestState aState)<newline46mondego>                throws CantContinueException {<newline46mondego>            if (mTileSource == null)<newline46mondego>                return null;<newline46mondego><newline46mondego>            InputStream in = null;<newline46mondego>            OutputStream out = null;<newline46mondego>            final MapTile tile = aState.getMapTile();<newline46mondego><newline46mondego>            try {<newline46mondego>                if (mNetworkAvailablityCheck != null<newline46mondego>                        && !mNetworkAvailablityCheck.getNetworkAvailable()) {<newline46mondego>                    if (DEBUGMODE)<newline46mondego>                        Log.d(TAG, <doubleQuotes46>Skipping <doubleQuotes46> + getName()<newline46mondego>                                + <doubleQuotes46> due to NetworkAvailabliltyCheck.<doubleQuotes46>);<newline46mondego>                    return null;<newline46mondego>                }<newline46mondego><newline46mondego>                final String tileURLString = mTileSource.getTileURLString(tile);<newline46mondego>                if (DEBUGMODE)<newline46mondego>                    Log.d(TAG, <doubleQuotes46>Downloading Maptile from url: <doubleQuotes46> + tileURLString);<newline46mondego><newline46mondego>                if (TextUtils.isEmpty(tileURLString))<newline46mondego>                    return null;<newline46mondego><newline46mondego>                // Create an HttpURLConnection to download the tile<newline46mondego>                URL url = new URL(tileURLString);<newline46mondego>                HttpURLConnection connection = (HttpURLConnection) url<newline46mondego>                        .openConnection();<newline46mondego>                connection.setConnectTimeout(30000);<newline46mondego>                connection.setReadTimeout(30000);<newline46mondego><newline46mondego>                // Use our custom SSLSocketFactory for secure connections<newline46mondego>                if (<doubleQuotes46>https<doubleQuotes46>.equalsIgnoreCase(url.getProtocol()))<newline46mondego>                    ((HttpsURLConnection) connection)<newline46mondego>                            .setSSLSocketFactory(mSSLSocketFactory);<newline46mondego><newline46mondego>                // Open the input stream<newline46mondego>                in = new BufferedInputStream(connection.getInputStream(),<newline46mondego>                        StreamUtils.IO_BUFFER_SIZE);<newline46mondego><newline46mondego>                // Check to see if we got success<newline46mondego>                if (connection.getResponseCode() != 200) {<newline46mondego>                    Log.w(TAG, <doubleQuotes46>Problem downloading MapTile: <doubleQuotes46> + tile<newline46mondego>                            + <doubleQuotes46> HTTP response: <doubleQuotes46> + connection.getHeaderField(0));<newline46mondego>                    return null;<newline46mondego>                }<newline46mondego><newline46mondego>                // Read the tile into an in-memory byte array<newline46mondego>                final ByteArrayOutputStream dataStream = new ByteArrayOutputStream();<newline46mondego>                out = new BufferedOutputStream(dataStream,<newline46mondego>                        StreamUtils.IO_BUFFER_SIZE);<newline46mondego>                StreamUtils.copy(in, out);<newline46mondego>                out.flush();<newline46mondego>                final byte[] data = dataStream.toByteArray();<newline46mondego>                final ByteArrayInputStream byteStream = new ByteArrayInputStream(<newline46mondego>                        data);<newline46mondego><newline46mondego>                // Save the data to the filesystem cache<newline46mondego>                if (mFilesystemCache != null) {<newline46mondego>                    mFilesystemCache.saveFile(mTileSource, tile, byteStream);<newline46mondego>                    byteStream.reset();<newline46mondego>                }<newline46mondego>                final Drawable result = mTileSource.getDrawable(byteStream);<newline46mondego>                return result;<newline46mondego><newline46mondego>            } catch (final UnknownHostException e) {<newline46mondego>                Log.w(TAG, <doubleQuotes46>UnknownHostException downloading MapTile: <doubleQuotes46> + tile<newline46mondego>                        + <doubleQuotes46> : <doubleQuotes46> + e);<newline46mondego>                throw new CantContinueException(e);<newline46mondego><newline46mondego>            } catch (final LowMemoryException e) {<newline46mondego>                Log.w(TAG, <doubleQuotes46>LowMemoryException downloading MapTile: <doubleQuotes46> + tile<newline46mondego>                        + <doubleQuotes46> : <doubleQuotes46> + e);<newline46mondego>                throw new CantContinueException(e);<newline46mondego><newline46mondego>            } catch (final FileNotFoundException e) {<newline46mondego>                Log.w(TAG, <doubleQuotes46>Tile not found: <doubleQuotes46> + tile + <doubleQuotes46> : <doubleQuotes46> + e);<newline46mondego><newline46mondego>            } catch (final IOException e) {<newline46mondego>                Log.w(TAG, <doubleQuotes46>IOException downloading MapTile: <doubleQuotes46> + tile + <doubleQuotes46> : <doubleQuotes46><newline46mondego>                        + e);<newline46mondego><newline46mondego>            } catch (final Throwable e) {<newline46mondego>                Log.e(TAG, <doubleQuotes46>Error downloading MapTile: <doubleQuotes46> + tile, e);<newline46mondego><newline46mondego>            } finally {<newline46mondego>                StreamUtils.closeStream(in);<newline46mondego>                StreamUtils.closeStream(out);<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void tileLoaded(final MapTileRequestState pState,<newline46mondego>                final Drawable pDrawable) {<newline46mondego>            // Don't return the tile Drawable because we'll wait for the fs<newline46mondego>            // provider to ask for it. This prevent flickering when a load<newline46mondego>            // of delayed downloads complete for tiles that we might not<newline46mondego>            // even be interested in any more.<newline46mondego>            super.tileLoaded(pState, null);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8423splitHere46","12180901splitHere46","MyTileProvider"
"8424splitHere46","12180901splitHere46","MySSLSocketFactory"
"8425splitHere46","12180901splitHere46","app.getSSLSocketFactory()"
"8426splitHere46","12180901splitHere46","app"
"8427splitHere46","12180901splitHere46","extends Application"
"8428splitHere46","12180901splitHere46","import javax.net.ssl.SSLSocketFactory;<newline46mondego><newline46mondego>import org.osmdroid.tileprovider.IMapTileProviderCallback;<newline46mondego>import org.osmdroid.tileprovider.IRegisterReceiver;<newline46mondego>import org.osmdroid.tileprovider.MapTileProviderArray;<newline46mondego>import org.osmdroid.tileprovider.MapTileProviderBasic;<newline46mondego>import org.osmdroid.tileprovider.modules.INetworkAvailablityCheck;<newline46mondego>import org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider;<newline46mondego>import org.osmdroid.tileprovider.modules.MapTileFilesystemProvider;<newline46mondego>import org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck;<newline46mondego>import org.osmdroid.tileprovider.modules.TileWriter;<newline46mondego>import org.osmdroid.tileprovider.tilesource.ITileSource;<newline46mondego>import org.osmdroid.tileprovider.util.SimpleRegisterReceiver;<newline46mondego><newline46mondego>import android.content.Context;<newline46mondego><newline46mondego>/**<newline46mondego> * A drop-in replacement for {@link MapTileProviderBasic}. This top-level tile<newline46mondego> * provider implements a basic tile request chain which includes a<newline46mondego> * {@link MapTileFilesystemProvider} (a file-system cache), a<newline46mondego> * {@link MapTileFileArchiveProvider} (archive provider), and a<newline46mondego> * {@link MyTileDownloader} (downloads map tiles via tile source).<newline46mondego> */<newline46mondego>public class MyTileProvider extends MapTileProviderArray implements<newline46mondego>        IMapTileProviderCallback {<newline46mondego>    public MyTileProvider(final Context pContext, final ITileSource pTileSource) {<newline46mondego>        this(new SimpleRegisterReceiver(pContext),<newline46mondego>                new NetworkAvailabliltyCheck(pContext), pTileSource, app<newline46mondego>                        .getSSLSocketFactory());<newline46mondego>    }<newline46mondego><newline46mondego>    protected MyTileProvider(final IRegisterReceiver pRegisterReceiver,<newline46mondego>            final INetworkAvailablityCheck aNetworkAvailablityCheck,<newline46mondego>            final ITileSource pTileSource,<newline46mondego>            final SSLSocketFactory pSSLSocketFactory) {<newline46mondego>        super(pTileSource, pRegisterReceiver);<newline46mondego><newline46mondego>        // Look for raw tiles on the file system<newline46mondego>        final MapTileFilesystemProvider fileSystemProvider = new MapTileFilesystemProvider(<newline46mondego>                pRegisterReceiver, pTileSource);<newline46mondego>        mTileProviderList.add(fileSystemProvider);<newline46mondego><newline46mondego>        // Look for tile archives on the file system<newline46mondego>        final MapTileFileArchiveProvider archiveProvider = new MapTileFileArchiveProvider(<newline46mondego>                pRegisterReceiver, pTileSource);<newline46mondego>        mTileProviderList.add(archiveProvider);<newline46mondego><newline46mondego>        // Look for raw tiles on the Internet<newline46mondego>        final TileWriter tileWriter = new TileWriter();<newline46mondego>        final MyTileDownloader downloaderProvider = new MyTileDownloader(<newline46mondego>                pTileSource, tileWriter, aNetworkAvailablityCheck,<newline46mondego>                pSSLSocketFactory);<newline46mondego>        mTileProviderList.add(downloaderProvider);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8429splitHere46","12180901splitHere46","XYTileSource tileSource = new XYTileSource(<doubleQuotes46>MapQuest<doubleQuotes46>, null, 3, 8, 256, <doubleQuotes46>.jpg<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>https://10.0.0.1/path/to/your/map/tiles/<doubleQuotes46>);<newline46mondego>MapTileProviderBase tileProvider = new MyTileProvider(context, tileSource);<newline46mondego>ResourceProxy resourceProxy = new DefaultResourceProxyImpl(context);<newline46mondego>MapView mapView = new MapView(context, 256, resourceProxy, tileProvider);<newline46mondego>"
"8430splitHere46","12181068splitHere46","Date d; // this is your date <newline46mondego>Date dateWithoutTime = new Date(d.getYear(), d.getMonth(), d.getDay());<newline46mondego>"
"8431splitHere46","12181086splitHere46","checkstyle:check"
"8432splitHere46","12181086splitHere46","failOnViolation"
"8433splitHere46","12181086splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-checkstyle-plugin</artifactId><newline46mondego>    <version>2.9.1</version><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>        <id>checkstyle</id><newline46mondego>        <phase>validate</phase><newline46mondego>        <goals><newline46mondego>            <goal>check</goal><newline46mondego>        </goals><newline46mondego>        <configuration><newline46mondego>            <failOnViolation>true</failOnViolation><newline46mondego>        </configuration><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego>"
"8434splitHere46","12181115splitHere46","getInputStream"
"8435splitHere46","12181115splitHere46","public boolean log(String logURL) {<newline46mondego><newline46mondego>    String charset = <doubleQuotes46>UTF-8<doubleQuotes46>;<newline46mondego>    String logData = logBuffer.toString();<newline46mondego>    OutputStream output = null;<newline46mondego>    HttpURLConnection conn = null;<newline46mondego>    BufferedReader reader = null;<newline46mondego>    InputStream in = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        String query = String.format(<doubleQuotes46>log=%s<doubleQuotes46>, URLEncoder.encode(logData, charset));<newline46mondego>        conn = (HttpURLConnection) new URL(logURL).openConnection();<newline46mondego>        conn.setDoOutput(true);<newline46mondego>        conn.setRequestProperty(<doubleQuotes46>Accept-Charset<doubleQuotes46>, charset);<newline46mondego>        conn.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>,<doubleQuotes46>application/x-www-form-urlencoded;charset=<doubleQuotes46> + charset);<newline46mondego>        output = conn.getOutputStream();<newline46mondego>        output.write(query.getBytes(charset));<newline46mondego><newline46mondego>    } catch (UnsupportedEncodingException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        return false;<newline46mondego>    } catch (MalformedURLException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        return false;<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        return false;<newline46mondego>    } finally {<newline46mondego>         if (output != null) try { output.close(); } catch (IOException e) {e.printStackTrace();}<newline46mondego>    }<newline46mondego><newline46mondego>    // Handle the response<newline46mondego>    try {<newline46mondego>        int responseCode = conn.getResponseCode();<newline46mondego>        if (responseCode == 200) {<newline46mondego>            in = conn.getInputStream();<newline46mondego>        } else {<newline46mondego>            in = conn.getErrorStream();<newline46mondego>        }<newline46mondego>        reader = new BufferedReader(new InputStreamReader(in));<newline46mondego>        String line;<newline46mondego>        logNote(<doubleQuotes46>reading response<doubleQuotes46>);<newline46mondego>        while ((line = reader.readLine()) != null) {<newline46mondego>            System.out.println(line);<newline46mondego>        }<newline46mondego>        reader.close();         <newline46mondego>        if (responseCode == 200) {<newline46mondego>            return true;<newline46mondego>            }<newline46mondego>        else {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>    } catch (UnsupportedEncodingException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        return false;<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        return false;<newline46mondego>    } finally {<newline46mondego>        if (reader != null) try { reader.close(); } catch (IOException e) {e.printStackTrace();}<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"8436splitHere46","12181195splitHere46","--no_cookies"
"8437splitHere46","12181195splitHere46","appcfg.sh"
"8438splitHere46","12181195splitHere46","~/.java/.userPrefs/com/google/appengine/tools/admin/prefs.xml"
"8439splitHere46","12181195splitHere46","EngineGoalBase.java"
"8440splitHere46","12181361splitHere46","-help"
"8441splitHere46","12181361splitHere46","-D"
"8442splitHere46","12181361splitHere46","java"
"8443splitHere46","12181361splitHere46","java -help"
"8444splitHere46","12181398splitHere46","%1$ty-%1$tm-%1$td-%2$03d"
"8445splitHere46","12181398splitHere46","Calendar time = Calendar.getInstance();<newline46mondego>int number = 7;<newline46mondego>String msg = String.format(<doubleQuotes46>Data-%1$ty-%1$tm-%1$td-%2$03d.xml<doubleQuotes46>, time, number);<newline46mondego>"
"8446splitHere46","12181398splitHere46","Date-${year}-${month}-${day}-${number}.xml"
"8447splitHere46","12181398splitHere46","VelocityContext context = new VelocityContext();<newline46mondego>context.put(<doubleQuotes46>number<doubleQuotes46>, <doubleQuotes46>007<doubleQuotes46>);<newline46mondego>context.put(<doubleQuotes46>year<doubleQuotes46>, ...);<newline46mondego>"
"8448splitHere46","12181488splitHere46","setRotation"
"8449splitHere46","12181488splitHere46","setAngularVelocity"
"8450splitHere46","12181488splitHere46","setAngularVelocity"
"8451splitHere46","12181610splitHere46","public class GetTMSMargin <newline46mondego>{<newline46mondego>    public String[] GetTMSMargin(String fd,String td)<newline46mondego>    {<newline46mondego>       //your code<newline46mondego>       String array[] = {fd, td};<newline46mondego>       return array;<newline46mondego>    }  <newline46mondego>}<newline46mondego>"
"8452splitHere46","12181737splitHere46","lock"
"8453splitHere46","12181737splitHere46","lock"
"8454splitHere46","12181737splitHere46","recipients"
"8455splitHere46","12181737splitHere46","recipients"
"8456splitHere46","12181737splitHere46","recipients"
"8457splitHere46","12181737splitHere46","recipients"
"8458splitHere46","12181737splitHere46","userCns"
"8459splitHere46","12181737splitHere46","recipients"
"8460splitHere46","12181737splitHere46","userCns"
"8461splitHere46","12181737splitHere46","synchronized(userCns) {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"8462splitHere46","12181737splitHere46","recipients"
"8463splitHere46","12181737splitHere46","sendEmailToLegalUsers"
"8464splitHere46","12181737splitHere46","recipients"
"8465splitHere46","12181737splitHere46","recipients"
"8466splitHere46","12181737splitHere46","sendEmailToLEgalUsers"
"8467splitHere46","12181737splitHere46","userCns"
"8468splitHere46","12181737splitHere46","recipients"
"8469splitHere46","12181783splitHere46","jfxrt.jar"
"8470splitHere46","12181783splitHere46","com/sun/javafx/scene/control/skin/caspian.css"
"8471splitHere46","12181783splitHere46","caspian.css"
"8472splitHere46","12181783splitHere46",".tab-pane .headers-region {<newline46mondego>    -fx-effect: null;<newline46mondego>}<newline46mondego>"
"8473splitHere46","12181842splitHere46","jre/lib/ext"
"8474splitHere46","12181853splitHere46","Thread t; <newline46mondego>  t = new Thread(actions2methods.get(text));<newline46mondego>  t.start(); // Start the thread <newline46mondego>"
"8475splitHere46","12181853splitHere46","t"
"8476splitHere46","12181853splitHere46","java.lang.IllegalStateException: Not on FX application thread; currentThread = Thread-3"
"8477splitHere46","12181853splitHere46","Runnable"
"8478splitHere46","12181853splitHere46","Platform.runLater(actions2methods.get(text));<newline46mondego>"
"8479splitHere46","12181972splitHere46","JTabbedPane#getTabComponentAt(index)"
"8480splitHere46","12181972splitHere46","Component"
"8481splitHere46","12182099splitHere46","Collections.synchronized*"
"8482splitHere46","12182099splitHere46","java.util.concurrent"
"8483splitHere46","12182389splitHere46","LinearLayout layout = new LinearLayout(this);<newline46mondego> layout.setOrientation(1);<newline46mondego> layout.setBackgroundResource(R.drawable.background);<newline46mondego>"
"8484splitHere46","12182389splitHere46","background"
"8485splitHere46","12182389splitHere46","res"
"8486splitHere46","12182429splitHere46","<bean id=<doubleQuotes46>entityManagerFactory<doubleQuotes46><newline46mondego>    class=<doubleQuotes46>org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>persistenceUnitPostProcessors<doubleQuotes46>><newline46mondego>        <bean class=<doubleQuotes46>my.package.SetupDatabase<doubleQuotes46>><newline46mondego>        </bean><newline46mondego>    </property><newline46mondego>    //the other stuff<newline46mondego></bean><newline46mondego>"
"8487splitHere46","12182429splitHere46","package my.package;<newline46mondego><newline46mondego>public class SetupDatabase implements PersistenceUnitPostProcessor {<newline46mondego><newline46mondego>    private String username;<newline46mondego>    private String password;<newline46mondego>    private String dbserver;<newline46mondego><newline46mondego>    public void SetupDatabase(){<newline46mondego>        //do stuff to obtain needed information<newline46mondego>    }<newline46mondego><newline46mondego>    public void postProcessPersistenceUnitInfo(MutablePersistenceUnitInfo pui) {<newline46mondego>        pui.getProperties().setProperty(<doubleQuotes46>hibernate.connection.username<doubleQuotes46>, username );<newline46mondego>        pui.getProperties().setProperty(<doubleQuotes46>hibernate.connection.password<doubleQuotes46>, password);<newline46mondego>        pui.getProperties().setProperty(<doubleQuotes46>hibernate.connection.url<doubleQuotes46>, dbserver ); <newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8488splitHere46","12182550splitHere46","private SimpleUniverse my_space = null;<newline46mondego>public void init()<newline46mondego>{<newline46mondego>   System.out.println(<doubleQuotes46> started! <doubleQuotes46>);<newline46mondego>   GraphicsConfiguration GC_me = SimpleUniverse.getPreferredConfiguration();<newline46mondego>   Canvas3D Canvas_me = new Canvas3D(GC_me);<newline46mondego>   my_space = new SimpleUniverse(Canvas_me);<newline46mondego>   setLayout(new BorderLayout());<newline46mondego>   add(<doubleQuotes46>Center<doubleQuotes46>, Canvas_me);<newline46mondego>}<newline46mondego>"
"8489splitHere46","12182606splitHere46","o"
"8490splitHere46","12182606splitHere46","o"
"8491splitHere46","12182606splitHere46","o"
"8492splitHere46","12182606splitHere46","doSomething()"
"8493splitHere46","12182606splitHere46","Time            instance var o    local var o<newline46mondego>Before Line 5:            null               <newline46mondego>Line 5:                   null       Object#1<newline46mondego>Line 6:               Object#1       Object#1<newline46mondego>Line 7:               Object#1       Object#2<newline46mondego>Line 8:                   null       Object#2   <- No more references to Object#1<newline46mondego>"
"8494splitHere46","12182785splitHere46","String workingDir = <doubleQuotes46>C:\\TEST\\<doubleQuotes46>;<newline46mondego>ProcessBuilder builder = new ProcessBuilder(<newline46mondego>    new String[] {<doubleQuotes46>cmd.exe<doubleQuotes46>, <doubleQuotes46>/C<doubleQuotes46>,workingDir+<doubleQuotes46>game.exe<doubleQuotes46>}<newline46mondego>  );<newline46mondego>builder.directory(new File(workingDir));<newline46mondego>Process newProcess = builder.start();<newline46mondego>"
"8495splitHere46","12182875splitHere46","String addRecord = <doubleQuotes46>INSERT INTO <doubleQuotes46> + GlobalFields.PACJENCI_TABLE + <doubleQuotes46>VALUES (?);<doubleQuotes46>;<newline46mondego>    PreparedStatement stmt = conn.prepareStatement(addRecord);<newline46mondego>    stmt.setDate(1, new Date(System.currentTimeMillis()));<newline46mondego>    stmt.executeUpdate();<newline46mondego>"
"8496splitHere46","12182875splitHere46","Date"
"8497splitHere46","12182875splitHere46","java.sql.Date"
"8498splitHere46","12182875splitHere46","java.util.Date"
"8499splitHere46","12182875splitHere46","java.sql.Timestamp"
"8500splitHere46","12182904splitHere46","<mapping><newline46mondego>    <class-a>MyClass</class-a><newline46mondego>    <class-b>java.util.List</class-b>       <newline46mondego>    <field>          <newline46mondego>        <a is-accessible=<doubleQuotes46>true<doubleQuotes46>>name</a><newline46mondego>        <b>this[0]</b><newline46mondego>    </field>        <newline46mondego></mapping><newline46mondego>"
"8501splitHere46","12182904splitHere46","name"
"8502splitHere46","12182904splitHere46","List"
"8503splitHere46","12182904splitHere46","name"
"8504splitHere46","12182904splitHere46","List"
"8505splitHere46","12182904splitHere46","<mapping><newline46mondego>    <class-a>MyClass</class-a><newline46mondego>    <class-b>MyHolder</class-b>     <newline46mondego>    <field>          <newline46mondego>        <a is-accessible=<doubleQuotes46>true<doubleQuotes46>>name</a><newline46mondego>        <b>holded[0]</b><newline46mondego>    </field><newline46mondego>    <field>          <newline46mondego>        <a is-accessible=<doubleQuotes46>true<doubleQuotes46>>address</a><newline46mondego>        <b>holded[1]</b><newline46mondego>    </field>    <newline46mondego></mapping><newline46mondego>"
"8506splitHere46","12182904splitHere46","MyHolder"
"8507splitHere46","12182904splitHere46","List"
"8508splitHere46","12182904splitHere46","holded"
"8509splitHere46","12182904splitHere46","is-accessible=<doubleQuotes46>true<doubleQuotes46>"
"8510splitHere46","12182904splitHere46","MyClass"
"8511splitHere46","12182904splitHere46","public"
"8512splitHere46","12182904splitHere46","private"
"8513splitHere46","12182952splitHere46","TreeMap"
"8514splitHere46","12182952splitHere46","Map.Entry"
"8515splitHere46","12182952splitHere46","Entry.setValue"
"8516splitHere46","12182999splitHere46","System.out.println(Arrays.toString(test));<newline46mondego>"
"8517splitHere46","12182999splitHere46","java.lang.reflect.Array<newline46mondego>java.util.Arrays<newline46mondego>java.lang.System.arraycopy(); // one method<newline46mondego>"
"8518splitHere46","12182999splitHere46","org.apache.commons.lang.ArrayUtils<newline46mondego>org.uispec4j.utils.ArrayUtil<newline46mondego>toxi.util.datatypes.ArrayUtil<newline46mondego>net.sf.javaml.utils.ArrayUtils<newline46mondego>com.liferay.portal.kernel.util.ArrayUtil<newline46mondego>"
"8519splitHere46","12183105splitHere46","/WEB-INF"
"8520splitHere46","12183105splitHere46","@WebServlet(<doubleQuotes46>/foo<doubleQuotes46>)<newline46mondego>public class FooServlet extends HttpServlet {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>        request.getRequestDispatcher(<doubleQuotes46>/WEB-INF/foo.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8521splitHere46","12183105splitHere46","/WEB-INF/foo.jsp"
"8522splitHere46","12183105splitHere46","http://localhost:8080/context/foo"
"8523splitHere46","12183210splitHere46","AnnotationMethodHandlerAdapter"
"8524splitHere46","12183210splitHere46","RequestMappingHandlerAdapter"
"8525splitHere46","12183339splitHere46","HashTable"
"8526splitHere46","12183339splitHere46","size()"
"8527splitHere46","12183339splitHere46","Map<K, V> map = null;<newline46mondego>synchronized(hashTable) {<newline46mondego>  map = new java.util.HashMap<>(hashTable);<newline46mondego>}<newline46mondego>map.size();<newline46mondego>for(V v: map.values()) {<newline46mondego>  //...<newline46mondego>}<newline46mondego>"
"8528splitHere46","12183339splitHere46","hashTable"
"8529splitHere46","12183339splitHere46","synchronized(hashTable) {<newline46mondego>  int size = hashTable.size();<newline46mondego>  for(V v: hashTable.values()) {<newline46mondego>    //...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8530splitHere46","12183339splitHere46","hashTable"
"8531splitHere46","12183387splitHere46","Map<Long, String> map = new HashMap<Long, String>();<newline46mondego>for(Invoice invoice : invoces) {<newline46mondego>    map.put(invoice.getId(), invoce.getName());<newline46mondego>}<newline46mondego>"
"8532splitHere46","12183387splitHere46","Long"
"8533splitHere46","12183387splitHere46","String"
"8534splitHere46","12183387splitHere46","Invoice"
"8535splitHere46","12183387splitHere46","map.put(...)"
"8536splitHere46","12183454splitHere46","Read it.<newline46mondego>Ship it.<newline46mondego>Buy it.<newline46mondego>Read it.<newline46mondego>Box it.<newline46mondego>Read it.<newline46mondego>"
"8537splitHere46","12183505splitHere46","@MappedSuperclass<newline46mondego>@Access(AccessType.PROPERTY)<newline46mondego>public abstract class FinanceEntityBean {<newline46mondego>    protected Long id;<newline46mondego><newline46mondego>    @Version<newline46mondego>    @Access(AccessType.FIELD)<newline46mondego>    private long version;<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue(strategy=GenerationType.IDENTITY)<newline46mondego>    public Long getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(final Long id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8538splitHere46","12183523splitHere46","@Rule"
"8539splitHere46","12183523splitHere46","@Rule<newline46mondego>public TemporaryFolder tmp = new TemporaryFolder();<newline46mondego>"
"8540splitHere46","12183523splitHere46","@Rule"
"8541splitHere46","12183633splitHere46","MyClass.myMethod"
"8542splitHere46","12183633splitHere46","class MyClass {<newline46mondego>  //1) initialized/called once<newline46mondego>  public final static float[] TABLE = MyClassInitializer.buildSomething();<newline46mondego><newline46mondego>  public static float[] myMethod(float[] args) {<newline46mondego>    //2) non-strict<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>//3) doesn't <doubleQuotes46>pollute<doubleQuotes46> the MyClass API<newline46mondego>class MyClassInitializer {<newline46mondego>  strictfp [static] float[] buildSomething() { //4) strictfp here or on the class<newline46mondego>    //TODO: return something<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8543splitHere46","12183676splitHere46","callback"
"8544splitHere46","12183676splitHere46","callbackName(rawJson)"
"8545splitHere46","12183676splitHere46","String callbackName = request.getParameter(<doubleQuotes46>callback<doubleQuotes46>);<newline46mondego><newline46mondego>// ... your JSON code <newline46mondego><newline46mondego>if (callbackName != null)<newline46mondego>{<newline46mondego>    // JSONP wrapping:<newline46mondego>    response.getWriter().write(callbackName +<newline46mondego>                               <doubleQuotes46>(<doubleQuotes46> + stringWriter.toString() + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>    System.out.println(callbackName + <doubleQuotes46>(<doubleQuotes46> + stringWriter.toString() + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    response.getWriter().write(stringWriter.toString());<newline46mondego>    System.out.println(stringWriter.toString());<newline46mondego>}<newline46mondego><newline46mondego>response.getWriter().close();<newline46mondego>"
"8546splitHere46","12183676splitHere46","jQuery.getJSON"
"8547splitHere46","12183676splitHere46","?callback=?"
"8548splitHere46","12183676splitHere46","jQuery.ajax"
"8549splitHere46","12183676splitHere46","dataType: jsonp"
"8550splitHere46","12183715splitHere46","getLayout().addLayoutComponent(PANEL1, panel1);<newline46mondego>getLayout().addLayoutComponent(PANEL2, panel2);<newline46mondego>"
"8551splitHere46","12183715splitHere46","add(panel1, PANEL1);<newline46mondego>add(panel2, PANEL2);<newline46mondego>"
"8552splitHere46","12183795splitHere46","button_clicked"
"8553splitHere46","12183795splitHere46","volatile"
"8554splitHere46","12183795splitHere46","button_clicked"
"8555splitHere46","12183795splitHere46","volatile boolean"
"8556splitHere46","12183795splitHere46","button_clicked"
"8557splitHere46","12183795splitHere46","System.out"
"8558splitHere46","12183807splitHere46","nameToProps"
"8559splitHere46","12183807splitHere46","propAndVal"
"8560splitHere46","12183807splitHere46","for( VehicleReportRow vehicleReportRow : unpreparedRows ){<newline46mondego>    String vehicle = vehicleReportRow.getVehicle();<newline46mondego>    String name = vehicleReportRow.getName();<newline46mondego>    String property = vehicleReportRow.getProperty();<newline46mondego>    String value = vehicleReportRow.getValue();<newline46mondego><newline46mondego>    // check if we have an outermost entry for this vehicle type and if not then<newline46mondego>    // create one and store it in vehiclesData so that next time we can get the same<newline46mondego>    // map for this vehicle type<newline46mondego>    HashMap<String, HashMap<String,String>> nameToProps = vehiclesData.get(vehicle);;<newline46mondego>    if (nameToProps == null) {<newline46mondego>        nameToProps = new HashMap<String, HashMap<String,String>>();<newline46mondego>        vehiclesData.put(vehicle, nameToProps);<newline46mondego>    }<newline46mondego><newline46mondego>    // similarly, check if we already have a props to values map for this name<newline46mondego>    // and create and store one if not<newline46mondego>    HashMap<String,String> propAndVal = nameToProps.get(name);<newline46mondego>    if (propAndVal == null) {<newline46mondego>        propAndVal = new HashMap<String, String>();<newline46mondego>        nameToProps.put(name, propAndVal);<newline46mondego>    }<newline46mondego><newline46mondego>    // store the property and value<newline46mondego>    propAndVal.put(property, value);<newline46mondego>}<newline46mondego>"
"8561splitHere46","12183870splitHere46","URL url = SomeClassInEar.getClass().getClassLoader().getResource(<doubleQuotes46>rootDirInEar/SubDir/fileInEar.whatever<doubleQuotes46>);<newline46mondego>File file = new File(url.getPath());<newline46mondego>FileInputStream fis = new FileInputStream(file);<newline46mondego>"
"8562splitHere46","12183873splitHere46","LinkedHashMap"
"8563splitHere46","12183873splitHere46","HashMap"
"8564splitHere46","12183873splitHere46","LinkedHashMap"
"8565splitHere46","12183873splitHere46","LinkedHashMap<String, String> insertionOrderMap = new LinkedHashMap<String, String>();<newline46mondego>"
"8566splitHere46","12183943splitHere46","java.util.logging"
"8567splitHere46","12183943splitHere46","java.sql"
"8568splitHere46","12184094splitHere46","System.setProperty(<doubleQuotes46>https.proxyHost<doubleQuotes46>,<doubleQuotes46>trproxy.rwe.com<doubleQuotes46>) ; <newline46mondego>System.setProperty(<doubleQuotes46>https.proxyPort<doubleQuotes46>, <doubleQuotes46>443<doubleQuotes46>) ; <newline46mondego>"
"8569splitHere46","12184123splitHere46","listStatements(Subject, Predicate, Object)"
"8570splitHere46","12184123splitHere46","null"
"8571splitHere46","12184123splitHere46","listStatements(null, hasWifeProperty, null)"
"8572splitHere46","12184123splitHere46","listStatements(null, hasHusbandProperty, null)"
"8573splitHere46","12184126splitHere46","(m1 - m2) * v1 / (m1 + m2) + 2 * m2 * v2 / (m1 + m2);<newline46mondego>"
"8574splitHere46","12184126splitHere46","Force-->acceleration-->velocity-->displacement<newline46mondego>"
"8575splitHere46","12184250splitHere46","Platform#runLater"
"8576splitHere46","12184250splitHere46","Platform.runLater(new Runnable() {<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>          //javaFX operations should go here<newline46mondego>        }<newline46mondego>   });<newline46mondego>"
"8577splitHere46","12184250splitHere46","JFXPanel"
"8578splitHere46","12184265splitHere46","@Column(name = <doubleQuotes46>address_type<doubleQuotes46>)<newline46mondego>@Enumerated(EnumType.STRING)<newline46mondego>private char type;<newline46mondego>"
"8579splitHere46","12184301splitHere46","assertTrue(true)"
"8580splitHere46","12184301splitHere46","@Test<newline46mondego>testIfThrowsException(){<newline46mondego>    try{<newline46mondego>        funcThatShouldThrowException(arg1, agr2, agr3);<newline46mondego>        assertTrue(<doubleQuotes46>Exception wasn't thrown<doubleQuotes46>, false);<newline46mondego>    }<newline46mondego>    catch(DesiredException de){<newline46mondego>        assertTrue(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8581splitHere46","12184310splitHere46","GameObject::containsPoint(x, y)"
"8582splitHere46","12184310splitHere46","/* class GameObject */<newline46mondego>public boolean contains(int x, int y)<newline46mondego>{  <newline46mondego>    //Your use of parentheses here was really confusing!  <newline46mondego>    return mPosition[0] - mScale[0] < x && x < mPosition[0] + mScale[0]<newline46mondego>        && mPosition[1] - mScale[1] < y && y < mPosition[1] + mScale[1];<newline46mondego><newline46mondego>    /* alternatively:<newline46mondego>    return Math.abs(x - mPosition[0]) < mScale[0]<newline46mondego>        && Math.abs(y - mPosition[1]) < mScale[1];<newline46mondego>    */<newline46mondego>}<newline46mondego><newline46mondego>/* class Manager */<newline46mondego>public void onTouchEvent( Event event )<newline46mondego>{<newline46mondego>    for( GameObject o : mGameObjectList )<newline46mondego>    {<newline46mondego>        if(o.contains(event.getX(), event.getY()))<newline46mondego>        {<newline46mondego>            o.onTouchEvent(event);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8583splitHere46","12184310splitHere46","Vec2"
"8584splitHere46","12184310splitHere46","Vec2"
"8585splitHere46","12184310splitHere46","GameObject::mPosition"
"8586splitHere46","12184400splitHere46","LinkedHashMap"
"8587splitHere46","12184400splitHere46","comparator"
"8588splitHere46","12184494splitHere46","byte"
"8589splitHere46","12184494splitHere46","byte b = 127;<newline46mondego>byte b2 = (byte)(b + 1);  //-128<newline46mondego>"
"8590splitHere46","12184569splitHere46","table.getColumnModel().getColumn(0).setCellRenderer(new TableRendererExample());<newline46mondego>"
"8591splitHere46","12184569splitHere46","class TableRendererExample extends DefaultTableCellRenderer {<newline46mondego>    @Override<newline46mondego>    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego>      Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);<newline46mondego>      if (column == 1) {<newline46mondego>        c.setForeground(Color.gray);<newline46mondego>      }<newline46mondego>      return c;<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"8592splitHere46","12184582splitHere46","FadeTransition showTransition = new FadeTransition(Duration.seconds(.1), pList);<newline46mondego>showTransition.setFromValue(0.0f);<newline46mondego>showTransition.setToValue(1.0f);<newline46mondego>showTransition.play();<newline46mondego>"
"8593splitHere46","12184585splitHere46","<Configure class=<doubleQuotes46>org.eclipse.jetty.webapp.WebAppContext<doubleQuotes46>><newline46mondego>    <Set name=<doubleQuotes46>war<doubleQuotes46>><SystemProperty name=<doubleQuotes46>jetty.home<doubleQuotes46>/>/webapps/client1.war</Set><newline46mondego>    <Set name=<doubleQuotes46>contextPath<doubleQuotes46>>/</Set><newline46mondego>    <Set name=<doubleQuotes46>virtualHosts<doubleQuotes46>><newline46mondego>      <Array type=<doubleQuotes46>java.lang.String<doubleQuotes46>><newline46mondego>        <Item>www.client1.product.com</Item>      <newline46mondego>      </Array><newline46mondego>    </Set><newline46mondego></Configure><newline46mondego><Configure class=<doubleQuotes46>org.eclipse.jetty.webapp.WebAppContext<doubleQuotes46>><newline46mondego>  <Set name=<doubleQuotes46>war<doubleQuotes46>><SystemProperty name=<doubleQuotes46>jetty.home<doubleQuotes46>/>/webapps/client2.war</Set><newline46mondego>  <Set name=<doubleQuotes46>contextPath<doubleQuotes46>>/</Set><newline46mondego>  <Set name=<doubleQuotes46>virtualHosts<doubleQuotes46>><newline46mondego>    <Array type=<doubleQuotes46>java.lang.String<doubleQuotes46>><newline46mondego>      <Item>www.client2.product.com</Item>      <newline46mondego>    </Array><newline46mondego>  </Set><newline46mondego></Configure><newline46mondego>"
"8594splitHere46","12184585splitHere46","<VirtualHost *:80><newline46mondego>     ServerName www.client1.product.com<newline46mondego>     ProxyRequests off<newline46mondego>     ProxyPass / http://someInternalHost:3001/<newline46mondego>     ProxyPassReverse / http://someInternalHost:3001/<newline46mondego></VirtualHost><newline46mondego><newline46mondego><VirtualHost *:80><newline46mondego>     ServerName www.client2.product.com<newline46mondego>     ProxyRequests off<newline46mondego>     ProxyPass / http://someInternalHost:3001/<newline46mondego>     ProxyPassReverse / http://someInternalHost:3001/<newline46mondego></VirtualHost><newline46mondego>"
"8595splitHere46","12184749splitHere46","[something]:[num]-[num]"
"8596splitHere46","12184749splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>^([^:]*):([^-]*)-([^-]*)$<doubleQuotes46>);<newline46mondego><newline46mondego>// I assume this holds all the values:<newline46mondego>List<String> uniqueList = new ArrayList<String>(dupMap.values()); <newline46mondego><newline46mondego>for (String src : uniqueList) {<newline46mondego>    Matcher m = p.matcher(src); <newline46mondego>    if( m.find() && m.groupCount() >= 3) {<newline46mondego>        String firstValue = m.group(1); // value to left of :<newline46mondego>        String secondValue = m.group(2); // value between : and -<newline46mondego>        String thirdValue = m.group(3); // value after -<newline46mondego><newline46mondego>        // assign to arraylists here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8597splitHere46","12184749splitHere46","ArrayList"
"8598splitHere46","12184749splitHere46","ArrayList"
"8599splitHere46","12184749splitHere46","String.split()"
"8600splitHere46","12184749splitHere46","String pattern = <doubleQuotes46>[:\\-]<doubleQuotes46>;<newline46mondego><newline46mondego>// I assume this holds all the values:<newline46mondego>List<String> uniqueList = new ArrayList<String>(dupMap.values()); <newline46mondego><newline46mondego>for (String src : uniqueList) {<newline46mondego>    String[] parts = src.split(pattern);<newline46mondego>    if (parts.length == 3) {<newline46mondego>        String firstValue = parts[1]; // value to left of :<newline46mondego>        String secondValue = parts[2]; // value between : and -<newline46mondego>        String thirdValue = parts[3]; // value after -<newline46mondego><newline46mondego>        // assign to arraylists here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8601splitHere46","12184785splitHere46","t=false"
"8602splitHere46","12184785splitHere46","false"
"8603splitHere46","12184785splitHere46","t"
"8604splitHere46","12184785splitHere46","while (false)"
"8605splitHere46","12184785splitHere46","=="
"8606splitHere46","12184785splitHere46","while (!t)"
"8607splitHere46","12184785splitHere46","="
"8608splitHere46","12184841splitHere46","clean install -U"
"8609splitHere46","12184844splitHere46","String[] line = currentLine.split(<doubleQuotes46>,<doubleQuotes46>)<newline46mondego>"
"8610splitHere46","12184844splitHere46","assertEquals(<doubleQuotes46>item <doubleQuotes46>+file1.line[0]+<doubleQuotes46> values do not match<doubleQuotes46>,<newline46mondego>    Double.parseDouble(file1.line[1]),<newline46mondego>    Double.parseDouble(file2.line[1]),<newline46mondego>    0.001)<newline46mondego>"
"8611splitHere46","12184844splitHere46","for(String line: file1.readNextLine()) <newline46mondego>    file1hash.put(line.split(<doubleQuotes46>,<doubleQuotes46>)[0],line)<newline46mondego>"
"8612splitHere46","12184844splitHere46","for(String line2: file2.readNextLine())  {<newline46mondego>    String line1=file1hash.get(line2.split(<doubleQuotes46>,<doubleQuotes46>)[0])<newline46mondego>"
"8613splitHere46","12184861splitHere46","JSONArray"
"8614splitHere46","12184861splitHere46","<doubleQuotes46>name<doubleQuotes46>"
"8615splitHere46","12184861splitHere46","json.getJSONArray(<doubleQuotes46>city<doubleQuotes46>);"
"8616splitHere46","12184861splitHere46","JSONArray cities = json.getJSONArray(<doubleQuotes46>city<doubleQuotes46>);<newline46mondego>JSONObject city = null;<newline46mondego>String[] s = new String[cities.length()];<newline46mondego><newline46mondego>for (int i = 0; i < cities.length(); i++)<newline46mondego>{<newline46mondego>    city = cities.getJsonObject(i);<newline46mondego>    s[i] = city.get(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8617splitHere46","12184863splitHere46","<a>"
"8618splitHere46","12184863splitHere46","[CDATA]"
"8619splitHere46","12184863splitHere46","String.contains()"
"8620splitHere46","12184863splitHere46","String.indexOf()"
"8621splitHere46","12184868splitHere46","replace"
"8622splitHere46","12184868splitHere46","replaceAll"
"8623splitHere46","12184868splitHere46","replaceAll"
"8624splitHere46","12184868splitHere46","[]"
"8625splitHere46","12184868splitHere46","localStringBuilder.toString().replace(<doubleQuotes46>[sender]<doubleQuotes46>, callerName);"
"8626splitHere46","12184868splitHere46","is the same. Works when is no [] characters in string"
"8627splitHere46","12184868splitHere46","public static void main(String[] args) {<newline46mondego>    String s = <doubleQuotes46>asd[something]123<doubleQuotes46>;<newline46mondego>    String replace = s.replace(<doubleQuotes46>[something]<doubleQuotes46>, <doubleQuotes46>new1<doubleQuotes46>);<newline46mondego>    System.out.println(replace);<newline46mondego>}<newline46mondego>"
"8628splitHere46","12184939splitHere46","double classif = ibk.classifyInstance(newInst);<newline46mondego>"
"8629splitHere46","12184939splitHere46","newInst"
"8630splitHere46","12184939splitHere46","newInst"
"8631splitHere46","12184939splitHere46","Instances dataUnlabeled = new Instances(<doubleQuotes46>TestInstances<doubleQuotes46>, atts, 0);<newline46mondego>dataUnlabeled.add(newInst);<newline46mondego>dataUnlabeled.setClassIndex(dataUnlabeled.numAttributes() - 1);        <newline46mondego>double classif = ibk.classifyInstance(dataUnlabeled.firstInstance());<newline46mondego>"
"8632splitHere46","12185025splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import java.awt.event.WindowAdapter;<newline46mondego>import java.awt.event.WindowEvent;<newline46mondego><newline46mondego>import javax.swing.JComboBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JList;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego><newline46mondego>public class JavaDemo extends JPanel {<newline46mondego><newline46mondego>  public JavaDemo() {<newline46mondego>    setLayout(new GridLayout(2, 1));<newline46mondego>    JList lista = new JList(new String[] {<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>});<newline46mondego>    add(new JScrollPane(lista));<newline46mondego>    JComboBox combo = new JComboBox();<newline46mondego>    for (int i = 0; i < 100; i++) {<newline46mondego>      combo.addItem(Integer.toString(i));<newline46mondego>      add(combo);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String args[]) {<newline46mondego>    JavaDemo lista = new JavaDemo();<newline46mondego>    JFrame ventana = new JFrame();<newline46mondego>    ventana.getContentPane().add(lista, BorderLayout.CENTER);<newline46mondego>    ventana.addWindowListener(new WindowAdapter() {<newline46mondego>      public void windowClosing(WindowEvent evt) {<newline46mondego>        System.exit(0);<newline46mondego>      }<newline46mondego>    });<newline46mondego>    ventana.setSize(200, 200);<newline46mondego>    ventana.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8633splitHere46","12185066splitHere46","public String extractWhileLoop(String text) {<newline46mondego>    extractedThis = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    while(text.length() > 0) {<newline46mondego>        extractedThis += text.charAt(0);<newline46mondego>        text = text.substring(1);<newline46mondego>    }<newline46mondego>    return extractedThis;<newline46mondego>}<newline46mondego><newline46mondego>public String extractForLoop(String text) {<newline46mondego>    extractedThis = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    for (int i = 0; i < text.length(); i++) {<newline46mondego><newline46mondego>        extractedThis += text.charAt(i);<newline46mondego>    }<newline46mondego><newline46mondego>    return extractedThis;<newline46mondego>}<newline46mondego>"
"8634splitHere46","12185233splitHere46","<LinearLayout // this is your root container ... ><newline46mondego>    <LinearLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/content_item_image_wrapper<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:background=<doubleQuotes46>#00FFFFFF<doubleQuotes46><newline46mondego>        android:padding=<doubleQuotes46>3dip<doubleQuotes46> ><newline46mondego><newline46mondego>        <ImageView<newline46mondego>            android:id=<doubleQuotes46>@+id/user_profile_thumbnail<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:adjustViewBounds=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:maxHeight=<doubleQuotes46>80dp<doubleQuotes46><newline46mondego>            android:src=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46> /><newline46mondego>    </LinearLayout><newline46mondego></LinearLayout><newline46mondego>"
"8635splitHere46","12185403splitHere46","public void actionPerformed(ActionEvent e) {<newline46mondego>    // Execute when button is pressed<newline46mondego>    ss = true;<newline46mondego>    System.out.println(<doubleQuotes46>You clicked the button<doubleQuotes46>);<newline46mondego>    startAnimation();<newline46mondego>}<newline46mondego>"
"8636splitHere46","12185418splitHere46","TypeElement.getKind() == ElementKind.INTERFACE<newline46mondego>"
"8637splitHere46","12185418splitHere46","TypeElement.getKind().isInterface()<newline46mondego>"
"8638splitHere46","12185458splitHere46","/**<newline46mondego>     * PROS:<newline46mondego>     * -Very low memory-footprint, as no new objects are created in memory, just references to a single (original) object.<newline46mondego>     * -Can be done with generalization; A single method will function for most classes and data-types, as is below.<newline46mondego>     * <newline46mondego>     * CONS:<newline46mondego>     * -If you need each clone element to be changed independently from eachother and/or the orininal, this will not work directly,<newline46mondego>     * because any change to an reference-element will apply to all other reference-elements that point to that same Object.<newline46mondego>     * <newline46mondego>     * @param <E> Sub-class generalizator. Used so that the returned list has the same sub-class as the source.<newline46mondego>     * @param list Source list. The list containing the elements to be interleaved.<newline46mondego>     * @param f The factor to interleave for. In effect, the number of resulting elements for each original.<newline46mondego>     * @return A list containing the interleaved elements, with each element being a REFERENCE to the original object.<newline46mondego>     */<newline46mondego>    public static <E> List<E> interleaveByReference(List<E> list, int f) {<newline46mondego>        List<E> interleaved = new ArrayList<E>(list.size() * f);<newline46mondego>        for (E obj : list) {<newline46mondego>            for (int i = 0; i < f; i++) {<newline46mondego>                interleaved.add(obj);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return interleaved;<newline46mondego>    }<newline46mondego>"
"8639splitHere46","12185458splitHere46","public static void replaceWithTrueClone(List<String> list, int objIndex) {<newline46mondego>    list.add(objIndex, new String(list.get(objIndex)));<newline46mondego>    list.remove(objIndex + 1);<newline46mondego>}<newline46mondego><newline46mondego>//OR<newline46mondego><newline46mondego>public static void replaceWithNewObject (List<String> list, int objIndex, String newObject) {<newline46mondego>    list.add(objIndex, newObject);<newline46mondego>    list.remove(objIndex + 1);<newline46mondego>}<newline46mondego>"
"8640splitHere46","12185458splitHere46","/**<newline46mondego>     * PROS:<newline46mondego>     * -Each element is an independent object, and can be set to independent values without much of an effort.<newline46mondego>     * <newline46mondego>     * CONS:<newline46mondego>     * -Each element has it's own allocated memory for it's values, thus having a much heavier memory footprint.<newline46mondego>     * -Is constructor-dependent, and thus cannot be generalized as easily;<newline46mondego>     * Each different expected class will probably need it's own method.<newline46mondego>     * <newline46mondego>     * @param list Source list. The list containing the elements to be interleaved.<newline46mondego>     * @param f The factor to interleave for. In effect, the number of resulting elements for each original.<newline46mondego>     * @return A list containing the interleaved elements.<newline46mondego>     * For each of the original elements, the first is a REFERENCE, and the other are CLONES.<newline46mondego>     */<newline46mondego>    public static List<String> interleaveByClone(List<String> list, int f) {<newline46mondego>        List<String> interleaved = new ArrayList<String>(list.size() * f);<newline46mondego>        for (String obj : list) {<newline46mondego>            interleaved.add(obj); //The first element doesn't have to be cloned, I assume.<newline46mondego>            //If it has to be cloned, delete the line above, and change 'i=1' to 'i=0' on the line below.<newline46mondego>            for (int i = 1; i < f; i++) {<newline46mondego>                interleaved.add(new String(obj));<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return interleaved;<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>     * What was changed from the original is commented below.<newline46mondego>     */<newline46mondego><newline46mondego>    public static List<String> original(List<String> original, int factor) {<newline46mondego>        /*<newline46mondego>         * It is unnessessary to have this 'newSize' variable. It gets needlessly maintained until the end of the method.<newline46mondego>         * Although the impact is unworthy of measurement (negligible), it still exists.<newline46mondego>         */<newline46mondego>        int newSize = original.size() * factor;<newline46mondego>        List<String> interleaved = new ArrayList<String>(newSize); //Just do the '*factor' operarion directly, instead of 'newSize'.<newline46mondego><newline46mondego>        for (String foo : original) {<newline46mondego>            /*<newline46mondego>             * If you can use the original here, that's one less cloning operation (memory-allocation, etc...) per original element.<newline46mondego>             * A low-impact optimization, but still a good one.<newline46mondego>             */<newline46mondego>            for (int j = 0; j < factor; j++) {<newline46mondego>                interleaved.add(new String(foo));<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return interleaved;<newline46mondego>    }<newline46mondego>"
"8641splitHere46","12185458splitHere46","interleaveByReference()"
"8642splitHere46","12185458splitHere46","interleaveByClone()"
"8643splitHere46","12185458splitHere46","original()"
"8644splitHere46","12185483splitHere46","gem install buildr-1.4.7.gem<newline46mondego>"
"8645splitHere46","12185483splitHere46","gem fetch rails -y -t /path/to/flash_drive<newline46mondego>"
"8646splitHere46","12185619splitHere46","<task:annotation-driven/>"
"8647splitHere46","12185619splitHere46","context.registerShutdownHook()"
"8648splitHere46","12185622splitHere46","RandomAccessile.writeUTF()"
"8649splitHere46","12185622splitHere46","write()"
"8650splitHere46","12185622splitHere46","writeBytes()"
"8651splitHere46","12185651splitHere46","public class calculator2 extends JPanel {<newline46mondego>  public calculator2() {<newline46mondego>     super();<newline46mondego>     setLayout(new GridLayout(0,5));<newline46mondego><newline46mondego>     add(new JLabel());<newline46mondego>     add(new JButton(<doubleQuotes46><<<doubleQuotes46>));<newline46mondego>     add(new JLabel());<newline46mondego>     add(new JButton(<doubleQuotes46>>><doubleQuotes46>));<newline46mondego>     add(new JLabel());<newline46mondego> }<newline46mondego>}<newline46mondego>"
"8652splitHere46","12185953splitHere46","Write results to file / Read from file"
"8653splitHere46","12186003splitHere46","style"
"8654splitHere46","12186003splitHere46","var"
"8655splitHere46","12186003splitHere46","<p class=<doubleQuotes46>${answerClass}<doubleQuotes46>The quick brown fox jumped over the lazy brown dog.</p><newline46mondego>"
"8656splitHere46","12186003splitHere46","under: {<newline46mondego>  color: red;<newline46mondego>}<newline46mondego><newline46mondego>equal: {<newline46mondego>  color: blue;<newline46mondego>}<newline46mondego><newline46mondego>greater: {<newline46mondego>  color: green;<newline46mondego>}<newline46mondego>"
"8657splitHere46","12186144splitHere46","Applet"
"8658splitHere46","12186144splitHere46","JApplet"
"8659splitHere46","12186144splitHere46","TextField"
"8660splitHere46","12186144splitHere46","JTextField"
"8661splitHere46","12186144splitHere46","Canvas"
"8662splitHere46","12186144splitHere46","JPanel"
"8663splitHere46","12186144splitHere46","JComponent"
"8664splitHere46","12186144splitHere46","p"
"8665splitHere46","12186144splitHere46","Thread"
"8666splitHere46","12186144splitHere46","run"
"8667splitHere46","12186144splitHere46","MyThread"
"8668splitHere46","12186144splitHere46","public class MyWorker extends SwingWorker<Object, Object> {<newline46mondego><newline46mondego>    private URL host;<newline46mondego>    private File outputFile;<newline46mondego><newline46mondego>    public MyWorker(URL host, File f) {<newline46mondego>        this.host = host;<newline46mondego>        outputFile = f;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Object doInBackground() throws Exception {<newline46mondego><newline46mondego>        // You're ignoring the host you past in to the constructor<newline46mondego>        String hostName = <doubleQuotes46>localhost<doubleQuotes46>;<newline46mondego>        String username = <doubleQuotes46>un<doubleQuotes46>;<newline46mondego>        String password = <doubleQuotes46>pass<doubleQuotes46>;<newline46mondego>        String location = f.toString();<newline46mondego><newline46mondego>        //FTPClient ftp = null;<newline46mondego><newline46mondego>        ftp.connect(hostName, 2121);<newline46mondego>        ftp.login(username, password);<newline46mondego><newline46mondego>        ftp.setFileType(FTP.BINARY_FILE_TYPE);<newline46mondego><newline46mondego>        ftp.setKeepAlive(true);<newline46mondego>        ftp.setControlKeepAliveTimeout(3000);<newline46mondego>        ftp.setDataTimeout(3000); // 100 minutes<newline46mondego>        ftp.setConnectTimeout(3000); // 100 minutes<newline46mondego><newline46mondego>        ftp.changeWorkingDirectory(<doubleQuotes46>/SSL<doubleQuotes46>);<newline46mondego><newline46mondego>        int reply = ftp.getReplyCode();<newline46mondego>        System.out.println(<doubleQuotes46>Received Reply from FTP Connection:<doubleQuotes46> + reply);<newline46mondego><newline46mondego>        if (FTPReply.isPositiveCompletion(reply)) {<newline46mondego>            System.out.println(<doubleQuotes46>Connected Success<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println(f.getName().toString());<newline46mondego><newline46mondego>        File f1 = new File(location);<newline46mondego>        in = new FileInputStream(f1);<newline46mondego><newline46mondego>        FileInputStream input = new FileInputStream(f1);<newline46mondego>        // ftp.storeFile(f.getName().toString(),in);<newline46mondego><newline46mondego>        //ProgressMonitorInputStream is= new ProgressMonitorInputStream(getParent(), <doubleQuotes46>st<doubleQuotes46>, in);<newline46mondego>        OutputStream ftpOut = ftp.storeFileStream(f.getName().toString());<newline46mondego><newline46mondego><newline46mondego>        System.out.println(ftpOut.toString());<newline46mondego>        //newname hereSystem.out.println(ftp.remoteRetrieve(f.toString()));<newline46mondego>        OutputStream output = new BufferedOutputStream(ftpOut);<newline46mondego>        CopyStreamListener listener = new CopyStreamListener() {<newline46mondego>            public void bytesTransferred(final long totalBytesTransferred, final int bytesTransferred, final long streamSize) {<newline46mondego><newline46mondego>                setProgress((int) Math.round(((double) totalBytesTransferred / (double) streamSize) * 100d));<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void bytesTransferred(CopyStreamEvent arg0) {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        Util.copyStream(input, output, ftp.getBufferSize(), f.length(), listener);<newline46mondego><newline46mondego>        return null;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8669splitHere46","12186144splitHere46","ActionListener"
"8670splitHere46","12186144splitHere46","o"
"8671splitHere46","12186144splitHere46","try {<newline46mondego>    MyWorker worker = new MyWorker(new URL(<doubleQuotes46>http://localhost<doubleQuotes46>), file);<newline46mondego>    worker.addPropertyChangeListener(new PropertyChangeListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>            if (evt.getPropertyName().equals(<doubleQuotes46>progress<doubleQuotes46>)) {<newline46mondego>                Integer progress = (Integer) evt.getNewValue();<newline46mondego>                progressBar.setValue(progress);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>    worker.execute();<newline46mondego>} catch (MalformedURLException ex) {<newline46mondego>    ex.printStackTrace();<newline46mondego>}<newline46mondego>"
"8672splitHere46","12186276splitHere46","public class HomePage extends WebPage {<newline46mondego><newline46mondego>    public HomePage(final PageParameters parameters) {<newline46mondego><newline46mondego>        add( new Label( <doubleQuotes46>label<doubleQuotes46>, parameters.getString( <doubleQuotes46>param<doubleQuotes46>)));<newline46mondego><newline46mondego>        add( new ListView( <doubleQuotes46>list<doubleQuotes46>, Arrays.asList( <doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>bar<doubleQuotes46>) ) {<newline46mondego>            @Override<newline46mondego>            protected void populateItem(final ListItem item) {<newline46mondego>                item.add( new Label( <doubleQuotes46>label<doubleQuotes46>, <doubleQuotes46>item model is <doubleQuotes46>+item.getModelObject() ) );<newline46mondego>                item.add( new AjaxEventBehavior( <doubleQuotes46>onclick<doubleQuotes46>) {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    protected void onEvent(AjaxRequestTarget target) {<newline46mondego>                        PageParameters pp = new PageParameters( <doubleQuotes46>param=<doubleQuotes46>+item.getModelObject() );<newline46mondego>                        setResponsePage( new HomePage( pp ) );<newline46mondego>                    }<newline46mondego>                });<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8673splitHere46","12186276splitHere46","<html><newline46mondego>    <head><newline46mondego>        <title>Wicket Quickstart Archetype Homepage</title><newline46mondego>    </head><newline46mondego>    <body><newline46mondego>        <span wicket:id=<doubleQuotes46>label<doubleQuotes46>>message will be here</span><newline46mondego>        <div wicket:id=<doubleQuotes46>list<doubleQuotes46>>Static stuff and <span wicket:id=<doubleQuotes46>label<doubleQuotes46>>dynamic stuff</span></div><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"8674splitHere46","12186301splitHere46","replaceAll"
"8675splitHere46","12186301splitHere46","name"
"8676splitHere46","12186301splitHere46","for (int i = 0; i < pairs.length; i++) {<newline46mondego>    if (name.contains(pairs[i][0])) {<newline46mondego>        name = name.replaceAll(pairs[i][0], abbr[i][1]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8677splitHere46","12186301splitHere46","String"
"8678splitHere46","12186301splitHere46","name.replaceAll"
"8679splitHere46","12186301splitHere46","name"
"8680splitHere46","12186301splitHere46","String"
"8681splitHere46","12186315splitHere46","JTree.getPathForLocation"
"8682splitHere46","12186315splitHere46","JTree.getPathBounds(path)"
"8683splitHere46","12186378splitHere46","Object o = request.getAttribute(<doubleQuotes46>testVal<doubleQuotes46>);<newline46mondego>String s = (String) o;<newline46mondego>boolean b = Util.parseBoolean( s, false )<newline46mondego>"
"8684splitHere46","12186463splitHere46","1) The .jar file in question should be something like <doubleQuotes46>httpcore-4.0.1.jar<doubleQuotes46>. <newline46mondego>   Please confirm the name.<newline46mondego><newline46mondego>2) Adding this to <doubleQuotes46>External Libraries<doubleQuotes46> is absolutely the correct thing to do.<newline46mondego><newline46mondego>3) For compiling in the Eclipse IDE, you must:<newline46mondego><newline46mondego>   a) Select your project<newline46mondego><newline46mondego>   b) Select <doubleQuotes46>Build Path<doubleQuotes46> > <doubleQuotes46>Add External Libraries<doubleQuotes46><newline46mondego><newline46mondego>4) For running in the Eclipse IDE, you must<newline46mondego><newline46mondego>   a) Select <doubleQuotes46>Run<doubleQuotes46> > <doubleQuotes46>Run configurations<doubleQuotes46>.  <newline46mondego>      Choose your (Java Application?) configuration.<newline46mondego><newline46mondego>   b) Select <doubleQuotes46>Classpath<doubleQuotes46> > <doubleQuotes46>Add External Jar<doubleQuotes46><newline46mondego><newline46mondego>5) For running outside of the Eclipse IDE, you must make sure the .jar <newline46mondego>   file is present and your -cp (Classpath) argument is set correctly.<newline46mondego>"
"8685splitHere46","12186891splitHere46","JOptionPane"
"8686splitHere46","12186891splitHere46","JOptionPane"
"8687splitHere46","12186891splitHere46","Runnable"
"8688splitHere46","12186891splitHere46","Runnable"
"8689splitHere46","12186891splitHere46","SwingUtilities.invokeLater(new Runnable() {<newline46mondego>  public void run() {<newline46mondego>    JOptionPane.showMessageDialog(....);<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"8690splitHere46","12186891splitHere46","} catch (Exception ex) {<newline46mondego>   final String exMessage = ex.getMessage();<newline46mondego><newline46mondego>   SwingUtilities.invokeLater(new Runnable() {<newline46mondego>     public void run() {<newline46mondego>       JOptionPane.showMessageDialog(<newline46mondego>         null,<newline46mondego>         exMessage,<newline46mondego>         <doubleQuotes46>Database Error<doubleQuotes46>,<newline46mondego>         JOptionPane.ERROR_MESSAGE);<newline46mondego>       );<newline46mondego>     }<newline46mondego>   });<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8691splitHere46","12186891splitHere46","null"
"8692splitHere46","12186891splitHere46","JOptionPane"
"8693splitHere46","12186891splitHere46","MainGui"
"8694splitHere46","12186891splitHere46","JFrame"
"8695splitHere46","12186927splitHere46","setInput"
"8696splitHere46","12186927splitHere46","editorInput.exists()"
"8697splitHere46","12186927splitHere46","public void close () {<newline46mondego>    Display.getDefault().asyncExec(new Runnable () {<newline46mondego>        public void run () {<newline46mondego>            getSite().getPage().closeEditor(YourEditorClass.this, false);<newline46mondego>        }<newline46mondego>    });<newline46mondego>} <newline46mondego>"
"8698splitHere46","12187020splitHere46","COPYING"
"8699splitHere46","12187020splitHere46","LICENSE"
"8700splitHere46","12187020splitHere46","license-gpl.txt"
"8701splitHere46","12187109splitHere46","tagInMainList.equals(keyBasedReferenceToTag)"
"8702splitHere46","12187109splitHere46","tagInMainList.getKey().equals(keyBasedReferenceToTag)"
"8703splitHere46","12187442splitHere46","init()"
"8704splitHere46","12187457splitHere46","Post-Condition"
"8705splitHere46","12187457splitHere46","i==n"
"8706splitHere46","12187457splitHere46","Pre-Condition"
"8707splitHere46","12187457splitHere46","i==0"
"8708splitHere46","12187457splitHere46","i"
"8709splitHere46","12187457splitHere46","n"
"8710splitHere46","12187457splitHere46","0 <= i <= n"
"8711splitHere46","12187457splitHere46","f"
"8712splitHere46","12187457splitHere46","private int n = 6;<newline46mondego><newline46mondego>public int fact(){<newline46mondego>    int i = 0;<newline46mondego>    int f = 1;<newline46mondego><newline46mondego>    /* loop invariant: 0 <= i <= n && f == i! */<newline46mondego>    /* PRE: i == 0 && f == i! */<newline46mondego>    while (i < n) {<newline46mondego>        i = i + 1;<newline46mondego>        f = f * i;<newline46mondego>    }<newline46mondego>    /* POST: i == n && f == i! */<newline46mondego><newline46mondego>    return f;<newline46mondego>}<newline46mondego>"
"8713splitHere46","12187639splitHere46","select distinct atr.attributeType<newline46mondego>  from Attribute atr<newline46mondego> where atr.user = :user<newline46mondego>"
"8714splitHere46","12187639splitHere46","select distinct atrs.attributeType<newline46mondego>  from User as user<newline46mondego>  join user.attributes as atrs   <newline46mondego> where user.id = :user_id<newline46mondego>"
"8715splitHere46","12187672splitHere46","if(Commercial.web4 != null)<newline46mondego>     Commercial.web4.clearCache(true);<newline46mondego>"
"8716splitHere46","12187672splitHere46","try {<newline46mondego>        File dir = context.getCacheDir();<newline46mondego>        if (dir != null && dir.isDirectory()) {<newline46mondego>            deleteDir(dir);<newline46mondego><newline46mondego>        }<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"8717splitHere46","12187746splitHere46","int num2 = Integer.parseInt(num1);<newline46mondego>"
"8718splitHere46","12187746splitHere46","if (num2 >= 275) <newline46mondego>...<newline46mondego>"
"8719splitHere46","12187862splitHere46","DynamicTimeSeriesCollection"
"8720splitHere46","12187862splitHere46","nMoments"
"8721splitHere46","12187862splitHere46","TimeSeriesCollection"
"8722splitHere46","12187862splitHere46","setMaximumItemAge()"
"8723splitHere46","12187862splitHere46","TimeSeries"
"8724splitHere46","12188016splitHere46","abc temp = new abc();<newline46mondego>temp.addActionListener(new ActionListener() {<newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>Look Ma, I'm in Main...<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>temp.setVisible(true);<newline46mondego>"
"8725splitHere46","12188016splitHere46","abc"
"8726splitHere46","12188016splitHere46","class abc JFrame implements {<newline46mondego>    // build your class as normal<newline46mondego><newline46mondego>    public void addActionListener(ActionListener listener) {<newline46mondego>        b1.addActionListener(listener);<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"8727splitHere46","12188033splitHere46","import javax.imageio.ImageIO;<newline46mondego><newline46mondego>public class QuickTest {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        String[] types = ImageIO.getReaderFileSuffixes();<newline46mondego>        System.out.println(<doubleQuotes46>This JRE supports image types:<doubleQuotes46>);<newline46mondego>        for (String type : types) {<newline46mondego>            System.out.println(<doubleQuotes46>Type: <doubleQuotes46> + type);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8728splitHere46","12188033splitHere46","This JRE supports image types:<newline46mondego>Type: bmp<newline46mondego>Type: jpg<newline46mondego>Type: wbmp<newline46mondego>Type: jpeg<newline46mondego>Type: png<newline46mondego>Type: gif<newline46mondego>"
"8729splitHere46","12188035splitHere46","SocketException: socket is closed"
"8730splitHere46","12188180splitHere46","r.keyPress(KeyEvent.VK_SHIFT);<newline46mondego>r.mousePress(KeyEvent.BUTTON3_MASK);<newline46mondego>r.mouseRelease(KeyEvent.BUTTON3_MASK);<newline46mondego>r.keyRelease(KeyEvent.VK_SHIFT);<newline46mondego>"
"8731splitHere46","12188257splitHere46","java.version"
"8732splitHere46","12188257splitHere46","java.vendor"
"8733splitHere46","12188257splitHere46","Name            Value<newline46mondego>java.vendor     Oracle Corporation<newline46mondego>java.version    1.7.0_05<newline46mondego>os.name         Windows 7<newline46mondego>os.version      6.1<newline46mondego>"
"8734splitHere46","12188479splitHere46","'"
"8735splitHere46","12188479splitHere46","Z"
"8736splitHere46","12188479splitHere46","Z"
"8737splitHere46","12188479splitHere46","T"
"8738splitHere46","12188479splitHere46","SSS"
"8739splitHere46","12188479splitHere46","yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
"8740splitHere46","12188562splitHere46","Exception"
"8741splitHere46","12188562splitHere46","format(...)"
"8742splitHere46","12188562splitHere46","Formatter.java"
"8743splitHere46","12188562splitHere46","format(Lo"
"8744splitHere46","12188562splitHere46","sources\android-16\java\util"
"8745splitHere46","12188562splitHere46","doFormat"
"8746splitHere46","12188562splitHere46","Formatter"
"8747splitHere46","12188562splitHere46","String"
"8748splitHere46","12188592splitHere46","System.out.println(<doubleQuotes46>text<doubleQuotes46>)"
"8749splitHere46","12188592splitHere46","System.exit(0);<newline46mondego>"
"8750splitHere46","12188896splitHere46","DbM db=new DbM(this);<newline46mondego>"
"8751splitHere46","12188896splitHere46","db=new DbM(this); <newline46mondego>"
"8752splitHere46","12188896splitHere46","NewStuff ns= new NewStuff()<newline46mondego>"
"8753splitHere46","12188896splitHere46","this"
"8754splitHere46","12188914splitHere46","CopyOnWriteArrayList"
"8755splitHere46","12188914splitHere46","ConcurrentLinkedDeque"
"8756splitHere46","12188914splitHere46","java.util"
"8757splitHere46","12188914splitHere46","java.util.concurrent"
"8758splitHere46","12189008splitHere46","Map"
"8759splitHere46","12189008splitHere46","Node"
"8760splitHere46","12189008splitHere46","Node"
"8761splitHere46","12189008splitHere46","Node"
"8762splitHere46","12189008splitHere46","Map<Node, Node[]> graph = new HashMap<Node, Node[]>();<newline46mondego>"
"8763splitHere46","12189008splitHere46","Node"
"8764splitHere46","12189008splitHere46","public class Node {<newline46mondego>    private Node[] adjacentNodes;<newline46mondego>    public Node(Node[] nodes) { adjacentNodes = nodes; }<newline46mondego>    public Node[] adjacentNodes() { return adjacentNodes; }<newline46mondego>}<newline46mondego>"
"8765splitHere46","12189105splitHere46","Timer timer; <newline46mondego>MyTimerTask timerTask; <newline46mondego><newline46mondego>timer = new Timer(); <newline46mondego>timerTask = new MyTimerTask();<newline46mondego>timer.schedule ( timerTask, startingInterval, repeatingInterval );<newline46mondego><newline46mondego>private class MyTimerTask extends TimerTask <newline46mondego>{<newline46mondego>     public void run()<newline46mondego>     { <newline46mondego>        ...<newline46mondego>        // Repetitive Activity goes here<newline46mondego>     } <newline46mondego>}<newline46mondego>"
"8766splitHere46","12189105splitHere46","AlarmManager"
"8767splitHere46","12189105splitHere46","TimerTask"
"8768splitHere46","12189105splitHere46","public class AlarmReceiver extends BroadcastReceiver <newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void onReceive(Context context, Intent intent) <newline46mondego>    {<newline46mondego>        try <newline46mondego>        {<newline46mondego>            Bundle bundle = intent.getExtras();<newline46mondego>            String message = bundle.getString(<doubleQuotes46>alarm_message<doubleQuotes46>);<newline46mondego>            Toast.makeText(context, message, Toast.LENGTH_SHORT).show();<newline46mondego>        } <newline46mondego>        catch (Exception e) <newline46mondego>        {<newline46mondego>             Toast.makeText(context, <doubleQuotes46>There was an error somewhere, but we still received an alarm<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego> e.printStackTrace();<newline46mondego>        }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"8769splitHere46","12189105splitHere46","private static Intent alarmIntent = null;<newline46mondego>private static PendingIntent pendingIntent = null;<newline46mondego>private static AlarmManager alarmManager = null;<newline46mondego><newline46mondego>    // OnCreate()<newline46mondego>    alarmIntent = new Intent ( null, AlarmReceiver.class );<newline46mondego>    pendingIntent = PendingIntent.getBroadcast( this.getApplicationContext(), 234324243, alarmIntent, 0 );<newline46mondego>alarmManager = ( AlarmManager ) getSystemService( ALARM_SERVICE );<newline46mondego>    alarmManager.setRepeating( AlarmManager.RTC_WAKEUP, ( uploadInterval * 1000 ),( uploadInterval * 1000 ), pendingIntent );<newline46mondego>"
"8770splitHere46","12189124splitHere46","ViewDeclarationLanguage#buildView()"
"8771splitHere46","12189124splitHere46","UIViewRoot"
"8772splitHere46","12189124splitHere46","createView(javax.faces.context.FacesContext, java.lang.String)"
"8773splitHere46","12189124splitHere46","String viewId = <doubleQuotes46>/path/to/some.xhtml<doubleQuotes46>;<newline46mondego>FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>ViewHandler viewHandler = context.getApplication().getViewHandler();<newline46mondego><newline46mondego>UIViewRoot view = viewHandler.createView(context, viewId);<newline46mondego>viewHandler.getViewDeclarationLanguage(context, viewId).buildView(context, view);<newline46mondego>// view should now have children.<newline46mondego>"
"8774splitHere46","12189124splitHere46","ViewDeclarationLanguage#createView()"
"8775splitHere46","12189124splitHere46","ViewHandler#createView()"
"8776splitHere46","12189124splitHere46","String viewId = <doubleQuotes46>/path/to/some.xhtml<doubleQuotes46>;<newline46mondego>FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>ViewDeclarationLanguage vdl = context.getApplication().getViewHandler().getViewDeclarationLanguage(context, viewId);<newline46mondego><newline46mondego>UIViewRoot view = vdl.createView(context, viewId);<newline46mondego>vdl.buildView(context, view);<newline46mondego>// view should now have children.<newline46mondego>"
"8777splitHere46","12189165splitHere46","/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.text.custom_templates=<?xml version\=<doubleQuotes46>1.0<doubleQuotes46> encoding\=<doubleQuotes46>UTF-8<doubleQuotes46> standalone\=<doubleQuotes46>no<doubleQuotes46>?><templates><template autoinsert\=<doubleQuotes46>true<doubleQuotes46> context\=<doubleQuotes46>java<doubleQuotes46> deleted\=<doubleQuotes46>false<doubleQuotes46> description\=<doubleQuotes46>System.out.printf<doubleQuotes46> enabled\=<doubleQuotes46>true<doubleQuotes46> name\=<doubleQuotes46>pf<doubleQuotes46>>System.out.printf(<doubleQuotes46>${Message}%n<doubleQuotes46>, ${argument1\:var}${cursor});</template></templates><newline46mondego>"
"8778splitHere46","12189193splitHere46","src/<newline46mondego>  main/<newline46mondego>    java/<newline46mondego>      com/foo/mypackage/<newline46mondego>    scala/<newline46mondego>      com/foo/mypackage/<newline46mondego>"
"8779splitHere46","12189204splitHere46","ActionEvent"
"8780splitHere46","12189204splitHere46","DocumentListener"
"8781splitHere46","12189204splitHere46","javax.swing.Timer"
"8782splitHere46","12189204splitHere46","DocumentListener"
"8783splitHere46","12189204splitHere46","DocumentFilter"
"8784splitHere46","12189204splitHere46","// In the classes variable decleration section...<newline46mondego>private JTextField rfidField;<newline46mondego><newline46mondego>// In the classes constructor or UI init method...<newline46mondego>rfidField = new JTextField(12);<newline46mondego>rfidField.getDocument().addDocumentListener(new DocumentListener() {<newline46mondego><newline46mondego>    public void handleUpdate(DocumentEvent e) {<newline46mondego><newline46mondego>        if (e.getDocument().getLength() == 10) {<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Trigger me happy...<doubleQuotes46>);<newline46mondego>            SwingUtilities.invokeLater(new Runnable() {<newline46mondego>                public void run() {<newline46mondego>                    rfidField.setText(null);<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void insertUpdate(DocumentEvent e) {<newline46mondego>        handleUpdate(e);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void removeUpdate(DocumentEvent e) {<newline46mondego>        handleUpdate(e);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void changedUpdate(DocumentEvent e) {<newline46mondego>        handleUpdate(e);<newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>// Now don't forget to add the field to your forms container ;)<newline46mondego>//////<newline46mondego>"
"8785splitHere46","12189204splitHere46","JTextField.setText(null)"
"8786splitHere46","12189249splitHere46","try-with-resource"
"8787splitHere46","12189249splitHere46","diamond operator"
"8788splitHere46","12189249splitHere46","-XX:-UseSplitVerifier"
"8789splitHere46","12189249splitHere46","junit"
"8790splitHere46","12189249splitHere46","<jvmarg>"
"8791splitHere46","12189249splitHere46","junit"
"8792splitHere46","12189254splitHere46","NullPointerException"
"8793splitHere46","12189254splitHere46","screenManager"
"8794splitHere46","12189254splitHere46","NullPointerException"
"8795splitHere46","12189254splitHere46","screenLock"
"8796splitHere46","12189274splitHere46","O(n)"
"8797splitHere46","12189274splitHere46","get()"
"8798splitHere46","12189274splitHere46","containsKey()"
"8799splitHere46","12189274splitHere46","get()"
"8800splitHere46","12189274splitHere46","charAt()"
"8801splitHere46","12189274splitHere46","substring()"
"8802splitHere46","12189274splitHere46","String"
"8803splitHere46","12189274splitHere46","Map<Character, Integer>"
"8804splitHere46","12189274splitHere46","Map<String, Integer>"
"8805splitHere46","12189274splitHere46","String"
"8806splitHere46","12189274splitHere46","public static void getCount(String name) {<newline46mondego>    Map<Character, Integer> names = new HashMap<Character, Integer>();<newline46mondego>    for(int i = 0; i < name.length(); i++) {<newline46mondego>        char c = name.charAt(i);<newline46mondego>        Integer count = names.get(c);<newline46mondego>        if (count == null) {<newline46mondego>            count = 0;<newline46mondego>        }<newline46mondego>        names.put(c, count + 1);<newline46mondego>    }<newline46mondego>    Set<Character> a = names.keySet();<newline46mondego>    for (Character t : a) {<newline46mondego>        System.out.println(t + <doubleQuotes46> Ocurred <doubleQuotes46> + names.get(t) + <doubleQuotes46> times<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8807splitHere46","12189322splitHere46","public static BeanManager getBeanManager()<newline46mondego> {<newline46mondego>    try{<newline46mondego>        InitialContext initialContext = new InitialContext();<newline46mondego>        return (BeanManager) initialContext.lookup(<doubleQuotes46>java:comp/BeanManager<doubleQuotes46>);<newline46mondego>    catch (NamingException e) {<newline46mondego>        log.error(<doubleQuotes46>Couldn't get BeanManager through JNDI<doubleQuotes46>);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"8808splitHere46","12189322splitHere46","public ImageProcessor getFacade()<newline46mondego> {<newline46mondego>    BeanManager bm = getBeanManager();<newline46mondego>    Bean<ImageProcessor> bean = (Bean<ImageProcessor>) bm.getBeans(ImageProcessor.class).iterator().next();<newline46mondego>    CreationalContext<ImageProcessor> ctx = bm.createCreationalContext(bean);<newline46mondego>    ImageProcessor ip= (ImageProcessor) bm.getReference(bean, ImageProcessor.class, ctx); // this could be inlined, but intentionally left this way<newline46mondego>    return ip;<newline46mondego> }<newline46mondego>"
"8809splitHere46","12189331splitHere46","{m,n}"
"8810splitHere46","12189331splitHere46","{}"
"8811splitHere46","12189331splitHere46","{}"
"8812splitHere46","12189331splitHere46","SUBID : ('a'..'z'|'A'..'Z'|'0'..'9'|'_')<newline46mondego>      ;<newline46mondego>ID : ('a'..'z'|'A'..'Z')<newline46mondego>     (SUBID (SUBID (SUBID (SUBID (SUBID (SUBID SUBID?)?)?)?)?)?)?<newline46mondego>   ;<newline46mondego>"
"8813splitHere46","12189362splitHere46","if(loopCount % (20 - loopCount / 100) == 0) {"
"8814splitHere46","12189362splitHere46","loopCount++;"
"8815splitHere46","12189524splitHere46","text/html"
"8816splitHere46","12189524splitHere46","text/plain"
"8817splitHere46","12189524splitHere46","<a href"
"8818splitHere46","12189803splitHere46","mvn release:prepare"
"8819splitHere46","12189803splitHere46","mvn release:perform"
"8820splitHere46","12189803splitHere46","<scm><newline46mondego>    <connection>scm:git:git://github.com/user/repo.git</connection><newline46mondego>    <developerConnection>scm:git:git@github.com:user/repo.git</developerConnection><newline46mondego>    <url>https://github.com/user/repo/tree/master/</url><newline46mondego>  </scm><newline46mondego>"
"8821splitHere46","12189803splitHere46","release:perform"
"8822splitHere46","12189927splitHere46","<newline46mondego>public abstract class PersistenceObject {<newline46mondego><newline46mondego>    private Context context;<newline46mondego>    private volatile Db4oHelper helper;<newline46mondego><newline46mondego>    public PersistenceObject() { }<newline46mondego><newline46mondego>    public PersistenceObject(Context context) {<newline46mondego>        this.context = context;<newline46mondego>    }<newline46mondego><newline46mondego>    public Context getContext() {<newline46mondego>        this.getContext();<newline46mondego>    }<newline46mondego><newline46mondego>    public final void setContext(Context context) {<newline46mondego>        if (this.context != context) {<newline46mondego>            if (this.context == null) {<newline46mondego>                onContextSet(context);<newline46mondego>            } else if(context == null) {<newline46mondego>                onContextUnset(context);<newline46mondego>            } else {<newline46mondego>                // Should you allow the context to change? <newline46mondego>                // Maybe the object is dirty, if so what to do?<newline46mondego>                onContextChanged(context, this.context);<newline46mondego>            }<newline46mondego>            this.context = context;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // we can call initialize on objects that extends this class<newline46mondego>    // this initializes the context and also call the overloaded<newline46mondego>    // initialize method to allow the classes to provided what<newline46mondego>    // need to be done after we setup the context<newline46mondego>    public final void initialize(Context context) {<newline46mondego>        this.setContext(context);<newline46mondego>        this.initialize();<newline46mondego>    }<newline46mondego><newline46mondego>    private void onContextSet(Context context) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    private void onContextUnset(Context context) {<newline46mondego>        // lets clean the helper when we set the context to null<newline46mondego>        this.helper == null;<newline46mondego>    }<newline46mondego><newline46mondego>    private void onContextChanged(Context newContext, Context oldContext) {<newline46mondego>        // Lets assume we can change the context<newline46mondego>        // Since we change the context lets set the helper to null, <newline46mondego>        // so in the next call we get a new helper with the right context<newline46mondego>        this.helper == null;<newline46mondego>    }<newline46mondego><newline46mondego>    protected final Db4oHelper getDb4oHelper() {<newline46mondego>        Db4oHelper helper = this.helper;<newline46mondego>        if (helper == null) {<newline46mondego>            synchronized(this) {<newline46mondego>                helper = this.helper;<newline46mondego>                if (helper == null) {<newline46mondego>                    helper = this.helper = new Db4oHelper(context);<newline46mondego>                    helper.db();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return helper;<newline46mondego>    }<newline46mondego><newline46mondego>    public void initialize() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8823splitHere46","12189927splitHere46","<newline46mondego>public class Category extends PersistenceObject {<newline46mondego>    private String name;<newline46mondego>    public Category() {<newline46mondego>    }<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"8824splitHere46","12189927splitHere46","<newline46mondego>public class Product extends PersistenceObject {<newline46mondego>    private Category category;<newline46mondego><newline46mondego>    public Product() {<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    public void initialize() {<newline46mondego>        Db4oHelper helper = getDb4oHelper();<newline46mondego>        // use the helper to perform whatever operations it needs<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>"
"8825splitHere46","12189927splitHere46","<newline46mondego>public final class PersistenceObjectHelper {<newline46mondego>    private PersistenceObjectHelper() { }<newline46mondego><newline46mondego>    public static void doOPERATION(PersistenceObject object) {<newline46mondego>        context = object.getContext();<newline46mondego>        if (context == null) {<newline46mondego>            // either the object was not initialized or the context was set to null<newline46mondego>            // which basically means that we dont have a way to create the helper,<newline46mondego>            // lets fail<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>Unable to create the DB4O due to lack of context<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        DB4oHelper helper = object.getDB4oHelper();<newline46mondego>        // use the helper and the object to do whatever we need<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>Category category = new Category();<newline46mondego>PersistenceObjectHelper.doOPERATION(category); // fails due to lack of context<newline46mondego><newline46mondego>Category category = new Category();<newline46mondego>category.initialize(context);<newline46mondego>PersistenceObjectHelper.doOPERATION(category); // works!<newline46mondego><newline46mondego>Category category = new Category();<newline46mondego>category.setContext(context);<newline46mondego>PersistenceObjectHelper.doOPERATION(category); // works!<newline46mondego>"
"8826splitHere46","12190047splitHere46","((new Random().nextInt() % 176) * 80) / 256.0f;<newline46mondego>"
"8827splitHere46","12190047splitHere46","Random"
"8828splitHere46","12190047splitHere46","Random r = new Random();<newline46mondego>// call r.nextInt() each time you need a new random integer<newline46mondego>double color = ((r.nextInt() % 176) * 80) / 256.0f;<newline46mondego>"
"8829splitHere46","12190087splitHere46","MyProcessData hey = new MyProcessData();<newline46mondego>"
"8830splitHere46","12190087splitHere46","MyProcessData hey = new MyProcessData(this); <newline46mondego>"
"8831splitHere46","12190087splitHere46","context.getFileDir()"
"8832splitHere46","12190160splitHere46","setAttribute"
"8833splitHere46","12190160splitHere46","setAttributeNS"
"8834splitHere46","12190160splitHere46","x"
"8835splitHere46","12190160splitHere46","y"
"8836splitHere46","12190160splitHere46","x"
"8837splitHere46","12190160splitHere46","y"
"8838splitHere46","12190160splitHere46","txtElem.setAttribute(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>30<doubleQuotes46>);<newline46mondego>txtElem.setAttribute(<doubleQuotes46>y<doubleQuotes46>, <doubleQuotes46>50<doubleQuotes46>);<newline46mondego>txtElem.setAttribute(<doubleQuotes46>style<doubleQuotes46>, <doubleQuotes46>font-family:Arial;font-size:20;stroke:#000000;fill:#00ff00;<doubleQuotes46>);<newline46mondego>"
"8839splitHere46","12190248splitHere46","executeSearchQuery(query)"
"8840splitHere46","12190248splitHere46","String query[]={}"
"8841splitHere46","12190421splitHere46","javax.net.ssl.SSLHandshakeException: <newline46mondego>  sun.security.validator.ValidatorException: PKIX path building failed:<newline46mondego>  sun.security.provider.certpath.SunCertPathBuilderException:<newline46mondego>  unable to find valid certification path to requested target<newline46mondego>"
"8842splitHere46","12190558splitHere46","return toHex(encrypted);<newline46mondego>"
"8843splitHere46","12190558splitHere46","return Convert.ToBase64String(...);<newline46mondego>"
"8844splitHere46","12190558splitHere46","SecureRandom"
"8845splitHere46","12190597splitHere46","ProcessBuilder b = new ProcessBuilder(<doubleQuotes46>/bin/sh<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, <doubleQuotes46>ls -l | grep daemon<doubleQuotes46>);<newline46mondego>"
"8846splitHere46","12190597splitHere46","static void runProcessBuilderMulti (String cmd){<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Running Command: <doubleQuotes46>+cmd.replace(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>,<doubleQuotes46>\\\<doubleQuotes46><doubleQuotes46>));<newline46mondego><newline46mondego>        try {<newline46mondego>                Process process = new ProcessBuilder(<doubleQuotes46>/bin/sh<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, cmd).start();<newline46mondego>                InputStream is = process.getInputStream();<newline46mondego>                InputStreamReader isr = new InputStreamReader(is);<newline46mondego>                BufferedReader br = new BufferedReader(isr);<newline46mondego>                String line;<newline46mondego><newline46mondego>                while ((line = br.readLine()) != null) {<newline46mondego>                        System.out.println(line);<newline46mondego>                }<newline46mondego><newline46mondego>                System.out.println(process.exitValue());<newline46mondego>        } catch (Exception e) {}<newline46mondego>   }<newline46mondego>"
"8847splitHere46","12190713splitHere46","array1"
"8848splitHere46","12190713splitHere46","null"
"8849splitHere46","12190713splitHere46","NullPointerException"
"8850splitHere46","12190713splitHere46","IOException"
"8851splitHere46","12190713splitHere46","catch (NullPointerException npe) {<newline46mondego>            npe.printStackTrace();<newline46mondego>}<newline46mondego>"
"8852splitHere46","12190713splitHere46","int z = SOME_DEFAULT_VALUE;<newline46mondego>if(arr!=null){<newline46mondego> z = arr.length;<newline46mondego>}<newline46mondego>"
"8853splitHere46","12190886splitHere46","feeds"
"8854splitHere46","12190886splitHere46","for (Feed f:feedList.list()){<newline46mondego>    xmlReply += <doubleQuotes46><feed><name><doubleQuotes46> + f.getName() + <doubleQuotes46></name><doubleQuotes46>;<newline46mondego>    xmlReply += <doubleQuotes46><uri><doubleQuotes46> + f.getURI() + <doubleQuotes46></uri></feed></feeds><doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"8855splitHere46","12190886splitHere46","for (Feed f:feedList.list()){<newline46mondego>    xmlReply += <doubleQuotes46><feed><name><doubleQuotes46> + f.getName() + <doubleQuotes46></name><doubleQuotes46>;<newline46mondego>    xmlReply += <doubleQuotes46><uri><doubleQuotes46> + f.getURI() + <doubleQuotes46></uri></feed><doubleQuotes46>;<newline46mondego>}<newline46mondego>xmlReply += <doubleQuotes46></feeds><doubleQuotes46>;<newline46mondego>"
"8856splitHere46","12190886splitHere46","String xmlReply = <doubleQuotes46><?xml version=\<doubleQuotes46>1.0\<doubleQuotes46>?><feeds><doubleQuotes46>;<newline46mondego>"
"8857splitHere46","12190890splitHere46","Math.round(double a)"
"8858splitHere46","12190890splitHere46","System.out.println(Math.round(12.51));//Yields 13<newline46mondego>System.out.println(Math.round(12.49));//Yields 12<newline46mondego>System.out.println(Math.round(12.50));//Yields 13<newline46mondego>"
"8859splitHere46","12191090splitHere46","new Thread(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        System.out.println(<doubleQuotes46>Look ma, no hands<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}).start();<newline46mondego><newline46mondego>new Thread(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        System.out.println(<doubleQuotes46>Look at me, look at me...<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}).start();<newline46mondego>"
"8860splitHere46","12191090splitHere46","ExecutorService"
"8861splitHere46","12191090splitHere46","public static void main(String[] args) throws InterruptedException {<newline46mondego>    ExecutorService service = Executors.newFixedThreadPool(2);<newline46mondego>    service.submit(new PathScanner());<newline46mondego>    service.submit(new Counter());<newline46mondego><newline46mondego>    service.shutdown();<newline46mondego>    service.awaitTermination(1, TimeUnit.DAYS);<newline46mondego><newline46mondego>    System.exit(0);<newline46mondego>}<newline46mondego><newline46mondego>public static class PathScanner implements Callable<Object> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object call() throws Exception {<newline46mondego>        scan(new File(<doubleQuotes46>C:/<doubleQuotes46>), 0);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void scan(File path, int deepth) {<newline46mondego>        if (deepth < 15) {<newline46mondego>            System.out.println(<doubleQuotes46>Scanning <doubleQuotes46> + path + <doubleQuotes46> at a deepth of <doubleQuotes46> + deepth);<newline46mondego><newline46mondego>            File[] files = path.listFiles();<newline46mondego>            for (File file : files) {<newline46mondego>                if (file.isDirectory()) {<newline46mondego>                    scan(file, ++deepth);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static class Counter implements Callable<Object> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object call() throws Exception {<newline46mondego>        for (int index = 0; index < 1000; index++) {<newline46mondego>            Thread.sleep(1);<newline46mondego>            System.out.println(index);<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8862splitHere46","12191090splitHere46","ExecutorService service = Executors.newFixedThreadPool(2);"
"8863splitHere46","12191090splitHere46","ExecutorService service = Executors.newFixedThreadPool(1);"
"8864splitHere46","12191096splitHere46","table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);<newline46mondego>// on receiving a TableModelEvent which might increase the column width<newline46mondego>// calculate new width by measuring pref of the renderer<newline46mondego>int newWidth = ... <newline46mondego>// set it as pref of the column <newline46mondego>table.getColumnModel().getColumn(0).setPreferredWidth(newWidth);<newline46mondego>"
"8865splitHere46","12191096splitHere46","table.setHorizontalScrollEnabled(true);<newline46mondego>// on receiving a TableModelEvent which might increase the column width<newline46mondego>// tell the table to re-evaluate <newline46mondego>table.packColumn(0);<newline46mondego>"
"8866splitHere46","12191201splitHere46","//when n and r are known statically<newline46mondego><newline46mondego>class Permutation<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        char[] values = {'a', 'b', 'c', 'd'};<newline46mondego>        int n = values.length;<newline46mondego>        int r = 2; <newline46mondego><newline46mondego>        int i = 0, j = 0;<newline46mondego>        for(i=0; i<n; i++)<newline46mondego>        {<newline46mondego>            for(j=0; j<n; j++)<newline46mondego>            {<newline46mondego>                System.out.println(values[j] + <doubleQuotes46> <doubleQuotes46> + values[i]);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>//when n and r are known only dynamically<newline46mondego><newline46mondego>class Permutation<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        char[] values = {'a', 'b', 'c', 'd'};<newline46mondego>        int n = values.length;<newline46mondego>        int r = 2; <newline46mondego>        int i[] = new int[r];<newline46mondego>        int rc = 0;<newline46mondego>        for(int j=0; j<Math.pow(n,r); j++)<newline46mondego>        {<newline46mondego><newline46mondego>            rc=0;<newline46mondego>            while(rc<r)<newline46mondego>            {<newline46mondego>                System.out.print(values[i[rc]] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>                rc++;<newline46mondego>            }<newline46mondego>            System.out.println();<newline46mondego>            rc = 0;<newline46mondego>            while(rc<r)<newline46mondego>            {<newline46mondego>                if(i[rc]<n-1)<newline46mondego>                {<newline46mondego>                    i[rc]++;<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>                else<newline46mondego>                {<newline46mondego>                    i[rc]=0;<newline46mondego>                }<newline46mondego>                rc++;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8867splitHere46","12191350splitHere46","android:layout_width=<doubleQuotes46>0dp<doubleQuotes46> <newline46mondego>"
"8868splitHere46","12191350splitHere46","android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>"
"8869splitHere46","12191360splitHere46","char"
"8870splitHere46","12191567splitHere46","System.exit(789);<newline46mondego>"
"8871splitHere46","12191567splitHere46","789"
"8872splitHere46","12191567splitHere46","@echo off<newline46mondego>java Test %1<newline46mondego>set exitcode=%ERRORLEVEL%<newline46mondego>echo %exitcode%<newline46mondego>"
"8873splitHere46","12191567splitHere46","java Test %1"
"8874splitHere46","12191567splitHere46","ERRORLEVEL"
"8875splitHere46","12191567splitHere46","Test.bat"
"8876splitHere46","12191567splitHere46","Test 456"
"8877splitHere46","12191567splitHere46","public class Example extends TestBase<String><newline46mondego>{<newline46mondego>     public static void  main(String[] arg){<newline46mondego>         int result = Integer.parseInt(arg[0].trim()) ;+Integer.parseInt(arg[1].trim())<newline46mondego>          System.exit(result);<newline46mondego>     }<newline46mondego><newline46mondego>}<newline46mondego>"
"8878splitHere46","12191567splitHere46","@echo off<newline46mondego>java Example %1 %2<newline46mondego>set exitcode=%ERRORLEVEL%<newline46mondego>echo %exitcode%<newline46mondego>"
"8879splitHere46","12191567splitHere46","Example 111 222<newline46mondego>"
"8880splitHere46","12191578splitHere46","contains"
"8881splitHere46","12191578splitHere46","HashSet"
"8882splitHere46","12191578splitHere46","HashSet"
"8883splitHere46","12191578splitHere46","hashCode"
"8884splitHere46","12191578splitHere46","hashCode"
"8885splitHere46","12191578splitHere46","HashSet#contains"
"8886splitHere46","12191578splitHere46","HashMap"
"8887splitHere46","12191578splitHere46","final Entry<K,V> getEntry(Object key) {<newline46mondego>    int hash = (key == null) ? 0 : hash(key.hashCode());<newline46mondego>    for (Entry<K,V> e = table[indexFor(hash, table.length)];<newline46mondego>         e != null;<newline46mondego>         e = e.next) {<newline46mondego>        Object k;<newline46mondego>        if (e.hash == hash &&<newline46mondego>            ((k = e.key) == key || (key != null && key.equals(k))))<newline46mondego>            return e;<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"8888splitHere46","12191578splitHere46","HashMap"
"8889splitHere46","12191578splitHere46","HashSet"
"8890splitHere46","12191578splitHere46","contains"
"8891splitHere46","12191674splitHere46","{unique:true}"
"8892splitHere46","12191674splitHere46","// everyone's username must be unique:<newline46mondego>db.users.ensureIndex({email:1},{unique:true});<newline46mondego>"
"8893splitHere46","12191674splitHere46","null"
"8894splitHere46","12191674splitHere46","sparse"
"8895splitHere46","12191674splitHere46","// everyone's username must be unique,<newline46mondego>//but there can be multiple users with no email field or a null email:<newline46mondego>db.users.ensureIndex({email:1},{unique:true, sparse:true});<newline46mondego>"
"8896splitHere46","12191674splitHere46","BasicDBObject query = new BasicDBObject(<doubleQuotes46>email<doubleQuotes46>, 1)<newline46mondego>                                .append(<doubleQuotes46>unique<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>coll.createIndex(query);<newline46mondego>"
"8897splitHere46","12191733splitHere46","// SocialAuth Component<newline46mondego>SocialAuthAdapter adapter;<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.main);<newline46mondego><newline46mondego>    // Welcome Message<newline46mondego>    TextView textview = (TextView)findViewById(R.id.text);<newline46mondego>    textview.setText(<doubleQuotes46>Title<doubleQuotes46>);<newline46mondego><newline46mondego>    //Create Your Own Share Button<newline46mondego>    Button share = (Button)findViewById(R.id.sharebutton);<newline46mondego>    share.setText(<doubleQuotes46>Share<doubleQuotes46>);<newline46mondego>    share.setTextColor(Color.WHITE);<newline46mondego>    share.setBackgroundResource(R.drawable.button_gradient);<newline46mondego><newline46mondego>    // Add it to Library<newline46mondego>    adapter = new SocialAuthAdapter(new ResponseListener());<newline46mondego><newline46mondego>    // Add providers<newline46mondego><newline46mondego>    adapter.addProvider(Provider.TWITTER, R.drawable.twitter);<newline46mondego><newline46mondego>   //before that import library which is given by socialauth in link given below<newline46mondego>    adapter.enable(share);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * Listens Response from Library<newline46mondego> * <newline46mondego> */<newline46mondego><newline46mondego>private final class ResponseListener implements DialogListener <newline46mondego>{<newline46mondego>    public void onComplete(Bundle values) {<newline46mondego><newline46mondego>        // Variable to receive message status<newline46mondego><newline46mondego>        Log.d(<doubleQuotes46>ShareButton<doubleQuotes46> , <doubleQuotes46>Authentication Successful<doubleQuotes46>);<newline46mondego><newline46mondego>        // Get name of provider after authentication<newline46mondego>        String providerName = values.getString(SocialAuthAdapter.PROVIDER);<newline46mondego>        Log.d(<doubleQuotes46>ShareButton<doubleQuotes46>, <doubleQuotes46>Provider Name = <doubleQuotes46> + providerName);<newline46mondego><newline46mondego>        adapter.updateStatus(<doubleQuotes46>your message|link<doubleQuotes46> + System.currentTimeMillis());<newline46mondego>        Toast.makeText(ShareButtonActivity.this, <doubleQuotes46>Message posted on <doubleQuotes46> + providerName, Toast.LENGTH_SHORT).show();       <newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego>     public void onError(SocialAuthError error) {<newline46mondego>         Log.d(<doubleQuotes46>ShareButton<doubleQuotes46> , <doubleQuotes46>Authentication Error<doubleQuotes46>);<newline46mondego>     }<newline46mondego><newline46mondego>     public void onCancel() {<newline46mondego>         Log.d(<doubleQuotes46>ShareButton<doubleQuotes46> , <doubleQuotes46>Authentication Cancelled<doubleQuotes46>);<newline46mondego>     }<newline46mondego><newline46mondego> }<newline46mondego>"
"8898splitHere46","12191820splitHere46","<expiration-cache>0</expiration-cache>"
"8899splitHere46","12191853splitHere46","BigInteger ip = new BigInteger(1,InetAddress.getByName(<doubleQuotes46>134.115.64.1<doubleQuotes46>).getAddress());<newline46mondego>// or<newline46mondego>long ip = InetAddress.getByName(<doubleQuotes46>134.115.64.1<doubleQuotes46>).hashCode() & 0xffffffffL;<newline46mondego><newline46mondego>System.out.println(ip);<newline46mondego>"
"8900splitHere46","12191853splitHere46","2255699969<newline46mondego>"
"8901splitHere46","12191922splitHere46","${pageContext.request.contextPath}"
"8902splitHere46","12191922splitHere46","${pageContext.request.contextPath}"
"8903splitHere46","12191922splitHere46","<base>"
"8904splitHere46","12192052splitHere46","ls2Handler = new ListSelectionListener(){<newline46mondego>        @Override<newline46mondego>            public void valueChanged(ListSelectionEvent e) {<newline46mondego>          if (e.getValueIsAdjusting() == false) {<newline46mondego><newline46mondego>              if (ownBookList.getSelectedValue()!=null) {<newline46mondego>                  userlist.clearSelection();<newline46mondego>                  Global.selectedUser =  ownBookList.getSelectedValue().toString();<newline46mondego>                  Global.selectedIndex = ownBookList.getSelectedIndex();<newline46mondego>                  updateFields(Global.selectedUser);<newline46mondego>              }<newline46mondego><newline46mondego>                else {<newline46mondego><newline46mondego>                    }<newline46mondego><newline46mondego>          }<newline46mondego><newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>    lsHandler = new ListSelectionListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void valueChanged(ListSelectionEvent e) {<newline46mondego>              if (e.getValueIsAdjusting() == false) {<newline46mondego><newline46mondego>                  if (userlist.getSelectedValue()!=null) {<newline46mondego>                     ownBookList.clearSelection();<newline46mondego>                      Global.selectedUser =  userlist.getSelectedValue().toString();<newline46mondego>                      Global.selectedIndex = userlist.getSelectedIndex();<newline46mondego>                      updateFields(Global.selectedUser);<newline46mondego><newline46mondego><newline46mondego>                  }<newline46mondego>                  else {<newline46mondego><newline46mondego>                  }<newline46mondego>              }<newline46mondego><newline46mondego><newline46mondego>        }<newline46mondego>        };<newline46mondego>"
"8905splitHere46","12192065splitHere46","filteredValue=<doubleQuotes46>#{masterSearch.filterMasterSearchResult}<doubleQuotes46>"
"8906splitHere46","12192072splitHere46","<paragraph>"
"8907splitHere46","12192072splitHere46","Node.TEXT_NODE"
"8908splitHere46","12192072splitHere46","public static String getFirstLevelTextContent(Node node) {<newline46mondego>    NodeList list = node.getChildNodes();<newline46mondego>    StringBuilder textContent = new StringBuilder();<newline46mondego>    for (int i = 0; i < list.getLength(); ++i) {<newline46mondego>        Node child = list.item(i);<newline46mondego>        if (child.getNodeType() == Node.TEXT_NODE)<newline46mondego>            textContent.append(child.getTextContent());<newline46mondego>    }<newline46mondego>    return textContent.toString();<newline46mondego>}<newline46mondego>"
"8909splitHere46","12192072splitHere46","String str = <doubleQuotes46><paragraph><doubleQuotes46> + //<newline46mondego>        <doubleQuotes46><link>XML</link><doubleQuotes46> + //<newline46mondego>        <doubleQuotes46> is a <doubleQuotes46> + //<newline46mondego>        <doubleQuotes46><strong>browser based XML editor</strong><doubleQuotes46> + //<newline46mondego>        <doubleQuotes46>editor allows users to edit XML data in an intuitive word processor.<doubleQuotes46> + //<newline46mondego>        <doubleQuotes46></paragraph><doubleQuotes46>;<newline46mondego>Document domDoc = null;<newline46mondego>try {<newline46mondego>    DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder docBuilder = docFactory.newDocumentBuilder();<newline46mondego>    ByteArrayInputStream bis = new ByteArrayInputStream(str.getBytes());<newline46mondego>    domDoc = docBuilder.parse(bis);<newline46mondego>} catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>DocumentTraversal traversal = (DocumentTraversal) domDoc;<newline46mondego>NodeIterator iterator = traversal.createNodeIterator(domDoc.getDocumentElement(), NodeFilter.SHOW_ELEMENT, null, true);<newline46mondego>for (Node n = iterator.nextNode(); n != null; n = iterator.nextNode()) {<newline46mondego>    String tagname = ((Element) n).getTagName();<newline46mondego>    System.out.println(tagname + <doubleQuotes46>=<doubleQuotes46> + getFirstLevelTextContent(n));<newline46mondego>}<newline46mondego>"
"8910splitHere46","12192072splitHere46","paragraph= is a editor allows users to edit XML data in an intuitive word processor.<newline46mondego>link=XML<newline46mondego>strong=browser based XML editor<newline46mondego>"
"8911splitHere46","12192072splitHere46","Node"
"8912splitHere46","12192072splitHere46","Element"
"8913splitHere46","12192177splitHere46","javax.swing"
"8914splitHere46","12192177splitHere46","java.io"
"8915splitHere46","12192177splitHere46","java.util.Locale"
"8916splitHere46","12192177splitHere46","FilenameFilter"
"8917splitHere46","12192177splitHere46","java.io"
"8918splitHere46","12192177splitHere46","com.google.gwt.thirdparty.guava.common.io.PatternFilenameFilter"
"8919splitHere46","12192177splitHere46","java.io.FilenameFilter"
"8920splitHere46","12192177splitHere46","FileNameExtensionFilter"
"8921splitHere46","12192223splitHere46","null"
"8922splitHere46","12192223splitHere46","String[]params = new String[] {<newline46mondego>        <doubleQuotes46>/runScp.expect<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>/runScp.expect<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>root@10.21.21.21:/tmp<doubleQuotes46>,<newline46mondego>        <doubleQuotes46><doubleQuotes46>,<newline46mondego>        <doubleQuotes46><doubleQuotes46>+22,<newline46mondego>        <doubleQuotes46><doubleQuotes46>+600,<newline46mondego>        <doubleQuotes46><doubleQuotes46>+2405,<newline46mondego>        <doubleQuotes46><doubleQuotes46>+<doubleQuotes46>/var/db/host/privatekeys/<doubleQuotes46>+<doubleQuotes46>newsshcred<doubleQuotes46><newline46mondego>        };<newline46mondego>"
"8923splitHere46","12192360splitHere46","//(assuming you have a ResultSet named RS)<newline46mondego>PreparedStatement psMySql = connMySql.prepareStatement(<doubleQuotes46>select myBlob from myTable where ...<doubleQuotes46>);<newline46mondego>Blob blob = rs.getBlob(<doubleQuotes46>myBlob<doubleQuotes46>);<newline46mondego><newline46mondego>int blobLength = (int) blob.length();  <newline46mondego>byte[] blobAsBytes = blob.getBytes(1, blobLength);<newline46mondego><newline46mondego>PreparedStatement psPostresql = connPostgresql.prepareStatement(<doubleQuotes46>INSERT INTO myNewTable VALUES (?, ?)<doubleQuotes46>);<newline46mondego>psPostresql.setString(1, myId);<newline46mondego>psPostresql.setBytes(2, blobAsBytes);<newline46mondego>psPostresql.executeUpdate();<newline46mondego><newline46mondego>//release the blob and free up memory.<newline46mondego>blob.free();<newline46mondego>"
"8924splitHere46","12192422splitHere46","null"
"8925splitHere46","12192422splitHere46","Validate.notNull(templateIS, <doubleQuotes46>%s not found in classpath<doubleQuotes46>, REPORT_DESIGN)"
"8926splitHere46","12192458splitHere46","</p><newline46mondego><newline46mondego><pre><code>function callSelectAll(selectName)  <newline46mondego>{   <newline46mondego>    var i;  <newline46mondego>    for(i=0;i<...) {  <newline46mondego>        document.getElementById(selectName).options[i].selected = true;<newline46mondego>    }  <newline46mondego>"
"8927splitHere46","12192458splitHere46","String[]"
"8928splitHere46","12192458splitHere46","html:select"
"8929splitHere46","12192458splitHere46","html:select"
"8930splitHere46","12192468splitHere46","ArrayList<Integer> userselected  = new  ArrayList<Integer>();<newline46mondego>userselected.add(R.id.textview1); //To add id.<newline46mondego>int noOfElement = userselected.size(); //to get size<newline46mondego>"
"8931splitHere46","12192512splitHere46","Caption                                        CSName    Description      HotFixID   InstalledBy          InstalledOn<newline46mondego>http://go.microsoft.com/fwlink/?LinkId=161784  Abhishek  Update           KB971033   NT AUTHORITY\SYSTEM  3/15/2012<newline46mondego>http://support.microsoft.com/?kbid=2032276     Abhishek  Security Update  KB2032276  NT AUTHORITY\SYSTEM  3/15/2012<newline46mondego>"
"8932splitHere46","12192512splitHere46","\s{2,}"
"8933splitHere46","12192512splitHere46","String result = <doubleQuotes46>...<doubleQuotes46>;<newline46mondego>for (String line : result.split(<doubleQuotes46>\n<doubleQuotes46>)) {<newline46mondego>     System.out.println(<doubleQuotes46>-> <doubleQuotes46> + line);<newline46mondego>     for (String column : line.split(<doubleQuotes46>\\s{2,}<doubleQuotes46>)) {<newline46mondego>         System.out.println(<doubleQuotes46>  => [<doubleQuotes46> + column.trim() + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"8934splitHere46","12192512splitHere46","-> Caption                                        CSName    Description      HotFixID   InstalledBy          InstalledOn<newline46mondego>  => [Caption]<newline46mondego>  => [CSName]<newline46mondego>  => [Description]<newline46mondego>  => [HotFixID]<newline46mondego>  => [InstalledBy]<newline46mondego>  => [InstalledOn]<newline46mondego>-> http://go.microsoft.com/fwlink/?LinkId=161784  Abhishek  Update           KB971033   NT AUTHORITY\SYSTEM  3/15/2012<newline46mondego>  => [http://go.microsoft.com/fwlink/?LinkId=161784]<newline46mondego>  => [Abhishek]<newline46mondego>  => [Update]<newline46mondego>  => [KB971033]<newline46mondego>  => [NT AUTHORITY\SYSTEM]<newline46mondego>  => [3/15/2012]<newline46mondego>-> http://support.microsoft.com/?kbid=2032276     Abhishek  Security Update  KB2032276  NT AUTHORITY\SYSTEM  3/15/2012<newline46mondego>  => [http://support.microsoft.com/?kbid=2032276]<newline46mondego>  => [Abhishek]<newline46mondego>  => [Security Update]<newline46mondego>  => [KB2032276]<newline46mondego>  => [NT AUTHORITY\SYSTEM]<newline46mondego>  => [3/15/2012]<newline46mondego>"
"8935splitHere46","12192512splitHere46","/format:csv"
"8936splitHere46","12192512splitHere46","wmic"
"8937splitHere46","12192517splitHere46","libs"
"8938splitHere46","12192517splitHere46","lib"
"8939splitHere46","12192517splitHere46","ADT-17"
"8940splitHere46","12192753splitHere46","<a4j:commandButton image=<doubleQuotes46>/default/Add1.png<doubleQuotes46> <newline46mondego>       reRender=<doubleQuotes46>someComponentId(s) on the parent page<doubleQuotes46> <newline46mondego>            oncomplete=<doubleQuotes46>Richfaces.hideModalPanel('selectMaterial');<doubleQuotes46>><newline46mondego>"
"8941splitHere46","12192816splitHere46","int i = 1234;<newline46mondego>char[] chars = (<doubleQuotes46><doubleQuotes46> + i).toCharArray();<newline46mondego>"
"8942splitHere46","12192829splitHere46","Map"
"8943splitHere46","12192829splitHere46","Map<String, Date>"
"8944splitHere46","12192829splitHere46","Comparator"
"8945splitHere46","12192829splitHere46","class ValueComparator implements Comparator<String> {<newline46mondego><newline46mondego>    Map<String, Date> map;<newline46mondego>    public ValueComparator(Map<String, Date> map) {<newline46mondego>        this.map = map;<newline46mondego>    }<newline46mondego><newline46mondego>    public int compare(String a, String b) {<newline46mondego>        return map.get(a).compareTo(map.get(b));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8946splitHere46","12192829splitHere46","Map<String, Date> sorted = new TreeMap<String, Date>(new ValueComparator(unsortedMap));<newline46mondego>sorted.putAll(unsortedMap);<newline46mondego>"
"8947splitHere46","12192840splitHere46","if (lineBelongsToNewGroup){<newline46mondego>     reader.unread(lastLine.toCharArray());<newline46mondego>     // probably also unread a newline<newline46mondego> }<newline46mondego>"
"8948splitHere46","12192968splitHere46","String handler = <doubleQuotes46><doubleQuotes46>; <newline46mondego>String xmlStringReply = <doubleQuotes46><doubleQuotes46>;<newline46mondego>for (Feed f: feeds) {<newline46mondego>    feedList.add(f);<newline46mondego>    handler = <doubleQuotes46>You have successfully added: \n<doubleQuotes46>; <newline46mondego>    xmlStringReply = <doubleQuotes46><doubleQuotes46> + f + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>feedList.save(feedFile);<newline46mondego>return handler + xmlStringReply;<newline46mondego>"
"8949splitHere46","12192968splitHere46","StringBuilder xmlStringReply = new StringBuilder(<doubleQuotes46>You have successfully added: \n<doubleQuotes46>);<newline46mondego>for (Feed f: feeds) {<newline46mondego>    feedList.add(f);<newline46mondego>    xmlStringReply.append(f + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>feedList.save(feedFile);<newline46mondego>return xmlStringReply.toString();<newline46mondego>"
"8950splitHere46","12193043splitHere46","Mem"
"8951splitHere46","12193043splitHere46","-/+ buffers/cache"
"8952splitHere46","12193105splitHere46","GridData::exclude"
"8953splitHere46","12193105splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Button;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Event;<newline46mondego>import org.eclipse.swt.widgets.Label;<newline46mondego>import org.eclipse.swt.widgets.Listener;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego><newline46mondego>public class HideLabel <newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Display display = new Display();<newline46mondego>        final Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout(1, false));<newline46mondego>        shell.setText(<doubleQuotes46>Hide Label<doubleQuotes46>);<newline46mondego><newline46mondego>        Label label = new Label(shell, SWT.NONE);<newline46mondego>        label.setText(<doubleQuotes46>Label 1<doubleQuotes46>);<newline46mondego><newline46mondego>        final Label bHidden = new Label(shell, SWT.NONE);<newline46mondego>        bHidden.setText(<doubleQuotes46>Label 2<doubleQuotes46>);<newline46mondego>        GridData data = new GridData();<newline46mondego>        data.exclude = false;<newline46mondego>        data.horizontalAlignment = SWT.FILL;<newline46mondego>        bHidden.setLayoutData(data);<newline46mondego><newline46mondego>        label = new Label(shell, SWT.NONE);<newline46mondego>        label.setText(<doubleQuotes46>Label 3<doubleQuotes46>);<newline46mondego><newline46mondego>        Button button = new Button(shell, SWT.CHECK);<newline46mondego>        button.setText(<doubleQuotes46>hide<doubleQuotes46>);<newline46mondego>        button.addListener(SWT.Selection, new Listener() {<newline46mondego>            public void handleEvent(Event e) {<newline46mondego>                Button b = (Button) e.widget;<newline46mondego>                GridData data = (GridData) bHidden.getLayoutData();<newline46mondego>                data.exclude = b.getSelection();<newline46mondego>                bHidden.setVisible(!data.exclude);<newline46mondego>                shell.layout(false);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        shell.setSize(200, 200);<newline46mondego>        shell.open();<newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8954splitHere46","12193142splitHere46","Thread.currentThread().getName()"
"8955splitHere46","12193142splitHere46","ThreadLocal"
"8956splitHere46","12193142splitHere46","servletRequest.setAttribute(..)"
"8957splitHere46","12193204splitHere46","doc id"
"8958splitHere46","12193333splitHere46","if (e.getSource() == myTrumpsAndMessages.jTable1.getSelectionModel() <newline46mondego>        && myTrumpsAndMessages.jTable1.getRowSelectionAllowed()<newline46mondego>        // typo/misunderstanding or feature? doing stuff only when adjusting <newline46mondego>        && e.getValueIsAdjusting()) <newline46mondego>"
"8959splitHere46","12193536splitHere46","executor.shutdown();<newline46mondego>executor.awaitTermination(Integer.MAX_VALUE, TimeUnit.SECONDS);<newline46mondego>"
"8960splitHere46","12193536splitHere46","shutdown"
"8961splitHere46","12193536splitHere46","awaitTermination"
"8962splitHere46","12193561splitHere46","<ScrollView<newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>300dp<doubleQuotes46>><newline46mondego><newline46mondego><TextView<newline46mondego>    android:id=<doubleQuotes46>@+id/tvConditionBody<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>/><newline46mondego><newline46mondego></ScrollView><newline46mondego>"
"8963splitHere46","12193676splitHere46","ont.hasWife=model.createProperty(<doubleQuotes46>your namespace URI here<doubleQuotes46>,<doubleQuotes46>FAMhasWife<doubleQuotes46>);<newline46mondego><newline46mondego>StmtIterator iter = onto.model.listStatements(null,onto.hasWife,(RDFNode)null);  <newline46mondego>    while (iter.hasNext()) {<newline46mondego>        Statement stmt = iter.nextStatement();  <newline46mondego><newline46mondego>           System.out.print(stmt.getObject().toString());<newline46mondego>  }<newline46mondego>"
"8964splitHere46","12193788splitHere46","Comparator"
"8965splitHere46","12193870splitHere46","//Use a Callable instead of Runnable to be able to throw your exception<newline46mondego>Callable<Void> c = new Callable<Void> () {<newline46mondego>    public Void call() throws YourException {<newline46mondego>        //run your task here which can throw YourException<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//Use an ExecutorService to manage your threads and monitor the futures<newline46mondego>ExecutorService executor = Executors.newCachedThreadPool();<newline46mondego>List<Future> futures = new ArrayList<Future> ();<newline46mondego><newline46mondego>//Submit your tasks (equivalent to new Thread(c).start();)<newline46mondego>for (int i = 0; i < 5; i++) {<newline46mondego>    futures.add(executor.submit(c));<newline46mondego>}<newline46mondego><newline46mondego>//Monitor the future to check if your tasks threw exceptions<newline46mondego>for (Future f : futures) {<newline46mondego>    try {<newline46mondego>        f.get();<newline46mondego>    } catch (ExecutionException e) {<newline46mondego>        //encountered an exception in your task => stop submitting tasks<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8966splitHere46","12193903splitHere46","null"
"8967splitHere46","12193903splitHere46","for(int key: list) {<newline46mondego>    Integer count = map.get(key);<newline46mondego>    if (count == null) count = 0;<newline46mondego>    map.put(key, count+1);<newline46mondego>}<newline46mondego>"
"8968splitHere46","12193948splitHere46","http://download.finance.yahoo.com/d/quotes.csv?s=BOBSL.BO,JAIPAN.BO,SANGHIIN.BO&f=snl1d1t1ohgdrx<newline46mondego>"
"8969splitHere46","12193948splitHere46","SOUTHINDBSL.BO"
"8970splitHere46","12194027splitHere46","password"
"8971splitHere46","12194027splitHere46","char[]"
"8972splitHere46","12194027splitHere46","String"
"8973splitHere46","12194069splitHere46","CardLayout"
"8974splitHere46","12194069splitHere46","Component"
"8975splitHere46","12194069splitHere46","Component"
"8976splitHere46","12194069splitHere46","CardLayout"
"8977splitHere46","12194069splitHere46","CardLayout"
"8978splitHere46","12194069splitHere46","FlowLayout"
"8979splitHere46","12194121splitHere46","public static String regexpluschar = <doubleQuotes46>^\\+[\\w <]<doubleQuotes46>;<newline46mondego>public static String regexpluspluschar = <doubleQuotes46>^\\+{2}[\\w <]<doubleQuotes46>;<newline46mondego>public static String regexpluspluspluschar = <doubleQuotes46>^\\+{3}[\\w <]<doubleQuotes46>;<newline46mondego>"
"8980splitHere46","12194121splitHere46","public static String regexpluschar = <doubleQuotes46>^\\+[^\\+]<doubleQuotes46>;<newline46mondego>public static String regexpluspluschar = <doubleQuotes46>^\\+{2}[^\\+]<doubleQuotes46>;<newline46mondego>public static String regexpluspluspluschar = <doubleQuotes46>^\\+{3}[^\\+]<doubleQuotes46>;<newline46mondego>"
"8981splitHere46","12194121splitHere46","String toChange = getItem(i);<newline46mondego>setItemFiltered(i, toChange);<newline46mondego>"
"8982splitHere46","12194121splitHere46","Filtering 3 +s.<newline46mondego>+++Adam is working very well.  is in the 3 + filter.<newline46mondego>Filtering 2 +s.<newline46mondego>++Adam is working well.  is in the 2 + filter.<newline46mondego>Filtering 1 +.<newline46mondego>+Adam is doing OK.  is in the 1 + filter.<newline46mondego>"
"8983splitHere46","12194121splitHere46","setItemFiltered"
"8984splitHere46","12194151splitHere46","@Component(value = <doubleQuotes46>appName<doubleQuotes46>)<newline46mondego>@Scope(value = <doubleQuotes46>session<doubleQuotes46>)<newline46mondego>class AppName extends Application {<newline46mondego>....<newline46mondego>}<newline46mondego>"
"8985splitHere46","12194151splitHere46","<init-param><newline46mondego>        <param-name>applicationBean</param-name><newline46mondego>        <param-value>appName</param-value><newline46mondego>    </init-param><newline46mondego>"
"8986splitHere46","12194151splitHere46","<init-param><newline46mondego>        <description><newline46mondego>        Vaadin application class to start</description><newline46mondego>        <param-name>applicationBeanName</param-name><newline46mondego>        <param-value>cs.hm.edu.kreipl.crs.frontend.MainApplication</param-value><newline46mondego>    </init-param><newline46mondego>"
"8987splitHere46","12194261splitHere46","shell.open()"
"8988splitHere46","12194261splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.browser.Browser;<newline46mondego>import org.eclipse.swt.browser.LocationEvent;<newline46mondego>import org.eclipse.swt.browser.LocationListener;<newline46mondego>import org.eclipse.swt.browser.ProgressEvent;<newline46mondego>import org.eclipse.swt.browser.ProgressListener;<newline46mondego>import org.eclipse.swt.graphics.Color;<newline46mondego>import org.eclipse.swt.graphics.GC;<newline46mondego>import org.eclipse.swt.graphics.Image;<newline46mondego>import org.eclipse.swt.graphics.ImageData;<newline46mondego>import org.eclipse.swt.graphics.ImageLoader;<newline46mondego>import org.eclipse.swt.graphics.RGB;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego><newline46mondego>public class HeadLess <newline46mondego>{<newline46mondego>    public static void main(String[] args) {<newline46mondego>        new HeadLess().start();<newline46mondego>    }<newline46mondego><newline46mondego>    public void start()<newline46mondego>    {<newline46mondego>        Display display = new Display();<newline46mondego>        final Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout(1, true));<newline46mondego>        GridData gridData = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>        shell.setLayoutData(gridData);<newline46mondego><newline46mondego>        // Create browser and listen for events in headless mode<newline46mondego>        final Browser browser = new Browser(shell, SWT.NONE);<newline46mondego>        gridData = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>        browser.setLayoutData(gridData);<newline46mondego><newline46mondego>        browser.setUrl(<doubleQuotes46>http://stackoverflow.com/questions/12193231/is-there-an-equivalent-to-java-awt-headless-true-for-swt<doubleQuotes46>);<newline46mondego>        browser.addProgressListener(new ProgressListener() {<newline46mondego>            public void completed(ProgressEvent event) {<newline46mondego>                System.out.println(browser.getText());<newline46mondego>                shell.close();<newline46mondego>            }<newline46mondego>            public void changed(ProgressEvent event) {<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        browser.addLocationListener(new LocationListener() {<newline46mondego>            public void changing(LocationEvent event) {<newline46mondego>                System.out.println(event.location);<newline46mondego>            }<newline46mondego>            public void changed(LocationEvent event) {<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        // Creating image in headless mode !!<newline46mondego>        Color red = new Color(display, new RGB(255, 0, 0));<newline46mondego>        Image image = new Image(display, 100, 100);<newline46mondego>        GC gc = new GC(image);<newline46mondego>        gc.setBackground(red);<newline46mondego>        gc.fillRectangle(image.getBounds());<newline46mondego>        gc.dispose();<newline46mondego><newline46mondego>        ImageLoader loader = new ImageLoader();<newline46mondego>        loader.data = new ImageData[] {image.getImageData()};<newline46mondego>        loader.save(<doubleQuotes46>swt.png<doubleQuotes46>, SWT.IMAGE_PNG);<newline46mondego><newline46mondego>        red.dispose();<newline46mondego>        image.dispose();<newline46mondego><newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego><newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8989splitHere46","12194327splitHere46","onRetainNonConfigurationInstance"
"8990splitHere46","12194330splitHere46","FileReader r = new FileReader(mypath + <doubleQuotes46>/start.txt<doubleQuotes46>);<newline46mondego>// or<newline46mondego>FileReader r = new FileReader(new File(mypath, <doubleQuotes46>start.txt<doubleQuotes46>));<newline46mondego>"
"8991splitHere46","12194330splitHere46","BufferedReader br = new BufferedReader(new FileReader(new File(mypath, <doubleQuotes46>start.txt<doubleQuotes46>)));<newline46mondego>for(String line; (line = br.readLine()) != null; ) {<newline46mondego>    // process line<newline46mondego>}<newline46mondego>"
"8992splitHere46","12194413splitHere46","Z"
"8993splitHere46","12194413splitHere46","<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'<doubleQuotes46>"
"8994splitHere46","12194570splitHere46","mvn clean"
"8995splitHere46","12194628splitHere46","setMinimumSize(new Dimension(200, Integer.MAX_VALUE));<newline46mondego>    addComponentListener(new ComponentAdapter() {<newline46mondego>        @Override<newline46mondego>        public void componentResized(ComponentEvent e) {<newline46mondego>            Dimension size = getSize();<newline46mondego>            size.width = 200;<newline46mondego>            setSize(size);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"8996splitHere46","12194681splitHere46","setDefaultLookAndFeelDecorated"
"8997splitHere46","12194789splitHere46","MyObjectProto.MyObject o = MyObjectProto.MyObject.newBuilder()<newline46mondego>    .addAllResults(listOfCalculations)<newline46mondego>    .build();<newline46mondego>"
"8998splitHere46","12194789splitHere46","MyObjectProto.MyObject o = MyObjectProto.MyObject.newBuilder()<newline46mondego>    .addResult(calculationResult)<newline46mondego>    .build();<newline46mondego>"
"8999splitHere46","12194835splitHere46","for each retrieved user<newline46mondego>    find every comments for this user<newline46mondego>"
"9000splitHere46","12194835splitHere46","for each comment<newline46mondego>    DBRef::fetch(comment.user)<newline46mondego>"
"9001splitHere46","12194900splitHere46","<xsd:import namespace=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46>/><newline46mondego><xsd:import namespace=<doubleQuotes46>http://www.springframework.org/schema/tool<doubleQuotes46>/><newline46mondego>"
"9002splitHere46","12195001splitHere46","LinkedList"
"9003splitHere46","12195001splitHere46","ConcurrentLinkedQueue"
"9004splitHere46","12195001splitHere46","take()"
"9005splitHere46","12195170splitHere46","if(reservation.getInstances().getPublicIpAddress()!= null)<newline46mondego>"
"9006splitHere46","12195172splitHere46","String  titolo_da_inserire"
"9007splitHere46","12195172splitHere46","String titolo_da_inserire = <doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"9008splitHere46","12195172splitHere46","subString()"
"9009splitHere46","12195172splitHere46","if(titolo_da_inserire.length() >= 35)<newline46mondego> titolo_da_inserire = titolo_da_inserire.substring(0,35)+<doubleQuotes46>...<doubleQuotes46>;<newline46mondego>else<newline46mondego> titolo_da_inserire = titolo_da_inserire.substring(0,titolo_da_inserire.length())+<doubleQuotes46>...<doubleQuotes46>;<newline46mondego>"
"9010splitHere46","12195178splitHere46","try{<newline46mondego>    receiver = (BroadcastReceiver) receiverClass.newInstance();<newline46mondego>}catch(Exception e){<newline46mondego>    //do stuff<newline46mondego>}<newline46mondego>"
"9011splitHere46","12195178splitHere46","MyTools.startBroadcastReceiver(context, MyBroadcastReceiver.class, MyBroadcastReceiver.TAG);<newline46mondego>"
"9012splitHere46","12195186splitHere46","sc = new ScrolledComposite(parent, SWT.BORDER_SOLID | SWT.V_SCROLL);"
"9013splitHere46","12195186splitHere46","SWT.Resize"
"9014splitHere46","12195186splitHere46","image.png"
"9015splitHere46","12195186splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.custom.ScrolledComposite;<newline46mondego>import org.eclipse.swt.graphics.Color;<newline46mondego>import org.eclipse.swt.graphics.GC;<newline46mondego>import org.eclipse.swt.graphics.Image;<newline46mondego>import org.eclipse.swt.graphics.Rectangle;<newline46mondego>import org.eclipse.swt.layout.FillLayout;<newline46mondego>import org.eclipse.swt.layout.FormLayout;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Composite;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Event;<newline46mondego>import org.eclipse.swt.widgets.Label;<newline46mondego>import org.eclipse.swt.widgets.Listener;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego><newline46mondego>public class ImageGradientTest {<newline46mondego><newline46mondego>    private Image imageGradient;<newline46mondego>    private Image image;<newline46mondego><newline46mondego>    private void createComponents(Shell parent) <newline46mondego>    {<newline46mondego>        ScrolledComposite sc = new ScrolledComposite(parent, SWT.BORDER_SOLID | SWT.V_SCROLL);<newline46mondego>        sc.setExpandHorizontal(true);<newline46mondego>        sc.setExpandVertical(true);<newline46mondego><newline46mondego>        sc.setAlwaysShowScrollBars(true);<newline46mondego>        sc.setMinWidth(0);<newline46mondego><newline46mondego>        GridData gd = new GridData(GridData.FILL, GridData.FILL, true, true);<newline46mondego>        sc.setLayoutData(gd);<newline46mondego>        sc.setLayout(new GridLayout(1, false));<newline46mondego><newline46mondego><newline46mondego>        final Composite composite = new Composite(sc, SWT.NONE);<newline46mondego>        composite.addListener(SWT.Resize, new Listener() {<newline46mondego>            public void handleEvent(Event e) {<newline46mondego>                changeImage(composite);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        composite.setLayout(new FormLayout());<newline46mondego>        composite.setBackgroundMode(SWT.INHERIT_DEFAULT);<newline46mondego><newline46mondego>        Label label = new Label(composite, SWT.None);<newline46mondego>        label.setText(<doubleQuotes46>Hello, World!<doubleQuotes46>);<newline46mondego><newline46mondego>        sc.setContent(composite);<newline46mondego>        sc.layout();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private void changeImage(Composite composite) <newline46mondego>    {<newline46mondego>        Image oldImage = imageGradient;<newline46mondego><newline46mondego>        Display display = composite.getDisplay();<newline46mondego>        Rectangle rect = composite.getClientArea();<newline46mondego>        imageGradient = new Image(display, image, SWT.IMAGE_COPY);<newline46mondego><newline46mondego><newline46mondego>        GC gc = new GC(imageGradient);<newline46mondego>        Color color1 = new Color(display, 200, 200, 255);<newline46mondego>        Color color2 = new Color(display, 255, 255, 255);<newline46mondego><newline46mondego>        gc.setAlpha(245);           // Two have a layer effect you should set the alpha<newline46mondego>        gc.setForeground(color1);<newline46mondego>        gc.setBackground(color2);<newline46mondego>        gc.fillGradientRectangle(rect.x, rect.y, rect.width, rect.height, true);<newline46mondego><newline46mondego>        color2.dispose();<newline46mondego>        color1.dispose();<newline46mondego>        gc.dispose();<newline46mondego><newline46mondego><newline46mondego>        composite.setBackgroundImage(imageGradient);<newline46mondego><newline46mondego>        if (oldImage != null) {<newline46mondego>            oldImage.dispose();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void openShell() <newline46mondego>    {<newline46mondego>        Display display = new Display();<newline46mondego><newline46mondego>        Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new FillLayout());<newline46mondego><newline46mondego>        image = new Image(display, <doubleQuotes46>image.png<doubleQuotes46>);<newline46mondego><newline46mondego>        shell.setBackgroundImage(image);<newline46mondego>        shell.setBackgroundMode(SWT.INHERIT_DEFAULT);<newline46mondego><newline46mondego>        createComponents(shell);<newline46mondego><newline46mondego>        shell.open();<newline46mondego><newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch()) {<newline46mondego>                display.sleep();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        image.dispose();<newline46mondego>        imageGradient.dispose();        <newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        ImageGradientTest sweet = new ImageGradientTest();<newline46mondego>        sweet.openShell();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9016splitHere46","12195186splitHere46","Display display = composite.getDisplay();<newline46mondego>Rectangle rect = composite.getClientArea();<newline46mondego>Image i = new Image(display, composite.getClientArea().width, composite.getClientArea().height);<newline46mondego>GC gc = new GC(i);<newline46mondego><newline46mondego>composite.print(gc);            // This is important<newline46mondego><newline46mondego>ImageLoader loader = new ImageLoader();<newline46mondego>loader.data = new ImageData[]{i.getImageData()};<newline46mondego>loader.save(<doubleQuotes46>hello.png<doubleQuotes46>, SWT.IMAGE_PNG);<newline46mondego><newline46mondego>gc.dispose();<newline46mondego>i.dispose();<newline46mondego>"
"9017splitHere46","12195353splitHere46","table.addCell(nestedTable);<newline46mondego>"
"9018splitHere46","12195355splitHere46","PreparedStatement statement1 = null;<newline46mondego>  PreparedStatement statement1 = null;<newline46mondego>  Connection connection=null;<newline46mondego><newline46mondego>    try {<newline46mondego>        //1. Obtain connection and set `false` to autoCommit<newline46mondego>        connection.setAutoCommit(false);<newline46mondego>        //2. Prepare and execute statements<newline46mondego>        statement1=connection.prepareStatement(sql1);<newline46mondego>        statement1=connection.prepareStatement(sql2);<newline46mondego>        ...<newline46mondego>        //3. Execute the statements<newline46mondego><newline46mondego>        statement1.executeUpdate();<newline46mondego>        statement2.executeUpdate();<newline46mondego><newline46mondego>        //4. Commit the changes<newline46mondego><newline46mondego>        connection.commit();<newline46mondego>        }<newline46mondego>    } catch (SQLException e ) {<newline46mondego>        if (connection!=null) {<newline46mondego>            try {<newline46mondego>                connection.rollback();<newline46mondego>            } catch(SQLException excep) {}<newline46mondego>        }<newline46mondego>    }finally {<newline46mondego>        if (statement1!=null) {<newline46mondego>            statement1.close();<newline46mondego>        }<newline46mondego>        if (statement2!=null) {<newline46mondego>            statement2.close();<newline46mondego>        }<newline46mondego>       if(connection!=null){<newline46mondego>          connection.setAutoCommit(true);<newline46mondego>          connection.close();<newline46mondego>        }<newline46mondego>   }<newline46mondego>"
"9019splitHere46","12195366splitHere46","Platform.exit"
"9020splitHere46","12195470splitHere46","WaitCursor"
"9021splitHere46","12195470splitHere46","@Retention(RetentionPolicy.RUNTIME)<newline46mondego>@Target(ElementType.METHOD)<newline46mondego>@interface WaitCursor {}<newline46mondego>"
"9022splitHere46","12195470splitHere46","public class WaitCursorInterceptor implements MethodInterceptor {<newline46mondego>    public Object invoke(MethodInvocation invocation) throws Throwable {<newline46mondego>        // show the cursor<newline46mondego>        MainUI.getInstance().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));<newline46mondego>        // execute the method annotated with `@WaitCursor`<newline46mondego>        Object result = invocation.proceed();<newline46mondego>        // hide the waiting cursor<newline46mondego>        MainUI.getInstance().setCursor(Cursor.getDefaultCursor());<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9023splitHere46","12195470splitHere46","public class WaitCursorModule extends AbstractModule {<newline46mondego>    protected void configure() {<newline46mondego>        bindInterceptor(Matchers.any(), Matchers.annotatedWith(WaitCursor.class), new WaitCursorInterceptor());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9024splitHere46","12195475splitHere46","RangeSet"
"9025splitHere46","12195475splitHere46","ArrayRangeSet"
"9026splitHere46","12195475splitHere46","TreeRangeSet"
"9027splitHere46","12195475splitHere46","ArrayRangeSet"
"9028splitHere46","12195475splitHere46","TreeRangeSet"
"9029splitHere46","12195475splitHere46","ArrayRangeSet"
"9030splitHere46","12195475splitHere46","TreeRangeSet"
"9031splitHere46","12195502splitHere46","FileOutputStream out = new FileOutputStream(filename);<newline46mondego>out.write(data);<newline46mondego>out.close();<newline46mondego>"
"9032splitHere46","12195502splitHere46","FileOutputStream out = new FileOutputStream(filename);<newline46mondego>for(int i = 0; i < data.length; i += 8192)<newline46mondego>    out.write(data, i, Math.min(data.length-i, 8192));<newline46mondego>out.close();<newline46mondego>"
"9033splitHere46","12195636splitHere46","if(theSame == 0) {<newline46mondego>       putSharedPrefs(<doubleQuotes46>pathToBt<doubleQuotes46>, g); <newline46mondego>}<newline46mondego>"
"9034splitHere46","12195636splitHere46","theSame"
"9035splitHere46","12195636splitHere46","0"
"9036splitHere46","12195693splitHere46","02-SEP-2012"
"9037splitHere46","12195693splitHere46","MM/dd/yyyy"
"9038splitHere46","12195693splitHere46","String deliverydate=<doubleQuotes46>02-SEP-2012<doubleQuotes46>;<newline46mondego>SimpleDateFormat sdf=new SimpleDateFormat(<doubleQuotes46>dd-MMM-yyyy<doubleQuotes46>);<newline46mondego><newline46mondego>Date date=sdf.parse(deliveryDate);<newline46mondego><newline46mondego>sdf=new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy<doubleQuotes46>);<newline46mondego>System.out.println(sdf.format(date));<newline46mondego>"
"9039splitHere46","12195755splitHere46","TreeSet"
"9040splitHere46","12195755splitHere46","retainAll"
"9041splitHere46","12195755splitHere46","toString"
"9042splitHere46","12195755splitHere46","Iterator<String> iter = a.iterator();<newline46mondego>if(iter.hasNext()) {<newline46mondego>  // first entry with no comma<newline46mondego>  System.out.print(iter.next());<newline46mondego>}<newline46mondego>while(iter.hasNext()) {<newline46mondego>  // subsequent entries with a preceding comma<newline46mondego>  System.out.print(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>  System.out.print(iter.next());<newline46mondego>}<newline46mondego>System.out.println();<newline46mondego>"
"9043splitHere46","12195779splitHere46","null"
"9044splitHere46","12195779splitHere46","\u0000"
"9045splitHere46","12195809splitHere46","Printable"
"9046splitHere46","12195820splitHere46","File"
"9047splitHere46","12195820splitHere46","File file = new File(<doubleQuotes46>resources/myresource.abc<doubleQuotes46>);<newline46mondego>URL url = file.toUrl();<newline46mondego>"
"9048splitHere46","12195857splitHere46","Reflection.getCallerClass(2 or 3)"
"9049splitHere46","12195857splitHere46","StackTraceElement[] stes = Thread.currentThread.getStackTrace();<newline46mondego>"
"9050splitHere46","12195982splitHere46","http://www.fam.com/FAM#"
"9051splitHere46","12195982splitHere46","String input = <doubleQuotes46>http://www.fam.com/FAM#Bruno12/06/2011<doubleQuotes46>;<newline46mondego>String result = input.substring(23);<newline46mondego>"
"9052splitHere46","12195982splitHere46","#"
"9053splitHere46","12195982splitHere46","#"
"9054splitHere46","12195982splitHere46","int index = input.indexOf('#');<newline46mondego>String result = input.substring(index + 1);<newline46mondego>"
"9055splitHere46","12195982splitHere46","String"
"9056splitHere46","12195997splitHere46","#{component.clientId}"
"9057splitHere46","12196029splitHere46","-Xmx120M -XX:MaxPermSize=55M -XX:ReservedCodeCacheSize=4M -Djava.awt.headless=true"
"9058splitHere46","12196095splitHere46","10 pixels"
"9059splitHere46","12196126splitHere46","public class CustomTextView extends TextView{<newline46mondego>    public CustomTextView(Context context, AttributeSet attrs, int defStyle) {<newline46mondego>        super(context, attrs, defStyle);<newline46mondego>        initFont();<newline46mondego>    }<newline46mondego><newline46mondego>    public CustomTextView(Context context, AttributeSet attrs) {<newline46mondego>        super(context, attrs);<newline46mondego>        initFont();<newline46mondego>    }<newline46mondego><newline46mondego>    public CustomTextView(Context context) {<newline46mondego>        super(context);<newline46mondego>        initFont();<newline46mondego>    }<newline46mondego><newline46mondego>    private void initFont() {<newline46mondego>        Typeface tf = Typeface.createFromAsset(getContext().getAssets(),<doubleQuotes46>myfont.ttf<doubleQuotes46>);<newline46mondego>        setTypeface(tf);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9060splitHere46","12196145splitHere46","LinkedList<node> tmp = new LinkedList<node>();<newline46mondego>tmp.add(new node());<newline46mondego>this.db.add(tmp);<newline46mondego>"
"9061splitHere46","12196237splitHere46","<%@ page import=<doubleQuotes46>java.io.*,java.util.*, javax.servlet.*, com.thoughtworks.xstream.XStream<doubleQuotes46> %><newline46mondego><html><newline46mondego>    <head><newline46mondego>         <title>Handle Current Date & Time</title><newline46mondego>    </head><newline46mondego>    <body><newline46mondego>        <center><newline46mondego>            <h1>Display Current Date & Time</h1><newline46mondego>        </center><newline46mondego>        <%<newline46mondego>            Date date = new Date();<newline46mondego>            // initialize date from input<newline46mondego>            // ...pass the date to the servlet<newline46mondego>        %><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"9062splitHere46","12196237splitHere46","Date date = /* get the date from the request*/<newline46mondego>// then do something like this:<newline46mondego>XStream xstream = new XStream();<newline46mondego>xstream.alias(<doubleQuotes46>date<doubleQuotes46>, Date.class);<newline46mondego>String xml = xstream.toXML(date);<newline46mondego>// write the xml string to the file.<newline46mondego>"
"9063splitHere46","12196277splitHere46","get"
"9064splitHere46","12196343splitHere46","StringWriter stack = new StringWriter();<newline46mondego>e.printStackTrace(new PrintWriter(stack));<newline46mondego>logger.debug(<doubleQuotes46>Caught exception; decorating with appropriate status template : <doubleQuotes46> + stack.toString());<newline46mondego>"
"9065splitHere46","12196343splitHere46","debug"
"9066splitHere46","12196522splitHere46","%module test<newline46mondego><newline46mondego>%include <std_string.i><newline46mondego><newline46mondego>%typemap(jtype) bool foo <doubleQuotes46>byte[]<doubleQuotes46><newline46mondego>%typemap(jstype) bool foo <doubleQuotes46>byte[]<doubleQuotes46><newline46mondego>%typemap(jni) bool foo <doubleQuotes46>jbyteArray<doubleQuotes46><newline46mondego>%typemap(javaout) bool foo { return $jnicall; }<newline46mondego>%typemap(in, numinputs=0) std::string& out (std::string temp) <doubleQuotes46>$1=&temp;<doubleQuotes46><newline46mondego>%typemap(argout) std::string& out {<newline46mondego>  $result = JCALL1(NewByteArray, jenv, $1->size());<newline46mondego>  JCALL4(SetByteArrayRegion, jenv, $result, 0, $1->size(), (const jbyte*)$1->c_str());<newline46mondego>}<newline46mondego>// Optional: return NULL if the function returned false<newline46mondego>%typemap(out) bool foo {<newline46mondego>  if (!$1) {<newline46mondego>    return NULL;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>%inline %{<newline46mondego>struct Bar {<newline46mondego>  bool foo(std::string& out) {<newline46mondego>    std::string s;<newline46mondego>    s.push_back('H');<newline46mondego>    s.push_back('o');<newline46mondego>    s.push_back(0);<newline46mondego>    s.push_back('l');<newline46mondego>    s.push_back('a');<newline46mondego>    out = s;<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>};<newline46mondego>%}<newline46mondego>"
"9067splitHere46","12196522splitHere46","bool foo"
"9068splitHere46","12196522splitHere46","std::string"
"9069splitHere46","12196522splitHere46","foo"
"9070splitHere46","12196522splitHere46","public class run { <newline46mondego>  public static void main(String[] argv) {<newline46mondego>    String s = <doubleQuotes46>ho\0la<doubleQuotes46>;<newline46mondego>    System.out.println(s.getBytes().length);<newline46mondego><newline46mondego>    System.loadLibrary(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>    Bar b = new Bar();<newline46mondego>    byte[] bytes = b.foo();<newline46mondego>    s = new String(bytes);<newline46mondego>    System.out.println(s + <doubleQuotes46> - <doubleQuotes46> + s.length());<newline46mondego>    assert(s.charAt(2) == 0);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9071splitHere46","12196522splitHere46","const jbyte*"
"9072splitHere46","12196522splitHere46","c_str()"
"9073splitHere46","12196607splitHere46","String phoneNumber = phone[0];<newline46mondego>"
"9074splitHere46","12196607splitHere46","doInBackground()"
"9075splitHere46","12196607splitHere46","request.addProperty(<doubleQuotes46>phone<doubleQuotes46>, phoneNumber);<newline46mondego>"
"9076splitHere46","12196634splitHere46","private static class PromoScroller implements Runnable {<newline46mondego><newline46mondego>    private Handler _scrollHandler;<newline46mondego><newline46mondego>    public PromoScroller(Handler scrollHandler) {<newline46mondego>        _scrollHandler = scrollHandler;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        // .. <newline46mondego>        _scrollHandler.sendEmptyMessage(0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9077splitHere46","12196634splitHere46","_promoScroller = new PromoScroller(new Handler() {<newline46mondego>        @Override<newline46mondego>        public void dispatchMessage(Message msg) {<newline46mondego>            super.dispatchMessage(msg);<newline46mondego>            // !! catch message and start the activity<newline46mondego>            Intent = new Intent(YourCurrentActivty.this, YourTargetActivity.class);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    _scrollerThread = new Thread(_promoScroller);<newline46mondego>    _scrollerThread.start();<newline46mondego>"
"9078splitHere46","12196634splitHere46","// TASK<newline46mondego>public class YourTimerTask extends TimerTask {<newline46mondego>    private Handler _Handler;<newline46mondego><newline46mondego>    public YourTimerTask(Handler handler) {<newline46mondego>        _Handler = handler;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        _Handler.sendEmptyMessage(0);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// TASK HANDLER (private property in your acitivity)<newline46mondego>private Handler _taskHandler = new Handler(){<newline46mondego>    public void dispatchMessage(android.os.Message msg) {<newline46mondego>        // do cleanup, close db cursors, file handler, etc.<newline46mondego>        // start your target activity<newline46mondego>        Intent viewTargetActivity = new Intent(YourCurrentActivity.this, YourTargetActivity.class);<newline46mondego><newline46mondego>    };<newline46mondego>};<newline46mondego><newline46mondego><newline46mondego>// IN YOUR ACTIVITY (for isntance, in onResume method)<newline46mondego>Timer timer = new Timer();<newline46mondego>timer.schedule(new YourTimerTask(_taskHandler), seconds*1000);<newline46mondego>"
"9079splitHere46","12196634splitHere46","Handler _timerHandler = ..."
"9080splitHere46","12196650splitHere46","ActorRef subSocket = ZeroMQExtension.get(getContext().system())<newline46mondego>            .newSubSocket(null, new Listener(getSelf()), new Subscribe(<doubleQuotes46>health<doubleQuotes46>));<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void preStart() {<newline46mondego>        super.preStart();<newline46mondego><newline46mondego>        subSocket.tell(new Connect(<doubleQuotes46>tcp://127.0.0.1:1237<doubleQuotes46>));<newline46mondego>        subSocket.tell(new Connect(<doubleQuotes46>tcp://127.0.0.1:1238<doubleQuotes46>));<newline46mondego>    }<newline46mondego>"
"9081splitHere46","12196687splitHere46","line.replaceFirst(<doubleQuotes46>some_property=.*$<doubleQuotes46>, <doubleQuotes46>some_property=\<doubleQuotes46><doubleQuotes46> + your_value + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"9082splitHere46","12196830splitHere46","Secure Outgoing Bandwidth:<newline46mondego>The amount of data sent by the application over a secure connection in response <newline46mondego>to requests. Secure outgoing bandwidth also counts toward the Outgoing Bandwidth <newline46mondego>quota.<newline46mondego>"
"9083splitHere46","12196857splitHere46","<%...%>"
"9084splitHere46","12196857splitHere46","${...}"
"9085splitHere46","12196857splitHere46","class_name"
"9086splitHere46","12196857splitHere46","<p>Class name = <c:out value='<%=class_name%>' /></p> <newline46mondego>"
"9087splitHere46","12196857splitHere46","<p>Class name = <c:out <newline46mondego>     value='${WCParam.categoryId != null ? <doubleQuotes46>my_account_custom<doubleQuotes46> : <doubleQuotes46>my_account_custom3<doubleQuotes46>}' /></p>    <newline46mondego>"
"9088splitHere46","12196917splitHere46","Set"
"9089splitHere46","12196917splitHere46","original"
"9090splitHere46","12196917splitHere46","List"
"9091splitHere46","12196917splitHere46","List#contains()"
"9092splitHere46","12196917splitHere46","String[] original = input.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>List<String> finalList = new ArrayList<String>();<newline46mondego><newline46mondego>for (String s : original) {<newline46mondego>    if (!finalList.contains(s)) {<newline46mondego>        finalList.add(s);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>\nHere is the set list:<doubleQuotes46>);<newline46mondego>displayList(finalList);<newline46mondego>System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"9093splitHere46","12197025splitHere46","javax.xml.bind.annotation.adapters.XmlAdapter"
"9094splitHere46","12197223splitHere46","import java.io.FileOutputStream;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import com.itextpdf.text.Document;<newline46mondego>import com.itextpdf.text.DocumentException;<newline46mondego>import com.itextpdf.text.PageSize;<newline46mondego>import com.itextpdf.text.Paragraph;<newline46mondego>import com.itextpdf.text.pdf.ColumnText;<newline46mondego>import com.itextpdf.text.pdf.PdfWriter;<newline46mondego><newline46mondego><newline46mondego>public class ColumnTextExample {<newline46mondego><newline46mondego><newline46mondego>    /** Definition of four columns */<newline46mondego>    public static final float[][] COLUMNS = {<newline46mondego>        { 36, 36, 224, 579 } , { 230, 36, 418, 579 },<newline46mondego>        { 424, 36, 612, 579 } , { 618, 36, 806, 579 }<newline46mondego>    };<newline46mondego><newline46mondego>    public static final String ARTICLE1 = <doubleQuotes46>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<doubleQuotes46>;<newline46mondego>    public static final String ARTICLE2 = ARTICLE1 + <doubleQuotes46> <doubleQuotes46> + ARTICLE1 + <doubleQuotes46> <doubleQuotes46> + ARTICLE1;<newline46mondego>    public static final String ARTICLE3 = ARTICLE1 + <doubleQuotes46> <doubleQuotes46> + ARTICLE1;<newline46mondego>public static final String[] ARTICLES = { <doubleQuotes46>HEADER 1\n<doubleQuotes46> + ARTICLE1, <doubleQuotes46>HEADER 2\n<doubleQuotes46> + ARTICLE2, <doubleQuotes46>HEADER 3\n<doubleQuotes46> + ARTICLE3, <doubleQuotes46>HEADER 4\n<doubleQuotes46> + ARTICLE1, <doubleQuotes46>HEADER 5\n<doubleQuotes46> + ARTICLE3 };<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException, DocumentException {<newline46mondego>        // step 1<newline46mondego>        Document document = new Document(PageSize.A4.rotate());<newline46mondego>        // step 2<newline46mondego>        PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(<doubleQuotes46>columns.pdf<doubleQuotes46>));<newline46mondego>        // step 3<newline46mondego>        document.open();<newline46mondego>        // step 4<newline46mondego>        ColumnText ct = new ColumnText(writer.getDirectContent());<newline46mondego>        int column = 0;<newline46mondego>        ct.setSimpleColumn(<newline46mondego>            COLUMNS[column][0], COLUMNS[column][1],<newline46mondego>            COLUMNS[column][2], COLUMNS[column][3]);<newline46mondego>        int status = ColumnText.START_COLUMN;<newline46mondego>        for (String article : ARTICLES) {<newline46mondego>            ct.addElement(new Paragraph(article));<newline46mondego>            status = ct.go();<newline46mondego>            while (ColumnText.hasMoreText(status)) {<newline46mondego>                column = nextColumn(document, column, ct);<newline46mondego>                status = ct.go();<newline46mondego>            }<newline46mondego>            column = nextColumn(document, column, ct);<newline46mondego>        }<newline46mondego>        // step 5<newline46mondego>        document.close();<newline46mondego>    }<newline46mondego><newline46mondego>    public static int nextColumn(Document document, int column, ColumnText ct) {<newline46mondego>        column = (column + 1) % 4;<newline46mondego>        if (column == 0)<newline46mondego>            document.newPage();<newline46mondego>        ct.setSimpleColumn(<newline46mondego>                COLUMNS[column][0], COLUMNS[column][1],<newline46mondego>                COLUMNS[column][2], COLUMNS[column][3]);<newline46mondego>        return column;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9095splitHere46","12197235splitHere46","ExecutorService exec = Executors.newFixedThreadPool(10);<newline46mondego><newline46mondego>for(int i = 0; i < 10; i++) {<newline46mondego>    exec.submit(new Task(i));<newline46mondego>}    <newline46mondego><newline46mondego>// later<newline46mondego><newline46mondego>for(int i = 0; i < 10; i++) {<newline46mondego>    exec.submit(new Task(i));<newline46mondego>}    <newline46mondego><newline46mondego>exec.shutdown(); // etc.<newline46mondego>"
"9096splitHere46","12197235splitHere46","List<Thread> threads = new ArrayList<Thread>();<newline46mondego>for(int i = 0; i < 10; i++) {<newline46mondego>    Thread t = new Thread(new Task(i));<newline46mondego>    threads.add(t);       <newline46mondego>    t.start();   <newline46mondego>}  <newline46mondego><newline46mondego>for(Thread t: threads) {<newline46mondego>    t.join();<newline46mondego>}<newline46mondego><newline46mondego>// later I need more work<newline46mondego><newline46mondego>threads = new ArrayList<Thread>();<newline46mondego>for(int i = 0; i < 10; i++) {<newline46mondego>    Thread t = new Thread(new Task(i));<newline46mondego>    threads.add(t);        <newline46mondego>    t.start();  <newline46mondego>}  <newline46mondego><newline46mondego>for(Thread t: threads) {<newline46mondego>    t.join();<newline46mondego>}<newline46mondego>"
"9097splitHere46","12197235splitHere46","Runnable"
"9098splitHere46","12197235splitHere46","Runnable"
"9099splitHere46","12197297splitHere46","@play.db.ebean.Transactional <newline46mondego>     public static void delete(Class2 class2)<newline46mondego>  {  <newline46mondego>     List<Class3> list = class2.getClass3s();<newline46mondego>     for(int i = 0; i < list.size(); ++i)<newline46mondego>     {<newline46mondego>       Class3.delete(list.get(i));<newline46mondego>     }  <newline46mondego>     list.clear();<newline46mondego>     class2.getClass1().getClass2s().remove(class2);<newline46mondego>     class2.delete();<newline46mondego>    }<newline46mondego>"
"9100splitHere46","12197449splitHere46","\n"
"9101splitHere46","12197449splitHere46","String s = <doubleQuotes46>First line\nSecond line\nThird line\nFourth line<doubleQuotes46>;<newline46mondego>String[] lines = s.split(<doubleQuotes46>\n<doubleQuotes46>, -1);<newline46mondego>System.out.println(lines[2]); // Third line<newline46mondego>"
"9102splitHere46","12197449splitHere46","System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>)"
"9103splitHere46","12197449splitHere46","Arrays.copyOfRange()"
"9104splitHere46","12197449splitHere46","String s = <doubleQuotes46>First line\nSecond line\nThird line\nFourth line<doubleQuotes46>;<newline46mondego>String[] lines = s.split(<doubleQuotes46>\n<doubleQuotes46>, -1);<newline46mondego>String[] lines2To4 = Arrays.copyOfRange(lines, 1, 4);<newline46mondego>"
"9105splitHere46","12197606splitHere46","import static akka.actor.Actors.*;<newline46mondego>   myActor.tell(poisonPill());<newline46mondego>"
"9106splitHere46","12197606splitHere46","ActorRef ref = system.actorOf(new Props(JavaAPITestActor.class));<newline46mondego>ref.tell(PoisonPill.getInstance());<newline46mondego>"
"9107splitHere46","12197757splitHere46","$where"
"9108splitHere46","12197757splitHere46","eval"
"9109splitHere46","12197757splitHere46","system.js"
"9110splitHere46","12197757splitHere46","exec"
"9111splitHere46","12197855splitHere46","returns"
"9112splitHere46","12197855splitHere46","extends"
"9113splitHere46","12197855splitHere46","accepts"
"9114splitHere46","12197855splitHere46","super"
"9115splitHere46","12197855splitHere46","Tree<? extends T>"
"9116splitHere46","12197855splitHere46","Tree<? returns T>"
"9117splitHere46","12197855splitHere46","Tree"
"9118splitHere46","12197855splitHere46","T"
"9119splitHere46","12197855splitHere46","T"
"9120splitHere46","12198087splitHere46","BooleanQuery"
"9121splitHere46","12198087splitHere46","Occur.MUST"
"9122splitHere46","12198087splitHere46","1_"
"9123splitHere46","12198087splitHere46","2_"
"9124splitHere46","12198352splitHere46","ResultSet rs = stat.executeQuery(sql);<newline46mondego>    while(rs.hasNext())<newline46mondego>   {<newline46mondego>    result =rs.getString(<doubleQuotes46>email<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"9125splitHere46","12198416splitHere46","driver.findElement(By.xpath(<doubleQuotes46>//tr[@class='myclass']/td[1]<doubleQuotes46>)).getText();<newline46mondego>"
"9126splitHere46","12198521splitHere46","FileService fileService = FileServiceFactory.getFileService();<newline46mondego>    AppEngineFile readableFile = new AppEngineFile(<doubleQuotes46>your_file_name<doubleQuotes46>);<newline46mondego>    FileReadChannel readChannel = fileService.openReadChannel(readableFile,<newline46mondego>            false);<newline46mondego>    InputStream input = Channels.newInputStream(readChannel);<newline46mondego><newline46mondego>    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>    Document doc = db.parse(input);<newline46mondego><newline46mondego>    Element root = doc.getDocumentElement();<newline46mondego><newline46mondego>    Element firstName = doc.createElement(<doubleQuotes46>first-name<doubleQuotes46>);<newline46mondego>    firstName.setTextContent(<doubleQuotes46>content<doubleQuotes46>);<newline46mondego><newline46mondego>    root.appendChild(firstName);<newline46mondego>    // Now write<newline46mondego>    GSFileOptionsBuilder optionsBuilder = new GSFileOptionsBuilder()<newline46mondego>            .setBucket(<doubleQuotes46>mybucket<doubleQuotes46>).setKey(<doubleQuotes46>myfile<doubleQuotes46>)<newline46mondego>            .setMimeType(<doubleQuotes46>text/html<doubleQuotes46>).setAcl(<doubleQuotes46>public_read<doubleQuotes46>)<newline46mondego>            .addUserMetadata(<doubleQuotes46>myfield1<doubleQuotes46>, <doubleQuotes46>my field value<doubleQuotes46>); // change as<newline46mondego>                                                            // your need<newline46mondego>    AppEngineFile writableFile = fileService.createNewGSFile(optionsBuilder<newline46mondego>            .build());<newline46mondego>    FileWriteChannel writeChannel = fileService.openWriteChannel(<newline46mondego>            writableFile, false);<newline46mondego>    OutputStream output = Channels.newOutputStream(writeChannel);<newline46mondego><newline46mondego>    TransformerFactory tf = TransformerFactory.newInstance();<newline46mondego>    Transformer transformer = tf.newTransformer();<newline46mondego>    DOMSource source = new DOMSource(doc);<newline46mondego>    transformer.setOutputProperty(OutputKeys.ENCODING, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    transformer.setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>    StreamResult result = new StreamResult(output);<newline46mondego>    transformer.transform(source, result);<newline46mondego>"
"9127splitHere46","12198824splitHere46","_call.setProperty(org.apache.axis.client.Call.USERNAME_PROPERTY, <doubleQuotes46>USERNAME<doubleQuotes46>);<newline46mondego>_call.setProperty(org.apache.axis.client.Call.PASSWORD_PROPERTY, <doubleQuotes46>PASSWORD<doubleQuotes46>);<newline46mondego>"
"9128splitHere46","12198880splitHere46","12 34 56 78 9A BC DE F0 08 08 08 08 08 08 08 08<newline46mondego>"
"9129splitHere46","12198880splitHere46","08"
"9130splitHere46","12198949splitHere46","replace"
"9131splitHere46","12199018splitHere46","ObjectMapper.writeValueAsString"
"9132splitHere46","12199018splitHere46","List data = new ArrayList();<newline46mondego>ObjectMapper mapper = new ObjectMapper();<newline46mondego><newline46mondego>data.add(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>data.add(someobject);<newline46mondego><newline46mondego>String json = new ObjectMapper().writeValueAsString(data); <newline46mondego>"
"9133splitHere46","12199054splitHere46","postcode"
"9134splitHere46","12199054splitHere46","String postcode=<doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego> if(pc4){postcode=<doubleQuotes46>1234<doubleQuotes46>}<newline46mondego>"
"9135splitHere46","12199062splitHere46","main"
"9136splitHere46","12199062splitHere46","main"
"9137splitHere46","12199062splitHere46","main"
"9138splitHere46","12199062splitHere46","main"
"9139splitHere46","12199189splitHere46","class Fruit {<newline46mondego>   ...<newline46mondego>}<newline46mondego><newline46mondego>class FruitGeneric<T extends Fruit> extends Fruit {<newline46mondego>    public boolean isEqualPrice (T otherFruit) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Apple extends FruitGeneric<Apple> {<newline46mondego>   ...<newline46mondego>}<newline46mondego><newline46mondego>class Orange extends FruitGeneric<Orange> {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"9140splitHere46","12199230splitHere46","@Local"
"9141splitHere46","12199230splitHere46","@Remote"
"9142splitHere46","12199273splitHere46","try..finally"
"9143splitHere46","12199273splitHere46","StringBuilder"
"9144splitHere46","12199273splitHere46","Exception"
"9145splitHere46","12199273splitHere46","append(<doubleQuotes46>\n<doubleQuotes46>)"
"9146splitHere46","12199273splitHere46","StringBuilder json = new StringBuilder();<newline46mondego>try {<newline46mondego>    URL url = new URL(sMyUrl);<newline46mondego>    BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));<newline46mondego>    try {<newline46mondego>        String str;<newline46mondego>        while ((str = in.readLine()) != null) {<newline46mondego>            json.append(str).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        in.close();<newline46mondego>    }<newline46mondego>} catch (Exception e) {<newline46mondego>    throw new RuntimeException(<doubleQuotes46>Failed to read JSON from stream<doubleQuotes46>, e);<newline46mondego>}<newline46mondego>"
"9147splitHere46","12199478splitHere46","Control"
"9148splitHere46","12199478splitHere46","Button"
"9149splitHere46","12199478splitHere46","SWT.CHECK"
"9150splitHere46","12199549splitHere46","Document doc = Jsoup.connect(recevurl).timeout(3000).get();"
"9151splitHere46","12199586splitHere46","getDescendants(Filter<F>)"
"9152splitHere46","12199586splitHere46","Element"
"9153splitHere46","12199586splitHere46","Element root=document.getRootElement();<newline46mondego> ElementFilter filter=new org.jdom2.filter.ElementFilter(<doubleQuotes46>model<doubleQuotes46>);<newline46mondego> for(Element c:root.getDescendants(filter))<newline46mondego>  {<newline46mondego>    System.out.println(c.getTextNormalize());<newline46mondego>  }<newline46mondego>"
"9154splitHere46","12199718splitHere46","public void paint(Graphics g)"
"9155splitHere46","12199718splitHere46","ArrayList<Arrow>"
"9156splitHere46","12199718splitHere46","ArrayList<Node>"
"9157splitHere46","12199718splitHere46","paintComponent(...)"
"9158splitHere46","12199718splitHere46","paint(...)"
"9159splitHere46","12199718splitHere46","setOpaque(false)"
"9160splitHere46","12199730splitHere46","pack()"
"9161splitHere46","12199730splitHere46","import java.awt.BorderLayout;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class JNote {<newline46mondego><newline46mondego>    public JComponent getGui(int rows, int cols) {<newline46mondego>        JPanel p = new JPanel(new BorderLayout(2,2));<newline46mondego><newline46mondego>        p.add(new JLabel(<doubleQuotes46>1<doubleQuotes46>), BorderLayout.LINE_START);<newline46mondego>        JTextArea ta = new JTextArea(rows, cols);<newline46mondego>        JScrollPane sp = new JScrollPane(<newline46mondego>                ta,<newline46mondego>                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,<newline46mondego>                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);<newline46mondego>        p.add(sp);<newline46mondego>        p.add(<newline46mondego>            new JLabel(<doubleQuotes46>Rows: <doubleQuotes46> + rows + <doubleQuotes46>    <doubleQuotes46> + <doubleQuotes46>Columns: <doubleQuotes46> + cols),<newline46mondego>            BorderLayout.PAGE_END);<newline46mondego><newline46mondego>        return p;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Runnable r = new Runnable(){<newline46mondego>            public void run() {<newline46mondego>                int cols = 20;<newline46mondego>                JNote jNote = new JNote();<newline46mondego>                for (int rows=6; rows>0; rows-=2) { <newline46mondego>                    JFrame f = new JFrame(<doubleQuotes46>jNote <doubleQuotes46> + rows + <doubleQuotes46>x<doubleQuotes46> + cols);<newline46mondego>                    f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>                    f.setLocationByPlatform(true);<newline46mondego>                    f.add(jNote.getGui(rows, cols));<newline46mondego><newline46mondego>                    f.pack();<newline46mondego>                    f.setVisible(true);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        SwingUtilities.invokeLater(r);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9162splitHere46","12199802splitHere46","InputStream in = null;<newline46mondego>try {<newline46mondego>    in = new FileInputStream(file);<newline46mondego>    // ...<newline46mondego>} catch(IOException ioe) {<newline46mondego>    // handle exception.<newline46mondego>} finally {<newline46mondego>    IOUtils.closeQuietly(in);<newline46mondego>}<newline46mondego>"
"9163splitHere46","12199802splitHere46","try {<newline46mondego>    final InputStream in = new FileInputStream(file);<newline46mondego>    try {<newline46mondego>        // ...<newline46mondego>    } finally {<newline46mondego>        in.close();<newline46mondego>    }<newline46mondego>} catch(IOException e) {<newline46mondego>    // handle exception<newline46mondego>}<newline46mondego>"
"9164splitHere46","12199834splitHere46","package com.test;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Map.Entry;<newline46mondego><newline46mondego>/**<newline46mondego> * Producers produce results. I do not care what their actual type is, but the<newline46mondego> * values in the map have to be comparable amongst themselves.<newline46mondego> */<newline46mondego>interface IProducer<T extends Comparable<T>> {<newline46mondego>    public Map<Integer, T> getResults();<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This example implementation ranks items in the map by using Strings.<newline46mondego> */<newline46mondego>class ProducerA implements IProducer<String> {<newline46mondego>    @Override<newline46mondego>    public Map<Integer, String> getResults() {<newline46mondego>        Map<Integer, String> result = new HashMap<Integer, String>();<newline46mondego>        result.put(1, <doubleQuotes46>A<doubleQuotes46>);<newline46mondego>        result.put(2, <doubleQuotes46>B<doubleQuotes46>);<newline46mondego>        result.put(3, <doubleQuotes46>B<doubleQuotes46>);<newline46mondego><newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This example implementation ranks items in the map by using integers.<newline46mondego> */<newline46mondego>class ProducerB implements IProducer<Integer> {<newline46mondego>    @Override<newline46mondego>    public Map<Integer, Integer> getResults() {<newline46mondego>        Map<Integer, Integer> result = new HashMap<Integer, Integer>();<newline46mondego>        result.put(1, 10);<newline46mondego>        result.put(2, 30);<newline46mondego>        result.put(3, 30);<newline46mondego><newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Evaluator evaluates the results against the given groundTruth. All it needs<newline46mondego> * to know about results, is that they are comparable amongst themselves.<newline46mondego> */<newline46mondego>interface IEvaluator {<newline46mondego>    public <T extends Comparable<T>> double evaluate(Map<Integer, T> results,<newline46mondego>            Map<Integer, Double> groundTruth);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This is example of an evaluator, metric Kendall Tau-B. Don't bother with<newline46mondego> * semantics, all that matters is that I want to be able to call<newline46mondego> * r1.compareTo(r2) for every (r1, r2) that appear in Map<Integer, T> results.<newline46mondego> */<newline46mondego>class KendallTauB implements IEvaluator {<newline46mondego>    @Override<newline46mondego>    public <T extends Comparable<T>> double evaluate(Map<Integer, T> results,<newline46mondego>            Map<Integer, Double> groundTruth) {<newline46mondego>        int concordant = 0, discordant = 0, tiedRanks = 0, tiedCapabilities = 0;<newline46mondego><newline46mondego>        for (Entry<Integer, T> rank1 : results.entrySet()) {<newline46mondego>            for (Entry<Integer, T> rank2 : results.entrySet()) {<newline46mondego>                if (rank1.getKey() < rank2.getKey()) {<newline46mondego>                    final T r1 = rank1.getValue();<newline46mondego>                    final T r2 = rank2.getValue();<newline46mondego>                    final Double c1 = groundTruth.get(rank1.getKey());<newline46mondego>                    final Double c2 = groundTruth.get(rank2.getKey());<newline46mondego><newline46mondego>                    final int ranksDiff = r1.compareTo(r2);<newline46mondego>                    final int actualDiff = c1.compareTo(c2);<newline46mondego><newline46mondego>                    if (ranksDiff * actualDiff > 0) {<newline46mondego>                        concordant++;<newline46mondego>                    } else if (ranksDiff * actualDiff < 0) {<newline46mondego>                        discordant++;<newline46mondego>                    } else {<newline46mondego>                        if (ranksDiff == 0)<newline46mondego>                            tiedRanks++;<newline46mondego><newline46mondego>                        if (actualDiff == 0)<newline46mondego>                            tiedCapabilities++;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        final double n = results.size() * (results.size() - 1d) / 2d;<newline46mondego><newline46mondego>        return (concordant - discordant)<newline46mondego>                / Math.sqrt((n - tiedRanks) * (n - tiedCapabilities));<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * The simulator class that queries the producer and them conveys results to the<newline46mondego> * evaluator.<newline46mondego> */<newline46mondego>public class Simulator {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        // example of a ground truth<newline46mondego>        Map<Integer, Double> groundTruth = new HashMap<Integer, Double>();<newline46mondego>        groundTruth.put(1, 1d);<newline46mondego>        groundTruth.put(2, 2d);<newline46mondego>        groundTruth.put(3, 3d);<newline46mondego><newline46mondego>        // dynamically load producers<newline46mondego>        List<IProducer<?>> producerImplementations = lookUpProducers();<newline46mondego><newline46mondego>        // dynamically load evaluators<newline46mondego>        List<IEvaluator> evaluatorImplementations = lookUpEvaluators();<newline46mondego><newline46mondego>        // pick a producer<newline46mondego>        IProducer<?> producer = producerImplementations.get(0);<newline46mondego><newline46mondego>        // pick an evaluator<newline46mondego>        IEvaluator evaluator = evaluatorImplementations.get(0);<newline46mondego><newline46mondego>        // evaluate the result against the ground truth<newline46mondego>        double score = evaluator.evaluate(producer.getResults(), groundTruth);<newline46mondego><newline46mondego>        System.out.printf(<doubleQuotes46>Score is %.2f\n<doubleQuotes46>, score);<newline46mondego>    }<newline46mondego><newline46mondego>    // Methods below are for demonstration purposes only. I'm actually using<newline46mondego>    // ServiceLoader.load(Clazz) to dynamically discover and load classes that<newline46mondego>    // implement interfaces IProducer and IEvaluator<newline46mondego>    public static List<IProducer<?>> lookUpProducers() {<newline46mondego>        List<IProducer<?>> producers = new ArrayList<IProducer<?>>();<newline46mondego>        producers.add(new ProducerA());<newline46mondego>        producers.add(new ProducerB());<newline46mondego><newline46mondego>        return producers;<newline46mondego>    }<newline46mondego><newline46mondego>    public static List<IEvaluator> lookUpEvaluators() {<newline46mondego>        List<IEvaluator> evaluators = new ArrayList<IEvaluator>();<newline46mondego>        evaluators.add(new KendallTauB());<newline46mondego><newline46mondego>        return evaluators;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9165splitHere46","12199847splitHere46","<not-in-stock/>"
"9166splitHere46","12199847splitHere46","ElementFilter filter=new org.jdom2.filter.ElementFilter(<doubleQuotes46>not-in-stock<doubleQuotes46>);<newline46mondego> Element searchElement=null;<newline46mondego> for(Element c:root.getDescendants(filter))<newline46mondego> {<newline46mondego>   searchElement=c;<newline46mondego>   break;<newline46mondego> }<newline46mondego> if(searchElement!=null){<newline46mondego>     searchElement.setName(<doubleQuotes46>NewName<doubleQuotes46>);<newline46mondego>     searchElement.setText(<doubleQuotes46>Something is diff<doubleQuotes46>);<newline46mondego>     XMLOutputter output=new XMLOutputter();<newline46mondego>     output.output(doc, new FileOutputStream(file));<newline46mondego> }<newline46mondego>"
"9167splitHere46","12199860splitHere46","public LocalTime getTimeStart(){<newline46mondego>      return timeStart;<newline46mondego>}   <newline46mondego><newline46mondego>public String getTimeStartAsString(){<newline46mondego>      return timeStart == null ? <doubleQuotes46><doubleQuotes46> : timeStart.toString(<doubleQuotes46>hh:mm<doubleQuotes46>);<newline46mondego>} <newline46mondego>"
"9168splitHere46","12199916splitHere46","<doubleQuotes46>ON(users.uid = node.uid <doubleQuotes46> +<newline46mondego>"
"9169splitHere46","12199917splitHere46","for (double d : new double[]{1.4917951E16, 7.531891E15, 2.9287E13, 3.28478435E17, 6.038E12})<newline46mondego>    System.out.printf(<doubleQuotes46>%11fE15%n<doubleQuotes46>, d/1e15);<newline46mondego>"
"9170splitHere46","12199917splitHere46","14.917951E15<newline46mondego>   7.531891E15<newline46mondego>   0.029287E15<newline46mondego> 328.478435E15<newline46mondego>   0.006038E15<newline46mondego>"
"9171splitHere46","12199917splitHere46","DecimalFormat df = new DecimalFormat();<newline46mondego>df.setMaximumFractionDigits(300);<newline46mondego>df.setGroupingUsed(false);<newline46mondego>for(double d = 1 ; d <= 1e30; d *= 1e5) {<newline46mondego>    System.out.println(df.format(d/1e15)+<doubleQuotes46>E15<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"9172splitHere46","12199917splitHere46","0.000000000000001E15<newline46mondego>0.0000000001E15<newline46mondego>0.00001E15<newline46mondego>1E15<newline46mondego>100000E15<newline46mondego>10000000000E15<newline46mondego>"
"9173splitHere46","12199937splitHere46","@Entity<newline46mondego>public class A {<newline46mondego>    @Id private Long id;    <newline46mondego>    String someAttribute;<newline46mondego>    String someOtherAttribute;<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9174splitHere46","12199937splitHere46","//some parameters to your method<newline46mondego>    String param1 = <doubleQuotes46>1<doubleQuotes46>;<newline46mondego>    String paramNull = null;<newline46mondego><newline46mondego>    CriteriaBuilder qb = em.getCriteriaBuilder();<newline46mondego>    CriteriaQuery cq = qb.createQuery();<newline46mondego>    Root<A> customer = cq.from(A.class);<newline46mondego><newline46mondego>    //Constructing list of parameters<newline46mondego>    List<Predicate> predicates = new ArrayList<Predicate>();<newline46mondego><newline46mondego>    //Adding predicates in case of parameter not being null<newline46mondego>    if (param1 != null) {<newline46mondego>        predicates.add(<newline46mondego>                qb.equal(customer.get(<doubleQuotes46>someAttribute<doubleQuotes46>), param1));<newline46mondego>    }<newline46mondego>    if (paramNull != null) {<newline46mondego>        predicates.add(<newline46mondego>                qb.equal(customer.get(<doubleQuotes46>someOtherAttribute<doubleQuotes46>), paramNull));<newline46mondego>    }<newline46mondego>    //query itself<newline46mondego>    cq.select(customer)<newline46mondego>            .where(predicates.toArray(new Predicate[]{}));<newline46mondego>    //execute query and do something with result<newline46mondego>    em.createQuery(cq).getResultList();<newline46mondego>"
"9175splitHere46","12199990splitHere46","jsp-api.jar"
"9176splitHere46","12199990splitHere46","/WEB-INF/lib"
"9177splitHere46","12199990splitHere46","JDK/lib"
"9178splitHere46","12199990splitHere46","JDK/lib/ext"
"9179splitHere46","12199990splitHere46","/WEB-INF/lib"
"9180splitHere46","12199999splitHere46","processOrder"
"9181splitHere46","12199999splitHere46","getInventory"
"9182splitHere46","12199999splitHere46","shutdown"
"9183splitHere46","12199999splitHere46","client.destroy();"
"9184splitHere46","12200149splitHere46","Tree<Integer> num2 = new Tree<Integer>(2);<newline46mondego>"
"9185splitHere46","12200332splitHere46","int inputTextColumnPos; // position of your column<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>@UiHandler(<doubleQuotes46>myButton<doubleQuotes46>)<newline46mondego>public void myButton_onClick(ClickEvent event) {<newline46mondego>  for (MyBean my : listOfBeans) {<newline46mondego>    my.setValue(<doubleQuotes46>value<doubleQuotes46>);<newline46mondego><newline46mondego>    // get the cell you want to update<newline46mondego>    TextInputCell cell = (TextInputCell) table.getColumn(inputTextColumnPos).getCell();<newline46mondego>    // re-create the view data for the cell because the current one isn't updated<newline46mondego>    TextInputCell.ViewData viewData = new TextInputCell.ViewData(<doubleQuotes46>value<doubleQuotes46>);<newline46mondego>    // CRUSH the other one <newline46mondego>    cell.setViewData(my, viewData);<newline46mondego>  }<newline46mondego><newline46mondego>  // because we're never too sure<newline46mondego>  table.redraw();<newline46mondego>}<newline46mondego>"
"9186splitHere46","12200345splitHere46","String prop = System.getProperty(<doubleQuotes46>log4j.configuration<doubleQuotes46>);<newline46mondego>    if (prop == null) prop = <doubleQuotes46>log4j.properties<doubleQuotes46>;<newline46mondego>    URL log4jConfig = Loader.getResource(<doubleQuotes46>log4j.properties<doubleQuotes46>);<newline46mondego>    if (log4jConfig.getProtocol().equalsIgnoreCase(<doubleQuotes46>file<doubleQuotes46>)) {<newline46mondego>        PropertyConfigurator.configureAndWatch(log4jConfig.getFile().substring(1), 10000);<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        // cannot monitor if file changed because URL is not a file<newline46mondego>    }<newline46mondego>"
"9187splitHere46","12200379splitHere46","ArrayList.ensureCapacity(int)"
"9188splitHere46","12200386splitHere46","java -Durl=http://localhost:8983/solr/update/extract?literal.id=form1 -jar /Applications/Solr-3.6.0/example/exampledocs/post.jar /path/to/pdf/form1.pdf <newline46mondego>"
"9189splitHere46","12200386splitHere46","java -Durl=<doubleQuotes46>http://localhost:8983/solr/update/extract?literal.id=form1&uprefix=attr_&fmap.content=attr_content&commit=true<doubleQuotes46> -jar /Applications/Solr-3.6.0/example/exampledocs/post.jar /path/to/pdf/form1.pdf<newline46mondego>"
"9190splitHere46","12200401splitHere46","close()"
"9191splitHere46","12200701splitHere46","private Response resp1, resp2, resp3;<newline46mondego><newline46mondego>protected void doRequests() {<newline46mondego>    Thread thread1 = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            resp1= Server.request(a);           <newline46mondego>        }<newline46mondego>    };<newline46mondego>    Thread thread2 = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            resp1= Server.request(a);           <newline46mondego>        }<newline46mondego>    };<newline46mondego>    Thread thread3 = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            resp1= Server.request(a);           <newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    thread1.start();<newline46mondego>    thread2.start();<newline46mondego>    thread3.start();<newline46mondego><newline46mondego>    try { thread1.join(); } catch(InterruptedException e) { }<newline46mondego>    try { thread2.join(); } catch(InterruptedException e) { }<newline46mondego>    try { thread3.join(); } catch(InterruptedException e) { }<newline46mondego>}<newline46mondego>"
"9192splitHere46","12200804splitHere46","String encoding = <doubleQuotes46>UTF-8<doubleQuotes46>;<newline46mondego>Reader reader = new InputStreamReader(in, encoding);<newline46mondego>"
"9193splitHere46","12200804splitHere46","/**<newline46mondego> * Method removes HTML tags from given string.<newline46mondego> *<newline46mondego> * @param text  Input parameter containing HTML tags (eg. <b>cat</b>)<newline46mondego> * @return      String without HTML tags (eg. cat)<newline46mondego> */<newline46mondego>public static String removeHtml(String text) {<newline46mondego>    try {<newline46mondego>        int idx = text.indexOf(<doubleQuotes46><<doubleQuotes46>);<newline46mondego>        if (idx == -1) {<newline46mondego>            text = decodeEntities(text);<newline46mondego>            return text;<newline46mondego>        }<newline46mondego><newline46mondego>        String plainText = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        String htmlText = text;<newline46mondego>        int htmlStartIndex = htmlText.indexOf(<doubleQuotes46><<doubleQuotes46>, 0);<newline46mondego>        if (htmlStartIndex == -1) {<newline46mondego>            return text;<newline46mondego>        }<newline46mondego>        htmlText = StringUtils.replace(htmlText, <doubleQuotes46></p><doubleQuotes46>, <doubleQuotes46>\r\n<doubleQuotes46>);<newline46mondego>        htmlText = StringUtils.replace(htmlText, <doubleQuotes46><br/><doubleQuotes46>, <doubleQuotes46>\r\n<doubleQuotes46>);<newline46mondego>        htmlText = StringUtils.replace(htmlText, <doubleQuotes46><newline46mondego><doubleQuotes46>, <doubleQuotes46>\r\n<doubleQuotes46>);<newline46mondego>        while (htmlStartIndex >= 0) {<newline46mondego>            plainText += htmlText.substring(0, htmlStartIndex);<newline46mondego>            int htmlEndIndex = htmlText.indexOf(<doubleQuotes46>><doubleQuotes46>, htmlStartIndex);<newline46mondego>            htmlText = htmlText.substring(htmlEndIndex + 1);<newline46mondego>            htmlStartIndex = htmlText.indexOf(<doubleQuotes46><<doubleQuotes46>, 0);<newline46mondego>        }<newline46mondego>        plainText = plainText.trim();<newline46mondego>        plainText = decodeEntities(plainText);<newline46mondego>        return plainText;<newline46mondego>    } catch (Exception e) {<newline46mondego>        System.err.println(<doubleQuotes46>Error while removing HTML: <doubleQuotes46> + e.toString());<newline46mondego>        return text;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static String decodeEntities(String html) {<newline46mondego>    String result = StringUtils.replace(html, <doubleQuotes46>&lt;<doubleQuotes46>, <doubleQuotes46><<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&gt;<doubleQuotes46>, <doubleQuotes46>><doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>& <doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&amp;<doubleQuotes46>, <doubleQuotes46>&<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&auml;<doubleQuotes46>, <doubleQuotes46>Ã¤<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&ouml;<doubleQuotes46>, <doubleQuotes46>Ã¶<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&quot;<doubleQuotes46>, <doubleQuotes46>'<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&lquot;<doubleQuotes46>, <doubleQuotes46>'<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&rquot;<doubleQuotes46>, <doubleQuotes46>'<doubleQuotes46>);<newline46mondego>    result = StringUtils.replace(result, <doubleQuotes46>&#xd;<doubleQuotes46>, <doubleQuotes46>\r<doubleQuotes46>);<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>/* Replace all instances of a String in a String.<newline46mondego> *   @param  s  String to alter.<newline46mondego> *   @param  f  String to look for.<newline46mondego> *   @param  r  String to replace it with, or null to just remove it.<newline46mondego> */<newline46mondego>public static String replace(String s, String f, String r) {<newline46mondego>    if (s == null) {<newline46mondego>        return s;<newline46mondego>    }<newline46mondego>    if (f == null) {<newline46mondego>        return s;<newline46mondego>    }<newline46mondego>    if (r == null) {<newline46mondego>        r = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    }<newline46mondego>    int index01 = s.indexOf(f);<newline46mondego>    while (index01 != -1) {<newline46mondego>        s = s.substring(0, index01) + r + s.substring(index01 + f.length());<newline46mondego>        index01 += r.length();<newline46mondego>        index01 = s.indexOf(f, index01);<newline46mondego>    }<newline46mondego>    return s;<newline46mondego>}<newline46mondego><newline46mondego>public static String cleanEncodedString(String str) {<newline46mondego>    String resultStr = str;<newline46mondego>    String encoding = <doubleQuotes46>UTF-8<doubleQuotes46>;<newline46mondego><newline46mondego>    InputStream in = new ByteArrayInputStream(str.getBytes());<newline46mondego>    InputStreamReader isr;<newline46mondego>    try {<newline46mondego>        isr = new InputStreamReader(in, encoding);<newline46mondego><newline46mondego>        ByteArrayOutputStream buf = new ByteArrayOutputStream();<newline46mondego>        int result = isr.read();<newline46mondego>        while (result != -1) {<newline46mondego>            byte b = (byte) result;<newline46mondego>            buf.write(b);<newline46mondego>            result = isr.read();<newline46mondego>        }<newline46mondego>        resultStr = buf.toString();<newline46mondego><newline46mondego>        return resultStr;<newline46mondego>    } catch (Exception uee) {<newline46mondego>        uee.printStackTrace();<newline46mondego>    }<newline46mondego>    return resultStr;<newline46mondego>}<newline46mondego>"
"9194splitHere46","12200844splitHere46","public class Instantiator {<newline46mondego><newline46mondego>  public Runnable getNewInstance(Class<Runnable> runnableClass) throws Exception {<newline46mondego>    return runnableClass.newInstance();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9195splitHere46","12200844splitHere46","public class PassThruFactory {<newline46mondego>  public Object newInstance(Class<?> clazz) throws Exception {<newline46mondego>    return clazz.newInstance();<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class Instantiator {<newline46mondego>  private PassThruFactory factory = new PassThruFactory();<newline46mondego><newline46mondego>  public Runnable getNewInstance(Class<Runnable> runnableClass) throws Exception {<newline46mondego>    return (Runnable)factory.newInstance(runnableClass);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9196splitHere46","12200847splitHere46","setTitleAreaImage(Image image)"
"9197splitHere46","12200847splitHere46","setTitleAreaColor(RGB color)"
"9198splitHere46","12200847splitHere46","setErrorMessage(String message)"
"9199splitHere46","12200898splitHere46","setLayout(new BorderLayout());<newline46mondego><newline46mondego>Container cnt = new Container();<newline46mondego>cnt.setLayout(new BoxLayout(BoxLayout.Y_AXIS));<newline46mondego><newline46mondego>name.getStyle().setBgTransparency(0);<newline46mondego>name.getStyle().setFont(Font.createSystemFont(Font.FACE_SYSTEM, Font.STYLE_BOLD, Font.SIZE_SMALL));<newline46mondego><newline46mondego>cnt.addComponent(name);<newline46mondego><newline46mondego>addComponent(BorderLayout.WEST, icon);<newline46mondego>addComponent(BorderLayout.CENTER, cnt);<newline46mondego>"
"9200splitHere46","12201127splitHere46","... extends ArrayAdapter<String> {"
"9201splitHere46","12201127splitHere46","BusinessAdapter"
"9202splitHere46","12201127splitHere46","public BusinessAdapter(Context context,  String[][] dataList)"
"9203splitHere46","12201368splitHere46","public class HelloJob implements Job {<newline46mondego><newline46mondego>    public HelloJob() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void execute(JobExecutionContext context) throws JobExecutionException<newline46mondego>    {<newline46mondego>        //do your job...<newline46mondego><newline46mondego>        Trigger trigger = newTrigger().build();<newline46mondego>        JobDetail job = newJob(HelloJob.class).build();<newline46mondego>        context.getScheduler().scheduleJob(trigger, job);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9204splitHere46","12201368splitHere46","@PostConstruct"
"9205splitHere46","12201368splitHere46","Scheduler"
"9206splitHere46","12201368splitHere46","JobChainingJobListener"
"9207splitHere46","12201415splitHere46","notifyListeners"
"9208splitHere46","12201415splitHere46","post"
"9209splitHere46","12201442splitHere46","legendPane.managedProperty().bind(legendPane.visibleProperty());<newline46mondego>"
"9210splitHere46","12201454splitHere46","<p:xxx>"
"9211splitHere46","12201454splitHere46","p:"
"9212splitHere46","12201454splitHere46","xmlns:p=<doubleQuotes46>http://primefaces.org/ui<doubleQuotes46><newline46mondego>"
"9213splitHere46","12201454splitHere46","primefaces.jar"
"9214splitHere46","12201454splitHere46","/WEB-INF/lib"
"9215splitHere46","12201461splitHere46","final DroidGap droidGap = this;<newline46mondego>final SearchView.OnQueryTextListener queryTextListener = new SearchView.OnQueryTextListener() {<newline46mondego>    public boolean onQueryTextChange(String newText) {<newline46mondego>        droidGap.loadUrl(...);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>"
"9216splitHere46","12201580splitHere46","Button b = (Button) findViewById(R.id.button1);<newline46mondego>"
"9217splitHere46","12201628splitHere46","import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ChangeButton extends JPanel {<newline46mondego>   private int buttonCount = 1;<newline46mondego>   private JButton button = new JButton();<newline46mondego><newline46mondego>   public ChangeButton() {<newline46mondego>      add(button);<newline46mondego>      button.setText(makeButtonText());<newline46mondego><newline46mondego>      button.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent evt) {<newline46mondego>            JButton btn = (JButton) evt.getSource();<newline46mondego>            btn.setText(makeButtonText());<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego><newline46mondego>   private String makeButtonText() {<newline46mondego>      String buttonText = <doubleQuotes46>Process number <doubleQuotes46> + buttonCount;<newline46mondego>      buttonCount++;<newline46mondego>      return buttonText;<newline46mondego>   }<newline46mondego><newline46mondego>   private static void createAndShowGui() {<newline46mondego>      ChangeButton mainPanel = new ChangeButton();<newline46mondego><newline46mondego>      JFrame frame = new JFrame(<doubleQuotes46>ChangeButton<doubleQuotes46>);<newline46mondego>      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      frame.getContentPane().add(mainPanel);<newline46mondego>      frame.pack();<newline46mondego>      frame.setLocationByPlatform(true);<newline46mondego>      frame.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9218splitHere46","12201628splitHere46","button2.setAction(new AbstractAction(<doubleQuotes46>Process item 1<doubleQuotes46>) {<newline46mondego>     private int button2Count = 2;<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void actionPerformed(ActionEvent evt) {<newline46mondego>        JButton btn = (JButton) evt.getSource();<newline46mondego>        btn.setText(makeButton2Text());<newline46mondego>     }<newline46mondego><newline46mondego>     private String makeButton2Text() {<newline46mondego>        String button2Text = <doubleQuotes46>Process item <doubleQuotes46> + button2Count;<newline46mondego>        button2Count++;<newline46mondego>        return button2Text;<newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego>  });<newline46mondego>"
"9219splitHere46","12201648splitHere46","number & (1 << i)"
"9220splitHere46","12201749splitHere46","RecordStore"
"9221splitHere46","12201749splitHere46",".db"
"9222splitHere46","12201749splitHere46","RecordStore"
"9223splitHere46","12201749splitHere46","1, Pen, 1<newline46mondego>2, Clip, 0.05<newline46mondego>3, Eraser, 0.5<newline46mondego>"
"9224splitHere46","12201749splitHere46","RecordStore"
"9225splitHere46","12201949splitHere46","Tags"
"9226splitHere46","12201949splitHere46","protected Entities entities;<newline46mondego>@JsonIgnoreProperties(ignoreUnknown = true)<newline46mondego>protected class Entities {<newline46mondego>    public Entities() {}<newline46mondego>    @JsonDeserialize(contentAs=Tag.class)<newline46mondego>    protected List<Tag> tags;<newline46mondego><newline46mondego>    @JsonIgnoreProperties(ignoreUnknown = true)<newline46mondego>    protected class Tag {<newline46mondego>        public Tag() {}<newline46mondego><newline46mondego>        protected String text;<newline46mondego><newline46mondego>        public String getText() {<newline46mondego>            return text;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setText(String text) {<newline46mondego>            this.text = text;<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public Tags getTags() {<newline46mondego>        return tags;<newline46mondego>    }<newline46mondego>    public void setTags(Tags tags) {<newline46mondego>        this.tags = tags;<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"9227splitHere46","12201949splitHere46","List<Integer> indices"
"9228splitHere46","12202014splitHere46","Collection<? extends MessageGroup> collection = <newline46mondego>        (Collection<? extends MessageGroup>)<newline46mondego>                (Collection) this.groupMap.values();<newline46mondego>"
"9229splitHere46","12202200splitHere46","import com.google.caliper.SimpleBenchmark;<newline46mondego><newline46mondego>public class ToInt extends SimpleBenchmark {<newline46mondego><newline46mondego>    private byte[] n;<newline46mondego>    private int total;<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void setUp() throws Exception {<newline46mondego>        n = new byte[4];<newline46mondego>    }<newline46mondego><newline46mondego>    public int timeStaticClass(int reps) {<newline46mondego>        for (int i = 0; i < reps; i++) {<newline46mondego>            total += StaticClass.toInt(n);<newline46mondego>        }<newline46mondego>        return total;<newline46mondego>    }<newline46mondego><newline46mondego>    public int timeFromClass(int reps) {<newline46mondego>        for (int i = 0; i < reps; i++) {<newline46mondego>            total += toInt(n);<newline46mondego>        }<newline46mondego>        return total;<newline46mondego>    }<newline46mondego><newline46mondego>    public int timeInline(int reps) {<newline46mondego>        for (int i = 0; i < reps; i++) {<newline46mondego>            int actual = 0;<newline46mondego>            int len = n.length;<newline46mondego>            for (int i1 = 0; i1 < len; i1++) {<newline46mondego>                actual += n[len - 1 - i1] << 8 * i1;<newline46mondego>            }<newline46mondego>            total += actual;<newline46mondego>        }<newline46mondego>        return total;<newline46mondego>    }<newline46mondego><newline46mondego>    public static int toInt(byte[] num) {<newline46mondego>        int actual = 0;<newline46mondego>        int len = num.length;<newline46mondego>        for (int i = 0; i < len; i++) {<newline46mondego>            actual += num[len - 1 - i] << 8 * i;<newline46mondego>        }<newline46mondego>        return actual;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class StaticClass {<newline46mondego>    public static int toInt(byte[] num) {<newline46mondego>        int actual = 0;<newline46mondego><newline46mondego>        int len = num.length;<newline46mondego><newline46mondego>        for (int i = 0; i < len; i++) {<newline46mondego>            actual += num[len - 1 - i] << 8 * i;<newline46mondego>        }<newline46mondego><newline46mondego>        return actual;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9230splitHere46","12202200splitHere46","toInt()"
"9231splitHere46","12202237splitHere46","TableView tb = (TableView) scene.lookup(<doubleQuotes46>#history<doubleQuotes46>);<newline46mondego>"
"9232splitHere46","12202258splitHere46","Runtime.exec"
"9233splitHere46","12202258splitHere46","// Fix to use the version appropriate to the OS<newline46mondego>String javaPath = System.getProperty(<doubleQuotes46>java.home<doubleQuotes46>) + <doubleQuotes46>\bin\java.exe<doubleQuotes46>;<newline46mondego>Runtime.exec(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + javaPath + <doubleQuotes46>\<doubleQuotes46> mygame.jar <heap_args><doubleQuotes46>);<newline46mondego>"
"9234splitHere46","12202258splitHere46","java.home"
"9235splitHere46","12202258splitHere46","Process"
"9236splitHere46","12202264splitHere46","Application"
"9237splitHere46","12202270splitHere46","KeyDeserializer"
"9238splitHere46","12202270splitHere46","foos"
"9239splitHere46","12202270splitHere46","@JsonDeserialize(keyUsing=YourDeserializer.class)"
"9240splitHere46","12202404splitHere46","^(?:[^A-Za-z]*[A-Z][^\s,]*)*[^A-Za-z]*$<newline46mondego>"
"9241splitHere46","12202404splitHere46","^                # start of the string<newline46mondego>(?:              # this group matches a <doubleQuotes46>word<doubleQuotes46>, don't capture the group<newline46mondego>  [^A-Za-z]*     # skip any non-alphabet characters at start of the word<newline46mondego>  [A-Z]          # force an uppercase letter as a first letter<newline46mondego>  [^\s,]*        # match anything but word separators (\s and ,) after 1th letter<newline46mondego>)*               # the whole line consists of such <doubleQuotes46>words<doubleQuotes46><newline46mondego>[^A-Za-z]*       # skip any non-alphabet characters at the end of the string<newline46mondego>$                # end of the string<newline46mondego>"
"9242splitHere46","12202404splitHere46","[^\s,]"
"9243splitHere46","12202404splitHere46","[^,:-]"
"9244splitHere46","12202446splitHere46","xyzDao.getData(id)"
"9245splitHere46","12202446splitHere46","xyzDao"
"9246splitHere46","12202446splitHere46","//given<newline46mondego>XyzDao xyzDaoMock = mock(xyzDao);<newline46mondego>//inject to XyzService class under test<newline46mondego>given(xyzDaoMock.getData(id)).willReturn(Arrays.asList(...));<newline46mondego><newline46mondego>//when<newline46mondego>xyzService.populateData()  //...XyzService uses mocked XyzDao<newline46mondego><newline46mondego>//then<newline46mondego>"
"9247splitHere46","12202446splitHere46","verify()"
"9248splitHere46","12202446splitHere46","xyzDao"
"9249splitHere46","12202466splitHere46","MathUtils.random"
"9250splitHere46","12202466splitHere46","pItem.setCurrentTileIndex(MathUtils.random(0, pItem.getTileCount() - 1));<newline46mondego>"
"9251splitHere46","12202605splitHere46","java.net.ServerSocket clientSocket = new java.net.ServerSocket(5932)<newline46mondego>"
"9252splitHere46","12202732splitHere46","class Group {<newline46mondego>    List<Person> people;<newline46mondego>    void removePerson(Person p) {<newline46mondego>        if(people.remove(p))<newline46mondego>            p.removeFromGroup();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Person {<newline46mondego>    Group grp;<newline46mondego>    void removeFromGroup() {<newline46mondego>        grp.removePerson(this);<newline46mondego>        grp = null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9253splitHere46","12202816splitHere46","ArrayDeque"
"9254splitHere46","12202816splitHere46","Queue"
"9255splitHere46","12202816splitHere46","Deque"
"9256splitHere46","12202816splitHere46","List"
"9257splitHere46","12202816splitHere46","Deque"
"9258splitHere46","12202816splitHere46","Stack"
"9259splitHere46","12202816splitHere46","LinkedList"
"9260splitHere46","12202816splitHere46","removeFirstOccurrence"
"9261splitHere46","12202816splitHere46","removeLastOccurrence"
"9262splitHere46","12202816splitHere46","ArrayDeque"
"9263splitHere46","12202816splitHere46","addFirst(E e)"
"9264splitHere46","12202816splitHere46","addLast(E e)"
"9265splitHere46","12202816splitHere46","removeFirst()"
"9266splitHere46","12202816splitHere46","ArrayDeque"
"9267splitHere46","12202816splitHere46","ArrayDeque"
"9268splitHere46","12202816splitHere46","LinkedList"
"9269splitHere46","12202816splitHere46","ArrayList"
"9270splitHere46","12202882splitHere46","String enumName = <doubleQuotes46>a1<doubleQuotes46>;<newline46mondego> Animal a = Enum.valueOf (Animal.class (enumName));<newline46mondego> if (null == a) {<newline46mondego>      // error handler â€¦<newline46mondego> } else {<newline46mondego>      // do something interesting with â€œaâ€?<newline46mondego> }<newline46mondego>"
"9271splitHere46","12202900splitHere46","SecurityException"
"9272splitHere46","12203205splitHere46","System.out.println(<doubleQuotes46>setProgress: <doubleQuotes46>+(gotSize/getSize));<newline46mondego>setProgress((int)((gotSize/(getSize))*100));<newline46mondego>"
"9273splitHere46","12203205splitHere46","int value = (int)((gotSize/(getSize))*100);<newline46mondego>System.out.println(<doubleQuotes46>setProgress: <doubleQuotes46>+ value);<newline46mondego>setProgress(value);<newline46mondego>"
"9274splitHere46","12203205splitHere46","public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>        if (<doubleQuotes46>progress<doubleQuotes46> == evt.getPropertyName()) {<newline46mondego>            jpb.setValue((Integer) evt.getNewValue());<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"9275splitHere46","12203205splitHere46","=="
"9276splitHere46","12203205splitHere46","equals(...)"
"9277splitHere46","12203205splitHere46","equalsIgnoreCase(...)"
"9278splitHere46","12203205splitHere46","if (fu == <doubleQuotes46>bar<doubleQuotes46>) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"9279splitHere46","12203205splitHere46","if (<doubleQuotes46>bar<doubleQuotes46>.equals(fu)) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"9280splitHere46","12203205splitHere46","if (<doubleQuotes46>bar<doubleQuotes46>.equalsIgnoreCase(fu)) {<newline46mondego>  // do something<newline46mondego>}<newline46mondego>"
"9281splitHere46","12203332splitHere46","Statement stmt = con.createStatement();<newline46mondego>"
"9282splitHere46","12203332splitHere46","con = DBConnector.getConnection();<newline46mondego>"
"9283splitHere46","12203338splitHere46","list"
"9284splitHere46","12203338splitHere46","<form:form ...><newline46mondego>  <form:select multiple=<doubleQuotes46>true<doubleQuotes46> path=<doubleQuotes46>list<doubleQuotes46>><newline46mondego>    <form:options /><newline46mondego>  </form:select><newline46mondego></form:form><newline46mondego>"
"9285splitHere46","12203338splitHere46","options"
"9286splitHere46","12203338splitHere46","toString()"
"9287splitHere46","12203372splitHere46","jar -cvfm name.jar manifest.txt -C classes .<newline46mondego>"
"9288splitHere46","12203407splitHere46","while (true) <newline46mondego>           {<newline46mondego>             line = is.readLine();<newline46mondego>             os.println(line); <newline46mondego>           }<newline46mondego>"
"9289splitHere46","12203407splitHere46","while (!line.equals(<doubleQuotes46>Hello Server!<doubleQuotes46>)) <newline46mondego>           {<newline46mondego>             line = is.readLine();<newline46mondego>             os.println(line); <newline46mondego>           }<newline46mondego>"
"9290splitHere46","12203504splitHere46","public boolean equals(TestEquals equals) {<newline46mondego>    return false<newline46mondego>}<newline46mondego>"
"9291splitHere46","12203524splitHere46","<li><span class=<doubleQuotes46>[^<doubleQuotes46>]+<doubleQuotes46>><a href=<doubleQuotes46>[^<doubleQuotes46>]+<doubleQuotes46>>[^>]+</a></span></li> <newline46mondego>"
"9292splitHere46","12203524splitHere46","<li><span class=<doubleQuotes46>[^<doubleQuotes46>]+<doubleQuotes46>><a href=<doubleQuotes46>[^<doubleQuotes46>]+<doubleQuotes46>> <newline46mondego>"
"9293splitHere46","12203524splitHere46","</a></span></li> <newline46mondego>"
"9294splitHere46","12203555splitHere46","BufferedReader"
"9295splitHere46","12203555splitHere46","InputStream"
"9296splitHere46","12203555splitHere46","close()"
"9297splitHere46","12203555splitHere46","close()"
"9298splitHere46","12203555splitHere46","public static void read(String str) throws IOException {<newline46mondego>    FileInputStream stream = null<newline46mondego>    try {<newline46mondego>        stream = new FileInputStream(str);<newline46mondego>        readStreamToConsole(stream);<newline46mondego>    } finally {<newline46mondego>        if (stream != null)<newline46mondego>            stream.close();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private static void readStreamToConsole(InputStream stream) {<newline46mondego>    BufferedReader stdOut = new BufferedReader(new InputStreamReader(stream));<newline46mondego>    String output = null;<newline46mondego>    while ((output = stdOut.readLine()) != null)<newline46mondego>        System.out.println(output);<newline46mondego>}<newline46mondego>"
"9299splitHere46","12203555splitHere46","IOException"
"9300splitHere46","12203555splitHere46","BufferedWriter"
"9301splitHere46","12203555splitHere46","private static final String NEWLINE = System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>);<newline46mondego><newline46mondego>public static void main(String[] args) throws IOException {<newline46mondego>    String file = <doubleQuotes46>foo/bar.txt<doubleQuotes46>;<newline46mondego>    FileOutputStream stream = null;<newline46mondego>    try {<newline46mondego>        stream = new FileOutputStream(file);<newline46mondego>        writeLine(stream, <doubleQuotes46>Line 1<doubleQuotes46>);<newline46mondego>        writeLine(stream, <doubleQuotes46>Line 2<doubleQuotes46>);<newline46mondego>    } finally {<newline46mondego>        if (stream != null)<newline46mondego>            stream.close();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private static void writeLine(OutputStream stream, String line) throws IOException {<newline46mondego>    BufferedWriter writer = new BufferedWriter(new InputStreamWriter(stream));<newline46mondego>    writer.write(line + NEWLINE);<newline46mondego>}<newline46mondego>"
"9302splitHere46","12203555splitHere46","writer"
"9303splitHere46","12203555splitHere46","line"
"9304splitHere46","12203555splitHere46","String"
"9305splitHere46","12203555splitHere46","main"
"9306splitHere46","12203555splitHere46","private static void writeLine(OutputStream stream, String line) throws IOException {<newline46mondego>    BufferedWriter writer = null;<newline46mondego>    try {<newline46mondego>        writer = new BufferedWriter(new InputStreamWriter(stream));<newline46mondego>        writer.write(line + NEWLINE);<newline46mondego>    } finally {<newline46mondego>        if (writer != null)<newline46mondego>            writer.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9307splitHere46","12203555splitHere46","writeLine"
"9308splitHere46","12203555splitHere46","writeLine"
"9309splitHere46","12203555splitHere46","writeLine"
"9310splitHere46","12203555splitHere46","BufferedWriter"
"9311splitHere46","12203555splitHere46","FileOutputStream"
"9312splitHere46","12203707splitHere46","parse"
"9313splitHere46","12203707splitHere46","DateTime"
"9314splitHere46","12203707splitHere46","new DateTime(DateTime.parse(<doubleQuotes46>2012-08-16T07:22:05Z<doubleQuotes46>))<newline46mondego>"
"9315splitHere46","12203734splitHere46","Spring 3.0.6"
"9316splitHere46","12203734splitHere46","JBoss"
"9317splitHere46","12203820splitHere46","Maven"
"9318splitHere46","12203820splitHere46","Eclipse"
"9319splitHere46","12203820splitHere46","Package View"
"9320splitHere46","12203820splitHere46","target"
"9321splitHere46","12203820splitHere46","classes"
"9322splitHere46","12203820splitHere46","test-classes"
"9323splitHere46","12203820splitHere46","Eclipse's"
"9324splitHere46","12203820splitHere46","Package Explorer"
"9325splitHere46","12203820splitHere46","Maven"
"9326splitHere46","12203820splitHere46","Eclipse"
"9327splitHere46","12203820splitHere46","Maven"
"9328splitHere46","12203820splitHere46","Eclipse"
"9329splitHere46","12203820splitHere46","target/classes"
"9330splitHere46","12203820splitHere46","target/test-classes"
"9331splitHere46","12203820splitHere46","Eclipse's"
"9332splitHere46","12203820splitHere46","Package Explorer"
"9333splitHere46","12203820splitHere46","Eclipse's"
"9334splitHere46","12203820splitHere46","Package View"
"9335splitHere46","12203820splitHere46","Project View"
"9336splitHere46","12203871splitHere46","Criteria crit = session.createCriteria(Order.class)<newline46mondego>    .createCriteria(<doubleQuotes46>Items<doubleQuotes46>)<newline46mondego>        .add(Restrictions.gt(<doubleQuotes46>count<doubleQuotes46>, 1))<newline46mondego>        .add(Restrictions.gt(<doubleQuotes46>price<doubleQuotes46>, 10))<newline46mondego>    .list();<newline46mondego>"
"9337splitHere46","12203871splitHere46","SELECT * FROM orders o join items i ON ... WHERE i.count > 1 and i.price > 10<newline46mondego>"
"9338splitHere46","12203871splitHere46","Criteria crit = session.createCriteria(Order.class)<newline46mondego>    .createAlias(<doubleQuotes46>Items<doubleQuotes46>, <doubleQuotes46>item<doubleQuotes46>)<newline46mondego>    .add(Restrictions.gt(<doubleQuotes46>item.count<doubleQuotes46>, 1))<newline46mondego>    .add(Restrictions.gt(<doubleQuotes46>item.price<doubleQuotes46>, 10))<newline46mondego>    .list();<newline46mondego>"
"9339splitHere46","12204110splitHere46","//table[@class='results'])/tbody/tr[position()=5]/td/a<newline46mondego>"
"9340splitHere46","12204110splitHere46","//table[@class='results']/tbody/tr[5]/td[2]/a<newline46mondego>"
"9341splitHere46","12204151splitHere46","Class<? extends **theInterface**> implementingObject<newline46mondego>"
"9342splitHere46","12204451splitHere46","@Element(name=<doubleQuotes46>timeunit<doubleQuotes46>, required=true)<newline46mondego>@Convert(TimeUnitConverter.class)<newline46mondego>private static final TimeUnit timeunit = TimeUnit.SECONDS;<newline46mondego>"
"9343splitHere46","12204451splitHere46","public class TimeUnitConverter implements Converter<TimeUnit><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public TimeUnit read(InputNode node) throws Exception<newline46mondego>    {<newline46mondego>        return TimeUnit.valueOf(node.getValue().toUpperCase());<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public void write(OutputNode node, TimeUnit value) throws Exception<newline46mondego>    {<newline46mondego>        node.getAttributes().remove(<doubleQuotes46>class<doubleQuotes46>); /* Not required */<newline46mondego>        node.setValue(value.toString().toLowerCase());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9344splitHere46","12204516splitHere46","java."
"9345splitHere46","12204516splitHere46","javax."
"9346splitHere46","12204516splitHere46","import java.awt.image.BufferedImage;<newline46mondego>import java.io.ByteArrayInputStream;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.xml.bind.DatatypeConverter;<newline46mondego><newline46mondego>String base64String = <doubleQuotes46>...<doubleQuotes46>;<newline46mondego>byte[] bytes = DatatypeConverter.parseBase64Binary(base64String);<newline46mondego>ByteArrayInputStream bin = new ByteArrayInputStream(bytes);<newline46mondego>BufferedImage img = ImageIO.read(bin);<newline46mondego>// NB ImageIO doesn't close the provided input stream, but ByteArrayInputStream<newline46mondego>// doesn't need to be closed anyway so it doesn't matter.<newline46mondego>"
"9347splitHere46","12204540splitHere46","interface"
"9348splitHere46","12204540splitHere46","class"
"9349splitHere46","12204540splitHere46","interface"
"9350splitHere46","12204824splitHere46","MyObject"
"9351splitHere46","12204824splitHere46","MyMethod"
"9352splitHere46","12204824splitHere46","MyMethod"
"9353splitHere46","12204824splitHere46","MyObject"
"9354splitHere46","12204850splitHere46","Intent#uriString"
"9355splitHere46","12204850splitHere46","android.net.Uri"
"9356splitHere46","12204850splitHere46","JsonDeserializer<Uri>"
"9357splitHere46","12204850splitHere46","public class UriDeserializer implements JsonDeserializer<Uri> {<newline46mondego>  @Override<newline46mondego>  public Uri deserialize(final JsonElement src, final Type srcType,<newline46mondego>      final JsonDeserializationContext context) throws JsonParseException {<newline46mondego>    return Uri.parse(src.getAsString());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9358splitHere46","12204850splitHere46","GsonBuilder"
"9359splitHere46","12204850splitHere46","Gson gson = new GsonBuilder()<newline46mondego>    .registerTypeAdapter(Uri.class, new UriDeserializer())<newline46mondego>    .create();<newline46mondego>"
"9360splitHere46","12205013splitHere46","http://ant.apache.org/ivy/history/latest-milestone/resolver/ibiblio.html<newline46mondego><ibiblio name=<doubleQuotes46>maven2<doubleQuotes46> m2compatible=<doubleQuotes46>true<doubleQuotes46> root=<doubleQuotes46>http://myivyserver:8888/mirrored<doubleQuotes46>><newline46mondego>"
"9361splitHere46","12205309splitHere46","String str = String.format(<doubleQuotes46>%.2f<doubleQuotes46>, 3.99999);<newline46mondego>textView.setText(str);<newline46mondego>"
"9362splitHere46","12205328splitHere46","@RequestMapping(value=<doubleQuotes46>/{batchid}/{phone}<doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>@ResponseBody<newline46mondego>public BatchDetail  findByPhone(@PathVariable String phone, @PathVariable String batchid) {<newline46mondego>    return batchDetailService.findByPhone(phone);<newline46mondego><newline46mondego>}<newline46mondego>"
"9363splitHere46","12205345splitHere46","jobsForm.addGameKeyListener(Display.GAME_FIRE,<newline46mondego>                new ActionListener() {<newline46mondego>                    public void actionPerformed(ActionEvent evt) {<newline46mondego>                    //do something here<newline46mondego>                    }<newline46mondego>                });<newline46mondego><newline46mondego>        jobsForm.addPointerPressedListener(new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent evt) {<newline46mondego>                pointer_click = true;<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        jobsForm.addPointerReleasedListener(new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent evt) {<newline46mondego>                if (pointer_click) {<newline46mondego>                    //<newline46mondego>                }<newline46mondego>                pointer_click = false;<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        jobsForm.addPointerDraggedListener(new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent evt) {<newline46mondego>                //System.out.println(<doubleQuotes46>POINTER DRAGGED<doubleQuotes46>);<newline46mondego>                pointer_click = false;<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"9364splitHere46","12205461splitHere46","p.setContinuousLayout(true);<newline46mondego>"
"9365splitHere46","12205487splitHere46","(T) a"
"9366splitHere46","12205487splitHere46","T"
"9367splitHere46","12205487splitHere46","a"
"9368splitHere46","12205487splitHere46","T"
"9369splitHere46","12205487splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)"
"9370splitHere46","12205487splitHere46","public class Test {<newline46mondego>   public <T> void someGenericMethod(Class<T> clazz, Integer a) {<newline46mondego>      T t = clazz.cast(a);<newline46mondego>      System.out.println(t);<newline46mondego>      System.out.println(t.getClass());<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      Test test = new Test();<newline46mondego>      // gives a ClassCastException at runtime:<newline46mondego>      test.someGenericMethod(BigDecimal.class, 42);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9371splitHere46","12205487splitHere46","clazz"
"9372splitHere46","12205487splitHere46","T"
"9373splitHere46","12205487splitHere46","test.<BigDecimal>someGenericMethod"
"9374splitHere46","12205487splitHere46","public static void main(String[] args) {<newline46mondego>   Test test = new Test();<newline46mondego>   Class clazz = Object.class;<newline46mondego>   test.someGenericMethod((Class<BigDecimal>) clazz, 42);<newline46mondego>}<newline46mondego>"
"9375splitHere46","12205487splitHere46","main"
"9376splitHere46","12205487splitHere46","someGenericMethod"
"9377splitHere46","12205604splitHere46","-Djava.lang.Integer.IntegerCache.high=4711"
"9378splitHere46","12205681splitHere46","Calendar c = Calendar.getInstance(Locale.FRANCE);<newline46mondego>"
"9379splitHere46","12205767splitHere46","MBeanExporter"
"9380splitHere46","12205767splitHere46","MBeanExporter"
"9381splitHere46","12205767splitHere46","MBeanExporter.registerManagedResource(...)"
"9382splitHere46","12205767splitHere46","...<newline46mondego>mbeanExporter.registerManagedResource(beanInstance);<newline46mondego>...<newline46mondego><newline46mondego>@Required<newline46mondego>public void setMbeanExporter(MBeanExporter mbeanExporter) {<newline46mondego>    this.mbeanExporter = mbeanExporter;<newline46mondego>}<newline46mondego>"
"9383splitHere46","12205767splitHere46","NamingPolicy"
"9384splitHere46","12205854splitHere46","Processor"
"9385splitHere46","12205854splitHere46","public interface IProcessor {<newline46mondego>     public void process(Bean bean);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public FooProcessor implements IProcessor {<newline46mondego>     void process(Bean bean){<newline46mondego>          // Process data<newline46mondego>     }<newline46mondego>}<newline46mondego><newline46mondego>public BarProcessor implements IProcessor {<newline46mondego>     void process(Bean bean){<newline46mondego>          // Process data<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"9386splitHere46","12205854splitHere46","public static void main() {<newline46mondego>     List<IProcessor> processors = new List<IProcessor>();<newline46mondego>     processors.add(new FooProcessor());<newline46mondego>     processors.add(new BarProcessor());<newline46mondego><newline46mondego>     Bean bean = // some data;<newline46mondego><newline46mondego>     for(IProcessor processor : processors){<newline46mondego>          processor.process(bean);<newline46mondego>     }<newline46mondego><newline46mondego>}<newline46mondego>"
"9387splitHere46","12205903splitHere46","out.print"
"9388splitHere46","12205963splitHere46","int MAX_DISTANCE = 50;<newline46mondego>  int direction = (int) (Math.random() * 360) % 360;<newline46mondego>  int distance = (int) (Math.random() * MAX_DISTANCE) % MAX_DISTANCE;<newline46mondego>"
"9389splitHere46","12206007splitHere46","@Override<newline46mondego>public <E extends BaseEntity> ObjectId persist(E entity) {<newline46mondego>    delta(entity);<newline46mondego>    mongoDataStore.save(entity);<newline46mondego>    return entity.getId();<newline46mondego>}<newline46mondego>"
"9390splitHere46","12206007splitHere46","protected <E extends BaseEntity> void delta(E newEntity) {<newline46mondego><newline46mondego>    // If the entity is null or has no ID, it hasn't been persisted before,<newline46mondego>    // so there's no delta to calculate<newline46mondego>    if ((newEntity == null) || (newEntity.getId() == null)) {<newline46mondego>        return;<newline46mondego>    }<newline46mondego><newline46mondego>    // Get the original entity<newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    E oldEntity = (E) mongoDataStore.get(newEntity.getClass(), newEntity.getId()); <newline46mondego><newline46mondego>    // Ensure that the old entity isn't null<newline46mondego>    if (oldEntity == null) {<newline46mondego>        LOG.error(<doubleQuotes46>Tried to compare and persist null objects - this is not allowed<doubleQuotes46>);<newline46mondego>        return;<newline46mondego>    }<newline46mondego><newline46mondego>    // Get the current user and ensure it is not null<newline46mondego>    String email = ...;<newline46mondego><newline46mondego>    // Calculate the difference<newline46mondego>    // We need to fetch the fields from the parent entity as well as they<newline46mondego>    // are not automatically fetched<newline46mondego>    Field[] fields = ArrayUtils.addAll(newEntity.getClass().getDeclaredFields(),<newline46mondego>            BaseEntity.class.getDeclaredFields());<newline46mondego>    Object oldField = null;<newline46mondego>    Object newField = null;<newline46mondego>    StringBuilder delta = new StringBuilder();<newline46mondego>    for (Field field : fields) {<newline46mondego>        field.setAccessible(true); // We need to access private fields<newline46mondego>        try {<newline46mondego>            oldField = field.get(oldEntity);<newline46mondego>            newField = field.get(newEntity);<newline46mondego>        } catch (IllegalArgumentException e) {<newline46mondego>            LOG.error(<doubleQuotes46>Bad argument given<doubleQuotes46>);<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (IllegalAccessException e) {<newline46mondego>            LOG.error(<doubleQuotes46>Could not access the argument<doubleQuotes46>);<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        if ((oldField != newField)<newline46mondego>                && (((oldField != null) && !oldField.equals(newField)) || ((newField != null) && !newField<newline46mondego>                        .equals(oldField)))) {<newline46mondego>            delta.append(field.getName()).append(<doubleQuotes46>: [<doubleQuotes46>).append(oldField).append(<doubleQuotes46>] -> [<doubleQuotes46>)<newline46mondego>                    .append(newField).append(<doubleQuotes46>]  <doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // Persist the difference<newline46mondego>    if (delta.length() == 0) {<newline46mondego>        LOG.warn(<doubleQuotes46>The delta is empty - this should not happen<doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        DeltaEntity deltaEntity = new DeltaEntity(oldEntity.getClass().toString(),<newline46mondego>                oldEntity.getId(), oldEntity.getUuid(), email, delta.toString());<newline46mondego>        mongoDataStore.save(deltaEntity);<newline46mondego>    }<newline46mondego>    return;<newline46mondego>}<newline46mondego>"
"9391splitHere46","12206007splitHere46","@Entity(value = <doubleQuotes46>delta<doubleQuotes46>, noClassnameStored = true)<newline46mondego>public final class DeltaEntity extends BaseEntity {<newline46mondego>    private static final long serialVersionUID = -2770175650780701908L;<newline46mondego><newline46mondego>    private String entityClass; // Do not call this className as Morphia will<newline46mondego>                            // try to work some magic on this automatically<newline46mondego>    private ObjectId entityId;<newline46mondego>    private String entityUuid;<newline46mondego>    private String userEmail;<newline46mondego>    private String delta;<newline46mondego><newline46mondego>    public DeltaEntity() {<newline46mondego>        super();<newline46mondego>    }<newline46mondego><newline46mondego>    public DeltaEntity(final String entityClass, final ObjectId entityId, final String entityUuid,<newline46mondego>            final String userEmail, final String delta) {<newline46mondego>        this();<newline46mondego>        this.entityClass = entityClass;<newline46mondego>        this.entityId = entityId;<newline46mondego>        this.entityUuid = entityUuid;<newline46mondego>        this.userEmail = userEmail;<newline46mondego>        this.delta = delta;<newline46mondego>    }<newline46mondego>"
"9392splitHere46","12206018splitHere46","a.name"
"9393splitHere46","12206018splitHere46","b.name"
"9394splitHere46","12206018splitHere46","compareToIgnoreCase"
"9395splitHere46","12206018splitHere46","final Comparator<ItemObject> ignoreLeadingThe = new Comparator<ItemObject>() {<newline46mondego><newline46mondego>  final Pattern pattern = Pattern.compile(<doubleQuotes46>(?i(^the\\s+<doubleQuotes46>);<newline46mondego><newline46mondego>  public int compare(final ItemObject a, final ItemObject b) {<newline46mondego>    return pattern.matcher(a.name).replaceAll(<doubleQuotes46><doubleQuotes46>)<newline46mondego>        .compareToIgnoreCase(pattern.matcher(b.name).replaceAll(<doubleQuotes46><doubleQuotes46>));<newline46mondego>  }<newline46mondego>};<newline46mondego>"
"9396splitHere46","12206023splitHere46","replay(...)"
"9397splitHere46","12206023splitHere46","reset(...)"
"9398splitHere46","12206023splitHere46","EasyMock.expecting(baseDao.findByNamedQuery(<doubleQuotes46>def.query<doubleQuotes46>), EasyMock.anyLong)<newline46mondego>   .andReturn(...);<newline46mondego>EasyMock.replay(baseDao);<newline46mondego>"
"9399splitHere46","12206023splitHere46","EasyMock.expecting(baseDao.findByNamedQuery((String)EasyMock.anyObject()), <newline46mondego>   EasyMock.anyLong).andReturn(...);<newline46mondego>"
"9400splitHere46","12206080splitHere46","android:background=<doubleQuotes46>@string/app_name<doubleQuotes46>"
"9401splitHere46","12206080splitHere46","android:background=<doubleQuotes46>@drawable/name of drawable<doubleQuotes46><newline46mondego>"
"9402splitHere46","12206080splitHere46","android:background=<doubleQuotes46>@color/name of color<doubleQuotes46><newline46mondego>"
"9403splitHere46","12206149splitHere46","compile"
"9404splitHere46","12206149splitHere46","test"
"9405splitHere46","12206149splitHere46","test"
"9406splitHere46","12206149splitHere46","compile"
"9407splitHere46","12206158splitHere46","System.out.println(list);"
"9408splitHere46","12206222splitHere46","final SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>the format you want<doubleQuotes46>);<newline46mondego>sdf.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>UTC<doubleQuotes46>));<newline46mondego>final String utcTime = sdf.format(new Date());<newline46mondego>"
"9409splitHere46","12206222splitHere46","public static Date nowInUTC() <newline46mondego>{<newline46mondego>  return new Date();<newline46mondego>}<newline46mondego>"
"9410splitHere46","12206329splitHere46","class A {<newline46mondego>   int m(List<String> ls) { return 0; }<newline46mondego>   long m(List<Integer> ls) { return 1; }<newline46mondego>}<newline46mondego>"
"9411splitHere46","12206374splitHere46","public void onClick(View v) {<newline46mondego>  ((MyActivity)v.getContext()).insertNotificationMethod(v.getId());<newline46mondego>}<newline46mondego>"
"9412splitHere46","12206374splitHere46","MyActivity.this.insertNotificationMethod(v.getId());<newline46mondego>"
"9413splitHere46","12206495splitHere46","/* imageType should be one of the variants that includes alpha  */<newline46mondego>final BufferedImage composited = new BufferedImage(width, height, imageType);<newline46mondego>final Graphics graphics = composited.getGraphics();<newline46mondego>for (final Image layer : layers) {<newline46mondego>  /* draw the image at 0,0 */<newline46mondego>  graphics.drawImage(layer, 0, 0, null);<newline46mondego>}<newline46mondego>graphics.dispose();<newline46mondego>"
"9414splitHere46","12206517splitHere46","JAVA_HOME=<doubleQuotes46>$( readlink -f <doubleQuotes46>$( which java )<doubleQuotes46> | sed <doubleQuotes46>s:bin/.*$::<doubleQuotes46> )<doubleQuotes46><newline46mondego>"
"9415splitHere46","12206574splitHere46","x = (-800 - 20 * t + 300 + 100 * t) / 2<newline46mondego>y = (1000 + 80 * t + 100 + 50 * t) / 2<newline46mondego>"
"9416splitHere46","12206574splitHere46","x = -250 + 40 * t<newline46mondego>y = 550 + 65 * t<newline46mondego>"
"9417splitHere46","12206574splitHere46","sqrt((40 * 40) + (65 * 65))"
"9418splitHere46","12206592splitHere46","C:\"
"9419splitHere46","12206592splitHere46","C:"
"9420splitHere46","12206592splitHere46","http:"
"9421splitHere46","12206592splitHere46","C:"
"9422splitHere46","12206592splitHere46","file:///C:/..."
"9423splitHere46","12206592splitHere46","File.toURI()"
"9424splitHere46","12206797splitHere46","LogManager"
"9425splitHere46","12206797splitHere46","static {<newline46mondego>    // (...)<newline46mondego>    // if there is no default init override, then get the resource<newline46mondego>    // specified by the user or the default config file.<newline46mondego>    if (override == null || <doubleQuotes46>false<doubleQuotes46>.equalsIgnoreCase(override)) {<newline46mondego>        // (...)<newline46mondego>        URL url = null;<newline46mondego><newline46mondego>        // (...)    <newline46mondego>        // If we have a non-null url, then delegate the rest of the<newline46mondego>        // configuration to the OptionConverter.selectAndConfigure method.<newline46mondego>        if (url != null) {<newline46mondego>            LogLog.debug(<doubleQuotes46>Using URL [<doubleQuotes46> + url + <doubleQuotes46>] for automatic log4j configuration.<doubleQuotes46>);<newline46mondego>            OptionConverter.selectAndConfigure(<newline46mondego>                url, configuratorClassName, LogManager.getLoggerRepository()<newline46mondego>            );<newline46mondego>        } else {<newline46mondego>            LogLog.debug(<doubleQuotes46>Could not find resource: [<doubleQuotes46> + configurationOptionStr + <doubleQuotes46>].<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9426splitHere46","12206797splitHere46","OptionConverter.selectAndConfigure(URL, ..)"
"9427splitHere46","12206797splitHere46","import java.net.URL;<newline46mondego>import org.apache.log4j.helpers.OptionConverter;<newline46mondego>import org.apache.log4j.LogManager;<newline46mondego><newline46mondego>public aspect Log4jAspect {<newline46mondego>    before(URL defaultURL) :<newline46mondego>        within(LogManager) &&<newline46mondego>        cflow(staticinitialization(LogManager)) &&<newline46mondego>        call(* OptionConverter.selectAndConfigure(URL, ..)) &&<newline46mondego>        args(defaultURL, ..)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>log4j default URL = <doubleQuotes46> + defaultURL);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9428splitHere46","12206797splitHere46","OptionConverter.selectAndConfigure"
"9429splitHere46","12206853splitHere46","toHextString"
"9430splitHere46","12206853splitHere46","0x"
"9431splitHere46","12206853splitHere46","public static String toHexString(double d)"
"9432splitHere46","12206853splitHere46","3.10.1. Integer Literals"
"9433splitHere46","12206853splitHere46","IntegerTypeSuffix"
"9434splitHere46","12206853splitHere46","3.10.2. Floating-Point Literals"
"9435splitHere46","12206855splitHere46","ArrayBlockingQueue"
"9436splitHere46","12206855splitHere46","ExecutorService"
"9437splitHere46","12207028splitHere46","CLOSE_WAIT"
"9438splitHere46","12207028splitHere46","TIME_WAIT"
"9439splitHere46","12207028splitHere46","Socket"
"9440splitHere46","12207100splitHere46","main()"
"9441splitHere46","12207100splitHere46","ls_in.readLine()"
"9442splitHere46","12207100splitHere46","addTick()"
"9443splitHere46","12207100splitHere46","while ((ls_str = ls_in.readLine()) != null) { <newline46mondego>        System.out.println(ls_str);<newline46mondego>        progressBar.addTick();<newline46mondego>    } <newline46mondego>"
"9444splitHere46","12207100splitHere46","String bar = <doubleQuotes46>#<doubleQuotes46>;<newline46mondego><newline46mondego>    public void addTick()<newline46mondego>    {<newline46mondego>        if(bar.length() < maxBarLength) {<newline46mondego>            bar = bar + <doubleQuotes46>#<doubleQuotes46>;<newline46mondego>            drawBar(bar);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void draw()<newline46mondego>    {<newline46mondego>        drawBar(bar);<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint()<newline46mondego>    {<newline46mondego>        // draw some stuff<newline46mondego>        draw(bar);<newline46mondego>    }<newline46mondego>"
"9445splitHere46","12207154splitHere46","ActionListener"
"9446splitHere46","12207154splitHere46","progressLabel.start();<newline46mondego>try {<newline46mondego>    Thread.sleep(10000);<newline46mondego>} catch (InterruptedException ex) {<newline46mondego>    Exceptions.printStackTrace(ex);<newline46mondego>}<newline46mondego>//the above sleep() call will be replace by some time-consuming process. It is there just for testing now<newline46mondego><newline46mondego>progressLabel.done();<newline46mondego>"
"9447splitHere46","12207154splitHere46","ActionListener"
"9448splitHere46","12207154splitHere46","isRunning"
"9449splitHere46","12207154splitHere46","running"
"9450splitHere46","12207154splitHere46","if (progressLabel.isRunning()) {<newline46mondego>    progressLabel.done();<newline46mondego>} else {<newline46mondego>    progressLabel.start();<newline46mondego>}<newline46mondego>"
"9451splitHere46","12207265splitHere46","<doubleQuotes46><feed><doubleQuotes46>"
"9452splitHere46","12207265splitHere46","<doubleQuotes46><fed><doubleQuotes46>"
"9453splitHere46","12207265splitHere46","<doubleQuotes46><fiid><doubleQuotes46>"
"9454splitHere46","12207265splitHere46","feedMatch.find()"
"9455splitHere46","12207265splitHere46","while"
"9456splitHere46","12207434splitHere46","my-project/<newline46mondego>  pom.xml -- <packaging>pom</packaging><newline46mondego>  core/<newline46mondego>    pom.xml -- <packaging>jar</packaging><newline46mondego>    src/<newline46mondego>  ui/<newline46mondego>    pom.xml -- <packaging>pom</packaging><newline46mondego>    mvc/<newline46mondego>      pom.xml -- <packaging>war</packaging><newline46mondego>      src/<newline46mondego>"
"9457splitHere46","12207486splitHere46","<applet <newline46mondego>  code=<doubleQuotes46>de.wim.outldd.examples.DragDropTest_ModeMemoryStream<doubleQuotes46> <newline46mondego>  archive=<doubleQuotes46>outIdd.jar<doubleQuotes46> <newline46mondego>  width=<doubleQuotes46>500<doubleQuotes46> <newline46mondego>  height=<doubleQuotes46>500<doubleQuotes46>/><newline46mondego>"
"9458splitHere46","12207486splitHere46","<applet <newline46mondego>  code=<doubleQuotes46>de.wim.outldd.examples.DragDropTest_ModeMemoryStream<doubleQuotes46> <newline46mondego>  archive=<doubleQuotes46>outldd.jar<doubleQuotes46> <newline46mondego>  width=<doubleQuotes46>500<doubleQuotes46> <newline46mondego>  height=<doubleQuotes46>500<doubleQuotes46>><newline46mondego></applet><newline46mondego>"
"9459splitHere46","12207559splitHere46","source_object = new HashMap<Object, Object>(source_object);<newline46mondego>"
"9460splitHere46","12207585splitHere46","SystemParametersInfo"
"9461splitHere46","12207585splitHere46","SPI_SETDESKWALLPAPER"
"9462splitHere46","12207766splitHere46","Constants.USER_REQUEST_URI"
"9463splitHere46","12207766splitHere46","session.getAttribute(Constants.USER_REQUEST_URI)<newline46mondego>"
"9464splitHere46","12207811splitHere46","<div class=<doubleQuotes46>control-group ${requestScope['org.springframework.validation.BindingResult.user'].hasFieldErrors('firstName') ? 'error' : ''}<doubleQuotes46>><newline46mondego>"
"9465splitHere46","12208028splitHere46","startAnimation(AnimationUtils.loadAnimation(context,R.anim.shake));<newline46mondego>"
"9466splitHere46","12208038splitHere46","E"
"9467splitHere46","12208038splitHere46","createArray(); // no exception<newline46mondego>String[] arr = createArray(); // causes ClassCastException<newline46mondego><newline46mondego>public static <E> E[] createArray() {<newline46mondego>    return (E[]) new Object[1];<newline46mondego>}<newline46mondego>"
"9468splitHere46","12208038splitHere46","Array.newInstance"
"9469splitHere46","12208038splitHere46","public static <E> E[] createArray(Class<E> component) {<newline46mondego>    return (E[]) Array.newInstance(component, 1);<newline46mondego>}<newline46mondego>"
"9470splitHere46","12208038splitHere46","ClassCastException"
"9471splitHere46","12208170splitHere46","@Autowired"
"9472splitHere46","12208170splitHere46","@Inject"
"9473splitHere46","12208170splitHere46","BeanPostProcessor"
"9474splitHere46","12208170splitHere46","AutowiredAnnotationBeanPostProcessor"
"9475splitHere46","12208171splitHere46","if (j >= sheetRows * sheetNumber) {  <newline46mondego>                    break;  <newline46mondego>                }  <newline46mondego>"
"9476splitHere46","12208171splitHere46","if (j >sheetRows * sheetNumber) {  <newline46mondego>                    break;  <newline46mondego>                } <newline46mondego>"
"9477splitHere46","12208196splitHere46","<dependency>    <newline46mondego>    <groupId>org.jdom</groupId><newline46mondego>    <artifactId>jdom</artifactId>    <newline46mondego>    <version>2.0.2</version><newline46mondego></dependency><newline46mondego>"
"9478splitHere46","12208196splitHere46","jdom-2.0.2.jar"
"9479splitHere46","12208196splitHere46","org.jdom2.Verifier.class"
"9480splitHere46","12208255splitHere46","Attribute"
"9481splitHere46","12208255splitHere46","String[] turn1 = idList.split(<doubleQuotes46>,<doubleQuotes46>); <newline46mondego>String[] turn2 = labelList.split(<doubleQuotes46>,<doubleQuotes46>); <newline46mondego>List<Attribute> Temp = new ArrayList<Attribute>(); <newline46mondego><newline46mondego>for(int i=0;i<turn1.length;i++){ <newline46mondego>    long getId;<newline46mondego>    Attribute attribute = new Attribute(); <newline46mondego>    getId = Integer.parseInt(turn1[i]); <newline46mondego>    attribute.setId(getId); <newline46mondego>    attribute.setLabel(turn2[i]); <newline46mondego>    Temp.add(attribute); <newline46mondego>} <newline46mondego><newline46mondego>for(int i=0;i<3;i++) <newline46mondego>System.out.println(Temp.get(i)); <newline46mondego>"
"9482splitHere46","12208284splitHere46","private class MenuListener implements ActionListener {<newline46mondego>    @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        Object caller = e.getSource();<newline46mondego>        if (caller != null && caller.instanceOf JMenuItem) {<newline46mondego>            JMenuItem src = (JMenuItem)caller;<newline46mondego>            String size = src.getText();<newline46mondego><newline46mondego>            if (size != null) {<newline46mondego>                float fontSize = Float.parseFloat(size);<newline46mondego>                texto.setFont(aryal.deriveFont(fontSize));<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9483splitHere46","12208284splitHere46","MenuListener listener = new MenuListener();<newline46mondego>JMenuItem font18 = new JMenuItem(<doubleQuotes46>18<doubleQuotes46>);<newline46mondego>font18.setActionListener(listener);<newline46mondego>"
"9484splitHere46","12208284splitHere46","deriveFont"
"9485splitHere46","12208284splitHere46","setFont"
"9486splitHere46","12208284splitHere46","Font font; // some font you already have instantiated<newline46mondego>float size = 20f; // the target font size<newline46mondego>Font newFont = font.deriveFont(size); // the newly sized font<newline46mondego>"
"9487splitHere46","12208284splitHere46","MenuListener"
"9488splitHere46","12208284splitHere46","public"
"9489splitHere46","12208284splitHere46","cambiar"
"9490splitHere46","12208284splitHere46","public class cambiar extends JFrame { <newline46mondego>    ... your existing code here ...<newline46mondego><newline46mondego>    private class MenuListener implements ActionListener {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9491splitHere46","12208340splitHere46","usage"
"9492splitHere46","12208343splitHere46","<sup>"
"9493splitHere46","12208400splitHere46","while"
"9494splitHere46","12208400splitHere46","iterator"
"9495splitHere46","12208400splitHere46","iterator"
"9496splitHere46","12208400splitHere46","list"
"9497splitHere46","12208400splitHere46","map.keySet()"
"9498splitHere46","12208400splitHere46","while"
"9499splitHere46","12208400splitHere46","iterator.hasNext()"
"9500splitHere46","12208400splitHere46","false"
"9501splitHere46","12208400splitHere46","Enhanced For Loop"
"9502splitHere46","12208400splitHere46","while"
"9503splitHere46","12208400splitHere46","for(String key: map.keySet()){<newline46mondego>    //your logic<newline46mondego>}<newline46mondego>"
"9504splitHere46","12208463splitHere46","WEB-INF/lib"
"9505splitHere46","12208463splitHere46","lib"
"9506splitHere46","12208463splitHere46","codebase=<doubleQuotes46>/lib<doubleQuotes46>"
"9507splitHere46","12208463splitHere46","archive"
"9508splitHere46","12208504splitHere46","PAGE_START"
"9509splitHere46","12208504splitHere46","BorderLayout"
"9510splitHere46","12208551splitHere46","checkExec"
"9511splitHere46","12208551splitHere46","cmd"
"9512splitHere46","12208551splitHere46","checkExec"
"9513splitHere46","12208551splitHere46","cmd"
"9514splitHere46","12208551splitHere46","checkExec"
"9515splitHere46","12208551splitHere46","public void checkExec(String cmd) {<newline46mondego>    System.out.println(cmd); // prints <doubleQuotes46>java<doubleQuotes46><newline46mondego>    if (cmd.toLowerCase().startsWith(<doubleQuotes46>java <doubleQuotes46>) { ... } // is false<newline46mondego>    // no security exception is thrown, allowing your command<newline46mondego>}<newline46mondego>"
"9516splitHere46","12208551splitHere46","StackOverflowError"
"9517splitHere46","12208643splitHere46","IllegalAccessException"
"9518splitHere46","12208802splitHere46","<Button<newline46mondego>    android:id=<doubleQuotes46>@+id/button_compute<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_marginTop=<doubleQuotes46>100dp<doubleQuotes46><newline46mondego>    android:onClick=<doubleQuotes46>.quit<doubleQuotes46><newline46mondego>    android:text=<doubleQuotes46>@string/button_quit<doubleQuotes46> /><newline46mondego><newline46mondego><TextView<newline46mondego>    android:id=<doubleQuotes46>@+id/textView_answer<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_marginTop=<doubleQuotes46>100dp<doubleQuotes46> /><newline46mondego>"
"9519splitHere46","12208802splitHere46","@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    Button btnCompute = (Button)findViewById(R.id.button_compute);<newline46mondego>    TextView tvAnswer = (TextView)findViewById(R.id.textView_answer);<newline46mondego><newline46mondego><newline46mondego>    btnCompute.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego><newline46mondego>            /*<newline46mondego>             * DO COMPUTATION here<newline46mondego>            */<newline46mondego><newline46mondego>            tvAnswer.setText(answer);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"9520splitHere46","12208883splitHere46","-XX:+UseParallelOldGC -XX:ParallelGCThreads=8"
"9521splitHere46","12208914splitHere46","replace()"
"9522splitHere46","12208914splitHere46","String x = <doubleQuotes46>aaa XXX bbb<doubleQuotes46>;<newline46mondego>String replace = <doubleQuotes46>XXX<doubleQuotes46>;<newline46mondego>String y = <doubleQuotes46>xy$z<doubleQuotes46>;<newline46mondego>x = x.replace(replace, y);<newline46mondego>System.out.println(x);<newline46mondego>"
"9523splitHere46","12208914splitHere46","aaa xy$z bbb"
"9524splitHere46","12208934splitHere46","final"
"9525splitHere46","12208934splitHere46","NullPointerException"
"9526splitHere46","12209077splitHere46","0xAARRGGBB"
"9527splitHere46","12209077splitHere46","colorToHSV"
"9528splitHere46","12209077splitHere46","HSVToColor"
"9529splitHere46","12209077splitHere46","0xAARRGGBB"
"9530splitHere46","12209077splitHere46","int color = 0xFFFF0000;<newline46mondego>float[] hsv = new float[3];<newline46mondego>Color.colorToHSV(color, hsv);<newline46mondego>hsv[2] = 0.2f;<newline46mondego>color = Color.HSVToColor(hsv);<newline46mondego>int[] rgb = new int[3];<newline46mondego>MyColor.colorToRGB(color, rgb); // Your custom method<newline46mondego>// The rgb array now contains your RGB colors.<newline46mondego>"
"9531splitHere46","12209077splitHere46","RGBToHSV"
"9532splitHere46","12209214splitHere46","Thread t"
"9533splitHere46","12209284splitHere46","AppEngine"
"9534splitHere46","12209284splitHere46","Tomcat"
"9535splitHere46","12209284splitHere46","relative/absolute urls"
"9536splitHere46","12209284splitHere46","GWT.getHostPageBaseURL(); GWT.getModuleBaseURL(); GWT.getModuleName();<newline46mondego>"
"9537splitHere46","12209509splitHere46","addInv = new AddInventory();<newline46mondego>s1 = addInv.areaName.getText();<newline46mondego>"
"9538splitHere46","12209509splitHere46","AddInventory"
"9539splitHere46","12209509splitHere46","areaName"
"9540splitHere46","12209509splitHere46","AddInventory addInv = new AddInventory();<newline46mondego><newline46mondego>if(inv.getActionCommand().equals(<doubleQuotes46>SAVE<doubleQuotes46>)){<newline46mondego>    invName = addInv.areaName.getText();                <newline46mondego>    JOptionPane.showMessageDialog(null, invName);<newline46mondego>}   <newline46mondego>"
"9541splitHere46","12209509splitHere46","areaName = new JTextArea(2, 35);<newline46mondego>ActionListener add = new ButtonAction.AddInv(areaName);<newline46mondego>//my TextArea<newline46mondego>JButton buttonSave = new JButton(<doubleQuotes46>SAVE<doubleQuotes46>);<newline46mondego>buttonSave.addActionListener(add);<newline46mondego>"
"9542splitHere46","12209509splitHere46","public class ButtonAction{<newline46mondego>    public static class AddInv implements ActionListener{<newline46mondego>        private JTextArea text;<newline46mondego>        public AddInv(JTextArea text) {<newline46mondego>            this.text = text;<newline46mondego>        }<newline46mondego>        public void actionPerformed(ActionEvent e){<newline46mondego>            AbstractButton inv = (AbstractButton)e.getSource();<newline46mondego><newline46mondego>            if(inv.getActionCommand().equals(<doubleQuotes46>SAVE<doubleQuotes46>)){<newline46mondego>                invName = text.getText();                <newline46mondego>                JOptionPane.showMessageDialog(null, invName);<newline46mondego>            }   <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9543splitHere46","12209602splitHere46","// in the constructor<newline46mondego>   this.range = maxValue - minValue + 1;<newline46mondego>   this.value = -minValue;<newline46mondego><newline46mondego>   // in the adder.<newline46mondego>   public void add(int num) {<newline46mondego>       value = (value + num) % range;<newline46mondego>       if(value < 0) value += range;<newline46mondego>       // or<newline46mondego>       value = ((value + num) % range + range) % range;<newline46mondego>   }<newline46mondego><newline46mondego><newline46mondego>   // add a getter for value.<newline46mondego>   public int getValue() { return value + minValue; };<newline46mondego>"
"9544splitHere46","12209602splitHere46","value = Math.min(maxValue, Math.max(minValue, value + step));<newline46mondego>"
"9545splitHere46","12209761splitHere46","find({..})"
"9546splitHere46","12209761splitHere46","find({uid:...})"
"9547splitHere46","12209761splitHere46","comments"
"9548splitHere46","12209761splitHere46","posts"
"9549splitHere46","12209761splitHere46","post"
"9550splitHere46","12209761splitHere46","comments"
"9551splitHere46","12209761splitHere46","users"
"9552splitHere46","12209789splitHere46","import java.util.List<newline46mondego>import java.util.Map<newline46mondego>...<newline46mondego>Yaml yaml = new Yaml();<newline46mondego>List load = yaml.loadAs(<doubleQuotes46>- text: Here is an object with some data that will allow an image to be generated\n  image: &FirstIm\n    imageType: ABC\n    otherTypE: CB\n- text: Later on, lets show you the same image again!\n  image: *FirstIm<doubleQuotes46>, List.class);<newline46mondego>assertSame(((Map)load.get(0)).get(<doubleQuotes46>image<doubleQuotes46>), ((Map)load.get(1)).get(<doubleQuotes46>image<doubleQuotes46>));<newline46mondego>"
"9553splitHere46","12209794splitHere46","FileWriter fileWriter = new FileWriter(file); <newline46mondego>"
"9554splitHere46","12209794splitHere46","XMLOutputter"
"9555splitHere46","12209794splitHere46","Writer"
"9556splitHere46","12209794splitHere46","FileOutputStream fileOutput = new FileOutputStream(file);<newline46mondego>...<newline46mondego>xmlOutput.output(document, fileOutput);<newline46mondego>"
"9557splitHere46","12209794splitHere46","close"
"9558splitHere46","12209794splitHere46","finally"
"9559splitHere46","12209794splitHere46","try"
"9560splitHere46","12209794splitHere46","throws"
"9561splitHere46","12209873splitHere46","ServletFilter"
"9562splitHere46","12209873splitHere46","HttpServletResponse"
"9563splitHere46","12209908splitHere46","GridData::exclude"
"9564splitHere46","12209908splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.events.SelectionAdapter;<newline46mondego>import org.eclipse.swt.events.SelectionEvent;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Button;<newline46mondego>import org.eclipse.swt.widgets.Composite;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego>import org.eclipse.swt.widgets.Text;<newline46mondego><newline46mondego>class TestTab extends Composite <newline46mondego>{<newline46mondego>    Button upperButton = null;<newline46mondego>    Text textInTheMiddle = null;<newline46mondego>    Button lowerButton = null;<newline46mondego><newline46mondego>    boolean state = true;<newline46mondego><newline46mondego>    public TestTab(Composite parent, int style) <newline46mondego>    {<newline46mondego>        super(parent, style);<newline46mondego><newline46mondego><newline46mondego>        GridLayout layout = new GridLayout(1, false);<newline46mondego>        setLayout(layout);<newline46mondego><newline46mondego><newline46mondego>        upperButton = new Button(this, SWT.PUSH);<newline46mondego>        upperButton.setText(<doubleQuotes46>upper Button<doubleQuotes46>);<newline46mondego><newline46mondego>        textInTheMiddle = new Text(this, SWT.BORDER);<newline46mondego>        GridData data = new GridData(SWT.FILL, SWT.FILL, true, false);<newline46mondego>        data.exclude = false;<newline46mondego>        textInTheMiddle.setLayoutData(data);<newline46mondego><newline46mondego>        lowerButton = new Button(this, SWT.PUSH);<newline46mondego>        lowerButton.setText(<doubleQuotes46>lower Button<doubleQuotes46>);<newline46mondego><newline46mondego>        upperButton.addSelectionListener(new SelectionAdapter() <newline46mondego>        {<newline46mondego>            public void widgetSelected(SelectionEvent e) {<newline46mondego><newline46mondego><newline46mondego>                GridData griddata = (GridData) textInTheMiddle.getLayoutData();<newline46mondego>                griddata.exclude = state;<newline46mondego>                textInTheMiddle.setVisible(!state);<newline46mondego>                textInTheMiddle.getParent().layout(false);<newline46mondego>                state = !state;<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }   <newline46mondego><newline46mondego>}<newline46mondego>public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>        Display display = new Display();<newline46mondego>        Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout(1, false));<newline46mondego><newline46mondego>        new TestTab(shell, SWT.NONE);<newline46mondego><newline46mondego>        shell.open();<newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9565splitHere46","12209941splitHere46","value=<doubleQuotes46>${java.home}/jre/ib/javaws.jar<doubleQuotes46> /><newline46mondego>"
"9566splitHere46","12209941splitHere46","value=<doubleQuotes46>${java.home}/jre/lib/javaws.jar<doubleQuotes46> /><newline46mondego>"
"9567splitHere46","12210085splitHere46","alert(responseText);"
"9568splitHere46","12210122splitHere46","getViewItemType"
"9569splitHere46","12210122splitHere46","getView"
"9570splitHere46","12210122splitHere46","getView()"
"9571splitHere46","12210122splitHere46","ListView"
"9572splitHere46","12210122splitHere46","convertView"
"9573splitHere46","12210122splitHere46","ListView"
"9574splitHere46","12210122splitHere46","@Override<newline46mondego>     public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        int mode = getItemViewType(position);<newline46mondego>        if(convertView == null) {   <newline46mondego>            switch(mode){<newline46mondego>            case 0:<newline46mondego>                convertView = inflater.inflate(R.layout.image_container_1, parent, false);<newline46mondego>            break;<newline46mondego>            case 1:                  <newline46mondego>                convertView = inflater.inflate(R.layout.image_container_2, parent, false);          <newline46mondego>            break;<newline46mondego>            case 2:              <newline46mondego>                convertView = inflater.inflate(R.layout.image_container_3, parent, false);<newline46mondego>            break;<newline46mondego>            }   <newline46mondego>        }<newline46mondego>        switch (mode) {<newline46mondego>        case 0:<newline46mondego>                    if(i < (flowImages.size()))<newline46mondego>            {<newline46mondego>            ImageView imageView = (ImageView) convertView.findViewById(R.id.logo_1);<newline46mondego><newline46mondego>            ArrayList<ImageDimensions> dimensions = new ArrayList<ImageDimensions>();<newline46mondego><newline46mondego>            dimensions = ImageSorter.getLayout(1);<newline46mondego><newline46mondego>            // get parameters<newline46mondego><newline46mondego>                    // set image with url<newline46mondego><newline46mondego>            i++; // I don't know what you try to measure with this variable but <newline46mondego>            // you shouldn't do it in a method like getView as this method is called a lot of times<newline46mondego>            // for example the user coculd be playing, scrolling the ListView one item down and one item up for 500 times.<newline46mondego>            } <newline46mondego>        break;        <newline46mondego>        case 1:<newline46mondego>            if(i < (flowImages.size()-1))<newline46mondego>            {<newline46mondego>            ImageView imageView1 = (ImageView) convertView.findViewById(R.id.logo_2_1);<newline46mondego>            ImageView imageView2 = (ImageView) convertView.findViewById(R.id.logo_2_2);<newline46mondego><newline46mondego>            ArrayList<ImageDimensions> dimensions = new ArrayList<ImageDimensions>();<newline46mondego><newline46mondego>             // get parameters for 2 images<newline46mondego><newline46mondego>                    // set image for first imageview    <newline46mondego>            i++;<newline46mondego>               // set image for second imageview<newline46mondego>               i++;<newline46mondego>            }<newline46mondego><newline46mondego>        break;       <newline46mondego>        case 2:<newline46mondego><newline46mondego>            if(i < (flowImages.size()-2))<newline46mondego>            {<newline46mondego>            ImageView imageView1 = (ImageView) convertView.findViewById(R.id.logo_3_1);<newline46mondego>            ImageView imageView2 = (ImageView) convertView.findViewById(R.id.logo_3_2);<newline46mondego>            ImageView imageView3 = (ImageView) convertView.findViewById(R.id.logo_3_3);<newline46mondego><newline46mondego>            ArrayList<ImageDimensions> dimensions = new ArrayList<ImageDimensions>();<newline46mondego><newline46mondego>           // get parameters for 3 images<newline46mondego><newline46mondego>                    // set image with url for first imageview<newline46mondego>            i++;<newline46mondego>            // set image for second imageview<newline46mondego>            i++;<newline46mondego>        // set image for third imageview<newline46mondego>                   i++;<newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>    break;<newline46mondego>    }<newline46mondego>    return convertView;<newline46mondego><newline46mondego>}<newline46mondego>"
"9575splitHere46","12210122splitHere46","convertView == null"
"9576splitHere46","12210122splitHere46","ListView"
"9577splitHere46","12210122splitHere46","getView"
"9578splitHere46","12210122splitHere46","ListView"
"9579splitHere46","12210122splitHere46","getView"
"9580splitHere46","12210122splitHere46","getView"
"9581splitHere46","12210122splitHere46","getView"
"9582splitHere46","12210122splitHere46","convertView"
"9583splitHere46","12210122splitHere46","null"
"9584splitHere46","12210122splitHere46","getItemViewType"
"9585splitHere46","12210122splitHere46","getView"
"9586splitHere46","12210122splitHere46","ListView"
"9587splitHere46","12210122splitHere46","flowImages"
"9588splitHere46","12210283splitHere46","private AutoResizeTextView autoResizeTextView;// instantiate<newline46mondego>"
"9589splitHere46","12210283splitHere46","//and on my textview<newline46mondego>txtCalc.setTextSize(autoResizeTextView);<newline46mondego>"
"9590splitHere46","12210283splitHere46","txtCalc"
"9591splitHere46","12210283splitHere46","AutoResizeTextView"
"9592splitHere46","12210283splitHere46","TextView"
"9593splitHere46","12210283splitHere46","txtCalc = autoResizeTextView;<newline46mondego>"
"9594splitHere46","12210283splitHere46","<TextView />"
"9595splitHere46","12210283splitHere46","<yourPackageName.AutoResizeTextView></yourPackageName.AutoResizeTextView>"
"9596splitHere46","12210470splitHere46","$string = stripslashes('[{\<doubleQuotes46>Knt_KntWatchId\<doubleQuotes46>:\<doubleQuotes46>15\<doubleQuotes46>,\<doubleQuotes46>type\<doubleQuotes46>:\<doubleQuotes46>INSERT\<doubleQuotes46>,\<doubleQuotes46>Knt_Nazwa1\<doubleQuotes46>:\<doubleQuotes46>a\<doubleQuotes46>}]');<newline46mondego>print_r(json_decode($string));<newline46mondego>"
"9597splitHere46","12210470splitHere46","$json = json_decode(stripslashes($data), true);<newline46mondego>"
"9598splitHere46","12210576splitHere46","java.util.concurrent.ThreadPoolExecutor"
"9599splitHere46","12210576splitHere46","awaitTermination()"
"9600splitHere46","12210576splitHere46","package sample.threadexecutor;<newline46mondego><newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Date;<newline46mondego><newline46mondego>public class BlockingThread implements Runnable{<newline46mondego><newline46mondego>    public boolean succsess = false;<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss.SSS<doubleQuotes46>);<newline46mondego>        System.out.println(df.format(new Date())  + <doubleQuotes46> start<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            Thread.sleep(10000L);<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>            System.out.println(df.format(new Date())  + <doubleQuotes46> interrupted<doubleQuotes46>);<newline46mondego>            succsess = false;<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        System.out.println(df.format(new Date())  + <doubleQuotes46> end<doubleQuotes46>);<newline46mondego>        succsess = true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9601splitHere46","12210576splitHere46","package sample.threadexecutor;<newline46mondego><newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.concurrent.ExecutorService;<newline46mondego>import java.util.concurrent.Executors;<newline46mondego>import java.util.concurrent.TimeUnit;<newline46mondego><newline46mondego>public class main {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss.SSS<doubleQuotes46>);<newline46mondego>        ExecutorService service= Executors.newSingleThreadExecutor();<newline46mondego>        service.submit(new BlockingThread());<newline46mondego>        try {<newline46mondego>            service.shutdown();<newline46mondego>            if(service.awaitTermination(5, TimeUnit.SECONDS)){<newline46mondego>                System.out.println(df.format(new Date())  + <doubleQuotes46> execution completed<doubleQuotes46>);<newline46mondego>            }else{<newline46mondego>                System.out.println(df.format(new Date())  + <doubleQuotes46> execution timeout<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>            System.out.println(df.format(new Date())  + <doubleQuotes46> monitoring interrupted<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9602splitHere46","12210576splitHere46","22:28:37.005 start<newline46mondego>22:28:42.006 execution timeout<newline46mondego>22:28:47.006 end<newline46mondego>"
"9603splitHere46","12210576splitHere46","22:30:20.210 start<newline46mondego>22:30:30.213 end<newline46mondego>22:30:30.214 execution completed<newline46mondego>"
"9604splitHere46","12210718splitHere46","Shape+.getDimensions()"
"9605splitHere46","12210718splitHere46","Circle"
"9606splitHere46","12210718splitHere46","public aspect ShapeAspect {<newline46mondego>    pointcut getDimensions() : execution(* Shape+.getDimensions());<newline46mondego>    pointcut getDimensionsNoSuper() : getDimensions() && !cflowbelow(getDimensions());<newline46mondego><newline46mondego>    after() : getDimensionsNoSuper() {<newline46mondego>        System.out.println(thisJoinPointStaticPart);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9607splitHere46","12210823splitHere46","javac"
"9608splitHere46","12210823splitHere46","-bootclasspath"
"9609splitHere46","12210823splitHere46","javac -target 1.5 -bootclasspath jdk1.5.0/lib/rt.jar OldCode.java"
"9610splitHere46","12210844splitHere46","latch"
"9611splitHere46","12210844splitHere46","latch.await()"
"9612splitHere46","12210844splitHere46","Runnable"
"9613splitHere46","12210844splitHere46","latch.countDown()"
"9614splitHere46","12210844splitHere46","EventQueue.isDispatchThread"
"9615splitHere46","12210844splitHere46","CountDownLatch"
"9616splitHere46","12210844splitHere46","Thread"
"9617splitHere46","12210844splitHere46","javafxPanel.setScene( new Scene(pane) {<newline46mondego>  Text text = new Text(<doubleQuotes46>Hello World<doubleQuotes46>);            <newline46mondego>});<newline46mondego>"
"9618splitHere46","12210911splitHere46","<sqlFile path=<doubleQuotes46>/path/to/file.sql<doubleQuotes46>/>"
"9619splitHere46","12210911splitHere46","<customChange class=<doubleQuotes46>com.example.YourJavaClass<doubleQuotes46><newline46mondego>csvFile=<doubleQuotes46>/path/to/file.csv<doubleQuotes46>/>"
"9620splitHere46","12210911splitHere46","void execute(Database database) throws CustomChangeException;"
"9621splitHere46","12210933splitHere46","jetty-maven-plugin"
"9622splitHere46","12210952splitHere46","Runnable"
"9623splitHere46","12210952splitHere46","void runMultipleTimes(Runnable run, int times) {<newline46mondego>    for (int i = 0; i < times; i++) {<newline46mondego>        run.run();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9624splitHere46","12210952splitHere46","runMultipleTimes(new Runnable() {<newline46mondego>    @Override<newline46mondego>    void run() {<newline46mondego>        function1();<newline46mondego>    }<newline46mondego>}, 10 /* how often to run */);<newline46mondego>"
"9625splitHere46","12210952splitHere46","Runnable"
"9626splitHere46","12210952splitHere46","for"
"9627splitHere46","12210952splitHere46","Runnable"
"9628splitHere46","12210952splitHere46","for (Runnable run : runCollection) {<newline46mondego>    runMultipleTimes(run, 100);<newline46mondego>}<newline46mondego>"
"9629splitHere46","12210952splitHere46","Runnable"
"9630splitHere46","12210952splitHere46","String"
"9631splitHere46","12210952splitHere46","Runnable"
"9632splitHere46","12210952splitHere46","java.lang.reflect.Method"
"9633splitHere46","12210952splitHere46","runCollection.add(new Runnable() {<newline46mondego>    @Override<newline46mondego>    void run() {<newline46mondego>        function(123456);<newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>runCollection.add(new Runnable() {<newline46mondego>    @Override<newline46mondego>    void run() {<newline46mondego>        function(654321);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9634splitHere46","12211017splitHere46","public static void main(String[] args) {<newline46mondego>        final JFrame frame = new JFrame(<doubleQuotes46>Test Frame<doubleQuotes46>);<newline46mondego><newline46mondego>        frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);<newline46mondego><newline46mondego>        frame.setSize(800, 600);<newline46mondego><newline46mondego>        frame.addWindowListener(new WindowListener() {<newline46mondego>            //I skipped unused callbacks for readability<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void windowClosing(WindowEvent e) {<newline46mondego>                if(JOptionPane.showConfirmDialog(frame, <doubleQuotes46>Are you sure ?<doubleQuotes46>) == JOptionPane.OK_OPTION){<newline46mondego>                    frame.setVisible(false);<newline46mondego>                    frame.dispose();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>"
"9635splitHere46","12211029splitHere46","http://example.com/myapp/foo"
"9636splitHere46","12211029splitHere46","http://example.com/myapp/ajax/foo"
"9637splitHere46","12211029splitHere46","<definition name=<doubleQuotes46>foo<doubleQuotes46> template=<doubleQuotes46>/WEB-INF/layouts/app-layout.jspx<doubleQuotes46>><newline46mondego>    <put-attribute name=<doubleQuotes46>body<doubleQuotes46>><newline46mondego>        <definition template=<doubleQuotes46>/WEB-INF/views/foo.jsp<doubleQuotes46>><newline46mondego>            <put-attribute name=<doubleQuotes46>message<doubleQuotes46> value=<doubleQuotes46>hello<doubleQuotes46>/><newline46mondego>        </definition><newline46mondego>    </put-attribute><newline46mondego></definition><newline46mondego><newline46mondego><definition name=<doubleQuotes46>ajax.foo<doubleQuotes46> template=<doubleQuotes46>/WEB-INF/views/foo.jsp<doubleQuotes46>><newline46mondego>    <put-attribute name=<doubleQuotes46>message<doubleQuotes46> value=<doubleQuotes46>hello<doubleQuotes46>/><newline46mondego></definition><newline46mondego>"
"9638splitHere46","12211029splitHere46","/ajax/foo"
"9639splitHere46","12211029splitHere46","/foo"
"9640splitHere46","12211029splitHere46","@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/ajax<doubleQuotes46>)<newline46mondego>public void class AjaxController {<newline46mondego>   @RequestMapping(<doubleQuotes46>/foo<doubleQuotes46>)<newline46mondego>   public String foo() {<newline46mondego>       return <doubleQuotes46>ajax.foo<doubleQuotes46>;<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/<doubleQuotes46>)<newline46mondego>public void class AppController {<newline46mondego>   @RequestMapping(<doubleQuotes46>/foo<doubleQuotes46>)<newline46mondego>   public String foo() {<newline46mondego>       return <doubleQuotes46>foo<doubleQuotes46>;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9641splitHere46","12211031splitHere46","Coordinate[] coordinates = new Coordinate[vertices.length+1];<newline46mondego>for(int i=0;i<vertices.length;i++){<newline46mondego>    coordinate[i] = vertices[i];<newline46mondego>}<newline46mondego>coordinate[vertices.length] = coordinate[0];<newline46mondego> .....<newline46mondego>"
"9642splitHere46","12211157splitHere46","String[] sArray = {<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>};<newline46mondego>"
"9643splitHere46","12211157splitHere46","String[]"
"9644splitHere46","12211157splitHere46","String[] sArray = new String[] {<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>};<newline46mondego>"
"9645splitHere46","12211157splitHere46","String[]"
"9646splitHere46","12211157splitHere46","Object[]"
"9647splitHere46","12211157splitHere46","Object[]"
"9648splitHere46","12211157splitHere46","String[]"
"9649splitHere46","12211157splitHere46","ClassCastException"
"9650splitHere46","12211157splitHere46","ks.getCertificateChain(<doubleQuotes46>ALIAS<doubleQuotes46>)"
"9651splitHere46","12211157splitHere46","Certificate[]"
"9652splitHere46","12211157splitHere46","X509Certificate"
"9653splitHere46","12211157splitHere46","Certificate[]"
"9654splitHere46","12211157splitHere46","X509Certificate[]"
"9655splitHere46","12211157splitHere46","X509Certificate[]"
"9656splitHere46","12211157splitHere46","X509Certificate[]"
"9657splitHere46","12211157splitHere46","Arrays.copyOf"
"9658splitHere46","12211157splitHere46","Certificate[] Certificates = ks.getCertificateChain(<doubleQuotes46>ALIAS<doubleQuotes46>);<newline46mondego>X509Certificate[] x509Certificates = Arrays.copyOf(certificates, certificates.length, X509Certificate[].class);<newline46mondego>"
"9659splitHere46","12211164splitHere46","<category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46>/><newline46mondego>"
"9660splitHere46","12211381splitHere46","a += b;<newline46mondego>"
"9661splitHere46","12211381splitHere46","a = a+b;<newline46mondego>"
"9662splitHere46","12211381splitHere46","a &= b;<newline46mondego>"
"9663splitHere46","12211381splitHere46","a = a&b;<newline46mondego>"
"9664splitHere46","12211381splitHere46","|="
"9665splitHere46","12211389splitHere46","DecimalFormat"
"9666splitHere46","12211389splitHere46","decimalFormat"
"9667splitHere46","12211389splitHere46","import java.text.DecimalFormat;<newline46mondego>"
"9668splitHere46","12211415splitHere46","replaceFirst()"
"9669splitHere46","12211415splitHere46","replaceFirst()"
"9670splitHere46","12212427splitHere46","_THIS"
"9671splitHere46","12212427splitHere46","public static void testBuildPdf() {<newline46mondego>    try {<newline46mondego>        Map<String, Object> params = new HashMap<String, Object>();<newline46mondego>        JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);<newline46mondego>        JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params, getDataSource());<newline46mondego><newline46mondego>        JasperExportManager.exportReportToPdfFile(jasperPrint, outputFileName);<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>        System.out.println(e.getMessage());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private static JRDataSource getDataSource() {<newline46mondego>    Collection<BeanWithList> coll = new ArrayList<BeanWithList>();<newline46mondego><newline46mondego>    BeanWithList bean = new BeanWithList(Arrays.asList(<doubleQuotes46>London<doubleQuotes46>, <doubleQuotes46>Paris<doubleQuotes46>), 1);<newline46mondego><newline46mondego>    coll.add(bean);<newline46mondego><newline46mondego>    bean = new BeanWithList(Arrays.asList(<doubleQuotes46>London<doubleQuotes46>, <doubleQuotes46>Madrid<doubleQuotes46>, <doubleQuotes46>Moscow<doubleQuotes46>), 2);<newline46mondego>    coll.add(bean);<newline46mondego><newline46mondego>    bean = new BeanWithList(Arrays.asList(<doubleQuotes46>Rome<doubleQuotes46>), 3);<newline46mondego>    coll.add(bean);<newline46mondego><newline46mondego>    return new JRBeanCollectionDataSource(coll);<newline46mondego>}<newline46mondego>"
"9672splitHere46","12212427splitHere46","public class BeanWithList {<newline46mondego><newline46mondego>    private List<String> m_cities;<newline46mondego>    private Integer m_id;<newline46mondego><newline46mondego>    public BeanWithList(List<String> cities, Integer id) {<newline46mondego>        m_cities = cities;<newline46mondego>        m_id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<String> getCities() {<newline46mondego>        return m_cities;<newline46mondego>    }<newline46mondego><newline46mondego>    public Integer getId() {<newline46mondego>        return m_id;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9673splitHere46","12212427splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><jasperReport ...><newline46mondego>    <subDataset name=<doubleQuotes46>dataset1<doubleQuotes46>><newline46mondego>        <field name=<doubleQuotes46>city<doubleQuotes46> class=<doubleQuotes46>java.lang.String<doubleQuotes46>><newline46mondego>            <fieldDescription><![CDATA[_THIS]]></fieldDescription><newline46mondego>        </field><newline46mondego>    </subDataset><newline46mondego>    <field name=<doubleQuotes46>id<doubleQuotes46> class=<doubleQuotes46>java.lang.Integer<doubleQuotes46>/><newline46mondego>    <field name=<doubleQuotes46>cities<doubleQuotes46> class=<doubleQuotes46>java.util.Collection<doubleQuotes46>/><newline46mondego>    <title><newline46mondego>        <band height=<doubleQuotes46>103<doubleQuotes46> splitType=<doubleQuotes46>Stretch<doubleQuotes46>><newline46mondego>            <staticText><newline46mondego>                <reportElement x=<doubleQuotes46>138<doubleQuotes46> y=<doubleQuotes46>28<doubleQuotes46> width=<doubleQuotes46>258<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <textElement textAlignment=<doubleQuotes46>Center<doubleQuotes46> verticalAlignment=<doubleQuotes46>Middle<doubleQuotes46>><newline46mondego>                    <font isBold=<doubleQuotes46>true<doubleQuotes46> isItalic=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>                </textElement><newline46mondego>                <text><![CDATA[Bean with List sample]]></text><newline46mondego>            </staticText><newline46mondego>        </band><newline46mondego>    </title><newline46mondego>    <columnHeader><newline46mondego>        <band height=<doubleQuotes46>20<doubleQuotes46>><newline46mondego>            <staticText><newline46mondego>                <reportElement x=<doubleQuotes46>0<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>100<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <box><newline46mondego>                    <topPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <leftPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <bottomPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <rightPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                </box><newline46mondego>                <textElement textAlignment=<doubleQuotes46>Center<doubleQuotes46> verticalAlignment=<doubleQuotes46>Middle<doubleQuotes46>><newline46mondego>                    <font isBold=<doubleQuotes46>true<doubleQuotes46> isItalic=<doubleQuotes46>true<doubleQuotes46> isUnderline=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego>                </textElement><newline46mondego>                <text><![CDATA[Id]]></text><newline46mondego>            </staticText><newline46mondego>            <staticText><newline46mondego>                <reportElement x=<doubleQuotes46>100<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>100<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <box><newline46mondego>                    <topPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <leftPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <bottomPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <rightPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                </box><newline46mondego>                <textElement textAlignment=<doubleQuotes46>Center<doubleQuotes46> verticalAlignment=<doubleQuotes46>Middle<doubleQuotes46>><newline46mondego>                    <font isBold=<doubleQuotes46>true<doubleQuotes46> isItalic=<doubleQuotes46>true<doubleQuotes46> isUnderline=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego>                </textElement><newline46mondego>                <text><![CDATA[City name]]></text><newline46mondego>            </staticText><newline46mondego>        </band><newline46mondego>    </columnHeader><newline46mondego>    <detail><newline46mondego>        <band height=<doubleQuotes46>20<doubleQuotes46> splitType=<doubleQuotes46>Stretch<doubleQuotes46>><newline46mondego>            <textField><newline46mondego>                <reportElement stretchType=<doubleQuotes46>RelativeToTallestObject<doubleQuotes46> x=<doubleQuotes46>0<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>100<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <box leftPadding=<doubleQuotes46>10<doubleQuotes46>><newline46mondego>                    <topPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <leftPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <bottomPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                    <rightPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                </box><newline46mondego>                <textElement/><newline46mondego>                <textFieldExpression><![CDATA[$F{id}]]></textFieldExpression><newline46mondego>            </textField><newline46mondego>            <componentElement><newline46mondego>                <reportElement x=<doubleQuotes46>100<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>400<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                <jr:list xmlns:jr=<doubleQuotes46>http://jasperreports.sourceforge.net/jasperreports/components<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://jasperreports.sourceforge.net/jasperreports/components http://jasperreports.sourceforge.net/xsd/components.xsd<doubleQuotes46> printOrder=<doubleQuotes46>Vertical<doubleQuotes46>><newline46mondego>                    <datasetRun subDataset=<doubleQuotes46>dataset1<doubleQuotes46>><newline46mondego>                        <dataSourceExpression><![CDATA[new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource($F{cities})]]></dataSourceExpression><newline46mondego>                    </datasetRun><newline46mondego>                    <jr:listContents height=<doubleQuotes46>20<doubleQuotes46> width=<doubleQuotes46>400<doubleQuotes46>><newline46mondego>                        <textField><newline46mondego>                            <reportElement x=<doubleQuotes46>0<doubleQuotes46> y=<doubleQuotes46>0<doubleQuotes46> width=<doubleQuotes46>100<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>                            <box leftPadding=<doubleQuotes46>10<doubleQuotes46>><newline46mondego>                                <topPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                                <leftPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                                <bottomPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                                <rightPen lineWidth=<doubleQuotes46>1.0<doubleQuotes46>/><newline46mondego>                            </box><newline46mondego>                            <textElement/><newline46mondego>                            <textFieldExpression><![CDATA[$F{city}]]></textFieldExpression><newline46mondego>                        </textField><newline46mondego>                    </jr:listContents><newline46mondego>                </jr:list><newline46mondego>            </componentElement><newline46mondego>        </band><newline46mondego>    </detail><newline46mondego></jasperReport><newline46mondego>"
"9674splitHere46","12212537splitHere46","int columns = ((Object[])data.first()).size()<newline46mondego>"
"9675splitHere46","12212617splitHere46","Map<String, String> map1 = new HashMap<String, String>() <newline46mondego>for (String attribute : array1) {    <newline46mondego>  String[] splitted = attribute.split(<doubleQuotes46>=<doubleQuotes46>);   <newline46mondego>  map1.put(splitted[0], splitted[1]); <newline46mondego>}<newline46mondego>"
"9676splitHere46","12212617splitHere46","Map<String, String> map2 = new HashMap<String, String>(); <newline46mondego>...<newline46mondego>"
"9677splitHere46","12212617splitHere46","for (String key : map1.keySet()) {    <newline46mondego>  if (!map2.containsKey(key)) {<newline46mondego>    System.out.println(key + <doubleQuotes46>has been removed from Array2<doubleQuotes46> )<newline46mondego>  } else if (!map1.get(key).equals(map2.get(key)) {<newline46mondego>    System.out.println(key + <doubleQuotes46>attribute has changed from <doubleQuotes46> + map1.get(key) + <doubleQuotes46> to <doubleQuotes46> + map2.get(key)  );<newline46mondego>  } <newline46mondego>}<newline46mondego>"
"9678splitHere46","12212617splitHere46","for (String key : map2.keySet()) {    <newline46mondego>  if (!map1.containsKey(key)) {<newline46mondego>    System.out.println(key + <doubleQuotes46>has been added to Array2<doubleQuotes46> );<newline46mondego>}<newline46mondego>"
"9679splitHere46","12212851splitHere46","xmlns=<doubleQuotes46>http://ereg.egov.bg/segment/0009-900001<doubleQuotes46>"
"9680splitHere46","12212851splitHere46","targetNamespace=<doubleQuotes46>http://www.bulsi.bg/egov/ProjectConfiguration<doubleQuotes46>"
"9681splitHere46","12212851splitHere46","<ProjectConfiguration>"
"9682splitHere46","12212851splitHere46","http://ereg.egov.bg/segment/0009-900001"
"9683splitHere46","12212870splitHere46","public static class ConcurrentSetMap<K, V> {<newline46mondego>    private final ConcurrentMap<K, Set<V>> map = new ConcurrentHashMap<K, Set<V>>();<newline46mondego><newline46mondego>    public synchronized void add(K key, V value) {<newline46mondego>        Set<V> set = map.get(key);<newline46mondego>        if (set != null) {<newline46mondego>            set.add(value);<newline46mondego>        } else {<newline46mondego>            map.put(key, createConcurrentSet(value));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public synchronized void remove(K key, V value) {<newline46mondego>        Set<V> set = map.get(key);<newline46mondego>        if (set != null) {<newline46mondego>            set.remove(value);<newline46mondego>            if (set.isEmpty()) {<newline46mondego>                map.remove(key);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean contains(K key, V value) {<newline46mondego>        return get(key).contains(value);<newline46mondego>    }<newline46mondego><newline46mondego>    public Set<V> get(K key) {<newline46mondego>        Set<V> set = map.get(key);<newline46mondego>        return set == null ? Collections.<V> emptySet() : set;<newline46mondego>    }<newline46mondego><newline46mondego>    protected Set<V> createConcurrentSet(V value) {<newline46mondego>        Set<V> set = Collections.newSetFromMap(new ConcurrentHashMap<V, Boolean>());<newline46mondego>        set.add(value);<newline46mondego>        return set;<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"9684splitHere46","12212903splitHere46","public static byte[] encrypt2(byte[] value) throws GeneralSecurityException, IOException<newline46mondego>{<newline46mondego>    SecretKeySpec key1 = getSecretKeySpec(true);<newline46mondego>    System.err.println(<doubleQuotes46>encrypt():\t<doubleQuotes46> + key1.toString());<newline46mondego>    Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>    cipher.init(Cipher.ENCRYPT_MODE, key1, cipher.getParameters());<newline46mondego>    byte[] encrypted = cipher.doFinal(value);<newline46mondego><newline46mondego>    SecretKeySpec key2 = getSecretKeySpec(false);<newline46mondego>    System.err.println(<doubleQuotes46>encrypt():\t<doubleQuotes46> + key2.toString());<newline46mondego>    cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>    cipher.init(Cipher.ENCRYPT_MODE, key2, new IvParameterSpec(getIV()));<newline46mondego>    byte[] encrypted2 = cipher.doFinal(encrypted);<newline46mondego><newline46mondego>    return encrypted2;//Base64Coder.encode(encrypted2);<newline46mondego>}<newline46mondego><newline46mondego>public static byte[] decrypt2(byte[] message, boolean A) throws GeneralSecurityException, IOException<newline46mondego>{<newline46mondego>    SecretKeySpec key1 = getSecretKeySpec(false);<newline46mondego>    System.err.println(<doubleQuotes46>decrypt():\t<doubleQuotes46> + key1.toString());<newline46mondego>    Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>    cipher.init(Cipher.DECRYPT_MODE, key1, new IvParameterSpec(getIV()));<newline46mondego>    byte[] decrypted = cipher.doFinal(message);<newline46mondego><newline46mondego>    SecretKeySpec key2 = getSecretKeySpec(true);<newline46mondego>    System.err.println(<doubleQuotes46>decrypt():\t<doubleQuotes46> + key2.toString());<newline46mondego>    cipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>    cipher.init(Cipher.DECRYPT_MODE, key2);<newline46mondego>    byte[] decrypted2 = cipher.doFinal(decrypted);<newline46mondego><newline46mondego>    return decrypted2;<newline46mondego>}<newline46mondego>"
"9685splitHere46","12213002splitHere46","driver.navigate().refresh();<newline46mondego>"
"9686splitHere46","12213039splitHere46","<exec executable=<doubleQuotes46>${java.home}/bin/javaws<doubleQuotes46> .. <newline46mondego>"
"9687splitHere46","12213233splitHere46","import static java.lang.annotation.ElementType.TYPE;<newline46mondego>import static java.lang.annotation.RetentionPolicy.RUNTIME;<newline46mondego><newline46mondego>import java.lang.annotation.Documented;<newline46mondego>import java.lang.annotation.Retention;<newline46mondego>import java.lang.annotation.Target;<newline46mondego><newline46mondego>import javax.validation.Constraint;<newline46mondego>import javax.validation.ConstraintValidator;<newline46mondego>import javax.validation.ConstraintValidatorContext;<newline46mondego>import javax.validation.Payload;<newline46mondego><newline46mondego>import org.apache.commons.beanutils.PropertyUtils; <newline46mondego><newline46mondego>@Target( { TYPE })<newline46mondego>@Retention(RUNTIME)<newline46mondego>@Constraint(validatedBy = CheckAtLeastOneNotNull.CheckAtLeastOneNotNullValidator.class)<newline46mondego>@Documented<newline46mondego>public @interface CheckAtLeastOneNotNull {<newline46mondego><newline46mondego>     String message() default <doubleQuotes46>{com.xxx.constraints.checkatleastnotnull}<doubleQuotes46>;<newline46mondego><newline46mondego>        Class<?>[] groups() default {};<newline46mondego><newline46mondego>        Class<? extends Payload>[] payload() default {};<newline46mondego><newline46mondego>        String[] fieldNames();<newline46mondego><newline46mondego>        public static class CheckAtLeastOneNotNullValidator implements ConstraintValidator<CheckAtLeastOneNotNull, Object> {<newline46mondego><newline46mondego>            private String[] fieldNames;<newline46mondego><newline46mondego>            public void initialize(CheckAtLeastOneNotNull constraintAnnotation) {<newline46mondego>                this.fieldNames = constraintAnnotation.fieldNames();<newline46mondego>            }<newline46mondego><newline46mondego>            public boolean isValid(Object object, ConstraintValidatorContext constraintContext) {<newline46mondego><newline46mondego><newline46mondego>                if (object == null)<newline46mondego>                    return true;<newline46mondego><newline46mondego>                try {<newline46mondego><newline46mondego>                    for (String fieldName:fieldNames){<newline46mondego>                        Object property = PropertyUtils.getProperty(object, fieldName);<newline46mondego><newline46mondego>                        if (property!=null) return true;<newline46mondego>                    }<newline46mondego><newline46mondego>                    return false;<newline46mondego><newline46mondego>                } catch (Exception e) {<newline46mondego>                   System.printStackTrace(e);   <newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>}<newline46mondego>"
"9688splitHere46","12213233splitHere46","@Entity<newline46mondego>@CheckAtLeastOneNotNull(fieldNames={<doubleQuotes46>fieldA<doubleQuotes46>,<doubleQuotes46>fieldB<doubleQuotes46>})<newline46mondego>public class Reward {<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue<newline46mondego>    private Integer id;<newline46mondego><newline46mondego>    private Integer fieldA;<newline46mondego>    private Integer fieldB;<newline46mondego><newline46mondego>    [...] // accessors, other fields, etc.<newline46mondego>}<newline46mondego>"
"9689splitHere46","12213244splitHere46","array={<doubleQuotes46>username<doubleQuotes46>,username_variable,<doubleQuotes46>status<doubleQuotes46>,status_variable}<newline46mondego>"
"9690splitHere46","12213244splitHere46","array=new String[]{<doubleQuotes46>username<doubleQuotes46>,username_variable,<doubleQuotes46>status<doubleQuotes46>,status_variable}<newline46mondego>"
"9691splitHere46","12213333splitHere46","Manifest-Version: 1.0<newline46mondego>Ant-Version: Apache Ant 1.8.2<newline46mondego>Created-By: 1.6.0_11-b03 (Sun Microsystems Inc.)<newline46mondego>Main-Class: gui<newline46mondego>Class-Path: AspectJ.jar<newline46mondego>"
"9692splitHere46","12213412splitHere46","-keep class com.flurry.** { *; }<newline46mondego>-dontwarn com.flurry.**<newline46mondego>"
"9693splitHere46","12213417splitHere46","clone"
"9694splitHere46","12213417splitHere46","super.clone()"
"9695splitHere46","12213417splitHere46","public class A implements Clonable  //add 'implements'<newline46mondego>{<newline46mondego>  public Object clone()<newline46mondego>  {<newline46mondego>    A cloneA = super.clone(); //this copies all fields and returns something of *the same type* as 'this'...<newline46mondego>    return cloneA;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class B extends A //supposed to extend 'A' right?<newline46mondego>{<newline46mondego>  public Object clone()<newline46mondego>  {<newline46mondego>    Object cloneA = super.clone(); //this returns something of runtime type B<newline46mondego>    B cloneB = (B)cloneA; //Will work<newline46mondego>    return cloneB;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9696splitHere46","12213417splitHere46","clone"
"9697splitHere46","12213417splitHere46","public class A implements Clonable  //add 'implements'<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class B extends A //supposed to extend 'A' right?<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"9698splitHere46","12213417splitHere46","implements Clonable"
"9699splitHere46","12213500splitHere46","case 0"
"9700splitHere46","12213500splitHere46","default:<newline46mondego>        if (arg0.getId() < titulo.lenth) {<newline46mondego>            final Toast toastMensaje = getToast(arg0.getId());<newline46mondego>            toastMensaje.setGravity(Gravity.CENTER, 0, 0);<newline46mondego>            toastMensaje.show();<newline46mondego>        } else {<newline46mondego>            //not a valid value<newline46mondego>        }<newline46mondego>        break;<newline46mondego>}<newline46mondego><newline46mondego>private Toast getToast(int i) {<newline46mondego>    return Toast.makeText(getApplicationContext(), titulo[i], Toast.LENGTH_LONG);<newline46mondego>}<newline46mondego>"
"9701splitHere46","12213509splitHere46","public static <E extends Thing> E[] parseThingsFromJSON(String body, Class<E[]> eClass) {<newline46mondego>    return parser.fromJson(body, eClass);<newline46mondego>}<newline46mondego>"
"9702splitHere46","12213714splitHere46","StackTraceElement[] ele = Thread.currentThread().getStackTrace()<newline46mondego>"
"9703splitHere46","12213895splitHere46","m.put(<doubleQuotes46>John<doubleQuotes46>, <doubleQuotes46>Doe<doubleQuotes46>);<newline46mondego>       m.put(new String(<doubleQuotes46>John<doubleQuotes46>), <doubleQuotes46>Paul<doubleQuotes46>);<newline46mondego>"
"9704splitHere46","12213895splitHere46","<doubleQuotes46>John<doubleQuotes46> == <doubleQuotes46>John<doubleQuotes46>"
"9705splitHere46","12213920splitHere46","new"
"9706splitHere46","12213920splitHere46","File llf = new File(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>"
"9707splitHere46","12213981splitHere46","AjaxEventBehavior"
"9708splitHere46","12213981splitHere46","AjaxFormComponentUpdatingBehavior"
"9709splitHere46","12213981splitHere46","FormComponent"
"9710splitHere46","12213981splitHere46","ListItem"
"9711splitHere46","12213981splitHere46","AjaxFormSubmitBehavior"
"9712splitHere46","12213981splitHere46","AbstractAjaxBehavior"
"9713splitHere46","12213981splitHere46","AjaxEventBehavior"
"9714splitHere46","12213983splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><schema xmlns=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> targetNamespace=<doubleQuotes46>http://www.example.org/DataBean<doubleQuotes46><newline46mondego>    xmlns:tns=<doubleQuotes46>http://www.example.org/DataBean<doubleQuotes46> elementFormDefault=<doubleQuotes46>qualified<doubleQuotes46><newline46mondego>    xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46>><newline46mondego><newline46mondego>    <xs:element name=<doubleQuotes46>getData<doubleQuotes46>><newline46mondego>        <xs:complexType><newline46mondego>            <xs:sequence><newline46mondego>                <xs:element minOccurs=<doubleQuotes46>0<doubleQuotes46> name=<doubleQuotes46>getDataType<doubleQuotes46> type=<doubleQuotes46>tns:getDataType<doubleQuotes46> /><newline46mondego>            </xs:sequence><newline46mondego>        </xs:complexType><newline46mondego>    </xs:element><newline46mondego><newline46mondego>    <xs:complexType name=<doubleQuotes46>getDataType<doubleQuotes46>><newline46mondego>        <xs:sequence><newline46mondego>            <xs:element minOccurs=<doubleQuotes46>0<doubleQuotes46> name=<doubleQuotes46>value<doubleQuotes46> type=<doubleQuotes46>tns:DataBean<doubleQuotes46> /><newline46mondego>        </xs:sequence><newline46mondego>    </xs:complexType><newline46mondego><newline46mondego>    <xs:complexType name=<doubleQuotes46>DataBean<doubleQuotes46>><newline46mondego>        <xs:simpleContent><newline46mondego>            <xs:extension base=<doubleQuotes46>xs:int<doubleQuotes46> /><newline46mondego>        </xs:simpleContent><newline46mondego>    </xs:complexType><newline46mondego></schema><newline46mondego>"
"9715splitHere46","12213983splitHere46","JAXBElement"
"9716splitHere46","12213983splitHere46","protected DataBean value;<newline46mondego><newline46mondego>public DataBean getValue() {<newline46mondego>    return value;<newline46mondego>}<newline46mondego>"
"9717splitHere46","12213983splitHere46","nillable=<doubleQuotes46>true<doubleQuotes46>"
"9718splitHere46","12213983splitHere46","nillable=<doubleQuotes46>true<doubleQuotes46>"
"9719splitHere46","12213983splitHere46","<DataBean></DataBean> <newline46mondego>"
"9720splitHere46","12214026splitHere46","<compilerarg line=<doubleQuotes46>-Xlint:all -Xmaxwarns 10000<doubleQuotes46>/>"
"9721splitHere46","12214072splitHere46","MainClass1() {<newline46mondego>    addMouseListener(this);<newline46mondego>}<newline46mondego>"
"9722splitHere46","12214072splitHere46","private MouseListener mouseListener;<newline46mondego>MainClass1() {<newline46mondego>   mouseListener = createMouseListener();<newline46mondego>   addMouseListener(mouseListener);<newline46mondego>}<newline46mondego><newline46mondego>protected MouseListener createMouseListener() {<newline46mondego>    MouseListener l = new MouseListener() {<newline46mondego><newline46mondego>    }<newline46mondego>   return l;<newline46mondego>}<newline46mondego>"
"9723splitHere46","12214122splitHere46","classes"
"9724splitHere46","12214122splitHere46","WEB-INF"
"9725splitHere46","12214122splitHere46","classes"
"9726splitHere46","12214122splitHere46",".../Web-INF/classes/property/content.properties"
"9727splitHere46","12214122splitHere46","struts.xml"
"9728splitHere46","12214122splitHere46","<constant name=<doubleQuotes46>struts.custom.i18n.resources<doubleQuotes46> value=<doubleQuotes46>property.content<doubleQuotes46> />"
"9729splitHere46","12214208splitHere46","POJO"
"9730splitHere46","12214208splitHere46","T"
"9731splitHere46","12214208splitHere46","POJO<T>"
"9732splitHere46","12214278splitHere46","./mongo server:27017/dbname --quiet my_commands.js<newline46mondego>"
"9733splitHere46","12214292splitHere46","<U+[^>]+>"
"9734splitHere46","12214407splitHere46","106.193.214.75"
"9735splitHere46","12214407splitHere46","192.168.42.194"
"9736splitHere46","12214433splitHere46","Sigar.jar"
"9737splitHere46","12214433splitHere46",".so"
"9738splitHere46","12214433splitHere46","<doubleQuotes46>hyperic-sigar-1.6.4/sigar-bin/lib<doubleQuotes46>"
"9739splitHere46","12214433splitHere46","Mem"
"9740splitHere46","12214433splitHere46","import java.io.*;<newline46mondego>import java.util.*;<newline46mondego>import java.text.*;<newline46mondego>import java.lang.*;<newline46mondego><newline46mondego><newline46mondego>import org.hyperic.sigar.Mem;<newline46mondego>import org.hyperic.sigar.Sigar;<newline46mondego>import org.hyperic.sigar.SigarException;<newline46mondego><newline46mondego>public class MemExample {<newline46mondego><newline46mondego>    private static Sigar sigar = new Sigar();<newline46mondego><newline46mondego>    public static void getInformationsAboutMemory() {<newline46mondego>        System.out.println(<doubleQuotes46>**************************************<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>*** Informations about the Memory: ***<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>**************************************\n<doubleQuotes46>);<newline46mondego><newline46mondego>        Mem mem = null;<newline46mondego>        try {<newline46mondego>            mem = sigar.getMem();<newline46mondego>        } catch (SigarException se) {<newline46mondego>            se.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Actual total free system memory: <doubleQuotes46><newline46mondego>                + mem.getActualFree() / 1024 / 1024+ <doubleQuotes46> MB<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Actual total used system memory: <doubleQuotes46><newline46mondego>                + mem.getActualUsed() / 1024 / 1024 + <doubleQuotes46> MB<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Total free system memory ......: <doubleQuotes46> + mem.getFree()<newline46mondego>                / 1024 / 1024+ <doubleQuotes46> MB<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>System Random Access Memory....: <doubleQuotes46> + mem.getRam()<newline46mondego>                + <doubleQuotes46> MB<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Total system memory............: <doubleQuotes46> + mem.getTotal()<newline46mondego>                / 1024 / 1024+ <doubleQuotes46> MB<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Total used system memory.......: <doubleQuotes46> + mem.getUsed()<newline46mondego>                / 1024 / 1024+ <doubleQuotes46> MB<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>\n**************************************\n<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception{<newline46mondego><newline46mondego>                getInformationsAboutMemory();<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>}<newline46mondego>"
"9741splitHere46","12214458splitHere46","SIZE"
"9742splitHere46","12214477splitHere46","Toast.makeText(MainActivity.this, <doubleQuotes46>Sending SMS..Please Wait..!!<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego>"
"9743splitHere46","12214496splitHere46","jaxb"
"9744splitHere46","12214496splitHere46","jaxb2"
"9745splitHere46","12214496splitHere46","<plugin><newline46mondego>    <groupId>org.jvnet.jaxb2.maven2</groupId><newline46mondego>    <artifactId>maven-jaxb2-plugin</artifactId><newline46mondego>    <version>0.8.2</version><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>            <id>GenerateKenexa</id><newline46mondego>            <goals><newline46mondego>                <goal>generate</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>                <schemaDirectory>src/main/resources/xsd</schemaDirectory><newline46mondego>                <schemaIncludes><newline46mondego>                    <include>KenexaXMLConfiguration.xsd</include><newline46mondego>                </schemaIncludes><newline46mondego>                <generatePackage>com.groupgti.onlinetest.kenexa.jaxb</generatePackage><newline46mondego>                <generateDirectory>${project.build.directory}/generated-sources/kenexa</generateDirectory><newline46mondego>            </configuration><newline46mondego>        </execution><newline46mondego>        <execution><newline46mondego>            <id>GenerateTalentQ</id><newline46mondego>            <goals><newline46mondego>                <goal>generate</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>                <schemaDirectory>src/main/resources/xsd</schemaDirectory><newline46mondego>                <schemaIncludes><newline46mondego>                    <include>TalentQXMLConfiguration.xsd</include><newline46mondego>                </schemaIncludes><newline46mondego>                <generatePackage>com.groupgti.onlinetest.talentq.jaxb</generatePackage><newline46mondego>                <generateDirectory>${project.build.directory}/generated-sources/talentq</generateDirectory><newline46mondego>            </configuration><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego>"
"9746splitHere46","12214582splitHere46","="
"9747splitHere46","12214582splitHere46","public Double getValue() {<newline46mondego>    return 5.0;<newline46mondego>}<newline46mondego><newline46mondego>double d = m.getValue(); // not smart enough to avoid creating a `Double` here.<newline46mondego>"
"9748splitHere46","12214582splitHere46","E[]"
"9749splitHere46","12214582splitHere46","Deal[]"
"9750splitHere46","12214608splitHere46","TreeSet"
"9751splitHere46","12214608splitHere46","List<String> list = Arrays.asList(<doubleQuotes46>Chicken<doubleQuotes46>, <doubleQuotes46>Duck<doubleQuotes46>);<newline46mondego>Set<String> set=  new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);<newline46mondego>set.addAll(list);<newline46mondego>System.out.println(set.contains(<doubleQuotes46>Chicken<doubleQuotes46>)); //true<newline46mondego>System.out.println(set.contains(<doubleQuotes46>chicken<doubleQuotes46>)); //true<newline46mondego>"
"9752splitHere46","12214608splitHere46","final Collator ignoreCase = Collator.getInstance();<newline46mondego>ignoreCase.setStrength(Collator.SECONDARY);<newline46mondego><newline46mondego>List<String> list = Arrays.asList(<doubleQuotes46>Chicken<doubleQuotes46>, <doubleQuotes46>Duck<doubleQuotes46>);<newline46mondego>Set<String> set=  new TreeSet<String>(new Comparator<String>() {<newline46mondego>    @Override<newline46mondego>    public int compare(String o1, String o2) {<newline46mondego>        return ignoreCase.compare(o1, o2);<newline46mondego>    }<newline46mondego>});<newline46mondego>set.addAll(list);<newline46mondego>System.out.println(set.contains(<doubleQuotes46>Chicken<doubleQuotes46>));<newline46mondego>System.out.println(set.contains(<doubleQuotes46>chicken<doubleQuotes46>));<newline46mondego>"
"9753splitHere46","12214679splitHere46","OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(<doubleQuotes46>Updatefiles/<doubleQuotes46>+uuid+<doubleQuotes46>.xml<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"9754splitHere46","12214700splitHere46","#!/bin/sh<newline46mondego><newline46mondego>TEMPFILE=`mktemp`<newline46mondego>while true ; do<newline46mondego>  echo <doubleQuotes46>`date` Starting application<doubleQuotes46> >> $TEMPFILE<newline46mondego>  java -XX:OnOutOfMemoryError=<doubleQuotes46>kill -9 %p<doubleQuotes46> -jar application.jar<newline46mondego>  sleep 5<newline46mondego>done<newline46mondego>"
"9755splitHere46","12214700splitHere46","try {<newline46mondego>    // main loop<newline46mondego>    businessLogic();<newline46mondego>} catch (OutOfMemoryError E) {<newline46mondego>    System.exit(1);<newline46mondego>}<newline46mondego>"
"9756splitHere46","12214819splitHere46","if (Integer.valueOf(android.os.Build.VERSION.SDK_INT) >= 9) {<newline46mondego>        try {<newline46mondego>            // StrictMode.setThreadPolicy(StrictMode.ThreadPolicy.LAX);<newline46mondego>            Class<?> strictModeClass = Class.forName(<doubleQuotes46>android.os.StrictMode<doubleQuotes46>, true, Thread.currentThread()<newline46mondego>                    .getContextClassLoader());<newline46mondego>            Class<?> threadPolicyClass = Class.forName(<doubleQuotes46>android.os.StrictMode$ThreadPolicy<doubleQuotes46>, true, Thread.currentThread()<newline46mondego>                    .getContextClassLoader());<newline46mondego>            Field laxField = threadPolicyClass.getField(<doubleQuotes46>LAX<doubleQuotes46>);<newline46mondego>            Method setThreadPolicyMethod = strictModeClass.getMethod(<doubleQuotes46>setThreadPolicy<doubleQuotes46>, threadPolicyClass);<newline46mondego>            setThreadPolicyMethod.invoke(strictModeClass, laxField.get(null));<newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"9757splitHere46","12214831splitHere46","SELECT dialstring FROM call_routing<newline46mondego>WHERE number like prefix || '%'<newline46mondego>ORDER BY prefix DESC<newline46mondego>LIMIT 1<newline46mondego>"
"9758splitHere46","12214831splitHere46","abcdef"
"9759splitHere46","12214831splitHere46","prefix between 'a' and 'abcde'"
"9760splitHere46","12214831splitHere46",">="
"9761splitHere46","12214831splitHere46","<="
"9762splitHere46","12214831splitHere46","SELECT dialstring FROM call_routing WHERE<newline46mondego>prefix between substr(number, 1, 1) and number -- range filter (use index)<newline46mondego>AND number like prefix || '%' -- only relevant data (normal filter)<newline46mondego>ORDER BY prefix DESC -- index will work<newline46mondego>LIMIT 1<newline46mondego>"
"9763splitHere46","12214831splitHere46","a >> abcde"
"9764splitHere46","12214831splitHere46","like"
"9765splitHere46","12214831splitHere46","abbde"
"9766splitHere46","12214831splitHere46","be<newline46mondego>b<newline46mondego>abcde<newline46mondego>abbbc<newline46mondego>abd<newline46mondego>ab<newline46mondego>"
"9767splitHere46","12214831splitHere46","Arrays.binarySearch(T[], T key, Comparator<T>)"
"9768splitHere46","12214831splitHere46","abcde"
"9769splitHere46","12214831splitHere46","- you find a prefix (OK, this is the winner)<newline46mondego>- it doesn't start with the same char (there are no prefix)<newline46mondego>"
"9770splitHere46","12214831splitHere46","abcde >> a"
"9771splitHere46","12214831splitHere46","0 // represents 0<newline46mondego> -><newline46mondego>   2  // represents 02<newline46mondego>     -> 1 // represents 021<newline46mondego>     -> 3 // represents 023<newline46mondego> -><newline46mondego>   4 // represents 04<newline46mondego>"
"9772splitHere46","12214831splitHere46","Node n = root;<newline46mondego>for (char c: number) {<newline46mondego>    if ((child = n.hasChild(c)) != null)<newline46mondego>    {<newline46mondego>       prefix += c;<newline46mondego>       n = child;<newline46mondego>    }<newline46mondego>    else<newline46mondego>       break;<newline46mondego>}<newline46mondego>"
"9773splitHere46","12214831splitHere46","class Node<newline46mondego>{<newline46mondego>   int digit;<newline46mondego>   Map<Integer, Node> childs = new HashMap<Integer, Node>(); // or a 10 bucket array :)<newline46mondego>   YourInfo info;<newline46mondego>}<newline46mondego>"
"9774splitHere46","12214831splitHere46","findOrCreateNode(prefix).setInfo(info);<newline46mondego>"
"9775splitHere46","12214831splitHere46","n.put(c, new Node(c))"
"9776splitHere46","12214879splitHere46","DAO"
"9777splitHere46","12214879splitHere46","database"
"9778splitHere46","12214879splitHere46","insert in to @tablename"
"9779splitHere46","12214879splitHere46","how can i change the model to allow partial addition of fields in the db?"
"9780splitHere46","12214912splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego><!--<newline46mondego>    if (top.location!= self.location) {<newline46mondego>        top.location = self.location.href<newline46mondego>                   //or you can use your logout page as<newline46mondego>                   //top.location='logout.jsp' here...<newline46mondego>    }<newline46mondego>//--><newline46mondego></script><newline46mondego>"
"9781splitHere46","12214942splitHere46","public static void main(String[])"
"9782splitHere46","12214942splitHere46","main"
"9783splitHere46","12214942splitHere46","main"
"9784splitHere46","12214942splitHere46","System.setOut(...)"
"9785splitHere46","12214942splitHere46","bis"
"9786splitHere46","12214942splitHere46","System.exit()"
"9787splitHere46","12214951splitHere46","base operand of '->' has non-pointer type"
"9788splitHere46","12214951splitHere46","."
"9789splitHere46","12214951splitHere46","->"
"9790splitHere46","12214951splitHere46","(*env).NewByteArray(env, 16);"
"9791splitHere46","12214951splitHere46","env->NewByteArray(env, 16);"
"9792splitHere46","12214951splitHere46","cannot convert <doubleQuotes46>brace-enclosed initializer list><doubleQuotes46> to 'jbyte*' in assignment"
"9793splitHere46","12214951splitHere46","jbyte resultType[16] = {52, 14, 25, 32, 75, 83, 35, 89, 40, 69, 35, 73, 84, 82, 35, 30};<newline46mondego>"
"9794splitHere46","12214979splitHere46","Window"
"9795splitHere46","12214979splitHere46","Frame"
"9796splitHere46","12214979splitHere46","Dialog"
"9797splitHere46","12214979splitHere46","public class SomeDialog extends JDialog {<newline46mondego><newline46mondego>  public SomeDialog() {<newline46mondego>    // see other JDialog constructors for other ways to call this<newline46mondego>    super(parentWindow, title, ModalityType.DOCUMENT_MODAL);<newline46mondego>    ...<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"9798splitHere46","12214979splitHere46","JDialog"
"9799splitHere46","12214991splitHere46","int sizePerPage=2;<newline46mondego>int page=2;<newline46mondego><newline46mondego>int from = Math.max(0,page*sizePerPage);<newline46mondego>int to = Math.min(list.size(),(page+1)*sizePerPage)<newline46mondego><newline46mondego>list.subList(from,to)<newline46mondego>"
"9800splitHere46","12215125splitHere46","Runtime.getRuntime().exec( input + <doubleQuotes46>.exe<doubleQuotes46> ).waitFor();<newline46mondego>"
"9801splitHere46","12215133splitHere46","library type"
"9802splitHere46","12215133splitHere46","application type"
"9803splitHere46","12215142splitHere46","Locale locale = LocaleContextHolder.getLocale();<newline46mondego>String datepickerLocale;<newline46mondego>if(locale.getLanguage().equals(<doubleQuotes46>de<doubleQuotes46>)){<newline46mondego>    datepickerLocale = <doubleQuotes46>de<doubleQuotes46>; // only <doubleQuotes46>de<doubleQuotes46>, no country code<newline46mondego>} else if (locale.getLanguage().equals(<doubleQuotes46>en<doubleQuotes46>)){<newline46mondego>    if(locale.getCountry().equals(<doubleQuotes46>GB<doubleQuotes46>)){<newline46mondego>        datepickerLocale = <doubleQuotes46>en-GB<doubleQuotes46>; // en-GB must be set explicitly<newline46mondego>    } else if(locale.getCountry().equals(<doubleQuotes46>US<doubleQuotes46>)){<newline46mondego>        datepickerLocale = <doubleQuotes46><doubleQuotes46>; // en-US is default<newline46mondego>    }<newline46mondego>}<newline46mondego>// [...] more locales if needed, see docs for Datepicker Localization<newline46mondego>uiModel.addAttribute(<doubleQuotes46>datepickerLocale<doubleQuotes46>, datepickerLocale);<newline46mondego>"
"9804splitHere46","12215142splitHere46","$.datepicker.setDefaults( $.datepicker.regional['${datepickerLocale}'] );<newline46mondego>"
"9805splitHere46","12215142splitHere46","RequestContextUtils.getLocaleResolver(request).resolveLocale(request)<newline46mondego>"
"9806splitHere46","12215206splitHere46","Map<String, String> map = new HashMap<>();<newline46mondego>map.put(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>abcd<doubleQuotes46>);<newline46mondego>map.put(<doubleQuotes46>y<doubleQuotes46>, <doubleQuotes46>qwert<doubleQuotes46>);<newline46mondego>map.put(<doubleQuotes46>z<doubleQuotes46>, <doubleQuotes46>mnvji<doubleQuotes46>);<newline46mondego>Scanner s = new Scanner(System.in);<newline46mondego>while (s.hasNextLine())<newline46mondego>System.out.println(map.get(s.nextLine()));<newline46mondego>"
"9807splitHere46","12215239splitHere46","beerPref.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {<newline46mondego>     public boolean onPreferenceChange(Preference pref, Object newValue) {<newline46mondego>         final ListPreference listPref = (ListPreference) pref;<newline46mondego>         final int idx = listPref.findIndexOfValue((String) newValue);<newline46mondego><newline46mondego>         //Depending upon idx execute<newline46mondego>         return true;<newline46mondego>     }<newline46mondego> });<newline46mondego>"
"9808splitHere46","12215275splitHere46","charWidth"
"9809splitHere46","12215275splitHere46","FontMetrics"
"9810splitHere46","12215275splitHere46","char"
"9811splitHere46","12215275splitHere46","playerOneScore"
"9812splitHere46","12215275splitHere46","int"
"9813splitHere46","12215275splitHere46","char"
"9814splitHere46","12215275splitHere46","stringWidth(playerOneScore + <doubleQuotes46><doubleQuotes46>);"
"9815splitHere46","12215285splitHere46","Class.forName(drivername);<newline46mondego>DBconnection = DriverManager.getConnection(dbName,userName,password);<newline46mondego>"
"9816splitHere46","12215285splitHere46","public class ConnectDatabase {<newline46mondego><newline46mondego>   Connection dbConnection = null;<newline46mondego>   String dbName = <doubleQuotes46>silkopenview<doubleQuotes46>;<newline46mondego>   String userName = <doubleQuotes46>SilkTestAdmin<doubleQuotes46>; <newline46mondego>   String password = <doubleQuotes46>Nbv12345<doubleQuotes46>;<newline46mondego><newline46mondego>   public Connection getConnection() {<newline46mondego>      Class.forName(drivername);<newline46mondego>      dbConnection = DriverManager.getConnection(dbName,userName,password);<newline46mondego>      return dbConnection;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9817splitHere46","12215601splitHere46","public class MyActivity extends MapActivity implements LocationListener, OnClickListener {<newline46mondego><newline46mondego>    private MapView mapView;<newline46mondego>    private MyItemizedOverlay itemizedOverlay;<newline46mondego>    Button route;<newline46mondego>    boolean shadow;<newline46mondego>    private LocationManager locManager;<newline46mondego>    ArrayList<GeoPoint> points = new ArrayList<GeoPoint>();<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego><newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>        route = (Button) findViewById(R.id.cmd_submit);<newline46mondego>        route.setOnClickListener(this);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        //fetch the map view from the layout<newline46mondego>        mapView = (MapView) findViewById(R.id.myMapView);<newline46mondego><newline46mondego>        //make available zoom controls<newline46mondego>        mapView.setBuiltInZoomControls(true);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        //latitude and longitude of Rome<newline46mondego>        double lat = 41.889882;<newline46mondego>        double lon = 12.479267;<newline46mondego><newline46mondego>        //create geo point<newline46mondego>        GeoPoint point = new GeoPoint((int) (lat * 1E6), (int) (lon * 1E6));<newline46mondego><newline46mondego>        //get the MapController object<newline46mondego>        MapController controller = mapView.getController();<newline46mondego><newline46mondego>        //animate to the desired point<newline46mondego>        controller.animateTo(point);<newline46mondego><newline46mondego>        //set the map zoom to 13<newline46mondego>        // zoom 1 is top world view<newline46mondego>        controller.setZoom(13);<newline46mondego><newline46mondego>        //invalidate the map in order to show changes<newline46mondego>        mapView.invalidate();<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        // Use the location manager through GPS<newline46mondego>        locManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);<newline46mondego>        locManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0,<newline46mondego>                0, this);<newline46mondego><newline46mondego>        //get the current location (last known location) from the location manager<newline46mondego>        Location location = locManager<newline46mondego>                .getLastKnownLocation(LocationManager.GPS_PROVIDER);<newline46mondego><newline46mondego><newline46mondego>        //if location found display as a toast the current latitude and longitude<newline46mondego>        if (location != null) {<newline46mondego><newline46mondego>            Toast.makeText(<newline46mondego>                    this,<newline46mondego>                    <doubleQuotes46>Current location:\nLatitude: <doubleQuotes46> + location.getLatitude()<newline46mondego>                    + <doubleQuotes46>\n<doubleQuotes46> + <doubleQuotes46>Longitude: <doubleQuotes46> + location.getLongitude(),<newline46mondego>                    Toast.LENGTH_LONG).show();<newline46mondego><newline46mondego>            point = new GeoPoint((int) (location.getLatitude() * 1E6), (int) (location.getLongitude()<newline46mondego>                    * 1E6));<newline46mondego><newline46mondego>            controller.animateTo(point);<newline46mondego><newline46mondego><newline46mondego>        } else {<newline46mondego><newline46mondego>            Toast.makeText(this, <doubleQuotes46>Cannot fetch current location!<doubleQuotes46>,<newline46mondego>                    Toast.LENGTH_LONG).show();<newline46mondego>        }<newline46mondego><newline46mondego>        //when the current location is found â€“ stop listening for updates (preserves battery)<newline46mondego>        locManager.removeUpdates(this);<newline46mondego><newline46mondego>        // fetch the drawable - the pin that will be displayed on the map<newline46mondego>        Drawable drawable = this.getResources().getDrawable(R.drawable.marker);<newline46mondego><newline46mondego>        // create and add an OverlayItem to the MyItemizedOverlay list<newline46mondego>        OverlayItem overlayItem = new OverlayItem(point, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>        itemizedOverlay = new MyItemizedOverlay(drawable, this);<newline46mondego><newline46mondego>        itemizedOverlay.setGestureDetector(new GestureDetector(new MyGestureDetector()));<newline46mondego><newline46mondego>        itemizedOverlay.addOverlay(overlayItem);<newline46mondego><newline46mondego><newline46mondego>        // add the overlays to the map<newline46mondego>        mapView.getOverlays().add(itemizedOverlay);<newline46mondego>        mapView.invalidate();<newline46mondego><newline46mondego>        //when the current location is found â€“ stop listening for updates (preserves battery)<newline46mondego>        locManager.removeUpdates(this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected boolean isRouteDisplayed() {<newline46mondego>        return false;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /* When the activity starts up, request updates */<newline46mondego>    @Override<newline46mondego>    protected void onResume() {<newline46mondego>        super.onResume();<newline46mondego>        locManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0,<newline46mondego>                0, this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPause() {<newline46mondego>        super.onPause();<newline46mondego>        locManager.removeUpdates(this); //activity pauses => stop listening for updates<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9818splitHere46","12215633splitHere46","public static void main(String[] args) <newline46mondego>{<newline46mondego>  string output;<newline46mondego>  string fname = readFileName();<newline46mondego>  if (fileValid(fname)) //Ensure FileExists<newline46mondego>  {<newline46mondego>     int lineCount = scaneFile(fname);   <newline46mondego>     output = <doubleQuotes46>some output text including line numbers<doubleQuotes46>   <newline46mondego>  }  <newline46mondego>  else<newline46mondego>  {<newline46mondego>    output = <doubleQuotes46>File Not Valid...<doubleQuotes46><newline46mondego>  }<newline46mondego>  //showOutput...<newline46mondego>}<newline46mondego>"
"9819splitHere46","12215636splitHere46","package dan;<newline46mondego><newline46mondego>import java.util.Random;<newline46mondego><newline46mondego>public class RandText {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        String s = getRandomText(100);<newline46mondego>        System.out.println(s);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static String getRandomText(int len) {<newline46mondego>        StringBuilder b = new StringBuilder();<newline46mondego>        Random r = new Random();<newline46mondego>        for (int i = 0; i<len;i++) {<newline46mondego>            char c = (char)(65+r.nextInt(25));<newline46mondego>            b.append(c);<newline46mondego>        }<newline46mondego>        return b.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9820splitHere46","12215643splitHere46","Pattern"
"9821splitHere46","12215643splitHere46","List<String> res = new ArrayList<String>();<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>([&]{1,2}|=>?| +)<doubleQuotes46>);<newline46mondego>String s = <doubleQuotes46>s=a&=>b<doubleQuotes46>;<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>int pos = 0;<newline46mondego>while (m.find()) {<newline46mondego>    if (pos != m.start()) {<newline46mondego>        res.add(s.substring(pos, m.start()));<newline46mondego>    }<newline46mondego>    res.add(m.group());<newline46mondego>    pos = m.end();<newline46mondego>}<newline46mondego>if (pos != s.length()) {<newline46mondego>    res.add(s.substring(pos));<newline46mondego>}<newline46mondego>for (String t : res) {<newline46mondego>    System.out.println(<doubleQuotes46>'<doubleQuotes46>+t+<doubleQuotes46>'<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"9822splitHere46","12215643splitHere46","'s'<newline46mondego>'='<newline46mondego>'a'<newline46mondego>'&'<newline46mondego>'=>'<newline46mondego>'b'<newline46mondego>"
"9823splitHere46","12215990splitHere46","<doubleQuotes46>^((^|[^A-Za-z]+)[A-Z][A-Za-z]*)*[^A-Za-z]*$<doubleQuotes46><newline46mondego>"
"9824splitHere46","12215990splitHere46","^"
"9825splitHere46","12215990splitHere46","$"
"9826splitHere46","12215990splitHere46","*"
"9827splitHere46","12215990splitHere46","+"
"9828splitHere46","12215990splitHere46","[^A-Za-z]"
"9829splitHere46","12215990splitHere46","^"
"9830splitHere46","12215990splitHere46","$"
"9831splitHere46","12215990splitHere46","*"
"9832splitHere46","12215990splitHere46","+"
"9833splitHere46","12215990splitHere46","<doubleQuotes46>^((^|[^A-Za-z]+)[A-Z][A-Za-z]*)+[^A-Za-z]*$<doubleQuotes46><newline46mondego>"
"9834splitHere46","12216105splitHere46","ConcurrentModificationException"
"9835splitHere46","12216105splitHere46","ConcurrentModificationException"
"9836splitHere46","12216105splitHere46","public static void main(String[] args) {<newline46mondego>    Set<String> strs = new HashSet<String>();<newline46mondego>    strs.add(<doubleQuotes46>one<doubleQuotes46>);<newline46mondego>    strs.add(<doubleQuotes46>two<doubleQuotes46>);<newline46mondego>    strs.add(<doubleQuotes46>three<doubleQuotes46>);<newline46mondego><newline46mondego>    for (String str : strs) {<newline46mondego>        //note the typo: twos is NOT in the set<newline46mondego>        if (str.equalsIgnoreCase(<doubleQuotes46>twos<doubleQuotes46>)) {<newline46mondego>            strs.remove(str);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9837splitHere46","12216158splitHere46","@NamedQuery(name = <doubleQuotes46>Group.countUsers<doubleQuotes46>, query = <doubleQuotes46>SELECT g, count(u) FROM Group g JOIN FETCH g.users u GROUP BY g<doubleQuotes46>)<newline46mondego>"
"9838splitHere46","12216256splitHere46","[ \\t\\n\\x0B\\f\\r]"
"9839splitHere46","12216256splitHere46","\\s"
"9840splitHere46","12216256splitHere46","public static void main(String [] args) {<newline46mondego>    String[] vals = {<doubleQuotes46>grant     insert,update,delete on ABC.TABLE_NAME to group DACT_RW, group DACT_RW_BATCH1<doubleQuotes46>};<newline46mondego>    String eodAppendedDbObjectName = <doubleQuotes46>ABC.TABLE_NAME<doubleQuotes46>;<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>[gG][rR][aA][nN][tT]\\s+[iI][nN][sS][eE][rR][tT]\\s*,\\s*[uU][pP][dD][aA][tT][eE]\\s*,\\s*[dD][eE][lL][eE][tT][eE]\\s+[oO][nN]\\s+<doubleQuotes46> + eodAppendedDbObjectName + <doubleQuotes46>\\s+[tT][oO]\\s+[gG][rR][oO][uU][pP]\\s+DACT_RW\\s*,\\s*[gG][rR][oO][uU][pP]\\s+DACT_RW_BATCH1$<doubleQuotes46>);        <newline46mondego>    for (String s : vals) {<newline46mondego>        Matcher m = p.matcher(s);<newline46mondego>        if (m.matches()) {<newline46mondego>            System.out.println(s + <doubleQuotes46> matches.<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            System.out.println(s + <doubleQuotes46> does not match.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9841splitHere46","12216346splitHere46","String str=<doubleQuotes46> abc d 1234567890pqr 54897<doubleQuotes46>;<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>\\w+([0-9]+)\\w+([0-9]+)<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(str);<newline46mondego>for(int i = 0 ; i < matcher.groupCount(); i++) {<newline46mondego>  matcher.find();<newline46mondego>  System.out.println(matcher.group());<newline46mondego>}<newline46mondego>"
"9842splitHere46","12216378splitHere46","<? extends Number>"
"9843splitHere46","12216378splitHere46","Number"
"9844splitHere46","12216378splitHere46","List<Number> numbers = new ArrayList<Number>();<newline46mondego>Number n = 1;<newline46mondego>numbers.add(n); // ok.<newline46mondego>n = numbers.get(0); // ok<newline46mondego>numbers.add(1); // ok.<newline46mondego><newline46mondego>List<? extends Number> numbers2 = new ArrayList<Double>();<newline46mondego>numbers2.add(n); // not ok<newline46mondego>n = numbers2.get(0); // ok<newline46mondego><newline46mondego>List<? super Number> numbers3 = new ArrayList<Serializable>();<newline46mondego>numbers3.add(n); // ok<newline46mondego>n = numbers3.get(0); // not ok.<newline46mondego>"
"9845splitHere46","12216378splitHere46","super"
"9846splitHere46","12216378splitHere46","public static <T> void sort(List<T> list, Comparator<? super T> c)<newline46mondego>"
"9847splitHere46","12216378splitHere46","Comparator<Number> comparesAnyNumbers = ...<newline46mondego>List<Integer> ints = ...<newline46mondego>Collections.sort(ints, comparesAnyNumbers);<newline46mondego>"
"9848splitHere46","12216433splitHere46","android:layout_below=<doubleQuotes46>...<doubleQuotes46>"
"9849splitHere46","12216433splitHere46","<TextView<newline46mondego>android:id=<doubleQuotes46>@+id/english<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:layout_alignLeft=<doubleQuotes46>@+id/tamil<doubleQuotes46><newline46mondego>android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>android:layout_alignParentRight=<doubleQuotes46>true<doubleQuotes46><newline46mondego>android:layout_marginLeft=<doubleQuotes46>20dp<doubleQuotes46><newline46mondego>android:layout_marginTop=<doubleQuotes46>30dp<doubleQuotes46><newline46mondego>android:textColor=<doubleQuotes46>#000000<doubleQuotes46><newline46mondego>android:layout_below=<doubleQuotes46>@+id/tamil<doubleQuotes46> // this line<newline46mondego>android:textSize=<doubleQuotes46>25px<doubleQuotes46><newline46mondego>android:textStyle=<doubleQuotes46>normal<doubleQuotes46> /><newline46mondego>"
"9850splitHere46","12216433splitHere46","android:layout_alignTop=<doubleQuotes46>@+id/tamil<doubleQuotes46>"
"9851splitHere46","12216512splitHere46","textArea.append(text + newline);<newline46mondego>"
"9852splitHere46","12216547splitHere46","int N = 1;<newline46mondego>public int N = 1;<newline46mondego>static int N = 1;<newline46mondego>public static int N = 1;<newline46mondego>// also<newline46mondego>final int N = 1;<newline46mondego>public final int N = 1;<newline46mondego>static final int N = 1;<newline46mondego>public static final int N = 1;<newline46mondego>"
"9853splitHere46","12216547splitHere46","static"
"9854splitHere46","12216547splitHere46","final"
"9855splitHere46","12216547splitHere46","int foo();<newline46mondego>public int foo();<newline46mondego>abstract int foo();<newline46mondego>public abstract int foo();<newline46mondego>"
"9856splitHere46","12216547splitHere46","interface A {<newline46mondego>    public static class C { }<newline46mondego>    public static /* final */ enum E {; }<newline46mondego>    public static abstract interface I { }<newline46mondego>    public static abstract @interface A { }<newline46mondego>}<newline46mondego>"
"9857splitHere46","12216661splitHere46","public static float[] RGBtoHSB(int r, int g, int b, float[] hsbvals) {<newline46mondego>float hue, saturation, brightness;<newline46mondego>if (hsbvals == null) {<newline46mondego>    hsbvals = new float[3];<newline46mondego>}<newline46mondego>    int cmax = (r > g) ? r : g;<newline46mondego>if (b > cmax) cmax = b;<newline46mondego>int cmin = (r < g) ? r : g;<newline46mondego>if (b < cmin) cmin = b;<newline46mondego><newline46mondego>brightness = ((float) cmax) / 255.0f;<newline46mondego>if (cmax != 0)<newline46mondego>    saturation = ((float) (cmax - cmin)) / ((float) cmax);<newline46mondego>else<newline46mondego>    saturation = 0;<newline46mondego>if (saturation == 0)<newline46mondego>    hue = 0;<newline46mondego>else {<newline46mondego>    float redc = ((float) (cmax - r)) / ((float) (cmax - cmin));<newline46mondego>    float greenc = ((float) (cmax - g)) / ((float) (cmax - cmin));<newline46mondego>    float bluec = ((float) (cmax - b)) / ((float) (cmax - cmin));<newline46mondego>    if (r == cmax)<newline46mondego>    hue = bluec - greenc;<newline46mondego>    else if (g == cmax)<newline46mondego>        hue = 2.0f + redc - bluec;<newline46mondego>        else<newline46mondego>    hue = 4.0f + greenc - redc;<newline46mondego>    hue = hue / 6.0f;<newline46mondego>    if (hue < 0)<newline46mondego>    hue = hue + 1.0f;<newline46mondego>}<newline46mondego>hsbvals[0] = hue;<newline46mondego>hsbvals[1] = saturation;<newline46mondego>hsbvals[2] = brightness;<newline46mondego>return hsbvals;<newline46mondego>}<newline46mondego>"
"9858splitHere46","12216795splitHere46","public static <T> List<T> createArrayList() {<newline46mondego>      return new ArrayList<T>();<newline46mondego> }<newline46mondego>"
"9859splitHere46","12216795splitHere46","List<Integer> list = createArrayList();<newline46mondego>"
"9860splitHere46","12216865splitHere46","public void sendData(List<?> objectIds) {<newline46mondego>    List<Integer> converted = new ArrayList<Integer>();<newline46mondego><newline46mondego>    for (Object objectId : objectIds) {<newline46mondego>        converted.add(((Number)objectId).intValue());<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"9861splitHere46","12216872splitHere46","invoke"
"9862splitHere46","12216872splitHere46","Class<?> statusbarManager = Class.forName(<doubleQuotes46>android.app.StatusBarManager<doubleQuotes46>);<newline46mondego>Method disable = statusbarManager.getMethod(<doubleQuotes46>disable<doubleQuotes46>, Integer.TYPE); //takes an int<newline46mondego>disable.invoke(service, 2); //calls disable(2)<newline46mondego>"
"9863splitHere46","12216881splitHere46","signed_request"
"9864splitHere46","12216890splitHere46","A"
"9865splitHere46","12216890splitHere46","B"
"9866splitHere46","12216890splitHere46","A"
"9867splitHere46","12216890splitHere46","B"
"9868splitHere46","12217080splitHere46","bees app:deploy -Rjava_version=1.7 yourapp<newline46mondego>"
"9869splitHere46","12217109splitHere46","add(E e)"
"9870splitHere46","12217109splitHere46","add"
"9871splitHere46","12217109splitHere46","add"
"9872splitHere46","12217109splitHere46","ArrayList"
"9873splitHere46","12217109splitHere46","add"
"9874splitHere46","12217210splitHere46","private void function(Integer[] a, String str) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego><newline46mondego>private void function(Integer[] a) {<newline46mondego>    function(a, <doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"9875splitHere46","12217264splitHere46","false"
"9876splitHere46","12217264splitHere46","true"
"9877splitHere46","12217339splitHere46","for"
"9878splitHere46","12217339splitHere46","usednum[]"
"9879splitHere46","12217339splitHere46","for"
"9880splitHere46","12217339splitHere46","usednum[]"
"9881splitHere46","12217339splitHere46","while"
"9882splitHere46","12217339splitHere46","for"
"9883splitHere46","12217339splitHere46","for(int i = 0; i<usednum.length; i++) {<newline46mondego>           while(usednum[i]==0) {<newline46mondego>              randNum = rand.nextInt(numbers.length-min+1)+min;<newline46mondego>              for(int f = 0; f<usednum.length; f++) {<newline46mondego>                 if(usednum[f] == randNum) {<newline46mondego>                    break;<newline46mondego>                 } //if                                                                                                                                        <newline46mondego>                 else if (usednum[f] == 0) {<newline46mondego>                    usednum[i] = randNum;<newline46mondego>                 }<newline46mondego>              }<newline46mondego>           }<newline46mondego>        }<newline46mondego>"
"9884splitHere46","12217339splitHere46","usednum[i] = randNum;"
"9885splitHere46","12217339splitHere46","for"
"9886splitHere46","12217343splitHere46","angleSpeed"
"9887splitHere46","12217343splitHere46","speed*deltaTime"
"9888splitHere46","12217343splitHere46","arclength = radius*angle"
"9889splitHere46","12217343splitHere46","angle = arclength/radius"
"9890splitHere46","12217343splitHere46","angle = speed*deltaTime/radius<newline46mondego>"
"9891splitHere46","12217395splitHere46","public static <T> T findEager(EntityManager em, Class<T> type, Object id) {<newline46mondego>    T entity = em.find(type, id);<newline46mondego>    for (Field field: type.getDeclaredFields()) {<newline46mondego>        OneToMany annotation = field.getAnnotation(OneToMany.class);<newline46mondego>        if (annotation != null) {<newline46mondego>            if (annotation.fetch().equals(FetchType.LAZY)) {<newline46mondego>                try {<newline46mondego>                    new PropertyDescriptor(field.getName(), type).getReadMethod().invoke(entity);<newline46mondego>                } catch (Exception e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return entity;<newline46mondego>}<newline46mondego>"
"9892splitHere46","12217395splitHere46","Contact entity = findEager(em, Contact.class, mappedContact.getContact());<newline46mondego>"
"9893splitHere46","12217434splitHere46","public static <K,V> ImmutableMap.Builder<K,V> builder() { ... }<newline46mondego>"
"9894splitHere46","12217434splitHere46","<K, V>"
"9895splitHere46","12217509splitHere46","Spring Tools --> Add Spring Project nature"
"9896splitHere46","12217699splitHere46","String mystring = <doubleQuotes46>ersin#$gulbahar#$ev<doubleQuotes46>;<newline46mondego>String[] scripts = mystring.split(<doubleQuotes46>#\\$<doubleQuotes46>);<newline46mondego>System.out.println(Arrays.toString(scripts));<newline46mondego>"
"9897splitHere46","12217699splitHere46","[ersin, gulbahar, ev]<newline46mondego>"
"9898splitHere46","12218032splitHere46","if ( isCustomMarshaller(getter) ) {<newline46mondego>    unmarshaller = new SUnmarshaller() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object unmarshall(AttributeValue value) {<newline46mondego>            return getCustomMarshalledValue(toReturn, getter, value);<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"9899splitHere46","12218032splitHere46","UuidConverter"
"9900splitHere46","12218032splitHere46","UUID"
"9901splitHere46","12218032splitHere46","Set<UUID>"
"9902splitHere46","12218032splitHere46","@SuppressWarnings({ <doubleQuotes46>rawtypes<doubleQuotes46>, <doubleQuotes46>unchecked<doubleQuotes46> })<newline46mondego>    private <T> T getCustomMarshalledValueSet(T toReturn, Method getter, AttributeValue value) {<newline46mondego>    DynamoDBMarshalling annotation = getter.getAnnotation(DynamoDBMarshalling.class);<newline46mondego>    Class<? extends DynamoDBMarshaller<? extends Object>> marshallerClass = annotation.marshallerClass();<newline46mondego><newline46mondego>    DynamoDBMarshaller marshaller;<newline46mondego>    try {<newline46mondego>        marshaller = marshallerClass.newInstance();<newline46mondego>    } catch (InstantiationException e) {<newline46mondego>        throw new DynamoDBMappingException(<doubleQuotes46>Couldn't instantiate marshaller of class <doubleQuotes46> + marshallerClass, e);<newline46mondego>    } catch (IllegalAccessException e) {<newline46mondego>        throw new DynamoDBMappingException(<doubleQuotes46>Couldn't instantiate marshaller of class <doubleQuotes46> + marshallerClass, e);<newline46mondego>    }<newline46mondego><newline46mondego>    Set<T> set = new HashSet<T>();<newline46mondego><newline46mondego>    for (String part : value.getSS()) {<newline46mondego>        set.add((T) marshaller.unmarshall(getter.getReturnType(), part));<newline46mondego>    }<newline46mondego><newline46mondego>    return (T) set;<newline46mondego>}<newline46mondego>"
"9903splitHere46","12218032splitHere46","if (isCustomMarshaller(getter)) {<newline46mondego>                if (isCollection) {<newline46mondego>                    unmarshaller = new SSUnmarshaller() {<newline46mondego><newline46mondego>                        @Override<newline46mondego>                        public Object unmarshall(AttributeValue value) {<newline46mondego>                            return getCustomMarshalledValueSet(toReturn, getter, value);<newline46mondego>                        }<newline46mondego>                    };<newline46mondego>                } else {<newline46mondego>                    unmarshaller = new SUnmarshaller() {<newline46mondego><newline46mondego>                        @Override<newline46mondego>                        public Object unmarshall(AttributeValue value) {<newline46mondego>                            return getCustomMarshalledValue(toReturn, getter, value);<newline46mondego>                        }<newline46mondego>                    };<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>"
"9904splitHere46","12218067splitHere46","String s = <doubleQuotes46>1000, 2000, 3000, 4000, 11000, 1000<doubleQuotes46>;<newline46mondego>s = s.replaceAll(<doubleQuotes46>\b(1000, |, 1000)\b<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>System.out.println(s);<newline46mondego>"
"9905splitHere46","12218067splitHere46","2000, 3000, 4000, 11000<newline46mondego>"
"9906splitHere46","12218067splitHere46","List<Integer> ints = new ArrayList<Integer>(Arrays.asList(<newline46mondego>                         1000, 2000, 3000, 4000, 1000, -1000, 11000 ));<newline46mondego>while(ints.remove((Integer) 1000));<newline46mondego>System.out.println(ints);<newline46mondego>"
"9907splitHere46","12218067splitHere46","[2000, 3000, 4000, -1000, 11000]<newline46mondego>"
"9908splitHere46","12218067splitHere46","String s = <doubleQuotes46>1000, 2000, 3000, 4000, 1000, -1000, 11000<doubleQuotes46>;<newline46mondego>List<String> ints = new ArrayList<String>(Arrays.asList(s.split(<doubleQuotes46>, <doubleQuotes46>)));<newline46mondego>while (ints.remove(<doubleQuotes46>1000<doubleQuotes46>)) ;<newline46mondego>System.out.println(ints);<newline46mondego>"
"9909splitHere46","12218067splitHere46","[2000, 3000, 4000, -1000, 11000]<newline46mondego>"
"9910splitHere46","12218313splitHere46","select()"
"9911splitHere46","12218313splitHere46","text()"
"9912splitHere46","12218313splitHere46","select(div[class=foo]).select(span[class=bar]).text()"
"9913splitHere46","12218313splitHere46","select(div[class=foo] span[class=bar]).text()"
"9914splitHere46","12218313splitHere46","select(div.foo span.bar).text()"
"9915splitHere46","12218313splitHere46","Document doc = Jsoup.connect(<doubleQuotes46>http://test.com<doubleQuotes46>).get();<newline46mondego>  String companyName = doc.select(<doubleQuotes46>div.foo span.bar<doubleQuotes46>).text();<newline46mondego>"
"9916splitHere46","12218313splitHere46","Document doc = Jsoup.connect(<doubleQuotes46>http://test.com<doubleQuotes46>).get();<newline46mondego>List<String> criterias = Arrays.asList(<doubleQuotes46>div.foo<doubleQuotes46>, <doubleQuotes46>span.bar<doubleQuotes46>);<newline46mondego>Document tmpDoc = doc;<newline46mondego>for (String criteria: criterias) {<newline46mondego>    if (tmpDoc != null)<newline46mondego>        tmpDoc = tmpDoc.select(criteria);<newline46mondego>}<newline46mondego>// now you have traversed the whole criterias just get the text<newline46mondego>String companyName = tmpDoc.text();<newline46mondego>"
"9917splitHere46","12218313splitHere46","Document doc = Jsoup.connect(<doubleQuotes46>http://test.com<doubleQuotes46>).get();<newline46mondego>List<String> criterias = Arrays.asList(<doubleQuotes46>div.foo<doubleQuotes46>, <doubleQuotes46>span.bar<doubleQuotes46>);<newline46mondego>Method select = doc.getClass().getMethod(<doubleQuotes46>select<doubleQuotes46>, String.class);<newline46mondego>Document tmpDoc = doc;<newline46mondego>for (String criteria: criterias) {<newline46mondego>    if (tmpDoc != null)<newline46mondego>        tmpDoc = (Document)select.invoke(tmpDoc, new Object[] {criteria});<newline46mondego>}<newline46mondego>// now you have traversed the whole criterias just get the text<newline46mondego>String companyName = tmpDoc.text();<newline46mondego>"
"9918splitHere46","12218443splitHere46","Strings"
"9919splitHere46","12218443splitHere46","immutable"
"9920splitHere46","12218443splitHere46","String"
"9921splitHere46","12218443splitHere46","conc= conc.concat(<doubleQuotes46>hello <doubleQuotes46>);"
"9922splitHere46","12218597splitHere46","double"
"9923splitHere46","12218597splitHere46","Double.toString(double)"
"9924splitHere46","12218597splitHere46","System.out.println(BigDecimal.valueOf(0.1));<newline46mondego>"
"9925splitHere46","12218597splitHere46","0.1<newline46mondego>"
"9926splitHere46","12218597splitHere46","double"
"9927splitHere46","12218597splitHere46","double"
"9928splitHere46","12218656splitHere46","getNewses()<newline46mondego>{<newline46mondego>...<newline46mondego>}<newline46mondego>"
"9929splitHere46","12218656splitHere46","getNews(){ ...}<newline46mondego>"
"9930splitHere46","12218663splitHere46","SpriteSheetAnimation"
"9931splitHere46","12218663splitHere46","public class SpriteSheetAnimation extends GameObjectTemplate {<newline46mondego><newline46mondego>    int animationSheetLength;<newline46mondego>    int animationSheetHeight;<newline46mondego>    int columns;<newline46mondego>    int rows;<newline46mondego>    Rect srcRect;<newline46mondego><newline46mondego>    int left;<newline46mondego>    int bottom;<newline46mondego>    int lengthOfSpriteInSheet;<newline46mondego>    int heightOfSpriteInSheet;<newline46mondego><newline46mondego>    boolean repeatAnimation;<newline46mondego>    boolean animationCompleted;<newline46mondego>    boolean animationStarted;<newline46mondego><newline46mondego>    Bitmap bitmap;<newline46mondego><newline46mondego>    /**<newline46mondego>     * You input a bitmap and the number of sprites (by defining the number of rows and columns), and this class will<newline46mondego>     * take care of animating the sheet. <newline46mondego>     * <newline46mondego>     */<newline46mondego><newline46mondego>    public SpriteSheetAnimation(WorldTemplate world, Bitmap animationSheet, int amountOfRows, int amountOfColumns) {<newline46mondego>        super(world);<newline46mondego>        this.animationSheetLength = animationSheet.getWidth();<newline46mondego>        this.animationSheetHeight = animationSheet.getHeight();<newline46mondego>        this.columns = amountOfColumns;<newline46mondego>        this.rows = amountOfRows;<newline46mondego>        this.lengthOfSpriteInSheet = this.animationSheetLength/this.columns;<newline46mondego>        this.heightOfSpriteInSheet = this.animationSheetHeight/this.rows;<newline46mondego>        srcRect = new Rect();<newline46mondego><newline46mondego>        left = 0;<newline46mondego>        bottom = this.heightOfSpriteInSheet;<newline46mondego><newline46mondego>        repeatAnimation = false;<newline46mondego>        animationCompleted = false;<newline46mondego>        animationStarted = false;<newline46mondego><newline46mondego>        this.bitmap = animationSheet;<newline46mondego>        this.drawShapesOfSprites = true;<newline46mondego><newline46mondego>        this.gameObjectShape.addRectangle(new Rect(0, 0, 0 + this.heightOfSpriteInSheet, 0 + this.lengthOfSpriteInSheet));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void defineGameObjectPositionShape() {<newline46mondego>        this.gameObjectShape.addRectangle(new Rect());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public Rect getSrcRect()</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * Retrieve the rect that will cover the current source of the sheet.<newline46mondego>     * <newline46mondego>     * @return <newline46mondego>     * The current rect that will cover the current source of the sheet.<newline46mondego>     *<newline46mondego>     */<newline46mondego><newline46mondego>    public Rect getSrcRect() {<newline46mondego>        return srcRect;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public Rect getDstRect()</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * Retrieve the rect where the bitmap will be scaled to fit into.<newline46mondego>     * <newline46mondego>     * @return <newline46mondego>     * The current rect where the bitmap will be scaled to fit into.<newline46mondego>     *<newline46mondego>     */<newline46mondego><newline46mondego>    public Rect getDstRect() {<newline46mondego>        return this.getGameObjectPositionRect();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public void repeatAnimation(boolean repetition)</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * This method will set if the animation should be repeated or not.<newline46mondego>     * <newline46mondego>     * @param state <newline46mondego>     * <newline46mondego><newline46mondego><newline46mondego>     * 1. True = The animation will repeat once completed and keep on doing so.<newline46mondego>     * <newline46mondego><newline46mondego><newline46mondego>     * 2. False = The animation will play only once.<newline46mondego>     *<newline46mondego>     *      <newline46mondego>     */<newline46mondego><newline46mondego>    public void repeatAnimation(boolean repetition) {<newline46mondego>        this.repeatAnimation = repetition;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public boolean isAnimationFinished()</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * Retrieve if the animation has finished.<newline46mondego>     * <newline46mondego>     * @return <newline46mondego>     * If the animation has finished.<newline46mondego>     *<newline46mondego>     */<newline46mondego><newline46mondego>    public boolean isAnimationFinished() {<newline46mondego>        return animationCompleted;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public boolean hasBeenStarted()</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * Retrieve if the animation has started.<newline46mondego>     * <newline46mondego>     * @return <newline46mondego>     * If the animation has started.<newline46mondego>     *<newline46mondego>     */<newline46mondego><newline46mondego>    public boolean hasBeenStarted() {<newline46mondego>        return animationStarted;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public void render()</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * This method will render the animation (the current picture of the sheet).<newline46mondego>     *<newline46mondego>     */<newline46mondego><newline46mondego>    public void render() {<newline46mondego>        world.game.getGraphics().getCanvasGameScreen().drawBitmap(this.bitmap, this.getSrcRect(), this.getGameObjectPositionRect(), null);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <b><i>public void update()</i></b><newline46mondego>     * <newline46mondego><newline46mondego>     * Since: API 1<newline46mondego>     * <newline46mondego><newline46mondego>     * <newline46mondego><newline46mondego>     * This method will update the animation.<newline46mondego>     *<newline46mondego>     */<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void update() {<newline46mondego>        // Every update will advance to the next frame of the animation<newline46mondego>        // Set if animation has started<newline46mondego>        if(!animationStarted) {<newline46mondego>            animationStarted = true;<newline46mondego>        }<newline46mondego><newline46mondego>        // Set the frame<newline46mondego>        srcRect.set(left, (bottom - this.heightOfSpriteInSheet), (left + this.lengthOfSpriteInSheet), bottom);<newline46mondego>        // Change the location, so the next time the frame is set, it will be set accordingly<newline46mondego>        left = left + this.lengthOfSpriteInSheet;<newline46mondego><newline46mondego>        if(left == this.animationSheetLength && bottom == this.animationSheetHeight) {<newline46mondego>            if(repeatAnimation == true) {<newline46mondego>                left = 0;<newline46mondego>                bottom = 0;<newline46mondego>            }<newline46mondego>            else {<newline46mondego>                animationCompleted = true;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        if(left == this.animationSheetLength) {<newline46mondego>            bottom = bottom + this.heightOfSpriteInSheet;<newline46mondego>            left = 0;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"9932splitHere46","12218733splitHere46","/"
"9933splitHere46","12218733splitHere46","/g"
"9934splitHere46","12218733splitHere46","String[] splittedArray = res.split(<doubleQuotes46>-\\*-<doubleQuotes46>);<newline46mondego>"
"9935splitHere46","12218978splitHere46","String s = <doubleQuotes46>first.second.third...n-1.n<doubleQuotes46>;<newline46mondego>s = s.substring(s.indexOf('.')+1);<newline46mondego>// or<newline46mondego>s = s.replaceFirst(<doubleQuotes46>.*?\\.<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>System.out.println(s);<newline46mondego>"
"9936splitHere46","12218978splitHere46","second.third...n-1.n<newline46mondego>"
"9937splitHere46","12219092splitHere46","RedirectAction"
"9938splitHere46","12219092splitHere46","actionName"
"9939splitHere46","12219092splitHere46","namespace"
"9940splitHere46","12219092splitHere46","child.xml"
"9941splitHere46","12219092splitHere46","<action name=<doubleQuotes46>whatever<doubleQuotes46>><newline46mondego>    <result type=<doubleQuotes46>redirectAction<doubleQuotes46>><newline46mondego>        <param name=<doubleQuotes46>actionName<doubleQuotes46>>welcome</param><newline46mondego>        <param name=<doubleQuotes46>namespace<doubleQuotes46>>/</param><newline46mondego>    </result><newline46mondego></action><newline46mondego>"
"9942splitHere46","12219092splitHere46","redirectAction"
"9943splitHere46","12219118splitHere46","^(?:[0-9]+[,-])+[0-9]+$<newline46mondego>"
"9944splitHere46","12219118splitHere46","^         # Start of string<newline46mondego>(?:       # Try to match:<newline46mondego> [0-9]+   #  one or more digits<newline46mondego> [,-]     #  one separator (- or ,)<newline46mondego>)+        # once or more.<newline46mondego>[0-9]+    # Match one or more digits<newline46mondego>$         # End of string<newline46mondego>"
"9945splitHere46","12219164splitHere46","ExecutorService"
"9946splitHere46","12219164splitHere46","ForkJoinPool"
"9947splitHere46","12219164splitHere46","ExecutorService"
"9948splitHere46","12219164splitHere46","shutdown"
"9949splitHere46","12219164splitHere46","ExecutorService"
"9950splitHere46","12219172splitHere46","<.*?><newline46mondego>"
"9951splitHere46","12219172splitHere46","<[^>]*><newline46mondego>"
"9952splitHere46","12219172splitHere46","<0123456789>"
"9953splitHere46","12219172splitHere46","\\."
"9954splitHere46","12219172splitHere46","[.]"
"9955splitHere46","12219172splitHere46","replaceAll"
"9956splitHere46","12219172splitHere46","replaceFirst"
"9957splitHere46","12219172splitHere46","."
"9958splitHere46","12219172splitHere46","+"
"9959splitHere46","12219172splitHere46","*"
"9960splitHere46","12219172splitHere46","replaceAll"
"9961splitHere46","12219177splitHere46","section"
"9962splitHere46","12219177splitHere46","String readBuff = buff.readLine();<newline46mondego>                String section = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                while (readBuff != null){<newline46mondego>                    if (section.equals(<doubleQuotes46>source_files {<doubleQuotes46>) && !readBuff.equals(<doubleQuotes46>}<doubleQuotes46>)){<newline46mondego>                        sourceFiles.add(readBuff);<newline46mondego>                    } else if (section.equals(<doubleQuotes46>clone_pairs {<doubleQuotes46>) && !readBuff.equals(<doubleQuotes46>}<doubleQuotes46>)){<newline46mondego>                        clonePairs.add(readBuff);<newline46mondego>                    } else if (readBuff.equals(<doubleQuotes46>source_files {<doubleQuotes46>) || readBuff.equals(<doubleQuotes46>clone_pairs {<doubleQuotes46>)) {<newline46mondego>                        section = readBuff;<newline46mondego>                    } else if (readBuff.equals(<doubleQuotes46>}<doubleQuotes46>)) {<newline46mondego>                        section = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                    }<newline46mondego><newline46mondego>                    readBuff = buff.readLine();<newline46mondego>                }<newline46mondego>"
"9963splitHere46","12219577splitHere46","House"
"9964splitHere46","12219577splitHere46","Door"
"9965splitHere46","12219577splitHere46","Heating"
"9966splitHere46","12219577splitHere46","<bean class=<doubleQuotes46>Player<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46> lazy-init=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"9967splitHere46","12219577splitHere46","Player"
"9968splitHere46","12219577splitHere46","applicationContext.getBean(Player.class);<newline46mondego>"
"9969splitHere46","12219577splitHere46","@PreDestroy"
"9970splitHere46","12219583splitHere46","<ScrollView ...><newline46mondego>    <HorizontalScrollView ...><newline46mondego>        <TableLayout ...><newline46mondego>    </HorizontalScrollView><newline46mondego></ScrollView><newline46mondego>"
"9971splitHere46","12219623splitHere46","GridBagLayout"
"9972splitHere46","12219623splitHere46","import java.awt.FlowLayout;<newline46mondego>import java.awt.GridBagConstraints;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.io.File;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>import javax.swing.BorderFactory;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JTextField;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class MyClass extends JFrame {<newline46mondego>    private final JTextField item1;<newline46mondego>    private final JTextField item2;<newline46mondego>    private final JTextField item3;<newline46mondego>    private final JTextField item4;<newline46mondego>    private final JTextField item5;<newline46mondego>    JLabel label1 = new JLabel(<doubleQuotes46>Enter number of items in this order:<doubleQuotes46>);<newline46mondego>    JLabel label2 = new JLabel(<doubleQuotes46>Enter CD ID for Item #1:<doubleQuotes46>);<newline46mondego>    JLabel label3 = new JLabel(<doubleQuotes46>Enter quantity for Item #1:<doubleQuotes46>);<newline46mondego>    JLabel label4 = new JLabel(<doubleQuotes46>Item #1 info:<doubleQuotes46>);<newline46mondego>    JLabel label5 = new JLabel(<doubleQuotes46>Order subtotal for 0 item(s):<doubleQuotes46>);<newline46mondego>    private final JButton button1 = new JButton(<doubleQuotes46>Process Item #1<doubleQuotes46>);<newline46mondego>    private final JButton button2 = new JButton(<doubleQuotes46>Confirm Item #1<doubleQuotes46>);<newline46mondego>    private final JButton button3 = new JButton(<doubleQuotes46>View Order<doubleQuotes46>);<newline46mondego>    private final JButton button4 = new JButton(<doubleQuotes46>Finish Order<doubleQuotes46>);<newline46mondego>    private final JButton button5 = new JButton(<doubleQuotes46>New Order<doubleQuotes46>);<newline46mondego>    private final JButton button6 = new JButton(<doubleQuotes46>Exit<doubleQuotes46>);<newline46mondego>    private Scanner x;<newline46mondego>    private final int exitFlag = 0;<newline46mondego>    public String[] idArray = new String[10];<newline46mondego>    public String[] recordArray = new String[10];<newline46mondego>    public String[] priceArray = new String[10];<newline46mondego>    public int myNum = 1;<newline46mondego>    private final JPanel jp;<newline46mondego><newline46mondego>    public void openFile() {<newline46mondego>        try {<newline46mondego>            x = new Scanner(new File(<doubleQuotes46>inventory.txt<doubleQuotes46>));<newline46mondego>            x.useDelimiter(<doubleQuotes46>,|<doubleQuotes46> + System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>));<newline46mondego>        } catch (Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>Could not find file<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void readFile() {<newline46mondego>        int i = 0;<newline46mondego>        while (x.hasNext()) {<newline46mondego>            idArray[i] = x.next();<newline46mondego>            recordArray[i] = x.next();<newline46mondego>            priceArray[i] = x.next();<newline46mondego>            i++;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public int itemNum(int num) {<newline46mondego>        return num + 1;<newline46mondego>    }<newline46mondego><newline46mondego>    public MyClass() {<newline46mondego>        super(<doubleQuotes46>Matt's World of Music<doubleQuotes46>);<newline46mondego><newline46mondego>        jp = new JPanel();<newline46mondego>        jp.setLayout(new GridBagLayout());<newline46mondego><newline46mondego>        GridBagConstraints c = new GridBagConstraints();<newline46mondego><newline46mondego>        c.anchor = GridBagConstraints.BASELINE_TRAILING;<newline46mondego><newline46mondego>        // Box vertBox = Box.createVerticalBox();<newline46mondego>        // Box vertBox2 = Box.createVerticalBox();<newline46mondego>        // Box itemBox2 = Box.createHorizontalBox();<newline46mondego><newline46mondego>        item1 = new JTextField(40);<newline46mondego>        item2 = new JTextField(40);<newline46mondego>        item3 = new JTextField(40);<newline46mondego>        item4 = new JTextField(40);<newline46mondego>        item5 = new JTextField(40);<newline46mondego><newline46mondego>        c.gridx = 0;<newline46mondego>        c.gridy = 0;<newline46mondego>        jp.add(label1, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(label2, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(label3, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(label4, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(label5, c);<newline46mondego><newline46mondego>        c.gridx = 1;<newline46mondego>        c.gridy = 0;<newline46mondego>        jp.add(item1, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(item2, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(item3, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(item4, c);<newline46mondego><newline46mondego>        c.gridy++;<newline46mondego>        jp.add(item5, c);<newline46mondego><newline46mondego>        JPanel btnPan = new JPanel(new FlowLayout(FlowLayout.CENTER));<newline46mondego>        btnPan.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));<newline46mondego><newline46mondego>        btnPan.add(button1);<newline46mondego>        btnPan.add(button2);<newline46mondego>        btnPan.add(button3);<newline46mondego>        btnPan.add(button4);<newline46mondego>        btnPan.add(button5);<newline46mondego>        btnPan.add(button6);<newline46mondego><newline46mondego>        c.gridwidth = 2;<newline46mondego>        c.gridx = 0;<newline46mondego>        c.gridy++;<newline46mondego>        jp.add(btnPan, c);<newline46mondego>        add(jp);<newline46mondego><newline46mondego>        button2.setEnabled(false);<newline46mondego>        button3.setEnabled(false);<newline46mondego>        button4.setEnabled(false);<newline46mondego>        item4.setEditable(false);<newline46mondego>        item5.setEditable(false);<newline46mondego><newline46mondego>        // Process Item<newline46mondego>        button1.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                MyClass obj = new MyClass();<newline46mondego><newline46mondego>                button1.setEnabled(false);<newline46mondego>                button2.setEnabled(true);<newline46mondego>                item1.setEditable(false);<newline46mondego><newline46mondego>                obj.openFile();<newline46mondego>                obj.readFile();<newline46mondego><newline46mondego>                // start loop<newline46mondego>                for (int i = 0; i < idArray.length; i++) {<newline46mondego>                    if (item2.getText().equals(obj.idArray[i]) == true) {<newline46mondego>                        // set item4 text field to price id and other details<newline46mondego>                        item4.setText(obj.idArray[i] + <doubleQuotes46> <doubleQuotes46> + obj.recordArray[i] + <doubleQuotes46> $<doubleQuotes46><newline46mondego>                                + obj.priceArray[i].replaceAll(<doubleQuotes46>\\s<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        // Confirm Item<newline46mondego>        button2.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                if (myNum == Integer.parseInt(item1.getText())) {<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>Item #<doubleQuotes46> + (myNum) + <doubleQuotes46> accepted<doubleQuotes46>);<newline46mondego>                    button2.setEnabled(false);<newline46mondego>                    button1.setText(<doubleQuotes46>Process Item<doubleQuotes46>);<newline46mondego>                    button2.setText(<doubleQuotes46>Confirm Item<doubleQuotes46>);<newline46mondego>                    button1.setEnabled(false);<newline46mondego>                    button3.setEnabled(true);<newline46mondego>                    button4.setEnabled(true);<newline46mondego>                    item2.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    item3.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    label2.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    label3.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    item2.setEditable(false);<newline46mondego>                    item3.setEditable(false);<newline46mondego>                } else {<newline46mondego>                    // Execute when button is pressed<newline46mondego>                    button1.setEnabled(true);<newline46mondego>                    button2.setEnabled(false);<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>Item #<doubleQuotes46> + (myNum) + <doubleQuotes46> accepted<doubleQuotes46>);<newline46mondego>                    item2.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    item3.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>                    label2.setText(<doubleQuotes46>Enter CD ID for Item #<doubleQuotes46> + (myNum + 1) + <doubleQuotes46>:<doubleQuotes46>);<newline46mondego>                    label3.setText(<doubleQuotes46>Enter quantity for Item #<doubleQuotes46> + (myNum + 1) + <doubleQuotes46>:<doubleQuotes46>);<newline46mondego>                    label4.setText(<doubleQuotes46>Item #<doubleQuotes46> + (myNum + 1) + <doubleQuotes46> info:<doubleQuotes46>);<newline46mondego>                    myNum++;<newline46mondego>                    button1.setText(<doubleQuotes46>Process item #<doubleQuotes46> + (myNum));<newline46mondego>                    button2.setText(<doubleQuotes46>Confirm item #<doubleQuotes46> + (myNum));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        // View Order<newline46mondego>        button3.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                // Execute when button is pressed<newline46mondego>                System.out.println(<doubleQuotes46>View Order<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        // Finish Order<newline46mondego>        button4.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                // Execute when button is pressed<newline46mondego>                System.out.println(<doubleQuotes46>Finish Order<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        // New Order<newline46mondego>        button5.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                // Execute when button is pressed<newline46mondego>                System.out.println(<doubleQuotes46>New Order<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        // Quit<newline46mondego>        button6.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>                // exit program<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                MyClass c = new MyClass();<newline46mondego>                c.pack();<newline46mondego>                c.setVisible(true);<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9973splitHere46","12219901splitHere46","NOT NULL"
"9974splitHere46","12219901splitHere46","KEY_CNAME"
"9975splitHere46","12219901splitHere46","private static final int DATABASE_VERSION = 2;<newline46mondego>"
"9976splitHere46","12219901splitHere46","<doubleQuotes46>5040ef44839a09.93014710<doubleQuotes46>"
"9977splitHere46","12219901splitHere46","INTEGER PRIMARY KEY"
"9978splitHere46","12219901splitHere46","<doubleQuotes46>Error: datatype mismatch<doubleQuotes46>"
"9979splitHere46","12219910splitHere46","SessionAware"
"9980splitHere46","12219910splitHere46","ServletRequestAware"
"9981splitHere46","12219910splitHere46","HttpServletRequest"
"9982splitHere46","12219992splitHere46","targetNamespace"
"9983splitHere46","12219992splitHere46","Entity"
"9984splitHere46","12219992splitHere46","Stat"
"9985splitHere46","12219992splitHere46","<xs:schema xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>    xmlns:cg=<doubleQuotes46>http://www.schemas.theliraeffect.com/chargen/entity<doubleQuotes46><newline46mondego>    targetNamespace=<doubleQuotes46>http://www.schemas.theliraeffect.com/chargen/entity<doubleQuotes46><newline46mondego>    elementFormDefault=<doubleQuotes46>qualified<doubleQuotes46>><newline46mondego><newline46mondego>    <xs:complexType name=<doubleQuotes46>EntityType<doubleQuotes46>><newline46mondego>        <xs:attribute name=<doubleQuotes46>id<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> use=<doubleQuotes46>required<doubleQuotes46>/>                    <newline46mondego>        <xs:attribute name=<doubleQuotes46>name<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>        <xs:attribute name=<doubleQuotes46>description<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>    </xs:complexType><newline46mondego><newline46mondego>    <xs:element name=<doubleQuotes46>Entity<doubleQuotes46> type=<doubleQuotes46>cg:EntityType<doubleQuotes46> /><newline46mondego><newline46mondego><newline46mondego>    <xs:complexType name=<doubleQuotes46>StatType<doubleQuotes46>><newline46mondego>        <xs:complexContent><newline46mondego>            <xs:extension base=<doubleQuotes46>cg:EntityType<doubleQuotes46>><newline46mondego>                <xs:sequence><newline46mondego>                    <xs:element name=<doubleQuotes46>table<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46><newline46mondego>                           maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46>/>                        <newline46mondego>                </xs:sequence><newline46mondego>            </xs:extension><newline46mondego>        </xs:complexContent><newline46mondego>    </xs:complexType><newline46mondego><newline46mondego>    <xs:element name=<doubleQuotes46>Stat<doubleQuotes46> type=<doubleQuotes46>cg:StatType<doubleQuotes46> /><newline46mondego></xs:schema><newline46mondego>"
"9986splitHere46","12219992splitHere46","targetNamespace"
"9987splitHere46","12219992splitHere46","table"
"9988splitHere46","12219992splitHere46","StatType"
"9989splitHere46","12219992splitHere46","elementFormDefault=<doubleQuotes46>qualified<doubleQuotes46>"
"9990splitHere46","12219992splitHere46","Entity"
"9991splitHere46","12219992splitHere46","Stat"
"9992splitHere46","12219992splitHere46","http://www.schemas.theliraeffect.com/chargen/entity"
"9993splitHere46","12219992splitHere46","table"
"9994splitHere46","12220109splitHere46","calObj = new GregorianCalendar(500,6,12,0,0,0);<newline46mondego>calObj.set(GregorianCalendar.ERA, GregorianCalendar.BC);<newline46mondego>"
"9995splitHere46","12220177splitHere46","animals"
"9996splitHere46","12220177splitHere46","mainMethod"
"9997splitHere46","12220177splitHere46","public mainMethod()"
"9998splitHere46","12220177splitHere46","animals = new animalsData[INITIAL SIZE];"
"9999splitHere46","12220177splitHere46","List"
"10000splitHere46","12220177splitHere46","this.animals.length + 1"
"10001splitHere46","12220177splitHere46","List.add()"
"10002splitHere46","12220188splitHere46","public static int valueOfDigit(int value, int position) {<newline46mondego>    return (value >> (position * 4)) & 0xf;<newline46mondego>}<newline46mondego>"
"10003splitHere46","12220276splitHere46","x86"
"10004splitHere46","12220276splitHere46","2.3.3"
"10005splitHere46","12220276splitHere46","4.0.3"
"10006splitHere46","12220276splitHere46","x86"
"10007splitHere46","12220276splitHere46","2.3.3"
"10008splitHere46","12220276splitHere46","4.0.3"
"10009splitHere46","12220322splitHere46","lame in.wav out.mp3 -b 128 1>stdout 2>stderr<newline46mondego>"
"10010splitHere46","12220355splitHere46","things.toArray(new Thing[things.size()])"
"10011splitHere46","12220405splitHere46","HomeController"
"10012splitHere46","12220405splitHere46","/src/main/webapp/WEB-INF/views"
"10013splitHere46","12220430splitHere46","Row(String fName, String fValue){<newline46mondego>    this.fieldName = new SimpleStringProperty(fName);<newline46mondego>    this.fieldValue = new SimpleStringProperty(fValue);<newline46mondego>}<newline46mondego>"
"10014splitHere46","12220430splitHere46","private ObservableList<Row> observableList = FXCollections.observableArrayList(          <newline46mondego>              new Row(<doubleQuotes46>The Unfun Cat<doubleQuotes46>, <doubleQuotes46>Is a terrible programmer<doubleQuotes46>), <newline46mondego>              new Row(<doubleQuotes46>Stack Overflow<doubleQuotes46>, <doubleQuotes46>Rules!<doubleQuotes46>);<newline46mondego>"
"10015splitHere46","12220430splitHere46","TableColumn columnName = new TableColumn(<doubleQuotes46>Name<doubleQuotes46>);<newline46mondego>columnName.setCellValueFactory(<newline46mondego>        new PropertyValueFactory<Row,String>(<doubleQuotes46>fieldName<doubleQuotes46>));<newline46mondego>"
"10016splitHere46","12220440splitHere46","String textToMakeHarder = <doubleQuotes46>I am a crazy person and he is also a crazy person. Are you crazycrazy too?<doubleQuotes46>;<newline46mondego>  Pattern re = Pattern.compile(<doubleQuotes46>\\bcrazy\\b<doubleQuotes46>,Pattern.CASE_INSENSITIVE);<newline46mondego>  Matcher m = re.matcher(textToMakeHarder);<newline46mondego>  textToMakeHarder = m.replaceAll(<doubleQuotes46>super crazy<doubleQuotes46>);<newline46mondego>"
"10017splitHere46","12220474splitHere46","searchBarEmployer"
"10018splitHere46","12220474splitHere46","EditText searchBarEmployer ; // outside onCreate, global to class<newline46mondego>"
"10019splitHere46","12220474splitHere46","searchBarEmployer = (EditText)findViewById(R.id.editTextIdInXML);<newline46mondego>"
"10020splitHere46","12220474splitHere46","@Override<newline46mondego>protected void onDestroy() {<newline46mondego>    searchBarEmployer.removeTextChangedListener(filterTextWatcher);<newline46mondego>    super.onDestroy();<newline46mondego><newline46mondego>}<newline46mondego>"
"10021splitHere46","12220476splitHere46","TableAreaRenderer2"
"10022splitHere46","12220476splitHere46","getTableCellRendererComponent"
"10023splitHere46","12220476splitHere46","if (row % 6 < 3) {<newline46mondego>  setBackground(Color.LIGHT_GRAY);<newline46mondego>} else {<newline46mondego>  setBackground(Color.WHITE);<newline46mondego>}<newline46mondego>"
"10024splitHere46","12220552splitHere46","\#"
"10025splitHere46","12220552splitHere46","#"
"10026splitHere46","12220552splitHere46","#"
"10027splitHere46","12220552splitHere46","#"
"10028splitHere46","12220585splitHere46","FileInputStream inputStream = new FileInputStream(<doubleQuotes46>FileInputStreamDemo.java<doubleQuotes46>);  //read the file<newline46mondego><newline46mondego>    response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>,<doubleQuotes46>attachment; filename=test.txt<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        int c;<newline46mondego>        while ((c = inputStream.read()) != -1) {<newline46mondego>        response.getWriter().write(c);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (inputStream != null) <newline46mondego>            inputStream.close();<newline46mondego>            response.getWriter().close();<newline46mondego>    }<newline46mondego>"
"10029splitHere46","12220595splitHere46","import java.io.IOException;<newline46mondego><newline46mondego>import javax.servlet.Filter;<newline46mondego>import javax.servlet.FilterChain;<newline46mondego>import javax.servlet.FilterConfig;<newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.ServletRequest;<newline46mondego>import javax.servlet.ServletResponse;<newline46mondego><newline46mondego>public class CharacterEncodingFilter implements Filter {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void init(FilterConfig filterConfig)<newline46mondego>            throws ServletException {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)<newline46mondego>            throws IOException, ServletException {<newline46mondego>        servletRequest.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        servletResponse.setContentType(<doubleQuotes46>text/html; charset=UTF-8<doubleQuotes46>);<newline46mondego>        filterChain.doFilter(servletRequest, servletResponse);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void destroy() {<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10030splitHere46","12220595splitHere46","<filter><newline46mondego>    <filter-name>CharacterEncodingFilter</filter-name><newline46mondego>    <filter-class>your.package.filter.CharacterEncodingFilter</filter-class><newline46mondego></filter><newline46mondego><filter-mapping><newline46mondego>    <filter-name>CharacterEncodingFilter</filter-name><newline46mondego>    <url-pattern>/*</url-pattern><newline46mondego></filter-mapping><newline46mondego>"
"10031splitHere46","12220595splitHere46","JSP"
"10032splitHere46","12220595splitHere46","<%@ page contentType=<doubleQuotes46>text/html;charset=UTF-8<doubleQuotes46> language=<doubleQuotes46>java<doubleQuotes46> %>"
"10033splitHere46","12220595splitHere46","URIEncoding=<doubleQuotes46>UTF-8<doubleQuotes46>"
"10034splitHere46","12220595splitHere46","Connector"
"10035splitHere46","12220623splitHere46","java.awt.event"
"10036splitHere46","12220623splitHere46","import java.awt.event.ItemListener;<newline46mondego>"
"10037splitHere46","12220684splitHere46","GroupController gc=...<newline46mondego>IGroup old=gc.findGroup(some field)<newline46mondego>IGroup newGroup=(IGroup)old.clone(true);<newline46mondego><newline46mondego>ISort sort=new Sort();<newline46mondego>sort.setSortField(field sorting on);<newline46mondego>sort.setDirection(SortDirection);<newline46mondego><newline46mondego>newGroup.setSort(sort);<newline46mondego>gc.modify(old,newGroup);<newline46mondego>"
"10038splitHere46","12220698splitHere46","BufferedReader"
"10039splitHere46","12220698splitHere46","String"
"10040splitHere46","12220698splitHere46","BufferedReader reader = new BufferedReader(new InputStreamReader(fis));<newline46mondego>...<newline46mondego>while ((String line = reader.readLine()) != null) {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"10041splitHere46","12220698splitHere46","FileInputStream fis = new FileInputStream(f);<newline46mondego>BufferedReader reader;<newline46mondego>try {<newline46mondego>    reader = new BufferedReader(new InputStreamReader(fis));<newline46mondego>    // once we wrap the fis in a reader, we just close the reader<newline46mondego>} finally {<newline46mondego>    if (reader != null) {<newline46mondego>       reader.close();<newline46mondego>    }<newline46mondego>    if (fis != null) {<newline46mondego>       fis.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10042splitHere46","12220859splitHere46","package androidapplication9;<newline46mondego><newline46mondego><newline46mondego>public class Activity1<newline46mondego>    extends android.app.Activity<newline46mondego>    implements<newline46mondego>        mono.android.IGCUserPeer<newline46mondego>{<newline46mondego>    static final String __md_methods;<newline46mondego>    static {<newline46mondego>        __md_methods = <newline46mondego>            <doubleQuotes46>n_onCreate:(Landroid/os/Bundle;)V:GetOnCreate_Landroid_os_Bundle_Handler\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46><doubleQuotes46>;<newline46mondego>        mono.android.Runtime.register (<doubleQuotes46>AndroidApplication9.Activity1, AndroidApplication9, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null<doubleQuotes46>, Activity1.class, __md_methods);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public Activity1 ()<newline46mondego>    {<newline46mondego>        super ();<newline46mondego>        if (getClass () == Activity1.class)<newline46mondego>            mono.android.TypeManager.Activate (<doubleQuotes46>AndroidApplication9.Activity1, AndroidApplication9, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, this, new java.lang.Object[] {  });<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void onCreate (android.os.Bundle p0)<newline46mondego>    {<newline46mondego>        n_onCreate (p0);<newline46mondego>    }<newline46mondego><newline46mondego>    private native void n_onCreate (android.os.Bundle p0);<newline46mondego><newline46mondego>    java.util.ArrayList refList;<newline46mondego>    public void monodroidAddReference (java.lang.Object obj)<newline46mondego>    {<newline46mondego>        if (refList == null)<newline46mondego>            refList = new java.util.ArrayList ();<newline46mondego>        refList.add (obj);<newline46mondego>    }<newline46mondego><newline46mondego>    public void monodroidClearReferences ()<newline46mondego>    {<newline46mondego>        if (refList != null)<newline46mondego>            refList.clear ();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10043splitHere46","12220859splitHere46","ExportAttribute"
"10044splitHere46","12220970splitHere46","hibernate-entitymanager"
"10045splitHere46","12220970splitHere46","provided"
"10046splitHere46","12220970splitHere46","test"
"10047splitHere46","12220970splitHere46","<dependency><newline46mondego>     <groupId>org.hibernate</groupId><newline46mondego>     <artifactId>hibernate-entitymanager</artifactId><newline46mondego>     <version>...</version><newline46mondego>     <scope>provided</scope><newline46mondego>  </dependency>  <newline46mondego>"
"10048splitHere46","12220970splitHere46","compile"
"10049splitHere46","12221218splitHere46","wsdlLocation"
"10050splitHere46","12221218splitHere46","@WebService"
"10051splitHere46","12221218splitHere46","@WebServiceClient"
"10052splitHere46","12221307splitHere46","ComboBoxViewerCellEditor"
"10053splitHere46","12221307splitHere46","EditingSupport"
"10054splitHere46","12221307splitHere46","Combo"
"10055splitHere46","12221501splitHere46","Drawable"
"10056splitHere46","12221501splitHere46","BitmapDrawable"
"10057splitHere46","12221501splitHere46","instanceof"
"10058splitHere46","12221501splitHere46","final Drawable wallpaperDrawable = wallpaperManager.getDrawable();<newline46mondego>final Bitmap wallpaperBitmap = ((BitmapDrawable) wallpaperDrawable).getBitmap();<newline46mondego>"
"10059splitHere46","12221501splitHere46","Drawable"
"10060splitHere46","12221501splitHere46","BitmapDrawable"
"10061splitHere46","12221501splitHere46","public static Bitmap drawableToBitmap(Drawable drawable) {<newline46mondego>    if (drawable instanceof BitmapDrawable) {<newline46mondego>        return ((BitmapDrawable)drawable).getBitmap();<newline46mondego>    }<newline46mondego><newline46mondego>    Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Config.ARGB_8888);<newline46mondego>    Canvas canvas = new Canvas(bitmap); <newline46mondego>    drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());<newline46mondego>    drawable.draw(canvas);<newline46mondego><newline46mondego>    return bitmap;<newline46mondego>}<newline46mondego>"
"10062splitHere46","12221520splitHere46","?xml version='1.0' encoding='utf-8'?><newline46mondego>"
"10063splitHere46","12221520splitHere46","<session-factory><newline46mondego><newline46mondego>    <!-- Database connection settings --><newline46mondego>    <property name=<doubleQuotes46>connection.driver_class<doubleQuotes46>>org.apache.derby.jdbc.EmbeddedDriver</property><newline46mondego>     <property name=<doubleQuotes46>connection.url<doubleQuotes46>>jdbc:derby:/home/user/DataBase/db;create=true</property><newline46mondego>     <property name=<doubleQuotes46>connection.username<doubleQuotes46>></property><newline46mondego>      <property name=<doubleQuotes46>connection.password<doubleQuotes46>></property><newline46mondego><newline46mondego>    <!-- JDBC connection pool (use the built-in) --><newline46mondego>    <property name=<doubleQuotes46>connection.pool_size<doubleQuotes46>>1</property><newline46mondego><newline46mondego>    <!-- SQL dialect --><newline46mondego>    <property name=<doubleQuotes46>dialect<doubleQuotes46>>org.hibernate.dialect.DerbyDialect</property><newline46mondego><newline46mondego>    <!-- Disable the second-level cache  --><newline46mondego>    <property name=<doubleQuotes46>cache.provider_class<doubleQuotes46>>org.hibernate.cache.internal.NoCacheProvider</property><newline46mondego><newline46mondego>    <!-- Echo all executed SQL to stdout --><newline46mondego>    <property name=<doubleQuotes46>show_sql<doubleQuotes46>>true</property><newline46mondego><newline46mondego>    <!-- Drop and re-create the database schema on startup --><newline46mondego>    <property name=<doubleQuotes46>hbm2ddl.auto<doubleQuotes46>>create</property><newline46mondego><newline46mondego>    <mapping class=<doubleQuotes46>testHibernate.UserDetails<doubleQuotes46>/><newline46mondego><newline46mondego></session-factory><newline46mondego>"
"10064splitHere46","12221663splitHere46","if (but1 && but2){<newline46mondego>    //Do Something      <newline46mondego>}<newline46mondego>"
"10065splitHere46","12221686splitHere46","public boolean contains(CharSequence s)"
"10066splitHere46","12221686splitHere46","String"
"10067splitHere46","12221686splitHere46","Log"
"10068splitHere46","12221686splitHere46","while ((line = br.readLine()) != null) <newline46mondego>{<newline46mondego>    //be careful! with this, you will add all the lines of<newline46mondego>    //the currently processed file to a locally created <newline46mondego>    //StringBuilder object. Is this really what you want?<newline46mondego>    text.append(line);<newline46mondego>    text.append('\n');<newline46mondego><newline46mondego>    //here if line contains <doubleQuotes46>test<doubleQuotes46> you can do whatever you want with it.<newline46mondego>    if (line.contains(<doubleQuotes46>test<doubleQuotes46>)) <newline46mondego>    {<newline46mondego>        //do something with it<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        //no <doubleQuotes46>test<doubleQuotes46> keyword in the current line<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10069splitHere46","12221726splitHere46","myTabPane.removeTabAt(0);<newline46mondego>myTabPane.addTab(<doubleQuotes46>B<doubleQuotes46>, panelB);<newline46mondego>"
"10070splitHere46","12221729splitHere46","Class<?>"
"10071splitHere46","12221729splitHere46","channelAccounts = (ArrayList<ChannelAccount>)channelAccountStringsParserImplementedParseMethod.invoke(channelAccountStringsParserImplementedInstance, responseContent);<newline46mondego>"
"10072splitHere46","12221773splitHere46","javax.xml.xpath"
"10073splitHere46","12221776splitHere46","java.util.functions.*"
"10074splitHere46","12221776splitHere46","/**<newline46mondego> * Performs operations upon an input object which may modify that object and/or<newline46mondego> * external state (other objects).<newline46mondego> *<newline46mondego> * <p>All block implementations are expected to:<newline46mondego> * <ul><newline46mondego> * <li>When used for aggregate operations upon many elements blocks<newline46mondego> * should not assume that the {@code apply} operation will be called upon<newline46mondego> * elements in any specific order.</li><newline46mondego> * </ul><newline46mondego> *<newline46mondego> * @param <T> The type of input objects to {@code apply}.<newline46mondego> */<newline46mondego>public interface Block<T> {<newline46mondego>/**<newline46mondego> * Performs operations upon the provided object which may modify that object<newline46mondego> * and/or external state.<newline46mondego> *<newline46mondego> * @param t an input object<newline46mondego> */<newline46mondego>void apply(T t);<newline46mondego><newline46mondego>// Some extension methods that I'll have to do with below.<newline46mondego>}<newline46mondego>"
"10075splitHere46","12221776splitHere46","com.snaphop.backport.java.util.functions.*"
"10076splitHere46","12221891splitHere46","[ID]"
"10077splitHere46","12221891splitHere46","plugin.xml"
"10078splitHere46","12221891splitHere46","IViewPart viewPart = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().findView( [ID] );<newline46mondego>"
"10079splitHere46","12221891splitHere46","com.domain.something.viewName"
"10080splitHere46","12221962splitHere46","$.ajax({<newline46mondego>        url : '/my_project/rest/runs/1234',<newline46mondego>        type : 'POST',<newline46mondego>        data: JSON.stringify({ job_position : 38, token: 'moo' }),<newline46mondego>        contentType: 'application/json',<newline46mondego>        dataType: 'json',<newline46mondego>        success : function(html) {<newline46mondego>        }<newline46mondego>});<newline46mondego>"
"10081splitHere46","12222165splitHere46","${string_prompt:Foo}"
"10082splitHere46","12222308splitHere46","Robot"
"10083splitHere46","12222308splitHere46","{"
"10084splitHere46","12222308splitHere46","keyPress(KeyEvent.VK_SHIFT);<newline46mondego>keyPress(KeyEvent.VK_OPEN_BRACKET);<newline46mondego>keyRelease(KeyEvent.VK_OPEN_BRACKET);<newline46mondego>keyRelease(KeyEvent.VK_SHIFT);<newline46mondego>"
"10085splitHere46","12222325splitHere46","MyTest"
"10086splitHere46","12222325splitHere46","java -classpath ../lib/myRef.jar:. MyTest<newline46mondego>"
"10087splitHere46","12222346splitHere46","class Transaction implements Iterable<ItemList><newline46mondego>"
"10088splitHere46","12222376splitHere46","enum"
"10089splitHere46","12222376splitHere46","enum"
"10090splitHere46","12222439splitHere46","int c;<newline46mondego>boolean found = false;<newline46mondego><newline46mondego>for(c = 0;c < MyArrayS.length;c++) {<newline46mondego>  if(MyArrayS.compareTo(word) == 0) {<newline46mondego>   found = true;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>if(!found) {<newline46mondego>  System.out.println(<doubleQuotes46>Word does not exist<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"10091splitHere46","12222460splitHere46","private final static Experience INSTANCE = new Experience(); <newline46mondego>public final static Logger LOGGER = Logger.getLogger(Experience.class.getName());<newline46mondego>"
"10092splitHere46","12222460splitHere46","LOGGER.addHandler(fh);<newline46mondego>"
"10093splitHere46","12222460splitHere46","LOGGER"
"10094splitHere46","12222460splitHere46","private final static Experience INSTANCE;<newline46mondego>public final static Logger LOGGER;<newline46mondego><newline46mondego>static {<newline46mondego>    LOGGER = Logger.getLogger(Experience.class.getName());<newline46mondego>    LOGGER.setLevel(Level.SEVERE);<newline46mondego>    INSTANCE = new Experience();<newline46mondego>}<newline46mondego>"
"10095splitHere46","12222541splitHere46","ScheduledFuture"
"10096splitHere46","12222541splitHere46","final Collection<ScheduledFuture<?>> futures = ...;<newline46mondego>/* for each schedule, add it to the above collection */<newline46mondego>...<newline46mondego>final long delay = Collections.min(futures).getDelay(TimeUnit.MILLISECONDS);<newline46mondego>"
"10097splitHere46","12222541splitHere46","final ScheduledFuture<?> future = ...;<newline46mondego>final long delay = future.getDelay(TimeUnit.MILLISECONDS);<newline46mondego>"
"10098splitHere46","12222541splitHere46","DelayQueue"
"10099splitHere46","12222541splitHere46","ScheduledFuture"
"10100splitHere46","12222541splitHere46","ScheduledThreadPoolExecutor"
"10101splitHere46","12222541splitHere46","decorateTask"
"10102splitHere46","12222541splitHere46","ScheduledThreadPoolExecutor"
"10103splitHere46","12222541splitHere46","public class TrackingSingleThreadScheduledExecutor<newline46mondego>    extends ScheduledThreadPoolExecutor {<newline46mondego><newline46mondego>  private final DelayQueue<ScheduledFuture<?>> tasks<newline46mondego>      = new DelayQueue<RunnableScheduledFuture<?>>();<newline46mondego><newline46mondego>  public TrackingSingleThreadScheduledExecutor() {<newline46mondego>    super(1);<newline46mondego>  }<newline46mondego><newline46mondego>  public DelayQueue<? extends ScheduledFuture<V>> tasks() {<newline46mondego>    return tasks;<newline46mondego>  }<newline46mondego><newline46mondego>  public ScheduledFuture<V> next() {<newline46mondego>    return tasks.peek();<newline46mondego>  }<newline46mondego><newline46mondego>  protected <V> RunnableScheduledFuture<V> decorateTask<newline46mondego>      (final Callable<V> callable, final RunnableScheduledFuture<V> task) {<newline46mondego>    return new QueueAwareTask(task);<newline46mondego>  }<newline46mondego><newline46mondego>  protected <V> RunnableScheduledFuture<V> decorateTask<newline46mondego>      (final Runnable runnable, final RunnableScheduledFuture<V> task) {<newline46mondego>    return new QueueAwareTask(task);<newline46mondego>  }<newline46mondego><newline46mondego>  private final class QueueAwareTask<V> implements RunnableScheduledFuture<V> {<newline46mondego><newline46mondego>    private final RunnableScheduledFuture<V> inner;<newline46mondego><newline46mondego>    public QueueAwareTask(final RunnableScheduledFuture<V> inner) {<newline46mondego>      this.inner = inner;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isPeriodic() {<newline46mondego>      return inner.isPeriodic();<newline46mondego>    }<newline46mondego><newline46mondego>    public long getDelay(final TimeUnit unit) {<newline46mondego>      return inner.getDelay(unit);<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>      inner.run();<newline46mondego>      if (queue.remove(inner) && inner.isPeriodic()<newline46mondego>          && !inner.isCancelled()) {<newline46mondego>        queue.add(inner);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    public int compareTo(final Delayed other) {<newline46mondego>      return inner.compareTo(other);<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean cancel(final boolean mayInterruptIfRunning) {<newline46mondego>      final boolean cancelled = inner.cancel(mayInterruptIfRunning);<newline46mondego>      if (cancelled) {<newline46mondego>        queue.remove(inner);<newline46mondego>      }<newline46mondego>      return cancelled;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isCancelled() {<newline46mondego>      return inner.isCancelled();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isDone() {<newline46mondego>      return inner.isDone();<newline46mondego>    }<newline46mondego><newline46mondego>    public V get() throws InterruptedException, ExecutionException {<newline46mondego>      return inner.get();<newline46mondego>    }<newline46mondego><newline46mondego>    public V get(final long timeout, final TimeUnit unit)<newline46mondego>        throws InterruptedException, ExecutionException {<newline46mondego>      return inner.get(timeout, unit);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10104splitHere46","12222541splitHere46","final TrackingSingleThreadScheduledExecutor executor<newline46mondego>    = new TrackingSingleThreadScheduledExecutor();<newline46mondego>...<newline46mondego>final long delay = executor.next().getDelay(TimeUnit.MILLISECONDS);<newline46mondego>"
"10105splitHere46","12222762splitHere46","ExecutorService"
"10106splitHere46","12222762splitHere46","Runnable"
"10107splitHere46","12222762splitHere46","Runnable"
"10108splitHere46","12222762splitHere46","BlockingQueue"
"10109splitHere46","12222762splitHere46","public void run() {<newline46mondego>   while (!shutdown) {<newline46mondego>      packet = packetQueue.take();<newline46mondego>      processPacket(packet);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"10110splitHere46","12222762splitHere46","Runnable"
"10111splitHere46","12222762splitHere46","run()"
"10112splitHere46","12222762splitHere46","Runnable"
"10113splitHere46","12222762splitHere46","Payload payload;<newline46mondego>public void run() {<newline46mondego>   // process packet here<newline46mondego>   processPayload(payload);<newline46mondego>}<newline46mondego>"
"10114splitHere46","12222762splitHere46","// start a pool that uses the number of threads that there are processors<newline46mondego>ExecutorService threadPool = Executors.newFixedThreadPool(<newline46mondego>    Runtime.getRuntime().availableProcessors());<newline46mondego>"
"10115splitHere46","12222818splitHere46","getLegendItem()"
"10116splitHere46","12222818splitHere46","LegendItem"
"10117splitHere46","12222818splitHere46","XYPlot plot = (XYPlot) chart.getPlot();<newline46mondego>plot.setRenderer(new MyRenderer());<newline46mondego>...<newline46mondego>private static class MyRenderer extends XYLineAndShapeRenderer {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public LegendItem getLegendItem(int dataset, int series) {<newline46mondego>        LegendItem legendItem = super.getLegendItem(dataset, series);<newline46mondego>        System.out.println(dataset + <doubleQuotes46> <doubleQuotes46> + series + <doubleQuotes46> <doubleQuotes46> + legendItem.getShape());<newline46mondego>        // modify legendItem here<newline46mondego>        return legendItem;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10118splitHere46","12222822splitHere46","int increment= 2;<newline46mondego><newline46mondego>for(int n = 0; n < 9; n++){<newline46mondego>    for(int i = increment*2; i < a.length; i += increment){<newline46mondego>        a[i] = false;<newline46mondego>    }<newline46mondego>    increment += 1;<newline46mondego>}  <newline46mondego>"
"10119splitHere46","12222822splitHere46","int increment= 2;<newline46mondego><newline46mondego>for(int n = 0; n < 9; n++){<newline46mondego>    if(a[increment]) {<newline46mondego>      for(int i = increment*2; i < a.length; i += increment){<newline46mondego>          a[i] = false;<newline46mondego>      }<newline46mondego>      increment += 1;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10120splitHere46","12222822splitHere46","int count = a.length;<newline46mondego><newline46mondego>for(int increment = 2; increment < count; increment++){<newline46mondego>    if(a[increment]) {<newline46mondego>      for(int i = increment*2; i < count; i += increment){<newline46mondego>          a[i] = false;<newline46mondego>      }          <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10121splitHere46","12222822splitHere46","a[0] = a[1] = false;"
"10122splitHere46","12222895splitHere46","fos = openFileOutput(FILE_NAME, Context.MODE_PRIVATE);<newline46mondego>writer = new BufferedWriter(new OutputStreamWriter(fos));<newline46mondego>writer.write(xyz);<newline46mondego>writer.flush();<newline46mondego>"
"10123splitHere46","12222895splitHere46","\data\data\[package-name]\Files\"
"10124splitHere46","12222895splitHere46","FileInputStream in = openFileInput(FILE_NAME);<newline46mondego>InputStreamReader inputStreamReader = new InputStreamReader(in);<newline46mondego>BufferedReader br = new BufferedReader(inputStreamReader);<newline46mondego>String line = br.readLine();<newline46mondego>Log.d(<doubleQuotes46>TAG<doubleQuotes46>, line);<newline46mondego>"
"10125splitHere46","12223012splitHere46","FTPClient"
"10126splitHere46","12223012splitHere46","org.apache.sling.commons.mime"
"10127splitHere46","12223199splitHere46","render()"
"10128splitHere46","12223199splitHere46","view"
"10129splitHere46","12223199splitHere46","view"
"10130splitHere46","12223199splitHere46","public static Result gestureNames(){<newline46mondego>    List <GestureClassEntity> gcet = GestureClassEntity.find.all();<newline46mondego>    return ok(views.html.gestures.render(gcet));    <newline46mondego>}<newline46mondego>"
"10131splitHere46","12223199splitHere46","app/views/gestures.scala.html"
"10132splitHere46","12223199splitHere46","@(gesturesListFromMyController: List[GestureClassEntity])<newline46mondego><newline46mondego>@for(gesture <- gesturesListFromMyController){<newline46mondego>    <div class=<doubleQuotes46>gesture-item<doubleQuotes46>><newline46mondego>        <h2>@gesture.name</h2><newline46mondego>        <p>@gesture.description</p><newline46mondego>    </div><newline46mondego>}<newline46mondego>"
"10133splitHere46","12223199splitHere46","GestureClassEntity"
"10134splitHere46","12223199splitHere46","Gesture"
"10135splitHere46","12223205splitHere46",".metadata.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\"
"10136splitHere46","12223206splitHere46","for (int number = 0; number <=  9; );<newline46mondego>"
"10137splitHere46","12223206splitHere46","for"
"10138splitHere46","12223206splitHere46","for"
"10139splitHere46","12223206splitHere46","for (int number = 0; number <=  9; ++number) {<newline46mondego>  //..<newline46mondego>}<newline46mondego>"
"10140splitHere46","12223206splitHere46","public static void main(String[] args) {<newline46mondego>    Random r = new Random();<newline46mondego>    for (int number = 0; number <= 9; ++number) {<newline46mondego>        int cardRandom = 1 + r.nextInt(52);<newline46mondego>        String cardNumber = <doubleQuotes46>card<doubleQuotes46> + cardRandom;<newline46mondego>        System.out.println(cardNumber);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10141splitHere46","12223351splitHere46","Result 2"
"10142splitHere46","12223375splitHere46","bintime"
"10143splitHere46","12223375splitHere46","Strings"
"10144splitHere46","12223375splitHere46","Integer.toBinaryString"
"10145splitHere46","12223375splitHere46","format"
"10146splitHere46","12223375splitHere46","String"
"10147splitHere46","12223375splitHere46","int"
"10148splitHere46","12223375splitHere46","%d"
"10149splitHere46","12223375splitHere46","int"
"10150splitHere46","12223375splitHere46","String"
"10151splitHere46","12223375splitHere46","String"
"10152splitHere46","12223375splitHere46","System.out.println(<newline46mondego>  String.format(<doubleQuotes46>%4s<doubleQuotes46>, Integer.toBinaryString(inttime[idx])).replace(' ', '0'));<newline46mondego>"
"10153splitHere46","12223375splitHere46","4"
"10154splitHere46","12223375splitHere46","String"
"10155splitHere46","12223377splitHere46","public GamePanel() {<newline46mondego>    paintBackground(gameScreenGraphics);<newline46mondego>    paintScore(gameScreenGraphics);<newline46mondego>    paintBouncers(gameScreenGraphics);<newline46mondego>    addMouseMotionListener(this);<newline46mondego>    repaint();<newline46mondego>}<newline46mondego>"
"10156splitHere46","12223488splitHere46","toUpperCase"
"10157splitHere46","12223488splitHere46","int i = Integer.parseInt(input);<newline46mondego>String hex = Integer.toHexString(i).toUpperCase();<newline46mondego>"
"10158splitHere46","12223524splitHere46","package test;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import net.astesana.javaluator.*;<newline46mondego><newline46mondego>public class TreeBooleanEvaluator extends AbstractEvaluator<String> {<newline46mondego>  /** The logical AND operator.*/<newline46mondego>  final static Operator AND = new Operator(<doubleQuotes46>&&<doubleQuotes46>, 2, Operator.Associativity.LEFT, 2);<newline46mondego>  /** The logical OR operator.*/<newline46mondego>  final static Operator OR = new Operator(<doubleQuotes46>||<doubleQuotes46>, 2, Operator.Associativity.LEFT, 1);<newline46mondego><newline46mondego>  private static final Parameters PARAMETERS;<newline46mondego><newline46mondego>  static {<newline46mondego>    // Create the evaluator's parameters<newline46mondego>    PARAMETERS = new Parameters();<newline46mondego>    // Add the supported operators<newline46mondego>    PARAMETERS.add(AND);<newline46mondego>    PARAMETERS.add(OR);<newline46mondego>    // Add the parentheses<newline46mondego>    PARAMETERS.addExpressionBracket(BracketPair.PARENTHESES);<newline46mondego>  }<newline46mondego><newline46mondego>  public TreeBooleanEvaluator() {<newline46mondego>    super(PARAMETERS);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected String toValue(String literal, Object evaluationContext) {<newline46mondego>    return literal;<newline46mondego>  }<newline46mondego><newline46mondego>  private boolean getValue(String literal) {<newline46mondego>    if (<doubleQuotes46>T<doubleQuotes46>.equals(literal) || literal.endsWith(<doubleQuotes46>=true<doubleQuotes46>)) return true;<newline46mondego>    else if (<doubleQuotes46>F<doubleQuotes46>.equals(literal) || literal.endsWith(<doubleQuotes46>=false<doubleQuotes46>)) return false;<newline46mondego>    throw new IllegalArgumentException(<doubleQuotes46>Unknown literal : <doubleQuotes46>+literal);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected String evaluate(Operator operator, Iterator<String> operands,<newline46mondego>      Object evaluationContext) {<newline46mondego>    List<String> tree = (List<String>) evaluationContext;<newline46mondego>    String o1 = operands.next();<newline46mondego>    String o2 = operands.next();<newline46mondego>    Boolean result;<newline46mondego>    if (operator == OR) {<newline46mondego>      result = getValue(o1) || getValue(o2);<newline46mondego>    } else if (operator == AND) {<newline46mondego>      result = getValue(o1) && getValue(o2);<newline46mondego>    } else {<newline46mondego>      throw new IllegalArgumentException();<newline46mondego>    }<newline46mondego>    String eval = <doubleQuotes46>(<doubleQuotes46>+o1+<doubleQuotes46> <doubleQuotes46>+operator.getSymbol()+<doubleQuotes46> <doubleQuotes46>+o2+<doubleQuotes46>)=<doubleQuotes46>+result;<newline46mondego>    tree.add(eval);<newline46mondego>    return eval;<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    TreeBooleanEvaluator evaluator = new TreeBooleanEvaluator();<newline46mondego>    doIt(evaluator, <doubleQuotes46>T && ( F || ( F && T ) )<doubleQuotes46>);<newline46mondego>    doIt(evaluator, <doubleQuotes46>(T && T) || ( F && T )<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void doIt(TreeBooleanEvaluator evaluator, String expression) {<newline46mondego>    List<String> sequence = new ArrayList<String>();<newline46mondego>    evaluator.evaluate(expression, sequence);<newline46mondego>    System.out.println (<doubleQuotes46>Evaluation sequence for :<doubleQuotes46>+expression);<newline46mondego>    for (String string : sequence) {<newline46mondego>      System.out.println (string);<newline46mondego>    }<newline46mondego>    System.out.println ();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10159splitHere46","12223528splitHere46","DatabaseMetaData.getDatabaseProductName()"
"10160splitHere46","12223599splitHere46","tvAnswer.setText(Html.fromHtml(<doubleQuotes46>16<sup>4</sup><doubleQuotes46> + <doubleQuotes46>istext <doubleQuotes46>));<newline46mondego>    tvAnswer.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"10161splitHere46","12223634splitHere46","exportExcel"
"10162splitHere46","12223634splitHere46","#exportExcel"
"10163splitHere46","12223634splitHere46","if(to.match(/^\d{4}[-]\d{2}[-]\d{2}$/) && from.match(/^\d{4}[-]\d{2}[-]\d{2}$/)) {<newline46mondego>    var query = webCore.createQuery( webCore.marketAction.getDataSeries, {}, {<newline46mondego>            FromDate: from,<newline46mondego>            ToDate: to,<newline46mondego>            Instrument: webCore.getInstrument(),<newline46mondego>            hi__a : <doubleQuotes46>0,1,2,4,21,8,10,11,12,9<doubleQuotes46>,<newline46mondego>            OmitNoTrade: <doubleQuotes46>true<doubleQuotes46>,<newline46mondego>            ext_xslt_lang: currentLanguage,<newline46mondego>            ext_xslt_options: <doubleQuotes46>,<doubleQuotes46> + $(<doubleQuotes46>#adjustedId:checked<doubleQuotes46>).val() + <doubleQuotes46>,<doubleQuotes46>, //$(<doubleQuotes46>#unadjustedId:checked<doubleQuotes46>).val() + <doubleQuotes46>,<doubleQuotes46>,<newline46mondego>            ext_xslt: <doubleQuotes46>hi_table_shares_adjusted.xsl<doubleQuotes46>,<newline46mondego>            ext_contenttype : <doubleQuotes46>application/ms-excel<doubleQuotes46>,<newline46mondego>            ext_contenttypefilename : <doubleQuotes46>_<doubleQuotes46> + webCore.getInstrument() + <doubleQuotes46>.xls<doubleQuotes46>,<newline46mondego>            ext_xslt_hiddenattrs: <doubleQuotes46>,ip,iv,<doubleQuotes46>,<newline46mondego>            ext_xslt_tableId: <doubleQuotes46>historicalTable<doubleQuotes46><newline46mondego>        }<newline46mondego>    );<newline46mondego>    $(<doubleQuotes46>#excelQuery<doubleQuotes46>).val( query );<newline46mondego>    $(<doubleQuotes46>#excelForm<doubleQuotes46>).attr( <doubleQuotes46>action<doubleQuotes46>, webCore.proxyURL ).submit();<newline46mondego>}<newline46mondego>"
"10164splitHere46","12223665splitHere46","package stack;<newline46mondego><newline46mondego>import java.awt.BorderLayout;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Aitor extends JFrame implements ActionListener{<newline46mondego>    JTable table;<newline46mondego>    JPanel panel = new JPanel();<newline46mondego>    JButton button = new JButton(<doubleQuotes46>Add<doubleQuotes46>); <newline46mondego><newline46mondego>    String data[][]={{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},                        {<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>}<newline46mondego>,{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>}<newline46mondego>,{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>},{<doubleQuotes46>hey<doubleQuotes46>,<doubleQuotes46>hey<doubleQuotes46>}};<newline46mondego>    String columns[] = {<doubleQuotes46>First<doubleQuotes46>,<doubleQuotes46>Second<doubleQuotes46>};<newline46mondego><newline46mondego>    public Aitor(){<newline46mondego>        setLayout(new BorderLayout());<newline46mondego>        panel.setLayout(new BorderLayout());<newline46mondego>        panel.setPreferredSize(new Dimension(500,400));<newline46mondego>        button.addActionListener(this);<newline46mondego>        add(panel,BorderLayout.CENTER);<newline46mondego>        add(button, BorderLayout.SOUTH);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String [] a){<newline46mondego>        Aitor aitor = new Aitor();<newline46mondego>        aitor.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>        aitor.pack();<newline46mondego>        aitor.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent arg0) {<newline46mondego>        panel.removeAll();<newline46mondego>        table =new JTable(data,columns);<newline46mondego>        panel.add(new JScrollPane(table),BorderLayout.CENTER);<newline46mondego>        repaint();<newline46mondego>        revalidate();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10165splitHere46","12223758splitHere46","for (int i = 0; i < jsonArrayFrench.length(); i++) {<newline46mondego>            JSONArray innerJsonArray = jsonArrayFrench.getJSONArray(i);<newline46mondego>            for (int j=0; j < innerJsonArray.length(); j++)<newline46mondego>            {<newline46mondego>                JSONObject jsonObject = innerJsonArray.getJSONObject(j);<newline46mondego>                if(jsonObject.getString(<doubleQuotes46>category<doubleQuotes46>).equals(category))<newline46mondego>                    subnewsFrench.add(jsonObject.getString(<doubleQuotes46>title<doubleQuotes46>));<newline46mondego>            }   <newline46mondego>}<newline46mondego>"
"10166splitHere46","12223783splitHere46","JSONArray array = new JSONArray();<newline46mondego><newline46mondego>    JSONObject container = new JSONObject();<newline46mondego><newline46mondego>    JSONObject showMarks = new JSONObject();<newline46mondego>    showMarks.put(<doubleQuotes46>show<doubleQuotes46>, true);<newline46mondego><newline46mondego>    JSONArray markData = new JSONArray();<newline46mondego><newline46mondego>    JSONObject firstMark = new JSONObject();<newline46mondego>    firstMark.put(<doubleQuotes46>label<doubleQuotes46>, <doubleQuotes46>First Mark<doubleQuotes46>);<newline46mondego>    firstMark.put(<doubleQuotes46>position<doubleQuotes46>, 3);<newline46mondego>    firstMark.put(<doubleQuotes46>labelVAlign<doubleQuotes46>, <doubleQuotes46>top<doubleQuotes46>);<newline46mondego><newline46mondego>    JSONObject secondMark = new JSONObject();<newline46mondego>    secondMark.put(<doubleQuotes46>label<doubleQuotes46>, <doubleQuotes46>Second mark<doubleQuotes46>);<newline46mondego>    secondMark.put(<doubleQuotes46>position<doubleQuotes46>, 9);<newline46mondego>    secondMark.put(<doubleQuotes46>labelVAlign<doubleQuotes46>, <doubleQuotes46>top<doubleQuotes46>);<newline46mondego><newline46mondego>    markData.add(firstMark);<newline46mondego>    markData.add(secondMark);<newline46mondego><newline46mondego>    container.put(<doubleQuotes46>marks<doubleQuotes46>, showMarks);<newline46mondego>    container.put(<doubleQuotes46>data<doubleQuotes46>, new JSONArray());<newline46mondego>    container.put(<doubleQuotes46>markData<doubleQuotes46>, markData);<newline46mondego><newline46mondego>    array.add(container);<newline46mondego>    log.info(array.toString(4));<newline46mondego>"
"10167splitHere46","12223883splitHere46","Launchable"
"10168splitHere46","12223883splitHere46","null"
"10169splitHere46","12223883splitHere46","Launchable"
"10170splitHere46","12223883splitHere46","Object"
"10171splitHere46","12223883splitHere46","Launchable"
"10172splitHere46","12223929splitHere46","Callable"
"10173splitHere46","12223929splitHere46","ExecutorService"
"10174splitHere46","12223929splitHere46","main(String[] args) {<newline46mondego><newline46mondego>  String[] inputs;<newline46mondego>  Future<Result>[] results;<newline46mondego><newline46mondego>  for (int i = 0; i < inputs.length; i++) {<newline46mondego>    results[i] = executor.submit(new Worker(inputs[i]);<newline46mondego>  } <newline46mondego>  for (int i = 0; i < inputs.length; i++) {<newline46mondego>    Result r = results[i].get();<newline46mondego>    // do something with the result<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"10175splitHere46","12224069splitHere46","hashCode"
"10176splitHere46","12224069splitHere46","Date"
"10177splitHere46","12224069splitHere46","hashCode"
"10178splitHere46","12224069splitHere46","Date"
"10179splitHere46","12224069splitHere46","hashCode"
"10180splitHere46","12224140splitHere46","Thread.enumerate()<newline46mondego>Thread.getName()<newline46mondego>Thread.interrupt()<newline46mondego>"
"10181splitHere46","12224254splitHere46","String theInitialTempType = (String) firstComboBox.getSelectedItem();<newline46mondego>"
"10182splitHere46","12224254splitHere46","String theAttribute"
"10183splitHere46","12224254splitHere46","theAttribute = anotherAttribute.getSelectedText();"
"10184splitHere46","12224254splitHere46","ActionListener"
"10185splitHere46","12224522splitHere46","@Test public void someTestThatNeedsNetworkConnectivity() {<newline46mondego>    assumeTrue(thereIsNetworkConnectivity());<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"10186splitHere46","12224625splitHere46","ArrayList<int>"
"10187splitHere46","12224625splitHere46","ArrayList<Integer>"
"10188splitHere46","12224625splitHere46","null"
"10189splitHere46","12224625splitHere46","null"
"10190splitHere46","12224625splitHere46","// This is OK<newline46mondego>Integer iDontKnowValueYet = null;<newline46mondego><newline46mondego>// Compile error!<newline46mondego>int iDontKnowThisYetEither = null;<newline46mondego>"
"10191splitHere46","12224855splitHere46","ImageIcon"
"10192splitHere46","12224855splitHere46","JLabel"
"10193splitHere46","12224855splitHere46","ImageIcon animatedGif = new ImageIcon(...); // Path/URL to your gif<newline46mondego>JLabel splashLabel = new JLabel(animatedGif);<newline46mondego><newline46mondego>// Add to your splash screen...<newline46mondego>"
"10194splitHere46","12224855splitHere46","myJFrame.setUndecorated(true);<newline46mondego>"
"10195splitHere46","12224870splitHere46","BotServer.Connection"
"10196splitHere46","12224870splitHere46","Thread"
"10197splitHere46","12224870splitHere46","run"
"10198splitHere46","12224870splitHere46","Thread"
"10199splitHere46","12224870splitHere46","run()"
"10200splitHere46","12224870splitHere46","BotServer.Connection"
"10201splitHere46","12224870splitHere46","start()"
"10202splitHere46","12224878splitHere46","/etc/environment"
"10203splitHere46","12224878splitHere46","/etc/profile"
"10204splitHere46","12224878splitHere46","/etc/bash.bashrc"
"10205splitHere46","12224878splitHere46","/etc/environment"
"10206splitHere46","12224878splitHere46","/etc/profile"
"10207splitHere46","12224878splitHere46","/etc/bash.bashrc"
"10208splitHere46","12224878splitHere46","/etc/profile.d"
"10209splitHere46","12224878splitHere46","/etc/profile.d/bash_completion.sh"
"10210splitHere46","12224878splitHere46","~/.pam_environment"
"10211splitHere46","12224878splitHere46","~/.profile"
"10212splitHere46","12224878splitHere46","~/.bash_profile"
"10213splitHere46","12224878splitHere46","~./bash_login"
"10214splitHere46","12224878splitHere46","~/.bash_profile"
"10215splitHere46","12224878splitHere46","~/.bash_login"
"10216splitHere46","12224878splitHere46","~/.bashrc"
"10217splitHere46","12225000splitHere46","protected Object doInBackground() throws Exception {<newline46mondego>    ........<newline46mondego>    resultDTO=//get data from database<newline46mondego>    // This shouldn't be done here<newline46mondego>    tableModel.setDataVector(resultDTO.getAllRows(), tableModel.getColumnNames()); Â <newline46mondego>    // and neither should this<newline46mondego>    // hide column<newline46mondego>    table.removeColumn(table.getColumnModel().getColumn(7));<newline46mondego>"
"10218splitHere46","12225000splitHere46","SwingWorker"
"10219splitHere46","12225000splitHere46","publish"
"10220splitHere46","12225000splitHere46","process"
"10221splitHere46","12225000splitHere46","done"
"10222splitHere46","12225003splitHere46","File f = new File(<doubleQuotes46>E:\\NEw_Workspace\\Voice_recognition_modify\\src\\edu\\cmu\\sphinx\\demo\\helloworld\\hello.gram<doubleQuotes46>);<newline46mondego>                    RandomAccessFile raf = new RandomAccessFile(f, <doubleQuotes46>rw<doubleQuotes46>);<newline46mondego><newline46mondego>                    // Read a character<newline46mondego>                   // char ch = raf.readChar();<newline46mondego><newline46mondego>                    // Seek to end of file<newline46mondego>                    raf.seek((f.length())-1);<newline46mondego><newline46mondego>                    // Append to the end<newline46mondego>                    raf.write((<doubleQuotes46>|(KARAN);<doubleQuotes46>).getBytes());<newline46mondego><newline46mondego>                    raf.close();<newline46mondego>                } catch (IOException e) {<newline46mondego>                } <newline46mondego>"
"10223splitHere46","12225104splitHere46","isPressed()"
"10224splitHere46","12225104splitHere46","import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.event.*;<newline46mondego><newline46mondego>public class ButtonPressedEg {<newline46mondego>   public static void main(String[] args) {<newline46mondego>      int timerDelay = 100;<newline46mondego>      final Timer timer = new Timer(timerDelay , new ActionListener() {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void actionPerformed(ActionEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>Button Pressed!<doubleQuotes46>);<newline46mondego>         }<newline46mondego>      });<newline46mondego><newline46mondego>      JButton button = new JButton(<doubleQuotes46>Press Me!<doubleQuotes46>);<newline46mondego>      final ButtonModel bModel = button.getModel();<newline46mondego>      bModel.addChangeListener(new ChangeListener() {<newline46mondego><newline46mondego>         @Override<newline46mondego>         public void stateChanged(ChangeEvent cEvt) {<newline46mondego>            if (bModel.isPressed() && !timer.isRunning()) {<newline46mondego>               timer.start();<newline46mondego>            } else if (!bModel.isPressed() && timer.isRunning()) {<newline46mondego>               timer.stop();<newline46mondego>            }<newline46mondego>         }<newline46mondego>      });<newline46mondego><newline46mondego>      JPanel panel = new JPanel();<newline46mondego>      panel.add(button);<newline46mondego><newline46mondego><newline46mondego>      JOptionPane.showMessageDialog(null, panel);<newline46mondego><newline46mondego>   }<newline46mondego>}<newline46mondego>"
"10225splitHere46","12225161splitHere46","org.slf4j.impl.StaticLoggerBinder"
"10226splitHere46","12225161splitHere46","org.slf4j.impl.StaticLoggerBinder"
"10227splitHere46","12225161splitHere46","UnsupportedOperationException"
"10228splitHere46","12225161splitHere46","org.slf4j.impl.StaticLoggerBinder"
"10229splitHere46","12225161splitHere46","findPossibleStaticLoggerBinderPathSet()"
"10230splitHere46","12225523splitHere46","Timer"
"10231splitHere46","12225523splitHere46","repaint"
"10232splitHere46","12225523splitHere46","mp3.play()"
"10233splitHere46","12225523splitHere46","Thread"
"10234splitHere46","12225645splitHere46","import java.io.File;<newline46mondego>import java.io.FileOutputStream;<newline46mondego>import java.io.OutputStreamWriter;<newline46mondego>import java.io.BufferedWriter;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>public class ReaderWriter {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        try {<newline46mondego>            String content = <doubleQuotes46>HamamÃ©lis. Written: <doubleQuotes46> + new java.util.Date();<newline46mondego><newline46mondego>            File file = new File(<doubleQuotes46>some_text.txt<doubleQuotes46>);<newline46mondego><newline46mondego>            // Create file if not already existent. <newline46mondego>            if (!file.exists()) {<newline46mondego>                file.createNewFile();<newline46mondego>            }<newline46mondego><newline46mondego>            FileOutputStream fileOutputStream = new FileOutputStream( file );<newline46mondego>            OutputStreamWriter outputStreamWriter = new OutputStreamWriter( fileOutputStream, <doubleQuotes46>UTF-8<doubleQuotes46> );<newline46mondego>            BufferedWriter bufferedWriter = new BufferedWriter( outputStreamWriter );<newline46mondego>            bufferedWriter.write( content );<newline46mondego>            bufferedWriter.close();<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>ReaderWriter 'main' method is done. <doubleQuotes46> + new java.util.Date() );<newline46mondego><newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10235splitHere46","12225687splitHere46","public static void main(String... args) throws IOException {<newline46mondego>    timeObjectGraph(<doubleQuotes46>First run<doubleQuotes46>, 1);<newline46mondego>    timeObjectGraph(<doubleQuotes46>Second run<doubleQuotes46>, 2);<newline46mondego>    timeObjectGraph(<doubleQuotes46>Next thousand<doubleQuotes46>, 1000);<newline46mondego>    for (int i = 0; i < 5; i++)<newline46mondego>        timeObjectGraph(<doubleQuotes46>Next ten thousand<doubleQuotes46>, 10000);<newline46mondego>}<newline46mondego><newline46mondego>static int dontOptimiseAway = 0;<newline46mondego><newline46mondego>public static void timeObjectGraph(String desc, int runs) throws IOException {<newline46mondego>    long start = System.nanoTime();<newline46mondego>    for (int i = 0; i < runs; i++) {<newline46mondego>        ByteArrayOutputStream out = new ByteArrayOutputStream();<newline46mondego>        ObjectOutputStream oos = new ObjectOutputStream(out);<newline46mondego>        oos.writeObject(Calendar.getInstance());<newline46mondego>        oos.close();<newline46mondego>        dontOptimiseAway = out.toByteArray().length;<newline46mondego>    }<newline46mondego>    long time = System.nanoTime() - start;<newline46mondego>    System.out.printf(<doubleQuotes46>%s took an avg time of %,d ns%n<doubleQuotes46>, desc, time / runs);<newline46mondego>}<newline46mondego>"
"10236splitHere46","12225687splitHere46","First run took an avg time of 37,509,488 ns<newline46mondego>Second run took an avg time of 439,054 ns<newline46mondego>Next thousand took an avg time of 185,242 ns<newline46mondego>Next ten thousand took an avg time of 41,698 ns<newline46mondego>Next ten thousand took an avg time of 19,981 ns<newline46mondego>Next ten thousand took an avg time of 11,541 ns<newline46mondego>Next ten thousand took an avg time of 13,451 ns<newline46mondego>Next ten thousand took an avg time of 11,289 ns<newline46mondego>"
"10237splitHere46","12225711splitHere46","try"
"10238splitHere46","12225726splitHere46","WebApplicationContextUtils.getApplicationContext(extract servlet context from request for example)).getBean(<doubleQuotes46>beanid<doubleQuotes46>)<newline46mondego>"
"10239splitHere46","12225757splitHere46","Swing"
"10240splitHere46","12225757splitHere46","JComboBox"
"10241splitHere46","12225757splitHere46","JTextField"
"10242splitHere46","12225757splitHere46","initialTemp"
"10243splitHere46","12225757splitHere46","Convert"
"10244splitHere46","12225757splitHere46","JButton"
"10245splitHere46","12225757splitHere46","JTextField"
"10246splitHere46","12225757splitHere46","JTextField"
"10247splitHere46","12225757splitHere46","Convert"
"10248splitHere46","12225757splitHere46","JTextField"
"10249splitHere46","12225757splitHere46","JTextField"
"10250splitHere46","12225757splitHere46","public String returnedConversion(String toConvert)"
"10251splitHere46","12225757splitHere46","public void returnedConversion(String initialValue){<newline46mondego>    //Step 1. Validate the input<newline46mondego>    //Step 2. Convert the value. You write your own logic taking into account the initialValue<newline46mondego>    //        and the JComboBox conversion options<newline46mondego>    //Step 3. Set the text of the second JTextField to the converted value, using the method convertedTemp.setText(...)<newline46mondego>}<newline46mondego>"
"10252splitHere46","12225757splitHere46","Convert"
"10253splitHere46","12225757splitHere46","JButton"
"10254splitHere46","12225757splitHere46","ActionListener"
"10255splitHere46","12225757splitHere46","convertButton.addActionListener(new ActionListener() {<newline46mondego>    public void actionPerformed(ActionEvent event) {<newline46mondego>        returnedConversion(initialTemp.getText());<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"10256splitHere46","12225773splitHere46","Charset.forName(<doubleQuotes46>'ISO-8859-1'<doubleQuotes46>);<newline46mondego>"
"10257splitHere46","12225773splitHere46","String url = <doubleQuotes46>http://www.design.cmu.edu/community.php?s=3<doubleQuotes46>;<newline46mondego>Document document = Jsoup.parse(new URL(url).openStream(), <doubleQuotes46>ISO-8859-1<doubleQuotes46>, url);<newline46mondego>"
"10258splitHere46","12225887splitHere46","try<newline46mondego>{<newline46mondego>    while (...)<newline46mondego>    {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>catch (FooException ex)<newline46mondego>{<newline46mondego>    // This only executes if a FooException is thrown.<newline46mondego>}<newline46mondego>finally<newline46mondego>{<newline46mondego>    // This executes whether or not there is an exception.<newline46mondego>}<newline46mondego>"
"10259splitHere46","12225924splitHere46","timezone"
"10260splitHere46","12225945splitHere46","System.currentTimeMillis()"
"10261splitHere46","12225945splitHere46","currentTimeMillis"
"10262splitHere46","12225945splitHere46","System.nanoTime()"
"10263splitHere46","12225945splitHere46","long timeout = System.currentTimeMillis() + 500;<newline46mondego>while (System.currentTimeMillis() < timeout) {<newline46mondego>    eventPtr = OS.gdk_event_get ();<newline46mondego>    if (eventPtr != 0) {<newline46mondego>        break;<newline46mondego>    } else {<newline46mondego>        try {Thread.sleep(50);} catch (Exception ex) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10264splitHere46","12225945splitHere46","public class Foo {<newline46mondego><newline46mondego>    public void test1() {<newline46mondego>        long timeout = System.currentTimeMillis() + 500;<newline46mondego>        int i = 0;<newline46mondego>        while (System.currentTimeMillis() < timeout) {<newline46mondego>            System.out.println(i++);<newline46mondego>            try {Thread.sleep(50);} catch (Exception ex) {}<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(final String ... args) throws Exception {<newline46mondego>        new Foo().test1();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10265splitHere46","12225945splitHere46","RULE counter<newline46mondego>CLASS Foo<newline46mondego>METHOD test1<newline46mondego>AT ENTRY<newline46mondego>IF TRUE<newline46mondego>DO createCountDown($0, 5)<newline46mondego>ENDRULE<newline46mondego><newline46mondego>RULE sleeper<newline46mondego>CLASS Foo<newline46mondego>METHOD test1<newline46mondego>AT INVOKE Thread.sleep()<newline46mondego>IF countDown($0)<newline46mondego>DO RETURN<newline46mondego>ENDRULE<newline46mondego>"
"10266splitHere46","12225945splitHere46","$ ~/Downloads/byteman-download-2.1.0/bin/bmjava.sh -l ./sleeper.btm Foo<newline46mondego>0<newline46mondego>1<newline46mondego>2<newline46mondego>3<newline46mondego>4<newline46mondego>5<newline46mondego>"
"10267splitHere46","12225945splitHere46","$ java Foo <newline46mondego>0<newline46mondego>1<newline46mondego>2<newline46mondego>3<newline46mondego>4<newline46mondego>5<newline46mondego>6<newline46mondego>7<newline46mondego>8<newline46mondego>9<newline46mondego>"
"10268splitHere46","12225998splitHere46","subtree"
"10269splitHere46","12225998splitHere46","objectClass=commonObjectClass"
"10270splitHere46","12225998splitHere46","commonObjectCLass"
"10271splitHere46","12225998splitHere46","cn=*"
"10272splitHere46","12226021splitHere46","Params.flash"
"10273splitHere46","12226021splitHere46","#{ifErrors}<newline46mondego>   <h1>Oops...</h1><newline46mondego>#{/ifErrors}<newline46mondego><newline46mondego>#{form @Application.hello()}<newline46mondego>   <div><newline46mondego>      Name: <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>name<doubleQuotes46> value=<doubleQuotes46>${flash.name}<doubleQuotes46> /><newline46mondego>      <span class=<doubleQuotes46>error<doubleQuotes46>>#{error 'name' /}</span><newline46mondego>   </div><newline46mondego>   <div><newline46mondego>      Age: <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>age<doubleQuotes46> value=<doubleQuotes46>${flash.age}<doubleQuotes46> /> <newline46mondego>      <span class=<doubleQuotes46>error<doubleQuotes46>>#{error 'age' /}</span><newline46mondego>   </div><newline46mondego>   <div><newline46mondego>      <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>Say hello<doubleQuotes46> /> <newline46mondego>   </div><newline46mondego>#{/form}<newline46mondego>"
"10274splitHere46","12226025splitHere46","// the action to create the component<newline46mondego>public static class CreateAction extends AbstractAction {<newline46mondego><newline46mondego>    private Container parent;<newline46mondego>    private Action enableAction;<newline46mondego><newline46mondego>    public CreateAction(Container parent) {<newline46mondego>        this.parent = parent;<newline46mondego>        enableAction = new EnableAction(this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        setEnabled(false);<newline46mondego>        Component field = createTextField();<newline46mondego>        parent.add(field);<newline46mondego>        parent.revalidate();<newline46mondego>        field.requestFocus();<newline46mondego>    }<newline46mondego><newline46mondego>    int count;<newline46mondego>    private Component createTextField() {<newline46mondego>        // just for fun counting the fields we create<newline46mondego>        JTextField field = new JTextField(<doubleQuotes46>field: <doubleQuotes46> + count++, 20);<newline46mondego>        field.getInputMap().put(KeyStroke.getKeyStroke(<doubleQuotes46>ENTER<doubleQuotes46>), <newline46mondego>                <doubleQuotes46>createComponent<doubleQuotes46>);<newline46mondego>        field.getActionMap().put(<doubleQuotes46>createComponent<doubleQuotes46>, this);<newline46mondego>        field.getInputMap().put(KeyStroke.getKeyStroke(<doubleQuotes46>released ENTER<doubleQuotes46>), <newline46mondego>                <doubleQuotes46>enableCreation<doubleQuotes46>);<newline46mondego>        field.getActionMap().put(<doubleQuotes46>enableCreation<doubleQuotes46>, enableAction);<newline46mondego>        return field;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// the action that enables another<newline46mondego>public static class EnableAction extends AbstractAction {<newline46mondego><newline46mondego>    Action toEnable;<newline46mondego><newline46mondego>    public EnableAction(Action toEnable) {<newline46mondego>        this.toEnable = toEnable;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        toEnable.setEnabled(true);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// usage<newline46mondego>final JComponent parent = new JPanel(new MigLayout(<doubleQuotes46>wrap<doubleQuotes46>));<newline46mondego>// here I'm lazy and let the action create the very first component as well<newline46mondego>add.actionPerformed(null);<newline46mondego>add.setEnabled(true);<newline46mondego>"
"10275splitHere46","12226115splitHere46","Bar.invoke"
"10276splitHere46","12226115splitHere46","Foo.invoke"
"10277splitHere46","12226115splitHere46","bar.invoke"
"10278splitHere46","12226115splitHere46","foo.invoke"
"10279splitHere46","12226115splitHere46","reference to invoke is ambiguous"
"10280splitHere46","12226115splitHere46","Bar"
"10281splitHere46","12226115splitHere46","Bar<Object, Object[]> bar = new Bar<Object, Object[]>()"
"10282splitHere46","12226115splitHere46","bar.invoke(new Object[]{})"
"10283splitHere46","12226312splitHere46","this"
"10284splitHere46","12226312splitHere46","@PostConstruct"
"10285splitHere46","12226315splitHere46","Model returned object ... which is not available in the list of selected objects.<newline46mondego>"
"10286splitHere46","12226362splitHere46","hibernate-annotations.jar"
"10287splitHere46","12226362splitHere46","lib"
"10288splitHere46","12226471splitHere46","class method"
"10289splitHere46","12226471splitHere46","static"
"10290splitHere46","12226471splitHere46","Non-static"
"10291splitHere46","12226471splitHere46","static variables"
"10292splitHere46","12226471splitHere46","static"
"10293splitHere46","12226471splitHere46","Non-static"
"10294splitHere46","12226471splitHere46","static"
"10295splitHere46","12226471splitHere46","Class_Name"
"10296splitHere46","12226471splitHere46","<doubleQuotes46>.<doubleQuotes46>"
"10297splitHere46","12226471splitHere46","class"
"10298splitHere46","12226471splitHere46","private constructor"
"10299splitHere46","12226471splitHere46","static methods or variables"
"10300splitHere46","12226471splitHere46","class"
"10301splitHere46","12226505splitHere46",".*(\p{javaUpperCase}.*\.).*"
"10302splitHere46","12226505splitHere46",".*"
"10303splitHere46","12226553splitHere46","ids.add"
"10304splitHere46","12226553splitHere46","boolean"
"10305splitHere46","12226553splitHere46","List.add"
"10306splitHere46","12226553splitHere46","JSONArray jsonInnerArray = null;<newline46mondego>jsonInnerArray = jsonObj.getJSONArray(<doubleQuotes46>ids<doubleQuotes46>);<newline46mondego>List<String> ids = new ArrayList<String>();    <newline46mondego>ids.add(jsonInnerArray.get(i).toString())<newline46mondego>dtoClass.setid(ids);<newline46mondego>"
"10307splitHere46","12226584splitHere46","PropertyChangeSupport"
"10308splitHere46","12226584splitHere46","viewer.refresh()"
"10309splitHere46","12226584splitHere46","PropertyChangeSupport"
"10310splitHere46","12226659splitHere46","setDefaultPerspective(String id)"
"10311splitHere46","12226659splitHere46","PlatformUI.getWorkbench().getPerspectiveRegistry().setDefaultPerspective(id);<newline46mondego>"
"10312splitHere46","12226707splitHere46","IplImage img=cvLoadImage(<doubleQuotes46>pathtosourceimage<doubleQuotes46>);<newline46mondego>    CvSize cvSize = cvSize(img.width(), img.height());<newline46mondego>    IplImage gry=cvCreateImage(cvSize, img.depth(), 1);<newline46mondego>    cvCvtColor(img, gry, CV_BGR2GRAY);<newline46mondego>    cvThreshold(gry, gry, 200, 255, CV_THRESH_BINARY);<newline46mondego>    cvAdaptiveThreshold(gry, gry, 255, CV_ADAPTIVE_THRESH_MEAN_C, CV_THRESH_BINARY_INV, 11, 5);<newline46mondego><newline46mondego>    CvMemStorage storage = CvMemStorage.create();<newline46mondego>    CvSeq contours = new CvContour(null);<newline46mondego><newline46mondego>    int noOfContors = cvFindContours(gry, storage, contours, Loader.sizeof(CvContour.class), CV_RETR_CCOMP, CV_CHAIN_APPROX_NONE, new CvPoint(0,0));<newline46mondego><newline46mondego>    CvSeq ptr = new CvSeq();<newline46mondego><newline46mondego>    int count =1;<newline46mondego>    CvPoint p1 = new CvPoint(0,0),p2 = new CvPoint(0,0);<newline46mondego><newline46mondego>    for (ptr = contours; ptr != null; ptr = ptr.h_next()) {<newline46mondego><newline46mondego>        CvScalar color = CvScalar.BLUE;<newline46mondego>        CvRect sq = cvBoundingRect(ptr, 0);<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Contour No =<doubleQuotes46>+count);<newline46mondego>            System.out.println(<doubleQuotes46>X =<doubleQuotes46>+ sq.x()+<doubleQuotes46> Y=<doubleQuotes46>+ sq.y());<newline46mondego>            System.out.println(<doubleQuotes46>Height =<doubleQuotes46>+sq.height()+<doubleQuotes46> Width =<doubleQuotes46>+sq.width());<newline46mondego>            System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>            p1.x(sq.x());<newline46mondego>            p2.x(sq.x()+sq.width());<newline46mondego>            p1.y(sq.y());<newline46mondego>            p2.y(sq.y()+sq.height());<newline46mondego>            cvRectangle(img, p1,p2, CV_RGB(255, 0, 0), 2, 8, 0);<newline46mondego>            cvDrawContours(img, ptr, color, CV_RGB(0,0,0), -1, CV_FILLED, 8, cvPoint(0,0));<newline46mondego>            count++;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    cvShowImage(<doubleQuotes46>contures<doubleQuotes46>,img);<newline46mondego>    cvWaitKey(0);<newline46mondego>"
"10313splitHere46","12226768splitHere46","c"
"10314splitHere46","12226768splitHere46","d"
"10315splitHere46","12226768splitHere46","=="
"10316splitHere46","12226768splitHere46","c.equals(d)<newline46mondego>"
"10317splitHere46","12226768splitHere46","Math.abs(c - d) < epsilon"
"10318splitHere46","12226768splitHere46","Integer c = 1;<newline46mondego>Integer d = 1;<newline46mondego>"
"10319splitHere46","12226768splitHere46","true"
"10320splitHere46","12226768splitHere46","Integer"
"10321splitHere46","12226768splitHere46","Integer.valueOf()"
"10322splitHere46","12226768splitHere46","valueOf()"
"10323splitHere46","12226768splitHere46","Integer c = Integer.valueOf(1);<newline46mondego>Integer d = Integer.valueOf(1);<newline46mondego>"
"10324splitHere46","12226881splitHere46","Object"
"10325splitHere46","12227019splitHere46","Map<UsableItem, SomeObject> map;<newline46mondego>"
"10326splitHere46","12227019splitHere46","UsableItem"
"10327splitHere46","12227092splitHere46","public class AndroidListFilesActivity extends ListActivity {<newline46mondego><newline46mondego>    File root;<newline46mondego>    File pdf;<newline46mondego><newline46mondego>    private List<String> fileList = new ArrayList<String>();<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>        root = new File(Environment.getExternalStorageDirectory()<newline46mondego>                .getAbsolutePath());<newline46mondego>        // ListDir(root);<newline46mondego><newline46mondego>        pdf = new File(root, <doubleQuotes46>PDF<doubleQuotes46>);<newline46mondego>        ListDir(pdf);<newline46mondego>    }<newline46mondego><newline46mondego>    void ListDir(File f) {<newline46mondego>        File[] files = f.listFiles();<newline46mondego>        fileList.clear();<newline46mondego>        for (File file : files) {<newline46mondego>            fileList.add(file.getPath());<newline46mondego>        }<newline46mondego><newline46mondego>        ArrayAdapter<String> directoryList = new ArrayAdapter<String>(this,<newline46mondego>                android.R.layout.simple_list_item_1, fileList);<newline46mondego><newline46mondego>        setListAdapter(directoryList);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void onListItemClick(ListView parent, View v, int position, long id) {<newline46mondego>        //selection.setText(fileList.indexOf(simple_list_item_1));<newline46mondego>        OpenPdf(fileList.get(position).toString());<newline46mondego>    }<newline46mondego><newline46mondego>    public void OpenPdf(String path)<newline46mondego>    {<newline46mondego>          File file = new File(path);<newline46mondego>          if (file.exists()) {<newline46mondego>              Uri p = Uri.fromFile(file);<newline46mondego>              Intent intent = new Intent(Intent.ACTION_VIEW);<newline46mondego>              intent.setDataAndType(p, <doubleQuotes46>application/pdf<doubleQuotes46>);<newline46mondego>              intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);<newline46mondego><newline46mondego>              try {<newline46mondego>                  startActivity(intent);<newline46mondego>              } <newline46mondego>              catch (ActivityNotFoundException e){<newline46mondego>              }<newline46mondego>          }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10328splitHere46","12227168splitHere46","package addtext;<newline46mondego><newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.BufferedWriter;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.io.FileWriter;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.logging.Level;<newline46mondego>import java.util.logging.Logger;<newline46mondego>/**<newline46mondego> *<newline46mondego> * @author Dan300<newline46mondego> */<newline46mondego>public class AddText {<newline46mondego><newline46mondego>    File yourFile = new File(<doubleQuotes46>YourFileHere.txt<doubleQuotes46>); //add the name of your file in the brackets<newline46mondego>    int numLines; //this will store the number of lines in the file<newline46mondego>    String[] lines; //the lines of text that make up the file will be stored here<newline46mondego><newline46mondego>    public AddText() {<newline46mondego>        numLines = getNumberLines(yourFile);<newline46mondego>        lines = new String[numLines];//here we set the size of the array to be the same as the number of lines in the file<newline46mondego>        for(int count = 0; count < numLines; count++) {<newline46mondego>            lines[count] = readLine(count,yourFile);//here we set each string in the array to be each new line of the file<newline46mondego>        }<newline46mondego><newline46mondego>        doSomethingToStrings();<newline46mondego>    }<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>        new AddText();<newline46mondego>    }<newline46mondego>"
"10329splitHere46","12227168splitHere46","public int getNumberLines(File aFile) {<newline46mondego>    int numLines = 0;<newline46mondego>    try {<newline46mondego><newline46mondego>        BufferedReader input =  new BufferedReader(new FileReader(aFile));<newline46mondego>            try {<newline46mondego>                String line = null;<newline46mondego><newline46mondego>                while (( line = input.readLine()) != null){ //ReadLine returns the contents of the next line, and returns null at the end of the file.<newline46mondego>                    numLines++;<newline46mondego>                }<newline46mondego>  }<newline46mondego>  finally {<newline46mondego>    input.close();<newline46mondego>  }<newline46mondego>}<newline46mondego>catch (IOException ex){<newline46mondego>  ex.printStackTrace();<newline46mondego>}<newline46mondego>    return numLines;<newline46mondego>}<newline46mondego>"
"10330splitHere46","12227168splitHere46","public String readLine(int lineNumber, File aFile) {<newline46mondego>        String lineText = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        try {<newline46mondego><newline46mondego>            BufferedReader input =  new BufferedReader(new FileReader(aFile));<newline46mondego>                try {<newline46mondego>                     for(int count = 0; count < lineNumber; count++) {<newline46mondego>                        input.readLine();  //ReadLine returns the contents of the next line, and returns null at the end of the file.<newline46mondego>                     }<newline46mondego>                     lineText = input.readLine();<newline46mondego>      }<newline46mondego>      finally {<newline46mondego>        input.close();<newline46mondego>      }<newline46mondego>    }<newline46mondego>    catch (IOException ex){<newline46mondego>      ex.printStackTrace();<newline46mondego>    }<newline46mondego>        return lineText;<newline46mondego>    }<newline46mondego>"
"10331splitHere46","12227168splitHere46",".concat()"
"10332splitHere46","12227168splitHere46","public void doSomethingToStrings() {<newline46mondego>        try {<newline46mondego><newline46mondego>            lines[0] = lines[0].concat(<doubleQuotes46> ddd<doubleQuotes46>); //this joins the two strings lines[0] and <doubleQuotes46> ddd<doubleQuotes46><newline46mondego><newline46mondego>        } catch (ArrayIndexOutOfBoundsException ex) { // I have added a try{}catch{} block so that if there is not as many lines in the file as expected, the code will still continue.<newline46mondego><newline46mondego>        }<newline46mondego>        try {<newline46mondego>            lines[1] = lines[1].concat(<doubleQuotes46> hhh<doubleQuotes46>);<newline46mondego>        } catch (ArrayIndexOutOfBoundsException ex) {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>        try {<newline46mondego><newline46mondego>            writeFile(yourFile);<newline46mondego><newline46mondego>        } catch (FileNotFoundException ex) {<newline46mondego><newline46mondego>        } catch (IOException ex) {<newline46mondego>            Logger.getLogger(AddText.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"10333splitHere46","12227168splitHere46","writeFile()"
"10334splitHere46","12227168splitHere46","public void writeFile(File aFile) throws FileNotFoundException, IOException {<newline46mondego>        if (aFile == null) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>File should not be null.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    if (!aFile.exists()) {<newline46mondego>      throw new FileNotFoundException (<doubleQuotes46>File does not exist: <doubleQuotes46> + aFile);<newline46mondego>    }<newline46mondego>    if (!aFile.isFile()) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>Should not be a directory: <doubleQuotes46> + aFile);<newline46mondego>    }<newline46mondego>    if (!aFile.canWrite()) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>File cannot be written: <doubleQuotes46> + aFile);<newline46mondego>    }<newline46mondego><newline46mondego>    BufferedWriter output = new BufferedWriter(new FileWriter(aFile));<newline46mondego>    try {<newline46mondego>        for(int count = 0; count < numLines; count++) {<newline46mondego>            output.write(lines[count]);<newline46mondego>            if(count != numLines-1) {// This makes sure that an extra new line is not inserted at the end of the file<newline46mondego>                output.newLine();<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    finally {<newline46mondego>      output.close();<newline46mondego>    }<newline46mondego>    }<newline46mondego>"
"10335splitHere46","12227168splitHere46","StringTokenizer"
"10336splitHere46","12227168splitHere46","public void doSomethingElseToStrings() {<newline46mondego>        try{<newline46mondego>        StringTokenizer splitString1 = new StringTokenizer(lines[0]);<newline46mondego>        newLines[0] = splitString1.nextToken();<newline46mondego>        for(int count=0;count<=splitString1.countTokens();count++) {<newline46mondego>            if(count == 0) {<newline46mondego>            newLines[0] = newLines[0].concat(<doubleQuotes46> 111<doubleQuotes46>);<newline46mondego>        }<newline46mondego>            newLines[0] = newLines[0].concat(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>            newLines[0] = newLines[0].concat(splitString1.nextToken());<newline46mondego><newline46mondego>        }<newline46mondego>        } catch(ArrayIndexOutOfBoundsException ex) {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        try {<newline46mondego>        StringTokenizer splitString2 = new StringTokenizer(lines[1]);<newline46mondego>        newLines[1] = splitString2.nextToken();<newline46mondego>        for(int count=0;count<=splitString2.countTokens();count++) {<newline46mondego>            if(count == 1) {<newline46mondego>            newLines[1] = newLines[1].concat(<doubleQuotes46> 222<doubleQuotes46>);<newline46mondego>        }<newline46mondego>            newLines[1] = newLines[1].concat(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>            newLines[1] = newLines[1].concat(splitString2.nextToken());<newline46mondego><newline46mondego>        }<newline46mondego>        } catch(ArrayIndexOutOfBoundsException ex) {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        try {<newline46mondego><newline46mondego>            writeFile(yourFile);<newline46mondego><newline46mondego>        } catch (FileNotFoundException ex) {<newline46mondego><newline46mondego>        } catch (IOException ex) {<newline46mondego>            Logger.getLogger(AddText.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"10337splitHere46","12227168splitHere46","public class AddText {  <newline46mondego>    String[] newLines; // <<add<newline46mondego>    File yourFile = new File(<doubleQuotes46>YourFileHere.txt<doubleQuotes46>); //add the name of your file in the brackets<newline46mondego>    int numLines; <newline46mondego>    String[] lines; <newline46mondego><newline46mondego>public AddText() {<newline46mondego>...<newline46mondego>//doSomethingToStrings();  <<delete<newline46mondego>doSomethingElseToStrings(); //  <<add<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public void writeFile(File $aFile) throws FileNotFoundException, IOException {<newline46mondego>...<newline46mondego>//$output.write(lines[count]); <<delete<newline46mondego>$output.write(newLines[count]); //  <<add<newline46mondego>...<newline46mondego>}<newline46mondego>"
"10338splitHere46","12227168splitHere46","doSomethingToStrings()"
"10339splitHere46","12227168splitHere46","aaa bbb ccc<newline46mondego>eee fff ggg<newline46mondego>(other text)<newline46mondego>"
"10340splitHere46","12227168splitHere46","aaa bbb ccc ddd<newline46mondego>eee fff ggg hhh<newline46mondego>(other text remains the same)<newline46mondego>"
"10341splitHere46","12227168splitHere46","doSomethingElseToStrings()"
"10342splitHere46","12227168splitHere46","aaa 111 bbb ccc<newline46mondego>ddd eee 222 fff<newline46mondego>(other text remains the same)<newline46mondego>"
"10343splitHere46","12227195splitHere46","public RDFNode getProperty(Resource subject,Property prop)<newline46mondego>   {<newline46mondego>   RDFNode object=null;<newline46mondego>   StmtIterator iter2 = this.onto.model.listStatements(subject,prop,(RDFNode)null);  <newline46mondego>    while (iter2.hasNext()) {<newline46mondego>         object = iter2.nextStatement().getObject();<newline46mondego>         break;<newline46mondego>    }}<newline46mondego>   iter2.close();<newline46mondego>   return object;<newline46mondego>   }<newline46mondego><newline46mondego>public String getPropertyAsString(Resource subject,Property prop)<newline46mondego>   {<newline46mondego>   RDFNode object=getProperty(subject,prop);<newline46mondego>   return object==null?null:object.toString();<newline46mondego>   }<newline46mondego><newline46mondego>(...)<newline46mondego>String s1=getPropertyAsString(P,onto.hasFirstName);<newline46mondego>String s2=getPropertyAsString(P,onto.hasLastName);<newline46mondego>(...)<newline46mondego>"
"10344splitHere46","12227254splitHere46","prepare()"
"10345splitHere46","12227254splitHere46","prepare()"
"10346splitHere46","12227254splitHere46","propertyModel"
"10347splitHere46","12227254splitHere46","SortConstraint"
"10348splitHere46","12227254splitHere46","public void prepare(int startIndex, int endIndex, List<SortConstraint> sortConstraints) {<newline46mondego>  this.selection = dataSource.getRange(startIndex, endIndex);<newline46mondego>  this.indexFrom = startIndex;<newline46mondego>}<newline46mondego>"
"10349splitHere46","12227254splitHere46","properyModel"
"10350splitHere46","12227254splitHere46","PropertyModel propertyModel = sortConstraints.get(0).getPropertyModel();<newline46mondego>"
"10351splitHere46","12227288splitHere46","imageData"
"10352splitHere46","12227288splitHere46","int"
"10353splitHere46","12227288splitHere46","BufferedImage image = ImageIO.read(imageFile);<newline46mondego>  int width = image.getWidth();<newline46mondego>  int height = image.getHeight();<newline46mondego>  int[] imageData = new int[width * height * image.getColorModel().getNumComponents()];<newline46mondego>  imageData = image.getData().getPixels(0, 0, width, height, imageData);<newline46mondego>"
"10354splitHere46","12227326splitHere46","@One"
"10355splitHere46","12227326splitHere46","@One"
"10356splitHere46","12227326splitHere46","bind(IMyOwn.class).annotatedWith(One.class).to(IMyOwn.class);<newline46mondego>"
"10357splitHere46","12227326splitHere46","DefaultMyOwn"
"10358splitHere46","12227371splitHere46","providers"
"10359splitHere46","12227371splitHere46","conf/play.plugins"
"10360splitHere46","12227371splitHere46","1500:com.typesafe.plugin.CommonsMailerPlugin<newline46mondego>10000:be.objectify.deadbolt.DeadboltPlugin<newline46mondego>10005:service.PaUserServicePlugin<newline46mondego>10040:providers.PaUsernamePasswordAuthProvider<newline46mondego>"
"10361splitHere46","12227371splitHere46","conf/play-authenticate/smtp.conf"
"10362splitHere46","12227381splitHere46","if(id.equals(<doubleQuotes46>btn1<doubleQuotes46>)){<newline46mondego>    iv.setImageResource(R.drawable.image1);<newline46mondego>}<newline46mondego>"
"10363splitHere46","12227381splitHere46","=="
"10364splitHere46","12227409splitHere46","<var name=<doubleQuotes46>blocchiBean<doubleQuotes46> class=<doubleQuotes46>com.infoone.siglo.viewbeans.BlocchiBean<doubleQuotes46> /><newline46mondego>"
"10365splitHere46","12227409splitHere46","package com.infoone.siglo.viewbeans;<newline46mondego>//imports<newline46mondego>public class BlocchiBean implements Serializable {<newline46mondego>"
"10366splitHere46","12227688splitHere46","locationListener"
"10367splitHere46","12227688splitHere46","BackgroundService"
"10368splitHere46","12227688splitHere46","public class BackgroundService extends Service implements LocationListener {}<newline46mondego>"
"10369splitHere46","12227688splitHere46","public class BackgroundService extends Service {<newline46mondego>    private LocationListener locationListener = new LocationListener() {};<newline46mondego>}<newline46mondego>"
"10370splitHere46","12227870splitHere46",".split(<doubleQuotes46><doubleQuotes46>)"
"10371splitHere46","12227870splitHere46","String str = arr[i];<newline46mondego>char[] letters = str.toCharArray();<newline46mondego><newline46mondego>boolean secondLetterIsVowel = letters[1] == 'a'<newline46mondego>                           || letters[1] == 'e'<newline46mondego>                           || letters[1] == 'i'<newline46mondego>                           || letters[1] == 'o'<newline46mondego>                           || letters[1] == 'u';<newline46mondego>for(char letter : letters) {<newline46mondego>    if(secondLetterIsVowel) {<newline46mondego>        inputField.append(<doubleQuotes46> \n<doubleQuotes46> + letter);<newline46mondego>    }<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"10372splitHere46","12228081splitHere46","static"
"10373splitHere46","12228081splitHere46","class"
"10374splitHere46","12228081splitHere46","object"
"10375splitHere46","12228081splitHere46","finish()"
"10376splitHere46","12228081splitHere46","object"
"10377splitHere46","12228081splitHere46","static"
"10378splitHere46","12228081splitHere46","class"
"10379splitHere46","12228081splitHere46","object"
"10380splitHere46","12228081splitHere46","object"
"10381splitHere46","12228081splitHere46","class"
"10382splitHere46","12228120splitHere46","IF"
"10383splitHere46","12228120splitHere46","IF"
"10384splitHere46","12228120splitHere46","Field"
"10385splitHere46","12228120splitHere46","Arrays.asList(auditMapArray)"
"10386splitHere46","12228120splitHere46","Map<Long, String> attfieldMap = null;<newline46mondego>attfieldMap = view.getNameMap(form);<newline46mondego><newline46mondego>List<Field> oldValues = new ArrayList<Field>();<newline46mondego>if (itemId != 0) {<newline46mondego><newline46mondego>    Item dom = getRecord();<newline46mondego><newline46mondego>    Map<FormField, Object> tempValues = dom.getValues();<newline46mondego><newline46mondego>    for (Map.Entry<FormField, Object> values : tempValues<newline46mondego>            .entrySet()) {<newline46mondego>        Field oldFld = new Field();<newline46mondego>        Form form = (Form) values.getKey();<newline46mondego><newline46mondego>        if (attfieldMap.get(form.getField().getId()) != null) {<newline46mondego>            oldFld.setKey(attfieldMap.get(form.getField()<newline46mondego>                    .getId()));<newline46mondego>            oldFld.setValue(values.getValue());<newline46mondego><newline46mondego>            oldValues.add(oldFld);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>List<Field> otherFields = new ArrayList<Field>();<newline46mondego>Field [] auditMapArray = new Field[oldValue.size()];<newline46mondego>int index;<newline46mondego>for (Map.Entry<Long, String> attfieldEntry : attfieldMap.entrySet()) {<newline46mondego>    // Mandates to declare within loop<newline46mondego>    Field attributeFld = new Field;<newline46mondego><newline46mondego>    attributeFld.setKey(attfieldEntry.getValue());<newline46mondego>    attributeFld.setValue(String.valueOf(attfieldEntry.getKey()));<newline46mondego><newline46mondego>    index = oldValues.indexOf(attributeFld);<newline46mondego>    if (index > 0) {<newline46mondego>        auditMapArray[index] = attributeFld;<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        System.err.println(attributeFld + <doubleQuotes46> not found in oldValues<doubleQuotes46>);<newline46mondego>        otherFields.add(attributeFld);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>List<Field> auditMap = Arrays.asList(auditMapArray);<newline46mondego>auditMap.addAll(otherFields);<newline46mondego>"
"10387splitHere46","12228131splitHere46","grant codeBase <doubleQuotes46><code base><doubleQuotes46> {<newline46mondego>  permission <type> <doubleQuotes46><target><doubleQuotes46>, <doubleQuotes46><actions><doubleQuotes46>;<newline46mondego>  permission <type> <doubleQuotes46><target><doubleQuotes46>, <doubleQuotes46><actions><doubleQuotes46>;<newline46mondego>  ...<newline46mondego>};<newline46mondego><newline46mondego>For eg. <newline46mondego>grant codeBase <doubleQuotes46>http://geosim.cs.vt.edu/geosim/-<doubleQuotes46> {<newline46mondego>  permission java.lang.RuntimePermission <doubleQuotes46>modifyThreadGroup<doubleQuotes46>;<newline46mondego>  ...<newline46mondego>};<newline46mondego>"
"10388splitHere46","12228188splitHere46","final DoubleBuffer buffer = cacheBuffer.asDoubleBuffer();<newline46mondego>final double[] copy = new double[buffer.remaining()];<newline46mondego>buffer.get(copy);<newline46mondego>"
"10389splitHere46","12228188splitHere46","array"
"10390splitHere46","12228326splitHere46","doStop"
"10391splitHere46","12228326splitHere46","NEW"
"10392splitHere46","12228326splitHere46","STARTING"
"10393splitHere46","12228326splitHere46","stop()"
"10394splitHere46","12228326splitHere46","NEW"
"10395splitHere46","12228326splitHere46","terminated"
"10396splitHere46","12228326splitHere46","terminated"
"10397splitHere46","12228326splitHere46","STARTING"
"10398splitHere46","12228326splitHere46","stopping"
"10399splitHere46","12228326splitHere46","stopping"
"10400splitHere46","12228326splitHere46","finally"
"10401splitHere46","12228326splitHere46","stop"
"10402splitHere46","12228326splitHere46","executeListeners"
"10403splitHere46","12228326splitHere46","Listener"
"10404splitHere46","12228326splitHere46","Service.Listener"
"10405splitHere46","12228326splitHere46","Listener"
"10406splitHere46","12228326splitHere46","Service"
"10407splitHere46","12228326splitHere46","failed"
"10408splitHere46","12228326splitHere46","stopping"
"10409splitHere46","12228326splitHere46","terminated"
"10410splitHere46","12228326splitHere46","Service.State"
"10411splitHere46","12228326splitHere46","Service"
"10412splitHere46","12228326splitHere46","Listener"
"10413splitHere46","12228326splitHere46","terminated"
"10414splitHere46","12228326splitHere46","Service"
"10415splitHere46","12228326splitHere46","RUNNING"
"10416splitHere46","12228326splitHere46","if (from == STARTING)"
"10417splitHere46","12228326splitHere46","stopping"
"10418splitHere46","12228326splitHere46","failed"
"10419splitHere46","12228406splitHere46","protected"
"10420splitHere46","12228406splitHere46","public"
"10421splitHere46","12228406splitHere46","MapTile"
"10422splitHere46","12228416splitHere46","grant codeBase <doubleQuotes46><code base><doubleQuotes46> { <newline46mondego>   permission <type> <doubleQuotes46><target><doubleQuotes46>, <doubleQuotes46><actions><doubleQuotes46>; <newline46mondego>   permission <type> <doubleQuotes46><target><doubleQuotes46>, <doubleQuotes46><actions><doubleQuotes46>; <newline46mondego>   ... <newline46mondego>}; <newline46mondego><newline46mondego>For eg. <newline46mondego>grant codeBase <doubleQuotes46>http://geosim.cs.vt.edu/geosim/-<doubleQuotes46> { <newline46mondego>  java.util.PropertyPermission <doubleQuotes46>java.io.tmpdir<doubleQuotes46>, <doubleQuotes46>read<doubleQuotes46>;<newline46mondego>  ... <newline46mondego>}; <newline46mondego>"
"10423splitHere46","12228431splitHere46","of"
"10424splitHere46","12228431splitHere46","myMap = Maps.newHashMap(ImmutableMap.of(k1, v1, k2, v2...));<newline46mondego>"
"10425splitHere46","12228431splitHere46","ImmutableMap.Builder"
"10426splitHere46","12228431splitHere46","myMap = Maps.newHashMap(new ImmutableMap.Builder<K, V>()<newline46mondego>                   .put(k1, v1) //One k-v pair <newline46mondego>                   .putAll(otherMap) //From other Map<newline46mondego>                   .put(Maps.immutableEntry(k2, v3)) //From a Map Entry<newline46mondego>                   ...<newline46mondego>                   .build());<newline46mondego>"
"10427splitHere46","12228447splitHere46","criteria.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY);"
"10428splitHere46","12228465splitHere46","java -jar /home/Alison/Programs/jaxb-ri-2.2.6/lib/jaxb-xjc.jar -b xmlSchema.xjb -d src -p com.q1labs.qa.xmlgenerator.model.xmlclasses xmlSchema.xsd"
"10429splitHere46","12228536splitHere46","<doubleQuotes46>type<doubleQuotes46>: <doubleQuotes46>Multipolygon<doubleQuotes46><newline46mondego>"
"10430splitHere46","12228536splitHere46","List<Polygon>"
"10431splitHere46","12228536splitHere46","Polygon"
"10432splitHere46","12228536splitHere46","List<Coordinate>"
"10433splitHere46","12228536splitHere46","Coordinate"
"10434splitHere46","12228536splitHere46","List<List<List<double>>>"
"10435splitHere46","12228536splitHere46","class Location {<newline46mondego>    private double _lat;<newline46mondego>    private double _long;<newline46mondego><newline46mondego>    public Location(double lat, double long) { _lat = lat; _long = long }<newline46mondego><newline46mondego>    public static Location fromJSONArray(JSONArray json) {<newline46mondego>        int n = json.length();<newline46mondego>        if(n != 2) throw new IllegalArgumentException('json');<newline46mondego><newline46mondego>        return new Location(json.getDouble(0), json.getDouble(1));<newline46mondego>    }<newline46mondego>}<newline46mondego>class Polygon : List<Location> {<newline46mondego>    public static Polygon fromJSONArray(JSONArray json) {<newline46mondego>        int n = json.length();<newline46mondego>        Polygon p = new Polygon();<newline46mondego>        for(int i = 0; i < n; i++) {<newline46mondego>            p.add(Location.fromJSONArray(json.getJSONArray(i)));<newline46mondego>        }<newline46mondego>        return polygon;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private List<Polygon> parseLists(JSONArray nestedList) throws JSONException<newline46mondego>{<newline46mondego>    List<Polygon> polygons = new ArrayList<Polygon>();<newline46mondego>    int n = json.length();<newline46mondego>    for(int i = 0; i < n; i++) {<newline46mondego>        polygons.add(Polygon.fromJSONArray(json.getJSONArray(i)));<newline46mondego>    }<newline46mondego>    return polygons;<newline46mondego>}<newline46mondego>"
"10436splitHere46","12228568splitHere46","+"
"10437splitHere46","12228568splitHere46","+"
"10438splitHere46","12228568splitHere46","+"
"10439splitHere46","12228568splitHere46","@string"
"10440splitHere46","12228599splitHere46","AFragmentTabDB aFDB;<newline46mondego>"
"10441splitHere46","12228599splitHere46","AFragmentTabDB aFDB = new AFragmentTabDB();<newline46mondego>"
"10442splitHere46","12228606splitHere46","Collection"
"10443splitHere46","12228606splitHere46","Set"
"10444splitHere46","12228606splitHere46","List"
"10445splitHere46","12228606splitHere46","HashMap"
"10446splitHere46","12228606splitHere46","Collection"
"10447splitHere46","12228606splitHere46","transient"
"10448splitHere46","12228606splitHere46","Collection"
"10449splitHere46","12228606splitHere46","Set"
"10450splitHere46","12228606splitHere46","List"
"10451splitHere46","12228640splitHere46","byte[]"
"10452splitHere46","12228640splitHere46","Icon"
"10453splitHere46","12228640splitHere46","setIcon()"
"10454splitHere46","12228640splitHere46","Image"
"10455splitHere46","12228640splitHere46","ColorConvertOp"
"10456splitHere46","12228640splitHere46","import java.awt.Color;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.GraphicsConfiguration;<newline46mondego>import java.awt.GraphicsDevice;<newline46mondego>import java.awt.GraphicsEnvironment;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.awt.image.ColorConvertOp;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego>import javax.swing.Icon;<newline46mondego>import javax.swing.ImageIcon;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JToggleButton;<newline46mondego>import javax.swing.Timer;<newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>/**<newline46mondego> * @see http://stackoverflow.com/a/12228640/230513<newline46mondego> * @see http://stackoverflow.com/a/7935040/230513<newline46mondego> */<newline46mondego>public class GrayIcons extends JPanel {<newline46mondego><newline46mondego>    private List<Icon> list = new ArrayList<Icon>();<newline46mondego>    private List<JToggleButton> buttons = new ArrayList<JToggleButton>();<newline46mondego>    private Timer timer = new Timer(1000, new ActionListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            update();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    public GrayIcons() {<newline46mondego>        this.setLayout(new GridLayout(1, 0));<newline46mondego>        list.add(getGray(UIManager.getIcon(<doubleQuotes46>OptionPane.errorIcon<doubleQuotes46>)));<newline46mondego>        list.add(getGray(UIManager.getIcon(<doubleQuotes46>OptionPane.informationIcon<doubleQuotes46>)));<newline46mondego>        list.add(getGray(UIManager.getIcon(<doubleQuotes46>OptionPane.warningIcon<doubleQuotes46>)));<newline46mondego>        list.add(getGray(UIManager.getIcon(<doubleQuotes46>OptionPane.questionIcon<doubleQuotes46>)));<newline46mondego>        for (Icon icon : list) {<newline46mondego>            JToggleButton jtb = new JToggleButton(icon);<newline46mondego>            buttons.add(jtb);<newline46mondego>            this.add(jtb);<newline46mondego>        }<newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego><newline46mondego>    private void update() {<newline46mondego>        Collections.shuffle(list);<newline46mondego>        int index = 0;<newline46mondego>        for (JToggleButton b : buttons) {<newline46mondego>            b.setIcon(list.get(index++));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @see http://stackoverflow.com/q/5830533/230513<newline46mondego>     * @see http://stackoverflow.com/a/3106550/230513<newline46mondego>     */<newline46mondego>    private Icon getGray(Icon icon) {<newline46mondego>        final int w = icon.getIconWidth();<newline46mondego>        final int h = icon.getIconHeight();<newline46mondego>        GraphicsEnvironment ge =<newline46mondego>            GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>        GraphicsDevice gd = ge.getDefaultScreenDevice();<newline46mondego>        GraphicsConfiguration gc = gd.getDefaultConfiguration();<newline46mondego>        BufferedImage image = gc.createCompatibleImage(w, h);<newline46mondego>        Graphics2D g2d = image.createGraphics();<newline46mondego>        g2d.setPaint(new Color(0x00f0f0f0));<newline46mondego>        g2d.fillRect(0, 0, w, h);<newline46mondego>        icon.paintIcon(null, g2d, 0, 0);<newline46mondego>        BufferedImage gray = new BufferedImage(w, h, BufferedImage.TYPE_BYTE_GRAY);<newline46mondego>        ColorConvertOp op = new ColorConvertOp(<newline46mondego>            image.getColorModel().getColorSpace(),<newline46mondego>            gray.getColorModel().getColorSpace(), null);<newline46mondego>        op.filter(image, gray);<newline46mondego>        return new ImageIcon(gray);<newline46mondego>    }<newline46mondego><newline46mondego>    private void display() {<newline46mondego>        JFrame f = new JFrame(<doubleQuotes46>GrayIcons<doubleQuotes46>);<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(this);<newline46mondego>        f.pack();<newline46mondego>        f.setLocationRelativeTo(null);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new GrayIcons().display();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"10457splitHere46","12228697splitHere46","Arrays.sort()"
"10458splitHere46","12228697splitHere46","Collections.sort()"
"10459splitHere46","12228697splitHere46","Collections"
"10460splitHere46","12228796splitHere46","signed_request"
"10461splitHere46","12228916splitHere46","try<newline46mondego>{<newline46mondego>     UIManager.setLookAndFeel(<doubleQuotes46>com.sun.java.swing.plaf.gtk.GTKLookAndFeel<doubleQuotes46>);<newline46mondego>}<newline46mondego>catch (ClassNotFoundException e)<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>catch (UnsupportedLookAndFeelException e)<newline46mondego>{<newline46mondego><newline46mondego>}<newline46mondego>"
"10462splitHere46","12229129splitHere46","public void paint(java.awt.Graphics g){ <newline46mondego>    resize(400,400); <newline46mondego>}; <newline46mondego>"
"10463splitHere46","12229129splitHere46","validate()"
"10464splitHere46","12229129splitHere46","JFrame"
"10465splitHere46","12229151splitHere46","Classloader cl = getClass().getClassloader();<newline46mondego>properties.load(cl.getResourceAsStream(configFileName))<newline46mondego>"
"10466splitHere46","12229151splitHere46","Bootstrap<newline46mondego>      |<newline46mondego>   System<newline46mondego>      |<newline46mondego>   Common<newline46mondego>    /     \<newline46mondego>Webapp1   Webapp2 ... <newline46mondego>"
"10467splitHere46","12229193splitHere46","ArrayList"
"10468splitHere46","12229216splitHere46","ArrayList<CarbonFootprint> myCarbonList = new ArrayList<CarbonFootprint>();<newline46mondego>CarbonFootprint myCarbon1 = new Car(150332.00);<newline46mondego>myCarbonList.add(myCarbon1);<newline46mondego>CarbonFootprint myCarbon2 = new Car(13434.00);<newline46mondego>myCarbonList.add(myCarbon2);<newline46mondego>"
"10469splitHere46","12229216splitHere46","for (CarbonFootprint footPrint: myCarbonList) {<newline46mondego>    System.out.printf(<doubleQuotes46>My Car emits %.2f pounds per year\n<doubleQuotes46>, footPrint.getCarbonFootprint());<newline46mondego>}<newline46mondego>"
"10470splitHere46","12229387splitHere46","blabla"
"10471splitHere46","12229387splitHere46","0<newline46mondego>"
"10472splitHere46","12229387splitHere46","JPanel"
"10473splitHere46","12229387splitHere46","ArrayList"
"10474splitHere46","12229387splitHere46","0"
"10475splitHere46","12229437splitHere46","new HttpGet(<doubleQuotes46>URI...<doubleQuotes46>)"
"10476splitHere46","12229437splitHere46","HttpGet someGet new HttpGet();<newline46mondego>someGet.setURI(new URI(url));<newline46mondego>"
"10477splitHere46","12229480splitHere46","FileOutputStream out1 = new FileOutputStream(fileOut);<newline46mondego>CipherOutputStream out2 = new CipherOutputStream(out1, encryptCipher);<newline46mondego>ObjectOutputStream out3 = new ObjectOutputStream(out2);<newline46mondego>out3.writeObject(moduleList);<newline46mondego>"
"10478splitHere46","12229480splitHere46","FileInputStream in1 = new FileInputStream(fileIn);<newline46mondego>CipherInputStream in2 = new CipherInputStream(in1, decryptCipher);<newline46mondego>ObjectInputStream in3 = new ObjectInputStream(in2);<newline46mondego>moduleList = (Set<String>)in3.readObject()<newline46mondego>"
"10479splitHere46","12229485splitHere46","<html xmlns:old=<doubleQuotes46>old:namespace<doubleQuotes46>><newline46mondego> <head><newline46mondego>  <meta property=<doubleQuotes46>og:type<doubleQuotes46> content=<doubleQuotes46>webcontent<doubleQuotes46>/><newline46mondego> </head><newline46mondego> <view>Some View</view><newline46mondego> <body><newline46mondego>   The Body here.<newline46mondego> </body><newline46mondego></html><newline46mondego>"
"10480splitHere46","12229485splitHere46","<xsl:stylesheet version=<doubleQuotes46>1.0<doubleQuotes46> xmlns:xsl=<doubleQuotes46>http://www.w3.org/1999/XSL/Transform<doubleQuotes46><newline46mondego> xmlns:h=<doubleQuotes46>some:h<doubleQuotes46> xmlns:old=<doubleQuotes46>old:namespace<doubleQuotes46> xmlns:new=<doubleQuotes46>new:new<doubleQuotes46><newline46mondego> exclude-result-prefixes=<doubleQuotes46>h new old<doubleQuotes46>><newline46mondego> <xsl:output method=<doubleQuotes46>xml<doubleQuotes46> omit-xml-declaration=<doubleQuotes46>yes<doubleQuotes46> indent=<doubleQuotes46>yes<doubleQuotes46>/><newline46mondego> <xsl:strip-space elements=<doubleQuotes46>*<doubleQuotes46>/><newline46mondego><newline46mondego> <xsl:variable name=<doubleQuotes46>vnsH<doubleQuotes46> select=<doubleQuotes46>document('')/*/namespace::h<doubleQuotes46>/><newline46mondego> <xsl:variable name=<doubleQuotes46>vnsNew<doubleQuotes46> select=<doubleQuotes46>document('')/*/namespace::new<doubleQuotes46>/><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>*<doubleQuotes46>><newline46mondego>  <xsl:element name=<doubleQuotes46>{name()}<doubleQuotes46> namespace=<doubleQuotes46>{namespace-uri()}<doubleQuotes46>><newline46mondego>   <xsl:copy-of select=<doubleQuotes46>namespace::*[not(name()='old')]<doubleQuotes46>/><newline46mondego>   <xsl:if test=<doubleQuotes46>namespace::old<doubleQuotes46>><newline46mondego>     <xsl:copy-of select=<doubleQuotes46>$vnsNew<doubleQuotes46>/><newline46mondego>   </xsl:if><newline46mondego>   <xsl:apply-templates select=<doubleQuotes46>@*|node()<doubleQuotes46>/><newline46mondego>  </xsl:element><newline46mondego> </xsl:template><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>@*<doubleQuotes46>><newline46mondego>  <xsl:attribute name=<doubleQuotes46>{name()}<doubleQuotes46> namespace=<doubleQuotes46>{namespace-uri()}<doubleQuotes46>><newline46mondego>    <xsl:value-of select=<doubleQuotes46>.<doubleQuotes46>/><newline46mondego>  </xsl:attribute><newline46mondego> </xsl:template><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>node()[not(self::*)]<doubleQuotes46>><newline46mondego>     <xsl:copy/><newline46mondego> </xsl:template><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>view<doubleQuotes46>/><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>/*<doubleQuotes46>><newline46mondego>  <xsl:element name=<doubleQuotes46>{name()}<doubleQuotes46>><newline46mondego>   <xsl:copy-of select=<doubleQuotes46>namespace::*[not(name()='old')]|$vnsH<doubleQuotes46>/><newline46mondego>   <xsl:if test=<doubleQuotes46>namespace::old<doubleQuotes46>><newline46mondego>     <xsl:copy-of select=<doubleQuotes46>$vnsNew<doubleQuotes46>/><newline46mondego>   </xsl:if><newline46mondego>   <xsl:apply-templates select=<doubleQuotes46>@*|node()<doubleQuotes46>/><newline46mondego>  </xsl:element><newline46mondego> </xsl:template><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>head|body<doubleQuotes46>><newline46mondego>  <xsl:element name=<doubleQuotes46>h:{name()}<doubleQuotes46> namespace=<doubleQuotes46>some:h<doubleQuotes46>><newline46mondego>    <xsl:copy-of select=<doubleQuotes46>namespace::*[not(name()='old')]<doubleQuotes46>/><newline46mondego>    <xsl:if test=<doubleQuotes46>namespace::old<doubleQuotes46>><newline46mondego>     <xsl:copy-of select=<doubleQuotes46>$vnsNew<doubleQuotes46>/><newline46mondego>    </xsl:if><newline46mondego>    <xsl:apply-templates select=<doubleQuotes46>node()|@*<doubleQuotes46>/><newline46mondego>  </xsl:element><newline46mondego> </xsl:template><newline46mondego></xsl:stylesheet><newline46mondego>"
"10481splitHere46","12229485splitHere46","<html xmlns:h=<doubleQuotes46>some:h<doubleQuotes46> xmlns:new=<doubleQuotes46>new:new<doubleQuotes46>><newline46mondego>   <h:head><newline46mondego>      <meta property=<doubleQuotes46>og:type<doubleQuotes46> content=<doubleQuotes46>webcontent<doubleQuotes46>/><newline46mondego>   </h:head><newline46mondego>   <h:body><newline46mondego>   The Body here.<newline46mondego> </h:body><newline46mondego></html><newline46mondego>"
"10482splitHere46","12229485splitHere46","<view>"
"10483splitHere46","12229485splitHere46","<head>"
"10484splitHere46","12229485splitHere46","<body>"
"10485splitHere46","12229485splitHere46","<h:head>"
"10486splitHere46","12229485splitHere46","<h:body>"
"10487splitHere46","12229485splitHere46","old"
"10488splitHere46","12229485splitHere46","new"
"10489splitHere46","12229524splitHere46","boolean[]"
"10490splitHere46","12229524splitHere46","Boolean[]"
"10491splitHere46","12229524splitHere46","null"
"10492splitHere46","12229524splitHere46","Arrays.fill"
"10493splitHere46","12229524splitHere46","boolean[]"
"10494splitHere46","12229524splitHere46","boolean[] seats = new boolean[10];<newline46mondego>Arrays.fill(seats, true);<newline46mondego>"
"10495splitHere46","12229600splitHere46","ArithmeticException"
"10496splitHere46","12229600splitHere46","RuntimeException"
"10497splitHere46","12229600splitHere46","Exception"
"10498splitHere46","12229600splitHere46","RuntimeException"
"10499splitHere46","12229600splitHere46","Throwable"
"10500splitHere46","12229600splitHere46","RuntimeException"
"10501splitHere46","12229705splitHere46","Arrays.fill(seats[enterSeat], true);<newline46mondego>"
"10502splitHere46","12229705splitHere46","seats[enterSeat] = true;<newline46mondego>"
"10503splitHere46","12229771splitHere46","InputHidden"
"10504splitHere46","12229771splitHere46","<p:ajax event=<doubleQuotes46>change<doubleQuotes46> listener=<doubleQuotes46>#{ConsBean.proccesCatSelection}<doubleQuotes46> <newline46mondego>process=<doubleQuotes46>crit inputHiddenId<doubleQuotes46> update=<doubleQuotes46>:list,:crits<doubleQuotes46> /><newline46mondego>"
"10505splitHere46","12229771splitHere46","p:ajax"
"10506splitHere46","12229836splitHere46","(\d+)(d)(\d+)(([-+*/])(\d+))"
"10507splitHere46","12229836splitHere46","x"
"10508splitHere46","12229836splitHere46","(\d+)(d)([\dx]+)(([\+\-\*\/])(\d+))"
"10509splitHere46","12229836splitHere46","^"
"10510splitHere46","12229836splitHere46","$"
"10511splitHere46","12229836splitHere46","Pattern.compile(<doubleQuotes46>^(\\d+)(d)(\\d+)(([-+*/])(\\d+))*$<doubleQuotes46>);<newline46mondego>"
"10512splitHere46","12230348splitHere46","public class Triangle {<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        int a = Integer.parseInt(args[0]);<newline46mondego>        int b = Integer.parseInt(args[1]);<newline46mondego>        int c = Integer.parseInt(args[2]);<newline46mondego>        boolean isTriangle;<newline46mondego><newline46mondego>        isTriangle = (a + b >= c) || (b + c >= a) || (a + c >= b);<newline46mondego>        System.out.println(isTriangle);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"10513splitHere46","12230526splitHere46","View"
"10514splitHere46","12230526splitHere46","true"
"10515splitHere46","12230526splitHere46","onItemLongClick()"
"10516splitHere46","12230526splitHere46","View"
"10517splitHere46","12230526splitHere46","Views"
"10518splitHere46","12230526splitHere46","false"
"10519splitHere46","12230526splitHere46","Views"
"10520splitHere46","12230549splitHere46","FacesContext"
"10521splitHere46","12230549splitHere46","HttpServletRequest origRequest = (HttpServletRequest)FacesContext.getExternalContext().getRequest();<newline46mondego>"
"10522splitHere46","12230549splitHere46","HttpServletRequest"
"10523splitHere46","12230549splitHere46","getRequestURL()"
"10524splitHere46","12230549splitHere46","getScheme"
"10525splitHere46","12230549splitHere46","getServerName"
"10526splitHere46","12230549splitHere46","getServerPort"
"10527splitHere46","12230549splitHere46","getContextPath"
"10528splitHere46","12230549splitHere46","getServletPath"
"10529splitHere46","12230549splitHere46","getPathInfo"
"10530splitHere46","12230549splitHere46","getQueryString"
"10531splitHere46","12230599splitHere46","try catch"
"10532splitHere46","12230729splitHere46","interrupted"
"10533splitHere46","12230729splitHere46","interrupt"
"10534splitHere46","12230729splitHere46","extend Thread"
"10535splitHere46","12230729splitHere46","@Override  <newline46mondego>public void interrupt(){  <newline46mondego>   try{  <newline46mondego>      socket.close();  <newline46mondego>   }  <newline46mondego>   finally{  <newline46mondego>     super.interrupt();  <newline46mondego>   }  <newline46mondego>}   <newline46mondego>"
"10536splitHere46","12230729splitHere46","run"
"10537splitHere46","12230729splitHere46","@Override  <newline46mondego>public void run(){  <newline46mondego><newline46mondego>    while(!Thread.currentThread().isInterrupted){    <newline46mondego>       //Do your work<newline46mondego><newline46mondego>    }  <newline46mondego>}    <newline46mondego>"
"10538splitHere46","12230729splitHere46","catch"
"10539splitHere46","12230729splitHere46","InterruptedException"
"10540splitHere46","12230808splitHere46",".class"
"10541splitHere46","12230808splitHere46","0xCAFEBABE"
"10542splitHere46","12230808splitHere46","1768713317"
"10543splitHere46","12230808splitHere46","0x696C6C65"
"10544splitHere46","12230808splitHere46","<doubleQuotes46>ille<doubleQuotes46>"
"10545splitHere46","12230861splitHere46","curl_setopt($ch, CURLOPT_POSTFIELDS, array(<doubleQuotes46>xmldata=<doubleQuotes46> . $fields_string));<newline46mondego>"
"10546splitHere46","12230861splitHere46","Curl error: SSL read: error:00000000:lib(0):func(0):reason(0), errno 104"
"10547splitHere46","12230861splitHere46","$ch = curl_init();<newline46mondego>curl_setopt($ch, CURLOPT_URL, $url);<newline46mondego>curl_setopt($ch, CURLOPT_POST, 1);<newline46mondego>curl_setopt($ch, CURLOPT_POSTFIELDS, array(<doubleQuotes46>xmldata=<doubleQuotes46> . $fields_string));<newline46mondego>curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);<newline46mondego>curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);<newline46mondego>$result = curl_exec($ch);<newline46mondego><newline46mondego>if(curl_errno($ch))<newline46mondego>    echo 'Curl error: ' . curl_error($ch);<newline46mondego>else<newline46mondego>    echo 'the return is ' . $result;<newline46mondego>"
"10548splitHere46","12230921splitHere46","String"
"10549splitHere46","12230921splitHere46","std::u16string"
"10550splitHere46","12230921splitHere46","std::basic_string"
"10551splitHere46","12230921splitHere46","std::wstring_convert<std::codecvt_utf8_utf16<char16_t>, char16_t> convert;<newline46mondego>std::string converted = convert.to_bytes(u<doubleQuotes46>HELLO, WORLD!<doubleQuotes46>);<newline46mondego>const char *bytes = converted.data();<newline46mondego>"
"10552splitHere46","12230921splitHere46","std::wstring_convert"
"10553splitHere46","12230921splitHere46","to_bytes"
"10554splitHere46","12230921splitHere46","std::codecvt_utf8_utf16"
"10555splitHere46","12230921splitHere46","u"
"10556splitHere46","12230921splitHere46","char16_t"
"10557splitHere46","12230921splitHere46","u8"
"10558splitHere46","12230921splitHere46","U"
"10559splitHere46","12230921splitHere46","data"
"10560splitHere46","12230921splitHere46","c_str"
"10561splitHere46","12231060splitHere46","String[] planets = { <doubleQuotes46>Mercury<doubleQuotes46>, <doubleQuotes46>Venus<doubleQuotes46>, <doubleQuotes46>Earth<doubleQuotes46>, <doubleQuotes46>Mars<doubleQuotes46> };<newline46mondego>int moons[] = { 0, 0, 1, 2 };<newline46mondego>"
"10562splitHere46","12231060splitHere46","if (rI >= 0 && rI < planets.length) {<newline46mondego>    question(planets[rI], moons[rI]);<newline46mondego>}<newline46mondego>"
"10563splitHere46","12231068splitHere46",">=1"
"10564splitHere46","12231068splitHere46","<=10"
"10565splitHere46","12231068splitHere46",">=0"
"10566splitHere46","12231068splitHere46","<=9"
"10567splitHere46","12231068splitHere46","seats[enterSeat-1]<newline46mondego>"
"10568splitHere46","12231068splitHere46","seats[enterSeat]<newline46mondego>"
"10569splitHere46","12231068splitHere46","int firstFree = -1;<newline46mondego>for (int j = 0 ; j != 5 ; i++) {<newline46mondego>    if (!seat[j]) {<newline46mondego>        firstFreeSeat = j;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>if (firstFreeSeat == -1) {<newline46mondego>    System.out.printl(<doubleQuotes46>Sorry!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"10570splitHere46","12231275splitHere46","UPDATE partie_l <newline46mondego>SET json = 'ex', <newline46mondego>    last_save = 'ex',<newline46mondego>    carte = 'ex' <newline46mondego>FROM partie_l <newline46mondego>    INNER JOIN carte AS b <newline46mondego>    ON partie_l.start_carte = b.hash <newline46mondego>WHERE b.json = 'ex' AND partie_l.start_joueurs = 'ex' AND partie_l.param = 'ex' <newline46mondego>"
"10571splitHere46","12231275splitHere46","UPDATE partie_l <newline46mondego>SET json = 'ex', <newline46mondego>    last_save = 'ex',<newline46mondego>    carte = 'ex' <newline46mondego>WHERE partie_l.start_joueurs = 'ex' <newline46mondego>AND partie_l.param = 'ex' <newline46mondego>AND partie_l.start_carte IN (SELECT hash FROM carte WHERE json='ex')<newline46mondego>"
"10572splitHere46","12231402splitHere46","HttpSessionListener"
"10573splitHere46","12231402splitHere46","public class YourHttpSessionListener implements HttpSessionListener {       <newline46mondego>   public void sessionCreated(HttpSessionEvent event) {<newline46mondego>   //put row in the database<newline46mondego>   }<newline46mondego><newline46mondego>   public void sessionDestroyed(HttpSessionEvent event) {<newline46mondego>     //delete the row from database     <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"10574splitHere46","12231402splitHere46","<listener><newline46mondego>    <listener-class>YourHttpSessionListener</listener-class><newline46mondego></listener><newline46mondego>"
"10575splitHere46","12231402splitHere46","servlet"
"10576splitHere46","12231402splitHere46","jsp"
"10577splitHere46","12231474splitHere46","int[][] multi = new int[5][10];<newline46mondego>"
"10578splitHere46","12231474splitHere46","int[][] multi = new int[5][];<newline46mondego>multi[0] = new int[10];<newline46mondego>multi[1] = new int[10];<newline46mondego>multi[2] = new int[10];<newline46mondego>multi[3] = new int[10];<newline46mondego>multi[4] = new int[10];<newline46mondego>"
"10579splitHere46","12231474splitHere46","int"
"10580splitHere46","12231474splitHere46","0"
"10581splitHere46","12231474splitHere46","int[][] multi = new int[][]{<newline46mondego>  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },<newline46mondego>  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },<newline46mondego>  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },<newline46mondego>  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },<newline46mondego>  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }<newline46mondego>};<newline46mondego>"
