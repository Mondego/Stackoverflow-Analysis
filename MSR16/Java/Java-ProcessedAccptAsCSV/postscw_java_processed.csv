"1splitHere46","17511086splitHere46","()"
"2splitHere46","17511086splitHere46","arrayTrofei.length;<newline46mondego>"
"3splitHere46","17511238splitHere46","public class ValueOfDemo<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        float a = Float.valueOf(<doubleQuotes46>1.5<doubleQuotes46>).floatValue();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4splitHere46","17511238splitHere46","javac ValueOfDemo.java<newline46mondego>"
"5splitHere46","17511238splitHere46","javap -c -cp . ValueOfDemo<newline46mondego>"
"6splitHere46","17511238splitHere46","public class ValueOfDemo {<newline46mondego>  public ValueOfDemo();<newline46mondego>    Code:<newline46mondego>       0: aload_0<newline46mondego>       1: invokespecial #1                  // Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>       4: return<newline46mondego><newline46mondego>  public static void main(java.lang.String[]);<newline46mondego>    Code:<newline46mondego>       0: ldc           #2                  // String 1.5<newline46mondego>       2: invokestatic  #3                  // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;<newline46mondego>       5: invokevirtual #4                  // Method java/lang/Float.floatValue:()F<newline46mondego>       8: fstore_1<newline46mondego>       9: return<newline46mondego>}<newline46mondego>"
"7splitHere46","17511238splitHere46","public class ValueOfDemo2<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        float a = Float.valueOf(<doubleQuotes46>1.5<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8splitHere46","17511238splitHere46","javac ValueOfDemo2.java<newline46mondego>"
"9splitHere46","17511238splitHere46","javap -c -cp . ValueOfDemo2<newline46mondego>"
"10splitHere46","17511238splitHere46","public class ValueOfDemo2 {<newline46mondego>  public ValueOfDemo2();<newline46mondego>    Code:<newline46mondego>       0: aload_0<newline46mondego>       1: invokespecial #1                  // Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>       4: return<newline46mondego><newline46mondego>  public static void main(java.lang.String[]);<newline46mondego>    Code:<newline46mondego>       0: ldc           #2                  // String 1.5<newline46mondego>       2: invokestatic  #3                  // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;<newline46mondego>       5: invokevirtual #4                  // Method java/lang/Float.floatValue:()F<newline46mondego>       8: fstore_1<newline46mondego>       9: return<newline46mondego>}<newline46mondego>"
"11splitHere46","17511620splitHere46","TotalPhysicalMemory<newline46mondego>6352433152<newline46mondego>"
"12splitHere46","17511924splitHere46","onPostExecute"
"13splitHere46","17511924splitHere46","onProgressUpdate"
"14splitHere46","17511924splitHere46","protected void onPostExecute(Long result) {<newline46mondego><newline46mondego> // after finishing fetching your image from URL, update the ImageView here<newline46mondego> images[i].setImageBitmap(bmp);<newline46mondego>}<newline46mondego>"
"15splitHere46","17511924splitHere46","AsyncTask"
"16splitHere46","17511924splitHere46","PublishProgress"
"17splitHere46","17511924splitHere46","AsyncTask<whatever..., Bitmaps, whatever...>() <newline46mondego>"
"18splitHere46","17511924splitHere46","publishProgress(yourBitmapObject);<newline46mondego><newline46mondego>protected void onProgressUpdate(Bitmap[] values) {<newline46mondego>  images[i].setImageBitmap(values[0]);<newline46mondego>};<newline46mondego>"
"19splitHere46","17511960splitHere46","import java.awt.FlowLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public class Gui extends JFrame {<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    private JButton uselesButton;<newline46mondego>    private JButton autoButton;<newline46mondego>    private FlowLayout layout;<newline46mondego>    private long counter = 0;<newline46mondego>    private javax.swing.Timer timer;<newline46mondego><newline46mondego>    public Gui() {<newline46mondego>        super(<doubleQuotes46>Button<doubleQuotes46>);<newline46mondego>        layout = new FlowLayout(FlowLayout.CENTER);<newline46mondego>        setLayout(layout);<newline46mondego>        setDefaultCloseOperation(3);<newline46mondego>        setSize(300, 300);<newline46mondego>        setLocationRelativeTo(null);<newline46mondego><newline46mondego>        //initialing swing timer<newline46mondego>        timer = new javax.swing.Timer(100, getButtonAction());<newline46mondego><newline46mondego>        autoButton = new JButton(<doubleQuotes46>Auto<doubleQuotes46>);<newline46mondego>        add(autoButton);<newline46mondego>        autoButton.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                if (!timer.isRunning()) {<newline46mondego>                    timer.start();<newline46mondego>                } else {<newline46mondego>                    timer.stop();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private ActionListener getButtonAction() {<newline46mondego>        ActionListener action = new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                autoButton.setText(String.format(<doubleQuotes46>Pressed %d times<doubleQuotes46>, ++counter));<newline46mondego>                if (counter > 1000) {<newline46mondego>                    timer.stop();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        return action;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args) {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new Gui().setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"20splitHere46","17511963splitHere46","lib/"
"21splitHere46","17511965splitHere46","log"
"22splitHere46","17512251splitHere46","NavigableSet"
"23splitHere46","17512251splitHere46","NavigableSet<E> subSet(E fromElement,<newline46mondego>                   boolean fromInclusive,<newline46mondego>                   E toElement,<newline46mondego>                   boolean toInclusive)<newline46mondego>"
"24splitHere46","17512251splitHere46","Collections.binarySearch()"
"25splitHere46","17512251splitHere46","NavigableMap"
"26splitHere46","17512320splitHere46","str.split(<doubleQuotes46>(?<=[a-z])(?=[A-Z])<doubleQuotes46>)<newline46mondego>"
"27splitHere46","17512334splitHere46","servlet"
"28splitHere46","17512334splitHere46","list1"
"29splitHere46","17512334splitHere46","JSP"
"30splitHere46","17512334splitHere46","dropdownlist"
"31splitHere46","17512334splitHere46","name"
"32splitHere46","17512334splitHere46","john,john,john"
"33splitHere46","17512334splitHere46","john, ken, andy"
"34splitHere46","17512334splitHere46","list<%i%>"
"35splitHere46","17512334splitHere46","select"
"36splitHere46","17512334splitHere46","JSP"
"37splitHere46","17512334splitHere46","<select name=<doubleQuotes46>list<%=i%><doubleQuotes46>  ><newline46mondego>"
"38splitHere46","17512334splitHere46","for loop"
"39splitHere46","17512334splitHere46","servlet"
"40splitHere46","17512334splitHere46","for(int i=0; i< member; i++)<newline46mondego>{<newline46mondego>    String names = request.getParameter(<doubleQuotes46>list1<doubleQuotes46>+i);<newline46mondego>    total += names + <doubleQuotes46> , <doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"41splitHere46","17512434splitHere46","private String path;<newline46mondego>private File[] images = new File(<doubleQuotes46>C:/Users/Public/Pictures/Sample Pictures<doubleQuotes46>+<doubleQuotes46>/<doubleQuotes46>).listFiles();<newline46mondego>"
"42splitHere46","17512434splitHere46","path"
"43splitHere46","17512434splitHere46","null"
"44splitHere46","17512434splitHere46","images"
"45splitHere46","17512434splitHere46","new File(path+<doubleQuotes46>/<doubleQuotes46>).listFiles();<newline46mondego>"
"46splitHere46","17512434splitHere46","new File(null+<doubleQuotes46>/<doubleQuotes46>).listFiles();<newline46mondego>"
"47splitHere46","17512434splitHere46","new File(<doubleQuotes46>null/<doubleQuotes46>).listFiles();<newline46mondego>"
"48splitHere46","17512434splitHere46","images = new File(path+<doubleQuotes46>/<doubleQuotes46>).listFiles();<newline46mondego>"
"49splitHere46","17512434splitHere46","path"
"50splitHere46","17512434splitHere46","getPath"
"51splitHere46","17512463splitHere46","for (byte b : bytes) {<newline46mondego>    System.out.println(b & 0xFF);<newline46mondego>}<newline46mondego>"
"52splitHere46","17512538splitHere46","java"
"53splitHere46","17512538splitHere46","Sparrow.class"
"54splitHere46","17512538splitHere46","package foo.bar;<newline46mondego><newline46mondego>public class Baz {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"55splitHere46","17512538splitHere46","foo.bar.Baz"
"56splitHere46","17512538splitHere46","java foo.bar.Baz<newline46mondego>"
"57splitHere46","17512538splitHere46","foo/bar/Baz.class"
"58splitHere46","17512538splitHere46","/hello/world"
"59splitHere46","17512538splitHere46","/hello/world/foo/bar/Baz.class"
"60splitHere46","17512656splitHere46","public static void copy(String old, String newone, int x, int y) throws IOException {<newline46mondego>"
"61splitHere46","17512695splitHere46","add()"
"62splitHere46","17512695splitHere46","insert()"
"63splitHere46","17512695splitHere46","add()"
"64splitHere46","17512954splitHere46","m_btn = (Button)findViewById(R.id.button);<newline46mondego>        m_edt = (EditText)findViewById(R.id.type);<newline46mondego>        m_btn.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>            try {<newline46mondego>                session.send(m_edt.getText().toString());<newline46mondego>                m_edt.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>            } catch (OmegleException e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"65splitHere46","17513102splitHere46","repaint()"
"66splitHere46","17513102splitHere46","repaint()"
"67splitHere46","17513102splitHere46","((JComponent)e.getSource()).getTopLevelAncestor().repaint();<newline46mondego>"
"68splitHere46","17513102splitHere46","ActionListener"
"69splitHere46","17513102splitHere46","JPanel"
"70splitHere46","17513114splitHere46","Listener"
"71splitHere46","17513114splitHere46","SWT.KeyUp"
"72splitHere46","17513114splitHere46","SWT.CR"
"73splitHere46","17513114splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    Display display = new Display();<newline46mondego>    final Shell shell = new Shell(display);<newline46mondego>    shell.setText(<doubleQuotes46>StackOverflow<doubleQuotes46>);<newline46mondego>    shell.setLayout(new GridLayout(1, true));<newline46mondego><newline46mondego>    final Combo combo = new Combo(shell, SWT.NONE);<newline46mondego><newline46mondego>    combo.addListener(SWT.KeyUp, new Listener()<newline46mondego>    {<newline46mondego>        @Override<newline46mondego>        public void handleEvent(Event arg0)<newline46mondego>        {<newline46mondego>            if(arg0.character == SWT.CR)<newline46mondego>                MessageDialog.openInformation(shell, <doubleQuotes46>Input<doubleQuotes46>, <doubleQuotes46>You entered: <doubleQuotes46> + combo.getText());<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego>    while (!shell.isDisposed())<newline46mondego>    {<newline46mondego>        if (!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"74splitHere46","17513270splitHere46","GridData#exclude"
"75splitHere46","17513270splitHere46","Control#setVisible(boolean)"
"76splitHere46","17513270splitHere46","Composite"
"77splitHere46","17513270splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    Display display = new Display();<newline46mondego>    final Shell shell = new Shell(display);<newline46mondego>    shell.setText(<doubleQuotes46>StackOverflow<doubleQuotes46>);<newline46mondego>    shell.setLayout(new GridLayout(1, true));<newline46mondego><newline46mondego>    Button hideButton = new Button(shell, SWT.PUSH);<newline46mondego>    hideButton.setText(<doubleQuotes46>Toggle<doubleQuotes46>);<newline46mondego><newline46mondego>    final Composite content = new Composite(shell, SWT.NONE);<newline46mondego>    content.setLayout(new GridLayout(3, false));<newline46mondego><newline46mondego>    final GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);<newline46mondego>    content.setLayoutData(data);<newline46mondego><newline46mondego>    for(int i = 0; i < 10; i++)<newline46mondego>    {<newline46mondego>        new Label(content, SWT.NONE).setText(<doubleQuotes46>Label <doubleQuotes46> + i);<newline46mondego>    }<newline46mondego><newline46mondego>    hideButton.addListener(SWT.Selection, new Listener()<newline46mondego>    {<newline46mondego>        @Override<newline46mondego>        public void handleEvent(Event arg0)<newline46mondego>        {<newline46mondego>            data.exclude = !data.exclude;<newline46mondego>            content.setVisible(!data.exclude);<newline46mondego>            content.getParent().pack();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego>    while (!shell.isDisposed())<newline46mondego>    {<newline46mondego>        if (!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"78splitHere46","17513348splitHere46","++"
"79splitHere46","17513348splitHere46","count"
"80splitHere46","17513348splitHere46","count"
"81splitHere46","17513348splitHere46","doGet()"
"82splitHere46","17513348splitHere46","count"
"83splitHere46","17513348splitHere46","doGet()"
"84splitHere46","17513504splitHere46","registerListener(SensorEventListener listener, Sensor sensor, int rate, Handler handler)"
"85splitHere46","17513504splitHere46","Handler"
"86splitHere46","17513504splitHere46","HandlerThread"
"87splitHere46","17513504splitHere46","Looper"
"88splitHere46","17513504splitHere46","Handler"
"89splitHere46","17513504splitHere46","Looper.quit()"
"90splitHere46","17513613splitHere46","setSize()"
"91splitHere46","17513676splitHere46","public int getBalance(int baseValue) {<newline46mondego>    String[] cols = new String[] {<newline46mondego>        <doubleQuotes46>SUM(<doubleQuotes46> + TRANSACTION_AMOUNT + <doubleQuotes46>)<doubleQuotes46><newline46mondego>    };<newline46mondego>    try {<newline46mondego>        Cursor data = SqlDatabase.query(DATABASE_TABLE, cols, null, null, null, null, null);<newline46mondego>        return data.getInt(data.getColumnIndexOrThrow(cols[0])) + baseValue;<newline46mondego>    } catch(IllegalArgumentException e) {<newline46mondego>        Log.e(<doubleQuotes46>MyApp<doubleQuotes46>, <doubleQuotes46>Couldn't get balance<doubleQuotes46>, e);<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"92splitHere46","17513676splitHere46","SUM(..)"
"93splitHere46","17513676splitHere46","expenseOrIncome"
"94splitHere46","17513696splitHere46","EditText"
"95splitHere46","17513696splitHere46","TextWatcher"
"96splitHere46","17513696splitHere46","addTextChangedListener(TextWatcher)"
"97splitHere46","17513696splitHere46","TextWatcher"
"98splitHere46","17513696splitHere46","afterTextChanged(Editable)"
"99splitHere46","17513696splitHere46","EditText"
"100splitHere46","17513696splitHere46","public class Main extends Activity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>        Button button = new Button(this);<newline46mondego>        button.setText(<doubleQuotes46>Show Dialog<doubleQuotes46>);<newline46mondego>        button.setOnClickListener(new View.OnClickListener() {<newline46mondego>            @Override<newline46mondego>            public void onClick(View view) {<newline46mondego>                showDialog();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        setContentView(button);<newline46mondego>    }<newline46mondego><newline46mondego>    private void showDialog(){<newline46mondego>        // Create the field to show in the Dialog:<newline46mondego>        final EditText field = new EditText(this);<newline46mondego><newline46mondego>        // Now create the Dialog itself.<newline46mondego>        final AlertDialog dialog = new AlertDialog.Builder(this)<newline46mondego>                .setMessage(<doubleQuotes46>Enter something<doubleQuotes46>)<newline46mondego>                .setPositiveButton(<doubleQuotes46>O.K.<doubleQuotes46>, new DialogInterface.OnClickListener() {<newline46mondego>                    @Override<newline46mondego>                    public void onClick(DialogInterface dialogInterface, int i) {<newline46mondego>                        Toast.makeText(Main.this, <doubleQuotes46>Submitted with \<doubleQuotes46><doubleQuotes46>+field.getText().toString()+<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>,<newline46mondego>                                Toast.LENGTH_LONG).show();<newline46mondego>                    }<newline46mondego>                }).setCancelable(true).setView(field)<newline46mondego>                .create();<newline46mondego><newline46mondego>        // The TextWatcher will look for changes to the Dialogs field.<newline46mondego>        field.addTextChangedListener(new TextWatcher() {<newline46mondego>            @Override public void beforeTextChanged(CharSequence c, int i, int i2, int i3) {}<newline46mondego>            @Override public void onTextChanged(CharSequence c, int i, int i2, int i3) {}<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void afterTextChanged(Editable editable) {<newline46mondego>                // Will be called AFTER text has been changed.<newline46mondego>                if (editable.toString().length() == 0){<newline46mondego>                    dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(false);<newline46mondego>                } else {<newline46mondego>                    dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(true);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        // Show the Dialog:<newline46mondego>        dialog.show();<newline46mondego>        // The button is initially deactivated, as the field is initially empty:<newline46mondego>        dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(false);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"101splitHere46","17513986splitHere46","for ( Object object : objects ) {<newline46mondego>     query.append(<doubleQuotes46> t.field = <doubleQuotes46>);<newline46mondego>     query.append( object.field ); <newline46mondego>}<newline46mondego>"
"102splitHere46","17514080splitHere46","public class DimensionPrinter<newline46mondego>    public void printDimension(Dimension d) {<newline46mondego>        System.out.println(<doubleQuotes46>Here's the dimension width : <doubleQuotes46> + d.getWidth());<newline46mondego>        System.out.println(<doubleQuotes46>Here's the dimension height : <doubleQuotes46> + d.getHeight());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"103splitHere46","17514080splitHere46","public class Main {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Dimension dimension = new Dimension(800, 600);<newline46mondego>        DimensionPrinter printer = new DimensionPrinter();<newline46mondego>        printer.printDimension(dimension);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"104splitHere46","17514130splitHere46","chat(1)"
"105splitHere46","17514130splitHere46","yo"
"106splitHere46","17514130splitHere46","chat(2)"
"107splitHere46","17514130splitHere46","flag==0"
"108splitHere46","17514130splitHere46","dude"
"109splitHere46","17514130splitHere46","dude"
"110splitHere46","17514130splitHere46","yo"
"111splitHere46","17514130splitHere46","Hence the output is `yo dude dude yo`<newline46mondego>"
"112splitHere46","17514199splitHere46","String genRand(int length){<newline46mondego>   Random rand=new Random();<newline46mondego>   String possibleLetters = <doubleQuotes46>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ.<doubleQuotes46>;   <newline46mondego>   StringBuilder sb = new StringBuilder(length);<newline46mondego>   for(int i = 0; i < length; i++) <newline46mondego>      sb.append(possibleLetters.charAt(rand.nextInt(possibleLetters.length())));<newline46mondego>   return sb.toString();<newline46mondego>}<newline46mondego>"
"113splitHere46","17514199splitHere46","possibleLetters"
"114splitHere46","17514199splitHere46","\"
"115splitHere46","17514216splitHere46","Comparable"
"116splitHere46","17514216splitHere46","Comparator"
"117splitHere46","17514216splitHere46","Collections.sort(arrayList,sorter)"
"118splitHere46","17514216splitHere46","public class Player{<newline46mondego>     private String name;<newline46mondego>     private Integer score;<newline46mondego><newline46mondego>     //getters and setters here<newline46mondego>}<newline46mondego>"
"119splitHere46","17514216splitHere46","Player"
"120splitHere46","17514216splitHere46","public class ScoreSort implements Comparator<Player>{<newline46mondego>    public int compareTo(Player first, Player second){<newline46mondego>            // implement sorting logic here<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"121splitHere46","17514216splitHere46","Collections.sort(playerList, new ScoreSort())"
"122splitHere46","17514577splitHere46","glDepthFunc(GL_LESS);<newline46mondego>glEnable(GL_DEPTH_TEST);<newline46mondego>"
"123splitHere46","17514577splitHere46","glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);<newline46mondego>"
"124splitHere46","17514631splitHere46","Properties"
"125splitHere46","17514631splitHere46","windowstate"
"126splitHere46","17514671splitHere46","customerList[0] = keyboard.nextLine();<newline46mondego>customerList[1] = keyboard.nextLine();<newline46mondego>"
"127splitHere46","17514678splitHere46","<doubleQuotes46>^(\d+:\<doubleQuotes46>([^\<doubleQuotes46>\\\\]|\\\\.)*\<doubleQuotes46>(,(?!$)|$))+$<doubleQuotes46><newline46mondego>"
"128splitHere46","17514678splitHere46","Map<Integer, String>"
"129splitHere46","17514678splitHere46","private static final Pattern TOTAL_STRING_PATTERN =<newline46mondego>    Pattern.compile(<doubleQuotes46>^(\d+:\<doubleQuotes46>([^\<doubleQuotes46>\\\\]|\\\\.)*\<doubleQuotes46>(,(?!$)|$))+$<doubleQuotes46>);<newline46mondego>private static final Pattern PARTIAL_STRING_PATTERN =<newline46mondego>    Pattern.compile(<doubleQuotes46>(\d+):\<doubleQuotes46>((?:[^\<doubleQuotes46>\\\\]|\\\\.)*)\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>public Map<Integer, String> parse(final String input) {<newline46mondego>    if(! TOTAL_STRING_PATTERN.matcher(input).matches()) {<newline46mondego>        throw new IllegalArgumentException();<newline46mondego>    }<newline46mondego>    final Map<Integer, String> ret = new HashMap<Integer, String>();<newline46mondego>    final Matcher m = PARTIAL_STRING_PATTERN.matcher(input);<newline46mondego>    while(m.find()) {<newline46mondego>        final Integer id = Integer.valueOf(m.group(1));<newline46mondego>        final String description = StringEscapeUtils.unescapeJava(m.group(2));<newline46mondego>        ret.put(id, description);<newline46mondego>    }<newline46mondego>    return Collections.unmodifiableMap(ret);<newline46mondego>}<newline46mondego>"
"130splitHere46","17514678splitHere46","int"
"131splitHere46","17514901splitHere46","i"
"132splitHere46","17514901splitHere46","i"
"133splitHere46","17514901splitHere46","1"
"134splitHere46","17514901splitHere46","j = i++ + i++ + ++i;<newline46mondego>// first step, post increment<newline46mondego>j = i++ + i++ + ++i;<newline46mondego>//  ^^^<newline46mondego>j = 1   + i++ + ++i;<newline46mondego>// now, i is 2, and another post increment:<newline46mondego>j = i++ + i++ + ++i;<newline46mondego>//  ^^^^^^^^^<newline46mondego>j = 1   + 2   + ++i;<newline46mondego>// now, i is 3 and we have a pre increment:<newline46mondego>j = i++ + i++ + ++i;<newline46mondego>//  ^^^^^^^^^^^^^^^^<newline46mondego>j = 1   + 2   +   4;<newline46mondego>j = 7;<newline46mondego>"
"135splitHere46","17514936splitHere46","import org.apache.hadoop.mapreduce.lib.input.FileSplit;<newline46mondego>"
"136splitHere46","17514936splitHere46","import org.apache.hadoop.mapred.FileSplit;<newline46mondego>"
"137splitHere46","17514936splitHere46","o.a.h.mapreduce.lib.input.FileSplit"
"138splitHere46","17514936splitHere46","o.a.h.mapred.FileSplit"
"139splitHere46","17515043splitHere46","progressDialog.dismiss()"
"140splitHere46","17515043splitHere46","progressDialog"
"141splitHere46","17515043splitHere46","pDialog"
"142splitHere46","17515138splitHere46","chars[i] = chars[i++];<newline46mondego>"
"143splitHere46","17515138splitHere46","chars[i] = chars[i];<newline46mondego>i = i + 1;<newline46mondego>"
"144splitHere46","17515138splitHere46","PT.substring(1)<newline46mondego>"
"145splitHere46","17515149splitHere46","PictureFile picturefile = new PictureFile();<newline46mondego>"
"146splitHere46","17515247splitHere46","java.lang.Object"
"147splitHere46","17515373splitHere46","ByteBuffer buf=ByteBuffer.wrap(bytes)<newline46mondego>long myLong=buf.readLong();<newline46mondego>double myDbl=buf.readDouble();<newline46mondego>int myInt=buf.readInt();<newline46mondego>"
"148splitHere46","17515373splitHere46","DataInputStream"
"149splitHere46","17515373splitHere46","DataInputStream dis=new DataInputStream(new ByteArrayInputStream(bytes));<newline46mondego>long myLong=dis.readLong();<newline46mondego>double myDbl=dis.readDouble();<newline46mondego>int myInt=dis.readInt();<newline46mondego>"
"150splitHere46","17515373splitHere46","getChar()"
"151splitHere46","17515373splitHere46","buf"
"152splitHere46","17515373splitHere46","StringBuilder sb=new StringBuilder();<newline46mondego>for(int i=0; i<numChars; i++){ //set numChars as needed<newline46mondego>    sb.append(buf.readChar());<newline46mondego>}<newline46mondego>String myString=sb.toString();<newline46mondego>"
"153splitHere46","17515373splitHere46","readLoop:while(true){<newline46mondego>    try{<newline46mondego>        sb.append(buf.readChar());<newline46mondego>    catch(BufferUnderflowException e){<newline46mondego>        break readLoop;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"154splitHere46","17515501splitHere46","xml-apis-2.10.0.jar"
"155splitHere46","17515530splitHere46","String"
"156splitHere46","17515530splitHere46","\u000b"
"157splitHere46","17515548splitHere46","ObjectOutputStream"
"158splitHere46","17515548splitHere46","Serializable"
"159splitHere46","17515548splitHere46","FileOutputStream fos = new FileOutputStream(<doubleQuotes46>my.save<doubleQuotes46>);<newline46mondego>ObjectOutputStream oos = new ObjectOutputStream(fos);<newline46mondego>oos.writeObject(colorsArray);<newline46mondego>"
"160splitHere46","17515548splitHere46","FileInputStream fis = new FileInputStream(<doubleQuotes46>my.save<doubleQuotes46>);<newline46mondego>ObjectInputStream ois = new ObjectInputStream(fis);<newline46mondego>colorsArray = (Color[]) ois.readObject();<newline46mondego>"
"161splitHere46","17515567splitHere46","jeditorpane1.getHighlighter().addHighlight(start, end, <newline46mondego>             new DefaultHighlighter.DefaultHighlightPainter(Color.red));<newline46mondego>"
"162splitHere46","17515664splitHere46","if (searchQ.contains(child.first_name.toLowerCase()) <newline46mondego>    || searchQ.matches(child.last_name.toLowerCase()) {<newline46mondego><newline46mondego>     id = child.id;<newline46mondego>     addChildToList(child); <newline46mondego><newline46mondego>     }<newline46mondego>"
"163splitHere46","17515664splitHere46","if (child.first_name.toLowerCase().contains(searchQ) <newline46mondego>        || searchQ.matches(child.last_name.toLowerCase()) {<newline46mondego><newline46mondego>         id = child.id;<newline46mondego>         addChildToList(child); <newline46mondego><newline46mondego>         }<newline46mondego>"
"164splitHere46","17515714splitHere46","http://maps.google.com/staticmap?center=40,26&zoom=1&size=150x112&maptype=satellite&key=ABQIAAAAgb5KEVTm54vkPcAkU9xOvBR30EG5jFWfUzfYJTWEkWk2p04CHxTGDNV791-cU95kOnweeZ0SsURYSA&format=jpg<newline46mondego>"
"165splitHere46","17515714splitHere46","import java.io.FileOutputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.OutputStream;<newline46mondego>import java.net.URL;<newline46mondego><newline46mondego>public class SaveImageFromUrl {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        String imageUrl = <doubleQuotes46>http://maps.google.com/staticmap?center=40,26&zoom=1&size=150x112&maptype=satellite&key=ABQIAAAAgb5KEVTm54vkPcAkU9xOvBR30EG5jFWfUzfYJTWEkWk2p04CHxTGDNV791-cU95kOnweeZ0SsURYSA&format=jpg<doubleQuotes46>;<newline46mondego>        String destinationFile = <doubleQuotes46>image.jpg<doubleQuotes46>;<newline46mondego><newline46mondego>        saveImage(imageUrl, destinationFile);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void saveImage(String imageUrl, String destinationFile) throws IOException {<newline46mondego>        URL url = new URL(imageUrl);<newline46mondego>        InputStream is = url.openStream();<newline46mondego>        OutputStream os = new FileOutputStream(destinationFile);<newline46mondego><newline46mondego>        byte[] b = new byte[2048];<newline46mondego>        int length;<newline46mondego><newline46mondego>        while ((length = is.read(b)) != -1) {<newline46mondego>            os.write(b, 0, length);<newline46mondego>        }<newline46mondego><newline46mondego>        is.close();<newline46mondego>        os.close();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"166splitHere46","17515727splitHere46","(ns riak.core<newline46mondego>  (:import [com.basho.riak.client IRiakClient RiakFactory RiakException]<newline46mondego>           [com.basho.riak.client.http.response RiakIORuntimeException]))<newline46mondego><newline46mondego>(set! *warn-on-reflection* true)<newline46mondego>;; (def client (RiakFactory/pbcClient))<newline46mondego>(def client (RiakFactory/httpClient))<newline46mondego><newline46mondego>(defn alive?<newline46mondego>  <doubleQuotes46>Is Riak client alive? Returns true or false, unlike `.ping`.<doubleQuotes46><newline46mondego>  [^IRiakClient client]<newline46mondego>  (try<newline46mondego>    (.ping client)<newline46mondego>    true<newline46mondego>    (catch RiakException e false)<newline46mondego>    (catch RiakIORuntimeException e false)))<newline46mondego>"
"167splitHere46","17515727splitHere46","riak.core> (alive? client)<newline46mondego>false<newline46mondego>"
"168splitHere46","17515765splitHere46","if (array[x + k][y - k1] == 0)<newline46mondego>    OpenButtons(x + k, y - k1);<newline46mondego>"
"169splitHere46","17515765splitHere46","if (x + k >= 0 && x + k < array.length &&<newline46mondego>    y - k1 >= 0 && y - k1 < array[x + k].length) { ...<newline46mondego>"
"170splitHere46","17515765splitHere46","if"
"171splitHere46","17515765splitHere46","try-catch"
"172splitHere46","17515765splitHere46","StackOverflowException"
"173splitHere46","17515765splitHere46","private void OpenButtons(int x, int y) {<newline46mondego>    Queue<Point> toOpen = new LinkedBlockingQueue<>();<newline46mondego>    toOpen.add(new Point(x, y));<newline46mondego>    array[x][y] = -1;<newline46mondego>    while (!toOpen.isEmpty()) {<newline46mondego>        Point p = toOpen.poll();<newline46mondego>        x = p.x;<newline46mondego>        y = p.y;<newline46mondego>        for (int k = -1; k < 2; k++) {<newline46mondego>            for (int k1 = 1; k1 >= -1; k1--) {<newline46mondego>                if (x + k >= 0 && x + k < array.length && y - k1 >= 0<newline46mondego>                        && y - k1 < array[x + k].length)<newline46mondego>                    if (array[x + k][y - k1] == 0) {<newline46mondego>                        array[x + k][y - k1] = -1;<newline46mondego>                        toOpen.add(new Point(x + k, y - k1));<newline46mondego>                    }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"174splitHere46","17515843splitHere46","setOnLongClickListener(new OnLongClickListener() {<newline46mondego>        @Override<newline46mondego>        public boolean onLongClick(View arg0) {<newline46mondego>            switch (arg0.getId()) {<newline46mondego><newline46mondego>                case R.id.bFOR:<newline46mondego>                    try {<newline46mondego>                        dataOutputStream.writeBytes(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>                        //dataOutputStream.writeBytes(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>                    } catch (UnknownHostException e) {//catch and<newline46mondego>                        outputText(e.getMessage());//display errors<newline46mondego>                    } catch (IOException e) {//catch and<newline46mondego>                        outputText(e.getMessage());//display errors<newline46mondego>                    }<newline46mondego><newline46mondego>                    break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"175splitHere46","17515882splitHere46","Package.getPackage"
"176splitHere46","17515882splitHere46","ClassLoader.getPackage"
"177splitHere46","17516035splitHere46","char[] chars = {'a', 'b', 'c'};<newline46mondego>System.out.println(chars.toString());<newline46mondego>// prints something like: [C@18c28a<newline46mondego>System.out.println(new String(chars));<newline46mondego>// prints abc<newline46mondego>"
"178splitHere46","17516035splitHere46","toString()"
"179splitHere46","17516060splitHere46","[^A-Z]"
"180splitHere46","17516060splitHere46","[^A-Za-z]"
"181splitHere46","17516085splitHere46","write.flush()"
"182splitHere46","17516085splitHere46","PrintWriter(Writer x)"
"183splitHere46","17516088splitHere46","ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(path + <doubleQuotes46>/clanovi.tmp<doubleQuotes46>));<newline46mondego>    out.writeObject(clanovi);<newline46mondego>    out.close();<newline46mondego>    new File(path + <doubleQuotes46>/clanovi.tmp<doubleQuotes46>).renameTo(new File(path + <doubleQuotes46>/clanovi.ovi<doubleQuotes46>));<newline46mondego>"
"184splitHere46","17516088splitHere46","load"
"185splitHere46","17516104splitHere46","<= 7"
"186splitHere46","17516104splitHere46","<= 9"
"187splitHere46","17516104splitHere46","for (int i = 1; i <= 7; i++)<newline46mondego>"
"188splitHere46","17516104splitHere46","for (int i = 1; i <= lines; i++)<newline46mondego>"
"189splitHere46","17516150splitHere46","myGUI"
"190splitHere46","17516150splitHere46","JFrame"
"191splitHere46","17516150splitHere46","setTitle()"
"192splitHere46","17516150splitHere46","myGUI m = new myGUI();<newline46mondego>m.setTitle(<doubleQuotes46>The Title<doubleQuotes46>);<newline46mondego>m.setVisible(true);<newline46mondego>"
"193splitHere46","17516150splitHere46","new myGUI().setVisible(true);"
"194splitHere46","17516621splitHere46","char"
"195splitHere46","17516621splitHere46","Scanner"
"196splitHere46","17516621splitHere46","findInLine"
"197splitHere46","17516621splitHere46","Scanner sc = new Scanner(<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>    char ch = sc.findInLine(<doubleQuotes46>.<doubleQuotes46>).charAt(0);<newline46mondego>    System.out.println(ch); // prints <doubleQuotes46>a<doubleQuotes46><newline46mondego>    System.out.println(sc.next()); // prints <doubleQuotes46>bc<doubleQuotes46><newline46mondego>"
"198splitHere46","17516621splitHere46","char"
"199splitHere46","17516621splitHere46","Scanner"
"200splitHere46","17516621splitHere46","next()"
"201splitHere46","17516621splitHere46","Scanner sc = new Scanner(<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>    sc.useDelimiter(<doubleQuotes46><doubleQuotes46>);<newline46mondego>    while (sc.hasNext()) {<newline46mondego>        System.out.println(sc.next());<newline46mondego>    } // prints <doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46><newline46mondego>"
"202splitHere46","17516868splitHere46","ArrayList<String> players = new ArrayList<String>(); //declare it outside of the function<newline46mondego><newline46mondego>private TextView createNewTextView (String text){<newline46mondego>    final LayoutParams lparams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);<newline46mondego>    final TextView newTextView = new TextView(this);<newline46mondego><newline46mondego>    newTextView.setLayoutParams(lparams);<newline46mondego>    newTextView.setText(text);<newline46mondego>    players.add(text);<newline46mondego>    return newTextView;<newline46mondego>}<newline46mondego><newline46mondego>public void zacniIgro (View v){<newline46mondego>    Intent zacniIgro = new Intent (getApplicationContext(), Igra.class);<newline46mondego>    zacniIgro.putStringArrayListExtra(<doubleQuotes46>players<doubleQuotes46>, players);<newline46mondego>    startActivity(zacniIgro);<newline46mondego>}<newline46mondego>"
"203splitHere46","17516868splitHere46","@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_igra);<newline46mondego>    Intent data = getIntent();<newline46mondego>    ArrayList<String> players = data.getStringArrayListExtra(<doubleQuotes46>players<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"204splitHere46","17516889splitHere46","Set"
"205splitHere46","17516889splitHere46","Set"
"206splitHere46","17516889splitHere46","Set"
"207splitHere46","17516889splitHere46","HashSet"
"208splitHere46","17516889splitHere46","java.util.Set"
"209splitHere46","17516889splitHere46","Set"
"210splitHere46","17516896splitHere46","for (int i = 1; i == tNumberOfTeams;i++)<newline46mondego>"
"211splitHere46","17516896splitHere46","for (int i = 0; i < tNumberOfTeams;i++)<newline46mondego>"
"212splitHere46","17516998splitHere46","window.addMouseListener(object : MouseAdapter() { <newline46mondego>    override fun mouseClicked(e : MouseEvent) { <newline46mondego>    // ... <newline46mondego>}<newline46mondego>"
"213splitHere46","17516998splitHere46","val keyListener = object : KeyAdapter() { <newline46mondego>    override fun keyPressed(keyEvent : KeyEvent) { <newline46mondego>    // ... <newline46mondego>} <newline46mondego>"
"214splitHere46","17517158splitHere46","Guitar"
"215splitHere46","17517158splitHere46","GuitarTest"
"216splitHere46","17517158splitHere46","GuitarTest"
"217splitHere46","17517158splitHere46","Guitar"
"218splitHere46","17517158splitHere46","Guitar"
"219splitHere46","17517160splitHere46","URLClassLoader"
"220splitHere46","17517160splitHere46","URLClassLoader ucl2 = new URLClassLoader( new URL[] { new URL( <doubleQuotes46>file://d:/temp/<doubleQuotes46>)}, urlClassLoader);<newline46mondego>Class<?> clazz = ucl2.loadClass(<doubleQuotes46>com.notmycompany.CustomProcessor<doubleQuotes46>);<newline46mondego>"
"221splitHere46","17517177splitHere46","%APPDATA%"
"222splitHere46","17517177splitHere46","~/Library/Application Support"
"223splitHere46","17517177splitHere46","~\Library\Preferences"
"224splitHere46","17517177splitHere46","~\.Chrome"
"225splitHere46","17517414splitHere46","KeyFactory keyFactory = KeyFactory.getInstance(<doubleQuotes46>RSA<doubleQuotes46>, <doubleQuotes46>BC<doubleQuotes46>);<newline46mondego><newline46mondego>RSAPrivateKeySpec privateKeySpec = new RSAPrivateKeySpec(<newline46mondego>    new BigInteger(<doubleQuotes46>d46f473a2d746537de2056ae3092c451<doubleQuotes46>, 16),<newline46mondego>    new BigInteger(<doubleQuotes46>57791d5430d593164082036ad8b29fb1<doubleQuotes46>, 16)<newline46mondego>);<newline46mondego><newline46mondego>RSAPrivateKey privateKey = (RSAPrivateKey) <newline46mondego>       keyFactory.generatePrivate(privateKeySpec);<newline46mondego>"
"226splitHere46","17517531splitHere46","int k = 0;<newline46mondego>"
"227splitHere46","17517531splitHere46","int k = i;<newline46mondego>"
"228splitHere46","17517794splitHere46","// if tree doesn't have root elements<newline46mondego>    if(rootNode == null) {<newline46mondego>        rootNode = new Node<T>(key,data);<newline46mondego>        rootNode.leftChild = null;<newline46mondego>        rootNode.rightChild = null;<newline46mondego>    }<newline46mondego>"
"229splitHere46","17517794splitHere46","this.rootNode = new Node<T>(key,data);"
"230splitHere46","17517973splitHere46","grid"
"231splitHere46","17517973splitHere46","int[]"
"232splitHere46","17517973splitHere46","int"
"233splitHere46","17517973splitHere46","49"
"234splitHere46","17517973splitHere46","[]"
"235splitHere46","17517973splitHere46","int[] grid<newline46mondego>"
"236splitHere46","17517973splitHere46","[]"
"237splitHere46","17517973splitHere46","int"
"238splitHere46","17517973splitHere46","int[]"
"239splitHere46","17517973splitHere46","grid"
"240splitHere46","17517973splitHere46","int"
"241splitHere46","17517973splitHere46","[]"
"242splitHere46","17517973splitHere46","grid"
"243splitHere46","17517973splitHere46","int"
"244splitHere46","17517973splitHere46","49"
"245splitHere46","17517973splitHere46","Integer"
"246splitHere46","17517973splitHere46","int"
"247splitHere46","17517973splitHere46","Integer"
"248splitHere46","17517973splitHere46","int"
"249splitHere46","17518161splitHere46","// Get the current working directory<newline46mondego>String workingDir = System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>);<newline46mondego>// Display workingDir in a Swing message dialog window<newline46mondego>JOptionPane.showMessageDialog(null, workingDir);<newline46mondego>"
"250splitHere46","17518161splitHere46","workingDir"
"251splitHere46","17518235splitHere46","ParseInt"
"252splitHere46","17518235splitHere46","System.out.println(Integer.toString(11, 16));<newline46mondego>"
"253splitHere46","17518235splitHere46","B"
"254splitHere46","17518235splitHere46","int"
"255splitHere46","17518275splitHere46","db = new DatabaseHelper(this.getApplicationContext()); <newline46mondego>"
"256splitHere46","17518298splitHere46","public class GameBoard {<newline46mondego>int columnCount = 7;<newline46mondego>int rowCount = 7;<newline46mondego>int spaceCount = rowCount*columnCount;<newline46mondego>ship s;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class ship {<newline46mondego>    private String name;<newline46mondego>    private void setName(String newName) {<newline46mondego>        name = newName;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"257splitHere46","17518298splitHere46","GameBoard gb = new GameBoard();<newline46mondego>gb.s = new ship();<newline46mondego>"
"258splitHere46","17518574splitHere46","private A instance = new A();<newline46mondego><newline46mondego>public A() {<newline46mondego>}<newline46mondego>"
"259splitHere46","17518574splitHere46","new A()"
"260splitHere46","17518574splitHere46","private A instance;<newline46mondego><newline46mondego>public A() {<newline46mondego>    this.instance = new A();<newline46mondego>}<newline46mondego>"
"261splitHere46","17518574splitHere46","A()"
"262splitHere46","17518574splitHere46","private static A instance = new A();<newline46mondego>"
"263splitHere46","17518574splitHere46","private static A instance;<newline46mondego><newline46mondego>static {<newline46mondego>    A.instance = new A();<newline46mondego>}<newline46mondego>"
"264splitHere46","17518574splitHere46","this.instance"
"265splitHere46","17518574splitHere46","A.instance"
"266splitHere46","17518574splitHere46","instance"
"267splitHere46","17518621splitHere46","public ClienteDAO(Session session) {<newline46mondego>     this.session = session;<newline46mondego>}<newline46mondego>"
"268splitHere46","17518621splitHere46","// call the class<newline46mondego>Clientes clientes = new Clientes();<newline46mondego>ClienteDAO clientedao = new ClienteDAO(session);<newline46mondego>"
"269splitHere46","17518806splitHere46","String input = <doubleQuotes46>:-) :) :o) :] :3 :c) :> =] 8) =) :} :^)<doubleQuotes46>;<newline46mondego>String[] similies = input.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>for (String simili : similies) {<newline46mondego>    System.out.println(simili);<newline46mondego>}<newline46mondego>"
"270splitHere46","17518806splitHere46",":-)<newline46mondego>:)<newline46mondego>:o)<newline46mondego>:]<newline46mondego>:3<newline46mondego>:c)<newline46mondego>:><newline46mondego>=]<newline46mondego>8)<newline46mondego>=)<newline46mondego>:}<newline46mondego>:^)<newline46mondego>"
"271splitHere46","17518806splitHere46","input.split(<doubleQuotes46>\\s+<doubleQuotes46>); <newline46mondego>"
"272splitHere46","17518806splitHere46","public static void main(final String[] args) throws Exception {<newline46mondego>    BufferedReader fileReader = new BufferedReader(new FileReader(<doubleQuotes46>emoticon.txt<doubleQuotes46>));<newline46mondego>    String line = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    while ((line = fileReader.readLine()) != null) {<newline46mondego>        line = line.replaceAll(<doubleQuotes46>Â<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        line = line.replace(<doubleQuotes46><doubleQuotes46> + ((char) 160), <doubleQuotes46> <doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>line: <doubleQuotes46> + line);<newline46mondego>        String[] icons = line.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>        for (String icon : icons) {<newline46mondego>            System.out.println(icon);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>=======================<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"273splitHere46","17518836splitHere46","while( (1 + 1) == 2) { <newline46mondego>"
"274splitHere46","17519042splitHere46","@Transaction"
"275splitHere46","17519042splitHere46","org.hibernate.transaction=DEBUG <newline46mondego>org.hibernate.engine.transaction=DEBUG # Hibernate 4.2.2 or higher<newline46mondego>"
"276splitHere46","17519164splitHere46","float[] quadCoords = {<newline46mondego>        100, 100, -500,<newline46mondego>        300, 100, -500,<newline46mondego>        300, 300, -500,<newline46mondego>        100, 300, -500<newline46mondego>};<newline46mondego>"
"277splitHere46","17519410splitHere46","System.out.print(Arrays.toString(sortedArray));<newline46mondego>"
"278splitHere46","17519429splitHere46","measPoints"
"279splitHere46","17519429splitHere46","MeasurementUnit"
"280splitHere46","17519429splitHere46","measPoints"
"281splitHere46","17519429splitHere46","MeasurementUnit"
"282splitHere46","17519429splitHere46","MeasurementUnit"
"283splitHere46","17519429splitHere46","public class MeasurementUnit(){ <newline46mondego>      ...<newline46mondego>          private String name = <doubleQuotes46>test<doubleQuotes46>;<newline46mondego>          private List<MeasurementPoint> measPoints;<newline46mondego><newline46mondego>          for(MeasurementPoint measPoint:measPoints){<newline46mondego><newline46mondego>         someOtherMethod(measPoint.getXXX(), measPoint.getYYYY(),name);<newline46mondego><newline46mondego>       }<newline46mondego>    } <newline46mondego>"
"284splitHere46","17519448splitHere46","LinearVelocity().y"
"285splitHere46","17519448splitHere46","0"
"286splitHere46","17519448splitHere46","playerBody.setLinearVelocity"
"287splitHere46","17519448splitHere46","public void run(float x) {<newline46mondego>    playerBody.setLinearVelocity(x, 0);<newline46mondego>}<newline46mondego>"
"288splitHere46","17519448splitHere46","velocity().y"
"289splitHere46","17519448splitHere46","public void run(float x) {<newline46mondego>    playerBody.setLinearVelocity(x, gravity.y);<newline46mondego>}<newline46mondego>"
"290splitHere46","17519635splitHere46","subImage(..)"
"291splitHere46","17519751splitHere46","override def saveOrUpdateAll(entities: Collection[T]){<newline46mondego>  import scala.collection.JavaConverters._<newline46mondego><newline46mondego>  val session: Session = getSession()<newline46mondego><newline46mondego>  for (entity <- entities.asScala) {<newline46mondego>      session.saveOrUpdate(entity)<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"292splitHere46","17519751splitHere46","JavaConverters"
"293splitHere46","17519751splitHere46","JavaConverters"
"294splitHere46","17519751splitHere46","Collection"
"295splitHere46","17519751splitHere46","Wrappers.JCollectionWrapper"
"296splitHere46","17519764splitHere46","public class Thing {    <newline46mondego>    public Thing(int i) { ... }<newline46mondego>        ...<newline46mondego>    }<newline46mondego>"
"297splitHere46","17519764splitHere46","public class MyThing extends Thing {<newline46mondego>    private final int arg;<newline46mondego>    public MyThing() {<newline46mondego>        super(arg = SomeOtherClass.func());<newline46mondego>        ...<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"298splitHere46","17519764splitHere46","MyThing.java:<newline46mondego>  can't reference arg before supertype constructor has been called<newline46mondego>        super(arg = SomeOtherClass.func());<newline46mondego>                 ^<newline46mondego>"
"299splitHere46","17519764splitHere46","public class MyThing extends Thing {<newline46mondego>    private final int arg;<newline46mondego><newline46mondego>    public MyThing() {<newline46mondego>        this(SomeOtherClass.func());<newline46mondego>    }<newline46mondego><newline46mondego>    private MyThing(int i) {<newline46mondego>        super(i);<newline46mondego>        arg = i;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"300splitHere46","17519904splitHere46","paintComponent(Graphics g)"
"301splitHere46","17519904splitHere46","((Graphics2D)g).rotate(degreeInRadians)"
"302splitHere46","17520526splitHere46","jinternalFrame.setClosed(true)<newline46mondego>"
"303splitHere46","17520531splitHere46","<doubleQuotes46>16:00:00.747000 +00:00:00<doubleQuotes46>"
"304splitHere46","17520531splitHere46","@Temporal(TIMESTAMP)<newline46mondego>"
"305splitHere46","17520865splitHere46","Content-Type"
"306splitHere46","17520865splitHere46","Content-Type"
"307splitHere46","17520865splitHere46","Content-Type"
"308splitHere46","17520983splitHere46","intList = new ArrayList<Integer>(Arrays.asList(intArray));<newline46mondego>"
"309splitHere46","17520983splitHere46","int[]"
"310splitHere46","17520983splitHere46","Object"
"311splitHere46","17520983splitHere46","Object"
"312splitHere46","17520983splitHere46","Integer[]"
"313splitHere46","17520983splitHere46","int[]"
"314splitHere46","17520983splitHere46","Object"
"315splitHere46","17520983splitHere46","Integer[] intArray = new Integer[] { 0, 1 };<newline46mondego>//now you're sending a Object array<newline46mondego>intList = new ArrayList<Integer>(Arrays.asList(intArray));<newline46mondego>"
"316splitHere46","17520983splitHere46","int[]"
"317splitHere46","17520983splitHere46","int[] intArray = new int[] { 0, 1 };<newline46mondego>Integer[] integerArray = new Integer[intArray.length];<newline46mondego>int i = 0;<newline46mondego>for(int intValue : intArray) {<newline46mondego>    integerArray[i++] = intValue;<newline46mondego>}<newline46mondego>intList = new ArrayList<Integer>(Arrays.asList(integerArray));<newline46mondego>"
"318splitHere46","17520983splitHere46","for"
"319splitHere46","17520983splitHere46","int[] intArray = new int[] { 0, 1 };<newline46mondego>intList = new ArrayList<Integer>();<newline46mondego>for(int intValue : intArray) {<newline46mondego>    intList.add(intValue);<newline46mondego>}<newline46mondego>"
"320splitHere46","17521007splitHere46","<style name=<doubleQuotes46>LightTheme<doubleQuotes46> parent=<doubleQuotes46>android:Theme.Light<doubleQuotes46>></style><newline46mondego><newline46mondego><style name=<doubleQuotes46>ColorsTheme<doubleQuotes46> parent=<doubleQuotes46>android:Theme.Holo<doubleQuotes46>></style><newline46mondego>"
"321splitHere46","17521074splitHere46","@Inject<newline46mondego>@Default<newline46mondego>private MemberManager memberManager;<newline46mondego><newline46mondego>@POST<newline46mondego>@Path(<doubleQuotes46>/add<doubleQuotes46>)<newline46mondego>@Produces(MediaType.APPLICATION_JSON)<newline46mondego>@Consumes(MediaType.APPLICATION_JSON)<newline46mondego>public Member add(NewMember member, @Context HttpServletRequest request, @Context HttpServletResponse response) throws MemberInvalidException {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"322splitHere46","17521074splitHere46","@AroundInvoke<newline46mondego>public Object aroundInvoke(InvocationContext ic) throws Exception {<newline46mondego>    HttpServletRequest req = getHttpServletRequest(ic);<newline46mondego>    ...<newline46mondego>    return ic.proceed();<newline46mondego>}<newline46mondego><newline46mondego>private HttpServletRequest getHttpServletRequest(InvocationContext ic) {<newline46mondego>    for (Object parameter : ic.getParameters()) {<newline46mondego>        if (parameter instanceof HttpServletRequest) {<newline46mondego>            return (HttpServletRequest) parameter;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    // ... handle no HttpRequest object.. e.g. log an error, throw an Exception or whatever<newline46mondego>"
"323splitHere46","17521367splitHere46","DecimalFormat"
"324splitHere46","17521367splitHere46","String priceString = new DecimalFormat(<doubleQuotes46>$##.##<doubleQuotes46>).format(price);<newline46mondego>"
"325splitHere46","17521367splitHere46","$15.50<newline46mondego>"
"326splitHere46","17521491splitHere46","(?<=</(div|p)>)|(?=<(div|p)>)<newline46mondego>"
"327splitHere46","17521492splitHere46","Date"
"328splitHere46","17521492splitHere46","Calendar fval = Calendar.getInstance();<newline46mondego>SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego>SimpleDateFormat tf = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>);<newline46mondego>String formattedDateAndTime = df.format(fval.getTime()) + <doubleQuotes46>T<doubleQuotes46> + tf.format(fval.getTime());<newline46mondego>System.out.println(formattedDateAndTime);<newline46mondego>"
"329splitHere46","17521492splitHere46","2013-07-08T09:51:06<newline46mondego>"
"330splitHere46","17521498splitHere46","String s = new String(<doubleQuotes46>数<doubleQuotes46>);<newline46mondego>"
"331splitHere46","17521498splitHere46","String s = new String();<newline46mondego>"
"332splitHere46","17521498splitHere46","<doubleQuotes46>\u6570<doubleQuotes46>"
"333splitHere46","17521498splitHere46","String s = new String(<doubleQuotes46>\u6570<doubleQuotes46>);<newline46mondego>"
"334splitHere46","17521563splitHere46","class Rect extends Shape<newline46mondego>"
"335splitHere46","17521563splitHere46","class Rect extends ShapeNew<newline46mondego>"
"336splitHere46","17521590splitHere46","A"
"337splitHere46","17521590splitHere46","getInstance()"
"338splitHere46","17521590splitHere46","A"
"339splitHere46","17521590splitHere46","A"
"340splitHere46","17521590splitHere46","public"
"341splitHere46","17521590splitHere46","A"
"342splitHere46","17521590splitHere46","A"
"343splitHere46","17521642splitHere46","toString"
"344splitHere46","17521642splitHere46","class theClass{<newline46mondego>    String type;<newline46mondego>    String scope;<newline46mondego><newline46mondego>    public theClass(String string1, String string2)<newline46mondego>    {<newline46mondego>        type = string1; scope = string2;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString(){<newline46mondego>      return type+<doubleQuotes46> <doubleQuotes46>+scope;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"345splitHere46","17521909splitHere46","String s = <doubleQuotes46>{ \<doubleQuotes46>15:00\<doubleQuotes46>:{\<doubleQuotes46>type\<doubleQuotes46>:1,\<doubleQuotes46>status\<doubleQuotes46>:null,\<doubleQuotes46>appointment_id\<doubleQuotes46>:null},\<doubleQuotes46>16:00\<doubleQuotes46>:{\<doubleQuotes46>type\<doubleQuotes46>:1,\<doubleQuotes46>status\<doubleQuotes46>:null,\<doubleQuotes46>appointment_id\<doubleQuotes46>:null},\<doubleQuotes46>17:00\<doubleQuotes46>:{\<doubleQuotes46>type\<doubleQuotes46>:1,\<doubleQuotes46>status\<doubleQuotes46>:null,\<doubleQuotes46>appointment_id\<doubleQuotes46>:null},\<doubleQuotes46>18:00\<doubleQuotes46>:{\<doubleQuotes46>type\<doubleQuotes46>:1,\<doubleQuotes46>status\<doubleQuotes46>:\<doubleQuotes46>1\<doubleQuotes46>,\<doubleQuotes46>appointment_id\<doubleQuotes46>:5}}<doubleQuotes46>;<newline46mondego>    try {<newline46mondego>        JSONObject jobj = new JSONObject(s);<newline46mondego>        Iterator iter = jobj.keys();<newline46mondego>        while(iter.hasNext()){   <newline46mondego>            String appointmentTime = String.valueOf(iter.next());<newline46mondego>            aRRaY.add(appointmentTime);<newline46mondego><newline46mondego>     }<newline46mondego>      Collections.sort(aRRaY); <newline46mondego>      for(String key : aRRaY){<newline46mondego>          JSONObject appointmentDetails = jobj.getJSONObject(key);<newline46mondego>          System.out.println(key +<doubleQuotes46> ----- <doubleQuotes46>+appointmentDetails);<newline46mondego>      }<newline46mondego><newline46mondego>    }<newline46mondego>    catch (JSONException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"346splitHere46","17522079splitHere46","...<newline46mondego>public CharSequence subSequence(int start, int end) {<newline46mondego>    return substring(start, end);<newline46mondego>}<newline46mondego><newline46mondego>public String substring(int start, int end) {<newline46mondego>    ...<newline46mondego>    return new String(value, start, end - start);<newline46mondego>}<newline46mondego>"
"347splitHere46","17522169splitHere46","int start = inputString.indexOf(stringToSearch);<newline46mondego>"
"348splitHere46","17522169splitHere46","int end = start+stringToSearch.length();<newline46mondego>"
"349splitHere46","17522472splitHere46","public static <T1, T2> GenericWSEndpoint<T1, T2> createSpecificEndpoint() {<newline46mondego>"
"350splitHere46","17522472splitHere46","public static <T1, T2> GenericWSEndpoint createSpecificEndpoint() {<newline46mondego>"
"351splitHere46","17522478splitHere46","package org.example.jglm;<newline46mondego><newline46mondego>public class Jglm {<newline46mondego>  public static void mix(double x, double y, Lerp lerp) {<newline46mondego>    ...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"352splitHere46","17522478splitHere46","import org.example.Jglm;<newline46mondego><newline46mondego>void someMethod() {<newline46mondego>  Jglm.mix(x,y,lerp);<newline46mondego>}<newline46mondego>"
"353splitHere46","17522478splitHere46","static"
"354splitHere46","17522478splitHere46","java.lang.Math"
"355splitHere46","17522748splitHere46","modelAttribute"
"356splitHere46","17522748splitHere46","<form>"
"357splitHere46","17522748splitHere46","... @ModelAttribute(<doubleQuotes46>job<doubleQuotes46>) ExportJob job, ...<newline46mondego>"
"358splitHere46","17522748splitHere46","exportJob"
"359splitHere46","17522748splitHere46","modelAttribute"
"360splitHere46","17522799splitHere46","found"
"361splitHere46","17522799splitHere46","false"
"362splitHere46","17522799splitHere46","true"
"363splitHere46","17522799splitHere46","found"
"364splitHere46","17522799splitHere46","List<Result> result= new ArrayList<Result>();<newline46mondego>for(ValueList data1: valueListA){<newline46mondego>    boolean found = false;<newline46mondego>    for (ValueList data2: valueListB){<newline46mondego>        Result inter= new Result();<newline46mondego>        if(data1.getLine_num==data2.getLine_num){<newline46mondego>           inter.setKey(data1.getKey());<newline46mondego>           inter.setValue(data1.getValue());<newline46mondego>           result.add(inter);<newline46mondego>           found = true;<newline46mondego>           break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    if (!found) {<newline46mondego>       result.add(...)<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"365splitHere46","17522799splitHere46","int i1 = 0;<newline46mondego>int i2 = 0;<newline46mondego>while (i1 < valueListA.size() && i2 < valueListB.size()) {<newline46mondego>   ValueList data1 = valueListA[i1];<newline46mondego>   ValueList data2 = valueListB[i2];<newline46mondego>   if (data1.getLine_num == data2.getLine_num) {<newline46mondego>      // Add the result.<newline46mondego>      i1++;<newline46mondego>      i2++;<newline46mondego>   } else if (data1.getLine_num < data2.getLine_num) {<newline46mondego>      // Add -1 because the data was not in valueListB.<newline46mondego>      i1++;<newline46mondego>   } else {<newline46mondego>      i2++;<newline46mondego>   }      <newline46mondego>}<newline46mondego>"
"366splitHere46","17522845splitHere46","float roundedNbr = Math.round(originalNbr);<newline46mondego><newline46mondego>if(roundedNbr < originalNbr) {<newline46mondego>    // We rounded down<newline46mondego>} else if (roundedNbr > originalNbr) {<newline46mondego>    // We rounded up<newline46mondego>} else {<newline46mondego>    // No rounding<newline46mondego>}<newline46mondego>"
"367splitHere46","17522897splitHere46","Optional.absent()"
"368splitHere46","17522983splitHere46","chatTabs.getSelectionModel().selectedItemProperty().addListener(<newline46mondego>new ChangeListener<Tab> {<newline46mondego>        @Override<newline46mondego>        public void changed(ObservableValue<? extends Tab> ov, Tab t, Tab t1) {<newline46mondego>            System.out.println(<doubleQuotes46>Tab Selection changed<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>);<newline46mondego>"
"369splitHere46","17522983splitHere46","selectionModel"
"370splitHere46","17522983splitHere46","selectedItem"
"371splitHere46","17523051splitHere46","distinct-values(//xs:element/@name)"
"372splitHere46","17523094splitHere46","@Value(<doubleQuotes46>myValue<doubleQuotes46>)<newline46mondego>String customerName;<newline46mondego>"
"373splitHere46","17523094splitHere46","private String customerName=<doubleQuotes46>myValue<doubleQuotes46>;<newline46mondego>"
"374splitHere46","17523157splitHere46","String foo = <doubleQuotes46>loveeee<doubleQuotes46>;<newline46mondego>    foo = foo.replaceAll(<doubleQuotes46>(.)\\1{2,}<doubleQuotes46>, <doubleQuotes46>$1$1<doubleQuotes46>);<newline46mondego>    System.out.println(foo); // prints lovee<newline46mondego>"
"375splitHere46","17523157splitHere46","foo = foo.replaceAll(<doubleQuotes46>(.)\\1{2,}(\\b)<doubleQuotes46>, <doubleQuotes46>$1$1$2<doubleQuotes46>);<newline46mondego>"
"376splitHere46","17523249splitHere46","RunnableJob runnableJob = new RunnableJob();<newline46mondego><newline46mondego>    Thread thread1 = new Thread(runnableJob);<newline46mondego>    thread1.setName(<doubleQuotes46>thread1<doubleQuotes46>);<newline46mondego>    thread1.start();<newline46mondego><newline46mondego>    Thread thread2 = new Thread(runnableJob, <doubleQuotes46>thread2<doubleQuotes46>);<newline46mondego>    thread2.start();<newline46mondego><newline46mondego>    Thread thread3 = new Thread(runnableJob);<newline46mondego>    thread3.start();<newline46mondego><newline46mondego>    Thread currentThread = Thread.currentThread();<newline46mondego>    System.out.println(<doubleQuotes46>Main thread: <doubleQuotes46> + currentThread.getName() + <doubleQuotes46>(<doubleQuotes46> +currentThread.getId() + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>"
"377splitHere46","17523249splitHere46","RunnableJob is being run by thread1 (11)<newline46mondego>RunnableJob is being run by thread2 (12)<newline46mondego>Main thread: main(1)<newline46mondego>RunnableJob is being run by Thread-1 (13)<newline46mondego>"
"378splitHere46","17523286splitHere46","concatAndSeparate(<doubleQuotes46>, <doubleQuotes46>, ArrayUtils.toObject(numbers));<newline46mondego>"
"379splitHere46","17523286splitHere46","Integer numbers = new Integer[] { 1, 2, 3, 4, 5, 6 };<newline46mondego>"
"380splitHere46","17523321splitHere46","MyClass"
"381splitHere46","17523321splitHere46","Content"
"382splitHere46","17523426splitHere46","FindClass <newline46mondego>"
"383splitHere46","17523426splitHere46","GetStaticMethodID and GetMethodID<newline46mondego>"
"384splitHere46","17523426splitHere46","CallStaticVoidMethod, CallStaticIntMethod, and CallStaticObjectMethod...<newline46mondego>"
"385splitHere46","17523426splitHere46","JNIEnv* create_vm(JavaVM ** jvm) {<newline46mondego><newline46mondego>    JNIEnv *env;<newline46mondego>    JavaVMInitArgs vm_args;<newline46mondego><newline46mondego>    JavaVMOption options; <newline46mondego>    //Path to the java source code     <newline46mondego>    options.optionString = <doubleQuotes46>-Djava.class.path=D:\\Java Src\\TestStruct<doubleQuotes46>; <newline46mondego>    vm_args.version = JNI_VERSION_1_6; //JDK version. This indicates version 1.6<newline46mondego>    vm_args.nOptions = 1;<newline46mondego>    vm_args.options = &options;<newline46mondego>    vm_args.ignoreUnrecognized = 0;<newline46mondego><newline46mondego>    int ret = JNI_CreateJavaVM(jvm, (void**)&env, &vm_args);<newline46mondego>    if(ret < 0)<newline46mondego>        printf(<doubleQuotes46>\nUnable to Launch JVM\n<doubleQuotes46>);       <newline46mondego>    return env;<newline46mondego>}<newline46mondego>"
"386splitHere46","17523426splitHere46","jclass clas;<newline46mondego> clas=FindClass(<doubleQuotes46>projectHello/helloWorldClass<doubleQuotes46>);<newline46mondego> jmethodID meth;<newline46mondego> meth = env->GetStaticMethodID(clas, <doubleQuotes46>sayHello<doubleQuotes46>, <doubleQuotes46>(I)V<doubleQuotes46>);<newline46mondego> env->CallStaticVoidMethod(clas, meth,val); //val is (I) ---> parameter. Return type V ---->void<newline46mondego>"
"387splitHere46","17523426splitHere46","if (env->ExceptionCheck()) {return ERR_GET_STATIC_METHOD_FAILED;}<newline46mondego>"
"388splitHere46","17523792splitHere46","boolean isCharsetSupported(String name) {<newline46mondego>  try {<newline46mondego>    Charset.forName(name);<newline46mondego>    return true;<newline46mondego>  } catch (UnsupportedCharsetException | IllegalCharsetNameException | IllegalArgumentException e) {<newline46mondego>    return false;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"389splitHere46","17523792splitHere46","try/catch"
"390splitHere46","17523792splitHere46","boolean isCharsetSupported(String name) {<newline46mondego>    return Charset.availableCharsets().keySet().contains(name);<newline46mondego>}<newline46mondego>"
"391splitHere46","17524202splitHere46","ImageIO.getReaderFileSuffixes()"
"392splitHere46","17524414splitHere46","URLClassLoader ucl = (URLClassLoader)Thread.currentThread().getContextClassLoader();<newline46mondego>URLClassLoader ucl2 = new URLClassLoader( new URL[] { new URL( <doubleQuotes46>file://d:/temp/<doubleQuotes46>)},ucl);<newline46mondego>Class<?> clazz = ucl2.loadClass(<doubleQuotes46>com.notmycompany.CustomProcessor<doubleQuotes46>);<newline46mondego>"
"393splitHere46","17524480splitHere46","URLEncoder.encode(<doubleQuotes46>3qe80L1ap+cR2zRU9csFwOffw5NtWTueLRYgSXyjctI=<doubleQuotes46>, <doubleQuotes46>ISO-8859-1<doubleQuotes46>);<newline46mondego>"
"394splitHere46","17524480splitHere46","+"
"395splitHere46","17524480splitHere46","java.net.URLDecoder.decode(<doubleQuotes46>3qe80L1ap+cR2zRU9csFwOffw5NtWTueLRYgSXyjctI=<doubleQuotes46>));<newline46mondego>"
"396splitHere46","17524480splitHere46","3qe80L1ap cR2zRU9csFwOffw5NtWTueLRYgSXyjctI="
"397splitHere46","17524480splitHere46","+"
"398splitHere46","17524480splitHere46","+"
"399splitHere46","17524480splitHere46","%2B"
"400splitHere46","17524500splitHere46","String.codePointAt"
"401splitHere46","17524500splitHere46","String.codePointCount"
"402splitHere46","17524500splitHere46","substring"
"403splitHere46","17524500splitHere46","String.offsetByCodePoints"
"404splitHere46","17524500splitHere46","String"
"405splitHere46","17524500splitHere46","codePoint"
"406splitHere46","17524560splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>  <layer-list xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46>><newline46mondego>  <item> <newline46mondego>    <shape android:shape=<doubleQuotes46>rectangle<doubleQuotes46>><newline46mondego>      <solid android:color=<doubleQuotes46>#FF0000<doubleQuotes46> /> <newline46mondego>    </shape><newline46mondego>  </item>   <newline46mondego>    <item android:bottom=<doubleQuotes46>5dp<doubleQuotes46>   android:top=<doubleQuotes46>5dp<doubleQuotes46> >  <newline46mondego>     <shape android:shape=<doubleQuotes46>rectangle<doubleQuotes46>> <newline46mondego>      <solid android:color=<doubleQuotes46>#000000<doubleQuotes46> /><newline46mondego>    </shape><newline46mondego>   </item>    <newline46mondego> </layer-list> <newline46mondego>"
"407splitHere46","17524560splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><selector xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46>><newline46mondego>    <item android:state_pressed=<doubleQuotes46>true<doubleQuotes46> <newline46mondego>        android:drawable=<doubleQuotes46>@drawable/bkg<doubleQuotes46> /> <newline46mondego>        // bkg.xml in drawable folder<newline46mondego>        // drawable in pressed state <newline46mondego>    <item  android:state_focused=<doubleQuotes46>false<doubleQuotes46> <newline46mondego>        android:drawable=<doubleQuotes46>@drawable/tvnormal<doubleQuotes46> /> <newline46mondego>        // set a different drawable in normal state<newline46mondego></selector><newline46mondego>"
"408splitHere46","17524560splitHere46","android:background=<doubleQuotes46>@drawable/itembkg<doubleQuotes46><newline46mondego>"
"409splitHere46","17524616splitHere46","Map<? super String, ? super String> mappa1 = new HashMap<Object,Object>();<newline46mondego>"
"410splitHere46","17524616splitHere46","MashMap<Object,Object>"
"411splitHere46","17524616splitHere46","HashMap"
"412splitHere46","17524616splitHere46","mappa1"
"413splitHere46","17524616splitHere46","Object"
"414splitHere46","17524616splitHere46","new"
"415splitHere46","17524616splitHere46","mappa1"
"416splitHere46","17524616splitHere46","new"
"417splitHere46","17524616splitHere46","<>"
"418splitHere46","17524616splitHere46","mappa1"
"419splitHere46","17524616splitHere46","Map<? super String, ? super String>"
"420splitHere46","17525083splitHere46","Caused by: java.lang.NullPointerException<newline46mondego><newline46mondego>com.artifex.mupdfdemo.MuPDFActivity.makeButtonsView(MuPDFActivity.java:835)<newline46mondego>"
"421splitHere46","17525271splitHere46","<doubleQuotes46>555<doubleQuotes46> + <doubleQuotes46><doubleQuotes46><newline46mondego>"
"422splitHere46","17525271splitHere46","giveLiteralString() + <doubleQuotes46><doubleQuotes46><newline46mondego>"
"423splitHere46","17525364splitHere46","RandomAccessFile"
"424splitHere46","17525364splitHere46",".seek()"
"425splitHere46","17525364splitHere46","final RandomAccessFile f = new RandomAccessFile(someFile, <doubleQuotes46>rw<doubleQuotes46>);<newline46mondego><newline46mondego>f.seek(someRandomLong);<newline46mondego>f.write(...);<newline46mondego>"
"426splitHere46","17525616splitHere46","Caused by: javax.ws.rs.WebApplicationException"
"427splitHere46","17525616splitHere46","jaxrs:client"
"428splitHere46","17525616splitHere46","2.7.5"
"429splitHere46","17525616splitHere46","2.7.5"
"430splitHere46","17525661splitHere46","public void setTax_id(Integer tax_id)"
"431splitHere46","17525661splitHere46","Integer"
"432splitHere46","17525661splitHere46","String"
"433splitHere46","17525661splitHere46","setTax_id"
"434splitHere46","17525661splitHere46","String"
"435splitHere46","17525661splitHere46","setGeneID"
"436splitHere46","17525734splitHere46","@Singleton<newline46mondego>public class NewBean {<newline46mondego><newline46mondego>@EJB(lookup = <doubleQuotes46>java:global/MyAppTestEJB/CountryFacade!net.myapp.ejb.CountryFacadeRemote<doubleQuotes46>)<newline46mondego>private CountryFacadeRemote countryFacade;<newline46mondego><newline46mondego>@Schedule(hour = <doubleQuotes46>*<doubleQuotes46>, minute = <doubleQuotes46>*<doubleQuotes46>)<newline46mondego>public void businessMethod() {<newline46mondego>    System.out.println(<doubleQuotes46>NumCountries:<doubleQuotes46> + countryFacade.count());<newline46mondego>}<newline46mondego>"
"437splitHere46","17525781splitHere46","myString.split(<doubleQuotes46>\\s{2,}<doubleQuotes46>);<newline46mondego>"
"438splitHere46","17525781splitHere46","myString.split(<doubleQuotes46> \\s+<doubleQuotes46>); // notice the blank at the beginning.<newline46mondego>"
"439splitHere46","17525786splitHere46","IWorkbenchPart#getTitleToolTip()"
"440splitHere46","17525786splitHere46","PROP_TITLE"
"441splitHere46","17525798splitHere46","IndexSearcher.doc(int, StoredFieldVisitor)"
"442splitHere46","17525798splitHere46","public class StaySameFieldVisitor extends DocumentStoredFieldVisitor {<newline46mondego>@Override<newline46mondego>public void intField(FieldInfo fieldInfo, int value) {<newline46mondego>    getDocument().add(new IntField(fieldInfo.name, value, Store.YES));<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void longField(FieldInfo fieldInfo, long value) {<newline46mondego>    getDocument().add(new LongField(fieldInfo.name, value, Store.YES));<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void doubleField(FieldInfo fieldInfo, double value) {<newline46mondego>    getDocument().add(new DoubleField(fieldInfo.name, value, Store.YES));<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void floatField(FieldInfo fieldInfo, float value) {<newline46mondego>    getDocument().add(new FloatField(fieldInfo.name, value, Store.YES));<newline46mondego>}<newline46mondego>"
"443splitHere46","17525852splitHere46","xjc"
"444splitHere46","17525852splitHere46","xjc /the/path/to/my/xsdfile.xsd<newline46mondego>"
"445splitHere46","17525891splitHere46","Node"
"446splitHere46","17525891splitHere46","next"
"447splitHere46","17525891splitHere46","public static void reverse(Node previous, Node current) {<newline46mondego>    //if there is next node...<newline46mondego>    if (current.next != null) {<newline46mondego>        //...go forth and pwn<newline46mondego>        reverse(current, current.next);<newline46mondego>    }<newline46mondego><newline46mondego>    if (previous == null) {<newline46mondego>        // this was the start node<newline46mondego>        current.next= null;<newline46mondego>    } else {<newline46mondego>        //reverse<newline46mondego>        current.next= previous;<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"448splitHere46","17525891splitHere46","reverse(null, startNode);<newline46mondego>"
"449splitHere46","17526014splitHere46","commons-httpclient.jar"
"450splitHere46","17526181splitHere46","String"
"451splitHere46","17526181splitHere46","try<newline46mondego>{<newline46mondego>    int actualValue = Integer.parseInt(text.getText());<newline46mondego><newline46mondego>    System.out.println(actualValue);<newline46mondego>}<newline46mondego>catch (NumberFormatException e)<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>Not a number<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"452splitHere46","17526181splitHere46","NumberFormatException"
"453splitHere46","17526316splitHere46","process-resources"
"454splitHere46","17526319splitHere46","String s = removecomma(edtShow.getText().toString());<newline46mondego>"
"455splitHere46","17526319splitHere46","edtShow.getText()"
"456splitHere46","17526375splitHere46","String[] B = {<doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>14<doubleQuotes46>, <doubleQuotes46>5<doubleQuotes46>, <doubleQuotes46>12<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>};<newline46mondego>    String[] I = {<doubleQuotes46>20<doubleQuotes46>, <doubleQuotes46>25<doubleQuotes46>, <doubleQuotes46>18<doubleQuotes46>, <doubleQuotes46>16<doubleQuotes46>, <doubleQuotes46>22<doubleQuotes46>};<newline46mondego>    String[] N = {<doubleQuotes46>42<doubleQuotes46>, <doubleQuotes46>32<doubleQuotes46>, <doubleQuotes46>FREE<doubleQuotes46>, <doubleQuotes46>31<doubleQuotes46>, <doubleQuotes46>39<doubleQuotes46>};<newline46mondego>    String[] G = {<doubleQuotes46>60<doubleQuotes46>, <doubleQuotes46>55<doubleQuotes46>, <doubleQuotes46>53<doubleQuotes46>, <doubleQuotes46>46<doubleQuotes46>, <doubleQuotes46>59<doubleQuotes46>};<newline46mondego>    String[] O = {<doubleQuotes46>64<doubleQuotes46>, <doubleQuotes46>70<doubleQuotes46>, <doubleQuotes46>67<doubleQuotes46>, <doubleQuotes46>75<doubleQuotes46>, <doubleQuotes46>71<doubleQuotes46>};<newline46mondego><newline46mondego>    String[][] test={B,I,N,G,O};<newline46mondego>    int n=0;<newline46mondego>    System.out.println(<doubleQuotes46>B  I  N  G  O<doubleQuotes46>);<newline46mondego>    for(String[] str:test){<newline46mondego>         for(int i=0;i<str.length;i++){<newline46mondego>             System.out.print(test[i][n] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>         }<newline46mondego>        System.out.println(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        n++;<newline46mondego>    }<newline46mondego>"
"457splitHere46","17526590splitHere46","@RequestMapping(value = <doubleQuotes46>test.html<doubleQuotes46>, method=RequestMethod.POST , headers = <doubleQuotes46>Accept=*<doubleQuotes46>,produces = <doubleQuotes46>application/json; charset=utf-8<doubleQuotes46>)<newline46mondego>    public ResponseEntity<String> sendMessage(HttpSession session, @RequestParam String intxnId, @RequestParam String message, HttpServletRequest request, HttpServletResponse response) {<newline46mondego><newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Send Message UTF-8 ----------------- <doubleQuotes46> + message);<newline46mondego><newline46mondego>        String json = null;<newline46mondego>        HashMap<String, String> result = new HashMap<String, String>();<newline46mondego>        result.put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>test<doubleQuotes46>);<newline46mondego>        result.put(<doubleQuotes46>message<doubleQuotes46>, message);<newline46mondego>        result.put(<doubleQuotes46>time<doubleQuotes46>, <doubleQuotes46>time<doubleQuotes46>);<newline46mondego>        ObjectMapper map = new ObjectMapper();<newline46mondego>        if (!result.isEmpty()) {<newline46mondego>            try {<newline46mondego>                json = map.writeValueAsString(result);<newline46mondego>                System.out.println(<doubleQuotes46>Send Message  :::::::: : <doubleQuotes46> + json);<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        HttpHeaders responseHeaders = new HttpHeaders();<newline46mondego>        responseHeaders.add(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/json; charset=utf-8<doubleQuotes46>);<newline46mondego>        return new ResponseEntity<String>(json, responseHeaders, HttpStatus.CREATED);<newline46mondego>    }<newline46mondego>"
"458splitHere46","17527110splitHere46","Integer y = 567; // y=567<newline46mondego>    Integer x = y;   // x is equal to y object<newline46mondego>    System.out.println(x + <doubleQuotes46> <doubleQuotes46> + y); // out put x and y so obviously x and y are 567<newline46mondego>    System.out.println(y == x); // here x and y are in same reference. so this x==y is true and out put is true. <newline46mondego>    y++; // increment y by 1. then y=568<newline46mondego>    System.out.println(x + <doubleQuotes46> <doubleQuotes46> + y); // now x= 567 and y= 568<newline46mondego>    System.out.println(y == x);// now x not equals to y then false will print<newline46mondego>    y--; // again decrement y value<newline46mondego>    System.out.println(x + <doubleQuotes46> <doubleQuotes46> + y); // again x and y are same 567<newline46mondego>    System.out.println(y == x);// here y.value == x.value but x and y object wise not equal since object x and y are referring deference points  <newline46mondego>"
"459splitHere46","17527208splitHere46","E"
"460splitHere46","17527208splitHere46","D"
"461splitHere46","17527208splitHere46","T"
"462splitHere46","17527208splitHere46","ToolTip"
"463splitHere46","17527208splitHere46","JPanel"
"464splitHere46","17527208splitHere46","JPanel"
"465splitHere46","17527208splitHere46","JComponents"
"466splitHere46","17527208splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.beans.PropertyChangeEvent;<newline46mondego>import java.beans.PropertyChangeListener;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JToolTip;<newline46mondego>import javax.swing.Timer;<newline46mondego>import javax.swing.ToolTipManager;<newline46mondego>import javax.swing.event.AncestorEvent;<newline46mondego>import javax.swing.event.AncestorListener;<newline46mondego><newline46mondego>public class DynamicToolTipTest {<newline46mondego><newline46mondego>    private JPanel panel = new MyPanel();<newline46mondego>    private JFrame frame = new JFrame(<doubleQuotes46>DynamicToolTipTest<doubleQuotes46>);<newline46mondego><newline46mondego>    public DynamicToolTipTest() {<newline46mondego>        ToolTipManager ttm = ToolTipManager.sharedInstance();<newline46mondego>        ttm.setInitialDelay(200);<newline46mondego>        ttm.setDismissDelay(10000);<newline46mondego>        panel.setToolTipText(<doubleQuotes46>Text 1<doubleQuotes46>);<newline46mondego>        final Timer timer = new Timer(50, new ActionListener() {<newline46mondego>            private int id = 1;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                ++id;<newline46mondego>                panel.setToolTipText(<doubleQuotes46>Text <doubleQuotes46> + id);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        timer.start();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(panel);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocation(150, 100);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new DynamicToolTipTest();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private static final class MyPanel extends JPanel {<newline46mondego><newline46mondego>        private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(300, 200);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public JToolTip createToolTip() {<newline46mondego>            final JToolTip tip = super.createToolTip();<newline46mondego>            final PropertyChangeListener updater = new PropertyChangeListener() {<newline46mondego>                @Override<newline46mondego>                public void propertyChange(final PropertyChangeEvent e) {<newline46mondego>                    if (e.getNewValue() != null) {<newline46mondego>                        tip.setTipText((String) e.getNewValue());<newline46mondego>                        tip.repaint();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            };<newline46mondego>            tip.addAncestorListener(new AncestorListener() {<newline46mondego>                @Override<newline46mondego>                public void ancestorAdded(AncestorEvent event) {<newline46mondego>                    //start listening for tip text changes only after the tip <newline46mondego>                    //is displayed, i.e. the tip is added to the component hierarchy<newline46mondego>                    MyPanel.this.addPropertyChangeListener(TOOL_TIP_TEXT_KEY, updater);<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void ancestorRemoved(AncestorEvent event) {<newline46mondego>                    //stop listening for tip text changes once the tip is no longer <newline46mondego>                    //displayed, i.e. the tip is removed from the component hierarchy<newline46mondego>                    MyPanel.this.removePropertyChangeListener(TOOL_TIP_TEXT_KEY, updater);<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void ancestorMoved(AncestorEvent event) {<newline46mondego>                }<newline46mondego>            });<newline46mondego>            return tip;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"467splitHere46","17527255splitHere46","javascript"
"468splitHere46","17527255splitHere46","file"
"469splitHere46","17527352splitHere46","@XStreamImplicit(itemFieldName =<doubleQuotes46>address<doubleQuotes46>)"
"470splitHere46","17527504splitHere46","o.getGetListObjects().remove(lo)"
"471splitHere46","17527504splitHere46","o.getGetListObjects().add(otherObject)"
"472splitHere46","17527504splitHere46","Iterator.remove()"
"473splitHere46","17527504splitHere46","ConcurrentSkipListSet"
"474splitHere46","17527599splitHere46","public void add(double n)<newline46mondego>{<newline46mondego>   number += n;<newline46mondego>} <newline46mondego>"
"475splitHere46","17527599splitHere46","number"
"476splitHere46","17527599splitHere46","number"
"477splitHere46","17527599splitHere46","number"
"478splitHere46","17527599splitHere46","public double add1(double n)<newline46mondego>{<newline46mondego>   return number = number +  n;<newline46mondego>}<newline46mondego>"
"479splitHere46","17527599splitHere46","getNumber()"
"480splitHere46","17527849splitHere46","<context-root>/foobar</context-root><newline46mondego>"
"481splitHere46","17527849splitHere46","localhost:8080/foobar"
"482splitHere46","17527849splitHere46","<context-root>/</context-root><newline46mondego>"
"483splitHere46","17527849splitHere46","localhost:8080/"
"484splitHere46","17527919splitHere46","ScheduledExecutorService"
"485splitHere46","17527919splitHere46","ExceptionCallback"
"486splitHere46","17527984splitHere46","FileInputStream"
"487splitHere46","17527984splitHere46","java.io"
"488splitHere46","17527984splitHere46","class ReadFrmFile {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        FileInputStream fin = New FileInputStream(<doubleQuotes46>intemp.txt<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"489splitHere46","17527984splitHere46","C:\TEMP"
"490splitHere46","17527984splitHere46","intemp.txt"
"491splitHere46","17527984splitHere46","C:/TEMP"
"492splitHere46","17527984splitHere46","FileNotFoundException"
"493splitHere46","17527984splitHere46","getResourceAsStream"
"494splitHere46","17527984splitHere46","Properties props = new Properties();<newline46mondego>    try {<newline46mondego>        InputStream inStream = **YOUR_CLASS_NAME**.class.getResourceAsStream(<doubleQuotes46>/log4j.properties<doubleQuotes46>);<newline46mondego>        props.load(inStream);<newline46mondego>    } catch (Exception e){<newline46mondego>        LOG.error(e);<newline46mondego>    }<newline46mondego>    PropertyConfigurator.configure(props);<newline46mondego>"
"495splitHere46","17528260splitHere46","setBackground()"
"496splitHere46","17528260splitHere46","setForeground()"
"497splitHere46","17528260splitHere46","TableItem"
"498splitHere46","17528260splitHere46","TableViewer"
"499splitHere46","17528260splitHere46","Table"
"500splitHere46","17528260splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    Display display = new Display();<newline46mondego>    final Shell shell = new Shell(display);<newline46mondego>    shell.setText(<doubleQuotes46>StackOverflow<doubleQuotes46>);<newline46mondego>    shell.setLayout(new FillLayout());<newline46mondego><newline46mondego>    Table table = new Table(shell, SWT.NONE);<newline46mondego>    table.setHeaderVisible(true);<newline46mondego><newline46mondego>    for(int col = 0; col < 3; col++)<newline46mondego>    {<newline46mondego>        TableColumn column = new TableColumn(table, SWT.NONE);<newline46mondego>        column.setText(<doubleQuotes46>Column <doubleQuotes46> + col);<newline46mondego>    }<newline46mondego><newline46mondego>    Color color = display.getSystemColor(SWT.COLOR_YELLOW);<newline46mondego><newline46mondego>    for(int row = 0; row < 10; row++)<newline46mondego>    {<newline46mondego>        TableItem item = new TableItem(table, SWT.NONE);<newline46mondego><newline46mondego>        for(int col = 0; col < 3; col++)<newline46mondego>        {<newline46mondego>            item.setText(col, <doubleQuotes46>Item <doubleQuotes46> + row + <doubleQuotes46> Column <doubleQuotes46> + col);<newline46mondego><newline46mondego>            if(col == 1)<newline46mondego>            {<newline46mondego>                item.setBackground(col, color);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    for(int col = 0; col < 3; col++)<newline46mondego>    {<newline46mondego>        table.getColumn(col).pack();<newline46mondego>    }<newline46mondego><newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego>    while (!shell.isDisposed())<newline46mondego>    {<newline46mondego>        if (!display.readAndDispatch())<newline46mondego>            display.sleep();<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego>"
"501splitHere46","17528410splitHere46","jps"
"502splitHere46","17528410splitHere46","ps -aux | grep '<program name or part of program name>"
"503splitHere46","17528410splitHere46","kill -15 <pid>"
"504splitHere46","17528410splitHere46","taskkill /pid <pid> or taskkill /im app.exe"
"505splitHere46","17528410splitHere46","jps"
"506splitHere46","17528410splitHere46","try TASKLIST /fi <doubleQuotes46>imagename eq <app>.exe<doubleQuotes46>"
"507splitHere46","17528861splitHere46","if (args0.intern() == args1.intern()){<newline46mondego>    System.out.println(<doubleQuotes46>Success<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"508splitHere46","17529432splitHere46","public class Allineamento {<newline46mondego>    public Allineamento() {<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"509splitHere46","17529468splitHere46","Option(javaList).map(asScalaBuffer).getOrElse(ArrayBuffer.empty)<newline46mondego>"
"510splitHere46","17529468splitHere46","null"
"511splitHere46","17529468splitHere46","def ArrayBuffer[T](jl: JavaList[T]) = if (jl == null) ArrayBuffer.empty[T] else asScalaBuffer(jl)<newline46mondego>"
"512splitHere46","17529468splitHere46","ArrayBuffer(null.asInstanceOf[JavaList[String])"
"513splitHere46","17529468splitHere46","Option.apply"
"514splitHere46","17529468splitHere46","def apply[A](x: A): Option[A] = if (x == null) None else Some(x)<newline46mondego>"
"515splitHere46","17529545splitHere46","listView.setOnItemClickListener(new OnItemClickListener() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void onItemClick(AdapterView<?> adapterView, View view,<newline46mondego>                        int position, long arg3) {<newline46mondego>                    Content  content = (Content ) adapterView<newline46mondego>                            .getItemAtPosition(position);<newline46mondego>                    //from the content object retrieve the attributes you require.<newline46mondego>                }<newline46mondego><newline46mondego>            });<newline46mondego>"
"516splitHere46","17529561splitHere46","<doubleQuotes46> FROM Table J INNER JOIN(SELECT Customer, count(Customer) as cnt<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>FROM Table GROUP BY Customer<doubleQuotes46>) C ON J.Customer = C.Customer;<newline46mondego>"
"517splitHere46","17529561splitHere46","<doubleQuotes46> FROM Table J INNER JOIN(SELECT Customer, count(Customer) as cnt<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>FROM Table GROUP BY Customer) C ON J.Customer = C.Customer<doubleQuotes46>;<newline46mondego>"
"518splitHere46","17529561splitHere46","cntFROM table"
"519splitHere46","17529561splitHere46","<doubleQuotes46> FROM Table J INNER JOIN(SELECT Customer, count(Customer) as cnt<doubleQuotes46> +<newline46mondego>            <doubleQuotes46> FROM Table GROUP BY Customer) C ON J.Customer = C.Customer<doubleQuotes46>;<newline46mondego>"
"520splitHere46","17529561splitHere46","select J.Row, J.Customer, J.Purchase_History,<newline46mondego>       count(*) over (partition by customer) as cnt<newline46mondego>from table j<newline46mondego>"
"521splitHere46","17529655splitHere46","public class Person {<newline46mondego>private String name;<newline46mondego>private String gender;<newline46mondego>private int age;<newline46mondego>Person(String name, String gender, int age){<newline46mondego>    this.name = name;<newline46mondego>    this.gender = gender;<newline46mondego>    this.age = age;<newline46mondego>}<newline46mondego>public void setName(String name){<newline46mondego>    this.name = name;<newline46mondego>}<newline46mondego>public void setGender(String gender){<newline46mondego>    this.gender = gender;<newline46mondego>}<newline46mondego>public void setAge(int age){<newline46mondego>    this.age = age;<newline46mondego>}<newline46mondego>public String getName(){<newline46mondego>    return this.name;<newline46mondego>}<newline46mondego>public String getGender(){<newline46mondego>    return this.gender;<newline46mondego>}<newline46mondego>public int getAge(){<newline46mondego>   return this.age;<newline46mondego>}<newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>    Person me = new Person(<doubleQuotes46>MyName<doubleQuotes46>,<doubleQuotes46>male<doubleQuotes46>,20);<newline46mondego>    System.out.println(<doubleQuotes46>My name is:<doubleQuotes46> + me.getName());<newline46mondego>    me.setName(<doubleQuotes46>OtherName<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>My name is:<doubleQuotes46> + me.getName());<newline46mondego>}<newline46mondego>}<newline46mondego>"
"522splitHere46","17529735splitHere46","Statement"
"523splitHere46","17529735splitHere46","try (<newline46mondego>    Connection con = DriverManager.getConnection(<doubleQuotes46>Stuff<doubleQuotes46>);<newline46mondego>    Statement stmt = con.createStatement();<newline46mondego>){<newline46mondego>    while(someBoolean){          <newline46mondego>        try (ResultSet rs = stmt.executeQuery(<doubleQuotes46>SQL query<doubleQuotes46>)) {<newline46mondego>            // do stuff with query results.<newline46mondego>        }<newline46mondego>    } //end while<newline46mondego>} catch (Exception e){<newline46mondego>    //handle exception<newline46mondego>}<newline46mondego>"
"524splitHere46","17529758splitHere46","FileWriter"
"525splitHere46","17529758splitHere46","BufferedOutputStream"
"526splitHere46","17529758splitHere46","FileWriter"
"527splitHere46","17529758splitHere46","BufferedOutputStream"
"528splitHere46","17529758splitHere46","flush"
"529splitHere46","17529758splitHere46","Writer"
"530splitHere46","17529758splitHere46","FileWriter"
"531splitHere46","17529758splitHere46","BufferedWriter"
"532splitHere46","17529758splitHere46","FileWriter fw = new FileWriter(...)<newline46mondego>"
"533splitHere46","17529758splitHere46","BufferedWriter bw = new BufferedWriter(new FileWriter(...)<newline46mondego>"
"534splitHere46","17529758splitHere46","FileWriter"
"535splitHere46","17529758splitHere46","FileOutputStream"
"536splitHere46","17529758splitHere46","FileWriter"
"537splitHere46","17529758splitHere46","OutputStream"
"538splitHere46","17529758splitHere46","BufferedWriter"
"539splitHere46","17529758splitHere46","bw.write(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>"
"540splitHere46","17529758splitHere46","BufferedOutputStream"
"541splitHere46","17529758splitHere46","bos.write(<doubleQuotes46>Hello<doubleQuotes46>.getBytes(Charset.forName(<doubleQuotes46>utf-8<doubleQuotes46>)));<newline46mondego>"
"542splitHere46","17529758splitHere46","utf-8"
"543splitHere46","17529758splitHere46","OutputStream"
"544splitHere46","17529758splitHere46","Writer"
"545splitHere46","17529988splitHere46","yourLib"
"546splitHere46","17529988splitHere46","CLASSPATH"
"547splitHere46","17529988splitHere46",";"
"548splitHere46","17530184splitHere46","PlayMagicForJava"
"549splitHere46","17530184splitHere46","play-java"
"550splitHere46","17530184splitHere46","javaCore"
"551splitHere46","17530184splitHere46","Build.scala"
"552splitHere46","17530184splitHere46","val appDependencies = Seq(<newline46mondego>  jdbc,<newline46mondego>  javaCore,<newline46mondego>  javaEbean,<newline46mondego>  ...<newline46mondego>)<newline46mondego>"
"553splitHere46","17530412splitHere46","int inew = 0; //Or any default value<newline46mondego>    while(true){<newline46mondego>      try{<newline46mondego><newline46mondego>        int iold=inew;<newline46mondego><newline46mondego>        inew=input.read();<newline46mondego><newline46mondego>        if (inew!=-1 && iold!=-1)<newline46mondego>        {<newline46mondego>          text=tf.getText();<newline46mondego>          tf.setText(text+(char)inew);<newline46mondego>        }<newline46mondego>        if (inew!=-1 && iold=-1)<newline46mondego>        {<newline46mondego>          text=tf.getText();<newline46mondego>          tf.setText(<doubleQuotes46><doubleQuotes46>+(char)inew);<newline46mondego>        }<newline46mondego><newline46mondego>        Thread.sleep(100);<newline46mondego>      }<newline46mondego>      catch(Exception x){<newline46mondego>          x.printStackTrace();<newline46mondego>      }<newline46mondego><newline46mondego>      repaint();    <newline46mondego>    }<newline46mondego>"
"554splitHere46","17530571splitHere46","submit()"
"555splitHere46","17530571splitHere46","click()"
"556splitHere46","17530571splitHere46","click()"
"557splitHere46","17530571splitHere46","submit()"
"558splitHere46","17530691splitHere46","private native maximizeOrMinimizeWindowWithName(String windowName, boolean maximize);<newline46mondego>"
"559splitHere46","17530718splitHere46","result=str.replaceAll(<doubleQuotes46>,[^=]*?=[0-9]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>System.out.println(result);<newline46mondego>"
"560splitHere46","17530751splitHere46","id"
"561splitHere46","17530751splitHere46","is()"
"562splitHere46","17531112splitHere46","HttpParams params = new BasicHttpParams();<newline46mondego>HttpClientParams.setRedirecting(params, false);<newline46mondego><newline46mondego>httpclient = new DefaultHttpClient(params);<newline46mondego>....<newline46mondego>"
"563splitHere46","17531186splitHere46","public void methodOne(String string){<newline46mondego>    System.out.println(string);<newline46mondego>}<newline46mondego>public void methodTwo(){<newline46mondego>    String string = <doubleQuotes46>This string will be printed by methodOne<doubleQuotes46>;<newline46mondego>    methodOne(string);<newline46mondego>}<newline46mondego>"
"564splitHere46","17531186splitHere46","public class ThisIsAClass {<newline46mondego><newline46mondego>String string; //accessible globally<newline46mondego>....<newline46mondego>//way down the class<newline46mondego><newline46mondego>    public void methodOne(){<newline46mondego>        System.out.println(string);<newline46mondego>    }<newline46mondego>    public void methodTwo(){<newline46mondego>        String string = <doubleQuotes46>This string will be printed by methodOne<doubleQuotes46>; //edit the string here<newline46mondego>        methodOne();<newline46mondego>    }<newline46mondego>"
"565splitHere46","17531186splitHere46","String string;"
"566splitHere46","17531186splitHere46","String weatherLocation = null;"
"567splitHere46","17531186splitHere46","weatherInfo()"
"568splitHere46","17531186splitHere46","public void WeatherInfo(){<newline46mondego>    weatherLocation = weatherLoc[1].toString();<newline46mondego>}<newline46mondego>"
"569splitHere46","17531468splitHere46","Superobject"
"570splitHere46","17531468splitHere46","Superobject"
"571splitHere46","17531468splitHere46","SuperobjectCollection"
"572splitHere46","17531468splitHere46","class SuperobjectCollection {<newline46mondego>private List<Superobject> list;<newline46mondego><newline46mondego>  public AddObj(Superobject obj) {<newline46mondego>    list.add(obj);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"573splitHere46","17531468splitHere46","Superobject"
"574splitHere46","17531468splitHere46","Class Superobject {<newline46mondego>    int no;<newline46mondego>    int i;<newline46mondego>    String s;<newline46mondego>    List<Superobject> li; <newline46mondego>    }<newline46mondego>"
"575splitHere46","17531468splitHere46","Superobject a = new one();<newline46mondego>Superobject b = new two();<newline46mondego>"
"576splitHere46","17531468splitHere46","a"
"577splitHere46","17531468splitHere46","b"
"578splitHere46","17531468splitHere46","li"
"579splitHere46","17531468splitHere46","somemethod"
"580splitHere46","17531468splitHere46","li.add();<newline46mondego>"
"581splitHere46","17531468splitHere46","this.li.add();<newline46mondego>"
"582splitHere46","17531468splitHere46","this"
"583splitHere46","17531468splitHere46","a"
"584splitHere46","17531468splitHere46","a.somemethod()"
"585splitHere46","17531468splitHere46","b"
"586splitHere46","17531468splitHere46","b.somemethod()"
"587splitHere46","17531468splitHere46","Superobject.someobject();<newline46mondego>"
"588splitHere46","17531468splitHere46","a.someobject();<newline46mondego>"
"589splitHere46","17531509splitHere46","myString/(?:\Qblah1\E|\Qblah2\E)<newline46mondego>"
"590splitHere46","17531509splitHere46","blah1"
"591splitHere46","17531509splitHere46","blah2"
"592splitHere46","17531509splitHere46","\Q"
"593splitHere46","17531509splitHere46","\E"
"594splitHere46","17531509splitHere46","|"
"595splitHere46","17531509splitHere46","StringBuilder sb = new StringBuilder();<newline46mondego>boolean isFirst = true;<newline46mondego>for(String word : stringList) {<newline46mondego>    if (!isFirst) {<newline46mondego>        sb.append('|');<newline46mondego>    } else {<newline46mondego>        isFirst = false;<newline46mondego>    }<newline46mondego>    sb.append(<doubleQuotes46>\\Q<doubleQuotes46>);<newline46mondego>    sb.append(word);<newline46mondego>    sb.append(<doubleQuotes46>\\E<doubleQuotes46>);<newline46mondego>}<newline46mondego>String regex = <doubleQuotes46>myString/<doubleQuotes46> + <doubleQuotes46>(?:<doubleQuotes46> + sb + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>"
"596splitHere46","17531623splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.UnsupportedClassVersionError: ASILogger : U<newline46mondego>nsupported major.minor version 51.0<newline46mondego>"
"597splitHere46","17531638splitHere46","StandardAnalyzer"
"598splitHere46","17531638splitHere46","EnglishAnalyzer"
"599splitHere46","17531638splitHere46","StopAnalyzer.ENGLISH_STOP_WORDS_SET"
"600splitHere46","17531638splitHere46","<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>an<doubleQuotes46>, <doubleQuotes46>and<doubleQuotes46>, <doubleQuotes46>are<doubleQuotes46>, <doubleQuotes46>as<doubleQuotes46>, <doubleQuotes46>at<doubleQuotes46>, <doubleQuotes46>be<doubleQuotes46>, <doubleQuotes46>but<doubleQuotes46>, <doubleQuotes46>by<doubleQuotes46>,<newline46mondego><doubleQuotes46>for<doubleQuotes46>, <doubleQuotes46>if<doubleQuotes46>, <doubleQuotes46>in<doubleQuotes46>, <doubleQuotes46>into<doubleQuotes46>, <doubleQuotes46>is<doubleQuotes46>, <doubleQuotes46>it<doubleQuotes46>,<newline46mondego><doubleQuotes46>no<doubleQuotes46>, <doubleQuotes46>not<doubleQuotes46>, <doubleQuotes46>of<doubleQuotes46>, <doubleQuotes46>on<doubleQuotes46>, <doubleQuotes46>or<doubleQuotes46>, <doubleQuotes46>such<doubleQuotes46>,<newline46mondego><doubleQuotes46>that<doubleQuotes46>, <doubleQuotes46>the<doubleQuotes46>, <doubleQuotes46>their<doubleQuotes46>, <doubleQuotes46>then<doubleQuotes46>, <doubleQuotes46>there<doubleQuotes46>, <doubleQuotes46>these<doubleQuotes46>,<newline46mondego><doubleQuotes46>they<doubleQuotes46>, <doubleQuotes46>this<doubleQuotes46>, <doubleQuotes46>to<doubleQuotes46>, <doubleQuotes46>was<doubleQuotes46>, <doubleQuotes46>will<doubleQuotes46>, <doubleQuotes46>with<doubleQuotes46><newline46mondego>"
"601splitHere46","17531638splitHere46","StopFilter"
"602splitHere46","17531764splitHere46","src/main/resources"
"603splitHere46","17531764splitHere46","META-INF/services"
"604splitHere46","17531764splitHere46","Project<newline46mondego>| src<newline46mondego>| | main<newline46mondego>|   | java<newline46mondego>|     | [your source code]<newline46mondego>|   | resources<newline46mondego>|     | META-INF<newline46mondego>|       | services<newline46mondego>|         | [your service files]<newline46mondego>"
"605splitHere46","17531932splitHere46","FileInputStream"
"606splitHere46","17531932splitHere46","InputStream"
"607splitHere46","17531932splitHere46","InputStream"
"608splitHere46","17531932splitHere46","FileInputStream"
"609splitHere46","17531932splitHere46","InputStream"
"610splitHere46","17531932splitHere46","FileInputStream"
"611splitHere46","17531932splitHere46","InputStream"
"612splitHere46","17531932splitHere46","FileInputStream"
"613splitHere46","17531990splitHere46","volatile"
"614splitHere46","17532113splitHere46","setConnectTimeout()"
"615splitHere46","17532308splitHere46","ClientResponse response = webResourceTest.type(MediaType.TEXT_PLAIN).delete(ClientResponse.class);<newline46mondego>Assert.assertEquals(204, response.getStatus());<newline46mondego>"
"616splitHere46","17532518splitHere46","for(String blacklisted : blacklist) {<newline46mondego>    wordcounts.remove(blacklisted);<newline46mondego>}<newline46mondego>for(String mapping : mappings) {<newline46mondego>    String oldKey =    // get old key<newline46mondego>    String value = wordcounts.get(oldKey);<newline46mondego>    wordcounts.remove(oldKey);<newline46mondego>    wordcounts.put(mapping, value);<newline46mondego>}<newline46mondego>"
"617splitHere46","17532704splitHere46","class Example {<newline46mondego><newline46mondego>  private static int[] outside = new int[]{1};<newline46mondego><newline46mondego>  public static void main(String [] args){<newline46mondego>    final int[] inside = new int[]{2};<newline46mondego><newline46mondego>    Object inner = new Object(){{<newline46mondego>      System.out.println(outside[0]);<newline46mondego>      System.out.println(inside[0]);<newline46mondego>    }};<newline46mondego>   }<newline46mondego>  }<newline46mondego>"
"618splitHere46","17532704splitHere46","javap -c"
"619splitHere46","17532704splitHere46","class Example {<newline46mondego>  Example();<newline46mondego>    Code:<newline46mondego>       0: aload_0       <newline46mondego>       1: invokespecial #2                  // Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>       4: return   <newline46mondego><newline46mondego>  public static void main(java.lang.String[]);<newline46mondego>    Code:<newline46mondego>       0: iconst_1      <newline46mondego>       1: newarray       int<newline46mondego>       3: dup           <newline46mondego>       4: iconst_0      <newline46mondego>       5: iconst_2      <newline46mondego>       6: iastore       <newline46mondego>       7: astore_1      <newline46mondego>       8: new           #3                  // class Example$1<newline46mondego>      11: dup<newline46mondego>      12: aload_1       <newline46mondego>      13: invokespecial #4                  // Method Example$1.<doubleQuotes46><init><doubleQuotes46>:([I)V<newline46mondego>      16: astore_2      <newline46mondego>      17: return        <newline46mondego><newline46mondego>  static int[] access$000();<newline46mondego>    Code:<newline46mondego>       0: getstatic     #1                  // Field outside:[I<newline46mondego>       3: areturn       <newline46mondego><newline46mondego>  static {};<newline46mondego>    Code:<newline46mondego>       0: iconst_1      <newline46mondego>       1: newarray       int<newline46mondego>       3: dup           <newline46mondego>       4: iconst_0      <newline46mondego>       5: iconst_1      <newline46mondego>       6: iastore       <newline46mondego>       7: putstatic     #1                  // Field outside:[I<newline46mondego>      10: return        <newline46mondego>}<newline46mondego>"
"620splitHere46","17532704splitHere46","final class Example$1 {<newline46mondego>  final int[] val$inside;<newline46mondego><newline46mondego>     Example$1(int[]);<newline46mondego>        Code:<newline46mondego>           0: aload_0       <newline46mondego>           1: aload_1       <newline46mondego>           2: putfield      #1                  // Field val$inside:[I<newline46mondego>           5: aload_0       <newline46mondego>           6: invokespecial #2                  // Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>           9: getstatic     #3                  // Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>          12: invokestatic  #4                  // Method Example.access$000:()[I<newline46mondego>          15: iconst_0      <newline46mondego>          16: iaload        <newline46mondego>          17: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V<newline46mondego>          20: getstatic     #3                  // Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>          23: aload_0       <newline46mondego>          24: getfield      #1                  // Field val$inside:[I<newline46mondego>          27: iconst_0      <newline46mondego>          28: iaload        <newline46mondego>          29: invokevirtual #5                  // Method java/io/PrintStream.println:(I)V<newline46mondego>          32: return        <newline46mondego>    }<newline46mondego>"
"621splitHere46","17532704splitHere46","inside"
"622splitHere46","17532704splitHere46","Example$1"
"623splitHere46","17532704splitHere46","outside"
"624splitHere46","17532704splitHere46","access$000"
"625splitHere46","17532704splitHere46","Example"
"626splitHere46","17532780splitHere46","CreateCombo"
"627splitHere46","17532780splitHere46","CreateCombo"
"628splitHere46","17532780splitHere46","JComboBox"
"629splitHere46","17532780splitHere46","public CreateCombo () {<newline46mondego>        super(); // this call JComboBox superConstructor is implicit if you don't put it<newline46mondego>        this.setModel(new DefaultComboBoxModel(depList));<newline46mondego>        this.setVisible(true);<newline46mondego>} <newline46mondego>"
"630splitHere46","17532780splitHere46","public CreateCombo(Object[] array ){<newline46mondego>          super(array);<newline46mondego>  }<newline46mondego>"
"631splitHere46","17532993splitHere46","RESPONSE_TIMEOUT_PROPERTY"
"632splitHere46","17532993splitHere46","CONNECTION_TIMEOUT_PROPERTY"
"633splitHere46","17532993splitHere46","20000"
"634splitHere46","17532993splitHere46","20"
"635splitHere46","17533026splitHere46","SwingUtilities.getWindowAncestor"
"636splitHere46","17533026splitHere46","BrowseButton"
"637splitHere46","17533026splitHere46","APPROVE_OPTION"
"638splitHere46","17533026splitHere46","class BrowseButton extends JButton {<newline46mondego><newline46mondego>    public BrowseButton(String name, final JPanel pane) {<newline46mondego><newline46mondego>        super(name);<newline46mondego>        addActionListener(new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent event) {<newline46mondego>                JFileChooser fileopen = new JFileChooser();             <newline46mondego>                FileFilter filter = new FileNameExtensionFilter(<doubleQuotes46>dwg files<doubleQuotes46>, <doubleQuotes46>dwg<doubleQuotes46>);<newline46mondego>                fileopen.addChoosableFileFilter(filter);<newline46mondego><newline46mondego>                int ret = fileopen.showDialog(pane, <doubleQuotes46>Open<doubleQuotes46>);<newline46mondego><newline46mondego>                if (ret == JFileChooser.APPROVE_OPTION) {<newline46mondego>                    SwingUtilities.getWindowAncestor(BrowsButton.this).dispose();<newline46mondego>                    File file = fileopen.getSelectedFile();<newline46mondego>                    String[] layers = getFileLayers(file.getPath());<newline46mondego>                    openLayerWindow(layers);<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>"
"639splitHere46","17533121splitHere46","HashMap<String, String> verify = new HashMap<String, String>();<newline46mondego>while (rs.next())<newline46mondego>{<newline46mondego>    verify.put(<doubleQuotes46>beneficiaryID<doubleQuotes46>,rs.getString(<doubleQuotes46>beneficiaryID<doubleQuotes46>));<newline46mondego>    verify.put(<doubleQuotes46>scheme<doubleQuotes46>, rs.getString(<doubleQuotes46>scheme<doubleQuotes46>));<newline46mondego>    verify.put(<doubleQuotes46>aadhaar<doubleQuotes46>,rs.getString(<doubleQuotes46>aadhaar<doubleQuotes46>));<newline46mondego>    verify.put(<doubleQuotes46>name<doubleQuotes46>,rs.getString(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"640splitHere46","17533121splitHere46","Map"
"641splitHere46","17533121splitHere46","List results = new ArrayList<Map<String, String>>();<newline46mondego>while (rs.next())<newline46mondego>{<newline46mondego>    Map<String, String> verify = new HashMap<String, String>();<newline46mondego>    verify.put(<doubleQuotes46>beneficiaryID<doubleQuotes46>,rs.getString(<doubleQuotes46>beneficiaryID<doubleQuotes46>));<newline46mondego>    verify.put(<doubleQuotes46>scheme<doubleQuotes46>, rs.getString(<doubleQuotes46>scheme<doubleQuotes46>));<newline46mondego>    verify.put(<doubleQuotes46>aadhaar<doubleQuotes46>,rs.getString(<doubleQuotes46>aadhaar<doubleQuotes46>));<newline46mondego>    verify.put(<doubleQuotes46>name<doubleQuotes46>,rs.getString(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>    results.add(verify);<newline46mondego>}<newline46mondego> request.setAttribute(<doubleQuotes46>verify<doubleQuotes46>, results);<newline46mondego>"
"642splitHere46","17533121splitHere46","<%<newline46mondego>List<Map<String, String>> results = (List<Map<String, String>>)request.getAttribute(<doubleQuotes46>verify<doubleQuotes46>);<newline46mondego>for (Map<String, String> verify: results) {<newline46mondego>{ <newline46mondego>    out.print(verify.get(<doubleQuotes46>aadhaar<doubleQuotes46>));<newline46mondego>    out.print(verify.get(<doubleQuotes46>scheme<doubleQuotes46>));<newline46mondego>    out.print(verify.get(<doubleQuotes46>beneficiaryID<doubleQuotes46>)+<doubleQuotes46>$<doubleQuotes46>+verify.get(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>}<newline46mondego>%><newline46mondego>"
"643splitHere46","17533186splitHere46","scan.hasNext.equals(<doubleQuotes46>x<doubleQuotes46>)"
"644splitHere46","17533186splitHere46","scan.next().equals(<doubleQuotes46>x=<doubleQuotes46>)"
"645splitHere46","17533186splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>public class x {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    Scanner scan = new Scanner(System.in);<newline46mondego>    int exes = 0;<newline46mondego>    int whys = 0;<newline46mondego>    while (scan.hasNext())<newline46mondego>    {<newline46mondego>      String line = scan.next();<newline46mondego>      if (line.equals(<doubleQuotes46>x=<doubleQuotes46>))<newline46mondego>        exes+=scan.nextInt();<newline46mondego>      else<newline46mondego>        whys+=scan.nextInt();<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>X: <doubleQuotes46> + exes);<newline46mondego>    System.out.println(<doubleQuotes46>Y: <doubleQuotes46> + whys);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"646splitHere46","17533292splitHere46","Set<Integer>"
"647splitHere46","17533292splitHere46","Set<Integer> randomNumbers = new HashSet<>();<newline46mondego>Random rand = new Random();<newline46mondego>while (randomNumbers.size() < 6) {<newline46mondego>    randomNumbers.add(rand.nextInt(50) + 1);<newline46mondego>}<newline46mondego>"
"648splitHere46","17533292splitHere46","List<Integer> numbers = new ArrayList<>(50); // known capacity<newline46mondego>for (int i = 1; i <= 50; ++i) { numbers.add(i); }<newline46mondego>Collections.shuffle(numbers);<newline46mondego>List<Integer> sixRandomNumbers = numbers.subList(0, 6);<newline46mondego>"
"649splitHere46","17533292splitHere46","int[] numbers = new int[6];<newline46mondego>Set<Integer> randomNumbers = new HashSet<>();<newline46mondego>Random rand = new Random();<newline46mondego>while (randomNumbers.size() < 6) {<newline46mondego>    randomNumbers.add(rand.nextInt(50) + 1);<newline46mondego>}<newline46mondego>System.out.println(<doubleQuotes46>Six random numbers: <doubleQuotes46> + randomNumbers.toString());<newline46mondego><newline46mondego>// if you need them as an `int` array:<newline46mondego>int i = 0;<newline46mondego>for (Integer n : randomNumbers) {<newline46mondego>    numbers[i++] = n;<newline46mondego>}<newline46mondego>"
"650splitHere46","17533292splitHere46","numbers"
"651splitHere46","17533292splitHere46","number1"
"652splitHere46","17533292splitHere46","number6"
"653splitHere46","17533305splitHere46","contains"
"654splitHere46","17533305splitHere46","add"
"655splitHere46","17533305splitHere46","private"
"656splitHere46","17533305splitHere46","Collections.synchronizedList"
"657splitHere46","17533305splitHere46","class ListHelper <E> {<newline46mondego>    public List<E> list = Collections.synchronizedList(new ArrayList<E>());<newline46mondego><newline46mondego>    public boolean putIfAbsent(E x) {<newline46mondego>        synchronized (list) {<newline46mondego>            boolean absent = !list.contains(x);<newline46mondego>            if (absent)<newline46mondego>               list.add(x);<newline46mondego>            return absent;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"658splitHere46","17533404splitHere46","Map<Broker, Integer> brokerSalesCountList = new HashMap<Broker, Integer>();<newline46mondego><newline46mondego>private static ValueComparator<Broker> bvc =  new ValueComparator<Broker>(brokerSalesCountList);<newline46mondego>"
"659splitHere46","17533404splitHere46","public class ValueComparator<T> implements Comparator<T> {  <newline46mondego>    Map<T, Integer> base;<newline46mondego>    public ValueComparator(Map<T, Integer> base) {<newline46mondego>        this.base = base;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compare(T a, T b) {<newline46mondego>        if (base.get(a) >= base.get(b)) {<newline46mondego>            return -1;<newline46mondego>        } else {<newline46mondego>            return 1;<newline46mondego>        } // returning 0 would merge keys<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"660splitHere46","17533434splitHere46","st.executeQuery(qry);"
"661splitHere46","17533434splitHere46","executeQuery(query)"
"662splitHere46","17533434splitHere46","executeUpdate(query)"
"663splitHere46","17533434splitHere46","int result = st.executeUpdate(qry);<newline46mondego>System.out.println(result);<newline46mondego>"
"664splitHere46","17533434splitHere46","DEFAULT NULL"
"665splitHere46","17533517splitHere46","ComboBox"
"666splitHere46","17533517splitHere46","ComboBox"
"667splitHere46","17533517splitHere46","for (int i = 0; i < size; i++) {<newline46mondego>            jLabelAL.add(new JLabel(<doubleQuotes46><doubleQuotes46> + tagNamesAL.get(i))); <newline46mondego>            if (tagNamesAL.get(i).equals(<doubleQuotes46>BEHAVIOUR<doubleQuotes46>)){<newline46mondego>                addCSPComboBox(p1);<newline46mondego>                break;<newline46mondego>            }<newline46mondego>"
"668splitHere46","17533517splitHere46","public void addCSPComboBox(JPanel p1){<newline46mondego>    CSPComboBox cspComboBox = new tools.CSPComboBox();<newline46mondego>    JLabel behaviour = new JLabel(<doubleQuotes46>BEHAVIOUR<doubleQuotes46>);<newline46mondego>    p1.add(behaviour);<newline46mondego>    p1.add(cspComboBox);<newline46mondego><newline46mondego>}<newline46mondego>"
"669splitHere46","17533544splitHere46","import java.util.regex.*;<newline46mondego>public class regex1{<newline46mondego>public static void main(String args[]){<newline46mondego>    String s1 = <doubleQuotes46>cat catches dog text<doubleQuotes46>;<newline46mondego>    Pattern p1 = Pattern.compile(<doubleQuotes46>\\s*cat\\s+catches\\s*dog\\s+(\\S+)<doubleQuotes46>);<newline46mondego>    Matcher m1 = p1.matcher(s1);<newline46mondego>    if (m1.find()){<newline46mondego>        System.out.println(m1.group(1));<newline46mondego>        s1 = s1.replaceFirst(m1.group(1),<doubleQuotes46>variable<doubleQuotes46>);<newline46mondego>        System.out.println(s1);<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        System.out.println(<doubleQuotes46>Else<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"670splitHere46","17533656splitHere46","set"
"671splitHere46","17533656splitHere46","FileReader file=new FileReader(<doubleQuotes46>D:\\Test.txt<doubleQuotes46>);<newline46mondego>    BufferedReader br=new BufferedReader(file);<newline46mondego>    String str;<newline46mondego>    Set<String> st=new HashSet<String>();<newline46mondego>    while((str=br.readLine())!=null)<newline46mondego>    {<newline46mondego>         st.add(str);<newline46mondego>    }      <newline46mondego>"
"672splitHere46","17533865splitHere46","JFileChooser chooser = new JFileChooser();<newline46mondego>FileNameExtensionFilter filter = new FileNameExtensionFilter(<doubleQuotes46>CSV Files<doubleQuotes46>, <doubleQuotes46>csv<doubleQuotes46>);<newline46mondego>chooser.setFileFilter(filter);<newline46mondego>int returnVal = chooser.showOpenDialog(null);<newline46mondego>if(returnVal == JFileChooser.APPROVE_OPTION)<newline46mondego>{<newline46mondego>    System.out.println(<doubleQuotes46>You chose to open file: <doubleQuotes46> + chooser.getSelectedFile().getName());<newline46mondego>    ArrayList<String> rowData = new ArrayList<String>();<newline46mondego>    FileConnections excelConn = new FileConnections();<newline46mondego>    rowData = excelConn.read(chooser.getSelectedFile());<newline46mondego>}<newline46mondego>"
"673splitHere46","17533865splitHere46","JFileChooser chooser = new JFileChooser();<newline46mondego>chooser.setFileFilter(new FileNameExtensionFilter(<doubleQuotes46>CSV Files<doubleQuotes46>, <doubleQuotes46>csv<doubleQuotes46>));<newline46mondego>if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {<newline46mondego>    System.out.println(<doubleQuotes46>You chose to open file: <doubleQuotes46> + chooser.getSelectedFile().getName());<newline46mondego>    ArrayList<String> rowData = new FileConnections().read(chooser.getSelectedFile());<newline46mondego>}<newline46mondego>"
"674splitHere46","17533978splitHere46","temp.addLast(value);<newline46mondego>SymbolTable.put(key, temp); // <-- Not needed. Its already in there.<newline46mondego>"
"675splitHere46","17533978splitHere46","if(temp.contains(value)){<newline46mondego>"
"676splitHere46","17533978splitHere46","LinkedList"
"677splitHere46","17533978splitHere46","equals()"
"678splitHere46","17533978splitHere46","value"
"679splitHere46","17533978splitHere46","SymbolTableItem"
"680splitHere46","17533978splitHere46","equals()"
"681splitHere46","17533978splitHere46","@Overrides<newline46mondego>public boolean equals(Object that) {<newline46mondego>    if (that == null) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    if (this.getName() == null) {<newline46mondego>        return that.getName() == null;<newline46mondego>    }<newline46mondego>    return this.getName().equals(that.getName());<newline46mondego>}<newline46mondego>"
"682splitHere46","17533978splitHere46","hashcode()"
"683splitHere46","17533978splitHere46","equals"
"684splitHere46","17533978splitHere46","hashcode"
"685splitHere46","17533978splitHere46","this.getName().hashcode()"
"686splitHere46","17534060splitHere46","public class Manager {<newline46mondego><newline46mondego>    private List<AnInterface> theList;<newline46mondego><newline46mondego>    public void init() {<newline46mondego>         // here we use list initialized by product<newline46mondego>    }    <newline46mondego><newline46mondego>}<newline46mondego>"
"687splitHere46","17534060splitHere46","<bean id=<doubleQuotes46>manager<doubleQuotes46><newline46mondego>      init-method=<doubleQuotes46>init<doubleQuotes46><newline46mondego>      abstract=<doubleQuotes46>true<doubleQuotes46><newline46mondego>      class=<doubleQuotes46>Manager<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>theList<doubleQuotes46>><newline46mondego>        <list/> <!-- this will be overriden or extnded -->    <newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"688splitHere46","17534060splitHere46","<bean id=<doubleQuotes46>managerA<doubleQuotes46><newline46mondego>      parent=<doubleQuotes46>manager<doubleQuotes46><newline46mondego>      scope=<doubleQuotes46>singleton<doubleQuotes46><newline46mondego>      lazy-init=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>theList<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <ref bean=<doubleQuotes46>impl1<doubleQuotes46>/><newline46mondego>            <ref bean=<doubleQuotes46>impl2<doubleQuotes46>/><newline46mondego>        </list>    <newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"689splitHere46","17534060splitHere46","<list merge=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>"
"690splitHere46","17534061splitHere46","public class test <newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Runtime rt = Runtime.getRuntime();<newline46mondego>        String cmd[] = new String[] {<doubleQuotes46>yum<doubleQuotes46>,  <doubleQuotes46>-y<doubleQuotes46>, <doubleQuotes46>install<doubleQuotes46>, <doubleQuotes46>rpm-build<doubleQuotes46>};<newline46mondego>        Process ps = rt.exec(cmd);<newline46mondego><newline46mondego>        BufferedReader readerStd = new BufferedReader(new InputStreamReader(ps.getInputStream()));  <newline46mondego><newline46mondego>        BufferedReader readerErr = new BufferedReader(new InputStreamReader(ps.getInputStream()));  <newline46mondego><newline46mondego>        String line = null;  <newline46mondego>        while ((line = readerStd.readLine()) != null) {  <newline46mondego>            System.out.println(line);  <newline46mondego>        }  <newline46mondego>        System.out.println(<doubleQuotes46>------ Std Err -------<doubleQuotes46>);<newline46mondego>        while ((line = readerErr.readLine()) != null) {  <newline46mondego>            System.out.println(line);  <newline46mondego>        }<newline46mondego><newline46mondego>        if (ps.waitFor()==0) {<newline46mondego>            System.out.println(<doubleQuotes46>success<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            System.out.println(<doubleQuotes46>Failed<doubleQuotes46>);<newline46mondego>        } <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"691splitHere46","17534070splitHere46","class Logger {<newline46mondego>    private final BufferedWriter w;<newline46mondego><newline46mondego>    public Logger(final File file) throws IOException {<newline46mondego>        this.w = new BufferedWriter(new FileWriter(file));<newline46mondego>        LoggerRegistry.register(this);<newline46mondego>    }<newline46mondego><newline46mondego>    public void log(String s) throws IOException {<newline46mondego>        synchronized (this.w) {<newline46mondego>            this.w.write(s);<newline46mondego>            this.w.write(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void close() throws IOException {<newline46mondego>        this.w.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"692splitHere46","17534070splitHere46","ulimit -a"
"693splitHere46","17534070splitHere46","FileWriter"
"694splitHere46","17534070splitHere46","write"
"695splitHere46","17534070splitHere46","BufferedWriter"
"696splitHere46","17534070splitHere46","FileWriter"
"697splitHere46","17534070splitHere46","class LoggerRegistry {<newline46mondego>    private final static List<Logger> loggers = new ArrayList<Logger>();<newline46mondego><newline46mondego>    public static void register(Logger l) {<newline46mondego>        loggers.add(l);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void close() {<newline46mondego>        for (Logger l : loggers) {<newline46mondego>            try {<newline46mondego>                l.close();<newline46mondego>            } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"698splitHere46","17534070splitHere46","public static void main(String[] args) throws IOException {<newline46mondego>    try {<newline46mondego>        final Logger l = new Logger(new File(<doubleQuotes46>/tmp/1<doubleQuotes46>));<newline46mondego>        l.log(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego><newline46mondego>        // ... <newline46mondego><newline46mondego>    } finally {<newline46mondego>        LoggerRegistry.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"699splitHere46","17534070splitHere46","close"
"700splitHere46","17534070splitHere46","ServletContextListener"
"701splitHere46","17534070splitHere46","contextDestroyed"
"702splitHere46","17534070splitHere46","BufferedWriter"
"703splitHere46","17534070splitHere46","close"
"704splitHere46","17534070splitHere46","flush"
"705splitHere46","17534156splitHere46","ExecutorService"
"706splitHere46","17534156splitHere46","ExecutorService"
"707splitHere46","17534234splitHere46","for"
"708splitHere46","17534234splitHere46","int[][] b = new int[3][];<newline46mondego>for (int i = 0; i < 3; i++) {<newline46mondego>  b[i] = Arrays.copyOf(a[i], a[i].length);<newline46mondego>}<newline46mondego>"
"709splitHere46","17534348splitHere46","spacial partitioning"
"710splitHere46","17534348splitHere46","distance"
"711splitHere46","17534348splitHere46","getX()"
"712splitHere46","17534348splitHere46","for(int i=0;i<enemies.size();i++){<newline46mondego>    Enemy enemy = enemies.get(i);<newline46mondego>    for(int j=0;j<upgrades.size();j++){<newline46mondego>        Upgrade upgrade = upgrades.get(j);<newline46mondego>        if(main.distance(enemy.getX(),upgrade.getX(),enemy.getY(),upgrade.getY())<15){<newline46mondego>            //enemy is close to upgrade.<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"713splitHere46","17534414splitHere46","command"
"714splitHere46","17534414splitHere46","`java -jar <name of jar>.jar`<newline46mondego>"
"715splitHere46","17534504splitHere46","CharMatcher"
"716splitHere46","17534504splitHere46","public int findFirstOf( String sequence, String str ) {<newline46mondego>    return CharMatcher.anyOf( str ).indexIn( sequence );<newline46mondego>}<newline46mondego><newline46mondego>public int findFirstNotOf( String sequence, String str ) {<newline46mondego>    return CharMatcher.anyOf( str ).negate().indexIn( sequence );<newline46mondego>}<newline46mondego><newline46mondego>public int findLastOf( String sequence, String str ) {<newline46mondego>    return CharMatcher.anyOf( str ).lastIndexIn( sequence );<newline46mondego>}<newline46mondego><newline46mondego>public int findLastNotOf( String sequence, String str ) {<newline46mondego>    return CharMatcher.anyOf( str ).negate().lastIndexIn( sequence );<newline46mondego>}<newline46mondego>"
"717splitHere46","17534504splitHere46","find_last_not_of()"
"718splitHere46","17534637splitHere46","Mon Jun 24 10:46:11 CDT 2013"
"719splitHere46","17534637splitHere46","2013-06-24 10:46:11"
"720splitHere46","17534637splitHere46","Mon Jun 24 10:46:11 CDT 2013"
"721splitHere46","17534637splitHere46","2013-06-24 10:46:11"
"722splitHere46","17534637splitHere46","SimpleDateFormat"
"723splitHere46","17534637splitHere46","DateFormat#format(Date)"
"724splitHere46","17534637splitHere46","<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>"
"725splitHere46","17534637splitHere46","String myDt = format.format(date);<newline46mondego>// 2013-06-24 10:46:11<newline46mondego>"
"726splitHere46","17534749splitHere46","Map"
"727splitHere46","17534749splitHere46","FileHashMap"
"728splitHere46","17534749splitHere46","FileHashMap<String, String> myMap = <newline46mondego>    new FileHashMap<String, String>(<doubleQuotes46>c:/myFile<doubleQuotes46>, FileHashMap.CREATE);<newline46mondego>...<newline46mondego>myMap.save();<newline46mondego>"
"729splitHere46","17534749splitHere46","CREATE"
"730splitHere46","17534749splitHere46","FileHashMap.CREATE"
"731splitHere46","17534749splitHere46","NO_CREATE"
"732splitHere46","17534907splitHere46","taskkill /IM notepad.exe"
"733splitHere46","17534907splitHere46","try{<newline46mondego>    Process process = runtime.exec(<doubleQuotes46>taskkill /IM notepad.exe<doubleQuotes46>);<newline46mondego>} catch (IOException ioe){<newline46mondego>    JFrame alertFrame = new JFrame();<newline46mondego>    JOptionPane.showMessageDialog(alertFrame, <doubleQuotes46>Error closing notepad.<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"734splitHere46","17534931splitHere46","switch (houseColor) { <newline46mondego>  case 0: houseColor = Color.red; break;<newline46mondego>  case 1: houseColor = Color.blue; break;<newline46mondego>  case 2: houseColor = Color.green; break;<newline46mondego>"
"735splitHere46","17534931splitHere46","private void drawHouses() {<newline46mondego>    // make an array of colors<newline46mondego>    Color[] colors = new Color[] { Color.RED, Color.BLUE, Color.GREEN };<newline46mondego><newline46mondego>    // loop through the colors<newline46mondego>    for(int i = 0 ; i < colors.length; i ++ ) {<newline46mondego>       // use the index of the loop for the position of the house and for the current color.<newline46mondego>       drawHouse(i * 50, 100, colors[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private void drawHouse(int x, int y, Color color) {<newline46mondego>    // draw house here<newline46mondego><newline46mondego>}<newline46mondego>"
"736splitHere46","17534943splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego>import java.awt.event.KeyListener;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import javax.swing.BorderFactory;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JEditorPane;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTextArea;<newline46mondego>import javax.swing.KeyStroke;<newline46mondego>import javax.swing.SizeRequirements;<newline46mondego>import javax.swing.border.TitledBorder;<newline46mondego>import javax.swing.text.*;<newline46mondego>import javax.swing.text.html.HTMLDocument;<newline46mondego>import javax.swing.text.html.HTMLEditorKit;<newline46mondego>import javax.swing.text.html.InlineView;<newline46mondego>import javax.swing.text.html.StyleSheet;<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>public class LineWrapTest extends JFrame implements ActionListener, KeyListener {<newline46mondego><newline46mondego>    //This is the separator.<newline46mondego>    private String SEPARATOR = System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>);<newline46mondego>    private JButton btnSend;<newline46mondego>    private JTextArea textAreaIn;<newline46mondego>    private JEditorPane textAreaOut;<newline46mondego>    private JScrollPane outputScrollPane;<newline46mondego>    private HTMLEditorKit kit;<newline46mondego>    private HTMLDocument doc;<newline46mondego><newline46mondego><newline46mondego>    public LineWrapTest() {<newline46mondego><newline46mondego>        this.setSize(600, 500);<newline46mondego>        this.setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>        this.setLocationRelativeTo(null);<newline46mondego>        this.setTitle(<doubleQuotes46>Linewrap Test<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Not important for problem<newline46mondego>     */<newline46mondego>    public void paintScreen() {<newline46mondego><newline46mondego>        this.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        this.add(this.getPanelOut(), BorderLayout.CENTER);<newline46mondego>        this.add(this.getPanelIn(), BorderLayout.SOUTH);<newline46mondego><newline46mondego>        this.textAreaIn.requestFocusInWindow();<newline46mondego>        this.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    /**<newline46mondego>     * Not important for problem<newline46mondego>     * <newline46mondego>     * @return panelOut<newline46mondego>     */<newline46mondego>    private JPanel getPanelOut() {<newline46mondego><newline46mondego>        JPanel panelOut = new JPanel();<newline46mondego>        panelOut.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        this.textAreaOut = new JEditorPane();<newline46mondego>        this.textAreaOut.setEditable(false);<newline46mondego>        this.textAreaOut.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego><newline46mondego>        //I added this scroll pane.<newline46mondego>        this.outputScrollPane = new JScrollPane(this.textAreaOut);<newline46mondego><newline46mondego>        /*<newline46mondego>         * This is a whole whack of code.  It's a combination of two sources.<newline46mondego>         * It achieves the wrapping you desire: by word and longgg strings<newline46mondego>         * It is a custom addition to HTMLEditorKit<newline46mondego>         */<newline46mondego>        this.kit = new HTMLEditorKit(){<newline46mondego>           @Override <newline46mondego>           public ViewFactory getViewFactory(){ <newline46mondego><newline46mondego>               return new HTMLFactory(){ <newline46mondego>                   public View create(Element e){ <newline46mondego>                      View v = super.create(e); <newline46mondego>                      if(v instanceof InlineView){ <newline46mondego>                          return new InlineView(e){ <newline46mondego>                              public int getBreakWeight(int axis, float pos, float len) { <newline46mondego>                                  //return GoodBreakWeight;<newline46mondego>                                  if (axis == View.X_AXIS) {<newline46mondego>                                      checkPainter();<newline46mondego>                                      int p0 = getStartOffset();<newline46mondego>                                      int p1 = getGlyphPainter().getBoundedPosition(this, p0, pos, len);<newline46mondego>                                      if (p1 == p0) {<newline46mondego>                                          // can't even fit a single character<newline46mondego>                                          return View.BadBreakWeight;<newline46mondego>                                      }<newline46mondego>                                      try {<newline46mondego>                                          //if the view contains line break char return forced break<newline46mondego>                                          if (getDocument().getText(p0, p1 - p0).indexOf(SEPARATOR) >= 0) {<newline46mondego>                                              return View.ForcedBreakWeight;<newline46mondego>                                          }<newline46mondego>                                      }<newline46mondego>                                      catch (BadLocationException ex) {<newline46mondego>                                          //should never happen<newline46mondego>                                      }  <newline46mondego><newline46mondego>                                  }<newline46mondego>                                  return super.getBreakWeight(axis, pos, len);<newline46mondego>                              } <newline46mondego>                              public View breakView(int axis, int p0, float pos, float len) { <newline46mondego>                                  if (axis == View.X_AXIS) {<newline46mondego>                                      checkPainter();<newline46mondego>                                      int p1 = getGlyphPainter().getBoundedPosition(this, p0, pos, len);<newline46mondego>                                      try {<newline46mondego>                                          //if the view contains line break char break the view<newline46mondego>                                          int index = getDocument().getText(p0, p1 - p0).indexOf(SEPARATOR);<newline46mondego>                                          if (index >= 0) {<newline46mondego>                                              GlyphView v = (GlyphView) createFragment(p0, p0 + index + 1);<newline46mondego>                                              return v;<newline46mondego>                                          }<newline46mondego>                                      }<newline46mondego>                                      catch (BadLocationException ex) {<newline46mondego>                                          //should never happen<newline46mondego>                                      }<newline46mondego><newline46mondego>                                  }<newline46mondego>                                  return super.breakView(axis, p0, pos, len);<newline46mondego>                            } <newline46mondego>                          }; <newline46mondego>                      } <newline46mondego>                      else if (v instanceof ParagraphView) { <newline46mondego>                          return new ParagraphView(e) { <newline46mondego>                              protected SizeRequirements calculateMinorAxisRequirements(int axis, SizeRequirements r) { <newline46mondego>                                  if (r == null) { <newline46mondego>                                        r = new SizeRequirements(); <newline46mondego>                                  } <newline46mondego>                                  float pref = layoutPool.getPreferredSpan(axis); <newline46mondego>                                  float min = layoutPool.getMinimumSpan(axis); <newline46mondego>                                  // Don't include insets, Box.getXXXSpan will include them. <newline46mondego>                                    r.minimum = (int)min; <newline46mondego>                                    r.preferred = Math.max(r.minimum, (int) pref); <newline46mondego>                                    r.maximum = Integer.MAX_VALUE; <newline46mondego>                                    r.alignment = 0.5f; <newline46mondego>                                  return r; <newline46mondego>                                } <newline46mondego><newline46mondego>                            }; <newline46mondego>                        } <newline46mondego>                      return v; <newline46mondego>                    } <newline46mondego>                }; <newline46mondego>            } <newline46mondego>        }; <newline46mondego><newline46mondego>        this.doc = new HTMLDocument();<newline46mondego><newline46mondego>        StyleSheet styleSheet = this.kit.getStyleSheet();<newline46mondego>        this.kit.setStyleSheet(styleSheet);<newline46mondego><newline46mondego>        this.textAreaOut.setEditorKit(this.kit);<newline46mondego>        this.textAreaOut.setDocument(this.doc);<newline46mondego><newline46mondego>        TitledBorder border = BorderFactory.createTitledBorder(<doubleQuotes46>Output<doubleQuotes46>);<newline46mondego>        border.setTitleJustification(TitledBorder.CENTER);<newline46mondego><newline46mondego>        panelOut.setBorder(border);<newline46mondego><newline46mondego>        //I changed this to add the scrollpane, which now contains<newline46mondego>        //the JEditorPane<newline46mondego>        panelOut.add(this.outputScrollPane);<newline46mondego><newline46mondego>        return panelOut;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Not important for problem<newline46mondego>     * <newline46mondego>     * @return panelIn<newline46mondego>     */<newline46mondego>    private JPanel getPanelIn() {<newline46mondego><newline46mondego>        JPanel panelIn = new JPanel();<newline46mondego>        panelIn.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        this.textAreaIn = new JTextArea();<newline46mondego>        this.textAreaIn.setLineWrap(true);<newline46mondego>        this.textAreaIn.setWrapStyleWord(true);<newline46mondego><newline46mondego>        //This disables enter from going to a new line.  Your key listener does that.<newline46mondego>        this.textAreaIn.getInputMap().put(KeyStroke.getKeyStroke(<doubleQuotes46>ENTER<doubleQuotes46>), <doubleQuotes46>none<doubleQuotes46>);<newline46mondego>        //For the key listener to work, it needs to be added to the component<newline46mondego>        this.textAreaIn.addKeyListener(this);<newline46mondego><newline46mondego>        TitledBorder border = BorderFactory.createTitledBorder(<doubleQuotes46>Input<doubleQuotes46>);<newline46mondego>        border.setTitleJustification(TitledBorder.CENTER);<newline46mondego><newline46mondego>        panelIn.setBorder(border);<newline46mondego>        panelIn.add(this.getBtnSend(), BorderLayout.EAST);<newline46mondego>        panelIn.add(this.textAreaIn, BorderLayout.CENTER);<newline46mondego><newline46mondego>        return panelIn;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Not important for problem<newline46mondego>     * <newline46mondego>     * @return btnSend<newline46mondego>     */<newline46mondego>    private JButton getBtnSend() {<newline46mondego><newline46mondego>        this.btnSend = new JButton(<doubleQuotes46>Send<doubleQuotes46>);<newline46mondego>        this.btnSend.addActionListener(this);<newline46mondego><newline46mondego>        return this.btnSend;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    private void append(String text) {<newline46mondego><newline46mondego>        try {<newline46mondego>            this.kit.insertHTML(this.doc, this.doc.getLength(), text, 0, 0, null);<newline46mondego>        } catch (BadLocationException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private String getHTMLText() {<newline46mondego>        //I tried to find a work around for this but I couldn't.  It could be done<newline46mondego>        //by manipulating the HTMLDocument but it's beyond me.  Notice I changed<newline46mondego>        //<br/> to <p/>.  For some reason, <br/> no longer went to the next line<newline46mondego>        //when I added the custom wrap.  <p/> seems to work though.<newline46mondego>        String txtIn = this.textAreaIn.getText().trim().replaceAll(SEPARATOR, <doubleQuotes46><p/><doubleQuotes46>);<newline46mondego><newline46mondego>        //My IDE recommends you use StringBuilder instead, that's up to you.<newline46mondego>        //I am not sure what the difference would be.<newline46mondego>        StringBuffer htmlBuilder = new StringBuffer();<newline46mondego><newline46mondego>        htmlBuilder.append(<doubleQuotes46><HTML><doubleQuotes46>);<newline46mondego>        htmlBuilder.append(txtIn);<newline46mondego>        htmlBuilder.append(<doubleQuotes46></HTML><doubleQuotes46>);<newline46mondego><newline46mondego>        return htmlBuilder.toString();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>        if (e.getSource() == this.btnSend) {<newline46mondego>            this.append(this.getHTMLText());<newline46mondego>            this.textAreaIn.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            this.textAreaIn.requestFocusInWindow();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        LineWrapTest test = new LineWrapTest();<newline46mondego>        test.paintScreen();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyPressed(KeyEvent e) {<newline46mondego>        if (e.getKeyCode() == KeyEvent.VK_ENTER){<newline46mondego>            if (!this.textAreaIn.getText().trim().isEmpty()) {<newline46mondego>                //I made this work by defining the SEPARATOR.<newline46mondego>                //You could use append(Separator) instead if you want.<newline46mondego>                this.textAreaIn.setText(this.textAreaIn.getText() + SEPARATOR);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyReleased(KeyEvent e) {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void keyTyped(KeyEvent e) {<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"737splitHere46","17535007splitHere46","NormalLoad"
"738splitHere46","17535007splitHere46","MonitorExit"
"739splitHere46","17535007splitHere46","instanceVar1 = value ;"
"740splitHere46","17535007splitHere46","synchronized(this) {"
"741splitHere46","17535007splitHere46","new Object"
"742splitHere46","17535007splitHere46","synchronized"
"743splitHere46","17535032splitHere46","-verbose:class"
"744splitHere46","17535032splitHere46","[Loaded junit.framework.AssertionFailedError from file:/D:/Documents%20and%20Settings/mike/.m2/repository/junit/junit/3.8.2/junit-3.8.2.jar]<newline46mondego>[Loaded junit.framework.ComparisonFailure from file:/D:/Documents%20and%20Settings/mike/.m2/repository/junit/junit/3.8.2/junit-3.8.2.jar]<newline46mondego>[Loaded org.jmock.core.SelfDescribing from file:/D:/Documents%20and%20Settings/mike/.m2/repository/jmock/jmock/1.2.0/jmock-1.2.0.jar]<newline46mondego>[Loaded org.apache.log4j.spi.Configurator from file:/D:/Documents%20and%20Settings/mike/.m2/repository/log4j/log4j/1.2.9/log4j-1.2.9.jar]<newline46mondego>[Loaded org.apache.log4j.xml.DOMConfigurator from file:/D:/Documents%20and%20Settings/mike/.m2/repository/log4j/log4j/1.2.9/log4j-1.2.9.jar]<newline46mondego>"
"745splitHere46","17535112splitHere46","if(a instanceof Car)<newline46mondego>    a = (Car) a ;<newline46mondego>else if(a instanceof Truck)<newline46mondego>    ...<newline46mondego>"
"746splitHere46","17535198splitHere46","Object#wait"
"747splitHere46","17535319splitHere46","dir *.txt<newline46mondego>"
"748splitHere46","17535319splitHere46","java MyProg.class 2 * 3<newline46mondego>"
"749splitHere46","17535382splitHere46","//assuming you are displaying your polygon in a JFrame with a JPanel<newline46mondego>public class SomeDrawingFrame extends JPanel{<newline46mondego>    SomeDrawingFrame(){<newline46mondego>    }<newline46mondego><newline46mondego>    @Override   //JFrame has this method that must be overwritten in order to <newline46mondego>                  display a rendered drawing.<newline46mondego><newline46mondego>    public void paintComponent(Graphics g){<newline46mondego>        super.paintComponent(g);<newline46mondego>        Polygon square = new Polygon();<newline46mondego><newline46mondego>        // these points will draw a square<newline46mondego>        square.addPoint((0, 0));    //use this.getWidth() method if you want to <newline46mondego>                                         create based on screen size<newline46mondego>        square.addPoint((0, 100));<newline46mondego>        square.addPoint((100, 100));<newline46mondego>        square.addPoint((100, 0)); <newline46mondego>        int y1Points[] = {0, 0, 100, 100};<newline46mondego><newline46mondego>        g.draw(polygon);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"750splitHere46","17535388splitHere46","Pane"
"751splitHere46","17535388splitHere46","TitledPane"
"752splitHere46","17535388splitHere46","TitlePane"
"753splitHere46","17535388splitHere46","<VBox styleClass=<doubleQuotes46>titled-pane<doubleQuotes46> <newline46mondego>      xmlns:fx=<doubleQuotes46>http://javafx.com/fxml/1<doubleQuotes46>  <newline46mondego>      xmlns=<doubleQuotes46>http://javafx.com/javafx/2.2<doubleQuotes46> ><newline46mondego>    <children><newline46mondego>        <TitledPane animated=<doubleQuotes46>false<doubleQuotes46> text=<doubleQuotes46>untitled<doubleQuotes46>><newline46mondego>            <content><newline46mondego>                <AnchorPane minHeight=<doubleQuotes46>0.0<doubleQuotes46> <newline46mondego>                            minWidth=<doubleQuotes46>0.0<doubleQuotes46> <newline46mondego>                            prefHeight=<doubleQuotes46>180.0<doubleQuotes46> <newline46mondego>                            prefWidth=<doubleQuotes46>200.0<doubleQuotes46> /><newline46mondego>            </content><newline46mondego>        </TitledPane><newline46mondego>        <TitledPane animated=<doubleQuotes46>false<doubleQuotes46> text=<doubleQuotes46>untitled<doubleQuotes46>><newline46mondego>            <content><newline46mondego>                <AnchorPane id=<doubleQuotes46>Content<doubleQuotes46> <newline46mondego>                            minHeight=<doubleQuotes46>0.0<doubleQuotes46> <newline46mondego>                            minWidth=<doubleQuotes46>0.0<doubleQuotes46> <newline46mondego>                            prefHeight=<doubleQuotes46>180.0<doubleQuotes46> <newline46mondego>                            prefWidth=<doubleQuotes46>200.0<doubleQuotes46> /><newline46mondego>            </content><newline46mondego>        </TitledPane><newline46mondego>        <Pane prefHeight=<doubleQuotes46>200.0<doubleQuotes46> prefWidth=<doubleQuotes46>200.0<doubleQuotes46> styleClass=<doubleQuotes46>content<doubleQuotes46>><newline46mondego>            <children><newline46mondego>                <Button layoutX=<doubleQuotes46>74.0<doubleQuotes46> <newline46mondego>                        layoutY=<doubleQuotes46>21.0<doubleQuotes46> <newline46mondego>                        mnemonicParsing=<doubleQuotes46>false<doubleQuotes46> <newline46mondego>                        text=<doubleQuotes46>Button<doubleQuotes46> /><newline46mondego>            </children><newline46mondego>        </Pane><newline46mondego>    </children><newline46mondego></VBox><newline46mondego>"
"754splitHere46","17535388splitHere46","Pane"
"755splitHere46","17535388splitHere46","Pane"
"756splitHere46","17535388splitHere46","Pane"
"757splitHere46","17535388splitHere46","TitledPanes"
"758splitHere46","17535388splitHere46","TitledPane"
"759splitHere46","17535388splitHere46",".titled-pane .content { // styles defined here }<newline46mondego>"
"760splitHere46","17535388splitHere46","Pane"
"761splitHere46","17535388splitHere46","VBox"
"762splitHere46","17535388splitHere46","titledPanes"
"763splitHere46","17535388splitHere46","TitledPanes"
"764splitHere46","17535504splitHere46","if(_uploadTree.getFiles().getFiles().size() > 0) {<newline46mondego>    _client.write(<doubleQuotes46>iwanttoupload<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"765splitHere46","17535916splitHere46","<doubleQuotes46>glossary<doubleQuotes46>"
"766splitHere46","17535916splitHere46","Map"
"767splitHere46","17535916splitHere46","Map<String, String>"
"768splitHere46","17535916splitHere46","String"
"769splitHere46","17535916splitHere46","Map<String, String>"
"770splitHere46","17535916splitHere46","JsonParser"
"771splitHere46","17535916splitHere46","Gson"
"772splitHere46","17535916splitHere46","String jsonObject = <doubleQuotes46>your example<doubleQuotes46>;<newline46mondego>JsonParser parser = new JsonParser();<newline46mondego>JsonObject obj = parser.parse(jsonObject).getAsJsonObject();<newline46mondego>JsonObject glossary = obj.get(<doubleQuotes46>glossary<doubleQuotes46>);<newline46mondego>"
"773splitHere46","17536173splitHere46","[<doubleQuotes46>02071231234<doubleQuotes46>, <doubleQuotes46>02071231235<doubleQuotes46>, <doubleQuotes46>02071231236<doubleQuotes46>, <doubleQuotes46>02071231237<doubleQuotes46>]"
"774splitHere46","17536173splitHere46","public static void main(String[] args) {<newline46mondego>    String start = <doubleQuotes46>02071231234<doubleQuotes46>;<newline46mondego>    String end = <doubleQuotes46>02071231237<doubleQuotes46>;<newline46mondego>    String leadingZeros = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    List<String> numbersFromStartToEnd = new ArrayList<String>();<newline46mondego><newline46mondego>    // get leading zeros (makes the assumption that all numbers will have same qty of leading zeros)<newline46mondego>    for(char digit : start.toCharArray()) {<newline46mondego>        if(digit != '0') { break; }<newline46mondego>        leadingZeros += <doubleQuotes46>0<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    // set up your BigInts<newline46mondego>    BigInteger s = new BigInteger(start);<newline46mondego>    BigInteger e = new BigInteger(end);<newline46mondego>    BigInteger one = new BigInteger(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego><newline46mondego>    // collect all numbers from start to end (adding on any leading zeros)<newline46mondego>    while (s.compareTo(e) <= 0) {<newline46mondego>        numbersFromStartToEnd.add(leadingZeros + s.toString());<newline46mondego>        s = s.add(one);<newline46mondego>    }<newline46mondego><newline46mondego>    // print the result<newline46mondego>    for(String string: numbersFromStartToEnd) {<newline46mondego>        System.out.println(string);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"775splitHere46","17536176splitHere46","enum ArticleType {<newline46mondego>    ONLINE, PAPER<newline46mondego>}<newline46mondego><newline46mondego>class Article implements Comparable<Article> {<newline46mondego><newline46mondego>    int year;<newline46mondego>    int month;<newline46mondego>    ArticleType type;<newline46mondego><newline46mondego>    Article(int year, int month, ArticleType type) {<newline46mondego>        this.year = year;<newline46mondego>        this.type = type;<newline46mondego>        this.month = month;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compareTo(Article o) {<newline46mondego>        return new CompareToBuilder()<newline46mondego>                .append(this.type, o.type)<newline46mondego>                .append(this.year, o.year)<newline46mondego>                .append(this.month, o.month)<newline46mondego>                .toComparison();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return Objects.toStringHelper(this)<newline46mondego>                .add(<doubleQuotes46>month<doubleQuotes46>, month)<newline46mondego>                .add(<doubleQuotes46>year<doubleQuotes46>, year)<newline46mondego>                .add(<doubleQuotes46>type<doubleQuotes46>, type)<newline46mondego>                .toString();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Test<newline46mondego>public void testSortArticles() throws Exception {<newline46mondego>    List<Article> articleList = new ArrayList<>();<newline46mondego>    articleList.add(new Article(2012, 1, ArticleType.ONLINE));<newline46mondego>    articleList.add(new Article(2011, 1, ArticleType.ONLINE));<newline46mondego>    articleList.add(new Article(2011, 6, ArticleType.ONLINE));<newline46mondego>    articleList.add(new Article(2010, 1, ArticleType.ONLINE));<newline46mondego>    articleList.add(new Article(2010, 1, ArticleType.PAPER));<newline46mondego>    articleList.add(new Article(2010, 2, ArticleType.PAPER));<newline46mondego>    articleList.add(new Article(2010, 3, ArticleType.PAPER));<newline46mondego>    articleList.add(new Article(2012, 1, ArticleType.PAPER));<newline46mondego>    articleList.add(new Article(2012, 9, ArticleType.PAPER));<newline46mondego><newline46mondego>    Collections.sort(articleList);<newline46mondego><newline46mondego>    System.out.println(articleList);<newline46mondego>}<newline46mondego>"
"776splitHere46","17536176splitHere46","[Article{month=1, year=2010, type=ONLINE}, Article{month=1, year=2010, type=PAPER},<newline46mondego> Article{month=2, year=2010, type=PAPER}, Article{month=3, year=2010, type=PAPER},<newline46mondego> Article{month=1, year=2011, type=ONLINE}, Article{month=6, year=2011, type=ONLINE},<newline46mondego> Article{month=1, year=2012, type=ONLINE}, Article{month=1, year=2012, type=PAPER},<newline46mondego> Article{month=9, year=2012, type=PAPER}]<newline46mondego>"
"777splitHere46","17536206splitHere46","@Produces"
"778splitHere46","17536206splitHere46","Accept"
"779splitHere46","17536206splitHere46","@GET<newline46mondego>@Produces({MediaType.APPLICATION_JSON, <newline46mondego>           MediaType.APPLICATION_XML})<newline46mondego>public Response foo()<newline46mondego>{<newline46mondego>     PersonObj obj = new PersonObj();<newline46mondego><newline46mondego>     //Do something...<newline46mondego>     return Response.ok().entity(obj).build();<newline46mondego>}<newline46mondego>"
"780splitHere46","17536206splitHere46","PersonObj"
"781splitHere46","17536206splitHere46","@XmlRootElement<newline46mondego>@XmlType(propOrder = {<doubleQuotes46>firstName<doubleQuotes46>, <doubleQuotes46>lastName<doubleQuotes46>})<newline46mondego>public class PersonObj<newline46mondego>{<newline46mondego>  private String firstName;<newline46mondego>  private String lastName;<newline46mondego><newline46mondego>  //Getters and Setters Removed For Brevity<newline46mondego>}<newline46mondego>"
"782splitHere46","17536206splitHere46","MessageBodyWriter"
"783splitHere46","17536206splitHere46","Provider<newline46mondego>@Produces({<doubleQuotes46>application/x-mycustomtype})<newline46mondego>public class MyCustomTypeMessageBodyWriter implements MessageBodyWriter {<newline46mondego><newline46mondego>}<newline46mondego>"
"784splitHere46","17536206splitHere46","MessageBodyReader"
"785splitHere46","17536206splitHere46","@Consumes"
"786splitHere46","17536346splitHere46","fourArray[column-1][column2] = arraySidesInteger[column2];<newline46mondego>"
"787splitHere46","17536346splitHere46","for (int i = 0; i < arraySidesInteger.length(); i++) {<newline46mondego>    fourArray[i][column2] = arraySidesInteger[i];<newline46mondego>}<newline46mondego>"
"788splitHere46","17536346splitHere46","column"
"789splitHere46","17536346splitHere46","column2"
"790splitHere46","17536346splitHere46","column"
"791splitHere46","17536360splitHere46","My goal of using zero crossing is to eliminate the unvoiced part of the signal,,, and this code gives back the ZERO-CROSSING RATE. SO how will i do that?!"
"792splitHere46","17536360splitHere46","How will i know how much is a <doubleQuotes46>low<doubleQuotes46> zero-crossing rate and how much is a <doubleQuotes46>high<doubleQuotes46> zero-crossing rate???"
"793splitHere46","17536360splitHere46","int lastSign = 0;<newline46mondego>int lastCrossing = 0;<newline46mondego>float nextZeroCrossing( float newSample ) {<newline46mondego>   int thisSign = newSample > 0 ? 1 : -1 ;<newline46mondego>   if( thisSign != lastSign ) {<newline46mondego>      lastSign = thisSign;<newline46mondego>      //zero crossing has happened. Update our estimate of Zr using lastCrossing and return that<newline46mondego>   } else {<newline46mondego>      ++lastCrossing;<newline46mondego>      //zero crossing has not happened. Return existing Zr<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"794splitHere46","17536384splitHere46","// use wathever charset encoding you know is pressent on the socket stream like UTF-8<newline46mondego>new InputStreamReader(socket.getInputStream(), <doubleQuotes46>US-ASCII<doubleQuotes46>) <newline46mondego>"
"795splitHere46","17536384splitHere46","while ((requestString = clientRequest.readLine()) != null) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"796splitHere46","17536489splitHere46","System.out.println(new String(Character.toChars(9775)));<newline46mondego>"
"797splitHere46","17536620splitHere46","useDelimiter(<doubleQuotes46>\\t<doubleQuotes46>)"
"798splitHere46","17536620splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>public class ScannerTest<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        String input = <doubleQuotes46>Some\ttab delimited\tstring\twhere\tsome words\tare\tseparated\tby spaces.<doubleQuotes46>;<newline46mondego>        Scanner sc = new Scanner(input).useDelimiter(<doubleQuotes46>\\t<doubleQuotes46>);<newline46mondego>        while (sc.hasNext())<newline46mondego>        {<newline46mondego>            System.out.println(sc.next());<newline46mondego>        }<newline46mondego>        sc.close();<newline46mondego>    }<newline46mondego>}"
"799splitHere46","17536620splitHere46","Some<newline46mondego>tab delimited<newline46mondego>string<newline46mondego>where<newline46mondego>some words<newline46mondego>are<newline46mondego>separated<newline46mondego>by spaces."
"800splitHere46","17536809splitHere46","import java.security.AccessControlContext;<newline46mondego>import java.security.AccessController;<newline46mondego>import java.security.CodeSource;<newline46mondego>import java.security.Permissions;<newline46mondego>import java.security.PrivilegedExceptionAction;<newline46mondego>import java.security.ProtectionDomain;<newline46mondego>import java.security.cert.Certificate;<newline46mondego><newline46mondego>public class QuickTest {<newline46mondego><newline46mondego>    public static class NoThreadsSecurityManager extends SecurityManager {<newline46mondego><newline46mondego>        public void checkAccess(ThreadGroup g) {<newline46mondego>            super.checkAccess(g);<newline46mondego>            checkPermission(new RuntimePermission(<doubleQuotes46>exitVM<doubleQuotes46>));<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static class SimpleRunnable implements PrivilegedExceptionAction<Object> {<newline46mondego>        @Override<newline46mondego>        public Object run() {<newline46mondego>            try {<newline46mondego>                Thread t = new Thread(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        System.out.println(<doubleQuotes46>Thread.run()<doubleQuotes46>);<newline46mondego>                    }<newline46mondego>                });<newline46mondego>                t.start();<newline46mondego>                t.join();<newline46mondego>            } catch (Exception ex) {<newline46mondego>                System.out.println(<doubleQuotes46>Error running thread: <doubleQuotes46> + ex);<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void testModifyThreadGroup() {<newline46mondego><newline46mondego>        // grant no permissions<newline46mondego>        Permissions perms = new Permissions();<newline46mondego><newline46mondego>        ProtectionDomain domain = new ProtectionDomain(new CodeSource(null, (Certificate[]) null), perms);<newline46mondego>        AccessControlContext _accessControlContext = new AccessControlContext(new ProtectionDomain[] { domain });<newline46mondego><newline46mondego>        try {<newline46mondego>            AccessController.doPrivileged(new SimpleRunnable(), _accessControlContext);<newline46mondego>        } catch (Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>Access Error running doPrivileged: <doubleQuotes46> + e);<newline46mondego>        }<newline46mondego><newline46mondego>        new SimpleRunnable().run();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.setSecurityManager(new NoThreadsSecurityManager());<newline46mondego>        new QuickTest().testModifyThreadGroup();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"801splitHere46","17536918splitHere46","<controlsView<newline46mondego>    android:id='full_content_controls'<newline46mondego>    ...<newline46mondego>    ><newline46mondego>"
"802splitHere46","17537088splitHere46","<w:dataBinding w:xpath=<doubleQuotes46>/invoice[1]/items[1]/item[1]/name[1]<doubleQuotes46> w:storeItemID=<doubleQuotes46>{3C1B665A-D738-4822-8EFB-14B133235CCB}<doubleQuotes46>/><newline46mondego>"
"803splitHere46","17537152splitHere46","NullPointerException"
"804splitHere46","17537152splitHere46","p[i].x = (float)tx;<newline46mondego>"
"805splitHere46","17537152splitHere46","x"
"806splitHere46","17537152splitHere46","p"
"807splitHere46","17537152splitHere46","i"
"808splitHere46","17537152splitHere46","p[i] = new point();<newline46mondego>"
"809splitHere46","17537249splitHere46","MyTextField"
"810splitHere46","17537249splitHere46","MyPasswordField"
"811splitHere46","17537277splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Canvas;<newline46mondego>import java.awt.Dimension;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public boolean running = false; /// <=============== invalid location <newline46mondego><newline46mondego><newline46mondego>public class Game extends Canvas implements Runnable { // <==== class starts here<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    public static final int WIDTH = 160;<newline46mondego>    public static final int HEIGHT = WIDTH / 12 * 9;<newline46mondego>    public static final int SCALE = 3;<newline46mondego>    public static final String NAME = <doubleQuotes46>Game<doubleQuotes46>;<newline46mondego>    ...<newline46mondego>"
"812splitHere46","17537277splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Canvas;<newline46mondego>import java.awt.Dimension;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego><newline46mondego>public class Game extends Canvas implements Runnable { // <==== class starts here<newline46mondego><newline46mondego>    public boolean running = false; /// <=============== valid location<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    public static final int WIDTH = 160;<newline46mondego>    public static final int HEIGHT = WIDTH / 12 * 9;<newline46mondego>    public static final int SCALE = 3;<newline46mondego>    public static final String NAME = <doubleQuotes46>Game<doubleQuotes46>;<newline46mondego>    ...<newline46mondego>"
"813splitHere46","17537297splitHere46","getSupportFragmentManager().executePendingTransactions()"
"814splitHere46","17537297splitHere46","fragment_question_displayer frag =  (fragment_question_displayer)getSupportFragmentManager()  .findFragmentByTag(<doubleQuotes46>why<doubleQuotes46>);"
"815splitHere46","17537310splitHere46","MessageFormat"
"816splitHere46","17537310splitHere46","System.out.println(MessageFormat.format(<doubleQuotes46>{0} + {1} = {2}<doubleQuotes46>, x, y, x + y));<newline46mondego>"
"817splitHere46","17537333splitHere46","-XX:+CITime"
"818splitHere46","17537333splitHere46","-XX:-CITime"
"819splitHere46","17537333splitHere46","-server -XX:+PrintCompilation"
"820splitHere46","17537333splitHere46","Accumulated compiler times (for compiled methods only)<newline46mondego>------------------------------------------------<newline46mondego>Total compilation time   :  0.179 s<newline46mondego>Standard compilation   :  0.128 s, Average : 0.004<newline46mondego>On stack replacement   :  0.047 s, Average : 0.024<newline46mondego>"
"821splitHere46","17537566splitHere46","@JsonCreator<newline46mondego>public static Type fromString(final String state)<newline46mondego>{<newline46mondego>  checkNotNull(state, <doubleQuotes46>State is required<doubleQuotes46>);<newline46mondego>  try<newline46mondego>  {<newline46mondego>    // You might need to change this depending on your enum instances<newline46mondego>    return valueOf(state.toUpperCase(Locale.ENGLISH));<newline46mondego>  }<newline46mondego>  catch (IllegalArgumentException iae)<newline46mondego>  {<newline46mondego>    // N.B. we don't pass the iae as the cause of this exception because<newline46mondego>    // this happens during invocation, and in that case the enum handler<newline46mondego>    // will report the root cause exception rather than the one we throw.<newline46mondego>    throw new MyException(<doubleQuotes46>A state supplied is invalid<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"822splitHere46","17537566splitHere46","@Provider<newline46mondego>public class MyExceptionMapper implements ExceptionMapper<MyException><newline46mondego>{<newline46mondego>  @Override<newline46mondego>  public Response toResponse(final MyException exception)<newline46mondego>  {<newline46mondego>    return Response.status(exception.getResponse().getStatus())<newline46mondego>                   .entity(<doubleQuotes46><doubleQuotes46>)<newline46mondego>                   .type(MediaType.APPLICATION_JSON)<newline46mondego>                   .build();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"823splitHere46","17537676splitHere46","headerColor"
"824splitHere46","17537676splitHere46","sColor"
"825splitHere46","17537676splitHere46","String headerColor = driver.findElement(By.xpath(<doubleQuotes46>.//*[@id='title']/h1<doubleQuotes46>)).getCssValue(<doubleQuotes46>color<doubleQuotes46>);<newline46mondego>// System.out.println(<doubleQuotes46>Actual value: <doubleQuotes46> + headerColor);<newline46mondego>Assert.assertEquals(<doubleQuotes46>some message<doubleQuotes46>, <doubleQuotes46>#FFFFFF<doubleQuotes46>, headerColor);<newline46mondego>"
"826splitHere46","17537833splitHere46","Arrays.sort(standingsB, new Comparator<Double[]>() {<newline46mondego>    public int compare(Double[] s1, Double[] s2) {<newline46mondego>        if (s1[0] > s2[0])<newline46mondego>            return 1;    // tells Arrays.sort() that s1 comes after s2<newline46mondego>        else if (s1[0] < s2[0])<newline46mondego>            return -1;   // tells Arrays.sort() that s1 comes before s2<newline46mondego>        else {<newline46mondego>            /*<newline46mondego>             * s1 and s2 are equal.  Arrays.sort() is stable,<newline46mondego>             * so these two rows will appear in their original order.<newline46mondego>             * You could take it a step further in this block by comparing<newline46mondego>             * s1[1] and s2[1] in the same manner, but it depends on how<newline46mondego>             * you want to sort in that situation.<newline46mondego>             */<newline46mondego>            return 0;<newline46mondego>        }<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"827splitHere46","17537862splitHere46","public class Another{  <newline46mondego>  void someFunc(Example ob){<newline46mondego>    ob.setThisInt(5);<newline46mondego>    ob.setThatInt(2);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"828splitHere46","17537862splitHere46","OuterClass.this.setThisInt(5);<newline46mondego>"
"829splitHere46","17537919splitHere46","mymethod(); call this method simply<newline46mondego>mymethod(); you can also pass parameters to it if you have defined parameterized method like mymethod(someObj, someVariable);<newline46mondego>"
"830splitHere46","17537929splitHere46","_rowId"
"831splitHere46","17537929splitHere46","displayRecordSet"
"832splitHere46","17537929splitHere46","_rowId"
"833splitHere46","17537929splitHere46","int rowId = c.getInt(c.getColumnIndex(DBAdapter.KEY_ROWID));<newline46mondego>_rowId = c.getInt(rowId);<newline46mondego>"
"834splitHere46","17537929splitHere46","columnIndex"
"835splitHere46","17537929splitHere46","rowId"
"836splitHere46","17537929splitHere46","rowId"
"837splitHere46","17537929splitHere46","_rowId"
"838splitHere46","17537929splitHere46","_rowId"
"839splitHere46","17537929splitHere46","rowId = 0"
"840splitHere46","17537929splitHere46","getInt(columnIndex)"
"841splitHere46","17537945splitHere46","db.insert(TABLE_NAME, null, contentValues); // see class ContentValues for details<newline46mondego>"
"842splitHere46","17538105splitHere46","++"
"843splitHere46","17538105splitHere46","+="
"844splitHere46","17538105splitHere46","subtotal += total; <newline46mondego>"
"845splitHere46","17538105splitHere46","subtotal=subtotal+total; <newline46mondego>"
"846splitHere46","17538105splitHere46","varToIncrement++;<newline46mondego>"
"847splitHere46","17538134splitHere46","while(i<size-1) {<newline46mondego>            if (elementData[i]<=elementData[i+1]){<newline46mondego>                count++;<newline46mondego>            }<newline46mondego>            else {<newline46mondego>                max_count=Math.max(max_count,count+1);<newline46mondego>                count=0;<newline46mondego>            }<newline46mondego>            i++;<newline46mondego>        }<newline46mondego>// added following 1 line.<newline46mondego>    max_count=Math.max(max_count,count+1);<newline46mondego>        return max_count;<newline46mondego>"
"848splitHere46","17538284splitHere46","private static ArrayList<Kanji> readFile() {<newline46mondego>    ArrayList<Kanji> kanjis = null;<newline46mondego>    try {<newline46mondego>        ObjectInputStream in = new ObjectInputStream(new FileInputStream(<newline46mondego>                <doubleQuotes46>study_list_kanji.txt<doubleQuotes46>));<newline46mondego>        while (true) {<newline46mondego>            try {<newline46mondego>                try {<newline46mondego>                    kanjis = ((ArrayList<Kanji>) in.readObject());<newline46mondego>                } catch (ClassNotFoundException e) {<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            } catch (EOFException e) {<newline46mondego>                return kanjis;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    } catch (FileNotFoundException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>    return kanjis;<newline46mondego>}<newline46mondego>"
"849splitHere46","17538284splitHere46","ArrayList<Kanji> kanjis = readFile();<newline46mondego>    if (kanjis != null) {<newline46mondego>        for (Kanji kanji : kanjis) {<newline46mondego>            System.out.println(<doubleQuotes46>kunyomi:  <doubleQuotes46> + kanji.get_kunyomi()[0]);<newline46mondego>            System.out.println(<doubleQuotes46>onyomi:  <doubleQuotes46> + kanji.get_onyomi()[0]);<newline46mondego>            System.out.println(<doubleQuotes46>significado:  <doubleQuotes46><newline46mondego>                    + kanji.get_significado()[0]);<newline46mondego>            System.out.println(<doubleQuotes46>unicode:  <doubleQuotes46> + kanji.get_unicode()[0]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"850splitHere46","17538397splitHere46","public CircleFromSimpleGeometricObject(double radius)"
"851splitHere46","17538397splitHere46","public SimpleGeometricObject()"
"852splitHere46","17538397splitHere46","super();<newline46mondego>"
"853splitHere46","17538397splitHere46","Circle"
"854splitHere46","17538397splitHere46","Rectangle"
"855splitHere46","17538428splitHere46","/**<newline46mondego>* The code for the button press could be as simple as follows<newline46mondego>*/<newline46mondego>popBtn.addActionListener(new ActionListener(){<newline46mondego>    public void actionPerformed(ActionEvent arg0){<newline46mondego>        try{<newline46mondego>            popTextField.setText(popStack);<newline46mondego>        }catch(IndexOutOfBoundsException e){<newline46mondego>            popTextField.setText(<doubleQuotes46>The stack is empty<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"856splitHere46","17538428splitHere46","/**<newline46mondego>* Simple Pop function<newline46mondego>*/<newline46mondego>private int popStack(){<newline46mondego>    if(top >= 0){<newline46mondego>        return myStack[top--];<newline46mondego>    }else{<newline46mondego>        throw new IndexOutOfBoundsException(<doubleQuotes46>The stack is empty<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"857splitHere46","17538430splitHere46","isContained"
"858splitHere46","17538430splitHere46","SymbolTableItem"
"859splitHere46","17538430splitHere46","obj"
"860splitHere46","17538430splitHere46","obj"
"861splitHere46","17538430splitHere46","LinkedList"
"862splitHere46","17538661splitHere46","String s = scanner.next();<newline46mondego>if (Character.isDigit(s.charAt(0)))<newline46mondego>"
"863splitHere46","17538661splitHere46","if (s.matches(<doubleQuotes46>[a-zA-Z]+<doubleQuotes46>))<newline46mondego>"
"864splitHere46","17538857splitHere46","webview.setInitialScale(1);<newline46mondego>webview.getSettings().setAppCacheEnabled(false);<newline46mondego>webview.getSettings().setJavaScriptEnabled(true);<newline46mondego>"
"865splitHere46","17538857splitHere46","android:hardwareAccelerated=<doubleQuotes46>true<doubleQuotes46><newline46mondego>"
"866splitHere46","17538857splitHere46","manifest"
"867splitHere46","17538857splitHere46","<manifest>"
"868splitHere46","17538857splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.INTERNET<doubleQuotes46> /><newline46mondego>"
"869splitHere46","17538857splitHere46","webview.setWebViewClient(new WebViewClient(){<newline46mondego>    public boolean shouldOverrideUrlLoading(WebView view, String url) {<newline46mondego>        if (url != null) {<newline46mondego>            view.getContext().startActivity(<newline46mondego>                new Intent(Intent.ACTION_VIEW, Uri.parse(url)));<newline46mondego>            return true;<newline46mondego>        } else {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>webview.loadUrl(<doubleQuotes46>http://www.stitcher.com/podcast/entrepreneuronfirecom/entrepreneur-on-fire-tim-ferriss-other-incredible-entrepreneurs<doubleQuotes46>);<newline46mondego>"
"870splitHere46","17538882splitHere46","class Student extends Person{}<newline46mondego>"
"871splitHere46","17538882splitHere46","static"
"872splitHere46","17538882splitHere46","Person"
"873splitHere46","17538882splitHere46","main"
"874splitHere46","17538882splitHere46","Student"
"875splitHere46","17538882splitHere46","Student.java"
"876splitHere46","17539382splitHere46","Comparator"
"877splitHere46","17539382splitHere46","public class MyKey implements Comparator<MyKey> {<newline46mondego>    private String field;<newline46mondego><newline46mondego>    public boolean compare(MyKey m1, MyKey m2) {<newline46mondego>        // We must ignore this.field!  We are comparing m1 and m2 ...<newline46mondego>        return m1.field.compareTo(m2.field);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>MyKey[] keys = ...<newline46mondego>Arrays.sort(keys, new MyKey());  // Note we have to pass an instance<newline46mondego>                                 // to provide the Comparator.<newline46mondego>"
"878splitHere46","17539382splitHere46","MyKey"
"879splitHere46","17539382splitHere46","MyKey"
"880splitHere46","17539382splitHere46","Comparable<MyKey>"
"881splitHere46","17539382splitHere46","String"
"882splitHere46","17539382splitHere46","String[] strings = new String[]{<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>};<newline46mondego>   Arrays.sort(strings);<newline46mondego>"
"883splitHere46","17539382splitHere46","String[] strings = new String[]{<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>};<newline46mondego>   Arrays.sort(strings, <doubleQuotes46>weasel<doubleQuotes46>);<newline46mondego>"
"884splitHere46","17539571splitHere46","List"
"885splitHere46","17539571splitHere46","int n= someInteger;<newline46mondego>List<Node> nodeList = new ArrayList<>(n);<newline46mondego>nodeList.add(new Node(0));<newline46mondego>nodeList.add(new Node(1));<newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>nodeList.add(new Node(n));<newline46mondego>"
"886splitHere46","17539571splitHere46","for(int i=0;i<n;i++){<newline46mondego>  nodeList.add(new Node());<newline46mondego>}<newline46mondego>"
"887splitHere46","17539631splitHere46","private static String processWord(String x) {<newline46mondego>    return x.replaceAll(<doubleQuotes46>[][(){},.;!?<>%]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"888splitHere46","17539631splitHere46","private static final Pattern UNDESIRABLES = Pattern.compile(<doubleQuotes46>[][(){},.;!?<>%]<doubleQuotes46>);<newline46mondego><newline46mondego>private static String processWord(String x) {<newline46mondego>    return UNDESIRABLES.matcher(x).replaceAll(<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"889splitHere46","17539631splitHere46","private static final boolean[] CHARS_TO_KEEP = new boolean[];<newline46mondego>"
"890splitHere46","17539699splitHere46","onContextInitialized()"
"891splitHere46","17539711splitHere46","List"
"892splitHere46","17539711splitHere46","ArrayList"
"893splitHere46","17539711splitHere46","List"
"894splitHere46","17539711splitHere46","ArrayList"
"895splitHere46","17539711splitHere46","ArrayList"
"896splitHere46","17539711splitHere46","public void sort(ArrayList lst);<newline46mondego>"
"897splitHere46","17539711splitHere46","public void sort(List lst);<newline46mondego>"
"898splitHere46","17539711splitHere46","ArrayList"
"899splitHere46","17539711splitHere46","LinkedList"
"900splitHere46","17539711splitHere46","Stack"
"901splitHere46","17539711splitHere46","Vector"
"902splitHere46","17539785splitHere46","System.out"
"903splitHere46","17539785splitHere46","System.out"
"904splitHere46","17539785splitHere46","System.setOut()"
"905splitHere46","17539852splitHere46","font = font.deriveFont(24F);<newline46mondego>"
"906splitHere46","17539852splitHere46","fontSmall = fontSmall.deriveFont(16F);<newline46mondego>"
"907splitHere46","17539965splitHere46","null"
"908splitHere46","17539965splitHere46","int i = null"
"909splitHere46","17539965splitHere46","null"
"910splitHere46","17539965splitHere46","0"
"911splitHere46","17539965splitHere46","0"
"912splitHere46","17539965splitHere46","false"
"913splitHere46","17539965splitHere46","null"
"914splitHere46","17539965splitHere46","public static void main(String[] args)<newline46mondego> {<newline46mondego>     int i;<newline46mondego>     System.out.print(i);<newline46mondego> }<newline46mondego>"
"915splitHere46","17539965splitHere46","0"
"916splitHere46","17539965splitHere46","false"
"917splitHere46","17539965splitHere46","null"
"918splitHere46","17539965splitHere46","public MyClass<newline46mondego>{<newline46mondego>   int theDate = 9;<newline46mondego>   String day = <doubleQuotes46>Tuesday<doubleQuotes46>;<newline46mondego><newline46mondego>   // This would return the default values of the class<newline46mondego>   public MyClass()<newline46mondego>   {<newline46mondego>   }<newline46mondego><newline46mondego>   // Where as this would return the new String<newline46mondego>   public MyClass (String aDiffDay)<newline46mondego>   {<newline46mondego>      day = aDiffDay;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"919splitHere46","17540079splitHere46","new FileInputStream(<doubleQuotes46>output.txt, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"920splitHere46","17540089splitHere46","OnClickListener"
"921splitHere46","17540089splitHere46","OnClickListener"
"922splitHere46","17540089splitHere46","OnClickListener"
"923splitHere46","17540089splitHere46","Button.OnClickListener anonymous_listener = new Button.OnClickListener() { ... };<newline46mondego>button.setOnClickListener(anonymous_listener);<newline46mondego>"
"924splitHere46","17540089splitHere46","OnClickListener"
"925splitHere46","17540229splitHere46","Iterator"
"926splitHere46","17540229splitHere46","int"
"927splitHere46","17540229splitHere46","Object"
"928splitHere46","17540244splitHere46","?"
"929splitHere46","17540244splitHere46","T"
"930splitHere46","17540244splitHere46","public class Foo<T extends Number> {<newline46mondego>  T value; // you can declare fields of type T here<newline46mondego><newline46mondego>  int foo() {<newline46mondego>    // Since you said T extends Number, you can call methods of Number on value<newline46mondego>    return value.intValue(); <newline46mondego>  }<newline46mondego>}<newline46mondego>"
"931splitHere46","17540244splitHere46","?"
"932splitHere46","17540244splitHere46","int getListSize(List<?> list) {<newline46mondego>    return list.size();<newline46mondego>}<newline46mondego>"
"933splitHere46","17540244splitHere46","Class.getName()"
"934splitHere46","17540328splitHere46","ArrayList<String> arrayList = new ArrayList<String>();<newline46mondego><newline46mondego>valueaddlist = (Button) findViewById(R.id.valueaddlist);<newline46mondego>        valueaddlist.setOnClickListener(new OnClickListener() {<newline46mondego>           public void onClick(View v){<newline46mondego>arrayList.add(product_id);<newline46mondego>arrayList.add(product_title);<newline46mondego>arrayList.add(product_image);<newline46mondego>arrayList.add(product_price);<newline46mondego>arrayList.add(product_desc);<newline46mondego><newline46mondego>   } <newline46mondego><newline46mondego>valuedisplaylist = (Button) findViewById(R.id.valuedisplaylist);<newline46mondego>        valuedisplaylist.setOnClickListener(new OnClickListener() {<newline46mondego>           public void onClick(View v){<newline46mondego>    Intent intent = new Intent(this,AddedListProducts.class);<newline46mondego>    intent.putStringArrayListExtra(<doubleQuotes46>arrayList<doubleQuotes46>, (ArrayList<String>) arrayList);<newline46mondego>    startActivity(intent);<newline46mondego>   } <newline46mondego>"
"935splitHere46","17540328splitHere46","ArrayList<String> ar1=getIntent().getExtras().getStringArrayList(<doubleQuotes46>arrayList<doubleQuotes46>); ArrayAdapter<String> arrayAdapter =      <newline46mondego>         new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1, ar1);<newline46mondego>         lv.setAdapter(arrayAdapter);<newline46mondego>"
"936splitHere46","17540341splitHere46","Honda"
"937splitHere46","17540341splitHere46","Bike"
"938splitHere46","17540341splitHere46","null"
"939splitHere46","17540341splitHere46","Bike"
"940splitHere46","17540341splitHere46","b"
"941splitHere46","17540341splitHere46","Honda"
"942splitHere46","17540341splitHere46","Bike"
"943splitHere46","17540341splitHere46","b.getClass()"
"944splitHere46","17540341splitHere46","Honda"
"945splitHere46","17540341splitHere46","Honda"
"946splitHere46","17540341splitHere46","Bike"
"947splitHere46","17540341splitHere46","b"
"948splitHere46","17540341splitHere46","// This would be invalid, assuming that getHondaGarage is declared in Honda<newline46mondego>String garage = b.getHondaGarage();<newline46mondego>"
"949splitHere46","17540341splitHere46","Bike"
"950splitHere46","17540341splitHere46","Bike"
"951splitHere46","17540393splitHere46","TimeZone london = TimeZone.getTimeZone(<doubleQuotes46>Europe/London<doubleQuotes46>);<newline46mondego>SimpleDateFormat format = new SimpleDateFormat(<doubleQuotes46>MM-dd-yyyy-HH-mm<doubleQuotes46>, Locale.UK);<newline46mondego>format.setTimeZone(london);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>ABC_0101-<doubleQuotes46> + format.format(new Date()));<newline46mondego>"
"952splitHere46","17540393splitHere46","yyyy-MM-ddTHHmmss"
"953splitHere46","17540393splitHere46","java.util.Date"
"954splitHere46","17540403splitHere46","WindowAdapter"
"955splitHere46","17540403splitHere46","windowClosing"
"956splitHere46","17540502splitHere46","package test.stackoverflow;<newline46mondego><newline46mondego>import android.os.Bundle;<newline46mondego>import android.app.Activity;<newline46mondego>import android.view.View;<newline46mondego>import android.view.View.OnClickListener;<newline46mondego>import android.widget.Button;<newline46mondego><newline46mondego>public class MainActivity extends Activity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>        Button btn=(Button) findViewById(R.id.btnOK);<newline46mondego>        btn.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego>                finish();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"957splitHere46","17540506splitHere46","static final class Segment<K,V> extends ReentrantLock<newline46mondego>   ...<newline46mondego>   Segment(float lf, int threshold, HashEntry<K,V>[] tab) {<newline46mondego>            this.loadFactor = lf;<newline46mondego>            this.threshold = threshold;<newline46mondego>            this.table = tab;<newline46mondego>   }<newline46mondego>   ...<newline46mondego>"
"958splitHere46","17540846splitHere46","tf.setFont=(new Font(<doubleQuotes46>Serif<doubleQuotes46>,Font.PLAIN,14));"
"959splitHere46","17540846splitHere46","tf.setFont(new Font(<doubleQuotes46>Serif<doubleQuotes46>,Font.PLAIN,14));<newline46mondego>"
"960splitHere46","17540846splitHere46","JTextField#setFont()"
"961splitHere46","17540910splitHere46","if(!model.containsAttribute(<doubleQuotes46>user<doubleQuotes46>)) model.addAttribute(<doubleQuotes46>user<doubleQuotes46>, new User());<newline46mondego>"
"962splitHere46","17540910splitHere46","@ModelAttribute"
"963splitHere46","17540910splitHere46","@RequestMapping(value = <doubleQuotes46>/register<doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>public String register(@ModelAttribute(<doubleQuotes46>user<doubleQuotes46>) User user) {<newline46mondego>"
"964splitHere46","17540941splitHere46","session.createCriteria(Car.class,<doubleQuotes46>car<doubleQuotes46>).createAlias(<doubleQuotes46>engine<doubleQuotes46>,<doubleQuotes46>engine<doubleQuotes46>);<newline46mondego>"
"965splitHere46","17540965splitHere46","Creacher"
"966splitHere46","17540965splitHere46","Human"
"967splitHere46","17540965splitHere46","man"
"968splitHere46","17540965splitHere46","woman"
"969splitHere46","17540996splitHere46","final File f = new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation().getPath());<newline46mondego>"
"970splitHere46","17541200splitHere46","string"
"971splitHere46","17541200splitHere46","<a href=<doubleQuotes46>${a?string('a.htm','b.html')}<doubleQuotes46> target=<doubleQuotes46>${openTarget}<doubleQuotes46>><newline46mondego>"
"972splitHere46","17541200splitHere46","string"
"973splitHere46","17541253splitHere46","Panel"
"974splitHere46","17541253splitHere46","panel"
"975splitHere46","17541253splitHere46","commandButton"
"976splitHere46","17541253splitHere46","panel"
"977splitHere46","17541253splitHere46","commandbutton"
"978splitHere46","17541329splitHere46","int EMAIL = 101;<newline46mondego><newline46mondego>Intent emailIntent = new Intent(android.content.Intent.ACTION_SEND);<newline46mondego>emailIntent.setType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego><newline46mondego>emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL,new String[]{});<newline46mondego>emailIntent.putExtra(android.content.Intent.EXTRA_BCC,new String[]{});<newline46mondego>emailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT, subject);<newline46mondego>emailIntent.putExtra(android.content.Intent.EXTRA_STREAM, pngUri);<newline46mondego>startActivityForResult(emailIntent,EMAIL);<newline46mondego>"
"979splitHere46","17541329splitHere46","protected void onActivityResult(int requestCode, int resultCode, Intent data)<newline46mondego>        {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            if(requestCode==EMAIL)<newline46mondego>            {<newline46mondego>                if(requestCode==EMAIL && resultCode==Activity.RESULT_OK)    <newline46mondego>                {<newline46mondego>                                if(myFile.exists())<newline46mondego>                                    myFile.delete();  <newline46mondego>                    Toast.makeText(mActivity, <doubleQuotes46>Mail sent.<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>                }<newline46mondego>                else if (requestCode==EMAIL && resultCode==Activity.RESULT_CANCELED)<newline46mondego>                {<newline46mondego>                    Toast.makeText(mActivity, <doubleQuotes46>Mail canceled.<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>                }<newline46mondego>                else <newline46mondego>                {<newline46mondego>                    Toast.makeText(mActivity, <doubleQuotes46>Please try again.<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>                }<newline46mondego>            }   <newline46mondego>        }<newline46mondego>"
"980splitHere46","17541433splitHere46","bf.readLine()"
"981splitHere46","17541433splitHere46","char buffer[128];<newline46mondego>for (int charsRead = 0; charsRead < 100; ) {<newline46mondego>    charsRead += bf.read(buffer, charsRead, (100 - charsRead));<newline46mondego>}<newline46mondego>"
"982splitHere46","17541433splitHere46","bf.read()"
"983splitHere46","17541433splitHere46","bf.read(buffer, offset_size, max_to_read)<newline46mondego>"
"984splitHere46","17541433splitHere46","charsRead"
"985splitHere46","17541433splitHere46","(100 - charsRead)"
"986splitHere46","17541433splitHere46","max_to_read"
"987splitHere46","17541524splitHere46","CardLayout"
"988splitHere46","17541524splitHere46","(re)validate"
"989splitHere46","17541524splitHere46","repaint"
"990splitHere46","17541524splitHere46","JFrame"
"991splitHere46","17541524splitHere46","paintComponent()"
"992splitHere46","17541524splitHere46","paint()"
"993splitHere46","17541524splitHere46","public void addNotify() {"
"994splitHere46","17541524splitHere46","getPreferredSize"
"995splitHere46","17541524splitHere46","Objects"
"996splitHere46","17541524splitHere46","JPanel"
"997splitHere46","17541524splitHere46","getWeight/Height"
"998splitHere46","17541586splitHere46","."
"999splitHere46","17541586splitHere46","left"
"1000splitHere46","17541586splitHere46","right"
"1001splitHere46","17541586splitHere46","none"
"1002splitHere46","17541595splitHere46","mysql-connector-java-5.0.8-bin.jar"
"1003splitHere46","17541595splitHere46","\lib\"
"1004splitHere46","17541595splitHere46","javac -cp <doubleQuotes46>.;lib/mysql-connector-java-5.0.8-bin.jar<doubleQuotes46> YourClass.java<newline46mondego>"
"1005splitHere46","17541595splitHere46",":"
"1006splitHere46","17541595splitHere46","java -cp <doubleQuotes46>.;lib/mysql-connector-java-5.0.8-bin.jar<doubleQuotes46> YourClass<newline46mondego>"
"1007splitHere46","17541627splitHere46","callIntent.setData(Uri.parse(<doubleQuotes46>tel:<doubleQuotes46>+incno1));<newline46mondego>"
"1008splitHere46","17541627splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.CALL_PHONE<doubleQuotes46>></uses-permission> <newline46mondego>"
"1009splitHere46","17541897splitHere46","@Past"
"1010splitHere46","17541897splitHere46","Date"
"1011splitHere46","17541897splitHere46","Calendar"
"1012splitHere46","17541897splitHere46","@DateFormat"
"1013splitHere46","17541897splitHere46","public class DateFormatValidatorForString<newline46mondego>                           implements ConstraintValidator<DateFormat, String> {<newline46mondego><newline46mondego>    private String format;<newline46mondego><newline46mondego>    public void initialize(DateFormat constraintAnnotation) {<newline46mondego>        format = constraintAnnotation.value();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isValid(<newline46mondego>        String date,<newline46mondego>        ConstraintValidatorContext constraintValidatorContext) {<newline46mondego><newline46mondego>        if ( date == null ) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        DateFormat dateFormat = new SimpleDateFormat( format );<newline46mondego>        dateFormat.setLenient( false );<newline46mondego>        try {<newline46mondego>            dateFormat.parse(date);<newline46mondego>            return true;<newline46mondego>        } <newline46mondego>        catch (ParseException e) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1014splitHere46","17541897splitHere46","SimpleDateFormat"
"1015splitHere46","17541897splitHere46","@Past"
"1016splitHere46","17541897splitHere46","ConstraintValidator<Past, String>"
"1017splitHere46","17541897splitHere46","@PastWithFormat"
"1018splitHere46","17542080splitHere46","iframe"
"1019splitHere46","17542080splitHere46","driver.switchTo().frame()"
"1020splitHere46","17542080splitHere46","switchTo()"
"1021splitHere46","17542080splitHere46","WebElement"
"1022splitHere46","17542080splitHere46","WebElement popup = driver.findElement(By.cssSelector(<doubleQuotes46>iframe[src^='CareerSignUp.aspx']<doubleQuotes46>));<newline46mondego>driver.switchTo().frame(popup);<newline46mondego>// or by index: driver.switchTo().frame(0);<newline46mondego>"
"1023splitHere46","17542244splitHere46","JPanel panel = new JPanel(new MigLayout(<newline46mondego>        <doubleQuotes46>debug<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>[][grow, fill][]<doubleQuotes46>,<newline46mondego>        <doubleQuotes46><doubleQuotes46>));<newline46mondego>JButton comp1 = new JButton(<doubleQuotes46>Comp1<doubleQuotes46>);<newline46mondego>JButton comp2 = new JButton(<doubleQuotes46>Comp2<doubleQuotes46>);<newline46mondego>JButton comp3 = new JButton(<doubleQuotes46>Comp3<doubleQuotes46>);<newline46mondego><newline46mondego>panel.add(comp1, <doubleQuotes46>width 50:150:150<doubleQuotes46>);<newline46mondego>panel.add(comp2); <newline46mondego>panel.add(comp3, <doubleQuotes46>width 50:70:70<doubleQuotes46>);      <newline46mondego>"
"1024splitHere46","17542432splitHere46","1"
"1025splitHere46","17542432splitHere46","3"
"1026splitHere46","17542454splitHere46","<servlet><newline46mondego>    <servlet-name>myservlet</servlet-name><newline46mondego>    <servlet-class>my.package.MyServlet</servlet-class><newline46mondego><newline46mondego>    <init-param><newline46mondego>        <param-name>myParam</param-name><newline46mondego>        <param-value>paramValue</param-value><newline46mondego>    </init-param><newline46mondego></servlet><newline46mondego>"
"1027splitHere46","17542454splitHere46","public class MyServlet extends HttpServlet {<newline46mondego><newline46mondego>    protected String s;<newline46mondego><newline46mondego>    @Override <newline46mondego>    public void init(ServletConfig servletConfig) throws ServletException{<newline46mondego>        super(servletConfig);<newline46mondego>        this.s = servletConfig.getInitParameter(<doubleQuotes46>myParam<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    ....<newline46mondego><newline46mondego>}   <newline46mondego>"
"1028splitHere46","17542454splitHere46","myParam=paramValue<newline46mondego>"
"1029splitHere46","17542454splitHere46","public class Config {<newline46mondego><newline46mondego>    private Properties config;<newline46mondego><newline46mondego>    public Config() {<newline46mondego>        config = new Properties();<newline46mondego>        reloadConfig();<newline46mondego>    }<newline46mondego><newline46mondego>    public Properties getConfig(){<newline46mondego>        reloadConfig();<newline46mondego>        return config;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getProperty(String key){<newline46mondego>        return getConfig().getProperty(key);<newline46mondego>    }<newline46mondego><newline46mondego>    public void reloadConfig() {<newline46mondego><newline46mondego>            try {<newline46mondego>                config.load(getClass().getResourceAsStream(<doubleQuotes46>/config.properties<doubleQuotes46>));<newline46mondego>            } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1030splitHere46","17542454splitHere46","public class MyServlet extends HttpServlet {<newline46mondego><newline46mondego>    protected Config config = new Config();<newline46mondego><newline46mondego>    @Override <newline46mondego>    public void doGet(request, response) throws ServletException{<newline46mondego><newline46mondego>        Strign s = config.getProperty(<doubleQuotes46>myParam<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1031splitHere46","17542467splitHere46","public static void main(String[] args) throws IOException {<newline46mondego><newline46mondego>    CSVReader reader = new CSVReader(new FileReader(FILE_PATH));<newline46mondego>    ArrayList<ArrayList<String>> array = new ArrayList<ArrayList<String>>();<newline46mondego>    while ((nextLine = reader.readNext()) != null) {<newline46mondego>        ArrayList<String> list = new ArrayList<String>();<newline46mondego>        for (int i=0;i<5;i++) { //i<5 is hardcoded; get actual function for number of columns<newline46mondego>           list.add(nextLine[i]);<newline46mondego>        }<newline46mondego>        array.add(list);<newline46mondego>    }<newline46mondego>    // example for nested loop to display results<newline46mondego>    for(x=0;x<array.size();x++) {<newline46mondego>        for(y=0;y<array.get(x).size();y++) {<newline46mondego>            System.out.print(array.get(x).get(y) + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // example to display specific item<newline46mondego>    System.out.println(array.get(1).get(1));<newline46mondego>}<newline46mondego>"
"1032splitHere46","17542690splitHere46","Class_Name"
"1033splitHere46","17542690splitHere46","new Class_Name();<newline46mondego>"
"1034splitHere46","17542690splitHere46","new Class_Name().someMethod();<newline46mondego>"
"1035splitHere46","17542690splitHere46","BufferedReader br = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>"
"1036splitHere46","17542690splitHere46","new Tree();<newline46mondego>"
"1037splitHere46","17542712splitHere46","onCreate()"
"1038splitHere46","17542712splitHere46","onWindowFocusChanged(boolean)"
"1039splitHere46","17542714splitHere46","str.replace(\offset=[0-9]*&?\,<doubleQuotes46><doubleQuotes46>)<newline46mondego>"
"1040splitHere46","17542714splitHere46","str=str.replaceAll(<doubleQuotes46>offset=[0-9]*&?<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>//to remove & and ? at the end in some cases<newline46mondego>if (str.endsWith(<doubleQuotes46>?<doubleQuotes46>) || str.endsWith(<doubleQuotes46>&<doubleQuotes46>)) <newline46mondego>    str=str.substring(0,str.length()-1);<newline46mondego>"
"1041splitHere46","17543185splitHere46","ClientBundle"
"1042splitHere46","17543185splitHere46","data:"
"1043splitHere46","17543185splitHere46","ImageResource"
"1044splitHere46","17543185splitHere46","RequestFactory"
"1045splitHere46","17543185splitHere46","xsiframe"
"1046splitHere46","17543185splitHere46","xs"
"1047splitHere46","17543185splitHere46","<inherits name=<doubleQuotes46>com.google.gwt.precompress.Precompress<doubleQuotes46>/>"
"1048splitHere46","17543185splitHere46","<set-configuration-property name=<doubleQuotes46>precompress.leave.originals<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46> />"
"1049splitHere46","17543185splitHere46",".gz"
"1050splitHere46","17543185splitHere46",".html"
"1051splitHere46","17543185splitHere46",".css"
"1052splitHere46","17543185splitHere46",".js"
"1053splitHere46","17543185splitHere46","CssResource"
"1054splitHere46","17543185splitHere46","PopupPanel"
"1055splitHere46","17543185splitHere46","RequestBuilder"
"1056splitHere46","17543185splitHere46","XMLHttpRequest"
"1057splitHere46","17543185splitHere46","JsonpRequestBuilder"
"1058splitHere46","17543353splitHere46","JCatalog.getComponent()"
"1059splitHere46","17543353splitHere46","jcat.getComponent()"
"1060splitHere46","17543353splitHere46","JCatalog"
"1061splitHere46","17543353splitHere46","jcat"
"1062splitHere46","17543353splitHere46","getComponent()"
"1063splitHere46","17543353splitHere46","public abstract class JPanelTicket extends JPanel {<newline46mondego><newline46mondego>    JCatalog jcat;<newline46mondego><newline46mondego>    public JPanelTicket() {<newline46mondego>        jcat = new JCatalog();<newline46mondego>        initComponents();<newline46mondego>    }<newline46mondego><newline46mondego>    public void init(){<newline46mondego>        jcat = jcat.getComponent(); //Here's the problem<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1064splitHere46","17543353splitHere46","public abstract class JPanelTicket extends JPanel {<newline46mondego><newline46mondego>    JCatalog jcat;<newline46mondego><newline46mondego>    public JPanelTicket() {<newline46mondego>        initComponents();<newline46mondego>    }<newline46mondego><newline46mondego>    public void init(){<newline46mondego>        jcat = jcat.getComponent(); //Here's the problem<newline46mondego>    }<newline46mondego><newline46mondego>    public void setJCatalog(JCatalog jcat) {<newline46mondego>        this.jcat = jcat;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1065splitHere46","17543417splitHere46","--match_conf"
"1066splitHere46","17543417splitHere46","--match_conf"
"1067splitHere46","17543586splitHere46","<set name=<doubleQuotes46>CollegeStudents<doubleQuotes46> table=<doubleQuotes46>tstudent_course<doubleQuotes46><newline46mondego>            inverse=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <key><newline46mondego>        <column name=<doubleQuotes46>id_course<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>    </key><newline46mondego>    <many-to-many entity-name=<doubleQuotes46>CollegeStudent<doubleQuotes46> where=<doubleQuotes46>person_type='COLLEGE_STUDENT'<doubleQuotes46>><newline46mondego>        <column name=<doubleQuotes46>id_person<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>    </many-to-many><newline46mondego></set><newline46mondego>"
"1068splitHere46","17543826splitHere46","SecondView secondView = new SecondView();<newline46mondego>navigator.addView(SECOND_VIEW, secondView );<newline46mondego>Presenter presenter = new Presenter(firstView, secondView);<newline46mondego>"
"1069splitHere46","17543892splitHere46","FileWriter"
"1070splitHere46","17543892splitHere46","finally"
"1071splitHere46","17543892splitHere46","BufferedWriter output;<newline46mondego>try {                <newline46mondego>    File file = new File(<doubleQuotes46>/home/erik/glassfish3/<doubleQuotes46>+selectedMss+<doubleQuotes46>.ini<doubleQuotes46>);<newline46mondego><newline46mondego>    //Providing true for second argument specifies it should be appended. <newline46mondego>    output = new BufferedWriter(new FileWriter(file,true));<newline46mondego><newline46mondego>    for(String newline: content){<newline46mondego>        output.write(newline+<doubleQuotes46>\n<doubleQuotes46>);      <newline46mondego>    }<newline46mondego><newline46mondego>} catch ( IOException e ) {<newline46mondego>       e.printStackTrace();<newline46mondego>}finally{<newline46mondego>  output.close();<newline46mondego>}<newline46mondego>"
"1072splitHere46","17543906splitHere46","private String message = <doubleQuotes46>Do u want to save this file ?<doubleQuotes46><newline46mondego><newline46mondego>int reply = JOptionPane.showConfirmDialog(null, <doubleQuotes46>message<doubleQuotes46>, <doubleQuotes46>title<doubleQuotes46>,JOptionPane.YES_NO_OPTION);<newline46mondego>if (reply == JOptionPane.YES_OPTION) {<newline46mondego>    save(this.textArea.getText(), save.getSelectedFile().getPath()));<newline46mondego>}else {<newline46mondego>    //what you need<newline46mondego>}<newline46mondego><newline46mondego>private void save(String content, String path) {<newline46mondego>        try{<newline46mondego>            BufferedWriter out = new  BufferedWriter(newFileWriter(path) );<newline46mondego>            out.write(content);<newline46mondego>            out.close();<newline46mondego>        } catch(Exception ex){<newline46mondego>            System.out.println(ex.getMessage());<newline46mondego>        }`enter code here`<newline46mondego>    }<newline46mondego>"
"1073splitHere46","17544002splitHere46","Activity.class"
"1074splitHere46","17544002splitHere46","SelectFriendsActivity.class"
"1075splitHere46","17544002splitHere46","List<Class<? extends Activity>>"
"1076splitHere46","17544002splitHere46","ArrayList<Class<Activity>>"
"1077splitHere46","17544002splitHere46","final List<Class<? extends Number>> list<newline46mondego>        = new ArrayList<Class<? extends Number>>();<newline46mondego><newline46mondego>    // Both Integer and BigDecimal extend Number<newline46mondego>    list.add(Integer.class);<newline46mondego>    list.add(BigDecimal.class);<newline46mondego>"
"1078splitHere46","17544002splitHere46","MenuItem"
"1079splitHere46","17544002splitHere46","Class<? extends Activity>"
"1080splitHere46","17544002splitHere46","MenuItem"
"1081splitHere46","17544002splitHere46","MenuItem"
"1082splitHere46","17544336splitHere46","List"
"1083splitHere46","17544336splitHere46","List"
"1084splitHere46","17544336splitHere46","List"
"1085splitHere46","17544336splitHere46","Set"
"1086splitHere46","17544336splitHere46","List/Set"
"1087splitHere46","17544336splitHere46","List"
"1088splitHere46","17544336splitHere46","Set"
"1089splitHere46","17544336splitHere46","Set"
"1090splitHere46","17544433splitHere46","true"
"1091splitHere46","17544433splitHere46","true"
"1092splitHere46","17544433splitHere46","e"
"1093splitHere46","17544433splitHere46","(o==null ? e==null : o.equals(e))"
"1094splitHere46","17544433splitHere46","hashCode()"
"1095splitHere46","17544433splitHere46","equals()"
"1096splitHere46","17544484splitHere46","Player"
"1097splitHere46","17544484splitHere46","Thread"
"1098splitHere46","17544484splitHere46","implements Runnable"
"1099splitHere46","17544484splitHere46","new Thread()"
"1100splitHere46","17544484splitHere46","for (Player p : Player.e) p.join();<newline46mondego>"
"1101splitHere46","17544484splitHere46","doGet"
"1102splitHere46","17544484splitHere46","doGet"
"1103splitHere46","17544484splitHere46","flush"
"1104splitHere46","17544484splitHere46","PrintWriter#println"
"1105splitHere46","17544534splitHere46","Child"
"1106splitHere46","17544534splitHere46","Parent"
"1107splitHere46","17544534splitHere46","Child"
"1108splitHere46","17544534splitHere46","Parent"
"1109splitHere46","17544534splitHere46","Child"
"1110splitHere46","17544534splitHere46","Parent"
"1111splitHere46","17544534splitHere46","class Parent {<newline46mondego><newline46mondego>   public void getA() {<newline46mondego>        return 1;<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Child extends Parent {<newline46mondego><newline46mondego><newline46mondego>   public void getB() {<newline46mondego>       return 1;<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"1112splitHere46","17544534splitHere46","Child c = new Child();<newline46mondego>Parent p = new Parent();<newline46mondego>"
"1113splitHere46","17544534splitHere46","Parent p2 = (Parent) c;<newline46mondego>"
"1114splitHere46","17544534splitHere46","p2.getA()"
"1115splitHere46","17544534splitHere46","getA()"
"1116splitHere46","17544534splitHere46","c"
"1117splitHere46","17544534splitHere46","Child"
"1118splitHere46","17544534splitHere46","Child c2 = (Parent) p;<newline46mondego>"
"1119splitHere46","17544534splitHere46","c2"
"1120splitHere46","17544534splitHere46","Child"
"1121splitHere46","17544534splitHere46","c2.getB()"
"1122splitHere46","17544534splitHere46","p"
"1123splitHere46","17544534splitHere46","Parent"
"1124splitHere46","17544534splitHere46","getB()"
"1125splitHere46","17544534splitHere46","Redwood"
"1126splitHere46","17544534splitHere46","Tree"
"1127splitHere46","17544534splitHere46","Tree t = (Tree) (new Redwood());"
"1128splitHere46","17544534splitHere46","Redwood"
"1129splitHere46","17544534splitHere46","Tree"
"1130splitHere46","17544534splitHere46","Tree"
"1131splitHere46","17544534splitHere46","Reedwood"
"1132splitHere46","17544534splitHere46","Redwood r = (Redwood) new Tree()"
"1133splitHere46","17544580splitHere46","d1.setHours(d2.getHours());<newline46mondego>d1.setMinutes(d2.getMinutes());<newline46mondego>"
"1134splitHere46","17544656splitHere46","FetchProfile fp = new FetchProfile();<newline46mondego>fp.add(FetchProfile.Item.ENVELOPE);<newline46mondego>fp.add(<doubleQuotes46>Subject<doubleQuotes46>);<newline46mondego>folder.fetch(message, fp);<newline46mondego>"
"1135splitHere46","17544781splitHere46","([a-zA-Z0-9\\'\\(\\+\\)\\,\\-\\.\\=]+)<newline46mondego>"
"1136splitHere46","17544807splitHere46","DataOutputStream"
"1137splitHere46","17544807splitHere46","ArrayList"
"1138splitHere46","17544807splitHere46","a"
"1139splitHere46","17544807splitHere46","actionPerformed"
"1140splitHere46","17544807splitHere46","a = new ArrayList<String>();<newline46mondego>"
"1141splitHere46","17544807splitHere46","ArrayList"
"1142splitHere46","17544807splitHere46","List"
"1143splitHere46","17544807splitHere46","JTextArea"
"1144splitHere46","17544919splitHere46","Payment p = PaymentFactory.newInstance(PaymentMode.Cash);<newline46mondego>"
"1145splitHere46","17544919splitHere46","switch(mode) {<newline46mondego>   case PaymentMode.Cash:<newline46mondego>      return new CashPayment();<newline46mondego><newline46mondego>   // ...<newline46mondego>}<newline46mondego>"
"1146splitHere46","17544919splitHere46","CashPayment"
"1147splitHere46","17544919splitHere46","ChequePayment"
"1148splitHere46","17544919splitHere46","Payment"
"1149splitHere46","17545036splitHere46","Set<String> dmlCommands = new HashSet<String>() {<newline46mondego>  {<newline46mondego>    add(<doubleQuotes46>UPDATE<doubleQuotes46>); add(<doubleQuotes46>INSERT<doubleQuotes46>); add(<doubleQuotes46>DELETE<doubleQuotes46>); //Add more DML commands ....<newline46mondego>  }<newline46mondego>};<newline46mondego>int updateCount = statement.getUpdateCount();<newline46mondego>for(String dml : dmlCommands) {<newline46mondego>    if(arbitrarySQLCommand.toUpperCase().contains(dml) && updateCount == 0) {<newline46mondego>        updateCount = -1;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1150splitHere46","17545059splitHere46","BigInteger"
"1151splitHere46","17545059splitHere46","BigInteger.ZERO"
"1152splitHere46","17545059splitHere46","public BigInteger findMyLovelyBigInteger(Integer secretNumber) {<newline46mondego>    if (secretNumber == null) {<newline46mondego>        return BigInteger.ZERO; // better than BigInteger.valueOf(0);<newline46mondego>    } else {<newline46mondego>        // some db operations<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1153splitHere46","17545059splitHere46","BigInteger.TEN"
"1154splitHere46","17545059splitHere46","BigInteger"
"1155splitHere46","17545160splitHere46","README.txt"
"1156splitHere46","17545160splitHere46","Readme.TXT"
"1157splitHere46","17545160splitHere46","Filesystem"
"1158splitHere46","17545160splitHere46","FileSystem"
"1159splitHere46","17545160splitHere46","public final class CaseSensitiveNTFSFileSystem<newline46mondego>    extends FileSystem<newline46mondego>{<newline46mondego>    private static final Pattern MYSYNTAX = Pattern.compile(<doubleQuotes46>glob:\\*(\\..*)<doubleQuotes46>);<newline46mondego><newline46mondego>    private final FileSystem fs;<newline46mondego><newline46mondego>    // <doubleQuotes46>fs<doubleQuotes46> is the <doubleQuotes46>genuine<doubleQuotes46> FileSystem provided by the JVM<newline46mondego>    public CaseSensitiveNTFSFileSystem(final FileSystem fs)<newline46mondego>    {<newline46mondego>        this.fs = fs;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public PathMatcher getPathMatcher(final String syntaxAndPattern)<newline46mondego>    {<newline46mondego>        final Matcher matcher = MYSYNTAX.matcher(syntaxAndPattern);<newline46mondego>        if (!matcher.matches())<newline46mondego>            throw new UnsupportedOperationException();<newline46mondego>        final String suffix = matcher.group(1);<newline46mondego>        final PathMatcher orig = fs.getPathMatcher(syntaxAndPattern);<newline46mondego><newline46mondego>        return new PathMatcher()<newline46mondego>        {<newline46mondego>            @Override<newline46mondego>            public boolean matches(final Path path)<newline46mondego>            {<newline46mondego>                return orig.matches(path)<newline46mondego>                    && path.getFileName().endsWith(suffix);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego><newline46mondego>    // Delegate all other methods of FileSystem to <doubleQuotes46>fs<doubleQuotes46><newline46mondego>}<newline46mondego>"
"1160splitHere46","17545213splitHere46","protected <T> T getMessage(Object param, Class<T> clazz);<newline46mondego>"
"1161splitHere46","17545377splitHere46","wrong output: 4<newline46mondego>wrong output: 4<newline46mondego>wrong output: 4<newline46mondego>wrong output: 4<newline46mondego>"
"1162splitHere46","17545377splitHere46","correct output: 1<newline46mondego>correct output: 2<newline46mondego>correct output: 3<newline46mondego>correct output: 4<newline46mondego>"
"1163splitHere46","17545377splitHere46","for(Integer id:customerIds){<newline46mondego>            CustomerDTO customer = getCustomer(id);<newline46mondego>            System.out.println(<doubleQuotes46>correct output: <doubleQuotes46>+customer.getCustomerId());//getting correct output here<newline46mondego>            customerList.add(customer);//Trying to add copied object in list<newline46mondego>        }<newline46mondego><newline46mondego>for(customer ids 1 to 4){<newline46mondego>       customer will get reference CustomerDTO@60bc92 and will be updated based on customer ids<newline46mondego>       so it is printing correct values <newline46mondego>       but it is adding same reference CustomerDTO@60bc92 to the list<newline46mondego>}<newline46mondego><newline46mondego> for(CustomerDTO customer: customerList){<newline46mondego>            System.out.println(<doubleQuotes46>wrong output: <doubleQuotes46>+customer.getCustomerId());//getting wrong output here<newline46mondego>        }<newline46mondego><newline46mondego>for(all customer object in list which is same object reference and having latest value means 4){<newline46mondego>      it is printing wrong value as 4<newline46mondego>}<newline46mondego>"
"1164splitHere46","17545377splitHere46","CustomerDTO origCustomer = _springContext.getBean(CustomerDTO.class);<newline46mondego>"
"1165splitHere46","17545377splitHere46","CustomerDTO origCustomer = new CustomerDTO();<newline46mondego>"
"1166splitHere46","17545377splitHere46","org.apache.commons.beanutils.BeanUtils;"
"1167splitHere46","17545386splitHere46","pstmt.executeBatch();"
"1168splitHere46","17545436splitHere46","getView()"
"1169splitHere46","17545436splitHere46","OnClickListener"
"1170splitHere46","17545436splitHere46","public class CustomAdapter extends ArrayAdapter<Integer> {<newline46mondego>    private ListView listView;<newline46mondego><newline46mondego>    public CustomAdapter(Context context, int textViewResourceId, Integer[] objects, ListView listView) {<newline46mondego>        super(context, textViewResourceId, objects);<newline46mondego>        this.listView = listView;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    static class ViewHolder {<newline46mondego>        TextView text;<newline46mondego>        Button btn;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public View getView(final int position, View convertView, ViewGroup parent) {<newline46mondego>        Integer color = getItem(position);<newline46mondego><newline46mondego>        View rowView = convertView;<newline46mondego><newline46mondego>        if (rowView == null) {<newline46mondego>            LayoutInflater inflater = ((Activity) getContext()).getLayoutInflater();<newline46mondego>            rowView = inflater.inflate(R.layout.list_view_row, parent, false);<newline46mondego>            ViewHolder h = new ViewHolder();<newline46mondego>            h.text = (TextView) rowView.findViewById(R.id.item_text);<newline46mondego>            h.btn = rowView.findViewById(R.id.btn);<newline46mondego>            rowView.setTag(h);<newline46mondego>        }<newline46mondego><newline46mondego>        ViewHolder h = (ViewHolder) rowView.getTag();<newline46mondego><newline46mondego>        h.text.setText(color);<newline46mondego>        h.indicator.setOnClickListener(new View.OnClickListener() {<newline46mondego>            @Override<newline46mondego>            public void onClick(View v) {<newline46mondego>                // DO what you want to recieve on btn click there.<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        return rowView;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1171splitHere46","17545447splitHere46","survey.setTimestamp(row.get(<doubleQuotes46>timeStamp<doubleQuotes46>).toString().replaceAll(<doubleQuotes46>\\.\\d+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"1172splitHere46","17545447splitHere46","String ts = row.get(<doubleQuotes46>timeStamp<doubleQuotes46>).toString();<newline46mondego>ts = ts.substring(0, str.indexOf('.'));<newline46mondego>"
"1173splitHere46","17545678splitHere46","for (String cookieStr : request.headers().get(<doubleQuotes46>Cookie<doubleQuotes46>)) {<newline46mondego>    String name = cookieStr.substring(0, cookieStr.indexOf(<doubleQuotes46>=<doubleQuotes46>));<newline46mondego><newline46mondego>    Logger.info(<doubleQuotes46>Name of the cookie : <doubleQuotes46> + name);<newline46mondego><newline46mondego>    Cookie cookie = request.cookie(name); // Get the instance of the cookie !<newline46mondego>}<newline46mondego>"
"1174splitHere46","17545711splitHere46","Tree"
"1175splitHere46","17545727splitHere46","environment"
"1176splitHere46","17545727splitHere46","ApplicationDTO"
"1177splitHere46","17545727splitHere46","@XmlElementRef"
"1178splitHere46","17545727splitHere46","@XmlElementRef"
"1179splitHere46","17545727splitHere46","@XmlRootElement"
"1180splitHere46","17545727splitHere46","@OneToMany(mappedBy = <doubleQuotes46>application<doubleQuotes46>, fetch = FetchType.LAZY, cascade = CascadeType.ALL)<newline46mondego>@XmlElementRef<newline46mondego>public Set<EnvironmentDTO> getEnvironment() {<newline46mondego>    return environment;<newline46mondego>}<newline46mondego>"
"1181splitHere46","17545727splitHere46","@XmlElement"
"1182splitHere46","17545727splitHere46","@XmlElement"
"1183splitHere46","17545727splitHere46","@OneToMany(mappedBy = <doubleQuotes46>application<doubleQuotes46>, fetch = FetchType.LAZY, cascade = CascadeType.ALL)<newline46mondego>@XmlElement(name=<doubleQuotes46>environmentDTO<doubleQuotes46>)<newline46mondego>public Set<EnvironmentDTO> getEnvironment() {<newline46mondego>    return environment;<newline46mondego>}<newline46mondego>"
"1184splitHere46","17545727splitHere46","@GET<newline46mondego>@Path(<doubleQuotes46>/get<doubleQuotes46>)<newline46mondego>@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})<newline46mondego>public List<ApplicationDTO> getAllApplications(){<newline46mondego>    List<ApplicationDTO> allApplication = applicationService.getAllApplication();<newline46mondego>    return allApplication;<newline46mondego>}<newline46mondego>"
"1185splitHere46","17545727splitHere46","@Override<newline46mondego>public List<ApplicationDTO> getAllApplication() {<newline46mondego><newline46mondego>    List<ApplicationDTO> AppList = genericDAOTxService.findAll(ApplicationDTO.class);   <newline46mondego>    return AppList;     <newline46mondego>}<newline46mondego>"
"1186splitHere46","17545727splitHere46","@Override<newline46mondego>@Transactional(rollbackFor = java.lang.Exception.class, noRollbackFor = java.io.FileNotFoundException.class, propagation = Propagation.REQUIRES_NEW)<newline46mondego>public <T> List<T> findAll(Class<T> type) {<newline46mondego>    List<T> list = genericDAOImpl.findAll(type);<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"1187splitHere46","17545727splitHere46","[ApplicationDTO [applicationId=1, applicationName=name, applicationDescription=desc, owner=5, createTime=2013-05-06 15:29:15.0, environment=[EnvironmentDTO [environmentId=1, environmentName=envname]]], ApplicationDTO [applicationId=2, applicationName=name, applicationDescription=desc, owner=5, createTime=2013-05-28 19:07:10.0, environment=[EnvironmentDTO [environmentId=2, environmentName=envname]]]]<newline46mondego>"
"1188splitHere46","17545727splitHere46","[ApplicationDTO [applicationId=1, applicationName=name, applicationDescription=desc, owner=5, createTime=2013-05-06 15:29:15.0], ApplicationDTO [applicationId=2, applicationName=name, applicationDescription=desc, owner=5, createTime=2013-05-28 19:07:10.0]]<newline46mondego>"
"1189splitHere46","17545734splitHere46","setClassName()"
"1190splitHere46","17545794splitHere46","value=<doubleQuotes46>#{textBean.label[attr]}<doubleQuotes46><newline46mondego>"
"1191splitHere46","17545794splitHere46","label"
"1192splitHere46","17545794splitHere46","textBean"
"1193splitHere46","17545794splitHere46","textBean"
"1194splitHere46","17545801splitHere46","if (Confirm.equals(<doubleQuotes46>y<doubleQuotes46>)){<newline46mondego>"
"1195splitHere46","17545801splitHere46","else if (Confirm.equals(<doubleQuotes46>n<doubleQuotes46>))<newline46mondego>"
"1196splitHere46","17545801splitHere46","=="
"1197splitHere46","17545821splitHere46","String"
"1198splitHere46","17545821splitHere46","String group=(String)session.getAttribute(<doubleQuotes46>group<doubleQuotes46>); <newline46mondego>"
"1199splitHere46","17545821splitHere46","session.getAttribute(<doubleQuotes46>group<doubleQuotes46>);"
"1200splitHere46","17545821splitHere46","Object"
"1201splitHere46","17545833splitHere46","setJar"
"1202splitHere46","17545833splitHere46","setJarByClass"
"1203splitHere46","17545833splitHere46","@Test<newline46mondego>public void testLocalRun() throws IOException, InterruptedException, ClassNotFoundException {<newline46mondego>    Job job = new Job();<newline46mondego>    job.setInputFormatClass(TextInputFormat.class);<newline46mondego>    FileInputFormat.setInputPaths(job,<newline46mondego>            <doubleQuotes46>src/test/java/csw/hadoop/sandbox/LocalHadoopTest.java<doubleQuotes46>);<newline46mondego>    job.setOutputFormatClass(TextOutputFormat.class);<newline46mondego>    TextOutputFormat.setOutputPath(job, new Path(<newline46mondego>            <doubleQuotes46>target/hadoop-local-output<doubleQuotes46>));<newline46mondego><newline46mondego>    job.setNumReduceTasks(0);<newline46mondego><newline46mondego>    job.waitForCompletion(true);<newline46mondego>}<newline46mondego>"
"1204splitHere46","17545953splitHere46","(*env)->GetByteArrayRegion(env, b, 0, srcLen, data);<newline46mondego>    (*env)->ReleaseByteArrayElements(env, b, data , 0);<newline46mondego>"
"1205splitHere46","17545953splitHere46","jbyte* d = (*env)->GetByteArrayElements(env, b, &isCopyS);<newline46mondego><newline46mondego>int i;<newline46mondego><newline46mondego>for(i = 0; i < srcLen; i++)<newline46mondego>{<newline46mondego>    data[i] = d[i];<newline46mondego>}<newline46mondego><newline46mondego>(*env)->ReleaseByteArrayElements(env, b, d, JNI_ABORT);<newline46mondego>"
"1206splitHere46","17546048splitHere46","JAXBElement"
"1207splitHere46","17546048splitHere46","JAXBElement"
"1208splitHere46","17546048splitHere46","FOO"
"1209splitHere46","17546048splitHere46","@GET<newline46mondego>    @Produces(MediaType.APPLICATION_XML)<newline46mondego>    public Response get() {<newline46mondego>        Customer customer = new Customer();<newline46mondego>        customer.setFirstName(<doubleQuotes46>Jane<doubleQuotes46>);<newline46mondego>        customer.setLastName(<doubleQuotes46>Doe<doubleQuotes46>);<newline46mondego>        JAXBElement<Customer> jaxbElement = new JAXBElement(new QName(<doubleQuotes46>FOO<doubleQuotes46>), Customer.class, customer);<newline46mondego>        return Response.ok(jaxbElement).build();<newline46mondego>    }<newline46mondego>"
"1210splitHere46","17546253splitHere46","Math"
"1211splitHere46","17546253splitHere46","static"
"1212splitHere46","17546253splitHere46","private"
"1213splitHere46","17546253splitHere46","Math"
"1214splitHere46","17546253splitHere46","private Math() {} // only constructor defined in Math class<newline46mondego>"
"1215splitHere46","17546253splitHere46","Math"
"1216splitHere46","17546253splitHere46","static"
"1217splitHere46","17546253splitHere46","static"
"1218splitHere46","17546289splitHere46","<beans><newline46mondego><newline46mondego>   <context:component-scan base-package=<doubleQuotes46>org.example<doubleQuotes46>><newline46mondego>      <context:exclude-filter type=<doubleQuotes46>regex<doubleQuotes46> expression=<doubleQuotes46>.*NotControllerBean<doubleQuotes46>/><newline46mondego>   </context:component-scan><newline46mondego><newline46mondego></beans><newline46mondego>"
"1219splitHere46","17546430splitHere46","(?=-(?!(?<=\\-)))) <newline46mondego>    ^here<newline46mondego>"
"1220splitHere46","17546430splitHere46","-"
"1221splitHere46","17546430splitHere46","<doubleQuotes46>unless \ is before<doubleQuotes46>"
"1222splitHere46","17546430splitHere46","-"
"1223splitHere46","17546430splitHere46","(?<=(?<!\\\\)-)|(?=(?<!\\\\)-)"
"1224splitHere46","17546430splitHere46","(?<=(?<!\\\\)-)"
"1225splitHere46","17546430splitHere46","-"
"1226splitHere46","17546430splitHere46","\"
"1227splitHere46","17546430splitHere46","(?=(?<!\\\\)-)"
"1228splitHere46","17546430splitHere46","-"
"1229splitHere46","17546430splitHere46","\"
"1230splitHere46","17546437splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-source-plugin</artifactId><newline46mondego>    <executions><newline46mondego>      <execution><newline46mondego>        <id>attach-sources</id><newline46mondego>        <goals><newline46mondego>          <goal>jar</goal><newline46mondego>        </goals><newline46mondego>      </execution><newline46mondego>    </executions><newline46mondego>  </plugin><newline46mondego>"
"1231splitHere46","17546495splitHere46","Integer"
"1232splitHere46","17546495splitHere46","equal"
"1233splitHere46","17546495splitHere46","String"
"1234splitHere46","17546495splitHere46","equals()"
"1235splitHere46","17546495splitHere46","Integer.equals()"
"1236splitHere46","17546495splitHere46","null"
"1237splitHere46","17546495splitHere46","Integer"
"1238splitHere46","17546495splitHere46","String.equals()"
"1239splitHere46","17546495splitHere46","null"
"1240splitHere46","17546495splitHere46","String"
"1241splitHere46","17546495splitHere46","equals()"
"1242splitHere46","17546495splitHere46","List"
"1243splitHere46","17546495splitHere46","List"
"1244splitHere46","17546495splitHere46","true"
"1245splitHere46","17546508splitHere46","appbundler"
"1246splitHere46","17546508splitHere46","/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
"1247splitHere46","17546508splitHere46","/Library/Java/JavaVirtualMachines"
"1248splitHere46","17546508splitHere46","appbundler"
"1249splitHere46","17546508splitHere46","java"
"1250splitHere46","17546508splitHere46","JAVA_HOME"
"1251splitHere46","17546508splitHere46","/Library/Internet Plug-Ins"
"1252splitHere46","17546508splitHere46","JAVA_HOME"
"1253splitHere46","17546508splitHere46","YourApp.app/Contents/MacOS/YourApp"
"1254splitHere46","17546508splitHere46","#!/bin/sh<newline46mondego><newline46mondego>PRG=$0<newline46mondego><newline46mondego>while [ -h <doubleQuotes46>$PRG<doubleQuotes46> ]; do<newline46mondego>    ls=`ls -ld <doubleQuotes46>$PRG<doubleQuotes46>`<newline46mondego>    link=`expr <doubleQuotes46>$ls<doubleQuotes46> : '^.*-> \(.*\)$' 2>/dev/null`<newline46mondego>    if expr <doubleQuotes46>$link<doubleQuotes46> : '^/' 2> /dev/null >/dev/null; then<newline46mondego>        PRG=<doubleQuotes46>$link<doubleQuotes46><newline46mondego>    else<newline46mondego>        PRG=<doubleQuotes46>`dirname <doubleQuotes46>$PRG<doubleQuotes46>`/$link<doubleQuotes46><newline46mondego>    fi<newline46mondego>done<newline46mondego><newline46mondego>progdir=`dirname <doubleQuotes46>$PRG<doubleQuotes46>`<newline46mondego><newline46mondego>if [ -n <doubleQuotes46>$JAVA_HOME<doubleQuotes46> ]; then<newline46mondego>  JAVACMD=<doubleQuotes46>$JAVA_HOME/bin/java<doubleQuotes46><newline46mondego>elif [ -x /usr/libexec/java_home ]; then<newline46mondego>  JAVACMD=<doubleQuotes46>`/usr/libexec/java_home`/bin/java<doubleQuotes46><newline46mondego>else<newline46mondego>  JAVACMD=<doubleQuotes46>/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin/java<doubleQuotes46><newline46mondego>fi<newline46mondego><newline46mondego>exec <doubleQuotes46>$JAVACMD<doubleQuotes46> -classpath <doubleQuotes46>$progdir/../Resources/Jars/*<doubleQuotes46> \<newline46mondego>       -Dapple.laf.useScreenMenuBar=true \<newline46mondego>       my.pkg.MainClass<newline46mondego>"
"1255splitHere46","17546508splitHere46","YourApp.app/Contents/Resources/Jars"
"1256splitHere46","17546508splitHere46","YourApp.app/Contents/Resources/icon.icns"
"1257splitHere46","17546508splitHere46","YourApp.app/Contents/Info.plist"
"1258splitHere46","17546508splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!DOCTYPE plist PUBLIC <doubleQuotes46>-//Apple Computer//DTD PLIST 1.0//EN<doubleQuotes46> <doubleQuotes46>http://www.apple.com/DTDs/PropertyList-1.0.dtd<doubleQuotes46>><newline46mondego><plist version=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego><dict><newline46mondego>        <key>CFBundleDevelopmentRegion</key><newline46mondego>        <string>English</string><newline46mondego>        <key>CFBundleExecutable</key><newline46mondego>        <string>YourApp</string><!-- relative to Contents/MacOS --><newline46mondego>        <key>CFBundleGetInfoString</key><newline46mondego>        <string>My clever application</string><newline46mondego>        <key>CFBundleIconFile</key><newline46mondego>        <string>icon.icns</string><!-- relative to Contents/Resources --><newline46mondego>        <key>CFBundleInfoDictionaryVersion</key><newline46mondego>        <string>8.0</string><newline46mondego>        <key>CFBundleName</key><newline46mondego>        <string>YourApp</string><newline46mondego>        <key>CFBundlePackageType</key><newline46mondego>        <string>APPL</string><newline46mondego>        <key>CFBundleSignature</key><newline46mondego>        <string>????</string><newline46mondego>        <key>CFBundleVersion</key><newline46mondego>        <string>8.0</string><newline46mondego></dict><newline46mondego></plist><newline46mondego>"
"1259splitHere46","17546508splitHere46",".app"
"1260splitHere46","17546508splitHere46",".app"
"1261splitHere46","17546544splitHere46","Arrays.asList(1,2,3,4)"
"1262splitHere46","17546544splitHere46","List"
"1263splitHere46","17546544splitHere46","Arrays.asList(..)"
"1264splitHere46","17546544splitHere46","List<Integer> sam = new ArrayList<>(Arrays.asList(1,2,3,4));<newline46mondego>"
"1265splitHere46","17546752splitHere46","AlarmManager"
"1266splitHere46","17546752splitHere46","AlarmManager"
"1267splitHere46","17546795splitHere46","\\w+"
"1268splitHere46","17546795splitHere46","&["
"1269splitHere46","17546795splitHere46",":"
"1270splitHere46","17546795splitHere46","(?<=&\\[)\\w+(?=:)<newline46mondego>"
"1271splitHere46","17546979splitHere46","mainFrame.add(bar);"
"1272splitHere46","17546979splitHere46","mainFrame.setJMenuBar(bar);"
"1273splitHere46","17546993splitHere46","db.default.url=<doubleQuotes46>jdbc:mysql://your_server_address:3306/play2test<doubleQuotes46> <newline46mondego>   db.default.driver=<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46><newline46mondego>   db.default.user=root<newline46mondego>   db.default.pass=<doubleQuotes46>123456<doubleQuotes46><newline46mondego>   db.default.host=your_server_address<newline46mondego>"
"1274splitHere46","17547411splitHere46","Set.toArray()"
"1275splitHere46","17547443splitHere46","String template = <doubleQuotes46>key1=value1&key2=value2&key3=value3<doubleQuotes46>;<newline46mondego>String pattern = <doubleQuotes46>&?([^&]+)=<doubleQuotes46>; <newline46mondego><newline46mondego>Pattern p = Pattern.compile(pattern);<newline46mondego>Matcher m = p.matcher(template);<newline46mondego><newline46mondego>while (m.find()) <newline46mondego>{<newline46mondego>    System.out.println(m.group(1)); //prints capture group number 1<newline46mondego>}<newline46mondego>"
"1276splitHere46","17547443splitHere46","key1<newline46mondego>   key2  <newline46mondego>   key3<newline46mondego>"
"1277splitHere46","17547443splitHere46","Matcher m = Pattern.compile(<doubleQuotes46>&?([^&]+)=<doubleQuotes46>).matcher(<doubleQuotes46>key1=value1&key2=value2&key3=value3<doubleQuotes46>);<newline46mondego><newline46mondego>while (m.find()) <newline46mondego>{<newline46mondego>    System.out.println(m.group(1)); //prints capture group number 1<newline46mondego>}<newline46mondego>"
"1278splitHere46","17547443splitHere46","<doubleQuotes46>&?([^&]+)=<doubleQuotes46>; <newline46mondego>"
"1279splitHere46","17547443splitHere46","&?"
"1280splitHere46","17547443splitHere46","&"
"1281splitHere46","17547443splitHere46","[^&]+"
"1282splitHere46","17547443splitHere46","&"
"1283splitHere46","17547443splitHere46","([^&]+)"
"1284splitHere46","17547443splitHere46","&?([^&]+)="
"1285splitHere46","17547443splitHere46","&"
"1286splitHere46","17547443splitHere46","="
"1287splitHere46","17547443splitHere46","="
"1288splitHere46","17547443splitHere46","[^&]"
"1289splitHere46","17547443splitHere46","="
"1290splitHere46","17547443splitHere46","[^&=]"
"1291splitHere46","17547495splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46>>"
"1292splitHere46","17547495splitHere46","<f:param>"
"1293splitHere46","17547495splitHere46","@ManagedProperty"
"1294splitHere46","17547495splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>rolename<doubleQuotes46> value=<doubleQuotes46>Guest<doubleQuotes46> /><newline46mondego>"
"1295splitHere46","17547495splitHere46","<p:commandButton ...><newline46mondego>    <f:param name=<doubleQuotes46>rolename<doubleQuotes46> value=<doubleQuotes46>Guest<doubleQuotes46> /><newline46mondego></p:commandButton><newline46mondego>"
"1296splitHere46","17547495splitHere46","@ManagedProperty(<doubleQuotes46>#{param.rolename}<doubleQuotes46>)<newline46mondego>private String rolename; // +getter+setter<newline46mondego>"
"1297splitHere46","17547578splitHere46","For 1000 words: List: 1 ms, Map: 2 ms<newline46mondego>For 5000 words: List: 15 ms, Map: 12 ms<newline46mondego>For 10000 words: List: 57 ms, Map: 12 ms<newline46mondego>For 20000 words: List: 217 ms, Map: 37 ms<newline46mondego>For 30000 words: List: 485 ms, Map: 45 ms<newline46mondego>For 50000 words: List: 1365 ms, Map: 61 ms<newline46mondego>"
"1298splitHere46","17547578splitHere46","For 100000 words: List: - ms, Map: 166 ms<newline46mondego>For 500000 words: List: - ms, Map: 1130 ms<newline46mondego>For 1000000 words: List: - ms, Map: 3540 ms<newline46mondego>"
"1299splitHere46","17547578splitHere46","public void benchmarkListVersusMap() {<newline46mondego>    for (int count : new int[]{1000, 5000, 10000, 20000, 30000, 50000}) {<newline46mondego>        // Generate random sample data<newline46mondego>        List<List<String>> words = generateData(count, 10, count);<newline46mondego><newline46mondego>        // Create ArrayList<newline46mondego>        List<List<String>> list = new ArrayList<List<String>>();<newline46mondego>        list.addAll(words);<newline46mondego><newline46mondego>        // Create HashMap<newline46mondego>        Map<List<String>, Boolean> map = new HashMap<List<String>, Boolean>();<newline46mondego>        for (List<String> row : words) {<newline46mondego>            map.put(row, true);<newline46mondego>        }<newline46mondego><newline46mondego>        // Measure:<newline46mondego>        long timer = System.currentTimeMillis();<newline46mondego>        for (List<String> row: words) {<newline46mondego>            if (list.contains(row)) {<newline46mondego>                list.remove(row);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        long listTime = System.currentTimeMillis() - timer;<newline46mondego>        timer = System.currentTimeMillis();<newline46mondego>        for (List<String> row : words) {<newline46mondego>            if (map.containsKey(row)) {<newline46mondego>                map.remove(row);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        long mapTime = System.currentTimeMillis() - timer;<newline46mondego>        System.out.printf(<doubleQuotes46>For %s words: List: %s ms, Map: %s ms\n<doubleQuotes46>, count, listTime, mapTime);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private List<List<String>> generateData(int rows, int cols, int noOfDifferentWords) {<newline46mondego>    List<List<String>> list = new ArrayList<List<String>>(rows);<newline46mondego>    List<String> dictionary = generateRandomWords(noOfDifferentWords);<newline46mondego>    Random rnd = new Random();<newline46mondego>    for (int row = 0; row < rows; row++) {<newline46mondego>        List<String> l2 = new ArrayList<String>(cols);<newline46mondego>        for (int col = 0; col < cols; col++) {<newline46mondego>            l2.add(dictionary.get(rnd.nextInt(noOfDifferentWords)));<newline46mondego>        }<newline46mondego>        list.add(l2);<newline46mondego>    }<newline46mondego>    return list;<newline46mondego>}<newline46mondego><newline46mondego>private static final String CHARS = <doubleQuotes46>abcdefghijklmnopqrstuvwxyz0123456789<doubleQuotes46>;<newline46mondego>private List<String> generateRandomWords(int count) {<newline46mondego>    Random rnd = new Random();<newline46mondego>    List<String> list = new ArrayList<String>(count);<newline46mondego>    while (list.size() < count) {<newline46mondego>        StringBuilder sb = new StringBuilder(20);<newline46mondego>        for (int i = 0; i < 10; i++) {<newline46mondego>            sb.append(CHARS.charAt(rnd.nextInt(CHARS.length())));<newline46mondego>        }<newline46mondego>        list.add(sb.toString());<newline46mondego>    }<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"1300splitHere46","17547863splitHere46","batchSize"
"1301splitHere46","17547863splitHere46","pstmt.executeBatch();"
"1302splitHere46","17547863splitHere46","++count % batchSize == 0"
"1303splitHere46","17547863splitHere46","pstmt.executeBatch();"
"1304splitHere46","17547863splitHere46","while"
"1305splitHere46","17547909splitHere46","public void start() {<newline46mondego><newline46mondego>    SequentialTransition slideshow = new SequentialTransition();<newline46mondego><newline46mondego>    for (ImageView slide : slides) {<newline46mondego><newline46mondego>        SequentialTransition sequentialTransition = new SequentialTransition();<newline46mondego><newline46mondego>        FadeTransition fadeIn = Transition.getFadeTransition(slide, 0.0, 1.0, 2000);<newline46mondego>        FadeTransition stayOn = Transition.getFadeTransition(slide, 1.0, 1.0, 2000);<newline46mondego>        FadeTransition fadeOut = Transition.getFadeTransition(slide, 1.0, 0.0, 2000);<newline46mondego><newline46mondego>        sequentialTransition.getChildren().addAll(fadeIn, stayOn, fadeOut);               <newline46mondego>        this.root.getChildren().add(slide);            <newline46mondego>        slideshow.getChildren().add(sequentialTransition);<newline46mondego><newline46mondego>    }<newline46mondego>    slideshow.play();<newline46mondego>}<newline46mondego>"
"1306splitHere46","17547909splitHere46","package slideshow;<newline46mondego><newline46mondego>import javafx.animation.FadeTransition;<newline46mondego>import javafx.animation.PauseTransition;<newline46mondego>import javafx.animation.SequentialTransition;<newline46mondego>import javafx.application.Application;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.image.Image;<newline46mondego>import javafx.scene.image.ImageView;<newline46mondego>import javafx.scene.layout.StackPane;<newline46mondego>import javafx.stage.Stage;<newline46mondego>import javafx.util.Duration;<newline46mondego><newline46mondego>public class SimpleSlideShowTest extends Application{<newline46mondego><newline46mondego>  class SimpleSlideShow {<newline46mondego><newline46mondego>    StackPane root = new StackPane();<newline46mondego>    ImageView[] slides;<newline46mondego><newline46mondego>    public SimpleSlideShow() {<newline46mondego>      this.slides = new ImageView[4];<newline46mondego>      Image image1 = new Image(SlideShowTest.class.getResource(<doubleQuotes46>pic1<doubleQuotes46>).toExternalForm());<newline46mondego>      Image image2 = new Image(SlideShowTest.class.getResource(<doubleQuotes46>pic2<doubleQuotes46>).toExternalForm());<newline46mondego>      Image image3 = new Image(SlideShowTest.class.getResource(<doubleQuotes46>pic3<doubleQuotes46>).toExternalForm());<newline46mondego>      Image image4 = new Image(SlideShowTest.class.getResource(<doubleQuotes46>pic4<doubleQuotes46>).toExternalForm());<newline46mondego>      slides[0] = new ImageView(image1);<newline46mondego>      slides[1] = new ImageView(image2);<newline46mondego>      slides[2] = new ImageView(image3);<newline46mondego>      slides[3] = new ImageView(image4);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public StackPane getRoot() {<newline46mondego>      return root;<newline46mondego>    }<newline46mondego><newline46mondego>    // The method I am running in my class<newline46mondego><newline46mondego>    public void start() {<newline46mondego><newline46mondego>      SequentialTransition slideshow = new SequentialTransition();<newline46mondego><newline46mondego>      for (ImageView slide : slides) {<newline46mondego><newline46mondego>        SequentialTransition sequentialTransition = new SequentialTransition();<newline46mondego><newline46mondego>        FadeTransition fadeIn = getFadeTransition(slide, 0.0, 1.0, 2000);<newline46mondego>        PauseTransition stayOn = new PauseTransition(Duration.millis(2000));<newline46mondego>        FadeTransition fadeOut = getFadeTransition(slide, 1.0, 0.0, 2000);<newline46mondego><newline46mondego>        sequentialTransition.getChildren().addAll(fadeIn, stayOn, fadeOut);<newline46mondego>        slide.setOpacity(0);<newline46mondego>        this.root.getChildren().add(slide);<newline46mondego>        slideshow.getChildren().add(sequentialTransition);<newline46mondego><newline46mondego>      }<newline46mondego>      slideshow.play();<newline46mondego>    }<newline46mondego><newline46mondego>// the method in the Transition helper class:<newline46mondego><newline46mondego>    public FadeTransition getFadeTransition(ImageView imageView, double fromValue, double toValue, int durationInMilliseconds) {<newline46mondego><newline46mondego>      FadeTransition ft = new FadeTransition(Duration.millis(durationInMilliseconds), imageView);<newline46mondego>      ft.setFromValue(fromValue);<newline46mondego>      ft.setToValue(toValue);<newline46mondego><newline46mondego>      return ft;<newline46mondego><newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    launch(args);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void start(Stage primaryStage) throws Exception {<newline46mondego>    SimpleSlideShow simpleSlideShow = new SimpleSlideShow();<newline46mondego>    Scene scene = new Scene(simpleSlideShow.getRoot());<newline46mondego>    primaryStage.setScene(scene);<newline46mondego>    primaryStage.show();<newline46mondego>    simpleSlideShow.start();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1307splitHere46","17548105splitHere46","^delivery(?:'[^']*'|.)*?^(?=delivery|aggregate|reject|allow|merge)"
"1308splitHere46","17548105splitHere46","DELIVERY 'AR_ACTDETAIL_UPD' 'AR_DETAIL_UPD'<newline46mondego>MODULE TABLE<newline46mondego>FILTER 'AR_ACT'<newline46mondego>DEFINE UPDN 'UPDATE'<newline46mondego>DEFINE REFH 'UPDATE'<newline46mondego>DEFINE CIT '5000'<newline46mondego>DEFINE TDB 'TARGET'<newline46mondego>DEFINE TABLE 'AR_ACTIVITY_DETAIL'<newline46mondego>ELEMENTS '<doubleQuotes46>POSTING_PERIOD_SID<doubleQuotes46>,<doubleQuotes46>POSTING_DATE_SID<doubleQuotes46>,<doubleQuotes46>ACCTG_DOC_CLSS_SID<doubleQuotes46>,<doubleQuotes46>CUSTOMER_BLLT_SID<doubleQuotes46>,<doubleQuotes46>AR_ASSET_ACCNT_SID<doubleQuotes46>,<doubleQuotes46>CO_CNSLDTN_SID<doubleQuotes46>,<doubleQuotes46>AR_BSNSS_UNT_SID<doubleQuotes46>,<doubleQuotes46>LOCAL_CURRENCY_AMT<doubleQuotes46>,<doubleQuotes46>LCL_CUR_DSCNT_AAMT<doubleQuotes46>,<doubleQuotes46>LCL_CUR_DSCNT_TAMMT<doubleQuotes46>,<doubleQuotes46>TAXABLE_AMT<doubleQuotes46>,<doubleQuotes46>NO_TAXABLE_AMT<doubleQuotes46>,<doubleQuotes46>NO_FOREIGN_TAXABLE_AMT<doubleQuotes46>,<doubleQuotes46>TAX_CODE<doubleQuotes46>,<doubleQuotes46>BEFOREINVOICE_SID<doubleQuotes46>,<doubleQuotes46>ACCNT_BANK_PAYMENT_SID<doubleQuotes46>,<doubleQuotes46>GAIN_LOSS_LOC_AMT<doubleQuotes46>,<doubleQuotes46>LOCAL_OPEN_AMOUNT<doubleQuotes46>,<doubleQuotes46>FOREIGN_OPEN_AMOUNT<doubleQuotes46>'<newline46mondego>ELEDEFINE +3 IFNULL '0'<newline46mondego>ELEDEFINE +4 IFNULL '0'<newline46mondego>ELEDEFINE +5 IFNULL '0'<newline46mondego>ELEDEFINE +6 IFNULL '0'<newline46mondego><newline46mondego>DELIVERY 'AR_DOC_EXINS' 'AR_DOC_EINS'<newline46mondego>MODULE TABLE<newline46mondego>FILTER 'AR_DOC_EXTNSN_COLS_INS'<newline46mondego>DEFINE UPDATE_DETECTION 'UPDATE'<newline46mondego>DEFINE REFRESH 'APPEND'<newline46mondego>DEFINE COMMIT '5000'<newline46mondego>DEFINE TABLEDB 'TARGET'<newline46mondego>DEFINE TABLE 'AR_DOC_EXTNSN_COLS'<newline46mondego>ELEMENTS '<doubleQuotes46>AR_ACTVSID<doubleQuotes46>,<doubleQuotes46>DOCUMENT_CO_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_TYP_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_NO<doubleQuotes46>,<doubleQuotes46>DOCUMENT_SUFFIX_NO<doubleQuotes46>,<doubleQuotes46>DOC_SFFX_EXTT_NO<doubleQuotes46>,<doubleQuotes46>INVOICE_MULT<doubleQuotes46>,<doubleQuotes46>PAYMENT_MULT<doubleQuotes46>,<doubleQuotes46>ADJUSTMENT_MULT<doubleQuotes46>,<doubleQuotes46>BAD_DEBT_MULT<doubleQuotes46>,<doubleQuotes46>SOURCE_INFO<doubleQuotes46>,<doubleQuotes46>CHG_INVC_PY_STTS_IND<doubleQuotes46>,<doubleQuotes46>CHG_GROUP_CURRENCY_AMT<doubleQuotes46>,<doubleQuotes46>CHG_GRP_CUR_DSCNT_AAMT<doubleQuotes46>,<doubleQuotes46>CHG_GRP_CUR_DSCNT_TAMT<doubleQuotes46>,<doubleQuotes46>CREATED_DT<doubleQuotes46>,<doubleQuotes46>CHANGED_DT<doubleQuotes46>,<doubleQuotes46>ACCOUNT_ID<doubleQuotes46>,<doubleQuotes46>FI_ACCOUNT_ID<doubleQuotes46>'<newline46mondego>ELEDEFINE +2 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego>ELEDEFINE +3 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego><newline46mondego>DELIVERY 'AR_DOC_EXS_UPD' 'AR_DOC__UPD'<newline46mondego>MODULE TABLE<newline46mondego>FILTER 'AR_DOC_EXTNSN_COLS_UPD'<newline46mondego>DEFINE UPDATE_DETECTION 'UPDATE'<newline46mondego>DEFINE REFRESH 'UPDATE'<newline46mondego>DEFINE COMMIT '5000'<newline46mondego>DEFINE TABLEDB 'TARGET'<newline46mondego>DEFINE TABLE 'AR_DOC_EOLS'<newline46mondego>ELEMENTS '<doubleQuotes46>DOCUMENT_CO_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_TYP_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_NO<doubleQuotes46>,<doubleQuotes46>DOCUMENT_SUFFIX_NO<doubleQuotes46>,<doubleQuotes46>DOC_SFFX_EXTNSN_NO<doubleQuotes46>,<doubleQuotes46>PAYMENT_ID<doubleQuotes46>,<doubleQuotes46>PAYMETED_DT<doubleQuotes46>,<doubleQuotes46>CHANGED_DT<doubleQuotes46>,<doubleQuotes46>AR_ACTVTY_DOC_SID_TMP<doubleQuotes46>,<doubleQuotes46>ACCOUNT_ID<doubleQuotes46>,<doubleQuotes46>FI_ACCOUNT_ID<doubleQuotes46>,<doubleQuotes46>O_GROUP_CURRENCY_AMT<doubleQuotes46>,<doubleQuotes46>O_GRP_CUR_DSCNT_TAMT<doubleQuotes46>,<doubleQuotes46>O_GRP_CUR_DSCNT_AAMT<doubleQuotes46>'<newline46mondego>ELEDEFINE +1 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego>ELEDEFINE +2 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego>ELEDEFINE +3 IFNULL '{$U_DEFAULT_NUMBER}'<newline46mondego><newline46mondego>ALLOW DUPLICATES<newline46mondego>"
"1309splitHere46","17548105splitHere46","import java.util.regex.Pattern;<newline46mondego>import java.util.regex.Matcher;<newline46mondego>class Module1{<newline46mondego>  public static void main(String[] asd){<newline46mondego>  String sourcestring = <doubleQuotes46>source string to match with pattern<doubleQuotes46>;<newline46mondego>  Pattern re = Pattern.compile(<doubleQuotes46>^delivery(?:'[^']*'|.)*?^(?=delivery|aggregate|reject|allow|merge)<doubleQuotes46>,Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL);<newline46mondego>  Matcher m = re.matcher(sourcestring);<newline46mondego>  int mIdx = 0;<newline46mondego>    while (m.find()){<newline46mondego>      for( int groupIdx = 0; groupIdx < m.groupCount()+1; groupIdx++ ){<newline46mondego>        System.out.println( <doubleQuotes46>[<doubleQuotes46> + mIdx + <doubleQuotes46>][<doubleQuotes46> + groupIdx + <doubleQuotes46>] = <doubleQuotes46> + m.group(groupIdx));<newline46mondego>      }<newline46mondego>      mIdx++;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1310splitHere46","17548105splitHere46","[0][0] = DELIVERY 'AR_ACTDETAIL_UPD' 'AR_DETAIL_UPD'<newline46mondego>MODULE TABLE<newline46mondego>FILTER 'AR_ACT'<newline46mondego>DEFINE UPDN 'UPDATE'<newline46mondego>DEFINE REFH 'UPDATE'<newline46mondego>DEFINE CIT '5000'<newline46mondego>DEFINE TDB 'TARGET'<newline46mondego>DEFINE TABLE 'AR_ACTIVITY_DETAIL'<newline46mondego>ELEMENTS '<doubleQuotes46>POSTING_PERIOD_SID<doubleQuotes46>,<doubleQuotes46>POSTING_DATE_SID<doubleQuotes46>,<doubleQuotes46>ACCTG_DOC_CLSS_SID<doubleQuotes46>,<doubleQuotes46>CUSTOMER_BLLT_SID<doubleQuotes46>,<doubleQuotes46>AR_ASSET_ACCNT_SID<doubleQuotes46>,<doubleQuotes46>CO_CNSLDTN_SID<doubleQuotes46>,<doubleQuotes46>AR_BSNSS_UNT_SID<doubleQuotes46>,<doubleQuotes46>LOCAL_CURRENCY_AMT<doubleQuotes46>,<doubleQuotes46>LCL_CUR_DSCNT_AAMT<doubleQuotes46>,<doubleQuotes46>LCL_CUR_DSCNT_TAMMT<doubleQuotes46>,<doubleQuotes46>TAXABLE_AMT<doubleQuotes46>,<doubleQuotes46>NO_TAXABLE_AMT<doubleQuotes46>,<doubleQuotes46>NO_FOREIGN_TAXABLE_AMT<doubleQuotes46>,<doubleQuotes46>TAX_CODE<doubleQuotes46>,<doubleQuotes46>BEFOREINVOICE_SID<doubleQuotes46>,<doubleQuotes46>ACCNT_BANK_PAYMENT_SID<doubleQuotes46>,<doubleQuotes46>GAIN_LOSS_LOC_AMT<doubleQuotes46>,<doubleQuotes46>LOCAL_OPEN_AMOUNT<doubleQuotes46>,<doubleQuotes46>FOREIGN_OPEN_AMOUNT<doubleQuotes46>'<newline46mondego>ELEDEFINE +3 IFNULL '0'<newline46mondego>ELEDEFINE +4 IFNULL '0'<newline46mondego>ELEDEFINE +5 IFNULL '0'<newline46mondego>ELEDEFINE +6 IFNULL '0'<newline46mondego><newline46mondego><newline46mondego>[1][0] = DELIVERY 'AR_DOC_EXINS' 'AR_DOC_EINS'<newline46mondego>MODULE TABLE<newline46mondego>FILTER 'AR_DOC_EXTNSN_COLS_INS'<newline46mondego>DEFINE UPDATE_DETECTION 'UPDATE'<newline46mondego>DEFINE REFRESH 'APPEND'<newline46mondego>DEFINE COMMIT '5000'<newline46mondego>DEFINE TABLEDB 'TARGET'<newline46mondego>DEFINE TABLE 'AR_DOC_EXTNSN_COLS'<newline46mondego>ELEMENTS '<doubleQuotes46>AR_ACTVSID<doubleQuotes46>,<doubleQuotes46>DOCUMENT_CO_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_TYP_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_NO<doubleQuotes46>,<doubleQuotes46>DOCUMENT_SUFFIX_NO<doubleQuotes46>,<doubleQuotes46>DOC_SFFX_EXTT_NO<doubleQuotes46>,<doubleQuotes46>INVOICE_MULT<doubleQuotes46>,<doubleQuotes46>PAYMENT_MULT<doubleQuotes46>,<doubleQuotes46>ADJUSTMENT_MULT<doubleQuotes46>,<doubleQuotes46>BAD_DEBT_MULT<doubleQuotes46>,<doubleQuotes46>SOURCE_INFO<doubleQuotes46>,<doubleQuotes46>CHG_INVC_PY_STTS_IND<doubleQuotes46>,<doubleQuotes46>CHG_GROUP_CURRENCY_AMT<doubleQuotes46>,<doubleQuotes46>CHG_GRP_CUR_DSCNT_AAMT<doubleQuotes46>,<doubleQuotes46>CHG_GRP_CUR_DSCNT_TAMT<doubleQuotes46>,<doubleQuotes46>CREATED_DT<doubleQuotes46>,<doubleQuotes46>CHANGED_DT<doubleQuotes46>,<doubleQuotes46>ACCOUNT_ID<doubleQuotes46>,<doubleQuotes46>FI_ACCOUNT_ID<doubleQuotes46>'<newline46mondego>ELEDEFINE +2 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego>ELEDEFINE +3 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego><newline46mondego><newline46mondego>[2][0] = DELIVERY 'AR_DOC_EXS_UPD' 'AR_DOC__UPD'<newline46mondego>MODULE TABLE<newline46mondego>FILTER 'AR_DOC_EXTNSN_COLS_UPD'<newline46mondego>DEFINE UPDATE_DETECTION 'UPDATE'<newline46mondego>DEFINE REFRESH 'UPDATE'<newline46mondego>DEFINE COMMIT '5000'<newline46mondego>DEFINE TABLEDB 'TARGET'<newline46mondego>DEFINE TABLE 'AR_DOC_EOLS'<newline46mondego>ELEMENTS '<doubleQuotes46>DOCUMENT_CO_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_TYP_CD<doubleQuotes46>,<doubleQuotes46>TRANSACTION_NO<doubleQuotes46>,<doubleQuotes46>DOCUMENT_SUFFIX_NO<doubleQuotes46>,<doubleQuotes46>DOC_SFFX_EXTNSN_NO<doubleQuotes46>,<doubleQuotes46>PAYMENT_ID<doubleQuotes46>,<doubleQuotes46>PAYMETED_DT<doubleQuotes46>,<doubleQuotes46>CHANGED_DT<doubleQuotes46>,<doubleQuotes46>AR_ACTVTY_DOC_SID_TMP<doubleQuotes46>,<doubleQuotes46>ACCOUNT_ID<doubleQuotes46>,<doubleQuotes46>FI_ACCOUNT_ID<doubleQuotes46>,<doubleQuotes46>O_GROUP_CURRENCY_AMT<doubleQuotes46>,<doubleQuotes46>O_GRP_CUR_DSCNT_TAMT<doubleQuotes46>,<doubleQuotes46>O_GRP_CUR_DSCNT_AAMT<doubleQuotes46>'<newline46mondego>ELEDEFINE +1 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego>ELEDEFINE +2 IFNULL '{$U_DEFAULT_SHORT_CHAR}'<newline46mondego>ELEDEFINE +3 IFNULL '{$U_DEFAULT_NUMBER}'<newline46mondego>"
"1311splitHere46","17548116splitHere46","java.lang.ClassNotFoundException: android.view.linearlayout<newline46mondego>"
"1312splitHere46","17548116splitHere46","activity_double_me.xml"
"1313splitHere46","17548116splitHere46","<LinearLayout <newline46mondego>"
"1314splitHere46","17548121splitHere46","window.onbeforeunload = function(event) {<newline46mondego>            var isOK = confirm(<doubleQuotes46>Are you sure to Leave this Page?<doubleQuotes46>);<newline46mondego>            if(isOK)<newline46mondego>            {<newline46mondego>                // try ajax for update your table   <newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>"
"1315splitHere46","17548247splitHere46","-Xss<size>"
"1316splitHere46","17548268splitHere46","private RichCalendar thecal;<newline46mondego>//getter and setter for ca<newline46mondego>public RichCalendar getthecal() {<newline46mondego>    return thecal;   <newline46mondego>}<newline46mondego>public void setthecal(RichCalendar calendar) {<newline46mondego>    this.thecal = calendar;<newline46mondego>}<newline46mondego>"
"1317splitHere46","17548268splitHere46","//get the application module<newline46mondego>    DCBindingContainer dcbindings = (DCBindingContainer)BindingContext.getCurrent().getCurrentBindingsEntry();<newline46mondego>    AppModule am = (AppModule)dcbindings.getDataControl().getApplicationModule();<newline46mondego><newline46mondego>    //Run the filtering logic<newline46mondego>    am.nameOfYourMethod(PassSomeData,BlahBlah);<newline46mondego>"
"1318splitHere46","17548268splitHere46","//get the view object your calendar uses<newline46mondego>CalendarVOImpl voImpl = getCalendarVO();<newline46mondego>ViewCriteria vc = voImpl.createViewCriteria();<newline46mondego>//Just some name for the view criteria<newline46mondego>vc.setName(<doubleQuotes46>filterCalendar<doubleQuotes46>);<newline46mondego>ViewCriteriaRow vcRow = vc.createViewCriteriaRow();<newline46mondego>//Set the name of the attribute and the value you're looking to filter by<newline46mondego>vcRow.setAttribute(<doubleQuotes46>NameOfAttribute<doubleQuotes46>, <doubleQuotes46>IN (<doubleQuotes46> + valueFilter + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>vc.insertRow(vcRow);<newline46mondego>voImpl.applyViewCriteria(vc);<newline46mondego>voImpl.executeQuery();<newline46mondego>"
"1319splitHere46","17548341splitHere46","Thread thread = new Thread(new Runnable(){<newline46mondego>     public void run(){<newline46mondego>         //scan<newline46mondego>         SwingUtiltilies.invokeLater(new Runnable(){<newline46mondego>              //here you can update the the jlabel icon<newline46mondego>              public void run(){<newline46mondego>                  jlabel.setText(<doubleQuotes46>Completed<doubleQuotes46>);<newline46mondego>              }<newline46mondego>         });<newline46mondego>     } <newline46mondego>});<newline46mondego>"
"1320splitHere46","17548353splitHere46","if-then-else"
"1321splitHere46","17548353splitHere46","Map"
"1322splitHere46","17548353splitHere46","double"
"1323splitHere46","17548353splitHere46","Cs"
"1324splitHere46","17548353splitHere46","Cd"
"1325splitHere46","17548353splitHere46","value * Cs / Cd"
"1326splitHere46","17548353splitHere46","7.5"
"1327splitHere46","17548353splitHere46","Cs = 0.9144"
"1328splitHere46","17548353splitHere46","Cd = 0.3048"
"1329splitHere46","17548353splitHere46","Res = 7.5 * 0.9144 / 0.3048 = 22.5"
"1330splitHere46","17548468splitHere46","Boolean"
"1331splitHere46","17548468splitHere46","boolean"
"1332splitHere46","17548468splitHere46","class A {<newline46mondego>    int method() { ... }<newline46mondego>}<newline46mondego><newline46mondego>class B extends A {<newline46mondego>    short method() { .... }<newline46mondego>}<newline46mondego>"
"1333splitHere46","17548509splitHere46","1.home.html     id1  htmlcontent<newline46mondego>2.history.html  id1  htmlcontent<newline46mondego>3.about.html    id1  htmlcontent<newline46mondego><newline46mondego>4.home2.html    id2  htmlcontent<newline46mondego>...<newline46mondego>"
"1334splitHere46","17548562splitHere46","String.format"
"1335splitHere46","17548562splitHere46","match.setText(String.format(<doubleQuotes46>text \n text %s text \n text<doubleQuotes46>, variable));<newline46mondego>"
"1336splitHere46","17548895splitHere46","mkdirs()"
"1337splitHere46","17548895splitHere46","createNewFile()"
"1338splitHere46","17548895splitHere46","mkdirs()"
"1339splitHere46","17548895splitHere46","File parent = f.getParentFile();<newline46mondego>if (parent != null) parent.mkdirs();<newline46mondego>"
"1340splitHere46","17549014splitHere46","dialog.getWindow().clearFlags(LayoutParams.FLAG_DIM_BEHIND);<newline46mondego>"
"1341splitHere46","17549061splitHere46","public class DadosPonto extends Fragment{<newline46mondego><newline46mondego>    // Keep a reference to the view; <newline46mondego>    private View view;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setRetainInstance(true);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {<newline46mondego>        if (view == null) {<newline46mondego>            view = inflater.inflate(R.layout.dados_ponto_layout, container, false);<newline46mondego>            View idPonto = view.findViewById(R.id.idPonto);<newline46mondego>            // .....<newline46mondego>        } else {<newline46mondego>            // If we are returning from a configuration change:<newline46mondego>            // <doubleQuotes46>view<doubleQuotes46> is still attached to the previous view hierarchy<newline46mondego>            // so we need to remove it and re-attach it to the current one<newline46mondego>            ViewGroup parent = (ViewGroup) view.getParent();<newline46mondego>            parent.removeView(view);<newline46mondego>        }<newline46mondego>        return view;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1342splitHere46","17549144splitHere46","Object"
"1343splitHere46","17549144splitHere46","instanceof"
"1344splitHere46","17549144splitHere46","public class OptionsValidator implements ConstraintValidator<Options, Object> {<newline46mondego>    private List<String> values;<newline46mondego>    private boolean optional;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void initialize(Options params) {<newline46mondego>        values = Arrays.asList(params.values().data);<newline46mondego>        optional = params.optional();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isValid(Object value, ConstraintValidatorContext constraintValidatorContext) {<newline46mondego>        if (optional && value == null) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        if (value instanceof String[]) {<newline46mondego>            String[] valArray = (String[]) value;<newline46mondego>            if (!optional && valArray.length == 0) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego><newline46mondego>            for (String val : valArray) {<newline46mondego>                if (!values.contains(val)) {<newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            return true;<newline46mondego>        } else if (value instanceof String) {<newline46mondego>            String val = (String) value;<newline46mondego>            if (optional && val.trim() == <doubleQuotes46><doubleQuotes46>) {<newline46mondego>                return true;<newline46mondego>            }<newline46mondego><newline46mondego>            return val != null && values.contains(val);<newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1345splitHere46","17549349splitHere46","Expression: <newline46mondego>     Expression1 [AssignmentOperator Expression1]<newline46mondego><newline46mondego>Expression1: <newline46mondego>     Expression2 [Expression1Rest]<newline46mondego><newline46mondego>Expression1Rest: <newline46mondego>     ? Expression : Expression1<newline46mondego><newline46mondego>Expression2:<newline46mondego>     Expression3 [Expression2Rest]<newline46mondego><newline46mondego>Expression2Rest:<newline46mondego>     { InfixOp Expression3 }<newline46mondego>     instanceof Type<newline46mondego><newline46mondego><newline46mondego>InfixOp: <newline46mondego>     || <newline46mondego>     &&<newline46mondego>     // and many other operators<newline46mondego>"
"1346splitHere46","17549349splitHere46","A || B ? C : D"
"1347splitHere46","17549349splitHere46","? C : D"
"1348splitHere46","17549349splitHere46","Expression1Rest"
"1349splitHere46","17549349splitHere46","||"
"1350splitHere46","17549349splitHere46","Expression3"
"1351splitHere46","17549349splitHere46","Expression3"
"1352splitHere46","17549349splitHere46","A || B"
"1353splitHere46","17549349splitHere46","Expression3"
"1354splitHere46","17549349splitHere46","(A || B) ? C : D"
"1355splitHere46","17549689splitHere46","setX(int x){<newline46mondego>   this.x = x;}<newline46mondego>"
"1356splitHere46","17549889splitHere46","(map == null) ? (long)0 : map.get(<doubleQuotes46>non-existent key<doubleQuotes46>);<newline46mondego>"
"1357splitHere46","17549889splitHere46","long"
"1358splitHere46","17549889splitHere46","long"
"1359splitHere46","17549889splitHere46","long"
"1360splitHere46","17549889splitHere46","T"
"1361splitHere46","17549889splitHere46","T"
"1362splitHere46","17549889splitHere46","T"
"1363splitHere46","17549889splitHere46","map"
"1364splitHere46","17549889splitHere46","null"
"1365splitHere46","17549889splitHere46","long"
"1366splitHere46","17549889splitHere46","null"
"1367splitHere46","17549889splitHere46","NullPointerException"
"1368splitHere46","17549889splitHere46","Long number = (map == null) ? (Long)0L : map.get(<doubleQuotes46>non-existent key<doubleQuotes46>);<newline46mondego>"
"1369splitHere46","17549889splitHere46","if(map == null)<newline46mondego>    number = (long) 0;<newline46mondego>else<newline46mondego>    number = map.get(<doubleQuotes46>non-existent key<doubleQuotes46>);<newline46mondego>"
"1370splitHere46","17549889splitHere46","number"
"1371splitHere46","17549889splitHere46","Long"
"1372splitHere46","17549889splitHere46","long"
"1373splitHere46","17549937splitHere46","c"
"1374splitHere46","17549937splitHere46","int"
"1375splitHere46","17549937splitHere46","String"
"1376splitHere46","17549937splitHere46","char"
"1377splitHere46","17549937splitHere46","int"
"1378splitHere46","17549937splitHere46","long"
"1379splitHere46","17549937splitHere46","float"
"1380splitHere46","17549937splitHere46","double"
"1381splitHere46","17549937splitHere46","String"
"1382splitHere46","17549937splitHere46","char"
"1383splitHere46","17549937splitHere46","String"
"1384splitHere46","17550079splitHere46","public int enumerate(Thread[] list,<newline46mondego>            boolean recurse)<newline46mondego>"
"1385splitHere46","17550079splitHere46","list"
"1386splitHere46","17550079splitHere46","length"
"1387splitHere46","17550079splitHere46","list"
"1388splitHere46","17550079splitHere46","length"
"1389splitHere46","17550079splitHere46","list"
"1390splitHere46","17550098splitHere46","copy-resources"
"1391splitHere46","17550098splitHere46","target"
"1392splitHere46","17550098splitHere46","target/classes"
"1393splitHere46","17550098splitHere46","<configuration><newline46mondego>    <outputDirectory>${basedir}/target/classes</outputDirectory><newline46mondego>    <includeEmptyDirs>true</includeEmptyDirs><newline46mondego>    <resources><newline46mondego>        <resource><newline46mondego>            <directory>${basedir}/src/main/java/com/test/customize</directory><newline46mondego>            <filtering>false</filtering><newline46mondego>        </resource><newline46mondego>        <resource><newline46mondego>            <directory>${basedir}/src/main/java/com/test/resources</directory><newline46mondego>            <filtering>false</filtering><newline46mondego>        </resource><newline46mondego>        <resource><newline46mondego>            <directory>${basedir}/src/main/java/com/test/xml</directory><newline46mondego>            <filtering>false</filtering><newline46mondego>        </resource><newline46mondego>    </resources><newline46mondego></configuration><newline46mondego>"
"1394splitHere46","17550098splitHere46","${basedir}/src/main/resources"
"1395splitHere46","17550098splitHere46","src<newline46mondego>   main<newline46mondego>      resources<newline46mondego>         customize<newline46mondego>         resources<newline46mondego>         xml<newline46mondego>"
"1396splitHere46","17550098splitHere46","maven-resources-plugin"
"1397splitHere46","17550157splitHere46","function fetchLogs(){<newline46mondego>$.ajax({<newline46mondego>    type: <doubleQuotes46>POST<doubleQuotes46>,<newline46mondego>    url: <doubleQuotes46>LogsServlet<doubleQuotes46>,<newline46mondego>    data: 'FromDate='+from+'&'+'ToDate='+to,<newline46mondego>    dataType: 'json',<newline46mondego>    success: AjaxFetchDataSucceeded,<newline46mondego>    error: AjaxFetchDataFailed<newline46mondego><newline46mondego>});<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>function AjaxFetchDataSucceeded(result) {<newline46mondego>    if (result != <doubleQuotes46>[]<doubleQuotes46>) {<newline46mondego>        //var dataTab = $.parseJSON(result);<newline46mondego>        $('#logs').dataTable({<newline46mondego>            <doubleQuotes46>bProcessing<doubleQuotes46>: true,<newline46mondego>            <doubleQuotes46>aaData<doubleQuotes46>: result,<newline46mondego>            //important  -- headers of the json<newline46mondego>            <doubleQuotes46>aoColumns<doubleQuotes46>: [{ <doubleQuotes46>mDataProp<doubleQuotes46>: <doubleQuotes46>user_id<doubleQuotes46> }, { <doubleQuotes46>mDataProp<doubleQuotes46>: <doubleQuotes46>executed_at<doubleQuotes46> }],<newline46mondego>            <doubleQuotes46>sPaginationType<doubleQuotes46>: <doubleQuotes46>full_numbers<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>aaSorting<doubleQuotes46>: [[0, <doubleQuotes46>asc<doubleQuotes46>]],<newline46mondego>            <doubleQuotes46>bJQueryUI<doubleQuotes46>: true<newline46mondego><newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>function AjaxFetchDataFailed(result) {<newline46mondego>    alert(result.status + ' ' + result.statusText);<newline46mondego>}<newline46mondego>"
"1398splitHere46","17550593splitHere46","My question is why is the loop required?<newline46mondego>"
"1399splitHere46","17550593splitHere46","Activities that do not support cancellation but still call interruptible <newline46mondego>blocking methods will have to call them in a loop, retrying when interruption <newline46mondego>is detected.  <newline46mondego>     From Java concurrency in Practice 7.1.3<newline46mondego>"
"1400splitHere46","17550593splitHere46","Also if queue.take() throws an interruptedException then I am assuming the <newline46mondego>interrupt flag is set on the current thread correct? <newline46mondego>"
"1401splitHere46","17550593splitHere46","Below is the Code from AQS(AbstractQueueSynchronizer) from java<newline46mondego><newline46mondego>     public final void acquireInterruptibly(int arg) throws InterruptedException {<newline46mondego>            if (Thread.interrupted())<newline46mondego>                throw new InterruptedException();<newline46mondego>            if (!tryAcquire(arg))<newline46mondego>                doAcquireInterruptibly(arg);<newline46mondego>        }<newline46mondego>"
"1402splitHere46","17550923splitHere46","private final Pagination pagination = new Pagination(...);<newline46mondego>"
"1403splitHere46","17550923splitHere46","private final Pagination pagination;<newline46mondego><newline46mondego>public PaginationSample() {<newline46mondego>    pagination = new Pagination(...);<newline46mondego>}<newline46mondego>"
"1404splitHere46","17550923splitHere46","final"
"1405splitHere46","17550945splitHere46","PaddedBufferedBlockCipher"
"1406splitHere46","17550945splitHere46","ZeroBytePadding"
"1407splitHere46","17550945splitHere46","ZeroBytePadding"
"1408splitHere46","17551016splitHere46","long connectTimeout = 3000;<newline46mondego>URL global_url = new URL(urlPath);<newline46mondego>URLConnection con = global_url.openConnection();<newline46mondego>con.setConnectTimeout(connectTimeout);<newline46mondego>"
"1409splitHere46","17551275splitHere46","for (int x = 0;x<myPanels.length;x++){<newline46mondego><newline46mondego>        myPanels[x]=new JLabel(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        myPanels[x].setOpaque(true);<newline46mondego>        myPanels[x].setBackground(Color.BLUE);<newline46mondego>        myPanels[x].setBorder(BorderFactory.createLineBorder(Color.black));<newline46mondego>        myPanels[x].addMouseListener(this); // <-- add same listener to each grid<newline46mondego>    }<newline46mondego>"
"1410splitHere46","17551275splitHere46","@Override<newline46mondego>public void mouseClicked(MouseEvent e) {<newline46mondego>    JLabel clickedPanel = (JLabel) e.getSource();<newline46mondego><newline46mondego>    //Toggle colours    <newline46mondego>    if (clickedPanel.getBackground()==Color.blue)<newline46mondego>        clickedPanel.setBackground(Color.red);<newline46mondego>    else <newline46mondego>        clickedPanel.setBackground(Color.blue);<newline46mondego>}<newline46mondego>"
"1411splitHere46","17551286splitHere46","public static void main(String [] args) {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>My Frame<doubleQuotes46>);<newline46mondego>          JPanel panel = new JPanel(new GridLayout(1,2)); // split the panel in 1 rows and 2 cols<newline46mondego><newline46mondego><newline46mondego>          JTextArea userField = new JTextArea(<doubleQuotes46>User:<doubleQuotes46>);<newline46mondego>          userField.setEditable(false);<newline46mondego><newline46mondego>          JTextArea user = new JTextArea(<doubleQuotes46>myuser<doubleQuotes46>);<newline46mondego>          user.setEditable(true);<newline46mondego><newline46mondego>          panel.add(userField);<newline46mondego>          panel.add(user);<newline46mondego><newline46mondego>          frame.getContentPane().add(panel);<newline46mondego><newline46mondego>          frame.setVisible(true);<newline46mondego>          frame.setSize(500, 500);<newline46mondego>          frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    }<newline46mondego>"
"1412splitHere46","17551672splitHere46","127.0.0.1"
"1413splitHere46","17551672splitHere46","localhost"
"1414splitHere46","17551672splitHere46","127.0.0.1"
"1415splitHere46","17551672splitHere46","127.0.0.1"
"1416splitHere46","17551684splitHere46","import com.google.gwt.cell.client.AbstractCell;<newline46mondego>import com.google.gwt.safehtml.shared.SafeHtmlBuilder;<newline46mondego>import com.google.gwt.user.client.ui.Widget;<newline46mondego><newline46mondego>public class WidgetGridCell extends AbstractCell<Widget> {<newline46mondego><newline46mondego>  Widget widget;<newline46mondego><newline46mondego>  public WidgetGridCell(Widget widget) {<newline46mondego>      this.widget = widget;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void render(Context paramContext,<newline46mondego>          Widget param, SafeHtmlBuilder pb) {<newline46mondego>    Button aButton = new Button();<newline46mondego>    // add text to the button, etc...<newline46mondego>    pb.append(SafeHtmlUtils.fromTrustedString(aButton.toString()));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1417splitHere46","17551692splitHere46","Request"
"1418splitHere46","17551692splitHere46","Request"
"1419splitHere46","17551692splitHere46","#setUp"
"1420splitHere46","17551692splitHere46","#tearDown"
"1421splitHere46","17551692splitHere46","@Before"
"1422splitHere46","17551692splitHere46","@After"
"1423splitHere46","17551706splitHere46","utf8_encode()"
"1424splitHere46","17551781splitHere46","System.out.println(fr.ImportTeams(i));<newline46mondego>"
"1425splitHere46","17551781splitHere46","System.out.println(fr.ImportTeams()[i]);<newline46mondego>"
"1426splitHere46","17551781splitHere46","array"
"1427splitHere46","17551781splitHere46","array[index]"
"1428splitHere46","17551837splitHere46","DownloadLink"
"1429splitHere46","17551837splitHere46","Model"
"1430splitHere46","17551837splitHere46","IModel fileModel = new LoadableDetachableModel (){<newline46mondego>    protected Object load() { <newline46mondego>        // A hello world PDF<newline46mondego>        File f = File.createTempFile(<doubleQuotes46>tempFile<doubleQuotes46>, null);<newline46mondego>        Document document = new Document();<newline46mondego>        PdfWriter.getInstance(document, new FileOutputStream(f));<newline46mondego>        document.open();<newline46mondego>        document.add(new Paragraph(<doubleQuotes46>Hello World!<doubleQuotes46>));<newline46mondego>        document.close();<newline46mondego>        return f;<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>DownloadLink link = new DownloadLink(linkId, fileModel, <doubleQuotes46>report.pdf<doubleQuotes46>);<newline46mondego>// If you want to delete the file after it's been downloaded<newline46mondego>link.setDeleteFileAfterDownload(true); <newline46mondego>add(link);<newline46mondego>"
"1431splitHere46","17551934splitHere46","myParam"
"1432splitHere46","17551934splitHere46","Integer"
"1433splitHere46","17551934splitHere46","Optional<Integer>"
"1434splitHere46","17551934splitHere46","Optional.of(someValue)"
"1435splitHere46","17551934splitHere46","Optional.absent()"
"1436splitHere46","17551968splitHere46","java.io.ByteArrayOutputStream"
"1437splitHere46","17551968splitHere46","java.io.OutputStreamWriter"
"1438splitHere46","17551968splitHere46","ByteArrayOutputStream byteOut = new ByteArrayOutputStream();<newline46mondego>Writer out = new OutputStreamWriter(byteOut, <doubleQuotes46>UTF-8<doubleQuotes46>);  // Uses UTF-8 encoding<newline46mondego>out.write(<doubleQuotes46>12<doubleQuotes46>);<newline46mondego>out.write(10);<newline46mondego>out.write(10);<newline46mondego>out.close();<newline46mondego><newline46mondego>byte[] bytes = byteOut.toByteArray();<newline46mondego>"
"1439splitHere46","17551968splitHere46","bytes.length"
"1440splitHere46","17551968splitHere46","byteOut"
"1441splitHere46","17552022splitHere46","meta"
"1442splitHere46","17552022splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego><?xml-stylesheet type=<doubleQuotes46>text/xsl<doubleQuotes46> href=<doubleQuotes46>..\..\..\stylesheet\mysql-result.xsl<doubleQuotes46>?><newline46mondego><resultset><newline46mondego><meta name=<doubleQuotes46>ZOOMPAGEBOOST<doubleQuotes46> content=<doubleQuotes46>5<doubleQuotes46>/><newline46mondego>    <row><newline46mondego>    ...<newline46mondego>    </row><newline46mondego></resultset><newline46mondego>"
"1443splitHere46","17552113splitHere46","getName().equals(n);<newline46mondego>"
"1444splitHere46","17552259splitHere46","last = curr"
"1445splitHere46","17552259splitHere46","last"
"1446splitHere46","17552259splitHere46","curr"
"1447splitHere46","17552259splitHere46","System.out.println(last.getSomeProperty());<newline46mondego>last.setSomeProperty(newValue);<newline46mondego>System.out.println(last.getSomeProperty());<newline46mondego>"
"1448splitHere46","17552259splitHere46","oldValue<newline46mondego>newValue<newline46mondego>"
"1449splitHere46","17552259splitHere46","last"
"1450splitHere46","17552259splitHere46","curr"
"1451splitHere46","17552259splitHere46","curr"
"1452splitHere46","17552551splitHere46","map.keySet()"
"1453splitHere46","17552551splitHere46","java.util.Set"
"1454splitHere46","17552551splitHere46","Set<String>"
"1455splitHere46","17552551splitHere46","java.util.Set<String> keys = map.keySet();<newline46mondego>"
"1456splitHere46","17552551splitHere46","Set<String> keys = map.keySet();<newline46mondego>"
"1457splitHere46","17552621splitHere46","Map"
"1458splitHere46","17552621splitHere46","Map<String, MyClass> map = new HashMap<String, MyClass>();<newline46mondego>map.put(<doubleQuotes46>xyz<doubleQuotes46>, new MyClass());  // or something like that<newline46mondego><newline46mondego>...<newline46mondego>"
"1459splitHere46","17552621splitHere46","<doubleQuotes46>xyz<doubleQuotes46>"
"1460splitHere46","17552621splitHere46","map.get(<doubleQuotes46>xyz<doubleQuotes46>)"
"1461splitHere46","17552743splitHere46","netsh"
"1462splitHere46","17552743splitHere46","ipconfig"
"1463splitHere46","17552743splitHere46","connect()"
"1464splitHere46","17552743splitHere46","select()"
"1465splitHere46","17552743splitHere46","connect()"
"1466splitHere46","17552743splitHere46","WSAEWOULDBLOCk"
"1467splitHere46","17552743splitHere46","select()"
"1468splitHere46","17552743splitHere46","connect()"
"1469splitHere46","17552743splitHere46","connect()"
"1470splitHere46","17552743splitHere46","connect()"
"1471splitHere46","17552743splitHere46","TIdTCPClient"
"1472splitHere46","17552746splitHere46","FileHashMap"
"1473splitHere46","17552746splitHere46","FileHashMap"
"1474splitHere46","17552746splitHere46","int"
"1475splitHere46","17552746splitHere46","flags & FileHashMap.TRANSIENT == 0"
"1476splitHere46","17552746splitHere46","0"
"1477splitHere46","17552746splitHere46","new FileHashMap<Integer, String>(fileName, 0);<newline46mondego>"
"1478splitHere46","17552746splitHere46","Integer"
"1479splitHere46","17552746splitHere46","int"
"1480splitHere46","17552763splitHere46","XStream"
"1481splitHere46","17552821splitHere46",".equals"
"1482splitHere46","17552821splitHere46","=="
"1483splitHere46","17552856splitHere46","deployment descriptor"
"1484splitHere46","17552856splitHere46","Java EE 7"
"1485splitHere46","17552856splitHere46","deployment descriptor (beans.xml)"
"1486splitHere46","17552856splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><beans xmlns=<doubleQuotes46>http://xmlns.jcp.org/xml/ns/javaee<doubleQuotes46><newline46mondego>       xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>       xsi:schemaLocation=<doubleQuotes46>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd<doubleQuotes46><newline46mondego>       version=<doubleQuotes46>1.1<doubleQuotes46> bean-discovery-mode=<doubleQuotes46>all<doubleQuotes46> ><newline46mondego></beans><newline46mondego>"
"1487splitHere46","17552856splitHere46","bean-discovery-mode"
"1488splitHere46","17552856splitHere46","CDI"
"1489splitHere46","17552856splitHere46","bean-discovery-mode=<doubleQuotes46>all<doubleQuotes46>"
"1490splitHere46","17552856splitHere46","CDI"
"1491splitHere46","17552856splitHere46","Java EE 6"
"1492splitHere46","17552966splitHere46","PdfReader"
"1493splitHere46","17552966splitHere46","baos"
"1494splitHere46","17552966splitHere46","ByteArrayOutputStream"
"1495splitHere46","17552966splitHere46","PdfReader reader = new PdfReader(baos.toByteArray());<newline46mondego>"
"1496splitHere46","17552983splitHere46","static"
"1497splitHere46","17552983splitHere46","true"
"1498splitHere46","17552983splitHere46","Activity"
"1499splitHere46","17552983splitHere46","Activity"
"1500splitHere46","17552983splitHere46","onCreate"
"1501splitHere46","17552983splitHere46","Twitter"
"1502splitHere46","17552983splitHere46","public static void postDone() {<newline46mondego>    // Go to next activity<newline46mondego>}<newline46mondego>"
"1503splitHere46","17552983splitHere46","Twitter"
"1504splitHere46","17552983splitHere46","MyActivity.postDone();<newline46mondego>"
"1505splitHere46","17553198splitHere46","replaceAll()"
"1506splitHere46","17553198splitHere46","String"
"1507splitHere46","17553198splitHere46","weatherLocation"
"1508splitHere46","17553198splitHere46","weatherLocation = weatherLocation.replaceAll(<doubleQuotes46>how<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>)<newline46mondego>                    .replaceAll(<doubleQuotes46>what<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>)<newline46mondego>                    .replaceAll(<doubleQuotes46>weather<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                    .replaceAll(<doubleQuotes46>like<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                    .replaceAll(<doubleQuotes46> in<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                    .replaceAll(<doubleQuotes46> at<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)<newline46mondego>                    .replaceAll(<doubleQuotes46>around<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"1509splitHere46","17553250splitHere46","null"
"1510splitHere46","17553250splitHere46","null"
"1511splitHere46","17553250splitHere46","error"
"1512splitHere46","17553250splitHere46","{<newline46mondego>    <doubleQuotes46>successful<doubleQuotes46>: false,<newline46mondego>    <doubleQuotes46>message<doubleQuotes46>: <doubleQuotes46>User does not exist<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>userDTO<doubleQuotes46>: null<newline46mondego>}<newline46mondego>"
"1513splitHere46","17553250splitHere46","{<newline46mondego>    <doubleQuotes46>successful<doubleQuotes46>: true,<newline46mondego>    <doubleQuotes46>message<doubleQuotes46>: <doubleQuotes46>User found<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>userDTO<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>firstName<doubleQuotes46>: <doubleQuotes46>Guybrush<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>lastName<doubleQuotes46>: <doubleQuotes46>Threepwood<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1514splitHere46","17553254splitHere46","int"
"1515splitHere46","17553254splitHere46","long"
"1516splitHere46","17553341splitHere46","int s"
"1517splitHere46","17553341splitHere46","int s"
"1518splitHere46","17553341splitHere46","for"
"1519splitHere46","17553348splitHere46","<E>"
"1520splitHere46","17553348splitHere46","Throwable"
"1521splitHere46","17553348splitHere46","X"
"1522splitHere46","17553348splitHere46","Iterable"
"1523splitHere46","17553348splitHere46","public class X<E> {<newline46mondego>    private final Iterator<E> it;<newline46mondego><newline46mondego>    public X(Iterable<E> a) {<newline46mondego>        it = a.iterator();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean hasNext() {<newline46mondego>        return it.hasNext();<newline46mondego>    }<newline46mondego><newline46mondego>    public E next() {<newline46mondego>        return it.next();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1524splitHere46","17553348splitHere46","a.iterator()"
"1525splitHere46","17553348splitHere46","X"
"1526splitHere46","17553505splitHere46","<wls:prefer-application-packages><newline46mondego>    <wls:package-name>org.eclipse.persistence.*</wls:package-name><newline46mondego>    <wls:package-name>org.apache.xerces.xni.parser.*</wls:package-name><newline46mondego>    <wls:package-name>org.apache.xerces.parsers.*</wls:package-name><newline46mondego>    <wls:package-name>org.apache.xalan.*</wls:package-name><newline46mondego></wls:prefer-application-packages><newline46mondego>"
"1527splitHere46","17553526splitHere46","& 0xff"
"1528splitHere46","17553526splitHere46","int result = (DataArray[11] & 0xff) |<newline46mondego>             ((DataArray[12] & 0xff) << 8);<newline46mondego>"
"1529splitHere46","17553526splitHere46","DataArray[12]"
"1530splitHere46","17553526splitHere46","DataArray[11]"
"1531splitHere46","17553566splitHere46","StringBuffer"
"1532splitHere46","17553566splitHere46","String"
"1533splitHere46","17553566splitHere46","StringBuffer"
"1534splitHere46","17553566splitHere46","Object#equals"
"1535splitHere46","17553566splitHere46","StringBuffer"
"1536splitHere46","17553566splitHere46","String#equals"
"1537splitHere46","17553566splitHere46","String"
"1538splitHere46","17553566splitHere46","buffer"
"1539splitHere46","17553566splitHere46","buffer"
"1540splitHere46","17553566splitHere46","if (buffer.toString().equals(newString)) {<newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"1541splitHere46","17553566splitHere46","StringBuilder"
"1542splitHere46","17553566splitHere46","StringBuffer"
"1543splitHere46","17553650splitHere46","public class Recorder {<newline46mondego>    static Long RECORD_TIME = 100000L; //or whatever time you use   <newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        final Main REGISTRAZIONE = new Main();<newline46mondego><newline46mondego>        Thread TIME = new Thread(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    Thread.sleep(RECORD_TIME);<newline46mondego>                } catch (InterruptedException ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                }<newline46mondego>                REGISTRAZIONE.finish();<newline46mondego>            }<newline46mondego>        });<newline46mondego>        TIME.start();<newline46mondego><newline46mondego>        myThread finisher = new myThread(TIME);<newline46mondego>        finisher.start();<newline46mondego>        REGISTRAZIONE.start();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class myThread extends Thread implements Runnable {<newline46mondego>    private Thread TIME;<newline46mondego><newline46mondego>    public myThread(Thread TIME) {<newline46mondego>        this.TIME = TIME;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        while (!silence()) {<newline46mondego>            // do nothing<newline46mondego>        }<newline46mondego>        TIME.interrupt();<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean silence() {<newline46mondego>        //record and calculate the dB volume and compare to some level<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1544splitHere46","17553716splitHere46","str = str.replaceAll(<doubleQuotes46>\\bis\\b<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"1545splitHere46","17554002splitHere46","String fileContent = <doubleQuotes46>line1\nline2\nline3\nline4\n<doubleQuotes46>;<newline46mondego>  // -1 limit tells split to keep empty fields<newline46mondego>  String[] fileLines = fileContent.split(<doubleQuotes46>\n<doubleQuotes46>, -1);<newline46mondego>  String lastLine = fileLines[fileLines.length - 1];<newline46mondego>  boolean lastLineIsEmpty = false;<newline46mondego>  if(lastLine.trim().isEmpty())<newline46mondego>  {<newline46mondego>     lastLineIsEmpty = true;<newline46mondego>  }<newline46mondego><newline46mondego>  //prints true, line4 followed by carriage return but <newline46mondego>  //no line 5<newline46mondego>  System.out.println(<doubleQuotes46>lastLineEmpty: <doubleQuotes46> + lastLineIsEmpty);<newline46mondego>"
"1546splitHere46","17554084splitHere46","import com.actionbarsherlock.view.Menu;<newline46mondego>import com.actionbarsherlock.view.MenuItem;<newline46mondego>"
"1547splitHere46","17554084splitHere46","@Override<newline46mondego>public boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu) {<newline46mondego><newline46mondego>    com.actionbarsherlock.view.MenuInflater inflate = getSupportMenuInflater();<newline46mondego>    inflate.inflate(R.menu.main, menu);<newline46mondego><newline46mondego>    return super.onCreateOptionsMenu(menu);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Override<newline46mondego>public boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {<newline46mondego>    // Handle item selection<newline46mondego>    switch (item.getItemId()) {<newline46mondego>        case R.id.action_refresh:<newline46mondego>            //do whatever you want<newline46mondego>        break;<newline46mondego>        default:<newline46mondego>            return super.onOptionsItemSelected(item);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1548splitHere46","17554084splitHere46","<item<newline46mondego>        android:id=<doubleQuotes46>@+id/action_legalnotice<doubleQuotes46><newline46mondego>        android:orderInCategory=<doubleQuotes46>100<doubleQuotes46><newline46mondego>        android:title=<doubleQuotes46>Legal Notices<doubleQuotes46>/><newline46mondego>     <item<newline46mondego>        android:id=<doubleQuotes46>@+id/action_refresh<doubleQuotes46><newline46mondego>        android:icon=<doubleQuotes46>@drawable/ic_action_refresh<doubleQuotes46><newline46mondego>        android:orderInCategory=<doubleQuotes46>1<doubleQuotes46><newline46mondego>        android:showAsAction=<doubleQuotes46>always<doubleQuotes46><newline46mondego><newline46mondego><newline46mondego>android:title=<doubleQuotes46>Your title here please<doubleQuotes46><newline46mondego><newline46mondego>        /><newline46mondego>"
"1549splitHere46","17554105splitHere46","private static class IfStmtVisitor extends VoidVisitorAdapter<Void> {<newline46mondego>    int i = 0;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void visit(IfStmt n, Void arg) <newline46mondego>    {<newline46mondego>        cyclomaticCount(n);<newline46mondego>    }<newline46mondego><newline46mondego>    private void cyclomaticCount(IfStmt n)<newline46mondego>    {<newline46mondego>        // one for the if-then<newline46mondego>        i++;<newline46mondego>        Statement elseStmt = n.getElseStmt();<newline46mondego>        if (elseStmt != null)<newline46mondego>        {<newline46mondego>            if (  IfStmt.class.isAssignableFrom(elseStmt.getClass())) <newline46mondego>            {<newline46mondego>                cyclomaticCount((IfStmt) elseStmt);<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                // another for the else<newline46mondego>                i++;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public int getNumber() {<newline46mondego>        return i;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1550splitHere46","17554176splitHere46","return (long) (x / y);<newline46mondego>"
"1551splitHere46","17554176splitHere46","(long) x / y"
"1552splitHere46","17554176splitHere46","((long) x) / y"
"1553splitHere46","17554176splitHere46","float"
"1554splitHere46","17554192splitHere46","Socket"
"1555splitHere46","17554192splitHere46","ServerSocket"
"1556splitHere46","17554192splitHere46","DatagramSockets"
"1557splitHere46","17554195splitHere46","public String trimOnlyLeadingSpace()<newline46mondego>  {<newline46mondego>    int i = this.count;<newline46mondego>    int j = 0;<newline46mondego>    int k = this.offset;<newline46mondego>    char[] arrayOfChar = this.value;<newline46mondego>    while ((j < i) && (arrayOfChar[(k + j)] <= ' '))<newline46mondego>      ++j;<newline46mondego>    return (((j > 0) || (i < this.count)) ? substring(j, i) : this);<newline46mondego>  }<newline46mondego>"
"1558splitHere46","17554204splitHere46","rand"
"1559splitHere46","17554204splitHere46","rand"
"1560splitHere46","17554204splitHere46","rand"
"1561splitHere46","17554204splitHere46","return left+(int)(Math.random()*(double)(right-left));"
"1562splitHere46","17554204splitHere46","return left+(int)(Math.random()*(double)(right-left + 1));"
"1563splitHere46","17554244splitHere46","/bin"
"1564splitHere46","17554244splitHere46","PATH"
"1565splitHere46","17554244splitHere46","Java Build Path"
"1566splitHere46","17554244splitHere46","Libraries"
"1567splitHere46","17554244splitHere46","Native library location"
"1568splitHere46","17554406splitHere46","$ wget <doubleQuotes46>Link Address should be pasted here<doubleQuotes46><newline46mondego>"
"1569splitHere46","17554406splitHere46","$ tar -zxvf index.html<newline46mondego>"
"1570splitHere46","17554576splitHere46","ClassLoader"
"1571splitHere46","17554576splitHere46","Class"
"1572splitHere46","17554657splitHere46","if (Ratsuk.getNewtablero().getMesa(i,j).getBackground()==Color.lightGray);<newline46mondego>"
"1573splitHere46","17554657splitHere46","Ratsuk.getNewtablero().getMesa(i,j).setEnabled(false);<newline46mondego>"
"1574splitHere46","17554709splitHere46","String sampleString = String.format(<doubleQuotes46>1223,4455,6667%n1223,4455,6667%n<doubleQuotes46>)<newline46mondego>"
"1575splitHere46","17555091splitHere46","@Override<newline46mondego>    public String toString() {<newline46mondego>        StringBuilder phoneBook = new StringBuilder();  <newline46mondego>        //Generate comma separated entries of phone book  <newline46mondego>        for (int i = 0; i < phoneNumbers.length && i < phoneTypes.length; i++ ) {<newline46mondego>            if (i > 0) { <newline46mondego>                phoneBook.append(','); <newline46mondego>            }<newline46mondego>            phoneBook = phoneBook.append(phoneNumbers[i])<newline46mondego>                                 .append(':')<newline46mondego>                                 .append(phoneTypes[i])<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return phoneBook.toString();  <newline46mondego>    }<newline46mondego>"
"1576splitHere46","17555195splitHere46","API 16"
"1577splitHere46","17555195splitHere46","Android 4.1"
"1578splitHere46","17555195splitHere46","OpenGL ES 2.0"
"1579splitHere46","17555230splitHere46","Board"
"1580splitHere46","17555272splitHere46","InputStream"
"1581splitHere46","17555272splitHere46","available()"
"1582splitHere46","17555272splitHere46","0"
"1583splitHere46","17555272splitHere46","readObject()"
"1584splitHere46","17555272splitHere46","Scanner.hasNext()"
"1585splitHere46","17555299splitHere46","Iterator"
"1586splitHere46","17555299splitHere46","Iterator"
"1587splitHere46","17555299splitHere46","ConcurrentModificationException"
"1588splitHere46","17555299splitHere46","Iterator"
"1589splitHere46","17555299splitHere46","Iterator"
"1590splitHere46","17555299splitHere46","for(Iterator<Object> itr = list.iterator(); itr.hasNext())<newline46mondego>{<newline46mondego>    Object o = itr.next():<newline46mondego>    if (decideToRemove)<newline46mondego>        itr.remove();<newline46mondego>}<newline46mondego>"
"1591splitHere46","17555299splitHere46","Iterator"
"1592splitHere46","17555299splitHere46","remove"
"1593splitHere46","17555299splitHere46","ConcurrentModificationException"
"1594splitHere46","17555377splitHere46","//this checks for null objects<newline46mondego>public static boolean isEmpty(Object o) {<newline46mondego>  return o == null;<newline46mondego>}<newline46mondego>"
"1595splitHere46","17555377splitHere46","public static boolean isEmpty(Object o) {<newline46mondego>    if (o == null) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    else if (o instanceof Object[]) {<newline46mondego>        return ((Object[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof boolean[]) {<newline46mondego>        return ((boolean[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof byte[]) {<newline46mondego>        return ((byte[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof short[]) {<newline46mondego>        return ((short[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof char[]) {<newline46mondego>        return ((char[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof int[]) {<newline46mondego>        return ((int[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof long[]) {<newline46mondego>        return ((long[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof float[]) {<newline46mondego>        return ((float[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof double[]) {<newline46mondego>        return ((double[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof CharSequence) {<newline46mondego>        return ((CharSequence) o).length() <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof Collection) {<newline46mondego>        return ((Collection) o).isEmpty();<newline46mondego>    }<newline46mondego>    else if (o instanceof Map) {<newline46mondego>        return ((Map) o).isEmpty();<newline46mondego>    }<newline46mondego>    else if (o instanceof Enumeration) {<newline46mondego>        return !((Enumeration) o).hasMoreElements();<newline46mondego>    }<newline46mondego>    else if (o instanceof Dictionary) {<newline46mondego>        return ((Dictionary) o).isEmpty();<newline46mondego>    }<newline46mondego>    else if (o instanceof Iterable) {<newline46mondego>        // NOTE: may not be efficient because an iterator is created<newline46mondego>        return !((Iterable) o).iterator().hasNext();<newline46mondego>    }<newline46mondego><newline46mondego>  return false;<newline46mondego>}<newline46mondego>"
"1596splitHere46","17555377splitHere46","public static boolean isEmpty(final Object o) {<newline46mondego>    if (o == null) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    else if (o instanceof Object[]) {<newline46mondego>        return ((Object[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof boolean[]) {<newline46mondego>        return ((boolean[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof byte[]) {<newline46mondego>        return ((byte[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof short[]) {<newline46mondego>        return ((short[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof char[]) {<newline46mondego>        return ((char[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof int[]) {<newline46mondego>        return ((int[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof long[]) {<newline46mondego>        return ((long[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof float[]) {<newline46mondego>        return ((float[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof double[]) {<newline46mondego>        return ((double[]) o).length <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof CharSequence) {<newline46mondego>        return ((CharSequence) o).length() <= 0;<newline46mondego>    }<newline46mondego>    else if (o instanceof Collection) {<newline46mondego>        return ((Collection) o).isEmpty();<newline46mondego>    }<newline46mondego>    else if (o instanceof Map) {<newline46mondego>        return ((Map) o).isEmpty();<newline46mondego>    }<newline46mondego>    else if (o instanceof Enumeration) {<newline46mondego>        return !((Enumeration) o).hasMoreElements();<newline46mondego>    }<newline46mondego>    else if (o instanceof Dictionary) {<newline46mondego>        return ((Dictionary) o).isEmpty();<newline46mondego>    }<newline46mondego>    else if (o instanceof Iterable) {<newline46mondego>        // NOTE: may not be efficient because an iterator is created<newline46mondego>        return !((Iterable) o).iterator().hasNext();<newline46mondego>    }<newline46mondego><newline46mondego>    // reflection code<newline46mondego><newline46mondego>    final Number length = retrieveNumberFromMethod(o, <doubleQuotes46>length<doubleQuotes46>);<newline46mondego>    if (length != null) {<newline46mondego>        return length.shortValue() <= 0;<newline46mondego>    }<newline46mondego><newline46mondego>    final Number size = retrieveNumberFromMethod(o, <doubleQuotes46>size<doubleQuotes46>);<newline46mondego>    if (size != null) {<newline46mondego>        return size.shortValue() <= 0;<newline46mondego>    }<newline46mondego><newline46mondego>    final Boolean isEmpty = retrieveBooleanFromMethod(o, <doubleQuotes46>isEmpty<doubleQuotes46>);<newline46mondego>    if (isEmpty != null) {<newline46mondego>        return isEmpty;<newline46mondego>    }<newline46mondego><newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>static Number retrieveNumberFromMethod(final Object o, final String methodName) {<newline46mondego>    try {<newline46mondego>        final Number number = (Number) o.getClass().getMethod(methodName).invoke(o);<newline46mondego>        return number;<newline46mondego>    }<newline46mondego>    catch (final IllegalArgumentException e) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unable to retrieve number from <doubleQuotes46> + methodName + <doubleQuotes46> on <doubleQuotes46> + o, e);<newline46mondego>    }<newline46mondego>    catch (final SecurityException e) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unable to retrieve number from <doubleQuotes46> + methodName + <doubleQuotes46> on <doubleQuotes46> + o, e);<newline46mondego>    }<newline46mondego>    catch (final InvocationTargetException e) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unable to retrieve number from <doubleQuotes46> + methodName + <doubleQuotes46> on <doubleQuotes46> + o, e);<newline46mondego>    }<newline46mondego>    catch (final IllegalAccessException e) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    catch (final NoSuchMethodException e) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>static Boolean retrieveBooleanFromMethod(final Object o, final String methodName) {<newline46mondego>    try {<newline46mondego>        final Boolean bool = (Boolean) o.getClass().getMethod(methodName).invoke(o);<newline46mondego>        return bool;<newline46mondego>    }<newline46mondego>    catch (final IllegalArgumentException e) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unable to retrieve boolean from <doubleQuotes46> + methodName + <doubleQuotes46> on <doubleQuotes46> + o, e);<newline46mondego>    }<newline46mondego>    catch (final SecurityException e) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unable to retrieve boolean from <doubleQuotes46> + methodName + <doubleQuotes46> on <doubleQuotes46> + o, e);<newline46mondego>    }<newline46mondego>    catch (final InvocationTargetException e) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unable to retrieve boolean from <doubleQuotes46> + methodName + <doubleQuotes46> on <doubleQuotes46> + o, e);<newline46mondego>    }<newline46mondego>    catch (final IllegalAccessException e) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    catch (final NoSuchMethodException e) {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1597splitHere46","17555511splitHere46","<MyObject><newline46mondego>    <Name>Primus Secundus</Name><newline46mondego>    <MyNewProperty>Addita notitia</MyNewProperty><newline46mondego></MyObject> <newline46mondego>"
"1598splitHere46","17555511splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><wrapper xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:noNamespaceSchemaLocation=<doubleQuotes46>#mySchema<doubleQuotes46>><newline46mondego>    <xs:schema id=<doubleQuotes46>mySchema<doubleQuotes46> xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46>><newline46mondego>        <xs:element name=<doubleQuotes46>wrapper<doubleQuotes46>><newline46mondego>            <xs:complexType><newline46mondego>                <xs:sequence><newline46mondego>                    <xs:any/><newline46mondego>                    <xs:element name=<doubleQuotes46>MyObject<doubleQuotes46> type=<doubleQuotes46>MyObject<doubleQuotes46>/><newline46mondego>                </xs:sequence><newline46mondego>            </xs:complexType><newline46mondego>        </xs:element><newline46mondego>        <!-- BEFORE --><newline46mondego>        <xs:complexType name=<doubleQuotes46>MyObject<doubleQuotes46>><newline46mondego>            <xs:sequence><newline46mondego>                <xs:element minOccurs=<doubleQuotes46>0<doubleQuotes46> name=<doubleQuotes46>Name<doubleQuotes46> nillable=<doubleQuotes46>true<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46>/><newline46mondego>            </xs:sequence><newline46mondego>        </xs:complexType><newline46mondego>    </xs:schema><newline46mondego>    <MyObject><newline46mondego>        <Name>Primus Secundus</Name><newline46mondego>        <MyNewProperty>Addita notitia</MyNewProperty><newline46mondego>    </MyObject> <newline46mondego></wrapper><newline46mondego>"
"1599splitHere46","17555580splitHere46","MessageDigest"
"1600splitHere46","17555580splitHere46","getInstance()"
"1601splitHere46","17555580splitHere46","ThreadLocal"
"1602splitHere46","17555580splitHere46","MessageDigest"
"1603splitHere46","17555608splitHere46","Parser"
"1604splitHere46","17555608splitHere46","data"
"1605splitHere46","17555608splitHere46","data"
"1606splitHere46","17555608splitHere46","first"
"1607splitHere46","17555608splitHere46","<Parser id=<doubleQuotes46>ADPParser2<doubleQuotes46>><newline46mondego>    <data type=<doubleQuotes46>Sales<doubleQuotes46>><newline46mondego>        <first record=<doubleQuotes46>DEAL-NO<doubleQuotes46> /><newline46mondego>    </data><newline46mondego>    <data type=<doubleQuotes46>Service<doubleQuotes46>><newline46mondego>        <first record=<doubleQuotes46>RO<doubleQuotes46> /><newline46mondego>    </data><newline46mondego>    <data type=<doubleQuotes46>Email<doubleQuotes46>><newline46mondego>        <first record=<doubleQuotes46>CONTROL<doubleQuotes46> /><newline46mondego>    </data><newline46mondego></Parser><newline46mondego>"
"1608splitHere46","17555608splitHere46","data"
"1609splitHere46","17555608splitHere46","first"
"1610splitHere46","17555608splitHere46","Parser"
"1611splitHere46","17555608splitHere46","<Parser id=<doubleQuotes46>ADPParser2<doubleQuotes46>><newline46mondego>    <data type=<doubleQuotes46>Sales<doubleQuotes46> /><newline46mondego>    <first record=<doubleQuotes46>DEAL-NO<doubleQuotes46> /><newline46mondego>    <data type=<doubleQuotes46>Service<doubleQuotes46> /><newline46mondego>    <first record=<doubleQuotes46>RO<doubleQuotes46> /><newline46mondego>    <data type=<doubleQuotes46>Email<doubleQuotes46> /><newline46mondego>    <first record=<doubleQuotes46>CONTROL<doubleQuotes46> /><newline46mondego></Parser><newline46mondego>"
"1612splitHere46","17555630splitHere46","if(e.getSource()==search){<newline46mondego>                    SearchScreen s= new SearchScreen();<newline46mondego><newline46mondego>                }<newline46mondego>"
"1613splitHere46","17555630splitHere46","MainScreen"
"1614splitHere46","17555666splitHere46","container.validate()"
"1615splitHere46","17555666splitHere46","repaint()"
"1616splitHere46","17555666splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Container;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Rectangle;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class Foo {<newline46mondego>    private JFrame frame;<newline46mondego>    private JPanel[][] opponentBoard;<newline46mondego>    private JLabel[] coordLabels;<newline46mondego>    private final int FRAME_HEIGHT = 800;<newline46mondego>    private final int FRAME_WIDTH = 600;<newline46mondego>    private final int SQ_SIZE = 30;<newline46mondego>    public Foo() {<newline46mondego>        frame = new JFrame();<newline46mondego>        frame.setBounds(new Rectangle(FRAME_WIDTH, FRAME_HEIGHT));<newline46mondego>        //frame.setVisible(true); Build the UI before making it visible<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setBackground(Color.RED); // for debugging porpoises<newline46mondego>        frame.setLayout(null);<newline46mondego><newline46mondego>        Container container = frame.getContentPane();<newline46mondego>        container.setBackground(Color.BLACK);<newline46mondego>        container.setVisible(true);<newline46mondego><newline46mondego>        opponentBoard = new JPanel[15][11];<newline46mondego><newline46mondego>        coordLabels = new JLabel[24];<newline46mondego><newline46mondego>        for (int i = 0; i < 15; i++) {<newline46mondego>            for (int j = 0; j < 11; j++) {<newline46mondego>                opponentBoard[i][j] = new JPanel();<newline46mondego>                container.add(opponentBoard[i][j]);<newline46mondego>                opponentBoard[i][j].setLocation(i + i * SQ_SIZE, j + j * SQ_SIZE);<newline46mondego>                opponentBoard[i][j].setSize(new Dimension(SQ_SIZE, SQ_SIZE));<newline46mondego>                opponentBoard[i][j].setVisible(true);<newline46mondego>                if ((i == 0) ^ (j == 0)) {<newline46mondego>                    opponentBoard[i][j].setBackground(Color.GRAY);<newline46mondego>                    if (i == 0) {<newline46mondego>                        coordLabels[j - 1] = new JLabel((char) (j + 64) + <doubleQuotes46><doubleQuotes46>);<newline46mondego>                        opponentBoard[i][j].add(coordLabels[j - 1]);<newline46mondego>                        System.out.println(j-1);<newline46mondego>                    }<newline46mondego>                    if (j == 0) {<newline46mondego>                        coordLabels[i + 9] = new JLabel(i + <doubleQuotes46><doubleQuotes46>);<newline46mondego>                        System.out.println(i + 9 + <doubleQuotes46>    <doubleQuotes46> + i + <doubleQuotes46> <doubleQuotes46> + coordLabels[i + 9].getText());<newline46mondego>                        opponentBoard[i][j].add(coordLabels[i + 9]);<newline46mondego>                    }<newline46mondego>                    //opponentBoard[i][j].repaint();<newline46mondego>                } else {<newline46mondego>                    opponentBoard[i][j].setBackground(Color.DARK_GRAY);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        opponentBoard[0][0].setBackground(Color.BLACK);<newline46mondego><newline46mondego>        // If the UI is already visible call validate<newline46mondego>        // I've chose to not make the frame visible until all of the children<newline46mondego>        // have been added so the call to validate isn't really needed.<newline46mondego>        //container.validate();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        new Foo();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1617splitHere46","17555862splitHere46","else {<newline46mondego>    System.out.println(<doubleQuotes46>Value expected.<doubleQuotes46>);<newline46mondego>    if (kb.hasNextDouble()){<newline46mondego>         a = kb.nextDouble();<newline46mondego>    }else {<newline46mondego>         System.out.println(<doubleQuotes46>Value expected.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"1618splitHere46","17555891splitHere46","MySpinnerAdapter"
"1619splitHere46","17555891splitHere46","@Override<newline46mondego>public View getDropDownView(int position, View convertView, ViewGroup parent)<newline46mondego>{<newline46mondego>    View view = super.getDropDownView(position, convertView, parent);<newline46mondego>    TextView textView = (TextView) view.findViewById(android.R.id.text1);<newline46mondego>    textView.setTextSize(TypedValue.COMPLEX_UNIT_PX, maxTextSize);<newline46mondego>    textView.setPadding(paddingLeft + paddingLeftExtra, paddingTop + paddingTopExtra, paddingLeft + paddingLeftExtra, paddingTop + paddingTopExtra);<newline46mondego>    return view;<newline46mondego>}<newline46mondego>"
"1620splitHere46","17555891splitHere46","simple_spinner_item"
"1621splitHere46","17555891splitHere46","simple_list_item_1"
"1622splitHere46","17555891splitHere46","simple_spinner_item"
"1623splitHere46","17556220splitHere46","@Table(appliesTo=<doubleQuotes46>tableName<doubleQuotes46>, <newline46mondego>       indexes = {@Index(name=<doubleQuotes46>index1<doubleQuotes46>, columnNames={<doubleQuotes46>the_discriminator_column<doubleQuotes46>})})<newline46mondego>"
"1624splitHere46","17556589splitHere46","<cain:optionsCollection"
"1625splitHere46","17556589splitHere46","<html:optionsCollection"
"1626splitHere46","17556589splitHere46","property"
"1627splitHere46","17556589splitHere46","label"
"1628splitHere46","17556589splitHere46","value"
"1629splitHere46","17556589splitHere46","label"
"1630splitHere46","17556589splitHere46","value"
"1631splitHere46","17556589splitHere46","List<MyBean>"
"1632splitHere46","17556589splitHere46","public class MyBean implements Serializable {<newline46mondego>  private String key;<newline46mondego>  private String name;<newline46mondego>  //getters and setters for both<newline46mondego><newline46mondego>}   <newline46mondego>"
"1633splitHere46","17556589splitHere46","<html:select name=<doubleQuotes46>querySwiftLogForm<doubleQuotes46> property=<doubleQuotes46>branch<doubleQuotes46> ><newline46mondego>    <html:optionsCollection name=<doubleQuotes46>querySwiftLogForm<doubleQuotes46>  property=<doubleQuotes46>branchList<doubleQuotes46> label=<doubleQuotes46>name<doubleQuotes46> value=<doubleQuotes46>key<doubleQuotes46>/> <newline46mondego></html:select><newline46mondego>"
"1634splitHere46","17556589splitHere46","LabelValueBean"
"1635splitHere46","17556589splitHere46","lable"
"1636splitHere46","17556589splitHere46","value"
"1637splitHere46","17556589splitHere46","name"
"1638splitHere46","17556616splitHere46","SSLSocketFactory"
"1639splitHere46","17556616splitHere46","SSLContext.getSocketFactory()"
"1640splitHere46","17556616splitHere46","SSLSocketFactory"
"1641splitHere46","17556616splitHere46","SSLContext"
"1642splitHere46","17556616splitHere46","createSocket()"
"1643splitHere46","17556821splitHere46","public class Animal {<newline46mondego><newline46mondego>   private Shoutable shoutable;  <newline46mondego>   private String name;<newline46mondego><newline46mondego>    public Animal(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void shout() {<newline46mondego>        shoutable.shout();<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setShout(Shoutable shoutable){<newline46mondego>       this.shoutable=shoutable;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public interface Shoutable{<newline46mondego>  void shout();<newline46mondego>}<newline46mondego><newline46mondego>public class DogShout implements Shoutable{<newline46mondego>  @Override<newline46mondego>  public void shout{<newline46mondego>   System.out.println(<doubleQuotes46>woff gua guaa gua woff<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1644splitHere46","17556872splitHere46","someInstance.Allocated()"
"1645splitHere46","17556872splitHere46","someInstance"
"1646splitHere46","17556872splitHere46","final"
"1647splitHere46","17556872splitHere46","private"
"1648splitHere46","17556872splitHere46","final"
"1649splitHere46","17556925splitHere46","Participant"
"1650splitHere46","17556925splitHere46","protected static Object lock = new Object();<newline46mondego>"
"1651splitHere46","17556925splitHere46","MyGunner"
"1652splitHere46","17556925splitHere46","wait"
"1653splitHere46","17556925splitHere46","notifyAll"
"1654splitHere46","17556925splitHere46","synchronized (lock) {<newline46mondego>    System.out.println(Thread.currentThread().getName()<newline46mondego>            + <doubleQuotes46> is waiting<doubleQuotes46>);<newline46mondego>    lock.wait();<newline46mondego>}<newline46mondego>"
"1655splitHere46","17556925splitHere46","synchronized (lock) {<newline46mondego>    signal = true;<newline46mondego>    System.out.println(Thread.currentThread().getName()<newline46mondego>            + <doubleQuotes46> is notifying all<doubleQuotes46>);<newline46mondego>    lock.notifyAll();<newline46mondego>}<newline46mondego>"
"1656splitHere46","17556925splitHere46","signal"
"1657splitHere46","17556925splitHere46","volatile"
"1658splitHere46","17556925splitHere46","Boolean"
"1659splitHere46","17556925splitHere46","signal = true"
"1660splitHere46","17556925splitHere46","signal"
"1661splitHere46","17556925splitHere46","Boolean.FALSE"
"1662splitHere46","17556925splitHere46","Boolean.TRUE"
"1663splitHere46","17556925splitHere46","MyGunner"
"1664splitHere46","17556925splitHere46","Participant"
"1665splitHere46","17556925splitHere46","notifyAll"
"1666splitHere46","17556946splitHere46","{ <doubleQuotes46>date<doubleQuotes46> : <doubleQuotes46>20100223<doubleQuotes46>, <doubleQuotes46>symbol<doubleQuotes46> : { $in : [ <doubleQuotes46>appl<doubleQuotes46>, <doubleQuotes46>goog<doubleQuotes46> ] } }<newline46mondego>"
"1667splitHere46","17556946splitHere46","BasicDBObjectBuilder"
"1668splitHere46","17556946splitHere46","DBObject query = BasicDBObjectBuilder.start()<newline46mondego>    .add(<doubleQuotes46>date<doubleQuotes46>, date)<newline46mondego>    .push(<doubleQuotes46>symbol<doubleQuotes46>)<newline46mondego>        .add(<doubleQuotes46>$in<doubleQuotes46>, symbolSet)<newline46mondego>    .get();<newline46mondego>"
"1669splitHere46","17557142splitHere46","myPanel()"
"1670splitHere46","17557142splitHere46","myPanel()"
"1671splitHere46","17557142splitHere46","revalidate()"
"1672splitHere46","17557142splitHere46","repaint()"
"1673splitHere46","17557233splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>"
"1674splitHere46","17557233splitHere46","Calendar"
"1675splitHere46","17557373splitHere46","lockObject.wait()"
"1676splitHere46","17557373splitHere46","lockObject.notify()"
"1677splitHere46","17557373splitHere46","static Object lockObject=new Object()"
"1678splitHere46","17557517splitHere46","JsonNode"
"1679splitHere46","17557517splitHere46","appName"
"1680splitHere46","17557517splitHere46","data(x)"
"1681splitHere46","17557517splitHere46","iteNode"
"1682splitHere46","17557517splitHere46","data(x)"
"1683splitHere46","17557517splitHere46","public static List<String> jsonSplit(String o) throws JsonParseException, JsonMappingException, IOException {<newline46mondego>    List<String> list = new ArrayList<String>();<newline46mondego>    ObjectMapper mapper = new ObjectMapper();<newline46mondego>    DefaultPrettyPrinter printer = new DefaultPrettyPrinter();<newline46mondego>    printer.indentArraysWith(new Lf2SpacesIndenter());<newline46mondego><newline46mondego>    JsonNode rootNode = mapper.readValue(o, JsonNode.class); <newline46mondego>    Iterator<String> appName = rootNode.get(<doubleQuotes46>data<doubleQuotes46>).getFieldNames();<newline46mondego>    Iterator<JsonNode> iteNode = rootNode.get(<doubleQuotes46>data<doubleQuotes46>).getElements();<newline46mondego><newline46mondego>    while (iteNode.hasNext()){<newline46mondego>        list.add(appName.next());<newline46mondego>        list.add(mapper.writer(printer).writeValueAsString(iteNode.next()));<newline46mondego>    }<newline46mondego><newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"1684splitHere46","17557551splitHere46","while (urls.hasMoreTokens()) {<newline46mondego>    try {<newline46mondego>       word.set(urls.nextToken());<newline46mondego>       String currenturl = word.toString();<newline46mondego>       System.out.println(currenturl);<newline46mondego>       pile.getQueue().add(currenturl);<newline46mondego>"
"1685splitHere46","17557551splitHere46","getQueue()"
"1686splitHere46","17557551splitHere46","notify()"
"1687splitHere46","17557551splitHere46","notifyAll()"
"1688splitHere46","17557551splitHere46","public synchronized void addUrl(String url) {<newline46mondego>    queue.add(url);<newline46mondego>    notifyAll();<newline46mondego>}<newline46mondego>"
"1689splitHere46","17557610splitHere46","Iterator"
"1690splitHere46","17557610splitHere46","next()"
"1691splitHere46","17557610splitHere46","Object"
"1692splitHere46","17557610splitHere46","get"
"1693splitHere46","17557610splitHere46","Object"
"1694splitHere46","17557610splitHere46","Iterator"
"1695splitHere46","17557610splitHere46","Iterator"
"1696splitHere46","17557610splitHere46","Iterator<ArrayList<String>> it = tableRows.keySet().iterator();<newline46mondego>"
"1697splitHere46","17557610splitHere46","it.next()"
"1698splitHere46","17557610splitHere46","ArrayList<String>"
"1699splitHere46","17557610splitHere46","get"
"1700splitHere46","17557798splitHere46","free"
"1701splitHere46","17557798splitHere46","ListAdapters"
"1702splitHere46","17557872splitHere46","remove"
"1703splitHere46","17557924splitHere46","HtmlEmail email = new HtmlEmail();<newline46mondego>    //email.setDebug(debugMode);<newline46mondego>    email.setBounceAddress(<doubleQuotes46>bouce@domain.biz<doubleQuotes46>);<newline46mondego>    email.setHostName(<doubleQuotes46>mySMTPHost<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>    email.setFrom(<doubleQuotes46>myAddress@mydomain.com<doubleQuotes46>);<newline46mondego>    email.addTo(emailAddress);<newline46mondego>    email.addBcc(<doubleQuotes46>bccAddres<doubleQuotes46>);<newline46mondego><newline46mondego>    email.setSubject(<doubleQuotes46>Your Subject<doubleQuotes46>);<newline46mondego>    email.setAuthentication(<doubleQuotes46>recipient@snailmail.org<doubleQuotes46>, <doubleQuotes46>password<doubleQuotes46>);<newline46mondego>    email.setSSL(true);<newline46mondego>    email.setSmtpPort(465);<newline46mondego>    email.setHtmlMsg(html);<newline46mondego><newline46mondego>public static void sendMail(org.apache.commons.mail.HtmlEmail email)<newline46mondego>{       <newline46mondego>    email.send();<newline46mondego>}<newline46mondego>"
"1704splitHere46","17558010splitHere46","try {<newline46mondego>    inputStorage = input.nextInt();<newline46mondego>} catch (InputMismatchException e){<newline46mondego>    System.out.println(<doubleQuotes46>invalid type<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1705splitHere46","17558010splitHere46","if(input.hasNextInt()){<newline46mondego>     inputStorage = input.nextInt();<newline46mondego> }else{<newline46mondego>      System.out.println(<doubleQuotes46>invalid type<doubleQuotes46>);<newline46mondego> }<newline46mondego>"
"1706splitHere46","17558010splitHere46","int inputStorage;<newline46mondego>boolean notGuessed = true;<newline46mondego>while(notGuessed)<newline46mondego>{<newline46mondego>    if(input.hasNextInt()){<newline46mondego>         inputStorage = input.nextInt();<newline46mondego>     } else{<newline46mondego>         System.out.println(<doubleQuotes46>invalid type<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    if (inputStorage == number) {<newline46mondego>        System.out.println(<doubleQuotes46>You've guessed the right number!<doubleQuotes46>);<newline46mondego>        notGuessed = false;<newline46mondego>    }<newline46mondego>    else if (inputStorage != number) {<newline46mondego>        System.out.println(<doubleQuotes46>Wrong number, try again!<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego> }<newline46mondego>"
"1707splitHere46","17558040splitHere46","valueINeed"
"1708splitHere46","17558040splitHere46","Spinner"
"1709splitHere46","17558040splitHere46","valueINeed"
"1710splitHere46","17558040splitHere46","onItemSelected"
"1711splitHere46","17558040splitHere46","onItemSelected"
"1712splitHere46","17558040splitHere46","subGoalSpinner.setOnItemSelectedListener(new OnItemSelectedListener() <newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2, long arg3) <newline46mondego>    {<newline46mondego>        valueINeed = subGoalSpinner.getSelectedItemPosition();<newline46mondego>        updateView(valueINeed);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1713splitHere46","17558040splitHere46","updateView"
"1714splitHere46","17558040splitHere46","valueINeed"
"1715splitHere46","17558040splitHere46","TextView"
"1716splitHere46","17558095splitHere46","MatrixIndex implements Comparable<MatrixIndex><newline46mondego>{<newline46mondego>  private final int _x;<newline46mondego>  private final int _y;<newline46mondego><newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"1717splitHere46","17558095splitHere46","TreeMap<MatrixIndex,Double><newline46mondego>"
"1718splitHere46","17558133splitHere46","reset"
"1719splitHere46","17558133splitHere46","reset"
"1720splitHere46","17558133splitHere46","writeObject"
"1721splitHere46","17558241splitHere46","public class MyClass() {<newline46mondego>      private MyClass classy;<newline46mondego>}<newline46mondego>"
"1722splitHere46","17558241splitHere46","public class MyClass() {<newline46mondego>      private MyClass classy = new MyClass();<newline46mondego>}<newline46mondego>"
"1723splitHere46","17558241splitHere46","java.lang.StackOverflowError"
"1724splitHere46","17558241splitHere46","MyClass"
"1725splitHere46","17558447splitHere46","wget"
"1726splitHere46","17558447splitHere46","curl"
"1727splitHere46","17558458splitHere46","JMapFrame.showMap(map)<newline46mondego>"
"1728splitHere46","17558458splitHere46","org.geotools.map.MapContext"
"1729splitHere46","17558458splitHere46","MapContent map = new MapContent();<newline46mondego>"
"1730splitHere46","17558458splitHere46","MapContext map = new MapContext();<newline46mondego>"
"1731splitHere46","17558479splitHere46","Elements"
"1732splitHere46","17558479splitHere46","Pointer"
"1733splitHere46","17558479splitHere46","Pointer.getPointerArray(0)"
"1734splitHere46","17558479splitHere46","Structure"
"1735splitHere46","17558479splitHere46","Pointer"
"1736splitHere46","17558479splitHere46","Structure.read()"
"1737splitHere46","17558479splitHere46","Structure"
"1738splitHere46","17558479splitHere46","Structure"
"1739splitHere46","17558479splitHere46","Data.getElements()"
"1740splitHere46","17558479splitHere46","class PointerArray extends Memory {                      <newline46mondego>        private final Pointer[] original;                                                           <newline46mondego>        public PointerArray(Pointer[] arg) {                                                        <newline46mondego>            super(Pointer.SIZE * (arg.length+1));                                                   <newline46mondego>            this.original = arg;                                                                    <newline46mondego>            for (int i=0;i < arg.length;i++) {                                                      <newline46mondego>                setPointer(i*Pointer.SIZE, arg[i]);                                                 <newline46mondego>            }                                                                                       <newline46mondego>            setPointer(Pointer.SIZE*arg.length, null);                                              <newline46mondego>        }                                                                                           <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1741splitHere46","17558479splitHere46","Structure.write()"
"1742splitHere46","17558479splitHere46","PointerArray"
"1743splitHere46","17558479splitHere46","Pointer"
"1744splitHere46","17558479splitHere46","Structure"
"1745splitHere46","17558589splitHere46","153        // this hidden field will be checked in the decode method to<newline46mondego>154        // determine if this form has been submitted.         <newline46mondego>155        writer.startElement(<doubleQuotes46>input<doubleQuotes46>, component);<newline46mondego>156        writer.writeAttribute(<doubleQuotes46>type<doubleQuotes46>, <doubleQuotes46>hidden<doubleQuotes46>, <doubleQuotes46>type<doubleQuotes46>);<newline46mondego>157        writer.writeAttribute(<doubleQuotes46>name<doubleQuotes46>, clientId,<newline46mondego>158                              <doubleQuotes46>clientId<doubleQuotes46>);<newline46mondego>159        writer.writeAttribute(<doubleQuotes46>value<doubleQuotes46>, clientId, <doubleQuotes46>value<doubleQuotes46>);<newline46mondego>160        writer.endElement(<doubleQuotes46>input<doubleQuotes46>);<newline46mondego>161        writer.write('\n');<newline46mondego>"
"1746splitHere46","17558589splitHere46","FormRenderer#decode()"
"1747splitHere46","17558589splitHere46","96         // Was our form the one that was submitted?  If so, we need to set<newline46mondego>97         // the indicator accordingly..<newline46mondego>98         Map<String, String> requestParameterMap = context.getExternalContext()<newline46mondego>99               .getRequestParameterMap();<newline46mondego>100        if (requestParameterMap.containsKey(clientId)) {<newline46mondego>101            if (logger.isLoggable(Level.FINE)) {<newline46mondego>102                logger.log(Level.FINE,<newline46mondego>103                           <doubleQuotes46>UIForm with client ID {0}, submitted<doubleQuotes46>,<newline46mondego>104                           clientId);<newline46mondego>105            }<newline46mondego>106            ((UIForm) component).setSubmitted(true);<newline46mondego>107        } else {<newline46mondego>108            ((UIForm) component).setSubmitted(false);<newline46mondego>109        }<newline46mondego>"
"1748splitHere46","17558589splitHere46","UIForm#isSubmitted()"
"1749splitHere46","17558589splitHere46","<h:form>"
"1750splitHere46","17558589splitHere46","UIForm"
"1751splitHere46","17558589splitHere46","<h:form id=<doubleQuotes46>formId<doubleQuotes46>><newline46mondego>"
"1752splitHere46","17558589splitHere46","enctype"
"1753splitHere46","17558589splitHere46","<h:form enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>"
"1754splitHere46","17558589splitHere46","multipart/form-data"
"1755splitHere46","17558589splitHere46","HttpServletRequest#getPart()"
"1756splitHere46","17558700splitHere46","onPostExecute"
"1757splitHere46","17558700splitHere46","Task"
"1758splitHere46","17558700splitHere46","final"
"1759splitHere46","17558786splitHere46","PriorityQueue"
"1760splitHere46","17558942splitHere46","//This is type safe, but I still get an unchecked cast warning<newline46mondego>t = (Class<T>) Class.forName(className).asSubclass(Enum.class).asSubclass(Runnable.class);<newline46mondego>"
"1761splitHere46","17558942splitHere46","Runnable"
"1762splitHere46","17558942splitHere46","Enum"
"1763splitHere46","17558942splitHere46","T"
"1764splitHere46","17558942splitHere46","T1"
"1765splitHere46","17558942splitHere46","T2"
"1766splitHere46","17558942splitHere46","package foo;<newline46mondego>public enum T1 implements Runnable {<newline46mondego>    ;<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>package foo;<newline46mondego>public enum T2 implements Runnable {<newline46mondego>    ;<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1767splitHere46","17558942splitHere46","Example<T1> example = new Example<T1>(<doubleQuotes46>foo.T2<doubleQuotes46>);<newline46mondego>Class<T1> t1Clazz = example.t; //uh oh...<newline46mondego>"
"1768splitHere46","17558942splitHere46","Class<T>"
"1769splitHere46","17558942splitHere46","T"
"1770splitHere46","17558942splitHere46","Class<? extends Runnable> runnableClass;<newline46mondego>Class<? extends Enum> enumClass;<newline46mondego><newline46mondego>Example(String className) throws ClassNotFoundException, IllegalAccessException, InstantiationException {<newline46mondego>    Class<?> clazz = Class.forName(className);<newline46mondego>    runnableClass = clazz.asSubclass(Runnable.class);<newline46mondego>    enumClass = clazz.asSubclass(Enum.class);<newline46mondego>}<newline46mondego>"
"1771splitHere46","17558942splitHere46","enum"
"1772splitHere46","17558942splitHere46","Runnable"
"1773splitHere46","17558942splitHere46","Runnable"
"1774splitHere46","17558942splitHere46","Enum"
"1775splitHere46","17559173splitHere46","setContentView(R.layout.activity_main)"
"1776splitHere46","17559173splitHere46","setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>TextView numerator = (TextView) findViewById(R.id.firstBox);<newline46mondego>TextView fractionBar = (TextView) findViewById(R.id.secondBox);<newline46mondego>TextView denominator = (TextView) findViewById(R.id.thirdBox);<newline46mondego><newline46mondego>fractionBar.setWidth(denominator.getWidth());<newline46mondego>"
"1777splitHere46","17559173splitHere46","setContentView()"
"1778splitHere46","17559173splitHere46","onCreate()"
"1779splitHere46","17559304splitHere46","System.out.println(trackingNumber.getAttribute(<doubleQuotes46>textContent<doubleQuotes46>));<newline46mondego>"
"1780splitHere46","17559304splitHere46","getText()"
"1781splitHere46","17559304splitHere46","WebElement trackingNumber = driver.findElement(By.xpath(<doubleQuotes46>//h6[@class='tracking-number muted']<doubleQuotes46>));<newline46mondego>System.out.println(trackingNumber.getText());<newline46mondego>"
"1782splitHere46","17559479splitHere46","int daysToSubtract = ((today - day) + 7) % 7;<newline46mondego>"
"1783splitHere46","17559479splitHere46","today = 4<newline46mondego>day = 2<newline46mondego>daysToSubtract = ((4 - 2) + 7) % 7 = 2 : correct<newline46mondego><newline46mondego>today = 2<newline46mondego>day = 4<newline46mondego>daysToSubtract = ((2 - 4) + 7) % 7 = 5 : correct<newline46mondego>"
"1784splitHere46","17559491splitHere46","Progress API"
"1785splitHere46","17559491splitHere46","ProgressHandle ph = ProgressHandleFactory.createSystemHandle(<doubleQuotes46>My Task<doubleQuotes46>);<newline46mondego>ph.start(100);<newline46mondego>"
"1786splitHere46","17559519splitHere46","Properties"
"1787splitHere46","17559519splitHere46","Project Facets"
"1788splitHere46","17559519splitHere46","Dynamic Web Module"
"1789splitHere46","17559519splitHere46","3.0"
"1790splitHere46","17559519splitHere46","Maven"
"1791splitHere46","17559519splitHere46","Update Project..."
"1792splitHere46","17559587splitHere46","String wsapiVersion = <doubleQuotes46>1.43<doubleQuotes46>;<newline46mondego>"
"1793splitHere46","17559587splitHere46","public static void main(String[] args) throws URISyntaxException, IOException {<newline46mondego><newline46mondego>    // Create and configure a new instance of RallyRestApi<newline46mondego><newline46mondego>    String host = <doubleQuotes46>https://rally1.rallydev.com<doubleQuotes46>;<newline46mondego>    String username = <doubleQuotes46>user@domain.com<doubleQuotes46>;<newline46mondego>    String password = <doubleQuotes46>secret<doubleQuotes46>;<newline46mondego>    String wsapiVersion = <doubleQuotes46>v2.0<doubleQuotes46>;<newline46mondego>        String workspaceRef = <doubleQuotes46>/workspace/1111<doubleQuotes46>;<newline46mondego>    String projectRef = <doubleQuotes46>/project/2222<doubleQuotes46>; <newline46mondego>    String applicationName = <doubleQuotes46>DirectChildrenCount<doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego>        RallyRestApi restApi = new RallyRestApi(<newline46mondego>                new URI(host),<newline46mondego>                username,<newline46mondego>                password);<newline46mondego>        restApi.setWsapiVersion(wsapiVersion);<newline46mondego>        restApi.setApplicationName(applicationName);   <newline46mondego><newline46mondego><newline46mondego>        QueryRequest storyRequest = new QueryRequest(<doubleQuotes46>HierarchicalRequirement<doubleQuotes46>);<newline46mondego>        storyRequest.setFetch(new Fetch(<doubleQuotes46>Name<doubleQuotes46>,<doubleQuotes46>DirectChildrenCount<doubleQuotes46>));<newline46mondego>        storyRequest.setWorkspace(workspaceRef);<newline46mondego>        storyRequest.setQueryFilter(new QueryFilter(<doubleQuotes46>FormattedID<doubleQuotes46>, <doubleQuotes46>=<doubleQuotes46>, <doubleQuotes46>US16<doubleQuotes46>));<newline46mondego><newline46mondego>        QueryResponse storyQueryResponse = restApi.query(storyRequest);<newline46mondego>        JsonObject storyJsonObject = storyQueryResponse.getResults().get(0).getAsJsonObject();<newline46mondego>        System.out.println(storyJsonObject.get(<doubleQuotes46>Name<doubleQuotes46>) + <doubleQuotes46> DirectChildrenCount: <doubleQuotes46> + storyJsonObject.get(<doubleQuotes46>DirectChildrenCount<doubleQuotes46>));<newline46mondego>    }<newline46mondego>"
"1794splitHere46","17559647splitHere46","polynomial.replaceAll(<doubleQuotes46>([0-9a-zA-Z])[-]<doubleQuotes46>, <doubleQuotes46>$1+-<doubleQuotes46>);<newline46mondego>"
"1795splitHere46","17559647splitHere46","$1"
"1796splitHere46","17559685splitHere46","org.json"
"1797splitHere46","17559685splitHere46","JSONObject"
"1798splitHere46","17559685splitHere46","JSONObject.get(name)"
"1799splitHere46","17559685splitHere46","name"
"1800splitHere46","17559685splitHere46","Boolean, Long, Double, String, JSONArray, JSONObject<newline46mondego>"
"1801splitHere46","17559685splitHere46","instanceof"
"1802splitHere46","17559685splitHere46","JSONObject"
"1803splitHere46","17559685splitHere46","42"
"1804splitHere46","17559685splitHere46","42.0"
"1805splitHere46","17559685splitHere46","<doubleQuotes46>42<doubleQuotes46>"
"1806splitHere46","17559691splitHere46",".*"
"1807splitHere46","17559691splitHere46","(.*)"
"1808splitHere46","17559691splitHere46","matcher.group(n)"
"1809splitHere46","17559691splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>1(.*)2(.*)3<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(<doubleQuotes46>1abc2xyz3<doubleQuotes46>);<newline46mondego>m.find();<newline46mondego><newline46mondego>System.out.println(m.group(2));<newline46mondego>"
"1810splitHere46","17559691splitHere46","(.*)"
"1811splitHere46","17559691splitHere46","m.group(<b>2</b>)"
"1812splitHere46","17559691splitHere46",".*"
"1813splitHere46","17559691splitHere46","matcher.groupCount()"
"1814splitHere46","17559691splitHere46","(.*)"
"1815splitHere46","17559733splitHere46","DecimalFormat df = DecimalFormat.getInstance();<newline46mondego>// do some manipulation to the DecimalFormat object if desired<newline46mondego>jFormattedTextField = new javax.swing.JFormattedTextField(df);<newline46mondego>"
"1816splitHere46","17559798splitHere46","MapMaker"
"1817splitHere46","17559798splitHere46","CacheBuilder"
"1818splitHere46","17559798splitHere46","WeakHashMap"
"1819splitHere46","17559798splitHere46","public int size()"
"1820splitHere46","17559865splitHere46","HashMap"
"1821splitHere46","17559865splitHere46","Map<String, Object> locks = new Map<String, Object>();<newline46mondego>"
"1822splitHere46","17559865splitHere46","if(!file.exists()) <newline46mondego>{<newline46mondego>    Object lock = null;<newline46mondego>    synchronized (locks) {<newline46mondego>       lock = locks.get(file.getName());<newline46mondego>       if(lock == null) {<newline46mondego>            lock = new Object();<newline46mondego>            locks.put(file.getName(), lock);<newline46mondego><newline46mondego>       }<newline46mondego>    }<newline46mondego>    synchronized (lock) <newline46mondego>    {<newline46mondego>        if(!file.exists()) <newline46mondego>        {<newline46mondego>        logger.warn(<doubleQuotes46>Could not fild file in path: <doubleQuotes46> + realPath);<newline46mondego>        FileAttachment pictureAttachment = design.getThumbnailPicture();<newline46mondego>        Hibernate.initialize(pictureAttachment.getAttachment());<newline46mondego>        Data data = (Data) pictureAttachment.getAttachment();<newline46mondego>        file = toolBox.convertBlobToFile(data.getBlob(), file);<newline46mondego>        logger.warn(<doubleQuotes46>file created in path: <doubleQuotes46> + realPath);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    synchronized(locks) { <newline46mondego>         map.remove(lock)); <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1823splitHere46","17559921splitHere46","git init<newline46mondego>"
"1824splitHere46","17559921splitHere46","$ git remote add origin https://github.com/[username]/[reponame].git<newline46mondego>"
"1825splitHere46","17559921splitHere46","git add .   # this adds all the files<newline46mondego>"
"1826splitHere46","17559921splitHere46","git commit -a -m <doubleQuotes46>Initial commit<doubleQuotes46> # this stages your files locally for commit. <newline46mondego>                                  # they haven't actually been pushed yet<newline46mondego>"
"1827splitHere46","17559921splitHere46","git push -u origin --all<newline46mondego>"
"1828splitHere46","17559959splitHere46","ResultSet.getObject"
"1829splitHere46","17559959splitHere46","getXxx"
"1830splitHere46","17559959splitHere46","ResultSet"
"1831splitHere46","17559959splitHere46","i"
"1832splitHere46","17559959splitHere46","int i=0;<newline46mondego>"
"1833splitHere46","17559959splitHere46","int i=1;<newline46mondego>"
"1834splitHere46","17559959splitHere46","getObject"
"1835splitHere46","17559959splitHere46","Account account= rs.getObject(i, Account);<newline46mondego>"
"1836splitHere46","17559959splitHere46","ResultSet#getObject(int, Class)"
"1837splitHere46","17559959splitHere46","Account"
"1838splitHere46","17560056splitHere46","@Override<newline46mondego>public void keyPressed(KeyEvent evt) {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego>    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {<newline46mondego>        try {<newline46mondego>            int end = myTextArea.getCaretPosition();<newline46mondego>            int row = myTextArea.getLineOfOffset(end);<newline46mondego>            int column = end - myTextArea.getLineStartOffset(row);<newline46mondego>            int begin = end - column;<newline46mondego>            int length = end - begin;<newline46mondego><newline46mondego>            System.out.println(myTextArea.getText(begin, length));<newline46mondego><newline46mondego>        } catch (BadLocationException ex) {<newline46mondego>            System.out.println(ex.getMessage());<newline46mondego>        }<newline46mondego>        myTextArea.append(<doubleQuotes46>\n<doubleQuotes46> + <doubleQuotes46>>>><doubleQuotes46> + <doubleQuotes46> <doubleQuotes46> + <doubleQuotes46>matlab's response<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1839splitHere46","17560158splitHere46","ListView"
"1840splitHere46","17560158splitHere46","android:cacheColorHint"
"1841splitHere46","17560158splitHere46","ListView"
"1842splitHere46","17560158splitHere46","cacheColorHint"
"1843splitHere46","17560241splitHere46","new String(packet.getData(), packet.getOffset(), packet.getLength());<newline46mondego>"
"1844splitHere46","17560314splitHere46","if (input.isKeyPressed(Input.KEY_W) && !jumping)<newline46mondego>{<newline46mondego>    verticalSpeed = -1.0f;<newline46mondego>    jumping = true;<newline46mondego>}<newline46mondego>"
"1845splitHere46","17560367splitHere46","JFrame toDisplay = new JFrame(<doubleQuotes46>Please Wait<doubleQuotes46>);<newline46mondego>  toDisplay.setAlwaysOnTop(true);<newline46mondego>  toDisplay.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>  toDisplay.setVisible(true);<newline46mondego>  toDisplay.setLayout(new FlowLayout());<newline46mondego>  toDisplay.setSize(300,200);<newline46mondego>  toDisplay.setLocation((int)dimension.getWidth()/3, (int)dimension.getHeight()/3);<newline46mondego><newline46mondego>  JLabel message = new JLabel(<doubleQuotes46><html>CheapTix is currently running<br /> <newline46mondego>      please do not close this box or open the file <br /> <newline46mondego>      Destinations.txt <br /> <newline46mondego>      until instructed to do so</html><doubleQuotes46>);<newline46mondego>  toDisplay.add(message,BorderLayout.CENTER);<newline46mondego>"
"1846splitHere46","17560383splitHere46","Delimiter"
"1847splitHere46","17560383splitHere46","StringDecoder"
"1848splitHere46","17560463splitHere46","\\1"
"1849splitHere46","17560463splitHere46","(?1)"
"1850splitHere46","17560504splitHere46","@Override<newline46mondego>public void onDestroyView() {<newline46mondego>    super.onDestroyView();<newline46mondego>    MapFragment f = (MapFragment) getFragmentManager().findFragmentById(R.id.map);<newline46mondego>    if (f != null){ <newline46mondego>        getFragmentManager().beginTransaction().remove(f).commit();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1851splitHere46","17560553splitHere46","nextInt()"
"1852splitHere46","17560553splitHere46","+ 1"
"1853splitHere46","17560664splitHere46","double dx = (mx-vx); // change in x from head to mouse<newline46mondego>double dy = (my-vy); // change in y from head to mouse<newline46mondego>double dist = Math.sqrt(dx*dx + dy*dy); // distance, pythagorean theorem<newline46mondego>double degrees = Math.toDegrees((Math.acos(dy/dist)) * -Math.signum(dx));<newline46mondego>        // dy/dist is the cosine<newline46mondego>        // the sign of dx determines positive (CCW) or negative (CW) angle<newline46mondego>"
"1854splitHere46","17560779splitHere46","chatOverlay"
"1855splitHere46","17560779splitHere46","Page checkPage"
"1856splitHere46","17560779splitHere46","Page checkPage"
"1857splitHere46","17560779splitHere46","private static String chatOverlay(Page checkPage, String url) {<newline46mondego>    //changed the name of the local variable<newline46mondego>    Page checkedPage = resource.resourceResolver.getResource(url).adaptTo(Page);<newline46mondego>    url = (checkedPage) ? <doubleQuotes46>.html<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>;<newline46mondego>    return url;<newline46mondego>}<newline46mondego>"
"1858splitHere46","17560913splitHere46","r_vector <- .jevalArray(data[[1]])<newline46mondego>"
"1859splitHere46","17560913splitHere46","r_matrix <- sapply(data, .jevalArray)<newline46mondego>"
"1860splitHere46","17560913splitHere46","r_matrix <- do.call(rbind, lapply(data, .jevalArray))<newline46mondego>"
"1861splitHere46","17560913splitHere46","import java.util.Arrays;<newline46mondego><newline46mondego>public class Foo {<newline46mondego><newline46mondego>    public double[][] method() {<newline46mondego>        double[][] data = { {1.1, 1.2, 1.3},<newline46mondego>                            {2.1, 2.2, 2.3} };<newline46mondego><newline46mondego>        return data;<newline46mondego>    }<newline46mondego><newline46mondego>    public double[] getArray() {<newline46mondego>    double[] data = {9.9,8.8,7.7};<newline46mondego>    return data;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Foo foo = new Foo();<newline46mondego>        System.out.println(Arrays.toString(foo.method()));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1862splitHere46","17560913splitHere46","library(rJava)<newline46mondego>.jinit()<newline46mondego>.jaddClassPath(path='.')<newline46mondego><newline46mondego>foo <- new( J('Foo'))<newline46mondego>data <- foo$method()<newline46mondego>one_row <- .jevalArray( data[[1]] )<newline46mondego>r_matrix <- sapply(data, .jevalArray)<newline46mondego><newline46mondego>r_matrix <- do.call(rbind, lapply(data, .jevalArray))<newline46mondego>"
"1863splitHere46","17560921splitHere46","BigDecimal"
"1864splitHere46","17560921splitHere46","double"
"1865splitHere46","17560931splitHere46","<form:select path=<doubleQuotes46>person.id<doubleQuotes46>><newline46mondego><form:select path=<doubleQuotes46>course.id<doubleQuotes46>><newline46mondego>"
"1866splitHere46","17560931splitHere46","Formatters"
"1867splitHere46","17561021splitHere46","// Parses the string argument as a signed decimal integer<newline46mondego>Integer.parseInt(intObject.toString()); <newline46mondego>"
"1868splitHere46","17561021splitHere46","// Determines the integer value of the system property with the specified name.<newline46mondego>// (Hint: Not what you want)<newline46mondego>Integer.getInteger(...) <newline46mondego>"
"1869splitHere46","17561097splitHere46","<bean id=<doubleQuotes46>nonJndiDataSource<doubleQuotes46> class=<doubleQuotes46>org.apache.commons.dbcp.BasicDataSource<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>driver<doubleQuotes46> value=<doubleQuotes46>net.sourceforge.jtds.jdbcx.JtdsDataSource<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>url<doubleQuotes46> value=<doubleQuotes46>${url}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46>${user}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>password<doubleQuotes46> value=<doubleQuotes46>${password}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>initialSize<doubleQuotes46> value=<doubleQuotes46>${initial_size}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>maxActive<doubleQuotes46> value=<doubleQuotes46>${max_active}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>maxWait<doubleQuotes46> value=<doubleQuotes46>${max_wait}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>minIdle<doubleQuotes46> value=<doubleQuotes46>${min_idle}<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>maxIdle<doubleQuotes46> value=<doubleQuotes46>${max_idle}<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"1870splitHere46","17561097splitHere46","# Hibernate specific property<newline46mondego>dialect=org.hibernate.dialect.SQLServer2008Dialect<newline46mondego><newline46mondego># This is the key line<newline46mondego>url=jdbc:jtds:sqlserver://127.0.0.1;databaseName=yourDatabase;useNTLMv2=true;domain=nameOfDomain<newline46mondego><newline46mondego>user=windows_account<newline46mondego>password=password<newline46mondego>initial_size=5<newline46mondego>max_active=30<newline46mondego>max_wait=600000<newline46mondego>min_idle=0<newline46mondego>max_idle=10<newline46mondego>"
"1871splitHere46","17561288splitHere46","super"
"1872splitHere46","17561288splitHere46","toString()"
"1873splitHere46","17561288splitHere46","this"
"1874splitHere46","17561288splitHere46","public void setChildAge(int a)<newline46mondego>{<newline46mondego>    childAge = a;<newline46mondego>    super.setChildAge(childAge+2);<newline46mondego>}<newline46mondego>"
"1875splitHere46","17561288splitHere46","@Override<newline46mondego>public void setChildAge(int a)<newline46mondego>{<newline46mondego>    // childAge = a; // the child shouldn't have this variable<newline46mondego>    super.setChildAge(a + 2);<newline46mondego>}<newline46mondego>"
"1876splitHere46","17561288splitHere46","public void setGreeting(String g)<newline46mondego>{<newline46mondego>    greeting = <doubleQuotes46>I am the best.<doubleQuotes46>;<newline46mondego>    super.setGreeting(<doubleQuotes46>I am the best.<doubleQuotes46>); <newline46mondego>}<newline46mondego>"
"1877splitHere46","17561288splitHere46","@Override<newline46mondego>public void setGreeting(String g)<newline46mondego>{<newline46mondego>    // but what is g for???<newline46mondego>    // greeting = <doubleQuotes46>I am the best.<doubleQuotes46>;<newline46mondego>    super.setGreeting(<doubleQuotes46>I am the best.<doubleQuotes46>); <newline46mondego>}<newline46mondego>"
"1878splitHere46","17561288splitHere46","@Override<newline46mondego>public String getGreeting() {<newline46mondego>  return <doubleQuotes46>I am the best.<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"1879splitHere46","17561365splitHere46","jar -u"
"1880splitHere46","17561422splitHere46","private class Retrieve_Weather extends AsyncTask<Void, Void, String> {<newline46mondego>    private final String TAG = <doubleQuotes46>Retrieve_Weather<doubleQuotes46>;<newline46mondego>    Connection con = null;<newline46mondego><newline46mondego>    protected Void doInBackground(String... params) {<newline46mondego><newline46mondego>        //Log.i(TAG, weatherline);<newline46mondego>        Document doc = null;<newline46mondego>        if (con !=null){<newline46mondego>            try {<newline46mondego>                Log.i(TAG, <doubleQuotes46>trying document...<doubleQuotes46>);<newline46mondego>                doc = con.get();<newline46mondego>                Log.i(TAG, <doubleQuotes46>after document<doubleQuotes46>);<newline46mondego>                Element currentWeather = doc.getElementById(<doubleQuotes46>curCond<doubleQuotes46>);<newline46mondego>                currentweather = currentWeather.text();<newline46mondego>                Log.i(TAG, currentWeather.text());<newline46mondego>                }<newline46mondego>            catch (IOException except) {<newline46mondego>                Log.i(TAG, <doubleQuotes46>Cannot Connect<doubleQuotes46>, except);   <newline46mondego>                except.printStackTrace();<newline46mondego>                currentweather = <doubleQuotes46>Can't Connect<doubleQuotes46>;<newline46mondego>                Log.i(TAG, <doubleQuotes46>End stacktrace<doubleQuotes46>);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>        else{<newline46mondego>            currentweather = <doubleQuotes46>Connection returned null<doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        //Log.i(TAG, weatherline);<newline46mondego>        return currentweather;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPreExecute() {<newline46mondego>        //Log.i(TAG, <doubleQuotes46>onPreExecute<doubleQuotes46>);<newline46mondego>        Log.i(TAG, <doubleQuotes46>trying to connect...<doubleQuotes46>);<newline46mondego>        con = Jsoup.connect(<doubleQuotes46>http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:02142.1.99999<doubleQuotes46>).userAgent(<doubleQuotes46>Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0<doubleQuotes46>);<newline46mondego>        Log.i(TAG, <doubleQuotes46>CONNECTED!!!<doubleQuotes46>);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onProgressUpdate(Void... values) {<newline46mondego>        Log.i(TAG, <doubleQuotes46>onProgressUpdate<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onPostExecute(Void result){<newline46mondego>        Log.i(TAG, <doubleQuotes46>onPostExecute<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"1881splitHere46","17561481splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><app hash='nv' name='Tech' package='1.0' version='13' filesize='200' create_date='01-03-1987' upate_date='07-09-2013' ><newline46mondego>    <url><newline46mondego>        <name>RJ</name><newline46mondego>        <score>10</score><newline46mondego>    </url><newline46mondego>    <url><newline46mondego>        <name>ABC</name><newline46mondego>        <score>20</score><newline46mondego>    </url><newline46mondego></app><newline46mondego>"
"1882splitHere46","17561655splitHere46","java -cp j3d/foo.jar j3d/bar.jar ... -jar idv.jar<newline46mondego>"
"1883splitHere46","17561655splitHere46","-cp"
"1884splitHere46","17561655splitHere46","-jar"
"1885splitHere46","17561655splitHere46","Class-Path: j3d/foo.jar j3d/bar.jar<newline46mondego>"
"1886splitHere46","17561655splitHere46","-jar"
"1887splitHere46","17561655splitHere46","java -cp j3d/*:idv.jar your.class.name.Here<newline46mondego>"
"1888splitHere46","17561655splitHere46","*"
"1889splitHere46","17561655splitHere46","*.jar"
"1890splitHere46","17561663splitHere46","String regex = <doubleQuotes46>\\{\\{.*?\\}\\}<doubleQuotes46>;<newline46mondego>"
"1891splitHere46","17561663splitHere46","?"
"1892splitHere46","17561663splitHere46",".*"
"1893splitHere46","17561663splitHere46","{{"
"1894splitHere46","17561663splitHere46","}}"
"1895splitHere46","17561786splitHere46","<global-method-security>"
"1896splitHere46","17561786splitHere46","spring-security.xml"
"1897splitHere46","17561786splitHere46","dispatcher-servlet.xml"
"1898splitHere46","17561786splitHere46","DefaultMethodSecurityExpressionHandler"
"1899splitHere46","17561786splitHere46","setRoleHierarchy"
"1900splitHere46","17561786splitHere46","spring-security.xml"
"1901splitHere46","17561786splitHere46","dispatcher-servlet.xml"
"1902splitHere46","17561786splitHere46","<global-method-security>"
"1903splitHere46","17561786splitHere46","methodExpressionHandler"
"1904splitHere46","17561786splitHere46","spring-security.xml"
"1905splitHere46","17561786splitHere46","dispatcher-servlet.xml"
"1906splitHere46","17561800splitHere46","import java.awt.BorderLayout;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>import java.awt.BorderLayout;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class AdderExample {<newline46mondego>    public static void main(String[] args){<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Demo<doubleQuotes46>);<newline46mondego>                frame.getContentPane().setLayout(new BorderLayout());<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>                /* Use JFrameAdder if you want to add to a JFrame<newline46mondego>                 * ---------------------------------------------- */<newline46mondego>                JPanel panel = new JPanel();<newline46mondego>                addButton(panel, new JPanelAdder(), <doubleQuotes46>blah<doubleQuotes46>, 10, 10, 100, 10);<newline46mondego>                frame.getContentPane().add(panel);<newline46mondego><newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>    public static <T> JButton addButton(T app, Adder<T> adder, String text, int x, int y, int width, int height) {<newline46mondego>        try {<newline46mondego>            JButton button = new JButton();<newline46mondego>            button.setText(text);<newline46mondego>            button.setBounds(x, y, width, height);<newline46mondego>            adder.add(button, app);<newline46mondego>            System.out.println(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + text + <doubleQuotes46>\<doubleQuotes46> button created.<doubleQuotes46>);<newline46mondego>            return button;<newline46mondego>        }catch(Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>Something went wrong when creating the \<doubleQuotes46><doubleQuotes46> + text + <doubleQuotes46>\<doubleQuotes46> button.<doubleQuotes46>);<newline46mondego>            System.out.println(e.getStackTrace());<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>interface Adder<E>{<newline46mondego>    void add(JButton btn, E e);<newline46mondego>}<newline46mondego><newline46mondego>class JFrameAdder implements Adder<JFrame>{<newline46mondego>    @Override<newline46mondego>    public void add(JButton btn, JFrame e) {<newline46mondego>        e.getContentPane().add(btn);<newline46mondego>    }<newline46mondego>}<newline46mondego>class JPanelAdder implements Adder<JPanel>{<newline46mondego>    @Override<newline46mondego>    public void add(JButton btn, JPanel e) {<newline46mondego>        e.add(btn);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1907splitHere46","17561822splitHere46","<property>"
"1908splitHere46","17561822splitHere46","target"
"1909splitHere46","17561858splitHere46","FileInputFormat.addInputPath(job, new Path(<doubleQuotes46>/path/to/the/input/directory<doubleQuotes46>));<newline46mondego>"
"1910splitHere46","17561905splitHere46","Context context = new VelocityContext();<newline46mondego><newline46mondego>Template template = Velocity.getTemplate(<doubleQuotes46>src/main/resources/defaults.vm<doubleQuotes46>);<newline46mondego>template.merge(context, NullWriter.NULL_WRITER);<newline46mondego><newline46mondego>StringWriter writer = new StringWriter();<newline46mondego>Template toBeParsedTemplate = Velocity.getTemplate(<doubleQuotes46>src/main/resources/test1.vm<doubleQuotes46>);<newline46mondego>toBeParsedTemplate.merge(context, writer);<newline46mondego><newline46mondego>String renderedContent = writer.getBuffer().toString();<newline46mondego>System.out.println(renderedContent);<newline46mondego>"
"1911splitHere46","17561905splitHere46","Context"
"1912splitHere46","17561905splitHere46","defaults.vm"
"1913splitHere46","17561905splitHere46","test1.vm"
"1914splitHere46","17561905splitHere46","NullWriter"
"1915splitHere46","17561905splitHere46","Context"
"1916splitHere46","17562070splitHere46","btOn.setOnClickListener(new View.OnClickListener() {<newline46mondego>            @Override<newline46mondego>            public void onClick(View view) {<newline46mondego><newline46mondego>                Toast.makeText(MainActivity.this,<doubleQuotes46>Trying to switch on 3G!<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego><newline46mondego>                (new Thread(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego><newline46mondego>                        setMobileDataEnabled(MainActivity.this,true);<newline46mondego><newline46mondego>                        runOnUiThread(new Runnable() {<newline46mondego>                            @Override<newline46mondego>                            public void run() {<newline46mondego>                                Toast.makeText(MainActivity.this, <doubleQuotes46>Switched ON 3G!<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>                            }<newline46mondego>                        });<newline46mondego><newline46mondego>                    }<newline46mondego>                })).start();<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"1917splitHere46","17562070splitHere46","btOff.setOnClickListener(new View.OnClickListener() {<newline46mondego>            @Override<newline46mondego>            public void onClick(View view) {<newline46mondego>                Toast.makeText(MainActivity.this,<doubleQuotes46>Trying to switch off 3G!<doubleQuotes46>,Toast.LENGTH_SHORT).show();<newline46mondego><newline46mondego>                (new Thread(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego><newline46mondego>                        setMobileDataEnabled(MainActivity.this,false);<newline46mondego><newline46mondego>                        runOnUiThread(new Runnable() {<newline46mondego>                            @Override<newline46mondego>                            public void run() {<newline46mondego>                                Toast.makeText(MainActivity.this, <doubleQuotes46>Switched OFF 3G!<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>                            }<newline46mondego>                        });<newline46mondego><newline46mondego><newline46mondego>                    }<newline46mondego>                })).start();<newline46mondego><newline46mondego><newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"1918splitHere46","17562070splitHere46","final Class conmanClass;<newline46mondego><newline46mondego>    try {<newline46mondego><newline46mondego><newline46mondego>        conmanClass = Class.forName(conman.getClass().getName());<newline46mondego>        final Field iConnectivityManagerField = conmanClass.getDeclaredField(<doubleQuotes46>mService<doubleQuotes46>);<newline46mondego>        iConnectivityManagerField.setAccessible(true);<newline46mondego>        final Object iConnectivityManager = iConnectivityManagerField.get(conman);<newline46mondego>        final Class iConnectivityManagerClass = Class.forName(iConnectivityManager.getClass().getName());<newline46mondego>        final Method setMobileDataEnabledMethod = iConnectivityManagerClass.getDeclaredMethod(<doubleQuotes46>setMobileDataEnabled<doubleQuotes46>, Boolean.TYPE);<newline46mondego>        setMobileDataEnabledMethod.setAccessible(true);<newline46mondego>        setMobileDataEnabledMethod.invoke(iConnectivityManager, enabled);<newline46mondego><newline46mondego>    } catch (ClassNotFoundException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (InvocationTargetException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (NoSuchMethodException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (IllegalAccessException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (NoSuchFieldException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1919splitHere46","17562077splitHere46","name"
"1920splitHere46","17562077splitHere46","main"
"1921splitHere46","17562077splitHere46","changeName"
"1922splitHere46","17562077splitHere46","str"
"1923splitHere46","17562077splitHere46","str"
"1924splitHere46","17562077splitHere46","main"
"1925splitHere46","17562077splitHere46","name"
"1926splitHere46","17562077splitHere46","str"
"1927splitHere46","17562077splitHere46","name"
"1928splitHere46","17562143splitHere46","Scanner input = new Scanner(System.in);<newline46mondego>System.out.println(<doubleQuotes46>Which Index would you like to adjust?<doubleQuotes46>);<newline46mondego>int change = input.nextInt();<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>What would you like to change about Index <doubleQuotes46> + change + <doubleQuotes46>?<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>Enter 1 for the Name.<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>Enter 2 for the Product ID.<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>Enter 3 for the Price.<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>Enter 4 for the Expiration Date.<doubleQuotes46>);<newline46mondego>int type = input.nextInt();<newline46mondego>Prod p = pList.get(change);<newline46mondego><newline46mondego>if(type==1){ <newline46mondego>   p.setName(input.nextLine());<newline46mondego>}<newline46mondego>else if(type==2){<newline46mondego>   p.setId(input.nextLine());<newline46mondego>}<newline46mondego>///and so on<newline46mondego>"
"1929splitHere46","17562167splitHere46","new Function<Double, Double>() {<newline46mondego>    public Double apply(final Double from) {<newline46mondego>        return from *.88;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1930splitHere46","17562167splitHere46","Iterables.transform(prices, *func*)<newline46mondego>"
"1931splitHere46","17562167splitHere46","Iterable"
"1932splitHere46","17562167splitHere46","Lists.newArrayList( ... )<newline46mondego>"
"1933splitHere46","17562199splitHere46","public String doUrlPost(final String connurl,final JSONObject obj) throws IOException{<newline46mondego>              CookieManager cookieManager = new CookieManager();<newline46mondego>      CookieHandler.setDefault(cookieManager);<newline46mondego><newline46mondego>      URL url=new URL(connurl);<newline46mondego>       HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();<newline46mondego>         urlConnection.setDoOutput(true);<newline46mondego>         urlConnection.setRequestMethod(<doubleQuotes46>POST<doubleQuotes46>);<newline46mondego>         urlConnection.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/x-www-form-urlencoded<doubleQuotes46>); <newline46mondego>                 //sets the cookie to version 1<newline46mondego>         urlConnection.setRequestProperty(<doubleQuotes46>Cookie2<doubleQuotes46>,<doubleQuotes46>$Version=1<doubleQuotes46>);<newline46mondego><newline46mondego>         List<HttpCookie> lst=((CookieManager)CookieHandler.getDefault()).getCookieStore().getCookies();<newline46mondego>         for(HttpCookie cookie:lst){<newline46mondego><newline46mondego>             if(cookie.getName().equals(<doubleQuotes46>auth<doubleQuotes46>)){<newline46mondego>             //double quote your cookie<newline46mondego>              urlConnection.setRequestProperty(<doubleQuotes46>Cookie<doubleQuotes46>,<doubleQuotes46>auth=\<doubleQuotes46><doubleQuotes46>+cookie.getValue()+<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>             }<newline46mondego>         }<newline46mondego>         urlConnection.setUseCaches(false);      <newline46mondego><newline46mondego>         List<NameValuePair> nameValuePairs = getData(obj);<newline46mondego><newline46mondego>         OutputStream out = urlConnection.getOutputStream();<newline46mondego>         BufferedWriter writer = new BufferedWriter(<newline46mondego>                    new OutputStreamWriter(out, <doubleQuotes46>UTF-8<doubleQuotes46>));           <newline46mondego>         writer.write(getQuery(nameValuePairs));<newline46mondego>         writer.close();<newline46mondego><newline46mondego>        InputStream in = new BufferedInputStream(urlConnection.getInputStream());<newline46mondego>        BufferedReader rd=new BufferedReader(new InputStreamReader(in));<newline46mondego>        String line=<doubleQuotes46><doubleQuotes46>;<newline46mondego>        String content=<doubleQuotes46><doubleQuotes46>;<newline46mondego>        while((line=rd.readLine())!=null){<newline46mondego>            content+=line;<newline46mondego>        }<newline46mondego>        rd.close();<newline46mondego>        finalcontent=content;<newline46mondego>        urlConnection.disconnect(); <newline46mondego>        return finalcontent;<newline46mondego>} <newline46mondego>"
"1934splitHere46","17562199splitHere46","private String getQuery(List<NameValuePair> params) throws UnsupportedEncodingException<newline46mondego>{<newline46mondego>    StringBuilder result = new StringBuilder();<newline46mondego>    boolean first = true;<newline46mondego><newline46mondego>    for (NameValuePair pair : params)<newline46mondego>    {<newline46mondego>        if (first)<newline46mondego>            first = false;<newline46mondego>        else<newline46mondego>            result.append(<doubleQuotes46>&<doubleQuotes46>);<newline46mondego><newline46mondego>        result.append(URLEncoder.encode(pair.getName(), <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>        result.append(<doubleQuotes46>=<doubleQuotes46>);<newline46mondego>        result.append(URLEncoder.encode(pair.getValue(), <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    return result.toString();<newline46mondego>}<newline46mondego>"
"1935splitHere46","17562246splitHere46","testSheet.autoSizeColumn(ColIndex);<newline46mondego>testSheet.setColumnWidth(ColIndex ,testSheet.getColumnWidth(ColIndex)+PaddingWidth);<newline46mondego>"
"1936splitHere46","17562522splitHere46","try"
"1937splitHere46","17562522splitHere46","catch"
"1938splitHere46","17562522splitHere46","finally"
"1939splitHere46","17562522splitHere46","catch"
"1940splitHere46","17562522splitHere46","finally"
"1941splitHere46","17562522splitHere46","try"
"1942splitHere46","17562522splitHere46","finally"
"1943splitHere46","17562522splitHere46","catch"
"1944splitHere46","17562522splitHere46","catch"
"1945splitHere46","17562522splitHere46","finally"
"1946splitHere46","17562522splitHere46","try"
"1947splitHere46","17562522splitHere46","try {<newline46mondego>    // outer try<newline46mondego>   try {<newline46mondego>     // inner try<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>    }<newline46mondego> }<newline46mondego> catch(SomeException e) {<newline46mondego> }<newline46mondego>"
"1948splitHere46","17562700splitHere46","Set<E> collection1 = new LinkedHashSet<E>();<newline46mondego>"
"1949splitHere46","17562787splitHere46","byte"
"1950splitHere46","17562787splitHere46","short"
"1951splitHere46","17562787splitHere46","char"
"1952splitHere46","17562787splitHere46","int"
"1953splitHere46","17562787splitHere46","String"
"1954splitHere46","17562787splitHere46","Class"
"1955splitHere46","17562787splitHere46","DAO.class"
"1956splitHere46","17562787splitHere46","DAO"
"1957splitHere46","17562864splitHere46","git push origin dev<newline46mondego>"
"1958splitHere46","17562864splitHere46","origin"
"1959splitHere46","17562864splitHere46","git push origin :navDrawer<newline46mondego>"
"1960splitHere46","17562864splitHere46","git push <remotename> [+]<localref>:<remoteref><newline46mondego>"
"1961splitHere46","17562864splitHere46","localref"
"1962splitHere46","17562864splitHere46","remoteref"
"1963splitHere46","17562864splitHere46","remotename"
"1964splitHere46","17562864splitHere46","localref"
"1965splitHere46","17562864splitHere46","+"
"1966splitHere46","17562864splitHere46","git"
"1967splitHere46","17562864splitHere46","remoteref"
"1968splitHere46","17562864splitHere46","localref"
"1969splitHere46","17562886splitHere46","java.util.concurrent"
"1970splitHere46","17562886splitHere46","ExecutorService executorService = ...<newline46mondego>    Object res = executorService.submit(new Callable<Object>() {<newline46mondego>        public Object call() throws Exception {<newline46mondego>            ... your logic<newline46mondego>        }<newline46mondego>    }).get(timeout, TimeUnit.MILLISECONDS);<newline46mondego>"
"1971splitHere46","17563012splitHere46","Mammal"
"1972splitHere46","17563012splitHere46","methodA()"
"1973splitHere46","17563012splitHere46","Mammal"
"1974splitHere46","17563012splitHere46","Mammal"
"1975splitHere46","17563012splitHere46","methodA()"
"1976splitHere46","17563012splitHere46","methodA()"
"1977splitHere46","17563012splitHere46","Animal"
"1978splitHere46","17563012splitHere46","Mammal"
"1979splitHere46","17563012splitHere46","super"
"1980splitHere46","17563012splitHere46","Mammal"
"1981splitHere46","17563012splitHere46","class Mammal extends Animal{<newline46mondego>    void methodA(){<newline46mondego>        super.methodA();// --> calling Animal's methodA()<newline46mondego>    }<newline46mondego>    void methodAB(){<newline46mondego>        System.out.println(<doubleQuotes46>Two child class Dog and Cat I have<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1982splitHere46","17563012splitHere46","ClassCastException"
"1983splitHere46","17563012splitHere46","Animal"
"1984splitHere46","17563012splitHere46","Mammal"
"1985splitHere46","17563012splitHere46","Animal A1= new Animal();<newline46mondego>Mammal M1 =(Mammal)A1;<newline46mondego>M1.methodA();<newline46mondego>"
"1986splitHere46","17563091splitHere46","getXTouchDown()"
"1987splitHere46","17563091splitHere46","setXTouchDown()"
"1988splitHere46","17563295splitHere46","ConnectDb.java"
"1989splitHere46","17563295splitHere46","RunTimeException"
"1990splitHere46","17563295splitHere46","ServletValidaLogin.java"
"1991splitHere46","17563295splitHere46","System.out.println(e.getMessage())"
"1992splitHere46","17563295splitHere46","catch"
"1993splitHere46","17563295splitHere46","try {<newline46mondego>    ConnectLogin dao = new ConnectLogin(); <newline46mondego>    user = dao.getContato(email, senha);<newline46mondego>}<newline46mondego>catch ( Exception e ){<newline46mondego>    System.out.println(e.getMessage()); <newline46mondego>}<newline46mondego>"
"1994splitHere46","17563295splitHere46","catch"
"1995splitHere46","17563295splitHere46","if"
"1996splitHere46","17563295splitHere46","ServletValidaLogin"
"1997splitHere46","17563295splitHere46","if ( user == null )  <newline46mondego>"
"1998splitHere46","17563295splitHere46","true"
"1999splitHere46","17563295splitHere46","println"
"2000splitHere46","17563295splitHere46","ResultSet"
"2001splitHere46","17563295splitHere46","if ( rs.next() )"
"2002splitHere46","17563295splitHere46","false"
"2003splitHere46","17563295splitHere46","ConnectLogin.java"
"2004splitHere46","17563295splitHere46","null"
"2005splitHere46","17563295splitHere46","getRequest"
"2006splitHere46","17563295splitHere46","name"
"2007splitHere46","17563295splitHere46","<input>"
"2008splitHere46","17563295splitHere46","senha"
"2009splitHere46","17563295splitHere46","user.setEmail(email);<newline46mondego>user.setSenha(senha);<newline46mondego>"
"2010splitHere46","17563295splitHere46","user.setEmail(rs.getString(<doubleQuotes46>pf_email<doubleQuotes46>));<newline46mondego>user.setSenha(rs.getString(<doubleQuotes46>pf_senha<doubleQuotes46>));<newline46mondego>"
"2011splitHere46","17563295splitHere46","if"
"2012splitHere46","17563295splitHere46","user.setNome( rs.getString(<doubleQuotes46>pf_nome<doubleQuotes46>) );<newline46mondego>"
"2013splitHere46","17563295splitHere46","HttpSession"
"2014splitHere46","17563585splitHere46","@play20.welcome(message, style = <doubleQuotes46>Java<doubleQuotes46>)"
"2015splitHere46","17563837splitHere46","@Path(<doubleQuotes46>/insertInclusions<doubleQuotes46>)<newline46mondego>public void insertInclusions(@PathParam(<doubleQuotes46>insertQuery<doubleQuotes46>) String insertQuery, @PathParam(<doubleQuotes46>inclusionString<doubleQuotes46>) String inclusionString)<newline46mondego>"
"2016splitHere46","17563849splitHere46","class NonCloseableOutputStream extends FilterOutputStream {<newline46mondego><newline46mondego>    public NonCloseableOutputStream(OutputStream out) {<newline46mondego>        super(out);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void close() throws IOException {<newline46mondego>        // ignore<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2017splitHere46","17563876splitHere46","import xmlrpclib<newline46mondego><newline46mondego>conn_settings = \<newline46mondego>{<newline46mondego>    <doubleQuotes46>user<doubleQuotes46> : <doubleQuotes46>noob<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>pass<doubleQuotes46> : <doubleQuotes46>1234<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>host<doubleQuotes46> : <doubleQuotes46>localhost<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>port<doubleQuotes46> : 8080,<newline46mondego>    <doubleQuotes46>path<doubleQuotes46> : <doubleQuotes46><doubleQuotes46><newline46mondego>}<newline46mondego><newline46mondego>conn_str = <doubleQuotes46>http://<doubleQuotes46> + (<doubleQuotes46>%(user)s:%(pass)s@<doubleQuotes46> % conn_settings if(conn_settings.get(<doubleQuotes46>user<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)) else <doubleQuotes46><doubleQuotes46>) + <doubleQuotes46>%(host)s:%(port)d%(path)s<doubleQuotes46> % conn_settings<newline46mondego>print <doubleQuotes46>Connecting using: %s<doubleQuotes46> % conn_str<newline46mondego><newline46mondego>client = xmlrpclib.ServerProxy(conn_str)<newline46mondego><newline46mondego>print <doubleQuotes46>You can call this<doubleQuotes46><newline46mondego>print client.system.listMethods()<newline46mondego><newline46mondego>print <doubleQuotes46>Trying Query<doubleQuotes46><newline46mondego>print client.ContentAPI.queryResult(<doubleQuotes46>1376<doubleQuotes46>)<newline46mondego>"
"2018splitHere46","17563934splitHere46","class Test1 {<newline46mondego><newline46mondego>    class X {<newline46mondego>        static {  <-- compile error: Cannot define static initializer in inner type Test1.X<newline46mondego>        }<newline46mondego>    }<newline46mondego>...<newline46mondego>"
"2019splitHere46","17563934splitHere46","class Test1 {<newline46mondego>    static {<newline46mondego>        x = 3;<newline46mondego>    }<newline46mondego><newline46mondego>    static int x = 2;<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        System.out.println(x);<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"2020splitHere46","17563934splitHere46","2<newline46mondego>"
"2021splitHere46","17563934splitHere46","class Test1 {<newline46mondego>    static int x = 2;<newline46mondego><newline46mondego>    static {<newline46mondego>        x = 3;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        System.out.println(x);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2022splitHere46","17563934splitHere46","3<newline46mondego>"
"2023splitHere46","17563934splitHere46","<clinit>"
"2024splitHere46","17563934splitHere46","static <clinit>()V<newline46mondego>   L0<newline46mondego>    LINENUMBER 12 L0<newline46mondego>    ICONST_3<newline46mondego>    PUTSTATIC test/Test1.x : I<newline46mondego>   L1<newline46mondego>    LINENUMBER 15 L1<newline46mondego>    ICONST_2<newline46mondego>    PUTSTATIC test/Test1.x : I<newline46mondego>    RETURN<newline46mondego>"
"2025splitHere46","17564051splitHere46","camera = new OrthographicCamera(w, h);<newline46mondego>"
"2026splitHere46","17564142splitHere46","[a-zA-Z_$]<newline46mondego>"
"2027splitHere46","17564142splitHere46","[a-zA-Z_$0-9]<newline46mondego>"
"2028splitHere46","17564142splitHere46","^[a-zA-Z_$][a-zA-Z_$0-9]*$<newline46mondego>"
"2029splitHere46","17564152splitHere46","hdrclob.write(conclob.toByteArray());<newline46mondego>// hdrclob.toByteArray() now returns the concatenation of the two streams<newline46mondego>"
"2030splitHere46","17564152splitHere46","InputStream"
"2031splitHere46","17564152splitHere46","SequenceInputStream"
"2032splitHere46","17564152splitHere46","InputStream everything = new SequenceInputStream(<newline46mondego>    new ByteArrayInputStream(hdrclob.toByteArray()),<newline46mondego>    new ByteArrayInputStream(conclob.toByteArray()));<newline46mondego>// now read everything<newline46mondego>"
"2033splitHere46","17564274splitHere46","checkDB.setString(1, (String) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(<doubleQuotes46>age<doubleQuotes46>));<newline46mondego>    checkDB.setString(2, (String) FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(<doubleQuotes46>color<doubleQuotes46>));<newline46mondego>"
"2034splitHere46","17564354splitHere46","urllib.quote('/'.join([baseurl, grouptype, groupranking, groupname])"
"2035splitHere46","17564354splitHere46","baseurl + urllib.urlencode({'grouptype':grouptype,'groupranking':groupranking,'groupname':groupname})"
"2036splitHere46","17564377splitHere46","ResultSet rs1 = stmt.executeQuery(<doubleQuotes46>CREATE OR REPLACE TRIGGER test_trigger123\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>BEFORE INSERT ON RESULTS\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>REFERENCING NEW AS NEW\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>FOR EACH ROW\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>BEGIN\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>SELECT Pd_seq.nextval INTO :NEW.PT_ID FROM dual;\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>END;\n<doubleQuotes46>+<newline46mondego>                <doubleQuotes46>\n/<doubleQuotes46>);<newline46mondego>"
"2037splitHere46","17564392splitHere46","ViewHolder"
"2038splitHere46","17564392splitHere46","ViewHolder"
"2039splitHere46","17564392splitHere46","static class ViewHolder {<newline46mondego>    public TextView text;<newline46mondego>    public ImageView image;<newline46mondego>}<newline46mondego>"
"2040splitHere46","17564392splitHere46","TextView"
"2041splitHere46","17564392splitHere46","ImageView"
"2042splitHere46","17564392splitHere46","ViewHolder"
"2043splitHere46","17564392splitHere46","custom_list_item"
"2044splitHere46","17564392splitHere46","<RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46> ><newline46mondego><newline46mondego><RatingBar<newline46mondego>    android:id=<doubleQuotes46>@+id/ratingBar1<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    android:layout_below=<doubleQuotes46>@+id/linearLayout1<doubleQuotes46> /><newline46mondego><newline46mondego><ImageView<newline46mondego>    android:id=<doubleQuotes46>@+id/imageView1<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_alignRight=<doubleQuotes46>@+id/ratingBar1<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>100dp<doubleQuotes46><newline46mondego>    android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    android:layout_alignParentTop=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    android:scaleType=<doubleQuotes46>fitXY<doubleQuotes46><newline46mondego>    android:src=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46> /><newline46mondego><newline46mondego><LinearLayout<newline46mondego>    android:id=<doubleQuotes46>@+id/linearLayout1<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_alignRight=<doubleQuotes46>@+id/imageView1<doubleQuotes46><newline46mondego>    android:layout_below=<doubleQuotes46>@+id/imageView1<doubleQuotes46> ><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:id=<doubleQuotes46>@+id/text1<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>0dp<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_weight=<doubleQuotes46>1<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>left<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>text1<doubleQuotes46> /><newline46mondego><newline46mondego>    <TextView<newline46mondego>        android:layout_width=<doubleQuotes46>0dp<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>        android:layout_weight=<doubleQuotes46>1<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>right<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>text2<doubleQuotes46> /><newline46mondego></LinearLayout><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"2045splitHere46","17564525splitHere46","@XmlRootElement<newline46mondego>public class Countries {<newline46mondego>    @XmlElement<newline46mondego>    Country country;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego><newline46mondego>public class Country {<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    private String name;<newline46mondego>    @XmlAttribute<newline46mondego>    private String states;<newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego>    public String getStates() {<newline46mondego>        return states;<newline46mondego>     }<newline46mondego>     public void setStates(String states) {<newline46mondego>        this.states = states;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego><newline46mondego>        return <doubleQuotes46>Country[@name=<doubleQuotes46>+getName()+<doubleQuotes46>][@states=<doubleQuotes46>+getStates();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2046splitHere46","17564568splitHere46","pom.xml"
"2047splitHere46","17564700splitHere46","$ORACLE_HOME/oc4j/lib/dms.jar<newline46mondego>"
"2048splitHere46","17564796splitHere46","final ObjectMapper mapper = new ObjectMapper();<newline46mondego>final String s = mapper.writeValueAsString(yourEmployee);<newline46mondego>"
"2049splitHere46","17564796splitHere46","s"
"2050splitHere46","17564796splitHere46","ObjectMapper"
"2051splitHere46","17564823splitHere46","retainAll()"
"2052splitHere46","17564823splitHere46","ConcurrentModificationException"
"2053splitHere46","17564823splitHere46","retainAll()"
"2054splitHere46","17564823splitHere46","ConcurrentModificationException"
"2055splitHere46","17564823splitHere46","retainAll()"
"2056splitHere46","17564823splitHere46","List.subList()"
"2057splitHere46","17564823splitHere46","System.out.println(arrNewFruits.retainAll(arrFruits));<newline46mondego>"
"2058splitHere46","17564823splitHere46","List<Foo> freshList = new ArrayList<Foo>(bigList.subList(0,2));<newline46mondego>"
"2059splitHere46","17564823splitHere46","ArrayList.retainAll()"
"2060splitHere46","17565023splitHere46","||"
"2061splitHere46","17565023splitHere46","NULL"
"2062splitHere46","17565023splitHere46","NULL"
"2063splitHere46","17565023splitHere46","set mode mysql"
"2064splitHere46","17565023splitHere46",";mode=mysql"
"2065splitHere46","17565023splitHere46","2   1-2007-01-01-2007-12-31<newline46mondego>    2-2007-01-01-<newline46mondego>"
"2066splitHere46","17565023splitHere46","NULL"
"2067splitHere46","17565023splitHere46","CONCAT"
"2068splitHere46","17565023splitHere46","||"
"2069splitHere46","17565023splitHere46","concat(id, '-', start, '-', end)<newline46mondego>"
"2070splitHere46","17565026splitHere46","Location newLocation;<newline46mondego><newline46mondego>    newLocation.setLatitude(latitude);<newline46mondego>    newLocation.setLongitude(longitude); <newline46mondego>"
"2071splitHere46","17565026splitHere46","newLocation"
"2072splitHere46","17565026splitHere46","null"
"2073splitHere46","17565026splitHere46","null"
"2074splitHere46","17565026splitHere46","NullPointerException"
"2075splitHere46","17565026splitHere46","Location newLocation = new Location(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>"
"2076splitHere46","17565188splitHere46","EditText"
"2077splitHere46","17565188splitHere46","OnTextChanged"
"2078splitHere46","17565188splitHere46","e.getText().toString();"
"2079splitHere46","17565188splitHere46","OnTextChanged"
"2080splitHere46","17565188splitHere46","OnClick"
"2081splitHere46","17565188splitHere46","editText"
"2082splitHere46","17565188splitHere46","myEditText"
"2083splitHere46","17565188splitHere46","usernameEditText"
"2084splitHere46","17565189splitHere46","int color = Color.argb(255, 255, 255, 255);<newline46mondego>String htmlColor = String.format(<doubleQuotes46>#%X<doubleQuotes46>, color);<newline46mondego>"
"2085splitHere46","17565189splitHere46","int color = Color.parse(htmlColor);<newline46mondego>"
"2086splitHere46","17565290splitHere46","String uri= <doubleQuotes46>smsto:<doubleQuotes46>+phoneNumber;<newline46mondego>            Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.parse(uri));<newline46mondego>            intent.putExtra(<doubleQuotes46>sms_body<doubleQuotes46>, Json.tostring);<newline46mondego>            intent.putExtra(<doubleQuotes46>compose_mode<doubleQuotes46>, true);<newline46mondego>            startActivity(intent);<newline46mondego>"
"2087splitHere46","17565500splitHere46","http:conduit"
"2088splitHere46","17565500splitHere46","<http:conduit name=<doubleQuotes46>*.http-conduit<doubleQuotes46>>"
"2089splitHere46","17565607splitHere46","IStatisticsGraph"
"2090splitHere46","17565607splitHere46","public class StatisticPage<newline46mondego>    implements Printable<newline46mondego>{<newline46mondego>    private ChartPanel mChart = null;<newline46mondego><newline46mondego>    public StatisticPage(ChartPanel oChart)<newline46mondego>    {<newline46mondego>        mChart = oChart; <newline46mondego>    }<newline46mondego><newline46mondego>    public int print(Graphics g, PageFormat format, int pageIndex)<newline46mondego>    {<newline46mondego>        if(mChart == null)<newline46mondego>            return Printable.NO_SUCH_PAGE;<newline46mondego><newline46mondego>        return mChart.print(g, format, pageIndex);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2091splitHere46","17565607splitHere46","private void onPrint()<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        Object o = mStatisticSelectorBox.getSelectedItem();<newline46mondego>        if(o == null)<newline46mondego>            return;<newline46mondego><newline46mondego>        IStatisticGraph gr = (IStatisticGraph)o;<newline46mondego>        StatisticPage page = gr.getPage();<newline46mondego>        if(page == null)<newline46mondego>            return;<newline46mondego><newline46mondego>        PrinterJob prt = PrinterJob.getPrinterJob();<newline46mondego><newline46mondego>        PageFormat pf0 = prt.defaultPage();<newline46mondego>        PageFormat pf1;<newline46mondego>        pf0.setOrientation(PageFormat.LANDSCAPE);<newline46mondego>        pf1 = prt.pageDialog(pf0);<newline46mondego>        if(pf1.equals(pf0) == true)<newline46mondego>            return;<newline46mondego><newline46mondego>        Book book = new Book();<newline46mondego>        book.append(page, pf1);<newline46mondego>        prt.setPageable(book);<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego>            prt.print();<newline46mondego>        }<newline46mondego>        catch (PrinterException exception)<newline46mondego>        {<newline46mondego>        }<newline46mondego>    }<newline46mondego>    catch(Throwable e)<newline46mondego>    {<newline46mondego>        showError(e.getClass().getCanonicalName(), e.getLocalizedMessage(), e);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2092splitHere46","17565794splitHere46","java.awt.Desktop"
"2093splitHere46","17565794splitHere46","Runtime.getRuntime().exec(<doubleQuotes46>cmd.exe /c start <doubleQuotes46> + new File(myFilePath));<newline46mondego>"
"2094splitHere46","17565794splitHere46","Desktop.getDesktop().open(new File(myFilePath));<newline46mondego>"
"2095splitHere46","17565895splitHere46","java A$B<newline46mondego>"
"2096splitHere46","17565895splitHere46","java 'A$B'"
"2097splitHere46","17565913splitHere46","-Xint"
"2098splitHere46","17566064splitHere46","combo-box-popup"
"2099splitHere46","17566064splitHere46","- combo-box-popup : a PopupControl that is displayed when the button is pressed  <newline46mondego>     - list-view : a ListView  <newline46mondego>         - list-cell : a ListCell<newline46mondego>"
"2100splitHere46","17566064splitHere46",".combo-box-popup .list-view {<newline46mondego>    -fx-background-color: -fx-box-border, -fx-control-inner-background;<newline46mondego>    -fx-background-insets: 0, 1;<newline46mondego>    -fx-effect: dropshadow( three-pass-box , rgba(0,0,0,0.6) , 8, 0.0 , 0 , 0 );<newline46mondego>}<newline46mondego><newline46mondego>.combo-box-popup .list-view .list-cell {<newline46mondego>    -fx-padding: 4 0 4 5;<newline46mondego><newline46mondego>    /* No alternate highlighting */<newline46mondego>    -fx-background-color: -fx-control-inner-background;<newline46mondego>}<newline46mondego><newline46mondego>.combo-box-popup .list-view .list-cell:filled:selected, .combo-box-popup .list-view .list-cell:filled:selected:hover {<newline46mondego>    -fx-background: -fx-accent;<newline46mondego>    -fx-background-color: -fx-selection-bar;<newline46mondego>    -fx-text-fill: -fx-selection-bar-text;<newline46mondego>}<newline46mondego><newline46mondego>.combo-box-popup .list-view .list-cell:filled:hover {<newline46mondego>    -fx-background-color: -fx-cell-hover-color;<newline46mondego>    -fx-text-fill: -fx-text-inner-color;<newline46mondego>}<newline46mondego>"
"2101splitHere46","17566064splitHere46","AnchorPane"
"2102splitHere46","17566064splitHere46",".combo-box-popup"
"2103splitHere46","17566064splitHere46","scene.getStylesheets().add(getClass().getResource(<doubleQuotes46>style.css<doubleQuotes46>).toExternalForm());<newline46mondego>"
"2104splitHere46","17566355splitHere46","(input.hasNextInt())"
"2105splitHere46","17566532splitHere46","ins = media2.getStreamData();<newline46mondego>PdfReaderUtility pru2 = new PdfReaderUtility();<newline46mondego>pru2.readPdfFile(ins);<newline46mondego>String s2 = pru.readPdfFile(ins);<newline46mondego>"
"2106splitHere46","17566532splitHere46","ins = media2.getStreamData();<newline46mondego>PdfReaderUtility pru2 = new PdfReaderUtility();<newline46mondego>String s2 = pru2.readPdfFile(ins);<newline46mondego>"
"2107splitHere46","17566564splitHere46","public void onLocationChanged(Location location) <newline46mondego>"
"2108splitHere46","17566564splitHere46","newLocation.set(location);<newline46mondego>"
"2109splitHere46","17566882splitHere46","JSlider"
"2110splitHere46","17566882splitHere46","JTextField"
"2111splitHere46","17566882splitHere46","js.addChangeListener(new ChangeListener() {<newline46mondego>            @Override<newline46mondego>            public void stateChanged(ChangeEvent e) {<newline46mondego><newline46mondego>                if(js.getValueIsAdjusting()) {//slider value is still being adjusted<newline46mondego>                    int num=(int)(Math.rint((double) js.getValue() / 10) * 10);//round to nearest 10<newline46mondego>                    tf.setText(String.valueOf(num));//set textfield with value of nearest 10                  <newline46mondego>                } else {//slider value has been set/no adjustments happenening<newline46mondego>                    tf.setText(String.valueOf(js.getValue()));<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"2112splitHere46","17566882splitHere46","Event Dispatch thread"
"2113splitHere46","17566882splitHere46","SwingUtilities.invokeXXX"
"2114splitHere46","17566882splitHere46","SwingUtilities.invokeLater(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        //create/manipulate UI, components etc here<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"2115splitHere46","17566950splitHere46","StringTokenizer(myString,<doubleQuotes46> <doubleQuotes46>).countTokens();<newline46mondego>"
"2116splitHere46","17567040splitHere46","main(String[] args)"
"2117splitHere46","17567049splitHere46","String a1 = jTextField1.getText();<newline46mondego>String a2 = jTextField2.getText();<newline46mondego>String a3 = jTextField3.getText();<newline46mondego>String a4 = jTextField4.getText();<newline46mondego>String a5 = jTextField5.getText();<newline46mondego><newline46mondego>String m1 = <doubleQuotes46>You will never forget <doubleQuotes46> + a1 + <doubleQuotes46>\n\n<doubleQuotes46>;<newline46mondego>String m2 = <doubleQuotes46>You can consider <doubleQuotes46> + a2 + <doubleQuotes46> as your true friend \n\n<doubleQuotes46>;<newline46mondego>String m3 = <doubleQuotes46>You really Love <doubleQuotes46> + a3 + <doubleQuotes46>\n\n<doubleQuotes46>;<newline46mondego>String m4 = a4 + <doubleQuotes46> is your twin soul \n\n<doubleQuotes46> ; <newline46mondego>String m5 = <doubleQuotes46>you will remember <doubleQuotes46> + a5 + <doubleQuotes46> for the rest of your life (due to past –good or bad- experiences, lessons etc) \n\n<doubleQuotes46>;<newline46mondego>String m6 = m1 + m2 + m3 + m4 + m5;<newline46mondego><newline46mondego>JLabel label = new JLabel(m6);<newline46mondego>label.setFont(new Font(<doubleQuotes46>serif<doubleQuotes46>, Font.BOLD, 14));<newline46mondego>JOptionPane.showMessageDialog(null,label);<newline46mondego>"
"2118splitHere46","17567167splitHere46","JobDetail job = JobBuilder.newJob(TestJob.class)<newline46mondego>        .withIdentity(<doubleQuotes46>testJob<doubleQuotes46>)<newline46mondego>        .build();<newline46mondego>job.getJobDataMap().put(<doubleQuotes46>mobile<doubleQuotes46>, <doubleQuotes46>1234567890<doubleQuotes46>);<newline46mondego>job.getJobDataMap().put(<doubleQuotes46>msg<doubleQuotes46>, <doubleQuotes46>Your balance is low<doubleQuotes46>);<newline46mondego><newline46mondego>public void execute(JobExecutionContext jExeCtx) throws JobExecutionException {<newline46mondego>try {           <newline46mondego>JobDataMap dataMap = context.getJobDetail().getJobDataMap();<newline46mondego>String msg = dataMap.getString(<doubleQuotes46>msg<doubleQuotes46>);<newline46mondego>String mobile = dataMap.getFloat(<doubleQuotes46>mobile<doubleQuotes46>);<newline46mondego>SendSms.sendSms(mobile,msg);<newline46mondego>} catch (IOException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (Exception e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>log.debug(<doubleQuotes46>TestJob run successfully...<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2119splitHere46","17567418splitHere46","params.banana<newline46mondego>"
"2120splitHere46","17567418splitHere46","def matched = params.findAll { it.key =~ /XYZ/ }<newline46mondego>//or<newline46mondego>Pattern p = ~/XYZ/<newline46mondego>def matched = params.findAll { p.matcher(it.key).matches() }<newline46mondego>"
"2121splitHere46","17567579splitHere46","public void removeExifMetadata(final File jpegImageFile, final File dst)<newline46mondego>        throws IOException, ImageReadException, ImageWriteException {<newline46mondego>    OutputStream os = null;<newline46mondego>    try {<newline46mondego>        os = new FileOutputStream(dst);<newline46mondego>        os = new BufferedOutputStream(os);<newline46mondego><newline46mondego>        new ExifRewriter().removeExifMetadata(jpegImageFile, os);<newline46mondego>    } finally {<newline46mondego>        if (os != null) {<newline46mondego>            try {<newline46mondego>                os.close();<newline46mondego>            } catch (final IOException e) {<newline46mondego><newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2122splitHere46","17567590splitHere46","@Fetch(FetchMode.SELECT)"
"2123splitHere46","17567590splitHere46","@IndexColumn(name=<doubleQuotes46>LIST_INDEX<doubleQuotes46>)"
"2124splitHere46","17567747splitHere46","String#equals"
"2125splitHere46","17567747splitHere46","String"
"2126splitHere46","17567747splitHere46","=="
"2127splitHere46","17567747splitHere46","JTextField#getText"
"2128splitHere46","17567747splitHere46","String"
"2129splitHere46","17567747splitHere46","<doubleQuotes46><doubleQuotes46>"
"2130splitHere46","17567747splitHere46","Entity"
"2131splitHere46","17567747splitHere46","contact"
"2132splitHere46","17567747splitHere46","if (jTextField4.getText().equals(<doubleQuotes46><doubleQuotes46>)) {<newline46mondego>   contact.setName(jTextField4.getText());<newline46mondego>}<newline46mondego>"
"2133splitHere46","17567794splitHere46","primary"
"2134splitHere46","17567794splitHere46","<bean id=<doubleQuotes46>b1<doubleQuotes46> class=<doubleQuotes46>test.B<doubleQuotes46> /><newline46mondego><bean id=<doubleQuotes46>b2<doubleQuotes46> class=<doubleQuotes46>test.B<doubleQuotes46> /><newline46mondego><bean id=<doubleQuotes46>b3<doubleQuotes46> class=<doubleQuotes46>test.B<doubleQuotes46> primary=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"2135splitHere46","17567794splitHere46","public class Test {<newline46mondego>    @Autowired<newline46mondego>    B b;<newline46mondego>...<newline46mondego>"
"2136splitHere46","17567990splitHere46","GameScreen.shapeLoader.attachFixture(body, type, fd, 90);<newline46mondego>"
"2137splitHere46","17567991splitHere46","User-agent"
"2138splitHere46","17567991splitHere46","@RequestHeader(<doubleQuotes46>User-Agent<doubleQuotes46>)"
"2139splitHere46","17567991splitHere46","HttpServletResponse"
"2140splitHere46","17567991splitHere46","@Controller<newline46mondego>public class FoobarController {<newline46mondego><newline46mondego>    @RequestMapping(<doubleQuotes46>/path<doubleQuotes46>)<newline46mondego>    @ResponseBody<newline46mondego>    public String getContent(@RequestHeader(<doubleQuotes46>User-Agent<doubleQuotes46>) String userAgent,<newline46mondego>                             HttpServletResponse response) {<newline46mondego>        if (isIE(userAgent)) {<newline46mondego>            response.setContentType(<doubleQuotes46>text/plain<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            response.setContentType(<doubleQuotes46>text/json<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        ...<newline46mondego>        return <doubleQuotes46>{\<doubleQuotes46>key\<doubleQuotes46>:\<doubleQuotes46>value\<doubleQuotes46>}<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2141splitHere46","17568210splitHere46","List<WebElement> buttons = driver.findElements(By.id(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>buttons[0].click();<newline46mondego>buttons[1].click();<newline46mondego>buttons[n].click();<newline46mondego>"
"2142splitHere46","17568222splitHere46","put.execute(MySQL query) <newline46mondego>"
"2143splitHere46","17568222splitHere46","grant all privileges on mydb.* to 'admin'@'localhost' identified by 'pass';<newline46mondego>"
"2144splitHere46","17568343splitHere46","InsertHtmlAction"
"2145splitHere46","17568343splitHere46","InsertHtmlAction"
"2146splitHere46","17568465splitHere46","mBodyText.setTextSize(TypedValue.COMPLEX_UNIT_PX, Textsize);<newline46mondego>"
"2147splitHere46","17568465splitHere46","getTextSize()"
"2148splitHere46","17568465splitHere46","setTextSize(float size)"
"2149splitHere46","17568465splitHere46","setTextSize (int unit, float size)"
"2150splitHere46","17568509splitHere46","Temp2 = Temp1;<newline46mondego>"
"2151splitHere46","17568509splitHere46","Temp2 = Arrays.copyOf(Temp1, Temp1.length);<newline46mondego>"
"2152splitHere46","17568546splitHere46","for(i=0;i<recup.size();i++){<newline46mondego>      text.setText(recup.get(i)+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>      lvariables.add(text);<newline46mondego>      linLayout.addView(lvariables.get(i));<newline46mondego>}<newline46mondego>"
"2153splitHere46","17568546splitHere46","for(i=0;i<recup.size();i++){<newline46mondego>         TextView text=new TextView(this);<newline46mondego>        text.setText(recup.get(i)+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        lvariables.add(text);<newline46mondego>        linLayout.addView(text);<newline46mondego> }<newline46mondego>"
"2154splitHere46","17568546splitHere46","LinearLayout linLayout = new LinearLayout(this); <newline46mondego> linLayout.setOrientation(LinearLayout.VERTICAL);<newline46mondego>"
"2155splitHere46","17568657splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><faces-config<newline46mondego>    xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego></faces-config><newline46mondego>"
"2156splitHere46","17568657splitHere46","@ManagedBean<newline46mondego>@SessionScoped<newline46mondego>public class SessionScopedBean{<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>}<newline46mondego>"
"2157splitHere46","17569019splitHere46","public static void main(String[] args) throws IOException {<newline46mondego><newline46mondego>        char arr[] = new char[5];<newline46mondego>        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>            System.out.println(<doubleQuotes46>Enter input characters and press enter: <doubleQuotes46>); <newline46mondego>        for(int i=0; i<arr.length; i++) {<newline46mondego>            arr[i] = (char) br.read();<newline46mondego>        }       <newline46mondego>        br.close();<newline46mondego>        Arrays.sort(arr);<newline46mondego>            System.out.println(<doubleQuotes46>Sorted Array: <doubleQuotes46>+String.valueOf(arr));   <newline46mondego>    }<newline46mondego>"
"2158splitHere46","17569019splitHere46","List"
"2159splitHere46","17569019splitHere46","List<Character>"
"2160splitHere46","17569130splitHere46","else"
"2161splitHere46","17569130splitHere46","or"
"2162splitHere46","17569130splitHere46","and"
"2163splitHere46","17569130splitHere46","...<newline46mondego>}else {<newline46mondego>    builder.or(new BasicDBObject(mongoKey, mongoValue));<newline46mondego>}<newline46mondego>"
"2164splitHere46","17569303splitHere46","JEditorPane"
"2165splitHere46","17569303splitHere46","CSS"
"2166splitHere46","17569340splitHere46","Path path =  ConstraintViolation.getPropertyPath();<newline46mondego>// a path is an iterable of Path.Node objects<newline46mondego>// the last node element in the path is the element that caused the violation<newline46mondego>// You can get it's name via<newline46mondego>Path.Node node = ...;<newline46mondego>node.getName();<newline46mondego>"
"2167splitHere46","17569349splitHere46","netstat -a -o -n"
"2168splitHere46","17569504splitHere46","/usr/bin/hadoop"
"2169splitHere46","17569504splitHere46","hadoop"
"2170splitHere46","17569504splitHere46","/usr/lib/hadoop-0.20/bin/hadoop"
"2171splitHere46","17569504splitHere46","/usr/bin/hadoop"
"2172splitHere46","17569504splitHere46","hadoop"
"2173splitHere46","17569597splitHere46","<form action=<doubleQuotes46>.<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46>>"
"2174splitHere46","17569597splitHere46","<servlet-mapping>"
"2175splitHere46","17569597splitHere46","web.xml"
"2176splitHere46","17569639splitHere46","'"
"2177splitHere46","17569639splitHere46","MessageFormat"
"2178splitHere46","17569639splitHere46","String"
"2179splitHere46","17569639splitHere46","'"
"2180splitHere46","17569639splitHere46","String text = <newline46mondego>     java.text.MessageFormat.format(<doubleQuotes46>You''re about to delete {0} rows.<doubleQuotes46>, 5);<newline46mondego>                                         ^<newline46mondego>"
"2181splitHere46","17569639splitHere46","String"
"2182splitHere46","17569639splitHere46","You\\'re"
"2183splitHere46","17569639splitHere46","String"
"2184splitHere46","17569639splitHere46","You\re"
"2185splitHere46","17569639splitHere46","Youre"
"2186splitHere46","17569639splitHere46","''"
"2187splitHere46","17569715splitHere46","Type genericType = User.class.getField(<doubleQuotes46>listProp<doubleQuotes46>).getGenericType();<newline46mondego>List<Long> correctList = om.readValue(jsonEntry.getValue(), om.constructType(genericType));<newline46mondego>"
"2188splitHere46","17569936splitHere46","import java.util.regex.Matcher;<newline46mondego>import java.util.regex.Pattern;<newline46mondego><newline46mondego>public class Client {<newline46mondego><newline46mondego>    private static final String PATTERN = <doubleQuotes46><form>(.+?)</form><doubleQuotes46>;<newline46mondego>    private static final Pattern REGEX = Pattern.compile(PATTERN);<newline46mondego><newline46mondego>    private static final boolean ONLY_TAG = true;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        String text = <doubleQuotes46>Hello <form><span><table>Hello Rais</table></span></form> end<doubleQuotes46>;<newline46mondego>        System.out.println(getValues(text, ONLY_TAG));<newline46mondego>        System.out.println(getValues(text, !ONLY_TAG));<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private static String getValues(final String text, boolean flag) {<newline46mondego>        final Matcher matcher = REGEX.matcher(text);<newline46mondego>        String tagValues = null;<newline46mondego>        if (flag) {<newline46mondego>            if (matcher.find()) {<newline46mondego>                tagValues = <doubleQuotes46><form><doubleQuotes46> + matcher.group(1) + <doubleQuotes46></form><doubleQuotes46>;<newline46mondego>            }<newline46mondego><newline46mondego>        } else {<newline46mondego>            tagValues = text.replaceAll(PATTERN, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego>        return tagValues;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2189splitHere46","17569936splitHere46","<form><span><table>Hello Rais</table></span></form><newline46mondego>Hello  end<newline46mondego>"
"2190splitHere46","17570002splitHere46","new"
"2191splitHere46","17570002splitHere46","List<DataSource> dataSources = Array.asList(<newline46mondego>    new DataSourceOne(),<newline46mondego>    new DataSourceTwo(),<newline46mondego>    ...<newline46mondego>);<newline46mondego>"
"2192splitHere46","17570026splitHere46","if (e.getStateChange() == ItemEvent.SELECTED) {"
"2193splitHere46","17570029splitHere46","String[] args;<newline46mondego>args = new String[] {<doubleQuotes46>FOO<doubleQuotes46>, <doubleQuotes46>BAR<doubleQuotes46>}; <newline46mondego>"
"2194splitHere46","17570117splitHere46","eclipse.classpath.file {<newline46mondego>    whenMerged {  cp -> <newline46mondego>        // remove library dependencies<newline46mondego>        def toBeRemoved = cp.entries.findAll { it instanceof Library <newline46mondego>              && ((Library) it).library.path.contains('someProject') }<newline46mondego><newline46mondego>        //configure the project dependencies:<newline46mondego>        def toBeAdded = [ new ProjectDependency('/someProject', null)]<newline46mondego><newline46mondego>        cp.entries -= toBeRemoved<newline46mondego>        cp.entries += toBeAdded<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2195splitHere46","17570117splitHere46","includeFlat 'database'<newline46mondego>"
"2196splitHere46","17570117splitHere46","dependencies {<newline46mondego>    ...<newline46mondego>    compile project(':database')<newline46mondego>    ...           <newline46mondego>}<newline46mondego>"
"2197splitHere46","17570121splitHere46",".*"
"2198splitHere46","17570121splitHere46",".*?"
"2199splitHere46","17570121splitHere46","/element|1717_Lorem/64/"
"2200splitHere46","17570121splitHere46","480"
"2201splitHere46","17570121splitHere46","/element[^/]+/480/<newline46mondego>"
"2202splitHere46","17570274splitHere46","boolean b = (pdfWriter.getDirectContent().toString()).contains(<doubleQuotes46>invisible text here<doubleQuotes46>);<newline46mondego>"
"2203splitHere46","17570274splitHere46","PdfPageEvent"
"2204splitHere46","17570274splitHere46","onEndPage()"
"2205splitHere46","17570274splitHere46","onEndPage()."
"2206splitHere46","17570274splitHere46","onEndPage()"
"2207splitHere46","17570310splitHere46","public boolean isMain;<newline46mondego><newline46mondego>public int i;<newline46mondego><newline46mondego>public String tmpVal;<newline46mondego><newline46mondego>private Vector<WifiDescription> mWifiDescription;<newline46mondego>private WifiDescription currentWifi;<newline46mondego><newline46mondego>/**<newline46mondego> * @return<newline46mondego> */<newline46mondego>public Vector<WifiDescription> getWifiDescription() {<newline46mondego>    Log.v(<doubleQuotes46>test parsage getWifiDescription<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>    return mWifiDescription;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void startDocument() throws SAXException {<newline46mondego>    // create new object<newline46mondego>    i=0;<newline46mondego>    Log.v(<doubleQuotes46>test parsage Start<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>    this.mWifiDescription = new Vector<WifiDescription>();<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Override<newline46mondego>public void endDocument() throws SAXException {<newline46mondego>    // nothing we need to do here<newline46mondego>    Log.v(<doubleQuotes46>test parsage End<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void startElement(String namespaceURI, String localName, String qName, Attributes atts)<newline46mondego>        throws SAXException {<newline46mondego>    Log.v(<doubleQuotes46>test parsage StartElement<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>    if(localName.equals(<doubleQuotes46>main<doubleQuotes46>)) {<newline46mondego>        isMain=true;<newline46mondego>        Log.v(<doubleQuotes46>test parsage main<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    if(localName.equals(<doubleQuotes46>wifi<doubleQuotes46>) && isMain ) {<newline46mondego>        this.currentWifi = new WifiDescription();<newline46mondego><newline46mondego>        tmpVal = atts.getValue(WifiDescription.MSSID);<newline46mondego>        this.currentWifi.mBSSID=tmpVal;<newline46mondego><newline46mondego>        tmpVal = atts.getValue(WifiDescription.LATITUDE);<newline46mondego>        this.currentWifi.mLatitude=tmpVal;<newline46mondego><newline46mondego>        tmpVal = atts.getValue(WifiDescription.LONGITUDE);<newline46mondego>        this.currentWifi.mLongitude=tmpVal;<newline46mondego><newline46mondego>        tmpVal = atts.getValue(WifiDescription.SSID);<newline46mondego>        this.currentWifi.mSSID=tmpVal;<newline46mondego>        isWifi=true;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void endElement(String namespaceURI, String localName, String qName) throws SAXException {<newline46mondego><newline46mondego>    Log.v(<doubleQuotes46>test parsage EndElement<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>    if(localName.equals(<doubleQuotes46>wifi<doubleQuotes46>)) {<newline46mondego>        //System.out.println(<doubleQuotes46>passe dans End landmark<doubleQuotes46>);<newline46mondego>        isWifi=false;<newline46mondego>        i++;<newline46mondego>        this.mWifiDescription.add(currentWifi);<newline46mondego>    }<newline46mondego>    Log.v(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>DONE \n<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2208splitHere46","17570310splitHere46","public class WifiParser  {<newline46mondego><newline46mondego>public static Vector<WifiDescription> parse(InputStream file) {<newline46mondego>    Vector<WifiDescription> wifiDescription = new Vector<WifiDescription>();<newline46mondego>    Log.d(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>test Parsage<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        // create a XMLReader from SAXParser<newline46mondego>        XMLReader xmlReader = SAXParserFactory.newInstance().newSAXParser().getXMLReader();<newline46mondego>        Log.e(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>xmlReader<doubleQuotes46>);<newline46mondego>        WifiHandler wifiHandler = new WifiHandler();<newline46mondego>        Log.e(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>WifiHandler<doubleQuotes46>);<newline46mondego>        xmlReader.setContentHandler(wifiHandler);<newline46mondego>        Log.e(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>setContentHandler<doubleQuotes46>);<newline46mondego>        xmlReader.parse(new InputSource(file));<newline46mondego>        Log.e(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>parse<doubleQuotes46>);<newline46mondego>        wifiDescription = wifiHandler.getWifiDescription();<newline46mondego>        Log.e(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>wifi description<doubleQuotes46>);           <newline46mondego>    } <newline46mondego><newline46mondego>    catch(Exception ex) {<newline46mondego>        Log.d(<doubleQuotes46>XML ex.getMessage<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> + ex.getMessage());<newline46mondego>        ex.printStackTrace();<newline46mondego><newline46mondego>        Log.d(<doubleQuotes46>XML<doubleQuotes46>, <doubleQuotes46>WifiParser: parse() failed<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    return wifiDescription;<newline46mondego>}<newline46mondego>"
"2209splitHere46","17570310splitHere46","public void returnTableParseXml(){<newline46mondego>    try {<newline46mondego>        wifis = WifiParser.parse(getAssets().open(<doubleQuotes46>wifi.xml<doubleQuotes46>));<newline46mondego>    }<newline46mondego>    catch (IOException e) <newline46mondego>    {<newline46mondego>        Log.d(<doubleQuotes46>XML Main<doubleQuotes46>,<doubleQuotes46>onCreate(): parse() failed<doubleQuotes46>);<newline46mondego>        return;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2210splitHere46","17570310splitHere46","// Description Wifi<newline46mondego>    public String mLatitude;<newline46mondego>    public String mLongitude;<newline46mondego>    public String mBSSID;<newline46mondego>    public String mSSID;<newline46mondego>    public String mName;<newline46mondego><newline46mondego><newline46mondego>    public static final String WIFI = <doubleQuotes46>wifi<doubleQuotes46>;<newline46mondego><newline46mondego>    // vector usage<newline46mondego>    public static final String LATITUDE = <doubleQuotes46>latitude<doubleQuotes46>;<newline46mondego>    public static final String LONGITUDE =<doubleQuotes46>longitude<doubleQuotes46>;<newline46mondego>    public static final String SSID = <doubleQuotes46>ssid<doubleQuotes46>;<newline46mondego>    public static final String MSSID =<doubleQuotes46>bssid<doubleQuotes46>;<newline46mondego>    public static final String NAME =<doubleQuotes46>name<doubleQuotes46>;<newline46mondego>"
"2211splitHere46","17570310splitHere46","<main><newline46mondego>    <wifi<newline46mondego>        bssid=<doubleQuotes46>..:..:..:..:..:..<doubleQuotes46><newline46mondego>        latitude=<doubleQuotes46>...<doubleQuotes46><newline46mondego>        longitude=<doubleQuotes46>...<doubleQuotes46><newline46mondego>        ssid=<doubleQuotes46>...<doubleQuotes46> ><newline46mondego>    </wifi><newline46mondego>       ...<newline46mondego></main><newline46mondego>"
"2212splitHere46","17570379splitHere46","serverSocket.setSoTimeout(10000); // 10 secs. time is in milisecs.<newline46mondego>socket=serverSocket.accept();<newline46mondego>"
"2213splitHere46","17570547splitHere46","struts.xml"
"2214splitHere46","17570547splitHere46","struts.properties"
"2215splitHere46","17570547splitHere46","<constant name=<doubleQuotes46>struts.action.extension<doubleQuotes46> value=<doubleQuotes46>action,,<doubleQuotes46>/> <newline46mondego>"
"2216splitHere46","17570547splitHere46","action"
"2217splitHere46","17570664splitHere46","select c.id, c.name, a.id, a.street<newline46mondego>from Company c<newline46mondego>left join c.addresses a on a.addressStatusId = 1<newline46mondego>"
"2218splitHere46","17570664splitHere46","query.from(c)<newline46mondego>     .leftJoin(c.addresses, a)<newline46mondego>     .on(a.addressStatusId.eq(1))<newline46mondego>     .list(c.id, c.name, a.id, a.street)<newline46mondego>"
"2219splitHere46","17570747splitHere46","jni.h"
"2220splitHere46","17570853splitHere46","NullPointerException"
"2221splitHere46","17570853splitHere46","Integer vacationId = null;<newline46mondego>Query query = entityManager.createQuery(<doubleQuotes46>from Vacation v where v.id = :id<doubleQuotes46>)<newline46mondego>            .setParameter(<doubleQuotes46>id<doubleQuotes46>, vacationId);<newline46mondego>"
"2222splitHere46","17570853splitHere46","Random"
"2223splitHere46","17570882splitHere46","public class Dispatcher {<newline46mondego><newline46mondego>    private Map<String, ActionHandler> actionHandlerMap = new HashMap<String, ActionHandler>();<newline46mondego><newline46mondego>    public void perform(String action) {<newline46mondego>        ActionHandler handler = actionHandlerMap.get(action);<newline46mondego><newline46mondego>        if (null == handler) {<newline46mondego>            // no handler - throw an exception?<newline46mondego>        }<newline46mondego><newline46mondego>        handler.execute();<newline46mondego>    }<newline46mondego><newline46mondego>    public void addActionHandler(ActionHandler handler) {<newline46mondego>        actionHandlerMap.put(handler.getAction(), handler);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public interface ActionHandler {<newline46mondego><newline46mondego>    public String getAction();<newline46mondego>    public void execute();<newline46mondego><newline46mondego>}<newline46mondego>"
"2224splitHere46","17570924splitHere46","Filter.destroy"
"2225splitHere46","17570924splitHere46","tomcat"
"2226splitHere46","17570924splitHere46","jetty"
"2227splitHere46","17570924splitHere46","Filter.destroy"
"2228splitHere46","17570924splitHere46","ServletContextListener.contextDestroyed"
"2229splitHere46","17571076splitHere46","public class Mainactivity extends Activity{<newline46mondego>ArrayList<String> ID = new ArrayList<String>();<newline46mondego>ArrayList<String> TITLE= new ArrayList<String>();<newline46mondego>ArrayList<String> CONTENT= new ArrayList<String>();<newline46mondego>ArrayList<String> COUNT= new ArrayList<String>();<newline46mondego><newline46mondego>protected onCreate(Bundle savedInastanceState){<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public void getData() {<newline46mondego>         //your json code<newline46mondego>      JSONArray contacts = jsonObject.getJSONArray(<doubleQuotes46>post<doubleQuotes46>);//(url);<newline46mondego>          for(int i = 0; i < contacts.length(); i++){<newline46mondego>              JSONObject c = contacts.getJSONObject(i);<newline46mondego>              String id = c.getString(<doubleQuotes46>id<doubleQuotes46>);<newline46mondego>              String title = c.getString(<doubleQuotes46>title<doubleQuotes46>);<newline46mondego>              String  content = c.getString(<doubleQuotes46>content<doubleQuotes46>);<newline46mondego>              String  count = c.getString(<doubleQuotes46>count<doubleQuotes46>);<newline46mondego>             ID.add(id);<newline46mondego>             TITLE.add(title);<newline46mondego>             CONTENT.add(content);<newline46mondego>             COUNT.add(count);<newline46mondego>      }<newline46mondego>  } catch (Exception e) {<newline46mondego>      e.printStackTrace();<newline46mondego>  }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>private class GetDataAsyncTask extends AsyncTask<Void, Void, Void> {<newline46mondego>        private ProgressDialog Dialog = new ProgressDialog(MainActivity.this);<newline46mondego><newline46mondego>        protected void onPreExecute() {<newline46mondego>            //<newline46mondego>        }<newline46mondego>        @Override<newline46mondego>        protected void onPostExecute(Void result) {<newline46mondego>            super.onPostExecute(result);<newline46mondego>            Dialog.dismiss();<newline46mondego>            //<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected Void doInBackground(Void... params) {<newline46mondego><newline46mondego>            getData();<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>      @Override<newline46mondego>      protected void onPostExecute(Void result) {<newline46mondego><newline46mondego>             for(int i=0; i<ID.size(); i++){<newline46mondego>             mDbHelper=new GinfyDbAdapter(MainActivity.this);<newline46mondego>              mDbHelper.open();<newline46mondego>              mDbHelper.saveCategoryRecord(new Category(ID.get(i),TITLE.get(i),CONTENT.get(i),COUNTER.get(i)));<newline46mondego>              }<newline46mondego>    }<newline46mondego>"
"2230splitHere46","17571173splitHere46","adapter.clear();<newline46mondego>adapter.addAll(<doubleQuotes46>new 1<doubleQuotes46>,<doubleQuotes46> new 2<doubleQuotes46>,<doubleQuotes46>new 3<doubleQuotes46>);<newline46mondego>adapter.notifyDataSetChanged();<newline46mondego>"
"2231splitHere46","17571387splitHere46","ColumnFormat"
"2232splitHere46","17571387splitHere46","format command"
"2233splitHere46","17571387splitHere46","{'short g'}"
"2234splitHere46","17571387splitHere46","format"
"2235splitHere46","17571387splitHere46","shortg"
"2236splitHere46","17571387splitHere46","ColumnFormat"
"2237splitHere46","17571387splitHere46","short g"
"2238splitHere46","17571387splitHere46","format"
"2239splitHere46","17571387splitHere46","char"
"2240splitHere46","17571387splitHere46","sprintf"
"2241splitHere46","17571406splitHere46","conf.set(<doubleQuotes46>fs.default.name<doubleQuotes46>, <doubleQuotes46>hdfs://NN_HOST:9000<doubleQuotes46>);<newline46mondego>conf.set(<doubleQuotes46>mapred.job.tracker<doubleQuotes46>, <doubleQuotes46>JT_HOST:9001<doubleQuotes46>);<newline46mondego>"
"2242splitHere46","17571504splitHere46","Document doc = Jsoup.connect(<doubleQuotes46>http://www.ncpublicschools.org/...<doubleQuotes46>).get();<newline46mondego>Elements schools = doc.select(<doubleQuotes46>div.indenter p span.colorText2 a<doubleQuotes46>);<newline46mondego>"
"2243splitHere46","17571648splitHere46","env.JAVA_HOME"
"2244splitHere46","17571648splitHere46","JAVA_HOME"
"2245splitHere46","17571714splitHere46","String stringWithPeter = <doubleQuotes46>Hey I am Peter I work as a Software Engineer.<doubleQuotes46> +<newline46mondego>    System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>) + <doubleQuotes46>I know Java and I am new to RegEx<doubleQuotes46>;<newline46mondego>"
"2246splitHere46","17571714splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>(?<=Hey)(.*)(?=Reg)<doubleQuotes46>, Pattern.DOTALL);<newline46mondego>"
"2247splitHere46","17571714splitHere46","String stringWithPeter = <doubleQuotes46>Hey I am Peter I work as a Software Engineer.\nI know Java and I am new to RegEx<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>(?<=Hey)([^\r]*)(?=Reg)<doubleQuotes46>);<newline46mondego>"
"2248splitHere46","17571783splitHere46","private static String headerURL(Page checkedPage, String url, String fragment) {<newline46mondego>    url += (checkedPage!=null) ? <doubleQuotes46>.html<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>;<newline46mondego>    url += (!<doubleQuotes46><doubleQuotes46>.equals(fragment)) ? <doubleQuotes46>#$fragment<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>;<newline46mondego>    return url;<newline46mondego>}<newline46mondego>"
"2249splitHere46","17571848splitHere46","user.getUserId()"
"2250splitHere46","17571968splitHere46","<dependency><newline46mondego>        <groupId>com.google.api-client</groupId><newline46mondego>        <artifactId>google-api-client-android</artifactId><newline46mondego>        <version>1.15.0-rc</version><newline46mondego>        <exclusions><newline46mondego>            <exclusion><newline46mondego>                <groupId>com.google.android.google-play-services</groupId><newline46mondego>                <artifactId>google-play-services</artifactId><newline46mondego>            </exclusion><newline46mondego>        </exclusions><newline46mondego>    </dependency><newline46mondego>"
"2251splitHere46","17571980splitHere46","double x = 4.35;<newline46mondego>"
"2252splitHere46","17572017splitHere46","<activity android:name=<doubleQuotes46>.MainActivity<doubleQuotes46> android:label=<doubleQuotes46>@string/app_name<doubleQuotes46> /><newline46mondego>"
"2253splitHere46","17572017splitHere46","startActivity(new Intent(this, MainActivity.class));<newline46mondego>startActivity(new Intent(<doubleQuotes46>your.package.MainActivity<doubleQuotes46>));<newline46mondego>"
"2254splitHere46","17572068splitHere46","class Outer<newline46mondego>{<newline46mondego>     int outer = 0;<newline46mondego>     class Inner<newline46mondego>     {<newline46mondego>          int inner = Outer.this.outer; //(or just outer as it is not shadowed)<newline46mondego>          // instance initializer block:<newline46mondego>          {<newline46mondego>              inner = 3; //or whatever, even outer = 3<newline46mondego>          }<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"2255splitHere46","17572068splitHere46","class Outer<newline46mondego>{<newline46mondego>     int outer = 0;<newline46mondego>     class Inner<newline46mondego>     {<newline46mondego>          int inner = Outer.this.outer; //(or just outer as it is not shadowed)<newline46mondego>          Inner() {<newline46mondego>              inner = 3; //or whatever, even outer = 3<newline46mondego>          }<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"2256splitHere46","17572144splitHere46","myFunction(new String[]{<doubleQuotes46>string1<doubleQuotes46>, <doubleQuotes46>string2<doubleQuotes46>});<newline46mondego>"
"2257splitHere46","17572445splitHere46","WebApplicationContext"
"2258splitHere46","17572445splitHere46","spring-web"
"2259splitHere46","17572445splitHere46","ContextLoaderListener"
"2260splitHere46","17572445splitHere46","web.xml"
"2261splitHere46","17572445splitHere46","<listener><newline46mondego>   <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><newline46mondego></listener><newline46mondego><newline46mondego><context-param><newline46mondego>  <param-name>contextConfigLocation</param-name><newline46mondego>  <param-value>/WEB-INF/applicationContext*.xml</param-value><newline46mondego></context-param><newline46mondego>"
"2262splitHere46","17572445splitHere46","ApplicationContext"
"2263splitHere46","17572445splitHere46","ApplicationContext ctx = WebApplicationContextUtils<newline46mondego>    .getRequiredWebApplicationContext(getServletContext());<newline46mondego>MyBean myBean = (MyBean) ctx.getBean(<doubleQuotes46>myBean<doubleQuotes46>);<newline46mondego>myBean.doSomething();<newline46mondego>"
"2264splitHere46","17572513splitHere46","You should try this:<newline46mondego>"
"2265splitHere46","17572849splitHere46","java.util.List"
"2266splitHere46","17572849splitHere46","List"
"2267splitHere46","17572849splitHere46","import scala.collection.JavaConversions._<newline46mondego>"
"2268splitHere46","17572849splitHere46","val notifications:List[PushedNotification] = javapns.Push.payload(payload, keystoreFile, keystorePassword, false, devices)<newline46mondego>"
"2269splitHere46","17572849splitHere46","val notifications:List[PushedNotification] = javapns.Push.payload(payload, keystoreFile, keystorePassword, false, devices).toList<newline46mondego>"
"2270splitHere46","17572849splitHere46","payload"
"2271splitHere46","17572849splitHere46","alert"
"2272splitHere46","17572849splitHere46","val results = javapns.Push.payload(payload, keystoreFile, keystorePassword, false, devices)<newline46mondego><newline46mondego>for(notification <- result.getFailedNotifications.toList){<newline46mondego>    /* Add code here to remove invalid tokens from database */<newline46mondego>}<newline46mondego>"
"2273splitHere46","17572898splitHere46","java.sql.Date"
"2274splitHere46","17572983splitHere46","Table"
"2275splitHere46","17572983splitHere46","ArrayTable"
"2276splitHere46","17572983splitHere46","ForwardingTable"
"2277splitHere46","17572983splitHere46","HashBasedTable"
"2278splitHere46","17572983splitHere46","HashMap<R, HashMap<C, V>"
"2279splitHere46","17572983splitHere46","ImmutableTable"
"2280splitHere46","17572983splitHere46","TreeBasedTable"
"2281splitHere46","17572983splitHere46","TreeMap<R, TreeMap<C, V>"
"2282splitHere46","17572983splitHere46","Table<Vertex, Vertex, Double> weightedGraph = HashBasedTable.create();<newline46mondego>weightedGraph.put(v1, v2, 4);<newline46mondego>weightedGraph.put(v1, v3, 20);<newline46mondego>weightedGraph.put(v2, v3, 5);<newline46mondego><newline46mondego>weightedGraph.row(v1); // returns a Map mapping v2 to 4, v3 to 20<newline46mondego>weightedGraph.column(v3); // returns a Map mapping v1 to 20, v2 to 5<newline46mondego>"
"2283splitHere46","17573035splitHere46","while(serverOnline) <newline46mondego>"
"2284splitHere46","17573108splitHere46","org.eclipse.ui.IPartListener2"
"2285splitHere46","17573108splitHere46","PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().addPartListener(<myPartListener>)<newline46mondego>"
"2286splitHere46","17573124splitHere46","ScrollPane scrollPane = new ScrollPane();<newline46mondego>scrollPane.setFitToHeight(true);<newline46mondego>scrollPane.setFitToWidth(true);<newline46mondego>"
"2287splitHere46","17573124splitHere46","resize()"
"2288splitHere46","17573406splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>public class Game extends JPanel {<newline46mondego>    /*<newline46mondego>     * Now x and y are instance variables,<newline46mondego>     * whose values you can change at each<newline46mondego>     * MouseMove Event, and call repaint()<newline46mondego>     * to see the effects<newline46mondego>     */<newline46mondego><newline46mondego>    private int x;<newline46mondego>    private int y;<newline46mondego>    private MouseAdapter mouseActions =<newline46mondego>        new MouseAdapter() {<newline46mondego>        @Override<newline46mondego>        public void mouseMoved(MouseEvent me) {<newline46mondego>            /*<newline46mondego>             * Now as the Mouse moves, we simply<newline46mondego>             * updating the instance variables,<newline46mondego>             * i.e. x and y to the new values<newline46mondego>             * of the Mouse Location and calling<newline46mondego>             * repaint() to draw the rectangle.<newline46mondego>             * Since this class (Game) extends JPanel,<newline46mondego>             * hence all the functions of the JPanel<newline46mondego>             * belongs to this class, hence like<newline46mondego>             * as we call any other method of this<newline46mondego>             * class, without using the object,<newline46mondego>             * we can call repaint, likewise.<newline46mondego>             */<newline46mondego>            x = me.getX();<newline46mondego>            y = me.getY();<newline46mondego>            repaint();<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    /*<newline46mondego>     * This JPanel panel is unnecessary in <newline46mondego>     * this case, since the class itself <newline46mondego>     * extends JPanel, hence you can use<newline46mondego>     * this (keyword) to access the instance<newline46mondego>     */<newline46mondego>    //JPanel panel;<newline46mondego>    // Not needed for this case.<newline46mondego>    //JButton button2;<newline46mondego>    //JButton button;<newline46mondego>    public void game() {<newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Game<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>        frame.setResizable(false);<newline46mondego>        addMouseMotionListener(mouseActions);<newline46mondego>        /*<newline46mondego>         * Here this means the instance<newline46mondego>         * of the current class<newline46mondego>         */<newline46mondego>        frame.add(this);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>     * While overriding methods of the <newline46mondego>     * super class, try to keep the <newline46mondego>     * ACCESS SPECIFIER, as close to<newline46mondego>     * the original thingy as possible<newline46mondego>     * In this case, it's protected<newline46mondego>     * and not public<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego><newline46mondego>        /*<newline46mondego>         * Do not perform calculation in this method<newline46mondego>         * atleast.<newline46mondego>         */<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.fillRect(x, y, 100, 100);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Runnable runnable = new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new Game().game();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        EventQueue.invokeLater(runnable);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return new Dimension(500, 500);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2289splitHere46","17573463splitHere46","java -jar YourJarFile.jar"
"2290splitHere46","17573463splitHere46","/etc/rc.d/rc.local"
"2291splitHere46","17573542splitHere46","Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/ECB/PKCS5Padding<doubleQuotes46>);<newline46mondego>"
"2292splitHere46","17573548splitHere46","private class FacilityElement extends javax.swing.JLabel implements javax.swing.ListCellRenderer {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {<newline46mondego>        if(isSelected) {<newline46mondego>            setBackground(list.getSelectionBackground());<newline46mondego>            setForeground(list.getSelectionForeground());<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            setBackground(list.getBackground());<newline46mondego>            setForeground(list.getForeground());<newline46mondego>        }<newline46mondego>        setFont(list.getFont());<newline46mondego>        if (value instanceof Facility) { // Try this<newline46mondego>            setText(<doubleQuotes46> <doubleQuotes46> + ((Facility) value).getName()); <newline46mondego>        }    <newline46mondego>        setOpaque(true);<newline46mondego><newline46mondego>        return this;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2293splitHere46","17573550splitHere46","void cls() {<newline46mondego>    // ???<newline46mondego>}<newline46mondego><newline46mondego>void cls(String source){<newline46mondego>    if(source.isEmpty()){<newline46mondego>        source = <doubleQuotes46>Unknown source<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    output.setText(<doubleQuotes46>Screen cleared from <doubleQuotes46> + source);<newline46mondego>}<newline46mondego>"
"2294splitHere46","17573550splitHere46","void cls(String... sources){<newline46mondego>    if (sources.length > 0) {<newline46mondego>        // ???<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2295splitHere46","17573608splitHere46","HttpServletRequest"
"2296splitHere46","17573608splitHere46","public String handleRequest(HttpServletRequest request) {    <newline46mondego>   try {<newline46mondego>       request.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>       String shortname = request.getParameter(<doubleQuotes46>shortname<doubleQuotes46>);<newline46mondego><newline46mondego>       (...)<newline46mondego>   }<newline46mondego>   catch (UnsupportedEncodingException e) {<newline46mondego>       // ...<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2297splitHere46","17573650splitHere46","CopyOnWriteArrayList"
"2298splitHere46","17573650splitHere46","ArrayList"
"2299splitHere46","17573650splitHere46","get"
"2300splitHere46","17573650splitHere46","contains"
"2301splitHere46","17573665splitHere46","->"
"2302splitHere46","17573665splitHere46",","
"2303splitHere46","17573665splitHere46","->"
"2304splitHere46","17573665splitHere46",","
"2305splitHere46","17573665splitHere46","String value = <doubleQuotes46>[[0, 0] -> 0, [0, 1] -> 1, [0, 2] -> 2, [1, 0] -> 3, [0, 4] -> 1, [0, 1] -> 2, [0, 6] -> 3, else -> 2<doubleQuotes46>;<newline46mondego>value = value.replaceAll(<doubleQuotes46>\\[<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>value = value.replaceAll(<doubleQuotes46>\\]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>value = value.replaceAll(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);               // remove spaces, too,<newline46mondego>                                                 // no need to trim later<newline46mondego>int start = 0;<newline46mondego>while (start < value.length()) {<newline46mondego>    int arrow = value.indexOf(<doubleQuotes46>-><doubleQuotes46>, start);      // next -> after start<newline46mondego>    int comma = value.indexOf(<doubleQuotes46>,<doubleQuotes46>, arrow);       // next comma after -><newline46mondego>    comma = comma > -1 ? comma : value.length(); // final segment?<newline46mondego><newline46mondego>    String segment = value.substring(start, comma);<newline46mondego>    String key = segment.split(<doubleQuotes46>-><doubleQuotes46>)[0];         // before -><newline46mondego>    String val = segment.split(<doubleQuotes46>-><doubleQuotes46>)[1];         // after -><newline46mondego><newline46mondego>    if (key.contains(<doubleQuotes46>else<doubleQuotes46>)) {<newline46mondego>        System.out.println(<doubleQuotes46>Default: <doubleQuotes46> + val);<newline46mondego>    } else {<newline46mondego>        String[] keys = key.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        System.out.println(Arrays.toString(keys) + <doubleQuotes46>: <doubleQuotes46> + val);<newline46mondego>    }<newline46mondego>    start = comma + 1;                           // continue after segment<newline46mondego>}<newline46mondego>"
"2306splitHere46","17573665splitHere46","\[\d+(, \d+)*\] -> \d+"
"2307splitHere46","17573665splitHere46","else"
"2308splitHere46","17573665splitHere46","String regex = <doubleQuotes46>(\\[\\d+(, \\d+)*\\] -> \\d+)<doubleQuotes46>;<newline46mondego>Matcher matcher = Pattern.compile(regex).matcher(value);<newline46mondego>while (matcher.find()) {<newline46mondego>    System.out.println(matcher.group());<newline46mondego>}<newline46mondego>"
"2309splitHere46","17573665splitHere46","matcher.group()"
"2310splitHere46","17573665splitHere46","<doubleQuotes46>[0, 0] -> 0<doubleQuotes46>"
"2311splitHere46","17573875splitHere46","saveOrUpdate"
"2312splitHere46","17573875splitHere46","saveOrUpdate"
"2313splitHere46","17574077splitHere46","@XmlElementWrapper"
"2314splitHere46","17574077splitHere46","@XmlElementWrapper<newline46mondego>@XmlElement(name=<doubleQuotes46>employee<doubleQuotes46>)<newline46mondego>protected List<Employee> employees;<newline46mondego>"
"2315splitHere46","17574116splitHere46","original"
"2316splitHere46","17574116splitHere46","cloned"
"2317splitHere46","17574116splitHere46","original"
"2318splitHere46","17574116splitHere46","clone()"
"2319splitHere46","17574116splitHere46","cloned.name"
"2320splitHere46","17574116splitHere46","original.name"
"2321splitHere46","17574116splitHere46","original.name"
"2322splitHere46","17574116splitHere46","original.name"
"2323splitHere46","17574116splitHere46","cloned.name"
"2324splitHere46","17574116splitHere46","cloned.name"
"2325splitHere46","17574116splitHere46","clone.name"
"2326splitHere46","17574116splitHere46","original.name"
"2327splitHere46","17574116splitHere46","clone"
"2328splitHere46","17574116splitHere46","original"
"2329splitHere46","17574150splitHere46","input"
"2330splitHere46","17574182splitHere46","List<T>"
"2331splitHere46","17574182splitHere46","ArrayList<T>"
"2332splitHere46","17574182splitHere46","IEnumerable<T>"
"2333splitHere46","17574182splitHere46","Iterator<T>"
"2334splitHere46","17574182splitHere46","AsEnumerable"
"2335splitHere46","17574182splitHere46","List<T>"
"2336splitHere46","17574182splitHere46","IEnumerable<T>"
"2337splitHere46","17574182splitHere46","IEnumerable<BigInteger> primes = PRIMES;<newline46mondego>"
"2338splitHere46","17574182splitHere46","AsEnumerable"
"2339splitHere46","17574439splitHere46","finally"
"2340splitHere46","17574439splitHere46","a"
"2341splitHere46","17574439splitHere46","return"
"2342splitHere46","17574439splitHere46","finally"
"2343splitHere46","17574439splitHere46","...<newline46mondego>finally {<newline46mondego>    System.out.println(<doubleQuotes46>Finally executed<doubleQuotes46>);<newline46mondego>    return 1;<newline46mondego>}<newline46mondego>"
"2344splitHere46","17574454splitHere46","directory"
"2345splitHere46","17574454splitHere46","includes"
"2346splitHere46","17574454splitHere46","<filtering>true</filtering>"
"2347splitHere46","17574454splitHere46","<filtering>false</filtering>"
"2348splitHere46","17574454splitHere46","excludes"
"2349splitHere46","17574454splitHere46","<resources><newline46mondego>    <resource><newline46mondego>        <directory>${basedir}/src/main/resources</directory><newline46mondego>        <filtering>true</filtering><newline46mondego>        <includes><newline46mondego>            <!-- whatever is defined here will have filters applied --><newline46mondego>            <include>**/UI.gwt.xml</include><newline46mondego>        </includes><newline46mondego>    </resource><newline46mondego>    <resource><newline46mondego>        <directory>${basedir}/src/main/resources</directory><newline46mondego>        <filtering>false</filtering><newline46mondego>        <!-- everything in this directory remains the same (no filters) --><newline46mondego>        <excludes><newline46mondego>            <!-- the excludes found here will be altered by the filters in the first resource set --><newline46mondego>            <!-- so we need to define them as excluded from the files that should not have filters applied --><newline46mondego>            <exclude>**/UI.gwt.xml</exclude><newline46mondego>        </excludes><newline46mondego>    </resource><newline46mondego></resources><newline46mondego>"
"2350splitHere46","17574508splitHere46","firstname1"
"2351splitHere46","17574508splitHere46","@Test<newline46mondego>public static void main() throws IOException {<newline46mondego> //some code here<newline46mondego>  String firstname1 = array.get(2).get(1);<newline46mondego>   UserClassExperimental3.userSignup( firstName1 );<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class UserClassExperimental3 extends CSVData  {<newline46mondego>   public static void userSignup( String firstNameArg ) throws InterruptedException {<newline46mondego>     //some code here   <newline46mondego>     String firstname = firstnameArg; // Now it works<newline46mondego>   } <newline46mondego>}<newline46mondego>"
"2352splitHere46","17574508splitHere46","@Test<newline46mondego>public static void main() throws IOException {<newline46mondego> //some code here<newline46mondego>   String firstname1 = array.get(2).get(1);<newline46mondego>   UserClassExperimental3 instance = new UserClassExperimental3( firstName1 );<newline46mondego>   instance.userSignup();<newline46mondego>}<newline46mondego><newline46mondego>public class UserClassExperimental3 extends CSVData  {<newline46mondego>   private String m_firstName;<newline46mondego>   public UserClassExperimental3( String firstName ) {<newline46mondego>      m_firstName = firstName;<newline46mondego>   }<newline46mondego>   public void userSignup() throws InterruptedException {<newline46mondego>     //some code here   <newline46mondego>     String firstname = m_firstname; // Now it works<newline46mondego>   } <newline46mondego>}<newline46mondego>"
"2353splitHere46","17574508splitHere46","String firstname1 = array.get(2).get(1);<newline46mondego>   CSVData instance = new UserClassExperimental3( firstName1 );<newline46mondego>   instance.userSignup();<newline46mondego>"
"2354splitHere46","17574683splitHere46",")"
"2355splitHere46","17574683splitHere46","("
"2356splitHere46","17574683splitHere46",":"
"2357splitHere46","17574683splitHere46",";"
"2358splitHere46","17574924splitHere46","String.intern()"
"2359splitHere46","17574924splitHere46","myMap.put(line[0], line[1].intern())"
"2360splitHere46","17574924splitHere46","keys().size()"
"2361splitHere46","17574924splitHere46","values().size()"
"2362splitHere46","17575003splitHere46","KeyStroke keyStroke = KeyStroke.getKeyStroke(<doubleQuotes46>TAB<doubleQuotes46>);<newline46mondego>Object actionKey = table.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT)<newline46mondego>        .get(keyStroke );<newline46mondego>final Action action = table.getActionMap().get(actionKey);<newline46mondego>Action wrapper = new AbstractAction() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        JTable table = (JTable) e.getSource();<newline46mondego>        int lastRow = table.getRowCount() - 1;<newline46mondego>        int lastColumn = table.getColumnCount() -1;<newline46mondego>        if (table.getSelectionModel().getLeadSelectionIndex() == lastRow <newline46mondego>                && table.getColumnModel().getSelectionModel()<newline46mondego>                        .getLeadSelectionIndex() == lastColumn) {<newline46mondego>              return;<newline46mondego>        }<newline46mondego>        action.actionPerformed(e);<newline46mondego>    }<newline46mondego><newline46mondego>};<newline46mondego>table.getActionMap().put(actionKey, wrapper);<newline46mondego>"
"2363splitHere46","17575021splitHere46","String doc = ....<newline46mondego>byte[] bytes = doc.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>String doc2 = new String(bytes, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"2364splitHere46","17575021splitHere46","doc"
"2365splitHere46","17575021splitHere46","doc2"
"2366splitHere46","17575021splitHere46","byte[]"
"2367splitHere46","17575086splitHere46","thread.suspend()"
"2368splitHere46","17575086splitHere46","thread.resume()"
"2369splitHere46","17575086splitHere46","final Object lock = new Object();<newline46mondego>...<newline46mondego>synchronized(lock) { ....<newline46mondego>"
"2370splitHere46","17575086splitHere46","synchronize"
"2371splitHere46","17575086splitHere46","lock.wait();<newline46mondego>"
"2372splitHere46","17575086splitHere46","notify"
"2373splitHere46","17575086splitHere46","lock"
"2374splitHere46","17575086splitHere46","lock"
"2375splitHere46","17575086splitHere46","lock.notify"
"2376splitHere46","17575215splitHere46","GPS"
"2377splitHere46","17575215splitHere46","locationManager = (LocationManager)c.getSystemService(Context.LOCATION_SERVICE);<newline46mondego>"
"2378splitHere46","17575331splitHere46","temp =temp + line;<newline46mondego>"
"2379splitHere46","17575331splitHere46","StringBuilder sb=new StringBuilder()<newline46mondego>"
"2380splitHere46","17575331splitHere46","sb.append(line);<newline46mondego>"
"2381splitHere46","17575331splitHere46","sb.toString()"
"2382splitHere46","17575401splitHere46","${}"
"2383splitHere46","17575401splitHere46","#{}"
"2384splitHere46","17575553splitHere46","FakeWebServiceProxy"
"2385splitHere46","17575553splitHere46","IServiceHandler"
"2386splitHere46","17575553splitHere46","Class"
"2387splitHere46","17575553splitHere46","Class"
"2388splitHere46","17575553splitHere46","Class"
"2389splitHere46","17575553splitHere46","IServiceHandler"
"2390splitHere46","17575553splitHere46","Fake_Proxy"
"2391splitHere46","17575553splitHere46","<spring:beans><newline46mondego>    <spring:bean id=<doubleQuotes46>serviceHandlerBean<doubleQuotes46> class=<doubleQuotes46>xxx.GenericServiceHandler<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46>/><newline46mondego>    <spring:bean id=<doubleQuotes46>Fake_Proxy<doubleQuotes46> class=<doubleQuotes46>xxx.FakeWebServiceProxy<doubleQuotes46> scope=<doubleQuotes46>prototype<doubleQuotes46>><newline46mondego>        <spring:property name=<doubleQuotes46>serviceHandler<doubleQuotes46> ref=<doubleQuotes46>serviceHandlerBean<doubleQuotes46>/><newline46mondego>    </spring:bean><newline46mondego></spring:beans><newline46mondego>"
"2392splitHere46","17575563splitHere46","<s:iterator value=<doubleQuotes46>map<doubleQuotes46> status=<doubleQuotes46>stat<doubleQuotes46>><newline46mondego> <s:if test=<doubleQuotes46>#stat.count <= 3<doubleQuotes46>><newline46mondego>   ...<newline46mondego> </s:if><newline46mondego></s:iterator><newline46mondego>"
"2393splitHere46","17575688splitHere46","Object handler"
"2394splitHere46","17575688splitHere46","HandlerMethod"
"2395splitHere46","17575688splitHere46","HandlerMethod method = (HandlerMethod) handler;<newline46mondego>"
"2396splitHere46","17575688splitHere46","handler"
"2397splitHere46","17575688splitHere46","preHandle"
"2398splitHere46","17575688splitHere46","HandlerMethod"
"2399splitHere46","17575688splitHere46","ClassCastException"
"2400splitHere46","17575688splitHere46","HandlerMethod"
"2401splitHere46","17575926splitHere46","char[] alphabet = <doubleQuotes46>abcdefghijklmnopqrstuvwxyz<doubleQuotes46>.toCharArray();<newline46mondego>"
"2402splitHere46","17575962splitHere46","// get to starting position<newline46mondego>BufferedReader r = new BufferedReader(isr);<newline46mondego>...<newline46mondego>String line = null;<newline46mondego>while (!(line = reader.readLine()).equals(<doubleQuotes46>-<doubleQuotes46>))<newline46mondego>{<newline46mondego>  int number = Integer.parseInt(line);<newline46mondego>}<newline46mondego>"
"2403splitHere46","17576183splitHere46","doInBackGround()"
"2404splitHere46","17576183splitHere46","onPostExecute()"
"2405splitHere46","17576183splitHere46","onPostExecute"
"2406splitHere46","17576183splitHere46","doInBackGround()"
"2407splitHere46","17576183splitHere46","task.execute().get()"
"2408splitHere46","17576204splitHere46","while"
"2409splitHere46","17576204splitHere46","ResultSet"
"2410splitHere46","17576204splitHere46","while"
"2411splitHere46","17576204splitHere46","ResultSet#getXxx"
"2412splitHere46","17576204splitHere46","List"
"2413splitHere46","17576204splitHere46","ArrayList"
"2414splitHere46","17576204splitHere46","ResultSet rs = stmt.executeQuery( <doubleQuotes46>SELECT distinct <doubleQuotes46>+jTextField.getText()+<newline46mondego>    <doubleQuotes46> as call from tablename<doubleQuotes46>);<newline46mondego>List<String> results = new ArrayList<String>();<newline46mondego>while(rs.next()) {<newline46mondego>    results.add(rs.getString(1));<newline46mondego>}<newline46mondego>"
"2415splitHere46","17576204splitHere46","public List<String> yourRandomQuery(String columnName) {<newline46mondego>    Connection con = null;<newline46mondego>    ResultSet rs = null;<newline46mondego>    List<String> results = new ArrayList<String>();<newline46mondego>    try {<newline46mondego>        String baseQuery = <doubleQuotes46>SELECT DISTINCT %s AS call FROM tablename<doubleQuotes46>;<newline46mondego>        con = ...; //retrieve your connection<newline46mondego>        ResultSet rs = stmt.executeQuery(String.format(baseQuery, columnName));<newline46mondego>        while(rs.next()) {<newline46mondego>            results.add(rs.getString(1));<newline46mondego>        }<newline46mondego>    } catch (SQLException e) {<newline46mondego>        //handle your exception<newline46mondego>        e.printStacktrace(System.out);<newline46mondego>    } finally {<newline46mondego>        closeResource(rs);<newline46mondego>        closeResource(con);<newline46mondego>    }<newline46mondego>    return results;<newline46mondego>}<newline46mondego><newline46mondego>//both Connection and ResultSet interfaces extends from AutoCloseable interface<newline46mondego>public void closeResource(AutoCloseable ac) {<newline46mondego>    try {<newline46mondego>        if (ac != null) {<newline46mondego>            ac.close();<newline46mondego>        }<newline46mondego>    } catch (Exception e) {<newline46mondego>        //handle this exception as well...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void someMethod() {<newline46mondego>    //retrieve the results from database<newline46mondego>    List<String> results = yourRandomQuery(jTextField.getText());<newline46mondego>    //consume the results as you wish<newline46mondego>    //basic example: printing them in the console<newline46mondego>    for(String result : results) {<newline46mondego>        System.out.println(result);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2416splitHere46","17576332splitHere46","HttpURLConnection"
"2417splitHere46","17576332splitHere46","httpCon.setInstanceFollowRedirects(false);<newline46mondego>httpCon.connect();<newline46mondego>int res = httpCon.getResponseCode(); // should now return 301<newline46mondego>"
"2418splitHere46","17576432splitHere46","private"
"2419splitHere46","17576432splitHere46","public"
"2420splitHere46","17576432splitHere46","private BufferedReader datafile = null;<newline46mondego>"
"2421splitHere46","17576432splitHere46","private void arffComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             <newline46mondego>    String pth = arffComboBox.getSelectedItem();<newline46mondego>    datafile = readDataFile(pth);<newline46mondego>}<newline46mondego>"
"2422splitHere46","17576432splitHere46","datafile"
"2423splitHere46","17576432splitHere46","JFrame1"
"2424splitHere46","17576432splitHere46","form.addPropertyChangeListener"
"2425splitHere46","17576432splitHere46","PropertyChangeEvents"
"2426splitHere46","17576432splitHere46","arffComboBoxActionPerformed"
"2427splitHere46","17576432splitHere46","arffComboBoxActionPerformed"
"2428splitHere46","17576432splitHere46","private void arffComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             <newline46mondego>    String pth = arffComboBox.getSelectedItem();<newline46mondego>    firePropertyChange('combo_changed', null, pth);<newline46mondego>}<newline46mondego>"
"2429splitHere46","17576432splitHere46","main"
"2430splitHere46","17576432splitHere46","JFrame1 form = new JFrame1();<newline46mondego>form.setVisible(true);<newline46mondego>form.addPropertyChangeListener(new PropertyChangeListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void propertyChange(PropertyChangeEvent pce) {<newline46mondego>        // Handle the change here<newline46mondego><newline46mondego>        String pth = (String) pce.getNewValue();<newline46mondego>        BufferedReader datafile = readDataFile(pth);<newline46mondego><newline46mondego>        Instances data = new Instances(datafile);<newline46mondego>        data.setClassIndex(data.numAttributes() - 1);<newline46mondego><newline46mondego>        (...)<newline46mondego>    }<newline46mondego><newline46mondego>});<newline46mondego>"
"2431splitHere46","17576806splitHere46","for (int i = 0; i < table.getRowCount(); i++) {<newline46mondego>     boolean isChecked = (Boolean) table.getValueAt(i, 4);<newline46mondego><newline46mondego>     if (isChecked) {<newline46mondego>        //get the values of the columns you need.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2432splitHere46","17576950splitHere46","null"
"2433splitHere46","17576950splitHere46","NullPointerException"
"2434splitHere46","17576950splitHere46","throw null"
"2435splitHere46","17576950splitHere46","NullPointerException"
"2436splitHere46","17576950splitHere46","throw"
"2437splitHere46","17576950splitHere46","NullPointerException"
"2438splitHere46","17577115splitHere46","def writeToFileOrStdout(fname: Option[String] = None) = {<newline46mondego>  val outStream = fname match{<newline46mondego>    case Some(name) => new java.io.FileOutputStream(new java.io.File(name))<newline46mondego>    case None => System.out<newline46mondego>  }<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"2439splitHere46","17577115splitHere46","Option"
"2440splitHere46","17577115splitHere46","null"
"2441splitHere46","17577115splitHere46","null"
"2442splitHere46","17577115splitHere46","Nil"
"2443splitHere46","17577115splitHere46","String"
"2444splitHere46","17577138splitHere46","String[][] stateInfo = new String[][]{<newline46mondego>                        {<doubleQuotes46>Alabama<doubleQuotes46>, <doubleQuotes46>1900<doubleQuotes46>, <doubleQuotes46>Birmingham<doubleQuotes46>, <doubleQuotes46>Wide-Awake<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>},<newline46mondego>                        {<doubleQuotes46>Illinois<doubleQuotes46>, <doubleQuotes46>1900<doubleQuotes46>, <doubleQuotes46>Blakeley<doubleQuotes46>, <doubleQuotes46>Blakeley Sun<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>}};<newline46mondego>for (String[] si: stateInfo){<newline46mondego>    String s = String.format(<doubleQuotes46>%1$-12s %2$-5s %3$-12s %4$-12s %5$-2s <doubleQuotes46>,<newline46mondego>                                    si[0],si[1],si[2],si[3],si[4]);<newline46mondego>    System.out.println(<doubleQuotes46>String:<doubleQuotes46>+s);<newline46mondego>}<newline46mondego>"
"2445splitHere46","17577235splitHere46","if (map.containsKey(cancer)) {<newline46mondego>    }<newline46mondego>"
"2446splitHere46","17577235splitHere46","map.put(<doubleQuotes46>-cancer<doubleQuotes46>, <doubleQuotes46>+test<doubleQuotes46>);<newline46mondego>    map.put(<doubleQuotes46>-cancer<doubleQuotes46>, <doubleQuotes46>-test<doubleQuotes46>);<newline46mondego>"
"2447splitHere46","17577235splitHere46","for (Map.Entry<String, String> entry : map.entrySet()) {<newline46mondego>        String entry = entry.getKey(), value = entry.getValue();<newline46mondego>        //Do comparisons.<newline46mondego>        //increment counter  <newline46mondego>    }<newline46mondego>"
"2448splitHere46","17577298splitHere46","XmlAdapter"
"2449splitHere46","17577298splitHere46","null"
"2450splitHere46","17577298splitHere46","Boolean"
"2451splitHere46","17577437splitHere46","java.awt.Color.RGBtoHSB(...)"
"2452splitHere46","17577437splitHere46","int red = (int) (Math.random() * 256)<newline46mondego>int green = (int) (Math.random() * 256)<newline46mondego>int blue = (int) (Math.random() * 256)<newline46mondego>"
"2453splitHere46","17577437splitHere46","HSBtoRGB(...)"
"2454splitHere46","17577523splitHere46","BigDecimal.ROUND_HALF_UP"
"2455splitHere46","17577523splitHere46","29.294998"
"2456splitHere46","17577523splitHere46","29.29"
"2457splitHere46","17577523splitHere46","BigDecimal.ROUND_UP"
"2458splitHere46","17577600splitHere46","<version>[1.5]</version><newline46mondego>"
"2459splitHere46","17577600splitHere46","<version>1.5</version><newline46mondego>"
"2460splitHere46","17577600splitHere46","mvn dependency:tree"
"2461splitHere46","17577600splitHere46","mvn dependency:tree"
"2462splitHere46","17577716splitHere46","Map<T,List<U>>"
"2463splitHere46","17577716splitHere46","Map<String,List<String>>"
"2464splitHere46","17577716splitHere46","Multimap<String,String>"
"2465splitHere46","17577716splitHere46","MultiMap"
"2466splitHere46","17577775splitHere46","@XmlAccessorType( XmlAccessType.FIELD)"
"2467splitHere46","17577775splitHere46","@XmlInverseReference"
"2468splitHere46","17577807splitHere46","doView"
"2469splitHere46","17577807splitHere46","init"
"2470splitHere46","17577807splitHere46","init"
"2471splitHere46","17577993splitHere46","<doubleQuotes46><doubleQuotes46>"
"2472splitHere46","17577993splitHere46","SOAPElement GetNGPList =<newline46mondego>       soapBody.addChildElement(<doubleQuotes46>GetNGPList<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>http://www.sigvalue.com/acc<doubleQuotes46>);<newline46mondego>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<newline46mondego>"
"2473splitHere46","17577993splitHere46","xmlns=<doubleQuotes46>http://www.sigvalue.com/acc<doubleQuotes46>"
"2474splitHere46","17577993splitHere46","GetNGPList"
"2475splitHere46","17577993splitHere46","// SOAP Body<newline46mondego>SOAPBody soapBody = envelope.getBody();<newline46mondego>SOAPElement GetNGPList =<newline46mondego>       soapBody.addChildElement(<doubleQuotes46>GetNGPList<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>http://www.sigvalue.com/acc<doubleQuotes46>);<newline46mondego><newline46mondego>SOAPElement UserData = GetNGPList.addChildElement(<doubleQuotes46>UserData<doubleQuotes46>);<newline46mondego>...<newline46mondego>"
"2476splitHere46","17577993splitHere46","addChildElement()"
"2477splitHere46","17577993splitHere46","<SOAP-ENV:Envelope xmlns:SOAP-ENV=<doubleQuotes46>http://schemas.xmlsoap.org/soap/envelope/<doubleQuotes46><newline46mondego>                   xmlns:xsd=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>                   xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>><newline46mondego>    <SOAP-ENV:Header /><newline46mondego>    <SOAP-ENV:Body><newline46mondego>        <GetNGPList xmlns=<doubleQuotes46>http://www.sigvalue.com/acc<doubleQuotes46>><newline46mondego>            <UserData><newline46mondego>                <senderId>string</senderId><newline46mondego>...<newline46mondego>"
"2478splitHere46","17577998splitHere46","string Str = txtMemberNr.Text.Trim();<newline46mondego><newline46mondego>            double Num;<newline46mondego><newline46mondego>            bool isNum = double.TryParse(Str, out Num);<newline46mondego><newline46mondego>            if (isNum)<newline46mondego>            {<newline46mondego>              // CODE IS HERE<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                MessageBox.Show(<doubleQuotes46>Brugernavn skal kun indeholde tal, prøv igen!<doubleQuotes46>, <doubleQuotes46>advarsel<doubleQuotes46>, MessageBoxButtons.OK, MessageBoxIcon.Information);<newline46mondego>            }<newline46mondego>"
"2479splitHere46","17578003splitHere46","Map<String, Integer> freq = new HashMap<String, Integer>();<newline46mondego>for (String s: names):<newline46mondego>    first_name = Arrays.asList(s.split()).get(0).toLowerCase()<newline46mondego>    int count = freq.containsKey(name) ? freq.get(name) : 0;<newline46mondego>    freq.put(name, count + 1);<newline46mondego><newline46mondego>Arrays.sort(names, new Comparator<String>() {<newline46mondego>  public int compare(String s1, String s2) {<newline46mondego>    int c = freq.get(Arrays.asList(s1.split()).get(0).toLowerCase()) - Arrays.asList(s2.split()).get(0).toLowerCase();<newline46mondego>    return c;<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"2480splitHere46","17578003splitHere46","nlogn"
"2481splitHere46","17578091splitHere46","std::unordered_map"
"2482splitHere46","17578091splitHere46","HashMap"
"2483splitHere46","17578091splitHere46","ConcurrentHashMap"
"2484splitHere46","17578091splitHere46","TreeMap"
"2485splitHere46","17578186splitHere46","contains()"
"2486splitHere46","17578186splitHere46","<doubleQuotes46>//select[@name='mySelect']/option[contains(.,'Some Text')]<doubleQuotes46><newline46mondego>"
"2487splitHere46","17578186splitHere46","<doubleQuotes46>//select[@name='mySelect']/option[@value='ab']<doubleQuotes46><newline46mondego>"
"2488splitHere46","17578287splitHere46","File"
"2489splitHere46","17578287splitHere46","FileInputStream"
"2490splitHere46","17578287splitHere46","URL url = getClass().getResource(<doubleQuotes46>/config<doubleQuotes46>);<newline46mondego><newline46mondego>BufferedReader read = new BufferedReader(new InputStreamReader(url.openStream()));<newline46mondego>// more...<newline46mondego>"
"2491splitHere46","17578338splitHere46","List list = Collections.synchronizedList(new ArrayList());<newline46mondego>      ...<newline46mondego>  synchronized(list) {<newline46mondego>      Iterator i = list.iterator(); // Must be in synchronized block<newline46mondego>      while (i.hasNext())<newline46mondego>          foo(i.next());<newline46mondego>  }<newline46mondego>"
"2492splitHere46","17578338splitHere46","contains"
"2493splitHere46","17578338splitHere46","remove"
"2494splitHere46","17578338splitHere46","Collections"
"2495splitHere46","17578338splitHere46","public boolean contains(Object o) {<newline46mondego>        synchronized (mutex) {return c.contains(o);}<newline46mondego>    }<newline46mondego>    public boolean remove(Object o) {<newline46mondego>        synchronized (mutex) {return c.remove(o);}<newline46mondego>    }<newline46mondego>"
"2496splitHere46","17578416splitHere46","java -version"
"2497splitHere46","17578416splitHere46","java -jar ..."
"2498splitHere46","17578416splitHere46","C:\>java -version<newline46mondego>java version <doubleQuotes46>1.7.0_25<doubleQuotes46><newline46mondego>Java(TM) SE Runtime Environment (build 1.7.0_25-b17)<newline46mondego>Java HotSpot(TM) Client VM (build 23.25-b01, mixed mode, sharing)<newline46mondego>"
"2499splitHere46","17578416splitHere46","which java"
"2500splitHere46","17578416splitHere46","%PATH%"
"2501splitHere46","17578416splitHere46","java"
"2502splitHere46","17578461splitHere46","MainController mc"
"2503splitHere46","17578461splitHere46","<CustomComponentController fx:id=<doubleQuotes46>cc<doubleQuotes46>/>"
"2504splitHere46","17578461splitHere46","fx:controller=<doubleQuotes46>main.CustomComponentController<doubleQuotes46>"
"2505splitHere46","17578461splitHere46","custom_component_controller.fxml"
"2506splitHere46","17578461splitHere46","main.fxml"
"2507splitHere46","17578461splitHere46","custom_component_controller.fxml"
"2508splitHere46","17578461splitHere46","mc = this;"
"2509splitHere46","17578461splitHere46","MainController"
"2510splitHere46","17578461splitHere46","initialize()"
"2511splitHere46","17578461splitHere46","mc"
"2512splitHere46","17578461splitHere46","CustomComponentController"
"2513splitHere46","17578461splitHere46","initialize()"
"2514splitHere46","17578461splitHere46","main.fxml"
"2515splitHere46","17578461splitHere46","CustomComponentController"
"2516splitHere46","17578461splitHere46","fx:id"
"2517splitHere46","17578461splitHere46","CustomComponentController"
"2518splitHere46","17578461splitHere46","reloadCustomComponents()"
"2519splitHere46","17578461splitHere46","CustomComponentController"
"2520splitHere46","17578461splitHere46","initialize()"
"2521splitHere46","17578461splitHere46","reloadCustomComponents()"
"2522splitHere46","17578461splitHere46","CustomComponentController"
"2523splitHere46","17578461splitHere46","MainController"
"2524splitHere46","17578461splitHere46","MainController mc"
"2525splitHere46","17578580splitHere46","Integer.toBinaryString()"
"2526splitHere46","17578628splitHere46","<newline46mondego>DefaultHttpClient httpClient = new DefaultHttpClient();<newline46mondego>HttpParams params = httpClient.getParams();<newline46mondego>HttpConnectionParams.setConnectionTimeout(httpParams, connectionTimeoutMillis);<newline46mondego>HttpConnectionParams.setSoTimeout(httpParams, socketTimeoutMillis);<newline46mondego>"
"2527splitHere46","17578674splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><jnlp spec=<doubleQuotes46>6.0+<doubleQuotes46> xmlns:jfx=<doubleQuotes46>http://javafx.com<doubleQuotes46> codebase=<doubleQuotes46>http://myserver.com/downloads<doubleQuotes46>><newline46mondego>  <information><newline46mondego>    <title>My App</title><newline46mondego>    <vendor>My Vendor</vendor><newline46mondego>    <homepage href=<doubleQuotes46>http://myserver.com/myapp<doubleQuotes46> /><newline46mondego>    <description>Application to do something</description><newline46mondego>    <offline-allowed/><newline46mondego>    <shortcut online=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>      <desktop/><newline46mondego>      <menu submenu=<doubleQuotes46>My App<doubleQuotes46>/><newline46mondego>    </shortcut><newline46mondego>  </information><newline46mondego>  <security><newline46mondego>    <all-permissions/><newline46mondego>  </security><newline46mondego>  <update check=<doubleQuotes46>always<doubleQuotes46>/><newline46mondego>  <resources><newline46mondego>    <j2se version=<doubleQuotes46>1.7.0_25<doubleQuotes46> java-vm-args=<doubleQuotes46>-Xmx1024m -Djava.net.preferIPv4Stack=true<doubleQuotes46>    href=<doubleQuotes46>http://java.sun.com/products/autodl/j2se<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>myID<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46> /> <newline46mondego>  </resources><newline46mondego>  <resources os=<doubleQuotes46>Windows<doubleQuotes46> arch=<doubleQuotes46>x86<doubleQuotes46>><newline46mondego>    <jar href=<doubleQuotes46>my-app-0.0.1.jar<doubleQuotes46> download=<doubleQuotes46>eager<doubleQuotes46> /><newline46mondego>  </resources><newline46mondego>  <resources os=<doubleQuotes46>Windows<doubleQuotes46> arch=<doubleQuotes46>amd64<doubleQuotes46>><newline46mondego>    <jar href=<doubleQuotes46>map-app-0.0.1.jar<doubleQuotes46> download=<doubleQuotes46>eager<doubleQuotes46> /><newline46mondego>  </resources><newline46mondego>  <application-desc main-class=<doubleQuotes46>com.myApp.MyApp<doubleQuotes46>/><newline46mondego></jnlp><newline46mondego>"
"2528splitHere46","17578693splitHere46",">"
"2529splitHere46","17578693splitHere46","-128 >> 2 = -128 / 2^2 = -32<newline46mondego>"
"2530splitHere46","17578693splitHere46","(1) 10000000 >> 2 = (1) 100000 <newline46mondego>11111111 11111111 11111111 10000000 >> 2 = 1111111 11111111 11111111 11100000<newline46mondego>"
"2531splitHere46","17578693splitHere46",">>>"
"2532splitHere46","17578693splitHere46","-128 >>> 2 = 536870896<newline46mondego><newline46mondego>11111111 11111111 11111111 10000000 >> 2 = 0011111 11111111 11111111 11100000<newline46mondego>"
"2533splitHere46","17578738splitHere46","String.contains()"
"2534splitHere46","17578738splitHere46","String.matches()"
"2535splitHere46","17578738splitHere46","contains()"
"2536splitHere46","17578765splitHere46","this.getProperty("
"2537splitHere46","17578765splitHere46","System.getProperty("
"2538splitHere46","17578765splitHere46","useSystem"
"2539splitHere46","17578765splitHere46","this"
"2540splitHere46","17578765splitHere46","this.getProperty("
"2541splitHere46","17578765splitHere46","String this.getProperty(String arg){<newline46mondego>    if useSystem return System.getProperty(arg);<newline46mondego>    else{<newline46mondego>        //your logic for returning a property<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2542splitHere46","17578765splitHere46","this.getProperty("
"2543splitHere46","17578765splitHere46","this.useSystem"
"2544splitHere46","17578765splitHere46","true"
"2545splitHere46","17578765splitHere46","false"
"2546splitHere46","17578808splitHere46","class DataWrapper<newline46mondego>{<newline46mondego>    String[] columns;<newline46mondego>    String[][] data;<newline46mondego>}<newline46mondego>"
"2547splitHere46","17578808splitHere46","import java.io.IOException;<newline46mondego>import java.io.Reader;<newline46mondego>import java.util.Iterator;<newline46mondego><newline46mondego>import com.google.gson.stream.JsonReader;<newline46mondego><newline46mondego>public class TransportJSonReader implements Iterator<Transport> {<newline46mondego><newline46mondego>protected JsonReader jsonReader;<newline46mondego><newline46mondego>public TransportJSonReader(Reader reader) throws IOException<newline46mondego>{<newline46mondego>    jsonReader = new JsonReader(reader);<newline46mondego>    jsonReader.beginObject();<newline46mondego><newline46mondego>    //columns<newline46mondego>    jsonReader.nextName();<newline46mondego>    jsonReader.skipValue();<newline46mondego><newline46mondego>    //data<newline46mondego>    jsonReader.nextName();<newline46mondego>    jsonReader.beginArray();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean hasNext() {<newline46mondego>    try {<newline46mondego>        return jsonReader.hasNext();<newline46mondego>    } catch (IOException e) {<newline46mondego>        throw new RuntimeException(e);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public Transport next() {<newline46mondego>    if (!hasNext()) throw new IllegalStateException();<newline46mondego><newline46mondego>    try {<newline46mondego>        jsonReader.beginArray();<newline46mondego>        String name = jsonReader.nextString();<newline46mondego>        String description = jsonReader.nextString();<newline46mondego>        String id = jsonReader.nextString();<newline46mondego>        jsonReader.endArray();<newline46mondego>        return new Transport(id, name, description);<newline46mondego>    } catch (IOException e) {<newline46mondego>        throw new RuntimeException(e);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void remove() {<newline46mondego>    throw new UnsupportedOperationException();<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"2548splitHere46","17578808splitHere46","TransportJSonReader reader = new TransportJSonReader(new StringReader(json));<newline46mondego>    while(reader.hasNext()) System.out.println(reader.next());<newline46mondego>"
"2549splitHere46","17578809splitHere46","build.xml"
"2550splitHere46","17578809splitHere46","<project name=<doubleQuotes46>My-java-api<doubleQuotes46> default=<doubleQuotes46>dist-api<doubleQuotes46> basedir=<doubleQuotes46>.<doubleQuotes46>><newline46mondego><newline46mondego>    <description><newline46mondego>        Java API Buildfile<newline46mondego>    </description><newline46mondego><newline46mondego>    <property name=<doubleQuotes46>src<doubleQuotes46> location=<doubleQuotes46>src<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>build<doubleQuotes46> location=<doubleQuotes46>build<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>dist<doubleQuotes46>  location=<doubleQuotes46>dist<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>libs<doubleQuotes46>  location=<doubleQuotes46>libs<doubleQuotes46>/><newline46mondego><newline46mondego>    <!--if we don't remove folders, when we call compile-api --><newline46mondego>    <!-- and classes have already been built, it doesn't build again--><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>-init-api<doubleQuotes46><newline46mondego>        description=<doubleQuotes46>Create folders libs and build<doubleQuotes46>><newline46mondego>        <mkdir dir=<doubleQuotes46>${build}<doubleQuotes46>/><newline46mondego>        <mkdir dir=<doubleQuotes46>${libs}<doubleQuotes46>/><newline46mondego>        <mkdir dir=<doubleQuotes46>${dist}<doubleQuotes46>/><newline46mondego>    </target><newline46mondego><newline46mondego>    <!-- Here I call another buildfile of submodule located at the tree indicated I am --><newline46mondego>    <!--sure the other buildfile works perfect --><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>-pre-build-api<doubleQuotes46> depends=<doubleQuotes46>-init-api<doubleQuotes46><newline46mondego>        description=<doubleQuotes46>Create jelly jar and copy it to libs folder<doubleQuotes46>><newline46mondego>        <ant dir=<doubleQuotes46>../Libraries/jelly/core/<doubleQuotes46><newline46mondego>            antfile=<doubleQuotes46>build.xml<doubleQuotes46><newline46mondego>            target=<doubleQuotes46>standalone-jar<doubleQuotes46>/><newline46mondego>        <copy todir=<doubleQuotes46>${libs}<doubleQuotes46>><newline46mondego>            <fileset<newline46mondego>                dir=<doubleQuotes46>../Libraries/jelly/core/dist<doubleQuotes46><newline46mondego>                includes=<doubleQuotes46>jelly-standalone*.jar<doubleQuotes46> /><newline46mondego>        </copy><newline46mondego>    </target><newline46mondego><newline46mondego>    <!--so now I create this classpath to use for making jar--><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>lib.classpath<doubleQuotes46><newline46mondego>        depends=<doubleQuotes46>-pre-build-api<doubleQuotes46>><newline46mondego>        <path id=<doubleQuotes46>lib.classpath<doubleQuotes46><newline46mondego>            depends=<doubleQuotes46>-pre-build-api<doubleQuotes46>><newline46mondego>            <fileset dir=<doubleQuotes46>${libs}<doubleQuotes46> includes=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego>        </path><newline46mondego>    </target><newline46mondego><newline46mondego>    <!--I compile source code including the jar that I have just copied to libs--><newline46mondego>    <target name=<doubleQuotes46>compile-api<doubleQuotes46><newline46mondego>        depends=<doubleQuotes46>lib.classpath<doubleQuotes46> ><newline46mondego>        <javac srcdir=<doubleQuotes46>${src}<doubleQuotes46><newline46mondego>            includeantruntime=<doubleQuotes46>false<doubleQuotes46><newline46mondego>            destdir=<doubleQuotes46>${build}<doubleQuotes46><newline46mondego>            classpathref=<doubleQuotes46>lib.classpath<doubleQuotes46>><newline46mondego>        </javac><newline46mondego>    </target><newline46mondego>    <!-- here i make jar with the classes and using the jar from external project,<newline46mondego>    I want just one jar for everything  --><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>dist-api<doubleQuotes46><newline46mondego>        depends=<doubleQuotes46>compile-api<doubleQuotes46> ><newline46mondego><newline46mondego>        <jar jarfile=<doubleQuotes46>${dist}/name-java-api-0.1.jar<doubleQuotes46> basedir=<doubleQuotes46>${build}<doubleQuotes46> ><newline46mondego>            <zipgroupfileset dir=<doubleQuotes46>${libs}<doubleQuotes46> includes=<doubleQuotes46>**/*.jar<doubleQuotes46> /><newline46mondego>        </jar><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>clean<doubleQuotes46><newline46mondego>        description=<doubleQuotes46>clean up<doubleQuotes46> ><newline46mondego>        <delete dir=<doubleQuotes46>${build}<doubleQuotes46>/><newline46mondego>        <delete dir=<doubleQuotes46>${dist}<doubleQuotes46>/><newline46mondego>        <delete dir=<doubleQuotes46>${libs}<doubleQuotes46>/><newline46mondego>    </target><newline46mondego></project><newline46mondego>"
"2551splitHere46","17578809splitHere46","dist-api"
"2552splitHere46","17578809splitHere46","compile-api"
"2553splitHere46","17578809splitHere46","lib.classpath"
"2554splitHere46","17578809splitHere46","pre-build-api"
"2555splitHere46","17578809splitHere46","-init.api"
"2556splitHere46","17578809splitHere46","clean"
"2557splitHere46","17578815splitHere46","/**<newline46mondego> * Creates new form ResultsForm<newline46mondego> */<newline46mondego>public ResultsForm() {<newline46mondego>    initComponents();<newline46mondego>    this.TextArea.setText(<doubleQuotes46>No input<doubleQuotes46>);<newline46mondego>    this.TextArea.setEditable(false);<newline46mondego>}<newline46mondego><newline46mondego>//This is the constructor that takes in your results and places is<newline46mondego>//in the form<newline46mondego>public ResultsForm(String results){<newline46mondego>    initComponents();<newline46mondego>    this.TextArea.setText(results);<newline46mondego>    this.TextArea.setEditable(false);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * This method is called from within the constructor to initialize the form.<newline46mondego> * WARNING: Do NOT modify this code. The content of this method is always<newline46mondego> * regenerated by the Form Editor.<newline46mondego> */<newline46mondego>@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>// <editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46>Generated Code<doubleQuotes46>>                          <newline46mondego>private void initComponents() {<newline46mondego><newline46mondego>    jScrollPane2 = new javax.swing.JScrollPane();<newline46mondego>    TextArea = new javax.swing.JTextPane();<newline46mondego><newline46mondego>    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>    jScrollPane2.setViewportView(TextArea);<newline46mondego><newline46mondego>    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());<newline46mondego>    getContentPane().setLayout(layout);<newline46mondego>    layout.setHorizontalGroup(<newline46mondego>        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)<newline46mondego>        .addGroup(layout.createSequentialGroup()<newline46mondego>            .addGap(64, 64, 64)<newline46mondego>            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)<newline46mondego>            .addContainerGap(64, Short.MAX_VALUE))<newline46mondego>    );<newline46mondego>    layout.setVerticalGroup(<newline46mondego>        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)<newline46mondego>        .addGroup(layout.createSequentialGroup()<newline46mondego>            .addGap(60, 60, 60)<newline46mondego>            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)<newline46mondego>            .addContainerGap(98, Short.MAX_VALUE))<newline46mondego>    );<newline46mondego><newline46mondego>    pack();<newline46mondego>}// </editor-fold>                        <newline46mondego><newline46mondego>/**<newline46mondego> * @param args the command line arguments<newline46mondego> */<newline46mondego>public static void main(String args[]) {<newline46mondego>/* Set the Nimbus look and feel */<newline46mondego>//<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Look and feel setting code (optional) <doubleQuotes46>><newline46mondego>    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.<newline46mondego> * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html <newline46mondego> */<newline46mondego>try {<newline46mondego>    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {<newline46mondego>    if (<doubleQuotes46>Nimbus<doubleQuotes46>.equals(info.getName())) {<newline46mondego>        javax.swing.UIManager.setLookAndFeel(info.getClassName());<newline46mondego>        break;<newline46mondego>    }<newline46mondego>    }<newline46mondego>} catch (ClassNotFoundException ex) {<newline46mondego>    java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);<newline46mondego>} catch (InstantiationException ex) {<newline46mondego>    java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);<newline46mondego>} catch (IllegalAccessException ex) {<newline46mondego>    java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);<newline46mondego>} catch (javax.swing.UnsupportedLookAndFeelException ex) {<newline46mondego>    java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);<newline46mondego>}<newline46mondego>//</editor-fold><newline46mondego><newline46mondego>/* Create and display the form */<newline46mondego>java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>            //This is where you should place your running code<newline46mondego>    String dataToOutput = <doubleQuotes46>This should be on the form<doubleQuotes46>;<newline46mondego>            //This is where you pass in the results to the form<newline46mondego>    new ResultsForm(dataToOutput).setVisible(true);<newline46mondego>    }<newline46mondego>});<newline46mondego>}<newline46mondego>    // Variables declaration - do not modify                     <newline46mondego>    private javax.swing.JTextPane TextArea;<newline46mondego>    private javax.swing.JScrollPane jScrollPane2;<newline46mondego>    // End of variables declaration                   <newline46mondego>}<newline46mondego>"
"2558splitHere46","17578879splitHere46","replaceAll"
"2559splitHere46","17578879splitHere46","()"
"2560splitHere46","17578879splitHere46","val = val.replaceAll(<doubleQuotes46>CHR\\(10\\)<doubleQuotes46>, <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"2561splitHere46","17578879splitHere46","replace"
"2562splitHere46","17578879splitHere46","val = val.replace(<doubleQuotes46>CHR(10)<doubleQuotes46>, <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"2563splitHere46","17578879splitHere46","String.replace(CharSequence, CharSequence)"
"2564splitHere46","17578924splitHere46","Outer"
"2565splitHere46","17578924splitHere46","Outer.this.foo"
"2566splitHere46","17578924splitHere46","Outer.this.foo=new ArrayList<>();<newline46mondego>"
"2567splitHere46","17578924splitHere46","foo"
"2568splitHere46","17578924splitHere46","foo=new Baz()"
"2569splitHere46","17578924splitHere46","outerInstance.foo=new ArrayList<>();<newline46mondego>"
"2570splitHere46","17578924splitHere46","Outer.staticFoo=new ArrayList<>();<newline46mondego>"
"2571splitHere46","17578967splitHere46","String[] temp = s.split(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"2572splitHere46","17578967splitHere46","temp[1].charAt(3);<newline46mondego>"
"2573splitHere46","17579188splitHere46","public static void main(String args[]) {<newline46mondego>    Package.one.B b = new Package.one.B(10,12);<newline46mondego>    System.out.println(<doubleQuotes46>area is <doubleQuotes46> + b.area());<newline46mondego>}<newline46mondego>"
"2574splitHere46","17579188splitHere46","public static void main(String args[]) {<newline46mondego>    pack.one.B bFromOne = new pack.one.B(10,12);<newline46mondego>    System.out.println(bFromOne.area());<newline46mondego>    pack.two.B bFromTwo = new pack.two.B(10,12);<newline46mondego>    System.out.println(bFromTwo.area());<newline46mondego>}<newline46mondego>"
"2575splitHere46","17579263splitHere46","throw"
"2576splitHere46","17579263splitHere46","Throwable"
"2577splitHere46","17579263splitHere46","void greet(String name) {<newline46mondego>    if (name == null) {<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>Cannot greet null<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46>Hello, <doubleQuotes46> + name);<newline46mondego>}<newline46mondego>"
"2578splitHere46","17579330splitHere46","delegate: Rectangle {<newline46mondego>      id: theRect<newline46mondego>      Text {<newline46mondego>         id: theText<newline46mondego>         text: mainLView.moving ? nameX : numberX<newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"2579splitHere46","17579419splitHere46","mysqldump"
"2580splitHere46","17579419splitHere46","outHandler"
"2581splitHere46","17579419splitHere46","errorHandler"
"2582splitHere46","17579419splitHere46","expr = new StringBuilder()<newline46mondego>    .append(MYSQLDUMP_CMD).append(' ')<newline46mondego>    .append(<doubleQuotes46>-u<doubleQuotes46>).append(USER_DEFAULT).append(' ')<newline46mondego>    .append(<doubleQuotes46>-p<doubleQuotes46>).append(PW_DEFAULT).append(' ')<newline46mondego>    .append(TEST_DB_NAME).append(' ')<newline46mondego>    .append(<doubleQuotes46>><doubleQuotes46>).append(' ')<newline46mondego>    .append(DUMP_LOC)<newline46mondego>    .toString();<newline46mondego>return new String[] {<doubleQuotes46>/bin/bash<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, expr};<newline46mondego>"
"2583splitHere46","17579486splitHere46","Dashboard"
"2584splitHere46","17579486splitHere46","session_id"
"2585splitHere46","17579486splitHere46","SELECT"
"2586splitHere46","17579486splitHere46","INSERT"
"2587splitHere46","17579486splitHere46","UNIQUE"
"2588splitHere46","17579486splitHere46","session_id"
"2589splitHere46","17579486splitHere46","ALTER TABLE Dashboard ADD UNIQUE KEY (session_id);<newline46mondego>"
"2590splitHere46","17579486splitHere46","INSERT ... ON DUPLICATE KEY UPDATE"
"2591splitHere46","17579486splitHere46","$qry = $db->prepare('<newline46mondego>  INSERT INTO Dashboard (<newline46mondego>     script_name,  version,  runtime,  status,  ranged,  attack,<newline46mondego>     defense,  strength,  magic,  session_id,  username<newline46mondego>  ) VALUES (<newline46mondego>    :script_name, :version, :runtime, :status, :ranged, :attack,<newline46mondego>    :defense, :strength, :magic, :session_id, :username<newline46mondego>  ) ON DUPLICATE KEY UPDATE<newline46mondego>    runtime  = runtime  + VALUES(runtime),<newline46mondego>    attack   = attack   + VALUES(status),<newline46mondego>    defense  = defense  + VALUES(defense),<newline46mondego>    strength = strength + VALUES(strength),<newline46mondego>    magic    = magic    + VALUES(magic)<newline46mondego>');<newline46mondego><newline46mondego>$qry->execute([<newline46mondego>  ':script_name' => $script_name,<newline46mondego>  ':version'     => $version,<newline46mondego>  ':runtime'     => $runtime,<newline46mondego>  ':status'      => $status,<newline46mondego>  ':ranged'      => $ranged,<newline46mondego>  ':attack'      => $attack,<newline46mondego>  ':$defense'    => $defense,<newline46mondego>  ':strength'    => $strength,<newline46mondego>  ':magic'       => $magic,<newline46mondego>  ':session_id'  => $sessionID,<newline46mondego>  ':username'    => $username<newline46mondego>]);<newline46mondego>"
"2592splitHere46","17579502splitHere46","ImageIO.write(image, <doubleQuotes46>png<doubleQuotes46>,new File(UndoFolder));<newline46mondego>"
"2593splitHere46","17579502splitHere46","ImageIO.write(image, <doubleQuotes46>.png<doubleQuotes46>,new File(UndoFolder));<newline46mondego>"
"2594splitHere46","17579619splitHere46","-fx-background-insets: 12;"
"2595splitHere46","17579619splitHere46","import javafx.application.Application;<newline46mondego>import javafx.beans.value.*;<newline46mondego>import javafx.concurrent.Worker;<newline46mondego>import javafx.event.*;<newline46mondego>import javafx.scene.Node;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.*;<newline46mondego>import javafx.scene.effect.BoxBlur;<newline46mondego>import javafx.scene.effect.Effect;<newline46mondego>import javafx.scene.layout.*;<newline46mondego>import javafx.scene.paint.Color;<newline46mondego>import javafx.scene.web.WebView;<newline46mondego>import javafx.stage.Modality;<newline46mondego>import javafx.stage.*;<newline46mondego><newline46mondego>/**<newline46mondego> * Application modal dialog with the following properties:<newline46mondego> *   translucent background<newline46mondego> *   drop-shadowed border<newline46mondego> *   non-rectangular shape<newline46mondego> *   blur effect applied to parent when dialog is showing<newline46mondego> *   configurable message text<newline46mondego> *   configurable yes and no event handlers<newline46mondego> */<newline46mondego>class ModalDialog extends Stage {<newline46mondego>    private static final Effect parentEffect = new BoxBlur();<newline46mondego><newline46mondego>    private final String messageText;<newline46mondego>    private final EventHandler<ActionEvent> yesEventHandler;<newline46mondego>    private final EventHandler<ActionEvent> noEventHandler;<newline46mondego><newline46mondego>    public ModalDialog(<newline46mondego>            Stage parent,<newline46mondego>            String messageText,<newline46mondego>            EventHandler<ActionEvent> yesEventHandler,<newline46mondego>            EventHandler<ActionEvent> noEventHandler) {<newline46mondego>        super(StageStyle.TRANSPARENT);<newline46mondego><newline46mondego>        this.messageText = messageText;<newline46mondego>        this.yesEventHandler = yesEventHandler;<newline46mondego>        this.noEventHandler = noEventHandler;<newline46mondego><newline46mondego>        // initialize the dialog<newline46mondego>        initOwner(parent);<newline46mondego>        initParentEffects(parent);<newline46mondego>        initModality(Modality.APPLICATION_MODAL);<newline46mondego>        setScene(createScene(createLayout()));<newline46mondego>    }<newline46mondego><newline46mondego>    private StackPane createLayout() {<newline46mondego>        StackPane layout = new StackPane();<newline46mondego>        layout.getChildren().setAll(<newline46mondego>                createGlassPane(),<newline46mondego>                createContentPane()<newline46mondego>        );<newline46mondego><newline46mondego>        return layout;<newline46mondego>    }<newline46mondego><newline46mondego>    private Pane createGlassPane() {<newline46mondego>        final Pane glassPane = new Pane();<newline46mondego>        glassPane.getStyleClass().add(<newline46mondego>                <doubleQuotes46>modal-dialog-glass<doubleQuotes46><newline46mondego>        );<newline46mondego><newline46mondego>        return glassPane;<newline46mondego>    }<newline46mondego><newline46mondego>    private Pane createContentPane() {<newline46mondego>        final HBox contentPane = new HBox();<newline46mondego>        contentPane.getStyleClass().add(<newline46mondego>                <doubleQuotes46>modal-dialog-content<doubleQuotes46><newline46mondego>        );<newline46mondego>        contentPane.getChildren().setAll(<newline46mondego>                new Label(messageText),<newline46mondego>                createYesButton(),<newline46mondego>                createNoButton()<newline46mondego>        );<newline46mondego><newline46mondego>        return contentPane;<newline46mondego>    }<newline46mondego><newline46mondego>    private Button createYesButton() {<newline46mondego>        final Button yesButton = new Button(<doubleQuotes46>Yes<doubleQuotes46>);<newline46mondego>        yesButton.setDefaultButton(true);<newline46mondego>        yesButton.setOnAction(yesEventHandler);<newline46mondego><newline46mondego>        return yesButton;<newline46mondego>    }<newline46mondego><newline46mondego>    private Button createNoButton() {<newline46mondego>        final Button noButton = new Button(<doubleQuotes46>No<doubleQuotes46>);<newline46mondego>        noButton.setOnAction(noEventHandler);<newline46mondego><newline46mondego>        return noButton;<newline46mondego>    }<newline46mondego><newline46mondego>    private Scene createScene(StackPane layout) {<newline46mondego>        Scene scene = new Scene(layout, Color.TRANSPARENT);<newline46mondego>        scene.getStylesheets().add(<newline46mondego>                getClass().getResource(<newline46mondego>                        <doubleQuotes46>modal-dialog.css<doubleQuotes46><newline46mondego>                ).toExternalForm()<newline46mondego>        );<newline46mondego><newline46mondego>        return scene;<newline46mondego>    }<newline46mondego><newline46mondego>    private void initParentEffects(final Stage parent) {<newline46mondego>        this.showingProperty().addListener(new ChangeListener<Boolean>() {<newline46mondego>            @Override public void changed(ObservableValue<? extends Boolean> observableValue, Boolean wasShowing, Boolean isShowing) {<newline46mondego>                parent.getScene().getRoot().setEffect(<newline46mondego>                        isShowing ? parentEffect : null<newline46mondego>                );<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Demonstrates a modal confirm box in JavaFX.<newline46mondego> * Dialog is rendered upon a blurred background.<newline46mondego> * Dialog is translucent.<newline46mondego> */<newline46mondego>public class ModalConfirmExample extends Application {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        launch(args);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start(final Stage primaryStage) {<newline46mondego>        final WebView webView = new WebView();<newline46mondego><newline46mondego>        final ModalDialog dialog = createWebViewPreferenceDialog(primaryStage, webView);<newline46mondego><newline46mondego>        // show the preference dialog each time a new page is loaded.<newline46mondego>        webView.getEngine().getLoadWorker().stateProperty().addListener(new ChangeListener<Worker.State>() {<newline46mondego>            @Override<newline46mondego>            public void changed(ObservableValue<? extends Worker.State> observableValue, Worker.State state, Worker.State newState) {<newline46mondego>                if (newState.equals(Worker.State.SUCCEEDED)) {<newline46mondego>                    dialog.show();<newline46mondego>                    dialog.toFront();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        webView.getEngine().load(<doubleQuotes46>http://docs.oracle.com/javafx/<doubleQuotes46>);<newline46mondego><newline46mondego>        // initialize the stage<newline46mondego>        primaryStage.setTitle(<doubleQuotes46>Modal Confirm Example<doubleQuotes46>);<newline46mondego>        primaryStage.setScene(new Scene(webView));<newline46mondego>        primaryStage.show();<newline46mondego>    }<newline46mondego><newline46mondego>    private ModalDialog createWebViewPreferenceDialog(final Stage primaryStage, final WebView webView) {<newline46mondego>        final EventHandler<ActionEvent> yesEventHandler =<newline46mondego>                new EventHandler<ActionEvent>() {<newline46mondego>                    @Override public void handle(ActionEvent actionEvent) {<newline46mondego>                        System.out.println(<doubleQuotes46>Liked: <doubleQuotes46> + webView.getEngine().getTitle());<newline46mondego>                        primaryStage.getScene().getRoot().setEffect(null);<newline46mondego>                        Stage dialogStage = getTargetStage(actionEvent);<newline46mondego>                        dialogStage.close();<newline46mondego>                    }<newline46mondego>                };<newline46mondego><newline46mondego>        final EventHandler<ActionEvent> noEventHandler =<newline46mondego>                new EventHandler<ActionEvent>() {<newline46mondego>                    @Override public void handle(ActionEvent actionEvent) {<newline46mondego>                        System.out.println(<doubleQuotes46>Disliked: <doubleQuotes46> + webView.getEngine().getTitle());<newline46mondego>                        primaryStage.getScene().getRoot().setEffect(null);<newline46mondego>                        Stage dialogStage = getTargetStage(actionEvent);<newline46mondego>                        dialogStage.close();<newline46mondego>                    }<newline46mondego>                };<newline46mondego><newline46mondego>        return new ModalDialog(primaryStage, <doubleQuotes46>Will you like this Page?<doubleQuotes46>, yesEventHandler, noEventHandler);<newline46mondego>    }<newline46mondego><newline46mondego>    private Stage getTargetStage(ActionEvent actionEvent) {<newline46mondego>        Node target = (Node) actionEvent.getTarget();<newline46mondego>        return ((Stage) target.getScene().getWindow());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2596splitHere46","17579619splitHere46",".root {<newline46mondego>  -fx-opacity: 0.9;<newline46mondego>}<newline46mondego><newline46mondego>.modal-dialog-glass {<newline46mondego>  -fx-effect: dropshadow(three-pass-box, derive(cadetblue, -20%), 10, 0, 4, 4); <newline46mondego>  -fx-background-color: derive(cadetblue, -20%); <newline46mondego>  -fx-background-insets: 12; <newline46mondego>  -fx-background-radius: 6;<newline46mondego>}<newline46mondego><newline46mondego>.modal-dialog-content {<newline46mondego>  -fx-padding: 20;<newline46mondego>  -fx-spacing: 10;<newline46mondego>  -fx-alignment: center;<newline46mondego>  -fx-font-size: 20;<newline46mondego>  -fx-background-color: linear-gradient(to bottom, derive(cadetblue, 20%), cadetblue);<newline46mondego>  -fx-border-color: derive(cadetblue, -20%);<newline46mondego>  -fx-border-width: 5;<newline46mondego>  -fx-background-insets: 12;<newline46mondego>  -fx-border-insets: 10;<newline46mondego>  -fx-border-radius: 6;<newline46mondego>  -fx-background-radius: 6;<newline46mondego>}<newline46mondego>"
"2597splitHere46","17579654splitHere46","select<newline46mondego>   students.student,<newline46mondego>   students.major,<newline46mondego>   students.trans,<newline46mondego>   prev_row.major prev_major,<newline46mondego>   prev_row.trans prev_trans<newline46mondego> from<newline46mondego>   students<newline46mondego>   join students prev_row<newline46mondego>     on (students.student = prev_row.student<newline46mondego>       and students.trans = prev_row.trans + 1<newline46mondego>       and students.major != prev_row.major)<newline46mondego> where<newline46mondego>   exists (select 'x'<newline46mondego>             from students prev_row<newline46mondego>            where students.student = prev_row.student<newline46mondego>                 and students.trans > prev_row.trans + 1<newline46mondego>                and students.major = prev_row.major);<newline46mondego>"
"2598splitHere46","17579654splitHere46","students.trans = prev_row.trans + 1"
"2599splitHere46","17579654splitHere46","students.major != prev_row.major"
"2600splitHere46","17579654splitHere46","Student     Maj.    Trans<newline46mondego>Student1    CS      1<newline46mondego>Student1    Math    2<newline46mondego>Student1    CS      3<newline46mondego>Student2    English 1<newline46mondego>Student2    Math    2<newline46mondego>Student2    Math    3<newline46mondego>Student2    Math    4<newline46mondego>Student2    English 5<newline46mondego>Student2    Law     6<newline46mondego>Student2    Math    6<newline46mondego>"
"2601splitHere46","17579654splitHere46","STUDENT     MAJOR   TRANS   PREV_MAJOR  PREV_TRANS<newline46mondego>Student1    CS      3       Math            2<newline46mondego>Student2    English 5       Math            4<newline46mondego>Student2    Math    6       English         5<newline46mondego>"
"2602splitHere46","17579654splitHere46","select<newline46mondego>   students.student,<newline46mondego>   students.major,<newline46mondego>   students.trans,<newline46mondego>   case when prev_row.student is not null<newline46mondego>             and exists (select 'x'<newline46mondego>                           from students prev_row<newline46mondego>                          where students.student = prev_row.student<newline46mondego>                               and students.trans > prev_row.trans + 1<newline46mondego>                               and students.major = prev_row.major)<newline46mondego>        then 1 else null end is_back<newline46mondego> from<newline46mondego>   students<newline46mondego>   left join students prev_row<newline46mondego>     on (students.student = prev_row.student<newline46mondego>       and students.trans = prev_row.trans + 1<newline46mondego>       and students.major != prev_row.major)<newline46mondego>"
"2603splitHere46","17579743splitHere46","for (int i = 0; i < 32; i++) {<newline46mondego>    for (int j = 0; j < 32; j++) {<newline46mondego><newline46mondego>        coords = new Coords(i, j);<newline46mondego>        int[] someData = new int[4];   // <==== create a new array for each Map value<newline46mondego>        // Every Coord gets a few random numbers<newline46mondego>        for (int k = 0; k < 4; k++) {<newline46mondego>            someData[k] = random.nextInt(8564);<newline46mondego>        }<newline46mondego><newline46mondego>        map.put(coords, someData);<newline46mondego><newline46mondego>    }<newline46mondego>"
"2604splitHere46","17579846splitHere46","String [] array = temp.split(<doubleQuotes46>\\s+<doubleQuotes46>); // split by whitespace<newline46mondego>Arrays.sort(array); // sort using mergesort with insertionsort<newline46mondego><newline46mondego>StringBuilder sb = new StringBuilder(temp.length());<newline46mondego><newline46mondego> for(String s : array){<newline46mondego>     sb.append(s).append(<doubleQuotes46> <doubleQuotes46>); <newline46mondego> }<newline46mondego><newline46mondego>temp = sb.toString(); // assign temp the new string <newline46mondego>"
"2605splitHere46","17579853splitHere46","print"
"2606splitHere46","17579853splitHere46","flush"
"2607splitHere46","17579853splitHere46","println"
"2608splitHere46","17579853splitHere46","System.out.flush()"
"2609splitHere46","17580072splitHere46","flush"
"2610splitHere46","17580072splitHere46","reset"
"2611splitHere46","17580072splitHere46","writeObject"
"2612splitHere46","17580385splitHere46","try-catch"
"2613splitHere46","17580385splitHere46","try{<newline46mondego>    d = df.parse(ds);<newline46mondego>   }<newline46mondego>catch(ParseException e){   <newline46mondego>   e.printStackTrace();<newline46mondego>   // log the exception<newline46mondego>   throw new RuntimeException(e);<newline46mondego>}<newline46mondego>"
"2614splitHere46","17580412splitHere46","<jta><newline46mondego><timeout-seconds>30</timeout-seconds><newline46mondego><completion-timeout-seconds>120</completion-timeout-seconds><newline46mondego></jta><newline46mondego>"
"2615splitHere46","17580528splitHere46","methodA"
"2616splitHere46","17580528splitHere46","methodB"
"2617splitHere46","17580528splitHere46","Example1"
"2618splitHere46","17580528splitHere46","Example2"
"2619splitHere46","17580528splitHere46","methodB"
"2620splitHere46","17580528splitHere46","Example1"
"2621splitHere46","17580528splitHere46","Example2"
"2622splitHere46","17580528splitHere46","Example1"
"2623splitHere46","17580528splitHere46","Example2"
"2624splitHere46","17580528splitHere46","public static void methodB()<newline46mondego>{<newline46mondego>    int count = 0;<newline46mondego><newline46mondego>    StackTraceElement[] elements = Thread.currentThread().getStackTrace();<newline46mondego>    for (StackTraceElement element : elements)<newline46mondego>    {<newline46mondego>        count += element.getLineNumber();<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(count);<newline46mondego>}<newline46mondego>"
"2625splitHere46","17580733splitHere46","int"
"2626splitHere46","17580795splitHere46","BluetoothDevice finaldevice = (BluetoothDevice) lv.getAdapter().getItem(arg2); <newline46mondego>"
"2627splitHere46","17580795splitHere46","Set<BluetoothDevice> pairedDevices = mBluetoothAdapter.getBondedDevices();<newline46mondego>// If there are paired devices<newline46mondego>if (pairedDevices.size() > 0) {<newline46mondego>    // Loop through paired devices<newline46mondego>    for (BluetoothDevice device : pairedDevices) {<newline46mondego>        // Add the name and address to an array adapter to show in a ListView<newline46mondego>        mArrayAdapter.add(device.getName() + <doubleQuotes46>\n<doubleQuotes46> + device.getAddress());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2628splitHere46","17580795splitHere46","BluetoothDevice device = btAdapter.getRemoteDevice(address);<newline46mondego>"
"2629splitHere46","17580795splitHere46","btSocket = device.createRfcommSocketToServiceRecord(MY_UUID);<newline46mondego>"
"2630splitHere46","17580795splitHere46","btSocket.connect();<newline46mondego>"
"2631splitHere46","17580822splitHere46","c.fill = GridBagConstraints.HORIZONTAL;<newline46mondego>"
"2632splitHere46","17580822splitHere46","c.fill = GridBagConstraints.NONE;<newline46mondego>"
"2633splitHere46","17580829splitHere46","ClassA"
"2634splitHere46","17580829splitHere46","public class ClassA {<newline46mondego><newline46mondego>    @Inject<newline46mondego>    private ApplicationContext appContext;<newline46mondego><newline46mondego>    private ClassB classB;<newline46mondego><newline46mondego>    //Bean will be instanciated when this method is called<newline46mondego>    public ClassB getClassB() { <newline46mondego>        if (classB == null) {<newline46mondego>            classB = appContext.getBean(ClassB.class);<newline46mondego>        }<newline46mondego>        return classB;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2635splitHere46","17580851splitHere46","-link"
"2636splitHere46","17581017splitHere46","public <T1 extends GenericMessage> List<GenericMessage<T1>> getList(Class<T1> clazz) {<newline46mondego>    return new ArrayList<T1>();<newline46mondego>}<newline46mondego>"
"2637splitHere46","17581017splitHere46","private class GenericMessageListCreator {<newline46mondego>    public <U, V extends GenericMessage<U>> List<U> getList(Class<V> clazz){<newline46mondego>        return new ArrayList<U>();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private class GenericMessage<T> {<newline46mondego>    public GenericMessage(){};<newline46mondego>    private T internalValue;<newline46mondego><newline46mondego>    public void setValue(T value)<newline46mondego>    {<newline46mondego>        this.internalValue = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public void echoValue() {<newline46mondego>        System.out.println(<doubleQuotes46>I contain <doubleQuotes46> + internalValue);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private class StringMessage extends GenericMessage<String>{}<newline46mondego>private class IntegerMessage extends GenericMessage<Integer>{}<newline46mondego>"
"2638splitHere46","17581017splitHere46","List<String"
"2639splitHere46","17581017splitHere46","List<String> stringList = new GenericMessageListCreator().getList(StringMessage.class);<newline46mondego>"
"2640splitHere46","17581167splitHere46","append()"
"2641splitHere46","17581167splitHere46",".append(this.class() + respone.getStatus() + response.getCode());<newline46mondego>"
"2642splitHere46","17581238splitHere46","private static String DB_PATH = <doubleQuotes46>/data/data/com.example.mydbapp/databases/<doubleQuotes46>;<newline46mondego>"
"2643splitHere46","17581238splitHere46","private boolean checkDatabase(){<newline46mondego>    File dbFile = new File(DB_PATH + DB_NAME);<newline46mondego>    if(dbFile.exists()){<newline46mondego>       return true;<newline46mondego>    }<newline46mondego>    else{<newline46mondego>       //This'll create the directories you wanna write to, so you<newline46mondego>       //can put the DB in the right spot.<newline46mondego>       dbFile.getParentFile().mkdirs();<newline46mondego>       return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2644splitHere46","17581238splitHere46","//YOU NAME THIS myInput:<newline46mondego>    InputStream myInput = firstDBContext.getAssets().open(DB_NAME);<newline46mondego>    String outFileName = DB_PATH + DB_NAME;<newline46mondego>    OutputStream bnOutput = new FileOutputStream(outFileName);<newline46mondego>    byte[] buffer = new byte[1024];<newline46mondego>    int length; <newline46mondego>    //YOU READ FROM bnInput:<newline46mondego>    while ((length = bnInput.read(buffer)) > 0){<newline46mondego>        bnOutput.write(buffer, 0, length);<newline46mondego>    }<newline46mondego>"
"2645splitHere46","17581238splitHere46","this.getReadableDatabase();<newline46mondego>"
"2646splitHere46","17581279splitHere46","Test.jar"
"2647splitHere46","17581279splitHere46","MANIFEST.MF"
"2648splitHere46","17581279splitHere46","Class-Path: poi-3.9-20121203.jar<newline46mondego>"
"2649splitHere46","17581326splitHere46","JLabel"
"2650splitHere46","17581326splitHere46","JPanel"
"2651splitHere46","17581326splitHere46","JPanel"
"2652splitHere46","17581326splitHere46","import javax.imageio.ImageIO;<newline46mondego>import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>//No need to extend your class with JFrame<newline46mondego>public class Board {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                JFrame frame = new JFrame();<newline46mondego>                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>                //Instantiate Panel class.<newline46mondego>                Panel panel = new Panel();<newline46mondego>                //Set instance of Panel class as a content pane for your JFrame<newline46mondego>                frame.setContentPane(panel);<newline46mondego>                //Avoid calling setSize. Call pack instead<newline46mondego>                frame.pack();<newline46mondego>                //If you want to position your frame on center of screen, no need<newline46mondego>                //for fancy calculations. This is how you can do it.<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /*Image will be displayed on JPanel*/<newline46mondego>    private static class Panel extends JPanel {<newline46mondego>        BufferedImage image;<newline46mondego><newline46mondego>        public Panel() {<newline46mondego>            try {<newline46mondego>                //String you are passing in <doubleQuotes46>new File()<doubleQuotes46> is a path to your image<newline46mondego>                image = ImageIO.read(new File(<doubleQuotes46>path-to-your-image<doubleQuotes46>));<newline46mondego>            } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        /*Override this method to display graphics on JPanel.<newline46mondego>        * Do not override paint method!*/<newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            g.drawImage(image,0,0,this);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        /*Override getPreferredSize method so it returns dimensions of your image.<newline46mondego>        * Size of your container (Panel) will be equal to size of that image*/<newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            return new Dimension(image.getWidth(),image.getHeight());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2653splitHere46","17581371splitHere46","... onCreate()<newline46mondego>  {<newline46mondego>  setContentView(...);<newline46mondego>  ViewGroup myContainer=(ViewGroup)findViewById(R.id.myContainer);<newline46mondego>  View v=inflateMySpecialView();<newline46mondego>  //=<set layoutParams for the view if needed<newline46mondego>  myContainer.addView(v);<newline46mondego>  }<newline46mondego><newline46mondego>public View inflateMySpecialView()<newline46mondego>  {<newline46mondego>  ViewGroup viewgroup=(ViewGroup ) getLayoutInflater().inflate(R.layout.my_custom_layout, null,false);<newline46mondego>  //do some stuff with the inflated viewgroup.<newline46mondego>  return viewgroup;<newline46mondego>  }<newline46mondego>"
"2654splitHere46","17581443splitHere46","Month"
"2655splitHere46","17581573splitHere46","keytool"
"2656splitHere46","17581573splitHere46","Path"
"2657splitHere46","17581573splitHere46","keytool"
"2658splitHere46","17581573splitHere46","Computer"
"2659splitHere46","17581573splitHere46","Properties"
"2660splitHere46","17581573splitHere46","Advanced system settings"
"2661splitHere46","17581573splitHere46","Environment Variables..."
"2662splitHere46","17581573splitHere46","Path"
"2663splitHere46","17581573splitHere46","System variables"
"2664splitHere46","17581573splitHere46","Edit..."
"2665splitHere46","17581573splitHere46","OK"
"2666splitHere46","17581748splitHere46","t.start()"
"2667splitHere46","17581748splitHere46","t.run()"
"2668splitHere46","17581748splitHere46","t.start()"
"2669splitHere46","17581748splitHere46","run()"
"2670splitHere46","17581748splitHere46","t.start()"
"2671splitHere46","17581748splitHere46","t.run()"
"2672splitHere46","17581748splitHere46","t"
"2673splitHere46","17581748splitHere46","t.join()"
"2674splitHere46","17581748splitHere46","Thread A<newline46mondego>|<newline46mondego>+- t.start() ---> starts Thread B<newline46mondego>+- t.run()               +- t.run()<newline46mondego>|                        |<newline46mondego>+- t.join() waits for B  |<newline46mondego>|           to finish    |<newline46mondego>|               \------> +- Thread B stops<newline46mondego>+- t.doIt()<newline46mondego>+- Thread A stops<newline46mondego>"
"2675splitHere46","17581791splitHere46","xml-bindings"
"2676splitHere46","17581791splitHere46","java-type"
"2677splitHere46","17581850splitHere46","while (true)"
"2678splitHere46","17581858splitHere46","public String helloName(String input) {<newline46mondego>    return <doubleQuotes46>Hello <doubleQuotes46> + input + <doubleQuotes46>!<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"2679splitHere46","17581858splitHere46","System.out.println(helloName(<doubleQuotes46>Bob<doubleQuotes46>)); // prints <doubleQuotes46>Hello Bob!<doubleQuotes46><newline46mondego>"
"2680splitHere46","17581858splitHere46","public class HelloTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        HelloTest test = new HelloTest();<newline46mondego>        System.out.println(test.helloName(<doubleQuotes46>Bob<doubleQuotes46>));<newline46mondego>    }<newline46mondego>    public String helloName(String input) {<newline46mondego>        return <doubleQuotes46>Hello <doubleQuotes46> + input + <doubleQuotes46>!<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2681splitHere46","17581907splitHere46","<plugin><newline46mondego>            <groupId>org.apache.maven.plugins</groupId><newline46mondego>            <artifactId>maven-antrun-plugin</artifactId><newline46mondego>            <version>1.7</version><newline46mondego>            <executions><newline46mondego>                <execution> <id>createDistJar</id> <newline46mondego>                    <goals> <goal>run</goal> </goals>  <phase>package</phase><newline46mondego>                    <configuration><newline46mondego>                        <target><newline46mondego>                            <echo message=<doubleQuotes46>${project.build.directory}<doubleQuotes46>/><newline46mondego>                            <mkdir dir=<doubleQuotes46>${project.build.directory}<doubleQuotes46>/><newline46mondego>                            <zip destfile=<doubleQuotes46>${project.build.directory}/JawaBot-${project.version}-dist.zip<doubleQuotes46><newline46mondego>                                basedir=<doubleQuotes46>target/<doubleQuotes46> includes=<doubleQuotes46>JawaBot-${project.version}-dist-rh/**<doubleQuotes46>><newline46mondego>                            </zip><newline46mondego>                        </target><newline46mondego>                    </configuration><newline46mondego>                </execution><newline46mondego>            </executions><newline46mondego>        </plugin><newline46mondego>        <plugin><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego>            <artifactId>build-helper-maven-plugin</artifactId><newline46mondego>            <version>1.8</version><newline46mondego>            <executions><newline46mondego>                <execution><newline46mondego>                    <id>uploadDistJar</id> <goals>  <goal>attach-artifact</goal>  </goals><newline46mondego>                    <phase>package</phase><newline46mondego>                    <configuration><newline46mondego>                        <artifacts><newline46mondego>                            <artifact><newline46mondego>                                <file>${project.build.directory}/JawaBot-${project.version}-dist.zip</file><newline46mondego>                                <type>zip</type><newline46mondego>                            </artifact><newline46mondego>                        </artifacts><newline46mondego>                    </configuration><newline46mondego>                </execution><newline46mondego>            </executions><newline46mondego>        </plugin><newline46mondego>"
"2682splitHere46","17581965splitHere46","java -classpath ./db2jcc_license_cu.jar:./db2jcc4.jar:. CreateCoffees<newline46mondego>"
"2683splitHere46","17581965splitHere46","-classpath"
"2684splitHere46","17581965splitHere46","."
"2685splitHere46","17582003splitHere46","mDateFormat"
"2686splitHere46","17582003splitHere46","SpannableString"
"2687splitHere46","17582003splitHere46","String"
"2688splitHere46","17582003splitHere46","mDate"
"2689splitHere46","17582003splitHere46","SpannableString content = new SpannableString(mDateFormat.format(mDate));<newline46mondego>"
"2690splitHere46","17582115splitHere46","[-3, 123, 89, 0, -34, 78, -45, -78]"
"2691splitHere46","17582115splitHere46","String line = new String(Arrays.toString(name_of_array))"
"2692splitHere46","17582115splitHere46","public class StringToByteArray {<newline46mondego>public static void main(String args[])<newline46mondego>{<newline46mondego>    String line= <doubleQuotes46>[-3, 123, 89, 0, -34, 78, -45, -78]<doubleQuotes46>;<newline46mondego>    String some=line.substring(1, line.length()-1);     <newline46mondego>    int element_counter=1;<newline46mondego><newline46mondego>    for(int i=0; i<some.length(); i++)<newline46mondego>    {           <newline46mondego>        if (some.substring(i, i+1).equals(<doubleQuotes46>,<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            element_counter++;<newline46mondego>        }       <newline46mondego><newline46mondego>    }<newline46mondego>    int [] comas =new int[element_counter-1];<newline46mondego>    byte [] a=new byte[element_counter];<newline46mondego>    if (a.length==1)<newline46mondego>    {<newline46mondego>        a[0]= Byte.parseByte(some.substring(0));<newline46mondego>    }       <newline46mondego>    else <newline46mondego>    {<newline46mondego>        int j=0;<newline46mondego>        for (int i = 0; i < some.length(); i++) <newline46mondego>        {<newline46mondego>            if (some.substring(i, i+1).equals(<doubleQuotes46>,<doubleQuotes46>))<newline46mondego>            {<newline46mondego>                comas[j]=i;<newline46mondego>                j++;<newline46mondego>            }<newline46mondego>        }           <newline46mondego>        for (int i=0; i<element_counter; i++)<newline46mondego>        {<newline46mondego>            if(i==0)<newline46mondego>            {<newline46mondego>                a[i]=Byte.parseByte(some.substring(0, comas[i]));<newline46mondego>            }<newline46mondego>            else if (i==element_counter-1)<newline46mondego>            {<newline46mondego>                a[i]=Byte.parseByte(some.substring(comas[comas.length-1]+2));<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                a[i]=Byte.parseByte(some.substring(comas[i-1]+2, comas[i]));<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(a[0]);<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"2693splitHere46","17582115splitHere46","-3"
"2694splitHere46","17582240splitHere46","Student"
"2695splitHere46","17582240splitHere46","static"
"2696splitHere46","17582240splitHere46","public class Student {<newline46mondego><newline46mondego>    private static int id;<newline46mondego>    //other fields...<newline46mondego>    //constructor...<newline46mondego>    //getters and setters...<newline46mondego>}<newline46mondego>"
"2697splitHere46","17582240splitHere46","static"
"2698splitHere46","17582240splitHere46","public class Student {<newline46mondego><newline46mondego>    //field must not be static<newline46mondego>    private int id;<newline46mondego><newline46mondego>    //other non-static fields...<newline46mondego>    //constructor...<newline46mondego>    //getters and setters...<newline46mondego>}<newline46mondego>"
"2699splitHere46","17582240splitHere46","static"
"2700splitHere46","17582240splitHere46","Converter"
"2701splitHere46","17582240splitHere46","static"
"2702splitHere46","17582240splitHere46","static"
"2703splitHere46","17582240splitHere46","static"
"2704splitHere46","17582240splitHere46","Student"
"2705splitHere46","17582240splitHere46","static"
"2706splitHere46","17582323splitHere46","AbstractMap.SimpleImmutableEntry"
"2707splitHere46","17582358splitHere46","HashBasedTable"
"2708splitHere46","17582358splitHere46","Map<Double, Map<Double, Integer>>"
"2709splitHere46","17582358splitHere46","user_to_user.column(user)"
"2710splitHere46","17582358splitHere46","user"
"2711splitHere46","17582358splitHere46","user_to_user.column(user)"
"2712splitHere46","17582358splitHere46","Map"
"2713splitHere46","17582397splitHere46","AUD$"
"2714splitHere46","17582501splitHere46","usernameField"
"2715splitHere46","17582501splitHere46","ActionEvent"
"2716splitHere46","17582501splitHere46","usernameField"
"2717splitHere46","17582501splitHere46","initializeGUI"
"2718splitHere46","17582501splitHere46","usernameField"
"2719splitHere46","17582501splitHere46","initializeGUI"
"2720splitHere46","17582501splitHere46","import java.awt.FlowLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JPasswordField;<newline46mondego>import javax.swing.JTextField;<newline46mondego><newline46mondego>public class BobLogin extends JFrame implements ActionListener {<newline46mondego><newline46mondego>    // Declare all of the component variables.<newline46mondego>    private JButton login;<newline46mondego>    //Here is an issue fix!<newline46mondego>    private JTextField usernameField = new JTextField(20);<newline46mondego>    private JPasswordField passwordField = new JPasswordField(20);;<newline46mondego>    private JLabel username;<newline46mondego>    private JLabel password;<newline46mondego>    private JFrame loginFrame;<newline46mondego><newline46mondego>    private String usernameText = <doubleQuotes46>Username:<doubleQuotes46>;<newline46mondego>    private int usernameColumns = 20;<newline46mondego>    private String passwordText = <doubleQuotes46>Password:<doubleQuotes46>;<newline46mondego>    private int passwordColumns = 20;<newline46mondego><newline46mondego>    //Declare all of the constants.<newline46mondego>    private static final int WIDTH = 300;<newline46mondego>    private static final int HEIGHT = 300;<newline46mondego><newline46mondego>    //Login password and username.<newline46mondego>    private static final String correctUsername = <doubleQuotes46>Admin<doubleQuotes46>;<newline46mondego>    private static final String correctPassword = <doubleQuotes46>Password<doubleQuotes46>;<newline46mondego><newline46mondego>    //Constructor that calls initliaziation method when an object is created.<newline46mondego>    public BobLogin() {<newline46mondego>        initializeGUI();<newline46mondego>    }<newline46mondego><newline46mondego>    //Sets up the login GUI.<newline46mondego>    private void initializeGUI() {<newline46mondego>        JButton login = new JButton(<doubleQuotes46>Login<doubleQuotes46>);<newline46mondego>        JLabel username = new JLabel(usernameText);<newline46mondego>        JLabel password = new JLabel(passwordText);<newline46mondego>        JFrame loginFrame = new JFrame();<newline46mondego>        JPanel loginPanel = new JPanel(new FlowLayout());<newline46mondego>        loginPanel.add(username);<newline46mondego>        loginPanel.add(usernameField);<newline46mondego>        loginPanel.add(password);<newline46mondego>        loginPanel.add(passwordField);<newline46mondego>        loginPanel.add(login);<newline46mondego>        login.addActionListener(this);<newline46mondego>        loginFrame.add(loginPanel);<newline46mondego>        // loginFrame.setSize(WIDTH, HEIGHT);<newline46mondego>        loginFrame.pack();<newline46mondego>        loginFrame.setLocationRelativeTo(null);<newline46mondego>        loginFrame.setResizable(false);<newline46mondego>        loginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        loginFrame.setVisible(true);<newline46mondego>        //username.req<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        BobLogin bobLogin = new BobLogin();<newline46mondego>    }<newline46mondego><newline46mondego>    //What happens when the <doubleQuotes46>Login<doubleQuotes46> button is clicked.<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        String usernameResponse = usernameField.getText();<newline46mondego>        //String passwordResponse = passwordField.getText();<newline46mondego>        if(usernameResponse.equalsIgnoreCase(<doubleQuotes46>Admin<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Correct<doubleQuotes46>);<newline46mondego>        }else{<newline46mondego>            System.exit(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2721splitHere46","17582526splitHere46","v"
"2722splitHere46","17582526splitHere46","s"
"2723splitHere46","17582526splitHere46","0 <= v·s <= s·s<newline46mondego>"
"2724splitHere46","17582526splitHere46","public static boolean inRange(double start_x, double start_y, double end_x, double end_y,<newline46mondego>                              double point_x, double point_y) {<newline46mondego>    double dx = end_x - start_x;<newline46mondego>    double dy = end_y - start_y;<newline46mondego>    double innerProduct = (point_x - start_x)*dx + (point_y - start_y)*dy;<newline46mondego>    return 0 <= innerProduct && innerProduct <= dx*dx + dy*dy;<newline46mondego>}<newline46mondego>"
"2725splitHere46","17582687splitHere46","String data = <doubleQuotes46>someBigOrSmallData<doubleQuotes46>;<newline46mondego><newline46mondego>InputStream dataStream = new ByteArrayInputStream(data.getBytes());<newline46mondego><newline46mondego>response().setHeader(<doubleQuotes46>Content-disposition<doubleQuotes46>,<doubleQuotes46>attachment; filename=anyFileName.txt<doubleQuotes46>);<newline46mondego><newline46mondego>return ok(dataStream);<newline46mondego>"
"2726splitHere46","17582730splitHere46","ItemFacadeREST contains multiple parameters with no annotation.<newline46mondego>"
"2727splitHere46","17582730splitHere46","{<newline46mondego><newline46mondego>    <doubleQuotes46>id1<doubleQuotes46>:[<newline46mondego>        <doubleQuotes46>string1<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>string2<doubleQuotes46><newline46mondego>    ],<newline46mondego>    <doubleQuotes46>id2<doubleQuotes46>:[<newline46mondego>        <doubleQuotes46>string3<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>string4<doubleQuotes46><newline46mondego>    ],<newline46mondego>    <doubleQuotes46>oo<doubleQuotes46>:[<newline46mondego>        {<newline46mondego>            <doubleQuotes46>object1<doubleQuotes46>:<doubleQuotes46><doubleQuotes46><newline46mondego>        },<newline46mondego>        {<newline46mondego>            <doubleQuotes46>object2<doubleQuotes46>:<doubleQuotes46><doubleQuotes46><newline46mondego>        }<newline46mondego>    ]<newline46mondego>}<newline46mondego>"
"2728splitHere46","17582730splitHere46","@POST<newline46mondego> @Path(<doubleQuotes46>Test3<doubleQuotes46>)<newline46mondego> @Produces(<doubleQuotes46>text/plain<doubleQuotes46>)<newline46mondego> @Consumes({<doubleQuotes46>application/json<doubleQuotes46>})<newline46mondego>  public String Test3(MyJsonObject json) {<newline46mondego>        //Parse the JSON object <newline46mondego><newline46mondego>    }<newline46mondego>"
"2729splitHere46","17582730splitHere46","MyJsonObject"
"2730splitHere46","17582732splitHere46","import"
"2731splitHere46","17582732splitHere46","FileRead2"
"2732splitHere46","17582732splitHere46","importTeams()"
"2733splitHere46","17582732splitHere46","// Since FileRead2 has some member variable, you should also think about<newline46mondego>// initializing it appropriately if it is needed by importTeams method.<newline46mondego>FileRead2 fileRead2Obj = new FileRead2();<newline46mondego>fileRead2Obj.importTeams();<newline46mondego>"
"2734splitHere46","17582732splitHere46","importTeams()"
"2735splitHere46","17582732splitHere46","FileRead2.importTeams();<newline46mondego>"
"2736splitHere46","17582775splitHere46","String.replace()"
"2737splitHere46","17582775splitHere46","else<newline46mondego>{<newline46mondego>    charString[i] = string.charAt(k);<newline46mondego>    k++;<newline46mondego>}<newline46mondego>"
"2738splitHere46","17582775splitHere46","k= k+1"
"2739splitHere46","17582775splitHere46","k++"
"2740splitHere46","17582775splitHere46","for(int i = 0; i < index; i++) // also change your index <newline46mondego>{<newline46mondego>    if(string.charAt(k) == ' ')<newline46mondego>    {<newline46mondego>        charString[i] = '%';<newline46mondego>        charString[i+1] = '2';<newline46mondego>        charString[i+2] = '0';<newline46mondego>        i = i +2;<newline46mondego>    }<newline46mondego>    else<newline46mondego>    { // these braces are not needed now but inculde them to make my <newline46mondego>      // point above valid<newline46mondego>        charString[i] = string.charAt(k);<newline46mondego>    }<newline46mondego>    //increment every time<newline46mondego>    k++;<newline46mondego>}<newline46mondego>"
"2741splitHere46","17582776splitHere46","paint"
"2742splitHere46","17582776splitHere46","paintComponent"
"2743splitHere46","17582776splitHere46","paintComponent"
"2744splitHere46","17582776splitHere46","getModel"
"2745splitHere46","17582839splitHere46","TabHost tabHost=(TabHost)findViewById(R.id.tabHost);<newline46mondego>        tabHost.setup();<newline46mondego>        EditText editor = new EditText(this);<newline46mondego>        TabSpec spec1=tabHost.newTabSpec(<doubleQuotes46>Tab 1<doubleQuotes46>);<newline46mondego>        spec1.setIndicator(editor); <newline46mondego>"
"2746splitHere46","17582839splitHere46","TabHost tabHost=(TabHost)findViewById(R.id.tabHost);<newline46mondego>            tabHost.setup();<newline46mondego>            final EditText editor = new EditText(this);<newline46mondego>            TabSpec spec1=tabHost.newTabSpec(<doubleQuotes46>Tab 1<doubleQuotes46>);<newline46mondego>            spec1.setContent(new TabHost.TabContentFactory(){<newline46mondego>                 public View createTabContent(String tag){<newline46mondego>                     return editor;<newline46mondego>                 }<newline46mondego>             });<newline46mondego>"
"2747splitHere46","17583175splitHere46","@JsonIgnoreProperties"
"2748splitHere46","17583175splitHere46","public class Parent {<newline46mondego>   @JsonIgnoreProperties({<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>description<doubleQuotes46> }) // leave <doubleQuotes46>id<doubleQuotes46> and whatever child has<newline46mondego>   public Child child; // or use for getter or setter<newline46mondego>}<newline46mondego>"
"2749splitHere46","17583175splitHere46","public class Child {<newline46mondego>    // use value of this property _instead_ of object<newline46mondego>    @JsonValue<newline46mondego>    public int id;<newline46mondego>}<newline46mondego>"
"2750splitHere46","17583175splitHere46","@JsonIdentityInfo"
"2751splitHere46","17583175splitHere46","public class Parent {<newline46mondego>   @JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property=<doubleQuotes46>id<doubleQuotes46>)<newline46mondego>   @JsonIdentityReference(alwaysAsId=true) // otherwise first ref as POJO, others as id<newline46mondego>   public Child child; // or use for getter or setter<newline46mondego><newline46mondego>   // if using 'PropertyGenerator', need to have id as property -- not the only choice<newline46mondego>   public int id;<newline46mondego>}<newline46mondego>"
"2752splitHere46","17583319splitHere46","Properties"
"2753splitHere46","17583319splitHere46","Java Build Path"
"2754splitHere46","17583490splitHere46","public String elapsedToString(long elapsedTimeMillis) {<newline46mondego>    long seconds = (elapsedTimeMillis + 500) / 1000; // round<newline46mondego>    long minutes = seconds / 60;<newline46mondego>    long hours = minutes / 60;<newline46mondego>    return String.format(<doubleQuotes46>%1$02d:%2$02d:%3$02d<doubleQuotes46>,<newline46mondego>        hours,<newline46mondego>        minutes % 60,<newline46mondego>        seconds % 60);<newline46mondego>}<newline46mondego>"
"2755splitHere46","17583490splitHere46","public String elapsedToString(long elapsedTimeMillis) {<newline46mondego>    long hundredths = (elapsedTimeMillis + 5) / 10; // round<newline46mondego>    long seconds = hundredths / 100;<newline46mondego>    long minutes = seconds / 60;<newline46mondego>    return String.format(<doubleQuotes46>%1$02d:%2$02d.%3$02d<doubleQuotes46>,<newline46mondego>        minutes,<newline46mondego>        seconds % 60,<newline46mondego>        hundredths % 100);<newline46mondego>}<newline46mondego>"
"2756splitHere46","17583594splitHere46","double radians = dir*Math.PI/180.0;<newline46mondego>x += (int)(spd*Math.cos(dir));<newline46mondego>y -= (int) (spd * Math.sin(dir));`  // I don't know why you do this.  Funny left-handed coordinate system.<newline46mondego>"
"2757splitHere46","17583594splitHere46","vx = speed*Math.cos(angle);<newline46mondego>vy = speed*Math.sin(angle);<newline46mondego>dx = vx*dt;<newline46mondego>dy = vy*dt;<newline46mondego>x += dx;  // movement in x-direction after dt time w/ constant velocity<newline46mondego>y += dy;  // movement in y-direction after dt time w/ constant velocity<newline46mondego>"
"2758splitHere46","17583647splitHere46","<prefer-application-packages><newline46mondego>    <package-name>antlr.*</package-name><newline46mondego></prefer-application-packages><newline46mondego>"
"2759splitHere46","17583653splitHere46","int"
"2760splitHere46","17583653splitHere46","hashCode"
"2761splitHere46","17583674splitHere46","I eye = null;  // which 'I' is it?<newline46mondego>"
"2762splitHere46","17583711splitHere46","SpringLayout"
"2763splitHere46","17583711splitHere46","getMaximumSize"
"2764splitHere46","17583711splitHere46","getPreferredSize"
"2765splitHere46","17583711splitHere46","SpringLayout"
"2766splitHere46","17583711splitHere46","SpringLayout"
"2767splitHere46","17583711splitHere46","Y"
"2768splitHere46","17583711splitHere46","Z"
"2769splitHere46","17583711splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class Blah extends JPanel {<newline46mondego>    public Blah() {<newline46mondego>        final JButton X = new JButton(<doubleQuotes46>X<doubleQuotes46>);<newline46mondego>        final JLabel Y = new JLabel(<doubleQuotes46>yyyyyyyyyyy<doubleQuotes46>);<newline46mondego>        Y.setOpaque(true);<newline46mondego>        Y.setBackground(Color.YELLOW);<newline46mondego>        final JProgressBar Z = new JProgressBar();<newline46mondego>        Z.setIndeterminate(true);<newline46mondego><newline46mondego>        final SpringLayout l = new SpringLayout();<newline46mondego>        super.setLayout(l);<newline46mondego><newline46mondego>        super.add(X);<newline46mondego>        super.add(Y);<newline46mondego>        super.add(Z);<newline46mondego><newline46mondego>        Z.setMaximumSize(Z.getPreferredSize());<newline46mondego><newline46mondego>        l.putConstraint(SpringLayout.WEST, X, 10, SpringLayout.WEST, this);<newline46mondego>        l.putConstraint(SpringLayout.WEST, Y, 10, SpringLayout.EAST, X);<newline46mondego>        l.putConstraint(SpringLayout.WEST, Z, 10, SpringLayout.EAST, Y);<newline46mondego>        l.putConstraint(SpringLayout.EAST, this, 10, SpringLayout.EAST, Z);<newline46mondego><newline46mondego>        l.putConstraint(SpringLayout.NORTH, X, 10, SpringLayout.NORTH, this);<newline46mondego>        l.putConstraint(SpringLayout.NORTH, Y, 10, SpringLayout.NORTH, this);<newline46mondego>        l.putConstraint(SpringLayout.NORTH, Z, 10, SpringLayout.NORTH, this);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                final JFrame frame = new JFrame(<doubleQuotes46>Blah<doubleQuotes46>);<newline46mondego>                frame.add(new Blah());<newline46mondego>                frame.pack();<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2770splitHere46","17583754splitHere46","${JDK}/bin/jvisualvm.exe<newline46mondego>"
"2771splitHere46","17583857splitHere46","hashCode()"
"2772splitHere46","17583857splitHere46","equals()"
"2773splitHere46","17583857splitHere46","SortedSet"
"2774splitHere46","17583861splitHere46","public class MyMapper extends Mapper<LongWritable, Text, IntWritable, Text> {<newline46mondego>    private IntWritable mapId;<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void setup(Context context) throws IOException,<newline46mondego>            InterruptedException {<newline46mondego>        mapId = new IntWritable(context.getTaskAttemptID().getTaskID().getId());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void map(LongWritable key, Text value, Context context)<newline46mondego>            throws IOException, InterruptedException {<newline46mondego>        // ...<newline46mondego><newline46mondego>        context.write(mapId, value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2775splitHere46","17583898splitHere46","*.class"
"2776splitHere46","17583898splitHere46","java.exe"
"2777splitHere46","17583898splitHere46","*.class"
"2778splitHere46","17583898splitHere46","++i;<newline46mondego>"
"2779splitHere46","17583898splitHere46","iinc 0 1<newline46mondego>"
"2780splitHere46","17583954splitHere46","run()"
"2781splitHere46","17583954splitHere46","Runnable"
"2782splitHere46","17584365splitHere46","KeyListener"
"2783splitHere46","17584425splitHere46","if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER) ||<newline46mondego>    locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)){<newline46mondego>        Toast.makeText(this, <doubleQuotes46>GPS/Network is Enabled in your device<doubleQuotes46>, <newline46mondego>            Toast.LENGTH_SHORT).show();<newline46mondego>    }else{<newline46mondego>        displayAlert();<newline46mondego>    }<newline46mondego>"
"2784splitHere46","17584604splitHere46","public Employee getItemAt(int position){<newline46mondego>    return listEmployees.get(position);<newline46mondego>}<newline46mondego>"
"2785splitHere46","17584604splitHere46","public void onItemClick(AdapterView<?> parent, View view, int position, long id){<newline46mondego>    Employee e = adapter.getItemAt(position); //or whatever your adapter instance is named<newline46mondego>    Toast.makeText(getApplicationContext(), e.getName(), Toast.LENGTH_SHORT).show();<newline46mondego>}<newline46mondego>"
"2786splitHere46","17584631splitHere46","geronimo-servlet_3.0_spec-1.0.jar<newline46mondego>geronimo-javamail_1.4_spec-1.7.1.jar<newline46mondego>stax-api-1.0.1.jar<newline46mondego>"
"2787splitHere46","17584637splitHere46","/myconfig.pb"
"2788splitHere46","17584637splitHere46","// ..<newline46mondego><argument>verbose</argument><newline46mondego><argument>/myconfig.pb</argument><newline46mondego>// ..<newline46mondego>"
"2789splitHere46","17584637splitHere46","/myconfig.pb"
"2790splitHere46","17584637splitHere46","/MyConfig.pb"
"2791splitHere46","17584665splitHere46","public class Worker implements Runnable {<newline46mondego>    final private int minIndex; // first index, inclusive<newline46mondego>    final private int maxIndex; // last index, exclusive<newline46mondego>    final private float[] data;<newline46mondego><newline46mondego>    public Worker(int minIndex, int maxIndex, float[] data) {<newline46mondego>        this.minIndex = minIndex;<newline46mondego>        this.maxIndex = maxIndex;<newline46mondego>        this.data = data;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        for(int i = minIndex; i < maxIndex; i++) {<newline46mondego>            if(data[i] >= 0.75) {<newline46mondego>                // do something interesting<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// *** Main Thread ***<newline46mondego>float[] data = new float[12000];<newline46mondego>int increment = data.length / 8;<newline46mondego>for(int i = 0; i < 8; i++) {<newline46mondego>    new Thread(new Worker(i * increment, (i + 1) * increment, data)).start();<newline46mondego>}<newline46mondego>"
"2792splitHere46","17584665splitHere46","public class Worker implements Runnable {<newline46mondego>    final private BlockingQueue<Integer> queue;<newline46mondego>    final private float[] data;<newline46mondego><newline46mondego>    public Worker(BlockingQueue<Integer> queue) {<newline46mondego>        this.queue = queue;<newline46mondego>        this.data = data;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        while(true) {<newline46mondego>            int i = queue.take();<newline46mondego>            float f = data[i];<newline46mondego>            // do something interesting to f<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// *** Main Thread ***<newline46mondego>BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();<newline46mondego>float[] data = new float[12000];<newline46mondego>for(int i = 0; i < 8; i++) {<newline46mondego>    new Thread(new Worker(queue, data)).start();<newline46mondego>}<newline46mondego>for(int i = 0; i < data.length; i++) {<newline46mondego>    if (data[i] >= 0.75) {<newline46mondego>        queue.offer(i);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2793splitHere46","17584665splitHere46","public class Worker implements Runnable {<newline46mondego>    private final int numberOfIterations;<newline46mondego>    private final float[] x = new float[12000];<newline46mondego><newline46mondego>    public Worker(int numberOfIterations) {<newline46mondego>        this.numberOfIterations = numberOfIterations;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        for(int i = 0; i < numberOfIterations; i++) {<newline46mondego>            Random random = new Random();<newline46mondego><newline46mondego>            for (int i = 0; i < x.length; i++) {<newline46mondego>                x[i] = random.nextFloat();<newline46mondego>            }<newline46mondego><newline46mondego>            for (int i = 0; i < x.length; i++) {<newline46mondego>                if (x[i] >= 0.75) {<newline46mondego>                    \\ do something interesting<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// *** Main Thread ***<newline46mondego>Thread[] threads = new Thread[8];<newline46mondego>for(int i = 0; i < 8; i++) {<newline46mondego>    threads[i] = new Thread(new Worker(12000/8));<newline46mondego>    threads[i].start();<newline46mondego>}<newline46mondego>for(int i = 0; i < 8; i++) {<newline46mondego>    threads[i].join();<newline46mondego>}<newline46mondego>"
"2794splitHere46","17584665splitHere46","join"
"2795splitHere46","17584665splitHere46","// do something interesting"
"2796splitHere46","17584665splitHere46","AtomicInteger"
"2797splitHere46","17584697splitHere46","<string>-vm</string><string>/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/bin/java</string> <newline46mondego>"
"2798splitHere46","17584697splitHere46","<string>-vm</string><string>/Library/Java/JavaVirtualMachines/jdk1.7.0_25.jdk/Contents/Home/bin/java</string><newline46mondego>"
"2799splitHere46","17584697splitHere46","eclipse.ini"
"2800splitHere46","17584697splitHere46","Eclipse.app/Contents/Info.plist"
"2801splitHere46","17584721splitHere46","public class Bracket {<newline46mondego>    int location;<newline46mondego>    char bracket;<newline46mondego><newline46mondego>    public Bracket(int loc, char b) {<newline46mondego>        location = loc;<newline46mondego>        bracket = b;<newline46mondego>    }<newline46mondego><newline46mondego>    public char getBracket() { return bracket; }<newline46mondego>            public int getLoc() { return location; }<newline46mondego><newline46mondego>    public static boolean isStarter(char b) {<newline46mondego>        return b == '(' || b == '{'; // || etc....<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean equals(Bracket other) {<newline46mondego>        return bracket == other.getBracket();<newline46mondego>    }<newline46mondego><newline46mondego>    public char getMatching() {<newline46mondego>        switch(bracket) {<newline46mondego>            case '(': return ')';<newline46mondego>            // so on and so forth<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean matches(char other) {<newline46mondego>      return (getMatching() == other);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2802splitHere46","17584721splitHere46","// in your loop<newline46mondego>if (Bracket.isStarter(currentCharacter)) {<newline46mondego>  stack.push(new Bracket(currentLocation, currentCharacter));<newline46mondego>} else {<newline46mondego>   if (stack.peek().matches(currentCharacter))<newline46mondego>     stack.pop();<newline46mondego>   else {<newline46mondego>     Bracket b = stack.pop();<newline46mondego>     System.out.println(<doubleQuotes46>Mismatch error <doubleQuotes46> + b.getBracket() + <newline46mondego>       <doubleQuotes46> at character position <doubleQuotes46> + b.getLoc() + <newline46mondego>       <doubleQuotes46> followed by a <doubleQuotes46> + currentCharacter + <newline46mondego>       <doubleQuotes46> at position <doubleQuotes46> + currentPosition + <doubleQuotes46>.<doubleQuotes46>);<newline46mondego>   }<newline46mondego>} // something on this order at least<newline46mondego>"
"2803splitHere46","17584755splitHere46","factorial n = product [1..n]<newline46mondego>"
"2804splitHere46","17584755splitHere46","call fact()<newline46mondego>    call fact()<newline46mondego>        call fact()<newline46mondego>        cleanup<newline46mondego>    cleanup<newline46mondego>cleanup<newline46mondego>"
"2805splitHere46","17584755splitHere46","call fact()<newline46mondego>call fact()<newline46mondego>call fact()<newline46mondego>cleanup<newline46mondego>"
"2806splitHere46","17584755splitHere46","call fact()"
"2807splitHere46","17584763splitHere46","if"
"2808splitHere46","17584763splitHere46","Groovy"
"2809splitHere46","17584763splitHere46","Java"
"2810splitHere46","17584763splitHere46","def books = author ? Book.findAllByAuthor(author) : []<newline46mondego>"
"2811splitHere46","17584763splitHere46","def books<newline46mondego>if (author) {<newline46mondego>    books = Book.findAllByAuthor(author)<newline46mondego>}<newline46mondego>else {<newline46mondego>    books = []<newline46mondego>}<newline46mondego>"
"2812splitHere46","17584763splitHere46","elvis operator"
"2813splitHere46","17584763splitHere46","Groovy"
"2814splitHere46","17584763splitHere46","Java"
"2815splitHere46","17584808splitHere46","Handler m_handler;<newline46mondego>Runnable m_handlerTask ; <newline46mondego>m_handler = new Handler(); <newline46mondego>@Override<newline46mondego>public void run() {<newline46mondego>           // do something <newline46mondego>  m_handler.postDelayed(m_handlerTask, 1000);<newline46mondego> }<newline46mondego> };<newline46mondego> m_handlerTask.run(); <newline46mondego>"
"2816splitHere46","17584808splitHere46","m_handler.removeCallbacks(m_handlerTask);  // to cancel the run<newline46mondego>"
"2817splitHere46","17584808splitHere46","runOnUiThread"
"2818splitHere46","17584808splitHere46","Timer _t = new Timer();  <newline46mondego> _t.scheduleAtFixedRate( new TimerTask() {<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>          //do something<newline46mondego>           runOnUiThread(new Runnable() //run on ui thread<newline46mondego>             {<newline46mondego>              public void run() <newline46mondego>              {      <newline46mondego>                //update ui<newline46mondego>              }<newline46mondego>             });<newline46mondego><newline46mondego>        }<newline46mondego>    }, 1000, 1000 ); <newline46mondego>"
"2819splitHere46","17584808splitHere46","public class MainActivity extends Activity {<newline46mondego><newline46mondego>TextView tv;<newline46mondego>Handler m_handler;<newline46mondego>Runnable m_handlerTask ; <newline46mondego>int i=0;<newline46mondego>@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego>    tv = (TextView) findViewById(R.id.textView1);<newline46mondego>     m_handler = new Handler();<newline46mondego>    m_handlerTask = new Runnable() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            if(i<=100)<newline46mondego>            {<newline46mondego>            tv.setText(<doubleQuotes46><doubleQuotes46>+i);<newline46mondego>             i++;<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                m_handler.removeCallbacks(m_handlerTask);<newline46mondego>            }<newline46mondego>            m_handler.postDelayed(m_handlerTask, 1000);<newline46mondego>        }<newline46mondego>    };<newline46mondego>    m_handlerTask.run();  <newline46mondego>   }<newline46mondego>   }  <newline46mondego>"
"2820splitHere46","17584858splitHere46","import java.io.IOException;<newline46mondego>import java.util.logging.Level;<newline46mondego>import java.util.logging.Logger;<newline46mondego>import javax.sound.sampled.AudioInputStream;<newline46mondego>import javax.sound.sampled.AudioSystem;<newline46mondego>import javax.sound.sampled.Clip;<newline46mondego>import javax.sound.sampled.LineUnavailableException;<newline46mondego>import javax.sound.sampled.UnsupportedAudioFileException;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        Clip clip;<newline46mondego>        try {<newline46mondego>            clip = AudioSystem.getClip();<newline46mondego>            AudioInputStream inputStream = AudioSystem.getAudioInputStream(<newline46mondego>                    Main.class.getResourceAsStream(<doubleQuotes46>Morse.aiff<doubleQuotes46>));<newline46mondego>            clip.open(inputStream);<newline46mondego>            clip.start();<newline46mondego>            // optionally, sleep the thread for the duration of the audio clip, <newline46mondego>            // or else you may not hear it<newline46mondego>            Thread.sleep(5000); <newline46mondego>        } catch (LineUnavailableException | UnsupportedAudioFileException | IOException | InterruptedException ex) {<newline46mondego>            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2821splitHere46","17584874splitHere46","<function-class>"
"2822splitHere46","17584874splitHere46","<function-class>edu.dt.studentweb.mvc.utils.PhoneFormatUtil</function-class>"
"2823splitHere46","17584906splitHere46","<newline46mondego>    public class ConfidanceComparator implements Comparator<ExpandedTerm> {<newline46mondego>        @Override<newline46mondego>        public int compare(final ExpandedTerm  o1, final ExpandedTerm  o2) {<newline46mondego>            return new Double(o1.confidence).compareTo(new Double(o2.confidence));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2824splitHere46","17584906splitHere46","<newline46mondego>    public class SupportComparator implements Comparator<ExpandedTerm> {<newline46mondego>        @Override<newline46mondego>        public int compare(final ExpandedTerm  o1, final ExpandedTerm  o2) {<newline46mondego>            return new Double(o1.support).compareTo(new Double(o2.support));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2825splitHere46","17584906splitHere46","Collections.sort(<List>, <comparator>)"
"2826splitHere46","17584906splitHere46","public int compareTo(ExpandedTerm conf) {<newline46mondego>    int compare = new Double(this.confidence).compareTo(new Double(conf.confidence));<newline46mondego><newline46mondego>    if (compare == 0) {<newline46mondego>        compare = new Double(this.support).compareTo(new Double(conf.support));<newline46mondego>    }<newline46mondego>    return compare;<newline46mondego>}<newline46mondego>"
"2827splitHere46","17584983splitHere46","appengine connected app"
"2828splitHere46","17584983splitHere46","Google->Generate App Engine Backend"
"2829splitHere46","17584983splitHere46","Google->Generate Cloud Endpoint Client Library"
"2830splitHere46","17585119splitHere46","class LevelIter<Node> implements Iterable<Node> {<newline46mondego>    Stack<Node> s = null;<newline46mondego>    public LevelIter(Stack<Node> s) {<newline46mondego>        this.s = (Stack)s.clone();<newline46mondego>    }<newline46mondego>    //rest is the same.<newline46mondego>}<newline46mondego>"
"2831splitHere46","17585179splitHere46","@Override<newline46mondego>public void onBackPressed() <newline46mondego>{<newline46mondego>   Intent myIntent = new Intent (Profile.this,FBLogin.class);<newline46mondego>   myIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);<newline46mondego>   myIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);<newline46mondego>   myIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);<newline46mondego>   startActivity(myIntent);<newline46mondego>   super.onBackPressed();<newline46mondego>}<newline46mondego>"
"2832splitHere46","17585237splitHere46","lstFile"
"2833splitHere46","17585237splitHere46","String output=<doubleQuotes46><doubleQuotes46>,line1,line2;<newline46mondego>for(int i=0;i<lstFile.size();i++)<newline46mondego>{<newline46mondego><newline46mondego>    line1=lstFile.get(i);<newline46mondego>    if(line1.contains(<doubleQuotes46>in<doubleQuotes46>) && line1.contains(<doubleQuotes46>out<doubleQuotes46>))continue;<newline46mondego>    for(int j=i+1;j<lstFile.size();j++)<newline46mondego>    {<newline46mondego>        line2=lstFile.get(j);<newline46mondego><newline46mondego>        if(line2.contains(<doubleQuotes46>in<doubleQuotes46>) && line2.contains(<doubleQuotes46>out<doubleQuotes46>))continue;<newline46mondego><newline46mondego>        if(line1.contains(getNameDate(line2)) && line2.contains(<doubleQuotes46>out<doubleQuotes46>) && line1.contains(<doubleQuotes46>in<doubleQuotes46>))<newline46mondego>        {<newline46mondego>              output+=line1+line2.substring(line2.lastIndexOf(<doubleQuotes46>,<doubleQuotes46>),line2.length());<newline46mondego>              output+=System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>);<newline46mondego>              break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>//output now contains your desired result<newline46mondego>"
"2834splitHere46","17585237splitHere46","public String getNameDate(String input)<newline46mondego>{<newline46mondego>    return input.substring(0,input.lastIndexOf(<doubleQuotes46>,<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"2835splitHere46","17585406splitHere46","extends"
"2836splitHere46","17585406splitHere46","implements"
"2837splitHere46","17585406splitHere46","hp"
"2838splitHere46","17585406splitHere46","public class TowerArcher extends TowerBase {<newline46mondego>    // Can't set hp here; the syntax just doesn't work that way.<newline46mondego>    // hp = 10;<newline46mondego><newline46mondego>    public TowerArcher() {<newline46mondego>        // Initialize it here, instead.<newline46mondego>        // This runs when you construct a TowerArcher.<newline46mondego>        hp = 10;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2839splitHere46","17585563splitHere46","public class JDialogSearch ... {<newline46mondego>    public static final int OK_STATE = 0;<newline46mondego>    public static final int CANCEL_STATE = 1;<newline46mondego>    // Cause it's really nice to know what the use did<newline46mondego>    // ie canceled, okay'ed, didn't find results, what ever...<newline46mondego>    private int state = CANCEL_STATE;<newline46mondego>    private String searchResult;<newline46mondego><newline46mondego>    //....///<newline46mondego><newline46mondego>    OK.addActionListener( new ActionListener() {<newline46mondego><newline46mondego>        private class OKListener implements ActionListener <newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                searchResult = someSearchField.getText(); // Or what ever you need<newline46mondego>                state = OK_STATE;<newline46mondego>                dispose(); // close window<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    //...//<newline46mondego><newline46mondego>    public int showSearchDialog() {<newline46mondego>        // Other setup...<newline46mondego>        setVisible(true);<newline46mondego>        return state;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getSearchResult() {<newline46mondego>        return searchResult;<newline46mondego>    }<newline46mondego>"
"2840splitHere46","17585563splitHere46","showSearchDialog"
"2841splitHere46","17585563splitHere46","Ok"
"2842splitHere46","17585563splitHere46","JDialogSeach dialog = new JDialogSeach(); // seach box implementation of JDialog<newline46mondego>switch (dialog.showSearchDialog()) {<newline46mondego>    case JDialogSeach.OK_STATE:<newline46mondego>        mySearchResult = dialog.getSearchResult();<newline46mondego>        break;<newline46mondego>}<newline46mondego>dialog.setVisible(true);<newline46mondego>"
"2843splitHere46","17585563splitHere46","JOptionPane"
"2844splitHere46","17585563splitHere46","setModal(true)"
"2845splitHere46","17585628splitHere46","strace"
"2846splitHere46","17585628splitHere46","java"
"2847splitHere46","17585862splitHere46","Intent open = new Intent(Opening.this,Menu.class);<newline46mondego>            startActivity(open);"
"2848splitHere46","17585875splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>cal.set(Calendar.HOUR, cal.get(Calendar.HOUR) + 2);<newline46mondego>"
"2849splitHere46","17585875splitHere46","LocalTime now = LocalTime.now();<newline46mondego>LocalTime later = now.plus(2, HOURS);<newline46mondego>"
"2850splitHere46","17585875splitHere46","Calendar.getInstance()"
"2851splitHere46","17585875splitHere46","LocalTime.now()"
"2852splitHere46","17585875splitHere46","plus"
"2853splitHere46","17585875splitHere46","cal.set(123, 2)"
"2854splitHere46","17585875splitHere46","ArrayOutOfBoundsException"
"2855splitHere46","17586302splitHere46","PreparedStatement"
"2856splitHere46","17586331splitHere46",".xml"
"2857splitHere46","17586331splitHere46",".xhtml"
"2858splitHere46","17586331splitHere46",".properties"
"2859splitHere46","17586331splitHere46","<resources/><newline46mondego>"
"2860splitHere46","17586331splitHere46","resource:default-resources"
"2861splitHere46","17586331splitHere46","war:default-war"
"2862splitHere46","17586331splitHere46","war"
"2863splitHere46","17586331splitHere46","<resources>"
"2864splitHere46","17586331splitHere46","jar"
"2865splitHere46","17586331splitHere46","META-INF"
"2866splitHere46","17586331splitHere46","package"
"2867splitHere46","17586331splitHere46","clean"
"2868splitHere46","17586379splitHere46","new Map<String, Map<Integer, Integer>>()"
"2869splitHere46","17586379splitHere46","java.util.Map"
"2870splitHere46","17586379splitHere46","java.util.HashMap"
"2871splitHere46","17586379splitHere46","Map<String, Map<Integer, Integer>> polynomialIndex = new HashMap<String, Map<Integer, Integer>>();<newline46mondego>"
"2872splitHere46","17586379splitHere46","Map<String, Map<Integer, Integer>> polynomialIndex = new HashMap<>();<newline46mondego>"
"2873splitHere46","17586449splitHere46","FactoryOfFactory"
"2874splitHere46","17586449splitHere46","class FactoryOfFactory {<newline46mondego><newline46mondego>   enum Type { P1, P2}<newline46mondego><newline46mondego>   public AbstractProductA createProductA(Type t) {<newline46mondego>        switch(t) {<newline46mondego>            case P1:<newline46mondego>               return new ConcreteFactory1().createProductA();<newline46mondego>            case P2:<newline46mondego>               return new ConcreteFactory2().createProductA();<newline46mondego>            ....<newline46mondego>        }<newline46mondego>   }<newline46mondego><newline46mondego>   public AbstractProductB createProductB(Type t) {<newline46mondego>         switch(t) {<newline46mondego>            case P1:<newline46mondego>               return new ConcreteFactory1().createProductB();<newline46mondego>            case P2:<newline46mondego>               return new ConcreteFactory2().createProductB();<newline46mondego>            ....<newline46mondego>        }<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"2875splitHere46","17586449splitHere46","FactoryOfFactory"
"2876splitHere46","17586449splitHere46","ConcreteFactory1"
"2877splitHere46","17586449splitHere46","ConcreteFactory2"
"2878splitHere46","17586449splitHere46","FactoryOfFactory"
"2879splitHere46","17586449splitHere46","Type"
"2880splitHere46","17586543splitHere46","<doubleQuotes46>Whole    <doubleQuotes46>"
"2881splitHere46","17586543splitHere46","<doubleQuotes46>\<doubleQuotes46>([\\w\\s]+)\<doubleQuotes46><doubleQuotes46>"
"2882splitHere46","17586543splitHere46","_"
"2883splitHere46","17586543splitHere46","<doubleQuotes46>\<doubleQuotes46>([^\<doubleQuotes46>]+)\<doubleQuotes46><doubleQuotes46>"
"2884splitHere46","17586909splitHere46","JSON"
"2885splitHere46","17586909splitHere46","produces"
"2886splitHere46","17586909splitHere46","produces=<doubleQuotes46>application\xml<doubleQuotes46>"
"2887splitHere46","17586909splitHere46","JSON"
"2888splitHere46","17586909splitHere46","UtilResponse"
"2889splitHere46","17586909splitHere46","XML"
"2890splitHere46","17586909splitHere46","JAXB2"
"2891splitHere46","17586909splitHere46","XML"
"2892splitHere46","17587382splitHere46","taglib lib"
"2893splitHere46","17587408splitHere46","public class Stone implements Runnable {<newline46mondego>    static int id = 1;<newline46mondego>    static StringBuffer buffer = new StringBuffer();<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            id = 1 - id;<newline46mondego>            if (id == 0) {<newline46mondego>                pick();<newline46mondego>            } else {<newline46mondego>                release();<newline46mondego>            }<newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static synchronized void pick() throws Exception {<newline46mondego>        buffer.append(<doubleQuotes46>P <doubleQuotes46>);<newline46mondego>        buffer.append(<doubleQuotes46>Q <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    private synchronized void release() throws Exception {<newline46mondego>        buffer.append(<doubleQuotes46>R <doubleQuotes46>);<newline46mondego>        buffer.append(<doubleQuotes46>S <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        int count = 1000000;<newline46mondego>        Map<String, Integer> results = new HashMap<String, Integer>();<newline46mondego>        System.out.println(<doubleQuotes46>Running <doubleQuotes46> + count + <doubleQuotes46> times...<doubleQuotes46>);<newline46mondego>        for (int i = 0; i< count; i++) {<newline46mondego>            buffer = new StringBuffer();<newline46mondego>            Stone stone = new Stone();<newline46mondego>            Thread t1 = new Thread(stone);<newline46mondego>            Thread t2 = new Thread(stone);<newline46mondego>            t1.start();<newline46mondego>            t2.start();<newline46mondego>            while (t1.isAlive() || t2.isAlive()) {<newline46mondego>                // wait<newline46mondego>            }<newline46mondego>            String result = buffer.toString();<newline46mondego>            Integer x = results.get(result);<newline46mondego>            if (x == null) x = 0;<newline46mondego>            results.put(result, x + 1);<newline46mondego>            if (i > 0 && i % 50000 == 0) System.out.println(i + <doubleQuotes46>... <doubleQuotes46> + results.keySet());<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>done, results were:<doubleQuotes46>);<newline46mondego>        for (String key : results.keySet()) {<newline46mondego>            System.out.println(<doubleQuotes46> <doubleQuotes46> + key + <doubleQuotes46>: <doubleQuotes46> + results.get(key));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2894splitHere46","17587408splitHere46","Running 1000000 times...<newline46mondego>50000... [R S P Q , P Q R S , P R S Q , R P Q S ]<newline46mondego>100000... [R S P Q , P Q R S , P R S Q , R P Q S ]<newline46mondego>150000... [R S P Q , P Q R S , P R S Q , R P Q S ]<newline46mondego>200000... [R S P Q , P Q R S , P R S Q , R P Q S ]<newline46mondego>250000... [R S P Q , P Q R S , P R S Q , R P Q S ]<newline46mondego>300000... [R S P Q , P Q R S , P R S Q , R P Q S ]<newline46mondego>350000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>400000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>450000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>500000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>550000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>600000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>650000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>700000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>750000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>800000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>850000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>900000... [R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>950000... [P Q P Q , R S P Q , P Q R S , P R S Q , P R Q S , R P Q S ]<newline46mondego>done, results were:<newline46mondego>P Q P Q : 1<newline46mondego>R S P Q : 60499<newline46mondego>P Q R S : 939460<newline46mondego>P R S Q : 23<newline46mondego>P R Q S : 2<newline46mondego>R P Q S : 15<newline46mondego>"
"2895splitHere46","17587408splitHere46","P Q P Q"
"2896splitHere46","17587408splitHere46","R S R S"
"2897splitHere46","17587408splitHere46","done, results were:<newline46mondego> R S R S : 1<newline46mondego> R P S Q : 2<newline46mondego> P Q P Q : 1<newline46mondego> R S P Q : 445102<newline46mondego> P Q R S : 554877<newline46mondego> P R S Q : 5<newline46mondego> P R Q S : 2<newline46mondego> R P Q S : 10<newline46mondego>"
"2898splitHere46","17587480splitHere46","Bitmap"
"2899splitHere46","17587480splitHere46","drawable"
"2900splitHere46","17587480splitHere46","private Integer[] Imgid = {<newline46mondego>            R.drawable.pic1,<newline46mondego>            R.drawable.pic2,<newline46mondego>            R.drawable.pic3,<newline46mondego>            R.drawable.pic4,<newline46mondego>    };<newline46mondego>    Bitmap bitmapOrg[];<newline46mondego>    for (int i = 0; i < Imgid.length; i++) {        <newline46mondego>        bitmapOrg[i] = BitmapFactory.decodeResource(getResources(),Imgid[i]);<newline46mondego>    }<newline46mondego>"
"2901splitHere46","17587529splitHere46","List<Float> dataList = new ArrayList<Float>();<newline46mondego>   msql.query(<doubleQuotes46>SELECT * FROM `%s`<doubleQuotes46>, tableName); <newline46mondego>   while (msql.next()) { <newline46mondego>   dataList.add(msql.getFloat(2));<newline46mondego>   row++;<newline46mondego>   }<newline46mondego><newline46mondego>// copy list to array<newline46mondego>float [] data = dataList.toArray(new float[dataList.size()]);<newline46mondego>"
"2902splitHere46","17587639splitHere46","@ResponseBody<newline46mondego>public Chart handleChartJsonRPC(@RequestBody ChartParameters chartParameters) throws Exception {<newline46mondego>    return jsonService.getBarChart(chartParameters);<newline46mondego>}<newline46mondego>"
"2903splitHere46","17587639splitHere46","jsonService"
"2904splitHere46","17587639splitHere46","Chart"
"2905splitHere46","17587645splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    HashMap db = new HashMap();<newline46mondego>    db.put(0, <doubleQuotes46>zero<doubleQuotes46>);<newline46mondego>    db.put(1, <doubleQuotes46>one<doubleQuotes46>);<newline46mondego>    db.put(2, <doubleQuotes46>two<doubleQuotes46>);<newline46mondego>    db.put(3, <doubleQuotes46>three<doubleQuotes46>);<newline46mondego><newline46mondego>    Hashtable hashsample = new Hashtable();<newline46mondego><newline46mondego>    for (int i = 0; i < db.size(); i++) {<newline46mondego><newline46mondego>            hashsample.put(i, db.get(i));<newline46mondego>            System.out.println(hashsample);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2906splitHere46","17587645splitHere46","{0=zero}<newline46mondego>{1=one, 0=zero}<newline46mondego>{2=two, 1=one, 0=zero}<newline46mondego>{3=three, 2=two, 1=one, 0=zero}<newline46mondego>"
"2907splitHere46","17587649splitHere46","// create our pipeline operations, first the $unwind<newline46mondego>DBObject unwind = new BasicDBObject( <doubleQuotes46>$unwind<doubleQuotes46>, <doubleQuotes46>$scorearray<doubleQuotes46> );<newline46mondego><newline46mondego>DBObject groupIdFields = new BasicDBObject( <doubleQuotes46>player<doubleQuotes46>, <doubleQuotes46>$player<doubleQuotes46> );<newline46mondego>groupIdFields.put( <doubleQuotes46>venue<doubleQuotes46>, <doubleQuotes46>$venue<doubleQuotes46> );<newline46mondego>DBObject groupFields = new BasicDBObject( <doubleQuotes46>_id<doubleQuotes46>, groupIdFields );<newline46mondego>groupFields.put( <doubleQuotes46>maxScore<doubleQuotes46>, new BasicDBObject( <doubleQuotes46>$max<doubleQuotes46>, <doubleQuotes46>$scorearray.score<doubleQuotes46> ) );<newline46mondego>DBObject group = new BasicDBObject( <doubleQuotes46>$group<doubleQuotes46>, groupFields );<newline46mondego><newline46mondego>// run aggregation<newline46mondego>AggregationOutput output = MDB.getCollection(<doubleQuotes46>playerscorecollection<doubleQuotes46>).aggregate( unwind, group );<newline46mondego>"
"2908splitHere46","17587713splitHere46","protected ArrayList<String> eraseStopWord (String[] tempWords) throws SQLException, ClassNotFoundException{<newline46mondego>result = new ArrayList<String>();<newline46mondego>db = new Query();<newline46mondego>for(int i=0;i<tempWords.length;i++){<newline46mondego><newline46mondego>     if(!db.isStopWords(tempWords[i])){<newline46mondego>         result.add(tempWords[i]);<newline46mondego>     }   <newline46mondego>}<newline46mondego><newline46mondego>return result;<newline46mondego>"
"2909splitHere46","17587776splitHere46",".*"
"2910splitHere46","17587776splitHere46","Pattern.DOTALL"
"2911splitHere46","17587776splitHere46",".matches()"
"2912splitHere46","17587776splitHere46","<doubleQuotes46>(?s).*Joker.*<doubleQuotes46><newline46mondego>"
"2913splitHere46","17587776splitHere46","Jokers"
"2914splitHere46","17587776splitHere46","<doubleQuotes46>(?s).*\\bJoker\\b.*<doubleQuotes46><newline46mondego>"
"2915splitHere46","17587776splitHere46",".matches()"
"2916splitHere46","17587776splitHere46","Pattern.DOTALL"
"2917splitHere46","17587776splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>\\bJoker\\b<doubleQuotes46>); // \b is the word anchor<newline46mondego><newline46mondego>p.matcher(str).find(); // returns true<newline46mondego>"
"2918splitHere46","17587813splitHere46","package security.symmatric;<newline46mondego><newline46mondego>    import javax.crypto.Cipher;<newline46mondego>    import javax.crypto.spec.SecretKeySpec;<newline46mondego><newline46mondego>    import org.apache.commons.codec.binary.Base64;<newline46mondego><newline46mondego>    public class AES {<newline46mondego>        public static String symmetricEncrypt(String text, String secretKey) {<newline46mondego>            byte[] raw;<newline46mondego>            String encryptedString;<newline46mondego>            SecretKeySpec skeySpec;<newline46mondego>            byte[] encryptText = text.getBytes();<newline46mondego>            Cipher cipher;<newline46mondego>            try {<newline46mondego>                raw = Base64.decodeBase64(secretKey);<newline46mondego>                skeySpec = new SecretKeySpec(raw, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>                cipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>                cipher.init(Cipher.ENCRYPT_MODE, skeySpec);<newline46mondego>                encryptedString = Base64.encodeBase64String(cipher.doFinal(encryptText));<newline46mondego>            } <newline46mondego>            catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>                return <doubleQuotes46>Error<doubleQuotes46>;<newline46mondego>            }<newline46mondego>            return encryptedString;<newline46mondego>        }<newline46mondego><newline46mondego>        public static String symmetricDecrypt(String text, String secretKey) {<newline46mondego>            Cipher cipher;<newline46mondego>            String encryptedString;<newline46mondego>            byte[] encryptText = null;<newline46mondego>            byte[] raw;<newline46mondego>            SecretKeySpec skeySpec;<newline46mondego>            try {<newline46mondego>                raw = Base64.decodeBase64(secretKey);<newline46mondego>                skeySpec = new SecretKeySpec(raw, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>                encryptText = Base64.decodeBase64(text);<newline46mondego>                cipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>                cipher.init(Cipher.DECRYPT_MODE, skeySpec);<newline46mondego>                encryptedString = new String(cipher.doFinal(encryptText));<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>                return <doubleQuotes46>Error<doubleQuotes46>;<newline46mondego>            }<newline46mondego>            return encryptedString;<newline46mondego>        }<newline46mondego><newline46mondego>        public static void main(String[] args) {<newline46mondego>            String secretKey = <doubleQuotes46>XMzDdG4D03CKm2IxIWQw7g==<doubleQuotes46>;<newline46mondego>            String value1= <doubleQuotes46>ABCD<doubleQuotes46>;<newline46mondego>            String enctypedValue1= <doubleQuotes46>3uweh4pzoVyH1uODQmVNJA==<doubleQuotes46>;<newline46mondego>            String enctypedValue2= <doubleQuotes46>37PTC20w4DMZYjG3f+GWepSvAbEJUccMXwS/lXilLav1qM/PrCTdontw5/82OdC1zzyhDEsFVRGo rV6gXAQcm+Zai15hliiUQ8l8KRMtUl4=<doubleQuotes46>;<newline46mondego>            String value4= <doubleQuotes46>20000<doubleQuotes46>;<newline46mondego><newline46mondego>            /**  Ecnryption and decryption of value1 **/<newline46mondego>            String encryptedValue1= symmetricEncrypt(value1, secretKey);<newline46mondego>            String decryptedValue1 = symmetricDecrypt(encryptedValue1, secretKey);<newline46mondego>            System.out.println(decryptedValue1);<newline46mondego><newline46mondego>            /**  Decryption of  enctypedValue1 **/<newline46mondego>            String decryptedValue2 = symmetricDecrypt(enctypedValue1, secretKey);<newline46mondego>            System.out.println(decryptedValue2);<newline46mondego><newline46mondego>            /**  Decryption of  enctypedValue2 **/<newline46mondego>            String decryptedValue3 = symmetricDecrypt(enctypedValue2, secretKey);<newline46mondego>            System.out.println(decryptedValue3);<newline46mondego><newline46mondego>            /**  Ecnryption and decryption of value4 **/<newline46mondego>            String encryptedValue4= symmetricEncrypt(value4, secretKey);<newline46mondego>            String decryptedValue4 = symmetricDecrypt(encryptedValue4, secretKey);<newline46mondego>            System.out.println(decryptedValue4);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2919splitHere46","17588183splitHere46","import java.io.File;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FilterInputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBException;<newline46mondego>import javax.xml.parsers.ParserConfigurationException;<newline46mondego>import javax.xml.stream.XMLEventReader;<newline46mondego>import javax.xml.stream.XMLInputFactory;<newline46mondego>import javax.xml.stream.XMLStreamException;<newline46mondego>import javax.xml.stream.events.EndElement;<newline46mondego>import javax.xml.stream.events.StartElement;<newline46mondego>import javax.xml.stream.events.XMLEvent;<newline46mondego>import javax.xml.transform.TransformerException;<newline46mondego>import javax.xml.xpath.XPathExpressionException;<newline46mondego><newline46mondego>import org.xml.sax.SAXException;<newline46mondego><newline46mondego>public class DomParserMain {<newline46mondego>    final static String ROOT_NODE_NAME = <doubleQuotes46>data<doubleQuotes46>;<newline46mondego>    final static String FILE_PATH =  <doubleQuotes46>/Users/file.xml<doubleQuotes46>;<newline46mondego>    public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException, JAXBException, XMLStreamException, XPathExpressionException, TransformerException {<newline46mondego>        XMLInputFactory xif = XMLInputFactory.newInstance();<newline46mondego>        XMLEventReader  xmlr = null;<newline46mondego><newline46mondego>        xmlr = xif.createXMLEventReader((new FileInputStream(new File(FILE_PATH))));<newline46mondego><newline46mondego>        boolean inline = false;<newline46mondego>        StringBuffer sb = new StringBuffer(1024 * 66);<newline46mondego>        while(xmlr.hasNext()){<newline46mondego>            XMLEvent event = xmlr.nextEvent();<newline46mondego><newline46mondego>            if (event.isStartElement() ){<newline46mondego>                StartElement element = (StartElement) event;<newline46mondego>                if( ROOT_NODE_NAME.equals( element.getName().toString().trim() ) ) {<newline46mondego>                    inline = true;<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            if(inline) {<newline46mondego>                sb.append( xmlr.peek()  );<newline46mondego>            }<newline46mondego><newline46mondego>            if (event.isEndElement() ){<newline46mondego>                EndElement element = (EndElement)event ;<newline46mondego>                if( ROOT_NODE_NAME.equals( element.getName().toString().trim() ))  {<newline46mondego>                    inline = false;<newline46mondego>                    System.out.println(<doubleQuotes46>=====<doubleQuotes46>);<newline46mondego>                    System.out.println(sb.toString());<newline46mondego>                    System.out.println(<doubleQuotes46>=====<doubleQuotes46>);<newline46mondego>                    sb.setLength(0);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2920splitHere46","17588337splitHere46","CASE"
"2921splitHere46","17588337splitHere46","Update Person p set p.name = CASE WHEN (p.id = :id1) THEN :name_1 WHEN (p.id = :id2) THEN :name_2 WHEN (p.id = :id3) THEN :name_3 END"
"2922splitHere46","17588337splitHere46","criteriaBuilder.selectCase().when(criteriaBuilder.equal(person.get(<doubleQuotes46>id<doubleQuotes46>), id1), name_1);"
"2923splitHere46","17588390splitHere46","public <T> T runAction(IPersistenceAction<T> action);<newline46mondego>"
"2924splitHere46","17588390splitHere46","<T>"
"2925splitHere46","17588398splitHere46","Timer"
"2926splitHere46","17588398splitHere46","System.currentTimeMillis()"
"2927splitHere46","17588398splitHere46","ScheduledThreadPoolExecutor"
"2928splitHere46","17588398splitHere46","System.nanoTime()"
"2929splitHere46","17588398splitHere46","Timer"
"2930splitHere46","17588398splitHere46","Executors.newScheduledThreadPool()"
"2931splitHere46","17588398splitHere46","System.nanoTime()"
"2932splitHere46","17588398splitHere46","Timer"
"2933splitHere46","17588398splitHere46","ScheduledExecutorService"
"2934splitHere46","17588398splitHere46","Timer"
"2935splitHere46","17588398splitHere46","System.currentTimeMillis()"
"2936splitHere46","17588398splitHere46","Timer"
"2937splitHere46","17588398splitHere46","System.nanoTime()"
"2938splitHere46","17588398splitHere46","System.currentTimeMillis()"
"2939splitHere46","17588398splitHere46","Timer"
"2940splitHere46","17588468splitHere46","commandButton"
"2941splitHere46","17588468splitHere46","Account sender"
"2942splitHere46","17588468splitHere46","MoneyTransferBean"
"2943splitHere46","17588468splitHere46","sender"
"2944splitHere46","17588468splitHere46","commandButton"
"2945splitHere46","17588468splitHere46","@ManagedProperty(value=<doubleQuotes46>#{param.sender})<newline46mondego>private Account sender;<newline46mondego>"
"2946splitHere46","17588513splitHere46","var difference = date1 - date2;<newline46mondego>var days = difference / (1000*60*60*24);<newline46mondego>var hours = (difference - days*1000*60*60*24) / (1000*60*60);<newline46mondego>var minutes = (difference - days*1000*60*60*24 - hours*1000*60*60) / (1000*60)<newline46mondego>var seconds = (difference - days*1000*60*60*24 - hours*1000*60*60 - minutes*1000*60)/ 1000<newline46mondego>"
"2947splitHere46","17589292splitHere46","setVisible(false)"
"2948splitHere46","17589292splitHere46","import java.awt.GridBagConstraints;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JTextField;<newline46mondego><newline46mondego>public class QueueDialog extends JFrame implements ActionListener {<newline46mondego>  private static final long SerialVersionUID = 1L;<newline46mondego>  private static JTextField field = new JTextField(15);<newline46mondego>  //private Sender sender;<newline46mondego>  private String incommingMessagesFolderUrl = <doubleQuotes46>/etc/dlp/templates<doubleQuotes46>;<newline46mondego><newline46mondego>  public QueueDialog() throws Exception {<newline46mondego><newline46mondego>   // sender = new Sender();<newline46mondego><newline46mondego>    // field.setSize(60, 15);<newline46mondego>    JButton okButton = new JButton(<doubleQuotes46>ok<doubleQuotes46>);<newline46mondego>    final JLabel label = new JLabel(<doubleQuotes46>Enter the name of queue:<doubleQuotes46>);<newline46mondego>    GridBagLayout gbag = new GridBagLayout();<newline46mondego>    GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>    setLayout(gbag);<newline46mondego><newline46mondego>   // gbc.insets = new Insets(2, 0, 2, 0);<newline46mondego>    gbc.gridy = 0;<newline46mondego>    gbc.gridx = 0;<newline46mondego>    gbag.setConstraints(label, gbc);<newline46mondego>    gbc.gridy = 1;<newline46mondego>    gbc.gridx = 0;<newline46mondego>    gbag.setConstraints(field, gbc);<newline46mondego>    gbc.gridy = 2;<newline46mondego>    gbc.gridx = 0;<newline46mondego>    gbag.setConstraints(okButton, gbc);<newline46mondego><newline46mondego>    add(okButton);<newline46mondego>    add(field);<newline46mondego>    add(label);<newline46mondego>    setTitle(<doubleQuotes46>Queue name<doubleQuotes46>);<newline46mondego>    setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);<newline46mondego>    setSize(400, 200);<newline46mondego>    setLocationRelativeTo(null);<newline46mondego>    setVisible(true);<newline46mondego><newline46mondego>    okButton.addActionListener(new ActionListener() {<newline46mondego>      @Override<newline46mondego>      public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>        if (e.getActionCommand().equals(<doubleQuotes46>ok<doubleQuotes46>)) {<newline46mondego>            System.out.println(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>            setVisible(false);<newline46mondego><newline46mondego><newline46mondego>          // label.setText(field.getText());<newline46mondego>         // send(field.getText());<newline46mondego>        }<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego><newline46mondego>@Override<newline46mondego>public void actionPerformed(ActionEvent arg0) {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public static void main(String[] args) throws Exception {<newline46mondego>    QueueDialog diag = new QueueDialog();<newline46mondego>}<newline46mondego>}<newline46mondego>"
"2949splitHere46","17589293splitHere46","String[] fruits = {<doubleQuotes46>orange<doubleQuotes46>, <doubleQuotes46>apple<doubleQuotes46>};<newline46mondego>    String[] colors = {<doubleQuotes46>red<doubleQuotes46>, <doubleQuotes46>blue<doubleQuotes46>, <doubleQuotes46>green<doubleQuotes46>};<newline46mondego><newline46mondego>    Map<String, String[]> map = new HashMap<>();<newline46mondego>    map.put(<doubleQuotes46>fruits<doubleQuotes46>, fruits);<newline46mondego>    map.put(<doubleQuotes46>colors<doubleQuotes46>, colors);<newline46mondego><newline46mondego>    String[] toCompare = map.get(<doubleQuotes46>fruits<doubleQuotes46>); // will return the fruits array<newline46mondego>"
"2950splitHere46","17589417splitHere46","formatter = new SimpleDateFormat(<doubleQuotes46>dd-MM-yyyy hh:mm:ss<doubleQuotes46>); <newline46mondego>"
"2951splitHere46","17589445splitHere46","private static String[] split(String delim, String line) {<newline46mondego><newline46mondego>    StringTokenizer tokens = new StringTokenizer(line, delim, true);<newline46mondego>    String previous = delim;<newline46mondego>    Vector v = new Vector();<newline46mondego><newline46mondego>    while (tokens.hasMoreTokens()) {<newline46mondego>        String token = tokens.nextToken();<newline46mondego><newline46mondego>        if (!delim.equals(token)) {<newline46mondego>            v.add(token);<newline46mondego>        } else if (previous.equals(delim)) {<newline46mondego>            v.add(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        }<newline46mondego>        previous = token;<newline46mondego>    }<newline46mondego><newline46mondego>    return (String[]) v.toArray(new String[v.size()]);<newline46mondego>}<newline46mondego>"
"2952splitHere46","17589595splitHere46","<script>"
"2953splitHere46","17589595splitHere46","onModuleLoad()"
"2954splitHere46","17589595splitHere46","<script>"
"2955splitHere46","17589595splitHere46","onModuleLoad()"
"2956splitHere46","17590133splitHere46","String str=<doubleQuotes46>\<doubleQuotes46>000ABCD\<doubleQuotes46>,000,HU,4614.850N,02005.483E,80.0m,5,160,1185.0m,,005,4619.650N,01958.400E,87.0m,1<doubleQuotes46>;<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>(.*?)\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(str);<newline46mondego>    while (m.find()) {                     <newline46mondego>        System.out.println(m.group(1));<newline46mondego>    }<newline46mondego>"
"2957splitHere46","17590309splitHere46","Object match = new BasicDBObject(<doubleQuotes46>$match<doubleQuotes46>, <newline46mondego>   new BasicDBObject(<doubleQuotes46>score<doubleQuotes46>,<newline46mondego>   new BasicDBObject(<doubleQuotes46>$gt<doubleQuotes46>, 70).append(<doubleQuotes46>$lte<doubleQuotes46>, 90) ) )<newline46mondego>"
"2958splitHere46","17590333splitHere46","<t:any>"
"2959splitHere46","17590333splitHere46","<t:any element=<doubleQuotes46>input<doubleQuotes46> type=<doubleQuotes46>literal:checkbox<doubleQuotes46> name=<doubleQuotes46>literal:leaf<doubleQuotes46> id=<doubleQuotes46>prop:clientId<doubleQuotes46> value=<doubleQuotes46>prop:currentObject.value<doubleQuotes46> checked=<doubleQuotes46>prop:checked<doubleQuotes46> /><newline46mondego>"
"2960splitHere46","17590333splitHere46","@Property<newline46mondego>private SomeType currentObject;<newline46mondego><newline46mondego>public String getClientId() {<newline46mondego>    return <doubleQuotes46>mycheckbox_<doubleQuotes46> + currentObject.getId();<newline46mondego>}<newline46mondego><newline46mondego>// if this returns null, tapestry won't render the attribute<newline46mondego>public String getChecked() {<newline46mondego>    return currentObject.isSelected() ? <doubleQuotes46>checked<doubleQuotes46> : null;<newline46mondego>}<newline46mondego>"
"2961splitHere46","17590382splitHere46","public static void main(String[] args){<newline46mondego>            int[] dataInv = new int[100000];<newline46mondego>            Random rand = new Random();<newline46mondego>            for (int i = 0; i < dataInv.length; i++) {<newline46mondego>                dataInv[i] = rand.nextInt();<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Inversions: <doubleQuotes46> + numberOfInversions(dataInv));<newline46mondego>    }<newline46mondego><newline46mondego>   private static long numberOfInversions(int[] data) {<newline46mondego>        int[] temp = new int[data.length];<newline46mondego>        return mergeSort(data, temp, 0, data.length - 1);<newline46mondego>    }<newline46mondego><newline46mondego>    private static long mergeSort(int[] data, int[] temp, int low, int high) {<newline46mondego>        long inversions = 0L;<newline46mondego>        if (high > low) {<newline46mondego><newline46mondego>            int mid = (high + low) / 2;<newline46mondego><newline46mondego>            inversions = mergeSort(data, temp, low, mid);<newline46mondego>            inversions += mergeSort(data, temp, mid + 1, high);<newline46mondego><newline46mondego>            inversions += merge(data, temp, low, mid + 1, high);<newline46mondego>        }<newline46mondego><newline46mondego>        return inversions;<newline46mondego>    }<newline46mondego><newline46mondego>    private static long merge(int[] data, int[] temp, int low, int mid, int high) {<newline46mondego>        int i, j, k = 0;<newline46mondego>        long invertions = 0L;<newline46mondego><newline46mondego>        i = low;<newline46mondego>        j = mid;<newline46mondego>        k = low;<newline46mondego><newline46mondego>        while (i <= (mid - 1) && j <= high) {<newline46mondego>            if (data[i] <= data[j]) {<newline46mondego>                temp[k++] = data[i++];<newline46mondego>            } else {<newline46mondego>                temp[k++] = data[j++];<newline46mondego><newline46mondego>                invertions += (mid - i);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        while (i <= (mid - 1)) {<newline46mondego>            temp[k++] = data[i++];<newline46mondego>        }<newline46mondego><newline46mondego>        while (j <= high) {<newline46mondego>            temp[k++] = data[j++];<newline46mondego>        }<newline46mondego><newline46mondego>        for (i = low; i <= high; i++) {<newline46mondego>            data[i] = temp[i];<newline46mondego>        }<newline46mondego><newline46mondego>        return invertions;<newline46mondego><newline46mondego>    }<newline46mondego>"
"2962splitHere46","17590414splitHere46","@RemoteServiceRelativePath"
"2963splitHere46","17590414splitHere46","GWT.getModuleBaseURL()"
"2964splitHere46","17590414splitHere46","RemoteServiceRelativePath"
"2965splitHere46","17590414splitHere46","GWT.getModuleBaseURL()"
"2966splitHere46","17590414splitHere46","nocache.js"
"2967splitHere46","17590414splitHere46","project.gwt.xml"
"2968splitHere46","17590414splitHere46","rename-to"
"2969splitHere46","17590414splitHere46","http://…/project/"
"2970splitHere46","17590414splitHere46","nocache.js"
"2971splitHere46","17590414splitHere46","project/project.nocache.js"
"2972splitHere46","17590414splitHere46","<url-pattern>"
"2973splitHere46","17590414splitHere46","/project/employeeService"
"2974splitHere46","17590414splitHere46","@RemoteServiceRelativePath"
"2975splitHere46","17590414splitHere46","<url-pattern>"
"2976splitHere46","17590469splitHere46","XMLNameTransformer"
"2977splitHere46","17590469splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><jxb:bindings <newline46mondego>  xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>  xmlns:jxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>  version=<doubleQuotes46>2.1<doubleQuotes46>><newline46mondego>  <jxb:globalBindings underscoreBinding=<doubleQuotes46>asCharInWord<doubleQuotes46>/><newline46mondego></jxb:bindings><newline46mondego>"
"2978splitHere46","17590472splitHere46","private void onAction(String actionStr) {<newline46mondego>    Action action = table.getActionMap().get(actionStr);<newline46mondego>    ActionEvent newAE = new ActionEvent(table, ActionEvent.ACTION_PERFOMED, actionStr);<newline46mondego>    action.actionPerfomed(newAE);<newline46mondego>}<newline46mondego><newline46mondego>private void decorateButtons() {<newline46mondego>    copyButton.addActionListener(new ActionListener() {<newline46mondego>        public void actionPerfomed(ActionEvent ae) {<newline46mondego>            onAction(<doubleQuotes46>copy<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    cutButton.addActionListener(new ActionListener() {<newline46mondego>        public void actionPerfomed(ActionEvent ae) {<newline46mondego>            onAction(<doubleQuotes46>cut<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    pasteButton.addActionListener(new ActionListener() {<newline46mondego>        public void actionPerfomed(ActionEvent ae) {<newline46mondego>            onAction(<doubleQuotes46>paste<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"2979splitHere46","17590745splitHere46","@XmlElement(name = <doubleQuotes46>fixedName<doubleQuotes46>)"
"2980splitHere46","17590769splitHere46","HttpURLConnection"
"2981splitHere46","17590769splitHere46","URL.openConnection()"
"2982splitHere46","17590769splitHere46","URL"
"2983splitHere46","17590769splitHere46","Nopers"
"2984splitHere46","17590769splitHere46","SearchMode"
"2985splitHere46","17590769splitHere46","Name"
"2986splitHere46","17590769splitHere46","getInputStream()"
"2987splitHere46","17590817splitHere46","<script>"
"2988splitHere46","17590908splitHere46","//Create the Data<newline46mondego><newline46mondego>    List<List<Point>> Llp = new ArrayList<List<Point>>();<newline46mondego><newline46mondego>    for(int i=0; i< 50; i++)<newline46mondego>    {<newline46mondego>        List<Point> lp = new ArrayList<Point>();<newline46mondego><newline46mondego>        for(int j=0; j<50; j++)<newline46mondego>        lp.add(new Point((int)(Math.random()*1000), i));<newline46mondego><newline46mondego>        Llp.add(lp);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    // The comparators<newline46mondego>    Comparator<List<Point>> comparator_rows = new Comparator<List<Point>>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int compare(List<Point> o1, List<Point> o2) {<newline46mondego>            int i = o2.get(0).y;<newline46mondego>            int j = o1.get(0).y;<newline46mondego>            if (i < j) {<newline46mondego>                return 1;<newline46mondego>            } else if (i > j) {<newline46mondego>                return -1;<newline46mondego>            } else {<newline46mondego>                return 0;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>    };<newline46mondego><newline46mondego>    Comparator<Point> comparator_columns = new Comparator<Point>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int compare(Point o1, Point o2) {<newline46mondego>            int i = o2.x;<newline46mondego>            int j = o1.x;<newline46mondego>            if (i < j) {<newline46mondego>                return 1;<newline46mondego>            } else if (i > j) {<newline46mondego>                return -1;<newline46mondego>            } else {<newline46mondego>                return 0;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>    };<newline46mondego><newline46mondego>    // Sort the rows<newline46mondego>    Collections.sort(Llp, comparator_rows);<newline46mondego><newline46mondego>    // Sort the columns<newline46mondego>    for (List<Point> element : Llp) <newline46mondego>        Collections.sort(element, comparator_columns);<newline46mondego><newline46mondego>    //Print the elements<newline46mondego>    int rowIndex = 0, columnIndex=0;<newline46mondego><newline46mondego>    for (List<Point> row : Llp) <newline46mondego>    {<newline46mondego>        for (Point element : row) <newline46mondego>        System.out.print(<doubleQuotes46>(<doubleQuotes46>+element.x+ <doubleQuotes46>,<doubleQuotes46> + element.y +<doubleQuotes46>)|<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>"
"2989splitHere46","17590908splitHere46","//Create the Data<newline46mondego><newline46mondego>        List<List<Point>> Llp = new ArrayList<List<Point>>();<newline46mondego><newline46mondego>        for(int i=0; i< 50; i++)<newline46mondego>        {<newline46mondego>            List<Point> lp = new ArrayList<Point>();<newline46mondego><newline46mondego>            for(int j=0; j<50; j++)<newline46mondego>            lp.add(new Point((int)(Math.random()*1000), (int)(Math.random()*1000)));<newline46mondego><newline46mondego>            Llp.add(lp);<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        //If all data is mixed up we need to filter into new rows based on X using a TreeMap<newline46mondego><newline46mondego>        TreeMap<Integer, TreeMap<Integer,Point>> data = new TreeMap<Integer,TreeMap<Integer,Point>>();<newline46mondego><newline46mondego>        for (List<Point> row : Llp) <newline46mondego>        {<newline46mondego>            for (Point element : row) <newline46mondego>            {<newline46mondego>                TreeMap<Integer,Point> rowForX;<newline46mondego>                if(data.containsKey(element.x))<newline46mondego>                    rowForX = data.get(element.x);<newline46mondego>                else<newline46mondego>                    data.put(element.x, rowForX = new TreeMap<Integer,Point>());    <newline46mondego>                    //Create specific row in TreeMap<newline46mondego><newline46mondego>                rowForX.put(element.y,element);<newline46mondego>            }           <newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        //Convert Sorted TreeMap(s) to Lists<newline46mondego><newline46mondego>        Llp.clear();<newline46mondego>        Iterator<Entry<Integer, TreeMap<Integer, Point>>> it = data.entrySet().iterator();<newline46mondego><newline46mondego>        while(it.hasNext())<newline46mondego>            Llp.add(new ArrayList<Point>(it.next().getValue().values()));<newline46mondego><newline46mondego><newline46mondego>        //Print the elements<newline46mondego>        int rowIndex = 0, columnIndex=0;<newline46mondego><newline46mondego>        for (List<Point> row : Llp) <newline46mondego>        {<newline46mondego>            for (Point element : row) <newline46mondego>            System.out.print(<doubleQuotes46>(<doubleQuotes46>+element.x+ <doubleQuotes46>,<doubleQuotes46> + element.y +<doubleQuotes46>)|<doubleQuotes46>);<newline46mondego><newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>"
"2990splitHere46","17591093splitHere46","nextElementSibling"
"2991splitHere46","17591093splitHere46","Element"
"2992splitHere46","17591093splitHere46","for (Element e : doc.select(<doubleQuotes46>code<doubleQuotes46>)) {<newline46mondego>    if (e.attr(<doubleQuotes46>code<doubleQuotes46>).trim().equals(<doubleQuotes46>43683-2<doubleQuotes46>)) {<newline46mondego>        Element firstHighlight = null;     <newline46mondego>        Element sibling = e.nextElementSibling();<newline46mondego>        while (sibling != null && firstHighlight == null) {<newline46mondego>            if (sibling.tagName().equals(<doubleQuotes46>highlight<doubleQuotes46>)) {<newline46mondego>                firstHighlight = sibling;<newline46mondego>            } else {<newline46mondego>                sibling = sibling.nextElementSibling();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2993splitHere46","17591144splitHere46","unread"
"2994splitHere46","17591144splitHere46","peek"
"2995splitHere46","17591225splitHere46","Pattern.LITERAL"
"2996splitHere46","17591225splitHere46","\\n"
"2997splitHere46","17591225splitHere46","backslash"
"2998splitHere46","17591225splitHere46","n"
"2999splitHere46","17591225splitHere46","\n"
"3000splitHere46","17591236splitHere46","@XmlRootElement(name = <doubleQuotes46>responseList<doubleQuotes46>)<newline46mondego>public class ResposeList {<newline46mondego><newline46mondego>    private List<Object> list;<newline46mondego><newline46mondego>    public List<Object> getList() {<newline46mondego>        return list;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setList(List<Object> list) {<newline46mondego>        this.list = list;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3001splitHere46","17591236splitHere46","@GET<newline46mondego>@Path(<doubleQuotes46>/get<doubleQuotes46>)<newline46mondego>@Produces(MediaType.APPLICATION_XML)<newline46mondego>public ResposeList addObjects() {<newline46mondego><newline46mondego>    Book book = new Book(); <newline46mondego>    book.setName(<doubleQuotes46>Here is the Game<doubleQuotes46>);<newline46mondego>    book.setAuthor(<doubleQuotes46>HHH<doubleQuotes46>);<newline46mondego><newline46mondego>    BookStore bookstore = new BookStore();<newline46mondego>    bookstore.setName(<doubleQuotes46>Prateek Bookstore<doubleQuotes46>);<newline46mondego>    bookstore.setLocation(<doubleQuotes46>Vasanth Nagar<doubleQuotes46>);<newline46mondego><newline46mondego>    ArrayList<Object> list = new ArrayList<Object>();<newline46mondego>    list.add(book);<newline46mondego>    list.add(bookstore);<newline46mondego>    ResposeList books=new ResposeList();<newline46mondego>    books.setList(list);<newline46mondego><newline46mondego>    return books;   <newline46mondego>}<newline46mondego>"
"3002splitHere46","17591285splitHere46","ArrayList<String> a = new ArrayList<String>();<newline46mondego>"
"3003splitHere46","17591285splitHere46","ArrayList<String> a = new ArrayList<>();<newline46mondego>"
"3004splitHere46","17591377splitHere46","LocationListener"
"3005splitHere46","17591377splitHere46","private final LocationListener mLocationListener = new LocationListener() {<newline46mondego>    @Override<newline46mondego>    public void onLocationChanged(final Location location) {<newline46mondego>        //your code here<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"3006splitHere46","17591377splitHere46","LocationManager"
"3007splitHere46","17591377splitHere46","@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>    mLocationManager = (LocationManager) getSystemService(LOCATION_SERVICE);<newline46mondego><newline46mondego>    mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, LOCATION_REFRESH_TIME,<newline46mondego>            LOCATION_REFRESH_DISTANCE, mLocationListener);<newline46mondego>}<newline46mondego>"
"3008splitHere46","17591377splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.ACCESS_COARSE_LOCATION<doubleQuotes46>/><newline46mondego>"
"3009splitHere46","17591377splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.ACCESS_FINE_LOCATION<doubleQuotes46>/><newline46mondego>"
"3010splitHere46","17591387splitHere46","def getUsername():String = {<newline46mondego>    this.username<newline46mondego>}<newline46mondego>"
"3011splitHere46","17591387splitHere46",":String"
"3012splitHere46","17591387splitHere46","void"
"3013splitHere46","17591387splitHere46","getUsername()"
"3014splitHere46","17591387splitHere46","new User(userAccount.getUserName(), userAccount.getPassword())<newline46mondego>"
"3015splitHere46","17591501splitHere46","List<String> sl = new ArrayList<String>();<newline46mondego>List<List<String>>sls = new ArrayList<List<String>>();<newline46mondego>sls.add(sl);<newline46mondego>sl.add(<doubleQuotes46>String 1<doubleQuotes46>);<newline46mondego>"
"3016splitHere46","17591501splitHere46","List<?>list = new ArrayList<?>();<newline46mondego>"
"3017splitHere46","17591501splitHere46","List<Comparable<String>>list = new ArrayList<Comparable<String>>();<newline46mondego>"
"3018splitHere46","17592257splitHere46","java.util.logging.Logger<newline46mondego>"
"3019splitHere46","17592257splitHere46","Source > Add Import<newline46mondego>"
"3020splitHere46","17592733splitHere46","import foo.bar.Baz;<newline46mondego>"
"3021splitHere46","17592733splitHere46","Pattern.MULTILINE"
"3022splitHere46","17592733splitHere46","^\s*import\s+foo\.bar\.Baz\s*;\s*$<newline46mondego>"
"3023splitHere46","17592733splitHere46","^"
"3024splitHere46","17592733splitHere46","$"
"3025splitHere46","17592733splitHere46","^"
"3026splitHere46","17592733splitHere46","$"
"3027splitHere46","17592733splitHere46","public static void main(final String... args)<newline46mondego>{<newline46mondego>    final Pattern p1 = Pattern.compile(<doubleQuotes46>^dog$<doubleQuotes46>);<newline46mondego>    final Pattern p2 = Pattern.compile(<doubleQuotes46>^dog$<doubleQuotes46>, Pattern.MULTILINE);<newline46mondego><newline46mondego>    final String input = <doubleQuotes46>cat\ndog\nTasmanian devil<doubleQuotes46>;<newline46mondego><newline46mondego>    System.out.println(p1.matcher(input).find());<newline46mondego>    System.out.println(p2.matcher(input).find());<newline46mondego>}<newline46mondego>"
"3028splitHere46","17592733splitHere46","false<newline46mondego>true<newline46mondego>"
"3029splitHere46","17592738splitHere46","ServiceTracker"
"3030splitHere46","17592738splitHere46","java.lang.Class"
"3031splitHere46","17592738splitHere46","[1.5,2.0)"
"3032splitHere46","17592738splitHere46","Import-Package: org.osgi.util.tracker; version=<doubleQuotes46>[1.5,2.0)<doubleQuotes46><newline46mondego>"
"3033splitHere46","17592881splitHere46","int fin = (int) Math.round(Math.random()*9);<newline46mondego>"
"3034splitHere46","17592881splitHere46","Math.random()"
"3035splitHere46","17592881splitHere46","double"
"3036splitHere46","17592881splitHere46","[0,1)"
"3037splitHere46","17592881splitHere46","[0,9)"
"3038splitHere46","17592881splitHere46","[0,9]"
"3039splitHere46","17592881splitHere46","Random"
"3040splitHere46","17592881splitHere46","addModel()"
"3041splitHere46","17592881splitHere46","save()"
"3042splitHere46","17592905splitHere46","public static final"
"3043splitHere46","17593020splitHere46","src/test/java"
"3044splitHere46","17593020splitHere46","src/main/java"
"3045splitHere46","17593020splitHere46","com.test.test.controller"
"3046splitHere46","17593020splitHere46","src/main/java"
"3047splitHere46","17593027splitHere46","String filepath = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    URL url = Platform.getBundle(MyPLugin.PLUGIN_ID).getEntry(<doubleQuotes46>lib/dummy.exe<doubleQuotes46>);<newline46mondego><newline46mondego>    try {<newline46mondego>        filepath = FileLocator.toFileURL(url).toString();<newline46mondego>    } catch (IOException e1) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e1.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(filepath);<newline46mondego>"
"3048splitHere46","17593036splitHere46","String sql = <doubleQuotes46>UPDATE sm_product SET productQuantity = productQuantity-<doubleQuotes46> + input + <doubleQuotes46>  WHERE productID = <doubleQuotes46> + prodID + <doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"3049splitHere46","17593147splitHere46","PreparedStatement"
"3050splitHere46","17593147splitHere46","PreparedStatement checkDB1 = <newline46mondego>       con.prepareStatement(<doubleQuotes46>update accounts set balance=balance - ? where iban=?<doubleQuotes46>);<newline46mondego>checkDB1.setDouble(1, total);<newline46mondego>            ^^^<newline46mondego>"
"3051splitHere46","17593147splitHere46","PreparedStatement"
"3052splitHere46","17593207splitHere46","arrayAdapter"
"3053splitHere46","17593207splitHere46","arrayLists"
"3054splitHere46","17593207splitHere46","arrayAdapter"
"3055splitHere46","17593207splitHere46","super"
"3056splitHere46","17593399splitHere46","Elements"
"3057splitHere46","17593399splitHere46","TextNodes"
"3058splitHere46","17593399splitHere46","Node"
"3059splitHere46","17593399splitHere46","Element"
"3060splitHere46","17593399splitHere46","TextNode"
"3061splitHere46","17593431splitHere46","etc"
"3062splitHere46","17593431splitHere46","^PING\b # match ping<newline46mondego>[^(]*\(([^)]*)\) # capture IP<newline46mondego>\s([^.]*)\. # capture the bytes of data<newline46mondego>.*?^(\d+\sbytes)  # capture bytes<newline46mondego>.*?icmp_seq=(\d+)  # capture icmp_seq<newline46mondego>.*?ttl=(\d+)  # capture ttl<newline46mondego>.*?time=(.*?ms)  # capture time<newline46mondego>.*?(\d+)\spackets\stransmitted   # the rest of these lines will capture the other portions of the ping result<newline46mondego>.*?(\d+)\sreceived<newline46mondego>.*?(\d+%)\spacket\sloss<newline46mondego>.*?time\s(\d+ms)<newline46mondego>.*?=\s([^\/]*)\/([^\/]*)\/([^\/]*)\/(.*)\sms<newline46mondego>"
"3063splitHere46","17593431splitHere46","PING google.com (173.194.35.9) 56(84) bytes of data.<newline46mondego>64 bytes from mil01s16-in-f9.1e100.net (173.194.35.9): icmp_seq=1 ttl=52 time=33.0 ms<newline46mondego><newline46mondego>--- google.com ping statistics ---<newline46mondego>1 packets transmitted, 1 received, 0% packet loss, time 0ms<newline46mondego>rtt min/avg/max/mdev = 33.086/33.086/33.086/0.000 ms<newline46mondego><newline46mondego><newline46mondego>PING 192.168.0.12 (192.168.0.12) 56(84) bytes of data.<newline46mondego>64 bytes from 192.168.0.12: icmp_seq=1 ttl=64 time=0.134 ms<newline46mondego><newline46mondego>--- 192.168.0.12 ping statistics ---<newline46mondego>1 packets transmitted, 1 received, 0% packet loss, time 0ms<newline46mondego>rtt min/avg/max/mdev = 0.134/0.134/0.134/0.000 ms<newline46mondego>"
"3064splitHere46","17593431splitHere46","import java.util.regex.Pattern;<newline46mondego>import java.util.regex.Matcher;<newline46mondego>class Module1{<newline46mondego>  public static void main(String[] asd){<newline46mondego>  String sourcestring = <doubleQuotes46>source string to match with pattern<doubleQuotes46>;<newline46mondego>  Pattern re = Pattern.compile(<doubleQuotes46>^PING\\b # match ping<newline46mondego>[^(]*\\(([^)]*)\\) # capture IP<newline46mondego>\\s([^.]*)\\. # capture the bytes of data<newline46mondego>.*?^(\\d+\\sbytes) # capture bytes<newline46mondego>.*?icmp_seq=(\\d+) # capture icmp_seq<newline46mondego>.*?ttl=(\\d+) # capture ttl<newline46mondego>.*?time=(.*?ms) # capture time<newline46mondego>.*?(\\d+)\\spackets\\stransmitted<newline46mondego>.*?(\\d+)\\sreceived<newline46mondego>.*?(\\d+%)\\spacket\\sloss<newline46mondego>.*?time\\s(\\d+ms)<newline46mondego>.*?=\\s([^\\/]*)\\/([^\\/]*)\\/([^\\/]*)\\/(.*?)\\sms<newline46mondego><newline46mondego><newline46mondego><doubleQuotes46>,Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL);<newline46mondego>  Matcher m = re.matcher(sourcestring);<newline46mondego>  int mIdx = 0;<newline46mondego>    while (m.find()){<newline46mondego>      for( int groupIdx = 0; groupIdx < m.groupCount()+1; groupIdx++ ){<newline46mondego>        System.out.println( <doubleQuotes46>[<doubleQuotes46> + mIdx + <doubleQuotes46>][<doubleQuotes46> + groupIdx + <doubleQuotes46>] = <doubleQuotes46> + m.group(groupIdx));<newline46mondego>      }<newline46mondego>      mIdx++;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3065splitHere46","17593431splitHere46","[0][0] = PING google.com (173.194.35.9) 56(84) bytes of data.<newline46mondego>64 bytes from mil01s16-in-f9.1e100.net (173.194.35.9): icmp_seq=1 ttl=52 time=33.0 ms<newline46mondego><newline46mondego>--- google.com ping statistics ---<newline46mondego>1 packets transmitted, 1 received, 0% packet loss, time 0ms<newline46mondego>rtt min/avg/max/mdev = 33.086/33.086/33.086/0.000 ms<newline46mondego>[0][2] = 173.194.35.9<newline46mondego>[0][2] = 56(84) bytes of data<newline46mondego>[0][3] = 64 bytes<newline46mondego>[0][4] = 1<newline46mondego>[0][5] = 52<newline46mondego>[0][6] = 33.0 ms<newline46mondego>[0][7] = 1<newline46mondego>[0][8] = 1<newline46mondego>[0][9] = 0%<newline46mondego>[0][10] = 0ms<newline46mondego>[0][11] = 33.086<newline46mondego>[0][12] = 33.086<newline46mondego>[0][13] = 33.086<newline46mondego>[0][14] = 0.000<newline46mondego><newline46mondego><newline46mondego>[1][0] = PING 192.168.0.12 (192.168.0.12) 56(84) bytes of data.<newline46mondego>64 bytes from 192.168.0.12: icmp_seq=1 ttl=64 time=0.134 ms<newline46mondego><newline46mondego>--- 192.168.0.12 ping statistics ---<newline46mondego>1 packets transmitted, 1 received, 0% packet loss, time 0ms<newline46mondego>rtt min/avg/max/mdev = 0.134/0.134/0.134/0.000 ms<newline46mondego>[1][3] = 192.168.0.12<newline46mondego>[1][2] = 56(84) bytes of data<newline46mondego>[1][3] = 64 bytes<newline46mondego>[1][4] = 1<newline46mondego>[1][5] = 64<newline46mondego>[1][6] = 0.134 ms<newline46mondego>[1][7] = 1<newline46mondego>[1][8] = 1<newline46mondego>[1][9] = 0%<newline46mondego>[1][10] = 0ms<newline46mondego>[1][11] = 0.134<newline46mondego>[1][12] = 0.134<newline46mondego>[1][13] = 0.134<newline46mondego>[1][14] = 0.000<newline46mondego>"
"3066splitHere46","17593498splitHere46","getDate()"
"3067splitHere46","17593498splitHere46","4"
"3068splitHere46","17593498splitHere46","3"
"3069splitHere46","17593498splitHere46","3"
"3070splitHere46","17593595splitHere46","cr.query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null);"
"3071splitHere46","17593595splitHere46","cr"
"3072splitHere46","17593595splitHere46","ContentResolver"
"3073splitHere46","17593616splitHere46","package-info.java"
"3074splitHere46","17593743splitHere46","<t:select t:id=<doubleQuotes46>select<doubleQuotes46> .../><newline46mondego><t:palette id=<doubleQuotes46>widgets<doubleQuotes46> .../><newline46mondego><t:palette id=<doubleQuotes46>channels<doubleQuotes46> .../><newline46mondego>"
"3075splitHere46","17593743splitHere46","var $select = $('#' + selectId);<newline46mondego>var $widgets = $('#' + widgetsId);<newline46mondego>var $channels = $('#' + channelsId);<newline46mondego><newline46mondego>$select.on('change', function() {<newline46mondego>  if ($select.val() == 1 /* or another value corespondent to channels */) {<newline46mondego>    $widgets.hide();<newline46mondego>    $channels.show();<newline46mondego>  } else {<newline46mondego>    $widgets.show();<newline46mondego>    $channels.hide();<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"3076splitHere46","17593759splitHere46","setId(String)"
"3077splitHere46","17593967splitHere46","maxBooleanClauses"
"3078splitHere46","17594001splitHere46","private static ScheduledExecutorService executor = Executors.newScheduledThreadPool(poolSize);<newline46mondego>"
"3079splitHere46","17594001splitHere46","Future<Object> future = executor.scheduleAtFixedRate(task, timeoutSeconds, timeoutSeconds, TimeUnit.SECONDS);<newline46mondego>"
"3080splitHere46","17594077splitHere46","startForeground"
"3081splitHere46","17594077splitHere46","Service"
"3082splitHere46","17594240splitHere46","if (Arrays.equals(inputArray, ExampleClass.this.strArrayOne)) {<newline46mondego>  // first one has been passed<newline46mondego>}<newline46mondego><newline46mondego>if (Arrays.equals(inputArray, ExampleClass.this.strArrayTwo)) {<newline46mondego>  // second one has been passed<newline46mondego>}<newline46mondego>"
"3083splitHere46","17594360splitHere46","${requestScope.myVariable}<newline46mondego>"
"3084splitHere46","17594360splitHere46","${myVariable}<newline46mondego>"
"3085splitHere46","17594420splitHere46","for"
"3086splitHere46","17594420splitHere46","for (counter = 0; counter < ary.length; counter++);<newline46mondego>                                                  ^<newline46mondego>"
"3087splitHere46","17594420splitHere46","counter"
"3088splitHere46","17594420splitHere46","ary.length"
"3089splitHere46","17594420splitHere46","System.out.println(counter + <doubleQuotes46> <doubleQuotes46> + ary[counter]);<newline46mondego>"
"3090splitHere46","17594420splitHere46","ArrayIndexOutOfBoundsException"
"3091splitHere46","17594420splitHere46","counter"
"3092splitHere46","17594420splitHere46","for"
"3093splitHere46","17594420splitHere46","for (int counter=0; counter < ary.length; counter++) {<newline46mondego>    System.out.println(counter + <doubleQuotes46> <doubleQuotes46> + ary[counter]);<newline46mondego>}<newline46mondego>"
"3094splitHere46","17594420splitHere46","ary[counter]"
"3095splitHere46","17594559splitHere46","public static String[] ngrams(String str, int length) {<newline46mondego>    char[] chars = str.toCharArray();<newline46mondego>    final int resultCount = chars.length - length + 1;<newline46mondego>    String[] result = new String[resultCount];<newline46mondego>    for (int i = 0; i < resultCount; i++) {<newline46mondego>        result[i] = new String(chars, i, length);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"3096splitHere46","17594559splitHere46","String#toCharArray()"
"3097splitHere46","17594559splitHere46","StringBuilder"
"3098splitHere46","17594559splitHere46","String"
"3099splitHere46","17594559splitHere46","length"
"3100splitHere46","17594559splitHere46","ngrams()"
"3101splitHere46","17594559splitHere46","ngrams12()"
"3102splitHere46","17594559splitHere46","public static String[] ngramsSubstring(String str, int length) {<newline46mondego>    final int resultCount = str.length() - length + 1;<newline46mondego>    String[] result = new String[resultCount];<newline46mondego>    for (int i = 0; i < resultCount; i++) {<newline46mondego>        result[i] = str.substring(i, i+length);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"3103splitHere46","17594559splitHere46","private static final Pattern EVERY_CHAR = Pattern.compile(<doubleQuotes46>(?!^)<doubleQuotes46>);<newline46mondego>"
"3104splitHere46","17594559splitHere46","String#split"
"3105splitHere46","17594559splitHere46","String[] parts = EVERY_CHAR.split(str);<newline46mondego>"
"3106splitHere46","17594587splitHere46","C:\Users\waqas\Desktop\MOBILESTORE.fdb"
"3107splitHere46","17594587splitHere46","C:\Databases\"
"3108splitHere46","17594587splitHere46","java.lang.ClassNotFoundException: org.firebirdsql.jdbc.FBDriver"
"3109splitHere46","17594587splitHere46","jaybird-full-2.2.3.jar"
"3110splitHere46","17594587splitHere46","jaybird-2.2.3.jar"
"3111splitHere46","17594587splitHere46","connector-api-1.5.jar"
"3112splitHere46","17594587splitHere46","jaybird-full-2.2.3.jar"
"3113splitHere46","17594587splitHere46","org.firebirdsql.jdbc.FBDriver"
"3114splitHere46","17594587splitHere46","jdbc:firebirdsql://localhost/D:/data/db/employee.fdb"
"3115splitHere46","17594587splitHere46","jaybird-full-2.2.3.jar"
"3116splitHere46","17594761splitHere46","setAccessible(true);"
"3117splitHere46","17594761splitHere46","for (Field f : fields) {<newline46mondego><newline46mondego>        if (f.getType() == java.lang.String.class) {<newline46mondego><newline46mondego>            try {<newline46mondego>                f.setAccessible(true); // make field accessible.<newline46mondego>                String value = (String) f.get(this);<newline46mondego>                // ...<newline46mondego>"
"3118splitHere46","17594767splitHere46","public void performExecute() throws ECException <newline46mondego>"
"3119splitHere46","17594767splitHere46","ECException"
"3120splitHere46","17594767splitHere46","try-catch"
"3121splitHere46","17594767splitHere46","throw"
"3122splitHere46","17594767splitHere46","public static void main(String[] args) {<newline46mondego>      XGetProgramGuideDirectTestControllerCmdImpl PGDirTestController = new <newline46mondego>               XGetProgramGuideDirectTestControllerCmdImpl();<newline46mondego>      try {<newline46mondego>          PGDirTestController.performExecute();<newline46mondego>      } catch(ECException e) { <newline46mondego>            e.printStackTrace();<newline46mondego>            //Handle the exception!<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"3123splitHere46","17594767splitHere46","public static void main(String[] args) throws ECException {<newline46mondego>     XGetProgramGuideDirectTestControllerCmdImpl PGDirTestController = new <newline46mondego>              XGetProgramGuideDirectTestControllerCmdImpl();<newline46mondego>     PGDirTestController.performExecute();<newline46mondego>}<newline46mondego>"
"3124splitHere46","17594869splitHere46","hamcrest-core-1.3.jar"
"3125splitHere46","17595258splitHere46","ResultSet result = (ResultSet) query.executeQuery();"
"3126splitHere46","17595258splitHere46","try"
"3127splitHere46","17595258splitHere46","ResultSet"
"3128splitHere46","17595278splitHere46","public class NotifyHandlerReceiver extends BroadcastReceiver {<newline46mondego><newline46mondego>    public static final String ACTION = <doubleQuotes46>me.pepyakin.defferednotify.action.NOTIFY<doubleQuotes46>;<newline46mondego><newline46mondego>    public void onReceive(Context context, Intent intent) {<newline46mondego>        if (ACTION.equals(intent.getAction())) {<newline46mondego>             Notification.Builder builder = new Notification.Builder(context)<newline46mondego>                .setTicker(<doubleQuotes46>Notifica<doubleQuotes46>)<newline46mondego>                .setSmallIcon(android.R.drawable.stat_notify_chat)<newline46mondego>                .setContentTitle(<doubleQuotes46>Notifica<doubleQuotes46>)<newline46mondego>                .setContentText(<doubleQuotes46>Hai una notifica!<doubleQuotes46>)<newline46mondego>                .setAutoCancel(true)<newline46mondego>                .setContentIntent(PendingIntent.getActivity(context, 0,<newline46mondego>                        new Intent(context, MainActivity.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK), 0));<newline46mondego><newline46mondego>            NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);<newline46mondego>            nm.notify(<doubleQuotes46>interstitial_tag<doubleQuotes46>, 1, builder.build());<newline46mondego>       }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3129splitHere46","17595278splitHere46","AndroidManifest.xml"
"3130splitHere46","17595278splitHere46","<receiver/>"
"3131splitHere46","17595278splitHere46","<application/>"
"3132splitHere46","17595278splitHere46","<receiver android:name=<doubleQuotes46>.NotifyHandlerReceiver<doubleQuotes46>><newline46mondego>        <intent-filter><newline46mondego>            <action android:name=<doubleQuotes46>me.pepyakin.defferednotify.action.NOTIFY<doubleQuotes46> /><newline46mondego>        </intent-filter><newline46mondego>    </receiver><newline46mondego>"
"3133splitHere46","17595278splitHere46","NotifyHandlerReceiver.ACTION"
"3134splitHere46","17595278splitHere46","public static final int REQUEST_CODE_NOTIFY = 1;<newline46mondego><newline46mondego>public void scheduleNotification(long delayTimeMs) {<newline46mondego>    AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);<newline46mondego>    long currentTimeMs = SystemClock.elapsedRealtime();<newline46mondego><newline46mondego>    PendingIntent pendingNotifyIntent = PendingIntent.getBroadcast(<newline46mondego>            this,<newline46mondego>            REQUEST_CODE_NOTIFY,<newline46mondego>            new Intent(NotifyHandlerReceiver.ACTION),<newline46mondego>            PendingIntent.FLAG_UPDATE_CURRENT);<newline46mondego>    alarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, currentTimeMs + delayTimeMs, pendingNotifyIntent);<newline46mondego>}<newline46mondego>"
"3135splitHere46","17595278splitHere46","delayTimeMs"
"3136splitHere46","17595285splitHere46","length"
"3137splitHere46","17595285splitHere46","\0"
"3138splitHere46","17595285splitHere46","12<\0>45"
"3139splitHere46","17595303splitHere46","new ByteArrayOutputStream();<newline46mondego>"
"3140splitHere46","17595408splitHere46","final Workbook wb;<newline46mondego>fileIn =new FileInputStream(fname);<newline46mondego>wb = WorkbookFactory.create(fileIn);//opening a file<newline46mondego>final Sheet sheet = wb.createsheet(<doubleQuotes46>Report<doubleQuotes46>);// create a sheet<newline46mondego>"
"3141splitHere46","17595408splitHere46","Row row;<newline46mondego>Cell cell;<newline46mondego>row=sheet.getRow(0); //get existing row<newline46mondego>if(row==null)<newline46mondego>row=sheet.createRow(0);//if row not present create row<newline46mondego>cell=row.getCell(0);<newline46mondego>if(cell==null)<newline46mondego>cell=row.createCell(0);<newline46mondego>cell.setCellType(Cell.CELL_TYPE_NUMERIC);<newline46mondego>cell.setCellValue(0);//set cell value<newline46mondego>"
"3142splitHere46","17595408splitHere46","fout=new FileOutputStream(fname);<newline46mondego>wb.write(fout);<newline46mondego>"
"3143splitHere46","17595408splitHere46","finally"
"3144splitHere46","17595408splitHere46","if(fout!=null)<newline46mondego>fout.close();<newline46mondego>"
"3145splitHere46","17595408splitHere46","File file=new File(fname);<newline46mondego>FileInputStream fis=new FileInputStream(file);<newline46mondego><newline46mondego>        response.setHeader(<doubleQuotes46>Content-Length<doubleQuotes46>, String.valueOf(file.length()));<newline46mondego>            response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>,<newline46mondego>                             <doubleQuotes46>attachment;filename=<doubleQuotes46>+fname+<doubleQuotes46>.xlsm<doubleQuotes46>);<newline46mondego>            ServletContext ctx = getServletContext();<newline46mondego>            InputStream input = new BufferedInputStream(new FileInputStream(file), 1024 * 10);<newline46mondego>            OutputStream output = new BufferedOutputStream(response.getOutputStream(), 1024 * 10);<newline46mondego><newline46mondego>            byte[] buffer = new byte[1024 * 10];<newline46mondego>            int length;<newline46mondego>            while ((length = input.read(buffer)) > 0) {<newline46mondego>                output.write(buffer, 0, length);<newline46mondego>            }<newline46mondego>        output.flush();<newline46mondego>        output.close();<newline46mondego>        input.close();<newline46mondego>        fis.close();<newline46mondego>"
"3146splitHere46","17595428splitHere46","Kind=<doubleQuotes46>Questions<doubleQuotes46>"
"3147splitHere46","17595428splitHere46","id=userid"
"3148splitHere46","17595428splitHere46","Key questionKey = KeyFactory.createKey(userkey, <doubleQuotes46>Questions<doubleQuotes46>, questionidorname);<newline46mondego>"
"3149splitHere46","17595428splitHere46","Entity questionEntity = new Entity(<doubleQuotes46>Questions<doubleQuotes46>,<newline46mondego>      userkey)<newline46mondego>"
"3150splitHere46","17595547splitHere46","for(int in=1;in<=l;in++)<newline46mondego>"
"3151splitHere46","17595547splitHere46","for(int in=0;in<l;in++)<newline46mondego>"
"3152splitHere46","17595547splitHere46","in =0"
"3153splitHere46","17595547splitHere46","l"
"3154splitHere46","17595547splitHere46","String[]"
"3155splitHere46","17595547splitHere46","a[0], a[1], a[2], a[3], a[4]"
"3156splitHere46","17595547splitHere46","a[4]"
"3157splitHere46","17595547splitHere46","in <="
"3158splitHere46","17595563splitHere46","T"
"3159splitHere46","17595563splitHere46","Array.newInstance(clazz, size)"
"3160splitHere46","17595563splitHere46","public static <T, U> T[] getKeysForValue(Class<T> clazz, Map<T,U> map,U value){<newline46mondego><newline46mondego>  T[] array = (T[])Array.newInstance(clazz, size);<newline46mondego>"
"3161splitHere46","17595742splitHere46","ByteArrayOutputStream"
"3162splitHere46","17595742splitHere46","ByteArrayOutputStream out = new ByteArrayOutputStream();<newline46mondego>data.compress(Bitmap.CompressFormat.JPEG, 90, out); <newline46mondego><newline46mondego>// now take the bytes out of your Stream<newline46mondego>byte[] imgData = out.toByteArray();<newline46mondego>"
"3163splitHere46","17595799splitHere46","["
"3164splitHere46","17595799splitHere46","String mainstr = <doubleQuotes46>[[data link control], [communication, []], [computer, [applications     of computer, number of computer]], [world wide web], [lesson, [covered in lesson]], [access to remote], [marketing and sale], [electronic fund transfer], [network, [network of network, wide area network, communication network, computer network, [area network, [local area network, metropolitan area network]]]]]<doubleQuotes46>;<newline46mondego>  String search = <doubleQuotes46>communication network<doubleQuotes46>;<newline46mondego>  int start = mainstr.indexOf(search);<newline46mondego>  if (start != -1)<newline46mondego>  {<newline46mondego>     int end = start + search.length();<newline46mondego>     int count = 0;<newline46mondego>     int pos = end;<newline46mondego>     if (mainstr.charAt(end+2) == '[')<newline46mondego>     {<newline46mondego>        while (count != -1)<newline46mondego>           if (mainstr.charAt(++pos) == ']')<newline46mondego>              count--;<newline46mondego>           else if (mainstr.charAt(++pos) == '[')<newline46mondego>              count++;<newline46mondego>        System.out.println(<doubleQuotes46>Ancestors = <doubleQuotes46> + mainstr.substring(end+2, pos-1));<newline46mondego>     }<newline46mondego>     count = 0;<newline46mondego>     pos = start;<newline46mondego>     int lastComma = -1;<newline46mondego>     while (count != 2)<newline46mondego>        switch (mainstr.charAt(--pos))<newline46mondego>        {<newline46mondego>           case ']': count--; break;<newline46mondego>           case '[': count++; break;<newline46mondego>           case ',': lastComma = pos;<newline46mondego>        }<newline46mondego>     System.out.println(<doubleQuotes46>Parent = <doubleQuotes46> + mainstr.substring(pos+1, lastComma));<newline46mondego>  }<newline46mondego>"
"3165splitHere46","17595799splitHere46","int start = mainstr.indexOf(search);<newline46mondego>if (start != -1)<newline46mondego>{<newline46mondego>"
"3166splitHere46","17595799splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>(?:^|, |\\[)(<doubleQuotes46> + search + <doubleQuotes46>)(?:]|, |$)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(mainstr);<newline46mondego>if (m.find())<newline46mondego>{<newline46mondego>   int start = m.start(1);<newline46mondego>"
"3167splitHere46","17595809splitHere46","android.support.v4.app.Fragment"
"3168splitHere46","17595809splitHere46","android.app.Fragment"
"3169splitHere46","17595809splitHere46","android.support.v4.app.FragmentActivity"
"3170splitHere46","17595895splitHere46","class MyClass { <newline46mondego>public:<newline46mondego>     MyClass();<newline46mondego>     int myMethod( int arg );<newline46mondego>}<newline46mondego>"
"3171splitHere46","17595895splitHere46","MyClass myclass = new MyClass();<newline46mondego>int val = myClass.myMethod( 42 );<newline46mondego>"
"3172splitHere46","17595936splitHere46","import java.util.HashMap;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Map.Entry;<newline46mondego><newline46mondego>import javax.swing.JOptionPane;<newline46mondego><newline46mondego><newline46mondego>public class LetterCounter {<newline46mondego><newline46mondego>    //Hash maps don't allow duplication. <newline46mondego>    //The letter will be the Key and the repetitions the value(Your goal!)<newline46mondego>    private Map<Character, Integer> resultsMap = new HashMap<Character, Integer>(); <newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        LetterCounter letterCounter = new LetterCounter();<newline46mondego>        letterCounter.fillMap();<newline46mondego>        letterCounter.showMapContents();        <newline46mondego>    }<newline46mondego><newline46mondego>    private void showMapContents() {<newline46mondego>        for (Entry<Character, Integer> entry : resultsMap.entrySet())<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>'<doubleQuotes46> + entry.getKey() + <doubleQuotes46>' - <doubleQuotes46> + entry.getValue() + <doubleQuotes46> times<doubleQuotes46>);<newline46mondego>        }       <newline46mondego>    }<newline46mondego><newline46mondego>    private void fillMap() {<newline46mondego>        char[] userInputAsArray = getUserInputAsLetterArray();<newline46mondego>        for (int currentLetter = 0; currentLetter < userInputAsArray.length; currentLetter++) {<newline46mondego>            int count = getOccurences(userInputAsArray[currentLetter],userInputAsArray);<newline46mondego>            resultsMap.put(userInputAsArray[currentLetter], count);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private int getOccurences(int letter, char[] userInputAsArray) {<newline46mondego>        int counter = 0;<newline46mondego>        for (int currentIndex = 0; currentIndex < userInputAsArray.length; currentIndex++) {<newline46mondego>            if(userInputAsArray[currentIndex] == letter)<newline46mondego>                counter++;<newline46mondego>        }<newline46mondego>        return counter;<newline46mondego>    }<newline46mondego><newline46mondego>    public char[] getUserInputAsLetterArray() {<newline46mondego>        String userInput = JOptionPane.showInputDialog(<doubleQuotes46>Enter line of text:  <doubleQuotes46>);<newline46mondego>        char[] chars = userInput.toCharArray();<newline46mondego>        return chars;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3173splitHere46","17595987splitHere46","add(showButton, BorderLayout.PAGE_START);"
"3174splitHere46","17595987splitHere46","@Override<newline46mondego>public void actionPerformed(ActionEvent e) {<newline46mondego>    if (e.getSource() == showButton) {<newline46mondego>        add(mypanel(), BorderLayout.PAGE_START); // set another position or remove previous component here<newline46mondego>        validate(); <newline46mondego>        System.out.println(<doubleQuotes46>show button clicked<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3175splitHere46","17595987splitHere46","ActionListener"
"3176splitHere46","17595987splitHere46","JFrame"
"3177splitHere46","17595987splitHere46","JFrame"
"3178splitHere46","17595987splitHere46","public class D5 { <newline46mondego><newline46mondego>private JFrame frame;<newline46mondego><newline46mondego>.<newline46mondego>. // is some part in constrcutor<newline46mondego>.<newline46mondego>  showButton.addActionListener(new ActionListener(){<newline46mondego>        @Override <newline46mondego>         public void actionPerformed(ActionEvent evt){<newline46mondego>              frame.add(mypanel(),BorderLayout.PAGE_START);<newline46mondego>              frame.validate();<newline46mondego>         }<newline46mondego>  })<newline46mondego>}<newline46mondego>"
"3179splitHere46","17595994splitHere46","String insertSql = <newline46mondego><doubleQuotes46>insert into occupancy.occupancy_phase_2(Name,Count,Time_stamp)values('<doubleQuotes46>+zoneName+<doubleQuotes46>',<doubleQuotes46>+zonecount+<doubleQuotes46>, Now())<doubleQuotes46>;<newline46mondego>"
"3180splitHere46","17595994splitHere46","String insertSql = <newline46mondego>    <doubleQuotes46>insert into occupancy.occupancy_phase_2 values('<doubleQuotes46>+zoneName+<doubleQuotes46>',<doubleQuotes46>+zonecount+<doubleQuotes46>, Now())<doubleQuotes46>;<newline46mondego>"
"3181splitHere46","17595994splitHere46","PreparedStatement"
"3182splitHere46","17595994splitHere46","String insertSql = <newline46mondego>        <doubleQuotes46>insert into occupancy.occupancy_phase_2 values(?,?, Now())<doubleQuotes46>;<newline46mondego>PreparedStatement ps = connection.prepareStatement(insertSql);<newline46mondego>ps.setString(1, zoneName);<newline46mondego>ps.setInt(2, zonecount);<newline46mondego>"
"3183splitHere46","17596006splitHere46","remotelookup {<newline46mondego>  include <doubleQuotes46>common<doubleQuotes46><newline46mondego><newline46mondego>  akka {<newline46mondego>    remote.netty.port = 2500<newline46mondego>    cluster.nodename = <doubleQuotes46>n1<doubleQuotes46><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3184splitHere46","17596063splitHere46","public List<Date> getTime(){<newline46mondego>      List<Date> dates = new ArrayList<Date>();<newline46mondego>      DateFormat format;<newline46mondego><newline46mondego>      try {<newline46mondego><newline46mondego>          Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>          Connection con = DriverManager.getConnection(url, <doubleQuotes46>root<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>          Statement stmt = con.createStatement();<newline46mondego><newline46mondego>          ResultSet result = stmt.executeQuery(<doubleQuotes46>SELECT * FROM error_log WHERE service_source = 'Billbox' <doubleQuotes46>);<newline46mondego><newline46mondego>          while (result.next()) {  //retrieve data<newline46mondego>              String ds = result.getString(<doubleQuotes46>error_date<doubleQuotes46>);<newline46mondego>              format = new SimpleDateFormat(<doubleQuotes46>M/d/yyyy H:m:s a<doubleQuotes46>);<newline46mondego><newline46mondego>              dates.add((Date)format.parse(ds));  <newline46mondego><newline46mondego>          }<newline46mondego>          con.close();<newline46mondego><newline46mondego>      } catch (Exception ex) {<newline46mondego>          Logger.getLogger(LogDB.class.getName()).log( <newline46mondego>                        Level.SEVERE, null, ex);<newline46mondego>      }<newline46mondego>      return dates;<newline46mondego>  }<newline46mondego>"
"3185splitHere46","17596112splitHere46","BasicDBObject query= new BasicDBObject().append(<doubleQuotes46>organizationNumber<doubleQuotes46>,id);<newline46mondego>Unit unit = new Unit(fields);<newline46mondego>BasicDBObject unitDB= new BasicDBObject().append(<doubleQuotes46>someField<doubleQuotes46>,unit.getSomeField()).append(<doubleQuotes46>otherField<doubleQuotes46>,unit.getOtherField());<newline46mondego>collection.update(query,unitDB);<newline46mondego>"
"3186splitHere46","17596112splitHere46","query"
"3187splitHere46","17596112splitHere46","unitDB"
"3188splitHere46","17596115splitHere46","import javax.servlet.Filter;<newline46mondego>import javax.servlet.FilterChain;<newline46mondego>import javax.servlet.FilterConfig;<newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.ServletRequest;<newline46mondego>import javax.servlet.ServletResponse;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego>import javax.servlet.http.HttpSession;<newline46mondego><newline46mondego>public class MyFilter implements Filter {<newline46mondego>  public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain) throws IOException,<newline46mondego>      ServletException {<newline46mondego>    HttpServletRequest request = (HttpServletRequest) req;         <newline46mondego>    HttpSession session = request.getSession(false);<newline46mondego>    HttpServletResponse response = (HttpServletResponse) resp;<newline46mondego>    if (session == null) {<newline46mondego>      // no session has been established yet      <newline46mondego>    }<newline46mondego>    chain.doFilter(req, resp); <newline46mondego>  }<newline46mondego><newline46mondego>  public void destroy() {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  public void init(FilterConfig filterConfig) throws ServletException {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3189splitHere46","17596115splitHere46","web.xml"
"3190splitHere46","17596115splitHere46","<filter><newline46mondego>  <filter-name>SessionFilter</filter-name><newline46mondego>  <filter-class>mypackage.MyFilter</filter-class><newline46mondego></filter><newline46mondego><filter-mapping><newline46mondego>  <filter-name>SessionFilter</filter-name><newline46mondego>  <url-pattern>/*</url-pattern> <!-- or whatever specific URL mappings you need --><newline46mondego></filter-mapping> <newline46mondego>"
"3191splitHere46","17596119splitHere46","ByteArrayInputStream"
"3192splitHere46","17596119splitHere46","InputStream is = new ByteArrayInputStream(bos.toByteArray());<newline46mondego>"
"3193splitHere46","17596119splitHere46","InputStream"
"3194splitHere46","17596119splitHere46","FileInputStream"
"3195splitHere46","17596119splitHere46","File"
"3196splitHere46","17596119splitHere46","InputStream"
"3197splitHere46","17596119splitHere46","PipedInputStream"
"3198splitHere46","17596119splitHere46","PipedOutputStream"
"3199splitHere46","17596156splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><project name=<doubleQuotes46>javah<doubleQuotes46>><newline46mondego>    <mkdir dir=<doubleQuotes46>javah<doubleQuotes46> /><newline46mondego><newline46mondego>    <javah classpath=<doubleQuotes46>bin<doubleQuotes46> destdir=<doubleQuotes46>javah<doubleQuotes46>><newline46mondego>        <!-- list classes here --><newline46mondego>        <class name=<doubleQuotes46>com.example.Outer<doubleQuotes46> /><newline46mondego>        <class name=<doubleQuotes46>com.example.OuterWithNatives<doubleQuotes46> /><newline46mondego>    </javah><newline46mondego><newline46mondego>    <delete><newline46mondego>        <fileset dir=<doubleQuotes46>javah<doubleQuotes46>><newline46mondego>            <not><newline46mondego>                <contains text=<doubleQuotes46>JNIEXPORT<doubleQuotes46> /><newline46mondego>            </not><newline46mondego>        </fileset><newline46mondego>    </delete><newline46mondego><newline46mondego></project><newline46mondego>"
"3200splitHere46","17596216splitHere46","//make a copy of the keys of the map<newline46mondego>List keys = new ArrayList(yourmap.keys())<newline46mondego>Collections.rotate(keys)<newline46mondego>//iterate over the keys of the map in the new rotated order<newline46mondego>for key in keys:<newline46mondego>    Object value = yourmap.get(key)<newline46mondego>    // do something with this value<newline46mondego>"
"3201splitHere46","17596271splitHere46","validateOnBorrow"
"3202splitHere46","17596271splitHere46","validateWhileIdle"
"3203splitHere46","17596373splitHere46","Connection con2=Jsoup.connect(url);<newline46mondego>Document doc = con2.get();<newline46mondego>Element e=doc.head().select(<doubleQuotes46>link[href~=.*\\.ico]<doubleQuotes46>).first();<newline46mondego>String url=e.attr(<doubleQuotes46>href<doubleQuotes46>);<newline46mondego>"
"3204splitHere46","17596409splitHere46","vmrun -T vc -h 10.1.1.44 -u root -p vmware snapshot <doubleQuotes46>[datacenter-2/datastore1] CENTER/CENTER.vmx<doubleQuotes46> CleanSnapshot<newline46mondego>vmrun -T vc -h 10.1.1.44 -u root -p vmware -gu Administrator -gp P@ssword runScriptInGuest <doubleQuotes46>[datacenter-2/datastore1] CENTER/CENTER.vmx<doubleQuotes46> <doubleQuotes46><doubleQuotes46> <doubleQuotes46>echo Test > c:\test.txt<doubleQuotes46><newline46mondego>vmrun -T vc -h 10.1.1.44 -u root -p vmware revertToSnapshot <doubleQuotes46>[datacenter-2/datastore1] CENTER/CENTER.vmx<doubleQuotes46> CleanSnapshot<newline46mondego>"
"3205splitHere46","17596679splitHere46","cmd prompt"
"3206splitHere46","17596679splitHere46","c:\echo %PATH%"
"3207splitHere46","17596679splitHere46","c:\path"
"3208splitHere46","17596679splitHere46","public class Test {<newline46mondego>  public static void main(String[]s){<newline46mondego>    System.out.println(System.getProperty(<doubleQuotes46>java.home<doubleQuotes46>));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3209splitHere46","17596779splitHere46","String dateAsString = s.replaceAll(<doubleQuotes46>.*;\\s+<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"3210splitHere46","17596779splitHere46","String s = <doubleQuotes46>2823893a2f91c7507831f140dd7aa75e420477b0 - #0023922: Fixed the message for defaulted bonds ; Thu Oct 25 12:08:25 2012 +0000<doubleQuotes46>;<newline46mondego>System.out.println(<doubleQuotes46>s = <doubleQuotes46> + s);<newline46mondego>String dateAsString = s.replaceAll(<doubleQuotes46>.*;\\s+<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>dateAsString = <doubleQuotes46> + dateAsString);<newline46mondego>DateFormat parser = new SimpleDateFormat(<doubleQuotes46>EEE MMM dd HH:mm:ss yyyy X<doubleQuotes46>, Locale.ENGLISH);<newline46mondego>Date date = parser.parse(dateAsString);<newline46mondego>System.out.println(<doubleQuotes46>date = <doubleQuotes46> + date);<newline46mondego>DateFormat formatter = new SimpleDateFormat(<doubleQuotes46>dd/MMM/yyyy hh:mm a<doubleQuotes46>, Locale.ENGLISH);<newline46mondego>formatter.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>UTC<doubleQuotes46>));<newline46mondego>System.out.println(formatter.format(date));<newline46mondego>"
"3211splitHere46","17596779splitHere46","s = 2823893a2f91c7507831f140dd7aa75e420477b0 - #0023922: Fixed the message for defaulted bonds ; Thu Oct 25 12:08:25 2012 +0000<newline46mondego>dateAsString = Thu Oct 25 12:08:25 2012 +0000<newline46mondego>date = Thu Oct 25 14:08:25 CEST 2012<newline46mondego>25/Oct/2012 12:08 PM<newline46mondego>"
"3212splitHere46","17596836splitHere46","try {<newline46mondego>    double result1 = calc.calculate();<newline46mondego>    String result = Double.toString(result1);<newline46mondego>    txtCalc.setText(result);<newline46mondego>    if (varX != 0) {<newline46mondego>    btnFunX.setText(<doubleQuotes46>f(<doubleQuotes46> + Double.toString((varX * 100) / 100) + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>        } catch (Exception e) {<newline46mondego>            txtCalc.setText(<doubleQuotes46>Error!<doubleQuotes46>);      <newline46mondego>                }<newline46mondego>"
"3213splitHere46","17596839splitHere46","def s3 = createS3Client(credentials)<newline46mondego>def originalMeta = s3.getObjectMetadata(originalBucketName, key)<newline46mondego>s3.copyObject(originalBucketName, key, newBucketName, newKey)<newline46mondego>def newMeta = s3.getObjectMetadata(newBucketName, newKey)<newline46mondego><newline46mondego>// check that md5 matches to confirm this operation was successful<newline46mondego>return originalMeta.contentMD5 == newMeta.contentMD5<newline46mondego>"
"3214splitHere46","17596922splitHere46","42"
"3215splitHere46","17596922splitHere46","Object"
"3216splitHere46","17596922splitHere46","Object"
"3217splitHere46","17596922splitHere46","System.out.println"
"3218splitHere46","17596922splitHere46","cast"
"3219splitHere46","17596922splitHere46","int"
"3220splitHere46","17596922splitHere46","cast()"
"3221splitHere46","17596922splitHere46","isInstance()"
"3222splitHere46","17596922splitHere46","isInstance()"
"3223splitHere46","17596922splitHere46","42"
"3224splitHere46","17596922splitHere46","Integer"
"3225splitHere46","17597103splitHere46","htmlEscape=<doubleQuotes46>false<doubleQuotes46>"
"3226splitHere46","17597103splitHere46","spring:message"
"3227splitHere46","17597103splitHere46","true"
"3228splitHere46","17597103splitHere46","alert('<spring:message code=<doubleQuotes46>message_miss_duedate<doubleQuotes46> htmlEscape=<doubleQuotes46>false<doubleQuotes46>/>');<newline46mondego>"
"3229splitHere46","17597103splitHere46","MessageSource"
"3230splitHere46","17597103splitHere46","uiModel"
"3231splitHere46","17597103splitHere46","Locale currentLocale = LocaleContextHolder.getLocale();<newline46mondego>uiModel.addAttribute(<doubleQuotes46>message_miss_duedate<doubleQuotes46>, messageSource.getMessage(<doubleQuotes46>message_miss_duedate<doubleQuotes46>, null, currentLocale));<newline46mondego>"
"3232splitHere46","17597103splitHere46","alert(<doubleQuotes46>${message_miss_duedate}<doubleQuotes46>);<newline46mondego>"
"3233splitHere46","17597256splitHere46","not"
"3234splitHere46","17597256splitHere46","DynarchCalendar-day"
"3235splitHere46","17597256splitHere46","DynarchCalendar-day-othermonth"
"3236splitHere46","17597256splitHere46","<doubleQuotes46>div.DynarchCalendar-day:not(.DynarchCalendar-day-othermonth)<doubleQuotes46><newline46mondego>"
"3237splitHere46","17597306splitHere46","import java.io.BufferedWriter;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.FileWriter;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Scanner;<newline46mondego>public class AppendIfFromFileScanner {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        File file = new File(<doubleQuotes46>C:\\Users\\frencke\\workspace\\Testing Stuff\\Append Tetsing\\file3.txt<doubleQuotes46>);<newline46mondego>        ArrayList<String> lines = new ArrayList<String>();<newline46mondego>        String delimiter = <doubleQuotes46>.*\\s+&.*<doubleQuotes46>;<newline46mondego>    try {<newline46mondego>        FileWriter fstream = new FileWriter(<doubleQuotes46>file4.txt<doubleQuotes46>);<newline46mondego>        BufferedWriter out = new BufferedWriter(fstream);<newline46mondego>    try {<newline46mondego>        Scanner scanner = new Scanner(file);<newline46mondego>        while (scanner.hasNextLine()) {<newline46mondego>            lines.add(scanner.nextLine());}<newline46mondego>for(int i=0; i<lines.size(); i++){<newline46mondego>    for(String s=null; i<lines.size(); i++){<newline46mondego>        s = lines.get(i);<newline46mondego>        if(!s.matches(delimiter))<newline46mondego>        out.write(<doubleQuotes46>\r\n<doubleQuotes46> + s);<newline46mondego>        else if(s.matches(delimiter))<newline46mondego>        out.write(s);}<newline46mondego>}<newline46mondego>    }catch (FileNotFoundException e) {<newline46mondego>System.out.println(<doubleQuotes46>Cannot find file.<doubleQuotes46>);<newline46mondego>}out.close();<newline46mondego>}catch (Exception e) {<newline46mondego>        System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"3238splitHere46","17597319splitHere46","new Circle"
"3239splitHere46","17597319splitHere46","Base<? extends Shape> bs = new Base<Square>();  // Really a Base<Square> <newline46mondego>bs.setX(new Circle());<newline46mondego>"
"3240splitHere46","17597319splitHere46","Base<Square>"
"3241splitHere46","17597319splitHere46","Base<? extends Shape> bs = someInterface.getBaseOfSomeKindOfShape();<newline46mondego>bs.setX(new Circle());<newline46mondego>"
"3242splitHere46","17597615splitHere46","LatLng"
"3243splitHere46","17597615splitHere46","LatLng"
"3244splitHere46","17597615splitHere46","newLatLngZoom()"
"3245splitHere46","17597783splitHere46","@Provider<newline46mondego>public class SecurityInterceptor <newline46mondego>      implements javax.ws.rs.container.ContainerRequestFilter {<newline46mondego>     @Override<newline46mondego>     public void filter(ContainerRequestContext requestContext){<newline46mondego>       if (not_authenticated){ requestContext.abortWith(response)};<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"3246splitHere46","17597783splitHere46","ReaderInterceptor"
"3247splitHere46","17597783splitHere46","MessageBodyReader.readFrom"
"3248splitHere46","17597783splitHere46","@ServerInterceptor"
"3249splitHere46","17597783splitHere46","@Provider"
"3250splitHere46","17597783splitHere46","@NameBinding"
"3251splitHere46","17597783splitHere46","RESTEasy"
"3252splitHere46","17597783splitHere46","@ServerInterceptor"
"3253splitHere46","17598015splitHere46","http://www.batstrading.com/json/bzx/book/IBM<newline46mondego>"
"3254splitHere46","17598079splitHere46","if (line=='1')<newline46mondego>//do Something<newline46mondego>else if (line==<doubleQuotes46>2<doubleQuotes46>)<newline46mondego>//do something else.<newline46mondego>"
"3255splitHere46","17598079splitHere46","=="
"3256splitHere46","17598079splitHere46","String"
"3257splitHere46","17598079splitHere46","equals()"
"3258splitHere46","17598079splitHere46","String x = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>String y = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>"
"3259splitHere46","17598079splitHere46","x == y"
"3260splitHere46","17598079splitHere46","true"
"3261splitHere46","17598079splitHere46","String x = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>String y = new String(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>"
"3262splitHere46","17598079splitHere46","x == y"
"3263splitHere46","17598079splitHere46","false"
"3264splitHere46","17598079splitHere46","equals(String)"
"3265splitHere46","17598079splitHere46","String x = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>String y = new String(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego><newline46mondego>x.equals(y);<newline46mondego>"
"3266splitHere46","17598079splitHere46","true"
"3267splitHere46","17598114splitHere46","BankAccount"
"3268splitHere46","17598114splitHere46","String id"
"3269splitHere46","17598114splitHere46","int deleteRecords = entityManager.createQuery(<doubleQuotes46>DELETE from BankAccount b where b.accountNumber = ?1<doubleQuotes46>)<newline46mondego>                .setParameter(1, accountNumber)<newline46mondego>                .executeUpdate();<newline46mondego>"
"3270splitHere46","17598261splitHere46","Integer b = null;<newline46mondego>  while ((b = inFile.read()) != -1)<newline46mondego>      outFile.write(b);<newline46mondego>"
"3271splitHere46","17598261splitHere46","read()"
"3272splitHere46","17598261splitHere46","byte[]"
"3273splitHere46","17598261splitHere46","byte[]"
"3274splitHere46","17598261splitHere46","OutputStream"
"3275splitHere46","17598261splitHere46","write(int)"
"3276splitHere46","17598533splitHere46","<a href=<doubleQuotes46>/passengers/<doubleQuotes46>>"
"3277splitHere46","17598533splitHere46","http://localhost:8080/passengers/"
"3278splitHere46","17598533splitHere46","http://localhost:8080/AirlineDB_Spring/passengers/"
"3279splitHere46","17598533splitHere46","<a href=<doubleQuotes46>/AirlineDB_Spring/passengers/<doubleQuotes46>>"
"3280splitHere46","17598533splitHere46","<a href=<doubleQuotes46>${pageContext.servletContext.contextPath}/passengers/<doubleQuotes46>>"
"3281splitHere46","17598533splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    @RequestMapping(value=<doubleQuotes46>/<doubleQuotes46>,method=RequestMethod.GET)<newline46mondego>    public String list(Model model) {<newline46mondego>        List<String> tl = new ArrayList<String>();<newline46mondego>        tl.add(<doubleQuotes46>one<doubleQuotes46>);<newline46mondego>        tl.add(<doubleQuotes46>two<doubleQuotes46>);<newline46mondego>        tl.add(<doubleQuotes46>three<doubleQuotes46>);<newline46mondego>        model.addAttribute(<doubleQuotes46>testlist<doubleQuotes46>, tl);<newline46mondego>        return <doubleQuotes46>mainview<doubleQuotes46>;<newline46mondego>    }<newline46mondego>"
"3282splitHere46","17598598splitHere46","Name name = dctmWorkSheet.getWorkbook().createName();<newline46mondego>    name.setSheetIndex(1);<newline46mondego>    name.setNameName(cell.getStringCellValue());    <newline46mondego>    name.setRefersToFormula(getRangeRefersToFormula(valueAssSheet, firstRow, rowIndex, insertCol));<newline46mondego>    Name name2 = dctmWorkSheet.getWorkbook().createName();<newline46mondego>    name2.setSheetIndex(0);<newline46mondego>    name2.setNameName(name.getNameName());<newline46mondego>    name2.setRefersToFormula(name.getRefersToFormula());<newline46mondego><newline46mondego><newline46mondego>    validationHelper = dctmWorkSheet.getDataValidationHelper();<newline46mondego>    constraint = validationHelper.createFormulaListConstraint(name2.getNameName());<newline46mondego>    dataValidation = validationHelper.createValidation(constraint, cral);<newline46mondego>    dataValidation.setEmptyCellAllowed(true);<newline46mondego>    dataValidation.setShowErrorBox(true);<newline46mondego>    dataValidation.setErrorStyle(DataValidation.ErrorStyle.STOP);<newline46mondego>    dataValidation.createErrorBox(<doubleQuotes46>Error<doubleQuotes46>, <doubleQuotes46>Please use Pick List Value<doubleQuotes46>);<newline46mondego>    dctmWorkSheet.addValidationData(dataValidation);<newline46mondego>"
"3283splitHere46","17598767splitHere46","Scanner in=new Scanner (System.in);<newline46mondego>double num[]=new double[5];<newline46mondego>double average=0;<newline46mondego>int i=0;<newline46mondego>double sum=0;<newline46mondego><newline46mondego>double min = Double.MAX_VALUE;<newline46mondego>double max = Double.MIN_VALUE;<newline46mondego><newline46mondego>for (i=0;i<num.length;i++) {<newline46mondego>    System.out.println(<doubleQuotes46>enter a number<doubleQuotes46>);<newline46mondego>    num[i]=in.nextDouble();<newline46mondego>    sum=sum+num[i];<newline46mondego>    if (num[i]<min) {<newline46mondego>        min=num[i];<newline46mondego>    } else if (num[i] > max) {<newline46mondego>        max=num[i];<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>average=sum/num.length;<newline46mondego>System.out.println(String.format(<doubleQuotes46>Average=%.3d<doubleQuotes46>, average));<newline46mondego>System.out.println(String.format(<doubleQuotes46>Min=%.3d<doubleQuotes46>, min));<newline46mondego>System.out.println(String.format(<doubleQuotes46>Max=%.3d<doubleQuotes46>, max));<newline46mondego>System.out.println(String.format(<doubleQuotes46>Sum=%.3d<doubleQuotes46>, sum));<newline46mondego>"
"3284splitHere46","17598852splitHere46","if...else"
"3285splitHere46","17598852splitHere46","name.isEmpty()"
"3286splitHere46","17598852splitHere46","isEmpty()"
"3287splitHere46","17598852splitHere46","isEmpty()"
"3288splitHere46","17598852splitHere46","name.length() > 0"
"3289splitHere46","17599087splitHere46","final String NAMESPACE = <doubleQuotes46>http://www.tempuri.org/<doubleQuotes46>;<newline46mondego>"
"3290splitHere46","17599087splitHere46","final String NAMESPACE = <doubleQuotes46>http://tempuri.org/<doubleQuotes46>;<newline46mondego>"
"3291splitHere46","17599192splitHere46","<not-filter><newline46mondego>    <wildcard-filter pattern=<doubleQuotes46>/favicon.ico<doubleQuotes46>/><newline46mondego></not-filter>    <newline46mondego>"
"3292splitHere46","17599364splitHere46","public class Test {<newline46mondego>public static void main(String[] args) {<newline46mondego>    String data = <doubleQuotes46> Lead Details\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Caller Name: Mr Rahul from Rajouri Garden\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Caller Requirement: Money Exchangers\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Caller Phone: +918459761134\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Caller Email: rchand.rahul@gmail.com\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Call Date & Time: Tue, 18 Jun 2013 14:40:38\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>Branch Info: Rajouri Garden\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>City: Delhi<doubleQuotes46>;<newline46mondego><newline46mondego>    String[] subStr=data.split(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>    for (String i:subStr){<newline46mondego>        if(i.contains(<doubleQuotes46>Caller Name<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Caller Name: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }if(i.contains(<doubleQuotes46>Caller Requirement<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Caller Requirement: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }if(i.contains(<doubleQuotes46>Caller Phone<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Caller Phone: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }if(i.contains(<doubleQuotes46>Caller Email<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Caller Email: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }if(i.contains(<doubleQuotes46>Call Date & Time<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Call Date & Time: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }if(i.contains(<doubleQuotes46>Branch Info<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>Branch Info: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }if(i.contains(<doubleQuotes46>City<doubleQuotes46>)){<newline46mondego>            System.out.println(<doubleQuotes46>City: <doubleQuotes46>+i.split(<doubleQuotes46>:<doubleQuotes46>)[1]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"3293splitHere46","17599589splitHere46","Locale"
"3294splitHere46","17599589splitHere46","ComponentOrientation"
"3295splitHere46","17599589splitHere46","java.text.Bidi"
"3296splitHere46","17599686splitHere46","LinearLayout"
"3297splitHere46","17599686splitHere46","LinearLayout"
"3298splitHere46","17599686splitHere46","LinearLayout"
"3299splitHere46","17599686splitHere46","android:orientation=<doubleQuotes46>vertical<doubleQuotes46><newline46mondego>"
"3300splitHere46","17599904splitHere46","if (user tries to move right) {<newline46mondego>    if (posX < 15 && posY == 0)<newline46mondego>         //move right<newline46mondego>    else<newline46mondego>         //don't<newline46mondego>}<newline46mondego><newline46mondego>if (user tries to move left) {<newline46mondego>    if (posX > 0 && posY == 15)<newline46mondego>         //move left<newline46mondego>    else<newline46mondego>         //don't<newline46mondego>}<newline46mondego>"
"3301splitHere46","17599904splitHere46","OOOOOOOOOOOOOOO<newline46mondego>OXXXXXXXXXXXXXO<newline46mondego>OXXXXXXXXXXXXXO<newline46mondego>...<newline46mondego>OXXXXXXXXXXXXXO<newline46mondego>OOOOOOOOOOOOOOO<newline46mondego>"
"3302splitHere46","17599918splitHere46","ActionListener"
"3303splitHere46","17599918splitHere46","actionPerformed"
"3304splitHere46","17599918splitHere46","ActionListener"
"3305splitHere46","17599918splitHere46","JButton"
"3306splitHere46","17599918splitHere46","actionPerformed"
"3307splitHere46","17599918splitHere46","ActionListener"
"3308splitHere46","17599918splitHere46","b1"
"3309splitHere46","17599918splitHere46","b3"
"3310splitHere46","17599918splitHere46","b1.addActionListener(new ActionListener()<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e)<newline46mondego>    {<newline46mondego>        b2.setEnabled(false);<newline46mondego>        b1.setEnabled(false);<newline46mondego>        b3.setEnabled(true);<newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>b3.addActionListener(new ActionListener()<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e)<newline46mondego>    {<newline46mondego>        b2.setEnabled(true);<newline46mondego>        b1.setEnabled(true);<newline46mondego>        b3.setEnabled(false);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3311splitHere46","17599918splitHere46","b1"
"3312splitHere46","17599918splitHere46","this"
"3313splitHere46","17599918splitHere46","ActionListener"
"3314splitHere46","17599983splitHere46","final List<String> cmd = Arrays.asList(<doubleQuotes46>wmic<doubleQuotes46>, <doubleQuotes46>/node:IP<doubleQuotes46>, <doubleQuotes46>/user:Someuser<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>/password:PWD<doubleQuotes46>, <doubleQuotes46>Process<doubleQuotes46>, <doubleQuotes46>Call<doubleQuotes46>, <doubleQuotes46>Create<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>cmd /c echo 'Required_Info' %SystemDrive% %SystemRoot%<doubleQuotes46><newline46mondego>)<newline46mondego><newline46mondego>// build processBuilder using cmd.toArray(new String[cmd.size()]) as a command<newline46mondego>"
"3315splitHere46","17599983splitHere46","cmd /c echo etc"
"3316splitHere46","17599983splitHere46","ProcessBuilder"
"3317splitHere46","17600166splitHere46","// A Collection which holds your values<newline46mondego>List<YourFriendObject> list = new ArrayList<YourFriendObject>();<newline46mondego><newline46mondego>// fill the Collection with your data<newline46mondego>// you should use for-each but I dont know your object<newline46mondego>for (int i = 0; i < friendArray.length; i++)<newline46mondego>  list.add(friendArray[i]);<newline46mondego><newline46mondego>// The ArrayAdapter takes a layout, in this case a standard one<newline46mondego>// and the collection with your data<newline46mondego>ArrayAdapter<YourFriendObject> adapter = new ArrayAdapter(this,<newline46mondego>    android.R.layout.simple_list_item_1, list);<newline46mondego><newline46mondego> // provide the adapter to your listview<newline46mondego>frienListView.setAdapter(adapter);<newline46mondego>"
"3318splitHere46","17600289splitHere46","(in the store routines)<newline46mondego><newline46mondego>  if (array[index] == null) {<newline46mondego>    loadCount++;<newline46mondego>  }<newline46mondego>  if (loadCount / arraySize > maxLoad) {<newline46mondego>    resizeUp(...);<newline46mondego>  }<newline46mondego><newline46mondego>  (in the remove routines)<newline46mondego>  if (array[index] is cleared to null) {<newline46mondego>    loadCount--;<newline46mondego>  }<newline46mondego>  if (loadCount / arraySize < minLoad) {<newline46mondego>    resizeDown(...);<newline46mondego>  }<newline46mondego>"
"3319splitHere46","17600387splitHere46","NavigableSet<Integer> min3 = new TreeSet<Integer>();<newline46mondego>    //We keep only 3 elements in min3, as soon as the set size grows over 3<newline46mondego>    //we remove the last element, which is the max.<newline46mondego><newline46mondego>    for (int x : array) {<newline46mondego>        min3.add(x);<newline46mondego>        if (min3.size() > 3) {<newline46mondego>            min3.pollLast();<newline46mondego>        } <newline46mondego>    }<newline46mondego><newline46mondego>    if (array.length >= 3) {<newline46mondego>        Integer thirdMinimum = min3.pollLast();<newline46mondego>        System.out.println(thirdMimimum);<newline46mondego>    } else {<newline46mondego>       //array must contain at least 3 elements<newline46mondego>    }<newline46mondego>"
"3320splitHere46","17600610splitHere46","finally"
"3321splitHere46","17600610splitHere46","StringBuilder"
"3322splitHere46","17600610splitHere46","StringBuffer"
"3323splitHere46","17600610splitHere46","Request.Get(<doubleQuotes46>http://some.url<doubleQuotes46>).execute().returnContent();<newline46mondego>"
"3324splitHere46","17600653splitHere46","ByteBuffer"
"3325splitHere46","17600653splitHere46","final ByteBuffer buf = ByteBuffer.allocate(12)  // 3 floats<newline46mondego>    .putFloat(f1).putFloat(f2).putFloat(f3);    // put them; .put*() return this<newline46mondego>channel.basicPublish(buf.array());              // send<newline46mondego>"
"3326splitHere46","17600653splitHere46","// delivery is a QueuingConsumer.Delivery<newline46mondego>final ByteBuffer buf = ByteBuffer.wrap(delivery.getBody());<newline46mondego>final float f1 = buf.getFloat();<newline46mondego>final float f2 = buf.getFloat();<newline46mondego>final float f3 = buf.getFloat();<newline46mondego>"
"3327splitHere46","17600697splitHere46","PropertyPlaceHolderConfigurer"
"3328splitHere46","17600697splitHere46","${..}"
"3329splitHere46","17600697splitHere46","@Bean<newline46mondego>public static PropertySourcesPlaceHolderConfigurer propertiesResolver() {<newline46mondego>    return new PropertySourcesPlaceHolderConfigurer();<newline46mondego>}<newline46mondego>"
"3330splitHere46","17600762splitHere46","System.currentTimeMillis()"
"3331splitHere46","17600762splitHere46","System.currentTimeMillis()"
"3332splitHere46","17600904splitHere46","String"
"3333splitHere46","17600904splitHere46","public TestXMLParser() {<newline46mondego>    super(HomePageActivity.class);<newline46mondego>}<newline46mondego>"
"3334splitHere46","17601015splitHere46","1.0.3-mapr-2.1.2.1"
"3335splitHere46","17601015splitHere46","<dependency><newline46mondego>        <groupId>org.apache.hadoop</groupId><newline46mondego>        <artifactId>hadoop-core</artifactId><newline46mondego>        <version>1.0.3</version><newline46mondego>    </dependency><newline46mondego>"
"3336splitHere46","17601015splitHere46","hadoop-core"
"3337splitHere46","17601015splitHere46","<dependency><newline46mondego>        <groupId>org.apache.hadoop</groupId><newline46mondego>        <artifactId>hadoop-core</artifactId><newline46mondego>        <version>1.2.0</version><newline46mondego>    </dependency><newline46mondego>"
"3338splitHere46","17601017splitHere46","<envelopeDefinition xmlns=<doubleQuotes46>http://www.docusign.com/restapi<doubleQuotes46>><newline46mondego>   <accountId>221765</accountId><newline46mondego>   <status>sent</status><newline46mondego>   <emailSubject>API Call for sending signature request from template</emailSubject><newline46mondego>   <emailBlurb>This comes from Java</emailBlurb><newline46mondego>   <templateId>DD92AF6F-3B87-435C-A652-A7451AFE758E</templateId><newline46mondego>   <templateRoles><newline46mondego>      <templateRole><newline46mondego>         <email>email@docusign.com</email><newline46mondego>         <name>John Doe</name><newline46mondego>         <roleName>Signer1</roleName><newline46mondego>         <tabs><newline46mondego>            <textTabs><newline46mondego>               <text><newline46mondego>                  <tabLabel>DataField1</tabLabel><newline46mondego>                  <value>Initial Data Goes Here</value><newline46mondego>               </text><newline46mondego>            </textTabs><newline46mondego>         </tabs><newline46mondego>      </templateRole><newline46mondego>   </templateRoles><newline46mondego></envelopeDefinition><newline46mondego>"
"3339splitHere46","17601047splitHere46","List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);<newline46mondego>    nameValuePairs.add(new BasicNameValuePair(<doubleQuotes46>data<doubleQuotes46>, content));<newline46mondego><newline46mondego>    try {<newline46mondego>        // add the param to postRequest<newline46mondego>        postRequest.setEntity(new UrlEncodedFormEntity(nameValuePairs));<newline46mondego>    } catch (UnsupportedEncodingException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"3340splitHere46","17601047splitHere46","postRequest.setEntity(new StringEntity(content));<newline46mondego>"
"3341splitHere46","17601083splitHere46","Out of memory on a 19660816-byte allocation.<newline46mondego>"
"3342splitHere46","17601168splitHere46","02,-<doubleQuotes46>sangeetha-May 02, 2013 , -in-09:48:06:61 , -out-08:08:19:27<newline46mondego>01,-<doubleQuotes46>lohith-May 01, 2013 , missing in , -out-09:10:41:61<newline46mondego>02,-<doubleQuotes46>sushma-May 02, 2013 , -in-09:48:06:61 , -out-07:52:13:51<newline46mondego>01,-<doubleQuotes46>sushma-Jan 01, 2013 , -in-09:07:06:50 , -out-05:39:01:63<newline46mondego>03,-<doubleQuotes46>lohith-May 03, 2013 , -in-11:39:44:08 , missing out<newline46mondego>"
"3343splitHere46","17601168splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.StringReader;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class RecordParser {<newline46mondego><newline46mondego>    private BufferedReader reader;<newline46mondego><newline46mondego>    private List<Person> people;<newline46mondego><newline46mondego>    private List<String> output;<newline46mondego><newline46mondego>    public RecordParser(BufferedReader reader) {<newline46mondego>        this.reader = reader;<newline46mondego>        this.people = new ArrayList<Person>();<newline46mondego>        this.output = new ArrayList<String>();<newline46mondego>    }<newline46mondego><newline46mondego>    public void execute() throws IOException {<newline46mondego>        String line = null;<newline46mondego>        while ((line = reader.readLine()) != null) {<newline46mondego>            String[] parts = line.split(<doubleQuotes46> , <doubleQuotes46>);<newline46mondego>            addPerson(new Person(parts[0]));<newline46mondego>            if ((parts[1].contains(<doubleQuotes46>-in-<doubleQuotes46>)) && (parts[1].contains(<doubleQuotes46>-out-<doubleQuotes46>))) {<newline46mondego>                String[] inout = parts[1].split(<doubleQuotes46>-out-<doubleQuotes46>);<newline46mondego>                Person person = getPerson(parts[0]);<newline46mondego>                person.setInTime(inout[0]);<newline46mondego>                person.setOutTime(<doubleQuotes46>-out-<doubleQuotes46> + inout[1]);<newline46mondego>            } else if (parts[1].contains(<doubleQuotes46>-in-<doubleQuotes46>)) {<newline46mondego>                Person person = getPerson(parts[0]);<newline46mondego>                person.setInTime(parts[1]);<newline46mondego>            } else {<newline46mondego>                Person person = getPerson(parts[0]);<newline46mondego>                person.setOutTime(parts[1]);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Output the people to the String list<newline46mondego>        for (Person p : people) {<newline46mondego>            output.add(p.getPerson());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void addPerson(Person person) {<newline46mondego>        for (Person p : people) {<newline46mondego>            if (p.getNameDate().equals(person.getNameDate())) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        people.add(person);<newline46mondego>    }<newline46mondego><newline46mondego>    private Person getPerson(String nameDate) {<newline46mondego>        for (Person p : people) {<newline46mondego>            if (p.getNameDate().equals(nameDate)) {<newline46mondego>                return p;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<String> getOutput() {<newline46mondego>        return output;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String input = <doubleQuotes46>02,-\<doubleQuotes46>sangeetha-May 02, 2013 , -in-09:48:06:61\n<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>01,-\<doubleQuotes46>lohith-May 01, 2013 , -out-09:10:41:61\n<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>02,-\<doubleQuotes46>sushma-May 02, 2013 , -in-09:48:06:61\n<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>01,-\<doubleQuotes46>sushma-Jan 01, 2013 , -in-09:07:06:50-out-05:39:01:63\n<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>02,-\<doubleQuotes46>sangeetha-May 02, 2013 , -out-08:08:19:27\n<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>02,-\<doubleQuotes46>sushma-May 02, 2013 , -out-07:52:13:51\n<doubleQuotes46> +<newline46mondego>                <doubleQuotes46>03,-\<doubleQuotes46>lohith-May 03, 2013 , -in-11:39:44:08<doubleQuotes46>;<newline46mondego><newline46mondego>        BufferedReader reader = new BufferedReader(new StringReader(input));<newline46mondego>        RecordParser recordParser = new RecordParser(reader);<newline46mondego><newline46mondego>        try {<newline46mondego>            recordParser.execute();<newline46mondego><newline46mondego>            for (String s : recordParser.getOutput()) {<newline46mondego>                System.out.println(s);<newline46mondego>            }<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } <newline46mondego><newline46mondego>        try {<newline46mondego>            reader.close();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public class Person {<newline46mondego>        private String nameDate;<newline46mondego>        private String inTime;<newline46mondego>        private String outTime;<newline46mondego><newline46mondego>        public Person (String nameDate) {<newline46mondego>            this.nameDate = nameDate;<newline46mondego>            this.inTime = <doubleQuotes46>missing in<doubleQuotes46>;<newline46mondego>            this.outTime = <doubleQuotes46>missing out<doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setInTime(String inTime) {<newline46mondego>            this.inTime = inTime;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setOutTime(String outTime) {<newline46mondego>            this.outTime = outTime;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getNameDate() {<newline46mondego>            return nameDate;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getPerson() {<newline46mondego>            StringBuilder builder = new StringBuilder();<newline46mondego>            builder.append(nameDate);<newline46mondego>            builder.append(<doubleQuotes46> , <doubleQuotes46>);<newline46mondego>            builder.append(inTime);<newline46mondego>            builder.append(<doubleQuotes46> , <doubleQuotes46>);<newline46mondego>            builder.append(outTime);<newline46mondego>            return builder.toString();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3344splitHere46","17601204splitHere46","True    findByActiveTrue()  … where x.active = true<newline46mondego>False   findByActiveFalse() … where x.active = false<newline46mondego>"
"3345splitHere46","17601204splitHere46","@Query<newline46mondego>public Iterable<Entity> findByEnabledTrue();<newline46mondego>"
"3346splitHere46","17601363splitHere46","int[] text = null;<newline46mondego>....<newline46mondego>text[i] = ....<newline46mondego>"
"3347splitHere46","17601363splitHere46","int[] text = new int[encoded.length()];<newline46mondego>"
"3348splitHere46","17601434splitHere46","skipsAllowed == 0"
"3349splitHere46","17601434splitHere46","onClickListener"
"3350splitHere46","17601489splitHere46","Navigation"
"3351splitHere46","17601489splitHere46","Google Maps"
"3352splitHere46","17601502splitHere46","public abstract class AsyncTask {<newline46mondego><newline46mondego>    abstract void onPreExecute();<newline46mondego><newline46mondego>    abstract void doInBackground();<newline46mondego><newline46mondego>    abstract void onPostExecute();<newline46mondego><newline46mondego>    public void execute() {<newline46mondego><newline46mondego>        onPreExecute();<newline46mondego><newline46mondego>        new Thread(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego><newline46mondego>                doInBackground();<newline46mondego><newline46mondego>                //Platform.runLater is a javafx code that executes onPost in Main Thread.<newline46mondego>                Platform.runLater(new Runnable() {<newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        onPostExecute();<newline46mondego>                    }<newline46mondego>                });<newline46mondego>            }<newline46mondego>        }).start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3353splitHere46","17601502splitHere46","public class LoginTask extends AsyncTask {<newline46mondego><newline46mondego>    @Override<newline46mondego>    void onPreExecute() {<newline46mondego><newline46mondego>        //Some code to preexecute in Main Thread<newline46mondego>        System.out.println(<doubleQuotes46>OnPreExecute - Main Thread: <doubleQuotes46> + Platform.isFxApplicationThread());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    void doInBackground() {<newline46mondego><newline46mondego>        //Some code to execute in background thread as internet requests<newline46mondego>        System.out.println(<doubleQuotes46>doInBackground - Main Thread: <doubleQuotes46> + Platform.isFxApplicationThread());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    void onPostExecute() {<newline46mondego><newline46mondego>        //Some code to execute in Main thread after background process has done, like update a view<newline46mondego>        System.out.println(<doubleQuotes46>onPostExecute - Main Thread: <doubleQuotes46> + Platform.isFxApplicationThread());        <newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3354splitHere46","17601502splitHere46","LoginTask taskTest = new LoginTask();<newline46mondego>taskTest.execute();<newline46mondego>"
"3355splitHere46","17601502splitHere46","OnPreExecute - Main Thread: true<newline46mondego>doInBackground - Main Thread: false<newline46mondego>onPostExecute - Main Thread: true<newline46mondego>"
"3356splitHere46","17601515splitHere46","System.out.printIn(<doubleQuotes46>hello youtube<doubleQuotes46>);  // capital 'I'<newline46mondego>"
"3357splitHere46","17601515splitHere46","System.out.println(<doubleQuotes46>hello youtube<doubleQuotes46>);  // lowercase 'l'<newline46mondego>"
"3358splitHere46","17601515splitHere46","public"
"3359splitHere46","17601585splitHere46","isPrime"
"3360splitHere46","17601585splitHere46","true"
"3361splitHere46","17601585splitHere46","false"
"3362splitHere46","17601691splitHere46","Map<String,Route> busToRoutesMap = new HashMap<String,Route>();<newline46mondego>// key = <doubleQuotes46>B101<doubleQuotes46>, value = R95; getName() delivers String <doubleQuotes46>B101<doubleQuotes46><newline46mondego>busToRoutesMap.put(busList.get(0).getName(), routeList.get(1));<newline46mondego>"
"3363splitHere46","17601691splitHere46","Route route = busToRoutesMap.get(busList.get(0).getName());<newline46mondego>"
"3364splitHere46","17601721splitHere46","String all=<doubleQuotes46>12,3456789<doubleQuotes46>;<newline46mondego>        String[] temp=all.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        String a=temp[0]; //12<newline46mondego>        String b=temp[1]; //3456789<newline46mondego>"
"3365splitHere46","17601721splitHere46","b.substring(0, 2)"
"3366splitHere46","17601721splitHere46","String c=b.substring(0, 2);<newline46mondego>"
"3367splitHere46","17601879splitHere46","=="
"3368splitHere46","17601879splitHere46","Integer"
"3369splitHere46","17601879splitHere46","=="
"3370splitHere46","17601879splitHere46",".equals()"
"3371splitHere46","17601879splitHere46",".compareTo()"
"3372splitHere46","17602040splitHere46","String yourFilePath = <doubleQuotes46>./yourLogProperties.properties<doubleQuotes46>;<newline46mondego>LogManager.getLogManager().readConfiguration(new FileInputStream(yourFilePath);<newline46mondego>"
"3373splitHere46","17602040splitHere46","java -jar -Djava.util.logging.config.file=<doubleQuotes46>./yourLogProperties.properties<doubleQuotes46> YourApp.jar<newline46mondego>"
"3374splitHere46","17602040splitHere46","public class Tests {    <newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.out.println(System.getProperty(<doubleQuotes46>java.util.logging.config.file<doubleQuotes46>));<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"3375splitHere46","17602040splitHere46","./yourLogProperties.properties"
"3376splitHere46","17602047splitHere46","javac"
"3377splitHere46","17602121splitHere46","//div[starts-with(@class,'alabama')]/ul/li<newline46mondego>"
"3378splitHere46","17602184splitHere46","in = new InputStreamReader(socket.getInputStream());<newline46mondego>"
"3379splitHere46","17602184splitHere46","in = new BufferedReader(new InputStreamReader(socket.getInputStream()));<newline46mondego>"
"3380splitHere46","17602184splitHere46","BufferedReader"
"3381splitHere46","17602184splitHere46","InputStreamReader"
"3382splitHere46","17602184splitHere46","DataInputStream"
"3383splitHere46","17602195splitHere46","@Configuration"
"3384splitHere46","17602195splitHere46","@Configuration<newline46mondego>@EnableWebSecurity<newline46mondego>public class SecurityConfiguration extends WebSecurityConfigurerAdapter {<newline46mondego>...<newline46mondego>}<newline46mondego>"
"3385splitHere46","17602195splitHere46","@Order"
"3386splitHere46","17602195splitHere46","@Enable*"
"3387splitHere46","17602195splitHere46","@Configuration"
"3388splitHere46","17602430splitHere46","@RequestBody"
"3389splitHere46","17602430splitHere46","JSON"
"3390splitHere46","17602430splitHere46","JSON"
"3391splitHere46","17602441splitHere46","camelCase"
"3392splitHere46","17602441splitHere46","void"
"3393splitHere46","17602441splitHere46","public class Hello {   <newline46mondego><newline46mondego>    String title;<newline46mondego>    int value;<newline46mondego><newline46mondego>    public void append() {<newline46mondego>        title += <doubleQuotes46>World<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setValue(int value) {<newline46mondego>        this.value = value;<newline46mondego>        title = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>        append();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3394splitHere46","17602441splitHere46","this()"
"3395splitHere46","17602441splitHere46","public class Hello {   <newline46mondego><newline46mondego>    String title;<newline46mondego>    int value;<newline46mondego><newline46mondego>    public Hello() {<newline46mondego>        title += <doubleQuotes46>World<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    public Hello(int value) {<newline46mondego>        this();<newline46mondego>        this.value = value;<newline46mondego>        title = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3396splitHere46","17602509splitHere46","Item item = ite.next();<newline46mondego>"
"3397splitHere46","17602509splitHere46","ite.remove();<newline46mondego>"
"3398splitHere46","17602509splitHere46","for (Item item : list) {<newline46mondego>    System.out.println(item.toString());<newline46mondego>}<newline46mondego>"
"3399splitHere46","17602509splitHere46","for (int i = 0; i<list.size(); i++) {<newline46mondego>    Item item = list.get(i);<newline46mondego>    System.out.println(item.toString());<newline46mondego>}<newline46mondego>"
"3400splitHere46","17602509splitHere46","list.remove(item)"
"3401splitHere46","17602509splitHere46","list.remove(i)"
"3402splitHere46","17602570splitHere46","// A.java<newline46mondego><newline46mondego>public class A {<newline46mondego>    public class B {}<newline46mondego>}<newline46mondego>"
"3403splitHere46","17602616splitHere46","Transform"
"3404splitHere46","17602616splitHere46","Converter"
"3405splitHere46","17602742splitHere46","int[] a = {1,2,3,4}"
"3406splitHere46","17602742splitHere46","a = {1,2,3,4};<newline46mondego>a[0] = 3;<newline46mondego>"
"3407splitHere46","17602742splitHere46","class Counter {<newline46mondego>    static int nextId = 0;<newline46mondego>    static int nextId() { return nextId++; }<newline46mondego><newline46mondego>    final int id = nextId();<newline46mondego>    final String name;<newline46mondego><newline46mondego>    public Counter() {<newline46mondego>        this(<doubleQuotes46>Unnamed counter<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    public Counter(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3408splitHere46","17602742splitHere46","public Counter() {<newline46mondego>    this.id = nextId();<newline46mondego>    this(<doubleQuotes46>Unnamed counter<doubleQuotes46>);        <newline46mondego>}<newline46mondego>public Counter(String name) {<newline46mondego>    this.id = nextId();<newline46mondego>    this.name = name;<newline46mondego>}<newline46mondego>"
"3409splitHere46","17602742splitHere46","id"
"3410splitHere46","17602817splitHere46","((idx == 0) or (idx == length))"
"3411splitHere46","17602817splitHere46","((idx <= 0) or (idx >= length))"
"3412splitHere46","17602817splitHere46","private int dx = 6;<newline46mondego>private int dy = 6;<newline46mondego>"
"3413splitHere46","17602817splitHere46","private int speed = 6<newline46mondego>private int dx = speed;<newline46mondego>private int dy = speed;<newline46mondego>"
"3414splitHere46","17602827splitHere46","@XmlRootElement(name=<doubleQuotes46>ResultCollection<doubleQuotes46>)<newline46mondego>public class ResultCollectionResponse<newline46mondego>{<newline46mondego>    @XmlElementWrapper(name=<doubleQuotes46>FailedItems<doubleQuotes46>)<newline46mondego>    @XmlElement(name = <doubleQuotes46>KeyValueOflongstring<doubleQuotes46>, namespace=<doubleQuotes46>http://schemas.microsoft.com/2003/10/Serialization/Arrays<doubleQuotes46>)<newline46mondego>    public List<KeyValueOflongstring> FailedItems = new ArrayList<KeyValueOflongstring>();<newline46mondego><newline46mondego>    @XmlElementWrapper(name=<doubleQuotes46>SucceededItems<doubleQuotes46>)<newline46mondego>    @XmlElement(name = <doubleQuotes46>long<doubleQuotes46>)<newline46mondego>    public List<Long> SucceededItems = new ArrayList<Long>();<newline46mondego>}<newline46mondego>"
"3415splitHere46","17602827splitHere46","public class KeyValueOflongstring<newline46mondego>{<newline46mondego>    @XmlElement(namespace=<doubleQuotes46>http://schemas.microsoft.com/2003/10/Serialization/Arrays<doubleQuotes46>)<newline46mondego>    public Long Key;<newline46mondego><newline46mondego>    @XmlElement(namespace=<doubleQuotes46>http://schemas.microsoft.com/2003/10/Serialization/Arrays<doubleQuotes46>)<newline46mondego>    public String Value;<newline46mondego>}<newline46mondego>"
"3416splitHere46","17602841splitHere46","Object obj = new Object(), Integer = new Integer(300);<newline46mondego>"
"3417splitHere46","17602841splitHere46","obj"
"3418splitHere46","17602841splitHere46","Object"
"3419splitHere46","17602841splitHere46","new Object()"
"3420splitHere46","17602841splitHere46","Integer"
"3421splitHere46","17602841splitHere46","Object"
"3422splitHere46","17602841splitHere46","new Integer(300)"
"3423splitHere46","17602841splitHere46","for"
"3424splitHere46","17602841splitHere46",","
"3425splitHere46","17602841splitHere46",";"
"3426splitHere46","17602841splitHere46","Type t1 = ..., t2 = ..., t3 = ..., ...;<newline46mondego>"
"3427splitHere46","17602841splitHere46","Type t1 = ...;<newline46mondego>Type t2 = ...;<newline46mondego>Type t3 = ...;<newline46mondego>...<newline46mondego>"
"3428splitHere46","17602886splitHere46","(?!(?:^|_))_?[AEIOU]<newline46mondego>"
"3429splitHere46","17602886splitHere46","(?<!^)(?<!_)[AEIOU]<newline46mondego>"
"3430splitHere46","17602968splitHere46","CSVReader reader = new CSVReader(new FileReader(<doubleQuotes46>yourfile.csv<doubleQuotes46>));<newline46mondego>String [] nextLine;<newline46mondego>while ((nextLine = reader.readNext()) != null) {<newline46mondego>    // nextLine[] is an array of values from the line<newline46mondego>    System.out.println(nextLine[0] + nextLine[1] + <doubleQuotes46>etc...<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3431splitHere46","17602977splitHere46","accept"
"3432splitHere46","17602977splitHere46","Thread"
"3433splitHere46","17602977splitHere46","Incomming"
"3434splitHere46","17602977splitHere46","protected static void start(JFrame window) {<newline46mondego>        ServerSocket server = null;<newline46mondego>        try {<newline46mondego>            server = new ServerSocket();<newline46mondego>            SocketAddress addr = new InetSocketAddress(hostname, port);<newline46mondego>            server.bind(addr);<newline46mondego><newline46mondego>            Socket socket = server.accept();<newline46mondego><newline46mondego>            window.setVisible(false);<newline46mondego><newline46mondego>            // Pass the socket to the thread to allow it to perform the work<newline46mondego>            Thread thread = new Thread(new Incomming(socket));<newline46mondego>            thread.start();<newline46mondego><newline46mondego>        } catch (IOException ex) {<newline46mondego>            //...//<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>public class Incomming implements Runnable {<newline46mondego><newline46mondego>    private final Socket socket;<newline46mondego><newline46mondego>    public Incomming(Socket socket) {<newline46mondego>        //?? What's this for, this is VERY wrong<newline46mondego>        // UI Interaction should ONLY occur within the context of the EDT<newline46mondego>        MyFrame frame = new MyFrame();<newline46mondego>        frame.setVisible(true);<newline46mondego>        frame.pack();<newline46mondego><newline46mondego>        this.socket = socket;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        if (socket != null) {<newline46mondego>            DataInputStream is = null;<newline46mondego>            try {<newline46mondego>                is = new DataInputStream(socket.getInputStream());<newline46mondego>                while (!Thread.currentThread().isInterrupted()) {<newline46mondego>                    int n = is.readInt();<newline46mondego>                    if (n == -1) {<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                    byte[] b = new byte[n];<newline46mondego>                    is.readFully(b);<newline46mondego>                    //...//<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46>Stream closed.<doubleQuotes46>);<newline46mondego>            } catch (IOException e) {<newline46mondego>            } finally {<newline46mondego>                // Finally clean up...<newline46mondego>                try {<newline46mondego>                    is.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                }<newline46mondego>                try {<newline46mondego>                    socket.close();<newline46mondego>                } catch (Exception e) {<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3435splitHere46","17602977splitHere46","SwingWorker"
"3436splitHere46","17602977splitHere46","Thread"
"3437splitHere46","17603063splitHere46","<?xml..."
"3438splitHere46","17603161splitHere46","Pattern.compile(<doubleQuotes46>[\\w']+<doubleQuotes46>)<newline46mondego>"
"3439splitHere46","17603161splitHere46","Pattern.compile(<doubleQuotes46>[\\p{L}']+<doubleQuotes46>)<newline46mondego>"
"3440splitHere46","17603161splitHere46","\\w"
"3441splitHere46","17603161splitHere46","Pattern.UNICODE_CHARACTER_CLASS<newline46mondego>"
"3442splitHere46","17603161splitHere46","Pattern.compile(<doubleQuotes46>[\\w']+<doubleQuotes46>, Pattern.UNICODE_CHARACTER_CLASS)<newline46mondego>"
"3443splitHere46","17603217splitHere46","MOXyJsonProvider"
"3444splitHere46","17603217splitHere46","Application"
"3445splitHere46","17603217splitHere46","package org.example;<newline46mondego><newline46mondego>import java.util.*;<newline46mondego>import javax.ws.rs.core.Application;<newline46mondego>import org.eclipse.persistence.jaxb.rs.MOXyJsonProvider;<newline46mondego><newline46mondego>public class CustomerApplication  extends Application {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Set<Class<?>> getClasses() {<newline46mondego>        HashSet<Class<?>> set = new HashSet<Class<?>>(2);<newline46mondego>        set.add(MOXyJsonProvider.class);<newline46mondego>        set.add(CustomerService.class);<newline46mondego>        return set;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3446splitHere46","17603217splitHere46","package org.example;<newline46mondego><newline46mondego>import java.util.*;<newline46mondego>import javax.ws.rs.core.Application;<newline46mondego>import org.eclipse.persistence.jaxb.rs.MOXyJsonProvider;<newline46mondego><newline46mondego>public class CustomerApplication  extends Application {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Set<Class<?>> getClasses() {<newline46mondego>        HashSet<Class<?>> set = new HashSet<Class<?>>(1);<newline46mondego>        set.add(ExampleService.class);<newline46mondego>        return set;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Set<Object> getSingletons() {<newline46mondego>        MOXyJsonProvider moxyJsonProvider = new MOXyJsonProvider();<newline46mondego><newline46mondego>        moxyJsonProvider.setAttributePrefix(<doubleQuotes46>@<doubleQuotes46>);<newline46mondego>        moxyJsonProvider.setFormattedOutput(true);<newline46mondego>        moxyJsonProvider.setIncludeRoot(true);<newline46mondego>        moxyJsonProvider.setMarshalEmptyCollections(false);<newline46mondego>        moxyJsonProvider.setValueWrapper(<doubleQuotes46>$<doubleQuotes46>);<newline46mondego><newline46mondego>        Map<String, String> namespacePrefixMapper = new HashMap<String, String>(1);<newline46mondego>        namespacePrefixMapper.put(<doubleQuotes46>http://www.example.org/customer<doubleQuotes46>, <doubleQuotes46>cust<doubleQuotes46>);<newline46mondego>        moxyJsonProvider.setNamespacePrefixMapper(namespacePrefixMapper);<newline46mondego>        moxyJsonProvider.setNamespaceSeparator(':');<newline46mondego><newline46mondego>        HashSet<Object> set = new HashSet<Object>(1);<newline46mondego>        set.add(moxyJsonProvider);<newline46mondego>        return set;<newline46mondego>    }<newline46mondego><newline46mondego>} <newline46mondego>"
"3447splitHere46","17603311splitHere46","class Action implements ActionListener{ <newline46mondego> private JButton button;<newline46mondego> public Action(JButton button){ <newline46mondego>  this.button = button; <newline46mondego> } <newline46mondego> public void actionPerformed(ActionEvent e) { <newline46mondego>   button.setText(letter); <newline46mondego>   button.setEnabled(false); <newline46mondego>   counter++; <newline46mondego>   boolean gameOver = checkForWinners(); <newline46mondego>   if(!gameOver) <newline46mondego>    changeTurn(); <newline46mondego>   else{ <newline46mondego>    newgame.setText(<doubleQuotes46>Play again?<doubleQuotes46>); <newline46mondego>    newgame.addActionListener(resetButton); <newline46mondego>   } <newline46mondego> } <newline46mondego>}<newline46mondego>"
"3448splitHere46","17603311splitHere46","new Action(square[i])"
"3449splitHere46","17603311splitHere46","resetButton"
"3450splitHere46","17603311splitHere46","Reset"
"3451splitHere46","17603311splitHere46","Action"
"3452splitHere46","17603311splitHere46","newgame"
"3453splitHere46","17603402splitHere46","/**<newline46mondego> * Converts a given Image into a BufferedImage<newline46mondego> * <newline46mondego> * @param img The Image to be converted<newline46mondego> * @return The converted BufferedImage<newline46mondego> */<newline46mondego>public BufferedImage toBufferedImage(Image img){<newline46mondego>    if (img instanceof BufferedImage) {<newline46mondego>        return (BufferedImage) img;<newline46mondego>    }<newline46mondego>    // Create a buffered image with transparency<newline46mondego>    BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);<newline46mondego>    // Draw the image on to the buffered image<newline46mondego>    Graphics2D bGr = bimage.createGraphics();<newline46mondego>    bGr.drawImage(img, 0, 0, null);<newline46mondego>    bGr.dispose();<newline46mondego>    // Return the buffered image<newline46mondego>    return bimage;<newline46mondego>}<newline46mondego>"
"3454splitHere46","17603402splitHere46","BufferedImage bi = toBufferedImage(orgImage);<newline46mondego>"
"3455splitHere46","17603540splitHere46","+"
"3456splitHere46","17603540splitHere46","="
"3457splitHere46","17603540splitHere46","Strings"
"3458splitHere46","17603540splitHere46","System.out.println(<doubleQuotes46>ID: <doubleQuotes46> + annaID.getStudentID());<newline46mondego>"
"3459splitHere46","17603744splitHere46","byte b = (byte) 130;<newline46mondego>int i = b & 0xFF;<newline46mondego>System.out.println(i); //Prints 130 again<newline46mondego>"
"3460splitHere46","17603744splitHere46","byte[] values = new byte[] {(byte) 130, (byte) 150, (byte) 200, (byte) 200};<newline46mondego>Color color = Color.argb(values[0] & 0xFF, values[1] & 0xFF, values[2] & 0xFF, values[3] & 0xFF);<newline46mondego>System.out.println(color + <doubleQuotes46> alpha <doubleQuotes46> + color.getAlpha());<newline46mondego>"
"3461splitHere46","17603883splitHere46","R.java"
"3462splitHere46","17603883splitHere46","package"
"3463splitHere46","17603893splitHere46","public XVar getVar(String varName) {<newline46mondego>    for (int i = 0; i < varCount; i++) {<newline46mondego>        if (xvars[i].name == varName) {<newline46mondego>            return xvars[i];<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"3464splitHere46","17603893splitHere46","null"
"3465splitHere46","17603893splitHere46","=="
"3466splitHere46","17603893splitHere46",".equals"
"3467splitHere46","17603893splitHere46","=="
"3468splitHere46","17603893splitHere46","null"
"3469splitHere46","17603893splitHere46","NullPointerException"
"3470splitHere46","17603893splitHere46","System.out.println(xobject.getVar(xv.getStringValue().substring(1)).getStringValue());<newline46mondego>"
"3471splitHere46","17603893splitHere46","getStringValue()"
"3472splitHere46","17603893splitHere46","null"
"3473splitHere46","17603893splitHere46","if"
"3474splitHere46","17603893splitHere46","if(xvars[i] != null && xvars[i].name.equals(varName)) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3475splitHere46","17604000splitHere46","FileOutputStream out = new FileOutputStream(<doubleQuotes46>07072013\\<doubleQuotes46> + <doubleQuotes46>jayraj<doubleQuotes46> + <doubleQuotes46>.dat<doubleQuotes46>, true);<newline46mondego>"
"3476splitHere46","17604000splitHere46","out.write(actualBytes)<newline46mondego>"
"3477splitHere46","17604000splitHere46","finally"
"3478splitHere46","17604000splitHere46","try {<newline46mondego>   for ( all files ... ) {<newline46mondego>       write ..<newline46mondego>   }<newline46mondego>} finally {<newline46mondego>   out.close();<newline46mondego>}<newline46mondego>"
"3479splitHere46","17604094splitHere46","bytes"
"3480splitHere46","17604094splitHere46","byte[]"
"3481splitHere46","17604094splitHere46","byte"
"3482splitHere46","17604094splitHere46","Color.argb()"
"3483splitHere46","17604094splitHere46","int"
"3484splitHere46","17604094splitHere46","Color.argb()"
"3485splitHere46","17604094splitHere46","int c = Color.argb(((int)bytes[4]) % 256, ((int)bytes[3]) % 256, ((int)bytes[2]) % 256,  ((int)bytes[1]) % 256);<newline46mondego>"
"3486splitHere46","17604173splitHere46","public class MainTestActivity extends Activity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main_test);<newline46mondego><newline46mondego>        new Timer().schedule(new TimerTask() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                Intent in = new Intent(MainTestActivity.this, TestActivityB.class);<newline46mondego>                startActivityForResult(in, 101);<newline46mondego>            }<newline46mondego>        }, 2000);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        // Inflate the menu; this adds items to the action bar if it is present.<newline46mondego>        getMenuInflater().inflate(R.menu.main_test, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onActivityResult(int requestCode, int resultCode, Intent data) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        super.onActivityResult(requestCode, resultCode, data);<newline46mondego>        Toast.makeText(this, <doubleQuotes46>Got Intent<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3487splitHere46","17604173splitHere46","public class TestActivityB extends Activity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main_test);<newline46mondego><newline46mondego>        new Timer().schedule(new TimerTask() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                Intent in = new Intent(TestActivityB.this, TestActivityC.class);<newline46mondego>                startActivity(in);<newline46mondego>                finish();<newline46mondego>            }<newline46mondego>        }, 2000);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        // Inflate the menu; this adds items to the action bar if it is present.<newline46mondego>        getMenuInflater().inflate(R.menu.main_test, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3488splitHere46","17604173splitHere46","public class TestActivityC extends Activity {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main_test);<newline46mondego><newline46mondego>        new Timer().schedule(new TimerTask() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                // TODO Auto-generated method stub<newline46mondego>                setResult(101);<newline46mondego>                finish();<newline46mondego>            }<newline46mondego>        }, 2000);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        // Inflate the menu; this adds items to the action bar if it is present.<newline46mondego>        getMenuInflater().inflate(R.menu.main_test, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3489splitHere46","17604184splitHere46","out"
"3490splitHere46","17604184splitHere46","System"
"3491splitHere46","17604184splitHere46","pow"
"3492splitHere46","17604184splitHere46","Math"
"3493splitHere46","17604184splitHere46","Math"
"3494splitHere46","17604184splitHere46","System"
"3495splitHere46","17604184splitHere46","println"
"3496splitHere46","17604184splitHere46","PrintWriter"
"3497splitHere46","17604184splitHere46","out"
"3498splitHere46","17604184splitHere46","import static java.lang.System.*;<newline46mondego>//...<newline46mondego>println(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>"
"3499splitHere46","17604184splitHere46","System.println(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>"
"3500splitHere46","17604218splitHere46","POST"
"3501splitHere46","17604218splitHere46","generateLicenseFile"
"3502splitHere46","17604218splitHere46","<h:commandButton>"
"3503splitHere46","17604218splitHere46","<h:form>"
"3504splitHere46","17604218splitHere46","@RequestScoped"
"3505splitHere46","17604218splitHere46","generate"
"3506splitHere46","17604218splitHere46","false"
"3507splitHere46","17604218splitHere46","false"
"3508splitHere46","17604218splitHere46","<h:form><newline46mondego>    #{agreement.generate}<newline46mondego>    <br /><newline46mondego>    <h:commandButton value=<doubleQuotes46>Generate License File<doubleQuotes46> type=<doubleQuotes46>button<doubleQuotes46><newline46mondego>        action=<doubleQuotes46>#{agreement.generateLicenseFile}<doubleQuotes46> /><newline46mondego></h:form><newline46mondego>"
"3509splitHere46","17604218splitHere46","@ManagedBean(name=<doubleQuotes46>agreement<doubleQuotes46>)<newline46mondego>@ViewScoped //removed RequestScoped, this WILL make the difference<newline46mondego>public class AgreementBean {<newline46mondego>    private boolean generate = false; <newline46mondego>    public void generateLicenseFile(){<newline46mondego>        generate = !generate;<newline46mondego>    }<newline46mondego>    //getter and setter for generate field<newline46mondego>}<newline46mondego>"
"3510splitHere46","17604396splitHere46","import java.awt.EventQueue;<newline46mondego>import java.awt.HeadlessException;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import javax.swing.JOptionPane;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego><newline46mondego>public class WhereAmI {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new WhereAmI();<newline46mondego>    }<newline46mondego><newline46mondego>    public WhereAmI() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                try {<newline46mondego>                    String path = new File(<doubleQuotes46>.<doubleQuotes46>).getCanonicalPath();<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>I was started in <doubleQuotes46> + path);<newline46mondego>                } catch (IOException exp) {<newline46mondego>                    exp.printStackTrace();<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3511splitHere46","17604396splitHere46","/Volumes/Disk02/DevWork/personal/java/projects/wip/StackOverflow/WhereAmI/dist"
"3512splitHere46","17604396splitHere46","java -jar WhereAmI.jar"
"3513splitHere46","17604396splitHere46","/Volumes/Disk02/DevWork/personal/java/projects/wip/StackOverflow/WhereAmI"
"3514splitHere46","17604396splitHere46","java -jar dist/WhereAmI.jar"
"3515splitHere46","17604489splitHere46","/* loop until the user entered a file that does not exist yet */<newline46mondego>while(fc.getSelectedFile().exists()) { <newline46mondego>  result = JOptionPane.showConfirmDialog(fc, <doubleQuotes46>The file name exists. Please input new File name<doubleQuotes46>, <doubleQuotes46>New File Name<doubleQuotes46>, JOptionPane.OK_CANCEL_OPTION);<newline46mondego>  fc.showSaveDialog(fc);<newline46mondego>  /* return if user cancels */<newline46mondego>  if(result == JOptionPane.CANCEL_OPTION) { <newline46mondego>    fc.cancelSelection();<newline46mondego>    return;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>/* if the user finally selected a non existing file do whatever needs to be done. */<newline46mondego>if (result == JOptionPane.OK_OPTION) {<newline46mondego>  try { <newline46mondego>    String fileExt = <doubleQuotes46>.mads<doubleQuotes46>;<newline46mondego>    //create a buffered writer to write to a file<newline46mondego>    BufferedWriter out = new BufferedWriter(new FileWriter(fc.getSelectedFile().getPath() + fileExt));<newline46mondego>    out.write(textArea.getText());//write contents of the TextArea to the file<newline46mondego>    out.close();//close the file stream<newline46mondego>  } catch(Exception e){  //catch any exceptions and write to the console<newline46mondego>    System.out.println(e.getMessage());<newline46mondego>  }<newline46mondego>  return;<newline46mondego>}<newline46mondego>"
"3516splitHere46","17604489splitHere46","int returnVal = fc.showSaveDialog(fc);"
"3517splitHere46","17604489splitHere46","result"
"3518splitHere46","17604489splitHere46","`"
"3519splitHere46","17604501splitHere46","2^31 - 1"
"3520splitHere46","17604501splitHere46","Integer.MAX_VALUE"
"3521splitHere46","17604614splitHere46","import static org.hamcrest.Matchers.equalTo;<newline46mondego>import static org.hamcrest.MatcherAssert.assertThat;    <newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>assertThat(list1, equalTo(list2));<newline46mondego>"
"3522splitHere46","17604622splitHere46","HashMap"
"3523splitHere46","17604622splitHere46","size"
"3524splitHere46","17604622splitHere46","HashMap"
"3525splitHere46","17604716splitHere46","reverseArray"
"3526splitHere46","17604716splitHere46","ar = temp;<newline46mondego>"
"3527splitHere46","17604716splitHere46","ar"
"3528splitHere46","17604716splitHere46","temp"
"3529splitHere46","17604716splitHere46","ar"
"3530splitHere46","17604716splitHere46","main"
"3531splitHere46","17604716splitHere46","shiftRight"
"3532splitHere46","17604983splitHere46","<V>"
"3533splitHere46","17604983splitHere46","V"
"3534splitHere46","17604983splitHere46","V"
"3535splitHere46","17604987splitHere46","return"
"3536splitHere46","17604987splitHere46","public static int getDay() {<newline46mondego>    Scanner scan = new Scanner(System.in);<newline46mondego>    System.out.println(<doubleQuotes46>Insert Day<doubleQuotes46>);<newline46mondego>    while (true){  <newline46mondego>        line = scan.nextLine();  <newline46mondego>        if (line.matches(<doubleQuotes46>.*\\d.*<doubleQuotes46>)){<newline46mondego>            int day = Integer.parseInt(line);  <newline46mondego>            if (0 < day && day < 32){  <newline46mondego>                return day;  <newline46mondego>            } else {  <newline46mondego>                System.out.println(<doubleQuotes46>please use a valid number<doubleQuotes46>);       <newline46mondego>            }  <newline46mondego>        } else {  <newline46mondego>            System.out.println(<doubleQuotes46>please use a number<doubleQuotes46>);  <newline46mondego>        }  <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    int day = getDay();<newline46mondego>    System.out.println(day);  <newline46mondego>}<newline46mondego>"
"3537splitHere46","17604987splitHere46","break"
"3538splitHere46","17604987splitHere46","Scanner scan = new Scanner(System.in);<newline46mondego>System.out.println(<doubleQuotes46>Insert Day<doubleQuotes46>);<newline46mondego>int day = -1;<newline46mondego>while (true){  <newline46mondego>    line = scan.nextLine();  <newline46mondego>    if (line.matches(<doubleQuotes46>.*\\d.*<doubleQuotes46>)){<newline46mondego>        day = Integer.parseInt(line);  <newline46mondego>        if (0 < day && day < 32){<newline46mondego>            break;<newline46mondego>        } else {  <newline46mondego>            System.out.println(<doubleQuotes46>please use a valid number<doubleQuotes46>);       <newline46mondego>        }  <newline46mondego>    } else {  <newline46mondego>        System.out.println(<doubleQuotes46>please use a number<doubleQuotes46>);  <newline46mondego>    }  <newline46mondego>}<newline46mondego>"
"3539splitHere46","17604987splitHere46","while"
"3540splitHere46","17604987splitHere46","int day = -1;<newline46mondego>Scanner scan = new Scanner(System.in);<newline46mondego>System.out.println(<doubleQuotes46>Insert Day<doubleQuotes46>);<newline46mondego>while (day < 1 || day > 31){  <newline46mondego>    line = scan.nextLine();  <newline46mondego>    if (line.matches(<doubleQuotes46>.*\\d.*<doubleQuotes46>)){<newline46mondego>        day = Integer.parseInt(line);  <newline46mondego>        if (day < 1 || day > 31){<newline46mondego>            System.out.println(<doubleQuotes46>please use a valid number<doubleQuotes46>);       <newline46mondego>        }  <newline46mondego>    } else {  <newline46mondego>        System.out.println(<doubleQuotes46>please use a number<doubleQuotes46>);  <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3541splitHere46","17604987splitHere46","NumberFormatException"
"3542splitHere46","17604987splitHere46","parseInt"
"3543splitHere46","17604987splitHere46","int day = -1;<newline46mondego>Scanner scan = new Scanner(System.in);<newline46mondego>System.out.println(<doubleQuotes46>Insert Day<doubleQuotes46>);<newline46mondego>while (day < 1 || day > 31){<newline46mondego>    line = scan.nextLine(); <newline46mondego>    try { <newline46mondego>        day = Integer.parseInt(line);<newline46mondego>        if (day < 1 || day > 31){<newline46mondego>            System.out.println(<doubleQuotes46>please use a valid number<doubleQuotes46>);       <newline46mondego>        }  <newline46mondego>    } catch (NumberFormatException e) {<newline46mondego>        System.out.println(<doubleQuotes46>please use a number<doubleQuotes46>);  <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3544splitHere46","17605032splitHere46","if (e.getSource() == button[1])"
"3545splitHere46","17605032splitHere46","javax.swing.Action"
"3546splitHere46","17605032splitHere46","<doubleQuotes46>THE CONSTANT<doubleQuotes46>.equals(something)"
"3547splitHere46","17605032splitHere46","createGui"
"3548splitHere46","17605032splitHere46","invalidate(); revalidate(); repaint();"
"3549splitHere46","17605044splitHere46","src"
"3550splitHere46","17605044splitHere46","bin"
"3551splitHere46","17605044splitHere46","compile"
"3552splitHere46","17605044splitHere46","test"
"3553splitHere46","17605044splitHere46","testbin"
"3554splitHere46","17605044splitHere46","test-compile"
"3555splitHere46","17605044splitHere46","<javac>"
"3556splitHere46","17605044splitHere46","test-compile"
"3557splitHere46","17605044splitHere46","bin"
"3558splitHere46","17605044splitHere46","bin"
"3559splitHere46","17605076splitHere46","if (!imageArray.get(position).isEmpty()) {<newline46mondego>    manager.DisplayImage(imageArray.get(position), loader, mHolder.img1);<newline46mondego>}<newline46mondego>else {<newline46mondego>    manager.DisplayImage(null, loader, mHolder.img1);<newline46mondego>    mHolder.img1.setVisibility(ImageView.GONE);<newline46mondego>}<newline46mondego>"
"3560splitHere46","17605076splitHere46","if (!imageArray.get(position).isEmpty()) {<newline46mondego>    mHolder.img1.setVisibility(ImageView.VISIBLE);<newline46mondego>    manager.DisplayImage(imageArray.get(position), loader, mHolder.img1);<newline46mondego>}<newline46mondego>else {<newline46mondego>    manager.DisplayImage(null, loader, mHolder.img1);<newline46mondego>    mHolder.img1.setVisibility(ImageView.GONE);<newline46mondego>}<newline46mondego>"
"3561splitHere46","17605076splitHere46","if(isEnabled) {<newline46mondego>   textView.setText(<doubleQuotes46>ENABLED<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3562splitHere46","17605076splitHere46","if(isEnabled) <newline46mondego>   textView.setText(<doubleQuotes46>ENABLED<doubleQuotes46>);<newline46mondego>else<newline46mondego>   textView.setText(<doubleQuotes46>DISABLED<doubleQuotes46>);<newline46mondego>"
"3563splitHere46","17605239splitHere46","getRGB"
"3564splitHere46","17605239splitHere46","int"
"3565splitHere46","17605239splitHere46","int"
"3566splitHere46","17605239splitHere46","int"
"3567splitHere46","17605299splitHere46","Map"
"3568splitHere46","17605299splitHere46","Set"
"3569splitHere46","17605299splitHere46","AttendanceRecord"
"3570splitHere46","17605299splitHere46","LinkedHashSet"
"3571splitHere46","17605299splitHere46","LinkedHashMap"
"3572splitHere46","17605299splitHere46","LinkedHashSet"
"3573splitHere46","17605299splitHere46","LinkedHashSet"
"3574splitHere46","17605299splitHere46","LinkedHashMap"
"3575splitHere46","17605299splitHere46","keys"
"3576splitHere46","17605299splitHere46","values"
"3577splitHere46","17605299splitHere46","LinkedHashSet"
"3578splitHere46","17605299splitHere46","LinkedHashSet"
"3579splitHere46","17605299splitHere46","LinkedHashSet"
"3580splitHere46","17605299splitHere46","Jhon"
"3581splitHere46","17605299splitHere46","ConferenceA"
"3582splitHere46","17605299splitHere46","Jhon"
"3583splitHere46","17605299splitHere46","Set"
"3584splitHere46","17605299splitHere46","ConferenceA"
"3585splitHere46","17605299splitHere46","Set"
"3586splitHere46","17605299splitHere46","LinkedHashMap"
"3587splitHere46","17605299splitHere46","Linked"
"3588splitHere46","17605299splitHere46","ConferenceA :Jhon Joe Mary <newline46mondego>ConferenceB :Jhon Ted <newline46mondego>ConferenceC :Jessica <newline46mondego>"
"3589splitHere46","17605299splitHere46","key"
"3590splitHere46","17605299splitHere46","value"
"3591splitHere46","17605299splitHere46","LinkedHashSet"
"3592splitHere46","17605299splitHere46","public class AttendanceRecord {<newline46mondego><newline46mondego>    private Map<String, ArrayList> attendanceRecordMap = new LinkedHashMap<String, ArrayList>();<newline46mondego>    private Set<String> participants = new LinkedHashSet<String>(); <newline46mondego>    private Set<String> conferences = new LinkedHashSet<String>(); <newline46mondego><newline46mondego>    public AttendanceRecord() {<newline46mondego>    }<newline46mondego><newline46mondego>    public Map<String, ArrayList> getAttendanceRecordMap() {<newline46mondego>        return attendanceRecordMap;<newline46mondego>    }<newline46mondego><newline46mondego>    public Object[] getParticipantsArray() {<newline46mondego>        return participants.toArray();<newline46mondego>    }<newline46mondego><newline46mondego>    public Object[] getConferencesArray() {<newline46mondego><newline46mondego>        return conferences.toArray();<newline46mondego>    }<newline46mondego><newline46mondego>    public void addToRecord(String title, String employee) {<newline46mondego><newline46mondego>        conferences.add(title);<newline46mondego>        participants.add(employee);<newline46mondego><newline46mondego>        if (attendanceRecordMap.containsKey(title)) {<newline46mondego>            ArrayList<String> tempList = attendanceRecordMap.get(title);<newline46mondego>            tempList.add(employee);<newline46mondego>        } else {<newline46mondego>            ArrayList<String> attendees = new ArrayList<String>();<newline46mondego>            attendees.add(employee);<newline46mondego>            attendanceRecordMap.put(title, attendees);<newline46mondego>        }<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"3593splitHere46","17605299splitHere46","public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        AttendanceRecord attendanceRecord = new AttendanceRecord();<newline46mondego><newline46mondego>        //There are hardcoded. You will have to substitute with your code <newline46mondego>        //when you read the file<newline46mondego>        attendanceRecord.addToRecord(<doubleQuotes46>ConferenceA<doubleQuotes46>, <doubleQuotes46>Jhon<doubleQuotes46>);<newline46mondego>        attendanceRecord.addToRecord(<doubleQuotes46>ConferenceA<doubleQuotes46>, <doubleQuotes46>Joe<doubleQuotes46>);<newline46mondego>        attendanceRecord.addToRecord(<doubleQuotes46>ConferenceA<doubleQuotes46>, <doubleQuotes46>Mary<doubleQuotes46>);<newline46mondego>        attendanceRecord.addToRecord(<doubleQuotes46>ConferenceB<doubleQuotes46>, <doubleQuotes46>Jhon<doubleQuotes46>);<newline46mondego>        attendanceRecord.addToRecord(<doubleQuotes46>ConferenceB<doubleQuotes46>, <doubleQuotes46>Ted<doubleQuotes46>);<newline46mondego>        attendanceRecord.addToRecord(<doubleQuotes46>ConferenceC<doubleQuotes46>, <doubleQuotes46>Jessica<doubleQuotes46>);<newline46mondego><newline46mondego>        int[][] jaccardArray = new int[attendanceRecord.getConferencesArray().length][attendanceRecord.getParticipantsArray().length];<newline46mondego>        setUp2dArray(jaccardArray, attendanceRecord);<newline46mondego>        print2dArray(jaccardArray);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void setUp2dArray(int[][] jaccardArray, AttendanceRecord record) {<newline46mondego>        Map<String, ArrayList> recordMap = record.getAttendanceRecordMap();<newline46mondego><newline46mondego>        for (String key : recordMap.keySet()) {<newline46mondego>            ArrayList<String> attendees = recordMap.get(key);<newline46mondego><newline46mondego>            for (String attendee : attendees) {<newline46mondego>                int row = findConferencePosition(key, record.getConferencesArray());<newline46mondego>                int column = findParticipantPosition(attendee, record.getParticipantsArray());<newline46mondego>                System.out.println(<doubleQuotes46>Row inside <doubleQuotes46> + row + <doubleQuotes46>Col inside <doubleQuotes46> + column);<newline46mondego>                jaccardArray[row][column] = 1;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void print2dArray(int[][] jaccardArray) {<newline46mondego>        for (int i = 0; i < jaccardArray.length; i++) {<newline46mondego>            for (int j = 0; j < jaccardArray[i].length; j++) {<newline46mondego>                System.out.print(jaccardArray[i][j]);<newline46mondego>            }<newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static int findParticipantPosition(String employee, Object[] participantArray) {<newline46mondego>        int position = -1;<newline46mondego><newline46mondego>        for (int i = 0; i < participantArray.length; i++) {<newline46mondego>            if (employee.equals(participantArray[i].toString())) {<newline46mondego>                position = i;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return position;<newline46mondego>    }<newline46mondego><newline46mondego>    public static int findConferencePosition(String employee, Object[] conferenceArray) {<newline46mondego>        int position = -1;<newline46mondego><newline46mondego>        for (int i = 0; i < conferenceArray.length; i++) {<newline46mondego>            if (employee.equals(conferenceArray[i])) {<newline46mondego>                position = i;<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return position;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3594splitHere46","17605409splitHere46","departJList.addListSelectionListener(new ListSelectionListener() {<newline46mondego><newline46mondego>     public void valueChanged(ListSelectionEvent e) {<newline46mondego><newline46mondego>        if (!e.getValueIsAdjusting()) {<newline46mondego><newline46mondego>           // ******* added **********<newline46mondego>           ((JList)e.getSource()).removeListSelectionListener(this);<newline46mondego><newline46mondego>           TimeTable selected = new TimeTable();<newline46mondego>           selected.setTimeTable();<newline46mondego>           newListContent.addAll(selected.getTimeTable());<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(newListContent);<newline46mondego>        departJList.setListData(newListContent);<newline46mondego><newline46mondego>     }<newline46mondego>  });<newline46mondego>"
"3595splitHere46","17605660splitHere46","RKObjectManager* manager = [RKObjectManager managerWithBaseURL:[NSURL URLWithString:@<doubleQuotes46>http://www.yourURL.com]];<newline46mondego>"
"3596splitHere46","17605660splitHere46","- (void)loadArticles{<newline46mondego>        RKObjectMapping* articleMapping = [RKObjectMapping mappingForClass:[Article class]];<newline46mondego>        [articleMapping addAttributeMappingsFromDictionary:@{ <newline46mondego>            @<doubleQuotes46>title<doubleQuotes46>: @<doubleQuotes46>title<doubleQuotes46>,<newline46mondego>            @<doubleQuotes46>body<doubleQuotes46>: @<doubleQuotes46>body<doubleQuotes46>,<newline46mondego>            @<doubleQuotes46>author<doubleQuotes46>: @<doubleQuotes46>author<doubleQuotes46>,<newline46mondego>            @<doubleQuotes46>publication_date<doubleQuotes46>: @<doubleQuotes46>publicationDate<doubleQuotes46><newline46mondego>        }];<newline46mondego>        RKResponseDescriptor *responseDescriptor = [RKResponseDescriptor responseDescriptorWithMapping:articleMapping pathPattern:nil keyPath:@<doubleQuotes46>articles<doubleQuotes46> statusCodes:RKStatusCodeIndexSetForClass(RKStatusCodeClassSuccessful)];<newline46mondego>    NSString * stringURL = @<doubleQuotes46>/articles/<doubleQuotes46>;<newline46mondego>    [RKObjectManager.sharedManager getObjectsAtPath:stringURL parameters:nil success:^(RKObjectRequestOperation *operation, RKMappingResult *mappingResult){<newline46mondego>            RKLogInfo(@<doubleQuotes46>Load collection of Articles: %@<doubleQuotes46>, mappingResult.array);<newline46mondego>        } failure:^(RKObjectRequestOperation *operation, NSError *error) {<newline46mondego>            RKLogError(@<doubleQuotes46>Operation failed with error: %@<doubleQuotes46>, error);<newline46mondego>        }];<newline46mondego><newline46mondego>        [objectRequestOperation start];<newline46mondego>    }<newline46mondego>"
"3597splitHere46","17605660splitHere46","{ <doubleQuotes46>articles<doubleQuotes46>: [<newline46mondego>{ <doubleQuotes46>title<doubleQuotes46>: <doubleQuotes46>RestKit Object Mapping Intro<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>body<doubleQuotes46>: <doubleQuotes46>This article details how to use RestKit object mapping...<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>author<doubleQuotes46>: <doubleQuotes46>Blake Watters<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>publication_date<doubleQuotes46>: <doubleQuotes46>7/4/2011<doubleQuotes46><newline46mondego>},<newline46mondego>{ <doubleQuotes46>title<doubleQuotes46>: <doubleQuotes46>RestKit 1.0 Released<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>body<doubleQuotes46>: <doubleQuotes46>RestKit 1.0 has been released to much fanfare across the galaxy...<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>author<doubleQuotes46>: <doubleQuotes46>Blake Watters<doubleQuotes46>,<newline46mondego>  <doubleQuotes46>publication_date<doubleQuotes46>: <doubleQuotes46>9/4/2011<doubleQuotes46><newline46mondego>}]<newline46mondego>"
"3598splitHere46","17605733splitHere46","Map<String,Object>"
"3599splitHere46","17605733splitHere46","Map"
"3600splitHere46","17605789splitHere46","<activity android:name=<doubleQuotes46>.TestActivity<doubleQuotes46> ><newline46mondego>        <meta-data android:name=<doubleQuotes46>android.support.PARENT_ACTIVITY<doubleQuotes46><newline46mondego>              android:value=<doubleQuotes46>.TestParentActivity<doubleQuotes46>><newline46mondego>        </meta-data><newline46mondego>  </activity><newline46mondego>"
"3601splitHere46","17605823splitHere46","import"
"3602splitHere46","17605918splitHere46","SELECT SFCode, SUM(FP+LP+CSR+CRR-FPR-LPR-CAS-CRS) AS Total FROM<newline46mondego>(SELECT SFCode,<newline46mondego>SUM(IF(DocType = <doubleQuotes46>FP<doubleQuotes46>, QTY, 0)) AS FP,<newline46mondego>>>please fill out all the columns<<    <newline46mondego>FROM Transactions_Table<newline46mondego>WHERE SFCode = <doubleQuotes46>12<doubleQuotes46><newline46mondego>GROUP BY DocType);<newline46mondego>"
"3603splitHere46","17605918splitHere46","SELECT a.SFCode, a.WarrantyCode, (a.QTY-b.QTY) AS Stock FROM<newline46mondego>(SELECT SFCode, WarrantyCode, QTY<newline46mondego>FROM Transactions_Table<newline46mondego>WHERE SFCode = <doubleQuotes46>12<doubleQuotes46><newline46mondego>AND DocType IN ('FP','LP','CSR','CRR')<newline46mondego>GROUP BY WarrantyCode) AS a <newline46mondego>LEFT JOIN<newline46mondego>(SELECT SFCode, WarrantyCode, QTY<newline46mondego>FROM Transactions_Table<newline46mondego>WHERE SFCode = <doubleQuotes46>12<doubleQuotes46><newline46mondego>AND DocType IN ('FPR','LPR','CAS','CRS')<newline46mondego>GROUP BY WarrantyCode) AS b<newline46mondego>ON a.SFCode = b.SFCode AND a.WarrantyCode = b.WarrantyCode;<newline46mondego>"
"3604splitHere46","17605939splitHere46","Graphics2D"
"3605splitHere46","17605939splitHere46","Graphics"
"3606splitHere46","17605939splitHere46","java.awt.Graphics"
"3607splitHere46","17605939splitHere46","Graphics2D"
"3608splitHere46","17605939splitHere46","Graphics"
"3609splitHere46","17605939splitHere46","JComponent"
"3610splitHere46","17605939splitHere46","java.awt.Component"
"3611splitHere46","17605939splitHere46","Graphics"
"3612splitHere46","17605939splitHere46","Graphics2D"
"3613splitHere46","17605939splitHere46","paint(Graphics)"
"3614splitHere46","17605939splitHere46","Graphics2D"
"3615splitHere46","17606025splitHere46",".."
"3616splitHere46","17606025splitHere46","clldsystem.esa.ESAAnalyzer"
"3617splitHere46","17606025splitHere46","main()"
"3618splitHere46","17606025splitHere46","java"
"3619splitHere46","17606025splitHere46","java"
"3620splitHere46","17606025splitHere46","clldsystem.esa.ESAAnalyzer"
"3621splitHere46","17606025splitHere46","-cp"
"3622splitHere46","17606025splitHere46","java -cp <doubleQuotes46>../lib/*:esalib.jar<doubleQuotes46> ../clldsystem.esa.ESAAnalyzer<newline46mondego>"
"3623splitHere46","17606025splitHere46","java -cp <doubleQuotes46>../lib/*:../esalib.jar<doubleQuotes46> clldsystem.esa.ESAAnalyzer<newline46mondego>"
"3624splitHere46","17606066splitHere46","if (a = 5)"
"3625splitHere46","17606066splitHere46","a"
"3626splitHere46","17606066splitHere46","bool"
"3627splitHere46","17606066splitHere46","String myString = null;<newline46mondego>if (myString.equals(<doubleQuotes46>foobar<doubleQuotes46>)) { /* ... */ }<newline46mondego>// This causes a NullPointerException in Java<newline46mondego>"
"3628splitHere46","17606066splitHere46","String myString = null;<newline46mondego>if (<doubleQuotes46>foobar<doubleQuotes46>.equals(myString)) { /* ... */ }<newline46mondego>// This is false, as expected<newline46mondego>"
"3629splitHere46","17606074splitHere46","struct"
"3630splitHere46","17606223splitHere46","List<Pair>"
"3631splitHere46","17606223splitHere46","public class Pair {<newline46mondego>    private final int a;<newline46mondego>    private final int b;<newline46mondego><newline46mondego>    public Pair(int a, int b) {<newline46mondego>        this.a = a;<newline46mondego>        this.b = b;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getA() {<newline46mondego>        return a;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getB() {<newline46mondego>        return b;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3632splitHere46","17606223splitHere46","Pair"
"3633splitHere46","17606223splitHere46","Comparable<Pair>"
"3634splitHere46","17606223splitHere46","Comparator<Pair>"
"3635splitHere46","17606223splitHere46","Collections.sort"
"3636splitHere46","17606275splitHere46","-or"
"3637splitHere46","17606275splitHere46","-er"
"3638splitHere46","17606275splitHere46","CanDrive"
"3639splitHere46","17606275splitHere46","Driver"
"3640splitHere46","17606508splitHere46","null"
"3641splitHere46","17606508splitHere46","stream"
"3642splitHere46","17606568splitHere46","ClassNotFoundException"
"3643splitHere46","17606568splitHere46","Caused by: java.lang.ClassNotFoundException: com.example.tabwithicon.SampleTabsWithIcons<newline46mondego>"
"3644splitHere46","17606568splitHere46","package declaration"
"3645splitHere46","17606568splitHere46","com.example.tabwithicon"
"3646splitHere46","17606569splitHere46","null"
"3647splitHere46","17606569splitHere46","public static  Map<String, Map<String, String>> INDEXED_TABLES = <newline46mondego>  new HashMap<String, Map<String, String>>(){{<newline46mondego>    put(<doubleQuotes46>employee<doubleQuotes46>,  new HashMap<String, String>(){{<newline46mondego>      put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>      put(<doubleQuotes46>age<doubleQuotes46>, <doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>      put(<doubleQuotes46>sex<doubleQuotes46>, <doubleQuotes46>test<doubleQuotes46>);<newline46mondego>   }}<newline46mondego>}}<newline46mondego>"
"3648splitHere46","17606601splitHere46","private void formKeyPressed(java.awt.event.KeyEvent evt) {                                <newline46mondego>public void keyTyped(KeyEvent e){}// every thing after this goes hay wire<newline46mondego>}  <newline46mondego>"
"3649splitHere46","17606601splitHere46","addKeyListener(new java.awt.event.KeyAdapter() {<newline46mondego>        public void keyPressed(java.awt.event.KeyEvent evt) {<newline46mondego>            formKeyPressed(evt);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"3650splitHere46","17606601splitHere46","private void formKeyPressed(java.awt.event.KeyEvent evt) {                                <newline46mondego>    //write  your implementation of keypressed here..<newline46mondego> } <newline46mondego>"
"3651splitHere46","17606648splitHere46","option[selected]<newline46mondego>"
"3652splitHere46","17606648splitHere46","option"
"3653splitHere46","17606648splitHere46","selected"
"3654splitHere46","17606648splitHere46","option"
"3655splitHere46","17606648splitHere46","selected"
"3656splitHere46","17606648splitHere46","option[selected=<doubleQuotes46>selected<doubleQuotes46>]"
"3657splitHere46","17606648splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    Document doc = Jsoup.connect(<doubleQuotes46>http://www.singaporepools.com.sg/Lottery?page=wc_four_d<doubleQuotes46>).get();<newline46mondego>    Elements content = doc.select(<doubleQuotes46>option[selected]<doubleQuotes46>);<newline46mondego>    System.out.println(content);<newline46mondego>}<newline46mondego>"
"3658splitHere46","17606648splitHere46","<option selected=<doubleQuotes46>selected<doubleQuotes46>>Select a draw date</option><newline46mondego>"
"3659splitHere46","17606782splitHere46","AudioManager am = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);<newline46mondego>"
"3660splitHere46","17606782splitHere46","getSystemService()"
"3661splitHere46","17606782splitHere46","Object"
"3662splitHere46","17606852splitHere46","String.matches()"
"3663splitHere46","17606852splitHere46","if (line.matches(<doubleQuotes46>\\s*\\d\\..*<doubleQuotes46>))<newline46mondego>"
"3664splitHere46","17606852splitHere46","if (line.matches(<doubleQuotes46>\\s*[A-Z]\\..*<doubleQuotes46>))<newline46mondego>"
"3665splitHere46","17606865splitHere46","equals"
"3666splitHere46","17606865splitHere46","hashCode"
"3667splitHere46","17606865splitHere46","HashSet"
"3668splitHere46","17606865splitHere46","List"
"3669splitHere46","17606865splitHere46","Set<List<String>> strSet = new HashSet<List<String>>();<newline46mondego>"
"3670splitHere46","17606865splitHere46","List.equals"
"3671splitHere46","17606865splitHere46","true"
"3672splitHere46","17607247splitHere46","UrlBasedViewResolver"
"3673splitHere46","17607372splitHere46","InputStream stream = geoLocRetriever.openStream();<newline46mondego>ByteArrayOutputStream buffer = new ByteArrayOutputStream();<newline46mondego>if (stream != null) try {<newline46mondego>    final BufferedInputStream input = new BufferedInputStream(stream);<newline46mondego>    final byte[] reader = new byte[16384];<newline46mondego>    int r = 0;<newline46mondego>    while ((r = input.read(reader, 0, 16384)) != -1)<newline46mondego>        buffer.write(reader, 0, r);<newline46mondego>    buffer.flush();<newline46mondego>} catch(IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} finally {<newline46mondego>    if(stream != null) try {<newline46mondego>        stream.close();<newline46mondego>    } catch(IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3674splitHere46","17607372splitHere46","locHolder = new String(buffer.toByteArray());<newline46mondego>"
"3675splitHere46","17607372splitHere46","String.split"
"3676splitHere46","17607372splitHere46","String[] lines = locHolder.split(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"3677splitHere46","17607605splitHere46","@Id"
"3678splitHere46","17607605splitHere46","id"
"3679splitHere46","17607605splitHere46","username"
"3680splitHere46","17607605splitHere46","password"
"3681splitHere46","17607605splitHere46","email"
"3682splitHere46","17607697splitHere46","int[][] pt = new int[numX][numY];<newline46mondego>"
"3683splitHere46","17607697splitHere46","Point[][] pt = new Point[numX][numY];<newline46mondego>for (x=0; x<numX; x=x+1) {<newline46mondego>   for (y=0; y<numY; y=y+1) {<newline46mondego>       pt[x][y] = new Point(xval, yval);;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3684splitHere46","17607725splitHere46","mvn --version"
"3685splitHere46","17607791splitHere46","getValueAt"
"3686splitHere46","17607791splitHere46","Object"
"3687splitHere46","17607791splitHere46","boolean"
"3688splitHere46","17607791splitHere46","String"
"3689splitHere46","17607791splitHere46","data"
"3690splitHere46","17607791splitHere46","String"
"3691splitHere46","17607791splitHere46","boolean"
"3692splitHere46","17607791splitHere46","boolean"
"3693splitHere46","17607791splitHere46","getValueAt"
"3694splitHere46","17607791splitHere46","setValueAt"
"3695splitHere46","17607791splitHere46","setValueAt"
"3696splitHere46","17607791splitHere46","getRowCount"
"3697splitHere46","17607791splitHere46","getColumnCount"
"3698splitHere46","17607791splitHere46","getColumnName"
"3699splitHere46","17607791splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.sql.SQLException;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego>import javax.swing.table.AbstractTableModel;<newline46mondego><newline46mondego>public class TestTableModel02 {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new TestTableModel02();<newline46mondego>    }<newline46mondego><newline46mondego>    public TestTableModel02() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Testing<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new JScrollPane(new JTable(new DataTableModel())));<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class DataTableModel extends AbstractTableModel {<newline46mondego><newline46mondego>        private Object[][] data;<newline46mondego>        private String[] header = {<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>KB Name<doubleQuotes46>, <doubleQuotes46>fpGUID<doubleQuotes46>};<newline46mondego><newline46mondego>        public DataTableModel() {//throws SQLException {<newline46mondego>            // ========= CONNECTS TO DB AND PULLS RESULTS ==========<newline46mondego><newline46mondego>            // GETS RESULTS SET CALLED <doubleQuotes46>rs<doubleQuotes46><newline46mondego><newline46mondego>            // populate data array<newline46mondego>//            int counter = 0;<newline46mondego>//            while (rs.next()) {<newline46mondego>//                //data[counter][0] = <doubleQuotes46>sfsdfsdfs <doubleQuotes46>;<newline46mondego>//                data[counter][1] = (String) rs.getObject(2);<newline46mondego>//                data[counter][2] = (String) rs.getObject(4);<newline46mondego>//<newline46mondego>//                counter++;<newline46mondego>//            }<newline46mondego>            // =====================================================<newline46mondego><newline46mondego>            data = new Object[4][3];<newline46mondego>            data[0] = new Object[]{false, <doubleQuotes46>Help<doubleQuotes46>, <doubleQuotes46>1234<doubleQuotes46>};<newline46mondego>            data[1] = new Object[]{false, <doubleQuotes46>On fire<doubleQuotes46>, <doubleQuotes46>5648<doubleQuotes46>};<newline46mondego>            data[2] = new Object[]{false, <doubleQuotes46>Drowning<doubleQuotes46>, <doubleQuotes46>9012<doubleQuotes46>};<newline46mondego>            data[3] = new Object[]{false, <doubleQuotes46>Micky Mouse<doubleQuotes46>, <doubleQuotes46>3456<doubleQuotes46>};<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getValueAt(int rowIndex, int columnIndex) {<newline46mondego>            return data[rowIndex][columnIndex];<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean isCellEditable(int row, int col) {<newline46mondego>            return col == 0;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Class getColumnClass(int column) {<newline46mondego>            if (column == 0) {<newline46mondego>                return Boolean.class;<newline46mondego>            } else {<newline46mondego>                return String.class;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {<newline46mondego>            if (columnIndex == 0) {<newline46mondego>                if (aValue instanceof Boolean) {<newline46mondego>                    data[rowIndex][columnIndex] = (Boolean)aValue;<newline46mondego>                    fireTableCellUpdated(rowIndex, columnIndex);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getRowCount() {<newline46mondego>            return data.length;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getColumnCount() {<newline46mondego>            return header.length;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getColumnName(int column) {<newline46mondego>            return header[column];<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3700splitHere46","17607791splitHere46","SwingWorker"
"3701splitHere46","17607870splitHere46","HashMap<String, List<Incident>>"
"3702splitHere46","17607870splitHere46","map3 = new HashMap<String, List<Incident>>();<newline46mondego>map3.putAll(map1);<newline46mondego>map3.putAll(map2);<newline46mondego>"
"3703splitHere46","17607870splitHere46","map3 = new HashMap<String, List<Incident>>();<newline46mondego>map3.putAll(map1);<newline46mondego>for(String key : map2.keySet()) {<newline46mondego>    List<Incident> list2 = map2.get(key);<newline46mondego>    List<Incident> list3 = map3.get(key);<newline46mondego>    if(list3 != null) {<newline46mondego>        list3.addAll(list2);<newline46mondego>    } else {<newline46mondego>        map3.put(key,list2);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3704splitHere46","17607953splitHere46","SwingWorker"
"3705splitHere46","17607953splitHere46","doInBackground"
"3706splitHere46","17607953splitHere46","publish"
"3707splitHere46","17607953splitHere46","process"
"3708splitHere46","17608054splitHere46","public static boolean textValidator(String text){<newline46mondego>    Pattern pattern = Pattern.compile(<doubleQuotes46>\\S+<doubleQuotes46>);<newline46mondego>    Matcher matcher = pattern.matcher(text);<newline46mondego>    if (matcher.find()){<newline46mondego>      return true; <newline46mondego>    } <newline46mondego>    return false; <newline46mondego>    }<newline46mondego>"
"3709splitHere46","17608063splitHere46","byte"
"3710splitHere46","17608063splitHere46","a"
"3711splitHere46","17608063splitHere46","int"
"3712splitHere46","17608063splitHere46","1"
"3713splitHere46","17608063splitHere46","int"
"3714splitHere46","17608063splitHere46","int"
"3715splitHere46","17608063splitHere46","int"
"3716splitHere46","17608063splitHere46","byte"
"3717splitHere46","17608063splitHere46","byte a = 2;<newline46mondego>a = a + 1;   // Error: Cannot assign an int value to byte<newline46mondego>a = (byte)(a + 1);  // OK<newline46mondego>"
"3718splitHere46","17608063splitHere46","a += 1<newline46mondego>"
"3719splitHere46","17608063splitHere46","a = (byte)(a + 1);<newline46mondego>"
"3720splitHere46","17608074splitHere46","int[][]"
"3721splitHere46","17608074splitHere46","(new int[10][10]).getClass().getComponentType().getComponentType(); // int<newline46mondego>"
"3722splitHere46","17608074splitHere46","Object array = new int[10][][][];<newline46mondego>Class<?> type = array.getClass();<newline46mondego>while (type.isArray())<newline46mondego>{<newline46mondego>    type = type.getComponentType();<newline46mondego>}<newline46mondego>assert type == Integer.TYPE;<newline46mondego>"
"3723splitHere46","17608074splitHere46","ArrayList<Integer>"
"3724splitHere46","17608074splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class CollectionTypeGuesser<newline46mondego>{<newline46mondego>    static Set<Class<?>> supers(Class<?> c)<newline46mondego>    {<newline46mondego>        if (c == null) return new HashSet<Class<?>>();<newline46mondego><newline46mondego>        Set<Class<?>> s = supers(c.getSuperclass());<newline46mondego>        s.add(c);<newline46mondego>        return s;<newline46mondego>    }<newline46mondego><newline46mondego>    static Class<?> lowestCommonSuper(Class<?> a, Class<?> b)<newline46mondego>    {<newline46mondego>        Set<Class<?>> aSupers = supers(a);<newline46mondego>        while (!aSupers.contains(b))<newline46mondego>        {<newline46mondego>            b = b.getSuperclass();<newline46mondego>        }<newline46mondego>        return b;<newline46mondego>    }<newline46mondego><newline46mondego>    static Class<?> guessElementType(Collection<?> collection)<newline46mondego>    {<newline46mondego>        Class<?> guess = null;<newline46mondego>        for (Object o : collection)<newline46mondego>        {<newline46mondego>            if (o != null)<newline46mondego>            {<newline46mondego>                if (guess == null)<newline46mondego>                {<newline46mondego>                    guess = o.getClass();<newline46mondego>                }<newline46mondego>                else if (guess != o.getClass())<newline46mondego>                {<newline46mondego>                    guess = lowestCommonSuper(guess, o.getClass());<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return guess;<newline46mondego>    }<newline46mondego><newline46mondego>    static class C1 { }<newline46mondego>    static class C2 extends C1 { }<newline46mondego>    static class C3A extends C2 { }<newline46mondego>    static class C3B extends C2 { }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        ArrayList<Integer> listOfInt = new ArrayList<Integer>();<newline46mondego>        System.out.println(guessElementType(listOfInt)); // null<newline46mondego>        listOfInt.add(42);<newline46mondego>        System.out.println(guessElementType(listOfInt)); // Integer<newline46mondego><newline46mondego>        ArrayList<C1> listOfC1 = new ArrayList<C1>();<newline46mondego>        listOfC1.add(new C3A());<newline46mondego>        System.out.println(guessElementType(listOfC1)); // C3A<newline46mondego>        listOfC1.add(new C3B());<newline46mondego>        System.out.println(guessElementType(listOfC1)); // C2<newline46mondego>        listOfC1.add(new C1());<newline46mondego>        System.out.println(guessElementType(listOfC1)); // C1<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3725splitHere46","17608166splitHere46","sample[i]= 2*(i%(sampleRate/freqOfTone))/(sampleRate/freqOfTone)-1;<newline46mondego>"
"3726splitHere46","17608350splitHere46","ByteArrayOutputStream output = new ByteArrayOutputStream();<newline46mondego>// save the image to the output stream<newline46mondego>ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());<newline46mondego>BufferedImage image = ImageIO.read(input);<newline46mondego>"
"3727splitHere46","17608440splitHere46","((Employee)emp).employeeName== this.employeeName<newline46mondego>"
"3728splitHere46","17608440splitHere46","String"
"3729splitHere46","17608440splitHere46","equals"
"3730splitHere46","17608440splitHere46","((Employee)emp).employeeName.equals(this.employeeName)<newline46mondego>"
"3731splitHere46","17608440splitHere46","equals"
"3732splitHere46","17608440splitHere46","hashCode"
"3733splitHere46","17608440splitHere46","Object#equals"
"3734splitHere46","17608440splitHere46","TreeSet"
"3735splitHere46","17608440splitHere46","compareTo"
"3736splitHere46","17608440splitHere46","equals"
"3737splitHere46","17608440splitHere46","hashCode"
"3738splitHere46","17608440splitHere46","TreeSet"
"3739splitHere46","17608440splitHere46","SortedSet"
"3740splitHere46","17608440splitHere46","SortedSet"
"3741splitHere46","17608440splitHere46","Comparable<T>"
"3742splitHere46","17608440splitHere46","Comparator"
"3743splitHere46","17608440splitHere46","public int compareTo(Employee emp) {<newline46mondego>    if (this.employeeName.equals(emp.employeeName)) {<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>    //removed the comparison by subtraction since it will behave wrongly on int overflow<newline46mondego>    return new Integer(this.employeeId).compareTo(emp.employeeId);<newline46mondego>}<newline46mondego>"
"3744splitHere46","17608440splitHere46","StringUtils"
"3745splitHere46","17608440splitHere46","null"
"3746splitHere46","17608559splitHere46","Object res = new ScriptEngineManager().getEngineByName(<doubleQuotes46>js<doubleQuotes46>).eval(str);<newline46mondego>"
"3747splitHere46","17608580splitHere46","Class.getResourceAsStream()"
"3748splitHere46","17608580splitHere46","ClassLoader.getResourceAsStream()"
"3749splitHere46","17608713splitHere46","// Use the key, Label.disabledForeground<newline46mondego>UIManager.put(<doubleQuotes46>Label.disabledForeground<doubleQuotes46>,Color.RED);<newline46mondego><newline46mondego>JLabel l=new JLabel(<doubleQuotes46>Label Disabled<doubleQuotes46>);<newline46mondego>l.setEnabled(false);<newline46mondego>// You get a red foreground<newline46mondego>"
"3750splitHere46","17608713splitHere46","NimbusLookAndFeel"
"3751splitHere46","17608713splitHere46","UIManager.put(<doubleQuotes46>Label[Disabled].textForeground<doubleQuotes46>,Color.RED);<newline46mondego>"
"3752splitHere46","17608809splitHere46","<dependency><newline46mondego>        <groupId>org.glassfish.jersey.media</groupId><newline46mondego>        <artifactId>jersey-media-multipart</artifactId><newline46mondego>        <scope>provided</scope><newline46mondego>        </dependency><newline46mondego>"
"3753splitHere46","17608809splitHere46","resources.add(MultiPartFeature.class);<newline46mondego>"
"3754splitHere46","17608809splitHere46","addRestResourceClasses(resources);<newline46mondego>"
"3755splitHere46","17608849splitHere46","SimpleDateFormat formatter2 = new SimpleDateFormat(<doubleQuotes46>dd-MMM-yyyy hh:mm:ss.s<doubleQuotes46>);<newline46mondego>Date d = new Date();<newline46mondego>String CALL_DATE = formatter2.format(d);<newline46mondego>"
"3756splitHere46","17608903splitHere46","out"
"3757splitHere46","17608903splitHere46","<table><newline46mondego>    <tr><newline46mondego>        <% while (enumeration.hasMoreElements()) { %><newline46mondego>           <td><%= enumeration.nextElement() %></td>  <newline46mondego>         <%}%><newline46mondego>    </tr><newline46mondego></table><newline46mondego>"
"3758splitHere46","17608977splitHere46","add"
"3759splitHere46","17608994splitHere46","private Object  _specialObjectFromHttp;<newline46mondego><newline46mondego>public void methodToUse() {<newline46mondego>    Thread thread = new Thread(new Runnable() {<newline46mondego>        getParamsFromHttp();<newline46mondego>        _specialObjectFromHttp.wait();<newline46mondego>    )};<newline46mondego>}<newline46mondego><newline46mondego>// Callback method (Thread wait for this.)<newline46mondego>private void getParamsFromHttpCallBack(Object result) {<newline46mondego>    _specialObjectFromHttp = result;<newline46mondego>    _specialObjectFromHttp.notifyAll();<newline46mondego>}<newline46mondego>"
"3760splitHere46","17609068splitHere46","getObjectGroupCount()"
"3761splitHere46","17609068splitHere46","getObjectCount(int groupid)"
"3762splitHere46","17609068splitHere46","getObjectGroupCount()"
"3763splitHere46","17609068splitHere46","getObjectCount(int groupid)"
"3764splitHere46","17609068splitHere46","TiledMap aMap = new TiledMap(<doubleQuotes46>whatever.tmx<doubleQuotes46>);<newline46mondego>int objectGroupCount = aMap.getObjectGroupCount();<newline46mondego>for( int gi; gi < objectGroupCount; gi++ ) // gi = object group index<newline46mondego>{<newline46mondego>    int objectCount = aMap.getObjectCount(gi);<newline46mondego>    for( int oi; oi < objectCount; oi++ ) // oi = object index<newline46mondego>    {<newline46mondego>        System.out.println( aMap.getObjectName(gi, oi) );<newline46mondego>        System.out.println( aMap.getObjectProperty(gi, oi, <doubleQuotes46>somepropertyname<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> ) );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3765splitHere46","17609072splitHere46","finally {<newline46mondego>                    Obj1 = null;<newline46mondego>                    Obj2 = null;<newline46mondego>                    if (entityTransaction.isActive())<newline46mondego>                        entityTransaction.rollback();<newline46mondego>                    em.clear();<newline46mondego>                    em.close();<newline46mondego><newline46mondego>                }<newline46mondego>"
"3766splitHere46","17609138splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!DOCTYPE mapper PUBLIC <doubleQuotes46>-//mybatis.org//DTD Mapper 3.0//EN<doubleQuotes46><newline46mondego><doubleQuotes46>http://mybatis.org/dtd/mybatis-3-mapper.dtd<doubleQuotes46>><newline46mondego><mapper namespace=<doubleQuotes46>com.xxxx.sample.test.dao.TestDAO<doubleQuotes46>><newline46mondego><insert id=<doubleQuotes46>insertEmployeeList<doubleQuotes46> parameterType=<doubleQuotes46>java.util.List<doubleQuotes46>><newline46mondego>INSERT ALL  <newline46mondego><foreach collection=<doubleQuotes46>list<doubleQuotes46> item=<doubleQuotes46>element<doubleQuotes46> index=<doubleQuotes46>index<doubleQuotes46> ><newline46mondego>INTO EMPLOYEE (id,name) values (#{element.id},#{element.name})<newline46mondego></foreach><newline46mondego>SELECT * FROM dual<newline46mondego></insert><newline46mondego></mapper><newline46mondego>"
"3767splitHere46","17609257splitHere46","NotSerializableException"
"3768splitHere46","17609257splitHere46","java.io.Serializable"
"3769splitHere46","17609257splitHere46","public class MimeMessage extends Message implements MimePart<newline46mondego>"
"3770splitHere46","17609382splitHere46","/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java<newline46mondego><newline46mondego>/usr/lib/jvm/java-6-openjdk-amd64/bin/javac<newline46mondego>"
"3771splitHere46","17609382splitHere46","sudo update-alternatives --install <doubleQuotes46>/usr/bin/java<doubleQuotes46> <doubleQuotes46>java<doubleQuotes46> <doubleQuotes46>/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java<doubleQuotes46> 1<newline46mondego>sudo update-alternatives --install <doubleQuotes46>/usr/bin/javac<doubleQuotes46> <doubleQuotes46>javac<doubleQuotes46> <doubleQuotes46>/usr/lib/jvm/java-6-openjdk-amd64/bin/javac<doubleQuotes46> 1<newline46mondego><newline46mondego>sudo update-alternatives --set java /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java<newline46mondego>sudo update-alternatives --set javac /usr/lib/jvm/java-6-openjdk-amd64/bin/javac<newline46mondego>"
"3772splitHere46","17609382splitHere46","sudo update-alternatives --config java<newline46mondego>sudo update-alternatives --config javac<newline46mondego>"
"3773splitHere46","17609382splitHere46","sudo update-alternatives --list java<newline46mondego>sudo update-alternatives --list javac<newline46mondego>"
"3774splitHere46","17609488splitHere46","Set"
"3775splitHere46","17609488splitHere46","Comparable"
"3776splitHere46","17609488splitHere46","Comparator"
"3777splitHere46","17609488splitHere46","Set"
"3778splitHere46","17609488splitHere46","equals"
"3779splitHere46","17609488splitHere46","TreeSet"
"3780splitHere46","17609488splitHere46","compareTo"
"3781splitHere46","17609488splitHere46","compare"
"3782splitHere46","17609488splitHere46","Set"
"3783splitHere46","17609488splitHere46","add()"
"3784splitHere46","17609488splitHere46","equals()"
"3785splitHere46","17609595splitHere46","ListView"
"3786splitHere46","17609595splitHere46","AppInfo"
"3787splitHere46","17609595splitHere46","ArrayList<String>"
"3788splitHere46","17609595splitHere46","ArrayList<AppInfo>"
"3789splitHere46","17609595splitHere46","ArrayAdapter"
"3790splitHere46","17609595splitHere46","getView"
"3791splitHere46","17609595splitHere46","ArrayAdapter"
"3792splitHere46","17609595splitHere46","@Luksprog"
"3793splitHere46","17609595splitHere46","AppInfo.toString()"
"3794splitHere46","17609595splitHere46","pname"
"3795splitHere46","17609658splitHere46","String val = <doubleQuotes46>Montaño<doubleQuotes46>;<newline46mondego><newline46mondego>Map<String, String> map = new HashMap<String, String>();<newline46mondego>map.put(val, <doubleQuotes46>test<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(map.get(val));<newline46mondego>"
"3796splitHere46","17609658splitHere46","test<newline46mondego>"
"3797splitHere46","17609667splitHere46","List<FormFile>"
"3798splitHere46","17609667splitHere46","AssessmentForm"
"3799splitHere46","17609667splitHere46","AssessmentForm"
"3800splitHere46","17609667splitHere46","setAttachment(FormFile)"
"3801splitHere46","17609667splitHere46","List<FormFile>"
"3802splitHere46","17609667splitHere46","FormFiles"
"3803splitHere46","17609711splitHere46","javaw.exe"
"3804splitHere46","17609711splitHere46","HKLM\Software\JavaSoft\Java Runtime Environement\<CurrentVersion>\JavaHome"
"3805splitHere46","17609711splitHere46","javaw.exe"
"3806splitHere46","17609711splitHere46","javaw.exe"
"3807splitHere46","17609711splitHere46","static protected String findJavaw() {<newline46mondego>    Path pathToJavaw = null;<newline46mondego>    Path temp;<newline46mondego><newline46mondego>    /* Check in Registry: HKLM\Software\JavaSoft\Java Runtime Environement\<CurrentVersion>\JavaHome */<newline46mondego>    String keyNode = <doubleQuotes46>HKLM\\Software\\JavaSoft\\Java Runtime Environment<doubleQuotes46>;<newline46mondego>    List<String> output = new ArrayList<>();<newline46mondego>    executeCommand(new String[] {<doubleQuotes46>REG<doubleQuotes46>, <doubleQuotes46>QUERY<doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + keyNode + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <newline46mondego>                                 <doubleQuotes46>/v<doubleQuotes46>, <doubleQuotes46>CurrentVersion<doubleQuotes46>}, <newline46mondego>                   output);<newline46mondego>    Pattern pattern = Pattern.compile(<doubleQuotes46>\\s*CurrentVersion\\s+\\S+\\s+(.*)$<doubleQuotes46>);<newline46mondego>    for (String line : output) {<newline46mondego>        Matcher matcher = pattern.matcher(line);<newline46mondego>        if (matcher.find()) {<newline46mondego>            keyNode += <doubleQuotes46>\\<doubleQuotes46> + matcher.group(1);<newline46mondego>            List<String> output2 = new ArrayList<>();<newline46mondego>            executeCommand(<newline46mondego>                    new String[] {<doubleQuotes46>REG<doubleQuotes46>, <doubleQuotes46>QUERY<doubleQuotes46>, <doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + keyNode + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <newline46mondego>                                  <doubleQuotes46>/v<doubleQuotes46>, <doubleQuotes46>JavaHome<doubleQuotes46>}, <newline46mondego>                    output2);<newline46mondego>            Pattern pattern2 <newline46mondego>                    = Pattern.compile(<doubleQuotes46>\\s*JavaHome\\s+\\S+\\s+(.*)$<doubleQuotes46>);<newline46mondego>            for (String line2 : output2) {<newline46mondego>                Matcher matcher2 = pattern2.matcher(line2);<newline46mondego>                if (matcher2.find()) {<newline46mondego>                    pathToJavaw = Paths.get(matcher2.group(1), <doubleQuotes46>bin<doubleQuotes46>, <newline46mondego>                                            <doubleQuotes46>javaw.exe<doubleQuotes46>);<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    try {<newline46mondego>        if (Files.exists(pathToJavaw)) {<newline46mondego>            return pathToJavaw.toString();<newline46mondego>        }<newline46mondego>    } catch (Exception ignored) {}<newline46mondego><newline46mondego>    /* Check in 'C:\Windows\System32' */<newline46mondego>    pathToJavaw = Paths.get(<doubleQuotes46>C:\\Windows\\System32\\javaw.exe<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        if (Files.exists(pathToJavaw)) {<newline46mondego>            return pathToJavaw.toString();<newline46mondego>        }<newline46mondego>    } catch (Exception ignored) {}<newline46mondego><newline46mondego>    /* Check in 'C:\Program Files\Java\jre*' */<newline46mondego>    pathToJavaw = null;<newline46mondego>    temp = Paths.get(<doubleQuotes46>C:\\Program Files\\Java<doubleQuotes46>);<newline46mondego>    if (Files.exists(temp)) {<newline46mondego>        try (DirectoryStream<Path> dirStream <newline46mondego>                = Files.newDirectoryStream(temp, <doubleQuotes46>jre*<doubleQuotes46>)) {<newline46mondego>            for (Path path : dirStream) {<newline46mondego>                temp = Paths.get(path.toString(), <doubleQuotes46>bin<doubleQuotes46>, <doubleQuotes46>javaw.exe<doubleQuotes46>);<newline46mondego>                if (Files.exists(temp)) {<newline46mondego>                    pathToJavaw = temp;<newline46mondego>                    // Don't <doubleQuotes46>break<doubleQuotes46>, in order to find the latest JRE version<newline46mondego>                }                    <newline46mondego>            }<newline46mondego>            if (pathToJavaw != null) {<newline46mondego>                return pathToJavaw.toString();<newline46mondego>            }<newline46mondego>        } catch (Exception ignored) {}<newline46mondego>    }<newline46mondego><newline46mondego>    /* Check in 'C:\Program Files (x86)\Java\jre*' */<newline46mondego>    pathToJavaw = null;<newline46mondego>    temp = Paths.get(<doubleQuotes46>C:\\Program Files (x86)\\Java<doubleQuotes46>);<newline46mondego>    if (Files.exists(temp)) {<newline46mondego>        try (DirectoryStream<Path> dirStream <newline46mondego>                = Files.newDirectoryStream(temp, <doubleQuotes46>jre*<doubleQuotes46>)) {<newline46mondego>            for (Path path : dirStream) {<newline46mondego>                temp = Paths.get(path.toString(), <doubleQuotes46>bin<doubleQuotes46>, <doubleQuotes46>javaw.exe<doubleQuotes46>);<newline46mondego>                if (Files.exists(temp)) {<newline46mondego>                    pathToJavaw = temp;<newline46mondego>                    // Don't <doubleQuotes46>break<doubleQuotes46>, in order to find the latest JRE version<newline46mondego>                }                    <newline46mondego>            }<newline46mondego>            if (pathToJavaw != null) {<newline46mondego>                return pathToJavaw.toString();<newline46mondego>            }<newline46mondego>        } catch (Exception ignored) {}<newline46mondego>    }<newline46mondego><newline46mondego>    /* Check in 'C:\Program Files\Java\jdk*' */<newline46mondego>    pathToJavaw = null;<newline46mondego>    temp = Paths.get(<doubleQuotes46>C:\\Program Files\\Java<doubleQuotes46>);<newline46mondego>    if (Files.exists(temp)) {<newline46mondego>        try (DirectoryStream<Path> dirStream <newline46mondego>                = Files.newDirectoryStream(temp, <doubleQuotes46>jdk*<doubleQuotes46>)) {<newline46mondego>            for (Path path : dirStream) {<newline46mondego>                temp = Paths.get(path.toString(), <doubleQuotes46>jre<doubleQuotes46>, <doubleQuotes46>bin<doubleQuotes46>, <doubleQuotes46>javaw.exe<doubleQuotes46>);<newline46mondego>                if (Files.exists(temp)) {<newline46mondego>                    pathToJavaw = temp;<newline46mondego>                    // Don't <doubleQuotes46>break<doubleQuotes46>, in order to find the latest JDK version<newline46mondego>                }                    <newline46mondego>            }<newline46mondego>            if (pathToJavaw != null) {<newline46mondego>                return pathToJavaw.toString();<newline46mondego>            }<newline46mondego>        } catch (Exception ignored) {}<newline46mondego>    }<newline46mondego><newline46mondego>    /* Check in 'C:\Program Files (x86)\Java\jdk*' */<newline46mondego>    pathToJavaw = null;<newline46mondego>    temp = Paths.get(<doubleQuotes46>C:\\Program Files (x86)\\Java<doubleQuotes46>);<newline46mondego>    if (Files.exists(temp)) {<newline46mondego>        try (DirectoryStream<Path> dirStream <newline46mondego>                = Files.newDirectoryStream(temp, <doubleQuotes46>jdk*<doubleQuotes46>)) {<newline46mondego>            for (Path path : dirStream) {<newline46mondego>                temp = Paths.get(path.toString(), <doubleQuotes46>jre<doubleQuotes46>, <doubleQuotes46>bin<doubleQuotes46>, <doubleQuotes46>javaw.exe<doubleQuotes46>);<newline46mondego>                if (Files.exists(temp)) {<newline46mondego>                    pathToJavaw = temp;<newline46mondego>                    // Don't <doubleQuotes46>break<doubleQuotes46>, in order to find the latest JDK version<newline46mondego>                }                    <newline46mondego>            }<newline46mondego>            if (pathToJavaw != null) {<newline46mondego>                return pathToJavaw.toString();<newline46mondego>            }<newline46mondego>        } catch (Exception ignored) {}<newline46mondego>    }<newline46mondego><newline46mondego>    return <doubleQuotes46>javaw.exe<doubleQuotes46>;   // Let's just hope it is in the path :)<newline46mondego>}<newline46mondego>"
"3808splitHere46","17609810splitHere46","switch (tokensLeft) {<newline46mondego>    case 3:<newline46mondego>        rawListener.binaryInfo(<newline46mondego>                tokens.nextToken(),<newline46mondego>                parseInt(tokens.nextToken()),<newline46mondego>                tokens.nextToken(),<newline46mondego>                this);<newline46mondego>        break;<newline46mondego>    case 2:<newline46mondego>        rawListener.binaryInfo(<newline46mondego>                tokens.nextToken(),<newline46mondego>                parseInt(tokens.nextToken()),<newline46mondego>                this);<newline46mondego>        break;<newline46mondego>    default:<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>Method call binaryInfo could not be done because: \<doubleQuotes46>Wrong number of parameters\<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3809splitHere46","17609810splitHere46","static"
"3810splitHere46","17609810splitHere46","Integer.parseInt"
"3811splitHere46","17609810splitHere46","switch"
"3812splitHere46","17609810splitHere46","public void parseTokens() {<newline46mondego>    switch (tokensLeft) {<newline46mondego>        case 3:<newline46mondego>            parseThreeTokens(rawListener, tokens);<newline46mondego>            break;<newline46mondego>        case 2:<newline46mondego>            parseTwoTokens(rawListener, tokens);<newline46mondego>            break;<newline46mondego>        default:<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>Method call binaryInfo could not be done because: \<doubleQuotes46>Wrong number of parameters\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void parseThreeTokens(final RawListener rawListener, final Tokens tokens) {<newline46mondego>    final String id = tokens.nextToken();<newline46mondego>    final String value = tokens.nextToken();<newline46mondego>    final String trailerId = tokens.nextToken();<newline46mondego>    rawListener.binaryInfo(id, parseInt(value), trailerId, this);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public void parseTwoTokens(final RawListener rawListener, final Tokens tokens) {<newline46mondego>    final String id = tokens.nextToken();<newline46mondego>    final String value = tokens.nextToken();<newline46mondego>    rawListener.binaryInfo(id, parseInt(value), this);<newline46mondego>}<newline46mondego>"
"3813splitHere46","17609872splitHere46","Statement"
"3814splitHere46","17609872splitHere46","ResultSet"
"3815splitHere46","17609872splitHere46","Statement"
"3816splitHere46","17609872splitHere46","ResultSet"
"3817splitHere46","17609872splitHere46","Statement"
"3818splitHere46","17609872splitHere46","Statement"
"3819splitHere46","17609872splitHere46","ResultSet"
"3820splitHere46","17609872splitHere46","aStmt.executeQuery()"
"3821splitHere46","17609872splitHere46","ResultSet"
"3822splitHere46","17609872splitHere46","aRset"
"3823splitHere46","17609872splitHere46","ResultSet"
"3824splitHere46","17609872splitHere46","PreparedStatement"
"3825splitHere46","17609872splitHere46","close()"
"3826splitHere46","17609872splitHere46","aStmt"
"3827splitHere46","17609872splitHere46","ResultSet"
"3828splitHere46","17609872splitHere46","ResultSet"
"3829splitHere46","17609872splitHere46","PreparedStatement"
"3830splitHere46","17609872splitHere46","try (<newline46mondego>    ResultSet cRset = cStmt.executeQuery(cQuery);<newline46mondego>    PreparedStatement aStmt = aConn.prepareStatement(aQuery);<newline46mondego>) {<newline46mondego>    while (cRset.next()) {<newline46mondego>        //stuff to determine value of parm1<newline46mondego><newline46mondego>        aStmt.setString(1, parm1);                <newline46mondego>        try (ResultSet aRset = aStmt.executeQuery()) {<newline46mondego>            //more stuff<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3831splitHere46","17610111splitHere46","ResultSet"
"3832splitHere46","17610126splitHere46","public interface Task {<newline46mondego>    void doSomething();<newline46mondego>}<newline46mondego>"
"3833splitHere46","17610126splitHere46","map.put(<doubleQuotes46>someString<doubleQuotes46>, new Task() {<newline46mondego>    @Override<newline46mondego>    public void doSomething() {<newline46mondego>        System.out.println(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>map.put(<doubleQuotes46>someOtherString<doubleQuotes46>, new Task() {<newline46mondego>    @Override<newline46mondego>    public void doSomething() {<newline46mondego>        System.out.println(<doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3834splitHere46","17610126splitHere46","s"
"3835splitHere46","17610126splitHere46","map.get(s).doSomething();<newline46mondego>"
"3836splitHere46","17610225splitHere46","Libraries"
"3837splitHere46","17610225splitHere46","{install/location/of/Netbeans}/etc"
"3838splitHere46","17610225splitHere46","netbeans.conf"
"3839splitHere46","17610225splitHere46","netbeans_jdkhome"
"3840splitHere46","17610296splitHere46","screen"
"3841splitHere46","17610371splitHere46","c:\Users\<current user>\.netbeans\7.0\var\"
"3842splitHere46","17610371splitHere46","cache"
"3843splitHere46","17610371splitHere46","build"
"3844splitHere46","17610371splitHere46","cache"
"3845splitHere46","17610402splitHere46","@Test<newline46mondego>public void testLitianyiNewsIsExisting() throws InterruptedException {<newline46mondego>        WebElement inputField = driver.findElement(By.name(<doubleQuotes46>q<doubleQuotes46>));<newline46mondego>        inputField.sendKeys(<doubleQuotes46>selenium<doubleQuotes46>);<newline46mondego>        inputField.sendKeys(Keys.ENTER);<newline46mondego>}<newline46mondego>"
"3846splitHere46","17610460splitHere46","SwingWorker"
"3847splitHere46","17610501splitHere46","@SerializedName"
"3848splitHere46","17610501splitHere46","public class JsonData {<newline46mondego><newline46mondego>    @SerializedName(<doubleQuotes46>3h<doubleQuotes46>)<newline46mondego>    private int h3;<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>    public JsonData(int h3, String name) {<newline46mondego>        this.h3 = h3;<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3849splitHere46","17610501splitHere46","// prints: {<doubleQuotes46>3h<doubleQuotes46>: 3,<doubleQuotes46>name<doubleQuotes46>: <doubleQuotes46>Benghazi<doubleQuotes46>}<newline46mondego>System.out.println(new Gson().toJson(new JsonData(3, <doubleQuotes46>Benghazi<doubleQuotes46>)));<newline46mondego>"
"3850splitHere46","17610884splitHere46","Java Development Kit"
"3851splitHere46","17610884splitHere46","JRE"
"3852splitHere46","17610914splitHere46","BigDecimal bigDecimal = new BigDecimal(-3.12345E-51);<newline46mondego>    DecimalFormat format = new DecimalFormat(<doubleQuotes46>0.#####E0<doubleQuotes46>);<newline46mondego>    System.out.println(format.format(bigDecimal));<newline46mondego>"
"3853splitHere46","17610914splitHere46","DecimalFormat format = new DecimalFormat(<doubleQuotes46>0E0<doubleQuotes46>);<newline46mondego>    format.setMaximumFractionDigits(6);<newline46mondego>"
"3854splitHere46","17611054splitHere46","items.add(new Item(<doubleQuotes46>CoffeTable<doubleQuotes46>, <doubleQuotes46>brown<doubleQuotes46>));<newline46mondego>"
"3855splitHere46","17611213splitHere46","public class NullAppender extends UnsynchronizedAppenderBase<ILoggingEvent> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void append(ILoggingEvent eventObject) {<newline46mondego>        //no-op<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3856splitHere46","17611329splitHere46","PreparedStatement"
"3857splitHere46","17611329splitHere46","query1"
"3858splitHere46","17611329splitHere46","query2"
"3859splitHere46","17611329splitHere46","PreparedStatement"
"3860splitHere46","17611329splitHere46","PreparedStatement.addBatch()"
"3861splitHere46","17611329splitHere46","PreparedStatement ps = c.prepareStatement(query1);<newline46mondego>ps.setObject(....);<newline46mondego>ps.addBatch(); //Voila<newline46mondego>"
"3862splitHere46","17611350splitHere46","System.getProperty(<doubleQuotes46>java.io.tmpdir<doubleQuotes46>)"
"3863splitHere46","17611374splitHere46","getNodeValue()"
"3864splitHere46","17611374splitHere46","null"
"3865splitHere46","17611374splitHere46","Node"
"3866splitHere46","17611374splitHere46","getTextContent()"
"3867splitHere46","17611374splitHere46","address"
"3868splitHere46","17611374splitHere46","getTextContent()"
"3869splitHere46","17611374splitHere46","descendant::"
"3870splitHere46","17611374splitHere46","descendant-or-self::"
"3871splitHere46","17611374splitHere46","descendant-or-self::*[not(*)]<newline46mondego>"
"3872splitHere46","17611427splitHere46","list.get(1).add(myString);<newline46mondego>"
"3873splitHere46","17611632splitHere46",".to(<doubleQuotes46>jdbc:mydb?resetAutoCommit=false<doubleQuotes46>);<newline46mondego>"
"3874splitHere46","17611719splitHere46","struts.xml"
"3875splitHere46","17611719splitHere46","<!DOCTYPE struts PUBLIC<newline46mondego>  <doubleQuotes46>-//Apache Software Foundation//DTD Struts Configuration 2.3//EN<doubleQuotes46><newline46mondego>  <doubleQuotes46>http://struts.apache.org/dtds/struts-2.3.dtd<doubleQuotes46>><newline46mondego>"
"3876splitHere46","17611814splitHere46","Mail.defaults do<newline46mondego>  delivery_method :smtp, { :address => <doubleQuotes46>smtp.me.com<doubleQuotes46>,<newline46mondego>                           :port => 587,<newline46mondego>                           :domain => 'your.host.name',<newline46mondego>                           :user_name => '<username>', <newline46mondego>                           :password => '<password>',<newline46mondego>                           :authentication => 'plain',<newline46mondego>                           :enable_starttls_auto => true }<newline46mondego>end<newline46mondego>"
"3877splitHere46","17611834splitHere46","FileInputStream fIn = openFileInput(Constants.FB_PROFILE_IMAGE_FILE_NAME);<newline46mondego>Bitmap myBitmap = BitmapFactory.decodeStream(fIn);<newline46mondego>"
"3878splitHere46","17611834splitHere46","openFileOutput/openFileInput"
"3879splitHere46","17611904splitHere46","+, *, ? or {m,n}"
"3880splitHere46","17611904splitHere46","(a)+"
"3881splitHere46","17611904splitHere46","<doubleQuotes46>aaaaaa<doubleQuotes46>"
"3882splitHere46","17611904splitHere46","a"
"3883splitHere46","17611904splitHere46","`(a(b)?)+`<newline46mondego>"
"3884splitHere46","17611904splitHere46","<doubleQuotes46>aba<doubleQuotes46>"
"3885splitHere46","17611904splitHere46","<doubleQuotes46>ab<doubleQuotes46>"
"3886splitHere46","17611904splitHere46","<doubleQuotes46>ab<doubleQuotes46>"
"3887splitHere46","17611904splitHere46","<doubleQuotes46>b<doubleQuotes46>"
"3888splitHere46","17611904splitHere46","<doubleQuotes46>a<doubleQuotes46>"
"3889splitHere46","17611904splitHere46","<doubleQuotes46>a<doubleQuotes46>"
"3890splitHere46","17611904splitHere46","(b)?"
"3891splitHere46","17611904splitHere46","a"
"3892splitHere46","17611904splitHere46","<doubleQuotes46>a<doubleQuotes46>"
"3893splitHere46","17611904splitHere46","<doubleQuotes46>ab<doubleQuotes46>"
"3894splitHere46","17611904splitHere46","<doubleQuotes46>b<doubleQuotes46>"
"3895splitHere46","17611962splitHere46","for(int i = 0; i < 3; i++){<newline46mondego>      for(int j = 0; j < 3; j++){<newline46mondego>        for(int k = 0; k < 3; k++){<newline46mondego>          //do something<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"3896splitHere46","17612037splitHere46","html=text/html"
"3897splitHere46","17612037splitHere46","produces = MediaType.TEXT_HTML_VALUE"
"3898splitHere46","17612037splitHere46","@RequestMapping"
"3899splitHere46","17612114splitHere46","public class ValidatingInterceptor extends PayloadValidatingInterceptor {<newline46mondego>    @Override<newline46mondego>    public QName getDetailElementName() {<newline46mondego>        return new QName(<doubleQuotes46>http://www.mycee.co.za<doubleQuotes46>, <doubleQuotes46>tech<doubleQuotes46>, <doubleQuotes46>mt<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3900splitHere46","17612284splitHere46","<html><body><font color=\<doubleQuotes46>red\<doubleQuotes46>>Ton test est mauvais</font></body></html><doubleQuotes46><newline46mondego>"
"3901splitHere46","17612326splitHere46","public static void main(String[] args) throws IOException {<newline46mondego>    File path=new File(<doubleQuotes46>D:\\FileSource<doubleQuotes46>);<newline46mondego>    File[] listOfFiles = path.listFiles();<newline46mondego>    BufferedWriter bw=new BufferedWriter(new FileWriter(<doubleQuotes46>D:\\DestFile\\outPut.txt<doubleQuotes46>));<newline46mondego>    String s=new String();<newline46mondego>    for (int i = 0; i < listOfFiles.length; i++) {<newline46mondego>        File file = listOfFiles[i];<newline46mondego>        if (file.isFile() && file.getName().endsWith(<doubleQuotes46>.txt<doubleQuotes46>)) {<newline46mondego>            BufferedReader br=new BufferedReader(new FileReader(file));<newline46mondego>            while ((s=br.readLine())!=null){<newline46mondego>                bw.write(s);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>   bw.close();<newline46mondego> }<newline46mondego>"
"3902splitHere46","17612348splitHere46","Utilities"
"3903splitHere46","17612348splitHere46","AndroidServer"
"3904splitHere46","17612348splitHere46","onCreate()"
"3905splitHere46","17612348splitHere46","initialize()"
"3906splitHere46","17612348splitHere46","public class Utilities {<newline46mondego><newline46mondego>   public void initialize(View mainHolder){<newline46mondego>      ImageView imageView = mainHolder.findViewById(R.id.main_image);<newline46mondego>      imageView.setImageResource(R.drawable.image3);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>   super.onCreate(savedInstanceState);<newline46mondego>   LayoutInflater inflater = LayoutInflater.from(this);<newline46mondego>   View contentView = infler.inflate(R.layout.activity_android_server, null);<newline46mondego>   setContentView(contentView);<newline46mondego>   this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);<newline46mondego><newline46mondego>   Utilities utilities = new Utilities();<newline46mondego>   utilities.initialize(contentView);<newline46mondego>}<newline46mondego>"
"3907splitHere46","17612608splitHere46","NodeSet<OWLClass> superclasses = reasoner.getSuperClasses(c, true);<newline46mondego>"
"3908splitHere46","17612608splitHere46","for (org.semanticweb.owlapi.reasoner.Node<OWLClass> parentOWLNode: superclasses) {                      <newline46mondego>    OWLClassExpression parent = parentOWLNode.getRepresentativeElement();<newline46mondego>"
"3909splitHere46","17612613splitHere46","NullPointerException"
"3910splitHere46","17612613splitHere46","Retriever"
"3911splitHere46","17612613splitHere46","IndirectActorProducer"
"3912splitHere46","17612613splitHere46","class RetrieverDependencyInjector implements IndirectActorProducer {<newline46mondego>    final Injector injector;<newline46mondego><newline46mondego>    public RetrieverDependencyInjector(Injector injector) {<newline46mondego>        this.injector = injector;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Class<? extends Actor> actorClass() {<newline46mondego>        return Retriever.class;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Retriever produce() {<newline46mondego>        return injector.getInstance(Retriever.class);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3913splitHere46","17612613splitHere46","produce()"
"3914splitHere46","17612613splitHere46","Actor"
"3915splitHere46","17612613splitHere46","RetrieverDependencyInjector"
"3916splitHere46","17612613splitHere46","ActorRef myActor = Akka.system().actorOf(<newline46mondego>    Props.create(RetrieverDependencyInjector.class, injector)<newline46mondego>);<newline46mondego>"
"3917splitHere46","17612613splitHere46","RetrieverDependencyInjector"
"3918splitHere46","17612613splitHere46","GenericDependencyInjector"
"3919splitHere46","17612613splitHere46","Actor"
"3920splitHere46","17612613splitHere46","Props.create(GenericDependencyInjector.class, injector, Retriever.class)<newline46mondego>"
"3921splitHere46","17612773splitHere46","<a href=<doubleQuotes46>http://docs.oracle.com/javaee/6/api/javax/persistence/AttributeOverride.html<doubleQuotes46> rel=<doubleQuotes46>nofollow<doubleQuotes46>>AttributeOverride</a>"
"3922splitHere46","17612773splitHere46","@Entity<newline46mondego>@AttributeOverride(name=<doubleQuotes46>nrCompte<doubleQuotes46>, column=@Column(unique=false))<newline46mondego>public class CompteTmp extends AbstractCompte { ... }<newline46mondego><newline46mondego>@Entity<newline46mondego>@AttributeOverride(name=<doubleQuotes46>nrCompte<doubleQuotes46>, column=@Column(unique=true))<newline46mondego>public class Compte extends AbstractCompte { ... }<newline46mondego>"
"3923splitHere46","17612832splitHere46","\"
"3924splitHere46","17612832splitHere46","<doubleQuotes46>"
"3925splitHere46","17612832splitHere46","<doubleQuotes46>"
"3926splitHere46","17612832splitHere46","\"
"3927splitHere46","17612832splitHere46","\n"
"3928splitHere46","17612832splitHere46","\r"
"3929splitHere46","17612832splitHere46","\t"
"3930splitHere46","17612832splitHere46","\"
"3931splitHere46","17612832splitHere46","<doubleQuotes46>"
"3932splitHere46","17612832splitHere46","<doubleQuotes46>\\<doubleQuotes46>"
"3933splitHere46","17612832splitHere46","<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>"
"3934splitHere46","17612832splitHere46","Character[]"
"3935splitHere46","17612832splitHere46","String[]"
"3936splitHere46","17612832splitHere46","<doubleQuotes46>"
"3937splitHere46","17612832splitHere46","'<doubleQuotes46>'"
"3938splitHere46","17612832splitHere46","'\\'"
"3939splitHere46","17612832splitHere46","'"
"3940splitHere46","17612832splitHere46","'\''"
"3941splitHere46","17612832splitHere46","\"
"3942splitHere46","17612884splitHere46","Object#wait"
"3943splitHere46","17612884splitHere46","Thread#join"
"3944splitHere46","17612884splitHere46","this.notifyAll()"
"3945splitHere46","17612884splitHere46","private final Object lock = new Object();"
"3946splitHere46","17613591splitHere46","null"
"3947splitHere46","17613591splitHere46","getRequestProperties().getString(XXMessagingConstants.STORE_ID)<newline46mondego>"
"3948splitHere46","17613591splitHere46","if (XXMessagingConstants.DE_STORE_ID.equals(getRequestProperties().getString(XXMessagingConstants.STORE_ID))<newline46mondego>"
"3949splitHere46","17613591splitHere46","null"
"3950splitHere46","17613591splitHere46","if (getRequestProperties().getString(XXMessagingConstants.STORE_ID) == null)<newline46mondego>    log.wanr(<doubleQuotes46>request parameter is Null, this shouldn't be this way<doubleQuotes46>);<newline46mondego>else if (XXMessagingConstants.DE_STORE_ID.equals(getRequestProperties().getString(XXMessagingConstants.STORE_ID)) <newline46mondego>    ....<newline46mondego>"
"3951splitHere46","17613595splitHere46","<jms:lintener-container>"
"3952splitHere46","17613595splitHere46","<jms:listener>"
"3953splitHere46","17613595splitHere46","<!-- RECEIVER --><newline46mondego><bean id=<doubleQuotes46>connectionFactory<doubleQuotes46> class=<doubleQuotes46>org.apache.activemq.ActiveMQConnectionFactory<doubleQuotes46> p:brokerURL=<doubleQuotes46>${jms.primary.server}<doubleQuotes46>/><newline46mondego><newline46mondego><bean id=<doubleQuotes46>messageListener<doubleQuotes46> class=<doubleQuotes46>com.ucware.ucpo.forward.jms.ProductMessageListener<doubleQuotes46>/><newline46mondego><newline46mondego><jms:listener-container connection-factory=<doubleQuotes46>connectionFactory<doubleQuotes46> concurrency=<doubleQuotes46>2<doubleQuotes46> acknowledge=<doubleQuotes46>auto<doubleQuotes46>><newline46mondego>    <jms:listener destination=<doubleQuotes46>FORWARD<doubleQuotes46> ref=<doubleQuotes46>messageListener<doubleQuotes46> method=<doubleQuotes46>onMessage<doubleQuotes46>/><newline46mondego></jms:listener-container><newline46mondego><newline46mondego> <!-- SENDER --><newline46mondego><newline46mondego><!-- A cached connection to wrap the ActiveMQ connection --> <newline46mondego><newline46mondego><bean id=<doubleQuotes46>cachedConnectionFactory<doubleQuotes46> <newline46mondego>     class=<doubleQuotes46>org.springframework.jms.connection.CachingConnectionFactory<doubleQuotes46> <newline46mondego>     p:targetConnectionFactory-ref=<doubleQuotes46>connectionFactory<doubleQuotes46>      <newline46mondego>     p:sessionCacheSize=<doubleQuotes46>10<doubleQuotes46> /><newline46mondego><newline46mondego><!-- A destination in ActiveMQ --> <newline46mondego><newline46mondego><bean id=<doubleQuotes46>destination<doubleQuotes46> <newline46mondego>    class=<doubleQuotes46>org.apache.activemq.command.ActiveMQQueue<doubleQuotes46>><newline46mondego><constructor-arg value=<doubleQuotes46>FORWARD<doubleQuotes46> /><newline46mondego></bean><newline46mondego><newline46mondego><!-- A JmsTemplate instance that uses the cached connection and destination --> <newline46mondego><newline46mondego><bean id=<doubleQuotes46>producerTemplate<doubleQuotes46> <newline46mondego>    class=<doubleQuotes46>org.springframework.jms.core.JmsTemplate<doubleQuotes46> <newline46mondego>    p:connectionFactory-ref=<doubleQuotes46>cachedConnectionFactory<doubleQuotes46><newline46mondego>    p:defaultDestination-ref=<doubleQuotes46>destination<doubleQuotes46> /><newline46mondego></beans><newline46mondego>"
"3954splitHere46","17613717splitHere46","getDetails(...)"
"3955splitHere46","17613788splitHere46","Vehicle"
"3956splitHere46","17613788splitHere46","User"
"3957splitHere46","17613788splitHere46","User"
"3958splitHere46","17613788splitHere46","Vehicle"
"3959splitHere46","17613788splitHere46","Vehicle"
"3960splitHere46","17613788splitHere46","transient object"
"3961splitHere46","17613788splitHere46","session.save(vehicle); <newline46mondego>session.save(vehicle2);<newline46mondego>session.save(user);//after saving vehicle we have to save User.<newline46mondego>"
"3962splitHere46","17613788splitHere46","cascade = <doubleQuotes46>save-update<doubleQuotes46>"
"3963splitHere46","17614029splitHere46","LatLngBounds.Builder builder = new LatLngBounds.Builder();<newline46mondego>for each (Marker m : markers) {<newline46mondego>    builder.include(m.getPosition());<newline46mondego>}<newline46mondego><newline46mondego>LatLngBounds bounds = builder.build();<newline46mondego>"
"3964splitHere46","17614029splitHere46","int padding = 0; // offset from edges of the map in pixels<newline46mondego>CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, padding);<newline46mondego>"
"3965splitHere46","17614029splitHere46","googleMap.moveCamera(cu);<newline46mondego>"
"3966splitHere46","17614029splitHere46","googleMap.animateCamera(cu);<newline46mondego>"
"3967splitHere46","17614070splitHere46","JsonArray finalResult = null;<newline46mondego>JsonParser  parser = new JsonParser();<newline46mondego>String tags2=dbo.getString(<doubleQuotes46>Tags<doubleQuotes46>);<newline46mondego>JsonElement elem   = parser.parse(tags2);<newline46mondego>finalResult = elem.getAsJsonArray();<newline46mondego>for(int i=o;i<finalResult .size();i++)<newline46mondego>{<newline46mondego>//Get individual array and get the fields as String and store it anywhere<newline46mondego>}<newline46mondego>"
"3968splitHere46","17614109splitHere46","file.list()"
"3969splitHere46","17614109splitHere46","createTree(rootPath + File.seperator + node);<newline46mondego>"
"3970splitHere46","17614109splitHere46","file = new File(<relative-file-name>)"
"3971splitHere46","17614181splitHere46","ArrayDeque<Storage> Storages = new ArrayDeque<Storage>();<newline46mondego>"
"3972splitHere46","17614181splitHere46","Collection<Storage> storages = new ArrayList<Storage>();<newline46mondego>"
"3973splitHere46","17614181splitHere46","Storages[1] = storage_obj.setFloor(7);<newline46mondego>"
"3974splitHere46","17614181splitHere46","void setFloor(int floor)<newline46mondego>"
"3975splitHere46","17614181splitHere46","Storages"
"3976splitHere46","17614181splitHere46","[]"
"3977splitHere46","17614181splitHere46","storages.get(0).setFloor(7);<newline46mondego>"
"3978splitHere46","17614181splitHere46","null"
"3979splitHere46","17614302splitHere46","dataType"
"3980splitHere46","17614302splitHere46","text"
"3981splitHere46","17614302splitHere46","html"
"3982splitHere46","17614302splitHere46","Datatype"
"3983splitHere46","17614302splitHere46","$.ajax({<newline46mondego>   <doubleQuotes46>dataType<doubleQuotes46>: 'json',<newline46mondego>"
"3984splitHere46","17614363splitHere46","-Dlog4j.configuration=..."
"3985splitHere46","17614389splitHere46","for(int i=0; i<=2; i++)<newline46mondego>{<newline46mondego>   if(i==1){<newline46mondego>     continue;<newline46mondego>   } <newline46mondego>   print(i);<newline46mondego>}<newline46mondego>"
"3986splitHere46","17614389splitHere46","break"
"3987splitHere46","17614389splitHere46","continue"
"3988splitHere46","17614476splitHere46","Future"
"3989splitHere46","17614476splitHere46","FilesProcessor"
"3990splitHere46","17614476splitHere46","LineProcessor"
"3991splitHere46","17614476splitHere46","public class Messages {<newline46mondego><newline46mondego>  public static class ProcessFiles{<newline46mondego>    public final List<String> fileNames;<newline46mondego>    public ProcessFiles(List<String> fileNames){<newline46mondego>      this.fileNames = fileNames;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static class ProcessLine{<newline46mondego>    public final String line;<newline46mondego>    public ProcessLine(String line){<newline46mondego>      this.line = line;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static class LineProcessed{}<newline46mondego><newline46mondego>  public static LineProcessed LINE_PROCESSED = new LineProcessed();<newline46mondego>}<newline46mondego>"
"3992splitHere46","17614476splitHere46","FilesProcessor"
"3993splitHere46","17614476splitHere46","public class FilesProcessor extends UntypedActor{<newline46mondego>  private List<String> files;<newline46mondego>  private int awaitingCount;<newline46mondego>  private ActorRef router;<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void onReceive(Object msg) throws Exception {<newline46mondego>    if (msg instanceof ProcessFiles){      <newline46mondego>      ProcessFiles pf = (ProcessFiles)msg;<newline46mondego>      router = ... //lookup router;<newline46mondego>      files = pf.fileNames;<newline46mondego>      processNextFile();<newline46mondego>    }<newline46mondego>    else if (msg instanceof LineProcessed){<newline46mondego>      awaitingCount--;<newline46mondego>      if (awaitingCount <= 0){<newline46mondego>        processNextFile();<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  private void processNextFile(){<newline46mondego>    if (files.isEmpty()) getContext().stop(getSelf());<newline46mondego>    else{            <newline46mondego>      String file = files.remove(0);<newline46mondego>      BufferedReader in = openFile(file);<newline46mondego>      String input = null;<newline46mondego>      awaitingCount = 0;<newline46mondego><newline46mondego>      try{<newline46mondego>        while((input = in.readLine()) != null){<newline46mondego>          router.tell(new Messages.ProcessLine(input), getSelf());<newline46mondego>          awaitingCount++;<newline46mondego>        }        <newline46mondego>      }<newline46mondego>      catch(IOException e){<newline46mondego>        e.printStackTrace();<newline46mondego>        getContext().stop(getSelf());<newline46mondego>      }<newline46mondego><newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private BufferedReader openFile(String name){<newline46mondego>    //do whetever to load file <newline46mondego>    ...<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3994splitHere46","17614476splitHere46","LineProcessor"
"3995splitHere46","17614476splitHere46","public class LineProcessor extends UntypedActor{<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void onReceive(Object msg) throws Exception {<newline46mondego>    if (msg instanceof ProcessLine){<newline46mondego>      ProcessLine pl = (ProcessLine)msg;<newline46mondego><newline46mondego>      //Do whatever line processing...<newline46mondego><newline46mondego>      getSender().tell(Messages.LINE_PROCESSED, getSelf());<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3996splitHere46","17614476splitHere46","Future"
"3997splitHere46","17615116splitHere46","WebTarget myResource = client.target(<doubleQuotes46>http://example.com/webapi/read<doubleQuotes46>)<newline46mondego>  .path(<doubleQuotes46>{userName}<doubleQuotes46>);<newline46mondego>Response response = myResource.queryParam(<doubleQuotes46>userName<doubleQuotes46>, <doubleQuotes46>janedoe<doubleQuotes46>)<newline46mondego>  .request(...)<newline46mondego>  .get();<newline46mondego>"
"3998splitHere46","17615140splitHere46","ArrayList<Book> lb = (ArrayList<Book>) responseList.getList().get(1);<newline46mondego>"
"3999splitHere46","17615140splitHere46","responseList.getList().get(1);<newline46mondego>"
"4000splitHere46","17615140splitHere46","Book book1 = new Book();<newline46mondego>book1.setName(<doubleQuotes46>Book2<doubleQuotes46>);<newline46mondego>book1.setAuthor(<doubleQuotes46>Author2<doubleQuotes46>); <newline46mondego><newline46mondego>Book book2 = new Book();<newline46mondego>book2.setName(<doubleQuotes46>Book3<doubleQuotes46>);<newline46mondego>book2.setAuthor(<doubleQuotes46>Author3<doubleQuotes46>);<newline46mondego><newline46mondego>ArrayList<Book> Blist = new ArrayList<Book>();<newline46mondego>Blist.add(book1);<newline46mondego>Blist.add(book2);<newline46mondego><newline46mondego>ArrayList<Object> list = new ArrayList<Object>();<newline46mondego>list.add(bookstore);<newline46mondego>list.addAll(Blist);<newline46mondego>"
"4001splitHere46","17615140splitHere46","Book book1 = (Book) responseList.getList().get(1);<newline46mondego>Book book2 = (Book) responseList.getList().get(2);<newline46mondego>"
"4002splitHere46","17615312splitHere46","07-12 12:24:33.459: I/System.out(2387): 4126158 <newline46mondego>"
"4003splitHere46","17615312splitHere46","4126158"
"4004splitHere46","17615312splitHere46","Long"
"4005splitHere46","17615565splitHere46","mvn install"
"4006splitHere46","17615612splitHere46","Document doc = docBuilder.parse(xmlstring)<newline46mondego>NodeList editorTab = doc.getElementsByTagName(<doubleQuotes46>editor_tab<doubleQuotes46>)<newline46mondego>Element et = (Element)editorTab.item(0)<newline46mondego>"
"4007splitHere46","17616031splitHere46","JLabel"
"4008splitHere46","17616031splitHere46","JPanel"
"4009splitHere46","17616031splitHere46","FlowLayout"
"4010splitHere46","17616031splitHere46","JLabel"
"4011splitHere46","17616031splitHere46","lbImage1"
"4012splitHere46","17616031splitHere46","JPanel"
"4013splitHere46","17616031splitHere46","entrance"
"4014splitHere46","17616031splitHere46","GridLayout"
"4015splitHere46","17616031splitHere46","JLabel"
"4016splitHere46","17616031splitHere46","entrance.setLayout(new GridLayout());<newline46mondego>"
"4017splitHere46","17616043splitHere46","Font.MONOSPACED"
"4018splitHere46","17616043splitHere46","System.out.println(<doubleQuotes46>Listing available fonts<doubleQuotes46>);<newline46mondego>for (Font f : GraphicsEnvironment.getLocalGraphicsEnvironment().getAllFonts())<newline46mondego>   System.out.println(<doubleQuotes46>- <doubleQuotes46>+f);<newline46mondego>"
"4019splitHere46","17616043splitHere46","Lucida Sans Typewriter Regular"
"4020splitHere46","17616325splitHere46","String x = <doubleQuotes46>\16<doubleQuotes46>;<newline46mondego>"
"4021splitHere46","17616325splitHere46","String x = <doubleQuotes46>\u000E<doubleQuotes46>;<newline46mondego>"
"4022splitHere46","17616325splitHere46","\1"
"4023splitHere46","17616325splitHere46","\uxxxx"
"4024splitHere46","17616481splitHere46","JFrame"
"4025splitHere46","17616481splitHere46","BorderLayout"
"4026splitHere46","17616481splitHere46","CENTER"
"4027splitHere46","17616481splitHere46","frame.add(button);<newline46mondego>frame.add(x);<newline46mondego>"
"4028splitHere46","17616481splitHere46","frame.add(button, BorderLayout.PAGE_START);<newline46mondego>frame.add(x);<newline46mondego>"
"4029splitHere46","17616481splitHere46","pack()"
"4030splitHere46","17616481splitHere46","JPanel"
"4031splitHere46","17616481splitHere46","BorderLayout"
"4032splitHere46","17616481splitHere46","FlowLayout"
"4033splitHere46","17616481splitHere46","FlowLayout"
"4034splitHere46","17616481splitHere46","PAGE_START"
"4035splitHere46","17616574splitHere46","getCssValue()"
"4036splitHere46","17616574splitHere46","driver.findElement(By.id(<doubleQuotes46>id<doubleQuotes46>)).getCssValue(<doubleQuotes46>background-color<doubleQuotes46>);"
"4037splitHere46","17616640splitHere46","String REGEX = <doubleQuotes46>\\[\\d+\\]<doubleQuotes46>;<newline46mondego>"
"4038splitHere46","17616690splitHere46","private String [] name = {<doubleQuotes46>Tiny Tim<doubleQuotes46>, <doubleQuotes46>Brad Pitt<doubleQuotes46>, <doubleQuotes46>Madonna<doubleQuotes46>};<newline46mondego>    private double [] payRate = {100.25, 150.50, 124.25};<newline46mondego>    private double [] hrsWorked = {40, 35, 36};<newline46mondego>"
"4039splitHere46","17616690splitHere46","main"
"4040splitHere46","17616690splitHere46","Payroll"
"4041splitHere46","17616690splitHere46","main"
"4042splitHere46","17616690splitHere46","main"
"4043splitHere46","17616753splitHere46","oldMap"
"4044splitHere46","17616753splitHere46","oldMap"
"4045splitHere46","17616753splitHere46","newMap"
"4046splitHere46","17616753splitHere46","oldMap"
"4047splitHere46","17616758splitHere46","return Boolean.class;<newline46mondego>"
"4048splitHere46","17616767splitHere46","(a * b) % n<newline46mondego>((A * n + AA) * (B * n + BB)) % n                     | AA = a %n & BB = b % n<newline46mondego>(A * B * n^2 + A * N * BB + AA * B * n + AA * BB) % n<newline46mondego>AA * BB % n                                           since x * n % n == 0<newline46mondego>(a % n) * (b % n) % n<newline46mondego>"
"4049splitHere46","17616767splitHere46","48^26 % 2401<newline46mondego>(48^2) ^ 13 % 2401<newline46mondego>"
"4050splitHere46","17616767splitHere46","int n = 48;<newline46mondego>for (int i = 1; i < 26; i++)<newline46mondego>    n = (n * 48) % 2401;<newline46mondego>System.out.println(n);<newline46mondego><newline46mondego>int n2 = 48 * 48;<newline46mondego>for (int i = 1; i < 13; i++)<newline46mondego>    n2 = (n2 * 48 * 48) % 2401;<newline46mondego>System.out.println(n2);<newline46mondego><newline46mondego>System.out.println(BigInteger.valueOf(48).pow(26).mod(BigInteger.valueOf(2401)));<newline46mondego>"
"4051splitHere46","17616767splitHere46","1128<newline46mondego>1128<newline46mondego>1128<newline46mondego>"
"4052splitHere46","17616767splitHere46","for (int i = 1; i < 100; i++) {<newline46mondego>    BigInteger mod = BigInteger.valueOf(48).pow(i).mod(BigInteger.valueOf(2401));<newline46mondego>    double x = Math.pow(48, i) % 2401;<newline46mondego>    if (mod.intValue() != x) {<newline46mondego>        System.out.println(i + <doubleQuotes46>: <doubleQuotes46> + mod + <doubleQuotes46> vs <doubleQuotes46> + x);<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4053splitHere46","17616767splitHere46","34: 736 vs 839.0<newline46mondego>"
"4054splitHere46","17616858splitHere46","public HashSet(Collection<? extends E> c) {<newline46mondego>    map = new HashMap<>(Math.max((int) (c.size()/.75f) + 1, 16));<newline46mondego>    addAll(c);<newline46mondego>}<newline46mondego>"
"4055splitHere46","17616858splitHere46","addAll"
"4056splitHere46","17616858splitHere46","public boolean addAll(Collection<? extends E> c) {<newline46mondego>    boolean modified = false;<newline46mondego>    for (E e : c)<newline46mondego>        if (add(e))<newline46mondego>            modified = true;<newline46mondego>    return modified;<newline46mondego>}<newline46mondego>"
"4057splitHere46","17616858splitHere46","Collection"
"4058splitHere46","17616858splitHere46","synchronized"
"4059splitHere46","17616858splitHere46","Set"
"4060splitHere46","17617311splitHere46","@OneToMany(mappedBy = <doubleQuotes46>user<doubleQuotes46>)<newline46mondego>private Collection<Vehicle> vehicles = new ArrayList<Vehicle>();<newline46mondego>"
"4061splitHere46","17617311splitHere46","vehicles"
"4062splitHere46","17617311splitHere46","[org.notfound.annotation.Vehicle@37ed25, org.notfound.annotation.Vehicle@aec63]<newline46mondego> ^-- first vehicle                       ^-- second vehicle<newline46mondego>^-- brackets, indicating that it's a collection ------------------------------^<newline46mondego>"
"4063splitHere46","17617311splitHere46","toString()"
"4064splitHere46","17617369splitHere46","new TypeLiteral<T>() { }"
"4065splitHere46","17617369splitHere46","T"
"4066splitHere46","17617369splitHere46","Class<ModelClass>"
"4067splitHere46","17617369splitHere46","(Key<HasOne<ModelClass>>) Key.get(TypeLiteral.get(Types.newParameterizedType(HasOne.class, clazz)))<newline46mondego>"
"4068splitHere46","17617431splitHere46","try{<newline46mondego>   Statement stmt = connection.createStatement();<newline46mondego>   .......................<newline46mondego>} catch (Exception e) {<newline46mondego>     String host = <doubleQuotes46>smtp.google.com<doubleQuotes46>;<newline46mondego>     String sender= <doubleQuotes46>fromEmail@gmail.com<doubleQuotes46>;<newline46mondego>     String recipiant = <doubleQuotes46>toEmail@mail.com<doubleQuotes46>;<newline46mondego><newline46mondego>     StringWriter tracewriter = new StringWriter();<newline46mondego>     e.printStackTrace(tracewriter);<newline46mondego>     String trace = tracewriter.toString();<newline46mondego><newline46mondego>     Properties props= System.getProperties();<newline46mondego>     props.setPropertie(<doubleQuotes46>mail.smtp.host<doubleQuotes46>, host);<newline46mondego><newline46mondego>     Session session = Session.getDefaultInstance(props);<newline46mondego><newline46mondego>     try{<newline46mondego>         MineMessage message = new MimeMessage(session);<newline46mondego>         message.setFrom(new InternetAddress(sender));<newline46mondego>         message.addRecipiant(Message.RecipiantType.TO, new InternetAddress(recipiant));<newline46mondego>         message.setSubject(<doubleQuotes46>Testing Error<doubleQuotes46>);<newline46mondego>         message.setText(trace);<newline46mondego><newline46mondego>         Transport.send(message);<newline46mondego>         System.out.println(<doubleQuotes46>An administrator has been notified<doubleQuotes46>);<newline46mondego>     } catch (Exception ex) {<newline46mondego>         ex.printStackTrace();<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"4069splitHere46","17617431splitHere46","StringBuilder"
"4070splitHere46","17617431splitHere46","printStackTrace"
"4071splitHere46","17617431splitHere46","toString"
"4072splitHere46","17617695splitHere46","int viewIndex = 0; // the index in the table of the unique filtered row. <newline46mondego>int modelIndex = table.convertRowIndexToModel();<newline46mondego>"
"4073splitHere46","17617695splitHere46","modelIndex"
"4074splitHere46","17617782splitHere46","public boolean isAnyEmpty(String... strArr){<newline46mondego>    for(String s : strArr){<newline46mondego>        if(s.equals(<doubleQuotes46><doubleQuotes46>)) return true;<newline46mondego>    }<newline46mondego>    return false; <newline46mondego>}<newline46mondego>"
"4075splitHere46","17617782splitHere46","if(isAnyEmpty(this.Firstname, this.lastName, this.Country, /* rest of your strings */)){<newline46mondego>    //your code<newline46mondego>}<newline46mondego>"
"4076splitHere46","17617839splitHere46",".classpath"
"4077splitHere46","17617839splitHere46",".classpath"
"4078splitHere46","17617839splitHere46","svn:ignore"
"4079splitHere46","17617839splitHere46",".classpath"
"4080splitHere46","17617839splitHere46",".classpath"
"4081splitHere46","17617839splitHere46",".classpath"
"4082splitHere46","17617861splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class OptionPanePanel<newline46mondego>{<newline46mondego>    private static void createAndShowUI()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLocationRelativeTo( null );<newline46mondego>        frame.setVisible( true );<newline46mondego><newline46mondego>        //  Build a custom panel<newline46mondego><newline46mondego>        JPanel panel = new JPanel( new GridLayout(2, 2) );<newline46mondego>        panel.add( new JLabel(<doubleQuotes46>First Name<doubleQuotes46>) );<newline46mondego>        JTextField firstName = new JTextField(10);<newline46mondego>//      firstName.addAncestorListener( new RequestFocusListener(false) );<newline46mondego>        panel.add( firstName );<newline46mondego>        panel.add( new JLabel(<doubleQuotes46>Last Name<doubleQuotes46>) );<newline46mondego>        JTextField lastName = new JTextField(10);<newline46mondego>        panel.add( lastName );<newline46mondego><newline46mondego>        int result = JOptionPane.showConfirmDialog(<newline46mondego>            frame, // use your JFrame here<newline46mondego>            panel,<newline46mondego>            <doubleQuotes46>Use a Panel<doubleQuotes46>,<newline46mondego>            JOptionPane.YES_NO_OPTION,<newline46mondego>            JOptionPane.PLAIN_MESSAGE);<newline46mondego><newline46mondego>        if(result == JOptionPane.YES_OPTION)<newline46mondego>        {<newline46mondego>            System.out.println(firstName.getText() + <doubleQuotes46> : <doubleQuotes46> + lastName.getText());<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Canceled<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        //  Let Option Pane build the panel for you<newline46mondego><newline46mondego>        Object[] msg = {<doubleQuotes46>First Name:<doubleQuotes46>, firstName, <doubleQuotes46>Last Name:<doubleQuotes46>, lastName};<newline46mondego><newline46mondego>        result = JOptionPane.showConfirmDialog(<newline46mondego>            frame,<newline46mondego>            msg,<newline46mondego>            <doubleQuotes46>Use default layout<doubleQuotes46>,<newline46mondego>            JOptionPane.OK_CANCEL_OPTION,<newline46mondego>            JOptionPane.PLAIN_MESSAGE);<newline46mondego><newline46mondego>        if (result == JOptionPane.YES_OPTION)<newline46mondego>        {<newline46mondego>            System.out.println(firstName.getText() + <doubleQuotes46> : <doubleQuotes46> + lastName.getText());<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Canceled<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        EventQueue.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                createAndShowUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4083splitHere46","17617944splitHere46","<dependency><newline46mondego>    <groupId>org.apache.poi</groupId><newline46mondego>    <artifactId>poi</artifactId><newline46mondego>    <version>3.9</version><newline46mondego></dependency><newline46mondego>"
"4084splitHere46","17617944splitHere46","mvn install:install-file -Dfile=c:\the-poi-1.0.jar -DgroupId=separated.lib <newline46mondego>-DartifactId=the-poi -Dversion=1.0 -Dpackaging=jar<newline46mondego>"
"4085splitHere46","17617944splitHere46","<dependency><newline46mondego>      <groupId>separated.lib</groupId><newline46mondego>      <artifactId>the-poi</artifactId><newline46mondego>      <version>1.0</version><newline46mondego> </dependency><newline46mondego>"
"4086splitHere46","17617958splitHere46","SerializationFeature.INDENT_OUTPUT"
"4087splitHere46","17617958splitHere46","ObjectMapper"
"4088splitHere46","17617958splitHere46","mapper.enable(SerializationFeature.INDENT_OUTPUT);<newline46mondego>"
"4089splitHere46","17618064splitHere46","compile-time type"
"4090splitHere46","17618064splitHere46","runtime type"
"4091splitHere46","17618064splitHere46","compile-time"
"4092splitHere46","17618064splitHere46","o"
"4093splitHere46","17618064splitHere46","Object"
"4094splitHere46","17618064splitHere46","Integer"
"4095splitHere46","17618165splitHere46","void    setChecked(boolean checked)<newline46mondego>"
"4096splitHere46","17618165splitHere46","ToggleButton mytb = (ToggleButton) findViewById(R.id.mytogglebutton);<newline46mondego>mytb.setChecked(true); // this will check it<newline46mondego>"
"4097splitHere46","17618276splitHere46","@JsonProperty/@JsonIgnore"
"4098splitHere46","17618276splitHere46","@class"
"4099splitHere46","17618276splitHere46","public class Account {<newline46mondego>    @JsonProperty(<doubleQuotes46>memberEmails<doubleQuotes46>)<newline46mondego>    private Map<Integer, String> memberEmails = Maps.newHashMap();<newline46mondego><newline46mondego>    public Account() {<newline46mondego>        super();<newline46mondego>    }<newline46mondego><newline46mondego>    public void setMemberEmails(Map<Integer, String> memberEmails) {<newline46mondego>        this.memberEmails = memberEmails;<newline46mondego>    }<newline46mondego><newline46mondego>    @JsonIgnore<newline46mondego>    public Map<Integer, String> getMemberEmails() {<newline46mondego>        return Collections.unmodifiableMap(memberEmails);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4100splitHere46","17618276splitHere46","{<newline46mondego>    <doubleQuotes46>@class<doubleQuotes46>: <doubleQuotes46>misc.stack.pojo.Account<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>memberEmails<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>10<doubleQuotes46>: <doubleQuotes46>bob@mail.com<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>@class<doubleQuotes46>: <doubleQuotes46>java.util.HashMap<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4101splitHere46","17618419splitHere46","Scrollable"
"4102splitHere46","17618419splitHere46","// JPanel outerPanel = new JPanel();<newline46mondego>ScrollablePanel outerPanel = new ScrollablePanel();<newline46mondego>outerPanel.setScrollableWidth( ScrollablePanel.ScrollableSizeHint.FIT );<newline46mondego>"
"4103splitHere46","17618455splitHere46","while(i<j){<newline46mondego>    i++; while(data[i] < pivot) i++;<newline46mondego>    j--; while(data[j] > pivot) j--;<newline46mondego>    if(i<j) swap(i,j);<newline46mondego>}<newline46mondego>"
"4104splitHere46","17618455splitHere46","data"
"4105splitHere46","17618455splitHere46","pivot"
"4106splitHere46","17618455splitHere46","int"
"4107splitHere46","17618455splitHere46","<"
"4108splitHere46","17618455splitHere46","String"
"4109splitHere46","17618455splitHere46","String"
"4110splitHere46","17618455splitHere46","String#compareTo"
"4111splitHere46","17618455splitHere46","String"
"4112splitHere46","17618455splitHere46","Comparable"
"4113splitHere46","17618455splitHere46","compareTo"
"4114splitHere46","17618455splitHere46","public class Name implements Comparable<Name> {<newline46mondego>    @Override<newline46mondego>    public int compareTo(Name name) {<newline46mondego>        return ... //comparison logic...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4115splitHere46","17618455splitHere46","pivot.compareTo(...);<newline46mondego>"
"4116splitHere46","17618455splitHere46","Comparator"
"4117splitHere46","17618455splitHere46","Comparator#compare"
"4118splitHere46","17618455splitHere46","public class NameComparator implements Comparator<Name> {<newline46mondego>    @Override<newline46mondego>    public int compare(Name name1, Name name2) {<newline46mondego>        return ... //comparison logic...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4119splitHere46","17618455splitHere46","NameComparator nameComparator = new NameComparator();<newline46mondego>nameComparator.compare(..., ...);<newline46mondego>"
"4120splitHere46","17618467splitHere46","bindAddress"
"4121splitHere46","17618467splitHere46","noserver"
"4122splitHere46","17618467splitHere46","<bindAddress>0.0.0.0</bindAddress><newline46mondego><noServer>true</noServer><newline46mondego>"
"4123splitHere46","17618577splitHere46","searcher.initialize();<newline46mondego>searcher.findData(...);<newline46mondego>searcher.findData(...);<newline46mondego>searcher.findData(...);<newline46mondego>"
"4124splitHere46","17618577splitHere46","reader.close()"
"4125splitHere46","17618577splitHere46","findData"
"4126splitHere46","17618577splitHere46","findData"
"4127splitHere46","17618577splitHere46","MySearcher"
"4128splitHere46","17618577splitHere46","reader.close()"
"4129splitHere46","17618614splitHere46","-cp"
"4130splitHere46","17618614splitHere46","java -cp ./com/ug_ugbapi-all.jar:. com.QuoteTester $1<newline46mondego>"
"4131splitHere46","17618627splitHere46","if(currentCell==null){<newline46mondego>                //cell doesn't have anything in there<newline46mondego>      System.out.println(<doubleQuotes46>Cell in Row number <doubleQuotes46>+(currentRow.getRowNum()+1)+<doubleQuotes46> is null.<doubleQuotes46>);<newline46mondego>      continue;// continue if row is null..meaning do not go to switch case statement<newline46mondego>                    }<newline46mondego><newline46mondego>            }<newline46mondego>            switch(currentCell.getCellType()){<newline46mondego>         ////you do not want to enter here if currentCell is null<newline46mondego>                //cell doesn't have anything in there}<newline46mondego>"
"4132splitHere46","17618775splitHere46",".rotate()"
"4133splitHere46","17618775splitHere46","public Spatial rotate(float xAngle, float yAngle, float zAngle) {<newline46mondego>    TempVars vars = TempVars.get();<newline46mondego>    Quaternion q = vars.quat1;<newline46mondego>    q.fromAngles(xAngle, yAngle, zAngle);<newline46mondego>    rotate(q);<newline46mondego>    vars.release();<newline46mondego><newline46mondego>    return this;<newline46mondego>}<newline46mondego>"
"4134splitHere46","17618775splitHere46",".rotate(angles)"
"4135splitHere46","17618775splitHere46",".rotate(quaternion)"
"4136splitHere46","17618775splitHere46",".setLocalRotation()"
"4137splitHere46","17618775splitHere46",".rotate(anything)"
"4138splitHere46","17618775splitHere46",".setLocalRotation(anything)"
"4139splitHere46","17618775splitHere46","public Spatial rotate(Quaternion rot) {<newline46mondego>    this.localTransform.getRotation().multLocal(rot);<newline46mondego>    setTransformRefresh();<newline46mondego><newline46mondego>    return this;<newline46mondego>}<newline46mondego>"
"4140splitHere46","17618775splitHere46","public void setLocalRotation(Quaternion quaternion) {<newline46mondego>    localTransform.setRotation(quaternion);<newline46mondego>    setTransformRefresh();<newline46mondego>}<newline46mondego>"
"4141splitHere46","17618775splitHere46",".rotate()"
"4142splitHere46","17618988splitHere46","private short[] byte2short(byte[] buffer) {<newline46mondego>    ByteBuffer bytes = ByteBuffer.wrap(buffer);<newline46mondego>    ShortBuffer shorts = bytes.asShortBuffer();<newline46mondego>    return shorts.array();<newline46mondego>}<newline46mondego>"
"4143splitHere46","17618988splitHere46","asShortBuffer()"
"4144splitHere46","17618988splitHere46","private short[] byte2short(byte[] src) {<newline46mondego>    short[] dest = new short[src.length / 2];<newline46mondego>    ByteBuffer.wrap(src).asShortBuffer().get(dest);<newline46mondego>    return dest;<newline46mondego>}<newline46mondego>"
"4145splitHere46","17619061splitHere46","Map<String, Object>"
"4146splitHere46","17619101splitHere46","import static java.util.Calendar.*;<newline46mondego><newline46mondego>final Calendar cal = Calendar.getInstance();<newline46mondego>cal.setTimeInMillis(yourValue);<newline46mondego>cal.set(HOUR_OF_DAY, 12);<newline46mondego>cal.set(MINUTE, 0);<newline46mondego>cal.set(SECOND, 0);<newline46mondego>cal.set(MILLISECOND, 0);<newline46mondego>// cal.getTimeInMillis() contains the wanted day at 12pm<newline46mondego>cal.add(DAY_OF_YEAR, 1);<newline46mondego>// cal.getTimeInMillis() now contains the wanted day plus one at 12pm<newline46mondego>"
"4147splitHere46","17619101splitHere46","final DateTime dayAt12pm = new DateTime(yourValue).toDateMidnight()<newline46mondego>    .plusHours(12);<newline46mondego>// dayAt12pm.getMillis() contains the wanted day at 12pm<newline46mondego>// next day at 12pm: dayAt12pm.plusDays(1).getMillis()<newline46mondego>"
"4148splitHere46","17619129splitHere46","Calendar currentDateCal = Calendar.getInstance();<newline46mondego>currentDateCal.add(Calendar.YEAR, -10);<newline46mondego>Date currentDate = currentDateCal.getTime(); // bind this currentDate object into your HQL parameter<newline46mondego>"
"4149splitHere46","17619303splitHere46","A.java"
"4150splitHere46","17619303splitHere46","public class A{<newline46mondego>public String t(){return <doubleQuotes46><doubleQuotes46>;}<newline46mondego>}<newline46mondego>"
"4151splitHere46","17619303splitHere46","javac A.java<newline46mondego>"
"4152splitHere46","17619303splitHere46","javap -c A"
"4153splitHere46","17619303splitHere46","Compiled from <doubleQuotes46>A.java<doubleQuotes46><newline46mondego>public class A {<newline46mondego>  public A();<newline46mondego>    Code:<newline46mondego>       0: aload_0       <newline46mondego>       1: invokespecial #1                  // Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>       4: return        <newline46mondego><newline46mondego>  public java.lang.String t();<newline46mondego>    Code:<newline46mondego>       0: ldc           #2                  // String <newline46mondego>       2: areturn       <newline46mondego>}<newline46mondego>"
"4154splitHere46","17619303splitHere46","public A(){}<newline46mondego>"
"4155splitHere46","17619303splitHere46","Compiled from <doubleQuotes46>A.java<doubleQuotes46><newline46mondego>public class A {<newline46mondego>  public A();<newline46mondego>    Code:<newline46mondego>       0: aload_0       <newline46mondego>       1: invokespecial #1                  // Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>       4: return        <newline46mondego><newline46mondego>  public java.lang.String t();<newline46mondego>    Code:<newline46mondego>       0: ldc           #2                  // String <newline46mondego>       2: areturn       <newline46mondego>}<newline46mondego>"
"4156splitHere46","17619384splitHere46","package logic;<newline46mondego>public class Logic {<newline46mondego>boolean AND(boolean A, boolean B) {<newline46mondego>    if (A == true && B == true) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>boolean OR(boolean A, boolean B) {<newline46mondego>    if (A == false && B == false) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>boolean NOT(boolean A) {<newline46mondego>    if (A == true) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>boolean NAND(boolean A, boolean B) {<newline46mondego>    if (A == true && B == true) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>boolean NOR(boolean A, boolean B) {<newline46mondego>    if (A == false && B == false) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>boolean XOR(boolean A, boolean B) {<newline46mondego>    if (A == B) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>boolean XNOR(boolean A, boolean B) {<newline46mondego>    if (A == B) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"4157splitHere46","17619398splitHere46","yourjsonstring = yourjsonstring.replaceAll(<doubleQuotes46>\<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>name<doubleQuotes46>);<newline46mondego>"
"4158splitHere46","17619402splitHere46","InputStream inStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>words.txt<doubleQuotes46>);<newline46mondego>     Scanner in = new Scanner(inStream);<newline46mondego>"
"4159splitHere46","17619512splitHere46","Build Successful"
"4160splitHere46","17619512splitHere46","Finished: Success"
"4161splitHere46","17619512splitHere46","Build Successful"
"4162splitHere46","17619674splitHere46","replaceFirst"
"4163splitHere46","17619674splitHere46","String filePath = correctionDir.getPath().replaceFirst((<doubleQuotes46>Backup<doubleQuotes46> + File.separator + <doubleQuotes46>Corrections<doubleQuotes46> + File.separator).replaceAll(<doubleQuotes46>\<doubleQuotes46>, <doubleQuotes46>\\<doubleQuotes46>), <newline46mondego>        <doubleQuotes46>Data<doubleQuotes46> + File.separator + <doubleQuotes46>Matches<doubleQuotes46> + File.separator);<newline46mondego>"
"4164splitHere46","17619674splitHere46","Pattern"
"4165splitHere46","17619674splitHere46","String original = <doubleQuotes46>Backup<doubleQuotes46> + File.separator + <doubleQuotes46>Corrections<doubleQuotes46> + File.separator;<newline46mondego>int col = correctionDir.indexOf(original);<newline46mondego>String filePath = correctionDir.substring(0, col) + <doubleQuotes46>Data<doubleQuotes46> + File.separator + <doubleQuotes46>Matches<doubleQuotes46> + File.separator + correctionDir.substring(col + original.length());<newline46mondego>"
"4166splitHere46","17619759splitHere46","ProductDAO"
"4167splitHere46","17619759splitHere46","component-scan"
"4168splitHere46","17619759splitHere46","<context:component-scan base-package=<doubleQuotes46>com.myapp.dao<doubleQuotes46> /><newline46mondego>"
"4169splitHere46","17619759splitHere46","test-dao-context.xml"
"4170splitHere46","17619759splitHere46","test-service-context.xml"
"4171splitHere46","17619759splitHere46","test-dao-context.xml"
"4172splitHere46","17619784splitHere46","="
"4173splitHere46","17619968splitHere46","fragmentURI().toString()"
"4174splitHere46","17620203splitHere46","(?:DocumentBuilderFactory|SAXParserFactory)[\s\r\n]+?(\w+)[\s\r\n]*?=[\s\r\n]*?(?:DocumentBuilderFactory|SAXParserFactory)[\.\r\n]+newInstance(?!.*\1(?=[\.\r\n]+(:?setFeature|setExpandEntity)))<newline46mondego>"
"4175splitHere46","17620219splitHere46","jPanelcolor"
"4176splitHere46","17620219splitHere46","pack()"
"4177splitHere46","17620337splitHere46","Payroll"
"4178splitHere46","17620337splitHere46","public Payroll(String name, double weeksPay) {/* some code */}<newline46mondego>"
"4179splitHere46","17620337splitHere46","public Payroll() {/* some */}<newline46mondego>"
"4180splitHere46","17620337splitHere46","String[]"
"4181splitHere46","17620383splitHere46","import java.net.*;<newline46mondego>import java.io.*;<newline46mondego><newline46mondego>public class ChatServer<newline46mondego>{  private Socket          socket   = null;<newline46mondego>   private ServerSocket    server   = null;<newline46mondego>   private DataInputStream streamIn =  null;<newline46mondego><newline46mondego>   public ChatServer(int port)<newline46mondego>   {  try<newline46mondego>      {  <newline46mondego>         System.out.println(<doubleQuotes46>Binding to port <doubleQuotes46> + port + <doubleQuotes46>, please wait  ...<doubleQuotes46>);<newline46mondego>         server = new ServerSocket(port);  <newline46mondego>         System.out.println(<doubleQuotes46>Server started: <doubleQuotes46> + server);<newline46mondego>         System.out.println(<doubleQuotes46>Waiting for a client ...<doubleQuotes46>); <newline46mondego>         socket = server.accept();<newline46mondego>         System.out.println(<doubleQuotes46>Client accepted: <doubleQuotes46> + socket);<newline46mondego>         open();<newline46mondego>         boolean done = false;<newline46mondego>         while (!done)<newline46mondego>         {  try<newline46mondego>            {  String line = streamIn.readUTF();<newline46mondego>               System.out.println(line);<newline46mondego>               done = line.equals(<doubleQuotes46>.bye<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            catch(IOException ioe)<newline46mondego>            {  <newline46mondego>              done = true;<newline46mondego>            }<newline46mondego>         }<newline46mondego>         close();<newline46mondego>      }<newline46mondego>      catch(IOException ioe)<newline46mondego>      {  System.out.println(ioe); <newline46mondego>      }<newline46mondego>  }<newline46mondego>   public void open() throws IOException<newline46mondego>   {  streamIn = new DataInputStream(new BufferedInputStream(socket.getInputStream()));<newline46mondego>   }<newline46mondego>   public void close() throws IOException<newline46mondego>  {  if (socket != null)    socket.close();<newline46mondego>     if (streamIn != null)  streamIn.close();<newline46mondego>  }<newline46mondego>   public static void main(String args[])<newline46mondego>   {  ChatServer server = null;<newline46mondego>      if (args.length != 1)<newline46mondego>         System.out.println(<doubleQuotes46>Usage: java ChatServer port<doubleQuotes46>);<newline46mondego>      else<newline46mondego>         server = new ChatServer(Integer.parseInt(args[0]));<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4182splitHere46","17620416splitHere46","url"
"4183splitHere46","17620416splitHere46","loginUrl"
"4184splitHere46","17620416splitHere46","URL url;<newline46mondego>    url=new URL(<doubleQuotes46>http://mysite/test.php<doubleQuotes46>);<newline46mondego>"
"4185splitHere46","17620416splitHere46","conn=(HttpURLConnection)loginUrl.openConnection();<newline46mondego>"
"4186splitHere46","17620416splitHere46","conn=(HttpURLConnection)url.openConnection();<newline46mondego>"
"4187splitHere46","17620475splitHere46","final ByteArrayOutputStream out = new ByteArrayOutputStream();<newline46mondego>final PrintStream stream = new PrintStream(out);<newline46mondego>System.setOut(stream);<newline46mondego>"
"4188splitHere46","17620475splitHere46",".setErr()"
"4189splitHere46","17620475splitHere46","ByteArrayOutputStream"
"4190splitHere46","17620524splitHere46","web.xml"
"4191splitHere46","17620524splitHere46","javax.ws.rs.core.Application"
"4192splitHere46","17620524splitHere46","@ApplicationPath(<doubleQuotes46>/<doubleQuotes46>)"
"4193splitHere46","17620540splitHere46","String[]"
"4194splitHere46","17620540splitHere46","Map<String, String>"
"4195splitHere46","17620540splitHere46","Contact"
"4196splitHere46","17620540splitHere46","List<Contact>"
"4197splitHere46","17620644splitHere46","java.home"
"4198splitHere46","17620773splitHere46","T extends X"
"4199splitHere46","17620773splitHere46","Action"
"4200splitHere46","17620773splitHere46","public abstract class Action<T extends X> {<newline46mondego>   public abstract void execute(T t);<newline46mondego> }<newline46mondego>"
"4201splitHere46","17620773splitHere46","public class SomeAction extends Action<Y> {<newline46mondego>    ...<newline46mondego> }<newline46mondego>"
"4202splitHere46","17620795splitHere46","class Cave {<newline46mondego>    public ArrayList< Party >                   parties = new ArrayList < Party > ();<newline46mondego>    ...<newline46mondego>    public JTree                                theTree;<newline46mondego>    public DefaultMutableTreeNode               treeRoot = new DefaultMutableTreeNode( <doubleQuotes46>Cave<doubleQuotes46> );<newline46mondego>    ...<newline46mondego><newline46mondego>    public Cave (){//Constructs Cave Object<newline46mondego>        theTree                                            = new JTree( treeRoot );<newline46mondego>    }<newline46mondego>}//End Cave<newline46mondego>"
"4203splitHere46","17620795splitHere46","class Party extends Assets implements SearchableByName {<newline46mondego>    ArrayList < Creature >                  members = new ArrayList < Creature > ();<newline46mondego>    DefaultMutableTreeNode                  pNode;<newline46mondego>    public void addMember ( Creature newMember ) {<newline46mondego>    members.add ( newMember );<newline46mondego>        newMember.cNode = addNode( newMember.getName(), this.pNode );<newline46mondego>        newMember.tNode = addNode( <doubleQuotes46>Treasures<doubleQuotes46>, newMember.cNode );//Each Creature hold Treasures<newline46mondego>        newMember.aNode = addNode( <doubleQuotes46>Artifacts<doubleQuotes46>, newMember.cNode );//Each Creature holds Artifacts<newline46mondego>    }<newline46mondego>    public Party ( String[] x ){//Party Consstructor<newline46mondego>        index =                             Integer.parseInt( x[ 0 ] );<newline46mondego>        name =                              x[ 1 ];<newline46mondego>        pNode =                             addNode( this.getName(), SorcerersCave.theCave.treeRoot );//Creates new Parent node with treeNode as its parent<newline46mondego>    }<newline46mondego>}//End Party<newline46mondego>"
"4204splitHere46","17620795splitHere46","public void addItem ( Treasure newItem ) {<newline46mondego>    inventory.add ( newItem );<newline46mondego>    addNode ( newItem.getType(), tNode );//Add Treasure parent Node labeled <doubleQuotes46>Treasures<doubleQuotes46><newline46mondego>}<newline46mondego>public void addArtifact ( Artifact newItem ) {<newline46mondego>    artifacts.add ( newItem );<newline46mondego>    addNode ( newItem.getName(), aNode );//Add Artifact Node to parent Node labeled <doubleQuotes46>Artifacts<doubleQuotes46><newline46mondego>}<newline46mondego>"
"4205splitHere46","17620814splitHere46","\bgoing(\s+\w+){0,3}\s+work\b<newline46mondego>"
"4206splitHere46","17620814splitHere46","^.*?\\bgoing(\\s+\\w+){0,3}\\s+work\\b.*$<newline46mondego>"
"4207splitHere46","17620814splitHere46","String re = <doubleQuotes46>^.*?\\bgoing(\\s+\\w+){0,3}\\s+work\\b.*$<doubleQuotes46>;<newline46mondego>String str = <doubleQuotes46>I am going one two three work<doubleQuotes46>;<newline46mondego>System.out.printf(<doubleQuotes46>Matches: %s%n<doubleQuotes46>, str.matches(re)); // true<newline46mondego><newline46mondego>str = <doubleQuotes46>I am going one two three four work<doubleQuotes46>;<newline46mondego>System.out.printf(<doubleQuotes46>Matches: %s%n<doubleQuotes46>, str.matches(re)); // false<newline46mondego>"
"4208splitHere46","17620814splitHere46","List<String> verbs = new ArrayList<String>(<newline46mondego>          Arrays.asList(new String[]{<doubleQuotes46>have<doubleQuotes46>, <doubleQuotes46>going<doubleQuotes46>, <doubleQuotes46>leaving<doubleQuotes46>}));<newline46mondego>String[] arr = str.split(<doubleQuotes46>\\s+<doubleQuotes46>); // split words<newline46mondego>int i;<newline46mondego>for (i=0; i<arr.length; i++) { // find word <doubleQuotes46>work<doubleQuotes46> and save the index<newline46mondego>    if (arr[i].equals(<doubleQuotes46>work<doubleQuotes46>))<newline46mondego>        break;<newline46mondego>}<newline46mondego>boolean found = false;<newline46mondego>for (int j=i-1; j>0 && j >= i-4; j--) { // go backwards and search your verbs<newline46mondego>    System.out.printf(<doubleQuotes46>Finding: %s%n<doubleQuotes46>, arr[j]);<newline46mondego>    if (verbs.contains(arr[j])) {<newline46mondego>        found = true; // found it, break now<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>System.out.printf(<doubleQuotes46>Found: %s%n<doubleQuotes46>, found);<newline46mondego>"
"4209splitHere46","17620827splitHere46","TextView _tv = (TextView) findViewById( R.id.textView1 );<newline46mondego>new CountDownTimer(30000, 1000) { // adjust the milli seconds here<newline46mondego><newline46mondego>    public void onTick(long millisUntilFinished) {<newline46mondego>    _tv.setText(<doubleQuotes46><doubleQuotes46>+String.format(<doubleQuotes46>%d min, %d sec<doubleQuotes46>, <newline46mondego>                    TimeUnit.MILLISECONDS.toMinutes( millisUntilFinished),<newline46mondego>                    TimeUnit.MILLISECONDS.toSeconds(millisUntilFinished) - <newline46mondego>                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millisUntilFinished))));<newline46mondego>    }<newline46mondego><newline46mondego>    public void onFinish() {<newline46mondego>       _tv.setText(<doubleQuotes46>done!<doubleQuotes46>);<newline46mondego>    }<newline46mondego> }.start();<newline46mondego>"
"4210splitHere46","17620827splitHere46","_tv.setText(<doubleQuotes46><doubleQuotes46>+String.format(<doubleQuotes46>%d min, %d sec<doubleQuotes46>, <newline46mondego>                    TimeUnit.MILLISECONDS.toMinutes( millisUntilFinished),<newline46mondego>                    TimeUnit.MILLISECONDS.toSeconds(millisUntilFinished) - <newline46mondego>                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millisUntilFinished))));<newline46mondego>"
"4211splitHere46","17620827splitHere46","int seconds = (int) (milliseconds / 1000) % 60 ;<newline46mondego>int minutes = (int) ((milliseconds / (1000*60)) % 60);<newline46mondego>int hours   = (int) ((milliseconds / (1000*60*60)) % 24);<newline46mondego>"
"4212splitHere46","17620827splitHere46","Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);<newline46mondego>            // Vibrate for 500 milliseconds<newline46mondego>            v.vibrate(500);<newline46mondego>  <uses-permission android:name=<doubleQuotes46>android.permission.VIBRATE<doubleQuotes46>/> // permission in manifest<newline46mondego>"
"4213splitHere46","17620827splitHere46","if((TimeUnit.MILLISECONDS.toMinutes( millisUntilFinished)==4) &&<newline46mondego>                    TimeUnit.MILLISECONDS.toSeconds(millisUntilFinished) - <newline46mondego>                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millisUntilFinished))==55)<newline46mondego>            {<newline46mondego><newline46mondego>            Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);<newline46mondego>            // Vibrate for 500 milliseconds<newline46mondego>            v.vibrate(500);<newline46mondego>            }<newline46mondego>"
"4214splitHere46","17621128splitHere46","/myantproject<newline46mondego>    /lib<newline46mondego>    /src<newline46mondego>"
"4215splitHere46","17621128splitHere46","<project name=<doubleQuotes46>antbuild<doubleQuotes46> basedir=<doubleQuotes46>.<doubleQuotes46> default=<doubleQuotes46>gen_hibernate<doubleQuotes46>><newline46mondego><newline46mondego>    <taskdef name=<doubleQuotes46>hibernatetool<doubleQuotes46><newline46mondego>             classname=<doubleQuotes46>org.hibernate.tool.ant.HibernateToolTask<doubleQuotes46>><newline46mondego>        <classpath><newline46mondego>            <fileset dir=<doubleQuotes46>lib<doubleQuotes46>><newline46mondego>                <include name=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego>            </fileset><newline46mondego>        </classpath><newline46mondego>    </taskdef><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>gen_hibernate<doubleQuotes46><newline46mondego>            description=<doubleQuotes46>generate hibernate classes<doubleQuotes46>><newline46mondego>        <hibernatetool><newline46mondego><newline46mondego>            <jdbcconfiguration<newline46mondego>                    configurationfile=<doubleQuotes46>hibernate.cfg.xml<doubleQuotes46><newline46mondego>                    packagename=<doubleQuotes46>com.mycompany.model<doubleQuotes46><newline46mondego>                    detectmanytomany=<doubleQuotes46>true<doubleQuotes46><newline46mondego>                    /><newline46mondego>            <hbm2hbmxml destdir=<doubleQuotes46>src<doubleQuotes46> /><newline46mondego>            <hbm2java  destdir=<doubleQuotes46>src<doubleQuotes46> /><newline46mondego>        </hibernatetool><newline46mondego>    </target><newline46mondego><newline46mondego></project><newline46mondego>"
"4216splitHere46","17621128splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!DOCTYPE hibernate-configuration PUBLIC<newline46mondego>        <doubleQuotes46>-//Hibernate/Hibernate Configuration DTD 3.0//EN<doubleQuotes46><newline46mondego>        <doubleQuotes46>http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd<doubleQuotes46>    ><newline46mondego><hibernate-configuration><newline46mondego>    <session-factory><newline46mondego>        <property name=<doubleQuotes46>hibernate.connection.driver_class<doubleQuotes46>>com.ibm.as400.access.AS400JDBCDriver</property><newline46mondego>        <property name=<doubleQuotes46>hibernate.connection.url<doubleQuotes46>>jdbc:as400://myserver;libraries=MYLIB;dateformat=iso;timeformat=iso;prompt=false;naming=system;transaction isolation=none</property><newline46mondego>        <property name=<doubleQuotes46>hibernate.connection.username<doubleQuotes46>>myuser</property><newline46mondego>        <property name=<doubleQuotes46>hibernate.connection.password<doubleQuotes46>>mypassword</property><newline46mondego>        <property name=<doubleQuotes46>hibernate.dialect<doubleQuotes46>>org.hibernate.dialect.DB2400Dialect</property><newline46mondego>    </session-factory><newline46mondego></hibernate-configuration><newline46mondego>"
"4217splitHere46","17621128splitHere46","<doubleQuotes46>file:///mypath/myantproject/lib/hibernate-configuration-3.0.dtd<doubleQuotes46><newline46mondego>"
"4218splitHere46","17621128splitHere46","cglib-nodep-2.2.3.jar<newline46mondego>commons-collections-3.2.1.jar<newline46mondego>commons-logging-1.1.1.jar<newline46mondego>dom4j-1.6.1.jar<newline46mondego>freemarker-2.3.8.jar<newline46mondego>hibernate-annotations-3.5.0-Final.jar<newline46mondego>hibernate-commons-annotations-4.0.1.Final.jar<newline46mondego>hibernate-configuration-3.0.dtd<newline46mondego>hibernate-core-3.3.1.GA.jar<newline46mondego>hibernate-entitymanager-4.2.0.Final.jar<newline46mondego>hibernate-tools-3.2.3.GA.jar<newline46mondego>jt400-6.6.jar<newline46mondego>jtidy-r938.jar<newline46mondego>log4j-1.2.16.jar<newline46mondego>slf4j-api-1.7.5.jar<newline46mondego>"
"4219splitHere46","17621128splitHere46","hibernate-mapping-3.0.dtd<newline46mondego>hibernate-reverse-engineering-3.0.dtd<newline46mondego>"
"4220splitHere46","17621257splitHere46","2"
"4221splitHere46","17621257splitHere46","1"
"4222splitHere46","17621257splitHere46","OddThread     EvenThread<newline46mondego>----------    ----------<newline46mondego>gets odd<newline46mondego>              gets even<newline46mondego>              prints even<newline46mondego>prints odd<newline46mondego>"
"4223splitHere46","17621693splitHere46","String string = <doubleQuotes46>[444398, 1]<doubleQuotes46>;<newline46mondego>    string = string.substring(1, string.length()-1); //Turns it into <doubleQuotes46>444398, 1<doubleQuotes46><newline46mondego>    String[] stringInArray = string.split(<doubleQuotes46>, <doubleQuotes46>); // Then makes it [<doubleQuotes46>444398<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>]<newline46mondego><newline46mondego>    int[][] temp = new int[4][2];<newline46mondego><newline46mondego>    temp[0][0] = Integer.parseInt(stringInArray[0]);<newline46mondego>    temp[0][1] = Integer.parseInt(stringInArray[1]);<newline46mondego>"
"4224splitHere46","17621760splitHere46","<build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-compiler-plugin</artifactId><newline46mondego>        <configuration><newline46mondego>          <excludes><newline46mondego>            <exclude>**/gwtemul/**</exclude><newline46mondego>          </excludes><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego></build><newline46mondego>"
"4225splitHere46","17621760splitHere46","package org.jbox2d.gwtemul.org.jbox2d.common;<newline46mondego><newline46mondego>/**<newline46mondego> * A GWT-compatible implementation of the platform math utilities.<newline46mondego> */<newline46mondego>class PlatformMathUtils {<newline46mondego><newline46mondego>  public static final float fastPow(float a, float b) {<newline46mondego>    return (float) Math.pow(a, b);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4226splitHere46","17621782splitHere46","File configFile = new File(ProfessionalWarns.getPluginDataFolder(),<newline46mondego>    <doubleQuotes46>config.yml<doubleQuotes46>);<newline46mondego>if (!configFile.exists()) {<newline46mondego>    boolean fileWasCreated = configFile.createNewFile();<newline46mondego>    forceConfigUpdate = true;<newline46mondego>}<newline46mondego>"
"4227splitHere46","17621939splitHere46","catalina.properties"
"4228splitHere46","17621939splitHere46","public static void main(String[] args) throws ServletException, LifecycleException {<newline46mondego>    Tomcat tomcat = new TomcatWithFastJarScanner()<newline46mondego>    tomcat.setPort(8080)<newline46mondego><newline46mondego>    StandardContext ctx = (StandardContext) tomcat.addWebapp(<doubleQuotes46>/<doubleQuotes46>, new File(<doubleQuotes46>web<doubleQuotes46>).getAbsolutePath())<newline46mondego><newline46mondego>    //declare an alternate location for your <doubleQuotes46>WEB-INF/classes<doubleQuotes46> dir:     <newline46mondego>    VirtualDirContext resources = new VirtualDirContext()<newline46mondego>    resources.setExtraResourcePaths(<doubleQuotes46>/WEB-INF/classes=<doubleQuotes46> + new File(<doubleQuotes46>target/classes<doubleQuotes46>))<newline46mondego>    ctx.setResources(resources)<newline46mondego><newline46mondego>    tomcat.start()<newline46mondego>    println <doubleQuotes46>Started server on port 8080<doubleQuotes46><newline46mondego>    tomcat.getServer().await()<newline46mondego>}<newline46mondego><newline46mondego>private static class TomcatWithFastJarScanner extends Tomcat {<newline46mondego>    @Override<newline46mondego>    public void start() throws LifecycleException {<newline46mondego>        getServer().findServices().each { service -><newline46mondego>            service.getContainer().findChildren().each { container -><newline46mondego>                container.findChildren().each { c -><newline46mondego>                    ((Context) c).setJarScanner(new FastJarScanner())<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        super.start()<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>private static class FastJarScanner extends StandardJarScanner {<newline46mondego>    def jarsToInclude = [ 'spring-web.*' ]<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void scan(ServletContext context, ClassLoader classloader,<newline46mondego>            JarScannerCallback callback, Set<String> jarsToSkip) {<newline46mondego>        jarsToSkip = new HashSet<String>();<newline46mondego><newline46mondego>        ((URLClassLoader) classloader.getParent()).getURLs().each {<newline46mondego>            def jar = it.path.find(/[^\/]+\.jar$/)<newline46mondego>            if(!jar) return<newline46mondego>            for(String inclusionPattern : jarsToInclude) {<newline46mondego>                if(jar.find(inclusionPattern))  <newline46mondego>                    println <doubleQuotes46>including jar: <doubleQuotes46> + jar<newline46mondego>                else jarsToSkip.add(jar)<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        super.scan(context, classloader, callback, jarsToSkip);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4229splitHere46","17622052splitHere46","double low"
"4230splitHere46","17622052splitHere46","int"
"4231splitHere46","17622052splitHere46","int low = 0;<newline46mondego>int high = a.length - 1;<newline46mondego>int mid;<newline46mondego>"
"4232splitHere46","17622052splitHere46","double[] a = {-3,10,5,24,45.3,10.5};<newline46mondego>for (int i= 0; i<SIZE ; i++)<newline46mondego>    a[i] = new Integer(i *2);<newline46mondego>"
"4233splitHere46","17622052splitHere46","a"
"4234splitHere46","17622052splitHere46","-3, 10, 5..."
"4235splitHere46","17622052splitHere46","0, 2, 4 ..."
"4236splitHere46","17622052splitHere46","compareTo()"
"4237splitHere46","17622052splitHere46","double"
"4238splitHere46","17622052splitHere46","Double.compare(a[low],x)"
"4239splitHere46","17622077splitHere46","<int:inbound-channel-adapter ref=<doubleQuotes46>loadfruits<doubleQuotes46> method=<doubleQuotes46>loadFruits<doubleQuotes46><newline46mondego>        channel=<doubleQuotes46>outboundComplexChannel<doubleQuotes46>><newline46mondego>    <int:poller cron=<doubleQuotes46>0/5 * * * * *<doubleQuotes46>><newline46mondego></int:inbound-channel-adapter><newline46mondego>"
"4240splitHere46","17622150splitHere46","public void paint(Graphics g)<newline46mondego>{<newline46mondego>    setSize(500,500);<newline46mondego>    Graphics2D g2 = (Graphics2D)g;<newline46mondego>    g2.fill(rect);<newline46mondego>}<newline46mondego>"
"4241splitHere46","17622150splitHere46","paint(Graphics)"
"4242splitHere46","17622150splitHere46","repaint()"
"4243splitHere46","17622150splitHere46","repaint()"
"4244splitHere46","17622150splitHere46","public void paint(Graphics g)<newline46mondego>{<newline46mondego>    super.paint(g); // always call the parent method 1st..<newline46mondego>    Graphics2D g2 = (Graphics2D)g;<newline46mondego>    g2.fill(rect);<newline46mondego>}<newline46mondego>"
"4245splitHere46","17622232splitHere46","-f"
"4246splitHere46","17622232splitHere46","fbx-conv -f model.fbx"
"4247splitHere46","17622232splitHere46","DefaultShader.defaultCullFace = 0;"
"4248splitHere46","17622428splitHere46","activity_main.xml"
"4249splitHere46","17622428splitHere46","@+id/activity_root"
"4250splitHere46","17622428splitHere46","public class MainActivity extends Activity implements ActionBar.TabListener {<newline46mondego><newline46mondego>    private int mFragmentCount;<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>        // Set up the action bar.<newline46mondego>        final ActionBar actionBar = getActionBar();<newline46mondego>        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);<newline46mondego><newline46mondego>        // For each of the sections in the app, add a tab to the action bar.<newline46mondego>        mFragmentCount = 3;<newline46mondego>        for (int i = 0; i < mFragmentCount; i++) {<newline46mondego>            // Create a tab with text Also specify this Activity object, which<newline46mondego>            // implements the TabListener interface, as the callback (listener)<newline46mondego>            // for when this tab is selected.<newline46mondego>            actionBar.addTab(actionBar.newTab().setText(<doubleQuotes46>Tab <doubleQuotes46> + i).setTabListener(this));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>        // Inflate the menu; this adds items to the action bar if it is present.<newline46mondego>        getMenuInflater().inflate(R.menu.main, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onTabSelected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {<newline46mondego>        // Switch fragments<newline46mondego>        // use fragmentTransaction methods with R.id.activity_root for the container id<newline46mondego>        // don't call commit(), it will be called for you<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {}<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onTabReselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {}<newline46mondego>}<newline46mondego>"
"4251splitHere46","17622428splitHere46","<FrameLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    xmlns:tools=<doubleQuotes46>http://schemas.android.com/tools<doubleQuotes46><newline46mondego>    android:id=<doubleQuotes46>@+id/activity_root<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    tools:context=<doubleQuotes46>.MainActivity<doubleQuotes46> /><newline46mondego>"
"4252splitHere46","17622525splitHere46","public static void writeToLog(String inString)<newline46mondego>{<newline46mondego>    File f = new File(<doubleQuotes46>yourFile.txt<doubleQuotes46>);<newline46mondego>    boolean existsFlag = f.exists();<newline46mondego><newline46mondego>    if(!existsFlag)<newline46mondego>    {<newline46mondego>        try {<newline46mondego>            f.createNewFile();<newline46mondego>        } catch (IOException e) {<newline46mondego>            System.out.println(<doubleQuotes46>could not create new log file<doubleQuotes46>);<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    FileWriter fstream;<newline46mondego>    try {<newline46mondego>        fstream = new FileWriter(f, true);<newline46mondego>         BufferedWriter out = new BufferedWriter(fstream);<newline46mondego>         out.write(inString+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>         out.newLine();<newline46mondego>         out.close();<newline46mondego>    } catch (IOException e) {<newline46mondego>        System.out.println(<doubleQuotes46>could not write to the file<doubleQuotes46>);<newline46mondego>        e.printStackTrace();<newline46mondego>    } <newline46mondego><newline46mondego><newline46mondego>    return;<newline46mondego>}<newline46mondego>"
"4253splitHere46","17622752splitHere46","FrameLayout"
"4254splitHere46","17622752splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><FrameLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:id=<doubleQuotes46>@+id/fullscreen_custom_content<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>    android:background=<doubleQuotes46>#FF000000<doubleQuotes46>><newline46mondego>    <FrameLayout<newline46mondego>        android:id=<doubleQuotes46>@+id/main_content<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46>/><newline46mondego>    <WebView<newline46mondego>        android:id=<doubleQuotes46>@+id/webView<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46> /><newline46mondego><newline46mondego></FrameLayout><newline46mondego>"
"4255splitHere46","17622766splitHere46","int"
"4256splitHere46","17622766splitHere46","Person"
"4257splitHere46","17622766splitHere46","public static void loadObject(){<newline46mondego>try{<newline46mondego>  FileInputStream saveFile = new FileInputStream(<doubleQuotes46>Roomcounter.txt<doubleQuotes46>);<newline46mondego>  ObjectInputStream restore = ObjectInputStream(saveFile); //cannot find symbol<newline46mondego>  Person roomCounter = (Person) restore.readObject();<newline46mondego>  int aptA = (int) restore.getAptA();<newline46mondego>  int aptB = (int) restore.getAptB();<newline46mondego>  int aptM = (int) restore.getAptC()();<newline46mondego>  restore.close();<newline46mondego>  }catch(IOException | ClassNotFoundException exc){<newline46mondego>   exc.printStackTrace();<newline46mondego>}<newline46mondego>}<newline46mondego>"
"4258splitHere46","17622833splitHere46","public class Game{<newline46mondego>        Scanner in = new Scanner(System.in);<newline46mondego><newline46mondego>        public void GameSetup(){<newline46mondego>            //insert code here DO NOT CLOSE SCANNER....<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        public void GetScores() {<newline46mondego>            //your code here.........<newline46mondego>            in.close();<newline46mondego>        }<newline46mondego> }<newline46mondego>"
"4259splitHere46","17623009splitHere46","Iterator i = list.iterator();<newline46mondego>while(i.hasNext()) {<newline46mondego>  ....<newline46mondego>}<newline46mondego>"
"4260splitHere46","17623084splitHere46","final"
"4261splitHere46","17623084splitHere46","mNumSides"
"4262splitHere46","17623084splitHere46","final"
"4263splitHere46","17623084splitHere46","final"
"4264splitHere46","17623084splitHere46","mNumSides"
"4265splitHere46","17623084splitHere46","0"
"4266splitHere46","17623084splitHere46","numSides"
"4267splitHere46","17623084splitHere46","volatile"
"4268splitHere46","17623084splitHere46","static"
"4269splitHere46","17623178splitHere46","ArrayList"
"4270splitHere46","17623178splitHere46","ArrayList"
"4271splitHere46","17623178splitHere46","ArrayList"
"4272splitHere46","17623178splitHere46","final"
"4273splitHere46","17623178splitHere46","ArrayList"
"4274splitHere46","17623178splitHere46","ArrayList"
"4275splitHere46","17623229splitHere46","varargs"
"4276splitHere46","17623229splitHere46","doInBackground(<doubleQuotes46>hello<doubleQuotes46>,<doubleQuotes46>world<doubleQuotes46>);<newline46mondego>//you can also do this:<newline46mondego>doInBackground(new String[]{<doubleQuotes46>hello<doubleQuotes46>,<doubleQuotes46>world<doubleQuotes46>});<newline46mondego>"
"4277splitHere46","17623229splitHere46","doInBackground"
"4278splitHere46","17623229splitHere46","params"
"4279splitHere46","17623229splitHere46","for(int i=0;i<params.length;i++){<newline46mondego>    System.out.println(params[i]);<newline46mondego>}<newline46mondego>"
"4280splitHere46","17623229splitHere46","doInBackground"
"4281splitHere46","17623249splitHere46","String chString = new String(myCharArray);<newline46mondego>"
"4282splitHere46","17623378splitHere46","substring"
"4283splitHere46","17623378splitHere46","int offset = table.indexOf(key.substring(i, i + 1));<newline46mondego>"
"4284splitHere46","17623378splitHere46","StringIndexOutOfBoundsException"
"4285splitHere46","17623378splitHere46","IndexOutOfBoundsException"
"4286splitHere46","17623378splitHere46","StringIndexOutOfBoundsException"
"4287splitHere46","17623378splitHere46","IndexOutOfBoundsException"
"4288splitHere46","17623521splitHere46","1. Allocate additional array and copy into - O(n)<newline46mondego>2. Sort additional array - O(n lg n)<newline46mondego>3. Lop off the top k elements (in this case 5) - O(n), since k could be up to n<newline46mondego>4. Iterate over the original array - O(n)<newline46mondego>    4.a search the top k elements for to see if they contain the current element - O(lg n)<newline46mondego>"
"4289splitHere46","17623521splitHere46","class ArrayTest {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        int[] arr = {1, 3, 5, 7, 9, 2, 4, 6, 8, 10};<newline46mondego>        int[] indexes = indexesOfTopElements(arr,3);<newline46mondego>        for(int i = 0; i < indexes.length; i++) {<newline46mondego>            int index = indexes[i];<newline46mondego>            System.out.println(index + <doubleQuotes46> <doubleQuotes46> + arr[index]);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static int[] indexesOfTopElements(int[] orig, int nummax) {<newline46mondego>        int[] copy = Arrays.copyOf(orig,orig.length);<newline46mondego>        Arrays.sort(copy);<newline46mondego>        int[] honey = Arrays.copyOfRange(copy,copy.length - nummax, copy.length);<newline46mondego>        int[] result = new int[nummax];<newline46mondego>        int resultPos = 0;<newline46mondego>        for(int i = 0; i < orig.length; i++) {<newline46mondego>            int onTrial = orig[i];<newline46mondego>            int index = Arrays.binarySearch(honey,onTrial);<newline46mondego>            if(index < 0) continue;<newline46mondego>            result[resultPos++] = i;<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4290splitHere46","17623521splitHere46","int"
"4291splitHere46","17623638splitHere46","final Path src = Paths.get(...);<newline46mondego>final Path dst = Paths.get(...);<newline46mondego>Files.copy(src, dst);<newline46mondego>"
"4292splitHere46","17623638splitHere46","src"
"4293splitHere46","17623638splitHere46","dst"
"4294splitHere46","17623638splitHere46","final BufferedReader reader;<newline46mondego>final BufferedWriter writer;<newline46mondego>String line;<newline46mondego><newline46mondego>try (<newline46mondego>    reader = Files.newBufferedReader(src, StandardCharsets.UTF_8);<newline46mondego>    writer = Files.newBufferedWriter(dst, StandardCharsets.UTF_8);<newline46mondego>) {<newline46mondego>    while ((line = reader.readLine()) != null) {<newline46mondego>        doSomethingWith(line);<newline46mondego>        writer.write(line);<newline46mondego>        // must do this: .readLine() will have stripped line endings<newline46mondego>        writer.newLine();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4295splitHere46","17623768splitHere46","@XmlPath"
"4296splitHere46","17623768splitHere46","StreamReaderDelegate"
"4297splitHere46","17623768splitHere46","package forum17527941;<newline46mondego><newline46mondego>import java.util.Date;<newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>import org.eclipse.persistence.oxm.annotations.*;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Root {<newline46mondego><newline46mondego>    @XmlPath(<doubleQuotes46>s:stackoverflow/s:information/s:date/text()<doubleQuotes46>)<newline46mondego>    @XmlSchemaType(name=<doubleQuotes46>date<doubleQuotes46>)<newline46mondego>    private Date date = new Date();<newline46mondego><newline46mondego>    @XmlPath(<doubleQuotes46>s:stackoverflow/s:information/s:name/text()<doubleQuotes46>)<newline46mondego>    private String name;<newline46mondego><newline46mondego>}<newline46mondego>"
"4298splitHere46","17623768splitHere46","@XmlSchema(<newline46mondego>    namespace=<doubleQuotes46>http://www.example.eu/test<doubleQuotes46>,<newline46mondego>    xmlns={<newline46mondego>        @XmlNs(prefix=<doubleQuotes46>s<doubleQuotes46>, namespaceURI=<doubleQuotes46>http://www.example.eu/test<doubleQuotes46>)<newline46mondego>    },<newline46mondego>    elementFormDefault=XmlNsForm.QUALIFIED)<newline46mondego>package forum17527941;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.*;<newline46mondego>"
"4299splitHere46","17623768splitHere46","package forum17527941;<newline46mondego><newline46mondego>import javax.xml.bind.*;<newline46mondego>import javax.xml.stream.*;<newline46mondego>import javax.xml.stream.util.StreamReaderDelegate;<newline46mondego>import javax.xml.transform.stream.StreamSource;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Root.class);<newline46mondego><newline46mondego>        XMLInputFactory xif = XMLInputFactory.newFactory();<newline46mondego>        StreamSource xml = new StreamSource(<doubleQuotes46>src/forum17527941/input.xml<doubleQuotes46>);<newline46mondego>        XMLStreamReader xsr = xif.createXMLStreamReader(xml);<newline46mondego>        xsr = new StreamReaderDelegate(xsr) {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public String getLocalName() {<newline46mondego>                String localName = super.getLocalName();<newline46mondego>                if(<doubleQuotes46>resource<doubleQuotes46>.equals(localName) || <doubleQuotes46>data<doubleQuotes46>.equals(localName) || <doubleQuotes46>container<doubleQuotes46>.equals(localName)) {<newline46mondego>                    return <doubleQuotes46>stackoverflow<doubleQuotes46>;<newline46mondego>                }<newline46mondego>                return localName;<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        Root root = (Root) unmarshaller.unmarshal(xsr);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION, <doubleQuotes46>http://www.example.eu/test ResourceSchema.xsd<doubleQuotes46>);<newline46mondego>        marshaller.marshal(root, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4300splitHere46","17623768splitHere46","StreamReaderDelegate"
"4301splitHere46","17623768splitHere46","resource"
"4302splitHere46","17623768splitHere46","stackoverflow"
"4303splitHere46","17623768splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><s:root xsi:schemaLocation=<doubleQuotes46>http://www.example.eu/test ResourceSchema.xsd<doubleQuotes46> xmlns:s=<doubleQuotes46>http://www.example.eu/test<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>><newline46mondego>    <s:resource><newline46mondego>        <s:information><newline46mondego>            <s:date>2013-07-04</s:date><newline46mondego>            <s:name>This example does not work</s:name><newline46mondego>        </s:information><newline46mondego>    </s:resource><newline46mondego></s:root><newline46mondego>"
"4304splitHere46","17623768splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><s:root xsi:schemaLocation=<doubleQuotes46>http://www.example.eu/test ResourceSchema.xsd<doubleQuotes46> xmlns:s=<doubleQuotes46>http://www.example.eu/test<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>><newline46mondego>   <s:stackoverflow><newline46mondego>      <s:information><newline46mondego>         <s:date>2013-07-04</s:date><newline46mondego>         <s:name>This example does not work</s:name><newline46mondego>      </s:information><newline46mondego>   </s:stackoverflow><newline46mondego></s:root><newline46mondego>"
"4305splitHere46","17623804splitHere46","Scanner"
"4306splitHere46","17623804splitHere46","next()"
"4307splitHere46","17623804splitHere46","nextLine()"
"4308splitHere46","17623896splitHere46","private String getRealPathFromURI(Uri contentUri) {<newline46mondego>        String[] proj = { MediaStore.Images.Media.DATA };<newline46mondego>        Cursor cursor = managedQuery(contentUri, proj, null, null, null);<newline46mondego>        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);<newline46mondego>        cursor.moveToFirst();<newline46mondego>        return cursor.getString(column_index);<newline46mondego>    }<newline46mondego>"
"4309splitHere46","17623896splitHere46","handleCameraVideo"
"4310splitHere46","17623896splitHere46","private void handleCameraVideo(Intent intent) {<newline46mondego>    Uri mVideoUri = intent.getData();<newline46mondego>    String data = getRealPathFromURI(mVideoUri);<newline46mondego>    File vidFile = new File(data);<newline46mondego> ....<newline46mondego>"
"4311splitHere46","17624076splitHere46","type=<doubleQuotes46>button<doubleQuotes46>"
"4312splitHere46","17624076splitHere46","type=<doubleQuotes46>submit<doubleQuotes46>"
"4313splitHere46","17624076splitHere46","type=<doubleQuotes46>submit<doubleQuotes46>"
"4314splitHere46","17624076splitHere46","type=<doubleQuotes46>button<doubleQuotes46>"
"4315splitHere46","17624211splitHere46","FileInputStream"
"4316splitHere46","17624211splitHere46","FileOutputStream"
"4317splitHere46","17624211splitHere46","ServerSocketchannel"
"4318splitHere46","17624211splitHere46","SocketChannel"
"4319splitHere46","17624211splitHere46","DatagramChannel"
"4320splitHere46","17624211splitHere46","Selector"
"4321splitHere46","17624211splitHere46","non-blocking"
"4322splitHere46","17624211splitHere46","Selector"
"4323splitHere46","17624211splitHere46","Selector"
"4324splitHere46","17624211splitHere46","AsynchronousSocketChannel"
"4325splitHere46","17624211splitHere46","AsynchronousServerSocketChannel"
"4326splitHere46","17624211splitHere46","AsynchronousFileChannel"
"4327splitHere46","17624211splitHere46","True readiness selection must be done by the operating system. One of the most important functions performed by an operating system is to handle I/O requests and notify processes when their data is ready. So it only makes sense to delegate this function down to the operating system. The Selector class provides the abstraction by which Java code can request readiness selection service from the underlying operating system in a portable way."
"4328splitHere46","17624225splitHere46","add"
"4329splitHere46","17624225splitHere46","offer"
"4330splitHere46","17624225splitHere46","enqueue"
"4331splitHere46","17624382splitHere46","dayNumber"
"4332splitHere46","17624382splitHere46","monthNumber"
"4333splitHere46","17624382splitHere46","tinyInt"
"4334splitHere46","17624382splitHere46","char"
"4335splitHere46","17624382splitHere46","Char(4)"
"4336splitHere46","17624478splitHere46","BigDecimal bd1 = new BigDecimal(string);<newline46mondego>BigDecimal bd2 = new BigDecimal(string2);<newline46mondego><newline46mondego>Bigdecimal result = bd1.multiply(bd2);<newline46mondego>System.out.println(result.toString());<newline46mondego>"
"4337splitHere46","17624516splitHere46","Filters tran= new Filters(names);<newline46mondego>"
"4338splitHere46","17624516splitHere46","Filters"
"4339splitHere46","17624516splitHere46","Filters tran = new SWordFilter();<newline46mondego>"
"4340splitHere46","17624516splitHere46","java.util.List"
"4341splitHere46","17624516splitHere46","java.util.ArrayList"
"4342splitHere46","17624516splitHere46","java.util.LinkedList"
"4343splitHere46","17624516splitHere46","List"
"4344splitHere46","17624692splitHere46","+f(short x): int; +f(String x): int;"
"4345splitHere46","17624692splitHere46","f(double)"
"4346splitHere46","17624792splitHere46","user_country.selectByIndex(new Random().nextInt(user_country.getOptions().size()));<newline46mondego>"
"4347splitHere46","17624816splitHere46","import javax.swing.*;<newline46mondego>import javax.swing.border.BevelBorder;<newline46mondego>import javax.swing.event.*;<newline46mondego>import javax.swing.table.*;<newline46mondego><newline46mondego>public class ExpenditurePanel extends JPanel implements TableModelListener {<newline46mondego><newline46mondego>   private static final long serialVersionUID = 1L;<newline46mondego>   private static TableModel1 model;<newline46mondego>   private JTable table;<newline46mondego><newline46mondego>   public ExpenditurePanel() {<newline46mondego>      model = new TableModel1();<newline46mondego>      table = new JTable(model);<newline46mondego>      table.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null,<newline46mondego>            null));<newline46mondego>      table.setRowSelectionAllowed(false);<newline46mondego>      table.setFillsViewportHeight(true);<newline46mondego>      table.setCellSelectionEnabled(true);<newline46mondego>      table.setColumnSelectionAllowed(false);<newline46mondego><newline46mondego>      model.addColumn(<doubleQuotes46>Name<doubleQuotes46>);<newline46mondego>      model.addColumn(<doubleQuotes46>Week<doubleQuotes46>);<newline46mondego>      model.addColumn(<doubleQuotes46>Fortnight<doubleQuotes46>);<newline46mondego>      model.addColumn(<doubleQuotes46>Month<doubleQuotes46>);<newline46mondego>      model.addColumn(<doubleQuotes46>Year<doubleQuotes46>);<newline46mondego>      model.addColumn(<doubleQuotes46>Remove<doubleQuotes46>);<newline46mondego><newline46mondego>      Object[] default1 = { <doubleQuotes46>Accomodation<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, false };<newline46mondego>      Object[] default2 = { <doubleQuotes46>Food<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, false };<newline46mondego><newline46mondego>      model.addRow(default1);<newline46mondego>      model.addRow(default2);<newline46mondego><newline46mondego>      model.addTableModelListener(this);<newline46mondego><newline46mondego>      this.add(new JScrollPane(table));<newline46mondego>      table.setRowSorter(null);<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>   public static TableModel1 getModel() {<newline46mondego>      return model;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public void tableChanged(TableModelEvent e) {<newline46mondego>      int row = e.getFirstRow();<newline46mondego>      int column = e.getColumn();<newline46mondego><newline46mondego>      // **** printf added below<newline46mondego>      System.out.printf(<doubleQuotes46>[row: %d, column: %d]%n<doubleQuotes46>, row, column);<newline46mondego><newline46mondego>      model = (TableModel1) e.getSource();<newline46mondego><newline46mondego>      String columnName = model.getColumnName(column);<newline46mondego><newline46mondego>      // **** println added below<newline46mondego>      System.out.println(<doubleQuotes46>columnName: <doubleQuotes46> + columnName);<newline46mondego><newline46mondego>      Object data = model.getValueAt(row, column);<newline46mondego><newline46mondego>      if (model.getValueAt(row, column) == Boolean.TRUE) {<newline46mondego>         System.out.println(<doubleQuotes46>Condition working<doubleQuotes46>);<newline46mondego><newline46mondego>         // *** AIOOBE called here<newline46mondego>         model.removeRow(row);<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            ExpenditurePanel panel = new ExpenditurePanel();<newline46mondego>            JFrame frame = new JFrame(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            frame.getContentPane().add(panel);<newline46mondego>            frame.setLocationRelativeTo(null);<newline46mondego>            frame.pack();<newline46mondego>            frame.setVisible(true);<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>// **** no idea how close this is to your code *****<newline46mondego>class TableModel1 extends DefaultTableModel {<newline46mondego>   @Override<newline46mondego>   public Class<?> getColumnClass(int columnIndex) {<newline46mondego>      if (getRowCount() == 0) {<newline46mondego>         return super.getColumnClass(columnIndex);<newline46mondego>      }<newline46mondego>      Object value = getValueAt(0, columnIndex);<newline46mondego>      if (value == null) {<newline46mondego>         return super.getColumnClass(columnIndex);<newline46mondego>      }<newline46mondego><newline46mondego>      return value.getClass();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4348splitHere46","17624816splitHere46","[row: 0, column: 5]<newline46mondego>columnName: Remove<newline46mondego>Condition working<newline46mondego>[row: 0, column: -1]<newline46mondego>columnName: <newline46mondego>Exception in thread <doubleQuotes46>AWT-EventQueue-0<doubleQuotes46> java.lang.ArrayIndexOutOfBoundsException: -1<newline46mondego>    at java.util.Vector.elementAt(Unknown Source)<newline46mondego>    ...... etc ......<newline46mondego>"
"4349splitHere46","17624816splitHere46","tableChanged(...)"
"4350splitHere46","17624816splitHere46","public void tableChanged(TableModelEvent e) {<newline46mondego>  int row = e.getFirstRow();<newline46mondego>  int column = e.getColumn();<newline46mondego>  System.out.printf(<doubleQuotes46>[row: %d, column: %d]%n<doubleQuotes46>, row, column);<newline46mondego>  model = (TableModel1) e.getSource();<newline46mondego>  String columnName = model.getColumnName(column);<newline46mondego>  System.out.println(<doubleQuotes46>columnName: <doubleQuotes46> + columnName);<newline46mondego>  Object data = model.getValueAt(row, column);<newline46mondego><newline46mondego>  if (model.getValueAt(row, column) == Boolean.TRUE) {<newline46mondego>     System.out.println(<doubleQuotes46>Condition working<doubleQuotes46>);<newline46mondego><newline46mondego>     model.removeTableModelListener(this);<newline46mondego>     model.removeRow(row);<newline46mondego>     model.addTableModelListener(this);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4351splitHere46","17624842splitHere46","private void executeWithLogin(Runnable r) {<newline46mondego>    try {<newline46mondego>        r.run();<newline46mondego>    } <newline46mondego>    catch (Exception e) {<newline46mondego>        if (e.getExceptionCode == INVALID_SESSION_ID) {<newline46mondego>            //login again<newline46mondego>            login();<newline46mondego>            //retry on specific code<newline46mondego>            r.run();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void create(final SObject[] s){<newline46mondego>    executeWithLogin(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            binding.create(s);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>// same for other operations<newline46mondego>"
"4352splitHere46","17624842splitHere46","public void create(SObject[] s){<newline46mondego>    executeWithLogin(() -> binding.create(s));<newline46mondego>}<newline46mondego>"
"4353splitHere46","17624851splitHere46","1,2,3,5,8,13,21"
"4354splitHere46","17624851splitHere46","0 .. n"
"4355splitHere46","17624851splitHere46","int[] mapping = { 1,2,3,5,8,13,21 };<newline46mondego>"
"4356splitHere46","17624851splitHere46","class Pair {<newline46mondego>    int a;<newline46mondego>    int b;<newline46mondego>    Pair(int a, int b) { this.a = a; this.b = b; }<newline46mondego>    public boolean equals(Object o) {<newline46mondego>        if(o instanceof Pair) {<newline46mondego>            Pair p = (Pair)o;<newline46mondego>            if(a == p.a && b == p.b) return true;<newline46mondego>            // check reverse, as per comment from @Chance<newline46mondego>            if(a == p.b && b == p.a) return true;<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    // poor hashcode, for sure, but we need hash(a,b) == hash(b,a)...<newline46mondego>    public int hashCode() { return a ^ b; }<newline46mondego>}<newline46mondego>"
"4357splitHere46","17624851splitHere46","Random rand = new Random(); // in the class or something?<newline46mondego>Set<Pair> generatePairs(int[] alphabet, int num) {<newline46mondego>    Set<Pair> set = new HashSet<>();<newline46mondego>    int size = alphabet.length * alphabet.length; // pretend it's a matrix <newline46mondego>    while(set.size() < num) {<newline46mondego>        int both = random.nextInt(size); // only works up to alphabet.length < 2^15<newline46mondego>        int apos = both % alphabet.length;<newline46mondego>        int bpos = both / alphabet.length;<newline46mondego>        int a = alphabet[a];<newline46mondego>        int b = alphabet[b];<newline46mondego>        Pair pair = new Pair(a,b);<newline46mondego>        set.add(pair);<newline46mondego>    }<newline46mondego>    return set;<newline46mondego>}<newline46mondego>"
"4358splitHere46","17624851splitHere46","c:\files\j>java Uniques<newline46mondego>Pair (5,5)<newline46mondego>Pair (13,13)<newline46mondego>Pair (7,7)<newline46mondego>Pair (17,19)<newline46mondego>Pair (7,2)<newline46mondego>Pair (17,23)<newline46mondego>Pair (11,3)<newline46mondego>Pair (23,29)<newline46mondego>Pair (29,17)<newline46mondego>Pair (11,5)<newline46mondego>Pair (19,2)<newline46mondego>Pair (13,29)<newline46mondego>Pair (3,17)<newline46mondego>Pair (23,5)<newline46mondego>Pair (2,23)<newline46mondego>Pair (7,19)<newline46mondego>Pair (5,19)<newline46mondego>Pair (29,5)<newline46mondego>Pair (13,17)<newline46mondego>Pair (13,19)<newline46mondego>"
"4359splitHere46","17624851splitHere46","import java.util.*;<newline46mondego>class Uniques {<newline46mondego><newline46mondego>    static class Pair {<newline46mondego>        int a;<newline46mondego>        int b;<newline46mondego>        Pair(int a, int b) { this.a = a; this.b = b; }<newline46mondego>        public boolean equals(Object o) {<newline46mondego>            if(o instanceof Pair) {<newline46mondego>                Pair p = (Pair)o;<newline46mondego>                if(a == p.a && b == p.b) return true;<newline46mondego>                // check reverse, as per comment from @Chance<newline46mondego>                if(a == p.b && b == p.a) return true;<newline46mondego>            }<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        // poor hashcode, for sure, but we need hash(a,b) == hash(b,a)...<newline46mondego>        public int hashCode() { return a ^ b; }<newline46mondego>        public String toString() { return <doubleQuotes46>Pair (<doubleQuotes46> + a + <doubleQuotes46>,<doubleQuotes46> + b + <doubleQuotes46>)<doubleQuotes46>; }<newline46mondego>    }<newline46mondego><newline46mondego>    static Random rand = new Random(); // in the class or something?<newline46mondego>    static Set<Pair> generatePairs(int[] alphabet, int num) {<newline46mondego>        Set<Pair> set = new HashSet<Pair>();<newline46mondego>        int size = alphabet.length * alphabet.length; // pretend it's a matrix <newline46mondego>        while(set.size() < num) {<newline46mondego>            int both = rand.nextInt(size); // only works up to alphabet.length < 2^15<newline46mondego>            int apos = both % alphabet.length;<newline46mondego>            int bpos = both / alphabet.length;<newline46mondego>            int a = alphabet[apos];<newline46mondego>            int b = alphabet[bpos];<newline46mondego>            Pair pair = new Pair(a,b);<newline46mondego>            set.add(pair);<newline46mondego>        }<newline46mondego>        return set;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String...args) {<newline46mondego>        int[] nums = new int[10];<newline46mondego>        int p = 2;<newline46mondego>        // seed with prime numbers up to 10000<newline46mondego>        for(int i = 0; i < nums.length; i++) {<newline46mondego>            while(!isPrime(p)) p++;<newline46mondego>            nums[i] = p++;<newline46mondego>        }<newline46mondego>        // just double checking I don't suck at isPrime() haha<newline46mondego>        //for(int i : nums) System.out.println(i);<newline46mondego><newline46mondego>        // okay we have our numbers, now let's get some stuff out of them<newline46mondego>        Set<Pair> pairs = generatePairs(nums, 20);<newline46mondego>        for(Pair pair : pairs) System.out.println(pair);<newline46mondego>    }<newline46mondego><newline46mondego>    public static boolean isPrime(int p) {<newline46mondego>        if(p == 2) return true;<newline46mondego>        if(p % 2 == 0) return false;<newline46mondego>        int q = (int)(Math.sqrt(p) + 1);<newline46mondego>        for(int i = 3; i < q; i +=2) {<newline46mondego>            if(p % i == 0) return false;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4360splitHere46","17624932splitHere46","cd"
"4361splitHere46","17624932splitHere46","ls -l"
"4362splitHere46","17624932splitHere46","touch mytestfile"
"4363splitHere46","17625284splitHere46","<doubleQuotes46>\\s{3,}<doubleQuotes46>"
"4364splitHere46","17625284splitHere46","if(columns.length == 3)<newline46mondego>    // Assign your values<newline46mondego>else<newline46mondego>    // Log error in reading<newline46mondego>"
"4365splitHere46","17625410splitHere46","RequiresResize"
"4366splitHere46","17625410splitHere46","ProvidesResize"
"4367splitHere46","17625410splitHere46","DockLayoutPanel"
"4368splitHere46","17625410splitHere46","ResizeComposite"
"4369splitHere46","17625410splitHere46","Composite"
"4370splitHere46","17625410splitHere46","RootLayoutPanel"
"4371splitHere46","17625410splitHere46","RootPanel"
"4372splitHere46","17625410splitHere46","RequiresResize"
"4373splitHere46","17625410splitHere46","ProvidesResize"
"4374splitHere46","17625636splitHere46","TextView"
"4375splitHere46","17625636splitHere46","isUiVisible"
"4376splitHere46","17625636splitHere46","onPause()"
"4377splitHere46","17625636splitHere46","AsyncTask"
"4378splitHere46","17625636splitHere46","doInBackground"
"4379splitHere46","17625636splitHere46","onPostExecute"
"4380splitHere46","17625636splitHere46","TextView"
"4381splitHere46","17625636splitHere46","publihProgress()"
"4382splitHere46","17625636splitHere46","doInBackground"
"4383splitHere46","17625636splitHere46","onProgressUpdate"
"4384splitHere46","17625636splitHere46","TextView"
"4385splitHere46","17625646splitHere46","class OrderManager {<newline46mondego>   private OrderDAO oDao;<newline46mondego>   private NotificationDao nDao;<newline46mondego><newline46mondego>   public saveOrder(OrderDTO o) {<newline46mondego>      Long orderId = oDao.save(o);<newline46mondego>      NotificationDTO n = new NotificationDTO();<newline46mondego>      n.setType(NotificationType.ORDER_CREATED);<newline46mondego>      n.setEntityId(orderId);<newline46mondego>      nDao.save(n);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4386splitHere46","17625659splitHere46","WsRpcServer<T>"
"4387splitHere46","17625659splitHere46","Class"
"4388splitHere46","17625659splitHere46","T"
"4389splitHere46","17625688splitHere46","class Product {<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>        // getters/setters/toString<newline46mondego>}<newline46mondego>"
"4390splitHere46","17625688splitHere46","class Entity {<newline46mondego><newline46mondego>    private long id;<newline46mondego><newline46mondego>    // getters/setters/toString<newline46mondego>}<newline46mondego>"
"4391splitHere46","17625688splitHere46","Product"
"4392splitHere46","17625688splitHere46","{<newline46mondego>  <doubleQuotes46>typeToClassId<doubleQuotes46> : 33,<newline46mondego>  <doubleQuotes46>obj<doubleQuotes46> : {<newline46mondego>    <doubleQuotes46>name<doubleQuotes46> : <doubleQuotes46>Computer<doubleQuotes46><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4393splitHere46","17625688splitHere46","Entity"
"4394splitHere46","17625688splitHere46","{<newline46mondego>  <doubleQuotes46>typeToClassId<doubleQuotes46> : 45,<newline46mondego>  <doubleQuotes46>obj<doubleQuotes46> : {<newline46mondego>    <doubleQuotes46>id<doubleQuotes46> : 10<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4395splitHere46","17625688splitHere46","FAIL_ON_UNKNOWN_PROPERTIES"
"4396splitHere46","17625688splitHere46","ObjectMapper"
"4397splitHere46","17625688splitHere46","typeToClassId"
"4398splitHere46","17625688splitHere46","obj"
"4399splitHere46","17625688splitHere46","class HeaderType {<newline46mondego><newline46mondego>    private int typeToClassId;<newline46mondego><newline46mondego>    public int getTypeToClassId() {<newline46mondego>        return typeToClassId;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTypeToClassId(int typeToClassId) {<newline46mondego>        this.typeToClassId = typeToClassId;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>HeaderType [typeToClassId=<doubleQuotes46> + typeToClassId + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class HeaderObject<T> {<newline46mondego><newline46mondego>    private T obj;<newline46mondego><newline46mondego>    public T getObj() {<newline46mondego>        return obj;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setObj(T obj) {<newline46mondego>        this.obj = obj;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>HeaderObject [obj=<doubleQuotes46> + obj + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4400splitHere46","17625688splitHere46","// Simple binding<newline46mondego>Map<Integer, Class<?>> classResolverMap = new HashMap<Integer, Class<?>>();<newline46mondego>classResolverMap.put(33, Product.class);<newline46mondego>classResolverMap.put(45, Entity.class);<newline46mondego><newline46mondego>ObjectMapper mapper = new ObjectMapper();<newline46mondego>mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);<newline46mondego><newline46mondego>String json = <doubleQuotes46>{...}<doubleQuotes46>;<newline46mondego><newline46mondego>// Parse type<newline46mondego>HeaderType headerType = mapper.readValue(json, HeaderType.class);<newline46mondego>// Retrieve class by integer value<newline46mondego>Class<?> clazz = classResolverMap.get(headerType.getTypeToClassId());<newline46mondego>// Create dynamic type<newline46mondego>JavaType type = mapper.getTypeFactory().constructParametricType(HeaderObject.class, clazz);<newline46mondego>// Parse object<newline46mondego>HeaderObject<?> headerObject = (HeaderObject<?>) mapper.readValue(json, type);<newline46mondego>// Get the object<newline46mondego>Object result = headerObject.getObj();<newline46mondego><newline46mondego>System.out.println(result);<newline46mondego>"
"4401splitHere46","17625786splitHere46","missingVar"
"4402splitHere46","17625786splitHere46","public void setMissingVar(String missingVar) {<newline46mondego>  this.missingVar = missingVar;<newline46mondego>}<newline46mondego>"
"4403splitHere46","17625867splitHere46","android.os.Process.killProcess(android.os.Process.myPid());<newline46mondego>"
"4404splitHere46","17625898splitHere46","import com.fasterxml.jackson.annotation.JsonSetter;<newline46mondego>import com.fasterxml.jackson.databind.ObjectMapper;<newline46mondego><newline46mondego>public class JacksonProgram {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        ObjectMapper mapper = new ObjectMapper();<newline46mondego>        System.out.println(mapper.readValue(<doubleQuotes46>{\<doubleQuotes46>Cep\<doubleQuotes46>:\<doubleQuotes46>value\<doubleQuotes46>}<doubleQuotes46>, Entity.class));<newline46mondego>        System.out.println(mapper.readValue(<doubleQuotes46>{\<doubleQuotes46>CEP\<doubleQuotes46>:\<doubleQuotes46>value\<doubleQuotes46>}<doubleQuotes46>, Entity.class));<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Entity {<newline46mondego><newline46mondego>    private String cep;<newline46mondego><newline46mondego>    public String getCep() {<newline46mondego>        return cep;<newline46mondego>    }<newline46mondego><newline46mondego>    @JsonSetter(<doubleQuotes46>Cep<doubleQuotes46>)<newline46mondego>    public void setCep(String cep) {<newline46mondego>        this.cep = cep;<newline46mondego>    }<newline46mondego><newline46mondego>    @JsonSetter(<doubleQuotes46>CEP<doubleQuotes46>)<newline46mondego>    public void setCepCapitalized(String cep) {<newline46mondego>        this.cep = cep;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>Entity [cep=<doubleQuotes46> + cep + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4405splitHere46","17625932splitHere46","nextInt"
"4406splitHere46","17625932splitHere46","int rNum=randomGenerator.nextInt(100);<newline46mondego><newline46mondego>String newimagename =Integer.toString(rNum)+<doubleQuotes46>.jpg<doubleQuotes46>;<newline46mondego>"
"4407splitHere46","17625989splitHere46","File dir = new File(<doubleQuotes46>C://SnippingTool+/<doubleQuotes46> +  date.getDay());<newline46mondego>dir.mkdirs();<newline46mondego>"
"4408splitHere46","17625989splitHere46","ImageIO"
"4409splitHere46","17625989splitHere46","File output = new File(<doubleQuotes46>C://SnippingTool+/<doubleQuotes46> +  date.getDay() + <doubleQuotes46>.jpg<doubleQuotes46>);<newline46mondego>File dir = output.getParentFile();<newline46mondego>if (dir.exists() || dir.mkdirs()) {<newline46mondego>    try {<newline46mondego>        ImageIO.write(shot, <doubleQuotes46>JPG<doubleQuotes46>, output);<newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }    <newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>Bad Path - <doubleQuotes46> + dir);<newline46mondego>}<newline46mondego>"
"4410splitHere46","17626072splitHere46","e.printStackTrace( System.out)"
"4411splitHere46","17626083splitHere46","mp.start();<newline46mondego>"
"4412splitHere46","17626083splitHere46","start1"
"4413splitHere46","17626083splitHere46","onPrepared"
"4414splitHere46","17626306splitHere46","Object.hashcode()"
"4415splitHere46","17626306splitHere46","HashSet"
"4416splitHere46","17626306splitHere46","HashMap"
"4417splitHere46","17626306splitHere46","hashcode()"
"4418splitHere46","17626306splitHere46","strictfp"
"4419splitHere46","17626593splitHere46","array[x][y] = value;<newline46mondego>"
"4420splitHere46","17626593splitHere46","array[x][y];<newline46mondego>System.out.println(array[x][y]); // as an example<newline46mondego>"
"4421splitHere46","17626600splitHere46","//code from PhiLho at:<newline46mondego>//http://forum.processing.org/topic/how-can-i-get-html-error-description-from-server-when-loading-xml<newline46mondego><newline46mondego>import java.net.*;<newline46mondego>import java.io.*;<newline46mondego>String url1 = <doubleQuotes46>http://www.camara.gov.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?sigla=PL&numero=&ano=1960&datApresentacaoIni=&datApresentacaoFim=&parteNomeAutor=&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&IdSituacaoProposicao=&IdOrgaoSituacaoProposicao=&&codEstado=&codOrgaoEstado=&emTramitacao=<doubleQuotes46>;<newline46mondego>String url2 = <doubleQuotes46>http://Processing.org<doubleQuotes46>;<newline46mondego>// With information frm http://stackoverflow.com/questions/4596447/java-check-if-file-exists-on-remote-server-using-its-url<newline46mondego>URL url = null;<newline46mondego>try<newline46mondego>{<newline46mondego>  url = new URL(url1);<newline46mondego>}<newline46mondego>catch (MalformedURLException e)<newline46mondego>{<newline46mondego>  println(<doubleQuotes46>Error in URL <doubleQuotes46> + e);<newline46mondego>  exit();<newline46mondego>}<newline46mondego><newline46mondego>HttpURLConnection connection = null;<newline46mondego>try<newline46mondego>{<newline46mondego>  connection = (HttpURLConnection) url.openConnection();<newline46mondego>  connection.setRequestMethod(<doubleQuotes46>GET<doubleQuotes46>);<newline46mondego>  int code = connection.getResponseCode();<newline46mondego>  if (code != HttpURLConnection.HTTP_OK)<newline46mondego>  {<newline46mondego>    println(<doubleQuotes46>Answer: <doubleQuotes46> + code + <doubleQuotes46> - <doubleQuotes46> + connection.getResponseMessage());<newline46mondego>    InputStream error = connection.getErrorStream();<newline46mondego>    if (error != null)<newline46mondego>    {<newline46mondego>      println(<doubleQuotes46>Error response:<doubleQuotes46>);<newline46mondego>      String[] lines = loadStrings(error);<newline46mondego>      println(lines);<newline46mondego>      error.close();<newline46mondego>    }<newline46mondego>    println(<doubleQuotes46>Error header:<doubleQuotes46>);<newline46mondego>    String field = null;<newline46mondego>    int i = 0;<newline46mondego>    do<newline46mondego>    {<newline46mondego>      field = connection.getHeaderField(i);<newline46mondego>      String key = connection.getHeaderFieldKey(i);<newline46mondego>      if (field != null)<newline46mondego>      {<newline46mondego>        println(<doubleQuotes46>Header <doubleQuotes46> + i + <doubleQuotes46>: <doubleQuotes46> + (key == null ? <doubleQuotes46><doubleQuotes46> : key + <doubleQuotes46>=<doubleQuotes46>) + field);<newline46mondego>      }<newline46mondego>      i++;<newline46mondego>    } while (field != null);<newline46mondego>    println(<doubleQuotes46>End in error<doubleQuotes46>);<newline46mondego>    exit();<newline46mondego>  }<newline46mondego>}<newline46mondego>catch (IOException e)<newline46mondego>{<newline46mondego>  println(<doubleQuotes46>Error in I/O <doubleQuotes46> + e);<newline46mondego>  exit();<newline46mondego>}<newline46mondego>println(<doubleQuotes46>Correct data:<doubleQuotes46>);<newline46mondego>InputStream input = null;<newline46mondego>try<newline46mondego>{<newline46mondego>  connection = (HttpURLConnection) url.openConnection();<newline46mondego>  connection.setRequestMethod(<doubleQuotes46>GET<doubleQuotes46>);<newline46mondego>  input = connection.getInputStream();<newline46mondego>  String[] lines = loadStrings(input);<newline46mondego>  println(lines);<newline46mondego>}<newline46mondego>catch (IOException e)<newline46mondego>{<newline46mondego>  println(<doubleQuotes46>Error <doubleQuotes46> + e);<newline46mondego>}<newline46mondego>finally<newline46mondego>{<newline46mondego>  if (input != null)<newline46mondego>  {<newline46mondego>    try { input.close(); } catch (IOException e) {}<newline46mondego>  }<newline46mondego>}<newline46mondego>exit();<newline46mondego>"
"4422splitHere46","17626622splitHere46","c = c + 1<newline46mondego>"
"4423splitHere46","17626622splitHere46","foo"
"4424splitHere46","17626622splitHere46","c"
"4425splitHere46","17626622splitHere46","print c<newline46mondego>"
"4426splitHere46","17626622splitHere46","c"
"4427splitHere46","17626622splitHere46","main"
"4428splitHere46","17626622splitHere46","c"
"4429splitHere46","17626622splitHere46","public class Test1 {<newline46mondego><newline46mondego>    static int a = 1;<newline46mondego>    static int b = 2;<newline46mondego>    static int c = 3;<newline46mondego><newline46mondego>    public static void foo() {<newline46mondego>        int c; // Now c is local, like in the Python<newline46mondego>        System.out.println(a);<newline46mondego>        System.out.println(b);<newline46mondego>        System.out.println(c);<newline46mondego>        c = c + 1;<newline46mondego>    }   <newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        foo();<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"4430splitHere46","17626628splitHere46","tempValue = Float.parseFloat(args[1].substring(0, scaleIndex));<newline46mondego>"
"4431splitHere46","17626628splitHere46","scaleIndex = args[1].indexOf('F');<newline46mondego>"
"4432splitHere46","17626728splitHere46","document<newline46mondego>"
"4433splitHere46","17626773splitHere46","pack()"
"4434splitHere46","17626773splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.GridLayout;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class GapExample {<newline46mondego>   private static final int M = 5;<newline46mondego>   private static final int N = 6;<newline46mondego>   private static final int PREF_W = 700;<newline46mondego>   private static final int PREF_H = 500;<newline46mondego><newline46mondego>   @SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>   private static void createAndShowGui() {<newline46mondego><newline46mondego>      // *** attempt 1: set preferredSize of the mainPanel JPanel ***<newline46mondego>      JPanel mainPanel = new JPanel(new GridLayout(M, N));<newline46mondego>      mainPanel.setBorder(BorderFactory.createLineBorder(Color.red));<newline46mondego>      mainPanel.setPreferredSize(new Dimension(PREF_W, PREF_H));<newline46mondego><newline46mondego>      for (int i = 0; i < M; i++) {<newline46mondego>         for (int j = 0; j < N; j++) {<newline46mondego>            String text = String.format(<doubleQuotes46>Foo [%d, %d]<doubleQuotes46>, i, j);<newline46mondego>            JLabel label = new JLabel(text, SwingConstants.CENTER);<newline46mondego>            label.setBorder(BorderFactory.createLineBorder(Color.blue));<newline46mondego>            mainPanel.add(label);<newline46mondego>         }<newline46mondego>      }<newline46mondego>      JOptionPane.showMessageDialog(null, mainPanel,<newline46mondego>            <doubleQuotes46>Attempt 1, setPreferredSize of mainPane<doubleQuotes46>,<newline46mondego>            JOptionPane.PLAIN_MESSAGE);<newline46mondego><newline46mondego>      // *** attempt 2: override the getPreferredSize of the JLabel cells in the<newline46mondego>      // grid ***<newline46mondego>      mainPanel = new JPanel(new GridLayout(M, N));<newline46mondego>      mainPanel.setBorder(BorderFactory.createLineBorder(Color.red));<newline46mondego>      final Dimension labelPrefSize = new Dimension(PREF_W / N, PREF_H / M);<newline46mondego>      for (int i = 0; i < M; i++) {<newline46mondego>         for (int j = 0; j < N; j++) {<newline46mondego>            String text = String.format(<doubleQuotes46>Foo [%d, %d]<doubleQuotes46>, i, j);<newline46mondego>            JLabel label = new JLabel(text, SwingConstants.CENTER) {<newline46mondego>               @Override<newline46mondego>               public Dimension getPreferredSize() {<newline46mondego>                  return labelPrefSize;<newline46mondego>               }<newline46mondego>            };<newline46mondego>            label.setBorder(BorderFactory.createLineBorder(Color.blue));<newline46mondego>            mainPanel.add(label);<newline46mondego>         }<newline46mondego>      }<newline46mondego>      JOptionPane<newline46mondego>            .showMessageDialog(null, mainPanel,<newline46mondego>                  <doubleQuotes46>Attempt 2, override getPreferredSize of the JLabel cells in the grid<doubleQuotes46>,<newline46mondego>                  JOptionPane.PLAIN_MESSAGE);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      SwingUtilities.invokeLater(new Runnable() {<newline46mondego>         public void run() {<newline46mondego>            createAndShowGui();<newline46mondego>         }<newline46mondego>      });<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4435splitHere46","17626921splitHere46","_url = siteManHome.getText().toString();<newline46mondego>_remoteHomeDir = siteManHome.getText().toString();<newline46mondego>"
"4436splitHere46","17626921splitHere46","_remoteHomeDir"
"4437splitHere46","17626931splitHere46","setXxXSize()"
"4438splitHere46","17626931splitHere46","Layout"
"4439splitHere46","17626931splitHere46","Layout Manager"
"4440splitHere46","17626931splitHere46","JTextArea"
"4441splitHere46","17626931splitHere46","Rows"
"4442splitHere46","17626931splitHere46","Columns"
"4443splitHere46","17626931splitHere46","Layout"
"4444splitHere46","17626931splitHere46","setXxXSize()"
"4445splitHere46","17626931splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.beans.EventHandler;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class DialogWithScroller<newline46mondego>{<newline46mondego>    private JFrame frame;<newline46mondego>    private JButton showButton;<newline46mondego>    private MyDialog myDialog;<newline46mondego><newline46mondego>    private void displayGUI()<newline46mondego>    {<newline46mondego>        frame = new JFrame(<doubleQuotes46>Dialog ScrollPane Example<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel contentPane = new JPanel(new BorderLayout(5, 5));<newline46mondego>        showButton = new JButton(<doubleQuotes46>Show Dialog<doubleQuotes46>);<newline46mondego>        showButton.addActionListener((ActionListener)<newline46mondego>                EventHandler.create(ActionListener.class,<newline46mondego>                        DialogWithScroller.this, <doubleQuotes46>buttonActions<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));     <newline46mondego>        contentPane.add(showButton);<newline46mondego><newline46mondego>        frame.setContentPane(contentPane);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }   <newline46mondego><newline46mondego>    public void buttonActions(ActionEvent ae)<newline46mondego>    {<newline46mondego>        myDialog = new MyDialog(frame<newline46mondego>                , <doubleQuotes46>TextArea with ScrollPane<doubleQuotes46>, true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Runnable runnable = new Runnable()<newline46mondego>        {<newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new DialogWithScroller().displayGUI();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        EventQueue.invokeLater(runnable);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class MyDialog extends JDialog<newline46mondego>{<newline46mondego>    private JTextArea tArea;<newline46mondego>    private JButton hideButton;<newline46mondego><newline46mondego>    private ActionListener buttonActions =<newline46mondego>                            new ActionListener()<newline46mondego>    {<newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent ae)<newline46mondego>        {<newline46mondego>            MyDialog.this.dispose();<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public MyDialog()<newline46mondego>    {}<newline46mondego><newline46mondego>    public MyDialog(Frame owner, String title, boolean modal)<newline46mondego>    {<newline46mondego>        super(owner, title, modal);<newline46mondego>        displayGUI();<newline46mondego>    }<newline46mondego><newline46mondego>    private void displayGUI()<newline46mondego>    {<newline46mondego>        JPanel contentPane = new JPanel(<newline46mondego>                        new BorderLayout(5, 5));<newline46mondego>        contentPane.setBorder(<newline46mondego>                BorderFactory.createTitledBorder(<newline46mondego>                            <doubleQuotes46>My Personal Text Area<doubleQuotes46>));<newline46mondego>        /*<newline46mondego>         * Here one can simply initialize the<newline46mondego>         * JTextArea like this too, using the<newline46mondego>         * constructor itself for specifying<newline46mondego>         * the Rows and Columns, which will<newline46mondego>         * help the layout concern to determine<newline46mondego>         * its size<newline46mondego>         */<newline46mondego>        tArea = new JTextArea(20, 20);<newline46mondego>        tArea.setLineWrap(true);<newline46mondego>        tArea.setWrapStyleWord(true);<newline46mondego>        JScrollPane textScroller = new JScrollPane(tArea);<newline46mondego>        //textScroller.setViewportView(tArea);<newline46mondego><newline46mondego>        hideButton = new JButton(<doubleQuotes46>Hide Dialog<doubleQuotes46>);<newline46mondego>        hideButton.addActionListener(buttonActions);<newline46mondego><newline46mondego>        contentPane.add(textScroller, BorderLayout.CENTER);<newline46mondego>        contentPane.add(hideButton, BorderLayout.PAGE_END);<newline46mondego>        setContentPane(contentPane);<newline46mondego>        pack();<newline46mondego>        setLocationByPlatform(true);<newline46mondego>        setVisible(true);<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"4446splitHere46","17627121splitHere46","class Worker extends SwingWorker<String, Object> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected String doInBackground() throws Exception {<newline46mondego>       //here you send the mail<newline46mondego>       return <doubleQuotes46>DONE<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void done() {<newline46mondego>        super.done();<newline46mondego>        //this is executed in the EDT<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>Message sent<doubleQuotes46>, <doubleQuotes46>Success<doubleQuotes46>, JOptionPane.INFORMATION_MESSAGE);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4447splitHere46","17627143splitHere46","\W"
"4448splitHere46","17627143splitHere46","\W"
"4449splitHere46","17627143splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\\([,\\d]+\\)<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(inputString);<newline46mondego><newline46mondego>while (matcher.find()) {<newline46mondego>    String matched = matcher.group();<newline46mondego>    //Do something with it  <newline46mondego>}<newline46mondego>"
"4450splitHere46","17627143splitHere46","\\(     # Match (<newline46mondego>[,\\d]+ # Match 1+ digits/commas. Don't be surprised if it matches (,,,,,,)<newline46mondego>\\)     # Match )<newline46mondego>"
"4451splitHere46","17627337splitHere46","boolean t1_selected = false;<newline46mondego> boolean t2_selected = false;<newline46mondego>"
"4452splitHere46","17627337splitHere46","t1.addFocusListener(new FocusListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void focusLost(FocusEvent arg0) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void focusGained(FocusEvent arg0) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            t1_selected = true;<newline46mondego>            t2_selected = false;<newline46mondego>        }<newline46mondego>    });<newline46mondego>    t2.addFocusListener(new FocusListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void focusLost(FocusEvent e) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void focusGained(FocusEvent e) {<newline46mondego>            // TODO Auto-generated method stub<newline46mondego>            t1_selected = false;<newline46mondego>            t2_selected = true;<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"4453splitHere46","17627337splitHere46","if(e.getSource() == this.b[0]){<newline46mondego>        if(t1_selected)<newline46mondego>        {<newline46mondego>            t1.setText(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        if(t2_selected)<newline46mondego>        {<newline46mondego>            t2.setText(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    else if(e.getSource() == this.b[1]){<newline46mondego>        if(t1_selected)<newline46mondego>        {<newline46mondego>            t1.setText(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        if(t2_selected)<newline46mondego>        {<newline46mondego>            t2.setText(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>            //rest of cases<newline46mondego>"
"4454splitHere46","17627337splitHere46","String s1 = new String(t1.getText());<newline46mondego>        String s2 = new String(t2.getText());<newline46mondego>        String s3 = new String();<newline46mondego>        int a = Integer.parseInt(s1);<newline46mondego>        int b = Integer.parseInt(s2);<newline46mondego>"
"4455splitHere46","17627337splitHere46","else if (e.getSource() == btnadd) {<newline46mondego>        String s1 = new String(t1.getText());<newline46mondego>        String s2 = new String(t2.getText());<newline46mondego>        String s3 = new String();<newline46mondego>        int a = Integer.parseInt(s1);<newline46mondego>        int b = Integer.parseInt(s2);<newline46mondego><newline46mondego>        int c = a + b;<newline46mondego>        s3 = String.valueOf(c);<newline46mondego>        t3.setText(s3);<newline46mondego>    }<newline46mondego>"
"4456splitHere46","17627369splitHere46","HashSet"
"4457splitHere46","17627369splitHere46","ArrayList a= new ArrayList();<newline46mondego>HashSet hs = new HashSet();<newline46mondego>hs.addAll(a);  // willl not add the duplicate values<newline46mondego>a.clear();<newline46mondego>a.addAll(hs);  // copy the unique values again to arraylist<newline46mondego>"
"4458splitHere46","17627439splitHere46","formatter = new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy<doubleQuotes46>, Locale.US);<newline46mondego>"
"4459splitHere46","17627439splitHere46","getXxx(...)"
"4460splitHere46","17627439splitHere46","DateFormat"
"4461splitHere46","17627445splitHere46","renderer.setXAxisMin(-1);<newline46mondego>renderer.setXAxisMax(wrongAnswers);<newline46mondego>renderer.setYAxisMax(10);<newline46mondego>renderer.setYAxisMin(0);<newline46mondego>"
"4462splitHere46","17627616splitHere46","object"
"4463splitHere46","17627616splitHere46","ObjectElement"
"4464splitHere46","17627616splitHere46","// Create an element and programatically set its attributes<newline46mondego>  ObjectElement o = Document.get().createObjectElement();<newline46mondego>  o.setWidth(<doubleQuotes46>100%<doubleQuotes46>);<newline46mondego>  o.setHeight(<doubleQuotes46>100%<doubleQuotes46>);<newline46mondego>  o.setData(<doubleQuotes46>/media/invoice1.pdf<doubleQuotes46>);<newline46mondego><newline46mondego>  // Attach the element to the document<newline46mondego>  Document.get().getBody().appendChild(o);<newline46mondego><newline46mondego>  // Optionally you could wrap your element into a widget.<newline46mondego>  Widget w = HTMLPanel.wrap(o);<newline46mondego>"
"4465splitHere46","17627624splitHere46","g2d.fillRect(0, 0, this.getWidth(), this.getHeight());<newline46mondego>"
"4466splitHere46","17627624splitHere46","ImageObserver"
"4467splitHere46","17627722splitHere46","SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            UIManager.setLookAndFeel(<newline46mondego>               new SubstanceBusinessBlackSteelLookAndFeel());<newline46mondego>        } catch (UnsupportedLookAndFeelException e) {<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}); <newline46mondego>"
"4468splitHere46","17627722splitHere46","SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        try {<newline46mondego>            UIManager.setLookAndFeel(<newline46mondego>               new SubstanceBusinessBlackSteelLookAndFeel());<newline46mondego>            SwingUtilities.updateComponentTreeUI(frame);<newline46mondego>        } catch (UnsupportedLookAndFeelException e) {<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4469splitHere46","17627747splitHere46","// Directory path here<newline46mondego>    String path = <doubleQuotes46>.<doubleQuotes46>;<newline46mondego><newline46mondego>    String files;<newline46mondego>    File folder = new File(path);<newline46mondego>    // Returns an array of the files in the directory denoted.<newline46mondego>    File[] listOfFiles = folder.listFiles();<newline46mondego><newline46mondego><newline46mondego>    for (int i = 0; i < listOfFiles.length; i++) {<newline46mondego><newline46mondego>        if (listOfFiles[i].isFile()) {<newline46mondego><newline46mondego>            //Checks if the type of the file is a text file.<newline46mondego>            files = listOfFiles[i].getName();<newline46mondego>            if (files.endsWith(<doubleQuotes46>.txt<doubleQuotes46>) || files.endsWith(<doubleQuotes46>.TXT<doubleQuotes46>)) {<newline46mondego><newline46mondego>                // Reads the file and show every line on the screen.<newline46mondego>                File file = listOfFiles[i];<newline46mondego>                BufferedReader reader;<newline46mondego>                try {<newline46mondego>                    reader = new BufferedReader(new FileReader(<newline46mondego>                            file.getAbsolutePath()));<newline46mondego><newline46mondego>                    String line = null;<newline46mondego>                    while ((line = reader.readLine()) != null) {<newline46mondego><newline46mondego>                        System.out.println(line);<newline46mondego><newline46mondego>                    }<newline46mondego>                } catch (IOException e) {<newline46mondego><newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"4470splitHere46","17627840splitHere46","git mv"
"4471splitHere46","17627840splitHere46","git commit"
"4472splitHere46","17628034splitHere46","public class AddList {<newline46mondego>private int id;<newline46mondego>private int parentId;<newline46mondego><newline46mondego>public int getId() {<newline46mondego>    return id;<newline46mondego>}<newline46mondego><newline46mondego>public void setId(int id) {<newline46mondego>    this.id = id;<newline46mondego>}<newline46mondego><newline46mondego>public int getParentId() {<newline46mondego>    return parentId;<newline46mondego>}<newline46mondego><newline46mondego>public void setParentId(int parentId) {<newline46mondego>    this.parentId = parentId;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"4473splitHere46","17628034splitHere46","public class DeleteList {<newline46mondego>private  int deleteId;<newline46mondego><newline46mondego>public int getDeleteId() {<newline46mondego>    return deleteId;<newline46mondego>}<newline46mondego><newline46mondego>public void setDeleteId(int deleteId) {<newline46mondego>    this.deleteId = deleteId;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"4474splitHere46","17628034splitHere46","import java.text.ParseException;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class Main {<newline46mondego>public static void main(String[] args) throws ParseException {<newline46mondego>    List<AddList> addList = new ArrayList<AddList>();<newline46mondego>    List<DeleteList> delList = new ArrayList<DeleteList>();<newline46mondego>    AddList addL1 = new AddList();<newline46mondego>    AddList addL2 = new AddList();<newline46mondego>    AddList addL3 = new AddList();<newline46mondego>    AddList addL4 = new AddList();<newline46mondego>    AddList addL5 = new AddList();<newline46mondego>    AddList addL6 = new AddList();<newline46mondego>    AddList addL7 = new AddList();<newline46mondego><newline46mondego>    DeleteList delL1 = new DeleteList();<newline46mondego>    DeleteList delL2 = new DeleteList();<newline46mondego>    DeleteList delL3 = new DeleteList();<newline46mondego><newline46mondego>    addL1.setId(2001);<newline46mondego>    addL1.setParentId(3);<newline46mondego>    addL2.setId(2002);<newline46mondego>    addL2.setParentId(2001);<newline46mondego>    addL3.setId(2003);<newline46mondego>    addL3.setParentId(2001);<newline46mondego>    addL4.setId(2004);<newline46mondego>    addL4.setParentId(2002);<newline46mondego>    addL5.setId(2005);<newline46mondego>    addL5.setParentId(2003);<newline46mondego>    addL6.setId(2006);<newline46mondego>    addL6.setParentId(4);<newline46mondego>    addL7.setId(2007);<newline46mondego>    addL7.setParentId(2006);<newline46mondego><newline46mondego>    delL1.setDeleteId(2001);<newline46mondego>    delL2.setDeleteId(3);<newline46mondego>    delL3.setDeleteId(2007);<newline46mondego><newline46mondego>    addList.add(addL1);<newline46mondego>    addList.add(addL2);<newline46mondego>    addList.add(addL3);<newline46mondego>    addList.add(addL4);<newline46mondego>    addList.add(addL5);<newline46mondego>    addList.add(addL6);<newline46mondego>    addList.add(addL7);<newline46mondego><newline46mondego>    delList.add(delL1);<newline46mondego>    delList.add(delL2);<newline46mondego>    delList.add(delL3);<newline46mondego><newline46mondego>    removeElements(addList, delList);<newline46mondego>}<newline46mondego><newline46mondego>public static void removeElements(List<AddList> add, List<DeleteList> del) {<newline46mondego>    boolean status = true;<newline46mondego>    int[] temp = new int[del.size()];<newline46mondego>    int[] child = new int[add.size()];<newline46mondego>    int i = 0;<newline46mondego>    while (status) {<newline46mondego>        for (int j = 0; j < add.size(); j++) {<newline46mondego>            if (del.get(i).getDeleteId() == add.get(j).getId()) {<newline46mondego>                add.remove(j);<newline46mondego>                temp[i] = del.get(i).getDeleteId();<newline46mondego>                j = -1;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        i++;<newline46mondego>        if (i == del.size()) {<newline46mondego>            status = false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    i = 0;<newline46mondego>    int k = 0;<newline46mondego>    boolean newStatus = true;<newline46mondego>    while (newStatus) {<newline46mondego>        for (int j = 0; j < add.size(); j++) {<newline46mondego>            if (temp[i] == add.get(j).getParentId()) {<newline46mondego>                child[k] = add.get(j).getId();<newline46mondego>                add.remove(j);<newline46mondego>                k++;<newline46mondego>                j = -1;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        i++;<newline46mondego>        if (i == del.size()) {<newline46mondego>            newStatus = false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    i = 0;<newline46mondego>    boolean con = true;<newline46mondego>    while (con) {<newline46mondego>        for (int j = 0; j < del.size(); j++) {<newline46mondego>            if (temp[i] == del.get(j).getDeleteId()) {<newline46mondego>                del.remove(j);<newline46mondego>                j = -1;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        i++;<newline46mondego>        if (i == temp.length) {<newline46mondego>            con = false;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    i = 0;<newline46mondego>    boolean cons = true;<newline46mondego>    while (cons) {<newline46mondego>        for (int j = 0; j < add.size(); j++) {<newline46mondego>            if (child[i] == add.get(j).getParentId()) {<newline46mondego>                add.remove(j);<newline46mondego>                j = -1;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        i++;<newline46mondego>        if (i == child.length) {<newline46mondego>            cons = false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"4475splitHere46","17628038splitHere46","String secondLine = s.nextLine();<newline46mondego>System.out.println(secondLine);<newline46mondego>"
"4476splitHere46","17628135splitHere46","# Project target.<newline46mondego>target=android-15<newline46mondego><newline46mondego>#Proguard config<newline46mondego>proguard.config=proguard.cfg<newline46mondego>"
"4477splitHere46","17628135splitHere46","-optimizationpasses 5<newline46mondego>-dontusemixedcaseclassnames<newline46mondego>-dontskipnonpubliclibraryclasses<newline46mondego>-dontpreverify<newline46mondego>-verbose<newline46mondego>-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*<newline46mondego><newline46mondego>-keep public class * extends android.app.Activity<newline46mondego>-keep public class * extends android.app.Application<newline46mondego>-keep public class * extends android.app.Service<newline46mondego>-keep public class * extends android.content.BroadcastReceiver<newline46mondego>-keep public class * extends android.content.ContentProvider<newline46mondego>-keep public class * extends android.app.backup.BackupAgentHelper<newline46mondego>-keep public class * extends android.preference.Preference<newline46mondego>-keep public class com.android.vending.licensing.ILicensingService<newline46mondego><newline46mondego>-keepclasseswithmembernames class * {<newline46mondego>    native <methods>;<newline46mondego>}<newline46mondego><newline46mondego>-keepclasseswithmembers class * {<newline46mondego>    public <init>(android.content.Context, android.util.AttributeSet);<newline46mondego>}<newline46mondego><newline46mondego>-keepclasseswithmembers class * {<newline46mondego>    public <init>(android.content.Context, android.util.AttributeSet, int);<newline46mondego>}<newline46mondego><newline46mondego>-keepclassmembers class * extends android.app.Activity {<newline46mondego>   public void *(android.view.View);<newline46mondego>}<newline46mondego><newline46mondego>-keepclassmembers enum * {<newline46mondego>    public static **[] values();<newline46mondego>    public static ** valueOf(java.lang.String);<newline46mondego>}<newline46mondego><newline46mondego>-keep class * implements android.os.Parcelable {<newline46mondego>  public static final android.os.Parcelable$Creator *;<newline46mondego>}<newline46mondego><newline46mondego>-assumenosideeffects class android.util.Log {<newline46mondego>    public static *** d(...);<newline46mondego>    public static *** v(...);<newline46mondego>}<newline46mondego>"
"4478splitHere46","17628149splitHere46","ImageIcon il = new ImageIcon(this.getClass()<newline46mondego>                .getResource(<doubleQuotes46>/raw/ship.png<doubleQuotes46>);<newline46mondego>"
"4479splitHere46","17628149splitHere46","package game;<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>   ImageIcon il = new ImageIcon(this.getClass()<newline46mondego>                .getResource(<doubleQuotes46>raw/ship.png<doubleQuotes46>);<newline46mondego>"
"4480splitHere46","17628187splitHere46","access_token"
"4481splitHere46","17628187splitHere46","id_token"
"4482splitHere46","17628502splitHere46","FileWriter"
"4483splitHere46","17628502splitHere46","FileOutputStream"
"4484splitHere46","17628502splitHere46","true"
"4485splitHere46","17628502splitHere46","FileWriter"
"4486splitHere46","17628502splitHere46","FileOutputStream"
"4487splitHere46","17628502splitHere46","FileWriter(File file, boolean append) <newline46mondego>"
"4488splitHere46","17628567splitHere46","Runnable"
"4489splitHere46","17628567splitHere46","Boolean"
"4490splitHere46","17628567splitHere46","volatile"
"4491splitHere46","17628567splitHere46","Thread"
"4492splitHere46","17628567splitHere46","private static final class Printer implements Runnable {<newline46mondego><newline46mondego>    private final String printMe;<newline46mondego><newline46mondego>    public Printer(String printMe) {<newline46mondego>        this.printMe = printMe;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        while (true) {<newline46mondego>            System.out.println(Thread.currentThread().getName() + <doubleQuotes46>says: <doubleQuotes46> + printMe);<newline46mondego>            try {<newline46mondego>                TimeUnit.SECONDS.sleep(1);<newline46mondego>            } catch (InterruptedException ex) {<newline46mondego>                return;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) throws Exception {<newline46mondego>    final ExecutorService executorService = Executors.newCachedThreadPool();<newline46mondego>    final Map<Integer, Future<?>> futures = new HashMap<>();<newline46mondego>    for (int i = 0; i < 10; ++i) {<newline46mondego>        futures.put(i, executorService.submit(new Printer(<doubleQuotes46>Printer<doubleQuotes46> + i)));<newline46mondego>    }<newline46mondego>    final Scanner scanner = new Scanner(System.in);<newline46mondego>    while (true) {<newline46mondego>        final String input = scanner.nextLine();<newline46mondego>        if (<doubleQuotes46>EXIT<doubleQuotes46>.equalsIgnoreCase(input)) {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>        final Integer threadToStop;<newline46mondego>        try {<newline46mondego>            threadToStop = Integer.parseInt(input);<newline46mondego>        } catch (NumberFormatException ex) {<newline46mondego>            System.out.println(<doubleQuotes46>Not a number<doubleQuotes46>);<newline46mondego>            continue;<newline46mondego>        }<newline46mondego>        final Future<?> f = futures.remove(threadToStop);<newline46mondego>        if (f == null) {<newline46mondego>            System.out.println(<doubleQuotes46>Not a valid thread<doubleQuotes46>);<newline46mondego>            continue;<newline46mondego>        }<newline46mondego>        f.cancel(true);<newline46mondego>    }<newline46mondego>    executorService.shutdownNow();<newline46mondego>}<newline46mondego>"
"4493splitHere46","17628567splitHere46","ExecutorService"
"4494splitHere46","17628567splitHere46","Thread"
"4495splitHere46","17628567splitHere46","Thread"
"4496splitHere46","17628567splitHere46","ExecutorService"
"4497splitHere46","17628567splitHere46","for"
"4498splitHere46","17628567splitHere46","ExecutorService"
"4499splitHere46","17628567splitHere46","Future"
"4500splitHere46","17628567splitHere46","Map"
"4501splitHere46","17628567splitHere46","Future"
"4502splitHere46","17628567splitHere46","Thread"
"4503splitHere46","17628567splitHere46","ExecutorService"
"4504splitHere46","17628567splitHere46","Thread"
"4505splitHere46","17628567splitHere46","Map"
"4506splitHere46","17628567splitHere46","Future"
"4507splitHere46","17628567splitHere46","ConcurrentHashMap"
"4508splitHere46","17628567splitHere46","ExecutorService"
"4509splitHere46","17628567splitHere46","ExecutorService"
"4510splitHere46","17628567splitHere46","ExecutorService"
"4511splitHere46","17628567splitHere46","ThreadFactory"
"4512splitHere46","17628567splitHere46","Thread"
"4513splitHere46","17628567splitHere46","ExecutorService"
"4514splitHere46","17628574splitHere46","Cursor"
"4515splitHere46","17628574splitHere46","moveToFirst"
"4516splitHere46","17628574splitHere46","ContentValues"
"4517splitHere46","17628574splitHere46","put"
"4518splitHere46","17628645splitHere46","double x = 20; //x is my input number<newline46mondego>double mirrorX = 100 - x;<newline46mondego>"
"4519splitHere46","17628645splitHere46","a"
"4520splitHere46","17628645splitHere46","b"
"4521splitHere46","17628645splitHere46","double x = 45;<newline46mondego>double a = 30;<newline46mondego>double b = 100;<newline46mondego>double mirrorX = (a + b) - x; // => 85<newline46mondego>"
"4522splitHere46","17628645splitHere46","a             mirror      x      b<newline46mondego>"
"4523splitHere46","17628645splitHere46","mirror"
"4524splitHere46","17628645splitHere46","a"
"4525splitHere46","17628645splitHere46","b"
"4526splitHere46","17628645splitHere46","mirror = (a + b) / 2"
"4527splitHere46","17628645splitHere46","x"
"4528splitHere46","17628645splitHere46","mirror"
"4529splitHere46","17628645splitHere46","mirror"
"4530splitHere46","17628645splitHere46","(x - mirror)"
"4531splitHere46","17628645splitHere46","x"
"4532splitHere46","17628645splitHere46","mirror + (x - mirror)"
"4533splitHere46","17628645splitHere46","mirror - (x - mirror)"
"4534splitHere46","17628645splitHere46","x_mirrored = mirror - (x - mirror)<newline46mondego>x_mirrored = mirror - x + mirror<newline46mondego>x_mirrored = 2 * mirror - x<newline46mondego>x_mirrored = 2 * ((a + b) / 2) - x<newline46mondego>x_mirrored = (a + b) - x<newline46mondego>"
"4535splitHere46","17628692splitHere46","Class A{<newline46mondego>   B b;<newline46mondego>   void setB(B b) {<newline46mondego>       this.b = b;<newline46mondego>   }<newline46mondego>};<newline46mondego><newline46mondego>A a;<newline46mondego>B b;<newline46mondego>A.setB(b);<newline46mondego><newline46mondego>b.change(); //changed in A<newline46mondego>"
"4536splitHere46","17628692splitHere46","void f(A a) {<newline46mondego>    a.change(); // caller will see that object is changed. We change it using reference<newline46mondego>    a = new A(); // we change the value of refernce. No changes are visible outside the function<newline46mondego>    a.change(); //new object is changing. No changes are visible outside the function<newline46mondego>}<newline46mondego>"
"4537splitHere46","17628739splitHere46","Person evan = new Person();<newline46mondego>Person rob = new Person();<newline46mondego>"
"4538splitHere46","17628739splitHere46","Person1"
"4539splitHere46","17628739splitHere46","Person2"
"4540splitHere46","17628739splitHere46","// In Person.java<newline46mondego>public void greet(Person p) {<newline46mondego>    System.out.println(<doubleQuotes46>My name is <doubleQuotes46>+this.name+<doubleQuotes46>. Nice to meet you +<doubleQuotes46>p.getName());<newline46mondego>}<newline46mondego>// In main<newline46mondego>rob.greet(evan); // it now gives compile errors of course but take the point :P<newline46mondego>"
"4541splitHere46","17628739splitHere46","Point"
"4542splitHere46","17628739splitHere46","Point"
"4543splitHere46","17628739splitHere46","measureDistance()"
"4544splitHere46","17628739splitHere46","Point2"
"4545splitHere46","17628739splitHere46","Point"
"4546splitHere46","17628739splitHere46","public class Point2{<newline46mondego>    private int a;<newline46mondego>    private int b;<newline46mondego>    private Point startingPoint;<newline46mondego><newline46mondego>    public Point2(int a, int b, Point p){<newline46mondego>        this.a = a;<newline46mondego>        this.b = b;<newline46mondego>        startingPoint = p;<newline46mondego>    }<newline46mondego><newline46mondego>    // Computes the distance from starting point to this<newline46mondego>    public double measureDistance(){//it takes no parameter.<newline46mondego>        return startingPoint.distanceTo(a, b);<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>    if you can't edit distanceTo() it gets a little verbose but you must create a<newline46mondego> Point with Point2 coordinates - remember this example when you will study Inheritance<newline46mondego><newline46mondego>    public double measureDistance() {<newline46mondego>        Point endingPoint = new Point(a, b);<newline46mondego>        return startingPoint.distanceTo(endingPoint);<newline46mondego>    }<newline46mondego>    */<newline46mondego><newline46mondego>}<newline46mondego>"
"4547splitHere46","17628894splitHere46","gender"
"4548splitHere46","17628894splitHere46","public static Gender getByInt(final int i)<newline46mondego>{<newline46mondego>    for (final Gender g: values())<newline46mondego>        if (g.gender == i)<newline46mondego>            return g;<newline46mondego>    return null; // not found<newline46mondego>}<newline46mondego>"
"4549splitHere46","17628894splitHere46","Gender.getByInt(...);"
"4550splitHere46","17628894splitHere46","Enum"
"4551splitHere46","17628894splitHere46",".valueOf()"
"4552splitHere46","17628894splitHere46","Enum.valueOf(Gender.class, <doubleQuotes46>male<doubleQuotes46>)"
"4553splitHere46","17628894splitHere46","Gender.valueOf(<doubleQuotes46>male<doubleQuotes46>)"
"4554splitHere46","17628894splitHere46","IllegalArgumentException"
"4555splitHere46","17628894splitHere46",".ordinal()"
"4556splitHere46","17628894splitHere46","Enum"
"4557splitHere46","17628894splitHere46","gender"
"4558splitHere46","17628898splitHere46","//unwind<newline46mondego>        DBObject unwind = new BasicDBObject(<doubleQuotes46>$unwind<doubleQuotes46>, <doubleQuotes46>$scorearray<doubleQuotes46>);<newline46mondego>        // Now the $group operation<newline46mondego>        DBObject groupFields = new BasicDBObject(<doubleQuotes46>player<doubleQuotes46>, <doubleQuotes46>$player<doubleQuotes46>);<newline46mondego>        groupFields.put(<doubleQuotes46>venue<doubleQuotes46>, <doubleQuotes46>$scorearray.venue<doubleQuotes46>));<newline46mondego>        groupFields.put(<doubleQuotes46>score<doubleQuotes46>, <doubleQuotes46>$scorearray.score<doubleQuotes46>));<newline46mondego>        DBObject group = new BasicDBObject(<doubleQuotes46>$group<doubleQuotes46>, new BasicDBObject(<doubleQuotes46>_id<doubleQuotes46>, groupFields));<newline46mondego>        //sort<newline46mondego>        DBObject sort = new BasicDBObject(<doubleQuotes46>$sort<doubleQuotes46>, new BasicDBObject(<doubleQuotes46>_id.score<doubleQuotes46>:1));<newline46mondego>        //secondgroup<newline46mondego>        DBObject secondGroupFields = new BasicDBObject(<doubleQuotes46>_id<doubleQuotes46>, <doubleQuotes46>$_id.player<doubleQuotes46>)<newline46mondego>        secondGroupFields.put(<doubleQuotes46>maxScore<doubleQuotes46>, new BasicDBObject(<doubleQuotes46>$last<doubleQuotes46>:<doubleQuotes46>$_id.score<doubleQuotes46>));<newline46mondego>        secondGroupFields.put(<doubleQuotes46>venue<doubleQuotes46>, new BasicDBObject(<doubleQuotes46>$last<doubleQuotes46>:<doubleQuotes46>$_id.venue<doubleQuotes46>));<newline46mondego>        DBObject secondGroup = new BasicDBObject(<doubleQuotes46>$group<doubleQuotes46>, secondGroupFields);<newline46mondego><newline46mondego>        // run aggregation<newline46mondego>        AggregationOutput output = playerScoreCollection.aggregate(unwind, group,sort,secondGroup);<newline46mondego><newline46mondego>        Iterable<DBObject> result = output.results();<newline46mondego>        Iterator<DBObject> iterator = result.iterator();<newline46mondego>"
"4559splitHere46","17629030splitHere46","InterfaceB obj = new ClassA(); <newline46mondego>"
"4560splitHere46","17629178splitHere46","@MapsId"
"4561splitHere46","17629178splitHere46","@MapsId(<doubleQuotes46>toyId<doubleQuotes46>)"
"4562splitHere46","17629207splitHere46","Map<String, Object>"
"4563splitHere46","17629207splitHere46","JsonNode"
"4564splitHere46","17629207splitHere46","final JsonNode node = new ObjectMapper().readTree(new URL(<doubleQuotes46>yourURLHere<doubleQuotes46>);<newline46mondego>"
"4565splitHere46","17629207splitHere46","JsonNode"
"4566splitHere46","17629207splitHere46","Map"
"4567splitHere46","17629207splitHere46",".get()"
"4568splitHere46","17629207splitHere46",".path()"
"4569splitHere46","17629207splitHere46","final JsonPointer ptr = JsonPointer.of(<doubleQuotes46>current_observation<doubleQuotes46>, <doubleQuotes46>display_location<doubleQuotes46>);<newline46mondego>final JsonNode displayLocation = ptr.get(node);<newline46mondego>"
"4570splitHere46","17629279splitHere46","Set<String> words; //a field that can be accessed by other threads.<newline46mondego> // may throw ConcurrentModificationException<newline46mondego> public ArrayList<String> unsafeIteration()  {<newline46mondego>   ArrayList<String> longWords = new ArrayList<>();<newline46mondego>   for(String word : words) {<newline46mondego>      if(word.length()>4)<newline46mondego>        longWords.add(word);<newline46mondego>   }<newline46mondego>   return longWords ;<newline46mondego> }<newline46mondego>"
"4571splitHere46","17629279splitHere46","get"
"4572splitHere46","17629290splitHere46","getResources().getColor(R.color.idOfColour);<newline46mondego>"
"4573splitHere46","17629290splitHere46","int"
"4574splitHere46","17629290splitHere46","android.R.color.colourId"
"4575splitHere46","17629337splitHere46","public void functionA() throws Exception{<newline46mondego>  throw new Exception(<doubleQuotes46>This exception is going to be handled elsewhere<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4576splitHere46","17629337splitHere46","try/catch"
"4577splitHere46","17629337splitHere46","public void functionB(){<newline46mondego>  try{<newline46mondego>    throw new Exception(<doubleQuotes46>This exception is handled here.<doubleQuotes46>);<newline46mondego>  }catch(Exception e){<newline46mondego>    System.err.println(<doubleQuotes46>Exception caught: <doubleQuotes46>+e);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4578splitHere46","17629337splitHere46","try/catch"
"4579splitHere46","17629337splitHere46","public void functionC() throws Exception{<newline46mondego>  try{<newline46mondego>    throw new Exception(<doubleQuotes46>This exception doesn't know where to go.<doubleQuotes46>);<newline46mondego>  }catch(Exception e){<newline46mondego>    System.err.println(<doubleQuotes46>Exception caught: <doubleQuotes46>+e);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4580splitHere46","17629403splitHere46","Float[] belea= new Float[1];<newline46mondego>belea[0] = sqlliteCountryAssistant.getEmployeeName(blabla);<newline46mondego>ArrayAdapter<Float> adapterz = new ArrayAdapter<Float>(MainActivity.this,<newline46mondego>                R.layout.list_item, belea);<newline46mondego>"
"4581splitHere46","17629436splitHere46","BeanFactory"
"4582splitHere46","17629436splitHere46","// Here live the annotations ... <newline46mondego>public class MyDaoTest {<newline46mondego>    @Autowired<newline46mondego>    private MyDao myDao;<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testSomething() {<newline46mondego>        // Do what you need with myDao<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4583splitHere46","17629436splitHere46","new"
"4584splitHere46","17629436splitHere46","<context:spring-configured /><newline46mondego>"
"4585splitHere46","17629640splitHere46","1/3"
"4586splitHere46","17629640splitHere46","double"
"4587splitHere46","17629640splitHere46","1/3"
"4588splitHere46","17629640splitHere46","add"
"4589splitHere46","17629640splitHere46","mult"
"4590splitHere46","17629798splitHere46","for(int i = 0;i<competitors.length;i++){<newline46mondego>        competitors[i] = new Competitor();<newline46mondego>        System.out.println(<doubleQuotes46>Enter name, id and bounce height<doubleQuotes46>);<newline46mondego>        competitors[i].SetName(sc.next());<newline46mondego>        competitors[i].SetId(sc.next());<newline46mondego>        competitors[i].SetHeight(sc.nextFloat());<newline46mondego>    }<newline46mondego>"
"4591splitHere46","17629804splitHere46","try {<newline46mondego>    Thread.sleep(1000);<newline46mondego>} catch(InterruptedException ex) {<newline46mondego>    Thread.currentThread().interrupt();<newline46mondego>}<newline46mondego><newline46mondego>WebElement myDynamicElement = (new WebDriverWait(obj, 10)).until(ExpectedConditions.presenceOfElementLocated(By.id(<doubleQuotes46>container<doubleQuotes46>)));;<newline46mondego>"
"4592splitHere46","17629842splitHere46","cache.setOnPreferenceClickListener(new OnPreferenceClickListener() <newline46mondego>  {<newline46mondego>  clearCache(getApplicationContext());<newline46mondego>  }<newline46mondego>"
"4593splitHere46","17629842splitHere46","public static void clearCache(final Context context)<newline46mondego>  {<newline46mondego>  final File cache=context.getCacheDir();<newline46mondego>  final File appDir=new File(cache.getParent());<newline46mondego>  if(appDir.exists())<newline46mondego>    {<newline46mondego>    // you might be able to change this whole code block to just <doubleQuotes46>deleteDir(appDir)<doubleQuotes46><newline46mondego>    final String[] children=appDir.list();<newline46mondego>    for(final String childFilePath : children)<newline46mondego>      if(!childFilePath.equals(<doubleQuotes46>lib<doubleQuotes46>))<newline46mondego>        {<newline46mondego>        deleteDir(new File(appDir,childFilePath));<newline46mondego>        Log.i(<doubleQuotes46>TAG<doubleQuotes46>,<doubleQuotes46>**************** File /data/data/APP_PACKAGE/<doubleQuotes46>+childFilePath+<doubleQuotes46> DELETED *******************<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>public static boolean deleteDir(final File dir)<newline46mondego>  {<newline46mondego>  if(dir==null)<newline46mondego>    return true;<newline46mondego>  if(dir.isDirectory())<newline46mondego>    {<newline46mondego>    final String[] children=dir.list();<newline46mondego>    for(final String childFilePath : children)<newline46mondego>      {<newline46mondego>      final boolean success=deleteDir(new File(dir,childFilePath));<newline46mondego>      if(!success)<newline46mondego>        return false;<newline46mondego>      }<newline46mondego>    }<newline46mondego>  return dir.delete();<newline46mondego>  }<newline46mondego>"
"4594splitHere46","17629842splitHere46","public class Impo extends PreferenceActivity {<newline46mondego><newline46mondego>    Preference info;<newline46mondego>    Intent intent;<newline46mondego>    Preference cache;<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(final Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        this.addPreferencesFromResource(R.xml.layout);<newline46mondego><newline46mondego>        info = this.findPreference(<doubleQuotes46>info<doubleQuotes46>);<newline46mondego>        info.setOnPreferenceClickListener(new OnPreferenceClickListener() {<newline46mondego>            @Override<newline46mondego>            public boolean onPreferenceClick(final Preference preference) {<newline46mondego>                // TODO the next line is very weird. sure that's what you want?<newline46mondego>                intent = new Intent(getBaseContext(), Info.class);<newline46mondego>                startActivity(intent);<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        });<newline46mondego>        cache = this.findPreference(<doubleQuotes46>cache<doubleQuotes46>);<newline46mondego>        cache.setOnPreferenceClickListener(new OnPreferenceClickListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public boolean onPreferenceClick(final Preference preference) {<newline46mondego>                clearCache(Impo.this);<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public static void clearCache(final Context context) {<newline46mondego>        final File cache = context.getCacheDir();<newline46mondego>        final File appDir = new File(cache.getParent());<newline46mondego>        if (appDir.exists()) {<newline46mondego>            // you might be able to change this whole code block to just <doubleQuotes46>deleteDir(appDir)<doubleQuotes46><newline46mondego>            final String[] children = appDir.list();<newline46mondego>            for (final String childFilePath : children)<newline46mondego>                if (!childFilePath.equals(<doubleQuotes46>lib<doubleQuotes46>)) {<newline46mondego>                    deleteDir(new File(appDir, childFilePath));<newline46mondego>                    Log.i(<doubleQuotes46>TAG<doubleQuotes46>, <doubleQuotes46>**************** File /data/data/APP_PACKAGE/<doubleQuotes46> + childFilePath<newline46mondego>                            + <doubleQuotes46> DELETED *******************<doubleQuotes46>);<newline46mondego>                }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static boolean deleteDir(final File dir) {<newline46mondego>        if (dir == null)<newline46mondego>            return true;<newline46mondego>        if (dir.isDirectory()) {<newline46mondego>            final String[] children = dir.list();<newline46mondego>            for (final String childFilePath : children) {<newline46mondego>                final boolean success = deleteDir(new File(dir, childFilePath));<newline46mondego>                if (!success)<newline46mondego>                    return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return dir.delete();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4595splitHere46","17629904splitHere46","exec"
"4596splitHere46","17629904splitHere46","build"
"4597splitHere46","17629904splitHere46","phase"
"4598splitHere46","17629904splitHere46","executions"
"4599splitHere46","17629904splitHere46","<!-- Begin of POM --><newline46mondego><project><newline46mondego>    ...<newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <!-- Begin of Exec Maven Plugin --><newline46mondego>            <plugin><newline46mondego>                <groupId>org.codehaus.mojo</groupId><newline46mondego>                <artifactId>exec-maven-plugin</artifactId><newline46mondego>                <version>1.2.1</version><newline46mondego>                <executions><newline46mondego>                    <execution><newline46mondego>                        <phase>validate</phase> <!-- Here, for example, validate --><newline46mondego>                        <goals><newline46mondego>                            <goal>exec</goal><newline46mondego>                        </goals><newline46mondego>                    </execution><newline46mondego>                </executions><newline46mondego>                <configuration>...</configuration><newline46mondego>            </plugin><newline46mondego>            <!-- Begin of Exec Maven Plugin --><newline46mondego>        </plugins><newline46mondego>    </build><newline46mondego>    ...<newline46mondego></project><newline46mondego><!-- End of POM --><newline46mondego>"
"4600splitHere46","17630056splitHere46","FileSystemView"
"4601splitHere46","17630056splitHere46","getFileSystemView()"
"4602splitHere46","17630056splitHere46","getSystemIcon()"
"4603splitHere46","17630056splitHere46","File"
"4604splitHere46","17630056splitHere46","FileSystemView"
"4605splitHere46","17630056splitHere46","FileView"
"4606splitHere46","17630056splitHere46","javax.swing.filechooser"
"4607splitHere46","17630056splitHere46","File"
"4608splitHere46","17630056splitHere46","java.io"
"4609splitHere46","17630056splitHere46","FileSystemView"
"4610splitHere46","17630056splitHere46","FileView"
"4611splitHere46","17630056splitHere46","FileSystemView"
"4612splitHere46","17630056splitHere46","jf.setFileView()"
"4613splitHere46","17630056splitHere46","JFileChooser jf=new JFileChooser();<newline46mondego>jf.setFileView(new MyFileView());<newline46mondego>jf.showOpenDialog(this);<newline46mondego><newline46mondego>class MyFileView extends FileView<newline46mondego>{<newline46mondego>      public Icon getIcon(File f)<newline46mondego>      {<newline46mondego>      FileSystemView view=FileSystemView.getFileSystemView();<newline46mondego>            return view.getSystemIcon(f);<newline46mondego>      }<newline46mondego>}<newline46mondego>"
"4614splitHere46","17630056splitHere46","this"
"4615splitHere46","17630056splitHere46","JFrame"
"4616splitHere46","17630056splitHere46","jf.setFileView(new FileView(){<newline46mondego>            public Icon getIcon(File f)<newline46mondego>            {<newline46mondego>                return FileSystemView.getFileSystemView().getSystemIcon(f);<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"4617splitHere46","17630140splitHere46","@Component(<doubleQuotes46>burger<doubleQuotes46>)<newline46mondego>public class BurgerStrategy implements MealStrategy { ... }<newline46mondego><newline46mondego>@Component(<doubleQuotes46>sausage<doubleQuotes46>)<newline46mondego>public class SausageStrategy implements SausageStrategy { ... }<newline46mondego>"
"4618splitHere46","17630140splitHere46","@Resource(name = <doubleQuotes46>burger<doubleQuotes46>)<newline46mondego>MealStrategy burger;<newline46mondego><newline46mondego>@Resource(name = <doubleQuotes46>sausage<doubleQuotes46>)<newline46mondego>MealStrategy sausage;<newline46mondego><newline46mondego>@RequestMapping(method = RequestMethod.POST)<newline46mondego>public @ResponseBody Something makeMeal(Meat meat) {<newline46mondego>    burger.cookMeal(meat);<newline46mondego>}<newline46mondego>"
"4619splitHere46","17630140splitHere46","@Autowired<newline46mondego>BeanFactory bf;<newline46mondego><newline46mondego>@RequestMapping(method = RequestMethod.POST)<newline46mondego>public @ResponseBody Something makeMeal(Meat meat) {<newline46mondego>    bf.getBean(<doubleQuotes46>burger<doubleQuotes46>, MealStrategy.class).cookMeal(meat);<newline46mondego>}<newline46mondego>"
"4620splitHere46","17630459splitHere46","com.example.deceunincktechniekers.bezoekrapporten"
"4621splitHere46","17630459splitHere46","public"
"4622splitHere46","17630459splitHere46","public"
"4623splitHere46","17630465splitHere46","Hashtable"
"4624splitHere46","17630465splitHere46","String"
"4625splitHere46","17630465splitHere46","ImageIcon"
"4626splitHere46","17630465splitHere46","Hashtable"
"4627splitHere46","17630465splitHere46","java.util"
"4628splitHere46","17630465splitHere46","FileView"
"4629splitHere46","17630465splitHere46","javax.swing.filechooser"
"4630splitHere46","17630465splitHere46","// Create a hashtable for String,ImageIcon<newline46mondego>Hashtable<String,ImageIcon> table=new Hashtable<>();<newline46mondego><newline46mondego>    // Add extensions and icons<newline46mondego>    table.put(<doubleQuotes46>.txt<doubleQuotes46>,new ImageIcon(<doubleQuotes46>txtfile.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.doc<doubleQuotes46>,new ImageIcon(<doubleQuotes46>docfile.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.ppt<doubleQuotes46>,new ImageIcon(<doubleQuotes46>pptfile.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.lnk<doubleQuotes46>,new ImageIcon(<doubleQuotes46>link.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.png<doubleQuotes46>,new ImageIcon(<doubleQuotes46>image.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.gif<doubleQuotes46>,new ImageIcon(<doubleQuotes46>image.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.jpeg<doubleQuotes46>,new ImageIcon(<doubleQuotes46>image.png<doubleQuotes46>));<newline46mondego>    table.put(<doubleQuotes46>.jpg<doubleQuotes46>,new ImageIcon(<doubleQuotes46>image.png<doubleQuotes46>));<newline46mondego>"
"4631splitHere46","17630465splitHere46","MyFileView"
"4632splitHere46","17630465splitHere46","class MyFileView extends FileView<newline46mondego>{<newline46mondego>Hashtable<String,ImageIcon> table;<newline46mondego>ImageIcon dirIcon;<newline46mondego><newline46mondego>    public MyFileView(Hashtable<String,ImageIcon> table,ImageIcon dirIcon)<newline46mondego>    {<newline46mondego>        this.table=table;<newline46mondego>        this.dirIcon=dirIcon;<newline46mondego>    }<newline46mondego><newline46mondego>    public Icon getIcon(File f)<newline46mondego>    {<newline46mondego>    // Do display custom icons<newline46mondego><newline46mondego>        // If dir<newline46mondego>        if(f.isDirectory()) <newline46mondego>        {<newline46mondego>            if(dirIcon!=null) return dirIcon;<newline46mondego>        return new ImageIcon(<doubleQuotes46>myfoldericon.png<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        // Get the name<newline46mondego>        String name=f.getName();<newline46mondego>        int idx=name.lastIndexOf(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego><newline46mondego>        if(idx>-1)<newline46mondego>        {<newline46mondego>        String ext=name.substring(idx);<newline46mondego>            if(table.containsKey(ext))<newline46mondego>        return table.get(ext);<newline46mondego>        }<newline46mondego><newline46mondego>    // For other files<newline46mondego>    return new ImageIcon(<doubleQuotes46>myownfileicon.png<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4633splitHere46","17630465splitHere46","MyFileView m=new MyFileView(table,new ImageIcon(<doubleQuotes46>diricon.png<doubleQuotes46>));<newline46mondego>JFileChooser jf=new JFileChooser();<newline46mondego>jf.setFileView(m);<newline46mondego>jf.showOpenDialog(this);<newline46mondego>"
"4634splitHere46","17630561splitHere46","Throwable"
"4635splitHere46","17630561splitHere46","Exception"
"4636splitHere46","17630561splitHere46","Throwable"
"4637splitHere46","17630561splitHere46","Exception"
"4638splitHere46","17630561splitHere46","Error"
"4639splitHere46","17630561splitHere46","Exception"
"4640splitHere46","17630561splitHere46","RuntimeException"
"4641splitHere46","17630561splitHere46","RuntimeException"
"4642splitHere46","17630561splitHere46","Error"
"4643splitHere46","17630561splitHere46","RuntimeException"
"4644splitHere46","17630561splitHere46","ArrayIndexOutOfBoundsException"
"4645splitHere46","17630561splitHere46","NullPointerException"
"4646splitHere46","17630561splitHere46","Errors"
"4647splitHere46","17630561splitHere46","OutOfMemoryError"
"4648splitHere46","17630561splitHere46","Exception"
"4649splitHere46","17630561splitHere46","FileNotFoundException"
"4650splitHere46","17630561splitHere46","SQLException"
"4651splitHere46","17630628splitHere46","// almost always better to break up a long code line into smaller lines.<newline46mondego>String resPath = <doubleQuotes46>/sounds/8bit_bomb_explosion.wav<doubleQuotes46>; // *** this is the key ***<newline46mondego>InputStream audioInStream = GameSounds.class.getResourceAsStream(resPath);<newline46mondego>System.out.println(<doubleQuotes46>is audioInStream null?: <doubleQuotes46> + (audioInStream == null)); // test it!<newline46mondego>AudioInputStream inputStream = AudioSystem.getAudioInputStream(audioInStream);<newline46mondego>"
"4652splitHere46","17630783splitHere46","$"
"4653splitHere46","17630783splitHere46","public static void main(final String... args)<newline46mondego>{<newline46mondego>    final Pattern p = Pattern.compile(<doubleQuotes46>one dollar<doubleQuotes46>);<newline46mondego><newline46mondego>    final String input = <doubleQuotes46>I want one dollar, please<doubleQuotes46>;<newline46mondego><newline46mondego>    // IndexOutOfBoundsException: no group 1<newline46mondego>    System.out.println(p.matcher(input).replaceFirst(<doubleQuotes46>$1<doubleQuotes46>));<newline46mondego>    // You need to escape the <doubleQuotes46>$<doubleQuotes46><newline46mondego>    System.out.println(p.matcher(input).replaceFirst(<doubleQuotes46>\\$1<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"4654splitHere46","17630838splitHere46","<welcome-file-list>"
"4655splitHere46","17630838splitHere46","<welcome-file-list>"
"4656splitHere46","17630838splitHere46","<url-pattern>/</url-pattern>"
"4657splitHere46","17630883splitHere46","ret = rs.getInt(<doubleQuotes46>frequency<doubleQuotes46>);<newline46mondego>"
"4658splitHere46","17630883splitHere46","if(rs.next()){<newline46mondego>ret = rs.getInt(<doubleQuotes46>frequency<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4659splitHere46","17630897splitHere46","JTextPane textPane = new JTextPane(); // local variable declaration and initialization<newline46mondego>"
"4660splitHere46","17630897splitHere46","this.textPane = new JTextPane()<newline46mondego>"
"4661splitHere46","17630897splitHere46","textPane"
"4662splitHere46","17630897splitHere46","super.println()"
"4663splitHere46","17630897splitHere46","print()"
"4664splitHere46","17630903splitHere46","DateFormat df = new SimpleDateFormat(<doubleQuotes46>yyyy-dd-MM<doubleQuotes46>); <newline46mondego>    Date startDateObject;<newline46mondego>    Date endDateObject;<newline46mondego>    try {<newline46mondego>        startDateObject = df.parse(newStartDate);<newline46mondego>        endDateObject=df.parse(newEndDate);<newline46mondego><newline46mondego>    } catch (ParseException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"4665splitHere46","17630903splitHere46","import java.text.*;<newline46mondego>import java.util.Date;<newline46mondego>"
"4666splitHere46","17631021splitHere46","// The solution itself <newline46mondego>  HashMap<Integer, Integer> repetitions = new HashMap<Integer, Integer>();<newline46mondego><newline46mondego>  for (int i = 0; i < crr_array.length; ++i) {<newline46mondego>      int item = crr_array[i];<newline46mondego><newline46mondego>      if (repetitions.containsKey(item))<newline46mondego>          repetitions.put(item, repetitions.get(item) + 1);<newline46mondego>      else<newline46mondego>          repetitions.put(item, 1);<newline46mondego>  }<newline46mondego><newline46mondego>  // Now let's print the repetitions out<newline46mondego>  StringBuilder sb = new StringBuilder();<newline46mondego><newline46mondego>  int overAllCount = 0;<newline46mondego><newline46mondego>  for (Map.Entry<Integer, Integer> e : repetitions.entrySet()) {<newline46mondego>      if (e.getValue() > 1) {<newline46mondego>          overAllCount += 1;<newline46mondego><newline46mondego>          sb.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>          sb.append(e.getKey());<newline46mondego>          sb.append(<doubleQuotes46>: <doubleQuotes46>);<newline46mondego>          sb.append(e.getValue());<newline46mondego>          sb.append(<doubleQuotes46> times<doubleQuotes46>);<newline46mondego>      }<newline46mondego>  }<newline46mondego><newline46mondego>  if (overAllCount > 0) {<newline46mondego>      sb.insert(0, <doubleQuotes46> repeated numbers:<doubleQuotes46>);<newline46mondego>      sb.insert(0, overAllCount);<newline46mondego>      sb.insert(0, <doubleQuotes46>There are <doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  System.out.print(sb.toString());<newline46mondego>"
"4667splitHere46","17631047splitHere46","public static void main(final String... args)<newline46mondego>{<newline46mondego>    final Pattern p = Pattern.compile(<doubleQuotes46>cat$<doubleQuotes46>);<newline46mondego><newline46mondego>    final Matcher m = p.matcher(<doubleQuotes46>I have a cat<doubleQuotes46>);<newline46mondego>    m.find(); // finds a match<newline46mondego>    System.out.println(m.requireEnd()); // prints true<newline46mondego>}<newline46mondego>"
"4668splitHere46","17631047splitHere46","<doubleQuotes46>I have a catflap<doubleQuotes46><newline46mondego>"
"4669splitHere46","17631047splitHere46","<doubleQuotes46>cat$<doubleQuotes46>"
"4670splitHere46","17631047splitHere46","<doubleQuotes46>cat<doubleQuotes46>"
"4671splitHere46","17631047splitHere46",".requireEnd()"
"4672splitHere46","17631047splitHere46","false"
"4673splitHere46","17631047splitHere46","cat"
"4674splitHere46","17631219splitHere46","+"
"4675splitHere46","17631219splitHere46","-"
"4676splitHere46","17631356splitHere46","FileInputStream fis = new FileInputStream(<doubleQuotes46>your_file_here<doubleQuotes46>);<newline46mondego><newline46mondego>    Scanner scanner = new Scanner(fis);<newline46mondego>    String firstLine = scanner.nextLine();<newline46mondego><newline46mondego>    firstLine.trim();<newline46mondego>    String[] data = firstLine.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>    int[] intData = new int[data.length];<newline46mondego><newline46mondego>    for (int i = 0; i < intData.length; i++) {<newline46mondego>        intData[i] = Integer.parseInt(data[i]);<newline46mondego>    }<newline46mondego>"
"4677splitHere46","17631568splitHere46","public void actionPerformed(ActionEvent e) {    <newline46mondego>    check=true;<newline46mondego>    repaint();<newline46mondego>}<newline46mondego>"
"4678splitHere46","17631618splitHere46","private int[] month;<newline46mondego>"
"4679splitHere46","17631618splitHere46","private int[] month = null;<newline46mondego>"
"4680splitHere46","17631618splitHere46","public int [] getMonth() throws ParseException{<newline46mondego>    String [] date=getDate();<newline46mondego>    int[] month = new int[date.length]; // here's the missing line<newline46mondego>    DateFormat df= new SimpleDateFormat(<doubleQuotes46>MM.dd.yy hh:mm<doubleQuotes46>);<newline46mondego>    Date [] result= new Date [date.length];<newline46mondego><newline46mondego>    for (int i=0; i<date.length; i++){<newline46mondego>        Calendar cal= Calendar.getInstance();<newline46mondego>        result[i]=df.parse(date[i]);<newline46mondego>        cal.setTime(result[i]);<newline46mondego>        month[i]=cal.get(Calendar.MONTH);<newline46mondego>    }<newline46mondego>    return month;<newline46mondego>}<newline46mondego>"
"4681splitHere46","17631872splitHere46","AsyncTask"
"4682splitHere46","17631872splitHere46","class SocketThread extends Thread {<newline46mondego>    private final Handler mHandler;<newline46mondego>    private final WifiManager mWifiManager;<newline46mondego>    SocketThread(Handler handler, WifiManager wifiManager) {<newline46mondego>        mHandler = handler;<newline46mondego>    }<newline46mondego>    @override public void run() {<newline46mondego>        // socket code goes here<newline46mondego>        // whenever you receive a part that should update the ui,<newline46mondego>        // do something like:<newline46mondego>        final String s = new String(dp.getData(),0,dp.getLength());<newline46mondego>        mHandler.post(new Runnable() {<newline46mondego>            @override<newline46mondego>            public void run() {<newline46mondego>                update(s);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4683splitHere46","17631872splitHere46","onCreate()"
"4684splitHere46","17631872splitHere46","...<newline46mondego>super.onCreate(savedInstanceState);<newline46mondego>setContentView(R.layout.activity_main);<newline46mondego>EditText Seconds;<newline46mondego>Seconds =(EditText)findViewById(R.id.Seconds);<newline46mondego><newline46mondego>WifiManager wm = (WifiManager)getSystemService(Context.WIFI_SERVICE);<newline46mondego>Handler handler = new Handler();<newline46mondego>SocketThread thread = new SocketThread(handler, wm);<newline46mondego>thread.start();<newline46mondego>...<newline46mondego>"
"4685splitHere46","17631872splitHere46","public void update(String s) {<newline46mondego>    Seconds.setText(s);<newline46mondego>}<newline46mondego>"
"4686splitHere46","17631872splitHere46","edittext"
"4687splitHere46","17631872splitHere46","findById"
"4688splitHere46","17631872splitHere46","WifiManager"
"4689splitHere46","17631872splitHere46","package com.example.timing;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.net.DatagramPacket;<newline46mondego>import java.net.InetAddress;<newline46mondego>import java.net.MulticastSocket;<newline46mondego>import java.net.UnknownHostException;<newline46mondego><newline46mondego>import android.app.Activity;<newline46mondego>import android.content.Context;<newline46mondego>import android.net.wifi.WifiManager;<newline46mondego>import android.os.Bundle;<newline46mondego>import android.os.Handler;<newline46mondego>import android.view.Menu;<newline46mondego>import android.widget.Button;<newline46mondego>import android.widget.EditText;<newline46mondego><newline46mondego>public class MainActivity extends Activity {<newline46mondego>    EditText Seconds;   <newline46mondego>    String s;<newline46mondego>    Button button;<newline46mondego>    byte[] buffer = new byte[65535];<newline46mondego>    InetAddress ia = null;<newline46mondego>    int port = 4321;     <newline46mondego>    DatagramPacket dp = new DatagramPacket(buffer, buffer.length,ia,port);<newline46mondego>    MulticastSocket ms = null;<newline46mondego><newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main);     <newline46mondego>        Seconds = (EditText) findViewById(R.id.et_time);    <newline46mondego>        WifiManager wm = (WifiManager)getSystemService(Context.WIFI_SERVICE); <newline46mondego><newline46mondego>        Handler handler = new Handler();<newline46mondego>        SocketThread thread = new SocketThread(handler, wm);<newline46mondego>        thread.start();<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    class SocketThread extends Thread  {<newline46mondego>        private final Handler mHandler;<newline46mondego><newline46mondego>        SocketThread(Handler handler, WifiManager wifiManager) {<newline46mondego>            mHandler = handler;<newline46mondego>        }<newline46mondego>        @Override <newline46mondego>        public void run() {<newline46mondego>            // socket code goes here            <newline46mondego>            try {     <newline46mondego>                wm.setWifiEnabled(true);        <newline46mondego>                WifiManager.MulticastLock multicastLock = wm.createMulticastLock(<doubleQuotes46>multicastLock<doubleQuotes46>);<newline46mondego>                multicastLock.setReferenceCounted(true);        <newline46mondego>                multicastLock.acquire();            <newline46mondego><newline46mondego>                ia = InetAddress.getByName(<doubleQuotes46>226.1.1.1<doubleQuotes46>);         <newline46mondego>                ms.setReuseAddress(true);<newline46mondego>                ms.joinGroup(ia);<newline46mondego><newline46mondego>                while(true) {<newline46mondego>                ms.receive(dp);     <newline46mondego>                    s = new String(dp.getData(),0,dp.getLength());<newline46mondego>                    update(s);<newline46mondego>                }<newline46mondego>            } catch (UnknownHostException e) {<newline46mondego>                update(e.getMessage());<newline46mondego>            } catch (IOException e) {<newline46mondego>                update(e.getMessage());<newline46mondego>            }       <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void update(String s)<newline46mondego>    {<newline46mondego>        Seconds.setText(s);<newline46mondego>    }   <newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onCreateOptionsMenu(Menu menu)<newline46mondego>    {<newline46mondego>        // Inflate the menu; this adds items to the action bar if it is present.<newline46mondego>        getMenuInflater().inflate(R.menu.main, menu);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>} <newline46mondego>"
"4690splitHere46","17631955splitHere46","$decarr = isset($_POST['coords']) ? json_decode($_POST['coords'], true) : array();<newline46mondego>"
"4691splitHere46","17632063splitHere46","import java.lang.reflect.*;<newline46mondego>import java.lang.reflect.Constructor.*;<newline46mondego><newline46mondego>String cardName = <whatever><newline46mondego>Card newCard = Class.forName(cardName).getDeclaredConstructor().newInstance();<newline46mondego>"
"4692splitHere46","17632063splitHere46","name"
"4693splitHere46","17632063splitHere46","clone()"
"4694splitHere46","17632064splitHere46","public void paint(Graphics g)<newline46mondego>{<newline46mondego>    super.paint(g);<newline46mondego><newline46mondego>    if(check)<newline46mondego>    {<newline46mondego>        g.setColor(Color.red);<newline46mondego>        g.fillRect(x, y, 50, 50);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4695splitHere46","17632104splitHere46","connection = connectionPool.getConnection();<newline46mondego>"
"4696splitHere46","17632104splitHere46","getConnection()"
"4697splitHere46","17632104splitHere46","java.io.Closeable"
"4698splitHere46","17632104splitHere46","java.lang.AutoCloseable"
"4699splitHere46","17632160splitHere46","String value[] = pce.getPropertyName().toString().split(<doubleQuotes46>\\.<doubleQuotes46>);<newline46mondego>"
"4700splitHere46","17632296splitHere46","byte"
"4701splitHere46","17632296splitHere46","(byte) (prostie4 + prostie3 + prostie2 + prostie1)<newline46mondego>"
"4702splitHere46","17632296splitHere46","<doubleQuotes46><doubleQuotes46> + prostie4 + prostie3 + prostie2 + prostie1<newline46mondego>"
"4703splitHere46","17632362splitHere46","@Override<newline46mondego>    public boolean equals(Object o){<newline46mondego>        Point p = (Point)o;<newline46mondego>        if(dimension != p.coordinates.size())<newline46mondego>            return false;<newline46mondego>        for(int i = 0; i < p.coordinates.size(); i++){<newline46mondego>            if(coordinates.get(i) != p.coordinates.get(i)){<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>"
"4704splitHere46","17632362splitHere46","equals()"
"4705splitHere46","17632362splitHere46","equals"
"4706splitHere46","17632362splitHere46","=="
"4707splitHere46","17632362splitHere46","Integer"
"4708splitHere46","17632362splitHere46","equals"
"4709splitHere46","17632362splitHere46","=="
"4710splitHere46","17632362splitHere46","Integer a = 1000, b = 1000;  <newline46mondego>System.out.println(a == b); // false  <newline46mondego>Integer c = 100, d = 100;  <newline46mondego>System.out.println(c == d); // true<newline46mondego>Integer e=5 , f= new Integer(5);<newline46mondego>System.out.println(e == f) // false<newline46mondego>"
"4711splitHere46","17632362splitHere46","Key"
"4712splitHere46","17632362splitHere46","hash valued map"
"4713splitHere46","17632432splitHere46","Collections.newSetFromMap"
"4714splitHere46","17632432splitHere46","SetFromMap extends AbstracSet"
"4715splitHere46","17632432splitHere46","SetFromMap"
"4716splitHere46","17632432splitHere46","addAll"
"4717splitHere46","17632432splitHere46","AbstracSet"
"4718splitHere46","17632432splitHere46","private Set<Session> subscribers1 = Collections.newSetFromMap(<newline46mondego>        Collections.synchronizedMap(new WeakHashMap<Session, Boolean>())<newline46mondego>);<newline46mondego>"
"4719splitHere46","17632432splitHere46","addAll"
"4720splitHere46","17632432splitHere46","add"
"4721splitHere46","17632432splitHere46","private Set<Session> subscribers2 = Collections.synchronizedSet(<newline46mondego>        Collections.newSetFromMap(new WeakHashMap<Session, Boolean>())<newline46mondego>);<newline46mondego>"
"4722splitHere46","17632518splitHere46","UUID                   = <time_low> <doubleQuotes46>-<doubleQuotes46> <time_mid> <doubleQuotes46>-<doubleQuotes46><newline46mondego>                          <time_high_and_version> <doubleQuotes46>-<doubleQuotes46><newline46mondego>                          <variant_and_sequence> <doubleQuotes46>-<doubleQuotes46><newline46mondego>                          <node><newline46mondego> time_low               = 4*<hexOctet><newline46mondego> time_mid               = 2*<hexOctet><newline46mondego> time_high_and_version  = 2*<hexOctet><newline46mondego> variant_and_sequence   = 2*<hexOctet><newline46mondego> node                   = 6*<hexOctet><newline46mondego> hexOctet               = <hexDigit><hexDigit><newline46mondego> hexDigit               =<newline46mondego>       <doubleQuotes46>0<doubleQuotes46> | <doubleQuotes46>1<doubleQuotes46> | <doubleQuotes46>2<doubleQuotes46> | <doubleQuotes46>3<doubleQuotes46> | <doubleQuotes46>4<doubleQuotes46> | <doubleQuotes46>5<doubleQuotes46> | <doubleQuotes46>6<doubleQuotes46> | <doubleQuotes46>7<doubleQuotes46> | <doubleQuotes46>8<doubleQuotes46> | <doubleQuotes46>9<doubleQuotes46><newline46mondego>       | <doubleQuotes46>a<doubleQuotes46> | <doubleQuotes46>b<doubleQuotes46> | <doubleQuotes46>c<doubleQuotes46> | <doubleQuotes46>d<doubleQuotes46> | <doubleQuotes46>e<doubleQuotes46> | <doubleQuotes46>f<doubleQuotes46><newline46mondego>       | <doubleQuotes46>A<doubleQuotes46> | <doubleQuotes46>B<doubleQuotes46> | <doubleQuotes46>C<doubleQuotes46> | <doubleQuotes46>D<doubleQuotes46> | <doubleQuotes46>E<doubleQuotes46> | <doubleQuotes46>F<doubleQuotes46><newline46mondego>"
"4723splitHere46","17632639splitHere46","showProgressDialogAndRun(ProgressRunnable<T> operation, String displayName, boolean includeDetailLabel)"
"4724splitHere46","17632639splitHere46","...<newline46mondego>    final List<ProgressRunnable> tasks = new ArrayList<ProgressRunnable>();<newline46mondego>    tasks.add(new ProgressRunnable<Object>() {<newline46mondego>        @Override<newline46mondego>        public Object run(ProgressHandle ph) {<newline46mondego>            ph.progress(<doubleQuotes46>Work unit 1<doubleQuotes46>, 1);<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    });<newline46mondego>    tasks.add(new CancellableTask());<newline46mondego>    ProgressUtils.showProgressDialogAndRun(new ProgressRunnable<Void>() {<newline46mondego>        @Override<newline46mondego>        public Void run(ProgressHandle ph) {<newline46mondego>            // run all tasks passing in the ProgressHandle to each<newline46mondego>            for (ProgressRunnable task : tasks) {<newline46mondego>                task.run(ph);<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }, <doubleQuotes46>Running Startup<doubleQuotes46>, true);<newline46mondego>    ...<newline46mondego>    // will show a Cancel button on the progress UI<newline46mondego>    private class CancellableTask implements ProgressRunnable<Object>, Cancellable {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object run(ProgressHandle ph) {<newline46mondego>        ph.progress(<doubleQuotes46>Cancellable work unit<doubleQuotes46>, 2);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean cancel() {<newline46mondego>        // clean up <newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4725splitHere46","17632717splitHere46","array"
"4726splitHere46","17632717splitHere46","array"
"4727splitHere46","17632853splitHere46","missingVar = scan.next();<newline46mondego>"
"4728splitHere46","17632853splitHere46","getUnknownsAccel();<newline46mondego>"
"4729splitHere46","17632853splitHere46","public void getUnknownsAccel(String missingVar){<newline46mondego>}<newline46mondego>"
"4730splitHere46","17632932splitHere46","4545454545l"
"4731splitHere46","17632932splitHere46","4545454545L"
"4732splitHere46","17632932splitHere46","long"
"4733splitHere46","17632932splitHere46","4545454545"
"4734splitHere46","17632932splitHere46","int"
"4735splitHere46","17632932splitHere46","4545454545"
"4736splitHere46","17632932splitHere46","int"
"4737splitHere46","17632932splitHere46","L"
"4738splitHere46","17632932splitHere46","l"
"4739splitHere46","17632932splitHere46","1"
"4740splitHere46","17632932splitHere46","if(Long.valueOf(4545454545l).equals(Long.parseLong(morse)) ){<newline46mondego>     System.out.println(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4741splitHere46","17632932splitHere46","if(Long.parseLong(morse) == 4545454545l){<newline46mondego>   System.out.println(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4742splitHere46","17633054splitHere46","private static void testVargArgsAutoboxingPriority( Integer b )<newline46mondego>{}<newline46mondego>private static void testVargArgsAutoboxingPriority( int b )<newline46mondego>{}<newline46mondego>"
"4743splitHere46","17633054splitHere46","private static void testVargArgsAutoboxingPriority( Integer b, boolean... c )<newline46mondego>{}<newline46mondego>private static void testVargArgsAutoboxingPriority( int b, boolean... c )<newline46mondego>{}<newline46mondego>"
"4744splitHere46","17633130splitHere46","List<Integer>"
"4745splitHere46","17633130splitHere46","Collections.sort()"
"4746splitHere46","17633130splitHere46","List"
"4747splitHere46","17633130splitHere46","Collections.sort()"
"4748splitHere46","17633130splitHere46","Collections.sort()"
"4749splitHere46","17633130splitHere46",".force()"
"4750splitHere46","17633130splitHere46","MappedByteBuffer"
"4751splitHere46","17633130splitHere46","FileChannel.map()"
"4752splitHere46","17633130splitHere46",".subList()"
"4753splitHere46","17633130splitHere46","Integer.MAX_VALUE"
"4754splitHere46","17633130splitHere46","((1 << 31 - 1) << 2)"
"4755splitHere46","17633150splitHere46","double temperature = intent.getIntExtra(<doubleQuotes46>temperature<doubleQuotes46>, -1) / 10;<newline46mondego>double voltage = intent.getIntExtra(<doubleQuotes46>voltage<doubleQuotes46>, -1) / 1000;<newline46mondego>"
"4756splitHere46","17633195splitHere46","import java.awt.CardLayout;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class CardLayoutTutorial {<newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>CardLayout demo<doubleQuotes46>);<newline46mondego>    JPanel panelCont = new JPanel();<newline46mondego>    JPanel panelFirst = new JPanel();<newline46mondego>    JPanel panelSecond = new JPanel();<newline46mondego>    JButton buttonOne = new JButton(<doubleQuotes46>Switch to second panel/workspace<doubleQuotes46>);<newline46mondego>    JButton buttonSecond = new JButton(<doubleQuotes46>Switch to first panel/workspace<doubleQuotes46>);<newline46mondego>    CardLayout cl = new CardLayout();<newline46mondego><newline46mondego>    public CardLayoutTutorial() {<newline46mondego>        panelCont.setLayout(cl);<newline46mondego><newline46mondego>        panelFirst.add(buttonOne);<newline46mondego>        panelSecond.add(buttonSecond);<newline46mondego>        panelFirst.setBackground(Color.BLUE);<newline46mondego>        panelSecond.setBackground(Color.GREEN);<newline46mondego><newline46mondego>        panelCont.add(panelFirst, <doubleQuotes46>1<doubleQuotes46>);<newline46mondego>        panelCont.add(panelSecond, <doubleQuotes46>2<doubleQuotes46>);<newline46mondego>        cl.show(panelCont, <doubleQuotes46>1<doubleQuotes46>);<newline46mondego><newline46mondego>        buttonOne.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent arg0) {<newline46mondego>                cl.show(panelCont, <doubleQuotes46>2<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        buttonSecond.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent arg0) {<newline46mondego>                cl.show(panelCont, <doubleQuotes46>1<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        frame.add(panelCont);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new CardLayoutTutorial();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4757splitHere46","17633195splitHere46","buttonOne"
"4758splitHere46","17633195splitHere46","panelSecond"
"4759splitHere46","17633195splitHere46","buttonSecond"
"4760splitHere46","17633195splitHere46","panelFirst"
"4761splitHere46","17633297splitHere46","Vector"
"4762splitHere46","17633297splitHere46","List"
"4763splitHere46","17633297splitHere46","ArrayList"
"4764splitHere46","17633297splitHere46","Vector"
"4765splitHere46","17633297splitHere46","List"
"4766splitHere46","17633297splitHere46","ArrayList"
"4767splitHere46","17633297splitHere46","Array"
"4768splitHere46","17633297splitHere46","java.lang.reflect.Array"
"4769splitHere46","17633297splitHere46","int[]"
"4770splitHere46","17633297splitHere46","Vector"
"4771splitHere46","17633297splitHere46","ConcurrentHashMap"
"4772splitHere46","17633297splitHere46","CopyOnWriteArrayList"
"4773splitHere46","17633297splitHere46","Vector"
"4774splitHere46","17633297splitHere46","Vector"
"4775splitHere46","17633297splitHere46","Iterator"
"4776splitHere46","17633297splitHere46","Enumeration"
"4777splitHere46","17633297splitHere46","Enumeration"
"4778splitHere46","17633297splitHere46","Iterator"
"4779splitHere46","17633297splitHere46","t1"
"4780splitHere46","17633297splitHere46","t2"
"4781splitHere46","17633297splitHere46","Vector"
"4782splitHere46","17633297splitHere46","Iterator"
"4783splitHere46","17633297splitHere46","t1"
"4784splitHere46","17633297splitHere46","while (it.hasNext())<newline46mondego>    it.next();<newline46mondego>"
"4785splitHere46","17633297splitHere46","t2"
"4786splitHere46","17633297splitHere46","// remember: different iterator<newline46mondego>if (!it.hasNext())<newline46mondego>    it.remove();<newline46mondego>"
"4787splitHere46","17633297splitHere46","t1                  t2<newline46mondego>------              ------<newline46mondego>hasNext(): true<newline46mondego>                    .hasNext(): false<newline46mondego>                    removes last element<newline46mondego>.next() --> BOOM<newline46mondego>"
"4788splitHere46","17633297splitHere46","Vector"
"4789splitHere46","17633303splitHere46","<sj:datepicker value=<doubleQuotes46>today<doubleQuotes46> id=<doubleQuotes46>date3<doubleQuotes46> name=<doubleQuotes46>date3<doubleQuotes46> displayFormat=<doubleQuotes46>dd.mm.yy<doubleQuotes46> label=<doubleQuotes46>Today<doubleQuotes46> /><newline46mondego><sj:datepicker value=<doubleQuotes46>yesterday<doubleQuotes46> id=<doubleQuotes46>date4<doubleQuotes46> name=<doubleQuotes46>date4<doubleQuotes46> displayFormat=<doubleQuotes46>mm/dd/yy<doubleQuotes46> label=<doubleQuotes46>Yesterday<doubleQuotes46> /><newline46mondego><sj:datepicker value=<doubleQuotes46>tomorrow<doubleQuotes46> id=<doubleQuotes46>date5<doubleQuotes46> name=<doubleQuotes46>date5<doubleQuotes46> displayFormat=<doubleQuotes46>DD, d MM yy<doubleQuotes46> label=<doubleQuotes46>Tomorrow<doubleQuotes46> /><newline46mondego><sj:datepicker value=<doubleQuotes46>2004-08-14<doubleQuotes46> id=<doubleQuotes46>date6<doubleQuotes46> name=<doubleQuotes46>date6<doubleQuotes46> displayFormat=<doubleQuotes46>d M, yy<doubleQuotes46> label=<doubleQuotes46>String Value<doubleQuotes46> /><newline46mondego>"
"4790splitHere46","17633341splitHere46","import sys<newline46mondego>print sys.path<newline46mondego>"
"4791splitHere46","17633464splitHere46","s3"
"4792splitHere46","17633464splitHere46","s1"
"4793splitHere46","17633464splitHere46","=="
"4794splitHere46","17633652splitHere46","private void updateContent()<newline46mondego>{<newline46mondego>    DownloadButton.setEnabled(false);<newline46mondego>    SaveLocationButton.setEnabled(false);<newline46mondego>    UpdateText.setText(<doubleQuotes46>Update to Version <doubleQuotes46> + ServerVersionNumber + <doubleQuotes46>...<doubleQuotes46>);<newline46mondego>    UpdateText.setForeground(new Color(200, 150, 0, 255));<newline46mondego>    ProgressText.setText(<doubleQuotes46>(1/2) Files will be downloaded<doubleQuotes46>);<newline46mondego>    ProgressText.setForeground(new Color(200, 150, 0, 255));<newline46mondego>    LoadingBar.setStringPainted(true);<newline46mondego><newline46mondego>    new Thread() {<newline46mondego>        public void run() {<newline46mondego>            for(int i = 1; i < (ServerVersionNumber - LocalVersionNumber + 1); i++)<newline46mondego>            {<newline46mondego>                // the rest<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }.start();<newline46mondego>}<newline46mondego>"
"4795splitHere46","17633831splitHere46","Exception"
"4796splitHere46","17633831splitHere46","PrintWriter"
"4797splitHere46","17633831splitHere46","static"
"4798splitHere46","17633831splitHere46","static PrintWriter pw ;<newline46mondego>static {<newline46mondego>   try{<newline46mondego>     pw = new PrintWriter(<doubleQuotes46>Results.txt<doubleQuotes46>, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>     }<newline46mondego>     catch(IOException e){<newline46mondego>        e.printStackTrace();<newline46mondego>        throw new RuntimeException(e);  <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4799splitHere46","17633987splitHere46","select a from C as c right join c.a as a<newline46mondego>  with a.class = 'B'<newline46mondego>"
"4800splitHere46","17633987splitHere46","class"
"4801splitHere46","17634175splitHere46","cast"
"4802splitHere46","17634175splitHere46","byte"
"4803splitHere46","17634175splitHere46","public enum Rank {<newline46mondego>    TEN(<doubleQuotes46>Ten<doubleQuotes46>, (byte)1),<newline46mondego>    NINE(<doubleQuotes46>Nine<doubleQuotes46>, (byte)2),<newline46mondego>    EIGHT(<doubleQuotes46>Eight<doubleQuotes46>, (byte)0),<newline46mondego>    SEVEN(<doubleQuotes46>Seven<doubleQuotes46>, (byte)0);<newline46mondego><newline46mondego><newline46mondego>    private final String name;<newline46mondego>    private final byte point;<newline46mondego><newline46mondego>    private Rank(String name, byte point)<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>        this.point = point;<newline46mondego>    }<newline46mondego>"
"4804splitHere46","17634253splitHere46","getter"
"4805splitHere46","17634253splitHere46","setter"
"4806splitHere46","17634253splitHere46","getter"
"4807splitHere46","17634304splitHere46","setLevel()"
"4808splitHere46","17634304splitHere46","compresser.deflate(new byte[0]);"
"4809splitHere46","17634304splitHere46","deflate()"
"4810splitHere46","17634304splitHere46","setLevel()"
"4811splitHere46","17634304splitHere46","deflateParams()"
"4812splitHere46","17634304splitHere46","deflateParams()"
"4813splitHere46","17634304splitHere46","finish()"
"4814splitHere46","17634304splitHere46","deflate()"
"4815splitHere46","17634304splitHere46","Z_FINISH"
"4816splitHere46","17634304splitHere46","deflate()"
"4817splitHere46","17634304splitHere46","setLevel()"
"4818splitHere46","17634304splitHere46","deflate()"
"4819splitHere46","17634304splitHere46","setLevel()"
"4820splitHere46","17634304splitHere46","deflate()"
"4821splitHere46","17634304splitHere46","deflate()"
"4822splitHere46","17634304splitHere46","finish()"
"4823splitHere46","17634728splitHere46","public interface TrendLine {<newline46mondego>    public void setValues(double[] y, double[] x); // y ~ f(x)<newline46mondego>    public double predict(double x); // get a predicted y for a given x<newline46mondego>}<newline46mondego>"
"4824splitHere46","17634728splitHere46","public abstract class OLSTrendLine implements TrendLine {<newline46mondego><newline46mondego>    RealMatrix coef = null; // will hold prediction coefs once we get values<newline46mondego><newline46mondego>    protected abstract double[] xVector(double x); // create vector of values from x<newline46mondego>    protected abstract boolean logY(); // set true to predict log of y (note: y must be positive)<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setValues(double[] y, double[] x) {<newline46mondego>        if (x.length != y.length) {<newline46mondego>            throw new IllegalArgumentException(String.format(<doubleQuotes46>The numbers of y and x values must be equal (%d != %d)<doubleQuotes46>,y.length,x.length));<newline46mondego>        }<newline46mondego>        double[][] xData = new double[x.length][]; <newline46mondego>        for (int i = 0; i < x.length; i++) {<newline46mondego>            // the implementation determines how to produce a vector of predictors from a single x<newline46mondego>            xData[i] = xVector(x[i]);<newline46mondego>        }<newline46mondego>        if(logY()) { // in some models we are predicting ln y, so we replace each y with ln y<newline46mondego>            y = Arrays.copyOf(y, y.length); // user might not be finished with the array we were given<newline46mondego>            for (int i = 0; i < x.length; i++) {<newline46mondego>                y[i] = Math.log(y[i]);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        OLSMultipleLinearRegression ols = new OLSMultipleLinearRegression();<newline46mondego>        ols.setNoIntercept(true); // let the implementation include a constant in xVector if desired<newline46mondego>        ols.newSampleData(y, xData); // provide the data to the model<newline46mondego>        coef = MatrixUtils.createColumnRealMatrix(ols.estimateRegressionParameters()); // get our coefs<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public double predict(double x) {<newline46mondego>        double yhat = coef.preMultiply(xVector(x))[0]; // apply coefs to xVector<newline46mondego>        if (logY()) yhat = (Math.exp(yhat)); // if we predicted ln y, we still need to get y<newline46mondego>        return yhat;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4825splitHere46","17634728splitHere46","public class PolyTrendLine extends OLSTrendLine {<newline46mondego>    final int degree;<newline46mondego>    public PolyTrendLine(int degree) {<newline46mondego>        if (degree < 0) throw new IllegalArgumentException(<doubleQuotes46>The degree of the polynomial must not be negative<doubleQuotes46>);<newline46mondego>        this.degree = degree;<newline46mondego>    }<newline46mondego>    protected double[] xVector(double x) { // {1, x, x*x, x*x*x, ...}<newline46mondego>        double[] poly = new double[degree+1];<newline46mondego>        double xi=1;<newline46mondego>        for(int i=0; i<=degree; i++) {<newline46mondego>            poly[i]=xi;<newline46mondego>            xi*=x;<newline46mondego>        }<newline46mondego>        return poly;<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    protected boolean logY() {return false;}<newline46mondego>}<newline46mondego>"
"4826splitHere46","17634728splitHere46","public class ExpTrendLine extends OLSTrendLine {<newline46mondego>    @Override<newline46mondego>    protected double[] xVector(double x) {<newline46mondego>        return new double[]{1,x};<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected boolean logY() {return true;}<newline46mondego>}<newline46mondego>"
"4827splitHere46","17634728splitHere46","public class PowerTrendLine extends OLSTrendLine {<newline46mondego>    @Override<newline46mondego>    protected double[] xVector(double x) {<newline46mondego>        return new double[]{1,Math.log(x)};<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected boolean logY() {return true;}<newline46mondego><newline46mondego>}<newline46mondego>"
"4828splitHere46","17634728splitHere46","public class LogTrendLine extends OLSTrendLine {<newline46mondego>    @Override<newline46mondego>    protected double[] xVector(double x) {<newline46mondego>        return new double[]{1,Math.log(x)};<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected boolean logY() {return false;}<newline46mondego>}<newline46mondego>"
"4829splitHere46","17634728splitHere46","public static void main(String[] args) {<newline46mondego>    TrendLine t = new PolyTrendLine(2);<newline46mondego>    Random rand = new Random();<newline46mondego>    double[] x = new double[1000*1000];<newline46mondego>    double[] err = new double[x.length];<newline46mondego>    double[] y = new double[x.length];<newline46mondego>    for (int i=0; i<x.length; i++) { x[i] = 1000*rand.nextDouble(); }<newline46mondego>    for (int i=0; i<x.length; i++) { err[i] = 100*rand.nextGaussian(); } <newline46mondego>    for (int i=0; i<x.length; i++) { y[i] = x[i]*x[i]+err[i]; } // quadratic model<newline46mondego>    t.setValues(y,x);<newline46mondego>    System.out.println(t.predict(12)); // when x=12, y should be... , eg 143.61380202745192<newline46mondego>}<newline46mondego>"
"4830splitHere46","17634730splitHere46","for (Gadget gadget : l) {<newline46mondego>        gadget.switchon();<newline46mondego>    }<newline46mondego>"
"4831splitHere46","17634730splitHere46","gadget.switchon();"
"4832splitHere46","17634730splitHere46","switchon()"
"4833splitHere46","17634730splitHere46","switchon()"
"4834splitHere46","17634730splitHere46","switchon()"
"4835splitHere46","17634730splitHere46","DemoPersonnel p = new DemoPersonnel();<newline46mondego>    for (Gadget gadget : l) {<newline46mondego>        p.demo(gadget);<newline46mondego>    }<newline46mondego>"
"4836splitHere46","17634730splitHere46","demo(Gadget g)"
"4837splitHere46","17634730splitHere46","demo(Gadget g)"
"4838splitHere46","17634752splitHere46","String parameter = <doubleQuotes46>sum(12),sum(3,34,23),122<doubleQuotes46>;<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>(sum\\(.*?\\)|[0-9]+)<doubleQuotes46>);//<newline46mondego>Matcher matcher = pattern.matcher(parameter);<newline46mondego>while (matcher.find()) {<newline46mondego>    System.out.println(<doubleQuotes46>match: <doubleQuotes46> + matcher.group(1));<newline46mondego>}<newline46mondego>"
"4839splitHere46","17634752splitHere46","match: sum(12)<newline46mondego>match: sum(3,34,23)<newline46mondego>match: 122<newline46mondego>"
"4840splitHere46","17635047splitHere46","float"
"4841splitHere46","17635047splitHere46","long"
"4842splitHere46","17635047splitHere46","editor.putLong(String.valueOf(id)+<doubleQuotes46>TIME<doubleQuotes46>, time);<newline46mondego><newline46mondego>time = PreferenceManager.getDefaultSharedPreferences(getBaseContext()).getLong(String.valueOf(id)+<doubleQuotes46>TIME<doubleQuotes46>, 0);<newline46mondego>String dateString = new SimpleDateFormat(<doubleQuotes46>hh:mm a<doubleQuotes46>).format(new Date(time));<newline46mondego>"
"4843splitHere46","17635215splitHere46","Properties"
"4844splitHere46","17635215splitHere46","Hashtable"
"4845splitHere46","17635215splitHere46","Properties"
"4846splitHere46","17635215splitHere46","Hashtable"
"4847splitHere46","17635550splitHere46","<int-jms:message-driven-channel-adapter channel=<doubleQuotes46>trade.input.channel<doubleQuotes46><newline46mondego>    concurrent-consumers=<doubleQuotes46>1<doubleQuotes46> connection-factory=<doubleQuotes46>connectionFactory<doubleQuotes46><newline46mondego>    destination=<doubleQuotes46>issue.queue<doubleQuotes46>/><newline46mondego><newline46mondego><int:channel id=<doubleQuotes46>trade.input.channel<doubleQuotes46>/><newline46mondego><newline46mondego><int-jdbc:outbound-channel-adapter <newline46mondego>    channel=<doubleQuotes46>trade.input.channel<doubleQuotes46><newline46mondego>    data-source=<doubleQuotes46>dataSource<doubleQuotes46> query=<doubleQuotes46>insert into target_table (issue_code,issue_price,transaction_timestamp) values (:issue_code,:issue_price,:issue_timestamp)<doubleQuotes46><newline46mondego>    sql-parameter-source-factory=<doubleQuotes46>spelFactory<doubleQuotes46>/>    <newline46mondego><newline46mondego><bean id=<doubleQuotes46>spelFactory<doubleQuotes46> class=<doubleQuotes46>org.springframework.integration.jdbc.ExpressionEvaluatingSqlParameterSourceFactory<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>parameterExpressions<doubleQuotes46>><newline46mondego>        <map><newline46mondego>            <entry key=<doubleQuotes46>issue_code<doubleQuotes46> value=<doubleQuotes46>payload.toString().split(',')[0]<doubleQuotes46>/><newline46mondego>            <entry key=<doubleQuotes46>issue_price<doubleQuotes46> value=<doubleQuotes46>payload.toString().split(',')[1]<doubleQuotes46>/><newline46mondego>            <entry key=<doubleQuotes46>issue_timestamp<doubleQuotes46> value=<doubleQuotes46>payload.toString().split(',')[2]<doubleQuotes46>/><newline46mondego>        </map><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"4848splitHere46","17635550splitHere46","MSFT,100.00,1373761697932"
"4849splitHere46","17635555splitHere46","5B<newline46mondego>  3R     10B<newline46mondego>1B  4B<newline46mondego><newline46mondego>      3B<newline46mondego>    1B   5R<newline46mondego>        4B  10B<newline46mondego>"
"4850splitHere46","17635568splitHere46","if e instanceof FooException"
"4851splitHere46","17635649splitHere46","public class DefaultTreeRenderer extends DefaultTreeCellRenderer {<newline46mondego>private static final long serialVersionUID = 1L;<newline46mondego>Map<String,Icon> amap = new HashMap<>();<newline46mondego>ArrayList<String > drawList = new ArrayList<>();<newline46mondego><newline46mondego>public DefaultTreeRenderer(ArrayList<String > list,Map<String,Icon> amap1) throws IOException {<newline46mondego><newline46mondego>    setData(list,amap1);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>private void setData(ArrayList<String > lists,Map<String,Icon> amap2){<newline46mondego>    amap = amap2;<newline46mondego>    drawList = lists;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public Component getTreeCellRendererComponent(<newline46mondego>                    JTree tree,<newline46mondego>                    Object value,<newline46mondego>                    boolean sel,<newline46mondego>                    boolean expanded,<newline46mondego>                    boolean leaf,<newline46mondego>                    int row,<newline46mondego>                    boolean hasFocus) {<newline46mondego><newline46mondego><newline46mondego><newline46mondego>           super.getTreeCellRendererComponent(<newline46mondego>                    tree, value, sel,<newline46mondego>                    expanded, leaf, row,<newline46mondego>                    hasFocus);<newline46mondego><newline46mondego><newline46mondego>   Object nodeInfo = ((DefaultMutableTreeNode) value).getUserObject();<newline46mondego>   Icon bn = this.leafIcon;<newline46mondego><newline46mondego>    if (getDrawable(nodeInfo)) {<newline46mondego>      setIcon(amap.get(nodeInfo.toString()));     <newline46mondego>  } <newline46mondego><newline46mondego>   if(this.getIcon()!=null && leaf) {<newline46mondego>       setText(nodeInfo.toString()+<doubleQuotes46>       √<doubleQuotes46>);<newline46mondego>   }<newline46mondego>   if(this.getIcon()==null && leaf){<newline46mondego>        setIcon(bn);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    return this;<newline46mondego>}<newline46mondego><newline46mondego>protected boolean getDrawable(Object value) {<newline46mondego><newline46mondego>    String title = value.toString();<newline46mondego><newline46mondego>    for(String c : drawList){<newline46mondego>    if (title.equals(c)) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    }<newline46mondego><newline46mondego>    return false;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4852splitHere46","17635649splitHere46","ArrayList<String> xmllist= new ArrayList<>();<newline46mondego>Map<String,Icon> amap = new HashMap<>();<newline46mondego><newline46mondego>if(g.getName().endsWith(<doubleQuotes46>png<doubleQuotes46>) ||g.getName().endsWith(<doubleQuotes46>jpg<doubleQuotes46>) ) {<newline46mondego><newline46mondego>try {<newline46mondego>       DefaultMutableTreeNode node = (DefaultMutableTreeNode)<newline46mondego>                   jTree1.getLastSelectedPathComponent();<newline46mondego><newline46mondego>    Object nodeInfo = node.getUserObject();<newline46mondego>    String hn = imagePathTextBox.getText();<newline46mondego><newline46mondego>    Image img = ImageIO.read(new File(hn)) ;  <newline46mondego>    Image newimg = img.getScaledInstance( 28, 28,  java.awt.Image.SCALE_SMOOTH ) ;  <newline46mondego>    Icon x = new ImageIcon(newimg);<newline46mondego>    amap.put(nodeInfo.toString() , x);<newline46mondego><newline46mondego>     jTree1.setCellRenderer(new DefaultTreeRenderer(xmllist,amap));<newline46mondego>    } catch (IOException ex) {<newline46mondego>        Logger.getLogger(frame.class.getName()).log(Level.SEVERE , null , ex);<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"4853splitHere46","17635723splitHere46","scala> Map(<doubleQuotes46>field<doubleQuotes46> -> <doubleQuotes46>value<doubleQuotes46>,<doubleQuotes46>mapField<doubleQuotes46>-> Map(<doubleQuotes46>internalField<doubleQuotes46>-><doubleQuotes46>someValue<doubleQuotes46>))<newline46mondego>res0: scala.collection.immutable.Map[String,Object] = Map(field -> value, mapField -> Map(internalField -> someValue))<newline46mondego><newline46mondego>scala> import collection.JavaConverters._<newline46mondego>import collection.JavaConverters._<newline46mondego><newline46mondego>scala> res0.mapValues { case m: Map[_,_] => m.asJava case x => x }<newline46mondego>res2: scala.collection.immutable.Map[String,Object] = Map(field -> value, mapField -> {internalField=someValue})<newline46mondego><newline46mondego>scala> res0.asJava<newline46mondego>res3: java.util.Map[String,Object] = {field=value, mapField=Map(internalField -> someValue)}<newline46mondego><newline46mondego>scala> .asScala<newline46mondego>res4: scala.collection.mutable.Map[String,Object] = Map(field -> value, mapField -> Map(internalField -> someValue))<newline46mondego><newline46mondego>scala> .foreach { case (k, v: collection.Map[_,_]) => println(v.toList) case _ =>  }<newline46mondego>List((internalField,someValue))<newline46mondego>"
"4854splitHere46","17635723splitHere46","scala> :edit res0<newline46mondego>+Map(<doubleQuotes46>field<doubleQuotes46> -> Left(<doubleQuotes46>value<doubleQuotes46>),<doubleQuotes46>mapField<doubleQuotes46>-> Right(Map(<doubleQuotes46>internalField<doubleQuotes46>-><doubleQuotes46>someValue<doubleQuotes46>)))<newline46mondego>res6: scala.collection.immutable.Map[String,Product with Serializable with scala.util.Either[String,scala.collection.immutable.Map[String,String]]] = Map(field -> Left(value), mapField -> Right(Map(internalField -> someValue)))<newline46mondego><newline46mondego>scala> .mapValues { case Left(s) => s.length case Right(m) => m.values.map(_.length).sum }<newline46mondego>res7: scala.collection.immutable.Map[String,Int] = Map(field -> 5, mapField -> 9)<newline46mondego>"
"4855splitHere46","17635777splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><company><newline46mondego>    <staff id=<doubleQuotes46>1001<doubleQuotes46>><newline46mondego>        <firstname>yong</firstname><newline46mondego>        <lastname>mook kim</lastname><newline46mondego>        <nickname>mkyong</nickname><newline46mondego>        <salary>100000</salary><newline46mondego>    </staff><newline46mondego>    <staff id=<doubleQuotes46>2001<doubleQuotes46>><newline46mondego>        <firstname>low</firstname><newline46mondego>        <lastname>yin fong</lastname><newline46mondego>        <nickname>fong fong</nickname><newline46mondego>        <salary>200000</salary><newline46mondego>    </staff><newline46mondego></company><newline46mondego>"
"4856splitHere46","17635777splitHere46","try {<newline46mondego><newline46mondego>    File fXmlFile = new File(<doubleQuotes46>/Users/mkyong/staff.xml<doubleQuotes46>);<newline46mondego>    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();<newline46mondego>    Document doc = dBuilder.parse(fXmlFile);<newline46mondego><newline46mondego>    //optional, but recommended<newline46mondego>    //read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work<newline46mondego>    doc.getDocumentElement().normalize();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Root element :<doubleQuotes46> + doc.getDocumentElement().getNodeName());<newline46mondego><newline46mondego>    NodeList nList = doc.getElementsByTagName(<doubleQuotes46>staff<doubleQuotes46>);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>----------------------------<doubleQuotes46>);<newline46mondego><newline46mondego>    for (int temp = 0; temp < nList.getLength(); temp++) {<newline46mondego><newline46mondego>        Node nNode = nList.item(temp);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>\nCurrent Element :<doubleQuotes46> + nNode.getNodeName());<newline46mondego><newline46mondego>        if (nNode.getNodeType() == Node.ELEMENT_NODE) {<newline46mondego><newline46mondego>            Element eElement = (Element) nNode;<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Staff id : <doubleQuotes46> + eElement.getAttribute(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>            System.out.println(<doubleQuotes46>First Name : <doubleQuotes46> + eElement.getElementsByTagName(<doubleQuotes46>firstname<doubleQuotes46>).item(0).getTextContent());<newline46mondego>            System.out.println(<doubleQuotes46>Last Name : <doubleQuotes46> + eElement.getElementsByTagName(<doubleQuotes46>lastname<doubleQuotes46>).item(0).getTextContent());<newline46mondego>            System.out.println(<doubleQuotes46>Nick Name : <doubleQuotes46> + eElement.getElementsByTagName(<doubleQuotes46>nickname<doubleQuotes46>).item(0).getTextContent());<newline46mondego>            System.out.println(<doubleQuotes46>Salary : <doubleQuotes46> + eElement.getElementsByTagName(<doubleQuotes46>salary<doubleQuotes46>).item(0).getTextContent());<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>    } catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>    }<newline46mondego>  }<newline46mondego>"
"4857splitHere46","17635805splitHere46","String.Format(<doubleQuotes46>{0:x2}<doubleQuotes46>, arrayOfByte[i]);<newline46mondego>"
"4858splitHere46","17635805splitHere46","String.format(<doubleQuotes46>%02x<doubleQuotes46>, arrayOfByte[i]);<newline46mondego>"
"4859splitHere46","17635934splitHere46","firstNumber = firstNumber.replaceAll(<doubleQuotes46> <doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4860splitHere46","17635945splitHere46","System.out.println(direction == 0 ? 'L' : 'R');<newline46mondego>"
"4861splitHere46","17635979splitHere46","String OUTPUT_DIR = this.getClass().getCanonicalName().replace(<doubleQuotes46>.<doubleQuotes46>,<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>OUTPUT_DIR = OUTPUT_DIR.substring(0,OUTPUT_DIR.lastindexOf('/'));<newline46mondego>"
"4862splitHere46","17636054splitHere46","$$ = method($1, $2, ...);"
"4863splitHere46","17636054splitHere46","m4"
"4864splitHere46","17636138splitHere46","run()"
"4865splitHere46","17636138splitHere46","Job"
"4866splitHere46","17636138splitHere46","stopJob"
"4867splitHere46","17636138splitHere46","JButton"
"4868splitHere46","17636138splitHere46","Job"
"4869splitHere46","17636138splitHere46","run()"
"4870splitHere46","17636138splitHere46","while"
"4871splitHere46","17636138splitHere46","!killFlag"
"4872splitHere46","17636138splitHere46","killFlag == true"
"4873splitHere46","17636138splitHere46","goFlag == true"
"4874splitHere46","17636138splitHere46","stopJob"
"4875splitHere46","17636138splitHere46","actionPerformed()"
"4876splitHere46","17636138splitHere46","goFlag"
"4877splitHere46","17636138splitHere46","Job"
"4878splitHere46","17636224splitHere46","e.getPropertyName() == <doubleQuotes46>state<doubleQuotes46>"
"4879splitHere46","17636224splitHere46","String"
"4880splitHere46","17636224splitHere46","if"
"4881splitHere46","17636224splitHere46","true"
"4882splitHere46","17636224splitHere46","<doubleQuotes46>state<doubleQuotes46>.equals(e.getPropertyName())"
"4883splitHere46","17636224splitHere46","actionPerformed"
"4884splitHere46","17636224splitHere46","stopCellEditing"
"4885splitHere46","17636224splitHere46","JTable"
"4886splitHere46","17636224splitHere46","JTable"
"4887splitHere46","17636224splitHere46","GridBagLayout"
"4888splitHere46","17636224splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.beans.PropertyChangeEvent;<newline46mondego>import java.beans.PropertyChangeListener;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.EventObject;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Random;<newline46mondego>import javax.swing.AbstractCellEditor;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JProgressBar;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.SwingWorker;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego>import javax.swing.table.AbstractTableModel;<newline46mondego>import javax.swing.table.TableCellEditor;<newline46mondego>import javax.swing.table.TableCellRenderer;<newline46mondego><newline46mondego>public class ThreadMonitorExample {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new ThreadMonitorExample();<newline46mondego>    }<newline46mondego><newline46mondego>    public ThreadMonitorExample() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException ex) {<newline46mondego>                } catch (InstantiationException ex) {<newline46mondego>                } catch (IllegalAccessException ex) {<newline46mondego>                } catch (UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                ThreadTableModel model = new ThreadTableModel();<newline46mondego>                model.add(new Task(0, model));<newline46mondego>                model.add(new Task(1, model));<newline46mondego>                model.add(new Task(2, model));<newline46mondego>                model.add(new Task(3, model));<newline46mondego>                model.add(new Task(4, model));<newline46mondego>                JTable table = new JTable(model);<newline46mondego><newline46mondego>                TaskProgressRenderer progressRenderer = new TaskProgressRenderer();<newline46mondego>                TaskStatusRenderer statusRenderer = new TaskStatusRenderer();<newline46mondego>                table.getColumnModel().getColumn(1).setCellRenderer(progressRenderer);<newline46mondego>                table.getColumnModel().getColumn(2).setCellRenderer(statusRenderer);<newline46mondego>                table.getColumnModel().getColumn(2).setCellEditor(new TaskStatusEditor());<newline46mondego><newline46mondego>                table.setRowHeight(<newline46mondego>                                Math.max(getCellRendererHeight(table, 0, 1, progressRenderer), <newline46mondego>                                getCellRendererHeight(table, 0, 2, statusRenderer)));<newline46mondego><newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new JScrollPane(table));<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    protected int getCellRendererHeight(JTable table, int row, int column, TableCellRenderer renderer) {<newline46mondego>        return renderer.getTableCellRendererComponent(table, table.getValueAt(row, column), true, true, row, column).getPreferredSize().height;<newline46mondego>    }<newline46mondego><newline46mondego>    public class ThreadTableModel extends AbstractTableModel {<newline46mondego><newline46mondego>        private String[] headers = {<doubleQuotes46>ID<doubleQuotes46>, <doubleQuotes46>Progress<doubleQuotes46>, <doubleQuotes46>Action<doubleQuotes46>};<newline46mondego>        private List<Task> tasks;<newline46mondego><newline46mondego>        public ThreadTableModel() {<newline46mondego>            tasks = new ArrayList<>(25);<newline46mondego>        }<newline46mondego><newline46mondego>        public void add(Task task) {<newline46mondego>            int row = getRowCount();<newline46mondego>            tasks.add(task);<newline46mondego>            fireTableRowsInserted(row, getRowCount() - 1);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean isCellEditable(int rowIndex, int columnIndex) {<newline46mondego>            return columnIndex == 2 && !tasks.get(rowIndex).isRunning() && !tasks.get(rowIndex).isDone();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getRowCount() {<newline46mondego>            return tasks.size();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getColumnCount() {<newline46mondego>            return headers.length;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Class<?> getColumnClass(int columnIndex) {<newline46mondego>            Class clazz = Object.class;<newline46mondego>            switch (columnIndex) {<newline46mondego>                case 0:<newline46mondego>                    clazz = String.class;<newline46mondego>                    break;<newline46mondego>                case 1:<newline46mondego>                    clazz = Integer.class;<newline46mondego>                    break;<newline46mondego>            }<newline46mondego>            return clazz;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getColumnName(int column) {<newline46mondego>            return headers[column];<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getValueAt(int rowIndex, int columnIndex) {<newline46mondego>            Task task = tasks.get(rowIndex);<newline46mondego>            Object value = null;<newline46mondego>            switch (columnIndex) {<newline46mondego>                case 0:<newline46mondego>                    value = task.getID();<newline46mondego>                    break;<newline46mondego>                case 1:<newline46mondego>                    value = task.getProgress();<newline46mondego>                    break;<newline46mondego>                case 2:<newline46mondego>                    value = task;<newline46mondego>                    break;<newline46mondego>            }<newline46mondego>            return value;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {<newline46mondego>            System.out.println(<doubleQuotes46>setValueAt <doubleQuotes46> + rowIndex + <doubleQuotes46>x<doubleQuotes46> + columnIndex);<newline46mondego>            if (columnIndex == 2) {<newline46mondego>                Task task = tasks.get(rowIndex);<newline46mondego>                if (!task.isRunning() && !task.isDone()) {<newline46mondego>                    task.execute();<newline46mondego>                    fireTableCellUpdated(rowIndex, columnIndex);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public void updated(Task task) {<newline46mondego>            int row = tasks.indexOf(task);<newline46mondego>            System.out.println(<doubleQuotes46>Row updated <doubleQuotes46> + row);<newline46mondego>            fireTableRowsUpdated(row, row);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public class TaskProgressRenderer extends JProgressBar implements TableCellRenderer {<newline46mondego><newline46mondego>        public TaskProgressRenderer() {<newline46mondego>            setOpaque(false);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego>            if (value instanceof Integer) {<newline46mondego>                int progress = (int) value;<newline46mondego>                System.out.println(<doubleQuotes46>cellProgress = <doubleQuotes46> + progress);<newline46mondego>                setValue(progress);<newline46mondego>            }<newline46mondego>            if (isSelected) {<newline46mondego>                setBackground(table.getSelectionBackground());<newline46mondego>                setOpaque(true);<newline46mondego>            } else {<newline46mondego>                setBackground(table.getBackground());<newline46mondego>                setOpaque(false);<newline46mondego>            }<newline46mondego>            return this;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public class TaskStatusEditor extends AbstractCellEditor implements TableCellEditor {<newline46mondego><newline46mondego>        private JPanel editor;<newline46mondego><newline46mondego>        public TaskStatusEditor() {<newline46mondego>            editor = new JPanel();<newline46mondego>            editor.add(new JButton(<doubleQuotes46>Start<doubleQuotes46>));<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean isCellEditable(EventObject e) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getCellEditorValue() {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {<newline46mondego>            SwingUtilities.invokeLater(new Runnable() {<newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego>                    stopCellEditing();<newline46mondego>                }<newline46mondego>            });<newline46mondego>            return editor;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public class TaskStatusRenderer extends JPanel implements TableCellRenderer {<newline46mondego><newline46mondego>        private JButton start;<newline46mondego>        private JLabel label;<newline46mondego><newline46mondego>        public TaskStatusRenderer() {<newline46mondego>            setOpaque(false);<newline46mondego>            start = new JButton(<doubleQuotes46>Start<doubleQuotes46>);<newline46mondego>            label = new JLabel();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego>            removeAll();<newline46mondego>            if (value instanceof Task) {<newline46mondego>                Task task = (Task) value;<newline46mondego>                if (task.isDone()) {<newline46mondego>                    try {<newline46mondego>                        label.setText(task.get());<newline46mondego>                    } catch (Exception ex) {<newline46mondego>                        label.setText(ex.getMessage());<newline46mondego>                    }<newline46mondego>                    add(label);<newline46mondego>                } else if (task.isRunning()) {<newline46mondego>                    label.setText(<doubleQuotes46>Working<doubleQuotes46>);<newline46mondego>                    add(label);<newline46mondego>                } else {<newline46mondego>                    add(start);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            if (isSelected) {<newline46mondego>                setBackground(table.getSelectionBackground());<newline46mondego>                setOpaque(true);<newline46mondego>            } else {<newline46mondego>                setBackground(table.getBackground());<newline46mondego>                setOpaque(false);<newline46mondego>            }<newline46mondego>            return this;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public class Task extends SwingWorker<String, Object> {<newline46mondego><newline46mondego>        private int id;<newline46mondego>        private String threadResult;<newline46mondego>        private ThreadTableModel tableModel;<newline46mondego>        private boolean running;<newline46mondego><newline46mondego>        public Task(int id, ThreadTableModel tableModel) {<newline46mondego>            this.tableModel = tableModel;<newline46mondego>            this.id = id;<newline46mondego>            addPropertyChangeListener(new PropertyChangeListener() {<newline46mondego>                @Override<newline46mondego>                public void propertyChange(PropertyChangeEvent e) {<newline46mondego>                    System.out.println(e.getPropertyName());<newline46mondego>                    if (<doubleQuotes46>state<doubleQuotes46>.equalsIgnoreCase(e.getPropertyName())<newline46mondego>                                    && <doubleQuotes46>DONE<doubleQuotes46>.equalsIgnoreCase(e.getNewValue().toString())) {<newline46mondego>                        try {<newline46mondego>                            threadResult = (String)get();<newline46mondego>                        } catch (Exception ignore) {<newline46mondego>                            ignore.printStackTrace();<newline46mondego>                        }<newline46mondego>                    }<newline46mondego><newline46mondego>                    if (<doubleQuotes46>progress<doubleQuotes46>.equalsIgnoreCase(e.getPropertyName())) {<newline46mondego>                        System.out.println(<doubleQuotes46>task.getProgress = <doubleQuotes46> + getProgress());<newline46mondego>                        Task.this.tableModel.updated(Task.this);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean isRunning() {<newline46mondego>            return running;<newline46mondego>        }<newline46mondego><newline46mondego>        public int getID() {<newline46mondego>            return id;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected String doInBackground() throws Exception {<newline46mondego>            running = true;<newline46mondego>            setProgress(0);<newline46mondego>            int prog = 0;<newline46mondego>            Random rand = new Random(42);<newline46mondego>            while (prog < 100) {<newline46mondego>                prog += Math.abs(rand.nextInt() % 5);<newline46mondego>                Thread.sleep(250);<newline46mondego>                setProgress(Math.min(prog, 100));<newline46mondego>            }<newline46mondego>            return <doubleQuotes46>42<doubleQuotes46>;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4889splitHere46","17636284splitHere46","onOptionsItemSelected"
"4890splitHere46","17636284splitHere46","@Override<newline46mondego>    public boolean onOptionsItemSelected(MenuItem item) {<newline46mondego>        switch (item.getItemId()) {<newline46mondego>            case 1:<newline46mondego>                AlertDialog alertDialog = new AlertDialog.Builder(ActivityName.this).create(); // You can use activity context directly.<newline46mondego>                alertDialog.setTitle(<doubleQuotes46>Item 1<doubleQuotes46>);         <newline46mondego>                alertDialog.setMessage(<doubleQuotes46>This is Item 1<doubleQuotes46>);           <newline46mondego>                alertDialog.show();<newline46mondego>                return true;<newline46mondego>            default:<newline46mondego>                return super.onOptionsItemSelected(item);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"4891splitHere46","17636284splitHere46","public abstract MenuItem add (int groupId, int itemId, int order, CharSequence title)"
"4892splitHere46","17636284splitHere46","public boolean onOptionsItemSelected (MenuItem item)"
"4893splitHere46","17636335splitHere46","List l = new ArrayList();<newline46mondego>for(int i = 0; i <= 1000; i++)<newline46mondego>    l.add(i);<newline46mondego><newline46mondego>Collections.shuffle(l); <newline46mondego>"
"4894splitHere46","17636617splitHere46","public class Player {<newline46mondego>    private int moveSpeed = 10; // mph<newline46mondego>    private int position = 128; // Or whatever would be centered.<newline46mondego><newline46mondego>    public void update() {<newline46mondego>        if (Keyboard.isKeyDown(Keyboard.KEY_UP)) {<newline46mondego>            position += moveSpeed;<newline46mondego>        } else if (Keyboard.isKeyDown(Keyboard.KEY_DOWN)) {<newline46mondego>            position -= moveSpeed;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4895splitHere46","17636617splitHere46","GL11.glMatrixMode(GL11.GL_PROJECTION);"
"4896splitHere46","17636702splitHere46","<dependency><newline46mondego> <groupId>junit</groupId><newline46mondego> <artifactId>junit</artifactId><newline46mondego> <version>4.11</version><newline46mondego> <scope>test</scope><newline46mondego></dependency><newline46mondego>"
"4897splitHere46","17636763splitHere46","int y = 2d; //can't convert double to int<newline46mondego>"
"4898splitHere46","17636763splitHere46","int y = (int) 2e6;"
"4899splitHere46","17636763splitHere46","int y = 2_000_000;"
"4900splitHere46","17636834splitHere46","JEditorPane"
"4901splitHere46","17636834splitHere46","EditorKit"
"4902splitHere46","17636834splitHere46","AppletEditorKit"
"4903splitHere46","17636834splitHere46","HTML.tag.IMG"
"4904splitHere46","17636834splitHere46","super"
"4905splitHere46","17636852splitHere46",";"
"4906splitHere46","17636852splitHere46","Class.forName(<doubleQuotes46>[L<doubleQuotes46> + <doubleQuotes46>Point<doubleQuotes46> + <doubleQuotes46>;<doubleQuotes46>);<newline46mondego>"
"4907splitHere46","17636852splitHere46","'['"
"4908splitHere46","17636880splitHere46","Timer"
"4909splitHere46","17636880splitHere46","new Timer().schedule(new TimerTask() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        Intent menuIntent = new Intent(Main.this, menu.class);<newline46mondego>        startActivity(menuIntent);<newline46mondego>    }<newline46mondego>}, 5000);<newline46mondego>"
"4910splitHere46","17636903splitHere46","getResource(String)"
"4911splitHere46","17636903splitHere46","import java.net.URL;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.sound.sampled.*;<newline46mondego><newline46mondego>public class LoopSound {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        URL url = new URL(<newline46mondego>            <doubleQuotes46>http://pscode.org/media/leftright.wav<doubleQuotes46>);<newline46mondego>        Clip clip = AudioSystem.getClip();<newline46mondego>        // getAudioInputStream() also accepts a File or InputStream<newline46mondego>        AudioInputStream ais = AudioSystem.<newline46mondego>            getAudioInputStream( url );<newline46mondego>        clip.open(ais);<newline46mondego>        clip.loop(Clip.LOOP_CONTINUOUSLY);<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                // A GUI element to prevent the Clip's daemon Thread<newline46mondego>                // from terminating at the end of the main()<newline46mondego>                JOptionPane.showMessageDialog(null, <doubleQuotes46>Close to exit!<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4912splitHere46","17636921splitHere46","static"
"4913splitHere46","17636933splitHere46","response = resource.type(MediaType.APPLICATION_FORM_URLENCODED_TYPE).accept(MediaType.APPLICATION_JSON_TYPE).post(ClientResponse.class, communicatorVO.getFormData());;<newline46mondego>"
"4914splitHere46","17637008splitHere46","(time % 36000000) == 0<newline46mondego>"
"4915splitHere46","17637008splitHere46","((time-leapSeconds[(int)(time/(1000*60*60*24*365.2425))-1970]*1000) % 3600000) == 0<newline46mondego>"
"4916splitHere46","17637016splitHere46","clrscr"
"4917splitHere46","17637016splitHere46","clrscr"
"4918splitHere46","17637016splitHere46","clrscr"
"4919splitHere46","17637016splitHere46","Thread.sleep"
"4920splitHere46","17637016splitHere46","sleep(...)"
"4921splitHere46","17637016splitHere46","System.out.println"
"4922splitHere46","17637016splitHere46","out"
"4923splitHere46","17637016splitHere46","PrintWriter"
"4924splitHere46","17637016splitHere46","PrintWriter"
"4925splitHere46","17637016splitHere46","println"
"4926splitHere46","17637016splitHere46","write"
"4927splitHere46","17637016splitHere46","clrscr"
"4928splitHere46","17637166splitHere46","s[top]"
"4929splitHere46","17637166splitHere46","peekRank()"
"4930splitHere46","17637317splitHere46","words= new ArrayList<String>();<newline46mondego>"
"4931splitHere46","17637597splitHere46","org.newdawn.slick.Image"
"4932splitHere46","17637597splitHere46","Image img = new Image(<doubleQuotes46>/path/to/img<doubleQuotes46>);<newline46mondego>"
"4933splitHere46","17637597splitHere46","render"
"4934splitHere46","17637597splitHere46","img.draw(x, y);<newline46mondego>"
"4935splitHere46","17637723splitHere46","android:configChanges=<doubleQuotes46>keyboardHidden|orientation|screenSize<doubleQuotes46><newline46mondego>"
"4936splitHere46","17637723splitHere46","onConfigurationChanged()"
"4937splitHere46","17637723splitHere46","@Override<newline46mondego>public void onConfigurationChanged(Configuration config) {<newline46mondego>  super.onConfigurationChanged(config);<newline46mondego>}<newline46mondego>"
"4938splitHere46","17637732splitHere46","site"
"4939splitHere46","17637732splitHere46","project site"
"4940splitHere46","17637732splitHere46","javadoc"
"4941splitHere46","17637732splitHere46","sources"
"4942splitHere46","17637841splitHere46","String"
"4943splitHere46","17637841splitHere46","id=<doubleQuotes46>error-message<doubleQuotes46>"
"4944splitHere46","17637841splitHere46","404 not found"
"4945splitHere46","17637841splitHere46","lower-case()"
"4946splitHere46","17637841splitHere46","translate()"
"4947splitHere46","17637841splitHere46","contains()"
"4948splitHere46","17637841splitHere46","|"
"4949splitHere46","17637841splitHere46","String bodyText = driver.findElement(By.tagName(<doubleQuotes46>body<doubleQuotes46>)).getText();<newline46mondego>boolean containsError = bodyText.matches(<doubleQuotes46>[Ee]rror:|[Ww]arning:|[Nn]otice:|[Ee]xception:<doubleQuotes46>);<newline46mondego>"
"4950splitHere46","17637856splitHere46","Payroll"
"4951splitHere46","17637856splitHere46","toString()"
"4952splitHere46","17637856splitHere46","private static DecimalFormat df = new DecimalFormat(<doubleQuotes46>#.##<doubleQuotes46>);<newline46mondego> //......<newline46mondego>    @Override<newline46mondego>    public String toString(){<newline46mondego>      return <doubleQuotes46>Name: <doubleQuotes46>+getName()+<newline46mondego>             <doubleQuotes46>\nCompute Pay: <doubleQuotes46>+df.format(getComputePay())+<doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>    }<newline46mondego>"
"4953splitHere46","17637856splitHere46","System.out.println(employee1.toString());<newline46mondego>"
"4954splitHere46","17637856splitHere46","public static void main(String[] args) {<newline46mondego>    List <Payroll> employes = new ArrayList<>();<newline46mondego><newline46mondego>    employes.add( new Payroll(<doubleQuotes46>Tiny Tim<doubleQuotes46>, 100.2534, 40.87876));<newline46mondego>    employes.add( new Payroll(<doubleQuotes46>Brad Pitt<doubleQuotes46>, 150.50, 10));<newline46mondego>    employes.add( new Payroll(<doubleQuotes46>Madonna<doubleQuotes46>, 124.24, 20));<newline46mondego><newline46mondego>    for(Payroll p :employes){<newline46mondego>    System.out.println(p.toString()+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4955splitHere46","17637940splitHere46","DesiredCapabilities capabilities = DesiredCapabilities.chrome();<newline46mondego>capabilities.setCapability(<doubleQuotes46>chrome.switches<doubleQuotes46>, Arrays.asList(<doubleQuotes46>--user-data-dir=/path/to/profile/directory<doubleQuotes46>));<newline46mondego>WebDriver driver = new ChromeDriver(capabilities);<newline46mondego>"
"4956splitHere46","17637986splitHere46","Connection"
"4957splitHere46","17637986splitHere46","Statement"
"4958splitHere46","17637986splitHere46","ResultSet"
"4959splitHere46","17637986splitHere46","while(rs.next()){<newline46mondego>   name=rs.getString(<doubleQuotes46><doubleQuotes46>); // you didn't provide the column name here<newline46mondego>}<newline46mondego>"
"4960splitHere46","17637986splitHere46","name"
"4961splitHere46","17637986splitHere46","while(rs.next()){<newline46mondego>   name=rs.getString(<doubleQuotes46>name<doubleQuotes46>); // here the name of the column is name<newline46mondego>}<newline46mondego>"
"4962splitHere46","17638019splitHere46","int windowCount = driver.getWindowHandles().size();<newline46mondego>printPDF.click();<newline46mondego>assertEquals(windowCount + 1, driver.getWindowHandles().size());<newline46mondego>// or the Hamcrest way, if you're familiar with it<newline46mondego>assertThat(driver.getWindowHandles(), hasSize(windowCount + 1));<newline46mondego>// or the FEST way, if you're familiar with it<newline46mondego>assertThat(driver.getWindowHandles()).hasSize(windowCount + 1);<newline46mondego>"
"4963splitHere46","17638156splitHere46","com.yourcompany.yourapp.TestServlet"
"4964splitHere46","17638156splitHere46","WEB-INF/classes"
"4965splitHere46","17638156splitHere46","WEB-INF/lib"
"4966splitHere46","17638198splitHere46","getResource()"
"4967splitHere46","17638198splitHere46","URL url = getClass().getResource(<doubleQuotes46>/assets/levels.txt<doubleQuotes46>);<newline46mondego>File f = new File(url.toURI());<newline46mondego>//....<newline46mondego>"
"4968splitHere46","17638198splitHere46","getResourceAsStream()"
"4969splitHere46","17638198splitHere46","InputStream  is= getClass().getResourceAsStream(<doubleQuotes46>/assets/levels.txt<doubleQuotes46>);<newline46mondego>isr = new InputStreamReader(is); <newline46mondego>"
"4970splitHere46","17638198splitHere46","URISyntaxException"
"4971splitHere46","17638198splitHere46","FileNotFoundException"
"4972splitHere46","17638269splitHere46","Locale"
"4973splitHere46","17638269splitHere46","ParseException"
"4974splitHere46","17638269splitHere46","DateFormat format = <newline46mondego>                new SimpleDateFormat(<doubleQuotes46>EEE M/dd hh:mm a yyyy<doubleQuotes46>, Locale.ENGLISH);<newline46mondego>"
"4975splitHere46","17638342splitHere46","//Artpiece.java<newline46mondego>interface Artpiece{<newline46mondego>    public String name();<newline46mondego>    public Bundling bundling();<newline46mondego>    public float price();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>//BubbleWrap.java<newline46mondego>public class BubbleWrap implements Bundling{<newline46mondego>    public String bundle() {<newline46mondego>        return <doubleQuotes46>BubbleWrap<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//Bundling.java<newline46mondego>interface Bundling{<newline46mondego>    public String bundle();<newline46mondego>}<newline46mondego><newline46mondego>//Cushioning.java<newline46mondego>public class Cushioning implements Bundling{<newline46mondego>    //Override<newline46mondego>    public String bundle() {<newline46mondego>        return <doubleQuotes46>Cushioning<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>//FGItem.java<newline46mondego>abstract class FGItem implements Artpiece{<newline46mondego>    public Bundling bundling() {<newline46mondego>        Bundling b = new BubbleWrap();<newline46mondego>        return b;<newline46mondego>    }<newline46mondego>    public abstract float price();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>//GlassWaare.java<newline46mondego>public class GlassWare extends FGItem{<newline46mondego><newline46mondego>    //Override<newline46mondego>    public String name() {<newline46mondego><newline46mondego>        return <doubleQuotes46>GlassWare<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    //Override<newline46mondego>    public float price() {<newline46mondego><newline46mondego>        return 160;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>//Pottery.java<newline46mondego>public class Pottery extends FGItem{<newline46mondego><newline46mondego>    //Override<newline46mondego>    public String name() {<newline46mondego><newline46mondego>        return <doubleQuotes46>Pottery<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    //Override<newline46mondego>    public float price() {<newline46mondego><newline46mondego>        return 25;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>//ArtItems.java<newline46mondego>import java.util.ArrayList;<newline46mondego>public class ArtItems implements Artpiece{<newline46mondego><newline46mondego>    float sum = 0;<newline46mondego>    ArrayList<Artpiece> item = new ArrayList<Artpiece>();<newline46mondego><newline46mondego><newline46mondego>    //Override<newline46mondego>    public String name() {<newline46mondego><newline46mondego>        return name();<newline46mondego>    }<newline46mondego><newline46mondego>    //Override<newline46mondego>    public Bundling bundling() {<newline46mondego><newline46mondego>        return bundling();<newline46mondego>    }<newline46mondego><newline46mondego>    //Override<newline46mondego>    public float price() <newline46mondego>    {<newline46mondego>        return price();<newline46mondego>    }<newline46mondego><newline46mondego>    public float getCost()<newline46mondego>    {<newline46mondego>        for(int i=0; i<item.size(); i++)<newline46mondego>        {<newline46mondego>            Artpiece art = item.get(i);<newline46mondego>            sum += art.price();<newline46mondego>        }<newline46mondego>        return sum;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void addItem(Artpiece artpiece) <newline46mondego>    {<newline46mondego><newline46mondego>        item.add(artpiece);<newline46mondego>    }<newline46mondego><newline46mondego>    public void showItems() <newline46mondego>    {<newline46mondego>        for(int i=0; i<item.size(); i++)<newline46mondego>        {<newline46mondego>            Artpiece art = item.get(i);<newline46mondego>            System.out.println(<doubleQuotes46>Item: <doubleQuotes46> + art.name() + <doubleQuotes46> Packaging <doubleQuotes46> + art.bundling().bundle() + <doubleQuotes46>, Price: <doubleQuotes46> + art.price());<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>//Dispatcher.java<newline46mondego><newline46mondego>public class Dispatcher { <newline46mondego>      public ArtItems prepareFGitem(){ <newline46mondego>      ArtItems artitems = new ArtItems(); <newline46mondego>      artitems.addItem(new Pottery()); <newline46mondego>      artitems.addItem(new GlassWare());<newline46mondego>          return artitems;<newline46mondego>      }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>//Salesorder.java  This is the driver class<newline46mondego> public class Salesorder { <newline46mondego>   public static void main(String[] args) { <newline46mondego>     Dispatcher dispatcher = new Dispatcher(); <newline46mondego>      ArtItems FGartitem = dispatcher.prepareFGitem(); <newline46mondego><newline46mondego>      System.out.println(<doubleQuotes46>Fragile Items<doubleQuotes46>); <newline46mondego>      FGartitem.showItems(); <newline46mondego>      System.out.println(<doubleQuotes46>Total Cost: <doubleQuotes46> +FGartitem.getCost()); <newline46mondego><newline46mondego><newline46mondego>   } <newline46mondego>} <newline46mondego>"
"4976splitHere46","17638444splitHere46","ObjectMapper mapper = new ObjectMapper(); // can reuse, share globally<newline46mondego>Entry entry = mapper.readValue(new File(<doubleQuotes46>entry.json<doubleQuotes46>), Entry.class);<newline46mondego>"
"4977splitHere46","17638444splitHere46","ObjectMapper.treeToValue()"
"4978splitHere46","17638446splitHere46","top"
"4979splitHere46","17638446splitHere46","valueStack"
"4980splitHere46","17638446splitHere46","<s:property value=<doubleQuotes46>elasticitiesBean.auto_Auto_cost_peak<doubleQuotes46> /><newline46mondego>"
"4981splitHere46","17638446splitHere46","#"
"4982splitHere46","17638446splitHere46","valueStack"
"4983splitHere46","17638446splitHere46","bean"
"4984splitHere46","17638446splitHere46","valueStack"
"4985splitHere46","17638446splitHere46","bean"
"4986splitHere46","17638534splitHere46","java -jar myjar.jar <newline46mondego>"
"4987splitHere46","17638550splitHere46","public void actionPerformed(ActionEvent evt) {<newline46mondego><newline46mondego>   //HERE next and pre are Button name;<newline46mondego>   //rs is REsultSet<newline46mondego>  if (evt.getSource()==next) <newline46mondego>    {<newline46mondego><newline46mondego>        try {<newline46mondego><newline46mondego>            if (rs.next()) <newline46mondego>            {<newline46mondego>                if(rs.isLast())<newline46mondego>                { <newline46mondego>                    pre.setEnabled(true);<newline46mondego>                    next.setEnabled(false);<newline46mondego>                }<newline46mondego>                //do action<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>        } catch (SQLException ex) {<newline46mondego>            Logger.getLogger(DeleteQ.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>        }<newline46mondego><newline46mondego>    } <newline46mondego><newline46mondego>    else if (evt.getSource() == pre)<newline46mondego>    {<newline46mondego><newline46mondego>       try {<newline46mondego><newline46mondego><newline46mondego>           if(rs.previous())<newline46mondego>            {<newline46mondego>                if(rs.isFirst())<newline46mondego>                {<newline46mondego>                    pre.setEnabled(false);<newline46mondego>                    next.setEnabled(true);<newline46mondego>                }<newline46mondego>               //do action<newline46mondego><newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>        } catch (SQLException ex) <newline46mondego>        {<newline46mondego>            Logger.getLogger(DeleteQ.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>        }<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"4988splitHere46","17638599splitHere46","ShellEvent"
"4989splitHere46","17638599splitHere46","ShelEvent"
"4990splitHere46","17638599splitHere46","ShellEvent"
"4991splitHere46","17638599splitHere46","captureChanged"
"4992splitHere46","17638599splitHere46","Display"
"4993splitHere46","17638599splitHere46","default"
"4994splitHere46","17638599splitHere46","ShellEvent"
"4995splitHere46","17638599splitHere46","shell.addShellListener(new ShellAdapter() {<newline46mondego>        @Override<newline46mondego>        public void shellClosed(ShellEvent e) {<newline46mondego><newline46mondego>                Field f = Display.class.getDeclaredField(<doubleQuotes46>captureChanged<doubleQuotes46>);<newline46mondego>                f.setAccessible(true);<newline46mondego>                System.out.println(<doubleQuotes46>captureChanged = <doubleQuotes46> + f.get(e.display)); //true = If User triggered the Event<newline46mondego>                System.out.println(<doubleQuotes46>closed<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"4996splitHere46","17638671splitHere46","Connection.setRequestProperty( <doubleQuotes46>Accept-Encoding<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> );"
"4997splitHere46","17638700splitHere46","public class ExtendedHTMLDocument extends HTMLDocument<newline46mondego>{<newline46mondego>    public void hackWriteLock()<newline46mondego>    {<newline46mondego>        writeLock();<newline46mondego>    }<newline46mondego><newline46mondego>    public void hackWriteUnlock()<newline46mondego>    {<newline46mondego>        writeUnlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4998splitHere46","17638700splitHere46","public class ExtendedEditorKit extends HTMLEditorKit<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public Document createDefaultDocument()<newline46mondego>    {<newline46mondego>        // For the left out code copy what's in the super method<newline46mondego>        ..<newline46mondego>        HTMLDocument doc = new ExtendedHTMLDocument(ss);<newline46mondego>        ..<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4999splitHere46","17638700splitHere46","// lock<newline46mondego>htmlDocument.hackWriteLock()<newline46mondego><newline46mondego>// Get <img src=<doubleQuotes46>...<doubleQuotes46>> tag<newline46mondego>RunElement imageTagElement = getImageTagElement(htmlDocument);<newline46mondego><newline46mondego>// Print src attribute value<newline46mondego>System.out.println(<doubleQuotes46>src : <doubleQuotes46> + runElement.getAttribute(HTML.Attribute.SRC));<newline46mondego><newline46mondego>// Replace existing src value <newline46mondego>runElement.removeAttribute(HTML.Attribute.SRC);<newline46mondego>runElement.addAttribute(HTML.Attribute.SRC, <doubleQuotes46>customValue<doubleQuotes46>);<newline46mondego><newline46mondego>// unlock<newline46mondego>htmlDocument.hackWriteUnlock()<newline46mondego>"
"5000splitHere46","17638788splitHere46","this"
"5001splitHere46","17638788splitHere46","class"
"5002splitHere46","17638788splitHere46","static"
"5003splitHere46","17638788splitHere46","this"
"5004splitHere46","17638788splitHere46","static"
"5005splitHere46","17638788splitHere46","this"
"5006splitHere46","17638892splitHere46","A"
"5007splitHere46","17638892splitHere46","B"
"5008splitHere46","17638892splitHere46","B"
"5009splitHere46","17638892splitHere46","A"
"5010splitHere46","17638892splitHere46","this.finish()"
"5011splitHere46","17638892splitHere46","ActivityName.this.finish()"
"5012splitHere46","17638892splitHere46","@Override<newline46mondego>    public boolean onOptionsItemSelected(MenuItem item) {<newline46mondego>        switch (item.getItemId()) {<newline46mondego>        case android.R.id.home:<newline46mondego>            this.finish();<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        return super.onOptionsItemSelected(item);<newline46mondego>    }<newline46mondego>"
"5013splitHere46","17638892splitHere46","AbstractActivity"
"5014splitHere46","17638892splitHere46","Activity"
"5015splitHere46","17638892splitHere46","AbstractActivity"
"5016splitHere46","17638892splitHere46","AbstractActivity"
"5017splitHere46","17638892splitHere46","LogCat"
"5018splitHere46","17639082splitHere46","Context"
"5019splitHere46","17639082splitHere46","Activitys context, you can cast the view"
"5020splitHere46","17639082splitHere46","private void finishFunction() {<newline46mondego>   Activity activity = (Activity)getContext();<newline46mondego>   activity.finish();<newline46mondego>}<newline46mondego>"
"5021splitHere46","17639195splitHere46","DateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, DateTimeZone zone)"
"5022splitHere46","17639195splitHere46","DateTime start = new DateTime(2013, 07, 14, 12, 45, 0, zone);<newline46mondego>DateTime end = new DateTime(2013, 07, 14, 21, 0, 0, zone);<newline46mondego>"
"5023splitHere46","17639195splitHere46","Seconds diff = Seconds.secondsBetween(start, end);<newline46mondego>"
"5024splitHere46","17639195splitHere46","import org.joda.time.DateTime;<newline46mondego>import org.joda.time.Seconds;<newline46mondego><newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>         DateTime start = new DateTime(2013, 07, 14, 12, 45, 0);<newline46mondego>          DateTime end = new DateTime(2013, 07, 14, 21, 0, 0);<newline46mondego><newline46mondego>          Seconds diff = Seconds.secondsBetween(start, end);<newline46mondego>          System.out.println(diff.getSeconds());<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5025splitHere46","17639195splitHere46","public static void main(String[] args) {<newline46mondego>     DateTime start = new DateTime();<newline46mondego>     DateTime end;<newline46mondego>     if(start.getDayOfMonth()>24 && start.getMonthOfYear()==12)<newline46mondego>     {<newline46mondego>         end = new DateTime(start.getYear()+1, 12, 25, 0, 0, 0);<newline46mondego>     }<newline46mondego>     else<newline46mondego>     {<newline46mondego>         end = new DateTime(start.getYear(), 12, 25, 0, 0, 0);<newline46mondego>     }<newline46mondego>      Seconds diff = Seconds.secondsBetween(start, end);<newline46mondego>      System.out.println(diff.getSeconds());<newline46mondego><newline46mondego>}<newline46mondego>"
"5026splitHere46","17639195splitHere46","import java.util.Date;<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>/**<newline46mondego> * @param args<newline46mondego> */<newline46mondego>public static void main(String[] args) {<newline46mondego>     Date start = new Date(2013, 07, 14, 12, 45, 0);<newline46mondego>     Date end = new Date(2013, 07, 14, 21, 0, 0);<newline46mondego>     System.out.println((end.getTime()-start.getTime())/1000);<newline46mondego>}<newline46mondego>"
"5027splitHere46","17639341splitHere46","String myString = <doubleQuotes46>your string<doubleQuotes46>;<newline46mondego>Scanner sc = new Scanner(myString);<newline46mondego>double myDouble = sc.nextDouble();<newline46mondego>"
"5028splitHere46","17639691splitHere46","this.x == x && this.y != y"
"5029splitHere46","17639691splitHere46","this.y == y && this.x != x"
"5030splitHere46","17639691splitHere46","Math.abs(this.x - x) == Math.abs(this.y - y)"
"5031splitHere46","17639691splitHere46","matrix"
"5032splitHere46","17639741splitHere46","GL_LINE"
"5033splitHere46","17639741splitHere46","GL_LINES"
"5034splitHere46","17639791splitHere46","fillRect"
"5035splitHere46","17639791splitHere46","drawRect"
"5036splitHere46","17639791splitHere46","int"
"5037splitHere46","17639791splitHere46","double"
"5038splitHere46","17639791splitHere46","Graphics2D"
"5039splitHere46","17639791splitHere46","g.fill(rectangle)"
"5040splitHere46","17639791splitHere46","fillRect"
"5041splitHere46","17639791splitHere46","int"
"5042splitHere46","17639791splitHere46","g.fillRect((int) rectangle.getX(),(int) rectangle.getY(),<newline46mondego>           (int) rectangle.getWidth(),(int) rectangle.getHeight());<newline46mondego>"
"5043splitHere46","17640050splitHere46","WebServiceTask"
"5044splitHere46","17640050splitHere46","results"
"5045splitHere46","17640050splitHere46","get()"
"5046splitHere46","17640050splitHere46","AsyncTask"
"5047splitHere46","17640050splitHere46","call()"
"5048splitHere46","17640200splitHere46","ajc"
"5049splitHere46","17640200splitHere46","<!-- Build --><newline46mondego><build><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego>            <artifactId>aspectj-maven-plugin</artifactId><newline46mondego>            <version>1.4</version><newline46mondego>            <configuration><newline46mondego>                <source>1.6</source><newline46mondego>                <target>1.6</target><newline46mondego>                <complianceLevel>1.6</complianceLevel><newline46mondego>                <verbose>true</verbose><newline46mondego>            </configuration><newline46mondego>            <executions><newline46mondego>                <execution><newline46mondego>                    <goals><newline46mondego>                        <goal>compile</goal><newline46mondego>                    </goals><newline46mondego>                </execution><newline46mondego>            </executions><newline46mondego>            <dependencies><newline46mondego>            </dependencies><newline46mondego>        </plugin><newline46mondego>    </plugins><newline46mondego></build><newline46mondego>"
"5050splitHere46","17640200splitHere46","<build><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego>            <artifactId>aspectj-maven-plugin</artifactId><newline46mondego>            <version>1.4</version><newline46mondego>            <configuration><newline46mondego>                <aspectLibraries><newline46mondego>                    <aspectLibrary><newline46mondego>                        <groupId>that-artifact</groupId><newline46mondego>                        <artifactId>mentioned-above</artifactId><newline46mondego>                    </aspectLibrary><newline46mondego>                </aspectLibraries><newline46mondego>                <source>1.6</source><newline46mondego>                <target>1.6</target><newline46mondego>                <complianceLevel>1.6</complianceLevel><newline46mondego>            </configuration><newline46mondego>            <executions><newline46mondego>                <execution><newline46mondego>                    <goals><newline46mondego>                        <goal>test-compile</goal><newline46mondego>                     </goals><newline46mondego>                     <configuration><newline46mondego>                         <showWeaveInfo>true</showWeaveInfo><newline46mondego>                     </configuration><newline46mondego>                 </execution><newline46mondego>             </executions><newline46mondego>         </plugin><newline46mondego>     </plugins><newline46mondego> </build><newline46mondego>"
"5051splitHere46","17640234splitHere46","CriteriaBuilder cb = em.getCriteriaBuilder();<newline46mondego>CriteriaQuery<Phone> criteriaQuery = cb.createQuery(Phone.class);<newline46mondego>Root<Employee> employee = criteriaQuery.from(Employee.class);<newline46mondego>CollectionJoin<Employee, Phone> phone = employee.join(Employee_.phones);<newline46mondego>criteriaQuery.where(cb.equal(employee, empl);<newline46mondego>criteriaQuery.select(phone);<newline46mondego>TypedQuery<Phone> query = em.createQuery(criteriaQuery);<newline46mondego>List<Phone> phones = query.getResultList();<newline46mondego>"
"5052splitHere46","17640252splitHere46","this"
"5053splitHere46","17640254splitHere46","sun.reflect.Reflection.getCallerClass"
"5054splitHere46","17640254splitHere46","sun.*"
"5055splitHere46","17640254splitHere46","sun.*"
"5056splitHere46","17640254splitHere46","method.invoke()"
"5057splitHere46","17640305splitHere46","getColumnClass(...)"
"5058splitHere46","17640305splitHere46","Boolean.class"
"5059splitHere46","17640318splitHere46","weightx"
"5060splitHere46","17640318splitHere46","weighty"
"5061splitHere46","17640318splitHere46","GridBagConstraints"
"5062splitHere46","17640318splitHere46","gridwidth"
"5063splitHere46","17640318splitHere46","2"
"5064splitHere46","17640318splitHere46","JPanel"
"5065splitHere46","17640318splitHere46","1"
"5066splitHere46","17640318splitHere46","JPanel"
"5067splitHere46","17640318splitHere46","BLUE"
"5068splitHere46","17640318splitHere46","RED"
"5069splitHere46","17640318splitHere46","70:30"
"5070splitHere46","17640318splitHere46","weightx"
"5071splitHere46","17640318splitHere46","0.7"
"5072splitHere46","17640318splitHere46","0.3"
"5073splitHere46","17640318splitHere46","1.0"
"5074splitHere46","17640318splitHere46","BLUE"
"5075splitHere46","17640318splitHere46","RED JPanel"
"5076splitHere46","17640318splitHere46","GREEN JPanel"
"5077splitHere46","17640318splitHere46","90:10"
"5078splitHere46","17640318splitHere46","BLUE"
"5079splitHere46","17640318splitHere46","RED"
"5080splitHere46","17640318splitHere46","weighty = 0.9"
"5081splitHere46","17640318splitHere46","GREEN JPanel"
"5082splitHere46","17640318splitHere46","weighty = 0.1"
"5083splitHere46","17640318splitHere46","GREEN JPanel"
"5084splitHere46","17640318splitHere46","BLUE"
"5085splitHere46","17640318splitHere46","RED JPanel"
"5086splitHere46","17640318splitHere46","gridwidth = 2"
"5087splitHere46","17640318splitHere46","weightx = 1.0"
"5088splitHere46","17640318splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class GridBagLayoutExample<newline46mondego>{<newline46mondego>    private GridBagConstraints gbc;<newline46mondego><newline46mondego>    public GridBagLayoutExample()<newline46mondego>    {<newline46mondego>        gbc = new GridBagConstraints();<newline46mondego>        gbc.anchor = GridBagConstraints.FIRST_LINE_START;<newline46mondego>    }<newline46mondego><newline46mondego>    private void displayGUI()<newline46mondego>    {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>GridBagLayout Example<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego><newline46mondego>        JPanel contentPane = getPanel(Color.WHITE);<newline46mondego>        contentPane.setLayout(new GridBagLayout());<newline46mondego><newline46mondego>        JPanel leftPanel = getPanel(Color.BLUE);<newline46mondego>        JPanel rightPanel = getPanel(Color.RED);<newline46mondego>        JPanel bottomPanel = getPanel(Color.GREEN.darker());<newline46mondego><newline46mondego>        addComp(contentPane, leftPanel<newline46mondego>                , 0, 0, 0.7, 0.9, 1, 1, GridBagConstraints.BOTH);<newline46mondego>        addComp(contentPane, rightPanel<newline46mondego>                , 1, 0, 0.3, 0.9, 1, 1, GridBagConstraints.BOTH);<newline46mondego>        addComp(contentPane, bottomPanel<newline46mondego>                , 0, 1, 1.0, 0.1, 2, 1, GridBagConstraints.BOTH);<newline46mondego><newline46mondego>        frame.setContentPane(contentPane);<newline46mondego>        //frame.pack();<newline46mondego>        frame.setSize(300, 300);<newline46mondego>        frame.setLocationByPlatform(true);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private void addComp(JPanel panel, JComponent comp<newline46mondego>                            , int gridX, int gridY<newline46mondego>                            , double weightX, double weightY<newline46mondego>                            , int gridWidth, int gridHeight, int fill)<newline46mondego>    {<newline46mondego>        gbc.gridx = gridX;<newline46mondego>        gbc.gridy = gridY;<newline46mondego>        gbc.weightx = weightX;<newline46mondego>        gbc.weighty = weightY;<newline46mondego>        gbc.gridwidth = gridWidth;<newline46mondego>        gbc.gridheight = gridHeight;<newline46mondego>        gbc.fill = fill;<newline46mondego><newline46mondego>        panel.add(comp, gbc);<newline46mondego>    }<newline46mondego><newline46mondego>    private JPanel getPanel(Color backColour)<newline46mondego>    {<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.setOpaque(true);<newline46mondego>        panel.setBackground(backColour);<newline46mondego>        panel.setBorder(<newline46mondego>            BorderFactory.createEmptyBorder(5, 5, 5, 5));<newline46mondego><newline46mondego>        return panel;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Runnable runnable = new Runnable()<newline46mondego>        {<newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new GridBagLayoutExample().displayGUI();<newline46mondego>            }<newline46mondego>        };<newline46mondego>        EventQueue.invokeLater(runnable);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5089splitHere46","17640362splitHere46","Record [] records = new Lookup(<doubleQuotes46>gmail.com<doubleQuotes46>, Type.NS).run();<newline46mondego>for (int i = 0; i < records.length; i++) {<newline46mondego>    NSRecord ns = (NSRecord) records[i];<newline46mondego>    System.out.println(<doubleQuotes46>Nameserver <doubleQuotes46> + ns.getTarget());<newline46mondego>}<newline46mondego>"
"5090splitHere46","17640557splitHere46","if (button == <doubleQuotes46>Search<doubleQuotes46>) <newline46mondego>"
"5091splitHere46","17640557splitHere46","if(button.equals(<doubleQuotes46>Search<doubleQuotes46>)) <newline46mondego>"
"5092splitHere46","17640557splitHere46","HashMap wordMap = new HashMap();<newline46mondego>"
"5093splitHere46","17640557splitHere46","Map<Object,Object> wordMap =new HashMap<Object,Object>();<newline46mondego>"
"5094splitHere46","17640557splitHere46","String searchKey = textField.getText();<newline46mondego>     searchedValue = dictionaryMap.get(searchKey);<newline46mondego>"
"5095splitHere46","17640608splitHere46","private void updateGUI(final String foo) {<newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            // Here, we can safely update the GUI<newline46mondego>            // because we'll be called from the<newline46mondego>            // event dispatch thread<newline46mondego>            MW.append(foo);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}  <newline46mondego>"
"5096splitHere46","17640608splitHere46","SwingUtilities.invokeLater(new Runnable() {...})"
"5097splitHere46","17640608splitHere46","jButton1.addMouseListener(new java.awt.event.MouseAdapter() {<newline46mondego>        public void mouseReleased(java.awt.event.MouseEvent evt) {<newline46mondego>            jButton1MouseReleased(evt);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"5098splitHere46","17640683splitHere46","Scanner"
"5099splitHere46","17640683splitHere46","Pattern"
"5100splitHere46","17640835splitHere46","GZIPInputStream"
"5101splitHere46","17640835splitHere46","GZIPInputStream gzis = new GZIPInputStream( pb );<newline46mondego>"
"5102splitHere46","17640948splitHere46","|"
"5103splitHere46","17640948splitHere46","4|1"
"5104splitHere46","17640948splitHere46","4 = 100<newline46mondego>  1 = 001<newline46mondego>4|1 = 101 = 5<newline46mondego>"
"5105splitHere46","17640948splitHere46","&"
"5106splitHere46","17640948splitHere46","a + b = (a|b) + (a&b)<newline46mondego>"
"5107splitHere46","17640979splitHere46","for(int b = 0, c = 0; b < goodexpressions.length || c < badexpressions.length; b++, c++) { }<newline46mondego>"
"5108splitHere46","17640979splitHere46","b"
"5109splitHere46","17640979splitHere46","c"
"5110splitHere46","17640979splitHere46","||"
"5111splitHere46","17640979splitHere46","&&"
"5112splitHere46","17641067splitHere46","<security-role>"
"5113splitHere46","17641067splitHere46","<security-constraint>"
"5114splitHere46","17641067splitHere46","<security-role><newline46mondego>    <role-name>IP_AUTHENTICATION</role-name><newline46mondego></security-role><newline46mondego><newline46mondego><security-constraint><newline46mondego>    <auth-constraint><newline46mondego>        <role-name>*</role-name><newline46mondego>    </auth-constraint><newline46mondego></security-constraint><newline46mondego>"
"5115splitHere46","17641067splitHere46","<authorizations xmi:id=<doubleQuotes46>RoleAssignment_1298129835811<doubleQuotes46>><newline46mondego>    <specialSubjects xmi:type=<doubleQuotes46>applicationbnd:AllAuthenticatedUsers<doubleQuotes46> <newline46mondego>name=<doubleQuotes46>AllAuthenticatedUsers<doubleQuotes46>/><newline46mondego>    <role href=<doubleQuotes46>META-INF/application.xml#SecurityRole_1310175154371<doubleQuotes46>/><newline46mondego></authorizations><newline46mondego>"
"5116splitHere46","17641225splitHere46","private Priority mPriority = Priority.LOW;<newline46mondego><newline46mondego>@Override<newline46mondego>public Priority getPriority() {<newline46mondego>    return mPriority;<newline46mondego>}<newline46mondego><newline46mondego>public void setPriority(Priority priority) {<newline46mondego>    mPriority = priority;<newline46mondego>}<newline46mondego>"
"5117splitHere46","17641225splitHere46","Priority"
"5118splitHere46","17641225splitHere46","Request"
"5119splitHere46","17641226splitHere46","data_table.getTableHeader().setReorderingAllowed(false);"
"5120splitHere46","17641561splitHere46","-d classes"
"5121splitHere46","17641561splitHere46","classes"
"5122splitHere46","17641591splitHere46","http"
"5123splitHere46","17641629splitHere46","beginSearch()"
"5124splitHere46","17641629splitHere46","stopSearch()"
"5125splitHere46","17641629splitHere46","continueSearching"
"5126splitHere46","17641629splitHere46","stop()"
"5127splitHere46","17641689splitHere46","setPetName"
"5128splitHere46","17641689splitHere46","public petInfo(String pet_name_t, int pet_type_t, int pet_gender_t){<newline46mondego>    setPet_name(pet_name_t);// string name<newline46mondego>    pet_type = pet_type_t;// int type<newline46mondego>    pet_gender = pet_gender_t;// int gender<newline46mondego>}<newline46mondego>"
"5129splitHere46","17641689splitHere46","setPet_name"
"5130splitHere46","17641689splitHere46","setPetName"
"5131splitHere46","17641751splitHere46","Result"
"5132splitHere46","17641751splitHere46","DOMResult"
"5133splitHere46","17641751splitHere46","Result result = new DOMResult();<newline46mondego><newline46mondego>newTransformer.transform(source, result);<newline46mondego><newline46mondego>return result.getNode();<newline46mondego>"
"5134splitHere46","17641977splitHere46","String result = getStringFromInputStream(is);<newline46mondego><newline46mondego>Document doc = Jsoup.parse(result, <doubleQuotes46><doubleQuotes46>, Parser.xmlParser());<newline46mondego>Element e = doc.getElementsByTag(<doubleQuotes46>app<doubleQuotes46>).first();<newline46mondego><newline46mondego>System.out.println(e.attr(<doubleQuotes46>hash<doubleQuotes46>));<newline46mondego>System.out.println(e.attr(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego><newline46mondego>//etc...<newline46mondego>"
"5135splitHere46","17641977splitHere46","private static String getStringFromInputStream(InputStream is) {<newline46mondego><newline46mondego>    BufferedReader br = null;<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego><newline46mondego>    String line;<newline46mondego>    try {<newline46mondego><newline46mondego>        br = new BufferedReader(new InputStreamReader(is));<newline46mondego>        while ((line = br.readLine()) != null) {<newline46mondego>            sb.append(line);<newline46mondego>        }<newline46mondego><newline46mondego>    } catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        if (br != null) {<newline46mondego>            try {<newline46mondego>                br.close();<newline46mondego>            } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return sb.toString();<newline46mondego><newline46mondego>}<newline46mondego>"
"5136splitHere46","17641986splitHere46","<jsp:useBean id=<doubleQuotes46>user<doubleQuotes46> class=<doubleQuotes46>de.daniel.docmanager.dto.User<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46>>  <newline46mondego></jsp:useBean><newline46mondego>"
"5137splitHere46","17641986splitHere46","useBean"
"5138splitHere46","17641986splitHere46","session"
"5139splitHere46","17641986splitHere46","session"
"5140splitHere46","17641986splitHere46","session"
"5141splitHere46","17641986splitHere46","<%<newline46mondego> String name =  ((de.daniel.docmanager.dto.User)session<newline46mondego>                                      .getAttribute(<doubleQuotes46>user<doubleQuotes46>)).getName();<newline46mondego> System.out.println(<doubleQuotes46>name: <doubleQuotes46> + name);  <newline46mondego>%><newline46mondego>"
"5142splitHere46","17642092splitHere46","setSize(410, 240);<newline46mondego>setLocation(startLocation);<newline46mondego>"
"5143splitHere46","17642149splitHere46","private int program;<newline46mondego>"
"5144splitHere46","17642149splitHere46","// Create program.<newline46mondego>program = gl.glCreateProgram();<newline46mondego><newline46mondego>// Create vertexShader.<newline46mondego>int vertexShader = gl.glCreateShader(GL2ES2.GL_VERTEX_SHADER);<newline46mondego>String[] vertexShaderSource = new String[1];<newline46mondego>vertexShaderSource[0] = <doubleQuotes46>#version 330\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>layout(location=0) in vec2 position;\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>layout(location=1) in vec3 color;\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>out vec3 vColor;\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>void main(void)\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>{\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>gl_Position = vec4(position, 0.0, 1.0);\n<doubleQuotes46><newline46mondego>    <doubleQuotes46>vColor = vec4(color, 1.0);\n<doubleQuotes46><newline46mondego>    <doubleQuotes46>}\n<doubleQuotes46>;<newline46mondego>gl.glShaderSource(vertexShader, 1, vertexShaderSource, null);<newline46mondego>gl.glCompileShader(vertexShader);<newline46mondego><newline46mondego>// Create and fragment shader.<newline46mondego>int fragmentShader = gl.glCreateShader(GL2ES2.GL_FRAGMENT_SHADER);<newline46mondego>String[] fragmentShaderSource = new String[1];<newline46mondego>fragmentShaderSource[0] = <doubleQuotes46>#version 330\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>in vec4 vColor;\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>out vec4 fColor;\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>void main(void)\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>{\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>fColor = vColor;\n<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>}\n<doubleQuotes46>;<newline46mondego>gl.glShaderSource(fragmentShader, 1, fragmentShaderSource, null);<newline46mondego>gl.glCompileShader(fragmentShader);<newline46mondego><newline46mondego>// Attach shaders to program.<newline46mondego>gl.glAttachShader(program, vertexShader);<newline46mondego>gl.glAttachShader(program, fragmentShader);<newline46mondego>gl.glLinkProgram(program);<newline46mondego>"
"5145splitHere46","17642149splitHere46","IntBuffer vertexArray = IntBuffer.allocate(1);<newline46mondego>"
"5146splitHere46","17642149splitHere46","// Create Vertex Array.<newline46mondego>gl.glGenVertexArrays(1, vertexArray);<newline46mondego>gl.glBindVertexArray(vertexArray.get(0));<newline46mondego><newline46mondego>// Specify how data should be sent to the Program.<newline46mondego><newline46mondego>// VertexAttribArray 0 corresponds with location 0 in the vertex shader.<newline46mondego>gl.glEnableVertexAttribArray(0);<newline46mondego>gl.glBindBuffer(GL2.GL_ARRAY_BUFFER, buffers.get(0));<newline46mondego>gl.glVertexAttribPointer(0, 2, GL.GL_FLOAT, false, 0, 0);<newline46mondego><newline46mondego>// VertexAttribArray 1 corresponds with location 1 in the vertex shader.<newline46mondego>gl.glEnableVertexAttribArray(1);<newline46mondego>gl.glBindBuffer(GL2.GL_ARRAY_BUFFER, buffers.get(1));<newline46mondego>gl.glVertexAttribPointer(1, 3, GL.GL_FLOAT, false, 0, 0);<newline46mondego>"
"5147splitHere46","17642149splitHere46","@Override<newline46mondego>public void display(GLAutoDrawable glAutoDrawable) {<newline46mondego>    GL3 gl = glAutoDrawable.getGL().getGL3();<newline46mondego>    gl.glClear(GL3.GL_DEPTH_BUFFER_BIT | GL3.GL_COLOR_BUFFER_BIT);<newline46mondego><newline46mondego>    gl.glUseProgram(program)<newline46mondego>    gl.glBindVertexArray(vertexArray.get(0));<newline46mondego>    gl.glDrawArrays(GL.GL_TRIANGLES, 0, 6)<newline46mondego>}<newline46mondego>"
"5148splitHere46","17642167splitHere46","setFocusableWindowState(false);<newline46mondego>"
"5149splitHere46","17642167splitHere46","nextJButton.setText(<doubleQuotes46>next ><doubleQuotes46>);<newline46mondego>  nextJButton.addActionListener(new java.awt.event.ActionListener() {<newline46mondego>     public void actionPerformed(java.awt.event.ActionEvent evt) {<newline46mondego>        nextJButtonActionPerformed(evt);<newline46mondego>     }<newline46mondego>  });<newline46mondego><newline46mondego>  JPanel panel = new JPanel();<newline46mondego>  panel.add(numberJLabel);<newline46mondego>  panel.add(numberJTextField);<newline46mondego>  panel.add(otherJTextField);<newline46mondego>  panel.add(nextJButton);<newline46mondego><newline46mondego>  getContentPane().add(panel);<newline46mondego><newline46mondego>  pack();<newline46mondego>}// </editor-fold>//GEN-END:initComponents<newline46mondego>"
"5150splitHere46","17642332splitHere46","/*<newline46mondego>             * To change this template, choose Tools | Templates<newline46mondego>             * and open the template in the editor.<newline46mondego>             */<newline46mondego>            package intelopts;<newline46mondego><newline46mondego>            import java.io.File;<newline46mondego>            import rcaller.RCaller;<newline46mondego>            import rcaller.RCode;<newline46mondego><newline46mondego>            /**<newline46mondego>             *<newline46mondego>             * @author Jason<newline46mondego>             */<newline46mondego>            public class rTest {<newline46mondego><newline46mondego>                public void test() {<newline46mondego>                    try {<newline46mondego>                        RCaller caller = new RCaller();<newline46mondego>                        caller.setRscriptExecutable(<doubleQuotes46>C:/Program Files/R/R-2.15.2/bin/Rscript<doubleQuotes46>);<newline46mondego><newline46mondego>                        RCode code = new RCode();<newline46mondego>                        code.clear();<newline46mondego><newline46mondego>                        code.addRCode(<doubleQuotes46>library(RQuantLib)<doubleQuotes46>);<newline46mondego><newline46mondego>                        code.addRCode(<doubleQuotes46> EOImpVol<-EuropeanOptionImpliedVolatility(\<doubleQuotes46>put\<doubleQuotes46>,1.9,21.18,21.0,0,.03,0.10410958904109589,.2)<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>                        caller.setRCode(code);<newline46mondego>                        caller.runAndReturnResult(<doubleQuotes46>EOImpVol<doubleQuotes46>);<newline46mondego>                        double[] d=caller.getParser().getAsDoubleArray(<doubleQuotes46>impliedVol<doubleQuotes46>);<newline46mondego><newline46mondego>                    } catch (Exception e) {<newline46mondego>                        System.out.println(e.toString());<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>"
"5151splitHere46","17642362splitHere46","String SERVER_HOME = <doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + System.getenv(<doubleQuotes46>JBOSS_HOME<doubleQuotes46>) + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"5152splitHere46","17642477splitHere46","fromJson"
"5153splitHere46","17642477splitHere46","json"
"5154splitHere46","17642477splitHere46","json"
"5155splitHere46","17642477splitHere46","{"
"5156splitHere46","17642477splitHere46","["
"5157splitHere46","17642477splitHere46","{ 'id': '1234'}<newline46mondego>"
"5158splitHere46","17642477splitHere46","[{ 'id': '1234'}]<newline46mondego>"
"5159splitHere46","17642477splitHere46","abc<newline46mondego>"
"5160splitHere46","17642513splitHere46","File"
"5161splitHere46","17642513splitHere46","URL"
"5162splitHere46","17642513splitHere46","URLConnection"
"5163splitHere46","17642513splitHere46","HttpClient"
"5164splitHere46","17642534splitHere46","@Override<newline46mondego>public void componentShown(ComponentEvent e) {<newline46mondego>     try {<newline46mondego>        Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>);<newline46mondego>con = DriverManager.getConnection(<doubleQuotes46>jdbc:mysql://localhost:3306/online<doubleQuotes46>, <doubleQuotes46>root<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>        st = con.prepareStatement(<doubleQuotes46>select question,op1,op2,op3,op4 from java<doubleQuotes46>);<newline46mondego>        rs = st.executeQuery();<newline46mondego>    } catch (ClassNotFoundException | SQLException ex) {<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5165splitHere46","17642606splitHere46","URL"
"5166splitHere46","17642606splitHere46","File"
"5167splitHere46","17642606splitHere46","URL"
"5168splitHere46","17642628splitHere46","double inputNum = Double.parseDouble(JOptionPane.showInputDialog(null, <doubleQuotes46>Enter number<doubleQuotes46>));<newline46mondego>"
"5169splitHere46","17642628splitHere46","int inputNum = Integer.parseInt(JOptionPane.showInputDialog(null, <doubleQuotes46>Enter number<doubleQuotes46>));<newline46mondego>"
"5170splitHere46","17642645splitHere46","job"
"5171splitHere46","17642645splitHere46","static final long ONE_HOUR = 1000L * 60L * 60L;<newline46mondego><newline46mondego>Date today = DateUtil.getToday();<newline46mondego>Date todayExecTime = new Date(today.getTime() + 6 * ONE_HOUR);<newline46mondego>"
"5172splitHere46","17642697splitHere46","<parent><newline46mondego>  <child1> value 1 </child1><newline46mondego>  <child2> value 2 </child2><newline46mondego>  <child3> value 3 </child3><newline46mondego></parent><newline46mondego>"
"5173splitHere46","17642697splitHere46","child1"
"5174splitHere46","17642697splitHere46","child2"
"5175splitHere46","17642697splitHere46","Node child1 = elemNodeList.item(j);<newline46mondego>Node sibling = child1.getNextSibling();<newline46mondego>while (!(sibling instanceof Element) && sibling != null) {<newline46mondego>  sibling = sibling.getNextSibling();<newline46mondego>}<newline46mondego>System.out<newline46mondego>      .println(<doubleQuotes46> Get the Name of the Next Sibling <doubleQuotes46> + sibling.getNodeName());<newline46mondego>System.out<newline46mondego>      .println(<doubleQuotes46> Get the Value of the Next Sibling <doubleQuotes46> + sibling.geTextContent());<newline46mondego>"
"5176splitHere46","17642779splitHere46","package com.general.generics;<newline46mondego>    import java.util.Scanner; <newline46mondego>    public class GPA<newline46mondego><newline46mondego>    {<newline46mondego>      public static void main(String[] args)<newline46mondego><newline46mondego>   {<newline46mondego><newline46mondego>    Scanner kbReader = new Scanner(System.in);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Enter number of classes: <doubleQuotes46>);<newline46mondego>    int numberClasses = kbReader.nextInt();<newline46mondego><newline46mondego>    int i;<newline46mondego>    int totalCreditForGPA=0; //these should be defined outside loop and should be double for precision.<newline46mondego>    int totalCreditHours=0;<newline46mondego>      for (i = 0; i < numberClasses; i++)<newline46mondego>      {<newline46mondego><newline46mondego>      System.out.print(<doubleQuotes46>Enter letter grade of class: <doubleQuotes46>);<newline46mondego>          int letterGrade = kbReader.nextInt();<newline46mondego><newline46mondego>      System.out.print(<doubleQuotes46>Enter credit hour of class: <doubleQuotes46>);<newline46mondego>      int creditHour = kbReader.nextInt();<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    switch (letterGrade)<newline46mondego>        {<newline46mondego>       case 'A':<newline46mondego>       case 'a': totalCreditForGPA = (int) (totalCreditForGPA + (creditHour * 4.0)); //result should be type to int or use totalCreditForGPA as double<newline46mondego>             totalCreditHours =  totalCreditHours + creditHour;<newline46mondego>             break;<newline46mondego>      case 'B':<newline46mondego>      case 'b':  totalCreditForGPA = (int) (totalCreditForGPA + (creditHour * 3.0));<newline46mondego>             totalCreditHours =  totalCreditHours + creditHour;<newline46mondego>             break;<newline46mondego>      case 'C':<newline46mondego>      case 'c':  totalCreditForGPA = (int) (totalCreditForGPA + (creditHour * 2.0));<newline46mondego>             totalCreditHours =  totalCreditHours + creditHour;<newline46mondego>             break;<newline46mondego>      case 'D':<newline46mondego>      case 'd':  totalCreditForGPA = (int) (totalCreditForGPA + (creditHour * 1.0));<newline46mondego>             totalCreditHours =  totalCreditHours + creditHour;<newline46mondego>             break;<newline46mondego>      case 'F':<newline46mondego>      case 'f':  totalCreditForGPA = (int) (totalCreditForGPA + (creditHour * 0.0));<newline46mondego>             totalCreditHours =  totalCreditHours + creditHour;<newline46mondego>             break;<newline46mondego>      default:<newline46mondego>             System.out.println(<doubleQuotes46>Invalid letter grade.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>      }<newline46mondego><newline46mondego>    int GPA = totalCreditForGPA;<newline46mondego>    System.out.println(<doubleQuotes46>Your GPA is <doubleQuotes46> + GPA);<newline46mondego>       }<newline46mondego>    }<newline46mondego>"
"5177splitHere46","17642806splitHere46","ArrayList<Object>"
"5178splitHere46","17642806splitHere46","ArrayList<RowData>"
"5179splitHere46","17642808splitHere46","class BreakWithLabelDemo<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        int[][] arrayOfInts =<newline46mondego>        {<newline46mondego>            { 32,  87,   3,    589 },<newline46mondego>            { 12,  1076, 2000, 8   },<newline46mondego>            { 622, 127,  77,   955 }<newline46mondego>        };<newline46mondego><newline46mondego>        int searchfor = 12;<newline46mondego>        int i;<newline46mondego>        int j = 0;<newline46mondego>        boolean foundIt = false;<newline46mondego><newline46mondego>        search:<newline46mondego>            for (i = 0; i < arrayOfInts.length; i++)<newline46mondego>            {<newline46mondego>                for (j = 0; j < arrayOfInts[i].length; j++)<newline46mondego>                {<newline46mondego>                    if (arrayOfInts[i][j] == searchfor)<newline46mondego>                    {<newline46mondego>                        foundIt = true;<newline46mondego>                        break search;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        if (foundIt)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Found <doubleQuotes46> + searchfor + <doubleQuotes46> at <doubleQuotes46> + i + <doubleQuotes46>, <doubleQuotes46> + j);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            System.out.println(searchfor + <doubleQuotes46> not in the array<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5180splitHere46","17642836splitHere46","public void paintComponent(Graphics g)"
"5181splitHere46","17642836splitHere46","frame.addKeyListener(this);<newline46mondego>"
"5182splitHere46","17642836splitHere46","public static void main(String args[])"
"5183splitHere46","17642836splitHere46","frame.addKeyListener(z);<newline46mondego>"
"5184splitHere46","17642836splitHere46","repaint();"
"5185splitHere46","17642836splitHere46","keyPressed"
"5186splitHere46","17642836splitHere46","paintComponent"
"5187splitHere46","17642836splitHere46","KeyListener"
"5188splitHere46","17642836splitHere46","KeyListeners"
"5189splitHere46","17642836splitHere46","keyPressed"
"5190splitHere46","17642836splitHere46","keyPressed"
"5191splitHere46","17642956splitHere46","public static VectorADT add(VectorADT one, VectorADT two) <newline46mondego>{<newline46mondego>   int [] sum = new int [one.vector.length];<newline46mondego>   for(int i = 0; i < one.vector.length; i++)<newline46mondego>   {<newline46mondego>       sum[i] = one.vector[i] + two.vector[i];<newline46mondego>   }<newline46mondego>   return new VectorADT(sum);<newline46mondego>}<newline46mondego>"
"5192splitHere46","17642956splitHere46","VectorADT sum = VectorADT.add(one, two);<newline46mondego>"
"5193splitHere46","17642956splitHere46","new VectorADT(sum)"
"5194splitHere46","17642956splitHere46","public VectorADT(int [] intArray)"
"5195splitHere46","17642956splitHere46","int[]"
"5196splitHere46","17642956splitHere46","int[] sum"
"5197splitHere46","17642956splitHere46","sum[i] = one.vector[i] + two.vector[i];"
"5198splitHere46","17642956splitHere46","VectorADT sum = VectorADT.add(one, two);"
"5199splitHere46","17643124splitHere46","ImageView"
"5200splitHere46","17643124splitHere46","android:layout_alignLeft=imageviewid<newline46mondego>android:layout_alignRight=imageviewid<newline46mondego>"
"5201splitHere46","17643124splitHere46","LinearLayout"
"5202splitHere46","17643150splitHere46","private void go() {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setSize(400, 400);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.add(this);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>"
"5203splitHere46","17643150splitHere46","go()"
"5204splitHere46","17643150splitHere46","public class MyPaint extends JPanel {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.setColor(Color.YELLOW);<newline46mondego>        g.fillRect(50, 50, 100, 100);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5205splitHere46","17643150splitHere46","// In another class <newline46mondego>public static void main(String[] args) {<newline46mondego>    JPanel paintTester = new MyPaint();<newline46mondego>    JFrame frame = new JFrame();<newline46mondego>    frame.setSize(400, 400);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setLocationRelativeTo(null);<newline46mondego>    frame.add(paintTester);<newline46mondego>    frame.pack();<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"5206splitHere46","17643150splitHere46","JFrame frame = new JFrame();<newline46mondego>     frame.add(new JPanel(){<newline46mondego>        @Override<newline46mondego>        public void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            g.setColor(Color.YELLOW);<newline46mondego>            g.fillRect(50, 50, 100, 100);<newline46mondego>        }<newline46mondego><newline46mondego>     });<newline46mondego>"
"5207splitHere46","17643335splitHere46","char letterGrade =(char) kbReader.next().toCharArray()[0];<newline46mondego>"
"5208splitHere46","17643389splitHere46","SettingsActivity"
"5209splitHere46","17643389splitHere46","onOptionsItemSelected"
"5210splitHere46","17643389splitHere46","android.R.id.home"
"5211splitHere46","17643389splitHere46","finish()"
"5212splitHere46","17643389splitHere46","MainActivity"
"5213splitHere46","17643389splitHere46","@Override<newline46mondego>    public boolean onOptionsItemSelected(MenuItem item) {<newline46mondego>        switch (item.getItemId()) {<newline46mondego>        case android.R.id.home:<newline46mondego>            this.finish();<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        return super.onOptionsItemSelected(item);<newline46mondego>    }<newline46mondego>"
"5214splitHere46","17643389splitHere46","onCreate()"
"5215splitHere46","17643389splitHere46","SettingsActivity"
"5216splitHere46","17643389splitHere46","getActionBar().setDisplayHomeAsUpEnabled(true);<newline46mondego>"
"5217splitHere46","17643389splitHere46","It is to show the user that selecting home will return one level up rather than to the top level of the app."
"5218splitHere46","17643518splitHere46","IIOMetadata"
"5219splitHere46","17643518splitHere46","JPEGImageReader"
"5220splitHere46","17643518splitHere46","IIOMetadata metadata = jpegReader.getImageMetadata();<newline46mondego><newline46mondego>IIOMetadataNode root = (IIOMetadataNode) metadata.getAsTree(metadata.getNativeMetadataFormatName());<newline46mondego>NodeList dqt = root.getElementsByTagName(<doubleQuotes46>dqt<doubleQuotes46>);<newline46mondego>NodeList dqtables = ((IIOMetadataNode) dqt.item(0)).getElementsByTagName(<doubleQuotes46>dqtable<doubleQuotes46>);<newline46mondego>JPEGQTable[] qTables = new JPEGQTable[dqtables.getLength()];<newline46mondego><newline46mondego>for (int i = 0; i < dqtables.getLength(); i++) {<newline46mondego>    qTables[i] = (JPEGQTable) ((IIOMetadataNode) dqtables.item(i)).getUserObject();<newline46mondego>    System.out.println(<doubleQuotes46>qTables: <doubleQuotes46> + qTables[i]);<newline46mondego>}<newline46mondego>"
"5221splitHere46","17643518splitHere46","IIOMetadata"
"5222splitHere46","17643530splitHere46","JFrame"
"5223splitHere46","17643530splitHere46","javax.swing.JFrame"
"5224splitHere46","17643530splitHere46","JFrame"
"5225splitHere46","17643551splitHere46","<html xmlns:wicket=<doubleQuotes46>http://wicket.apache.org<doubleQuotes46>><newline46mondego><body><newline46mondego><div><newline46mondego>    <a href=<doubleQuotes46>#<doubleQuotes46> onclick=<doubleQuotes46>document.getElementById('input').value = 'test'; document.getElementById('myForm').submit();<doubleQuotes46>>fill<newline46mondego>        input</a><newline46mondego><newline46mondego>    <form wicket:id=<doubleQuotes46>form<doubleQuotes46> id=<doubleQuotes46>myForm<doubleQuotes46>><newline46mondego>        <input type=<doubleQuotes46>text<doubleQuotes46> wicket:id=<doubleQuotes46>input<doubleQuotes46> id=<doubleQuotes46>input<doubleQuotes46>> <newline46mondego>        <a style=<doubleQuotes46>visibility: hidden;<doubleQuotes46> wicket:id=<doubleQuotes46>submit<doubleQuotes46>>submit</a><newline46mondego>    </form><newline46mondego><newline46mondego>    <p> Output:<newline46mondego>        <wicket:container wicket:id=<doubleQuotes46>output<doubleQuotes46>></wicket:container><newline46mondego>    </p><newline46mondego></div><newline46mondego></body><newline46mondego></html><newline46mondego>"
"5226splitHere46","17643551splitHere46","public class HomePage extends WebPage {<newline46mondego><newline46mondego>private String inputValue;<newline46mondego><newline46mondego>public HomePage(final PageParameters parameters) {<newline46mondego>    super(parameters);<newline46mondego><newline46mondego>    final Label output = new Label(<doubleQuotes46>output<doubleQuotes46>, new PropertyModel<String>(<newline46mondego>            this, <doubleQuotes46>inputValue<doubleQuotes46>));<newline46mondego>    output.setOutputMarkupId(true);<newline46mondego>    add(output);<newline46mondego><newline46mondego>    Form form = new Form(<doubleQuotes46>form<doubleQuotes46>);<newline46mondego>    form.add(new AjaxSubmitLink(<doubleQuotes46>submit<doubleQuotes46>) {<newline46mondego>        @Override<newline46mondego>        protected void onAfterSubmit(AjaxRequestTarget target, Form<?> form) {<newline46mondego>            super.onAfterSubmit(target, form);<newline46mondego>            target.add(output);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    add(form);<newline46mondego><newline46mondego>    form.add(new TextField<String>(<doubleQuotes46>input<doubleQuotes46>, new PropertyModel<String>(this,<newline46mondego>            <doubleQuotes46>inputValue<doubleQuotes46>)));<newline46mondego>}<newline46mondego>}<newline46mondego>"
"5227splitHere46","17643604splitHere46","BroadcastReceivers"
"5228splitHere46","17643604splitHere46","BroadcastReceivers"
"5229splitHere46","17643604splitHere46","abort()"
"5230splitHere46","17643604splitHere46","onStart()"
"5231splitHere46","17643604splitHere46","onStop()"
"5232splitHere46","17643803splitHere46","SimpleDateFormat"
"5233splitHere46","17643803splitHere46","Date"
"5234splitHere46","17643803splitHere46","public static void main(String[] args)  Exception {<newline46mondego>    String date1 = <doubleQuotes46>05.02.2013, 13:38:14<doubleQuotes46>;<newline46mondego>    String date2 = <doubleQuotes46>05.02.2013, 09:38:14<doubleQuotes46>;<newline46mondego>    System.out.println(getOlder(date1, date2)); // 05.02.2013, 13:38:14<newline46mondego>    System.out.println(getOlder(date2, date1)); // 05.02.2013, 13:38:14<newline46mondego>}<newline46mondego><newline46mondego>public static String getOlder(String one, String two) throws ParseException {<newline46mondego>    Date dateOne = new SimpleDateFormat(<doubleQuotes46>dd.MM.yyyy, HH:mm:ss<doubleQuotes46>).parse(one);<newline46mondego>    Date dateTwo = new SimpleDateFormat(<doubleQuotes46>dd.MM.yyyy, HH:mm:ss<doubleQuotes46>).parse(two);<newline46mondego>    if (dateOne.compareTo(dateTwo) > -1) {<newline46mondego>        return one; // or return dateOne;<newline46mondego>    }<newline46mondego>    return two; // or return dateTwo;<newline46mondego>}<newline46mondego>"
"5235splitHere46","17643803splitHere46","Date"
"5236splitHere46","17644011splitHere46","favicon.ico"
"5237splitHere46","17644056splitHere46","? extends T1"
"5238splitHere46","17644056splitHere46","? extends T2"
"5239splitHere46","17644056splitHere46","public class Pair<T1, T2> {<newline46mondego>    // Instance Fields<newline46mondego>    private T1 first;<newline46mondego>    private T2 second;<newline46mondego><newline46mondego>    // Constructors<newline46mondego>    public Pair() {}<newline46mondego><newline46mondego>    public Pair(Pair<? extends T1, ? extends T2> p) {<newline46mondego>        first  = p.first;<newline46mondego>        second = p.second;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5240splitHere46","17644107splitHere46","((DefaultTreeModel)(_tree.getModel())).reload();<newline46mondego>"
"5241splitHere46","17644210splitHere46","getTransferData()"
"5242splitHere46","17644210splitHere46","this"
"5243splitHere46","17644210splitHere46","a.equals(b)"
"5244splitHere46","17644210splitHere46","equals()"
"5245splitHere46","17644210splitHere46","VisualObject"
"5246splitHere46","17644210splitHere46","getTransferData()"
"5247splitHere46","17644210splitHere46","equals()"
"5248splitHere46","17644210splitHere46","DataFlavor.imageFlavor"
"5249splitHere46","17644210splitHere46","DataFlavor"
"5250splitHere46","17644210splitHere46","visualObjectDataFlavor = new DataFlavor(DataFlavor.javaJVMLocalObjectMimeType + <doubleQuotes46>;class=tryone.VisualObject<doubleQuotes46>);"
"5251splitHere46","17644269splitHere46","List<String> myList = new ArrayList<String>();<newline46mondego>"
"5252splitHere46","17644269splitHere46","myList.add(someStringVariable);<newline46mondego>"
"5253splitHere46","17644315splitHere46","FrameLayout"
"5254splitHere46","17644315splitHere46","Linearlayout"
"5255splitHere46","17644315splitHere46","orientation horizontal"
"5256splitHere46","17644315splitHere46","gravity top"
"5257splitHere46","17644315splitHere46","translucent background"
"5258splitHere46","17644315splitHere46","FrameLayout"
"5259splitHere46","17644315splitHere46","RelativeLayout"
"5260splitHere46","17644315splitHere46","Activity"
"5261splitHere46","17644315splitHere46","<LinearLayout<newline46mondego>       ....<newline46mondego> android:divider=<doubleQuotes46>..<doubleQuotes46> // some drawable or color whatever you want<newline46mondego> android:showDividers=<doubleQuotes46>middle<doubleQuotes46><newline46mondego> android:orientation=<doubleQuotes46>horizontal<doubleQuotes46><newline46mondego> android:background=<doubleQuotes46>a000<doubleQuotes46>><newline46mondego>    <TextView<newline46mondego>     ....<newline46mondego>     android:value=<doubleQuotes46>58<doubleQuotes46>/><newline46mondego>    <com.example.custom.view<newline46mondego>     ..../><newline46mondego></LinearLayout><newline46mondego>"
"5262splitHere46","17644366splitHere46","this"
"5263splitHere46","17644366splitHere46","this$0"
"5264splitHere46","17644366splitHere46","final"
"5265splitHere46","17644459splitHere46","Collections.shuffle(tips);<newline46mondego>"
"5266splitHere46","17644459splitHere46","ArrayList"
"5267splitHere46","17644459splitHere46","    Collections.shuffle(tips);<newline46mondego>    this.tips = tips;<newline46mondego>"
"5268splitHere46","17644497splitHere46","Set"
"5269splitHere46","17644497splitHere46","Set<String> nodups = new LinkedHashSet<String>(list1);<newline46mondego>List<String> ds3 = new ArrayList<String>(nodups);<newline46mondego>"
"5270splitHere46","17644497splitHere46","ds3"
"5271splitHere46","17644497splitHere46","O(n)"
"5272splitHere46","17644497splitHere46","Map<String, Integer> counter = new LinkedHashMap<String, Integer>();<newline46mondego>for (String s : list1) {<newline46mondego>    if (counter.containsKey(s))<newline46mondego>        counter.put(s, counter.get(s) + 1);<newline46mondego>    else<newline46mondego>        counter.put(s, 1);<newline46mondego>}<newline46mondego>"
"5273splitHere46","17644497splitHere46","List<String> ds3 = new ArrayList<String>();<newline46mondego>for (Map.Entry<String, Integer> entry : counter.entrySet())<newline46mondego>    if (entry.getValue() > 1)<newline46mondego>        ds3.add(entry.getKey());<newline46mondego>"
"5274splitHere46","17644497splitHere46","O(n)"
"5275splitHere46","17644497splitHere46","Set"
"5276splitHere46","17644497splitHere46","Set<String> seen = new HashSet<String>();<newline46mondego>List<String> ds3 = new ArrayList<String>();<newline46mondego>for (String s : list1) {<newline46mondego>    if (seen.contains(s))<newline46mondego>        ds3.add(s);<newline46mondego>    else<newline46mondego>        seen.add(s);<newline46mondego>}<newline46mondego>"
"5277splitHere46","17644509splitHere46","Scanner scanner = new Scanner(System.in); <newline46mondego><newline46mondego>String a = scanner.nextLine();<newline46mondego><newline46mondego>String b = scanner.nextLine(); // use the scanner object to get the next line<newline46mondego>"
"5278splitHere46","17644565splitHere46","System.out.println(com.sun.javafx.runtime.VersionInfo.getRuntimeVersion());<newline46mondego>"
"5279splitHere46","17644605splitHere46","public class MyInputProcessor implements InputProcessor {<newline46mondego>   @Override<newline46mondego>   public boolean touchDown (int x, int y, int pointer, int button) {<newline46mondego>      if (button == Input.Buttons.LEFT) {<newline46mondego>          // Some stuff<newline46mondego>          return true;     <newline46mondego>      }<newline46mondego>      return false;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5280splitHere46","17644605splitHere46","MyInputProcessor inputProcessor = new MyInputProcessor();<newline46mondego>Gdx.input.setInputProcessor(inputProcessor);<newline46mondego>"
"5281splitHere46","17644605splitHere46","class AwesomeGameClass {<newline46mondego>    public void init() {<newline46mondego>        Gdx.input.setInputProcessor(new InputProcessor() {<newline46mondego>            @Override<newline46mondego>            public boolean TouchDown(int x, int y, int pointer, int button) {<newline46mondego>                if (button == Input.Buttons.LEFT) {<newline46mondego>                    onMouseDown();<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego>                return false<newline46mondego>            }<newline46mondego><newline46mondego>            ... the other implementations for InputProcessor go here, if you're using Eclipse or Intellij they'll add them in automatically ...<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private void onMouseDown() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5282splitHere46","17644622splitHere46","main"
"5283splitHere46","17644622splitHere46","main = m;"
"5284splitHere46","17644678splitHere46","public String nextString()<newline46mondego>{<newline46mondego>    return Integer.toString(random.nextInt(),36);<newline46mondego>}<newline46mondego>"
"5285splitHere46","17644704splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego><newline46mondego>class Billfold {<newline46mondego>    List<Card> list = new ArrayList<Card>(10);<newline46mondego><newline46mondego>    void addCard(Card card) // Q: Not sure if this should be String<newline46mondego>                            // A: You would like to add a Card<newline46mondego>    {<newline46mondego>        list.add(card);<newline46mondego>    }<newline46mondego><newline46mondego>    void showAllFormat() {<newline46mondego>        // go polymorphism !...<newline46mondego>        // when you call this general 'format()' you see the subclasses<newline46mondego>        // 'format()' is executed, not from 'Card' class<newline46mondego>        for(Card x: list) {<newline46mondego>            System.out.println(x.format());            <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Card {<newline46mondego>    private String name; /* owner */<newline46mondego><newline46mondego>    public Card() //This is my superclass<newline46mondego>    {<newline46mondego>        name = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    public Card(String n) {<newline46mondego>        name = n;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isExpired() {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    public String format() {<newline46mondego>        return <doubleQuotes46>Card holder: <doubleQuotes46> + name;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class IDCard extends Card {<newline46mondego>    //This is one of my subclasses<newline46mondego>    private int IDNumber;<newline46mondego><newline46mondego>    public IDCard(String n, int id) {<newline46mondego>        super(n);<newline46mondego>        this.IDNumber = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public String format() {<newline46mondego>        return <doubleQuotes46>(ID)<doubleQuotes46> + super.format() + <doubleQuotes46> <doubleQuotes46> + IDNumber;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class DriverLicense extends Card {<newline46mondego>    private String type;<newline46mondego><newline46mondego>    public DriverLicense(String n, String type) {<newline46mondego>        super(n);<newline46mondego>        this.type = type;<newline46mondego>    }<newline46mondego><newline46mondego>    public String format() {<newline46mondego>        return <doubleQuotes46>(DL)<doubleQuotes46> + super.format() + <doubleQuotes46> TYPE: <doubleQuotes46> + type;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class BillfoldTester {<newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Card x = new IDCard(<doubleQuotes46>Julie<doubleQuotes46>, 1995);<newline46mondego>        Card j = new DriverLicense(<doubleQuotes46>Jess<doubleQuotes46>, <doubleQuotes46>AB<doubleQuotes46>);<newline46mondego><newline46mondego>        Billfold bf = new Billfold();<newline46mondego>        bf.addCard(x);<newline46mondego>        bf.addCard(j);<newline46mondego><newline46mondego>        bf.showAllFormat();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5286splitHere46","17644724splitHere46","ArrayList<Integer> list = new ArrayList<Integer>(Collections.nCopies(100, 10));<newline46mondego>"
"5287splitHere46","17644724splitHere46","list"
"5288splitHere46","17645036splitHere46","getGraphics"
"5289splitHere46","17645036splitHere46","getGraphics"
"5290splitHere46","17645036splitHere46","null"
"5291splitHere46","17645036splitHere46","JPanel"
"5292splitHere46","17645036splitHere46","getWidth"
"5293splitHere46","17645036splitHere46","getHeight"
"5294splitHere46","17645036splitHere46","setSize"
"5295splitHere46","17645036splitHere46","getPreferredSize"
"5296splitHere46","17645036splitHere46","Graphics"
"5297splitHere46","17645036splitHere46","dispose"
"5298splitHere46","17645036splitHere46","paint"
"5299splitHere46","17645036splitHere46","gh.create"
"5300splitHere46","17645036splitHere46","Graphics"
"5301splitHere46","17645036splitHere46","paint"
"5302splitHere46","17645036splitHere46","paintComponent"
"5303splitHere46","17645036splitHere46","null"
"5304splitHere46","17645036splitHere46","JPanel"
"5305splitHere46","17645036splitHere46","setBounds"
"5306splitHere46","17645036splitHere46","JPanel"
"5307splitHere46","17645036splitHere46","import java.awt.AlphaComposite;<newline46mondego>import java.awt.BorderLayout;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Insets;<newline46mondego>import java.awt.RenderingHints;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.File;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego>import javax.swing.border.EmptyBorder;<newline46mondego><newline46mondego>public class ImagePaneExample {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new ImagePaneExample();<newline46mondego>    }<newline46mondego><newline46mondego>    public ImagePaneExample() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                try {<newline46mondego>                    BufferedImage img = ImageIO.read(new File(<doubleQuotes46>C:\\hold\\thumbnails\\2005-09-29-3957.jpeg<doubleQuotes46>));<newline46mondego>                    ImagePane imgPane = new ImagePane();<newline46mondego>                    imgPane.setImage(img);<newline46mondego>                    imgPane.setRounded(true);<newline46mondego>                    imgPane.setBorder(new EmptyBorder(20, 20, 20, 20));<newline46mondego><newline46mondego>                    JFrame frame = new JFrame(<doubleQuotes46>Testing<doubleQuotes46>);<newline46mondego>                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                    frame.setLayout(new BorderLayout());<newline46mondego>                    frame.add(imgPane);<newline46mondego>                    frame.pack();<newline46mondego>                    frame.setLocationRelativeTo(null);<newline46mondego>                    frame.setVisible(true);<newline46mondego>                } catch (Exception exp) {<newline46mondego>                    exp.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class ImagePane extends JPanel {<newline46mondego><newline46mondego>        private BufferedImage img;<newline46mondego>        private BufferedImage renderImg;<newline46mondego>        private boolean rounded;<newline46mondego><newline46mondego>        public ImagePane() {<newline46mondego>        }<newline46mondego><newline46mondego>        public void setRounded(boolean value) {<newline46mondego>            if (value != rounded) {<newline46mondego>                rounded = value;<newline46mondego>                renderImg = null;<newline46mondego>                firePropertyChange(<doubleQuotes46>rounded<doubleQuotes46>, !rounded, rounded);<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean isRounded() {<newline46mondego>            return rounded;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setImage(BufferedImage value) {<newline46mondego>            if (value != img) {<newline46mondego>                BufferedImage old = img;<newline46mondego>                img = value;<newline46mondego>                renderImg = null;<newline46mondego>                firePropertyChange(<doubleQuotes46>image<doubleQuotes46>, old, img);<newline46mondego>                repaint();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        public BufferedImage getImage() {<newline46mondego>            return img;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Dimension getPreferredSize() {<newline46mondego>            Dimension size = img == null ? new Dimension(200, 200) : new Dimension(img.getWidth(), img.getHeight());<newline46mondego>            Insets insets = getInsets();<newline46mondego>            size.width += (insets.left + insets.right);<newline46mondego>            size.height += (insets.top + insets.bottom);<newline46mondego>            return size;<newline46mondego>        }<newline46mondego><newline46mondego>        protected void applyQualityRenderHints(Graphics2D g2d) {<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_DITHERING, RenderingHints.VALUE_DITHER_ENABLE);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);<newline46mondego>            g2d.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);<newline46mondego>        }<newline46mondego><newline46mondego>        protected BufferedImage getImageToRender() {<newline46mondego><newline46mondego>            if (renderImg == null) {<newline46mondego>                BufferedImage source = getImage();<newline46mondego>                if (source != null) {<newline46mondego>                    if (isRounded()) {<newline46mondego>                        BufferedImage mask = new BufferedImage(source.getWidth(), source.getHeight(), BufferedImage.TYPE_INT_ARGB);<newline46mondego>                        Graphics2D g2d = mask.createGraphics();<newline46mondego>                        applyQualityRenderHints(g2d);<newline46mondego>                        g2d.setBackground(new Color(255, 255, 255, 0));<newline46mondego>                        g2d.clearRect(0, 0, mask.getWidth(), mask.getHeight());<newline46mondego>                        g2d.setBackground(new Color(255, 255, 255, 255));<newline46mondego>                        g2d.fillRoundRect(0, 0, mask.getWidth(), mask.getHeight(), 40, 40);<newline46mondego>                        g2d.dispose();<newline46mondego><newline46mondego>                        BufferedImage comp = new BufferedImage(source.getWidth(), source.getHeight(), BufferedImage.TYPE_INT_ARGB);<newline46mondego>                        g2d = comp.createGraphics();<newline46mondego>                        applyQualityRenderHints(g2d);<newline46mondego>                        g2d.setBackground(new Color(255, 255, 255, 0));<newline46mondego>                        g2d.clearRect(0, 0, source.getWidth(), source.getHeight());<newline46mondego>                        g2d.drawImage(source, 0, 0, this);<newline46mondego>                        g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_IN));<newline46mondego>                        g2d.drawImage(mask, 0, 0, this);<newline46mondego>                        g2d.dispose();<newline46mondego><newline46mondego>                        renderImg = comp;<newline46mondego>                    } else {<newline46mondego>                        renderImg = source;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            return renderImg;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            BufferedImage img = getImageToRender();<newline46mondego>            System.out.println(img);<newline46mondego>            if (img != null) {<newline46mondego>                Insets insets = getInsets();<newline46mondego>                Graphics2D g2d = (Graphics2D) g.create();<newline46mondego>                int width = getWidth();<newline46mondego>                int height = getHeight();<newline46mondego>                int x = ((width - img.getWidth()) / 2);<newline46mondego>                int y = ((height - img.getHeight()) / 2);<newline46mondego>                g2d.drawImage(img, x, y, this);<newline46mondego>                g2d.dispose();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5308splitHere46","17645072splitHere46","Map"
"5309splitHere46","17645072splitHere46","Map<String, String> urls = MapCreator();<newline46mondego>"
"5310splitHere46","17645072splitHere46","get()"
"5311splitHere46","17645072splitHere46","Map"
"5312splitHere46","17645072splitHere46","Object"
"5313splitHere46","17645086splitHere46","if"
"5314splitHere46","17645086splitHere46","false"
"5315splitHere46","17645086splitHere46","win = false"
"5316splitHere46","17645243splitHere46","name"
"5317splitHere46","17645243splitHere46","string-array"
"5318splitHere46","17645243splitHere46","HashMap"
"5319splitHere46","17645243splitHere46","<item>"
"5320splitHere46","17645286splitHere46","j + f * d<newline46mondego>4 + 5.0 * 6.0<newline46mondego>4 + 30.0<newline46mondego>34.0<newline46mondego>"
"5321splitHere46","17645387splitHere46","<types><newline46mondego>  <xsd:schema><newline46mondego>    <xsd:import schemaLocation=<doubleQuotes46>http://localhost:8080/FloeClient/localFiles?xsd=1<doubleQuotes46> namespace=<doubleQuotes46>http://app.client.floe.iceberg.com/<doubleQuotes46>/><newline46mondego>  </xsd:schema><newline46mondego></types><newline46mondego>"
"5322splitHere46","17645579splitHere46","if (item.unlocked == false) {<newline46mondego>        holder.text.setTextColor(Color.LTGRAY);<newline46mondego>        Typeface type = Typeface.create(<doubleQuotes46><doubleQuotes46>, Typeface.ITALIC);<newline46mondego>        holder.text.setTypeface(type);<newline46mondego>    }<newline46mondego>"
"5323splitHere46","17645579splitHere46","unlocked == true"
"5324splitHere46","17645603splitHere46","public class BoardImpl implements Board{<newline46mondego><newline46mondego>  public void final convertFromString(String formattedString)<newline46mondego>  {<newline46mondego>        //do some parsing on string and set up the BoardImpl properties<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"5325splitHere46","17645603splitHere46","abstract class"
"5326splitHere46","17645603splitHere46","public abstract class AbstractBoard implements Board{<newline46mondego><newline46mondego>     public AbstractBoard(String s){<newline46mondego>       convertFromString(s);<newline46mondego>     }<newline46mondego><newline46mondego>}<newline46mondego>"
"5327splitHere46","17645603splitHere46","public class Client {<newline46mondego><newline46mondego> private Board board;<newline46mondego><newline46mondego>  public Client(String s){<newline46mondego>   board.convertFromString(s);<newline46mondego>  }<newline46mondego><newline46mondego> public void setBoard(Board board){<newline46mondego>      this.board = board;<newline46mondego> } <newline46mondego><newline46mondego>}<newline46mondego>"
"5328splitHere46","17645603splitHere46","FlyweightFactory"
"5329splitHere46","17645681splitHere46","String csv = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();<newline46mondego>CSVWriter writer = new CSVWriter(new FileWriter(csv));<newline46mondego><newline46mondego>List<String[]> data = new ArrayList<String[]>();<newline46mondego>data.add(new String[] {<doubleQuotes46>India<doubleQuotes46>, <doubleQuotes46>New Delhi<doubleQuotes46>});<newline46mondego>data.add(new String[] {<doubleQuotes46>United States<doubleQuotes46>, <doubleQuotes46>Washington D.C<doubleQuotes46>});<newline46mondego>data.add(new String[] {<doubleQuotes46>Germany<doubleQuotes46>, <doubleQuotes46>Berlin<doubleQuotes46>});<newline46mondego><newline46mondego>writer.writeAll(data);<newline46mondego><newline46mondego>writer.close();<newline46mondego>"
"5330splitHere46","17645681splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.WRITE_EXTERNAL_STORAGE<doubleQuotes46> /><newline46mondego>"
"5331splitHere46","17645691splitHere46","// Create first instance here...<newline46mondego>f.add(new ClassC());<newline46mondego>f.pack();<newline46mondego>f.setVisible(true);<newline46mondego>// Create second instance here...<newline46mondego>ClassC callanimation = new ClassC(1);<newline46mondego>callanimation.AnimationPanel();<newline46mondego>"
"5332splitHere46","17645691splitHere46","ClassC callanimation = new ClassC();<newline46mondego>callanimation.AnimationPanel();<newline46mondego>f.add(callanimation);<newline46mondego>f.pack();<newline46mondego>f.setVisible(true);<newline46mondego>"
"5333splitHere46","17645790splitHere46","class someClass {<newline46mondego>    int[] myArray = new int[2];<newline46mondego><newline46mondego>    private void someMethod() {<newline46mondego>        myArray[0] = 3;<newline46mondego>        myArray[1] = //whatever<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"5334splitHere46","17645827splitHere46","methodA()"
"5335splitHere46","17645827splitHere46","class someClass {<newline46mondego>    public static int counter = 0;<newline46mondego>    void methodA() {<newline46mondego>        counter++;<newline46mondego>        //other code<newline46mondego>    }<newline46mondego> }<newline46mondego>"
"5336splitHere46","17645827splitHere46","methodA()"
"5337splitHere46","17645923splitHere46","LoadedData"
"5338splitHere46","17646178splitHere46","while (input.charAt(0) != 'F' && input.charAt(0) != 'K' || input.length() > 1) {<newline46mondego>"
"5339splitHere46","17646178splitHere46","input"
"5340splitHere46","17646178splitHere46","'F'"
"5341splitHere46","17646178splitHere46","'K'"
"5342splitHere46","17646178splitHere46","input"
"5343splitHere46","17646178splitHere46","'F'"
"5344splitHere46","17646178splitHere46","'K'"
"5345splitHere46","17646178splitHere46","while (! input.equals(<doubleQuotes46>F<doubleQuotes46>) && ! input.equals(<doubleQuotes46>K<doubleQuotes46>)) {<newline46mondego>"
"5346splitHere46","17646317splitHere46","synchronized(this){<newline46mondego>...<newline46mondego>}<newline46mondego>"
"5347splitHere46","17646317splitHere46","class Chef implments Runnable {<newline46mondego><newline46mondego>  private Object lock;<newline46mondego>  Chef(Object lock) {<newline46mondego>     this.lock = lock;<newline46mondego>  }<newline46mondego><newline46mondego>  public run() {<newline46mondego><newline46mondego>      synchronized(lock) {<newline46mondego>         // do stuff here<newline46mondego>      }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class Waiter implments Runnable {<newline46mondego><newline46mondego>  private Object lock;<newline46mondego>  Chef(Object lock) {<newline46mondego>     this.lock = lock;<newline46mondego>  }<newline46mondego><newline46mondego>  public run() {<newline46mondego><newline46mondego>      synchronized(lock) {<newline46mondego>         // do stuff here<newline46mondego>      }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>//your main<newline46mondego><newline46mondego> public static void main(String []args) {<newline46mondego>    Object obj = new Object();<newline46mondego>    Thread chef = new Thread(new Chef(obj));<newline46mondego>    Thread waiter = new Thread(new Waiter(obj));<newline46mondego>    chef.start();<newline46mondego>    waiter.start();<newline46mondego> }<newline46mondego>"
"5348splitHere46","17646579splitHere46","FileReader reader1 = FileReader(<doubleQuotes46>file1.text<doubleQuotes46>)<newline46mondego>    FileReader reader2 = FileReader(<doubleQuotes46>file2.text<doubleQuotes46>)<newline46mondego><newline46mondego>    while(reader1.hasNextLine() || reader2.hasNextLine()) <newline46mondego>    {<newline46mondego>         if(reader1.hasNextLine()) {<newline46mondego>         writeToCSV(reader1.nextLine());<newline46mondego>         } <newline46mondego>         if(reader2.hasNextLine() {<newline46mondego>         writeToCSV(reader2.nextLine());<newline46mondego>         }<newline46mondego>         writeToCSV(<doubleQuotes46>\r\n<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"5349splitHere46","17646613splitHere46","http://someurl.com/passfail?parameter={<doubleQuotes46>data1<doubleQuotes46>:<doubleQuotes46>123456789<doubleQuotes46>,<doubleQuotes46>data2<doubleQuotes46>:<doubleQuotes46>123456789<doubleQuotes46>}>"
"5350splitHere46","17646628splitHere46","debuglevel"
"5351splitHere46","17646628splitHere46","debuglevel"
"5352splitHere46","17646628splitHere46","ant -Ddebuglevel=source<newline46mondego>"
"5353splitHere46","17646628splitHere46","build.xml"
"5354splitHere46","17646628splitHere46","<property name=<doubleQuotes46>debuglevel<doubleQuotes46> value=<doubleQuotes46>source<doubleQuotes46>/><newline46mondego>"
"5355splitHere46","17646628splitHere46","<property file=<doubleQuotes46>build.properties<doubleQuotes46>/><newline46mondego>"
"5356splitHere46","17646628splitHere46","build.properties"
"5357splitHere46","17646628splitHere46","debuglevel=source<newline46mondego>"
"5358splitHere46","17646628splitHere46","-g:"
"5359splitHere46","17646628splitHere46","javac"
"5360splitHere46","17646628splitHere46","javac -help"
"5361splitHere46","17646628splitHere46","lines,vars,source"
"5362splitHere46","17646766splitHere46","new SampleClass().start().join(); This is wrong.<newline46mondego>"
"5363splitHere46","17646766splitHere46","SampleClass samClass = new SampleClass();<newline46mondego>   samClass.start();<newline46mondego>   samClass.join()<newline46mondego>"
"5364splitHere46","17646766splitHere46","Thread t1 = ..<newline46mondego>   Thread t2 = ..<newline46mondego><newline46mondego>   t1.start();<newline46mondego>   t1.join();<newline46mondego>   t2.start(); // t2 will start only when t1 dies<newline46mondego>   t2.join(); //  <newline46mondego>   t3.start(); // t3 will start only when t2 dies..<newline46mondego>"
"5365splitHere46","17646766splitHere46","Thread1 -> T1<newline46mondego>Thread2 -> T2<newline46mondego>Thread1 -> T3<newline46mondego>Thread2 -> T4<newline46mondego>"
"5366splitHere46","17646766splitHere46","Thread1 ->run {<newline46mondego>    while(canIrun) {<newline46mondego>    executeTask(taskQueue1.next());<newline46mondego>    notifyThread2();<newline46mondego>    waitForThread2Signal();<newline46mondego>   }<newline46mondego>  }<newline46mondego><newline46mondego>  Thread2 -.run {<newline46mondego>   while(canIrun) {<newline46mondego>    waitForThread1Signal();<newline46mondego>    executeTask(taskQueue2.next());<newline46mondego>    notifyThread1();<newline46mondego>   }<newline46mondego>  }<newline46mondego>"
"5367splitHere46","17647119splitHere46","private int year;<newline46mondego>private int month;<newline46mondego>private int day;<newline46mondego>private int yearA;<newline46mondego>private int monthA;<newline46mondego>private int dayA;<newline46mondego>private int hour;<newline46mondego>private int minute;<newline46mondego><newline46mondego>static final int DATE_DIALOG_ID = 1;<newline46mondego>static final int TIME_DIALOG_ID = 2;<newline46mondego><newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    setCurrentDateOnView();<newline46mondego>    setCurrentTimeOnView();<newline46mondego>    addListenerOnButton();<newline46mondego>}<newline46mondego><newline46mondego>// display current date<newline46mondego>public void setCurrentDateOnView() {<newline46mondego><newline46mondego>    tvDisplayDate = (TextView) findViewById(R.id.tvDate);<newline46mondego>    tvDisplayDate2 = (TextView) findViewById(R.id.tvDateA);<newline46mondego>    dpResult = (DatePicker) findViewById(R.id.dpResult);<newline46mondego><newline46mondego>    final Calendar c = Calendar.getInstance();<newline46mondego>    year = c.get(Calendar.YEAR);<newline46mondego>    month = c.get(Calendar.MONTH);<newline46mondego>    day = c.get(Calendar.DAY_OF_MONTH);<newline46mondego>    hour = c.get(Calendar.HOUR_OF_DAY);<newline46mondego>    minute = c.get(Calendar.MINUTE);<newline46mondego><newline46mondego>    // set current date into textview<newline46mondego>    tvDisplayDate.setText(new StringBuilder()<newline46mondego>            // Month is 0 based, just add 1<newline46mondego><newline46mondego>            .append(day).append(<doubleQuotes46>-<doubleQuotes46>).append(month + 1).append(<doubleQuotes46>-<doubleQuotes46>)<newline46mondego>            .append(year).append(<doubleQuotes46> <doubleQuotes46>));<newline46mondego><newline46mondego>    c.add(Calendar.DAY_OF_MONTH, 42);<newline46mondego>    dayA = c.get(Calendar.DAY_OF_MONTH);<newline46mondego>    monthA = c.get(Calendar.MONTH);<newline46mondego>    yearA = c.get(Calendar.YEAR);<newline46mondego>    tvDisplayDate2.setText(new StringBuilder()<newline46mondego>            // Month is 0 based, just add 1<newline46mondego><newline46mondego>            .append(dayA).append(<doubleQuotes46>-<doubleQuotes46>).append(monthA + 1).append(<doubleQuotes46>-<doubleQuotes46>)<newline46mondego>            .append(yearA).append(<doubleQuotes46> <doubleQuotes46>));<newline46mondego><newline46mondego>    // set current date into datepicker<newline46mondego>    dpResult.init(year, month, day, null);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>// Display current time<newline46mondego>public void setCurrentTimeOnView() {<newline46mondego>    tvDisplayTime = (TextView) findViewById(R.id.tvTime);<newline46mondego>    timepicker = (TimePicker) findViewById(R.id.timepicker);<newline46mondego><newline46mondego>    // set current time into textview<newline46mondego>    tvDisplayTime.setText(new StringBuilder().append(pad(hour)).append(<doubleQuotes46>:<doubleQuotes46>)<newline46mondego>            .append(pad(minute)));<newline46mondego><newline46mondego>    // set current time into timepicker<newline46mondego>    timepicker.setCurrentHour(hour);<newline46mondego>    timepicker.setCurrentMinute(minute);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public void addListenerOnButton() {<newline46mondego><newline46mondego>    infringementbutton = (Button) findViewById(R.id.infringementbutton);<newline46mondego>    timebutton = (Button) findViewById(R.id.timebutton);<newline46mondego><newline46mondego>    infringementbutton.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        @SuppressWarnings(<doubleQuotes46>deprecation<doubleQuotes46>)<newline46mondego>        @Override<newline46mondego>        public void onClick(View view) {<newline46mondego><newline46mondego>            showDialog(DATE_DIALOG_ID);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    });<newline46mondego>    timebutton.setOnClickListener(new View.OnClickListener() {<newline46mondego><newline46mondego>        @SuppressWarnings(<doubleQuotes46>deprecation<doubleQuotes46>)<newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego><newline46mondego>            showDialog(TIME_DIALOG_ID);<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego><newline46mondego>protected Dialog onCreateDialog(int id) {<newline46mondego><newline46mondego>    switch (id) {<newline46mondego>    case DATE_DIALOG_ID:<newline46mondego>        // set date picker as current date<newline46mondego>        return new DatePickerDialog(this, datePickerListener, year, month,<newline46mondego>                day);<newline46mondego>    case TIME_DIALOG_ID:<newline46mondego>        // set time picker as current time<newline46mondego>        return new TimePickerDialog(this, timePickerListener, hour, minute,<newline46mondego>                false);<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>private DatePickerDialog.OnDateSetListener datePickerListener = new DatePickerDialog.OnDateSetListener() {<newline46mondego><newline46mondego>    // when dialog box is closed, below method will be called.<newline46mondego>    public void onDateSet(DatePicker view, int selectedYear,<newline46mondego>            int selectedMonth, int selectedDay) {<newline46mondego>        year = selectedYear;<newline46mondego>        month = selectedMonth;<newline46mondego>        day = selectedDay;<newline46mondego><newline46mondego>        // set selected date into textview<newline46mondego>        tvDisplayDate.setText(new StringBuilder().append(day).append(<doubleQuotes46>-<doubleQuotes46>)<newline46mondego>                .append(month + 1).append(<doubleQuotes46>-<doubleQuotes46>).append(year).append(<doubleQuotes46> <doubleQuotes46>));<newline46mondego><newline46mondego>        Calendar c = new GregorianCalendar();<newline46mondego>        c.set(Calendar.YEAR, year);<newline46mondego>        c.set(Calendar.MONTH, month);<newline46mondego>        c.set(Calendar.DAY_OF_MONTH, day);<newline46mondego>        c.add(Calendar.DAY_OF_MONTH, 42);<newline46mondego>        dayA = c.get(Calendar.DAY_OF_MONTH);<newline46mondego>        monthA = c.get(Calendar.MONTH);<newline46mondego>        yearA = c.get(Calendar.YEAR);<newline46mondego><newline46mondego>        tvDisplayDate2.setText(new StringBuilder().append(dayA).append(<doubleQuotes46>-<doubleQuotes46>)<newline46mondego>                .append(monthA + 1).append(<doubleQuotes46>-<doubleQuotes46>).append(yearA).append(<doubleQuotes46> <doubleQuotes46>));<newline46mondego><newline46mondego>        // set selected date into datepicker also<newline46mondego>        dpResult.init(year, month, day, null);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>};<newline46mondego>private TimePickerDialog.OnTimeSetListener timePickerListener = new TimePickerDialog.OnTimeSetListener() {<newline46mondego>    public void onTimeSet(TimePicker view, int selectedHour,<newline46mondego>            int selectedMinute) {<newline46mondego>        hour = selectedHour;<newline46mondego>        minute = selectedMinute;<newline46mondego><newline46mondego>        // set current time into textview<newline46mondego>        tvDisplayTime.setText(new StringBuilder().append(pad(hour))<newline46mondego>                .append(<doubleQuotes46>:<doubleQuotes46>).append(pad(minute)));<newline46mondego><newline46mondego>        // set current time into timepicker<newline46mondego>        timepicker.setCurrentHour(hour);<newline46mondego>        timepicker.setCurrentMinute(minute);<newline46mondego><newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>private static String pad(int c) {<newline46mondego>    if (c >= 10)<newline46mondego>        return String.valueOf(c);<newline46mondego>    else<newline46mondego>        return <doubleQuotes46>0<doubleQuotes46> + String.valueOf(c);<newline46mondego>}<newline46mondego>"
"5368splitHere46","17647119splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>"
"5369splitHere46","17647119splitHere46","<TableLayout<newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46> ><newline46mondego><newline46mondego>    <TableRow><newline46mondego><newline46mondego>        <Button<newline46mondego>            android:id=<doubleQuotes46>@+id/infringementbutton<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>Infringement<doubleQuotes46> /><newline46mondego><newline46mondego>        <DatePicker<newline46mondego>            android:id=<doubleQuotes46>@+id/dpResult<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:visibility=<doubleQuotes46>gone<doubleQuotes46> /><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/tvDate<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46> /><newline46mondego>    </TableRow><newline46mondego><newline46mondego>    <TableRow><newline46mondego><newline46mondego>        <Button<newline46mondego>            android:id=<doubleQuotes46>@+id/button2<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>Penaltydate<doubleQuotes46> /><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/tvDateA<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46> /><newline46mondego>    </TableRow><newline46mondego><newline46mondego>    <TableRow><newline46mondego><newline46mondego>        <Button<newline46mondego>            android:id=<doubleQuotes46>@+id/timebutton<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>Time<doubleQuotes46> /><newline46mondego><newline46mondego>        <TimePicker<newline46mondego>            android:id=<doubleQuotes46>@+id/timepicker<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:visibility=<doubleQuotes46>gone<doubleQuotes46> /><newline46mondego><newline46mondego>        <TextView<newline46mondego>            android:id=<doubleQuotes46>@+id/tvTime<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46><doubleQuotes46><newline46mondego>            android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46> /><newline46mondego>    </TableRow><newline46mondego></TableLayout><newline46mondego>"
"5370splitHere46","17647166splitHere46","TextView maintext = (TextView) findViewById(R.id.maintext);<newline46mondego> Thread downloadThread = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            Document doc;<newline46mondego>            try {<newline46mondego>                doc = Jsoup.connect(<doubleQuotes46>http://www.stackoverflow.com<doubleQuotes46>).get();<newline46mondego>                titlestring = doc.title();<newline46mondego><newline46mondego>             runOnUiThread(new Runnable()<newline46mondego>                     {<newline46mondego>                       run(){<newline46mondego>                    Log.i(<doubleQuotes46>wbbug<doubleQuotes46>, <doubleQuotes46>Title string: <doubleQuotes46> + titlestring);<newline46mondego>                    maintext.setText(titlestring);<newline46mondego>                            }<newline46mondego>                     }<newline46mondego><newline46mondego>                } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>                }<newline46mondego>        }<newline46mondego>    };<newline46mondego>    downloadThread.start();<newline46mondego>"
"5371splitHere46","17647166splitHere46","maintext.setText()"
"5372splitHere46","17647166splitHere46","titlestring"
"5373splitHere46","17647166splitHere46","setText"
"5374splitHere46","17647179splitHere46","import java.sql.CallableStatement; <newline46mondego>import java.sql.Date; <newline46mondego>import java.sql.PreparedStatement; <newline46mondego>import java.sql.ResultSet; <newline46mondego>import java.sql.SQLException; <newline46mondego>import java.util.GregorianCalendar;<newline46mondego>import javax.xml.datatype.DatatypeConfigurationException;<newline46mondego>import javax.xml.datatype.DatatypeFactory;<newline46mondego>import javax.xml.datatype.XMLGregorianCalendar; <newline46mondego>import org.apache.ibatis.type.JdbcType; <newline46mondego>import org.apache.ibatis.type.TypeHandler; <newline46mondego>public class CustomDateTypeHandler implements TypeHandler { <newline46mondego>@Override <newline46mondego>public void setParameter(PreparedStatement ps, int i, Object parameter, JdbcType jdbcType) <newline46mondego>throws SQLException { <newline46mondego>if (null != parameter) { <newline46mondego>long time = ((XMLGregorianCalendar) parameter).toGregorianCalendar().getTimeInMillis(); <newline46mondego>Date date = new java.sql.Date(time); <newline46mondego>ps.setDate(i, date); <newline46mondego>} <newline46mondego>else { <newline46mondego>ps.setTimestamp(i, null); <newline46mondego>} <newline46mondego>} <newline46mondego>@Override <newline46mondego>public Object getResult(ResultSet rs, String columnName) throws SQLException { <newline46mondego>Date date = rs.getDate(columnName); <newline46mondego>if (null == date) { <newline46mondego>return null; <newline46mondego>} <newline46mondego>XMLGregorianCalendar date2 = null;<newline46mondego>GregorianCalendar c = new GregorianCalendar();<newline46mondego>c.setTime(date);<newline46mondego>try {<newline46mondego>date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);<newline46mondego>} catch (DatatypeConfigurationException e) {<newline46mondego>e.printStackTrace();<newline46mondego>}<newline46mondego>return date2;<newline46mondego>} <newline46mondego>@Override <newline46mondego>public Object getResult(CallableStatement cs, int columnIndex) throws SQLException { <newline46mondego>return <doubleQuotes46><doubleQuotes46>;<newline46mondego>} <newline46mondego>} <newline46mondego>"
"5375splitHere46","17647179splitHere46","<typeHandler handler=<doubleQuotes46>com.viasat.cmdb.common.utils.CustomDateTypeHandler<doubleQuotes46> javaType=<doubleQuotes46>javax.xml.datatype.XMLGregorianCalendar<doubleQuotes46> /><newline46mondego></typeHandlers><newline46mondego>"
"5376splitHere46","17647223splitHere46","TimeZone"
"5377splitHere46","17647223splitHere46","SimpleTimeFormat"
"5378splitHere46","17647223splitHere46","DateFormat#setTimeZone"
"5379splitHere46","17647223splitHere46","Date"
"5380splitHere46","17647223splitHere46","SimpleDateFormat formatter = new SimpleDateFormat(<doubleQuotes46>MM-dd-yyyy HH:mm<doubleQuotes46>);<newline46mondego>Calendar now = Calendar.getInstance(); <newline46mondego>System.out.println(formatter.format(now.getTime()));<newline46mondego>TimeZone gmt = TimeZone.getTimeZone(<doubleQuotes46>GMT<doubleQuotes46>);<newline46mondego>formatter.setTimeZone(gmt);<newline46mondego>System.out.println(formatter.format(now.getTime()));<newline46mondego>"
"5381splitHere46","17647223splitHere46","07-15-2013 00:17 //no GMT<newline46mondego>07-15-2013 05:17 //GMT<newline46mondego>"
"5382splitHere46","17647228splitHere46","Object"
"5383splitHere46","17647228splitHere46","scope"
"5384splitHere46","17647470splitHere46","count"
"5385splitHere46","17647470splitHere46","isOdd"
"5386splitHere46","17647470splitHere46","c"
"5387splitHere46","17647470splitHere46","c % 2 == 1"
"5388splitHere46","17647470splitHere46","class SharedData {<newline46mondego>   int c;<newline46mondego>   boolean isOdd;<newline46mondego> } <newline46mondego><newline46mondego>class ThreadEvenOdd {<newline46mondego>  SharedData sharedData;<newline46mondego><newline46mondego>  pubic ThreadEvenOdd(SharedData sd) { this.sharedData = sd }<newline46mondego><newline46mondego>  ...<newline46mondego><newline46mondego>  void printOdd(int count) {<newline46mondego>    try {<newline46mondego>      for(int i=0;i<count/2;i++) {<newline46mondego>        synchronized(sharedData) {<newline46mondego>          if(!sharedData.isOdd) { ... }<newline46mondego>            System.out.println(sharedData.c);<newline46mondego>            sharedData.c++;<newline46mondego>            sharedData.isOdd = false;<newline46mondego>            lock.notify();<newline46mondego>          }<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>    catch(Exception e) {<newline46mondego>      System.out.println(e);<newline46mondego>    }<newline46mondego>  }   <newline46mondego>"
"5389splitHere46","17647470splitHere46","c"
"5390splitHere46","17647470splitHere46","isOdd"
"5391splitHere46","17647470splitHere46","c"
"5392splitHere46","17647492splitHere46","<form:form method=<doubleQuotes46>post<doubleQuotes46> modelAttribute=<doubleQuotes46>theStudent<doubleQuotes46>><newline46mondego>  Name: <form:input type=<doubleQuotes46>text<doubleQuotes46> path=<doubleQuotes46>name<doubleQuotes46>/><newline46mondego>  Cool?: <form:input type<doubleQuotes46>checkbox<doubleQuotes46> path=<doubleQuotes46>cool<doubleQuotes46>/><newline46mondego>  <button>Save</button><newline46mondego></form:form><newline46mondego>"
"5393splitHere46","17647492splitHere46","@RequestMapping(...)<newline46mondego>public String updateStudent(@ModelAttribute(<doubleQuotes46>theStudent<doubleQuotes46>) Student student) {<newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"5394splitHere46","17647492splitHere46","public class Student {<newline46mondego>  private String name;<newline46mondego>  public String getName() { return this.name; }<newline46mondego>  public void setName(String name) { this.name = name; }<newline46mondego><newline46mondego>  private boolean cool;<newline46mondego>  public boolean isCool() { return this.cool; }<newline46mondego>  public void setCool(boolean cool) { this.cool = cool; }<newline46mondego>}<newline46mondego>"
"5395splitHere46","17647568splitHere46","ServerSocket"
"5396splitHere46","17647568splitHere46","InputStream"
"5397splitHere46","17647568splitHere46","OutputStream"
"5398splitHere46","17647608splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>   var names = new Array();<newline46mondego>    $.ajax({<newline46mondego>        url : <doubleQuotes46>Result<doubleQuotes46>,<newline46mondego>        type : 'POST',<newline46mondego>        data : {<newline46mondego>            <doubleQuotes46>names<doubleQuotes46> : JSON.stringify(names),//or names.join()<newline46mondego>            <doubleQuotes46>globalClassId<doubleQuotes46> : globalClassId<newline46mondego>        }});<newline46mondego></script><newline46mondego>"
"5399splitHere46","17647629splitHere46","final StackPane rect1pane = new StackPane();<newline46mondego>final Rectangle rect1 = new Rectangle(300, 300);<newline46mondego>rect1pane.getChildren().add(rect1);<newline46mondego>rect1pane.getChildren().add(new Label(<doubleQuotes46>Some text<doubleQuotes46>));<newline46mondego>tb1.setUserData(rect1pane);<newline46mondego>"
"5400splitHere46","17647629splitHere46","...<newline46mondego>else{<newline46mondego>//Delete rectangles added before ( or check if this one isnt already dispayed)<newline46mondego>if(group.getSelectedToggle().getUserData() instanceof Node)<newline46mondego>     vbox.getChildren().add((Node)group.getSelectedToggle().getUserData());<newline46mondego>}<newline46mondego>"
"5401splitHere46","17647629splitHere46","vbox.getChildren().addAll((Node[]) group.getSelectedToggle().getUserData());"
"5402splitHere46","17647629splitHere46","vbox.getChildren().addAll((Node) group.getSelectedToggle().getUserData());<newline46mondego>"
"5403splitHere46","17647629splitHere46","group.selectToggle(tb1);<newline46mondego>"
"5404splitHere46","17647866splitHere46","ManagedBean"
"5405splitHere46","17647866splitHere46","@Stateless"
"5406splitHere46","17647866splitHere46","@EJB"
"5407splitHere46","17647866splitHere46","@EJB<newline46mondego>private BusinessBean businessBean;<newline46mondego>"
"5408splitHere46","17647950splitHere46","public class Zoo<newline46mondego>{<newline46mondego>    public String coolMethod(){<newline46mondego>        return <doubleQuotes46>wow !! baby..<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        Zoo z=new Zoo();<newline46mondego>       System.out.println(z.coolMethod()) ;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5409splitHere46","17647950splitHere46","public class Zoo<newline46mondego>    {<newline46mondego>        public void coolMethod(){<newline46mondego>            System.out.println( <doubleQuotes46>wow !! baby..<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        public static void main(String args[])<newline46mondego>        {<newline46mondego>            Zoo z=new Zoo();<newline46mondego>            z.coolMethod();<newline46mondego><newline46mondego><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5410splitHere46","17647950splitHere46","coolMethod()"
"5411splitHere46","17647950splitHere46","String"
"5412splitHere46","17647950splitHere46","void"
"5413splitHere46","17647950splitHere46","System.out.print();"
"5414splitHere46","17647950splitHere46","public static void main(String[] args) {<newline46mondego>Moo m = new Moo();<newline46mondego>m.useMyCoolMethod();<newline46mondego>    }<newline46mondego>"
"5415splitHere46","17648378splitHere46","final AbstractDocument abstractDocument = (AbstractDocument) textArea.getDocument();<newline46mondego><newline46mondego>  abstractDocument.setDocumentFilter(new DocumentFilter()<newline46mondego>    {<newline46mondego>      @Override<newline46mondego>      public void remove(final FilterBypass fb, final int offset, final int length) throws BadLocationException<newline46mondego>      {<newline46mondego>        super.remove(fb, offset, length);<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void insertString(final FilterBypass fb,<newline46mondego>                               final int offset,<newline46mondego>                               final String string,<newline46mondego>                               final AttributeSet attr) throws BadLocationException<newline46mondego>      {<newline46mondego><newline46mondego>        if (getLineCountAsSeen(textArea) < 4)<newline46mondego>        {<newline46mondego>          super.insertString(fb, offset, string, attr);<newline46mondego>        }<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void replace(final FilterBypass fb,<newline46mondego>                          final int offset,<newline46mondego>                          final int length,<newline46mondego>                          final String text,<newline46mondego>                          final AttributeSet attrs) throws BadLocationException<newline46mondego>      {<newline46mondego>        if (getLineCountAsSeen(textArea) < 4)<newline46mondego>        {<newline46mondego>          super.replace(fb, offset, length, text, attrs);<newline46mondego>        }<newline46mondego>      }<newline46mondego>    });<newline46mondego>"
"5416splitHere46","17648384splitHere46","Criteria criteria = getSession().createCriteria(Sending.class);<newline46mondego>DetachedCriteria dc = DetachedCriteria.forClass(Sending.class, <doubleQuotes46>adpw<doubleQuotes46>);<newline46mondego>dc.add(Restrictions.eqProperty(<doubleQuotes46>adpw.place<doubleQuotes46>, <doubleQuotes46>adp.place<doubleQuotes46>));<newline46mondego>dc.setProjection(Projections.max(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>criteria.add(Property.forName(<doubleQuotes46>id<doubleQuotes46>).eq(dc));<newline46mondego>criteria.setMaxResults(count).setFirstResult(start);<newline46mondego>return criteria.list();<newline46mondego>"
"5417splitHere46","17648476splitHere46","class Foo<T>{<newline46mondego>    Class<Foo<T>> getMyClass(){<newline46mondego>        return (Class<Foo<T>>)(Class<?>)Foo.class<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5418splitHere46","17648476splitHere46","Foo<T>"
"5419splitHere46","17648476splitHere46","Foo<SomethingElse>"
"5420splitHere46","17648552splitHere46","public ArrayList<OpmlElement> readDocument(Reader reader)"
"5421splitHere46","17648552splitHere46","Reader"
"5422splitHere46","17648580splitHere46","<newline46mondego>Jacop::Knapsack.new(@values, @weights, quantity.to_java(JaCoP.core.IntVar), knapsackCapacity, knapsackProfit)<newline46mondego>"
"5423splitHere46","17648580splitHere46","int[]"
"5424splitHere46","17648580splitHere46","<newline46mondego>Jacop::Knapsack.new(@values.to_java(:int), @weights.to_java(:int), quantity.to_java(JaCoP.core.IntVar), knapsackCapacity, knapsackProfit)<newline46mondego>"
"5425splitHere46","17648590splitHere46","mongo:/127.0.0.1/contacts<newline46mondego>"
"5426splitHere46","17648590splitHere46","String command = String.format(<newline46mondego>    <doubleQuotes46>/bin/sh -c mongod --dbpath=%s --port=%d<doubleQuotes46>, <newline46mondego>    mongoDir.getAbsolutePath(), <newline46mondego>    PORT);<newline46mondego>Runtime.getRuntime().exec(new String[] { <doubleQuotes46>/bin/sh<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, command });<newline46mondego>"
"5427splitHere46","17648721splitHere46","if(<condition>) preparedStatement.setObject(1, <doubleQuotes46><string value><doubleQuotes46>);<newline46mondego>else preparedStatement.setNull(1, Types.VARCHAR);<newline46mondego>"
"5428splitHere46","17648791splitHere46","XContentBuilder settings = XContentFactory.jsonBuilder()<newline46mondego>    .startObject()<newline46mondego>         .startObject(<doubleQuotes46>settings<doubleQuotes46>) // <doubleQuotes46>settings<doubleQuotes46><newline46mondego>              .startObject(<doubleQuotes46>analysis<doubleQuotes46>)<newline46mondego>"
"5429splitHere46","17648791splitHere46","XContentBuilder settings = XContentFactory.jsonBuilder()<newline46mondego>    .startObject()<newline46mondego>         .startObject(<doubleQuotes46>index<doubleQuotes46>) // <doubleQuotes46>index<doubleQuotes46> instead of <doubleQuotes46>settings<doubleQuotes46><newline46mondego>              .startObject(<doubleQuotes46>analysis<doubleQuotes46>)<newline46mondego>"
"5430splitHere46","17648925splitHere46","SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>);<newline46mondego>String date = sdf.format(dt);<newline46mondego>"
"5431splitHere46","17648930splitHere46","getSelectedIndex()"
"5432splitHere46","17648930splitHere46","int index = tabcomponent.getSelectedIndex();<newline46mondego>if (index != -1) {<newline46mondego>    tabcomponent.remove(index);<newline46mondego>}<newline46mondego>"
"5433splitHere46","17648989splitHere46","regress=> PREPARE CREATE TABLE test ( id serial primary key );<newline46mondego>ERROR:  syntax error at or near <doubleQuotes46>CREATE<doubleQuotes46><newline46mondego>LINE 1: PREPARE CREATE TABLE test ( id serial primary key );<newline46mondego>                ^<newline46mondego>"
"5434splitHere46","17648989splitHere46","CREATE TABLE ? ( ? text, ...)<newline46mondego>"
"5435splitHere46","17648989splitHere46","Statement"
"5436splitHere46","17648989splitHere46","INSERT"
"5437splitHere46","17648989splitHere46","UPDATE"
"5438splitHere46","17648989splitHere46","DELETE"
"5439splitHere46","17648989splitHere46","SELECT"
"5440splitHere46","17648989splitHere46","<doubleQuotes46>double quotes<doubleQuotes46>"
"5441splitHere46","17648989splitHere46","<doubleQuotes46>these are literal <doubleQuotes46><doubleQuotes46>double quotes<doubleQuotes46><doubleQuotes46><doubleQuotes46>"
"5442splitHere46","17648989splitHere46","these are literal <doubleQuotes46>double quotes<doubleQuotes46>"
"5443splitHere46","17649186splitHere46","liferay-hook.xml"
"5444splitHere46","17649186splitHere46","<service> <newline46mondego>    <service-type>com.liferay.portal.service.UserLocalService</service-type> <newline46mondego>    <service-impl>uk.co.myproj.meh.CustomLocalService</service-impl> <newline46mondego></service> <newline46mondego>"
"5445splitHere46","17649230splitHere46","<Annotation name=<doubleQuotes46>something<doubleQuotes46>><newline46mondego>  <value>the value</value><newline46mondego></Annotation><newline46mondego>"
"5446splitHere46","17649230splitHere46","<value>"
"5447splitHere46","17649230splitHere46","<Annotation>"
"5448splitHere46","17649230splitHere46","ToAttributedValueConverter"
"5449splitHere46","17649230splitHere46","@XStreamConverter(value=ToAttributedValueConverter.class, strings={<doubleQuotes46>value<doubleQuotes46>})<newline46mondego>"
"5450splitHere46","17649230splitHere46","Annotation"
"5451splitHere46","17649301splitHere46","BoxLayout"
"5452splitHere46","17649301splitHere46","null"
"5453splitHere46","17649301splitHere46","this.labelpanel = new JPanel();<newline46mondego>labelpanel.setLayout(new BoxLayout(labelpanel, BoxLayout.PAGE_AXIS));<newline46mondego>"
"5454splitHere46","17649301splitHere46","null"
"5455splitHere46","17649339splitHere46","Search"
"5456splitHere46","17649339splitHere46","Mapping"
"5457splitHere46","17649339splitHere46","Mapping"
"5458splitHere46","17649339splitHere46","@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>class Mapping<newline46mondego>{<newline46mondego>   @XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>   private static class Search<newline46mondego>   {<newline46mondego>      private String channel;<newline46mondego>      private String url;<newline46mondego>   }<newline46mondego><newline46mondego>   private Search search;<newline46mondego><newline46mondego>   public String getUrl()<newline46mondego>   {<newline46mondego>      return search == null ? null : search.url;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5459splitHere46","17649375splitHere46","@Component"
"5460splitHere46","17649375splitHere46","B"
"5461splitHere46","17649375splitHere46","@Scope"
"5462splitHere46","17649413splitHere46","UTF-8"
"5463splitHere46","17649413splitHere46","JSP"
"5464splitHere46","17649413splitHere46","web.xml"
"5465splitHere46","17649413splitHere46","<jsp-config><newline46mondego>    <jsp-property-group><newline46mondego>        <url-pattern>*.jsp</url-pattern><newline46mondego>        <page-encoding>UTF-8</page-encoding><newline46mondego>    </jsp-property-group><newline46mondego></jsp-config><newline46mondego>"
"5466splitHere46","17649413splitHere46","Request"
"5467splitHere46","17649413splitHere46","UTF-8"
"5468splitHere46","17649413splitHere46","Other: UTF-8"
"5469splitHere46","17649413splitHere46","String str = new String(myByteArray,<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"5470splitHere46","17649413splitHere46","byte[] ba = myString.toByteArray(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"5471splitHere46","17649617splitHere46","response.setContentType(<doubleQuotes46>text/html;charset=UTF-8<doubleQuotes46>);<newline46mondego>"
"5472splitHere46","17649617splitHere46","response.setContentType(<doubleQuotes46>application/xml;charset=UTF-8<doubleQuotes46>);<newline46mondego>"
"5473splitHere46","17649617splitHere46","Screens><Screen"
"5474splitHere46","17649769splitHere46","fq=!tag=city}CityId:729&fq={!tag=company}CompanyId:16122"
"5475splitHere46","17649865splitHere46","myFile.setReadable(true);<newline46mondego>myFile.setWritable(true);<newline46mondego>"
"5476splitHere46","17649995splitHere46","test.Circle"
"5477splitHere46","17649995splitHere46","test"
"5478splitHere46","17649995splitHere46","java test.Circle"
"5479splitHere46","17649995splitHere46","\test\Circle.class"
"5480splitHere46","17649995splitHere46","Circle.class"
"5481splitHere46","17650064splitHere46","IntentService"
"5482splitHere46","17650064splitHere46","Service"
"5483splitHere46","17650064splitHere46","StopSelf()"
"5484splitHere46","17650088splitHere46","SimpleDateFormat format = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss.S<doubleQuotes46>);<newline46mondego>    Date date = format.parse(<doubleQuotes46>2011-01-18 00:00:00.0<doubleQuotes46>);<newline46mondego>    System.out.println(format.format(date));<newline46mondego>"
"5485splitHere46","17650105splitHere46","JFrame"
"5486splitHere46","17650105splitHere46","KeyEvent"
"5487splitHere46","17650105splitHere46","frame.setFocusable(true);"
"5488splitHere46","17650105splitHere46","setFocusable(true)"
"5489splitHere46","17650105splitHere46","JPanel"
"5490splitHere46","17650105splitHere46","KeyEvents"
"5491splitHere46","17650105splitHere46","KeyListener"
"5492splitHere46","17650105splitHere46","KeyListener"
"5493splitHere46","17650105splitHere46","Swing JComponent"
"5494splitHere46","17650105splitHere46","KeyBindings"
"5495splitHere46","17650105splitHere46","JComponent"
"5496splitHere46","17650183splitHere46","AuthenticationSuccessHandler"
"5497splitHere46","17650183splitHere46","AuthenticationManager"
"5498splitHere46","17650183splitHere46","AuthenticationProviders"
"5499splitHere46","17650183splitHere46","AuthenticationProviders"
"5500splitHere46","17650183splitHere46","AuthenticationManager"
"5501splitHere46","17650183splitHere46","AuthenticationManager"
"5502splitHere46","17650183splitHere46","AuthenticationManager"
"5503splitHere46","17650403splitHere46","groupId"
"5504splitHere46","17650403splitHere46","pom"
"5505splitHere46","17650403splitHere46","web"
"5506splitHere46","17650403splitHere46","gui"
"5507splitHere46","17650403splitHere46","common"
"5508splitHere46","17650403splitHere46","dca"
"5509splitHere46","17650403splitHere46","pom"
"5510splitHere46","17650403splitHere46","war"
"5511splitHere46","17650403splitHere46","jar"
"5512splitHere46","17650403splitHere46","pom"
"5513splitHere46","17650403splitHere46","jar"
"5514splitHere46","17650403splitHere46","jar"
"5515splitHere46","17650608splitHere46","init="
"5516splitHere46","17650608splitHere46","debootstrap"
"5517splitHere46","17650696splitHere46","EAGER"
"5518splitHere46","17650817splitHere46","def artifacts = []<newline46mondego><newline46mondego>addListener(new TaskExecutionListener() {<newline46mondego>    void afterExecute(Task task, TaskState state) {<newline46mondego><newline46mondego>            if(task in AbstractArchiveTask) {<newline46mondego>                    artifacts << task.outputs.files.singleFile<newline46mondego>            }<newline46mondego>    }<newline46mondego><newline46mondego>    void beforeExecute(Task task) { }<newline46mondego>})<newline46mondego><newline46mondego>addBuildListener(new BuildAdapter() {<newline46mondego>    void buildFinished(BuildResult result) {<newline46mondego>            if(artifacts) {<newline46mondego>                    println <doubleQuotes46>\nOutput location: ${artifacts.last()}\n<doubleQuotes46><newline46mondego>            }<newline46mondego>    }<newline46mondego>})<newline46mondego>"
"5519splitHere46","17650863splitHere46","fromJson"
"5520splitHere46","17650863splitHere46","List<MapData>"
"5521splitHere46","17650863splitHere46","MapData"
"5522splitHere46","17650863splitHere46","public static List<MapData> getData(){<newline46mondego>    Gson gson = new Gson();<newline46mondego>    String jsonString = <doubleQuotes46>[{\<doubleQuotes46>id\<doubleQuotes46>:18,\<doubleQuotes46>city\<doubleQuotes46>:\<doubleQuotes46>test\<doubleQuotes46>,\<doubleQuotes46>street\<doubleQuotes46>:\<doubleQuotes46>test 1\<doubleQuotes46>,\<doubleQuotes46>zipcode\<doubleQuotes46>:121209,\<doubleQuotes46>state\<doubleQuotes46>:\<doubleQuotes46>IL\<doubleQuotes46>,\<doubleQuotes46>lat\<doubleQuotes46>:32.158138,\<doubleQuotes46>lng\<doubleQuotes46>:34.807838},{\<doubleQuotes46>id\<doubleQuotes46>:19,\<doubleQuotes46>city\<doubleQuotes46>:\<doubleQuotes46>test\<doubleQuotes46>,\<doubleQuotes46>street\<doubleQuotes46>:\<doubleQuotes46>1\<doubleQuotes46>,\<doubleQuotes46>zipcode\<doubleQuotes46>:76812,\<doubleQuotes46>state\<doubleQuotes46>:\<doubleQuotes46>IL\<doubleQuotes46>,\<doubleQuotes46>lat\<doubleQuotes46>:32.161041,\<doubleQuotes46>lng\<doubleQuotes46>:34.810410}]<doubleQuotes46>;<newline46mondego>    Type type = new TypeToken<List<MapData>>(){}.getType();<newline46mondego>    return gson.fromJson(jsonString, type);     <newline46mondego>}<newline46mondego>"
"5523splitHere46","17650954splitHere46","ArrayList<Integer> list = new ArrayList<Integer>();<newline46mondego>list.add(1);<newline46mondego>list.add(2);<newline46mondego>list.add(3);<newline46mondego><newline46mondego>Iterator<Integer> it = list.listIterator();<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>First Element : <doubleQuotes46> + it.next());<newline46mondego>"
"5524splitHere46","17651115splitHere46","catch"
"5525splitHere46","17651115splitHere46","catch"
"5526splitHere46","17651115splitHere46","catch"
"5527splitHere46","17651115splitHere46","static String readFirstLineFromFile(String path) throws IOException {<newline46mondego>    try (BufferedReader br =<newline46mondego>                   new BufferedReader(new FileReader(path))) {<newline46mondego>        return br.readLine();<newline46mondego>    }<newline46mondego>} In this example, the resource declared in the try-with-resources statement is a BufferedReader.<newline46mondego>"
"5528splitHere46","17651115splitHere46","catch"
"5529splitHere46","17651115splitHere46","finally"
"5530splitHere46","17651115splitHere46","catch"
"5531splitHere46","17651115splitHere46","catch"
"5532splitHere46","17651185splitHere46","PaintComponent"
"5533splitHere46","17651185splitHere46","JPanel"
"5534splitHere46","17651185splitHere46","@Override<newline46mondego>public void paintComponent (Graphics g) <newline46mondego>"
"5535splitHere46","17651185splitHere46","@Override"
"5536splitHere46","17651203splitHere46","params"
"5537splitHere46","17651203splitHere46","<action name=<doubleQuotes46>validatorAction<doubleQuotes46> class=<doubleQuotes46>com.keyur.struts2.ActionClasses.validatorClass<doubleQuotes46> method=<doubleQuotes46>execute<doubleQuotes46>><newline46mondego>   <interceptor-ref name=<doubleQuotes46>params<doubleQuotes46>></interceptor-ref><newline46mondego>   <interceptor-ref name=<doubleQuotes46>encrypt<doubleQuotes46>></interceptor-ref><newline46mondego>   <interceptor-ref name=<doubleQuotes46>defaultStack<doubleQuotes46>></interceptor-ref><newline46mondego>   <result name=<doubleQuotes46>success<doubleQuotes46>>/success.jsp</result><newline46mondego>   <result name=<doubleQuotes46>input<doubleQuotes46>>/index.jsp</result><newline46mondego></action><newline46mondego>"
"5538splitHere46","17651203splitHere46","valueStack"
"5539splitHere46","17651203splitHere46","Map params = ActionContext.getContext().getParameters();<newline46mondego>"
"5540splitHere46","17651203splitHere46","params"
"5541splitHere46","17651267splitHere46","POST   /result_search/:username      controllers.Search.searchByusername(username:String)<newline46mondego>"
"5542splitHere46","17651322splitHere46","initComponents"
"5543splitHere46","17651322splitHere46","public InputJFrame1()<newline46mondego>{     <newline46mondego>     initComponents();<newline46mondego>     numberJTextField.addMouseListener(new MyMouseAdapter(numberJTextField));<newline46mondego>}<newline46mondego>"
"5544splitHere46","17651500splitHere46","final Random rnd = new Random();<newline46mondego>int n;<newline46mondego>do {<newline46mondego>    n = rnd.nextInt(1000);<newline46mondego>} while(containsRepeatingDigits(n));<newline46mondego>"
"5545splitHere46","17651500splitHere46","containsRepeatingDigits"
"5546splitHere46","17651500splitHere46","boolean containsRepeatingDigits(final int n) {<newline46mondego>    final boolean digits[] = new boolean[10];<newline46mondego>    for(char c : String.valueOf(n).toCharArray()) {<newline46mondego>        final int i = c-'0';<newline46mondego>        if(digits[i])<newline46mondego>            return true;<newline46mondego>        digits[i] = true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"5547splitHere46","17651529splitHere46","long number = 600851475143L<newline46mondego>"
"5548splitHere46","17651555splitHere46","grabFocusForTextField()"
"5549splitHere46","17651555splitHere46","JTextField"
"5550splitHere46","17651555splitHere46","JTextField"
"5551splitHere46","17651555splitHere46","HierarchyListener"
"5552splitHere46","17651555splitHere46","JFileChooser"
"5553splitHere46","17651555splitHere46","HierarchyEvent"
"5554splitHere46","17651555splitHere46","NimbusLookAndFeel"
"5555splitHere46","17651555splitHere46","JComboBox"
"5556splitHere46","17651555splitHere46","JFileChooser"
"5557splitHere46","17651555splitHere46","JTextField"
"5558splitHere46","17651555splitHere46","import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>class GetFocusForJTextField extends JFrame<newline46mondego>{<newline46mondego>JButton jb;<newline46mondego>JFileChooser jf;<newline46mondego><newline46mondego>    public GetFocusForJTextField()<newline46mondego>    {<newline46mondego>        createAndShowGUI();<newline46mondego>    }<newline46mondego><newline46mondego>    private void createAndShowGUI()<newline46mondego>    {<newline46mondego>        // For NimbusLookAndFeel, JTextField is not<newline46mondego>        // the default focus owner in JFileChooser<newline46mondego>        try<newline46mondego>        {<newline46mondego>            UIManager.setLookAndFeel(<doubleQuotes46>javax.swing.plaf.nimbus.NimbusLookAndFeel<doubleQuotes46>);<newline46mondego>        }catch(Exception e){}<newline46mondego><newline46mondego>        setTitle(<doubleQuotes46>Get Focus for JTextField<doubleQuotes46>);<newline46mondego>        setLayout(new FlowLayout());<newline46mondego>        setSize(400,400);<newline46mondego>        setVisible(true);<newline46mondego>        setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        jb=new JButton(<doubleQuotes46>Open JFileChooser<doubleQuotes46>);<newline46mondego>        jb.addActionListener(new ActionListener(){<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                showDialog();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        jf=new JFileChooser();<newline46mondego><newline46mondego>        // Even if you add some other JTextField<newline46mondego>        // as accessory to JFileChooser<newline46mondego>        jf.setAccessory(new JTextField(20));<newline46mondego><newline46mondego>        jf.addHierarchyListener(new HierarchyListener(){<newline46mondego>            public void hierarchyChanged(HierarchyEvent he)<newline46mondego>            {<newline46mondego>                grabFocusForTextField(jf.getComponents());<newline46mondego>            }<newline46mondego>        });     <newline46mondego><newline46mondego>        add(jb);<newline46mondego>    }<newline46mondego><newline46mondego>    // Loop to find the JTextField, the first<newline46mondego>    // JTextField in JFileChooser<newline46mondego>    // Even if you setAccessory which contains a JTextField<newline46mondego>    // or which is JTextField itself, it will not get focus<newline46mondego>    private void grabFocusForTextField(Component[] c)<newline46mondego>    {<newline46mondego>        for(Component k:c)<newline46mondego>        {<newline46mondego>            if(k instanceof JTextField)<newline46mondego>            {<newline46mondego>                JTextField jt=(JTextField)k;<newline46mondego>                jt.grabFocus();<newline46mondego>                break;<newline46mondego>            }<newline46mondego>            else if(k instanceof JPanel)<newline46mondego>            {<newline46mondego>                JPanel jp=(JPanel)k;<newline46mondego>                grabFocusForTextField(jp.getComponents());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void showDialog()<newline46mondego>    {<newline46mondego>        jf.showOpenDialog(this);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable(){<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new GetFocusForJTextField();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5559splitHere46","17651555splitHere46","requestFocusInWindow()"
"5560splitHere46","17651555splitHere46","grabFocus()"
"5561splitHere46","17651583splitHere46","private boolean started = false;<newline46mondego>private Timer timer;<newline46mondego><newline46mondego>public synchronized void start() {<newline46mondego>    if (!started) {<newline46mondego>        timer = timerFactory.createTimer(100000, null);<newline46mondego>        timer.setListener(this);<newline46mondego>        started = true;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public synchronized void stop() {<newline46mondego>    if (started) {<newline46mondego>        timer.cancel();<newline46mondego>        timer.setListener(null);<newline46mondego>        started = false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5562splitHere46","17651583splitHere46","timer"
"5563splitHere46","17651583splitHere46","timer"
"5564splitHere46","17651583splitHere46","null"
"5565splitHere46","17651583splitHere46","started"
"5566splitHere46","17651590splitHere46","FilePath|FileName<newline46mondego>\\Folderone\|File1.txt<newline46mondego>\\Foldertwo\|File2.txt<newline46mondego>"
"5567splitHere46","17651624splitHere46","public SearchScreen(){<newline46mondego><newline46mondego>        userQuery = (String) JOptionPane.showInputDialog(<doubleQuotes46>Type Keywords in english to be requested below:<doubleQuotes46>);<newline46mondego><newline46mondego>            try {<newline46mondego><newline46mondego>                 //Your Action with the String  <newline46mondego><newline46mondego>            } catch (IOException e1) {<newline46mondego><newline46mondego>                e1.printStackTrace(); //print failure<newline46mondego>                    JOptionPane.showMessageDialog(null, <doubleQuotes46>FAILURE<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>    }<newline46mondego>"
"5568splitHere46","17651661splitHere46","xmlns:geojsf=<doubleQuotes46>http://geojsf.org/ui<doubleQuotes46><newline46mondego>"
"5569splitHere46","17651690splitHere46","<span class=<doubleQuotes46>sup<doubleQuotes46>>&reg;</span><newline46mondego>"
"5570splitHere46","17651690splitHere46","<script>alert(<doubleQuotes46>Alert<doubleQuotes46>);</script><newline46mondego>"
"5571splitHere46","17652058splitHere46","myMethod = myClass.getMethod(methodName, new Class[] { String[].class });<newline46mondego>"
"5572splitHere46","17652215splitHere46","JUnit"
"5573splitHere46","17652215splitHere46","Hamcrest"
"5574splitHere46","17652215splitHere46","JUnit"
"5575splitHere46","17652215splitHere46","JUnit"
"5576splitHere46","17652215splitHere46","hamcrest.core"
"5577splitHere46","17652215splitHere46","JUnit"
"5578splitHere46","17652215splitHere46","assertThat(myString, IsEqualIgnoringCase.equalToIgnoringCase(expected));<newline46mondego>"
"5579splitHere46","17652215splitHere46","assertThat(myString, equalToIgnoringCase(expected));<newline46mondego>"
"5580splitHere46","17652215splitHere46","assertThat(myString, is(equalToIgnoringCase(expected)));<newline46mondego>"
"5581splitHere46","17652215splitHere46","expected someString but was someOtherString"
"5582splitHere46","17652215splitHere46","expected true got false"
"5583splitHere46","17652215splitHere46","assertTrue"
"5584splitHere46","17652364splitHere46","String.valueOf()"
"5585splitHere46","17652364splitHere46","DecimalFormat"
"5586splitHere46","17652364splitHere46","double mantissa_value = 2.11099999;<newline46mondego><newline46mondego>DecimalFormat df = new DecimalFormat(<doubleQuotes46>0.###<doubleQuotes46>);<newline46mondego>// Un-comment the line below to take English locale into account when converting<newline46mondego>//df.setDecimalFormatSymbols(new DecimalFormatSymbols(Locale.ENGLISH));<newline46mondego><newline46mondego>// will print '2.11099999' this is what you get in your original case<newline46mondego>System.out.println( String.valueOf(mantissa_value) ); <newline46mondego><newline46mondego>// will print '2.111' or '2,111' depending on your locale. if you uncomment the line above for English locale it will print '2.111'<newline46mondego>System.out.println( df.format(mantissa_value) ); <newline46mondego>"
"5587splitHere46","17652364splitHere46","DecimalFormat"
"5588splitHere46","17652364splitHere46","BigDecimal"
"5589splitHere46","17652431splitHere46","flag"
"5590splitHere46","17652459splitHere46","bytes_downloaded*100"
"5591splitHere46","17652459splitHere46","final int dl_progress = (int)((bytes_downloaded*100L)/bytes_total);"
"5592splitHere46","17652479splitHere46","newSubscriptionUrl(Subscription, String, String, String)<newline46mondego>"
"5593splitHere46","17652479splitHere46","newSubscriptionUrl(Subscription)<newline46mondego>"
"5594splitHere46","17652597splitHere46","<w:rPr><newline46mondego><newline46mondego>  <w:sz w:val=<doubleQuotes46>28<doubleQuotes46> /> <newline46mondego><newline46mondego></w:rPr><newline46mondego>"
"5595splitHere46","17652630splitHere46","ArrayIndexOutOfBoundsException"
"5596splitHere46","17652630splitHere46","args[0]"
"5597splitHere46","17652630splitHere46","args[]"
"5598splitHere46","17652630splitHere46","NullPointerException"
"5599splitHere46","17652630splitHere46","s.connect(new InetSocketAddress(<doubleQuotes46>myserver.example.com<doubleQuotes46>, 1234));<newline46mondego>"
"5600splitHere46","17652703splitHere46","graderegister"
"5601splitHere46","17652703splitHere46","graderegister"
"5602splitHere46","17652703splitHere46","mydb"
"5603splitHere46","17652703splitHere46","java:comp/env/jdbc/mydb"
"5604splitHere46","17652703splitHere46","Context ctx = new InitialContext();<newline46mondego>DataSource ds = (DataSource) ctx.lookup(<doubleQuotes46>java:comp/env/jdbc/mydb<doubleQuotes46>);<newline46mondego>"
"5605splitHere46","17652703splitHere46","DATABASE_URL_MYDB"
"5606splitHere46","17652703splitHere46","DATABASE_USERNAME_MYDB"
"5607splitHere46","17652703splitHere46","DATABASE_PASSWORD_MYDB"
"5608splitHere46","17652703splitHere46","DATABASE_URL_MYDB"
"5609splitHere46","17652703splitHere46","jdbc:"
"5610splitHere46","17652703splitHere46","<newline46mondego>String jdbcUrl = <doubleQuotes46>jdbc:<doubleQuotes46> + System.getProperty(<doubleQuotes46>DATABASE_URL_MYDB<doubleQuotes46>);<newline46mondego>"
"5611splitHere46","17652703splitHere46","SELECT 1"
"5612splitHere46","17652750splitHere46","Object[][]"
"5613splitHere46","17652750splitHere46","data[i]"
"5614splitHere46","17652750splitHere46","data[i][j]"
"5615splitHere46","17652750splitHere46","toString()"
"5616splitHere46","17652750splitHere46","[Ljava.lang.Object;@"
"5617splitHere46","17652750splitHere46","Object[][] data = new Object[nb][3]; // nb rows, 3 columns<newline46mondego>for (int row = 0; row < nb; row++) {<newline46mondego>    data[row][0] = row + 1; // first column: row number<newline46mondego>    data[row][1] = Math.random(100); // second column: weight<newline46mondego>    data[row][2] = Math.random(10): // third column: priority<newline46mondego>}<newline46mondego>"
"5618splitHere46","17652818splitHere46","key.attach(null)"
"5619splitHere46","17652818splitHere46","SocketChannel"
"5620splitHere46","17652818splitHere46","Selectors"
"5621splitHere46","17652818splitHere46","key.attach(null)"
"5622splitHere46","17652857splitHere46","File.listFiles()"
"5623splitHere46","17652857splitHere46","FileFilter"
"5624splitHere46","17652857splitHere46","FilenameFilter"
"5625splitHere46","17652857splitHere46","File[] files = folder.listFiles(<newline46mondego>    new FilenameFilter()<newline46mondego>    {<newline46mondego>        public boolean accept(final File a_directory,<newline46mondego>                              final String a_name)<newline46mondego>        {<newline46mondego>            return a_name.endsWith(<doubleQuotes46>.jpg<doubleQuotes46>);<newline46mondego>            // Or could use a regular expression:<newline46mondego>            //<newline46mondego>            //     return a_name.toLowerCase().matches(<doubleQuotes46>.*\\.(gif|jpg|png)$<doubleQuotes46>);<newline46mondego>            //<newline46mondego>        };<newline46mondego>    });<newline46mondego>"
"5626splitHere46","17652865splitHere46","Error occurred. No value passed for the field &lt;name>.<newline46mondego>"
"5627splitHere46","17652865splitHere46","<![CDATA[Error occurred. No value passed for the field <name>.]]><newline46mondego>"
"5628splitHere46","17653036splitHere46","Integer.toBinaryString(r)"
"5629splitHere46","17653036splitHere46","Integer.toBinaryString((r >> 1) ^ r)"
"5630splitHere46","17653075splitHere46","EditText view = new EditText(this);<newline46mondego>    view.setImeOptions(EditorInfo.IME_ACTION_SEARCH);<newline46mondego>    view.setSingleLine(true);<newline46mondego>"
"5631splitHere46","17653129splitHere46","@Execute"
"5632splitHere46","17653129splitHere46","@Execute"
"5633splitHere46","17653129splitHere46","@Execute<newline46mondego>public void execute(MWindow window) {<newline46mondego>    // method body<newline46mondego>}<newline46mondego>"
"5634splitHere46","17653129splitHere46","MWindow"
"5635splitHere46","17653129splitHere46","@Execute"
"5636splitHere46","17653129splitHere46","@Inject"
"5637splitHere46","17653129splitHere46","@Execute"
"5638splitHere46","17653129splitHere46","IWorkbench"
"5639splitHere46","17653129splitHere46","@Optional"
"5640splitHere46","17653281splitHere46","^\d+|\d{1,3}(?:\.\d{3})*$<newline46mondego>"
"5641splitHere46","17653281splitHere46","."
"5642splitHere46","17653281splitHere46","^\d+|\d{1,3}(?:[,.]\d{3})*$<newline46mondego>"
"5643splitHere46","17653281splitHere46","\"
"5644splitHere46","17653281splitHere46","String pattern = <doubleQuotes46>^\\d+|\\d{1,3}(?:\\.\\d{3})*$<doubleQuotes46>;<newline46mondego>"
"5645splitHere46","17653281splitHere46","^(?:0|[1-9][0-9]{0,2}(?:\.[0-9]{3})*)$<newline46mondego>"
"5646splitHere46","17653300splitHere46","Transform"
"5647splitHere46","17653300splitHere46","org.simpleframework.xml.stream.Formatter"
"5648splitHere46","17653300splitHere46","Serializer ser = new Persister(new Format(0));<newline46mondego>"
"5649splitHere46","17653300splitHere46","Format"
"5650splitHere46","17653382splitHere46","read"
"5651splitHere46","17653382splitHere46","int r = is.read(buf);<newline46mondego><newline46mondego>        if (r < 0) return; /* end of stream was reached */<newline46mondego>"
"5652splitHere46","17653382splitHere46","} catch (Exception e){<newline46mondego>        System.out.println(<doubleQuotes46>init error: <doubleQuotes46> + e);<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"5653splitHere46","17653424splitHere46","/faces/*"
"5654splitHere46","17653424splitHere46","http://myjsfapp.com/faces/index.xhtml?param=value"
"5655splitHere46","17653424splitHere46","http://myjsfapp.com/ index.xhtml?param=value"
"5656splitHere46","17653424splitHere46","<servlet><newline46mondego>    <servlet-name>Faces Servlet</servlet-name><newline46mondego>    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class><newline46mondego>    <load-on-startup>1</load-on-startup><newline46mondego>  </servlet><newline46mondego><newline46mondego>  <servlet-mapping><newline46mondego>    <servlet-name>Faces Servlet</servlet-name><newline46mondego>    <url-pattern>/faces/*</url-pattern><newline46mondego>  </servlet-mapping><newline46mondego>"
"5657splitHere46","17653424splitHere46","/faces/*"
"5658splitHere46","17653424splitHere46","Faces Servlet"
"5659splitHere46","17653424splitHere46","javax.faces.webapp.FacesServlet"
"5660splitHere46","17653424splitHere46","Faces Servlet"
"5661splitHere46","17653517splitHere46","JRadioButton"
"5662splitHere46","17653517splitHere46","JRadioButton[][] jRadioButtons = new JRadioButton[8][];<newline46mondego>        ButtonGroup bg = new ButtonGroup();<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.setLayout(new GridLayout(8, 8));<newline46mondego>        for (int i = 0; i < 8; i++) {<newline46mondego>            for (int j = 0; j < 8; j++) {<newline46mondego>                JRadioButton btn = new JRadioButton();<newline46mondego>                btn.addActionListener(listener);<newline46mondego>                btn.setName(<doubleQuotes46>Btn[<doubleQuotes46> + i + <doubleQuotes46>,<doubleQuotes46> + j + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>                bg.add(btn);<newline46mondego>                panel.add(btn);<newline46mondego>                // can be used for other operations<newline46mondego>                jRadioButtons[i][j] = btn;<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"5663splitHere46","17653517splitHere46","ActionListener"
"5664splitHere46","17653517splitHere46","ActionListener listener = new ActionListener() {<newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            JRadioButton btn = (JRadioButton) e.getSource();<newline46mondego>            System.out.println(<doubleQuotes46>Selected Button = <doubleQuotes46> + btn.getName());<newline46mondego>        }<newline46mondego>    };<newline46mondego>"
"5665splitHere46","17653886splitHere46","public class FirstFragment extends Fragment implements OnClickListener {<newline46mondego>    @Override<newline46mondego>    public View onCreateView(LayoutInflater inflater, ViewGroup container,<newline46mondego>        Bundle savedInstanceState) {<newline46mondego>        View view = inflater.inflate(R.layout.first_fragment, container, false);<newline46mondego>        Button nextButton = (Button) view.findViewById(R.id.button_first);<newline46mondego>        nextButton.setOnClickListener(this);<newline46mondego>        return view;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5666splitHere46","17654199splitHere46","ResourceB"
"5667splitHere46","17654199splitHere46","thenCallRealMethod"
"5668splitHere46","17654199splitHere46","ResourceB"
"5669splitHere46","17654199splitHere46","ResourceC"
"5670splitHere46","17654199splitHere46","ResourceB"
"5671splitHere46","17654199splitHere46","ResourceC"
"5672splitHere46","17654199splitHere46","ResourceB"
"5673splitHere46","17654199splitHere46","ResourceB"
"5674splitHere46","17654199splitHere46","public class ResourceB {<newline46mondego>  ResourceC c;<newline46mondego><newline46mondego>  public ResourceB() { c = new resourceC(); } // normal behavior<newline46mondego><newline46mondego>  @VisibleForTesting // guava annotation (in, order to expalain why there is this constructor)<newline46mondego>  ResourceB(ResourceC c_override) { c = c_override; } // constructor for the test, note the package visibility<newline46mondego><newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"5675splitHere46","17654199splitHere46","public class TestResourceB {<newline46mondego>  ResourceB tested_b;<newline46mondego>  @Mock ResourceC mocked_c;<newline46mondego><newline46mondego>  @Before<newline46mondego>  public void init_tested_and_mocks() {<newline46mondego>    MockitoAnnotations.initMocks(this);<newline46mondego>    tested_b = new ResourceB(mocked_)<newline46mondego>  }<newline46mondego><newline46mondego>  @Test<newline46mondego>  public void ensure_result_from_ResourceC_is_returned() {<newline46mondego>    // given <newline46mondego>    when(mocked_c.callFuncA()).thenReturn(<doubleQuotes46>result that should be returned<doubleQuotes46>);<newline46mondego><newline46mondego>    // when<newline46mondego>    String output = tested_b.callFuncA();<newline46mondego><newline46mondego>    // then<newline46mondego>    assertThat(output).isEqualTo(<doubleQuotes46>result that should be returned<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5676splitHere46","17654215splitHere46","MenuItem fullScreen = new MenuItem();<newline46mondego><newline46mondego>fullScreen.textProperty().bind(<newline46mondego>     new When(primaryStage.fullScreenProperty())<newline46mondego>          .then(<doubleQuotes46>Exit Full Screen<doubleQuotes46>)<newline46mondego>          .otherwise(<doubleQuotes46>Full Screen<doubleQuotes46>));<newline46mondego><newline46mondego>fullScreen.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>    @Override<newline46mondego>    public void handle(ActionEvent event) {<newline46mondego>        primaryStage.setFullScreen(!primaryStage.isFullScreen());<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"5677splitHere46","17654278splitHere46","storagePoolLookupByName"
"5678splitHere46","17654278splitHere46","storageVolCreateXML"
"5679splitHere46","17654324splitHere46","String#split()"
"5680splitHere46","17654324splitHere46","String.split(regex, limit)"
"5681splitHere46","17654324splitHere46","String[] arr = <doubleQuotes46>,,,,,<doubleQuotes46>.split(<doubleQuotes46>,<doubleQuotes46>, -1);<newline46mondego>"
"5682splitHere46","17654360splitHere46","org.apache.commons.codec.binary.Base64"
"5683splitHere46","17654360splitHere46","/lib"
"5684splitHere46","17654522splitHere46","emp"
"5685splitHere46","17654522splitHere46","@XmlRootElement(name = <doubleQuotes46>root<doubleQuotes46>)<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class abc {<newline46mondego>   @XmlElement(name = <doubleQuotes46>emp<doubleQuotes46>)<newline46mondego>   private List<String> emp;<newline46mondego>   @XmlElement(name = <doubleQuotes46>xyz<doubleQuotes46>)<newline46mondego>   private String xyz;<newline46mondego>   // added getters and setters for these fields<newline46mondego>}<newline46mondego>"
"5686splitHere46","17654522splitHere46","obj.getEmp().get(0);<newline46mondego>obj.getEmp().get(1);<newline46mondego>"
"5687splitHere46","17654522splitHere46","String[]"
"5688splitHere46","17654522splitHere46","String[]"
"5689splitHere46","17654522splitHere46","import javax.xml.bind.annotation.*;<newline46mondego><newline46mondego>@XmlRootElement(name = <doubleQuotes46>root<doubleQuotes46>)<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class abc {<newline46mondego><newline46mondego>    private String[] emp = new String[2];<newline46mondego>    private String xyz;<newline46mondego><newline46mondego>    public String getEmp1() {<newline46mondego>        return emp[0];<newline46mondego>    }<newline46mondego><newline46mondego>    public void setEmp1(String emp1) {<newline46mondego>        this.emp[0] = emp1;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getEmp2() {<newline46mondego>        return emp[1];<newline46mondego>    }<newline46mondego><newline46mondego>    public void setEmp2(String emp2) {<newline46mondego>        this.emp[1] = emp2;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getXyz() {<newline46mondego>        return xyz;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setXyz(String xyz) {<newline46mondego>        this.xyz = xyz;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5690splitHere46","17654538splitHere46","request"
"5691splitHere46","17654538splitHere46","NullPointerException"
"5692splitHere46","17654538splitHere46","@Controller<newline46mondego>class MyController {<newline46mondego><newline46mondego>    @RequestMapping<newline46mondego>    public void handleMe(HttpServletRequest request) {<newline46mondego>        String path = request.getContextPath();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5693splitHere46","17654647splitHere46","relevant"
"5694splitHere46","17654647splitHere46","tree"
"5695splitHere46","17654647splitHere46","Iterator<Comment> commentIter = relevant.iterator();<newline46mondego>Iterator<GitItem> itemIter = tree.iterator();<newline46mondego>while (commentIter.hasNext() && itemIter.hasNext()) {<newline46mondego>    Comment mc = commentIter.next();<newline46mondego>    GitItem gi = itemIter.next();<newline46mondego><newline46mondego>    bb.buildBody(gi.getHash(), mc.getBody());<newline46mondego>    MutableComment mutable = commentManager.getMutableComment(mc.getId());<newline46mondego>    mutable.setBody(bb.sb.toString());<newline46mondego>    commentManager.update(mutable, true);<newline46mondego>}<newline46mondego>"
"5696splitHere46","17654653splitHere46","@DependsOn(<doubleQuotes46>person<doubleQuotes46>)<newline46mondego>public boolean isVisible() {<newline46mondego>  return true;  // your condition here  <newline46mondego>}<newline46mondego>"
"5697splitHere46","17654653splitHere46","<h:label visible=<doubleQuotes46>@load(vm.visible)<doubleQuotes46>/><newline46mondego>"
"5698splitHere46","17654708splitHere46","Collections.shuffle(solrDocList)"
"5699splitHere46","17654708splitHere46","solrDocList"
"5700splitHere46","17654862splitHere46","ListView"
"5701splitHere46","17654862splitHere46","ListView"
"5702splitHere46","17654862splitHere46","View v = convertView;<newline46mondego>Object o = data.get(position);<newline46mondego>LayoutInflaer inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego><newline46mondego>if(o != null){<newline46mondego>    if(o instanceof ImageMessage){<newline46mondego>        if(v == null){<newline46mondego>            v = inflater.inflate(R.layout.image_message);<newline46mondego>        }<newline46mondego>        createImageMessagView(v, (ImageMessage) o);<newline46mondego>    } else if (o instanceOf textMessage){<newline46mondego>        // handle different object type<newline46mondego>    }<newline46mondego>"
"5703splitHere46","17654984splitHere46","if (convertView == null) {<newline46mondego>    gridView = inflater.inflate(R.layout.grid_element, null);<newline46mondego>} else {<newline46mondego>    gridView = convertView;<newline46mondego>}<newline46mondego><newline46mondego>ImageView logo = (ImageView) gridView.findViewById(R.id.grid_logo);<newline46mondego><newline46mondego>TextView tv = (TextView) gridView.findViewById(R.id.grid_textView1);<newline46mondego>tv.setText(level + position);<newline46mondego>"
"5704splitHere46","17655058splitHere46","spring-security-config-3.1.1.RELEASE.jar"
"5705splitHere46","17655137splitHere46","JFrame"
"5706splitHere46","17655137splitHere46","CardLayout"
"5707splitHere46","17655137splitHere46","CardLayout"
"5708splitHere46","17655245splitHere46","ET_"
"5709splitHere46","17655245splitHere46","ET_CUSTOMERS"
"5710splitHere46","17655360splitHere46","putAll"
"5711splitHere46","17655360splitHere46","for (Map.Entry<? extends K, ? extends V> e : m.entrySet())<newline46mondego>    put(e.getKey(), e.getValue());<newline46mondego>"
"5712splitHere46","17655360splitHere46","putAll"
"5713splitHere46","17655360splitHere46","get"
"5714splitHere46","17655360splitHere46","putAll"
"5715splitHere46","17655360splitHere46","get"
"5716splitHere46","17655384splitHere46","B1(?!\\d)"
"5717splitHere46","17655384splitHere46","B1"
"5718splitHere46","17655384splitHere46","B1"
"5719splitHere46","17655384splitHere46","(?!\\d)"
"5720splitHere46","17655392splitHere46","checkBoxes[i].setOnClickListener(new MyOnClickListener(checkBoxes[i]));<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>class MyOnClickListener<newline46mondego>    implements OnClickListener<newline46mondego>{<newline46mondego>    private CheckBox checkBox;<newline46mondego>    public MyOnClickListener( CheckBox box )<newline46mondego>    {<newline46mondego>        // maintain a reference to the CheckBox so we can see if it's checked!<newline46mondego>        this.checkBox = box; <newline46mondego>    }<newline46mondego><newline46mondego>    public void onClick(View v)<newline46mondego>    {<newline46mondego>        // if this.checkBox is checked, then...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5721splitHere46","17655461splitHere46","String.split(String, int)"
"5722splitHere46","17655461splitHere46","String.split(String)"
"5723splitHere46","17655683splitHere46","setName()"
"5724splitHere46","17655721splitHere46","<android.support.v4.view.ViewPager<newline46mondego>android:id=<doubleQuotes46>@+id/pager<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:padding=<doubleQuotes46>30dp<doubleQuotes46> />   <newline46mondego>"
"5725splitHere46","17655721splitHere46","<path.to.ChildViewPager<newline46mondego>android:id=<doubleQuotes46>@+id/pager<doubleQuotes46><newline46mondego>android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>android:padding=<doubleQuotes46>30dp<doubleQuotes46> />   <newline46mondego>"
"5726splitHere46","17655721splitHere46","ClassCastException"
"5727splitHere46","17655721splitHere46","public class ChildViewPager extends ViewPager {<newline46mondego><newline46mondego>      public ChildViewPager(Context context, AttributeSet attrs) {<newline46mondego>          super(context, attrs);<newline46mondego>      }<newline46mondego><newline46mondego>//work out code<newline46mondego>}<newline46mondego>"
"5728splitHere46","17655895splitHere46","import java.awt.EventQueue;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class InnerClasses {<newline46mondego><newline46mondego>    private JFrame frame;<newline46mondego>    private JPanel panel;<newline46mondego>    private JButton button;<newline46mondego>    private JLabel label;<newline46mondego><newline46mondego>    public InnerClasses() {<newline46mondego>        label = new JLabel();<newline46mondego>        label.setText(<doubleQuotes46>I m label<doubleQuotes46>);<newline46mondego>        button = new JButton();<newline46mondego>        button.setText(<doubleQuotes46>Click me <doubleQuotes46>);<newline46mondego>        button.addActionListener(new MyActioListener());<newline46mondego>        panel = new JPanel();<newline46mondego>        panel.add(label);<newline46mondego>        panel.add(button);<newline46mondego>        frame = new JFrame(<doubleQuotes46>Inner class<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.add(panel);<newline46mondego>        frame.setSize(400, 400);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    class MyActioListener implements ActionListener {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent arg0) {<newline46mondego>            label.setText(<doubleQuotes46>i have been changed<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                InnerClasses innerClasses = new InnerClasses();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5729splitHere46","17655980splitHere46","<doubleQuotes46>v -1.0 1.0 1.0<doubleQuotes46><newline46mondego>"
"5730splitHere46","17655980splitHere46","<doubleQuotes46>v    -1.0 1.0 1.0<doubleQuotes46><newline46mondego>"
"5731splitHere46","17655980splitHere46","String arr[] = line.substring(2).trim().split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>    float x = Float.parseFloat(arr[0]);<newline46mondego>    float y = Float.parseFloat(arr[1]);<newline46mondego>    float z = Float.parseFloat(arr[2]);<newline46mondego>    m.vertices.add(new Vector3f(x,y,z));<newline46mondego>"
"5732splitHere46","17656008splitHere46","double capital = Double.parseDouble(edt1.getText().toString());<newline46mondego>"
"5733splitHere46","17656008splitHere46","edt1 = (EditText)findViewById(R.id.edt1);"
"5734splitHere46","17656008splitHere46","onCreate"
"5735splitHere46","17656008splitHere46","edt1.getText"
"5736splitHere46","17656008splitHere46","double capital = Double.parseDouble(edt1.getText().toString());<newline46mondego>double everyyear = Double.parseDouble(edt2.getText().toString());<newline46mondego>double interest = Double.parseDouble(edt3.getText().toString());<newline46mondego>double year = Double.parseDouble(edt4.getText().toString());<newline46mondego>"
"5737splitHere46","17656152splitHere46","BasicDBObject doc=new BasicDBObject();<newline46mondego>BasicDBObject q=new BasicDBObject(<doubleQuotes46>group_name<doubleQuotes46>,selectedgn);<newline46mondego>doc.put(<doubleQuotes46>date_from<doubleQuotes46>,frm);<newline46mondego>doc.put(<doubleQuotes46>date_too<doubleQuotes46>,too);<newline46mondego>doc.put(<doubleQuotes46>description<doubleQuotes46>,desc);<newline46mondego>doc.put(<doubleQuotes46>url<doubleQuotes46>,url);<newline46mondego>BasicDBObject doc1=new BasicDBObject();<newline46mondego>doc1.put(<doubleQuotes46>Notification<doubleQuotes46>,doc);<newline46mondego>con.coll.update(q,new BasicDBObject(<doubleQuotes46>$set<doubleQuotes46>,doc1));<newline46mondego>"
"5738splitHere46","17656152splitHere46","BasicDBObject doc=new BasicDBObject();<newline46mondego>BasicDBObject q=new BasicDBObject(<doubleQuotes46>group_name<doubleQuotes46>,selectedgn);<newline46mondego>doc.put(<doubleQuotes46>Notification.date_from<doubleQuotes46>,frm);<newline46mondego>doc.put(<doubleQuotes46>Notification.date_too<doubleQuotes46>,too);<newline46mondego>doc.put(<doubleQuotes46>Notification.description<doubleQuotes46>,desc);<newline46mondego>doc.put(<doubleQuotes46>Notification.url<doubleQuotes46>,url);<newline46mondego>con.coll.update(q,new BasicDBObject(<doubleQuotes46>$set<doubleQuotes46>,doc));<newline46mondego>"
"5739splitHere46","17656348splitHere46","switch"
"5740splitHere46","17656348splitHere46","setOpenIcon()"
"5741splitHere46","17656348splitHere46","setClosedIcon()"
"5742splitHere46","17656348splitHere46","DefaultTreeCellRenderer"
"5743splitHere46","17656348splitHere46","JLabel"
"5744splitHere46","17656348splitHere46","switch (error) {<newline46mondego>  case <doubleQuotes46>CORRECT<doubleQuotes46>:<newline46mondego>       setIcon(leafIcon); // sets the icon of the renderer which is a JLabel<newline46mondego>       break;<newline46mondego>  case <doubleQuotes46>CREATE<doubleQuotes46>:<newline46mondego>       setIcon(gifNew);<newline46mondego>       break;<newline46mondego>  case <doubleQuotes46>DELETE<doubleQuotes46>:<newline46mondego>       setIcon(gifError);<newline46mondego>       break;<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"5745splitHere46","17656359splitHere46","JComponent"
"5746splitHere46","17656359splitHere46","paintComponent"
"5747splitHere46","17656359splitHere46","Graphics"
"5748splitHere46","17656437splitHere46","_"
"5749splitHere46","17656437splitHere46","MyObject"
"5750splitHere46","17656437splitHere46","_"
"5751splitHere46","17656441splitHere46","YourClass"
"5752splitHere46","17656441splitHere46","public class YourClass ... {<newline46mondego><newline46mondego>     private int buttCounter = 0;<newline46mondego>     ...<newline46mondego>}<newline46mondego>"
"5753splitHere46","17656441splitHere46","public void SaveText(View view){<newline46mondego><newline46mondego>    if (this.buttCounter <= 10) {<newline46mondego>        // Your old method body goes here<newline46mondego>        this.buttCounter++;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5754splitHere46","17656441splitHere46","Button.setClickable(false)"
"5755splitHere46","17656441splitHere46","Button.setEnabled(false)"
"5756splitHere46","17656441splitHere46","Button.setVisibility(View.INVISIBLE)"
"5757splitHere46","17656453splitHere46","SkipList"
"5758splitHere46","17656454splitHere46","import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego><newline46mondego>public class TimerDemo extends JFrame {<newline46mondego><newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego>    private javax.swing.Timer timer;<newline46mondego><newline46mondego>    public TimerDemo() {<newline46mondego>        super(<doubleQuotes46>Panel Timer Demo<doubleQuotes46>);<newline46mondego>        //initialing swing timer<newline46mondego>        timer = new javax.swing.Timer(100, getButtonAction());<newline46mondego>        JPanel p = new JPanel ();<newline46mondego>        p.addMouseListener(new MouseAdapter(){<newline46mondego>            @Override<newline46mondego>            public void mouseEntered(MouseEvent ev){<newline46mondego>                timer.start();<newline46mondego>            }<newline46mondego>            @Override<newline46mondego>            public void mouseExited(MouseEvent ev){<newline46mondego>                timer.stop();<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>          p.setBackground(Color.blue);<newline46mondego><newline46mondego>          getContentPane().add(p,BorderLayout.CENTER);<newline46mondego>          setDefaultCloseOperation(3);<newline46mondego>          setLocationRelativeTo(null);<newline46mondego>          pack();<newline46mondego>    }<newline46mondego><newline46mondego>    private ActionListener getButtonAction() {<newline46mondego>        ActionListener action = new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                System.out.println(<doubleQuotes46>Heloo<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        };<newline46mondego>        return action;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args) {<newline46mondego>        javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TimerDemo().setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5759splitHere46","17656589splitHere46","Entity"
"5760splitHere46","17656589splitHere46","SessionFactory"
"5761splitHere46","17656589splitHere46","Hibernate"
"5762splitHere46","17656589splitHere46","lazy"
"5763splitHere46","17656589splitHere46","GC"
"5764splitHere46","17656589splitHere46","JVM"
"5765splitHere46","17656589splitHere46","Entity"
"5766splitHere46","17656589splitHere46","Hibernate"
"5767splitHere46","17656611splitHere46","break"
"5768splitHere46","17656611splitHere46","return"
"5769splitHere46","17656611splitHere46","switch(myVar){<newline46mondego>   case 1:<newline46mondego>     //do something<newline46mondego>   break;<newline46mondego>   case 2:<newline46mondego>     // do something different <newline46mondego>   break;<newline46mondego>   default:<newline46mondego>   break;<newline46mondego>}<newline46mondego>"
"5770splitHere46","17656625splitHere46","FileWriter"
"5771splitHere46","17656625splitHere46","state.json"
"5772splitHere46","17656625splitHere46","mkdirs()"
"5773splitHere46","17656625splitHere46","FileWriter"
"5774splitHere46","17656625splitHere46","throws"
"5775splitHere46","17656625splitHere46","FileWriter(File)"
"5776splitHere46","17656625splitHere46","IOException"
"5777splitHere46","17656625splitHere46","state"
"5778splitHere46","17656625splitHere46","\\state\\state.json"
"5779splitHere46","17656625splitHere46","state.json"
"5780splitHere46","17656625splitHere46","FileWriter"
"5781splitHere46","17656706splitHere46","start()"
"5782splitHere46","17656706splitHere46","run()"
"5783splitHere46","17656755splitHere46","@Override<newline46mondego>public void mouseClicked(MouseEvent event) {<newline46mondego>    clickedPanel = (JPanel) myBoard.getComponentAt(event.getPoint());<newline46mondego>"
"5784splitHere46","17656755splitHere46","event.getPoint()"
"5785splitHere46","17656755splitHere46","Point"
"5786splitHere46","17656755splitHere46","layeredPane"
"5787splitHere46","17656755splitHere46","myBoard.getComponentAt()"
"5788splitHere46","17656755splitHere46","myBoard"
"5789splitHere46","17656755splitHere46","layeredPane.getComponents()[1]"
"5790splitHere46","17656841splitHere46","package designPatterns.creational.factory;<newline46mondego><newline46mondego>public class CarFactory {<newline46mondego>    public static Car buildCar(CarType model) {<newline46mondego>        Car car = null;<newline46mondego>        switch (model) {<newline46mondego>            case SMALL:<newline46mondego>                    car = new SmallCar();<newline46mondego>                    break;<newline46mondego><newline46mondego>            case SEDAN:<newline46mondego>                    car = new SedanCar();<newline46mondego>                    break;<newline46mondego><newline46mondego>            case LUXURY:<newline46mondego>                    car = new LuxuryCar();<newline46mondego>                    break;<newline46mondego><newline46mondego>            default:<newline46mondego>                    // throw some exception<newline46mondego>                    break;<newline46mondego>            }<newline46mondego>        return car;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5791splitHere46","17656878splitHere46","<s:combobox>"
"5792splitHere46","17656947splitHere46","writeChars()"
"5793splitHere46","17656947splitHere46","getBytes()"
"5794splitHere46","17656947splitHere46","String"
"5795splitHere46","17656948splitHere46","Double.POSITIVE_INFINITY"
"5796splitHere46","17656948splitHere46","double d = 1e100; //ok<newline46mondego>double d = 1e300 * 1e300; //Double.POSITIVE_INIFINITY<newline46mondego>double d = 1e900; //does not compile<newline46mondego>"
"5797splitHere46","17656948splitHere46","BigDecimal"
"5798splitHere46","17656967splitHere46","Two"
"5799splitHere46","17656967splitHere46","onlyOne"
"5800splitHere46","17656967splitHere46","two.containsAll(onlyOne)"
"5801splitHere46","17657088splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>    function jsf(data) {<newline46mondego>        if(data.status == 'success') {<newline46mondego>            document.getElementById('plain-submit').click();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    function normal() {<newline46mondego>        document.getElementById('jsf-submit').click();<newline46mondego>    }<newline46mondego></script><newline46mondego>...<newline46mondego><h:form prependId=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>    ...<newline46mondego>    <h:commandButton id=<doubleQuotes46>jsf-submit<doubleQuotes46> action=<doubleQuotes46>#{bean.action} value=<doubleQuotes46>Submit<doubleQuotes46> style=<doubleQuotes46>display:none<doubleQuotes46>><newline46mondego>        <f:ajax execute=<doubleQuotes46>@form<doubleQuotes46> ... onevent=<doubleQuotes46>jsf<doubleQuotes46>/><newline46mondego>    </h:commandButton><newline46mondego></h:form><newline46mondego><form method=<doubleQuotes46>POST<doubleQuotes46> action=<doubleQuotes46>https://EXTERNAL-LINK.com/<doubleQuotes46>><newline46mondego>    ...<newline46mondego>    <input id=<doubleQuotes46>button-submit<doubleQuotes46> type=<doubleQuotes46>button<doubleQuotes46> onclick=<doubleQuotes46>normal()<doubleQuotes46> ...>Submit</input><newline46mondego>    <input id=<doubleQuotes46>plain-submit<doubleQuotes46> type=<doubleQuotes46>submit<doubleQuotes46> style=<doubleQuotes46>display:none<doubleQuotes46>>Submit</input><newline46mondego></form><newline46mondego>"
"5802splitHere46","17657152splitHere46","setObject"
"5803splitHere46","17657152splitHere46","null"
"5804splitHere46","17657282splitHere46","Class"
"5805splitHere46","17657282splitHere46","private boolean validateOrderChange(List<? extends OrderChange>> input, boolean verifyOnly) {<newline46mondego>    for (OrderChange orderChange : input) {<newline46mondego>        if (StringUtil.isNullOrEmpty(orderChange.getRph())) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5806splitHere46","17657404splitHere46","class A {<newline46mondego>    int a; //instance variable<newline46mondego>    static int b; //class variable<newline46mondego>    public void c() {<newline46mondego>        int d; //local variable<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5807splitHere46","17657405splitHere46","public int compareTo(Unit other) {<newline46mondego>    if (position != other.position) {<newline46mondego>        if (position == 0) {<newline46mondego>            return 1;<newline46mondego>        } else if (other.position == 0) {<newline46mondego>            return -1;<newline46mondego>        }<newline46mondego>        return Integer.compare(position, other.position);<newline46mondego>    } else {<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5808splitHere46","17657405splitHere46","[-1, 1, 2, 0, 0]"
"5809splitHere46","17657467splitHere46","@XmlSchema"
"5810splitHere46","17657467splitHere46","@XmlSchema(<newline46mondego>    namespace = <doubleQuotes46>http://www.abc.com<doubleQuotes46>,<newline46mondego>    elementFormDefault = XmlNsForm.QUALIFIED)<newline46mondego>package example;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlNsForm;<newline46mondego>import javax.xml.bind.annotation.XmlSchema;<newline46mondego>"
"5811splitHere46","17657513splitHere46","transient"
"5812splitHere46","17657513splitHere46","private transient List<Homework> homework; <newline46mondego>"
"5813splitHere46","17657513splitHere46","@javax.persistence.Transient"
"5814splitHere46","17657513splitHere46","@Transient<newline46mondego>private List<Homework> homework; <newline46mondego>"
"5815splitHere46","17657513splitHere46","homework"
"5816splitHere46","17657715splitHere46","<doubleQuotes46>hello<doubleQuotes46>"
"5817splitHere46","17657715splitHere46","String"
"5818splitHere46","17657715splitHere46","String.class"
"5819splitHere46","17657715splitHere46","hamecrest"
"5820splitHere46","17657715splitHere46","JUnit"
"5821splitHere46","17657715splitHere46","Assert.assertEquals(String.class, result.getType())"
"5822splitHere46","17657727splitHere46","TreeMap"
"5823splitHere46","17657778splitHere46","PathSuffixFilter.create(<doubleQuotes46>.java<doubleQuotes46>)"
"5824splitHere46","17657778splitHere46","getPathString"
"5825splitHere46","17657778splitHere46","getPathString"
"5826splitHere46","17657778splitHere46","byte[]"
"5827splitHere46","17657778splitHere46","PathSuffixFilter"
"5828splitHere46","17657778splitHere46","byte[]"
"5829splitHere46","17658044splitHere46","boolean bool = true;<newline46mondego><newline46mondego>public ClassTwo() {<newline46mondego>    super();<newline46mondego>}<newline46mondego>"
"5830splitHere46","17658044splitHere46","boolean bool;<newline46mondego><newline46mondego>public ClassTwo() {<newline46mondego>    super();<newline46mondego>    bool = true;<newline46mondego>}<newline46mondego>"
"5831splitHere46","17658044splitHere46","false"
"5832splitHere46","17658044splitHere46","super()"
"5833splitHere46","17658044splitHere46","ClassOne()"
"5834splitHere46","17658044splitHere46","fireMethod()"
"5835splitHere46","17658044splitHere46","bool"
"5836splitHere46","17658044splitHere46","true"
"5837splitHere46","17658044splitHere46","public ClassTwo() {<newline46mondego>    super();<newline46mondego>    fireMethod();<newline46mondego>}<newline46mondego>"
"5838splitHere46","17658044splitHere46","public ClassTwo() {<newline46mondego>    super();<newline46mondego>    bool = true;<newline46mondego>    fireMethod();<newline46mondego>}<newline46mondego>"
"5839splitHere46","17658044splitHere46","bool=false<newline46mondego>bool=true<newline46mondego>"
"5840splitHere46","17658075splitHere46","for (int i = 1; i <= 10; i++) {<newline46mondego>        for (int j = 1; j <= 10; j++) {<newline46mondego>            System.out.print(i + <doubleQuotes46>x<doubleQuotes46> + j + <doubleQuotes46>=<doubleQuotes46> + (i * j) + <doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println();<newline46mondego>    }<newline46mondego>"
"5841splitHere46","17658150splitHere46","Pattern inputSpace = Pattern.compile(<doubleQuotes46>^([^\\s]*)\\s<doubleQuotes46>, Pattern.MULTILINE);  <newline46mondego>String spaceText = <doubleQuotes46>This split <doubleQuotes46>;    <newline46mondego>System.out.println(inputSpace.matcher(spaceText).replaceAll(<doubleQuotes46>$1&amp;emsp;<doubleQuotes46>));<newline46mondego>"
"5842splitHere46","17658150splitHere46","[^...]"
"5843splitHere46","17658150splitHere46","\\s"
"5844splitHere46","17658150splitHere46","[^\\s]*"
"5845splitHere46","17658150splitHere46","()"
"5846splitHere46","17658150splitHere46","$1"
"5847splitHere46","17658150splitHere46","()"
"5848splitHere46","17658150splitHere46","replaceFirst"
"5849splitHere46","17658150splitHere46","String spaceText = <doubleQuotes46>This split <doubleQuotes46>;<newline46mondego>spaceText = spaceText.replaceFirst(<doubleQuotes46>\\s<doubleQuotes46>, <doubleQuotes46>&amp;emsp;<doubleQuotes46>);<newline46mondego>"
"5850splitHere46","17658460splitHere46","link.getKey()"
"5851splitHere46","17658460splitHere46","key"
"5852splitHere46","17658460splitHere46","Hashtable.insert"
"5853splitHere46","17658460splitHere46","Hashtable.delete"
"5854splitHere46","17658460splitHere46","Strings"
"5855splitHere46","17658460splitHere46","public int hash(String key) {<newline46mondego>    int hashkey = key.hashCode();<newline46mondego>    return hashkey % arraySize;<newline46mondego>} // END hash()<newline46mondego>"
"5856splitHere46","17658633splitHere46","ObjectOutputStream"
"5857splitHere46","17658633splitHere46","java.io.Serializable"
"5858splitHere46","17658633splitHere46","public class User implements Serializable {<newline46mondego>    ......<newline46mondego>}<newline46mondego>"
"5859splitHere46","17658633splitHere46","User usr = new User();    <newline46mondego><newline46mondego>Url url;<newline46mondego>HttpURLConnection conn;<newline46mondego>ObjectOutputStream objout;<newline46mondego>try {<newline46mondego>    url = new Url(<doubleQuotes46>http://192.160.1.1<doubleQuotes46>);<newline46mondego>    conn  = (HttpURLConnection) url.getConnection();<newline46mondego><newline46mondego>    conn.setDoOutput(true); //this is to enable writing<newline46mondego>    conn.setDoInput(true);  //this is to enable reading<newline46mondego><newline46mondego>    out = new ObjectOutputStream(conn.getOutputStream());<newline46mondego>    out.writeObject(usr);<newline46mondego>    out.close();<newline46mondego>}<newline46mondego>"
"5860splitHere46","17658947splitHere46","clear"
"5861splitHere46","17658947splitHere46","JoinPoint"
"5862splitHere46","17658947splitHere46","java.lang.reflect.Method"
"5863splitHere46","17658947splitHere46","@Aspect  <newline46mondego>public class Clear <newline46mondego>{<newline46mondego>   @After(<doubleQuotes46>@annotation(org.springframework.transaction.annotation.Transactional)<doubleQuotes46>)  <newline46mondego>   public void clear(final JoinPoint joinPoint)  <newline46mondego>   {  <newline46mondego>      final Method method = ((MethodSignature) joinPoint.getSignature()).getMethod();<newline46mondego>      final Transactional txAnnotation = methood.getAnnotation(Transactional.class);<newline46mondego>      final boolean isReadOnly = txAnnotation.readOnly();<newline46mondego><newline46mondego>      //do conditional work based on isReadOnly<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5864splitHere46","17658968splitHere46","import java.io.File;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import org.xml.sax.XMLReader;<newline46mondego>import org.xml.sax.helpers.XMLReaderFactory;<newline46mondego>"
"5865splitHere46","17658968splitHere46","XMLReader xmlReader = XMLReaderFactory.createXMLReader();<newline46mondego>"
"5866splitHere46","17658968splitHere46","xmlReader.setFeature(<doubleQuotes46>http://apache.org/xml/features/nonvalidating/load-external-dtd<doubleQuotes46>, false);<newline46mondego>"
"5867splitHere46","17658968splitHere46","Builder builder = new Builder(xmlReader);<newline46mondego>"
"5868splitHere46","17658968splitHere46","nu.xom.Document doc = builder.build(fXmlFile);<newline46mondego>"
"5869splitHere46","17658983splitHere46","<artifact>bouncycastle:*</artifact><newline46mondego>"
"5870splitHere46","17658983splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-shade-plugin</artifactId><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>            <phase>package</phase><newline46mondego>            <goals><newline46mondego>                <goal>shade</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>                <transformers><newline46mondego>                    <transformer implementation=<doubleQuotes46>org.apache.maven.plugins.shade.resource.ManifestResourceTransformer<doubleQuotes46>><newline46mondego>                        <mainClass>com.mycompany.MainClass</mainClass><newline46mondego>                    </transformer><newline46mondego>                </transformers><newline46mondego>                <filters><newline46mondego>                    <filter><newline46mondego>                        <artifact>bouncycastle:*</artifact><newline46mondego>                        <excludes><newline46mondego>                            <exclude>META-INF/*.SF</exclude><newline46mondego>                            <exclude>META-INF/*.DSA</exclude><newline46mondego>                            <exclude>META-INF/*.RSA</exclude><newline46mondego>                        </excludes><newline46mondego>                    </filter><newline46mondego>                </filters><newline46mondego>                <shadedArtifactAttached>true</shadedArtifactAttached><newline46mondego>                <shadedClassifierName>standalone</shadedClassifierName><newline46mondego>            </configuration><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego><plugin><newline46mondego>"
"5871splitHere46","17659082splitHere46","<ul class=<doubleQuotes46>ListOfTables<doubleQuotes46>><newline46mondego>           <li class=<doubleQuotes46>TABLE<doubleQuotes46>><newline46mondego>                 <span class=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>           <li class=<doubleQuotes46>TABLE<doubleQuotes46>><newline46mondego>                 <span class=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>           <li class=<doubleQuotes46>TABLE<doubleQuotes46>><newline46mondego>                 <span class=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>           <li class=<doubleQuotes46>TABLE<doubleQuotes46>><newline46mondego>                 <span class=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>"
"5872splitHere46","17659082splitHere46","public void searchForItems(Document doc)<newline46mondego>{<newline46mondego>    Elements tables = doc.select(<doubleQuotes46>li[class=TABLE]<doubleQuotes46>);<newline46mondego>    for (Element table : tables)<newline46mondego>    {<newline46mondego><newline46mondego>        String item;<newline46mondego>        Elements itemsInTable = table.select(<doubleQuotes46>span[class=item]<doubleQuotes46>);<newline46mondego>        item = itemsIntTable.text();<newline46mondego><newline46mondego><newline46mondego>        //Write the item to file. Depending on what is in your table, you might<newline46mondego>        //have to write a more complex scan. Looking for things like attributes<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5873splitHere46","17659123splitHere46","final"
"5874splitHere46","17659307splitHere46","lhs.getDist().compareTo(rhs.getDist());"
"5875splitHere46","17659307splitHere46","Double.NaN"
"5876splitHere46","17659307splitHere46","positive/negative zero"
"5877splitHere46","17659307splitHere46","public static int More ...compare(double d1, double d2) {<newline46mondego>   if (d1 < d2)<newline46mondego>        return -1;           // Neither val is NaN, thisVal is smaller<newline46mondego>    if (d1 > d2)<newline46mondego>        return 1;            // Neither val is NaN, thisVal is larger<newline46mondego><newline46mondego>    long thisBits = Double.doubleToLongBits(d1);<newline46mondego>    long anotherBits = Double.doubleToLongBits(d2);<newline46mondego><newline46mondego>    return (thisBits == anotherBits ?  0 : // Values are equal<newline46mondego>            (thisBits < anotherBits ? -1 : // (-0.0, 0.0) or (!NaN, NaN)<newline46mondego>             1));                          // (0.0, -0.0) or (NaN, !NaN)<newline46mondego>}<newline46mondego>"
"5878splitHere46","17659390splitHere46","panelMenu"
"5879splitHere46","17659390splitHere46","<p:schedule>"
"5880splitHere46","17659390splitHere46","<p:schedule>"
"5881splitHere46","17659390splitHere46","panelMenu"
"5882splitHere46","17659390splitHere46","absolute"
"5883splitHere46","17659390splitHere46","relative"
"5884splitHere46","17659390splitHere46","id"
"5885splitHere46","17659390splitHere46","visits"
"5886splitHere46","17659390splitHere46","div id=<doubleQuotes46>visitsRegisterSecretary<doubleQuotes46>"
"5887splitHere46","17659390splitHere46","#visits"
"5888splitHere46","17659390splitHere46","#visitsRegisterSecretary"
"5889splitHere46","17659390splitHere46","accordionPanel"
"5890splitHere46","17659390splitHere46","<div id=<doubleQuotes46>panelMenuContainer<doubleQuotes46>><newline46mondego>    <div id=<doubleQuotes46>panelMenu<doubleQuotes46>><newline46mondego>        <h:form><newline46mondego>             <p:accordionPanel activeIndex=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>                 <p:tab title=<doubleQuotes46>#{msg.manage}<doubleQuotes46>><newline46mondego>             <!--Remainder ommitted --><newline46mondego>             </p:accordionPanel><newline46mondego>        </h:form><newline46mondego>    </div><newline46mondego></div><newline46mondego>"
"5891splitHere46","17659390splitHere46","#panelMenuContainer {<newline46mondego>    position:relative; <newline46mondego>}<newline46mondego><newline46mondego>#panelMenu {<newline46mondego>    position: absolute; <newline46mondego>    left: 880px;<newline46mondego>    width: 180px;<newline46mondego>}<newline46mondego>"
"5892splitHere46","17659390splitHere46","left"
"5893splitHere46","17659390splitHere46","panelMenu"
"5894splitHere46","17659390splitHere46","left"
"5895splitHere46","17659390splitHere46","#panelMenu"
"5896splitHere46","17659390splitHere46","padding-top"
"5897splitHere46","17659390splitHere46","#visitsRegisterSecretary"
"5898splitHere46","17659390splitHere46","<h:forms>"
"5899splitHere46","17659430splitHere46","mCursor = mDb.query(DATABASE_TABLE_PROJ, <newline46mondego>new String[]{CATEGORY_COLUMN_ID,CATEGORY_COLUMN_TITLE,<newline46mondego>CATEGORY_COLUMN_CONTENT}, <newline46mondego>null, null, null, null, null);<newline46mondego>"
"5900splitHere46","17659578splitHere46","SortBy"
"5901splitHere46","17659578splitHere46","SortBy"
"5902splitHere46","17659578splitHere46","Comment"
"5903splitHere46","17659578splitHere46","User"
"5904splitHere46","17659578splitHere46","static class Comment { }<newline46mondego><newline46mondego>static class User { }<newline46mondego><newline46mondego>interface SortBy<T, M> { }<newline46mondego><newline46mondego>static class CommentSortBy<M> implements SortBy<Comment, M> {<newline46mondego><newline46mondego>    static final CommentSortBy<Date> CREATION = new CommentSortBy<Date>();<newline46mondego>    static final CommentSortBy<Integer> VOTES = new CommentSortBy<Integer>();<newline46mondego>}<newline46mondego><newline46mondego>static class UserSortBy<M> implements SortBy<User, M> {<newline46mondego><newline46mondego>    static final UserSortBy<String> NAME = new UserSortBy<String>();<newline46mondego>}<newline46mondego><newline46mondego>static class Query<T> {<newline46mondego><newline46mondego>    public <M> void setSort(SortBy<T, M> sortBy, M min) {<newline46mondego>        //Set relevant values<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego><newline46mondego>    new Query<Comment>().setSort(CommentSortBy.CREATION, new Date());<newline46mondego>    new Query<Comment>().setSort(UserSortBy.NAME, <doubleQuotes46>Joe<doubleQuotes46>); //compiler error<newline46mondego>}<newline46mondego>"
"5905splitHere46","17659787splitHere46","private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(<newline46mondego>        <doubleQuotes46>d MMM yyyy HH:mm:ss.SSS<doubleQuotes46>);<newline46mondego><newline46mondego>public String calculateDuration(String startDateStr, String endDateStr)<newline46mondego>        throws ParseException {<newline46mondego><newline46mondego>    String methodName = <doubleQuotes46>calculateDuration<doubleQuotes46>;<newline46mondego>    Date startDate = DATE_FORMAT.parse(startDateStr);<newline46mondego>    Date endDate = DATE_FORMAT.parse(endDateStr);<newline46mondego><newline46mondego>    // in milliseconds<newline46mondego>    long diff = endDate.getTime() - startDate.getTime();<newline46mondego><newline46mondego>    long diffMiliseconds = diff % 1000;<newline46mondego>    long diffSeconds = diff / 1000 % 60;<newline46mondego>    long diffMinutes = diff / (60 * 1000) % 60;<newline46mondego>    long diffHours = diff / (60 * 60 * 1000) % 24;<newline46mondego><newline46mondego>    return String.format(<doubleQuotes46>%02d:%02d:%02d.%02d<doubleQuotes46>, diffHours, diffMinutes,<newline46mondego>            diffSeconds, diffMiliseconds);<newline46mondego>}<newline46mondego>"
"5906splitHere46","17659815splitHere46","public int hash(String key) <newline46mondego>   {<newline46mondego>        int hashkey = key.hashCode();<newline46mondego><newline46mondego>        return hashkey % arraySize;<newline46mondego>   } <newline46mondego>"
"5907splitHere46","17659815splitHere46","hashkey"
"5908splitHere46","17659815splitHere46","hash"
"5909splitHere46","17659815splitHere46","public int hash(String key) <newline46mondego>   {<newline46mondego>        int hashkey = key.hashCode();<newline46mondego><newline46mondego>        return (hashkey & 0x7FFFFFFF) % arraySize;<newline46mondego>   } <newline46mondego>"
"5910splitHere46","17659815splitHere46","bitwise and"
"5911splitHere46","17659815splitHere46","hashkey"
"5912splitHere46","17659815splitHere46","0x7FFFFFFF"
"5913splitHere46","17659815splitHere46","bitwise and"
"5914splitHere46","17659815splitHere46","and"
"5915splitHere46","17659815splitHere46","hashkey"
"5916splitHere46","17659815splitHere46","and"
"5917splitHere46","17659815splitHere46","0 & 1"
"5918splitHere46","17659815splitHere46","String"
"5919splitHere46","17659815splitHere46","hashCode()"
"5920splitHere46","17659815splitHere46","String"
"5921splitHere46","17659815splitHere46","public int  hashCode() <newline46mondego>{<newline46mondego>        int h = hash;<newline46mondego><newline46mondego>        if (h == 0) <newline46mondego>        {<newline46mondego>            int off = offset;<newline46mondego>            char val[] = value;<newline46mondego>            int len = count;<newline46mondego><newline46mondego>            for (int i = 0; i < len; i++) <newline46mondego>            {<newline46mondego>                h = 31*h + val[off++];<newline46mondego>            }<newline46mondego><newline46mondego>            hash = h;<newline46mondego>        }<newline46mondego><newline46mondego>        return h;<newline46mondego>    }<newline46mondego>"
"5922splitHere46","17659815splitHere46","h"
"5923splitHere46","17659815splitHere46","Integer.MAX_VALUE"
"5924splitHere46","17659815splitHere46","Integer.MIN_VALUE"
"5925splitHere46","17659815splitHere46","Integer.MAX_VALUE + 1 == Integer.MIN_VALUE <newline46mondego>"
"5926splitHere46","17659854splitHere46","PrePersist"
"5927splitHere46","17659854splitHere46","@interface PrePersist {}<newline46mondego><newline46mondego>public class Registry {<newline46mondego><newline46mondego>    @NotNull<newline46mondego>    String userName;<newline46mondego><newline46mondego>    @NotNull(groups = PrePersist.class)<newline46mondego>    Date createdAt;<newline46mondego>}<newline46mondego>"
"5928splitHere46","17659854splitHere46","<persistence ...><newline46mondego>    <persistence-unit ...><newline46mondego>        ...<newline46mondego>        <properties><newline46mondego>            <property<newline46mondego>                name=<doubleQuotes46>javax.persistence.validation.group.pre-persist<doubleQuotes46> <newline46mondego>                value=<doubleQuotes46>com.example.PrePersist<doubleQuotes46>/><newline46mondego>        </properties><newline46mondego>    </persistence-unit><newline46mondego></persistence><newline46mondego>"
"5929splitHere46","17660150splitHere46","@Component<newline46mondego>public class StaticContextAccessor {<newline46mondego><newline46mondego>    private static StaticContextAccessor instance;<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    private ApplicationContext applicationContext;<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    public void registerInstance() {<newline46mondego>        instance = this;<newline46mondego>    }<newline46mondego><newline46mondego>    public static <T> T getBean(Class<T> clazz) {<newline46mondego>        return instance.applicationContext.getBean(clazz);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5930splitHere46","17660150splitHere46","public class Boo {<newline46mondego><newline46mondego>    public static void randomMethod() {<newline46mondego>         StaticContextAccessor.getBean(Foo.class).doStuff();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5931splitHere46","17660188splitHere46","transform_my_manifest"
"5932splitHere46","17660188splitHere46","local.properties"
"5933splitHere46","17660269splitHere46","String local = impl.getLocalHostName();<newline46mondego>"
"5934splitHere46","17660269splitHere46","String local = <doubleQuotes46>localhost<doubleQuotes46>; // impl.getLocalHostName();<newline46mondego>"
"5935splitHere46","17660369splitHere46","int arr[][] = new int[3][];   <newline46mondego>arr[0] = new int[3];     <newline46mondego>arr[1] = new int[40]; <newline46mondego>arr[2] = new int[12]; <newline46mondego>"
"5936splitHere46","17660379splitHere46","extends"
"5937splitHere46","17660449splitHere46","DynamicJavaFileObject composer = new DynamicJavaFileObject(<doubleQuotes46>com.xxx<doubleQuotes46>,<doubleQuotes46>ClassName<doubleQuotes46>);<newline46mondego><newline46mondego>composer.setSuperclass(<doubleQuotes46>superclass<doubleQuotes46>);<newline46mondego>composer.addImport(GWT.class.getCanonicalName());<newline46mondego><newline46mondego>SourceWriter writer = composer.getSourceWriter();<newline46mondego><newline46mondego>writer.println(<doubleQuotes46>public String test(){return \<doubleQuotes46>test\<doubleQuotes46>}<doubleQuotes46>);<newline46mondego><newline46mondego>writer.commit(logger);<newline46mondego>"
"5938splitHere46","17660449splitHere46","Class.forName(<doubleQuotes46>com.xxx.ClassName<doubleQuotes46>);<newline46mondego>"
"5939splitHere46","17660525splitHere46","// this is crude way to create your SQL IN part<newline46mondego>// Ideally you should be iterating over your selections and creating this string<newline46mondego>String selections = firstSelection + <doubleQuotes46>,<doubleQuotes46> + secondSelection;<newline46mondego><newline46mondego>select * from myTable where x IN(selections);<newline46mondego>"
"5940splitHere46","17660532splitHere46","class Sem2 extends Sem1<newline46mondego>{<newline46mondego>   int p,q,r,S2T,S2GT;<newline46mondego>   Sem2( int a, int b, int c, int p,int q,int r)<newline46mondego>   {<newline46mondego>       super( a, b, c );<newline46mondego>       this.p=p;<newline46mondego>       this.q=q;<newline46mondego>       this.r=r;<newline46mondego>   }<newline46mondego>"
"5941splitHere46","17660802splitHere46","lazy-init=<doubleQuotes46>true<doubleQuotes46>"
"5942splitHere46","17660802splitHere46","<bean id=<doubleQuotes46>lazy<doubleQuotes46> class=<doubleQuotes46>com.foo.ExpensiveToCreateBean<doubleQuotes46> lazy-init=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"5943splitHere46","17660802splitHere46","@Lazy(true)"
"5944splitHere46","17660882splitHere46","@SupportedAnnotationTypes(<doubleQuotes46>com.example.MyAnnotation<doubleQuotes46>)<newline46mondego>public class CompileTimeAnnotationProcessor extends AbstractProcessor {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean process(Set<? extends TypeElement> annotations, <newline46mondego>                           RoundEnvironment roundEnv) {<newline46mondego>        // Only one annotation, so just use annotations.iterator().next();<newline46mondego>        Set<? extends Element> elements = roundEnv.getElementsAnnotatedWith(<newline46mondego>                annotations.iterator().next());<newline46mondego>        Set<VariableElement> fields = ElementFilter.fieldsIn(elements);<newline46mondego>        for (VariableElement field : fields) {<newline46mondego>            TypeMirror fieldType = field.asType();<newline46mondego>            String fullTypeClassName = fieldType.toString();<newline46mondego>            // Validate fullTypeClassName<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5945splitHere46","17660882splitHere46","MyType.class"
"5946splitHere46","17660882splitHere46","java.lang.String"
"5947splitHere46","17660882splitHere46","for (VariableElement field : fields) {<newline46mondego>    TypeMirror fieldType = field.asType();<newline46mondego>    String fullTypeClassName = fieldType.toString();<newline46mondego>    if (!String.class.getName().equals(fullTypeClassName)) {<newline46mondego>        processingEnv.getMessager().printMessage(<newline46mondego>                Kind.ERROR, <doubleQuotes46>Field type must be java.lang.String<doubleQuotes46>, field);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5948splitHere46","17660882splitHere46","TypeMirror"
"5949splitHere46","17660882splitHere46","if (fieldType.getKind() != TypeKind.DECLARED) {<newline46mondego>    processingEnv.getMessager().printMessage(<newline46mondego>            Kind.ERROR, <doubleQuotes46>Field cannot be a generic type.<doubleQuotes46>, field);<newline46mondego>}<newline46mondego>DeclaredType declaredFieldType = (DeclaredType) fieldType;<newline46mondego>TypeElement fieldTypeElement = (TypeElement) declaredFieldType.asElement();<newline46mondego>"
"5950splitHere46","17660882splitHere46","javac"
"5951splitHere46","17660882splitHere46","AnnotationMirror"
"5952splitHere46","17660882splitHere46","DifferentAnnotation diffAnn = fieldTypeElement.getAnnotation(<newline46mondego>        DifferentAnnotation.class);<newline46mondego>// Process diffAnn<newline46mondego>"
"5953splitHere46","17660882splitHere46","private static <T> T findAnnotationValue(Element element, String annotationClass,<newline46mondego>        String valueName, Class<T> expectedType) {<newline46mondego>    T ret = null;<newline46mondego>    for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {<newline46mondego>        DeclaredType annotationType = annotationMirror.getAnnotationType();<newline46mondego>        TypeElement annotationElement = (TypeElement) annotationType<newline46mondego>                .asElement();<newline46mondego>        if (annotationElement.getQualifiedName().contentEquals(<newline46mondego>                annotationClass)) {<newline46mondego>            ret = extractValue(annotationMirror, valueName, expectedType);<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return ret;<newline46mondego>}<newline46mondego><newline46mondego>private static <T> T extractValue(AnnotationMirror annotationMirror,<newline46mondego>        String valueName, Class<T> expectedType) {<newline46mondego>    Map<ExecutableElement, AnnotationValue> elementValues = new HashMap<ExecutableElement, AnnotationValue>(<newline46mondego>            annotationMirror.getElementValues());<newline46mondego>    for (Entry<ExecutableElement, AnnotationValue> entry : elementValues<newline46mondego>            .entrySet()) {<newline46mondego>        if (entry.getKey().getSimpleName().contentEquals(valueName)) {<newline46mondego>            Object value = entry.getValue().getValue();<newline46mondego>            return expectedType.cast(value);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"5954splitHere46","17660882splitHere46","DifferentAnnotation"
"5955splitHere46","17660882splitHere46","@DifferentAnnotation(name = <doubleQuotes46>My Class<doubleQuotes46>)<newline46mondego>public class MyClass {<newline46mondego><newline46mondego>    @MyAnnotation<newline46mondego>    private String field;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"5956splitHere46","17660882splitHere46","My Class"
"5957splitHere46","17660882splitHere46","String diffAnnotationName = findAnnotationValue(fieldTypeElement,<newline46mondego>        <doubleQuotes46>com.example.DifferentAnnotation<doubleQuotes46>, <doubleQuotes46>name<doubleQuotes46>, String.class);<newline46mondego>System.out.println(diffAnnotationName);<newline46mondego>"
"5958splitHere46","17660889splitHere46","continue"
"5959splitHere46","17660889splitHere46","for"
"5960splitHere46","17660889splitHere46","while"
"5961splitHere46","17660889splitHere46","do/while"
"5962splitHere46","17660889splitHere46","continue"
"5963splitHere46","17660889splitHere46","for"
"5964splitHere46","17660889splitHere46","for (int i = 0; i < max; i++) {<newline46mondego>        // interested only in p's<newline46mondego>        if (searchMe.charAt(i) != 'p')<newline46mondego>            continue;<newline46mondego><newline46mondego>        // process p's<newline46mondego>        numPs++;<newline46mondego>    }<newline46mondego>"
"5965splitHere46","17660909splitHere46","public static void sort(int[] x) {<newline46mondego>  boolean sorted=true;<newline46mondego>  int temp;<newline46mondego><newline46mondego>  while (sorted){<newline46mondego>     sorted = false;<newline46mondego>     for (int i=0; i < x.length-1; i++) <newline46mondego>        if (x[i] > x[i+1]) {                      <newline46mondego>           temp       = x[i];<newline46mondego>           x[i]       = x[i+1];<newline46mondego>           x[i+1]     = temp;<newline46mondego>           sorted = true;<newline46mondego>        }          <newline46mondego>  } <newline46mondego>"
"5966splitHere46","17661119splitHere46","split"
"5967splitHere46","17661119splitHere46","null"
"5968splitHere46","17661119splitHere46","limit"
"5969splitHere46","17661119splitHere46","split"
"5970splitHere46","17661119splitHere46","null"
"5971splitHere46","17661119splitHere46","datum = line.split(<doubleQuotes46>,<doubleQuotes46>, -1);<newline46mondego>"
"5972splitHere46","17661119splitHere46","!="
"5973splitHere46","17661119splitHere46","if (!(<doubleQuotes46><doubleQuotes46>.equals(datum[5]))) {<newline46mondego>"
"5974splitHere46","17661160splitHere46","public void testMain(Object[] args) <newline46mondego>{<newline46mondego>    ProcessTestObject pto = startBrowser(<doubleQuotes46>http://www.myurl.com<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>PTO <doubleQuotes46>+ pto.getProcessId());<newline46mondego>    TestObject[] browsers = find(atChild(<doubleQuotes46>.class<doubleQuotes46>, <doubleQuotes46>Html.HtmlBrowser<doubleQuotes46> ));<newline46mondego>    for(TestObject browser:browsers)<newline46mondego>    {<newline46mondego>        if(pto.getProcessId() == browser.getProcess().getProcessId())<newline46mondego>        {<newline46mondego>            //we hv a match, use it <newline46mondego>            ((BrowserTestObject)browser).maximize();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>    unregisterAll();    <newline46mondego><newline46mondego>}<newline46mondego>"
"5975splitHere46","17661214splitHere46","lineNumber: 1; columnNumber: 911<newline46mondego>"
"5976splitHere46","17661214splitHere46","<?XML..."
"5977splitHere46","17661350splitHere46","public class MyMessageListener implements OutboundMessageListener<newline46mondego>{<newline46mondego>    public void notifyOutgoingMessage(javax.wireless.messaging.Message m)<newline46mondego>    {<newline46mondego>        try {<newline46mondego>            String msg = null;<newline46mondego>            msg = getMessage(m); // my call to convert Message to String<newline46mondego>            //... process msg<newline46mondego>        }<newline46mondego>        catch(Exception ex) {<newline46mondego>            // handle exception<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void notifyIncomingMessage(MessageConnection conn) <newline46mondego>    {<newline46mondego>        // handle received sms here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5978splitHere46","17661350splitHere46","MyMessageListener ml = new MyMessageListener();<newline46mondego>MessageConnection mc;<newline46mondego>try {<newline46mondego>    mc = (MessageConnection)Connector.open(<doubleQuotes46>sms://:0<doubleQuotes46>);<newline46mondego>    mc.setMessageListener(el);<newline46mondego>} catch (Exception e) {<newline46mondego>    // handle exception<newline46mondego>}<newline46mondego>"
"5979splitHere46","17661350splitHere46","Connection.open()"
"5980splitHere46","17661370splitHere46","interface Transformer<T> { <newline46mondego>    public String transform( List<T> elements );<newline46mondego>}<newline46mondego>"
"5981splitHere46","17661370splitHere46","class XMLTransformer implements Transformer<MyXMLElements> { <newline46mondego>    public String transform( List<MyXMLElements> elements ) {<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class TXTTransformer implements Transformer<MyTXTElements> { <newline46mondego>     public String transform( List<MyTXTElements> elements ) {<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"5982splitHere46","17661370splitHere46","Transformer<MyXMLElements>"
"5983splitHere46","17661370splitHere46","Transformer<T>"
"5984splitHere46","17661370splitHere46","Transformer<MyTXTElements>"
"5985splitHere46","17661448splitHere46","main()"
"5986splitHere46","17661448splitHere46","String"
"5987splitHere46","17661448splitHere46","java YourClass arg1 arg2<newline46mondego>"
"5988splitHere46","17661448splitHere46","main()"
"5989splitHere46","17661448splitHere46","String []"
"5990splitHere46","17661448splitHere46","for (arg : arguments)<newline46mondego>    System.out.println(arg);<newline46mondego>"
"5991splitHere46","17661448splitHere46","arg1<newline46mondego>arg2<newline46mondego>"
"5992splitHere46","17661448splitHere46","public class AddTwoNumbers {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>      if(args.length == 2) {<newline46mondego>        try {<newline46mondego>            int a = Integer.parseInt(args[0]);<newline46mondego>            int b = Integer.parseInt(args[1]);<newline46mondego>            System.out.println(<doubleQuotes46>a + b = <doubleQuotes46> + a + <doubleQuotes46> + <doubleQuotes46> + b + <doubleQuotes46> = <doubleQuotes46>+ (a + b));<newline46mondego>        } catch (NumberFormatException e) {<newline46mondego>            System.err.println(<doubleQuotes46>Invalid Input: Please enter numbers.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>      } else {<newline46mondego>         System.err.println(<doubleQuotes46>Missing Input: Please enter TWO numbers.<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5993splitHere46","17661448splitHere46","java AddTwoNumbers 2 3<newline46mondego>"
"5994splitHere46","17661448splitHere46","a + b = 2 + 3 = 5<newline46mondego>"
"5995splitHere46","17661754splitHere46","NavigableSet<String> tree = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);<newline46mondego>tree.addAll(Arrays.asList(<doubleQuotes46>he<doubleQuotes46>, <doubleQuotes46>help<doubleQuotes46>, <doubleQuotes46>helpless<doubleQuotes46>, <doubleQuotes46>hope<doubleQuotes46>));<newline46mondego>String[] queries = {<doubleQuotes46>h<doubleQuotes46>, <doubleQuotes46>he<doubleQuotes46>, <doubleQuotes46>hea<doubleQuotes46>};<newline46mondego>for (String query : queries) {<newline46mondego>    String higher = tree.ceiling(query);<newline46mondego>    System.out.println(query + <doubleQuotes46>: <doubleQuotes46> + higher.startsWith(query));<newline46mondego>}<newline46mondego>"
"5996splitHere46","17661754splitHere46","h: true<newline46mondego>he: true<newline46mondego>hea: false<newline46mondego>"
"5997splitHere46","17661771splitHere46","public class MinimalServlets {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Server server = new Server(8080);<newline46mondego>        ServletHandler handler = new ServletHandler();<newline46mondego>        server.setHandler(handler);<newline46mondego>        handler.addServletWithMapping(HelloServlet.class, <doubleQuotes46>/*<doubleQuotes46>);<newline46mondego>        server.start();<newline46mondego>        server.join();<newline46mondego>    }<newline46mondego><newline46mondego>    public static class HelloServlet extends HttpServlet {<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>            response.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>            response.setStatus(HttpServletResponse.SC_OK);<newline46mondego>            response.getWriter().println(<doubleQuotes46><h1>Hello SimpleServlet</h1><doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5998splitHere46","17661795splitHere46","Tomcat"
"5999splitHere46","17661795splitHere46","HTablePool"
"6000splitHere46","17661795splitHere46","HBase"
"6001splitHere46","17661795splitHere46","public class HTableManager {<newline46mondego><newline46mondego>    public static int HTABLE_POOL_SIZE = 15;<newline46mondego><newline46mondego>    private static HTableManager instance;<newline46mondego>    private static HTablePool hTablePool;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Private Constructor<newline46mondego>     */<newline46mondego>    private HTableManager() {<newline46mondego>        try {<newline46mondego>            Configuration config = HBaseConfiguration.create();<newline46mondego>            config.set(<doubleQuotes46>hbase.defaults.for.version.skip<doubleQuotes46>, <doubleQuotes46>false<doubleQuotes46>);<newline46mondego><newline46mondego>            hTablePool = new HTablePool(config, HTABLE_POOL_SIZE);<newline46mondego>        } catch (IOException ex) {<newline46mondego>            // Error handling<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @return The HbaseTableManager instance<newline46mondego>     */<newline46mondego>    public static HTableManager getInstance() {<newline46mondego>        if (instance == null) {<newline46mondego>            instance = new HTableManager();<newline46mondego>        }<newline46mondego>        return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Method used to retrieve a HTable instance.<newline46mondego>     * <newline46mondego>     * @param tableName The table name<newline46mondego>     * @return The HTableInterface instance<newline46mondego>     * @throws IOException <newline46mondego>     */<newline46mondego>    public synchronized HTableInterface getHTable(String tableName) throws IOException {<newline46mondego>        return hTablePool.getTable(tableName);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6002splitHere46","17661795splitHere46","HTableManager hTableManager = htableManager.getInstance();<newline46mondego>HTableInterface hTable = hTableManager.getHTable(<doubleQuotes46>yourTableName<doubleQuotes46>);<newline46mondego>...<newline46mondego>// Work with the hTable instance<newline46mondego>...<newline46mondego>// A call to the close method returns it to the pool<newline46mondego>hTable.close();<newline46mondego>"
"6003splitHere46","17661963splitHere46","@JsonSerialize"
"6004splitHere46","17661963splitHere46","Typing"
"6005splitHere46","17661963splitHere46","dynamic"
"6006splitHere46","17661963splitHere46","static"
"6007splitHere46","17661963splitHere46","static"
"6008splitHere46","17662005splitHere46","Password"
"6009splitHere46","17662005splitHere46","User"
"6010splitHere46","17662005splitHere46","@Entity<newline46mondego>@Table(name=<doubleQuotes46>passwords<doubleQuotes46>)<newline46mondego>public class Password {<newline46mondego>  @Id<newline46mondego>  User user;<newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"6011splitHere46","17662005splitHere46","userId"
"6012splitHere46","17662005splitHere46","@MapsId"
"6013splitHere46","17662005splitHere46","@Entity<newline46mondego>@Table(name=<doubleQuotes46>passwords<doubleQuotes46>)<newline46mondego>public class Password {<newline46mondego>  @Id<newline46mondego>  int userId;<newline46mondego><newline46mondego>  @MapsId<newline46mondego>  @OneToOne<newline46mondego>  @JoinColumn(name = <doubleQuotes46>user_id<doubleQuotes46>)<newline46mondego>  User user;<newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"6014splitHere46","17662021splitHere46","method/constructor/block"
"6015splitHere46","17662021splitHere46","method"
"6016splitHere46","17662021splitHere46","table.add(nameLabel);<newline46mondego>table.add(nameText).width(100);<newline46mondego>table.row();<newline46mondego>table.add(addressLabel);<newline46mondego>table.add(addressText).width(100);<newline46mondego>"
"6017splitHere46","17662283splitHere46","Ctrl+Shift+G"
"6018splitHere46","17662283splitHere46","Ctrl+Shift+G"
"6019splitHere46","17662382splitHere46","new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource($F{answers})<newline46mondego>"
"6020splitHere46","17662709splitHere46","ImageManipulationsActivity"
"6021splitHere46","17662709splitHere46","abstract"
"6022splitHere46","17662709splitHere46","abstract"
"6023splitHere46","17662709splitHere46","ImageManipulationsActivity"
"6024splitHere46","17662826splitHere46","Runtime.exec()"
"6025splitHere46","17662826splitHere46","String userPassword"
"6026splitHere46","17662826splitHere46","Process process = Runtime.getRuntime().exec(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>    ...<newline46mondego>    OutputStream child_stdin = process.getOutputStream();<newline46mondego>    BufferedWriter child_writer = new BufferedWriter(new OutputStreamWriter( child_stdin ));<newline46mondego>    child_writer.write( userPassword );<newline46mondego>    child_writer.newLine();  // suggested by OP<newline46mondego>    child_writer.flush();<newline46mondego>"
"6027splitHere46","17662964splitHere46","mTabHost.addTab(mTabHost.newTabSpec(<doubleQuotes46>simple<doubleQuotes46>).setIndicator(<doubleQuotes46>Simple<doubleQuotes46>),<newline46mondego>            FragmentStackSupport.CountingFragment.class, null);<newline46mondego>    mTabHost.addTab(mTabHost.newTabSpec(<doubleQuotes46>contacts<doubleQuotes46>).setIndicator(<doubleQuotes46>Contacts<doubleQuotes46>),<newline46mondego>            LoaderCursorSupport.CursorLoaderListFragment.class, null);<newline46mondego>    mTabHost.addTab(mTabHost.newTabSpec(<doubleQuotes46>custom<doubleQuotes46>).setIndicator(<doubleQuotes46>Custom<doubleQuotes46>),<newline46mondego>            LoaderCustomSupport.AppListFragment.class, null);<newline46mondego>    mTabHost.addTab(mTabHost.newTabSpec(<doubleQuotes46>throttle<doubleQuotes46>).setIndicator(<doubleQuotes46>Throttle<doubleQuotes46>),<newline46mondego>            LoaderThrottleSupport.ThrottledLoaderListFragment.class, null);<newline46mondego>"
"6028splitHere46","17662975splitHere46","uploadSucceeded"
"6029splitHere46","17662975splitHere46","file"
"6030splitHere46","17662975splitHere46","byte[]"
"6031splitHere46","17662975splitHere46","byte[]"
"6032splitHere46","17663016splitHere46","ObjectOutputStream"
"6033splitHere46","17663016splitHere46","buffer"
"6034splitHere46","17663016splitHere46","output.writeObject(buffer);//send bytes<newline46mondego>output.reset(); // force buffer to be fully written on next pass through loop<newline46mondego>"
"6035splitHere46","17663044splitHere46","terminal$ android sdk"
"6036splitHere46","17663044splitHere46","buildscript {<newline46mondego>    repositories {<newline46mondego>        mavenCentral()<newline46mondego>    }<newline46mondego>    dependencies {<newline46mondego>        classpath 'com.android.tools.build:gradle:0.5.+'<newline46mondego>    }<newline46mondego>}<newline46mondego>apply plugin: 'android'<newline46mondego><newline46mondego>dependencies {<newline46mondego>    compile 'com.google.android.gms:play-services:3.1.36'<newline46mondego>}<newline46mondego><newline46mondego>android {<newline46mondego>    compileSdkVersion 17<newline46mondego>    buildToolsVersion <doubleQuotes46>17.0.0<doubleQuotes46><newline46mondego><newline46mondego>    defaultConfig {<newline46mondego>        minSdkVersion 8<newline46mondego>        targetSdkVersion 16<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6037splitHere46","17663048splitHere46","ActionBar actionBar = getActionBar();<newline46mondego>actionBar.setDisplayHomeAsUpEnabled(true);<newline46mondego>"
"6038splitHere46","17663259splitHere46","open file 1<newline46mondego>open file 2<newline46mondego>read lineA from file1<newline46mondego>read lineB from file2<newline46mondego>while (there is lineA and lineB) <newline46mondego>    if (key lineB < key lineA) <newline46mondego>        read lineB from file 2<newline46mondego>        continue loop<newline46mondego>    if (key lineB > key lineA)<newline46mondego>        read lineA from file 1<newline46mondego>        continue<newline46mondego>    // at this point, you have lineA and lineB with matching keys<newline46mondego>    process your data<newline46mondego>    read lineB from file 2<newline46mondego>"
"6039splitHere46","17663394splitHere46","String eppn = (String) request.getAttribute(<doubleQuotes46>eppn<doubleQuotes46>); // <-- no longer null"
"6040splitHere46","17663457splitHere46","messages.properties"
"6041splitHere46","17663457splitHere46","src"
"6042splitHere46","17663457splitHere46","ClassThatUsesAString.stringName=foo<newline46mondego>AnotherClass.stringName=bar<newline46mondego>AnotherClass.anotherString=baz<newline46mondego>"
"6043splitHere46","17663457splitHere46","ResourceBundle rsrc = ResourceBundle.getBundle(<doubleQuotes46>messages<doubleQuotes46>);<newline46mondego>"
"6044splitHere46","17663457splitHere46","rsrc.getString(stringName);<newline46mondego>"
"6045splitHere46","17663457splitHere46","FooClass"
"6046splitHere46","17663457splitHere46","quxString"
"6047splitHere46","17663457splitHere46","FooClass.quxString=waldo was here<newline46mondego>"
"6048splitHere46","17663457splitHere46","rsrc.getString(<doubleQuotes46>FooClass.quxString<doubleQuotes46>);<newline46mondego>"
"6049splitHere46","17663511splitHere46","glClear()"
"6050splitHere46","17663511splitHere46","isCloseRequested()"
"6051splitHere46","17663591splitHere46","src/components/"
"6052splitHere46","17663591splitHere46","src/components"
"6053splitHere46","17663647splitHere46","DataInputStream"
"6054splitHere46","17663647splitHere46","readFully"
"6055splitHere46","17663647splitHere46","byte[] data = new byte[lengthtoread];<newline46mondego>DataInputStream in = new DataInputStream(mmInStream);<newline46mondego>in.readFully(data);<newline46mondego>"
"6056splitHere46","17663649splitHere46","if(testInfo.getCLISessionOrDBSessionOrScreens().get(i) instanceof ScreensType)<newline46mondego>{<newline46mondego>    ScreensType screenTypeObj = (ScreensType) testInfo.getCLISessionOrDBSessionOrScreens().get(i);<newline46mondego>    screenTypeObj.callYourDesiredMethod();<newline46mondego>}<newline46mondego>"
"6057splitHere46","17663717splitHere46","if (c==read) {<newline46mondego><newline46mondego>        new Thread(new Runnable() {<newline46mondego><newline46mondego>              public void run() {<newline46mondego>                  try {<newline46mondego>                      ReadFile(path);<newline46mondego>                      } catch (IOException ex) {<newline46mondego>                          ex.printStackTrace();<newline46mondego>                      }<newline46mondego>              }<newline46mondego>        }).start();<newline46mondego>    }<newline46mondego>"
"6058splitHere46","17663826splitHere46","static int obtainNumber() { return 42; }"
"6059splitHere46","17663826splitHere46","static int obtain<b>\ufeff</b>Number() { return 3; }"
"6060splitHere46","17663826splitHere46","static int obtain<b>\ufeff\ufeff</b>Number() { return -1; }"
"6061splitHere46","17663881splitHere46","<dependency><newline46mondego>    <groupId>org.apache.xmlgraphics</groupId><newline46mondego>    <artifactId>xmlgraphics-commons</artifactId><newline46mondego>    <version>1.5</version><newline46mondego></dependency><newline46mondego>"
"6062splitHere46","17663962splitHere46","public class GCMIntentService extends GCMBaseIntentService{<newline46mondego>private static ArrayList<Message> messageQueue = new ArrayList<Message>();<newline46mondego>private static boolean isProcessingMessage = false;<newline46mondego><newline46mondego>onMessage(Context context, Intent intent)<newline46mondego>{<newline46mondego> if(isProcessingMessage)<newline46mondego>   {<newline46mondego>    Message currentMsg = new Message();//Create a instance of message and put it in arrayList<newline46mondego><newline46mondego>   }<newline46mondego>   else{<newline46mondego>         isProcessingMessage = true;<newline46mondego>          for(int i  = 0; i < messageQueue.size(); i++)<newline46mondego>             {//  Process all your messages in the queue here<newline46mondego>               messageQueue.remove(i);<newline46mondego>              }<newline46mondego>              isProcessingMessage = false;<newline46mondego>       }<newline46mondego>}<newline46mondego><newline46mondego> private class Message{<newline46mondego><newline46mondego>//In this class you can configure your message that you are going to queue.<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6063splitHere46","17664082splitHere46","{<newline46mondego>    <doubleQuotes46>orgId<doubleQuotes46>: null,<newline46mondego>    <doubleQuotes46>orgName<doubleQuotes46>: <doubleQuotes46>Department of JSON<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>orgProfile<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>publicName<doubleQuotes46>: <doubleQuotes46><doubleQuotes46>,<newline46mondego>        <doubleQuotes46>numHits<doubleQuotes46>: 29<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6064splitHere46","17664082splitHere46","{<newline46mondego>    <doubleQuotes46>orgName<doubleQuotes46>: <doubleQuotes46>Department of JSON<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>orgProfile<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>publicName<doubleQuotes46>: <doubleQuotes46><doubleQuotes46>,<newline46mondego>        <doubleQuotes46>numHits<doubleQuotes46>: 29<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6065splitHere46","17664117splitHere46","HTTPResponse response = URLFetchServiceFactory.getURLFetchService()<newline46mondego>            .fetch(new URL(<doubleQuotes46>url_to_fetch<doubleQuotes46>));<newline46mondego>List<HTTPHeader> headers = response.getHeaders();<newline46mondego><newline46mondego>for (HTTPHeader h : headers) {<newline46mondego>    if (h.getName().equals(<doubleQuotes46>Content-Type<doubleQuotes46>)) {<newline46mondego>        /*<newline46mondego>        * could be text/html; charset=iso-8859-1.<newline46mondego>        */<newline46mondego>        if (h.getValue().startsWith(<doubleQuotes46>text/html<doubleQuotes46>)) {<newline46mondego>            /* TODO do sth. */<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6066splitHere46","17664128splitHere46","SwingWorker"
"6067splitHere46","17664128splitHere46","Supervisor"
"6068splitHere46","17664128splitHere46","CountDownLatch"
"6069splitHere46","17664128splitHere46","Applet"
"6070splitHere46","17664128splitHere46","SwingWorker"
"6071splitHere46","17664128splitHere46","SwingWorker"
"6072splitHere46","17664128splitHere46","done"
"6073splitHere46","17664128splitHere46","PropertyChangeListener"
"6074splitHere46","17664128splitHere46","ColorIcon"
"6075splitHere46","17664128splitHere46","setProgress()"
"6076splitHere46","17664128splitHere46","PropertyChangeEvent"
"6077splitHere46","17664197splitHere46","address"
"6078splitHere46","17664197splitHere46","Field"
"6079splitHere46","17664197splitHere46","Field address = Something.class.getField(<doubleQuotes46>address<doubleQuotes46>);<newline46mondego>Template annotation = address.getAnnotation(Template.class);<newline46mondego>"
"6080splitHere46","17664197splitHere46","target"
"6081splitHere46","17664197splitHere46","Class clazz = annotation.target();<newline46mondego>"
"6082splitHere46","17664267splitHere46","session.setAttribute( ATT_LIST_CPT, listCpts );<newline46mondego>"
"6083splitHere46","17664267splitHere46","${ sessionScope.listCpts }<newline46mondego>"
"6084splitHere46","17664267splitHere46","${listCpts}<newline46mondego>"
"6085splitHere46","17664286splitHere46","HashSet<Integer>"
"6086splitHere46","17664286splitHere46","List<Integer>"
"6087splitHere46","17664286splitHere46","list1"
"6088splitHere46","17664286splitHere46","Set<Integer>"
"6089splitHere46","17664286splitHere46","for (Iterator<AClass> it = list1.iterator(); it.hasNext(); ) {<newline46mondego>    AClass c = it.next();<newline46mondego>    if (set.contains(c.getNum())) {<newline46mondego>        it.remove();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6090splitHere46","17664383splitHere46","doc.book.title"
"6091splitHere46","17664383splitHere46","#assign"
"6092splitHere46","17664383splitHere46","doc"
"6093splitHere46","17664455splitHere46","<root level=<doubleQuotes46>info<doubleQuotes46>><newline46mondego>    <appender-ref ref=<doubleQuotes46>Console<doubleQuotes46>/><newline46mondego>    <appender-ref ref=<doubleQuotes46>AsyncMailer<doubleQuotes46>/><newline46mondego></root><newline46mondego>"
"6094splitHere46","17664455splitHere46","<root level=<doubleQuotes46>trace<doubleQuotes46>><newline46mondego>    <appender-ref ref=<doubleQuotes46>A<doubleQuotes46> level=<doubleQuotes46>info<doubleQuotes46> /><newline46mondego>    <appender-ref ref=<doubleQuotes46>B<doubleQuotes46> level=<doubleQuotes46>debug<doubleQuotes46> /><newline46mondego></root><newline46mondego>"
"6095splitHere46","17664546splitHere46","// MyEnum e;<newline46mondego>MyEnum next = MyEnum.values()[e.ordinal() + 1];<newline46mondego>"
"6096splitHere46","17664546splitHere46","public enum MyEnum {<newline46mondego><newline46mondego>    Alpha,<newline46mondego>    Bravo,<newline46mondego>    Charlie {<newline46mondego>        @Override<newline46mondego>        public MyEnum next() {<newline46mondego>            return null; // see below for options for this line<newline46mondego>        };<newline46mondego>    };<newline46mondego><newline46mondego>    public MyEnum next() {<newline46mondego>        // No bounds checking required here, because the last instance overrides<newline46mondego>        return values()[ordinal() + 1];<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6097splitHere46","17664546splitHere46","// MyEnum e;<newline46mondego>e = e.next();<newline46mondego>"
"6098splitHere46","17664546splitHere46","next()"
"6099splitHere46","17664546splitHere46","return null; // there is no <doubleQuotes46>next<doubleQuotes46>"
"6100splitHere46","17664546splitHere46","return this; // capped at the last instance"
"6101splitHere46","17664546splitHere46","return values()[0]; // rollover to the first"
"6102splitHere46","17664546splitHere46","throw new RuntimeException(); // or a subclass like NoSuchElementException"
"6103splitHere46","17664546splitHere46","values()"
"6104splitHere46","17664546splitHere46","next()"
"6105splitHere46","17664546splitHere46","public MyEnum next() {<newline46mondego>    if (ordinal() > values() - 1)<newline46mondego>        throw new NoSuchMethodException();<newline46mondego>    return values()[ordinal() + 1];<newline46mondego>}<newline46mondego>"
"6106splitHere46","17664546splitHere46","ordinal()"
"6107splitHere46","17664546splitHere46","values()"
"6108splitHere46","17664577splitHere46","List"
"6109splitHere46","17664577splitHere46","Collection"
"6110splitHere46","17664577splitHere46","List"
"6111splitHere46","17664577splitHere46","List"
"6112splitHere46","17664577splitHere46","Iterable"
"6113splitHere46","17664751splitHere46","setContainerSummaryMap"
"6114splitHere46","17664751splitHere46","public void setContainerSummaryMap(Map<String, ? extends Map<String, Integer>> map)<newline46mondego>"
"6115splitHere46","17664751splitHere46","convertContSummaryMap"
"6116splitHere46","17664751splitHere46","public HashMap<String, Map<String, Integer>> convertContSummaryMap()<newline46mondego>"
"6117splitHere46","17664991splitHere46","filter"
"6118splitHere46","17664991splitHere46","Linear, Linear"
"6119splitHere46","17664991splitHere46","region.getTexture()"
"6120splitHere46","17664991splitHere46","setFilter(...)"
"6121splitHere46","17665114splitHere46","@SuppressWarnings"
"6122splitHere46","17665114splitHere46","public <E extends Entity> List<E> getEntities(Class<E> type) {<newline46mondego><newline46mondego>    List<E> list = new ArrayList<>();<newline46mondego><newline46mondego>    for (Entity e : entities) {<newline46mondego>        if (type.isInstance(e)) {<newline46mondego>            list.add(type.cast(e));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return Collections.unmodifiableList(list);<newline46mondego>}<newline46mondego>"
"6123splitHere46","17665114splitHere46","public <E extends Entity> ImmutableList<E> getEntities(Class<E> type) {<newline46mondego>    return ImmutableList.copyOf(Iterables.filter(entities, type));<newline46mondego>}<newline46mondego>"
"6124splitHere46","17665238splitHere46","java.net."
"6125splitHere46","17665439splitHere46","umask 022"
"6126splitHere46","17665439splitHere46","WARN  [main] datanode.DataNode(1577): Invalid directory in dfs.data.dir: Incorrect permission for /.../dfs/data/data2, expected: rwxr-xr-x, while actual: rwxrwxr-x<newline46mondego>"
"6127splitHere46","17665598splitHere46","JTextField"
"6128splitHere46","17665598splitHere46","JLabel"
"6129splitHere46","17665598splitHere46","JPanel"
"6130splitHere46","17665598splitHere46","public class RegistrationPanel extends JPanel {<newline46mondego><newline46mondego>    JTextField jtfName;<newline46mondego>    JComboBox cbType;<newline46mondego>    JComboBox cbSex;<newline46mondego><newline46mondego>    // Constructor and other code //<newline46mondego>}<newline46mondego>"
"6131splitHere46","17665598splitHere46","RegistrationPanel"
"6132splitHere46","17665598splitHere46","public String getPetName() {<newline46mondego>    return jtfName.getText();<newline46mondego>}<newline46mondego><newline46mondego>public void setPetName(String name) {<newline46mondego>    jtfName.setText(name);<newline46mondego>}<newline46mondego><newline46mondego>// Other setters and getters //<newline46mondego>"
"6133splitHere46","17665598splitHere46","CardLayout"
"6134splitHere46","17665598splitHere46","enum"
"6135splitHere46","17665635splitHere46","<welcome-file-list><newline46mondego>        <welcome-file>index.jsp</welcome-file><newline46mondego>  </welcome-file-list><newline46mondego><newline46mondego>  <servlet><newline46mondego>      <servlet-name>StaticServlet</servlet-name><newline46mondego>      <jsp-file>/index.jsp</jsp-file><newline46mondego>  </servlet><newline46mondego><newline46mondego>  <servlet-mapping><newline46mondego>      <servlet-name>StaticServlet</servlet-name><newline46mondego>      <url-pattern>/app</url-pattern><newline46mondego>  </servlet-mapping><newline46mondego>"
"6136splitHere46","17665635splitHere46","<%@ include file=<doubleQuotes46>index.html<doubleQuotes46> %><newline46mondego>"
"6137splitHere46","17665635splitHere46","<base href=<doubleQuotes46>/app<doubleQuotes46> /><newline46mondego>"
"6138splitHere46","17665641splitHere46","while"
"6139splitHere46","17665641splitHere46","while (i < 10) {<newline46mondego>    try {<newline46mondego>        System.out.print(<doubleQuotes46>Please enter your number\n<doubleQuotes46>);<newline46mondego>        numberlist[i] = input.nextInt();<newline46mondego>        System.out.print(<doubleQuotes46>Would you like to enter another number? (y/n)\n<doubleQuotes46>);<newline46mondego>        yn = input.next();<newline46mondego>        i++;<newline46mondego>        if (i == 10) {<newline46mondego>            System.out.println(<doubleQuotes46>You reached the maximum amount of numbers\n<doubleQuotes46>);<newline46mondego>            break;<newline46mondego>        }<newline46mondego><newline46mondego>        if (yn.equals(<doubleQuotes46>n<doubleQuotes46>))<newline46mondego>            break;<newline46mondego>        else if (!yn.equals(<doubleQuotes46>y<doubleQuotes46>))<newline46mondego>            makeUserUnderstand(input,<newline46mondego>                    <doubleQuotes46>Please only enter a 'y' for yes or 'n' for no next time.<doubleQuotes46>);<newline46mondego><newline46mondego>    } catch (InputMismatchException e) {<newline46mondego>        makeUserUnderstand(input,<newline46mondego>                <doubleQuotes46>Please enter the correct number (integers only) next time.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6140splitHere46","17665641splitHere46","private static void makeUserUnderstand(Scanner input, String msg) {<newline46mondego>    while (true) {<newline46mondego>        System.out.println(msg);<newline46mondego>        System.out.println(<doubleQuotes46>Do you understand? Type 'y' to continue\n<doubleQuotes46>);<newline46mondego>        if (input.next().equals(<doubleQuotes46>y<doubleQuotes46>))<newline46mondego>            break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6141splitHere46","17666009splitHere46","KeyListener"
"6142splitHere46","17666009splitHere46","JApplet"
"6143splitHere46","17666009splitHere46","JRootPane"
"6144splitHere46","17666009splitHere46","JLayeredPane"
"6145splitHere46","17666073splitHere46","AsyncTask"
"6146splitHere46","17666073splitHere46","TextView"
"6147splitHere46","17666073splitHere46","onPostExecute()"
"6148splitHere46","17666073splitHere46","doInBackground"
"6149splitHere46","17666073splitHere46","AsyncTask"
"6150splitHere46","17666101splitHere46","init(ServletConfig)"
"6151splitHere46","17666101splitHere46","@Override<newline46mondego>public void init(ServletConfig config) throws ServletException {<newline46mondego>    super.init(config); // would set: this.config = config;<newline46mondego>    this.servletConfig = config;<newline46mondego>}<newline46mondego>"
"6152splitHere46","17666101splitHere46","init(ServletConfig)"
"6153splitHere46","17666101splitHere46","init()"
"6154splitHere46","17666101splitHere46","@Override<newline46mondego>public void init() throws ServletException {<newline46mondego>    this.servletConfig = config;<newline46mondego>}<newline46mondego>"
"6155splitHere46","17666101splitHere46","GenericServlet#init(ServletConfig)"
"6156splitHere46","17666101splitHere46","init()"
"6157splitHere46","17666101splitHere46","@Override<newline46mondego>public void init(ServletConfig config) throws ServletException {<newline46mondego>    this.config = config;<newline46mondego>    this.init();<newline46mondego>}<newline46mondego>"
"6158splitHere46","17666230splitHere46","<dependency><newline46mondego>  <groupId>org.springframework</groupId><newline46mondego>  <artifactId>spring-oxm</artifactId><newline46mondego>  <version>${org.springframework-version}</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>  <groupId>com.thoughtworks.xstream</groupId><newline46mondego>  <artifactId>xstream</artifactId><newline46mondego>  <version>1.4.4</version><newline46mondego></dependency><newline46mondego>"
"6159splitHere46","17666230splitHere46","<bean id=<doubleQuotes46>xstreamMarshaller<doubleQuotes46> class=<doubleQuotes46>org.springframework.oxm.xstream.XStreamMarshaller<doubleQuotes46>/><newline46mondego>"
"6160splitHere46","17666230splitHere46","public class MyMessage {<newline46mondego>  private String message;<newline46mondego><newline46mondego>  // getters & setters<newline46mondego>}<newline46mondego>"
"6161splitHere46","17666230splitHere46","@Controller<newline46mondego>public class MyController {<newline46mondego><newline46mondego>  @Autowired private Marshaller marshaller;<newline46mondego><newline46mondego>  @RequestMapping(<doubleQuotes46>/helloxml<doubleQuotes46>)<newline46mondego>  public MarshallingView helloxml(Model model) {<newline46mondego>    MyMessage msg = new MyMessage();<newline46mondego>    msg.setMessage(<doubleQuotes46>hello world<doubleQuotes46>);<newline46mondego>    model.addAttribute(<doubleQuotes46>msg<doubleQuotes46>, msg);<newline46mondego><newline46mondego>    MarshallingView marshallingView = new MarshallingView(marshaller);<newline46mondego>    marshallingView.setModelKey(<doubleQuotes46>msg<doubleQuotes46>); // set what model attribute to display as xml<newline46mondego><newline46mondego>    return marshallingView;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6162splitHere46","17666230splitHere46","/helloxml"
"6163splitHere46","17666230splitHere46","<com.gerrydevstory.xmlview.MyMessage><newline46mondego>  <message>hello world</message><newline46mondego></com.gerrydevstory.xmlview.MyMessage><newline46mondego>"
"6164splitHere46","17666309splitHere46","TypeB"
"6165splitHere46","17666309splitHere46","TypeA"
"6166splitHere46","17666309splitHere46","TypeA"
"6167splitHere46","17666309splitHere46","TypeB"
"6168splitHere46","17666396splitHere46","GameObject"
"6169splitHere46","17666396splitHere46","interface GameObjectFactory {<newline46mondego>    GameObject create(); // this could also take arguments like x, y, and parent<newline46mondego>}<newline46mondego><newline46mondego>private static final Map<Integer, GameObjectFactory> FACTORIES_BY_ID;<newline46mondego>static {<newline46mondego>    final Map<Integer, GameObjectFactory> factoriesById = new HashMap<>();<newline46mondego><newline46mondego>    // ID 42 is for walls<newline46mondego>    factoriesById.put(42, new GameObjectFactory() {<newline46mondego>        @Override<newline46mondego>        public GameObject create() {<newline46mondego>            return new Wall();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    //etc.<newline46mondego><newline46mondego>    FACTORIES_BY_ID = factoriesById;<newline46mondego>}<newline46mondego>"
"6170splitHere46","17666396splitHere46","private static final GameObjectFactory[] FACTORIES = {<newline46mondego>    // ID 0 is for walls<newline46mondego>    new GameObjectFactory() {<newline46mondego>        @Override<newline46mondego>        public GameObject create() {<newline46mondego>            return new Wall();<newline46mondego>        }<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"6171splitHere46","17666396splitHere46","enum GameObjectFactory {<newline46mondego><newline46mondego>    WALL(42) {<newline46mondego>        @Override<newline46mondego>        GameObject create() {<newline46mondego>            return new Wall();<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    private final int id;<newline46mondego><newline46mondego>    private GameObjectFactory(int id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    abstract GameObject create();<newline46mondego><newline46mondego>    static GameObjectFactory getById(int id) {<newline46mondego>        for (GameObjectFactory factory : values()) {<newline46mondego>            if (factory.id == id) {<newline46mondego>                return factory;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        throw IllegalArgumentException(<doubleQuotes46>Invalid ID: <doubleQuotes46> + id);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6172splitHere46","17666419splitHere46","String.valueOf(resultSet.getDouble(i))<newline46mondego>"
"6173splitHere46","17666419splitHere46","204.40 == 204.4        // -> true<newline46mondego>String.valueOf(204.40) // -> <doubleQuotes46>204.4<doubleQuotes46><newline46mondego>"
"6174splitHere46","17666463splitHere46","//CRAFTING TAB<newline46mondego>    TabSpec craftTabSpec = tabHost.newTabSpec(<doubleQuotes46>Crafting<doubleQuotes46>);      <newline46mondego>    craftTabSpec.setIndicator(<doubleQuotes46><doubleQuotes46>,getResources().getDrawable(R.drawable.crafticonstate));<newline46mondego>    Intent craftIntent = new Intent(this, Bifrost.class);<newline46mondego>    craftTabSpec.setContent(craftIntent);<newline46mondego>"
"6175splitHere46","17666596splitHere46","public class rtd<newline46mondego>{<newline46mondego>    public static int[] rollthedice(int numSides, int numRolls)<newline46mondego>    {<newline46mondego>        // An array of total number of rolls (NOT sides) to save the result of all rolls<newline46mondego>        int[] rollCounter = new int[numRolls];<newline46mondego><newline46mondego>        // Let's roll n-th times where n is numRolls<newline46mondego>        for (int counter = 0; counter < numRolls; counter++)<newline46mondego>        {<newline46mondego>            // Let's get a random number between 1 to numSides (A die usually has 6 sides with 1 to 6 dots)<newline46mondego>            int randomSide = getRand(1, numSides);<newline46mondego><newline46mondego>            // Let's store the current roll result in array<newline46mondego>            rollCounter[counter] = randomSide;<newline46mondego>        }<newline46mondego><newline46mondego>        return rollCounter;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * This method returns a number between a given range inclusive<newline46mondego>     */ <newline46mondego>    public static int getRand(int min, int max)<newline46mondego>    {<newline46mondego>        return min + (int)(Math.random() * ((max - min) + 1));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6176splitHere46","17666596splitHere46","public class tester<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {            <newline46mondego>        int[] results = rtd.rollthedice(6, 20);<newline46mondego><newline46mondego>        // Since counter starts with 0, we always add 1 so we can read from 1 to 20            <newline46mondego><newline46mondego>        for (int counter = 0; counter < results.length; counter++)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Roll Number: <doubleQuotes46> + (counter + 1) + <doubleQuotes46> Side Picked: <doubleQuotes46> + results[counter]);            <newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6177splitHere46","17666616splitHere46","w=w.toUpperCase().replace(w.substring(1), w.substring(1).toLowerCase())<newline46mondego>"
"6178splitHere46","17666616splitHere46","w.substring(1)"
"6179splitHere46","17666616splitHere46","w.toUpperCase"
"6180splitHere46","17666616splitHere46","w = <doubleQuotes46>MY NAME IS ALEX<doubleQuotes46>.replace(<doubleQuotes46>y Name Is Alex<doubleQuotes46>, <doubleQuotes46>y name is alex<doubleQuotes46>);<newline46mondego>"
"6181splitHere46","17666616splitHere46","String"
"6182splitHere46","17666616splitHere46","String"
"6183splitHere46","17666616splitHere46","w=w.toUpperCase(); // <doubleQuotes46>MY NAME IS ALEX<doubleQuotes46><newline46mondego> w=<doubleQuotes46>MY NAME IS ALEX<doubleQuotes46>.replace(<doubleQuotes46>Y NAME IS ALEX<doubleQuotes46>, <doubleQuotes46>y name is alex<doubleQuotes46>);<newline46mondego>"
"6184splitHere46","17666616splitHere46","String"
"6185splitHere46","17666672splitHere46","String[]"
"6186splitHere46","17666672splitHere46","int a = 10;<newline46mondego>list.add(a);<newline46mondego>a = 20;<newline46mondego>list.add(a);<newline46mondego>"
"6187splitHere46","17666672splitHere46","a"
"6188splitHere46","17666672splitHere46","a"
"6189splitHere46","17666672splitHere46","String[] pair1 = {<doubleQuotes46>ChildA<doubleQuotes46>,<doubleQuotes46>Parent of ChildA<doubleQuotes46>};<newline46mondego>String[] pare2 = {<doubleQuotes46>ChildB<doubleQuotes46>, <doubleQuotes46>Parent of ChildB<doubleQuotes46>};<newline46mondego>//adding values to list<newline46mondego>list.add(pair1);<newline46mondego>list.add(pair2);<newline46mondego>"
"6190splitHere46","17666672splitHere46","list.add(new String[]{<doubleQuotes46>ChildA<doubleQuotes46>,<doubleQuotes46>Parent of ChildA<doubleQuotes46>});<newline46mondego>list.add(new String[]{<doubleQuotes46>ChildB<doubleQuotes46>,<doubleQuotes46>Parent of ChildB<doubleQuotes46>});<newline46mondego>"
"6191splitHere46","17666680splitHere46","SwingUtilities.invokeLater(new Runnable()<newline46mondego>{<newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>        if (code.getDocument().getLength() >= 13)<newline46mondego>        {                  <newline46mondego>            code.setText(<doubleQuotes46><doubleQuotes46>);                <newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"6192splitHere46","17666724splitHere46","<input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>uploadedFile<doubleQuotes46> />"
"6193splitHere46","17666724splitHere46","<form action=<doubleQuotes46><%= blobstoreService.createUploadUrl(<doubleQuotes46>/uploadimage<doubleQuotes46>) %><doubleQuotes46>"
"6194splitHere46","17666724splitHere46","public void doGet( HttpServletRequest request, HttpServletResponse response )   throws ServletException, IOException {<newline46mondego>    BlobstoreService blobstoreService = BlobstoreServiceFactory.getBlobstoreService();<newline46mondego>    response.setContentType(<doubleQuotes46>text/html<doubleQuotes46>);<newline46mondego>    response.setCharacterEncoding( <doubleQuotes46>UTF-8<doubleQuotes46> );<newline46mondego>    PrintWriter out = response.getWriter();<newline46mondego>    out.println(blobstoreService.createUploadUrl(<doubleQuotes46>/uploadimage<doubleQuotes46>)); <newline46mondego>}<newline46mondego>"
"6195splitHere46","17666724splitHere46","name=<doubleQuotes46>uploadedFile<doubleQuotes46>"
"6196splitHere46","17666724splitHere46","file0"
"6197splitHere46","17666724splitHere46","BlobstoreService blobstoreService = BlobstoreServiceFactory.getBlobstoreService();<newline46mondego>Map<String, List<BlobKey>> blobs = blobstoreService.getUploads(request);<newline46mondego>List<BlobKey> blobKeys = blobs.get(<doubleQuotes46>file0<doubleQuotes46>); //Before was: uploadedFile<newline46mondego>"
"6198splitHere46","17666724splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>setName<doubleQuotes46> value=<doubleQuotes46>${ setName }<doubleQuotes46>><newline46mondego><input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>imageId<doubleQuotes46> value=<doubleQuotes46>3<doubleQuotes46>><newline46mondego>"
"6199splitHere46","17666724splitHere46","$('#image3').gaeDropload( {<newline46mondego>        extraFormData: { setName: <doubleQuotes46>${ setName }<doubleQuotes46>, imageId: 4 },<newline46mondego>        dragover: function() { //Show we can drop here<newline46mondego>            $('#image3').css('background', 'red');<newline46mondego>        },<newline46mondego>        dragleave: function() { //Show we cannot drop anymore<newline46mondego>            $('#image3').css('background', '');<newline46mondego>        },<newline46mondego>        afterDrop: function() { //Show we cannot drop anymore<newline46mondego>            $('#image3').css('background', '');<newline46mondego>        }<newline46mondego>    }); //gaeDropload<newline46mondego>"
"6200splitHere46","17666724splitHere46","<div class=<doubleQuotes46>span1 thumbnail<doubleQuotes46> id=<doubleQuotes46>image3<doubleQuotes46> ><img src=<doubleQuotes46><%=set.getImageUrl(3)%><doubleQuotes46> alt=<doubleQuotes46><doubleQuotes46>></div><newline46mondego>"
"6201splitHere46","17666724splitHere46","dropSuccess: function() { //Async call to get the new uploaded image<newline46mondego>            $.ajax({<newline46mondego>                url: '/blobimage?setName=${ setName }&buttonId=4',<newline46mondego>                async: true,  //useless to specify, this is default<newline46mondego>                success: function(data) {<newline46mondego>                    $('#image3 > img').attr('src', data); //get img inside div<newline46mondego>                }<newline46mondego>            });<newline46mondego>"
"6202splitHere46","17666724splitHere46","ImagesService imagesService = ImagesServiceFactory.getImagesService();<newline46mondego>imagesService.getServingUrl(ServingUrlOptions.Builder.withBlobKey(images[index]));<newline46mondego>"
"6203splitHere46","17666750splitHere46","public void set (int left, int top, int right, int bottom)"
"6204splitHere46","17666895splitHere46","public class CPUPlayer {<newline46mondego><newline46mondego>    public int startX = 550;    // starting positions (x, y), always locked<newline46mondego>    public int startY = 150;<newline46mondego><newline46mondego>    private int moveSpeed = 2;<newline46mondego>    private boolean movingUp = true;<newline46mondego>    public int score = 0;    // init<newline46mondego><newline46mondego>    public void move() {<newline46mondego>        if(movingUp) {<newline46mondego>            startY -= moveSpeed;<newline46mondego>            if (startY <= -10)<newline46mondego>                movingUp = false;    // switch directions<newline46mondego>        } else {                     // Should be moving down<newline46mondego>            startY += moveSpeed;<newline46mondego>            if (startY >= 338)<newline46mondego>                movingUp = true;    // switch directions<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6205splitHere46","17667074splitHere46","List<User> users = (List<User>)session<newline46mondego>    .createQuery(<doubleQuotes46>from User as user where user.role.x = true or user.role.y = true<doubleQuotes46>)<newline46mondego>    .list();<newline46mondego>"
"6206splitHere46","17667197splitHere46","xx= xx.replaceAll(<doubleQuotes46>x-zipcode<doubleQuotes46>, <doubleQuotes46>x-zipcode=<doubleQuotes46> + zip);"
"6207splitHere46","17667197splitHere46","xx = xx.replaceAll(<doubleQuotes46>12345<doubleQuotes46>, <doubleQuotes46>67890<doubleQuotes46>);"
"6208splitHere46","17667327splitHere46","int"
"6209splitHere46","17667327splitHere46","a"
"6210splitHere46","17667327splitHere46","b"
"6211splitHere46","17667327splitHere46","c"
"6212splitHere46","17667327splitHere46","double"
"6213splitHere46","17667327splitHere46","b*b"
"6214splitHere46","17667327splitHere46","4*a*c"
"6215splitHere46","17667589splitHere46","String[]"
"6216splitHere46","17667589splitHere46","Object..."
"6217splitHere46","17667589splitHere46","String[]"
"6218splitHere46","17667589splitHere46","Object[]"
"6219splitHere46","17667589splitHere46","Object"
"6220splitHere46","17667589splitHere46","tva.varArgsMethod((Object[])args);    // you probably want that<newline46mondego><newline46mondego> tva.varArgsMethod( (Object) args);    // you probably don't want that, but who knows?<newline46mondego>"
"6221splitHere46","17667589splitHere46","Object[]"
"6222splitHere46","17667589splitHere46","java.util.Arrays.asList(Object[])"
"6223splitHere46","17667589splitHere46","java.util.Arrays.asList(Object...)"
"6224splitHere46","17667710splitHere46","$ ls *.java<newline46mondego>Child.java   Driver.java  Parent.java<newline46mondego>"
"6225splitHere46","17667710splitHere46","$ cat *.java<newline46mondego>// file Child.java<newline46mondego>public class Child extends Parent {<newline46mondego>    public Child() {<newline46mondego>        System.out.println(<doubleQuotes46>  I'm the Child...<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// file Driver.java<newline46mondego>public class Driver {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Parent parent = new Parent();<newline46mondego>        parent.hello();<newline46mondego>        Child child = new Child();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// file Parent.java<newline46mondego>public class Parent {<newline46mondego>    public Parent() {<newline46mondego>    }<newline46mondego>    public void hello() {<newline46mondego>        System.out.println(<doubleQuotes46>Hello from the parent.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6226splitHere46","17667710splitHere46","$ javac *.java<newline46mondego>"
"6227splitHere46","17667710splitHere46","$ java Driver<newline46mondego>Hello from the parent.<newline46mondego>  I'm the Child...<newline46mondego>"
"6228splitHere46","17667723splitHere46","try {<newline46mondego>     account.withdraw(passNegative);<newline46mondego>}<newline46mondego>catch(NegativeWithdraw | NotEnoughBalance e) {<newline46mondego>    System.out.println(e.getMessage());<newline46mondego>}<newline46mondego>"
"6229splitHere46","17667723splitHere46","try {<newline46mondego>    account.withdraw(passNegative);<newline46mondego>} catch(NegativeWithdraw e) {<newline46mondego>    System.out.println(e.getMessage());<newline46mondego>} catch(NotEnoughBalance e) {<newline46mondego>    System.out.println(e.getMessage());<newline46mondego>}<newline46mondego>"
"6230splitHere46","17667746splitHere46","getColumnCount"
"6231splitHere46","17667746splitHere46","getRowCount"
"6232splitHere46","17667746splitHere46","JTable"
"6233splitHere46","17667746splitHere46","setModel"
"6234splitHere46","17667882splitHere46","token1 = token.nextToken();                    //Getting your token<newline46mondego>    for (int t = 0; t<token1.length(); t++)    //For each character in token<newline46mondego>    {<newline46mondego>        wordLengthCount[token1.length()-1]++;  //Increment count array<newline46mondego>    }<newline46mondego>"
"6235splitHere46","17667882splitHere46","String token1"
"6236splitHere46","17667882splitHere46","1 * 2 character word = 2<newline46mondego>2 * 3 character word = 6<newline46mondego>"
"6237splitHere46","17667882splitHere46","for"
"6238splitHere46","17667882splitHere46","while"
"6239splitHere46","17667882splitHere46","token1 = token.nextToken();              //Get token<newline46mondego>wordLengthCount[token1.length()-1]++;    //Increment your count array<newline46mondego>"
"6240splitHere46","17668030splitHere46","Map<Integer,Object []> byId = new HashMap<>(customerData.size()); //set size in advance<newline46mondego>//O(n) hashing (assumming good hashing and no resizing)<newline46mondego>for (Object [] customerData : custObjects) {<newline46mondego>   byId.put(customerData[0],customerData);<newline46mondego>}<newline46mondego>"
"6241splitHere46","17668030splitHere46","for(Integer custId : custIds){<newline46mondego>   Object [] custObject = byId.get(custId); //O(1) lookup<newline46mondego>   custMap.put(custObject[0], custObject[1]);<newline46mondego>}<newline46mondego>"
"6242splitHere46","17668208splitHere46","(float)big = approx."
"6243splitHere46","17668208splitHere46","System.out.println(big/(approx));<newline46mondego>"
"6244splitHere46","17668208splitHere46","int"
"6245splitHere46","17668208splitHere46","float"
"6246splitHere46","17668208splitHere46","float"
"6247splitHere46","17668294splitHere46","YOUR_BUTTON.setSoundEffectsEnabled(false);<newline46mondego>"
"6248splitHere46","17668294splitHere46","android:soundEffectsEnabled=<doubleQuotes46>false<doubleQuotes46><newline46mondego>"
"6249splitHere46","17668358splitHere46","i++; // increases i by 1"
"6250splitHere46","17668358splitHere46","NOTE"
"6251splitHere46","17668358splitHere46","TODO"
"6252splitHere46","17668358splitHere46","XXX"
"6253splitHere46","17668358splitHere46","// TODO make it scale better with large data sets"
"6254splitHere46","17668605splitHere46","student.setStatus(true);"
"6255splitHere46","17668605splitHere46","enrollees.add(student);"
"6256splitHere46","17668605splitHere46","student.setStatus(true);"
"6257splitHere46","17668605splitHere46","student"
"6258splitHere46","17668605splitHere46","null"
"6259splitHere46","17668605splitHere46","oldStudent.get(index)"
"6260splitHere46","17668605splitHere46","oldStudent"
"6261splitHere46","17668605splitHere46","index"
"6262splitHere46","17668605splitHere46","null"
"6263splitHere46","17668605splitHere46","oldStudent"
"6264splitHere46","17668605splitHere46","oldCourse.get(modelRow).enroll(oldStudent.get(index));"
"6265splitHere46","17668605splitHere46","enrollees.add(student);"
"6266splitHere46","17668605splitHere46","enrollees"
"6267splitHere46","17668605splitHere46","null"
"6268splitHere46","17668735splitHere46","public class CententBasedRecipientListRouter extends RecipientListRouter {<newline46mondego>    @Override<newline46mondego>    protected void handleMessageInternal(final Message<?> message) {<newline46mondego>       ......<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6269splitHere46","17668735splitHere46","<bean id=<doubleQuotes46>customRecipientListRouter<doubleQuotes46> class=<doubleQuotes46>CententBasedRecipientListRouter<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>channels<doubleQuotes46>><newline46mondego>    <list><newline46mondego>      <ref bean=<doubleQuotes46>parallelProcessingChannel1<doubleQuotes46>/><newline46mondego>      <ref bean=<doubleQuotes46>parallelProcessingChannel2<doubleQuotes46>/><newline46mondego>      <ref bean=<doubleQuotes46>parallelProcessingChannel3<doubleQuotes46>/><newline46mondego>    </list><newline46mondego>  </property><newline46mondego></bean><newline46mondego><newline46mondego><int:router ref=<doubleQuotes46>customRecipientListRouter<doubleQuotes46> <newline46mondego>            input-channel=<doubleQuotes46>routingChannel<doubleQuotes46><newline46mondego>            default-output-channel=<doubleQuotes46>errorChannel<doubleQuotes46> /><newline46mondego>"
"6270splitHere46","17668735splitHere46","<int:channel id=<doubleQuotes46>parallelProcessingChannel1<doubleQuotes46>><newline46mondego>   <int:dispatcher task-executor=<doubleQuotes46>threadPoolExecutor<doubleQuotes46>/><newline46mondego></int:channel><newline46mondego>"
"6271splitHere46","17668765splitHere46","org.openqa.jetty.html.List"
"6272splitHere46","17668765splitHere46","java.util.List"
"6273splitHere46","17668765splitHere46","import org.openqa.jetty.html.List;<newline46mondego>"
"6274splitHere46","17668765splitHere46","import java.util.List;<newline46mondego>"
"6275splitHere46","17668915splitHere46","class"
"6276splitHere46","17668915splitHere46","class AA"
"6277splitHere46","17668915splitHere46","class AA {<newline46mondego>    private AA() {}<newline46mondego><newline46mondego>    public static AA getInstance() {<newline46mondego>        synchronized(AA.class) {<newline46mondego>           AA obj = new AA();<newline46mondego>           return obj;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6278splitHere46","17669139splitHere46","HWND"
"6279splitHere46","17669139splitHere46","FindWindow"
"6280splitHere46","17669139splitHere46","SetParent"
"6281splitHere46","17669139splitHere46","MoveWindow"
"6282splitHere46","17669349splitHere46","Struts 2"
"6283splitHere46","17669349splitHere46","struts.xml"
"6284splitHere46","17669349splitHere46","WEB-INF/classes"
"6285splitHere46","17669367splitHere46","interface"
"6286splitHere46","17669419splitHere46","for (int i = 0; i < s.height; i+=10)<newline46mondego>    for (int j = 0; j < s.width; j+=10)<newline46mondego>        if(yellow)    <newline46mondego>            addPixelToListToCheckLater(i, j);<newline46mondego><newline46mondego>while(pixels still remain to be double checked){<newline46mondego>    currenti = nextIInList;<newline46mondego>    currentj = nextJInList;<newline46mondego><newline46mondego>    for (int i = currenti - 10; i < currenti + 10; i++)<newline46mondego>        for (int j = currentj - 10; j < currentj + 10; j++)<newline46mondego>            if(yellow)    <newline46mondego>                count++;<newline46mondego><newline46mondego>}<newline46mondego>"
"6287splitHere46","17669550splitHere46","percent"
"6288splitHere46","17669550splitHere46","int"
"6289splitHere46","17669550splitHere46","double percent = totals[ b ] / ( 360000.0 );<newline46mondego>"
"6290splitHere46","17669550splitHere46","percent"
"6291splitHere46","17669550splitHere46","double"
"6292splitHere46","17669550splitHere46","360000"
"6293splitHere46","17669550splitHere46","360000.0"
"6294splitHere46","17669550splitHere46","totals[b]"
"6295splitHere46","17669550splitHere46","int"
"6296splitHere46","17669550splitHere46","double"
"6297splitHere46","17669550splitHere46",".0"
"6298splitHere46","17669664splitHere46","Perspective (or Window)<newline46mondego>    PartSashContainer<newline46mondego>        Part Stack<newline46mondego>            Part (Welcome)<newline46mondego>        Part Stack<newline46mondego>            Part (Table)<newline46mondego>"
"6299splitHere46","17669664splitHere46","Perspective (or Window)<newline46mondego>    PartSashContainer<newline46mondego>        Part Stack [container data=30]<newline46mondego>            Part [id=welcome]<newline46mondego>        Part Stack [container data=70]<newline46mondego>            Part [id=table]<newline46mondego>"
"6300splitHere46","17669721splitHere46","data"
"6301splitHere46","17669721splitHere46","input"
"6302splitHere46","17669721splitHere46","data"
"6303splitHere46","17669721splitHere46","input"
"6304splitHere46","17669721splitHere46","public class Application {<newline46mondego><newline46mondego>    public static main(String[] args) {<newline46mondego><newline46mondego>        String data = null;<newline46mondego>        String commandOutput = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        BufferedReader input = null;<newline46mondego><newline46mondego>        try {<newline46mondego>            // do stuff<newline46mondego>            data = text;<newline46mondego>            input = // initialize buffered reader<newline46mondego>            String line = input.readLine();<newline46mondego>            while (line != null) {<newline46mondego>                commandOutput += line;<newline46mondego>                line = input.readLine();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        catch (SomeSpecificException ex) {<newline46mondego>            // please handle exceptions!<newline46mondego>        }<newline46mondego>        catch (IOException ioex) {<newline46mondego>            // handle IO Exceptions here<newline46mondego>        }<newline46mondego>        finally {               <newline46mondego>            try {<newline46mondego>                input.close();<newline46mondego>            }<newline46mondego>            catch (Exception ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        .<newline46mondego>        .<newline46mondego>        .<newline46mondego>        String emailBody = <doubleQuotes46>blah blah <doubleQuotes46> + data + <doubleQuotes46> blah blah <doubleQuotes46> + commandOutput;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6305splitHere46","17669735splitHere46","sources/certification/Parent.java<newline46mondego>sources/other/Child.java<newline46mondego>"
"6306splitHere46","17669735splitHere46","Parent"
"6307splitHere46","17669735splitHere46","public"
"6308splitHere46","17669735splitHere46","n.testIt()"
"6309splitHere46","17669735splitHere46","n.voidTestIt()"
"6310splitHere46","17669735splitHere46","package certification;<newline46mondego>   public class Parent{<newline46mondego>        protected int x=9;//protected access<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>package other;<newline46mondego>import certification.Parent;<newline46mondego>    class Child extends Parent{<newline46mondego>    public void testIt(){<newline46mondego>    System.out.println(<doubleQuotes46>x is<doubleQuotes46> + x);<newline46mondego>        }<newline46mondego>    public static void main(String args[]){<newline46mondego>        Child n = new Child();<newline46mondego>        n.testIt();<newline46mondego>      }<newline46mondego>}<newline46mondego>"
"6311splitHere46","17669735splitHere46","sources"
"6312splitHere46","17669735splitHere46","cd sources"
"6313splitHere46","17669735splitHere46","Parent"
"6314splitHere46","17669735splitHere46","Child"
"6315splitHere46","17669735splitHere46","javac certification/Parent.java"
"6316splitHere46","17669735splitHere46","javac -classpath . other/Child.java"
"6317splitHere46","17669735splitHere46","-classpath"
"6318splitHere46","17669735splitHere46","javac"
"6319splitHere46","17669735splitHere46","Child.java"
"6320splitHere46","17669735splitHere46","."
"6321splitHere46","17669735splitHere46","sources"
"6322splitHere46","17669735splitHere46","Child"
"6323splitHere46","17669735splitHere46","java other.Child"
"6324splitHere46","17669735splitHere46","Child"
"6325splitHere46","17669735splitHere46","C:\>cd sources<newline46mondego><newline46mondego>C:\sources>javac certification/Parent.java<newline46mondego><newline46mondego>C:\sources>javac -classpath . other/Child.java<newline46mondego><newline46mondego>C:\sources>java other.Child<newline46mondego>x is9<newline46mondego><newline46mondego>C:\sources><newline46mondego>"
"6326splitHere46","17669735splitHere46","certification/Parent.java<newline46mondego>"
"6327splitHere46","17669735splitHere46","sources"
"6328splitHere46","17669735splitHere46","certification"
"6329splitHere46","17669735splitHere46","other"
"6330splitHere46","17669735splitHere46","certification.Parent"
"6331splitHere46","17669735splitHere46","other.Child"
"6332splitHere46","17669878splitHere46","Sorter"
"6333splitHere46","17669878splitHere46","@RunWith(Parameterized.class)<newline46mondego>public class SorterTest {<newline46mondego>  @Parameters<newline46mondego>  public static Iterable<Object[]> data() {<newline46mondego>    return Arrays.asList(new Object[][] {<newline46mondego>      { new SelectionSort() },<newline46mondego>      { new BubbleSort() }<newline46mondego>    });<newline46mondego>  }<newline46mondego><newline46mondego>  private final Sorter sorter<newline46mondego><newline46mondego>  public SorterTest(Sorter sorter) {<newline46mondego>    this.sorter = sorter;<newline46mondego>  }<newline46mondego><newline46mondego>  @Test<newline46mondego>  public void arraySortedSingleElement(){<newline46mondego>    String[] a = new String[]{<doubleQuotes46>A<doubleQuotes46>};<newline46mondego>    Assert.assertTrue(sorter.isSorted(a));<newline46mondego>  }<newline46mondego><newline46mondego>  @Test<newline46mondego>  public void arraySortedDistinctElements(){<newline46mondego>    String[] a = new String[]{<doubleQuotes46>A<doubleQuotes46>,<doubleQuotes46>B<doubleQuotes46>,<doubleQuotes46>C<doubleQuotes46>,<doubleQuotes46>D<doubleQuotes46>};<newline46mondego>    Assert.assertTrue(sorter.isSorted(a));<newline46mondego>  }<newline46mondego><newline46mondego>  @Test<newline46mondego>  public void arrayNotSorted(){<newline46mondego>    String[] a = new String[]{<doubleQuotes46>A<doubleQuotes46>,<doubleQuotes46>B<doubleQuotes46>,<doubleQuotes46>C<doubleQuotes46>,<doubleQuotes46>B<doubleQuotes46>};<newline46mondego>    Assert.assertFalse(sorter.isSorted(a));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6334splitHere46","17669923splitHere46","<B>"
"6335splitHere46","17669923splitHere46","<I>"
"6336splitHere46","17669923splitHere46","<U>"
"6337splitHere46","17669923splitHere46","<SUB>;"
"6338splitHere46","17669923splitHere46","<SUP>"
"6339splitHere46","17669923splitHere46","<HR>"
"6340splitHere46","17669923splitHere46","<VR>"
"6341splitHere46","17669987splitHere46","Map<String, Integer> wordOccurenceMap = new HashMap<>();<newline46mondego>"
"6342splitHere46","17669987splitHere46","TreeMap"
"6343splitHere46","17669987splitHere46","HashMap"
"6344splitHere46","17669987splitHere46","HashMap"
"6345splitHere46","17670092splitHere46","DecimalFormat decimalFormat = new DecimalFormat(<doubleQuotes46>##0.##<doubleQuotes46>);<newline46mondego>    String newNumber = String.valueOf(decimalFormat.format(inputNumber/100));<newline46mondego>"
"6346splitHere46","17670143splitHere46","if (matcher.find()) {<newline46mondego>    String name = delimitedStrings[0];<newline46mondego>    String code = delimitedStrings[1];<newline46mondego><newline46mondego>    mTaskData.add(new MyData(name, code));                    <newline46mondego>}<newline46mondego>"
"6347splitHere46","17670143splitHere46","MyData"
"6348splitHere46","17670143splitHere46","public class MyData {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private String code;<newline46mondego><newline46mondego>    public MyData (String name, String code) {<newline46mondego>        this.name = name;<newline46mondego>        this.code = code;<newline46mondego>    }<newline46mondego><newline46mondego>    // getters/setters()<newline46mondego>}<newline46mondego>"
"6349splitHere46","17670143splitHere46","Pattern"
"6350splitHere46","17670143splitHere46","// compile the pattern just once (outside the loop)<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>(.*?)\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>while ((line = mBufferedReader.readLine()) != null) {<newline46mondego>"
"6351splitHere46","17670292splitHere46","IOrderLine.class"
"6352splitHere46","17670292splitHere46","orderLines"
"6353splitHere46","17670292splitHere46","@MappedSuperclass<newline46mondego>public abstract class AbstractOrder {<newline46mondego>    @Id<newline46mondego>    @GeneratedValue<newline46mondego>    private Long idOrder;<newline46mondego><newline46mondego>    @Temporal(TemporalType.TIMESTAMP)<newline46mondego>    @Column(name=<doubleQuotes46>datum<doubleQuotes46>)<newline46mondego>    private Date date = new Date();<newline46mondego><newline46mondego>    // This abstract method will be implemented by sub-classes<newline46mondego>    public abstract List<IOrderLine> getOrderLines();<newline46mondego>}<newline46mondego>"
"6354splitHere46","17670292splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>supplyorderlines<doubleQuotes46>)<newline46mondego>public class SupplyOrderLine implements IOrderLine, Serializable {<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue<newline46mondego>    private Long id;<newline46mondego><newline46mondego>    @OneToMany(targetEntity = SupplyOrderLine.class)<newline46mondego>    private List<SupplyOrderLine> customerOrderLines;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public List<IOrderLine> getOrderLines() {<newline46mondego>        return customerOrderLines;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6355splitHere46","17670292splitHere46","public abstract class PojoClass {<newline46mondego><newline46mondego>    private Long idOrder;<newline46mondego>    private Date date = new Date();<newline46mondego>    private List<? extends IOrderLine> orderLines = new ArrayList<? extends IOrderLine>();<newline46mondego>}<newline46mondego>"
"6356splitHere46","17670420splitHere46","org.json"
"6357splitHere46","17670420splitHere46","for"
"6358splitHere46","17670420splitHere46","JSONArray contacts = jsonObject.getJSONArray(<doubleQuotes46>contact<doubleQuotes46>);<newline46mondego>String[] contactNames = new String[contacts.length()];<newline46mondego>for(int i = 0 ; i < contactNames.length; i++) {<newline46mondego>    contactNames[i] = contacts.getJSONObject(i).getString(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>} <newline46mondego>"
"6359splitHere46","17670771splitHere46","ReflectiveDynamicAccess"
"6360splitHere46","17670771splitHere46","Class.forName"
"6361splitHere46","17670877splitHere46","Main"
"6362splitHere46","17670877splitHere46","non-static"
"6363splitHere46","17670877splitHere46","Work3 class"
"6364splitHere46","17670877splitHere46","Thread.currentThread().getName()"
"6365splitHere46","17670877splitHere46","main method thread"
"6366splitHere46","17670877splitHere46","start"
"6367splitHere46","17670877splitHere46","Work3"
"6368splitHere46","17670877splitHere46","D"
"6369splitHere46","17670877splitHere46","Work3"
"6370splitHere46","17670877splitHere46","D"
"6371splitHere46","17671083splitHere46","File file = new File(imagePath);<newline46mondego>log(<doubleQuotes46>File size: <doubleQuotes46> + file.length());<newline46mondego>byte[] result = null;<newline46mondego>try {<newline46mondego>  InputStream input =  new BufferedInputStream(new FileInputStream(file));<newline46mondego>  result = readAndClose(input);<newline46mondego>}<newline46mondego>catch (FileNotFoundException ex){<newline46mondego>  log(ex);<newline46mondego>}<newline46mondego>BASE64Encoder encoder = new BASE64Encoder();    <newline46mondego>imageString = encoder.encode(result);<newline46mondego>"
"6372splitHere46","17671083splitHere46","byte[] readAndClose(InputStream aInput){<newline46mondego>  byte[] bucket = new byte[32*1024]; <newline46mondego>  ByteArrayOutputStream result = null; <newline46mondego>  try  {<newline46mondego>    try {<newline46mondego>      result = new ByteArrayOutputStream(bucket.length);<newline46mondego>      int bytesRead = 0;<newline46mondego>      while(bytesRead != -1){<newline46mondego>        bytesRead = aInput.read(bucket);<newline46mondego>        if(bytesRead > 0){<newline46mondego>          result.write(bucket, 0, bytesRead);<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>      aInput.close();<newline46mondego>    }<newline46mondego>  }<newline46mondego>  catch (IOException ex){<newline46mondego>    log(ex);<newline46mondego>  }<newline46mondego>  return result.toByteArray();<newline46mondego>}<newline46mondego>"
"6373splitHere46","17671104splitHere46","<encoding>${project.build.sourceEncoding}</encoding><newline46mondego>"
"6374splitHere46","17671104splitHere46","<plugin><newline46mondego>      <groupId>org.apache.maven.plugins</groupId><newline46mondego>      <artifactId>maven-surefire-plugin</artifactId><newline46mondego>      <version>2.15</version><newline46mondego>      <configuration><newline46mondego>        <argLine>-Dfile.encoding=UTF-8</argLine><newline46mondego>      </configuration><newline46mondego></plugin><newline46mondego>"
"6375splitHere46","17671273splitHere46","title"
"6376splitHere46","17671273splitHere46","_all"
"6377splitHere46","17671273splitHere46","_all"
"6378splitHere46","17671273splitHere46","_all"
"6379splitHere46","17671450splitHere46","URLEncoder"
"6380splitHere46","17671450splitHere46","String url = <doubleQuotes46>http://mydomain.com/games/play cricket.mp3<doubleQuotes46>; <newline46mondego>String fixedUrl = url.replaceAll(<doubleQuotes46>\\s<doubleQuotes46>, <doubleQuotes46>%20<doubleQuotes46>);<newline46mondego><newline46mondego>MediaPlayer mp = new MediaPlayer();<newline46mondego><newline46mondego>try {<newline46mondego>    mp.setDataSource(fixedUrl);<newline46mondego>    mp.prepare();<newline46mondego>    mp.start();<newline46mondego>} catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}  <newline46mondego>"
"6381splitHere46","17671552splitHere46","System.exit(0);"
"6382splitHere46","17671574splitHere46","Pattern findWordPattern = Pattern.compile(<doubleQuotes46>his<doubleQuotes46>);<newline46mondego>Matcher matcher = findWordPattern.matcher(myWholeFileInAString);<newline46mondego>while(matcher.find()) {<newline46mondego>    int offsetStart = matcher.start();<newline46mondego>    int offsetEnd = matcher.end();<newline46mondego>    // do something with offsetStart and offsetEnd<newline46mondego>}<newline46mondego>"
"6383splitHere46","17671797splitHere46","Activity"
"6384splitHere46","17671797splitHere46","DisplayMetrics metrics = context.getResources().getDisplayMetrics();<newline46mondego>int width = metrics.widthPixels;<newline46mondego>int height = metrics.heightPixels;<newline46mondego>"
"6385splitHere46","17671797splitHere46","Display  display= ((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();<newline46mondego>int width = display.getWidth(); <newline46mondego>int height = display.getHeight();<newline46mondego>"
"6386splitHere46","17671816splitHere46","public static String underscoreToCapital(String text) {<newline46mondego>    // This will be a bit bigger than necessary, but that shouldn't matter.<newline46mondego>    StringBuilder builder = new StringBuilder(text.length());<newline46mondego>    boolean capitalizeNext = false;<newline46mondego>    for (int i = 0; i < text.length(); i++) {<newline46mondego>        char c = text.charAt(i);<newline46mondego>        if (c == '_') {<newline46mondego>            capitalizeNext = true;<newline46mondego>        } else {<newline46mondego>            builder.append(capitalizeNext ? Character.toUpperCase(c) : c);<newline46mondego>            capitalizeNext = false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return builder.toString();<newline46mondego>}<newline46mondego>"
"6387splitHere46","17671891splitHere46","Yaml yaml = new Yaml();<newline46mondego>    String input = <doubleQuotes46>{appName: myAppName, appVersion: myAppVerison}<doubleQuotes46>;<newline46mondego>    Map yamlMap = (Map)yaml.load(input);<newline46mondego>    assertEquals(<doubleQuotes46>myAppName<doubleQuotes46>, yamlMap.get(<doubleQuotes46>appName<doubleQuotes46>));<newline46mondego>"
"6388splitHere46","17671994splitHere46","Map"
"6389splitHere46","17671994splitHere46","ObjectMapper mapper = new ObjectMapper();<newline46mondego><newline46mondego>Map<String, Map<String, String>> map = mapper.readValue(new File(<doubleQuotes46>X:/test.json<doubleQuotes46>), Map.class);<newline46mondego>Map<String, String> result = new HashMap<String, String>();<newline46mondego>for (Entry<String, Map<String, String>> entry : map.entrySet()) {<newline46mondego>    result.putAll(entry.getValue());<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(mapper.convertValue(result, MyPojo.class));<newline46mondego>"
"6390splitHere46","17672093splitHere46","public class MainActivity extends Activity {<newline46mondego>@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego>    this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);<newline46mondego><newline46mondego><newline46mondego>    // Settings button start   <newline46mondego>    Button settingsButton = (Button) findViewById(R.id.btnSettings);<newline46mondego>    settingsButton.setOnClickListener(new View.OnClickListener() {<newline46mondego>       @Override<newline46mondego>       public void onClick(View view) {<newline46mondego>          startSettings();<newline46mondego>       }<newline46mondego>   });<newline46mondego>   Button setAButton = (Button) findViewById(R.id.btnSetA);<newline46mondego>   setAButton.setOnClickListener(new OnClickListener(){<newline46mondego>      @Override<newline46mondego>      public void onClick(View view) {<newline46mondego>         setzoneA(); <newline46mondego>      } <newline46mondego>   });<newline46mondego>   // Set B Button start<newline46mondego>   Button setBButton = (Button) findViewById(R.id.btnSetB);<newline46mondego>   setBButton.setOnClickListener(new OnClickListener(){<newline46mondego>      @Override<newline46mondego>      public void onClick(View view) {<newline46mondego>          setzoneB(); <newline46mondego>      }  <newline46mondego>   });<newline46mondego>}<newline46mondego><newline46mondego>public void startSettings() {<newline46mondego>   Intent launchSettings = new Intent(this, SettingsScreen.class);<newline46mondego>   startActivity(launchSettings);     <newline46mondego>}<newline46mondego><newline46mondego>public void setzoneA() {<newline46mondego><newline46mondego>    AlertDialog.Builder dlgAlert  = new AlertDialog.Builder(this);<newline46mondego>    dlgAlert.setMessage(<doubleQuotes46>Zone Set<doubleQuotes46>);<newline46mondego>    dlgAlert.setPositiveButton(<doubleQuotes46>OK<doubleQuotes46>, null);<newline46mondego>    dlgAlert.setCancelable(true);<newline46mondego>    dlgAlert.create().show();<newline46mondego><newline46mondego>    dlgAlert.setPositiveButton(<doubleQuotes46>Ok<doubleQuotes46>,<newline46mondego>        new DialogInterface.OnClickListener() {<newline46mondego>            public void onClick(DialogInterface dialog, int which) {<newline46mondego>              //dismiss the dialog  <newline46mondego>            }<newline46mondego>        });       <newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public void setzoneB()  {<newline46mondego><newline46mondego>   AlertDialog.Builder dlgAlert  = new AlertDialog.Builder(this);<newline46mondego><newline46mondego>   dlgAlert.setMessage(<doubleQuotes46>Zone Set<doubleQuotes46>);<newline46mondego>   dlgAlert.setPositiveButton(<doubleQuotes46>OK<doubleQuotes46>, null);<newline46mondego>   dlgAlert.setCancelable(true);<newline46mondego>   dlgAlert.create().show();<newline46mondego><newline46mondego>   dlgAlert.setPositiveButton(<doubleQuotes46>Ok<doubleQuotes46>,<newline46mondego>        new DialogInterface.OnClickListener() {<newline46mondego>            public void onClick(DialogInterface dialog, int which) {<newline46mondego>              //dismiss the dialog  <newline46mondego>            }<newline46mondego>        });<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean onCreateOptionsMenu(Menu menu) {<newline46mondego>   // Inflate the menu; this adds items to the action bar if it is present.<newline46mondego>   getMenuInflater().inflate(R.menu.main, menu);<newline46mondego>   return true;<newline46mondego>}<newline46mondego>"
"6391splitHere46","17672161splitHere46","Role userRole = RoleLocalServiceUtil.getRole(companyId, <doubleQuotes46>POWER USER<doubleQuotes46>);<newline46mondego><newline46mondego>ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(),<newline46mondego>themeDisplay.getCompanyId(), Layout.class.getName(), <doubleQuotes46>primKey<doubleQuotes46>,<newline46mondego>userRole.getRoleId(), new String[] { ActionKeys.VIEW });<newline46mondego>"
"6392splitHere46","17672263splitHere46","PrintWriter out = new PrintWriter(name + (fileNumber+i) + <doubleQuotes46>.html<doubleQuotes46>);<newline46mondego>"
"6393splitHere46","17672263splitHere46","PrintWriter"
"6394splitHere46","17672263splitHere46","PrintWriter out = new PrintWriter(name + (fileNumber+i) + <doubleQuotes46>.html<doubleQuotes46>, <doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego>"
"6395splitHere46","17672263splitHere46","BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));<newline46mondego>"
"6396splitHere46","17672263splitHere46","BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), <doubleQuotes46>utf-8<doubleQuotes46>));<newline46mondego>"
"6397splitHere46","17672263splitHere46","Content-Type: text/html;charset=..."
"6398splitHere46","17672263splitHere46","<?xml"
"6399splitHere46","17672263splitHere46","application/xhtml+xml"
"6400splitHere46","17672263splitHere46","<meta>"
"6401splitHere46","17672263splitHere46","URL.getConnection().getContentType()"
"6402splitHere46","17672263splitHere46","<meta>"
"6403splitHere46","17672263splitHere46","InputStream in = url.openStream();<newline46mondego>OutputStream out = new FileOutputStream(name + (fileNumber+i) + <doubleQuotes46>.html<doubleQuotes46>);<newline46mondego><newline46mondego>byte[] buffer = new byte[1024*1024];<newline46mondego>int len;<newline46mondego>while ((len = in.read(buffer)) != -1) {<newline46mondego>    out.write(buffer, 0, len);<newline46mondego>}<newline46mondego>"
"6404splitHere46","17672263splitHere46","IOUtils"
"6405splitHere46","17672416splitHere46","Hashtable"
"6406splitHere46","17672416splitHere46","Map"
"6407splitHere46","17672569splitHere46","<action name=<doubleQuotes46>saveDetails<doubleQuotes46> class=<doubleQuotes46>com.indus.training.action.EmployeeAction<doubleQuotes46> method=<doubleQuotes46>add<doubleQuotes46>><newline46mondego>  <result type=<doubleQuotes46>redirectAction<doubleQuotes46>>welCome</result><newline46mondego>  <result name=<doubleQuotes46>input<doubleQuotes46>>/Home.jsp</result><newline46mondego></action><newline46mondego><action name=<doubleQuotes46>deleteAction<doubleQuotes46> class=<doubleQuotes46>com.indus.training.action.EmployeeAction<doubleQuotes46> method=<doubleQuotes46>delete<doubleQuotes46>><newline46mondego>  <result type=<doubleQuotes46>redirectAction<doubleQuotes46>>welCome</result><newline46mondego></action><newline46mondego>"
"6408splitHere46","17672669splitHere46","MyBean.class"
"6409splitHere46","17672669splitHere46","WEB-INF/classes"
"6410splitHere46","17672669splitHere46","${catalina.home}/lib"
"6411splitHere46","17672669splitHere46","myBean instanceof MyBean == false"
"6412splitHere46","17672669splitHere46","LinkageError"
"6413splitHere46","17672669splitHere46","provided"
"6414splitHere46","17672669splitHere46","endorsed"
"6415splitHere46","17672809splitHere46","message"
"6416splitHere46","17672809splitHere46","h:message"
"6417splitHere46","17672809splitHere46","<a4j:outputPanel ajaxRendered=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <h:message for=<doubleQuotes46>mssusernamefield<doubleQuotes46> errorClass=<doubleQuotes46>errors<doubleQuotes46>/><newline46mondego><a4j:outputPanel><newline46mondego>"
"6418splitHere46","17672917splitHere46","String str = <doubleQuotes46>16.82080560, 96.13055810<doubleQuotes46>;<newline46mondego>StringTokenizer st = new StringTokenizer(str,<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>String one = st.nextToken();<newline46mondego>String two = st.nextToken();<newline46mondego>"
"6419splitHere46","17672950splitHere46","byte ^ byte"
"6420splitHere46","17672950splitHere46","int"
"6421splitHere46","17672950splitHere46","arr[i]"
"6422splitHere46","17672950splitHere46","arr[i] = (byte)(arr[i-1]^arr[i]);<newline46mondego>"
"6423splitHere46","17672950splitHere46","arr[i] = (int)arr[i-1]^(int)arr[i];<newline46mondego>"
"6424splitHere46","17672950splitHere46","int"
"6425splitHere46","17672977splitHere46","byte[]"
"6426splitHere46","17672977splitHere46","byte[]"
"6427splitHere46","17672977splitHere46","blob"
"6428splitHere46","17672977splitHere46","byte[]"
"6429splitHere46","17672977splitHere46","PreparedStatement"
"6430splitHere46","17672977splitHere46","PreparedStatement stmt = connection.generatePreparedStatement(<doubleQuotes46>INSERT INTO ... <doubleQuotes46>);<newline46mondego>stmt.setBytes(1, yourByteArray);<newline46mondego>"
"6431splitHere46","17672997splitHere46","SwingUtilities.invokeLater"
"6432splitHere46","17672997splitHere46","SwingUtilities.invokeAndWait"
"6433splitHere46","17672997splitHere46","SwingUtilities.invokeLater()"
"6434splitHere46","17673063splitHere46","paintComponent"
"6435splitHere46","17673063splitHere46","repaint()"
"6436splitHere46","17673063splitHere46","boolean clicked = false;<newline46mondego><newline46mondego>public void paintComponent(Graphics g) {<newline46mondego>    if (clicked) {<newline46mondego>        g.setColor(Color.blue);<newline46mondego>        g.drawRect(10, 10, 80, 30);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void actionPerformed(ActionEvent e){<newline46mondego>    clicked = true;<newline46mondego>    repaint();<newline46mondego>}<newline46mondego>"
"6437splitHere46","17673063splitHere46","public void paintComponent(Graphics g) {<newline46mondego>    paintComponent(g);<newline46mondego>"
"6438splitHere46","17673063splitHere46","public void paintComponent(Graphics g) {<newline46mondego>    super.paintComponent(g);<newline46mondego>"
"6439splitHere46","17673414splitHere46","public <T extends EventListener> T[] getListeners(Class<T> t) {<newline46mondego>Object[] lList = listenerList; <newline46mondego>int n = getListenerCount(lList, t); <newline46mondego>    T[] result = (T[])Array.newInstance(t, n); <newline46mondego>int j = 0; <newline46mondego>for (int i = lList.length-2; i>=0; i-=2) {<newline46mondego>    if (lList[i] == t) {<newline46mondego>    result[j++] = (T)lList[i+1];<newline46mondego>    }<newline46mondego>}<newline46mondego>return result;   <newline46mondego>}<newline46mondego>"
"6440splitHere46","17673439splitHere46","Pattern p=Pattern.compile(<doubleQuotes46>(^ITEM\\s.+?)^(?=ITEM|DATASOURCE)<doubleQuotes46>,Pattern.MULTILINE | Pattern.DOTALL);<newline46mondego>"
"6441splitHere46","17673483splitHere46","man page"
"6442splitHere46","17673483splitHere46","update-alternatives"
"6443splitHere46","17673483splitHere46","2"
"6444splitHere46","17673483splitHere46","--remove"
"6445splitHere46","17673483splitHere46","--install"
"6446splitHere46","17673483splitHere46","--config"
"6447splitHere46","17673483splitHere46","/var/lib/dpkg/alternatives/java"
"6448splitHere46","17673539splitHere46","ServletContextListener"
"6449splitHere46","17673589splitHere46","y"
"6450splitHere46","17673589splitHere46","Y"
"6451splitHere46","17673589splitHere46","return new SimpleDateFormat(<doubleQuotes46>dd-MM-yyyy<doubleQuotes46>, Locale.ENGLISH).parse(input);<newline46mondego>"
"6452splitHere46","17673589splitHere46","Y"
"6453splitHere46","17673621splitHere46","package java7thirdeditionpart1;<newline46mondego><newline46mondego>public class creatObjectWithoutNewOperator {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        Class myClass2 = null;<newline46mondego>        try {<newline46mondego>            myClass2 = Class.forName(<doubleQuotes46>java7thirdeditionpart1.Book<doubleQuotes46>);<newline46mondego>        } catch (ClassNotFoundException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        if (myClass2 != null) {<newline46mondego>            try {<newline46mondego>                //Creating an instance of the Book class<newline46mondego>                /*Since newInstance returns a<newline46mondego>java.lang.Object object, you need to downcast it to its<newline46mondego>original type.*/<newline46mondego>                Book book1 = (Book) myClass2.newInstance();                <newline46mondego>                book1.setAuthor(<doubleQuotes46>Khan<doubleQuotes46>);                <newline46mondego>                book1.setTitle(<doubleQuotes46>Second Book<doubleQuotes46>);<newline46mondego>                book1.setIsbn(<doubleQuotes46>kh_s_b<doubleQuotes46>);                <newline46mondego>                book1.printBookDetails();<newline46mondego><newline46mondego>                book1 = (Book) myClass2.newInstance();<newline46mondego>                book1.setAuthor(<doubleQuotes46>Ajmal<doubleQuotes46>);<newline46mondego>                book1.setTitle(<doubleQuotes46>First Book<doubleQuotes46>);<newline46mondego>                book1.setIsbn(<doubleQuotes46>aj_f_b<doubleQuotes46>);<newline46mondego>                book1.printBookDetails();<newline46mondego>            } catch (IllegalAccessException e1) {<newline46mondego>                e1.printStackTrace();<newline46mondego>            } catch (InstantiationException e2) {<newline46mondego>                e2.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>    }//main method ends here.<newline46mondego>}//class creatObjectWithoutNewOperator ends here.<newline46mondego>"
"6454splitHere46","17673748splitHere46","@theSortedMap.keySet.iterator.map { key => <li>@key</li>}<newline46mondego>"
"6455splitHere46","17673766splitHere46","HttpResponse response = httpclient1.execute(httpPostRequest);<newline46mondego>InputStream is = response.getEntity().getContent()<newline46mondego>"
"6456splitHere46","17673787splitHere46","<property name=<doubleQuotes46>connection.datasource<doubleQuotes46>>fhlabs</property><newline46mondego>"
"6457splitHere46","17673787splitHere46","<property name=<doubleQuotes46>connection.datasource<doubleQuotes46>>java:comp/env/fhlabs</property><newline46mondego>"
"6458splitHere46","17673806splitHere46","String filename = filters.getPeriod() + <doubleQuotes46>_<doubleQuotes46> +filters.getRegion() ;<newline46mondego>httpServletResponse.setContentType(<doubleQuotes46>application/octet-stream<doubleQuotes46>);<newline46mondego>httpServletResponse.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>, <doubleQuotes46>attachment; filename=<doubleQuotes46>+filename+<doubleQuotes46>.xls<doubleQuotes46>);<newline46mondego>ServletOutputStream outputStream = httpServletResponse.getOutputStream();<newline46mondego>Path fileIn = Paths.get(filename);<newline46mondego>Files.copy(fileIn, outputStream); <newline46mondego>outputStream.flush();<newline46mondego>return NONE; <newline46mondego>"
"6459splitHere46","17673878splitHere46","final Intent i = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(<doubleQuotes46>mailto<doubleQuotes46>,<doubleQuotes46>suphawut@mpatmail.com<doubleQuotes46>, null));<newline46mondego>i.putExtra(Intent.EXTRA_SUBJECT, <doubleQuotes46>Emergency Location<doubleQuotes46>);<newline46mondego>i.putExtra(Intent.EXTRA_TEXT,Html.fromHtml(DescribText));<newline46mondego>"
"6460splitHere46","17673921splitHere46","synchronize"
"6461splitHere46","17673936splitHere46","split(<doubleQuotes46> : <doubleQuotes46>)"
"6462splitHere46","17673936splitHere46","replace(<doubleQuotes46>\\:<doubleQuotes46>, <doubleQuotes46>§<doubleQuotes46>)"
"6463splitHere46","17673936splitHere46","replace(<doubleQuotes46>§<doubleQuotes46>, <doubleQuotes46>:<doubleQuotes46>)"
"6464splitHere46","17673980splitHere46","File.separator"
"6465splitHere46","17673980splitHere46","String path = <doubleQuotes46>D:<doubleQuotes46>+File.separator+<doubleQuotes46>File Compression<doubleQuotes46>+File.separator+<doubleQuotes46>Data<doubleQuotes46>+File.separator+<doubleQuotes46>low_freq<doubleQuotes46>+File.separator+<doubleQuotes46>low_freq<doubleQuotes46>+File.separator+<doubleQuotes46>house_1<doubleQuotes46>+File.separator;<newline46mondego>"
"6466splitHere46","17674050splitHere46","package com.jenkov.seo.web;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import javax.servlet.*;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego><newline46mondego>public class MaintenanceModeFilter<newline46mondego>    implements Filter<newline46mondego>{<newline46mondego><newline46mondego>    public MaintenanceModeFilter()<newline46mondego>    {<newline46mondego>        mode = 0;<newline46mondego>        maintenanceUrl = null;<newline46mondego>        maintenanceGuiUrl = null;<newline46mondego>        password = null;<newline46mondego>        comment = null;<newline46mondego>    }<newline46mondego><newline46mondego>    public void init(FilterConfig filterconfig)<newline46mondego>        throws ServletException<newline46mondego>    {<newline46mondego>        maintenanceUrl = filterconfig.getInitParameter(<doubleQuotes46>maintenanceUrl<doubleQuotes46>);<newline46mondego>        maintenanceGuiUrl = filterconfig.getInitParameter(<doubleQuotes46>maintenanceGuiUrl<doubleQuotes46>);<newline46mondego>        password = filterconfig.getInitParameter(<doubleQuotes46>password<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void doFilter(ServletRequest servletrequest, ServletResponse servletresponse, FilterChain filterchain)<newline46mondego>        throws IOException, ServletException<newline46mondego>    {<newline46mondego>        HttpServletRequest httpservletrequest = (HttpServletRequest)servletrequest;<newline46mondego>        if(servletrequest.getParameter(<doubleQuotes46>maintenance-mode<doubleQuotes46>) != null)<newline46mondego>        {<newline46mondego>            if(password.equals(servletrequest.getParameter(<doubleQuotes46>password<doubleQuotes46>)))<newline46mondego>            {<newline46mondego>                mode = Integer.parseInt(servletrequest.getParameter(<doubleQuotes46>maintenance-mode<doubleQuotes46>));<newline46mondego>                comment = servletrequest.getParameter(<doubleQuotes46>aComment<doubleQuotes46>);<newline46mondego>                servletrequest.getRequestDispatcher(maintenanceGuiUrl).include(servletrequest, servletresponse);<newline46mondego>            }<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        if(mode != 0 && !httpservletrequest.getServletPath().equals(maintenanceGuiUrl))<newline46mondego>        {<newline46mondego>            servletrequest.setAttribute(<doubleQuotes46>comment<doubleQuotes46>, comment);<newline46mondego>            servletrequest.getRequestDispatcher(maintenanceUrl).include(servletrequest, servletresponse);<newline46mondego>            return;<newline46mondego>        } else<newline46mondego>        {<newline46mondego>            filterchain.doFilter(servletrequest, servletresponse);<newline46mondego>            return;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void destroy()<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    public static final int MODE_NORMAL_OPERATION = 0;<newline46mondego>    protected int mode;<newline46mondego>    protected String maintenanceUrl;<newline46mondego>    protected String maintenanceGuiUrl;<newline46mondego>    protected String password;<newline46mondego>    protected String comment;<newline46mondego>}<newline46mondego>"
"6467splitHere46","17674215splitHere46","public class ThreadDemo {<newline46mondego>   public static void main(String args[]) {<newline46mondego>        System.out.println(Thread.currentThread());<newline46mondego>        Runnable r = new MyRunnable();<newline46mondego>        new Thread(new ThreadGroup(<doubleQuotes46>my group<doubleQuotes46>), r).start();<newline46mondego>        try {<newline46mondego>            for (int i = 1; i <= 5; i++) {<newline46mondego>                Thread.sleep(1000);<newline46mondego>            }<newline46mondego><newline46mondego>        } catch (InterruptedException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class MyRunnable implements Runnable {<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        Thread.currentThread().setName(<doubleQuotes46>mythread<doubleQuotes46>);<newline46mondego>        System.out.println(Thread.currentThread());<newline46mondego>        for (int i = 1; i <= 5; i++) {<newline46mondego>            try {<newline46mondego>                Thread.sleep(500);<newline46mondego>                //System.out.println(<doubleQuotes46>MyThread i value <doubleQuotes46>+i);<newline46mondego><newline46mondego>            } catch (InterruptedException e) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6468splitHere46","17674227splitHere46","('printlist.jsp?CTextSearch=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtSearch<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>)%>&CTextNumbr=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtNum<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %>&CYear=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$cmbYear<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %>&CSectionNo=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$cmbSection<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %>&CDatefrom=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtDateFrom<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %>&CDateto=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtDateTo<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>)  %>'<newline46mondego>"
"6469splitHere46","17674227splitHere46","('printlist.jsp?CTextSearch=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtSearch<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>)%> & CTextNumbr=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtNum<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %> & CYear=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$cmbYear<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %> & CSectionNo=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$cmbSection<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %>&CDatefrom=<%=URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtDateFrom<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>) %>&CDateto=<%=  URLEncoder.encode(request.getParameter(<doubleQuotes46>ctl00$SearchCriteriaHolder$txtDateTo<doubleQuotes46>),<doubleQuotes46>UTF-8<doubleQuotes46>)  %>'<newline46mondego>"
"6470splitHere46","17674345splitHere46","Map.get(Object)"
"6471splitHere46","17674345splitHere46","int"
"6472splitHere46","17674345splitHere46","changeNoteListSize = (Integer) resultMap.get(<doubleQuotes46>changeNoterListSize<doubleQuotes46>);<newline46mondego>"
"6473splitHere46","17674413splitHere46","test.main.StoreCreds"
"6474splitHere46","17674413splitHere46","com.data.credentials.manager.IFStoreCredentials"
"6475splitHere46","17674413splitHere46","test.main.StoreCreds"
"6476splitHere46","17674493splitHere46","Control"
"6477splitHere46","17674493splitHere46","Control#setBackground(Color)"
"6478splitHere46","17674493splitHere46","Button"
"6479splitHere46","17674596splitHere46","value=<doubleQuotes46>%{'FRANCE'}<doubleQuotes46><newline46mondego>"
"6480splitHere46","17674596splitHere46","valueStack"
"6481splitHere46","17674773splitHere46","YYYY"
"6482splitHere46","17674773splitHere46","yyyy"
"6483splitHere46","17674773splitHere46","yyyy"
"6484splitHere46","17674953splitHere46","String filename = <doubleQuotes46>test.txt<doubleQuotes46>;<newline46mondego>int numOfIds = 0;<newline46mondego>try (BufferedReader br = new BufferedReader(new FileReader(filename))) {<newline46mondego>    String line = null;<newline46mondego>    while ((line = br.readLine()) != null) {<newline46mondego>        if (line.contains(<doubleQuotes46>Product ID = <doubleQuotes46>)) {<newline46mondego>            numOfIds++;<newline46mondego>        }<newline46mondego>    }<newline46mondego>} catch (IOException e) {<newline46mondego>    // TODO Auto-generated catch block<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"6485splitHere46","17674953splitHere46","Product ID ="
"6486splitHere46","17674953splitHere46","001,P1<newline46mondego>002,P2<newline46mondego>003,P3<newline46mondego>"
"6487splitHere46","17674981splitHere46","public class SwingUtils {<newline46mondego><newline46mondego>public static JButton createMyButton (String iconPath, String toolTip) {<newline46mondego>    final JButton b = new JButton (new ImageIcon(SwingUtils.class.getResource(iconPath)));<newline46mondego>    final Border raisedBevelBorder = BorderFactory.createRaisedBevelBorder();<newline46mondego>    final Insets insets = raisedBevelBorder.getBorderInsets(b);<newline46mondego>    final EmptyBorder emptyBorder = new EmptyBorder(insets);<newline46mondego>    b.setBorder(emptyBorder);<newline46mondego>    b.setFocusPainted(false);<newline46mondego>    b.setOpaque(false);<newline46mondego>    b.setContentAreaFilled(false);<newline46mondego>    b.setToolTipText(toolTip);<newline46mondego>    b.getModel().addChangeListener(new ChangeListener() {<newline46mondego>        @Override<newline46mondego>        public void stateChanged(ChangeEvent e) {<newline46mondego>            ButtonModel model = (ButtonModel) e.getSource();<newline46mondego>            if (model.isRollover()) {<newline46mondego>                b.setBorder(raisedBevelBorder);<newline46mondego>            } else {<newline46mondego>                b.setBorder(emptyBorder);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>    return b;<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6488splitHere46","17675031splitHere46","byte[]"
"6489splitHere46","17675031splitHere46","String(bytes, offset, len)"
"6490splitHere46","17675031splitHere46","String s2 = new String(b, 0, 8);<newline46mondego>"
"6491splitHere46","17675063splitHere46","maxStatements"
"6492splitHere46","17675063splitHere46","maxStatements"
"6493splitHere46","17675063splitHere46","maxStatementsPerConnection"
"6494splitHere46","17675074splitHere46","SOURCES"
"6495splitHere46","17675074splitHere46","Map"
"6496splitHere46","17675074splitHere46","SOURCES"
"6497splitHere46","17675074splitHere46","<doubleQuotes46>SOURCES<doubleQuotes46>: [ ... ]<newline46mondego>"
"6498splitHere46","17675074splitHere46","[ ]"
"6499splitHere46","17675074splitHere46","Map"
"6500splitHere46","17675074splitHere46","private List<Map<String, int>> SOURCES;<newline46mondego>"
"6501splitHere46","17675074splitHere46","Map"
"6502splitHere46","17675074splitHere46","SOURCES"
"6503splitHere46","17675074splitHere46","<doubleQuotes46>SOURCES<doubleQuotes46>:[<newline46mondego>              { <doubleQuotes46>a<doubleQuotes46>:1, <doubleQuotes46>b<doubleQuotes46>:2 },<newline46mondego>              { <doubleQuotes46>c<doubleQuotes46>:3 },<newline46mondego>              { <doubleQuotes46>x<doubleQuotes46>:99, <doubleQuotes46>y<doubleQuotes46>:98, <doubleQuotes46>z<doubleQuotes46>:97 }<newline46mondego>          ]<newline46mondego>"
"6504splitHere46","17675196splitHere46","System.out.println(<doubleQuotes46>\\+441506441111:\\+441506442222<doubleQuotes46>); <newline46mondego>"
"6505splitHere46","17675300splitHere46","public class Task implements Runnable<newline46mondego>{<newline46mondego>    private ReentrantLock lock;<newline46mondego>    private ExecutorService executor;<newline46mondego><newline46mondego>    public Task(ExecutorService executor)<newline46mondego>    {<newline46mondego>        this.executor=executor;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run()<newline46mondego>    {<newline46mondego><newline46mondego>        //do some stuff<newline46mondego>        //...<newline46mondego><newline46mondego>        lock.lock();<newline46mondego>        executor.execute(this);<newline46mondego>        lock.unlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6506splitHere46","17675300splitHere46","run()"
"6507splitHere46","17675324splitHere46","@Controller<newline46mondego>public class LinkedInController {<newline46mondego><newline46mondego>    private static final Logger logger = LoggerFactory.getLogger(LinkedInController.class);<newline46mondego><newline46mondego>    @Inject<newline46mondego>    private final LinkedIn linkedIn;<newline46mondego><newline46mondego>    public LinkedInController() {<newline46mondego>        logger.info(<doubleQuotes46>Initialisation du controleur linkedIn.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @RequestMapping(value = <doubleQuotes46>linkedin<doubleQuotes46>)<newline46mondego>    public ModelAndView categorize() {<newline46mondego>        categorizeAndStore(linkedIn);<newline46mondego>        return mav;<newline46mondego>    }<newline46mondego><newline46mondego>    @Async<newline46mondego>    public Future<Boolean> categorizeAndStore( LinkedIn source) {<newline46mondego>        // java stuff<newline46mondego>        return new AsyncResult<Boolean>(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6508splitHere46","17675345splitHere46","\r\n"
"6509splitHere46","17675380splitHere46","<!-- Read file that contains properties --><newline46mondego><bean id=<doubleQuotes46>properties<doubleQuotes46> class=<doubleQuotes46>org.springframework.beans.factory.config.PropertyPlaceholderConfigurer<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>location<doubleQuotes46> value=<doubleQuotes46>classpath:app.properties<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"6510splitHere46","17675380splitHere46","entityRmiServiceExporter"
"6511splitHere46","17675380splitHere46","<bean id=<doubleQuotes46>entityRmiServiceExporter<doubleQuotes46> class=<doubleQuotes46>org.springframework.remoting.rmi.RmiServiceExporter<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>serviceName<doubleQuotes46> value=<doubleQuotes46>entityService<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>service<doubleQuotes46> ref=<doubleQuotes46>entityServiceImpl<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>serviceInterface<doubleQuotes46> value=<doubleQuotes46>IEntityService<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>registryPort<doubleQuotes46> value=<doubleQuotes46>1099<doubleQuotes46>/><newline46mondego><newline46mondego>    <property name=<doubleQuotes46>registryHost<doubleQuotes46> value=<doubleQuotes46>${rmi.endpoint}<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"6512splitHere46","17675380splitHere46","rmi.endpoint=10.0.2.15<newline46mondego>"
"6513splitHere46","17675380splitHere46","-Djava.rmi.server.hostname=server.mycompany.com"
"6514splitHere46","17675556splitHere46","resourceA"
"6515splitHere46","17675556splitHere46","resourceB"
"6516splitHere46","17675556splitHere46","resourceB"
"6517splitHere46","17675556splitHere46","resourceA"
"6518splitHere46","17675556splitHere46","read()"
"6519splitHere46","17675556splitHere46","resourceA"
"6520splitHere46","17675556splitHere46","write()"
"6521splitHere46","17675556splitHere46","resourceB"
"6522splitHere46","17675556splitHere46","resourceA"
"6523splitHere46","17675556splitHere46","resourceB"
"6524splitHere46","17675556splitHere46","T2"
"6525splitHere46","17675556splitHere46","T1"
"6526splitHere46","17675556splitHere46","T2"
"6527splitHere46","17675556splitHere46","public int read() {<newline46mondego>    synchronized(resourceA) { <newline46mondego>        synchronized(resourceB) {<newline46mondego><newline46mondego>public void write() {<newline46mondego>    synchronized(resourceA) { <newline46mondego>        synchronized(resourceB) {<newline46mondego>"
"6528splitHere46","17675676splitHere46","MYSQL_ATTR_FOUND_ROWS"
"6529splitHere46","17675676splitHere46","executeUpdate"
"6530splitHere46","17675689splitHere46","Comparable"
"6531splitHere46","17675689splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class Entry implements Comparable<Entry> {<newline46mondego>private int num;<newline46mondego>private String val;<newline46mondego><newline46mondego>public Entry() {<newline46mondego>    this.num = 0;<newline46mondego>    this.val = <doubleQuotes46><doubleQuotes46>;<newline46mondego>} <newline46mondego><newline46mondego>public void setNum(int num) {<newline46mondego>    this.num = num;<newline46mondego>}<newline46mondego><newline46mondego>public int getNum() {<newline46mondego>    return this.num;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public int compareTo(Entry entry) {<newline46mondego>    if (this.num < entry.num) return -1;<newline46mondego>    if (this.num > entry.num) return 1;<newline46mondego>    return 0;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>    System.out.println(<doubleQuotes46>TEST 1<doubleQuotes46>);<newline46mondego>    test1();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>\nTEST 2<doubleQuotes46>);<newline46mondego>    test2();<newline46mondego>}<newline46mondego><newline46mondego>public static void test1() {<newline46mondego>    Entry e1 = new Entry();<newline46mondego>    e1.setNum(5);<newline46mondego><newline46mondego>    Entry e2 = new Entry();<newline46mondego>    e2.setNum(4);<newline46mondego>    System.out.println(<doubleQuotes46>e1 = <doubleQuotes46> + e1.getNum() + <doubleQuotes46>, e2 = <doubleQuotes46> + e2.getNum() + <doubleQuotes46>, e1.compareTo(e2) = <doubleQuotes46> + e1.compareTo(e2));<newline46mondego><newline46mondego>    Entry e3 = new Entry();<newline46mondego>    e3.setNum(5);<newline46mondego>    System.out.println(<doubleQuotes46>e1 = <doubleQuotes46> + e1.getNum() + <doubleQuotes46>, e3 = <doubleQuotes46> + e3.getNum() + <doubleQuotes46>, e1.compareTo(e3): <doubleQuotes46> + e1.compareTo(e3));<newline46mondego><newline46mondego>    Entry e4 = new Entry();<newline46mondego>    e4.setNum(6);<newline46mondego>    System.out.println(<doubleQuotes46>e1 = <doubleQuotes46> + e1.getNum() + <doubleQuotes46>, e4 = <doubleQuotes46> + e4.getNum() + <doubleQuotes46>, e1.compareTo(e4): <doubleQuotes46> + e1.compareTo(e4));<newline46mondego>}<newline46mondego><newline46mondego>public static void test2() {<newline46mondego>    List<Entry> list = new ArrayList<Entry>();<newline46mondego>    int[] nums = { 5, 3, 9, 25, 1, -8 };<newline46mondego>    for (int i : nums) {<newline46mondego>        Entry e = new Entry();<newline46mondego>        e.setNum(i);<newline46mondego>        list.add(e);<newline46mondego>    }<newline46mondego>    Collections.sort(list);<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>Orig list: <doubleQuotes46>);<newline46mondego>    for (int i : nums) {<newline46mondego>        System.out.print(i + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println();<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>Sorted list: <doubleQuotes46>);<newline46mondego>    for (Entry e : list) {<newline46mondego>        System.out.print(e.getNum() + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>}<newline46mondego>"
"6532splitHere46","17675718splitHere46","listener.ora"
"6533splitHere46","17675718splitHere46","LISTENER =<newline46mondego>  (DESCRIPTION_LIST =<newline46mondego>    (DESCRIPTION =<newline46mondego>      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))<newline46mondego>      (ADDRESS = (PROTOCOL = TCP)(HOST = DS-1)(PORT = 1521))<newline46mondego>    )<newline46mondego>  )<newline46mondego>"
"6534splitHere46","17675718splitHere46","find . -type f -name listener.ora<newline46mondego>"
"6535splitHere46","17675827splitHere46","void bitwise_xor(InputArray src1, InputArray src2, OutputArray dst, InputArray mask=noArray())"
"6536splitHere46","17675827splitHere46","void cvXor(const CvArr* src1, const CvArr* src2, CvArr* dst, const CvArr* mask=NULL)"
"6537splitHere46","17675827splitHere46","cvXor"
"6538splitHere46","17675899splitHere46","keySet"
"6539splitHere46","17675899splitHere46","map.keySet().removeAll(keySet);"
"6540splitHere46","17675899splitHere46","keySet"
"6541splitHere46","17675899splitHere46","Map<String, String> map = new HashMap<>();<newline46mondego>map.put(<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>map.put(<doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>map.put(<doubleQuotes46>c<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>Set<String> set = new HashSet<> ();<newline46mondego>set.add(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>set.add(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego><newline46mondego>map.keySet().removeAll(set);<newline46mondego><newline46mondego>System.out.println(map); //only contains <doubleQuotes46>c<doubleQuotes46><newline46mondego>"
"6542splitHere46","17675978splitHere46","JXTable table = new JXTable(model);<newline46mondego>final ChangeDecorator controller = new ChangeDecorator();<newline46mondego>table.addHighlighter(controller.getChangeHighlighter());<newline46mondego>TableModelListener l = new TableModelListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void tableChanged(TableModelEvent e) {<newline46mondego>        if (TableUtilities.isUpdate(e)) {<newline46mondego>            Change change = new Change(e.getFirstRow(), e.getColumn());<newline46mondego>            controller.addChange(change);<newline46mondego>        } else if (TableUtilities.isInsert(e)) {<newline46mondego>            Change change = new Change(e.getFirstRow());<newline46mondego>            controller.addChange(change);<newline46mondego>        }<newline46mondego>    }<newline46mondego>};<newline46mondego>model.addTableModelListener(l);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * Manages the Highlighters for inserted rows/updated cells.<newline46mondego> */<newline46mondego>public static class ChangeDecorator {<newline46mondego><newline46mondego>    private List<Change> changes;<newline46mondego>    private AbstractHighlighter update;<newline46mondego>    private AbstractHighlighter insert;<newline46mondego>    private Highlighter compound;<newline46mondego><newline46mondego>    public ChangeDecorator() {<newline46mondego>        changes = new ArrayList<>();<newline46mondego>    }<newline46mondego><newline46mondego>    public Highlighter getChangeHighlighter() {<newline46mondego>        if (compound == null) {<newline46mondego>            update = new ColorHighlighter(new ChangePredicate(changes, true), <newline46mondego>                    Color.YELLOW, null);<newline46mondego>            insert = new ColorHighlighter(new ChangePredicate(changes, false), <newline46mondego>                    Color.GREEN, null);<newline46mondego>            compound = new CompoundHighlighter(update, insert);<newline46mondego>        }<newline46mondego>        return compound;<newline46mondego>    }<newline46mondego><newline46mondego>    public void addChange(Change change) {<newline46mondego>        startTimer(change, change.isCell ? update : insert);<newline46mondego>    }<newline46mondego><newline46mondego>    private void startTimer(final Change change, final AbstractHighlighter hl) {<newline46mondego>        changes.add(change);<newline46mondego>        hl.setHighlightPredicate(new ChangePredicate(changes, change.isCell));<newline46mondego>        ActionListener l = new ActionListener() {<newline46mondego>            boolean done;<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                if (!done) {<newline46mondego>                    done = true;<newline46mondego>                    return;<newline46mondego>                }<newline46mondego>                ((Timer) e.getSource()).stop();<newline46mondego>                changes.remove(change);<newline46mondego>                hl.setHighlightPredicate(new ChangePredicate(changes, change.isCell));<newline46mondego>            }<newline46mondego><newline46mondego>        };<newline46mondego>        Timer timer = new Timer(2000, l);<newline46mondego>        timer.setInitialDelay(100);<newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * A predicate enables highlighting a cell if it<newline46mondego> * contains a change for that cell. <newline46mondego> */<newline46mondego>public static class ChangePredicate implements HighlightPredicate {<newline46mondego><newline46mondego>    private List<Change> changes;<newline46mondego>    private boolean matchCell;<newline46mondego>    public ChangePredicate(List<Change> changes, boolean matchCell) {<newline46mondego>        this.changes = new ArrayList(changes);<newline46mondego>        this.matchCell = matchCell;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isHighlighted(Component renderer,<newline46mondego>            ComponentAdapter adapter) {<newline46mondego>        return changes.contains(createChange(adapter));<newline46mondego>    }<newline46mondego><newline46mondego>    private Change createChange(ComponentAdapter adapter) {<newline46mondego>        int modelRow = adapter.convertRowIndexToModel(adapter.row);<newline46mondego>        if (matchCell) {<newline46mondego>            int modelColumn = <newline46mondego>                    adapter.convertColumnIndexToModel(adapter.column);;<newline46mondego>                    return new Change(modelRow, modelColumn);<newline46mondego>        }<newline46mondego>        return new Change(modelRow);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * A crude class encapsulating a cell change. <newline46mondego> * <newline46mondego> */<newline46mondego>public static class Change {<newline46mondego>    int row;<newline46mondego>    int column;<newline46mondego>    boolean isCell;<newline46mondego><newline46mondego>    public Change(int row) {<newline46mondego>        this(row, -1, false);<newline46mondego>    }<newline46mondego><newline46mondego>    public Change(int row, int col) {<newline46mondego>        this(row, col, true);<newline46mondego>    }<newline46mondego><newline46mondego>    private Change(int row, int col, boolean update) {<newline46mondego>        this.row = row;<newline46mondego>        this.column = col;<newline46mondego>        this.isCell = update;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object obj) {<newline46mondego>        if (!(obj instanceof Change)) return false;<newline46mondego>        Change other = (Change) obj;<newline46mondego>        return row == other.row && column == other.column && isCell == other.isCell;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6543splitHere46","17676066splitHere46","YouClass<newline46mondego>{<newline46mondego>ProgressDialog dialog;<newline46mondego><newline46mondego> onCreate(....)<newline46mondego>{<newline46mondego>  //Execute the async task here.<newline46mondego>  new myNetworkingTask().execute(<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>private class myNetworkingTask extends AsyncTask<String, Void, String> {<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected String doInBackground(String... params) <newline46mondego>        {<newline46mondego>            //In this method you will do the networking task<newline46mondego>            httpclient.execute();<newline46mondego>        }<newline46mondego>        return <doubleQuotes46><doubleQuotes46>;<newline46mondego>  }      <newline46mondego><newline46mondego>  @Override<newline46mondego>  protected void onPostExecute(String result) { <newline46mondego>          //In this method you will hide the progress bar<newline46mondego>         dialog.dismiss();<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected void onPreExecute() {<newline46mondego>         //In this method you will display the progress bar.<newline46mondego>        dialog = ProgressDialog.show(MyActivity.this, <doubleQuotes46><doubleQuotes46>, <newline46mondego>                    <doubleQuotes46>Loading. Please wait...<doubleQuotes46>, true); <newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected void onProgressUpdate(Void... values) {<newline46mondego>  }<newline46mondego>"
"6544splitHere46","17676078splitHere46","Object"
"6545splitHere46","17676078splitHere46","payload"
"6546splitHere46","17676078splitHere46","List<Object>"
"6547splitHere46","17676078splitHere46","List"
"6548splitHere46","17676144splitHere46","SmsManager smsManager = SmsManager.getDefault();<newline46mondego>    smsManager.sendTextMessage(<doubleQuotes46>phoneNo<doubleQuotes46>, null, <doubleQuotes46>your message goes here<doubleQuotes46>, null, null);<newline46mondego>"
"6549splitHere46","17676144splitHere46","Intent sendIntent = new Intent(Intent.ACTION_VIEW);<newline46mondego>    sendIntent.putExtra(<doubleQuotes46>sms_body<doubleQuotes46>, <doubleQuotes46>default content<doubleQuotes46>); <newline46mondego>    sendIntent.setType(<doubleQuotes46>vnd.android-dir/mms-sms<doubleQuotes46>);<newline46mondego>    startActivity(sendIntent);<newline46mondego>"
"6550splitHere46","17676144splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.SEND_SMS<doubleQuotes46> /><newline46mondego>"
"6551splitHere46","17676279splitHere46","jps"
"6552splitHere46","17676279splitHere46","jps"
"6553splitHere46","17676279splitHere46","-v"
"6554splitHere46","17676289splitHere46","Model"
"6555splitHere46","17676289splitHere46","Controller"
"6556splitHere46","17676289splitHere46","model.asMap().clear();<newline46mondego>return <doubleQuotes46>redirect:<doubleQuotes46> + yourURL;<newline46mondego>"
"6557splitHere46","17676289splitHere46","RedirectView view = new RedirectView(<doubleQuotes46>redirect:<doubleQuotes46>+yourURL);<newline46mondego>view.setExposeModelAttributes(false);<newline46mondego>return new ModelAndView(view); <newline46mondego>"
"6558splitHere46","17676289splitHere46","HandlerInterceptor"
"6559splitHere46","17676321splitHere46","sheet.setColumnHidden(int columnIndex, boolean hidden); <newline46mondego>"
"6560splitHere46","17676321splitHere46","sheet.setColumnHidden(2, true);   // this will hide the column index 2<newline46mondego> sheet.setColumnHidden(2, false);   // this will unhide the column index 2<newline46mondego>"
"6561splitHere46","17676321splitHere46","sheet.isColumnHidden(int columnIndex);<newline46mondego>"
"6562splitHere46","17676321splitHere46","sheet.isColumnHidden(2);   //this will check the 2nd column index whether it is hidden or not<newline46mondego>"
"6563splitHere46","17676397splitHere46","resources"
"6564splitHere46","17676443splitHere46","//create converter<newline46mondego>PDFConverter converter = new PDFConverter();<newline46mondego><newline46mondego>//set multi-threading<newline46mondego>converter.setMaxProcessCount(2);<newline46mondego>"
"6565splitHere46","17676456splitHere46","GroupLayout"
"6566splitHere46","17676456splitHere46","Component"
"6567splitHere46","17676456splitHere46","Gui"
"6568splitHere46","17676456splitHere46","JFrame"
"6569splitHere46","17676456splitHere46","Component"
"6570splitHere46","17676456splitHere46","Tools"
"6571splitHere46","17676456splitHere46","Palette"
"6572splitHere46","17676456splitHere46","Swing Components"
"6573splitHere46","17676456splitHere46","Add from Project"
"6574splitHere46","17676526splitHere46","long"
"6575splitHere46","17676526splitHere46","long"
"6576splitHere46","17676526splitHere46","int"
"6577splitHere46","17676526splitHere46","int"
"6578splitHere46","17676526splitHere46","long"
"6579splitHere46","17676526splitHere46","int"
"6580splitHere46","17676526splitHere46","long"
"6581splitHere46","17676526splitHere46","int"
"6582splitHere46","17676526splitHere46","long"
"6583splitHere46","17676526splitHere46","int"
"6584splitHere46","17676881splitHere46","setAccessible(true)"
"6585splitHere46","17676881splitHere46","public class Main {<newline46mondego><newline46mondego>    private String foo;<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        // the Main instance<newline46mondego>        Main instance = new Main();<newline46mondego>        // setting the field via reflection<newline46mondego>        Field field = Main.class.getDeclaredField(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>        field.setAccessible(true);<newline46mondego>        field.set(instance, <doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>        // printing the field the <doubleQuotes46>classic<doubleQuotes46> way<newline46mondego>        System.out.println(instance.foo); // prints <doubleQuotes46>bar<doubleQuotes46><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6586splitHere46","17677044splitHere46","void     setCancelable(boolean flag)<newline46mondego>"
"6587splitHere46","17677091splitHere46","Pane pane = new Pane();<newline46mondego>pane.setPrefSize(200, 200);<newline46mondego>pane.setStyle(<doubleQuotes46><doubleQuotes46><newline46mondego>        + <doubleQuotes46>-fx-border-color:blue red red red; <doubleQuotes46><newline46mondego>        + <doubleQuotes46>-fx-background-color:lightgray; <doubleQuotes46><newline46mondego>        + <doubleQuotes46>-fx-border-width: 6 2 2 2; <doubleQuotes46><newline46mondego>        + <doubleQuotes46>-fx-border-style: dashed solid solid solid;<doubleQuotes46>);<newline46mondego>"
"6588splitHere46","17677091splitHere46","-fx-border-style"
"6589splitHere46","17677151splitHere46","myDir"
"6590splitHere46","17677151splitHere46","File"
"6591splitHere46","17677151splitHere46","File"
"6592splitHere46","17677151splitHere46","@Test<newline46mondego>public void testClassA()<newline46mondego>{<newline46mondego>    new NonStrictExpectations() {<newline46mondego>        @Mocked(<doubleQuotes46>list<doubleQuotes46>) File myDir;<newline46mondego><newline46mondego>        {<newline46mondego>            setField(ClassA.class, <doubleQuotes46>myDir<doubleQuotes46>, myDir);<newline46mondego>            myDir.list(); result = <doubleQuotes46>file1-bla.txt<doubleQuotes46>;<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    String returnedFileName = <newline46mondego>        Deencapsulation.invoke(ClassA.class, <doubleQuotes46>findFile<doubleQuotes46>, <doubleQuotes46>file1.txt<doubleQuotes46>);<newline46mondego><newline46mondego>    assertEquals(<doubleQuotes46>file1-bla.txt<doubleQuotes46>, returnedFileName);<newline46mondego>}<newline46mondego>"
"6593splitHere46","17677151splitHere46","private"
"6594splitHere46","17677151splitHere46","File"
"6595splitHere46","17677151splitHere46","public"
"6596splitHere46","17677301splitHere46","@Override<newline46mondego>    public void setValueAt( Object inValue, int inRow, int inCol ) {<newline46mondego>        ProductRow productRow = (ProductRow)( getRowsData().get(inRow) );<newline46mondego><newline46mondego>        //more code <newline46mondego>        productRow.setCantidad( inValue.toString() ); // when this is called all properties of productRow are changed.                 <newline46mondego><newline46mondego>        //fireTableCellUpdated( inRow, inCol );// this don't refresh cause i change the row also<newline46mondego>        //fireTableDataChanged(); - First approach. As pointed out this is wrong because it refreshes all table cells<newline46mondego>        fireTableRowsUpdated(inRow,inRow); // adding this<newline46mondego>    }<newline46mondego>"
"6597splitHere46","17677357splitHere46","return new ModelAndView(<doubleQuotes46>storeManager<doubleQuotes46>, <doubleQuotes46>albumService<doubleQuotes46> , <doubleQuotes46>albumService<doubleQuotes46>);<newline46mondego>"
"6598splitHere46","17677357splitHere46","return new ModelAndView(<doubleQuotes46>storeManager<doubleQuotes46>, <doubleQuotes46>albumService<doubleQuotes46> , albumService);<newline46mondego>"
"6599splitHere46","17677746splitHere46","preAux.setPreRecordLoadId(preLoad);"
"6600splitHere46","17677746splitHere46","preLoad.setPreRecordLoadAux(preAux);"
"6601splitHere46","17677746splitHere46","preAux"
"6602splitHere46","17677770splitHere46","class Point {<newline46mondego>  double x;<newline46mondego>  double y;<newline46mondego>}<newline46mondego>"
"6603splitHere46","17677770splitHere46","int[] xycoords"
"6604splitHere46","17677844splitHere46","result = this.methodTocall.invoke(null, new Object[]{args});<newline46mondego>"
"6605splitHere46","17677844splitHere46","args"
"6606splitHere46","17677844splitHere46","Object"
"6607splitHere46","17677844splitHere46","result = this.methodTocall.invoke(null, args);<newline46mondego>"
"6608splitHere46","17677844splitHere46","String[] a = new String[]{<doubleQuotes46>H<doubleQuotes46>,<doubleQuotes46>E<doubleQuotes46>,<doubleQuotes46>L<doubleQuotes46>,<doubleQuotes46>L<doubleQuotes46>,<doubleQuotes46>O<doubleQuotes46>};<newline46mondego>MethodCalling mc = new MethodCalling(<doubleQuotes46>wat.SizeChecker<doubleQuotes46>);<newline46mondego>mc.setMethod(<doubleQuotes46>isTooBig<doubleQuotes46>, Comparable[].class);<newline46mondego>/* change here: place the single parameter into a parameter array */<newline46mondego>Boolean result1 = (Boolean) mc.callMethod(new Object[]{a});<newline46mondego>System.out.println(<doubleQuotes46>too big=<doubleQuotes46>+result1);<newline46mondego><newline46mondego>mc.setMethod(<doubleQuotes46>isCorrectLength<doubleQuotes46>,Comparable[].class, int.class);<newline46mondego>/* since the callMethod accepts varargs, these are automatically placed in an Object[] */<newline46mondego>Boolean result2 = (Boolean) mc.callMethod(a, 5);<newline46mondego>System.out.println(<doubleQuotes46>length is 5=<doubleQuotes46>+result2);<newline46mondego>"
"6609splitHere46","17677850splitHere46","String"
"6610splitHere46","17677850splitHere46","exists()"
"6611splitHere46","17677850splitHere46","File"
"6612splitHere46","17677850splitHere46","exists()"
"6613splitHere46","17677850splitHere46","File"
"6614splitHere46","17677850splitHere46","if (new File(<doubleQuotes46>C:/data/datafile.txt<doubleQuotes46>).exists())<newline46mondego>{<newline46mondego>}<newline46mondego>"
"6615splitHere46","17677948splitHere46","drainTo"
"6616splitHere46","17677948splitHere46","while ((e = queue.poll()) != null) collection.add(e);<newline46mondego>"
"6617splitHere46","17677948splitHere46","ArrayBlockingQueue"
"6618splitHere46","17677966splitHere46","<doubleQuotes46>TestString<doubleQuotes46>"
"6619splitHere46","17677966splitHere46","String"
"6620splitHere46","17677966splitHere46","<doubleQuotes46>TestString<doubleQuotes46>"
"6621splitHere46","17677966splitHere46","String"
"6622splitHere46","17677966splitHere46","s"
"6623splitHere46","17677966splitHere46","String"
"6624splitHere46","17677966splitHere46","String"
"6625splitHere46","17677966splitHere46","String s = new String(<doubleQuotes46>TestString<doubleQuotes46>);<newline46mondego>"
"6626splitHere46","17677966splitHere46","<doubleQuotes46>TestString<doubleQuotes46>"
"6627splitHere46","17677966splitHere46","String"
"6628splitHere46","17677966splitHere46","s"
"6629splitHere46","17677966splitHere46","s"
"6630splitHere46","17677966splitHere46","<doubleQuotes46>TestString<doubleQuotes46>"
"6631splitHere46","17677966splitHere46","String s = new String(<doubleQuotes46>TestString<doubleQuotes46>);<newline46mondego>String t = <doubleQuotes46>TestString<doubleQuotes46>;<newline46mondego>System.out.println(s == t);<newline46mondego>"
"6632splitHere46","17677966splitHere46","false"
"6633splitHere46","17678085splitHere46","Process cmdProc = Runtime.getRuntime().exec(<doubleQuotes46>ssh -o ...<doubleQuotes46>);<newline46mondego>"
"6634splitHere46","17678085splitHere46","BufferedReader outReader = new BufferedReader(<newline46mondego>                              new InputStreamReader(cmdProc.getInputStream()));<newline46mondego>String l;<newline46mondego>while ((l= outReader.readLine()) != null) {<newline46mondego>   // process standard output here<newline46mondego>}<newline46mondego>"
"6635splitHere46","17678259splitHere46","getContext().setTheme(resid)"
"6636splitHere46","17678417splitHere46","public void SetJiraIssue(string issueKey, JiraIssue j)<newline46mondego>    {<newline46mondego>        RestRequest request = new RestRequest(<doubleQuotes46>issue/{key}<doubleQuotes46>, Method.PUT);<newline46mondego>        request.AddUrlSegment(<doubleQuotes46>key<doubleQuotes46>, issueKey);<newline46mondego>        request.RequestFormat = DataFormat.Json;<newline46mondego><newline46mondego>        string jSonContent = @<doubleQuotes46>{<doubleQuotes46><doubleQuotes46>fields<doubleQuotes46><doubleQuotes46>:{<doubleQuotes46><doubleQuotes46>summary<doubleQuotes46><doubleQuotes46>:<doubleQuotes46><doubleQuotes46>test changing summary<doubleQuotes46><doubleQuotes46>}}<doubleQuotes46>;<newline46mondego>        request.AddParameter(<doubleQuotes46>application/json<doubleQuotes46>, jSonContent, ParameterType.RequestBody);<newline46mondego><newline46mondego>        var response = Execute(request);<newline46mondego>        Console.WriteLine(response);<newline46mondego>    }<newline46mondego>"
"6637splitHere46","17678427splitHere46","Device"
"6638splitHere46","17678427splitHere46","equals"
"6639splitHere46","17678427splitHere46","hashCode"
"6640splitHere46","17678427splitHere46","Device"
"6641splitHere46","17678427splitHere46","ObservableArrayList"
"6642splitHere46","17678427splitHere46","equals/hashCode"
"6643splitHere46","17678427splitHere46","public class ObsListTest {<newline46mondego><newline46mondego>    static class Device {<newline46mondego>        int value;<newline46mondego><newline46mondego>        public Device(int value) {<newline46mondego>            this.value = value;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        ObservableList<Device> list = FXCollections.<Device>observableArrayList();<newline46mondego>        Device data1 = new Device(1);<newline46mondego>        Device anotherData1 = new Device(1);<newline46mondego>        list.add(data1);<newline46mondego>        System.out.println(list.contains(data1)); // true<newline46mondego>        System.out.println(list.contains(anotherData1)); // false<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6644splitHere46","17678427splitHere46","@Override<newline46mondego>        public boolean equals(Object obj) {<newline46mondego>            if (obj == null || getClass() != obj.getClass()) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>            return this.value == ((Device) obj).value;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int hashCode() {<newline46mondego>            return 7 + 5*value; // 5 and 7 are random prime numbers<newline46mondego>        }<newline46mondego>"
"6645splitHere46","17678471splitHere46","public ModelAndView home() {<newline46mondego> ModelAndView mav = new ModelAndView();<newline46mondego> mav.addObject(<doubleQuotes46>users<doubleQuotes46>, userList);<newline46mondego> mav.addObject(<doubleQuotes46>user<doubleQuotes46>, <doubleQuotes46>Big Joe<doubleQuotes46>);<newline46mondego> return mav;<newline46mondego>}<newline46mondego>"
"6646splitHere46","17678540splitHere46","FileReader fileReader = new FileReader(fileName);<newline46mondego>BufferedReader bufferedReader = new BufferedReader(fileReader);<newline46mondego>FileWriter fstream = new FileWriter(<doubleQuotes46>out.txt<doubleQuotes46>);<newline46mondego>BufferedWriter out = new BufferedWriter(fstream);<newline46mondego>while ((line = bufferedReader.readLine()) != null) {<newline46mondego>    try {<newline46mondego>        out.write(line);<newline46mondego>        out.write(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    } catch (Exception e) {<newline46mondego>        System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>    }<newline46mondego>    System.out.printf(<doubleQuotes46>%65s\n<doubleQuotes46>, line);<newline46mondego>}<newline46mondego>out.close();<newline46mondego>bufferedReader.close();<newline46mondego>"
"6647splitHere46","17678540splitHere46","FileWriter fstream = new FileWriter(<doubleQuotes46>out.txt<doubleQuotes46>);"
"6648splitHere46","17678575splitHere46","List<String> EXTS = Arrays.asList(<doubleQuotes46>tar.gz<doubleQuotes46>, <doubleQuotes46>tgz<doubleQuotes46>, <doubleQuotes46>gz<doubleQuotes46>, <doubleQuotes46>zip<doubleQuotes46>);<newline46mondego>"
"6649splitHere46","17678575splitHere46","String getExtension(String fileName) {<newline46mondego>  String found = null;<newline46mondego>  for (String ext : EXTS) {<newline46mondego>    if (fileName.endsWith(<doubleQuotes46>.<doubleQuotes46> + ext)) {<newline46mondego>      if (found == null || found.length() < ext.length()) {<newline46mondego>        found = ext;<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return found;<newline46mondego>}<newline46mondego>"
"6650splitHere46","17678575splitHere46","getExtension(<doubleQuotes46>file.tar.gz<doubleQuotes46>)"
"6651splitHere46","17678575splitHere46","<doubleQuotes46>tar.gz<doubleQuotes46>"
"6652splitHere46","17678575splitHere46","filename.toLowerCase().endsWith(<doubleQuotes46>.<doubleQuotes46> + ext)"
"6653splitHere46","17678588splitHere46","Optionally, one may configure the pool to examine and possibly evict objects<newline46mondego>as they sit idle in the pool and to ensure that a minimum number of idle<newline46mondego>objects are available. This is performed by an <doubleQuotes46>idle object eviction<doubleQuotes46> thread,<newline46mondego>which runs asynchronously. Caution should be used when configuring this<newline46mondego>optional feature. Eviction runs contend with client threads for access to<newline46mondego>objects in the pool, so if they run too frequently performance issues may<newline46mondego>result.<newline46mondego><newline46mondego>.... <newline46mondego><newline46mondego>minEvictableIdleTimeMillis specifies the minimum amount of time that <newline46mondego>an object may sit idle in the pool before it is eligible for eviction<newline46mondego>due to idle time. When non-positive, no object will be dropped from <newline46mondego>the pool due to idle time alone. This setting has no effect unless<newline46mondego>timeBetweenEvictionRunsMillis > 0. The default setting for this <newline46mondego>parameter is 30 minutes.<newline46mondego>"
"6654splitHere46","17678588splitHere46","PoolableObjectFactory"
"6655splitHere46","17678588splitHere46","PoolableObjectFactory.destroyObject(T object)"
"6656splitHere46","17678603splitHere46","private final String FIND_STRING = <doubleQuotes46>select * from TABLENANE where {0} = ?<doubleQuotes46>;<newline46mondego>       .<newline46mondego>       .<newline46mondego>       .<newline46mondego>    private final Map<String, PreparedStatement> statements = new HashMap<String, PreparedStatement>();<newline46mondego><newline46mondego>    private PreparedStatement prepareStatement(String field, String toFind) throws SQLException{<newline46mondego>       PreparedStatement statement = null;<newline46mondego>       if (statements.contains(field)){<newline46mondego>          statement = statements.get(field);<newline46mondego>       }else{<newline46mondego>          String findInHelpDefinition = MessageFormat.format(FIND_STRING, field));<newline46mondego>          statement = connection.prepareStatement(findInHelpDefinition);<newline46mondego>          statemnts.put(field, statement);<newline46mondego>       }<newline46mondego>       statement.setString(1, toFind);<newline46mondego>       return statement;<newline46mondego>    }<newline46mondego>"
"6657splitHere46","17678614splitHere46","([a-zA-Z0-9]?)+"
"6658splitHere46","17678614splitHere46","^http\://[\w\-\.]+\.[a-zA-Z]{2}/[\w]{2}/[\w\-]+/(uvw_)+([a-zA-Z0-9]+)([\w\-]*)$<newline46mondego>"
"6659splitHere46","17678683splitHere46","CommandLine.getArgList()"
"6660splitHere46","17678683splitHere46","hasOption()"
"6661splitHere46","17678683splitHere46","getOptionValue()"
"6662splitHere46","17678716splitHere46","public class Generator {<newline46mondego>  private static length;<newline46mondego>  private static categories;<newline46mondego><newline46mondego>  //getters/setters<newline46mondego>}<newline46mondego>"
"6663splitHere46","17678786splitHere46","gwt-user.jar"
"6664splitHere46","17678786splitHere46","gwt-dev.jar"
"6665splitHere46","17678786splitHere46","gwt-servlet.jar"
"6666splitHere46","17678786splitHere46","gwt-servlet-deps.jar"
"6667splitHere46","17678786splitHere46","gwt-user"
"6668splitHere46","17678786splitHere46","gwt-dev"
"6669splitHere46","17678786splitHere46","provided"
"6670splitHere46","17678805splitHere46","AjaxFormComponentUpdatingBehavior"
"6671splitHere46","17678805splitHere46","DropDownChoice projectLinksDropDown = new DropDownChoice(<doubleQuotes46>projectLinks<doubleQuotes46>, new Model(selectedProjectLink), projectLinkOptionList);<newline46mondego>projectLinksDropDown.add(new AjaxFormComponentUpdatingBehavior(<doubleQuotes46>onChange<doubleQuotes46>) {<newline46mondego>    @Override<newline46mondego>    protected void onUpdate(AjaxRequestTarget target) {<newline46mondego>        selectedProjectLink = (ProjectLink) getFormComponent().getConvertedInput();<newline46mondego>        setResponsePage(selectedProjectLink.getRedirectPage());<newline46mondego>    }<newline46mondego>}<newline46mondego>this.add(projectLinksDropDown);<newline46mondego>"
"6672splitHere46","17678805splitHere46","AjaxFormComponentUpdatingBehavior"
"6673splitHere46","17678944splitHere46","index=0"
"6674splitHere46","17678944splitHere46","count"
"6675splitHere46","17678944splitHere46","count++"
"6676splitHere46","17678944splitHere46","for (index = x.length-count; index < x.length; index++) {<newline46mondego>    System.out.printf(<doubleQuotes46>%3d. \t\t%5.1f%%\n<doubleQuotes46>, (index + 1), x[index]);<newline46mondego>"
"6677splitHere46","17679073splitHere46","mvn package"
"6678splitHere46","17679155splitHere46","PigServer"
"6679splitHere46","17679155splitHere46","stdin"
"6680splitHere46","17679155splitHere46","stdout"
"6681splitHere46","17679310splitHere46","deleteOnExit()"
"6682splitHere46","17679310splitHere46","File"
"6683splitHere46","17679310splitHere46","if (!dir.exists()) {<newline46mondego>   dir.mkdir();<newline46mondego>   dir.deleteOnExit();<newline46mondego>}<newline46mondego><newline46mondego>// etc...<newline46mondego>"
"6684splitHere46","17679671splitHere46","public class DateIn {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String[] dates = {<newline46mondego>            <doubleQuotes46>30-08-2011<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>25.06.2011<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>15 Juni 2011<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>01-07-11<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>19-9-2011<doubleQuotes46>,<newline46mondego>        };<newline46mondego>        DateIn in = new DateIn();<newline46mondego>        Locale locale = Locale.US;<newline46mondego>        for (String date : dates) {<newline46mondego>            try {<newline46mondego>                Date d = in.read(date, locale);<newline46mondego>                System.out.printf(<doubleQuotes46>%s -> %s%n<doubleQuotes46>, date,<newline46mondego>                    new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>).format(d));<newline46mondego>            } catch (IllegalArgumentException e) {<newline46mondego>                System.out.println(e.getMessage());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private Date read(String date, Locale locale)<newline46mondego>            throws IllegalArgumentException {<newline46mondego>        final String[] ymdFormatters = { <doubleQuotes46>y<doubleQuotes46>, <doubleQuotes46>M<doubleQuotes46>, <doubleQuotes46>d<doubleQuotes46> };<newline46mondego>        final int[] ymdGetters = { Calendar.YEAR, Calendar.MONTH,<newline46mondego>            Calendar.DAY_OF_MONTH };<newline46mondego>        String[] tokens = date.split(<doubleQuotes46>\\W+<doubleQuotes46>);<newline46mondego>        final int Y = 0;<newline46mondego>        final int M = 1;<newline46mondego>        final int D = 2;<newline46mondego>        int[] ymdValues = new int[3];<newline46mondego>        for (String token : tokens) {<newline46mondego>            if (token.matches(<doubleQuotes46>\\d+\\pL+<doubleQuotes46>)) { // 1st, 2nd, 3rd, 4th, 1e, ...<newline46mondego>                token = token.replaceAll(<doubleQuotes46>\\pL+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>                ymdValues[D] = Integer.parseInt(token);<newline46mondego>            } else if (token.matches(<doubleQuotes46>\\d+<doubleQuotes46>)) {<newline46mondego>                int n = Integer.parseInt(token);<newline46mondego>                if (n > 31) {<newline46mondego>                    ymdValues[Y] = n;<newline46mondego>                } else if (n > 12) {<newline46mondego>                    ymdValues[D] = n;<newline46mondego>                } else {<newline46mondego>                    // Locale dependent order.<newline46mondego>                    if (ymdValues[M] == 0) {<newline46mondego>                        ymdValues[M] = n;<newline46mondego>                    } else if (ymdValues[D] == 0) {<newline46mondego>                        ymdValues[D] = n;<newline46mondego>                    } else if (ymdValues[Y] == 0) {<newline46mondego>                        ymdValues[Y] = n;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } else if (!token.isEmpty()) {<newline46mondego>                for (int md = M; md <= D; ++md) {<newline46mondego>                    String fmt = <doubleQuotes46><doubleQuotes46>;<newline46mondego>                    for (int i = 0; i < 4; ++i) {<newline46mondego>                        fmt += ymdFormatters[md];<newline46mondego>                        SimpleDateFormat sdf = new SimpleDateFormat(fmt);<newline46mondego>                        sdf.setLenient(true);<newline46mondego>                        try {<newline46mondego>                            Date dt = sdf.parse(token);<newline46mondego>                            Calendar cal = Calendar.getInstance(locale);<newline46mondego>                            cal.setTime(dt);<newline46mondego>                            int n = cal.get(ymdGetters[md]);<newline46mondego>                            if (md == M) {<newline46mondego>                                ++n; // To 1-based<newline46mondego>                            }<newline46mondego>                            ymdValues[md] = n;<newline46mondego>                            break;<newline46mondego>                        } catch (ParseException e) {<newline46mondego>                            //continue;<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        Calendar calendar = Calendar.getInstance(locale);<newline46mondego>        for (int md = Y; md <= D; ++md) {<newline46mondego>            int n = ymdValues[md];<newline46mondego>            if (n == 0) {<newline46mondego>                throw new IllegalArgumentException(<doubleQuotes46>Missing <doubleQuotes46><newline46mondego>                    + ymdFormatters[md] + <doubleQuotes46> part in <doubleQuotes46> + date);<newline46mondego>            }<newline46mondego>            if (md == Y) {<newline46mondego>                if (n < 100)<newline46mondego>                    n += (calendar.get(Calendar.YEAR) / 100) * 100;<newline46mondego>            } else if (md == M) {<newline46mondego>                --n; // Calendar's month is 0-based.<newline46mondego>            }<newline46mondego>            calendar.set(ymdGetters[md], n);<newline46mondego>        }<newline46mondego>        return calendar.getTime();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6685splitHere46","17679928splitHere46","B()"
"6686splitHere46","17679928splitHere46","A()"
"6687splitHere46","17679928splitHere46","A()"
"6688splitHere46","17679928splitHere46","A()"
"6689splitHere46","17679928splitHere46","A()"
"6690splitHere46","17679942splitHere46","ByteBuffer"
"6691splitHere46","17679981splitHere46","public class change_username extends JFrame {<newline46mondego><newline46mondego>    private JLabel uT1, pwT, uCh, statusBar;<newline46mondego>    private JTextField username_input, username_change;<newline46mondego>    private JPasswordField password_input;<newline46mondego><newline46mondego>    // ADD IT HERE **************************************<newline46mondego>    private String userName, passWord;<newline46mondego><newline46mondego>    public String getUserName(){<newline46mondego>        return this.userName;<newline46mondego>    } <newline46mondego><newline46mondego>    public void setUserName(String givenUserName){<newline46mondego>        this.userName = givenUserName;<newline46mondego>    }<newline46mondego><newline46mondego>    // **************************************<newline46mondego><newline46mondego><newline46mondego>    public change_username() {<newline46mondego>        super(<doubleQuotes46>Change Username<doubleQuotes46>); <newline46mondego>        setPreferredSize (new Dimension (400, 85));<newline46mondego>        setLayout (null);<newline46mondego><newline46mondego>    // YOUR CODE HERE<newline46mondego><newline46mondego><newline46mondego>// CLASS 3<newline46mondego>public class create_account extends JFrame{<newline46mondego>    private String u1, pw1;<newline46mondego>    class4 objClass4 = new class4();<newline46mondego>    u1 = objClass4.getUserName();<newline46mondego><newline46mondego>    // YOUR code here.......<newline46mondego>"
"6692splitHere46","17680356splitHere46","StudentUnion"
"6693splitHere46","17680356splitHere46","Comparable"
"6694splitHere46","17680356splitHere46","public class StudentUnion implements Comparable<StudentUnion> {<newline46mondego><newline46mondego>    public int compareTo(StudentUnion s) {<newline46mondego>        ....<newline46mondego>        return result // 1 or 0;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6695splitHere46","17680356splitHere46","Student"
"6696splitHere46","17680356splitHere46","Comparable"
"6697splitHere46","17680356splitHere46","StudentUnion"
"6698splitHere46","17680356splitHere46","StudnetUnion"
"6699splitHere46","17680356splitHere46","public class Student implements Comparable<Student> {<newline46mondego>    public int compareTo(Student s) {<newline46mondego>        int result = studentUnion.compareTo(s.studentUnion);<newline46mondego>        if (result != 0)<newline46mondego>            return result;<newline46mondego>        // use another field like name to break ties on StudentUnion<newline46mondego>        return name.compareTo(name);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6700splitHere46","17680513splitHere46","private void writeObject(ObjectOutputStream os) {<newline46mondego>  try {<newline46mondego>    os.defaultWriteObject();<newline46mondego>    os.writeInt(c.getSize());<newline46mondego>    os.writeObject(c.getColor());<newline46mondego>  } catch (Exception e) {<newline46mondego>    // handle exception<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>private void readObject(ObjectInputStream is) {<newline46mondego>  try {<newline46mondego>    is.defaultReadObject();<newline46mondego>    int collarSize = is.readInt();<newline46mondego>    String collarColor = (String) is.readObject();<newline46mondego>    this.c = new Collar(collarColor, collarSize);<newline46mondego>  } catch (Exception e) {<newline46mondego>    // handle exception<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6701splitHere46","17680704splitHere46","==([^=]+)==([^=]+)(?=(?:=|$))<newline46mondego>"
"6702splitHere46","17680704splitHere46","="
"6703splitHere46","17680704splitHere46","ID"
"6704splitHere46","17680704splitHere46","String data = <doubleQuotes46>==SOME_ID== - item 1 - item 2 - item 3 .. item 100 == SOME_ID_2 == - item 1 - item 2 - item 3 ... item 100 == SOME_ID_3 == ...<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(<doubleQuotes46>==([^=]+)==([^=]+)(?=(?:=|$))<doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(data);<newline46mondego>while (m.find()) {<newline46mondego>    System.out.println(<doubleQuotes46>ID=<doubleQuotes46>+m.group(1));<newline46mondego>    System.out.println(<doubleQuotes46>Data=<doubleQuotes46>+m.group(2));<newline46mondego>}<newline46mondego>"
"6705splitHere46","17680704splitHere46","ID=SOME_ID<newline46mondego>Data= - item 1 - item 2 - item 3 .. item 100 <newline46mondego>ID= SOME_ID_2 <newline46mondego>Data= - item 1 - item 2 - item 3 ... item 100 <newline46mondego>ID= SOME_ID_3 <newline46mondego>Data= ...<newline46mondego>"
"6706splitHere46","17680704splitHere46","data"
"6707splitHere46","17680704splitHere46","group(2)"
"6708splitHere46","17680704splitHere46","String.split"
"6709splitHere46","17680731splitHere46","System.getProperty(<doubleQuotes46>catalina.base<doubleQuotes46>);"
"6710splitHere46","17680814splitHere46","TypeAdapter"
"6711splitHere46","17680814splitHere46","Test"
"6712splitHere46","17680814splitHere46","private class TestDeserializer implements JsonDeserializer<Test> {<newline46mondego>  public Test deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)<newline46mondego>      throws JsonParseException {<newline46mondego><newline46mondego>    JsonObject obj = json.getAsJsonObject();<newline46mondego><newline46mondego>    int id = obj.get(<doubleQuotes46>id<doubleQuotes46>).getAsInt();<newline46mondego>    String name = obj.get(<doubleQuotes46>name<doubleQuotes46>).getAsString();<newline46mondego><newline46mondego>    double distance = obj.get(<doubleQuotes46>param_distance<doubleQuotes46>).getAsDouble();<newline46mondego>    int sampling = obj.get(<doubleQuotes46>param_sampling<doubleQuotes46>).getAsInt();<newline46mondego><newline46mondego>    //assuming you have suitable constructors...<newline46mondego>    Test test = new Test(id, name, new Parameters(distance, sampling));<newline46mondego><newline46mondego>    return test;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6713splitHere46","17680814splitHere46","TypeAdapter"
"6714splitHere46","17680814splitHere46","GsonBuilder gson = new GsonBuilder();<newline46mondego>gson.registerTypeAdapter(Test.class, new TestDeserializer());<newline46mondego>"
"6715splitHere46","17680814splitHere46","gson.fromJson(yourJsonString, Test.class);<newline46mondego>"
"6716splitHere46","17680814splitHere46","Test"
"6717splitHere46","17680818splitHere46","grabFocus()"
"6718splitHere46","17680818splitHere46","requestFocusInWindow()"
"6719splitHere46","17680818splitHere46","JDialog"
"6720splitHere46","17680818splitHere46","JButton"
"6721splitHere46","17680818splitHere46","requestFocusInWindow()"
"6722splitHere46","17680818splitHere46","grabFocus()"
"6723splitHere46","17680818splitHere46","import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>class Focus extends JFrame<newline46mondego>{<newline46mondego>JButton jb;<newline46mondego>JTextField jt;<newline46mondego><newline46mondego>    public Focus()<newline46mondego>    {<newline46mondego>        createAndShowGUI();<newline46mondego>    }<newline46mondego><newline46mondego>    private void createAndShowGUI()<newline46mondego>    {<newline46mondego>        setTitle(<doubleQuotes46>grabFocus() vs requestFocusInWindow()<doubleQuotes46>);<newline46mondego>        setLayout(new FlowLayout());<newline46mondego>        setSize(400,400);<newline46mondego>        setVisible(true);<newline46mondego>        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        jb=new JButton(<doubleQuotes46>Open Dialog<doubleQuotes46>);<newline46mondego>        jb.addActionListener(new ActionListener(){<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                showDialog();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        add(jb);<newline46mondego><newline46mondego>        jt=new JTextField(20);<newline46mondego><newline46mondego>        add(jt);<newline46mondego>    }<newline46mondego><newline46mondego>    private void showDialog()<newline46mondego>    {<newline46mondego>        JDialog jd=new JDialog();<newline46mondego>        jd.setLayout(new GridLayout(2,2));<newline46mondego>        jd.setVisible(true);<newline46mondego><newline46mondego><newline46mondego>        JLabel l1=new JLabel(<doubleQuotes46>Label 1<doubleQuotes46>);<newline46mondego>        JLabel l2=new JLabel(<doubleQuotes46>Label 2<doubleQuotes46>);<newline46mondego><newline46mondego>        JTextField jt1=new JTextField(20);<newline46mondego>        JTextField jt2=new JTextField(20);<newline46mondego><newline46mondego>        jd.add(l1);<newline46mondego>        jd.add(jt1);<newline46mondego>        jd.add(l2);<newline46mondego>        jd.add(jt2);<newline46mondego><newline46mondego>        jt.requestFocusInWindow();<newline46mondego>        //jt.grabFocus();<newline46mondego><newline46mondego>        jd.pack();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable(){<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                new Focus();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6724splitHere46","17680818splitHere46","requestFocusInWindow()"
"6725splitHere46","17680818splitHere46","jt"
"6726splitHere46","17680818splitHere46","jt"
"6727splitHere46","17680818splitHere46","JDialog"
"6728splitHere46","17680818splitHere46","JButton"
"6729splitHere46","17680818splitHere46","JTextField"
"6730splitHere46","17680818splitHere46","JDialog"
"6731splitHere46","17680818splitHere46","grabFocus()"
"6732splitHere46","17680818splitHere46","JButton"
"6733splitHere46","17680818splitHere46","JDialog"
"6734splitHere46","17680818splitHere46","grabFocus()"
"6735splitHere46","17680818splitHere46","JFrame"
"6736splitHere46","17680818splitHere46","jt"
"6737splitHere46","17680849splitHere46","-Dweblogic.security.SSL.trustedCAKeyStore"
"6738splitHere46","17680849splitHere46","System.setProperty(<doubleQuotes46>javax.net.ssl.trustStore<doubleQuotes46>, trustPath)"
"6739splitHere46","17680849splitHere46","-Dssl.properties=$HOME/.keystore/ssl.properties"
"6740splitHere46","17680974splitHere46","(?:.(?!xyz))*$<newline46mondego>"
"6741splitHere46","17680974splitHere46","xyz"
"6742splitHere46","17680974splitHere46","."
"6743splitHere46","17680974splitHere46","(?:[\s\S](?!xyz))*$<newline46mondego>   ^^^^^^<newline46mondego>"
"6744splitHere46","17680974splitHere46","xyz"
"6745splitHere46","17680974splitHere46","# checks that the var name is NOT (using ?!) using one of the acceptable rejection methods<newline46mondego>   (?:[\s\S](?!<newline46mondego>       \1[.\s]+<newline46mondego>       (?:setFeature\s*\(\s*<doubleQuotes46>http://xml.org/sax/features/external-general-entities<doubleQuotes46>\s*,\s*false\s*\)<newline46mondego>         |setFeature\s*\(\s*<doubleQuotes46>http://apache.org/xml/features/disallow-doctype-decl<doubleQuotes46>\s*,\s*false\s*\)<newline46mondego>         |setExpandEntityReferences\s*\(\s*false\s*\))<newline46mondego>   ))*$<newline46mondego>"
"6746splitHere46","17680974splitHere46","factory"
"6747splitHere46","17680974splitHere46","old_factory"
"6748splitHere46","17680974splitHere46","\b"
"6749splitHere46","17680974splitHere46","\1"
"6750splitHere46","17680974splitHere46","\b\1<newline46mondego>"
"6751splitHere46","17680974splitHere46","\s"
"6752splitHere46","17680974splitHere46","\r"
"6753splitHere46","17680974splitHere46","\n"
"6754splitHere46","17680974splitHere46","[\s\r\n]"
"6755splitHere46","17680974splitHere46","\s"
"6756splitHere46","17680974splitHere46","newInstance.*<newline46mondego>"
"6757splitHere46","17680974splitHere46","newInstance[.]*<newline46mondego>"
"6758splitHere46","17680974splitHere46","\s"
"6759splitHere46","17680974splitHere46","\w"
"6760splitHere46","17680974splitHere46","."
"6761splitHere46","17681156splitHere46","UICommand"
"6762splitHere46","17681156splitHere46","jsf.ajax.request()"
"6763splitHere46","17681156splitHere46","<h:commandButton>"
"6764splitHere46","17681156splitHere46","<p:remoteCommand>"
"6765splitHere46","17681156splitHere46","<o:commandScript>"
"6766splitHere46","17681156splitHere46","<h:commandButton>"
"6767splitHere46","17681164splitHere46","getClass()"
"6768splitHere46","17681164splitHere46","@JSON"
"6769splitHere46","17681227splitHere46","getBookID()"
"6770splitHere46","17681227splitHere46","@Override<newline46mondego>public String toString() {<newline46mondego>    String stg = getBookID() + '\t' + getTitle() <newline46mondego>        + addSpaces(title, 30) + getAuthor() <newline46mondego>        + addSpaces(author, 30) + getGenre() <newline46mondego>        + addSpaces(genre, 15) + getStatus() <newline46mondego>        + addSpaces(status, 5) + getLocation() <newline46mondego>        + addSpaces(Location, 20) + getCondition();<newline46mondego>    return stg;<newline46mondego>}<newline46mondego>"
"6771splitHere46","17681227splitHere46","protected"
"6772splitHere46","17681240splitHere46","for (ScanResult result : getScanResults()) { ... }<newline46mondego>"
"6773splitHere46","17681318splitHere46","String dt = <doubleQuotes46>Mon Jul 15 13:44:52 UTC 2013<doubleQuotes46>;<newline46mondego> SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>EEE MMM dd HH:mm:ss z yyyy<doubleQuotes46>);<newline46mondego> System.out.println(sdf.parse(dt));<newline46mondego>"
"6774splitHere46","17681393splitHere46","com.androidexample.httpgetexample.HttpGetAndroidExample<newline46mondego>"
"6775splitHere46","17681393splitHere46","com.example.httpgetandroidexample.HttpGetAndroidExample<newline46mondego>"
"6776splitHere46","17681559splitHere46","<a4j:ajax>"
"6777splitHere46","17681559splitHere46","ClientBehaviorHolder"
"6778splitHere46","17681559splitHere46","ClientBehaviorHolder#getEventNames()"
"6779splitHere46","17681559splitHere46","on"
"6780splitHere46","17681559splitHere46","onlistshow"
"6781splitHere46","17681559splitHere46","event=<doubleQuotes46>listshow<doubleQuotes46>"
"6782splitHere46","17681559splitHere46","action"
"6783splitHere46","17681559splitHere46","ActionSource"
"6784splitHere46","17681559splitHere46","valueChange"
"6785splitHere46","17681559splitHere46","EditableValueHolder"
"6786splitHere46","17681713splitHere46","void Save(){  <newline46mondego>String folder = <doubleQuotes46>/sdcard/Pictures/MyAppFolder<doubleQuotes46>;<newline46mondego>       Imageview  view = (ImageView)findViewById(R.id.cachesView);<newline46mondego><newline46mondego>          view.buildDrawingCache(); <newline46mondego><newline46mondego>        Bitmap yourBitmap = view.getDrawingCache();  <newline46mondego>          final File myDir = new File(folder);<newline46mondego>                myDir.mkdirs();<newline46mondego>                final Random generator = new Random();<newline46mondego>                int n = 10000;<newline46mondego>                n = generator.nextInt(n);<newline46mondego>                final String fname = <doubleQuotes46>StyleMe-<doubleQuotes46> + n + <doubleQuotes46>.png<doubleQuotes46>;<newline46mondego>                File file = new File(myDir, fname);<newline46mondego>                if (file.exists())<newline46mondego>                    FileOutputStream out = new FileOutputStream(file);<newline46mondego>                    yourBitmap.compress(CompressFormat.JPEG, 100, out);<newline46mondego>                    out.flush();<newline46mondego>                    out.close();<newline46mondego>                    sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED,<newline46mondego>                            Uri.parse(<doubleQuotes46>file://<doubleQuotes46><newline46mondego>                                    + Environment.getExternalStorageDirectory()))); // this will refresh the gallery app.<newline46mondego>                    Toast.makeText(getApplication(), <doubleQuotes46>Image Saved<doubleQuotes46>, Toast.LENGTH_SHORT)<newline46mondego>                            .show();<newline46mondego>    }<newline46mondego>"
"6787splitHere46","17681713splitHere46","Save();<newline46mondego>"
"6788splitHere46","17681735splitHere46","."
"6789splitHere46","17681735splitHere46","line"
"6790splitHere46","17681735splitHere46","<doubleQuotes46>MY WEIGHT<doubleQuotes46>"
"6791splitHere46","17681735splitHere46",".*"
"6792splitHere46","17681735splitHere46",".+"
"6793splitHere46","17681953splitHere46","RunAfterDeserialize"
"6794splitHere46","17681953splitHere46","runAfterDeserialize"
"6795splitHere46","17681953splitHere46","RunAfterDeserialize"
"6796splitHere46","17681953splitHere46","runAfterDeserialize"
"6797splitHere46","17681953splitHere46","RunAfterDeserialize"
"6798splitHere46","17681953splitHere46","runAfterDeserialize"
"6799splitHere46","17681953splitHere46","FooVORunAfterDeserialize"
"6800splitHere46","17681953splitHere46","BarVORunAfterDeserialize"
"6801splitHere46","17681953splitHere46","Map<Class, RunAfterDeserialize>"
"6802splitHere46","17681953splitHere46","object.getClass()"
"6803splitHere46","17681953splitHere46","Map<Class, RunAfterDeserialize> map;<newline46mondego>Packet packet =  (Packet) gson.fromJson(msg, cls);<newline46mondego>map.get(packet.getClass()).runAfterDeserialize(packet);<newline46mondego>"
"6804splitHere46","17682023splitHere46","copyObject()"
"6805splitHere46","17682023splitHere46","/myBucket/myFile.jpg"
"6806splitHere46","17682023splitHere46","/myBucket/myFile"
"6807splitHere46","17682032splitHere46","Runnable.run()"
"6808splitHere46","17682032splitHere46","Thread.start()"
"6809splitHere46","17682032splitHere46","new MessageManipulatorThread(sharedQueue,pubQueue).run();<newline46mondego>new PublisherThread(pubQueue).run();<newline46mondego>"
"6810splitHere46","17682032splitHere46","run()"
"6811splitHere46","17682032splitHere46","new Thread(new MessageManipulatorThread(sharedQueue,pubQueue), <doubleQuotes46>MessageManipulatorThread<doubleQuotes46>).start();<newline46mondego>new Thread(new PublisherThread(pubQueue), <doubleQuotes46>PublisherThread<doubleQuotes46>).start();<newline46mondego>"
"6812splitHere46","17682032splitHere46","ExecutorService"
"6813splitHere46","17682032splitHere46","ExecutorService"
"6814splitHere46","17682032splitHere46","pubQueue"
"6815splitHere46","17682032splitHere46","ExecutorService executor = Executors.newSingleThreadExecutor();<newline46mondego>new Thread(new MessageManipulatorThread(sharedQueue, executor), <doubleQuotes46>MessageManipulatorThread<doubleQuotes46>).start();<newline46mondego>"
"6816splitHere46","17682032splitHere46","MessageManipulatorThread"
"6817splitHere46","17682032splitHere46","public class MessageManipulatorThread implements Runnable {<newline46mondego><newline46mondego>    private BlockingQueue<String> sharedQueue;<newline46mondego>    private ExecutorService executor;<newline46mondego><newline46mondego>    public MessageManipulatorThread(BlockingQueue<String> sharedQueue, ExecutorService executor){<newline46mondego>        this.sharedQueue = sharedQueue;<newline46mondego>        this.executor = executor;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        while (true) {<newline46mondego>            try {<newline46mondego>                String msg = sharedQueue.take();<newline46mondego>                System.out.println(Thread.currentThread().getName() + <doubleQuotes46>manipulator runnning => <doubleQuotes46>+msg);<newline46mondego>                executor.execute(new PublisherThread(msg));<newline46mondego>                Thread.sleep(1000);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6818splitHere46","17682032splitHere46","PublisherThread"
"6819splitHere46","17682032splitHere46","PublisherThread"
"6820splitHere46","17682032splitHere46","ExecutorService"
"6821splitHere46","17682032splitHere46","ExecutorService executor = Executors.newSingleThreadExecutor();<newline46mondego>"
"6822splitHere46","17682032splitHere46","ExecutorService executor = Executors.newFixedThreadPool(10);<newline46mondego>"
"6823splitHere46","17682032splitHere46","Executors"
"6824splitHere46","17682032splitHere46","ExecutorService"
"6825splitHere46","17682193splitHere46","stringValue=stringValue.replaceAll(<doubleQuotes46>\u000c<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"6826splitHere46","17682295splitHere46","InputStream"
"6827splitHere46","17682295splitHere46","UTF-8"
"6828splitHere46","17682295splitHere46","AutoDetectInputStream"
"6829splitHere46","17682295splitHere46","public class AutoDetectInputStream extends InputStream  {<newline46mondego>    private InputStream is;<newline46mondego>    private byte[] sampleData = new byte[4096];<newline46mondego>    private int sampleLen;<newline46mondego>    private int sampleIndex = 0;<newline46mondego><newline46mondego>    public AutoDetectStream(InputStream is) throws IOException {<newline46mondego>        this.is = is;<newline46mondego>        // pre-read the data<newline46mondego>        sampleLen = is.read(sampleData);<newline46mondego>    }<newline46mondego><newline46mondego>    public Charset getCharset() {<newline46mondego>        // detect the charset<newline46mondego>        UniversalDetector detector = new UniversalDetector(null);<newline46mondego>        detector.handleData(sampleData, 0, sampleLen);<newline46mondego>        detector.dataEnd();<newline46mondego>        return detector.getDetectedCharset();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int read() throws IOException {<newline46mondego>        // simulate the stream for the reader<newline46mondego>        if(sampleIndex < sampleLen) {<newline46mondego>            return sampleData[sampleIndex++];<newline46mondego>        }<newline46mondego>        return is.read();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6830splitHere46","17682295splitHere46","UTF-8"
"6831splitHere46","17682295splitHere46","// open input with Detector stream<newline46mondego>// we use BufferedReader so we could read lines<newline46mondego>InputStream is = new FileInputStream(<doubleQuotes46>in.txt<doubleQuotes46>);<newline46mondego>AutoDetectInputStream detector = new AutoDetectInputStream(is);<newline46mondego>Charset charset = detector.getCharset();<newline46mondego>// here we can use the charset to decode the bytes into characters<newline46mondego>BufferedReader rdr = new BufferedReader(new InputStreamReader(detector, charset));<newline46mondego><newline46mondego>// open output to write to<newline46mondego>OutputStream os = new FileOutputStream(<doubleQuotes46>out.txt<doubleQuotes46>);<newline46mondego>Writer utf8Writer = new OutputStreamWriter(os, Charset.forName(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego><newline46mondego>// copy the whole file<newline46mondego>String line;<newline46mondego>while((line = rdr.readLine()) != null) {<newline46mondego>    utf8Writer.append(line);<newline46mondego>}<newline46mondego><newline46mondego>// close streams        <newline46mondego>rdr.close();<newline46mondego>utf8Writer.flush();<newline46mondego>utf8Writer.close();<newline46mondego>"
"6832splitHere46","17682295splitHere46","UniversalDetector"
"6833splitHere46","17682388splitHere46","long MILLIS_IN_DAY = 1000 * 60 * 60 * 24;<newline46mondego><newline46mondego>        String lastEvent =  <doubleQuotes46>13.07.2013 10:20:06<doubleQuotes46>;<newline46mondego>        SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>dd.MM.yyyy hh:mm:ss<doubleQuotes46>);<newline46mondego>        Date lastEventDate = sdf.parse(lastEvent);<newline46mondego>        Date currentDate = new Date();<newline46mondego><newline46mondego>        long timeElapsed = currentDate.getTime() - lastEventDate.getTime();<newline46mondego>        long diffInDays = timeElapsed / MILLIS_IN_DAY; <newline46mondego><newline46mondego>        System.out.println(diffInDays);<newline46mondego>"
"6834splitHere46","17682414splitHere46","CSVMessageBodyWriter"
"6835splitHere46","17682414splitHere46","isWriteable"
"6836splitHere46","17682414splitHere46","isWriteable"
"6837splitHere46","17682414splitHere46","JaxbList"
"6838splitHere46","17682414splitHere46","CSVSerializer"
"6839splitHere46","17682414splitHere46","CSVMessageBodyWriter"
"6840splitHere46","17682414splitHere46","text/csv"
"6841splitHere46","17682414splitHere46","public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) <newline46mondego>{<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"6842splitHere46","17682414splitHere46","text/csv"
"6843splitHere46","17682414splitHere46","JaxbList"
"6844splitHere46","17682414splitHere46","public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) <newline46mondego>{<newline46mondego>    ParameterizedType paramType = (ParameterizedType) genericType;<newline46mondego><newline46mondego>    if(paramType.getRawType().equals(JaxbList.class))<newline46mondego>    {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"6845splitHere46","17682414splitHere46","MessageBodyWriter"
"6846splitHere46","17682414splitHere46","public class ProductGuideApplication extends Application<newline46mondego>{<newline46mondego>    private Set<Object> singletons = new HashSet<Object>();<newline46mondego>    private Set<Class<?>> classes = new HashSet<Class<?>>();<newline46mondego><newline46mondego>    public ProductGuideApplication() <newline46mondego>    { <newline46mondego>        singletons.add(new CSVMessageBodyWriter());<newline46mondego>        classes.add(FooResource.class);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Set<Object> getSingletons()<newline46mondego>    { <newline46mondego>        return singletons;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Set<Class<?>> getClasses() <newline46mondego>    {<newline46mondego>        return classes;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6847splitHere46","17682414splitHere46","@Path(<doubleQuotes46>/foo<doubleQuotes46>)<newline46mondego>public class FooResource<newline46mondego>{<newline46mondego>    @GET<newline46mondego>    @Produces(<doubleQuotes46>text/csv<doubleQuotes46>)<newline46mondego>    public List<Consumer> getConsumers()<newline46mondego>    {<newline46mondego>        Consumer consumer1 = new Consumer();<newline46mondego>        consumer1.setId(<doubleQuotes46>1234<doubleQuotes46>);<newline46mondego>        consumer1.setGender(<doubleQuotes46>Male<doubleQuotes46>);<newline46mondego><newline46mondego>        Consumer consumer2 = new Consumer();<newline46mondego>        consumer2.setId(<doubleQuotes46>2345<doubleQuotes46>);<newline46mondego>        consumer2.setGender(<doubleQuotes46>Male<doubleQuotes46>);<newline46mondego><newline46mondego>        List<Consumer> consumers = new ArrayList<Consumer>();<newline46mondego>        consumers.add(consumer1);<newline46mondego>        consumers.add(consumer2);<newline46mondego><newline46mondego>        return consumers;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6848splitHere46","17682414splitHere46","@Provider<newline46mondego>@Produces(<doubleQuotes46>text/csv<doubleQuotes46>)<newline46mondego>public class CSVMessageBodyWriter implements MessageBodyWriter<List<Consumer>><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) <newline46mondego>    {<newline46mondego>        ParameterizedType paramType = (ParameterizedType) genericType;<newline46mondego><newline46mondego>        if(paramType.getRawType().equals(List.class))<newline46mondego>        {<newline46mondego>            if(paramType.getActualTypeArguments()[0].equals(Consumer.class))<newline46mondego>            {<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public long getSize(List<Consumer> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) <newline46mondego>    {<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void writeTo(List<Consumer> t, Class<?> type, Type genericType,<newline46mondego>            Annotation[] annotations, MediaType mediaType,<newline46mondego>            MultivaluedMap<String, Object> httpHeaders,<newline46mondego>            OutputStream entityStream) throws IOException,<newline46mondego>            WebApplicationException <newline46mondego>    {<newline46mondego>        //Write your CSV to entityStream here.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6849splitHere46","17682718splitHere46","SQL> DECLARE<newline46mondego>  2     c   INTEGER := DBMS_SQL.open_cursor ();<newline46mondego>  3  BEGIN<newline46mondego>  4     DBMS_SQL.parse (c, 'select * form dual', DBMS_SQL.native);<newline46mondego>  5<newline46mondego>  6     DBMS_SQL.close_cursor (c);<newline46mondego>  7  EXCEPTION<newline46mondego>  8     WHEN OTHERS THEN<newline46mondego>  9        DBMS_OUTPUT.put_line ('Last Error: ' || DBMS_SQL.LAST_ERROR_POSITION ());<newline46mondego> 10        DBMS_SQL.close_cursor (c);<newline46mondego> 11        RAISE;<newline46mondego> 12  END;<newline46mondego> 13  /<newline46mondego>Last Error: 9<newline46mondego>DECLARE<newline46mondego>*<newline46mondego>ERROR at line 1:<newline46mondego>ORA-00923: FROM keyword not found where expected<newline46mondego>ORA-06512: at line 11<newline46mondego>"
"6850splitHere46","17682732splitHere46","System.out.println(<doubleQuotes46>Alex Jones<doubleQuotes46>.replaceAll(<doubleQuotes46>^(\\w)\\w+<doubleQuotes46>, <doubleQuotes46>$1.<doubleQuotes46>));<newline46mondego>"
"6851splitHere46","17682732splitHere46","substring"
"6852splitHere46","17682732splitHere46","arrayString.substring(1, arrayString.length() - 1)"
"6853splitHere46","17682825splitHere46","Capabilities"
"6854splitHere46","17682825splitHere46","ChromeOptions opt = new ChromeOptions();<newline46mondego>opt.setBinary(<doubleQuotes46>E:\\some\\path\\chrome.exe<doubleQuotes46>);<newline46mondego>opt.addArguments(<doubleQuotes46>--user-data-dir=C:\\Users\\Owner\\AppData\\Local\\Google\\Chrome\\User Data<doubleQuotes46>);<newline46mondego>driver = new ChromeDriver(opt);<newline46mondego>"
"6855splitHere46","17682825splitHere46","\\Default"
"6856splitHere46","17682825splitHere46","Capabilities"
"6857splitHere46","17682857splitHere46","session.setAttribute(<doubleQuotes46>codeOperation<doubleQuotes46>, <doubleQuotes46>AZE122<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>request.getParameter(<doubleQuotes46>codeOperation<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego><a href=<doubleQuotes46><c:url value=<doubleQuotes46>/menu?rib=${ compte.rib }<doubleQuotes46>/><doubleQuotes46>>${ compte.rib }</a><newline46mondego>"
"6858splitHere46","17683135splitHere46","println"
"6859splitHere46","17683135splitHere46","print"
"6860splitHere46","17683135splitHere46","System.out.print(number);"
"6861splitHere46","17683135splitHere46","System.out.println(number);"
"6862splitHere46","17683135splitHere46","System.out.println(<doubleQuotes46>Start<doubleQuotes46>);<newline46mondego>int number = 7;<newline46mondego>int count = 9996;       <newline46mondego>while (number <= count)<newline46mondego>    {<newline46mondego>        System.out.println(count);<newline46mondego>        count = count - number;<newline46mondego>    }<newline46mondego>"
"6863splitHere46","17683175splitHere46","int"
"6864splitHere46","17683175splitHere46","int"
"6865splitHere46","17683175splitHere46","long"
"6866splitHere46","17683175splitHere46","long"
"6867splitHere46","17683175splitHere46","sequence"
"6868splitHere46","17683175splitHere46","827,370,449"
"6869splitHere46","17683175splitHere46","sequence = sequence * 3 + 1"
"6870splitHere46","17683175splitHere46","2,482,111,348"
"6871splitHere46","17683175splitHere46","int"
"6872splitHere46","17683175splitHere46","2,147,483,647"
"6873splitHere46","17683175splitHere46","-1,812,855,948"
"6874splitHere46","17683175splitHere46","sequence"
"6875splitHere46","17683175splitHere46","1"
"6876splitHere46","17683175splitHere46","while"
"6877splitHere46","17683222splitHere46","MapBinder"
"6878splitHere46","17683222splitHere46","IFactory"
"6879splitHere46","17683222splitHere46","getInstance"
"6880splitHere46","17683222splitHere46","getI"
"6881splitHere46","17683222splitHere46","class IModule extends AbstractModule {<newline46mondego>  @Override public void configure() {<newline46mondego>    MapBinder<Integer, I> myBinder =<newline46mondego>        MapBinder.newMapBinder(binder(), Integer.class, I.class);<newline46mondego>    myBinder.addBinding(1).to(A.class);<newline46mondego>    // Add more here.<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// You can even split the MapBinding across Modules, if you'd like.<newline46mondego>class SomeOtherModule extends AbstractModule {<newline46mondego>  @Override public void configure() {<newline46mondego>    // MapBinder.newMapBinder does not complain about duplicate bindings<newline46mondego>    // as long as the keys are different.<newline46mondego>    MapBinder<Integer, I> myBinder =<newline46mondego>        MapBinder.newMapBinder(binder(), Integer.class, I.class);<newline46mondego>    myBinder.addBinding(3).to(C.class);<newline46mondego>    myBinder.addBinding(4).to(D.class);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6882splitHere46","17683222splitHere46","Map<Integer, I>"
"6883splitHere46","17683222splitHere46","A"
"6884splitHere46","17683222splitHere46","C"
"6885splitHere46","17683222splitHere46","D"
"6886splitHere46","17683222splitHere46","new"
"6887splitHere46","17683222splitHere46","A"
"6888splitHere46","17683222splitHere46","B"
"6889splitHere46","17683222splitHere46","Map<Integer, Provider<I>>"
"6890splitHere46","17683222splitHere46","class YourConsumer {<newline46mondego>  @Inject Map<Integer, Provider<I>> iMap;<newline46mondego><newline46mondego>  public void yourMethod(int iIndex) {<newline46mondego>    // get an I implementor<newline46mondego>    I i = iMap.get(iIndex).get();<newline46mondego>    // ...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6891splitHere46","17683222splitHere46","MapBinder"
"6892splitHere46","17683222splitHere46","class IFactory {<newline46mondego>  @Inject Map<Integer, Provider<I>> iMap;<newline46mondego>  @Inject Provider<B> defaultI; // Bound automatically for every Guice key<newline46mondego><newline46mondego>  I getI(int i) {<newline46mondego>    return iMap.containsKey(i) ? iMap.get(i).get() : defaultI.get();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6893splitHere46","17683222splitHere46","Injector"
"6894splitHere46","17683222splitHere46","Map"
"6895splitHere46","17683222splitHere46","ImmutableMap"
"6896splitHere46","17683222splitHere46","class IFactory {<newline46mondego>  @Inject Injector injector; // This is a bad idea, except for times like this<newline46mondego>  @Inject Provider<B> defaultI;<newline46mondego>  static final ImmutableMap<Integer, Class<? extends I>> map = ImmutableMap.of(<newline46mondego>      1, A.class,<newline46mondego>      3, C.class,<newline46mondego>      4, D.class);<newline46mondego><newline46mondego>  I getI(int i) {<newline46mondego>    return map.containsKey(i)<newline46mondego>        ? injector.getInstance(map.get(i))<newline46mondego>        : defaultI.get();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6897splitHere46","17683329splitHere46","<fmt:format var=<doubleQuotes46>month<doubleQuotes46> value=<doubleQuotes46>${theDate}<doubleQuotes46> pattern=<doubleQuotes46>MM<doubleQuotes46>/><newline46mondego><select name=<doubleQuotes46><doubleQuotes46>><newline46mondego>    <option value=<doubleQuotes46>01<doubleQuotes46> ${month == <doubleQuotes46>01<doubleQuotes46> ? <doubleQuotes46>selected='selected'<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>}>January</option><newline46mondego>    <option value=<doubleQuotes46>02<doubleQuotes46> ${month == <doubleQuotes46>02<doubleQuotes46> ? <doubleQuotes46>selected='selected'<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>}>February</option><newline46mondego>    ...<newline46mondego></select><newline46mondego>"
"6898splitHere46","17683329splitHere46","List<SelectableMonth>"
"6899splitHere46","17683329splitHere46","<select name=<doubleQuotes46><doubleQuotes46>><newline46mondego>    <c:forEach var=<doubleQuotes46>month<doubleQuotes46> items=<doubleQuotes46>${selectableMonths}<doubleQuotes46>><newline46mondego>        <option value=<doubleQuotes46>${month.number}<doubleQuotes46> ${month.selected ? <doubleQuotes46>selected='selected'<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>}>${month.label}</option><newline46mondego>    </c:forEach>        <newline46mondego></select><newline46mondego>"
"6900splitHere46","17683414splitHere46","ExecutorService"
"6901splitHere46","17683414splitHere46","ExecutorService"
"6902splitHere46","17683414splitHere46","getActiveCount()"
"6903splitHere46","17683414splitHere46","getTaskCount()"
"6904splitHere46","17683598splitHere46","analisesList.setOnItemClickListener(new OnItemClickListener()"
"6905splitHere46","17683598splitHere46","onActivityCreated"
"6906splitHere46","17683598splitHere46","onCrateView"
"6907splitHere46","17683598splitHere46","@Override<newline46mondego>    public void onActivityCreated(Bundle savedInstanceState) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        super.onActivityCreated(savedInstanceState);<newline46mondego>        analisesList.setOnItemClickListener(new OnItemClickListener()<newline46mondego>        {<newline46mondego>            @Override public void onItemClick(AdapterView<?> arg0, View arg1,int position, long arg3)<newline46mondego>            {           <newline46mondego>                Bundle extra = new Bundle();<newline46mondego>                extra.putBoolean(<doubleQuotes46>radio<doubleQuotes46>, ehBrunton);<newline46mondego>                extra.putString(<doubleQuotes46>tipo_est<doubleQuotes46>, analises.get(position).getTipo());<newline46mondego>                extra.putString(<doubleQuotes46>codigo<doubleQuotes46>, analises.get(position).getCodigo());<newline46mondego>                if(ehBrunton) {<newline46mondego>                    extra.putString(<doubleQuotes46>brun_clar<doubleQuotes46>, analises.get(position).getBrunton());<newline46mondego>                } else {<newline46mondego>                    extra.putString(<doubleQuotes46>brun_clar<doubleQuotes46>, analises.get(position).getClar());<newline46mondego>                }<newline46mondego>                extra.putString(<doubleQuotes46>azimute<doubleQuotes46>, analises.get(position).getAzimute());<newline46mondego><newline46mondego>                extra.putString(<doubleQuotes46>direcao<doubleQuotes46>, analises.get(position).getDirecao());<newline46mondego>                extra.putString(<doubleQuotes46>quadrante<doubleQuotes46>, analises.get(position).getQuadrante());<newline46mondego>                extra.putString(<doubleQuotes46>sentido<doubleQuotes46>, analises.get(position).getSentido());<newline46mondego>                extra.putString(<doubleQuotes46>descricao<doubleQuotes46>,analises.get(position).getDescricao());<newline46mondego>                extra.putString(<doubleQuotes46>mergulho<doubleQuotes46>, analises.get(position).getMergulho());<newline46mondego>                extra.putString(<doubleQuotes46>familia<doubleQuotes46>, analises.get(position).getFamilia());<newline46mondego>                i.putExtra(<doubleQuotes46>analise<doubleQuotes46>, extra);<newline46mondego>                startActivity(i);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>"
"6908splitHere46","17683658splitHere46","if(roll == name)<newline46mondego>"
"6909splitHere46","17683658splitHere46","if(roll.equals(name))<newline46mondego>"
"6910splitHere46","17683658splitHere46","if (result == 0){<newline46mondego>   System.out.println(me[0]);<newline46mondego>"
"6911splitHere46","17683658splitHere46","System.out.println(me[result]);<newline46mondego>"
"6912splitHere46","17683680splitHere46","processRequest()"
"6913splitHere46","17683680splitHere46","SSLHandshakeException"
"6914splitHere46","17683690splitHere46","ConcurrentHashMap"
"6915splitHere46","17683690splitHere46","RemovalListener"
"6916splitHere46","17683690splitHere46","get"
"6917splitHere46","17683722splitHere46","ReentrantLock"
"6918splitHere46","17683722splitHere46","synchronized"
"6919splitHere46","17683726splitHere46","#Keeping all public class names and keep (prevent obfuscation) of their public and protected methods<newline46mondego>-keep public class * {<newline46mondego>    public protected <methods>;<newline46mondego>}<newline46mondego><newline46mondego># Keep (prevent obfuscation) all public and protected methods in non-public classes.<newline46mondego># Notice that the non-public class names will still get obfuscated<newline46mondego>-keepclassmembers !public class * {<newline46mondego>    public protected <methods>;<newline46mondego>}<newline46mondego><newline46mondego># Don't keep the local variables attributes (LocalVariableTable and LocalVariableTypeTable are dropped).<newline46mondego>-keepattributes Exceptions,Signature,Deprecated,SourceFile,SourceDir,LineNumberTable,Synthetic,EnclosingMethod,RuntimeVisibleAnnotations,RuntimeInvisibleAnnotations,RuntimeVisibleParameterAnnotations,RuntimeInvisibleParameterAnnotations,AnnotationDefault,InnerClasses,*Annotation*<newline46mondego>"
"6920splitHere46","17683875splitHere46","data[i] - data[i - 2]"
"6921splitHere46","17683875splitHere46","Iteration #1: difference:  -1, sum:  0 + (-1) =  -1<newline46mondego>Iteration #2: difference:  -1, sum: -1 + (-1) =  -2<newline46mondego>Iteration #3: difference:   5, sum: -2 + ( 5) =   3<newline46mondego>Iteration #4: difference:   2, sum:  3 + ( 2) =   5<newline46mondego>Iteration #5: difference: -13, sum:  5 + (-13) = -8<newline46mondego>"
"6922splitHere46","17683909splitHere46","America<newline46mondego><newline46mondego>America<newline46mondego>    Britain<newline46mondego><newline46mondego>    Brit<newline46mondego>Amer    Indi<newline46mondego><newline46mondego>    Brit<newline46mondego>Amer        Indi<newline46mondego>        Chec    <newline46mondego><newline46mondego>            Brit<newline46mondego>Amer                Chin<newline46mondego>              Chec          India<newline46mondego>                                SriLanka        <newline46mondego><newline46mondego>            Brit<newline46mondego>Amer                Chin<newline46mondego>              Chec          SriLanka<newline46mondego>                        India       Zimbabwe<newline46mondego>"
"6923splitHere46","17683945splitHere46","ThreadLocal"
"6924splitHere46","17683945splitHere46","BlockingQueue"
"6925splitHere46","17683945splitHere46","Runnable"
"6926splitHere46","17683945splitHere46","Runnable"
"6927splitHere46","17683945splitHere46","BlockingQueue"
"6928splitHere46","17683945splitHere46","messageIn(...)"
"6929splitHere46","17683945splitHere46","queue.poll()"
"6930splitHere46","17683948splitHere46","java build path"
"6931splitHere46","17684046splitHere46","for-each"
"6932splitHere46","17684046splitHere46","for-each"
"6933splitHere46","17684046splitHere46","<xsl:template match=<doubleQuotes46>hl7:controlActEvent/hl7:subject<doubleQuotes46>><newline46mondego>  <xsl:variable name=<doubleQuotes46>theSubject<doubleQuotes46> select=<doubleQuotes46>.<doubleQuotes46> /><newline46mondego>  <xsl:for-each select=<doubleQuotes46>java:org.apache.xalan.lib.ExsltStrings.tokenize($xpath, ';')<doubleQuotes46>><newline46mondego>    <xsl:variable name=<doubleQuotes46>list<doubleQuotes46> select=<doubleQuotes46>java:org.apache.xalan.lib.ExsltStrings.tokenize(., ',')<doubleQuotes46>/><newline46mondego>    <xsl:for-each select=<doubleQuotes46>$theSubject<doubleQuotes46>><newline46mondego>      <!-- rest of template goes here, . is now the hl7:subject again --><newline46mondego>    </xsl:for-each><newline46mondego>  </xsl:for-each><newline46mondego></xsl:template><newline46mondego>"
"6934splitHere46","17684046splitHere46","."
"6935splitHere46","17684046splitHere46","position()"
"6936splitHere46","17684046splitHere46","position()"
"6937splitHere46","17684090splitHere46","thread exiting with uncaught exception"
"6938splitHere46","17684090splitHere46","Sending signal"
"6939splitHere46","17684090splitHere46","finally"
"6940splitHere46","17684090splitHere46","Slog.e"
"6941splitHere46","17684090splitHere46","Slog.e"
"6942splitHere46","17684120splitHere46","do {<newline46mondego>    try {<newline46mondego>       System.out.println(<doubleQuotes46>Enter A :<doubleQuotes46>);<newline46mondego>       String numA = br.readLine();<newline46mondego>       int a = Integer.parseInt(numA);<newline46mondego>       break;<newline46mondego>    } catch (Exception e /*InputMismatchException e*/) {<newline46mondego>       System.out.println(<doubleQuotes46>Please fill in a number between –2,147,483,648 and 2,147,483,647<doubleQuotes46>);<newline46mondego>       //System.out.println(e.printStackTrace()); //Use this to print the error<newline46mondego>    }<newline46mondego>} while (true);<newline46mondego>"
"6943splitHere46","17684140splitHere46","@Local"
"6944splitHere46","17684140splitHere46","@Local"
"6945splitHere46","17684246splitHere46","EditText inputTxt1;"
"6946splitHere46","17684246splitHere46","Button saveBtn1 = (Button) findViewById(R.id.btnSave1);"
"6947splitHere46","17684246splitHere46","inputTxt1 = (EditText) findViewById(R.id.yourPhoneNum);"
"6948splitHere46","17684246splitHere46","saveBtn1.setOnClickListener"
"6949splitHere46","17684246splitHere46","String phoneNum1 = inputTxt1.getText().toString();"
"6950splitHere46","17684246splitHere46","savenum1(phoneNum1);"
"6951splitHere46","17684246splitHere46","EditText inputTxt1 = (EditText) findViewById(R.id.yourPhoneNum);"
"6952splitHere46","17684246splitHere46","String phoneNum1 = (String) inputTxt1.getText().toString();"
"6953splitHere46","17684246splitHere46","public class SettingsScreen extends Activity {<newline46mondego><newline46mondego>private EditText inputTxt1;<newline46mondego><newline46mondego>@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.screen_settings);<newline46mondego>    this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);<newline46mondego><newline46mondego>    EditText inputTxt1 = (EditText) findViewById(R.id.yourPhoneNum);    <newline46mondego>    Button saveBtn1 = (Button) findViewById(R.id.btnSave1);<newline46mondego><newline46mondego>    saveBtn1.setOnClickListener(new View.OnClickListener() {<newline46mondego>       @Override<newline46mondego>       public void onClick(View view) {<newline46mondego>          String phoneNum1 = inputTxt1.getText().toString();<newline46mondego>          savenum1(phoneNum1);<newline46mondego>       }<newline46mondego>   });<newline46mondego>}<newline46mondego><newline46mondego>public void savenum1(String phoneNum1) {<newline46mondego><newline46mondego>    AlertDialog.Builder dlgAlert  = new AlertDialog.Builder(this);<newline46mondego><newline46mondego>    dlgAlert.setMessage(<doubleQuotes46>Saved<doubleQuotes46> + phoneNum1);<newline46mondego>    //dlgAlert.setPositiveButton(<doubleQuotes46>OK<doubleQuotes46>, null);<newline46mondego>    dlgAlert.setCancelable(true);<newline46mondego><newline46mondego>    dlgAlert.setPositiveButton(<doubleQuotes46>Ok<doubleQuotes46>,<newline46mondego>        new DialogInterface.OnClickListener() {<newline46mondego>            public void onClick(DialogInterface dialog, int which) {<newline46mondego>              //dismiss the dialog  <newline46mondego>            }<newline46mondego>        });    <newline46mondego>    dlgAlert.create().show();<newline46mondego>}<newline46mondego>"
"6954splitHere46","17684287splitHere46","public class Settings extends JFrame{<newline46mondego>    String configFilePath = <doubleQuotes46>C:/path/to/settings.properties<doubleQuotes46>;<newline46mondego>    Properties properties = new Properties();<newline46mondego><newline46mondego>    private static Settings instance;<newline46mondego><newline46mondego>    public static Settings getInstance(){<newline46mondego>       if(instance==null){<newline46mondego>           instance = new Setting();<newline46mondego>       }<newline46mondego>       return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    private Settings() throws IOException {<newline46mondego>        FileInputStream fis = null;<newline46mondego>        try {<newline46mondego>            fis = new FileInputStream(configFilePath);<newline46mondego>            properties.load(fis);<newline46mondego><newline46mondego>        } catch (FileNotFoundException e) {<newline46mondego>            setDefaults();<newline46mondego>        } finally {<newline46mondego>            if (fis != null) {<newline46mondego>                fis.close();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6955splitHere46","17684287splitHere46","Settings.getInstance().getProperty(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>"
"6956splitHere46","17684324splitHere46","setUp(Context c)"
"6957splitHere46","17684324splitHere46","AssetManager asM = resources.getAssets();<newline46mondego>"
"6958splitHere46","17684324splitHere46","AssetManager asM = c.getAssets();<newline46mondego>"
"6959splitHere46","17684357splitHere46","(\\\\\<doubleQuotes46>.*?\\\\\<doubleQuotes46>)<newline46mondego>"
"6960splitHere46","17684457splitHere46","Lists.newArrayList(multimap.keys())<newline46mondego>"
"6961splitHere46","17684457splitHere46","ImmutableListMultimap"
"6962splitHere46","17684457splitHere46","multimap.keys().asList()<newline46mondego>"
"6963splitHere46","17684457splitHere46","Multimap.keys()"
"6964splitHere46","17684457splitHere46","Multiset<Integer>"
"6965splitHere46","17684605splitHere46","HashMap"
"6966splitHere46","17684605splitHere46","HashSet"
"6967splitHere46","17684605splitHere46","hashCode()"
"6968splitHere46","17684605splitHere46","equals()"
"6969splitHere46","17684605splitHere46","equals()"
"6970splitHere46","17684605splitHere46","hashCode()"
"6971splitHere46","17684605splitHere46","Object#hashCode()"
"6972splitHere46","17684605splitHere46","equals()"
"6973splitHere46","17684605splitHere46","hashMap.containsKey(ClusterKey key)<newline46mondego>"
"6974splitHere46","17684605splitHere46","HashMap"
"6975splitHere46","17684605splitHere46","equals()"
"6976splitHere46","17684608splitHere46","hexdump -C /tmp/temp_session_TGAyUSfICJgY.txt<newline46mondego>"
"6977splitHere46","17684608splitHere46","xxd /tmp/temp_session_TGAyUSfICJgY.txt<newline46mondego>"
"6978splitHere46","17684637splitHere46","String s = <doubleQuotes46>ABCDE1234F<doubleQuotes46>; // get your editext value here<newline46mondego>Pattern pattern = Pattern.compile(<doubleQuotes46>[A-Z]{5}[0-9]{4}[A-Z]{1}<doubleQuotes46>);<newline46mondego><newline46mondego>Matcher matcher = pattern.matcher(s);<newline46mondego>// Check if pattern matches <newline46mondego>if (matcher.matches()) {<newline46mondego>  Log.i(<doubleQuotes46>Matching<doubleQuotes46>,<doubleQuotes46>Yes<doubleQuotes46>);<newline46mondego>}   <newline46mondego><newline46mondego>[A-Z]{5} - match five literals which can be A to Z<newline46mondego>[0-9]{4} - followed by 4 numbers 0 to 9<newline46mondego>[A-Z]{1} - followed by one literal which can A to Z<newline46mondego>"
"6979splitHere46","17684643splitHere46","List"
"6980splitHere46","17684643splitHere46","List"
"6981splitHere46","17684762splitHere46","B"
"6982splitHere46","17684762splitHere46","A"
"6983splitHere46","17684762splitHere46","public class A {<newline46mondego>    ...<newline46mondego>    private B b;<newline46mondego>    ...<newline46mondego>    public A() {<newline46mondego>        b = new B();<newline46mondego>        b.b = <doubleQuotes46>Some String<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6984splitHere46","17684993splitHere46","/** 1 = Sunday, 2 = Monday, 3 = Tuesday, 4 = Wednesday, 5 = Thursday,<newline46mondego>* 6 = Friday, 7 = Saturday<newline46mondego>*/<newline46mondego>public static Date getFirstDayOfWeekDate(int firstDay)<newline46mondego>{<newline46mondego>    // Calculate the date of the first day of the week<newline46mondego><newline46mondego>    // First get the today's date<newline46mondego>    Calendar c = new GregorianCalendar();<newline46mondego><newline46mondego>    // Now set the day of week to the first day of week<newline46mondego>    while (c.get(Calendar.DAY_OF_WEEK) != firstDay)<newline46mondego>    {<newline46mondego>        c.add(Calendar.DAY_OF_MONTH, -1);<newline46mondego>    }<newline46mondego><newline46mondego>    return c.getTime();<newline46mondego>}<newline46mondego>"
"6985splitHere46","17685063splitHere46","WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH<newline46mondego>"
"6986splitHere46","17685070splitHere46","s1"
"6987splitHere46","17685070splitHere46","Graduate"
"6988splitHere46","17685070splitHere46","super type"
"6989splitHere46","17685070splitHere46","downcast"
"6990splitHere46","17685070splitHere46","Student"
"6991splitHere46","17685070splitHere46","s1"
"6992splitHere46","17685070splitHere46","Student"
"6993splitHere46","17685070splitHere46","class Phd extends Student {<newline46mondego>    getResearchTopic(){...}<newline46mondego>}<newline46mondego>"
"6994splitHere46","17685070splitHere46","Student"
"6995splitHere46","17685070splitHere46","class Student {<newline46mondego>    getResearchTopic(){...}<newline46mondego>}<newline46mondego>"
"6996splitHere46","17685070splitHere46","Student"
"6997splitHere46","17685070splitHere46","Student student = new Phd();<newline46mondego>student.getResearchTopic();   // Calls Phd class method<newline46mondego><newline46mondego>student = new Graduate();<newline46mondego>student.getResearchTopic();    // Calls Graduate class method<newline46mondego>"
"6998splitHere46","17685070splitHere46","factory method"
"6999splitHere46","17685070splitHere46","public static Student getInstance(String type) {<newline46mondego>    if (type.equals(<doubleQuotes46>graduate<doubleQuotes46>)) <newline46mondego>        return new Graduate();<newline46mondego>    else if (type.equals(<doubleQuotes46>phd<doubleQuotes46>))<newline46mondego>        return new Phd();<newline46mondego>}<newline46mondego>"
"7000splitHere46","17685079splitHere46","int lastnum = 1;<newline46mondego>String prevLine = lastnum;<newline46mondego><newline46mondego>do while loop (999999 not passed)<newline46mondego>{<newline46mondego><newline46mondego>    PRINT(prevline + <doubleQuotes46> <doubleQuotes46> + (lastnum + 2));<newline46mondego><newline46mondego>    lastnum += 2;<newline46mondego><newline46mondego>    \\update the information stored in the previous line<newline46mondego>    prevLine += <doubleQuotes46> <doubleQuotes46> + lastnum;<newline46mondego><newline46mondego>}<newline46mondego>"
"7001splitHere46","17685289splitHere46","@Produces(MediaType.APPLICATION_XML)"
"7002splitHere46","17685289splitHere46","application/xml"
"7003splitHere46","17685289splitHere46","Accept"
"7004splitHere46","17685345splitHere46","import javafx.application.Application;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.layout.Pane;<newline46mondego>import javafx.scene.paint.Color;<newline46mondego>import javafx.scene.shape.Line;<newline46mondego>import javafx.scene.shape.LineBuilder;<newline46mondego>import javafx.stage.Stage;<newline46mondego><newline46mondego><newline46mondego>public class FXLine extends Application {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start(Stage stage) throws Exception {<newline46mondego><newline46mondego>        Pane pane = new Pane();<newline46mondego>        Line redLine = LineBuilder.create()<newline46mondego>            .startX(296)<newline46mondego>            .startY(128)<newline46mondego>            .endX(401)<newline46mondego>            .endY(233)<newline46mondego>            .fill(Color.RED)<newline46mondego>            .strokeWidth(10.0f)<newline46mondego>            .build();<newline46mondego>        pane.getChildren().add(redLine);<newline46mondego>        stage.setScene(new Scene(pane, 425, 275));<newline46mondego>        stage.show();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        Application.launch(args);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7005splitHere46","17685383splitHere46","String keyValue = str.substring(str.indexOf(<doubleQuotes46>[<doubleQuotes46>) + 1, str.lastIndexOf(<doubleQuotes46>]<doubleQuotes46>));<newline46mondego>StringTokenizer tok = new StringTokenizer(keyValue, <doubleQuotes46>,<doubleQuotes46>);<newline46mondego>Map<String, String> map = new LinkedHashMap<String, String>();<newline46mondego>while (tok.hasMoreTokens()) {<newline46mondego>    String entString = tok.nextToken();<newline46mondego>    map.put(entString.split(<doubleQuotes46>=<doubleQuotes46>)[0], entString.split(<doubleQuotes46>=<doubleQuotes46>)[1]);<newline46mondego>}<newline46mondego>"
"7006splitHere46","17685383splitHere46","map.get(<doubleQuotes46>name<doubleQuotes46>)<newline46mondego>"
"7007splitHere46","17685459splitHere46","c99"
"7008splitHere46","17685459splitHere46","6.5.2"
"7009splitHere46","17685459splitHere46","i = ++i + 1;<newline46mondego>a[i++] = i; <newline46mondego>"
"7010splitHere46","17685459splitHere46","15.7"
"7011splitHere46","17685459splitHere46","JLS"
"7012splitHere46","17685523splitHere46","Process suProcess;<newline46mondego>DataOutputStream os;<newline46mondego><newline46mondego><newline46mondego>try{<newline46mondego>        //Get Root<newline46mondego>        suProcess = Runtime.getRuntime().exec(<doubleQuotes46>su<doubleQuotes46>);<newline46mondego>        os= new DataOutputStream(suProcess.getOutputStream());<newline46mondego><newline46mondego>        //Remount writable FS within the root process<newline46mondego>        os.writeBytes(<doubleQuotes46>mount -w -o remount -t ext4 /dev/block/mmcblk0p9 /system\n<doubleQuotes46>);<newline46mondego>        os.flush();<newline46mondego><newline46mondego>        //Do something here<newline46mondego>        os.writeBytes(<doubleQuotes46>rm /system/somefile\n<doubleQuotes46>);<newline46mondego>        os.flush();<newline46mondego><newline46mondego>        //Do something there<newline46mondego>        os.writeBytes(<doubleQuotes46>touch /system/somefile\n<doubleQuotes46>);<newline46mondego>        os.flush();<newline46mondego><newline46mondego>        //Remount Read-Only<newline46mondego>        os.writeBytes(<doubleQuotes46>mount -r -o remount -t ext4 /dev/block/mmcblk0p9 /system\n<doubleQuotes46>);<newline46mondego>        os.flush();<newline46mondego><newline46mondego>        //End process<newline46mondego>        os.writeBytes(<doubleQuotes46>exit\n<doubleQuotes46>);<newline46mondego>        os.flush();<newline46mondego><newline46mondego>   }<newline46mondego>catch (IOException e) {<newline46mondego>        throw new RuntimeException(e);<newline46mondego>    }<newline46mondego>"
"7013splitHere46","17685784splitHere46","<cfset sys = createObject(<doubleQuotes46>java<doubleQuotes46>, <doubleQuotes46>java.lang.System<doubleQuotes46>)><newline46mondego><cfset sys.setProperty(<doubleQuotes46>java.protocol.handler.pkgs<doubleQuotes46>, <doubleQuotes46>javax.net.ssl<doubleQuotes46>)><newline46mondego>"
"7014splitHere46","17685784splitHere46","<cfset sys = createObject(<doubleQuotes46>java<doubleQuotes46>, <doubleQuotes46>java.lang.System<doubleQuotes46>)><newline46mondego><cfset sys.setProperty(<doubleQuotes46>java.protocol.handler.pkgs<doubleQuotes46>, <doubleQuotes46>com.sun.net.ssl.internal.www.protocol<doubleQuotes46>)><newline46mondego>"
"7015splitHere46","17685784splitHere46","<cfset sys = createObject(<doubleQuotes46>java<doubleQuotes46>, <doubleQuotes46>java.lang.System<doubleQuotes46>)><newline46mondego><cfoutput>#sys.getProperty(<doubleQuotes46>java.protocol.handler.pkgs<doubleQuotes46>)#</cfoutput><newline46mondego>"
"7016splitHere46","17685784splitHere46","com.sun.net.ssl.internal.www.protocol"
"7017splitHere46","17685845splitHere46","SwingWorker"
"7018splitHere46","17685845splitHere46","class MySwingWorker extends SwingWorker <String,String>{ //what params you want here <newline46mondego><newline46mondego>@Override<newline46mondego>protected String doInBackground()throws Exception{<newline46mondego><newline46mondego>   //here you download heavy task<newline46mondego>    //and you call publish() when you want <newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>protected void process(List<String> chunks){<newline46mondego>  // here you updated your gui <newline46mondego>   //setValueAt(row,col); and fireTableCellUpdated(row,col);<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>protected void done(){<newline46mondego>  //here is called when doInBackGround is finished<newline46mondego>}<newline46mondego>"
"7019splitHere46","17685845splitHere46","setValue(int row, int column)"
"7020splitHere46","17685845splitHere46","fireTableCellUpdated(int row,int col);"
"7021splitHere46","17685845splitHere46","public void addRow(String sName) {<newline46mondego>        this.tListUpdater.add(new CLS_ValueUpdater(sName));<newline46mondego>        this.fireTableDataChanged();<newline46mondego> }<newline46mondego>"
"7022splitHere46","17685845splitHere46","void fireTableRowsInserted(int firstRow, int lastRow)"
"7023splitHere46","17686033splitHere46","registerScript"
"7024splitHere46","17686033splitHere46","public void registerScript(String fileName, Map<String,String> params)<newline46mondego>"
"7025splitHere46","17686051splitHere46","ImageWindow"
"7026splitHere46","17686051splitHere46","ImageWindow.close"
"7027splitHere46","17686051splitHere46","imp.flush()"
"7028splitHere46","17686207splitHere46","Thread thread = new Thread(this);<newline46mondego>thread.start();<newline46mondego><newline46mondego>b1 = new Ball(40, 40);<newline46mondego>b2 = new Ball(70, 200);<newline46mondego>"
"7029splitHere46","17686207splitHere46","start()"
"7030splitHere46","17686207splitHere46","b1 = new Ball(40, 40);<newline46mondego>b2 = new Ball(70, 200);<newline46mondego><newline46mondego>Thread thread = new Thread(this);<newline46mondego>thread.start();<newline46mondego>"
"7031splitHere46","17686285splitHere46","String[] arr = new String[] {<doubleQuotes46>Alex Jones<doubleQuotes46>, <doubleQuotes46>Robert Flip<doubleQuotes46>, <doubleQuotes46>Farabi Fahim<doubleQuotes46>};<newline46mondego>StringBuilder sbd = new StringBuilder(<doubleQuotes46>[<doubleQuotes46>);<newline46mondego>for (int i = 0; i < arr.length; i++) {<newline46mondego>    sbd.append(arr[i]);<newline46mondego>    if (i < arr.length - 2)<newline46mondego>        sbd.append(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>    else if (i < arr.length - 1)<newline46mondego>        sbd.append(<doubleQuotes46> & <doubleQuotes46>);<newline46mondego>}<newline46mondego>sbd.append(']');<newline46mondego>System.out.printf(<doubleQuotes46>%s%n<doubleQuotes46>, sbd);<newline46mondego>"
"7032splitHere46","17686285splitHere46","String output = Arrays.toString(arr).replaceAll(<doubleQuotes46>, (?=[^,]*$)<doubleQuotes46>, <doubleQuotes46> & <doubleQuotes46>)<newline46mondego>"
"7033splitHere46","17686285splitHere46","[Alex Jones, Robert Flip & Farabi Fahim]<newline46mondego>"
"7034splitHere46","17686543splitHere46","BufferedReader bufReader = new BufferedReader(new InputStreamReader(file.getContent().getInputStream()));<newline46mondego> StringBuilder result = new StringBuilder();<newline46mondego> int readInInt = -1;<newline46mondego> String charsSinceLastLineSep = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego> if (bufReader.ready()) {<newline46mondego>     while (-1 != (readInInt = bufReader.read())) {<newline46mondego>        char readInChar = (char) readInInt;<newline46mondego><newline46mondego>        // if new line reset line buffer, otherwise add to buffer<newline46mondego>        if (readInChar == '\n' || readInChar == '\r') {<newline46mondego>           charsSinceLastLineSep = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        } else {<newline46mondego>           charsSinceLastLineSep += readInChar;<newline46mondego>        }<newline46mondego><newline46mondego>        result.append(readInChar);<newline46mondego>     }<newline46mondego>     bufReader.close();<newline46mondego><newline46mondego>     // remove all characters added since last Carriage Return or NewLine was found indicating<newline46mondego>     // that line was not a complete log line<newline46mondego>     String resultString = (result.subSequence(0, (result.length() - charsSinceLastLineSep.length())).toString());<newline46mondego>"
"7035splitHere46","17686545splitHere46","username_input.setText(userName);<newline46mondego>"
"7036splitHere46","17686545splitHere46","public change_username() {<newline46mondego>        super(<doubleQuotes46>Change Username<doubleQuotes46>); <newline46mondego>        setPreferredSize (new Dimension (400, 85));<newline46mondego>        setLayout (null);<newline46mondego><newline46mondego>        statusBar = new JLabel(<doubleQuotes46>Enter your username<doubleQuotes46>);<newline46mondego>        add(statusBar, BorderLayout.SOUTH);<newline46mondego>        statusBar.setBounds(20, 130, 250, 30); <newline46mondego><newline46mondego>        uT1 = new JLabel(<doubleQuotes46>Username<doubleQuotes46>);<newline46mondego>        username_input = new JTextField(10);<newline46mondego><newline46mondego>        pwT = new JLabel(<doubleQuotes46>Password<doubleQuotes46>);<newline46mondego>        password_input = new JPasswordField(10); <newline46mondego><newline46mondego>        uCh = new JLabel(<doubleQuotes46>New Username<doubleQuotes46>);<newline46mondego>        username_change = new JTextField(10);<newline46mondego><newline46mondego>        uT1.setBounds(10, 10, 150, 30); <newline46mondego>        username_input.setBounds(100, 10, 100, 30); <newline46mondego>        pwT.setBounds(10, 50, 150, 30); <newline46mondego>        password_input.setBounds(100, 50, 100, 30);        <newline46mondego>        uCh.setBounds(10, 90, 150, 30); <newline46mondego>        username_change.setBounds(100, 90, 100, 30); <newline46mondego><newline46mondego>        add(uT1);<newline46mondego>        add(username_input);<newline46mondego><newline46mondego>        // SET THE TEXT HERE Before the Listener **************************<newline46mondego><newline46mondego>        username_input.setText(getUserName());<newline46mondego><newline46mondego>        // *****************************************************************<newline46mondego>"
"7037splitHere46","17686583splitHere46","@ElementList(required = true, name = <doubleQuotes46>mixture<doubleQuotes46>)"
"7038splitHere46","17686583splitHere46","genericNodes"
"7039splitHere46","17686583splitHere46","GenericNode"
"7040splitHere46","17686583splitHere46","@org.simpleframework.xml.Root(strict = false)<newline46mondego>@Convert(GenericNodeConverter.class)<newline46mondego>public class GenericNode<newline46mondego>{<newline46mondego>    private String name;<newline46mondego>    private int id;<newline46mondego>    private String type;<newline46mondego><newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"7041splitHere46","17686583splitHere46","name"
"7042splitHere46","17686583splitHere46","nodeA"
"7043splitHere46","17686583splitHere46","nodeB"
"7044splitHere46","17686583splitHere46","Root"
"7045splitHere46","17686583splitHere46","@org.simpleframework.xml.Root(strict = false, name = <doubleQuotes46>root<doubleQuotes46>)<newline46mondego>class Root<newline46mondego>{<newline46mondego>    @Element<newline46mondego>    private String title;<newline46mondego><newline46mondego>    @Element<newline46mondego>    private String desc;<newline46mondego><newline46mondego>    @ElementList(required = true, name = <doubleQuotes46>mixture<doubleQuotes46>)<newline46mondego>    ArrayList<GenericNode> genericNodes;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"7046splitHere46","17686583splitHere46","GenericNodeConverter"
"7047splitHere46","17686583splitHere46","public class GenericNodeConverter implements Converter<GenericNode><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public GenericNode read(InputNode node) throws Exception<newline46mondego>    {<newline46mondego>        GenericNode gn = new GenericNode();<newline46mondego><newline46mondego>        gn.setId(Integer.valueOf(node.getAttribute(<doubleQuotes46>id<doubleQuotes46>).getValue()));<newline46mondego>        gn.setType(node.getAttribute(<doubleQuotes46>type<doubleQuotes46>).getValue());<newline46mondego>        gn.setName(node.getName());<newline46mondego><newline46mondego>        return gn;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    public void write(OutputNode node, GenericNode value) throws Exception<newline46mondego>    {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>Not supported yet.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7048splitHere46","17686583splitHere46","<root><newline46mondego>    <title> something </title><newline46mondego>    <desc> something more </desc><newline46mondego>     <mixture><newline46mondego>         <nodeA id=<doubleQuotes46>4<doubleQuotes46> type=<doubleQuotes46>A<doubleQuotes46>></nodeA><newline46mondego>         <nodeB id=<doubleQuotes46>5<doubleQuotes46> type=<doubleQuotes46>B<doubleQuotes46>></nodeB><newline46mondego>         <nodeB id=<doubleQuotes46>6<doubleQuotes46> type=<doubleQuotes46>C<doubleQuotes46>></nodeB><newline46mondego>         <nodeB id=<doubleQuotes46>7<doubleQuotes46> type=<doubleQuotes46>D<doubleQuotes46>></nodeB><newline46mondego>         <nodeB id=<doubleQuotes46>8<doubleQuotes46> type=<doubleQuotes46>E<doubleQuotes46>></nodeB><newline46mondego>         <nodeB id=<doubleQuotes46>9<doubleQuotes46> type=<doubleQuotes46>F<doubleQuotes46>></nodeB><newline46mondego>    </mixture><newline46mondego></root><newline46mondego>"
"7049splitHere46","17686680splitHere46","PrintWriter pw = new PrintWriter(fw,true); <newline46mondego>"
"7050splitHere46","17686680splitHere46","flush()"
"7051splitHere46","17686680splitHere46","PrintWriter pw = new PrintWriter(<doubleQuotes46>hadoop.csv<doubleQuotes46>);<newline46mondego>        pw.println(<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>        pw.flush();    <newline46mondego>        pw.close();<newline46mondego>"
"7052splitHere46","17686680splitHere46","flush()"
"7053splitHere46","17686833splitHere46","public class AWTApp extends Frame"
"7054splitHere46","17686833splitHere46","is a"
"7055splitHere46","17686833splitHere46","public AWTApp(String caption)<newline46mondego>    {<newline46mondego>        super(caption); // here you are calling super constructor the frame constructor and creating the frame<newline46mondego><newline46mondego>       this.setLayout(new GridLayout(PANELS_NO, 1)); // cause you are a frame you can call with this parents public protected (and package if they are in the same package)<newline46mondego>       this.add(..); <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7056splitHere46","17686845splitHere46","label.setText(<doubleQuotes46><html><h1>Heading</h1><br/>Some other text here.</html><doubleQuotes46>);<newline46mondego>label.setFont(new Font(<doubleQuotes46>Myriad Pro<doubleQuotes46>,Font.PLAIN,15));<newline46mondego>"
"7057splitHere46","17686861splitHere46","basic.get-ok"
"7058splitHere46","17686876splitHere46","Number"
"7059splitHere46","17686876splitHere46","put(String key, Number value)"
"7060splitHere46","17686876splitHere46","put(String key, Object value)"
"7061splitHere46","17686879splitHere46","java.util.Vector"
"7062splitHere46","17686879splitHere46","add(float, float)"
"7063splitHere46","17686879splitHere46","set(float, float)"
"7064splitHere46","17686879splitHere46","java.util.Vector"
"7065splitHere46","17686879splitHere46","add(float, float)"
"7066splitHere46","17686879splitHere46","java.util.Vector"
"7067splitHere46","17686879splitHere46","util.Vector"
"7068splitHere46","17686923splitHere46","Connection connect = DriverManager.getConnection(db_connect_string ,db_userid, db_password);<newline46mondego>"
"7069splitHere46","17686923splitHere46","this.connect = DriverManager.getConnection(db_connect_string ,db_userid, db_password);<newline46mondego>"
"7070splitHere46","17687009splitHere46","for(int k = 1; k < tokens.length; k++ )...<newline46mondego>"
"7071splitHere46","17687051splitHere46","onClick"
"7072splitHere46","17687051splitHere46","android:onClick=<doubleQuotes46>TheGame<doubleQuotes46>"
"7073splitHere46","17687051splitHere46","public void startTheGame (View view)"
"7074splitHere46","17687051splitHere46","onClick"
"7075splitHere46","17687051splitHere46","<doubleQuotes46>startTheGame<doubleQuotes46>"
"7076splitHere46","17687051splitHere46","View.OnClickListener"
"7077splitHere46","17687051splitHere46","onClick"
"7078splitHere46","17687051splitHere46","MVC"
"7079splitHere46","17687169splitHere46","int a,b;<newline46mondego>"
"7080splitHere46","17687169splitHere46","int a  = Integer.parseInt(numA);<newline46mondego>"
"7081splitHere46","17687169splitHere46","a  = Integer.parseInt(numA);<newline46mondego>"
"7082splitHere46","17687204splitHere46","p.put(<doubleQuotes46>java.naming.provider.url<doubleQuotes46>, <doubleQuotes46>http://127.0.0.1:8080/tomee/ejb<doubleQuotes46>);"
"7083splitHere46","17687245splitHere46","double"
"7084splitHere46","17687245splitHere46","Double.parseDouble(String)"
"7085splitHere46","17687245splitHere46","Double.parseDouble(Double.toString(x))"
"7086splitHere46","17687245splitHere46","x"
"7087splitHere46","17687245splitHere46","Double.toString(Double.parseDouble(string))"
"7088splitHere46","17687245splitHere46","string"
"7089splitHere46","17687245splitHere46","double"
"7090splitHere46","17687245splitHere46","Double.toString(Double.parseDouble(<doubleQuotes46>3.141592653589793238462<doubleQuotes46>))"
"7091splitHere46","17687245splitHere46","3.141592653589793"
"7092splitHere46","17687245splitHere46","System.out.println(3.141592653589793238462)"
"7093splitHere46","17687245splitHere46","3.141592653589793"
"7094splitHere46","17687245splitHere46","double"
"7095splitHere46","17687245splitHere46","double"
"7096splitHere46","17687245splitHere46","double"
"7097splitHere46","17687245splitHere46","0.1"
"7098splitHere46","17687245splitHere46","0.1"
"7099splitHere46","17687245splitHere46","double"
"7100splitHere46","17687245splitHere46","new BigDecimal(double).toString()"
"7101splitHere46","17687245splitHere46","new BigDecimal(0.1).toString()"
"7102splitHere46","17687245splitHere46","<doubleQuotes46>0.1000000000000000055511151231257827021181583404541015625<doubleQuotes46>"
"7103splitHere46","17687245splitHere46","0.1"
"7104splitHere46","17687245splitHere46","double"
"7105splitHere46","17687245splitHere46","Double.toString(x)"
"7106splitHere46","17687245splitHere46","x"
"7107splitHere46","17687245splitHere46","double"
"7108splitHere46","17687245splitHere46","0.1"
"7109splitHere46","17687245splitHere46","0.1000000000000000055511151231257827021181583404541015625"
"7110splitHere46","17687245splitHere46","Double.toString"
"7111splitHere46","17687245splitHere46","<doubleQuotes46>0.1<doubleQuotes46>"
"7112splitHere46","17687245splitHere46","0.1"
"7113splitHere46","17687245splitHere46","String"
"7114splitHere46","17687245splitHere46","BigDecimal"
"7115splitHere46","17687245splitHere46","new BigDecimal(<doubleQuotes46>0.1<doubleQuotes46>)"
"7116splitHere46","17687245splitHere46","double"
"7117splitHere46","17687489splitHere46","JLabel l=new JLabel(<doubleQuotes46>My Documents<doubleQuotes46>);<newline46mondego>l.setIcon(new ImageIcon(<doubleQuotes46>mydocuments.png<doubleQuotes46>));<newline46mondego><newline46mondego>l.setHorizontalTextPosition(SwingConstants.CENTER);<newline46mondego>l.setVerticalTextPosition(SwingConstants.BOTTOM);<newline46mondego>l.addMouseListener(new MouseAdapter(){<newline46mondego>            public void mouseClicked(MouseEvent me)<newline46mondego>            {<newline46mondego>                if(me.getClickCount()==2)<newline46mondego>                {<newline46mondego>                    try<newline46mondego>                    {<newline46mondego>                        Desktop.getDesktop().open(new File(System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>)+<doubleQuotes46>\\My Documents<doubleQuotes46>));<newline46mondego>                    }catch(Exception e){}<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"7118splitHere46","17687650splitHere46","xAxis.setTickLabelsVisible(false);<newline46mondego>yAxis.setTickLabelsVisible(false);<newline46mondego>"
"7119splitHere46","17687650splitHere46","test.css"
"7120splitHere46","17687650splitHere46","sc.getStylesheets().add(<doubleQuotes46>test.css<doubleQuotes46>);<newline46mondego>"
"7121splitHere46","17687650splitHere46","sc"
"7122splitHere46","17687650splitHere46","ScatterChart"
"7123splitHere46","17687650splitHere46",".axis-tick-mark, <newline46mondego>.axis-minor-tick-mark, <newline46mondego>.chart-vertical-grid-lines, <newline46mondego>.chart-horizontal-grid-lines, <newline46mondego>.chart-vertical-zero-line, <newline46mondego>.chart-horizontal-zero-line  {<newline46mondego>    -fx-stroke: transparent;<newline46mondego>}<newline46mondego><newline46mondego>.chart-alternative-row-fill, .chart-alternative-column-fill{<newline46mondego>    -fx-fill: #f5f5f5;<newline46mondego>}<newline46mondego>"
"7124splitHere46","17687695splitHere46","nameList = null;<newline46mondego>listNode current = null;<newline46mondego>for (String person : names) {<newline46mondego>    if (nameList= null) {<newline46mondego>        nameList = new listNode(names.get(0));<newline46mondego>        current = nameList;<newline46mondego>    } else {<newline46mondego>        current.next = new listNode(person);<newline46mondego>        current = current.next;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7125splitHere46","17687695splitHere46","listNode"
"7126splitHere46","17687695splitHere46","ListNode"
"7127splitHere46","17687695splitHere46","listManager"
"7128splitHere46","17687695splitHere46","ListManager"
"7129splitHere46","17687695splitHere46","for"
"7130splitHere46","17687695splitHere46","List"
"7131splitHere46","17687695splitHere46","ArrayList"
"7132splitHere46","17687695splitHere46","Iterator"
"7133splitHere46","17687695splitHere46","Iterator<String> iterNames = names.iterator();<newline46mondego>if (iterNames.hasNext()) {<newline46mondego>    nameList = new listNode(iterNames.next());<newline46mondego>    listNode current = nameList;<newline46mondego>    while (iter.hasNext()) {<newline46mondego>        current.next = new listNode(iterNames.next());<newline46mondego>        current = current.next;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7134splitHere46","17687695splitHere46","for"
"7135splitHere46","17687695splitHere46","null"
"7136splitHere46","17687735splitHere46","contactInfo"
"7137splitHere46","17687735splitHere46","null"
"7138splitHere46","17687735splitHere46","ArrayList"
"7139splitHere46","17687735splitHere46","public List<ContactInfo> getContactInfo() {<newline46mondego>    if(contactInfo == null) {<newline46mondego>        contactInfo = new ArrayList<ContactInfo>();<newline46mondego>    }<newline46mondego><newline46mondego>    return contactInfo;<newline46mondego>}<newline46mondego>"
"7140splitHere46","17687820splitHere46","HashMap"
"7141splitHere46","17687820splitHere46","String"
"7142splitHere46","17687820splitHere46","Integer"
"7143splitHere46","17687820splitHere46","HashMap"
"7144splitHere46","17687820splitHere46","String"
"7145splitHere46","17687820splitHere46","Integer"
"7146splitHere46","17687820splitHere46","Integer"
"7147splitHere46","17687820splitHere46","String"
"7148splitHere46","17687839splitHere46",".lookup(<doubleQuotes46>scrollbar<doubleQuotes46>)"
"7149splitHere46","17687963splitHere46","List"
"7150splitHere46","17687963splitHere46","Collection"
"7151splitHere46","17687963splitHere46","class"
"7152splitHere46","17687963splitHere46","interface"
"7153splitHere46","17687963splitHere46","List"
"7154splitHere46","17687963splitHere46","ArrayList"
"7155splitHere46","17687963splitHere46","List lst =  new ArrayList();"
"7156splitHere46","17687963splitHere46","java.util.ArrayList"
"7157splitHere46","17688098splitHere46","AutowireCandidateResolver"
"7158splitHere46","17688098splitHere46","public class ProxyAutowiredCandidateResolver extends SimpleAutowireCandidateResolver {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object getSuggestedValue(DependencyDescriptor descriptor) {<newline46mondego>        String dependencyClassName = descriptor.getDependencyType().getSimpleName();<newline46mondego>        if (dependencyClassName.endsWith(<doubleQuotes46>Interface<doubleQuotes46>)) {<newline46mondego>            return MyProxyUtil.getInstance(descriptor.getDependencyType());<newline46mondego>        }<newline46mondego><newline46mondego>        return super.getSuggestedValue(descriptor);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7159splitHere46","17688098splitHere46","BeanFactoryPostProcessor"
"7160splitHere46","17688098splitHere46","public class AutowireCandidateResolverConfigurer implements BeanFactoryPostProcessor {<newline46mondego><newline46mondego>    private AutowireCandidateResolver autowireCandidateResolver;<newline46mondego><newline46mondego>    public void postProcessBeanFactory(<newline46mondego>            ConfigurableListableBeanFactory beanFactory) throws BeansException {<newline46mondego>        DefaultListableBeanFactory  bf = (DefaultListableBeanFactory) beanFactory;<newline46mondego>        bf.setAutowireCandidateResolver(autowireCandidateResolver);<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public AutowireCandidateResolver getAutowireCandidateResolver() {<newline46mondego>        return autowireCandidateResolver;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAutowireCandidateResolver(<newline46mondego><newline46mondego>            AutowireCandidateResolver autowireCandidateResolver) {<newline46mondego>        this.autowireCandidateResolver = autowireCandidateResolver;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><bean id=<doubleQuotes46>autowireCandidateResolverConfigurer<doubleQuotes46> class=<doubleQuotes46>AutowireCandidateResolverConfigurer<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>autowireCandidateResolver<doubleQuotes46>><newline46mondego>            <bean class=<doubleQuotes46>ProxyAutowiredCandidateResolver<doubleQuotes46> /><newline46mondego>        </property><newline46mondego></bean><newline46mondego>"
"7161splitHere46","17688119splitHere46","String[] arr = str.split(<doubleQuotes46>\\s(?=\\d+ -)<doubleQuotes46>);<newline46mondego>"
"7162splitHere46","17688331splitHere46","Thread"
"7163splitHere46","17688399splitHere46","Map<String, String> newMap = new HashMap(oldMap);<newline46mondego>"
"7164splitHere46","17688399splitHere46","Object"
"7165splitHere46","17688399splitHere46","String"
"7166splitHere46","17688399splitHere46","Map"
"7167splitHere46","17688399splitHere46","Map"
"7168splitHere46","17688399splitHere46","HashMap"
"7169splitHere46","17688399splitHere46","TreeMap"
"7170splitHere46","17688399splitHere46","public class MapConverter {<newline46mondego>    public Map<String, String> convert(Map<String, Object> oldMap) {<newline46mondego>        Map<String, String> ret = new HashMap<String, String>();<newline46mondego>        for (String key : oldMap.keySet()) {<newline46mondego>            ret.put(key, oldMap.get(key).toString());<newline46mondego>        }<newline46mondego>        return ret;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7171splitHere46","17688818splitHere46","readLine()"
"7172splitHere46","17688818splitHere46","whitespace"
"7173splitHere46","17688818splitHere46","String line=null;<newline46mondego>    List<Course> courses = new ArrayList<>();<newline46mondego>        while ((line = inputFile.readLine())!= null) {<newline46mondego>            String[] arrayLine= line.split(<doubleQuotes46>\\s+<doubleQuotes46>); // here you are splitting with whitespace <newline46mondego>            courseName = arrayLine[0]<newline46mondego>            lName=arrayLine[1];<newline46mondego>            officeNumber=arrayLine[2];<newline46mondego>            list.add(new Course(courseName,lName,officeNumber));   <newline46mondego>          // you sure want do something with this create an object for example<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego> // in some part br.close();<newline46mondego>"
"7174splitHere46","17688829splitHere46","servletContext.setInitParameter(<doubleQuotes46>webAppRootKey<doubleQuotes46>, getRootKey());<newline46mondego>"
"7175splitHere46","17688829splitHere46","private String getRootKey() {<newline46mondego>    Properties prop = new Properties();<newline46mondego>    ClassLoader loader = Thread.currentThread().getContextClassLoader();           <newline46mondego>    InputStream stream = loader.getResourceAsStream(<doubleQuotes46>application.properties<doubleQuotes46>);<newline46mondego>    String key=null;<newline46mondego>    try {<newline46mondego>        prop.load(stream);<newline46mondego>        key = prop.getProperty(<doubleQuotes46>rootKey<doubleQuotes46>);<newline46mondego>    } catch  (Exception e) {<newline46mondego>        throw new RuntimeException(<doubleQuotes46>Cannot load webapprootkey<doubleQuotes46>, e);<newline46mondego>    }<newline46mondego>    return key;<newline46mondego>}<newline46mondego>"
"7176splitHere46","17688846splitHere46","compareTo"
"7177splitHere46","17688846splitHere46","Array.sort"
"7178splitHere46","17688846splitHere46","compareTo"
"7179splitHere46","17688846splitHere46","Item"
"7180splitHere46","17688846splitHere46","Array.sort"
"7181splitHere46","17688846splitHere46","compareTo"
"7182splitHere46","17688846splitHere46","Item"
"7183splitHere46","17688846splitHere46","compareTo"
"7184splitHere46","17688846splitHere46","Item"
"7185splitHere46","17688846splitHere46","this.getNumber() < i.getNumber()"
"7186splitHere46","17688846splitHere46","Item"
"7187splitHere46","17688846splitHere46","getNumber"
"7188splitHere46","17688846splitHere46","number"
"7189splitHere46","17688846splitHere46","Item"
"7190splitHere46","17688846splitHere46","Item.number"
"7191splitHere46","17688846splitHere46","Item.number"
"7192splitHere46","17688846splitHere46","Item.number"
"7193splitHere46","17688888splitHere46","byte a1=0;<newline46mondego>byte a2=1;<newline46mondego>byte a3=1;<newline46mondego>byte a4=0;<newline46mondego><newline46mondego>byte b = (byte) ((a1 << 7) | (a2 << 6) | (a3 << 5) | (a4 << 4));<newline46mondego>"
"7194splitHere46","17688955splitHere46","<doubleQuotes46>mystring<doubleQuotes46>.matches(<doubleQuotes46>(?!)<doubleQuotes46>)<newline46mondego>"
"7195splitHere46","17688957splitHere46","delete"
"7196splitHere46","17688957splitHere46","static"
"7197splitHere46","17688957splitHere46","p"
"7198splitHere46","17688957splitHere46","delete"
"7199splitHere46","17689071splitHere46","update-alternatives"
"7200splitHere46","17689071splitHere46","PATH"
"7201splitHere46","17689071splitHere46","bin/"
"7202splitHere46","17689071splitHere46","export JAVA_HOME=/donde/tengas/tu/jdk"
"7203splitHere46","17689071splitHere46","CLASSPATH"
"7204splitHere46","17689071splitHere46","lib/"
"7205splitHere46","17689071splitHere46","export PATH=$PATH:$JAVA_HOME/bin<newline46mondego>export CLASSPATH=$JAVA_HOME/lib<newline46mondego>"
"7206splitHere46","17689071splitHere46","PATH"
"7207splitHere46","17689071splitHere46",".../donde/tengas/tu/jdk//bin..."
"7208splitHere46","17689071splitHere46","lrwxrwxrwx  1 root      root        10 jul 16 19:01 java -> oracle-jdk-7<newline46mondego>drwxr-xr-x  8 root      root      4096 nov 14  2012 jdk1.6.0_25<newline46mondego>drwxr-xr-x  8 root      root      4096 nov 14  2012 jdk1.6.0_37<newline46mondego>drwxr-xr-x  8 root      root      4096 feb 15 15:21 jdk1.7.0_15<newline46mondego>drwxr-xr-x  8 root      root      4096 jun  5 23:07 jdk1.7.0_25<newline46mondego>lrwxrwxrwx  1 root      root        11 jul 16 19:00 oracle-jdk-6 -> jdk1.6.0_37<newline46mondego>lrwxrwxrwx  1 root      root        11 jul 16 19:00 oracle-jdk-7 -> jdk1.7.0_25<newline46mondego>"
"7209splitHere46","17689071splitHere46","[root@rojas opt]# java -version<newline46mondego>java version <doubleQuotes46>1.7.0_25<doubleQuotes46><newline46mondego>Java(TM) SE Runtime Environment (build 1.7.0_25-b15)<newline46mondego>Java HotSpot(TM) 64-Bit Server VM (build 23.25-b01, mixed mode)<newline46mondego>"
"7210splitHere46","17689071splitHere46","/ruta/completa/enlace/simbolico/java"
"7211splitHere46","17689071splitHere46","source"
"7212splitHere46","17689071splitHere46","source /path/a/archivo/donde/tienes/todos/esos/exports<newline46mondego>"
"7213splitHere46","17689071splitHere46","/etc/profile"
"7214splitHere46","17689071splitHere46","Android-Studio"
"7215splitHere46","17689251splitHere46","hrs"
"7216splitHere46","17689251splitHere46","mins"
"7217splitHere46","17689251splitHere46","while(true) //Equivalent to what you had <newline46mondego>{ <newline46mondego>      if(hrs == 19 && mins == 00) {<newline46mondego>           JOptionPane.showMessageDialog(frame,<newline46mondego>               <doubleQuotes46>It's 7:00 PM!<doubleQuotes46>,<newline46mondego>               <doubleQuotes46>Time Alert<doubleQuotes46>,<newline46mondego>               JOptionPane.WARNING_MESSAGE);<newline46mondego>           System.exit(0);<newline46mondego>           break;<newline46mondego>       }<newline46mondego>       //Refresh your hrs and mins here<newline46mondego>       Calendar calendar = GregorianCalendar.getInstance(); // Probably dont really want to actually get an instance every time<newline46mondego>       hrs = calendar.get(Calendar.HOUR_OF_DAY);<newline46mondego>       mins = calendar.get(Calendar.MINUTE);<newline46mondego>}<newline46mondego>"
"7218splitHere46","17689289splitHere46","for"
"7219splitHere46","17689289splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>ArrayList<Integer>[] paths = new ArrayList[2];<newline46mondego><newline46mondego>for (int i=0; i<2; ++i) {<newline46mondego>    paths[i] = new ArrayList<Integer>();<newline46mondego>    paths[i].add(1);<newline46mondego>}<newline46mondego>"
"7220splitHere46","17689289splitHere46","NullPointerException"
"7221splitHere46","17689385splitHere46","str = str.replaceAll(<doubleQuotes46>(\\d+\\.\\d+?)0+<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>);<newline46mondego>"
"7222splitHere46","17689385splitHere46","123.456000 --> 123.456<newline46mondego>123.000    --> 123.0<newline46mondego>"
"7223splitHere46","17689385splitHere46","str = str.replaceAll(<doubleQuotes46>(\\d+\\.\\d+)<doubleQuotes46>, <doubleQuotes46>$10<doubleQuotes46>);<newline46mondego>"
"7224splitHere46","17689485splitHere46","linux-t1h0:/opt/gradle/latest # ldd /opt/intellij/android_studio/v.2/sdk/build-tools/android-4.2.2/aapt<newline46mondego>    linux-gate.so.1 (0xf7760000)<newline46mondego>    librt.so.1 => /lib/librt.so.1 (0xf773e000)<newline46mondego>    libdl.so.2 => /lib/libdl.so.2 (0xf7739000)<newline46mondego>    libpthread.so.0 => /lib/libpthread.so.0 (0xf771e000)<newline46mondego>    libz.so.1 => /lib/libz.so.1 (0xf7707000)<newline46mondego>    libstdc++.so.6 => not found<newline46mondego>    libm.so.6 => /lib/libm.so.6 (0xf76c3000)<newline46mondego>    libgcc_s.so.1 => not found<newline46mondego>    libc.so.6 => /lib/libc.so.6 (0xf750e000)<newline46mondego>    /lib/ld-linux.so.2 (0xf7761000)<newline46mondego>"
"7225splitHere46","17689599splitHere46","Class.isInterface()"
"7226splitHere46","17689599splitHere46","B"
"7227splitHere46","17689599splitHere46","SomeClass"
"7228splitHere46","17689599splitHere46","A"
"7229splitHere46","17689599splitHere46","SomeClass"
"7230splitHere46","17689599splitHere46","A"
"7231splitHere46","17689599splitHere46","B"
"7232splitHere46","17689599splitHere46","B"
"7233splitHere46","17689599splitHere46","SomeClass"
"7234splitHere46","17689599splitHere46","A"
"7235splitHere46","17689599splitHere46","public static <A> SomeClass&A makeSomeClass(A thing) {...}<newline46mondego>"
"7236splitHere46","17689599splitHere46","SomeClass"
"7237splitHere46","17689599splitHere46","SomeClass"
"7238splitHere46","17689599splitHere46","public interface IsSomeClass {<newline46mondego>    SomeClass asSomeClass();<newline46mondego>}<newline46mondego><newline46mondego>public interface Foo extends IsSomeClass { }<newline46mondego>"
"7239splitHere46","17689599splitHere46","asSomeClass"
"7240splitHere46","17689599splitHere46","this"
"7241splitHere46","17689599splitHere46","public static <A extends IsSomeClass> A makeSomeClass(Class<A> type) {...}<newline46mondego>"
"7242splitHere46","17689599splitHere46","final Foo foo = makeSomeClass(Foo.class);<newline46mondego>final SomeClass someClass = foo.asSomeClass();<newline46mondego>"
"7243splitHere46","17689599splitHere46","final class SomeClassWrapper<A> {<newline46mondego><newline46mondego>    private final SomeClass someClass;<newline46mondego>    private final A a;<newline46mondego><newline46mondego>    //constructor and getters, etc.<newline46mondego>}<newline46mondego>"
"7244splitHere46","17689599splitHere46","someClass"
"7245splitHere46","17689599splitHere46","a"
"7246splitHere46","17689599splitHere46","public static <A> SomeClassWrapper<A> makeSomeClass(Class<A> type) {...}<newline46mondego>"
"7247splitHere46","17689678splitHere46","float[] gradeValues = { 4f, 3.67f, 3.33f, 3.00f, 2.67f, 2.33f, 2.00f,1.33f,1.00f,0.67f,0.00f,0.00f};<newline46mondego><newline46mondego>String [] gradeAlpabetic = {<doubleQuotes46>A+<doubleQuotes46>,<doubleQuotes46>A<doubleQuotes46>,<doubleQuotes46>A-<doubleQuotes46>,<doubleQuotes46>B+<doubleQuotes46>,<doubleQuotes46>B<doubleQuotes46>,<doubleQuotes46>B-<doubleQuotes46>,<doubleQuotes46>C+<doubleQuotes46>,<doubleQuotes46>C<doubleQuotes46>,<doubleQuotes46>C-<doubleQuotes46>,<doubleQuotes46>D+<doubleQuotes46>,<doubleQuotes46>D<doubleQuotes46>,<doubleQuotes46>D-<doubleQuotes46>,<doubleQuotes46>F<doubleQuotes46>,<doubleQuotes46>ABS<doubleQuotes46>};<newline46mondego>"
"7248splitHere46","17689678splitHere46","ArrayAdapter<String> gradesArrayAdap = new ArrayAdapter<String>(<newline46mondego>            getActivity(), R.layout.spinnerlayout, gradeAlphabetic);<newline46mondego><newline46mondego>    gradesSpinner.setAdapter(GradesArrayAdapter);<newline46mondego><newline46mondego><newline46mondego>  gradeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {<newline46mondego>        public void onItemSelected(AdapterView<?> arg0, View arg1,<newline46mondego>                int arg2, long arg3) {<newline46mondego><newline46mondego>            getGrades();<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onNothingSelected(AdapterView<?> arg0) {<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7249splitHere46","17689678splitHere46","public void getGrades(){<newline46mondego><newline46mondego><newline46mondego>       String grade = gradeSpinner.getSelectedItemPosition();<newline46mondego>       float theGrade = Float.parseFloat(gradeValue(grade);<newline46mondego><newline46mondego>      System.out.println(<doubleQuotes46>Your grade in float is: <doubleQuotes46> + theGrade);<newline46mondego><newline46mondego>}<newline46mondego>"
"7250splitHere46","17689709splitHere46","assets"
"7251splitHere46","17689709splitHere46","myBrowserField.requestContent(<doubleQuotes46>local:///index.html<doubleQuotes46>);<newline46mondego>"
"7252splitHere46","17689709splitHere46","index.html"
"7253splitHere46","17689709splitHere46","BrowserField"
"7254splitHere46","17689709splitHere46","browser = new BrowserField();<newline46mondego>  add(browser);<newline46mondego><newline46mondego>  InputStream content = getClass().getResourceAsStream(<doubleQuotes46>/resourcesWeb/index.html<doubleQuotes46>);     <newline46mondego>  try {<newline46mondego>     byte[] html = IOUtilities.streamToBytes(content);<newline46mondego>     browser.displayContent(new String(html), <doubleQuotes46>http://localhost<doubleQuotes46>);<newline46mondego>  } catch (IOException e) {<newline46mondego>     e.printStackTrace();<newline46mondego>  }<newline46mondego>"
"7255splitHere46","17689709splitHere46","index.html"
"7256splitHere46","17689709splitHere46","resourcesWeb"
"7257splitHere46","17689709splitHere46","res"
"7258splitHere46","17689709splitHere46","assets"
"7259splitHere46","17689709splitHere46","src"
"7260splitHere46","17689709splitHere46","res"
"7261splitHere46","17689709splitHere46","res"
"7262splitHere46","17689709splitHere46","assets"
"7263splitHere46","17689709splitHere46","assets"
"7264splitHere46","17689709splitHere46","assets"
"7265splitHere46","17689801splitHere46","// see if the user wants to continue<newline46mondego>    Validator validator = new Validator();<newline46mondego>    choice = validator.getString(sc, <doubleQuotes46>Continue? (y/n): <doubleQuotes46>);<newline46mondego>    System.out.println();<newline46mondego>"
"7266splitHere46","17689912splitHere46","my-proj    // aggregation only<newline46mondego>    + my-proj-parent    // parent POM<newline46mondego>    + my-proj-main<newline46mondego>    + my-proj-web<newline46mondego>    + my-proj-ear<newline46mondego>"
"7267splitHere46","17689912splitHere46","foo-a"
"7268splitHere46","17689912splitHere46","foo-b"
"7269splitHere46","17689912splitHere46","foo"
"7270splitHere46","17689912splitHere46","foo-parent"
"7271splitHere46","17689912splitHere46","spring-core"
"7272splitHere46","17689912splitHere46","dependencyManagement"
"7273splitHere46","17689912splitHere46","<project><newline46mondego>  <dependencyManagement>  // dependency management doesn't bring actual dependency<newline46mondego>    <dependencies><newline46mondego>      <dependency><newline46mondego>         <groupId>org.springframework<groupId><newline46mondego>         <artifactId>spring-core<artifactId><newline46mondego>         <version>3.1.0.RELEASE</version><newline46mondego>      </dependency><newline46mondego>      <dependency><newline46mondego>         <groupId>org.hibernate<groupId><newline46mondego>         <artifactId>hibernate-core<artifactId><newline46mondego>         <version>3.6</version><newline46mondego>      </dependency><newline46mondego>    </dependencies><newline46mondego>  <dependencyManagement><newline46mondego><newline46mondego>  <dependencies>    // actual shared dependency<newline46mondego>    <dependency><newline46mondego>       <groupId>junit<groupId><newline46mondego>       <artifactId>junit<artifactId><newline46mondego>       <version>4.11</version><newline46mondego>       <scope>test</scope><newline46mondego>    </dependency><newline46mondego>  </dependencies><newline46mondego>  .....<newline46mondego><project><newline46mondego>"
"7274splitHere46","17689912splitHere46","<project><newline46mondego>  <dependencies><newline46mondego>    <dependency> // note: no version declared<newline46mondego>      <groupId>org.springframework<groupId><newline46mondego>      <artifactId>spring-core<artifactId><newline46mondego>    </dependency><newline46mondego><newline46mondego>    // junit dependency is inherited<newline46mondego>  <dependencies><newline46mondego><project><newline46mondego>"
"7275splitHere46","17689942splitHere46","Color.YELLOW"
"7276splitHere46","17689942splitHere46","Color.RED"
"7277splitHere46","17689942splitHere46","p1namel = new JLabel(<doubleQuotes46><doubleQuotes46>);<newline46mondego>p1namel.setText(p1);<newline46mondego>p1namel.setFont(textfont);<newline46mondego>p1namel.setForeground(Color.GREEN); // << HERE<newline46mondego>getContentPane().add(p1namel);<newline46mondego><newline46mondego>p2namel = new JLabel(<doubleQuotes46><doubleQuotes46>);<newline46mondego>p2namel.setText(p2);<newline46mondego>p2namel.setForeground(Color.RED); // << AND HERE<newline46mondego>p2namel.setFont(textfont);<newline46mondego>getContentPane().add(p2namel);<newline46mondego>"
"7278splitHere46","17689942splitHere46","public static void main(String[] args) {<newline46mondego>    java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            TicTacToeGame frame = new TicTacToeGame(<doubleQuotes46>pax<doubleQuotes46>,<doubleQuotes46>diablo<doubleQuotes46>);<newline46mondego>            frame.setVisible(true);<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"7279splitHere46","17689968splitHere46","@Results({<newline46mondego>    @Result(name = <doubleQuotes46>success<doubleQuotes46>, location = <doubleQuotes46>/WEB-INF/content/index.jsp<doubleQuotes46>)<newline46mondego>})<newline46mondego>public class IndexController extends RestActionSupport implements Preparable{<newline46mondego>    private String page;<newline46mondego>    private String pageTitle;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void prepare() throws Exception {<newline46mondego>        page = <doubleQuotes46>home<doubleQuotes46>;<newline46mondego>        pageTitle= <doubleQuotes46>My Home Page<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7280splitHere46","17689968splitHere46","<%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> %><newline46mondego><%@ taglib prefix=<doubleQuotes46>fmt<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/fmt<doubleQuotes46> %><newline46mondego><%@ taglib prefix=<doubleQuotes46>s<doubleQuotes46> uri=<doubleQuotes46>/struts-tags<doubleQuotes46>%> <newline46mondego><html><newline46mondego>    <head><newline46mondego>        <title> ${pageTitle}</title><newline46mondego>    </head><newline46mondego><newline46mondego>    <body><newline46mondego>        <c:import url=<doubleQuotes46>${page}.jsp<doubleQuotes46> /><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"7281splitHere46","17689968splitHere46","<%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> %><newline46mondego><%@ taglib prefix=<doubleQuotes46>fmt<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/fmt<doubleQuotes46> %><newline46mondego><%@ taglib prefix=<doubleQuotes46>s<doubleQuotes46> uri=<doubleQuotes46>/struts-tags<doubleQuotes46>%><newline46mondego><newline46mondego><div><newline46mondego>    <h1>Welcome Home!</h1><newline46mondego></div><newline46mondego><newline46mondego><script type='text/javascript'><newline46mondego>    $(document).ready(function() {<newline46mondego>        // page specific scripting if needed<newline46mondego>    );<newline46mondego></script><newline46mondego>"
"7282splitHere46","17690138splitHere46","public Fragment getItem(int position) <newline46mondego>"
"7283splitHere46","17690175splitHere46","_"
"7284splitHere46","17690175splitHere46","_"
"7285splitHere46","17690175splitHere46","class _<_><newline46mondego>"
"7286splitHere46","17690175splitHere46","_"
"7287splitHere46","17690175splitHere46","_"
"7288splitHere46","17690175splitHere46","<_> _ _(_ _){ return (_)_; }<newline46mondego>"
"7289splitHere46","17690175splitHere46","_"
"7290splitHere46","17690175splitHere46","_"
"7291splitHere46","17690175splitHere46","_"
"7292splitHere46","17690175splitHere46","_"
"7293splitHere46","17690175splitHere46","_"
"7294splitHere46","17690175splitHere46","return"
"7295splitHere46","17690175splitHere46","_"
"7296splitHere46","17690175splitHere46","_"
"7297splitHere46","17690175splitHere46","class MyClass<T1><newline46mondego>{<newline46mondego>    <T2> T2 f(T2 arg){ return (T2)arg; }<newline46mondego>}<newline46mondego>"
"7298splitHere46","17690175splitHere46","_"
"7299splitHere46","17690175splitHere46","_"
"7300splitHere46","17690175splitHere46","_"
"7301splitHere46","17690349splitHere46","+"
"7302splitHere46","17690349splitHere46","()"
"7303splitHere46","17690349splitHere46","(\d)(\d)"
"7304splitHere46","17690349splitHere46","group 1"
"7305splitHere46","17690349splitHere46","group 2"
"7306splitHere46","17690349splitHere46","$1"
"7307splitHere46","17690349splitHere46","$2"
"7308splitHere46","17690351splitHere46","setSize(getPreferredSize());<newline46mondego>BufferedImage image = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_RGB);<newline46mondego>Graphics2D g = image.createGraphics();<newline46mondego>printAll(g);<newline46mondego>g.dispose();<newline46mondego>try { <newline46mondego>    ImageIO.write(image, <doubleQuotes46>png<doubleQuotes46>, new File([location goes here]); <newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"7309splitHere46","17690351splitHere46","paint"
"7310splitHere46","17690351splitHere46","printAll"
"7311splitHere46","17690351splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.GridBagConstraints;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.ImageIcon;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JTextField;<newline46mondego>import javax.swing.UIManager;<newline46mondego>import javax.swing.UnsupportedLookAndFeelException;<newline46mondego><newline46mondego>public class PaintComponent {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new PaintComponent();<newline46mondego>    }<newline46mondego><newline46mondego>    public PaintComponent() {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {<newline46mondego>                }<newline46mondego><newline46mondego>                JFrame frame = new JFrame(<doubleQuotes46>Testing<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setLayout(new BorderLayout());<newline46mondego>                frame.add(new TestPane());<newline46mondego>                frame.pack();<newline46mondego>                frame.setLocationRelativeTo(null);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public class TestPane extends JPanel {<newline46mondego><newline46mondego>        private JPanel paintPane;<newline46mondego><newline46mondego>        public TestPane() {<newline46mondego><newline46mondego>            paintPane = new JPanel(new GridBagLayout());<newline46mondego>            GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>            gbc.gridwidth = GridBagConstraints.REMAINDER;<newline46mondego><newline46mondego>            paintPane.add(new JLabel(<doubleQuotes46>I'm a label<doubleQuotes46>), gbc);<newline46mondego>            paintPane.add(new JTextField(<doubleQuotes46>I'm a text field<doubleQuotes46>, 20), gbc);<newline46mondego>            paintPane.add(new JLabel(new ImageIcon(<doubleQuotes46>some\pretty\picture<doubleQuotes46>)), gbc);<newline46mondego><newline46mondego>            setLayout(new BorderLayout());<newline46mondego>            add(paintPane);<newline46mondego><newline46mondego>            JButton paint = new JButton(<doubleQuotes46>Capture<doubleQuotes46>);<newline46mondego>            paint.addActionListener(new ActionListener() {<newline46mondego>                @Override<newline46mondego>                public void actionPerformed(ActionEvent e) {<newline46mondego>                    BufferedImage image = new BufferedImage(paintPane.getWidth(), paintPane.getHeight(), BufferedImage.TYPE_INT_RGB);<newline46mondego>                    Graphics2D g = image.createGraphics();<newline46mondego>                    paintPane.printAll(g);<newline46mondego>                    g.dispose();<newline46mondego>                    try {<newline46mondego>                        ImageIO.write(image, <doubleQuotes46>jpg<doubleQuotes46>, new File(<doubleQuotes46>Paint.jpg<doubleQuotes46>));<newline46mondego>                        ImageIO.write(image, <doubleQuotes46>png<doubleQuotes46>, new File(<doubleQuotes46>Paint.png<doubleQuotes46>));<newline46mondego>                    } catch (IOException exp) {<newline46mondego>                        exp.printStackTrace();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            });<newline46mondego>            add(paint, BorderLayout.SOUTH);<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7312splitHere46","17690371splitHere46","File"
"7313splitHere46","17690371splitHere46","File"
"7314splitHere46","17690371splitHere46","File"
"7315splitHere46","17690371splitHere46","Reader"
"7316splitHere46","17690371splitHere46","Reader"
"7317splitHere46","17690371splitHere46","StringReader"
"7318splitHere46","17690371splitHere46","class YourClass {<newline46mondego>  public int method(File file) {<newline46mondego>    // do everything here, which is why it requires a mock<newline46mondego>  }   <newline46mondego>}   <newline46mondego><newline46mondego>class YourRefactoredClass {<newline46mondego>  public int method(File file) {<newline46mondego>    return methodForTest(file.getName(), file.isFile(),<newline46mondego>        file.isAbsolute(), new FileReader(file));<newline46mondego>  }   <newline46mondego><newline46mondego>  /** For testing only. */<newline46mondego>  int methodForTest(<newline46mondego>      String name, boolean isFile, boolean isAbsolute, Reader fileContents) {<newline46mondego>    // actually do the calculation here<newline46mondego>  }   <newline46mondego>}   <newline46mondego><newline46mondego>class YourTest {<newline46mondego>  @Test public int methodShouldParseBadHtml() {<newline46mondego>    YourRefactoredClass yrc = new YourRefactoredClass();<newline46mondego>    assertEquals(42, yrc.methodForTest(<newline46mondego>        <doubleQuotes46>bad.html<doubleQuotes46>, true, false, new StringReader(badHTMLText));<newline46mondego>  }   <newline46mondego>}   <newline46mondego>"
"7319splitHere46","17690371splitHere46","method"
"7320splitHere46","17690371splitHere46","methodForTest"
"7321splitHere46","17690433splitHere46","TableModel"
"7322splitHere46","17690433splitHere46","JTable"
"7323splitHere46","17690433splitHere46","setModel()"
"7324splitHere46","17690433splitHere46","TableModelListener"
"7325splitHere46","17690433splitHere46","TableModelEvent"
"7326splitHere46","17690433splitHere46","SwingWorker"
"7327splitHere46","17690527splitHere46","def max_in_range(lst, low, high):<newline46mondego>    # If the length of the range is 1, the sole element in the range must be the maximum.<newline46mondego>    if low == high:<newline46mondego>        return lst[low]<newline46mondego><newline46mondego>    # break the array into two pieces, lst[low:low+1] / lst[low+1:high+1],<newline46mondego>    # find the maximum in each of the pieces<newline46mondego>    piece1_max = lst[low]<newline46mondego>    piece2_max = max_in_range(lst, low + 1, high)<newline46mondego><newline46mondego>    # find the maximum of the maxima<newline46mondego>    if piece1_max > piece2_max:<newline46mondego>        return piece1_max<newline46mondego>    else:<newline46mondego>        return piece2_max<newline46mondego><newline46mondego>lst = [112,32,45,71238,9999,45,12,6,3]<newline46mondego>print max_in_range(lst, 0, len(lst) - 1)<newline46mondego>"
"7328splitHere46","17690637splitHere46","Program Files"
"7329splitHere46","17690637splitHere46","Program Files (x86)"
"7330splitHere46","17690644splitHere46","BufferedOutputStream"
"7331splitHere46","17690701splitHere46","Lack of network connectivity may still cause these methods to return null or empty lists."
"7332splitHere46","17690701splitHere46","android:minSdkVersion=8"
"7333splitHere46","17690701splitHere46","android:minSdkVersion=9"
"7334splitHere46","17690889splitHere46","index.jsp"
"7335splitHere46","17690889splitHere46","VitalTrackApplet_MOD.jar"
"7336splitHere46","17690889splitHere46","VitalTrackApplet_MOD.jar"
"7337splitHere46","17690898splitHere46","binary"
"7338splitHere46","17690898splitHere46","UTF-8"
"7339splitHere46","17690898splitHere46","UTF-8"
"7340splitHere46","17690898splitHere46","final Cipher decipher = Cipher.getInstance(<doubleQuotes46>DESede/CFB/NoPadding<doubleQuotes46>);"
"7341splitHere46","17690898splitHere46","final Cipher decipher = Cipher.getInstance(<doubleQuotes46>DESede/CBC/PKCS5Padding<doubleQuotes46>);"
"7342splitHere46","17690898splitHere46","CBC"
"7343splitHere46","17690898splitHere46","CFB"
"7344splitHere46","17690898splitHere46","pkcs5"
"7345splitHere46","17690898splitHere46","pkcs7"
"7346splitHere46","17690898splitHere46","pkcs7"
"7347splitHere46","17690898splitHere46","pkcs7"
"7348splitHere46","17691026splitHere46","line"
"7349splitHere46","17691026splitHere46","<doubleQuotes46><doubleQuotes46>"
"7350splitHere46","17691026splitHere46","line"
"7351splitHere46","17691026splitHere46","charAt"
"7352splitHere46","17691026splitHere46","System.out.println(line);<newline46mondego>char x;<newline46mondego>if (line.length() < 1) {<newline46mondego>   System.out.println(<doubleQuotes46>next line is empty<doubleQuotes46>);<newline46mondego>} else {<newline46mondego>    x = line.charAt(0);<newline46mondego><newline46mondego>    while((line.charAt(0)!='/')&&(Character.isWhitespace(x)==false))<newline46mondego>    {<newline46mondego>       line = inputFile.nextLine();<newline46mondego>       if (line.length() < 1) {<newline46mondego>          System.out.println(<doubleQuotes46>next line is empty<doubleQuotes46>);<newline46mondego>          break;<newline46mondego>       }<newline46mondego>       x = line.charAt(0);<newline46mondego>       System.out.println(line);<newline46mondego>       System.out.println(x);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7353splitHere46","17691245splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>class MyClass<newline46mondego>{<newline46mondego>     public static void main(String args[]){<newline46mondego><newline46mondego>                Scanner scanner = new Scanner(System.in);<newline46mondego>                int eid,sid;<newline46mondego>                String ename;<newline46mondego>                System.out.println(<doubleQuotes46>Enter Employeeid:<doubleQuotes46>);<newline46mondego>                eid=scanner.nextInt();<newline46mondego>                scanner.nextLine(); //This is needed to pick up the new line<newline46mondego>                System.out.println(<doubleQuotes46>Enter EmployeeName:<doubleQuotes46>);<newline46mondego>                ename=scanner.nextLine();<newline46mondego>                System.out.println(<doubleQuotes46>Enter SupervisiorId:<doubleQuotes46>);<newline46mondego>                sid=(scanner.nextInt());  <newline46mondego>        }<newline46mondego>}<newline46mondego>"
"7354splitHere46","17691301splitHere46","public class PersonInfo{<newline46mondego>    private String name;<newline46mondego>    private int age;<newline46mondego>    private String address;<newline46mondego>    private int telephone; <newline46mondego>    // add setter/getter below<newline46mondego>}<newline46mondego>"
"7355splitHere46","17691301splitHere46","List<PersonInfo> list = new ArrayList<PersonInfo>()"
"7356splitHere46","17691307splitHere46","val dl : frontend.AST.DeclList = p.Start()<newline46mondego>"
"7357splitHere46","17691307splitHere46","AST"
"7358splitHere46","17691307splitHere46","AST"
"7359splitHere46","17691307splitHere46","found   : frontEnd.AST#DeclList<newline46mondego> required: frontEnd.AST.DeclList<newline46mondego>    val dl : frontEnd.AST.DeclList = p.Start()<newline46mondego>                                            ^<newline46mondego>"
"7360splitHere46","17691307splitHere46","val dl : frontEnd.AST.DeclList = p.Start().asInstanceOf[frontEnd.AST.DeclList] ;<newline46mondego>"
"7361splitHere46","17691307splitHere46","asInstanceOf"
"7362splitHere46","17691307splitHere46","<notype>"
"7363splitHere46","17691307splitHere46","asInstanceOf"
"7364splitHere46","17691539splitHere46","org.apache.jsp.index_jsp._jspInit(index_jsp.java:22)<newline46mondego>"
"7365splitHere46","17691539splitHere46","index_jsp.java<newline46mondego>"
"7366splitHere46","17691714splitHere46","setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>"
"7367splitHere46","17691744splitHere46","public class MyHttpUtility<newline46mondego>{<newline46mondego>    public HttpGet createHttpGet( String mAuthToken, String mCreditMobileNumber, mBusinessId )<newline46mondego>    {<newline46mondego>        HttpGet httpGet = new HttpGet(SystemConstants.CUSTOMER_SUMMARY_URL<newline46mondego>            + <doubleQuotes46>mobile=<doubleQuotes46> + mCreditMobileNumber + <doubleQuotes46>&businessid=<doubleQuotes46><newline46mondego>            + mBusinessId);<newline46mondego>        httpGet.addHeader( <doubleQuotes46>Authenticate<doubleQuotes46>, mAuthToken );<newline46mondego>        return httpGet;<newline46mondego>    }       <newline46mondego>}<newline46mondego>"
"7368splitHere46","17691744splitHere46","MyHttpUtility httpUtil = new MyHttpUtility();<newline46mondego>HttpGet httpGet = httpUtil.createHttpGet( <doubleQuotes46>token<doubleQuotes46>, <doubleQuotes46>ccmobile<doubleQuotes46>, <doubleQuotes46>businessid<doubleQuotes46> );<newline46mondego>HttpResponse response = client.execute(httpGet);<newline46mondego>// ... and the rest of the response logic<newline46mondego>"
"7369splitHere46","17691944splitHere46","id"
"7370splitHere46","17691944splitHere46","input"
"7371splitHere46","17691944splitHere46","input"
"7372splitHere46","17691944splitHere46","id"
"7373splitHere46","17691944splitHere46","<h:form>"
"7374splitHere46","17691944splitHere46","<dataTable>"
"7375splitHere46","17691944splitHere46","<p:column>"
"7376splitHere46","17691944splitHere46","prependId = <doubleQuotes46>false<doubleQuotes46>"
"7377splitHere46","17691944splitHere46","<h:form>"
"7378splitHere46","17691944splitHere46","$(document).ready(function(){<newline46mondego>  $(<doubleQuotes46>#inputTextId<doubleQuotes46>).keyup(function(){<newline46mondego>    //logic goes here. <newline46mondego>  });<newline46mondego>});<newline46mondego>"
"7379splitHere46","17691944splitHere46","<p:dataTable>"
"7380splitHere46","17691944splitHere46","<h:form id=<doubleQuotes46>form<doubleQuotes46>><newline46mondego>    <p:dataTable id=<doubleQuotes46>dataTable<doubleQuotes46> var=<doubleQuotes46>car<doubleQuotes46> value=<doubleQuotes46>#{carBean.cars}<doubleQuotes46> widgetVar=<doubleQuotes46>carsTable<doubleQuotes46>><newline46mondego>        <p:column id=<doubleQuotes46>modelColumn<doubleQuotes46> filterBy=<doubleQuotes46>#{car.model}<doubleQuotes46> headerText=<doubleQuotes46>Model<doubleQuotes46> filterMatchMode=<doubleQuotes46>contains<doubleQuotes46>><newline46mondego>            <h:outputText value=<doubleQuotes46>#{car.model}<doubleQuotes46> /><newline46mondego>        </p:column><newline46mondego>"
"7381splitHere46","17691944splitHere46","input"
"7382splitHere46","17691944splitHere46","form:dataTable:modelColumn:filter"
"7383splitHere46","17691944splitHere46","$(document).ready(function(){<newline46mondego>  $(<doubleQuotes46>#form\\:dataTable\\:modelColumn\\:filter<doubleQuotes46>).keyup(function(){<newline46mondego>    alert(<doubleQuotes46>Test<doubleQuotes46>); <newline46mondego>  });<newline46mondego>});<newline46mondego>"
"7384splitHere46","17691944splitHere46","resources/javascript/jscript.js"
"7385splitHere46","17691944splitHere46","<h:outputScript name=<doubleQuotes46>javascript/jscript.js<doubleQuotes46> />"
"7386splitHere46","17691944splitHere46","<h:head>"
"7387splitHere46","17691944splitHere46","id"
"7388splitHere46","17691944splitHere46","input"
"7389splitHere46","17691944splitHere46",":"
"7390splitHere46","17691944splitHere46","#tabViewGate\\:frmOut\\:tblQueues\\:colLicnu\\:filter<newline46mondego>"
"7391splitHere46","17691944splitHere46","A5290:tabViewGate:frmOut:tblQueues:colLicnu:filter <newline46mondego>"
"7392splitHere46","17691944splitHere46","#A5290\\:tabViewGate\\:frmOut\\:tblQueues\\:colLicnu\\:filter<newline46mondego>"
"7393splitHere46","17691977splitHere46","lv.setOnItemClickListener(new OnItemClickListener()<newline46mondego><newline46mondego>public void onItemClick(AdapterView<?> parent, View arg1, int position, long id) {  <newline46mondego>    if(arg1.getId()== R.id.btnaudioprayer && arg1.isClickable() ){<newline46mondego>        btnaudioprayer = (ImageButton) findViewById(R.id.btnaudioprayer); // initialized on list item click.<newline46mondego>"
"7394splitHere46","17691977splitHere46","btnaudioprayer.setEnabled(true); // inside init<newline46mondego>"
"7395splitHere46","17691977splitHere46","btnaudioprayer"
"7396splitHere46","17691977splitHere46","SimpleCursorAdapter"
"7397splitHere46","17691977splitHere46","class CustomAdapter extends SimpleCursorAdapter {<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>deprecation<doubleQuotes46>)<newline46mondego>    public CustomAdapter(Context context, int layout, Cursor c, String[] from, int[] to) {<newline46mondego>        super(context, layout, c, from, to);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>        inflater = LayoutInflater.from(context);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void bindView(View view, Context context, Cursor cursor){<newline46mondego>        int row_id = cursor.getColumnIndex(<doubleQuotes46>_id<doubleQuotes46>);  //Your row id (might need to replace)<newline46mondego>        TextView tv = (TextView) view.findViewById(R.id.text1);<newline46mondego>        final TextView tv1 = (TextView) view.findViewById(R.id.text2);<newline46mondego>        int col1 = cursor.getColumnIndex(<doubleQuotes46>title<doubleQuotes46>);<newline46mondego>        String title = cursor.getString(col1 );<newline46mondego>        int col2 = cursor.getColumnIndex(<doubleQuotes46>content<doubleQuotes46>);<newline46mondego>        final String content = cursor.getString(col2 );<newline46mondego>        //  TextView tv2 = (TextView) view.findViewById(R.id.text3);<newline46mondego>        // cursor.getColumnName(1)<newline46mondego>        tv.setText( title);<newline46mondego>        tv1.setText( content);<newline46mondego>        // tv2.setText( <doubleQuotes46><doubleQuotes46>+cursor.getColumnIndex(GinfyDbAdapter.CATEGORY_COLUMN_COUNT));<newline46mondego>        // String[] from = new String[]{GinfyDbAdapter.CATEGORY_COLUMN_TITLE, GinfyDbAdapter.CATEGORY_COLUMN_CONTENT, GinfyDbAdapter.CATEGORY_COLUMN_COUNT}<newline46mondego>        ImageButton button = (ImageButton) view.findViewById(R.id.btnaudioprayer);<newline46mondego>        button.setOnClickListener(new OnClickListener(){<newline46mondego>            @Override<newline46mondego>            public void onClick(View v){<newline46mondego>                //ADD STUFF HERE you know which row is clicked. and which button<newline46mondego>                typed = content;<newline46mondego>                speakOut();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public View newView(Context context, Cursor cursor, ViewGroup parent){<newline46mondego>        LayoutInflater inflater = LayoutInflater.from(context);<newline46mondego>        View v = inflater.inflate(R.layout.activity_row, parent, false);<newline46mondego><newline46mondego>        bindView(v,context,cursor);<newline46mondego>        return v;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7398splitHere46","17691977splitHere46","filldata"
"7399splitHere46","17691977splitHere46","String[] from = new String[]{GinfyDbAdapter.CATEGORY_COLUMN_TITLE, GinfyDbAdapter.CATEGORY_COLUMN_CONTENT, GinfyDbAdapter.CATEGORY_COLUMN_COUNT};<newline46mondego>int[] to = new int[]{R.id.text2, R.id.text1, R.id.count};<newline46mondego>dataAdapter = new CustomAdapter (MainActivity.this, pct, projectsCursor, from, to);<newline46mondego>setListAdapter(dataAdapter);<newline46mondego>"
"7400splitHere46","17691977splitHere46","private void speakOut() { <newline46mondego>    tts.speak(typed, TextToSpeech.QUEUE_FLUSH, null);<newline46mondego>}<newline46mondego>"
"7401splitHere46","17691977splitHere46","TextToSpeech.OnInitListener"
"7402splitHere46","17691977splitHere46","public void onInit(int status) {<newline46mondego>    if (status == TextToSpeech.SUCCESS) {<newline46mondego>        int result = tts.setLanguage(Locale.US);<newline46mondego>        if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {<newline46mondego>            Log.e(<doubleQuotes46>TTS<doubleQuotes46>, <doubleQuotes46>This Language is not supported<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            // btnaudioprayer.setEnabled(true);<newline46mondego>            speakOut();<newline46mondego>        }<newline46mondego>    } else {<newline46mondego>        Log.e(<doubleQuotes46>TTS<doubleQuotes46>, <doubleQuotes46>Initilization Failed!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7403splitHere46","17691991splitHere46","response = httpclient.execute(httppost);<newline46mondego>HttpEntity entity = response.getEntity();<newline46mondego>String s=EntityUtils.toString(entity);<newline46mondego>System.out.println(s);<newline46mondego>"
"7404splitHere46","17692048splitHere46","A: int current = get();  // current = 5<newline46mondego>B: int current = get();  // current = 5<newline46mondego>B: int next = current + delta;  // next = 6<newline46mondego>B: if (compareAndSet(current, next))  // OK<newline46mondego>          return next;<newline46mondego>A: int next = current + delta;  // next = 6 <newline46mondego>A: if (compareAndSet(current, next))  <newline46mondego>    // fails, because <doubleQuotes46>current<doubleQuotes46> is still 5<newline46mondego>    // and that does not match the value which has been changed to 6 by B<newline46mondego>"
"7405splitHere46","17692048splitHere46","A: int current = get();  => current now 6<newline46mondego>A: int next = current + delta;  => next = 7<newline46mondego>A: if (compareAndSet(current, next))  => now OK<newline46mondego>"
"7406splitHere46","17692115splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><manifest xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    package=<doubleQuotes46>com.example.epstest<doubleQuotes46><newline46mondego>    android:versionCode=<doubleQuotes46>1<doubleQuotes46><newline46mondego>    android:versionName=<doubleQuotes46>1.0<doubleQuotes46> ><newline46mondego>    ....<newline46mondego>    <application<newline46mondego>        android:allowBackup=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:icon=<doubleQuotes46>@drawable/ic_launcher<doubleQuotes46><newline46mondego>        android:label=<doubleQuotes46>@string/app_name<doubleQuotes46><newline46mondego>        android:theme=<doubleQuotes46>@style/AppTheme<doubleQuotes46> ><newline46mondego>"
"7407splitHere46","17692115splitHere46","<activity<newline46mondego>            android:name=<doubleQuotes46>dolphin.developers.com.MyHTTPD<doubleQuotes46><newline46mondego>            android:label=<doubleQuotes46>@string/title<doubleQuotes46><newline46mondego>            android:configChanges=<doubleQuotes46>orientation<doubleQuotes46> ><newline46mondego>        </activity><newline46mondego>"
"7408splitHere46","17692115splitHere46","</application><newline46mondego><newline46mondego></manifest><newline46mondego>"
"7409splitHere46","17692283splitHere46","compassView"
"7410splitHere46","17692283splitHere46","ImageView"
"7411splitHere46","17692283splitHere46","ImageView compassView = (ImageView) findViewById(R.id.visual_compass); <newline46mondego>"
"7412splitHere46","17692283splitHere46","Project-> clean."
"7413splitHere46","17692283splitHere46","Proejct-> Build"
"7414splitHere46","17692295splitHere46","session.invalidate()"
"7415splitHere46","17692295splitHere46","SecurityUtils.getSubject().logout()"
"7416splitHere46","17692295splitHere46","protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token)<newline46mondego>     throws AuthenticationException {<newline46mondego>    ...<newline46mondego>    SimplePrincipalCollection principals = new SimplePrincipalCollection(username, <doubleQuotes46>jndiJdbcRealm<doubleQuotes46>);<newline46mondego>    super.doClearCache(principals);<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7417splitHere46","17692341splitHere46","com.example.project.sub1.Panel"
"7418splitHere46","17692341splitHere46","com"
"7419splitHere46","17692341splitHere46","com.example.project.sub1.Panel"
"7420splitHere46","17692341splitHere46","Class<MyPanel>"
"7421splitHere46","17692341splitHere46","Class<Panel>"
"7422splitHere46","17692341splitHere46","Class<? extends Panel>"
"7423splitHere46","17692412splitHere46","if (!window.Clipboard) {<newline46mondego>   var pasteCatcher = document.createElement(<doubleQuotes46>apDiv1<doubleQuotes46>);<newline46mondego>   pasteCatcher.setAttribute(<doubleQuotes46>contenteditable<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>   pasteCatcher.style.opacity = 0;<newline46mondego>   document.body.appendChild(pasteCatcher);<newline46mondego>   pasteCatcher.focus();<newline46mondego>   document.addEventListener(<doubleQuotes46>click<doubleQuotes46>, function() { pasteCatcher.focus(); });<newline46mondego>} <newline46mondego><newline46mondego>window.addEventListener(<doubleQuotes46>paste<doubleQuotes46>, onPasteHandler);<newline46mondego><newline46mondego>function onPasteHandler(e)<newline46mondego>{<newline46mondego>    if(e.clipboardData) {<newline46mondego>        var items = e.clipboardData.items;<newline46mondego>        if(!items){<newline46mondego>            alert(<doubleQuotes46>Image Not found<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        for (var i = 0; i < items.length; ++i) {<newline46mondego>        if (items[i].kind === 'file' && items[i].type === 'image/png') {<newline46mondego>            var blob = items[i].getAsFile(),<newline46mondego>                source = window.webkitURL.createObjectURL(blob);<newline46mondego><newline46mondego>            pastedImage = new Image();<newline46mondego>            pastedImage.src = source;<newline46mondego><newline46mondego>            pasteData();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>function pasteData()<newline46mondego>{<newline46mondego>    drawCanvas = document.getElementById('drawCanvas1');<newline46mondego>    ctx = drawCanvas.getContext( '2d' );<newline46mondego>    ctx.clearRect(0, 0, 640,480);<newline46mondego>    ctx.drawImage(pastedImage, 0, 0);<newline46mondego>}<newline46mondego>"
"7424splitHere46","17692412splitHere46","<div id=<doubleQuotes46>apDiv1<doubleQuotes46> contenteditable='true'>Paste Test</div><newline46mondego>"
"7425splitHere46","17692426splitHere46","deneme"
"7426splitHere46","17692426splitHere46","deneme[0]"
"7427splitHere46","17692426splitHere46","k"
"7428splitHere46","17692426splitHere46","0"
"7429splitHere46","17692426splitHere46","numbers.size() - 1"
"7430splitHere46","17692426splitHere46","final int col = 6;<newline46mondego>final int rows = numbers.size() % col == 0 ? numbers.size() / col : numbers.size() / col + 1;<newline46mondego>double[][] deneme = new double[rows][col];<newline46mondego>for (int i = 0; i < rows; i++) {<newline46mondego>    for (int k = 0; k < col; k++) {<newline46mondego>        if (i == rows - 1 && k >= numbers.size() % col) // UPDATE: last line may not contain `col` sized elements<newline46mondego>            break;<newline46mondego>        deneme[i][k] = numbers.get(k + col * i);       <newline46mondego>        System.out.print( deneme[i][k]+ <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }// for k end<newline46mondego>    System.out.println(); // go to next line<newline46mondego>} // for i end<newline46mondego>"
"7431splitHere46","17692461splitHere46","Date"
"7432splitHere46","17692461splitHere46","String"
"7433splitHere46","17692461splitHere46","DesiredField"
"7434splitHere46","17692461splitHere46","@Target(value = ElementType.FIELD)<newline46mondego>@Retention(value = RetentionPolicy.RUNTIME)<newline46mondego>public @interface DesiredField {<newline46mondego><newline46mondego>}   <newline46mondego>"
"7435splitHere46","17692461splitHere46","DesiredField"
"7436splitHere46","17692461splitHere46","dateOfBirth"
"7437splitHere46","17692461splitHere46","aadhaarNumber"
"7438splitHere46","17692461splitHere46","public class Person extends BaseModel {<newline46mondego><newline46mondego>    @DesiredField<newline46mondego>    private Date dateOfBirth;<newline46mondego>    @DesiredField<newline46mondego>    private String aadhaarNumber;<newline46mondego><newline46mondego>    private Set<EducationQualification> educationQualifications;<newline46mondego><newline46mondego>    // Rest of the fields and methods<newline46mondego><newline46mondego>}<newline46mondego>"
"7439splitHere46","17692461splitHere46","Person person = new Person();<newline46mondego>  Field[] fields = person.getClass().getFields();<newline46mondego><newline46mondego>  for(Field field : fields){<newline46mondego>      DesiredField annotation = field.getAnnotation(DesiredField.class);<newline46mondego>      if( annotation != null ){<newline46mondego>          // This is desired field now do what you want<newline46mondego>      }<newline46mondego>  } <newline46mondego>"
"7440splitHere46","17692594splitHere46","CheckBox[] C = new CheckBox[136];<newline46mondego>// see thepoosh comment, you need to change to this:<newline46mondego>for (int i = 0; i < 136; i++) {<newline46mondego>   C[i] = (CheckBox) findViewById(checkBox[i]);<newline46mondego>}<newline46mondego>"
"7441splitHere46","17692594splitHere46","R.java"
"7442splitHere46","17692627splitHere46","public static List<LocalDate> datesBetween(LocalDate start, LocalDate end) {<newline46mondego>    List<LocalDate> ret = new ArrayList<LocalDate>();<newline46mondego>    for (LocalDate date = start; !date.isAfter(end); date = date.plusDays(1)) {<newline46mondego>        ret.add(date);<newline46mondego>    }<newline46mondego>    return ret;<newline46mondego>}<newline46mondego>"
"7443splitHere46","17692627splitHere46","end"
"7444splitHere46","17692627splitHere46","date.isBefore(end)"
"7445splitHere46","17692627splitHere46","Iterable<LocalDate>"
"7446splitHere46","17692627splitHere46","public static Iterable<LocalDate> datesBetween(final LocalDate start,<newline46mondego>                                               final LocalDate end) {<newline46mondego>    return new Iterable<LocalDate>() {<newline46mondego>        @Override public Iterator<LocalDate> iterator() {<newline46mondego>            return new Iterator<LocalDate>() {<newline46mondego>                private LocalDate next = start;<newline46mondego><newline46mondego>                @Override<newline46mondego>                public boolean hasNext() {<newline46mondego>                    return !next.isAfter(end);<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public LocalDate next() {<newline46mondego>                    if (next.isAfter(end)) {<newline46mondego>                        throw NoSuchElementException();<newline46mondego>                    }<newline46mondego>                    LocalDate ret = next;<newline46mondego>                    next = next.plusDays(1);<newline46mondego>                    return ret;<newline46mondego>                }<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void remove() {<newline46mondego>                    throw new UnsupportedOperationException();<newline46mondego>                }<newline46mondego>            };<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"7447splitHere46","17692730splitHere46","String url = <your url eg... img src='http://someurl and ends with -t1'><newline46mondego><newline46mondego>String whatYouWant = url.split(<doubleQuotes46>img src<doubleQuotes46>)[1].split(<doubleQuotes46>-t1<doubleQuotes46>)[0];<newline46mondego>"
"7448splitHere46","17692730splitHere46","whatYouWant"
"7449splitHere46","17693082splitHere46","runOnUiThread"
"7450splitHere46","17693082splitHere46","public class MyServer implements Runnable {<newline46mondego><newline46mondego>public int serverPort = 8080;<newline46mondego>public String serverIp = <doubleQuotes46>http://192.168.1.115<doubleQuotes46>;<newline46mondego>public Handler handler = new Handler();<newline46mondego>public TextView serverStatus;<newline46mondego>public ServerSocket serverSocket;<newline46mondego>MyServerMethods myServerMethods = new MyServerMethods();<newline46mondego><newline46mondego>private AndroidServer2 mActivity;<newline46mondego><newline46mondego>MyServer(AndroidServer2 activity) {<newline46mondego>    mActivity = activity;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void run() {<newline46mondego>    try{<newline46mondego>      ServerSocket parent = new ServerSocket(); //create a new socket<newline46mondego>      parent.setReuseAddress(true);<newline46mondego>      parent.bind(new InetSocketAddress(serverPort)); //bind the server port and reuse it if necessary<newline46mondego>        if ( serverIp != null){<newline46mondego>            Log.i(<doubleQuotes46>Status<doubleQuotes46>,<doubleQuotes46>READY<doubleQuotes46>);<newline46mondego>            while (true){<newline46mondego>                Socket client = parent.accept(); //accept the incoming connection<newline46mondego><newline46mondego>                // Client connected now set the button visibilty<newline46mondego>                mActivity.runOnUiThread(new Runnable() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public void run() {<newline46mondego>                        mActivity.setButtonVisible();<newline46mondego>                    }<newline46mondego>                });<newline46mondego><newline46mondego>                try{<newline46mondego>                    String path = myServerMethods.readRequest(parent, client);<newline46mondego>                    Log.i(<doubleQuotes46>PATH<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>+path);<newline46mondego>                    if (path.contains(<doubleQuotes46>FitListXml<doubleQuotes46>)){<newline46mondego>                        myServerMethods.sendXmlFile(client);<newline46mondego>                    } else {<newline46mondego>                        myServerMethods.sendPhotoFile(client, path);<newline46mondego>                    }<newline46mondego><newline46mondego>                } catch (Exception e){<newline46mondego>                    e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } else{<newline46mondego>            Log.i(<doubleQuotes46>Error<doubleQuotes46>,<doubleQuotes46>Internet connection not present<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7451splitHere46","17693082splitHere46","public class AndroidServer2 extends Activity {<newline46mondego><newline46mondego>    private Button closeConnectionButton;<newline46mondego>    int serverPort = 8080;<newline46mondego>    Thread fst = new Thread(new MyServer(this)); //declaration of a new thread<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_android_server2);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onResume(){<newline46mondego>        super.onResume();<newline46mondego>        if (fst.isAlive() == false){<newline46mondego>            fst.start();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>      protected void onPause() {<newline46mondego>        super.onPause();<newline46mondego>        try {<newline46mondego>            fst.interrupt();<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>      }<newline46mondego><newline46mondego>    public void setButtonVisible() {<newline46mondego>        closeConnectionButton.setVisibility(View.VISIBLE);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7452splitHere46","17693099splitHere46","Scanner"
"7453splitHere46","17693099splitHere46","InputStream"
"7454splitHere46","17693099splitHere46","NoSuchElementException"
"7455splitHere46","17693099splitHere46","Scanner"
"7456splitHere46","17693099splitHere46","Scanner"
"7457splitHere46","17693099splitHere46","Scanner"
"7458splitHere46","17693099splitHere46","OO"
"7459splitHere46","17693099splitHere46","static"
"7460splitHere46","17693099splitHere46","public class UserLog {<newline46mondego>   private String username;<newline46mondego>   // more variables...<newline46mondego><newline46mondego>   private final Scanner in;<newline46mondego><newline46mondego>   public UserLog() {<newline46mondego>      in = new Scanner(System.in);<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      UserLog userLog = new UserLog();<newline46mondego>      userLog.showMenu();<newline46mondego>   }<newline46mondego><newline46mondego>   public void menu() {<newline46mondego>      boolean call = false;<newline46mondego><newline46mondego>      do {<newline46mondego>         try {<newline46mondego>            System.out.println(<doubleQuotes46>Select an option: <doubleQuotes46>);<newline46mondego>            System.out.println(<doubleQuotes46>1: New account \n<doubleQuotes46> + <doubleQuotes46>2: Existing account<doubleQuotes46>);<newline46mondego>            System.out.print(<doubleQuotes46>-<doubleQuotes46>);<newline46mondego>            int choice = in.nextInt();<newline46mondego>            in.nextLine();<newline46mondego><newline46mondego>            switch (choice) {<newline46mondego>            case 1:<newline46mondego>               call = true;<newline46mondego>               System.out.println(<doubleQuotes46>\nNew account called\n<doubleQuotes46>);<newline46mondego>               userCreate();<newline46mondego>               break;<newline46mondego>            case 2:<newline46mondego>               call = true;<newline46mondego>               System.out.println(<doubleQuotes46>\nExisting account called\n<doubleQuotes46>);<newline46mondego>               login();<newline46mondego>               break;<newline46mondego>            default:<newline46mondego>               System.out.println(<doubleQuotes46>\nNot a valid option\n<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>         } catch (InputMismatchException e) {<newline46mondego>            System.out.println(<doubleQuotes46>Invalid option <doubleQuotes46> + in.nextLine());<newline46mondego>         }<newline46mondego>      } while (!call);<newline46mondego>   }<newline46mondego>   ...<newline46mondego>} <newline46mondego>"
"7461splitHere46","17693110splitHere46","TimeZone tz = TimeZone.getTimeZone(<doubleQuotes46>Asia/Calcutta<doubleQuotes46>);<newline46mondego>Calendar cal = Calendar.getInstance(tz);<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'<doubleQuotes46>)<newline46mondego>sdf.setCalendar(cal);<newline46mondego>cal.setTime(sdf.parse(<doubleQuotes46>2013-07-17T03:58:00.000Z<doubleQuotes46>));<newline46mondego>Date date = cal.getTime();<newline46mondego>"
"7462splitHere46","17693110splitHere46","DateTimeFormatter dtf = DateTimeFormat.forPattern(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'<doubleQuotes46>);<newline46mondego>DateTime dt = dtf.parseDateTime(<doubleQuotes46>2013-07-17T03:58:00.000Z<doubleQuotes46>);<newline46mondego>Date date = dt.toDate();<newline46mondego>"
"7463splitHere46","17693238splitHere46","import java.io.*;<newline46mondego><newline46mondego>class CountRows<newline46mondego>{<newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        setForSum(<doubleQuotes46>read.txt<doubleQuotes46>,9);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void setForSum(String filename,int param2)<newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            FileInputStream fstream = new FileInputStream(filename);<newline46mondego>            BufferedReader br = new BufferedReader(new InputStreamReader(fstream));<newline46mondego>            String strLine;<newline46mondego>            int i = 0;<newline46mondego>            while ((strLine = br.readLine()) != null)   <newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                if(param2 == Integer.parseInt(strLine){ <newline46mondego>                   //print the i i.e line number<newline46mondego>                }<newline46mondego>            }<newline46mondego>            in.close();<newline46mondego>        }<newline46mondego>        catch (Exception e)<newline46mondego>        {<newline46mondego>            System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7464splitHere46","17693415splitHere46","DocumentListener"
"7465splitHere46","17693415splitHere46","JTextField"
"7466splitHere46","17693415splitHere46","ActionListener"
"7467splitHere46","17693415splitHere46","JTextField"
"7468splitHere46","17693415splitHere46","jb=new JButton(<doubleQuotes46>Print<doubleQuotes46>);<newline46mondego>    jt=new JTextField(20);<newline46mondego><newline46mondego>    jt.addActionListener(new ActionListener(){<newline46mondego>        public void actionPerformed(ActionEvent ae)<newline46mondego>        {<newline46mondego>            jb.doClick();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    jt.getDocument().addDocumentListener(new DocumentListener(){<newline46mondego>        public void insertUpdate(DocumentEvent de)<newline46mondego>        {<newline46mondego>            jb.setEnabled(true);<newline46mondego>        }<newline46mondego>        public void changedUpdate(DocumentEvent de)<newline46mondego>        {<newline46mondego>            jb.setEnabled(true);<newline46mondego>        }<newline46mondego>        public void removeUpdate(DocumentEvent de)<newline46mondego>        {<newline46mondego>            jb.setEnabled(true);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    jb.addActionListener(new ActionListener(){<newline46mondego>        public void actionPerformed(ActionEvent ae)<newline46mondego>        {<newline46mondego>            System.out.println(jt.getText());<newline46mondego>            jb.setEnabled(false);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7469splitHere46","17693488splitHere46","IdentifierLoadAccess"
"7470splitHere46","17693488splitHere46","load"
"7471splitHere46","17693488splitHere46","List"
"7472splitHere46","17693488splitHere46","T"
"7473splitHere46","17693488splitHere46","search(String)"
"7474splitHere46","17693488splitHere46","UserDaoHibernate"
"7475splitHere46","17693488splitHere46","loadUserByUsername()"
"7476splitHere46","17693488splitHere46","public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {<newline46mondego>    List users = getSession().createCriteria(User.class).add(Restrictions.eq(<doubleQuotes46>username<doubleQuotes46>, username)).list();<newline46mondego>    if (users == null || users.isEmpty()) {<newline46mondego>        throw new UsernameNotFoundException(<doubleQuotes46>user '<doubleQuotes46> + username + <doubleQuotes46>' not found...<doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        return (UserDetails) users.get(0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7477splitHere46","17693488splitHere46","public List<UserDetails> loadLockedUsers() {<newline46mondego>    List<UserDetails> users = (List<UserDetails>) getSession().createCriteria(User.class).add(Restrictions.eq(<doubleQuotes46>account_locked<doubleQuotes46>, true)).list();<newline46mondego>    return users;<newline46mondego>}<newline46mondego>"
"7478splitHere46","17693509splitHere46","select().from(...)"
"7479splitHere46","17693509splitHere46","selectFrom()"
"7480splitHere46","17693509splitHere46","Result<CountryRecord> countryRecords = sql.selectFrom(Tables.COUNTRY).fetch();<newline46mondego>for (CountryRecord cr : countryRecords) {<newline46mondego>    cr.getNamet();<newline46mondego>    //etc...<newline46mondego>}<newline46mondego>"
"7481splitHere46","17693586splitHere46","Executes the specified program in a separate native process."
"7482splitHere46","17693586splitHere46","Process"
"7483splitHere46","17693586splitHere46","exec()"
"7484splitHere46","17693610splitHere46","if (menu.itemList.getSelectedValue() == null) <newline46mondego>    return; <newline46mondego>"
"7485splitHere46","17693610splitHere46","String index = menu.itemList.getSelectedValue().toString();<newline46mondego>"
"7486splitHere46","17693693splitHere46","Iterator"
"7487splitHere46","17693693splitHere46","buyingItemEnumerationMap.remove(item.getKey());<newline46mondego>"
"7488splitHere46","17693693splitHere46","Iterator<Map.Entry<String, Integer>> iterator = <newline46mondego>                           buyingItemEnumerationMap.entrySet().iterator();<newline46mondego>while (iterator.hasNext()) {<newline46mondego>   Map.Entry<String, Integer> item = iterator.next();<newline46mondego>   if(RandomEngine.boolChance(50)){ //will delete?<newline46mondego>      iterator.remove();<newline46mondego>   }<newline46mondego>   //..<newline46mondego>}<newline46mondego>"
"7489splitHere46","17693693splitHere46","Iterator#remove()"
"7490splitHere46","17693693splitHere46","Set"
"7491splitHere46","17693693splitHere46","Map"
"7492splitHere46","17693693splitHere46","Set"
"7493splitHere46","17693783splitHere46","System.getProperty(<doubleQuotes46>user.name<doubleQuotes46>)"
"7494splitHere46","17693783splitHere46","user = System.getProperty(<doubleQuotes46>user.name<doubleQuotes46>);<newline46mondego>cmd = <doubleQuotes46>java -jar C/Users/<doubleQuotes46> + user + <doubleQuotes46>/appdata/Roaming/<folder>/<file>.jar<doubleQuotes46>;<newline46mondego>Runtime.getRuntime().exec(cmd);<newline46mondego>"
"7495splitHere46","17693868splitHere46","testGetPeopleSortsByPeopleName"
"7496splitHere46","17693868splitHere46","@Test public void testGetPeopleSortsByPeopleName() {<newline46mondego><newline46mondego>    peopleStuff.data = buildMockDataSource(COUNTRY, <doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>D<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>)<newline46mondego><newline46mondego>    List<String> result = peopleStuff.getSortedPeopleForCountry(COUNTRY);<newline46mondego><newline46mondego>    assertPersonList(result, <doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>, <doubleQuotes46>D<doubleQuotes46>)<newline46mondego>}<newline46mondego><newline46mondego>private IData buildMockDataSource(String country, String ... names) {<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>private void assertPersonList(List<Person> people, String ... names) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7497splitHere46","17694060splitHere46",".java"
"7498splitHere46","17694112splitHere46","List<T>"
"7499splitHere46","17694112splitHere46","List<T>(IEnumerable<T>)"
"7500splitHere46","17694112splitHere46","List<NameAddress> route = dialog.getRoute();<newline46mondego>for ( IEnumerable<NameAddress> e = route.All; e.hasMoreElements(); ) {<newline46mondego>    // some more to copy route to another List<><newline46mondego>    }<newline46mondego>"
"7501splitHere46","17694112splitHere46","List<NameAddress> newRoute = new List<NameAddress>(dialog.getRoute());<newline46mondego>"
"7502splitHere46","17694112splitHere46","IEnumerable<T1> dialog.getRoute()"
"7503splitHere46","17694112splitHere46","List<T2>"
"7504splitHere46","17694360splitHere46","Window->Preferences->Checkstyle"
"7505splitHere46","17694360splitHere46","Sun Checks"
"7506splitHere46","17694360splitHere46","Sun Checks (Eclipse)"
"7507splitHere46","17694360splitHere46","Copy"
"7508splitHere46","17694693splitHere46","data_queue.wait()"
"7509splitHere46","17694693splitHere46","data_queue.notifyAll()"
"7510splitHere46","17694889splitHere46","HttpClient"
"7511splitHere46","17694889splitHere46","HttpConnection"
"7512splitHere46","17694889splitHere46","PostMethod post = new PostMethod(url);<newline46mondego>    // ...<newline46mondego>    HttpClient httpclient = new HttpClient();  <newline46mondego>    httpclient.getHttpConnectionManager().getConnection(HostConfiguration.ANY_HOST_CONFIGURATION);<newline46mondego>    // ...<newline46mondego>    httpclient.executeMethod(post);<newline46mondego>"
"7513splitHere46","17694941splitHere46","-XX:+AggressiveOpts"
"7514splitHere46","17694941splitHere46","Boolean: both values<newline46mondego>Byte: all<newline46mondego>Character: 0 to 127<newline46mondego>Short: -128 to 127<newline46mondego>Integer: -128 to 127<newline46mondego>Long: -128 to 127<newline46mondego>Float and Double: none<newline46mondego>BigInteger: -16 to 16 (in HotSpot Java 7)<newline46mondego>BigDecimal: 0 to 10 (if you use valueOf(long)) and <newline46mondego>            0 to 0.000000000000000 (if you use valueOf(long, int)) (in HotSpot Java 7)<newline46mondego>"
"7515splitHere46","17695136splitHere46","Breadcrumb"
"7516splitHere46","17695136splitHere46","SelectionListener"
"7517splitHere46","17695136splitHere46","BreadcrumbItem"
"7518splitHere46","17695168splitHere46","/**<newline46mondego> *<newline46mondego> * @author qualebs<newline46mondego> */<newline46mondego>public class MyObject {<newline46mondego>private String a;<newline46mondego>private Map<String, Object> map;<newline46mondego><newline46mondego>public String getA() {<newline46mondego>    return a;<newline46mondego>}<newline46mondego><newline46mondego>public void setA(String a) {<newline46mondego>    this.a = a;<newline46mondego>}<newline46mondego><newline46mondego>public Map<String, Object> getMap() {<newline46mondego>    return map;<newline46mondego>}<newline46mondego><newline46mondego>public void setMap(Map<String, Object> map) {<newline46mondego>    this.map = map;<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"7519splitHere46","17695168splitHere46","ObjectMapper mapper = new ObjectMapper().configure(Feature.FAIL_ON_UNKNOWN_PROPERTIES, false)<newline46mondego>            .enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);<newline46mondego>"
"7520splitHere46","17695168splitHere46","Map<String, Object> map = new HashMap<String, Object>();<newline46mondego>    map.put(<doubleQuotes46>string<doubleQuotes46>, <doubleQuotes46>example string<doubleQuotes46>);<newline46mondego>    map.put(<doubleQuotes46>int<doubleQuotes46>, 1);<newline46mondego>    map.put(<doubleQuotes46>long<doubleQuotes46>, 1l);<newline46mondego>    map.put(<doubleQuotes46>double<doubleQuotes46>, 2.0);<newline46mondego>"
"7521splitHere46","17695203splitHere46","directoryEntries"
"7522splitHere46","17695203splitHere46","isFolders"
"7523splitHere46","17695203splitHere46","directoryEntries.add(<doubleQuotes46>..<doubleQuotes46>);<newline46mondego>"
"7524splitHere46","17695215splitHere46","@Column(insertable = false)<newline46mondego>private String field = null;<newline46mondego>"
"7525splitHere46","17695215splitHere46","field"
"7526splitHere46","17695215splitHere46","null"
"7527splitHere46","17695215splitHere46","null"
"7528splitHere46","17695215splitHere46","not null"
"7529splitHere46","17695215splitHere46","null"
"7530splitHere46","17695215splitHere46","null"
"7531splitHere46","17695340splitHere46","String myRegex = <doubleQuotes46>[\\^]\\d{5}~[A-Za-z~ ]+<doubleQuotes46>;<newline46mondego>"
"7532splitHere46","17695537splitHere46",".project"
"7533splitHere46","17695974splitHere46","<s:iterator value=<doubleQuotes46>#session['sessionKey']<doubleQuotes46>><newline46mondego>"
"7534splitHere46","17695974splitHere46","<s:iterator value=<doubleQuotes46>#session.sessionKey<doubleQuotes46>><newline46mondego>"
"7535splitHere46","17696092splitHere46","<Context path=<doubleQuotes46><doubleQuotes46> docBase=<doubleQuotes46>NAME-OF-DIRECTORY-UNDER-WEBAPPS<doubleQuotes46>><newline46mondego>  <WatchedResource>WEB-INF/web.xml</WatchedResource><newline46mondego></Context><newline46mondego>"
"7536splitHere46","17696100splitHere46","entrySet()"
"7537splitHere46","17696100splitHere46","Set<Map.Entry<K,V>>"
"7538splitHere46","17696100splitHere46","Foo<A>"
"7539splitHere46","17696100splitHere46","Foo<B>"
"7540splitHere46","17696100splitHere46","entrySet()"
"7541splitHere46","17696100splitHere46","Set<? extends Map.Entry<K,V>>"
"7542splitHere46","17696100splitHere46","entrySet()"
"7543splitHere46","17696100splitHere46","extends"
"7544splitHere46","17696107splitHere46","int"
"7545splitHere46","17696107splitHere46","=="
"7546splitHere46","17696107splitHere46","sum(i=0..6) (26^i) = 3.10^8"
"7547splitHere46","17696210splitHere46","SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>EEE MMM d HH:mm:ss zzz yyyy <doubleQuotes46>);<newline46mondego>    sdf.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>UTC<doubleQuotes46>));<newline46mondego>    Date date = new Date();<newline46mondego>    System.out.println(sdf.format(date));<newline46mondego>"
"7548splitHere46","17696210splitHere46","DateFormat sdf = new SimpleDateFormat(<doubleQuotes46>EEE MMM d HH:mm:ss zzz yyyy <doubleQuotes46>);<newline46mondego>    sdf.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>UTC<doubleQuotes46>));<newline46mondego>    DateFormat format = new SimpleDateFormat(<doubleQuotes46>MMddyyHHmmss<doubleQuotes46>);<newline46mondego>    Date date = format.parse(<doubleQuotes46>022310141505<doubleQuotes46>);<newline46mondego>    System.out.println(sdf.format(date));<newline46mondego>"
"7549splitHere46","17696214splitHere46","runOnUiThread(new Runnable() {<newline46mondego>                public void run() {<newline46mondego>                    adapter.notifyDataSetChanged();<newline46mondego>                }<newline46mondego>            });<newline46mondego>"
"7550splitHere46","17696214splitHere46","public class Adapter extends BaseAdapter {<newline46mondego><newline46mondego>    private Activity activity;<newline46mondego>    private ArrayList<HashMap<String, String>> data;<newline46mondego>    private static LayoutInflater inflater = null;<newline46mondego>    public ImageLoader imageLoader;<newline46mondego><newline46mondego>    public MediaItemAdapter(Activity a, ArrayList<HashMap<String, String>> d) {<newline46mondego>        activity = a;<newline46mondego>        data = d;<newline46mondego>        inflater = (LayoutInflater) activity<newline46mondego>                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>        imageLoader = new ImageLoader(activity.getApplicationContext());<newline46mondego>    }<newline46mondego><newline46mondego>    public int getCount() {<newline46mondego>        return data.size();<newline46mondego>    }<newline46mondego><newline46mondego>    public Object getItem(int position) {<newline46mondego>        return position;<newline46mondego>    }<newline46mondego><newline46mondego>    public long getItemId(int position) {<newline46mondego>        return position;<newline46mondego>    }<newline46mondego><newline46mondego>    public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        View vi = convertView;<newline46mondego>        if (convertView == null) {<newline46mondego>            vi = inflater.inflate(R.layout.item_composer, null);<newline46mondego>        }<newline46mondego>        TextView title = (TextView) vi.findViewById(R.id.item_title); // title<newline46mondego>        TextView price = (TextView) vi.findViewById(R.id.price);<newline46mondego><newline46mondego><newline46mondego>        return vi;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"7551splitHere46","17696214splitHere46","List myList = new ArrayList<HashMap<String, String>>();<newline46mondego>Adapter ma = new Adapter(this, myList);<newline46mondego>"
"7552splitHere46","17696214splitHere46","myList.add(someElement);<newline46mondego>ma.notifyDataSetChanged();<newline46mondego>"
"7553splitHere46","17696214splitHere46","myList.clear;<newline46mondego>ma.notifyDataSetChanged();<newline46mondego>"
"7554splitHere46","17696453splitHere46","PropertyNotFoundException"
"7555splitHere46","17696453splitHere46","getter/setter"
"7556splitHere46","17696453splitHere46","@ManagedBean(name=<doubleQuotes46>HelloWorldBean<doubleQuotes46>)<newline46mondego>public calss HelloWorldBean {<newline46mondego><newline46mondego>    private String getHelloWorld() {<newline46mondego>        return <doubleQuotes46>Hello World!<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7557splitHere46","17696453splitHere46","<h:outputText value=<doubleQuotes46>#{HelloWorldBean.helloWorld}<doubleQuotes46>/><newline46mondego>"
"7558splitHere46","17696493splitHere46","while (true)"
"7559splitHere46","17696493splitHere46","boolean added = false;<newline46mondego>            while (priorityBlocking.peek() != null) {<newline46mondego>                added = true;<newline46mondego>                String symbol = priorityBlocking.poll();<newline46mondego>                allSymbolsSet.add(symbol);<newline46mondego>                try {<newline46mondego>                    System.out.println(<doubleQuotes46>Symbol From priorityBlocking<doubleQuotes46> +<doubleQuotes46>  <doubleQuotes46>+ symbol);<newline46mondego>                }   catch (Exception e) {<newline46mondego>                        e.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>            if (added) {<newline46mondego>                Iterator<String> ite = allSymbolsSet.iterator();<newline46mondego>                while (ite.hasNext()) {<newline46mondego>                    String symbol = ite.next();<newline46mondego>                    if (symbol != null && symbol.trim().length() > 0) {<newline46mondego>                        try {<newline46mondego>                            System.out.println(<doubleQuotes46>Symbol From allSymbolsSet<doubleQuotes46>+<doubleQuotes46>   <doubleQuotes46>+symbol);<newline46mondego>                        } catch (Exception e) {<newline46mondego>                            e.printStackTrace();<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>"
"7560splitHere46","17696493splitHere46","take"
"7561splitHere46","17696493splitHere46","poll(long,TimeUnit)"
"7562splitHere46","17696493splitHere46","InterruptedException"
"7563splitHere46","17696592splitHere46","int pin = hash.hashCode() % 1e7;<newline46mondego>"
"7564splitHere46","17696594splitHere46","$.ajax(..)"
"7565splitHere46","17696594splitHere46","Location"
"7566splitHere46","17696594splitHere46","window.location.href"
"7567splitHere46","17696717splitHere46","List<Object[]>"
"7568splitHere46","17696717splitHere46","List<Object[]> resultList = (List<Object[]>) query.getResultList();<newline46mondego>for (Object[] array : resultList) {<newline46mondego>   for (Object field : array) {<newline46mondego>      System.out.println(<doubleQuotes46>-><doubleQuotes46>+field); <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7569splitHere46","17696717splitHere46","SELECT new Foo(.....) FROM.."
"7570splitHere46","17696717splitHere46","em.createQuery(..)"
"7571splitHere46","17696717splitHere46","TypedQuery"
"7572splitHere46","17696739splitHere46","private int index;<newline46mondego>"
"7573splitHere46","17696739splitHere46","this.index = 1;<newline46mondego>"
"7574splitHere46","17696739splitHere46","SavingsAccount accountID = new SavingsAccount(holder + index++, startBalance);<newline46mondego>"
"7575splitHere46","17696739splitHere46","index"
"7576splitHere46","17696739splitHere46","holder"
"7577splitHere46","17696739splitHere46","index"
"7578splitHere46","17696739splitHere46","array"
"7579splitHere46","17696739splitHere46","List"
"7580splitHere46","17696739splitHere46","List<SavingsAccount> accounts = new ArrayList<SavingsAccount>();<newline46mondego>accounts.add(new SavingsAccount(<doubleQuotes46>Dave<doubleQuotes46>, something);<newline46mondego>accounts.add(new SavingsAccount(<doubleQuotes46>Bill<doubleQuotes46>, somethingElse);<newline46mondego>"
"7581splitHere46","17696739splitHere46","accounts.get(1);<newline46mondego>"
"7582splitHere46","17696739splitHere46","accounts.get(0);"
"7583splitHere46","17696768splitHere46","airlinedbCustomtheme<newline46mondego>"
"7584splitHere46","17696768splitHere46",".v-table {}<newline46mondego>  .v-table-header-wrap {}<newline46mondego>    .v-table-header {}<newline46mondego>     .v-table-header-cell {}<newline46mondego>      .v-table-resizer {} /* Column resizer handle. */<newline46mondego>       .v-table-caption-container {}<newline46mondego> .v-table-body {}<newline46mondego>  .v-table-row-spacer {}<newline46mondego>   .v-table-table {}<newline46mondego>    .v-table-row {}<newline46mondego>     .v-table-cell-content {}<newline46mondego>"
"7585splitHere46","17696768splitHere46",".v-button .v-button-wrap { <newline46mondego>  background-image: none !important; <newline46mondego>} <newline46mondego>.v-button { <newline46mondego>  background-image: none !important; <newline46mondego>}<newline46mondego>"
"7586splitHere46","17696768splitHere46","!important"
"7587splitHere46","17696768splitHere46",".v-table { <newline46mondego>  background-color: red !important; <newline46mondego>} <newline46mondego>"
"7588splitHere46","17696854splitHere46","Elements links = doc.select(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>    String crawlingNode = links.html();<newline46mondego>        System.out.println(crawlingNode);<newline46mondego>            httptest.WriteOnFile(writer, crawlingNode);<newline46mondego>"
"7589splitHere46","17696854splitHere46","Element links = doc.select(<doubleQuotes46>*<doubleQuotes46>).first();<newline46mondego>            String crawlingNode = links.html();<newline46mondego>                System.out.println(crawlingNode);<newline46mondego>                    httptest.WriteOnFile(writer, crawlingNode);<newline46mondego>"
"7590splitHere46","17696923splitHere46","public Map<String, String> readXmldata(String xml_debug_settings, String node)<newline46mondego>    {<newline46mondego><newline46mondego>        File xml_debug_settings_file = new File(xml_debug_settings);<newline46mondego><newline46mondego>        if (xml_debug_settings_file.exists())<newline46mondego>        {            <newline46mondego>            SAXReader saxReader = new SAXReader();<newline46mondego><newline46mondego>            try {<newline46mondego><newline46mondego>                Document document = saxReader.read(xml_debug_settings_file);<newline46mondego><newline46mondego>                //Document temp = DocumentHelper.parseText(<doubleQuotes46><doubleQuotes46>);  <newline46mondego><newline46mondego>                Element root = document.getRootElement();<newline46mondego><newline46mondego>                Iterator itr = root.elements().iterator();  <newline46mondego><newline46mondego>                Element element = null;<newline46mondego><newline46mondego>                while (itr.hasNext()) {  <newline46mondego><newline46mondego>                    Element debel = (Element) itr.next();<newline46mondego><newline46mondego>                    // System.out.println(debel.getName());    // node_name_1<newline46mondego><newline46mondego>                    if (debel.getName().equals(node)) { <newline46mondego><newline46mondego>                        Iterator itrd = debel.elementIterator();<newline46mondego><newline46mondego>                        while (itrd.hasNext())<newline46mondego>                        {<newline46mondego>                            Element child = (Element) itrd.next();<newline46mondego>                            String name = child.getName();  // node_name_2<newline46mondego><newline46mondego>                            int nodecount = child.nodeCount();<newline46mondego><newline46mondego>                            for (int i=0; i<nodecount; i++)<newline46mondego>                            {<newline46mondego>                                xmlarray.put(name, child.getStringValue());<newline46mondego>                            }<newline46mondego>                        }<newline46mondego><newline46mondego>                        return this.xmlarray;<newline46mondego>                   }<newline46mondego>                }  <newline46mondego><newline46mondego>            } catch (DocumentException ex) {<newline46mondego>                Logger.getLogger(Debugsettings.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            JOptionPane.showMessageDialog(null, <doubleQuotes46>Not exists:<doubleQuotes46>  + xml_debug_settings, <doubleQuotes46>Failed to open xml<doubleQuotes46>, JOptionPane.WARNING_MESSAGE);<newline46mondego>        }<newline46mondego>        return null;<newline46mondego><newline46mondego>    }<newline46mondego>"
"7591splitHere46","17696923splitHere46","Map<String, String> arrayList = xmlparser.readXmldata(this.xml_debug_settings, <doubleQuotes46>someconfig<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.prinln(arrayList.get(<doubleQuotes46>config1<doubleQuotes46>));<newline46mondego>"
"7592splitHere46","17696923splitHere46","<document><newline46mondego> <someconfig><newline46mondego>   <config1>value_of_config</config><newline46mondego> </someconfig><newline46mondego></document><newline46mondego>"
"7593splitHere46","17696930splitHere46","public interface IRoutingHandling {<newline46mondego><newline46mondego>    void writeMessage(Long key, HashSet<String> value);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Routing implements IRoutingHandling {<newline46mondego><newline46mondego>    private final Hashtable<Long, HashSet<String>> reverseLookup;<newline46mondego><newline46mondego>    private ASender asender;<newline46mondego>    private BSender bsender;<newline46mondego><newline46mondego>    public Routing() {<newline46mondego>        //Constructor work to be done here.. <newline46mondego>        reverseLookup = new Hashtable<Long, HashSet<String>>();<newline46mondego>    }<newline46mondego><newline46mondego>    public void notify(TopicEvent event) {<newline46mondego>        if (event.getMessage() instanceof AMessage) {<newline46mondego>            asender = new ASender(this, event.getMessage())<newline46mondego><newline46mondego>        } else if (event.getMessage() instanceof BMessage) {<newline46mondego>            bsender = new BSender(this, event.getMessage())<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void writeMessage(Long key, HashSet<String> value) {<newline46mondego>        reverseLookup.put(key, value);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class ASender implements Runnable {<newline46mondego><newline46mondego>    private IRoutingHandling _routingHandling;<newline46mondego><newline46mondego>    public ASender(IRoutingHandling r, RoutingMessage rm) {<newline46mondego>        _routingHandling = r;<newline46mondego>        routingMessage = rm;<newline46mondego>        this.run();<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        handleMessage();<newline46mondego>    }<newline46mondego><newline46mondego>    private void handleMessage() {<newline46mondego>        // do some stuff and extract data from the routing message object<newline46mondego><newline46mondego>        _routingHandling.writeMessage(somethingToSetAsKey, somethingToSetAsValue)<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7594splitHere46","17696938splitHere46","java.util.Random"
"7595splitHere46","17696938splitHere46","label"
"7596splitHere46","17696938splitHere46","final JLabel label=new JLabel(<doubleQuotes46>Label<doubleQuotes46>);<newline46mondego>        // Label must be opaque to display<newline46mondego>        // the background<newline46mondego>        label.setOpaque(true);<newline46mondego><newline46mondego>        final Random r=new Random();<newline46mondego>        Timer t=new Timer(100,new ActionListener(){<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                Color c=new Color(r.nextInt(256),r.nextInt(256),r.nextInt(256),r.nextInt(256));<newline46mondego>                label.setBackground(c);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        t.start();<newline46mondego>"
"7597splitHere46","17696938splitHere46","float"
"7598splitHere46","17696938splitHere46","Math.random()"
"7599splitHere46","17696938splitHere46","r.nextFloat()"
"7600splitHere46","17696954splitHere46","startline"
"7601splitHere46","17696954splitHere46","while ((strLine = br.readLine()) != null)   <newline46mondego>        {<newline46mondego>            ++i;<newline46mondego>            if(startline == 0) // set startline only if startline is zero, which will happen the first time and everytime you've printed the status<newline46mondego>                startline = i;<newline46mondego>            int line = Integer.parseInt(strLine);<newline46mondego>            sum=sum+line;<newline46mondego>            System.out.println(<doubleQuotes46>Sum= <doubleQuotes46>+sum);<newline46mondego>            if(sum>=param2)<newline46mondego>            {                 <newline46mondego>                /* System.out.println(<doubleQuotes46>line number : <doubleQuotes46>+i);*/ <newline46mondego>                System.out.println(<doubleQuotes46>Start line number :<doubleQuotes46>+startline+<doubleQuotes46> End line number:<doubleQuotes46> +i);<newline46mondego>                sum =0;<newline46mondego>                startline = 0;  // reset startline here<newline46mondego>            }                                <newline46mondego>        }            <newline46mondego>"
"7602splitHere46","17696981splitHere46","String b = String.format(<doubleQuotes46>%04d<doubleQuotes46>, a);<newline46mondego>"
"7603splitHere46","17697140splitHere46","@Named"
"7604splitHere46","17697140splitHere46","list()"
"7605splitHere46","17697173splitHere46","ResourceLoaderAware"
"7606splitHere46","17697173splitHere46","inform"
"7607splitHere46","17697173splitHere46","ResourceLoader"
"7608splitHere46","17697173splitHere46","protected Iterable<String> loadRules( String synonyms, ResourceLoader loader ) {<newline46mondego>    List<String> wlist=null;<newline46mondego>    try {<newline46mondego>      File synonymFile = new File(synonyms);<newline46mondego>      if (synonymFile.exists()) {<newline46mondego>        wlist = loader.getLines(synonyms);<newline46mondego>      } else  {<newline46mondego>        List<String> files = StrUtils.splitFileNames(synonyms);<newline46mondego>        wlist = new ArrayList<String>();<newline46mondego>        for (String file : files) {<newline46mondego>          List<String> lines = loader.getLines(file.trim());<newline46mondego>          wlist.addAll(lines);<newline46mondego>        }<newline46mondego>      }<newline46mondego>    } catch (IOException e) {<newline46mondego>      throw new RuntimeException(e);<newline46mondego>    }<newline46mondego>    return wlist;<newline46mondego>}<newline46mondego>"
"7609splitHere46","17697336splitHere46","package nz.test.loader;<newline46mondego><newline46mondego>public interface Executer {<newline46mondego><newline46mondego>    public void execute();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>package nz.test.loader;<newline46mondego><newline46mondego>import javax.tools.*;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.io.StringWriter;<newline46mondego>import java.net.URI;<newline46mondego>import java.net.URL;<newline46mondego>import java.net.URLClassLoader;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class LoadClass {<newline46mondego><newline46mondego>    public static void main(String[] argv) throws Exception {<newline46mondego><newline46mondego>        URL[] urls = null;<newline46mondego><newline46mondego>        File dir = new File(System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>) + File.separator + <doubleQuotes46>out/dir<doubleQuotes46> + File.separator);<newline46mondego>        File classFile = new File(dir,<doubleQuotes46>nz/co.test/loader/MyClass.class<doubleQuotes46>);<newline46mondego>        long lastModified = classFile.lastModified();<newline46mondego>        URL url = dir.toURI().toURL();<newline46mondego>        urls = new URL[] { url };<newline46mondego>        ClassLoader cl = new URLClassLoader(urls);<newline46mondego>        compileClass(<doubleQuotes46>first class<doubleQuotes46>, dir.getAbsolutePath());<newline46mondego><newline46mondego>        Class cls = cl.loadClass(<doubleQuotes46>nz.test.loader.MyClass<doubleQuotes46>);<newline46mondego>        Executer myObj = (Executer) cls.newInstance();<newline46mondego><newline46mondego>        myObj.execute();<newline46mondego>        compileClass(<doubleQuotes46>another class<doubleQuotes46>, dir.getAbsolutePath());<newline46mondego>        cl = new URLClassLoader(urls);<newline46mondego><newline46mondego>        cls = cl.loadClass(<doubleQuotes46>nz.test.loader.MyClass<doubleQuotes46>);<newline46mondego>        myObj = (Executer) cls.newInstance();<newline46mondego><newline46mondego>        myObj.execute();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void compileClass(String message, String destination) throws IOException {<newline46mondego>        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();<newline46mondego>        DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<JavaFileObject>();<newline46mondego><newline46mondego>        StringWriter writer = new StringWriter();<newline46mondego>        PrintWriter out = new PrintWriter(writer);<newline46mondego>        out.println(<doubleQuotes46>package nz.test.loader;<doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46>public class MyClass implements Executer{<doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46>  public void execute() {<doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46>    System.out.println(\<doubleQuotes46><doubleQuotes46>+message+<doubleQuotes46>\<doubleQuotes46>);<doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46>  }<doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46>}<doubleQuotes46>);<newline46mondego>        out.close();<newline46mondego>        JavaFileObject file = new JavaSourceFromString(<doubleQuotes46>nz.test.loader.MyClass<doubleQuotes46>, writer.toString());<newline46mondego><newline46mondego>        Iterable<? extends JavaFileObject> compilationUnits = Arrays.asList(file);<newline46mondego><newline46mondego>        List<String> optionList = new ArrayList<String>();<newline46mondego><newline46mondego>        JavaFileManager fileManager = compiler.getStandardFileManager(diagnostics, null,null);<newline46mondego>        List<String> params = new ArrayList();<newline46mondego>        params.add(destination);<newline46mondego>        fileManager.handleOption(<doubleQuotes46>-d<doubleQuotes46>,params.iterator());<newline46mondego>        JavaCompiler.CompilationTask task = compiler.getTask(null, fileManager, diagnostics, optionList, null, compilationUnits);<newline46mondego><newline46mondego>        boolean success = task.call();<newline46mondego>        for (Diagnostic diagnostic : diagnostics.getDiagnostics()) {<newline46mondego>            System.out.println(diagnostic.getCode());<newline46mondego>            System.out.println(diagnostic.getKind());<newline46mondego>            System.out.println(diagnostic.getPosition());<newline46mondego>            System.out.println(diagnostic.getStartPosition());<newline46mondego>            System.out.println(diagnostic.getEndPosition());<newline46mondego>            System.out.println(diagnostic.getSource());<newline46mondego>            System.out.println(diagnostic.getMessage(null));<newline46mondego><newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>Success: <doubleQuotes46> + success);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class JavaSourceFromString extends SimpleJavaFileObject {<newline46mondego>    final String code;<newline46mondego><newline46mondego>    JavaSourceFromString(String name, String code) {<newline46mondego>        super(URI.create(<doubleQuotes46>string:///<doubleQuotes46> + name.replace('.', '/') + Kind.SOURCE.extension),Kind.SOURCE);<newline46mondego>        this.code = code;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public CharSequence getCharContent(boolean ignoreEncodingErrors) {<newline46mondego>        return code;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7610splitHere46","17697361splitHere46","package ma;<newline46mondego><newline46mondego>import java.io.*;<newline46mondego>import com.itextpdf.text.DocumentException;<newline46mondego>import com.itextpdf.text.pdf.*;<newline46mondego><newline46mondego>public class editPdf {<newline46mondego><newline46mondego>public static void main(String[] args) throws IOException,<newline46mondego>        DocumentException {<newline46mondego><newline46mondego>    PdfReader reader = new PdfReader(<doubleQuotes46>/Users/Monssef/Desktop/mypdf.pdf<doubleQuotes46>);<newline46mondego>    PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(<newline46mondego>            <doubleQuotes46>/Users/Leonidas/Desktop/mypdfmodified.pdf<doubleQuotes46>));<newline46mondego>    BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252,<newline46mondego>            BaseFont.NOT_EMBEDDED);<newline46mondego><newline46mondego>        PdfContentByte over = stamper.getOverContent(1);<newline46mondego><newline46mondego>        over.beginText();<newline46mondego>        over.setFontAndSize(bf, 10);<newline46mondego>        over.setTextMatrix(107, 107);<newline46mondego>        over.showText(<doubleQuotes46>page updated<doubleQuotes46>);<newline46mondego>        over.endText();<newline46mondego><newline46mondego>    stamper.close();<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"7611splitHere46","17697445splitHere46","hashCode()"
"7612splitHere46","17697445splitHere46","hashCode()"
"7613splitHere46","17697487splitHere46","abstract"
"7614splitHere46","17697520splitHere46","String s;<newline46mondego>    DateFormat formatter;        <newline46mondego><newline46mondego>    formatter = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>);<newline46mondego>    Date date1 = formatter.parse(<doubleQuotes46>2013-07-17<doubleQuotes46>);<newline46mondego>    formatter = new SimpleDateFormat(<doubleQuotes46>yyMMdd<doubleQuotes46>);<newline46mondego>    s = formatter.format(date1);<newline46mondego>    System.out.println(s);<newline46mondego>"
"7615splitHere46","17697532splitHere46","@SessionScope"
"7616splitHere46","17697532splitHere46","@RequestScoped"
"7617splitHere46","17697573splitHere46","hibernate.connection.foreign_keys=true<newline46mondego>"
"7618splitHere46","17697573splitHere46","HH000046: Connection properties: {user=, password=****, autocommit=true, foreign_keys=true, release_mode=auto}<newline46mondego>org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl<newline46mondego>"
"7619splitHere46","17697718splitHere46","BufferedImage"
"7620splitHere46","17697718splitHere46","paintComponent"
"7621splitHere46","17697718splitHere46","Swing Timer"
"7622splitHere46","17697890splitHere46","Arrays#copyOf"
"7623splitHere46","17697890splitHere46","Arrays#copyOf"
"7624splitHere46","17697890splitHere46","System.copy"
"7625splitHere46","17697950splitHere46","JScrollPane scrollPanel = new JScrollPane(innerPanel);<newline46mondego>panelMain.add(scrollPanel, BorderLayout.CENTER);<newline46mondego>"
"7626splitHere46","17697950splitHere46","public class TestCode2_Scrollbar {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        JFrame window = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        window.setSize(400, 200);<newline46mondego>        window.setMinimumSize(new Dimension(350, 150));<newline46mondego><newline46mondego>        JPanel panelMain = new JPanel(new BorderLayout());<newline46mondego>        window.add(panelMain);<newline46mondego><newline46mondego>        //Comment the next 2 lines when using without scroll bar<newline46mondego><newline46mondego>        GridBagLayout innerLayout = new GridBagLayout();<newline46mondego>        GridBagConstraints innerConstraints = new GridBagConstraints();<newline46mondego>        JPanel innerPanel = new JPanel(innerLayout);<newline46mondego>        innerPanel.setBackground(new Color(0, 220, 250));<newline46mondego><newline46mondego>        //Comment one of the 2 following lines:<newline46mondego>        //panelMain.add(innerPanel, BorderLayout.CENTER);<newline46mondego><newline46mondego>        innerConstraints.weightx = 0.0;<newline46mondego>        innerConstraints.weighty = 0.0;<newline46mondego>        innerConstraints.gridy = 0;<newline46mondego><newline46mondego>        innerConstraints.gridx = 0;<newline46mondego>        JLabel lblTitle = new JLabel(<doubleQuotes46>Title / <doubleQuotes46>);<newline46mondego>        innerLayout.setConstraints(lblTitle, innerConstraints);<newline46mondego>        innerPanel.add(lblTitle);<newline46mondego><newline46mondego>        innerConstraints.gridx = 1;<newline46mondego>        JLabel lblRating = new JLabel(<doubleQuotes46>Rating / <doubleQuotes46>);<newline46mondego>        innerLayout.setConstraints(lblRating, innerConstraints);<newline46mondego>        innerPanel.add(lblRating);<newline46mondego><newline46mondego>        innerConstraints.gridx = 2;<newline46mondego>        JLabel lblCategoryCode = new JLabel(<doubleQuotes46>Category code / <doubleQuotes46>);<newline46mondego>        innerLayout.setConstraints(lblCategoryCode, innerConstraints);<newline46mondego>        innerPanel.add(lblCategoryCode);<newline46mondego><newline46mondego>        innerConstraints.gridx = 3;<newline46mondego>        innerConstraints.weightx = 1.0;<newline46mondego>        innerConstraints.fill = GridBagConstraints.HORIZONTAL;<newline46mondego>        JLabel lblDescription = new JLabel(<doubleQuotes46>Description<doubleQuotes46>);<newline46mondego>        innerLayout.setConstraints(lblDescription, innerConstraints);<newline46mondego>        innerPanel.add(lblDescription);<newline46mondego><newline46mondego>        int max = 4;<newline46mondego><newline46mondego>        for(int i = 0; i < max; i++) {<newline46mondego><newline46mondego>            innerConstraints.weightx = 0.0;<newline46mondego>            innerConstraints.fill = GridBagConstraints.NONE;<newline46mondego>            innerConstraints.anchor = GridBagConstraints.NORTHWEST;<newline46mondego>            innerConstraints.gridy = i + 1;<newline46mondego><newline46mondego>            innerConstraints.gridx = 0;<newline46mondego>            lblTitle = new JLabel(<doubleQuotes46><doubleQuotes46> + i);<newline46mondego>            innerLayout.setConstraints(lblTitle, innerConstraints);<newline46mondego>            innerPanel.add(lblTitle);<newline46mondego><newline46mondego>            innerConstraints.gridx = 1;<newline46mondego>            lblRating = new JLabel(<doubleQuotes46><doubleQuotes46> + i);<newline46mondego>            innerLayout.setConstraints(lblRating, innerConstraints);<newline46mondego>            innerPanel.add(lblRating);<newline46mondego><newline46mondego>            innerConstraints.gridx = 2;<newline46mondego>            lblCategoryCode = new JLabel(<doubleQuotes46><doubleQuotes46> + i);<newline46mondego>            innerLayout.setConstraints(lblCategoryCode, innerConstraints);<newline46mondego>            innerPanel.add(lblCategoryCode);<newline46mondego><newline46mondego>            innerConstraints.gridx = 3;<newline46mondego>            innerConstraints.weightx = 1.0;<newline46mondego>            innerConstraints.fill = GridBagConstraints.HORIZONTAL;<newline46mondego>            lblDescription = new JLabel(<doubleQuotes46><doubleQuotes46> + i);<newline46mondego>            innerLayout.setConstraints(lblDescription, innerConstraints);<newline46mondego>            innerPanel.add(lblDescription);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        innerConstraints.gridy = max + 1;<newline46mondego><newline46mondego>        JPanel innerVoidPanel = new JPanel();<newline46mondego>        innerVoidPanel.setBackground(new Color(0, 250, 250));<newline46mondego>        innerConstraints.weighty = 1.0;<newline46mondego>        innerConstraints.fill = GridBagConstraints.VERTICAL;<newline46mondego>        innerLayout.setConstraints(innerVoidPanel, innerConstraints);<newline46mondego>        innerPanel.add(innerVoidPanel);<newline46mondego><newline46mondego>        //...<newline46mondego><newline46mondego>        JScrollPane scrollPanel = new JScrollPane(innerPanel);<newline46mondego>        panelMain.add(scrollPanel, BorderLayout.CENTER);<newline46mondego><newline46mondego>        window.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7627splitHere46","17697973splitHere46","public static ? getPainter(String color){<newline46mondego>   for(ColorsUsage cp:ColorsUsage.values()){<newline46mondego>     //write code to create the instance of painter class, ex:BlueColorPainter <newline46mondego>   }<newline46mondego> }<newline46mondego>"
"7628splitHere46","17697973splitHere46","instanceof"
"7629splitHere46","17697975splitHere46","<context-param><newline46mondego>    <param-name>contextConfigLocation</param-name><newline46mondego>    <param-value>classpath*:my-war-beans.xml</param-value><newline46mondego></context-param><newline46mondego>"
"7630splitHere46","17697975splitHere46","<beans> <newline46mondego><newline46mondego>    <!-- Include beans from JAR --><newline46mondego>    <import resource=<doubleQuotes46>classpath*:my-jar-beans.xml<doubleQuotes46>/><newline46mondego><newline46mondego>    <!-- List beans from WAR --><newline46mondego>    <bean id=<doubleQuotes46>myBean<doubleQuotes46> class=<doubleQuotes46>myclass<doubleQuotes46> /><newline46mondego><newline46mondego></beans><newline46mondego>"
"7631splitHere46","17698068splitHere46","public static void listFiles() {<newline46mondego><newline46mondego>        File f = new File(<doubleQuotes46>C:/<doubleQuotes46>); // use here your file directory path<newline46mondego>        String[] allFiles = f.list(new MyFilter ());<newline46mondego>        for (String filez:allFiles ) {<newline46mondego>            System.out.println(filez);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>        class MyFilter implements FilenameFilter {<newline46mondego>        @Override<newline46mondego>        //return true if find a file named <doubleQuotes46>a<doubleQuotes46>,change this name according to your file name<newline46mondego>        public boolean accept(final File dir, final String name) {<newline46mondego>            return ((name.startsWith(<doubleQuotes46>a<doubleQuotes46>) && name.endsWith(<doubleQuotes46>.jpg<doubleQuotes46>))|(name.startsWith(<doubleQuotes46>a<doubleQuotes46>) && name.endsWith(<doubleQuotes46>.txt<doubleQuotes46>))|(name.startsWith(<doubleQuotes46>a<doubleQuotes46>) && name.endsWith(<doubleQuotes46>.mp3<doubleQuotes46>)|(name.startsWith(<doubleQuotes46>a<doubleQuotes46>) && name.endsWith(<doubleQuotes46>.mp4<doubleQuotes46>))));<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"7632splitHere46","17698068splitHere46","boolean accept()"
"7633splitHere46","17698068splitHere46","public static void filelist()<newline46mondego>    {<newline46mondego>        File folder = new File(<doubleQuotes46>C:/<doubleQuotes46>);<newline46mondego>        File[] listOfFiles = folder.listFiles();<newline46mondego><newline46mondego>    for (File file : listOfFiles)<newline46mondego>    {<newline46mondego>        if (file.isFile())<newline46mondego>        {<newline46mondego>            String[] filename = file.getName().split(<doubleQuotes46>\\.(?=[^\\.]+$)<doubleQuotes46>); //split filename from it's extension<newline46mondego>            if(filename[0].equalsIgnoreCase(<doubleQuotes46>a<doubleQuotes46>)) //matching defined filename<newline46mondego>                System.out.println(<doubleQuotes46>File exist: <doubleQuotes46>+filename[0]+<doubleQuotes46>.<doubleQuotes46>+filename[1]); // match occures.Apply any condition what you need<newline46mondego>        }<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"7634splitHere46","17698068splitHere46","File exist: a.jpg   //These files are in my C drive<newline46mondego>File exist: a.png<newline46mondego>File exist: a.rtf<newline46mondego>File exist: a.txt<newline46mondego>File exist: a.mp3<newline46mondego>File exist: a.mp4<newline46mondego>"
"7635splitHere46","17698079splitHere46","Calendar"
"7636splitHere46","17698079splitHere46","try {<newline46mondego>    String string1 = <doubleQuotes46>20:11:13<doubleQuotes46>;<newline46mondego>    Date time1 = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>).parse(string1);<newline46mondego>    Calendar calendar1 = Calendar.getInstance();<newline46mondego>    calendar1.setTime(time1);<newline46mondego><newline46mondego>    String string2 = <doubleQuotes46>14:49:00<doubleQuotes46>;<newline46mondego>    Date time2 = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>).parse(string2);<newline46mondego>    Calendar calendar2 = Calendar.getInstance();<newline46mondego>    calendar2.setTime(time2);<newline46mondego>    calendar2.add(Calendar.DATE, 1);<newline46mondego><newline46mondego>    String someRandomTime = <doubleQuotes46>01:00:00<doubleQuotes46>;<newline46mondego>    Date d = new SimpleDateFormat(<doubleQuotes46>HH:mm:ss<doubleQuotes46>).parse(someRandomTime);<newline46mondego>    Calendar calendar3 = Calendar.getInstance();<newline46mondego>    calendar3.setTime(d);<newline46mondego>    calendar3.add(Calendar.DATE, 1);<newline46mondego><newline46mondego>    Date x = calendar3.getTime();<newline46mondego>    if (x.after(calendar1.getTime()) && x.before(calendar2.getTime())) {<newline46mondego>        //checkes whether the current time is between 14:49:00 and 20:11:13.<newline46mondego>        System.out.println(true);<newline46mondego>    }<newline46mondego>} catch (ParseException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"7637splitHere46","17698199splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Human<Blond, Bob> h = new Human<Blond, Bob>();<newline46mondego>        Blond blond = h.getPerson().getHair(); <newline46mondego>        blond = h.getDirectHair();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Human<H extends Hair, T extends Person<H>>{<newline46mondego>    private T person = null;<newline46mondego>    public T getPerson() {<newline46mondego>        return person;<newline46mondego>    }<newline46mondego>    public H getDirectHair(){<newline46mondego>        return person.getHair();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7638splitHere46","17698202splitHere46","BigDecimal"
"7639splitHere46","17698204splitHere46","Date"
"7640splitHere46","17698204splitHere46","Date"
"7641splitHere46","17698204splitHere46","Calendar"
"7642splitHere46","17698204splitHere46","Calendar c = Calendar.getInstance();<newline46mondego>c.setTime(date);<newline46mondego>"
"7643splitHere46","17698204splitHere46","Date"
"7644splitHere46","17698204splitHere46","Calendar"
"7645splitHere46","17698204splitHere46","date = c.getTime();<newline46mondego>"
"7646splitHere46","17698204splitHere46","String"
"7647splitHere46","17698204splitHere46","Date"
"7648splitHere46","17698204splitHere46","String"
"7649splitHere46","17698236splitHere46","public static JSONArray sortJsonArray(JSONArray array) {<newline46mondego>    List<JSONObject> jsons = new ArrayList<JSONObject>();<newline46mondego>    for (int i = 0; i < array.length(); i++) {<newline46mondego>        jsons.add(array.getJSONObject(i));<newline46mondego>    }<newline46mondego>    Collections.sort(jsons, new Comparator<JSONObject>() {<newline46mondego>        @Override<newline46mondego>        public int compare(JSONObject lhs, JSONObject rhs) {<newline46mondego>            String lid = lhs.getString(<doubleQuotes46>comment_id<doubleQuotes46>);<newline46mondego>            String rid = rhs.getString(<doubleQuotes46>comment_id<doubleQuotes46>);<newline46mondego>            // Here you could parse string id to integer and then compare.<newline46mondego>            return lid.compareTo(rid);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    return new JSONArray(jsons);<newline46mondego>}<newline46mondego>"
"7650splitHere46","17698380splitHere46","shipping_profiles"
"7651splitHere46","17698380splitHere46","@JsonAnySetter"
"7652splitHere46","17698380splitHere46","{<newline46mondego>   <doubleQuotes46>shipping_profiles<doubleQuotes46>:{<newline46mondego>      <doubleQuotes46>563<doubleQuotes46>:{<newline46mondego>         <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>name563<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>value<doubleQuotes46>:<doubleQuotes46>value563<doubleQuotes46><newline46mondego>      },<newline46mondego>      <doubleQuotes46>564<doubleQuotes46>:{<newline46mondego>         <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>name564<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>value<doubleQuotes46>:<doubleQuotes46>value564<doubleQuotes46><newline46mondego>      },<newline46mondego>      <doubleQuotes46>565<doubleQuotes46>:{<newline46mondego>         <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>name565<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>value<doubleQuotes46>:<doubleQuotes46>value565<doubleQuotes46><newline46mondego>      },<newline46mondego>      <doubleQuotes46>566<doubleQuotes46>:{<newline46mondego>         <doubleQuotes46>name<doubleQuotes46>:<doubleQuotes46>name566<doubleQuotes46>,<newline46mondego>         <doubleQuotes46>value<doubleQuotes46>:<doubleQuotes46>value566<doubleQuotes46><newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7653splitHere46","17698380splitHere46","import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import com.fasterxml.jackson.annotation.JsonAnySetter;<newline46mondego>import com.fasterxml.jackson.annotation.JsonProperty;<newline46mondego>import com.fasterxml.jackson.databind.ObjectMapper;<newline46mondego><newline46mondego>public class JacksonProgram {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        ObjectMapper mapper = new ObjectMapper();<newline46mondego><newline46mondego>        File source = new File(<doubleQuotes46>X:/test.json<doubleQuotes46>);<newline46mondego>        Entity entity = mapper.readValue(source, Entity.class);<newline46mondego>        ShippingProfiles shippingProfiles = entity.getShippingProfiles();<newline46mondego>        List<Map<String, String>> profileMaps = shippingProfiles.getProfiles();<newline46mondego><newline46mondego>        List<Profile> profiles = new ArrayList<Profile>(profileMaps.size());<newline46mondego>        for (Map<String, String> item : profileMaps) {<newline46mondego>            profiles.add(mapper.convertValue(item, Profile.class));<newline46mondego>        }<newline46mondego>        System.out.println(profiles);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Entity {<newline46mondego><newline46mondego>    @JsonProperty(<doubleQuotes46>shipping_profiles<doubleQuotes46>)<newline46mondego>    private ShippingProfiles shippingProfiles;<newline46mondego><newline46mondego>    public ShippingProfiles getShippingProfiles() {<newline46mondego>        return shippingProfiles;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setShippingProfiles(ShippingProfiles shippingProfiles) {<newline46mondego>        this.shippingProfiles = shippingProfiles;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ShippingProfiles {<newline46mondego><newline46mondego>    private List<Map<String, String>> profiles = new ArrayList<Map<String, String>>();<newline46mondego><newline46mondego>    @JsonAnySetter<newline46mondego>    public void setDynamicProperty(String name, Map<String, String> map) {<newline46mondego>        profiles.add(map);<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Map<String, String>> getProfiles() {<newline46mondego>        return profiles;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setProfiles(List<Map<String, String>> profiles) {<newline46mondego>        this.profiles = profiles;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Profile {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private String value;<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setValue(String value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>Profile [name=<doubleQuotes46> + name + <doubleQuotes46>, value=<doubleQuotes46> + value + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7654splitHere46","17698380splitHere46","[Profile [name=name563, value=value563], Profile [name=name564, value=value564], Profile [name=name565, value=value565], Profile [name=name566, value=value566]]<newline46mondego>"
"7655splitHere46","17698447splitHere46","@MapsId"
"7656splitHere46","17698447splitHere46","@Entity<newline46mondego>public class Body {<newline46mondego>    @Id<newline46mondego>    public Long getId() { return id; }<newline46mondego><newline46mondego>    @OneToOne(cascade = CascadeType.ALL)<newline46mondego>    @MapsId<newline46mondego>    public Heart getHeart() {<newline46mondego>        return heart;<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}   <newline46mondego><newline46mondego>@Entity<newline46mondego>public class Heart {<newline46mondego>    @Id<newline46mondego>    public Long getId() { ...}<newline46mondego>}          <newline46mondego>"
"7657splitHere46","17698447splitHere46","select b.foo, h.bar from Body b left join b.heart h where ...<newline46mondego>"
"7658splitHere46","17698505splitHere46","getClass().getResource(<doubleQuotes46>/resource-file<doubleQuotes46>)<newline46mondego>"
"7659splitHere46","17698652splitHere46","solve()"
"7660splitHere46","17698652splitHere46","private static void solve(Triangle triangle) {<newline46mondego><newline46mondego>    System.out.println(triangle);<newline46mondego><newline46mondego>    ArrayList<Integer> result = new ArrayList<Integer>();<newline46mondego>    int total = 0;<newline46mondego><newline46mondego>    for(Row row  : triangle){<newline46mondego>        Collections.sort(row);<newline46mondego>        total += row.get(row.size()-1);<newline46mondego>        result.add(row.get(row.size()-1));<newline46mondego>    }<newline46mondego><newline46mondego>    for(Integer intr : result)<newline46mondego>        System.out.println(<doubleQuotes46>Largest elements of the rows: <doubleQuotes46> + intr);<newline46mondego>    System.out.println(<doubleQuotes46>Total: <doubleQuotes46> + total);<newline46mondego>}<newline46mondego>"
"7661splitHere46","17698757splitHere46","EditableValueHolder"
"7662splitHere46","17698757splitHere46","UIInput"
"7663splitHere46","17698757splitHere46","<f:viewParam>"
"7664splitHere46","17698757splitHere46","rendered=<doubleQuotes46>true<doubleQuotes46>"
"7665splitHere46","17698757splitHere46","disabled=<doubleQuotes46>false<doubleQuotes46>"
"7666splitHere46","17698757splitHere46","readonly=<doubleQuotes46>false<doubleQuotes46>"
"7667splitHere46","17698757splitHere46","@ManagedProperty(<doubleQuotes46>#{param.xxx}<doubleQuotes46>)"
"7668splitHere46","17698757splitHere46","ExternalContext#getRequestParameterMap()"
"7669splitHere46","17698757splitHere46","UISelectOne"
"7670splitHere46","17698757splitHere46","UISelectMany"
"7671splitHere46","17698757splitHere46","includeViewParams=<doubleQuotes46>true<doubleQuotes46>"
"7672splitHere46","17698757splitHere46","#{bean.setArbitraryProperty('foo')}"
"7673splitHere46","17698838splitHere46","<w:r><newline46mondego>                    <w:rPr><newline46mondego>                        <w:sz w:val=<doubleQuotes46>36<doubleQuotes46>/><newline46mondego>                    </w:rPr><newline46mondego>                    <w:t>this is 18 points</w:t><newline46mondego>                </w:r><newline46mondego>"
"7674splitHere46","17698838splitHere46","org.docx4j.wml.R  yourRun;<newline46mondego>    yourRun.getRPr().setSz(an HpsMeasure);<newline46mondego>"
"7675splitHere46","17698913splitHere46","system32"
"7676splitHere46","17698913splitHere46","SysWOW64"
"7677splitHere46","17699098splitHere46","Intent i = new Intent(Intent.ACTION_VIEW); <newline46mondego>i.setDataAndType(Uri.fromFile(new File(path)), <doubleQuotes46>image/jpg<doubleQuotes46>);<newline46mondego><newline46mondego>PackageManager packageManager = getPackageManager();<newline46mondego>List<ResolveInfo> activities = packageManager.queryIntentActivities(i, 0);<newline46mondego>boolean isIntentSafe = activities.size() > 0;<newline46mondego><newline46mondego>// Start an activity if it's safe<newline46mondego>if (isIntentSafe) {<newline46mondego>    startActivity(i);<newline46mondego>}<newline46mondego>"
"7678splitHere46","17699107splitHere46","setImageBitmap(Bitmap)"
"7679splitHere46","17699107splitHere46","setBackgroundDrawable()"
"7680splitHere46","17699107splitHere46","setBackgroundDrawable()"
"7681splitHere46","17699146splitHere46","int numberOfArg = 0;<newline46mondego>numberOfArgs = ? //assign the number of arguments here<newline46mondego><newline46mondego>StringBuilder mySqlQuerySb = new StringBuilder();<newline46mondego>mySqlQuerySb.append(<doubleQuotes46>Select <doubleQuotes46>);  <newline46mondego>for (int num = 0; num < numberOfArgs; num++)<newline46mondego>{ <newline46mondego>    mySqlQuerySb.append(<doubleQuotes46>arg<doubleQuotes46>+(num +1));<newline46mondego>    if ((num +1) != numberOfArgs) {mySqlQuerySb.append(<doubleQuotes46>,<doubleQuotes46>);}<newline46mondego>}<newline46mondego>mySqlQuerySb.append(<doubleQuotes46> from table<doubleQuotes46>);  <newline46mondego>String mySqlQueryStr = mySqlQuerySb.toString();<newline46mondego>"
"7682splitHere46","17699182splitHere46","fopFactory.setStrictValidation(false);<newline46mondego>"
"7683splitHere46","17699200splitHere46","{<newline46mondego><doubleQuotes46>2012<doubleQuotes46>:{<newline46mondego>    <doubleQuotes46>federal<doubleQuotes46>:[[10822,0.15],[42707,0.22],[85414,0.26],[132406,0.29]],<newline46mondego>    <doubleQuotes46>provincial<doubleQuotes46>:{<newline46mondego>[<doubleQuotes46>code<doubleQuotes46>:<doubleQuotes46>AB<doubleQuotes46>, data:[[17282,0.1]]],<newline46mondego>[<doubleQuotes46>code<doubleQuotes46>:<doubleQuotes46>BC<doubleQuotes46>, data:[[11354,0.0506],[37013,0.077],[74028,0.105],[84993,0.1229],[103205,0.147]]],<newline46mondego>[<doubleQuotes46>code<doubleQuotes46>:<doubleQuotes46>MB<doubleQuotes46>, data:[[8634,0.108],[31000,0.1275],[67000,0.174]]]<newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>"
"7684splitHere46","17699202splitHere46","JOIN"
"7685splitHere46","17699202splitHere46","SELECT * FROM LINK l WHERE l.network.project.id = :projectId<newline46mondego>"
"7686splitHere46","17699245splitHere46","sun.misc.Cleaner.create(Object ob, Runnable cleanup);<newline46mondego>"
"7687splitHere46","17699245splitHere46","// Fast path for cleaners<newline46mondego>if (r instanceof Cleaner) {<newline46mondego>    ((Cleaner)r).clean();<newline46mondego>    continue;<newline46mondego>}<newline46mondego>"
"7688splitHere46","17699315splitHere46","request"
"7689splitHere46","17699315splitHere46","forward"
"7690splitHere46","17699315splitHere46","RequestDispatcher"
"7691splitHere46","17699315splitHere46","session"
"7692splitHere46","17699315splitHere46","ServletContext"
"7693splitHere46","17699442splitHere46","miles"
"7694splitHere46","17699442splitHere46","mil"
"7695splitHere46","17699442splitHere46","// \d+ matches a number. \s* matches any number of spaces.<newline46mondego>String milePattern = <doubleQuotes46>(\\d+)\\s*((miles)|(mile)|(mil))<doubleQuotes46>;<newline46mondego>String kmPattern = <doubleQuotes46>(\\d+)\\s*((kilometers)|(km)|(kilometres))<doubleQuotes46>;<newline46mondego><newline46mondego>// Compile the patterns (you should not do that at each method call, in your real code)<newline46mondego>Pattern mileP = Pattern.compile(milePattern);<newline46mondego>Pattern kmP = Pattern.compile(kmPattern);<newline46mondego><newline46mondego>// You can match one or multiple lines all the same.<newline46mondego>String input = <doubleQuotes46>I ran 1001km or 601 mile \n that is the same as 602 mil or 603miles or 1002 kilometers.<doubleQuotes46>;<newline46mondego><newline46mondego>// Create matcher instance on your input.<newline46mondego>Matcher mileM = mileP.matcher(input);<newline46mondego>// Iterate over all mile-matches (find will 'advance' each time you call it)<newline46mondego>while (mileM.find()) {<newline46mondego>    // Retrieve the value and the unit<newline46mondego>    String amount = mileM.group(1);<newline46mondego>    String unit = mileM.group(2);<newline46mondego><newline46mondego>    // You can also access some data about the match<newline46mondego>    int idx = mileM.start();<newline46mondego><newline46mondego>    // And do whatever you need with it<newline46mondego>    System.out.println(<doubleQuotes46>Found a mile value: <doubleQuotes46> + amount + <doubleQuotes46> with unit <doubleQuotes46> + unit + <doubleQuotes46> starting at index: <doubleQuotes46> + idx);<newline46mondego>}<newline46mondego>"
"7696splitHere46","17699442splitHere46","Found a mile value: 601 with unit mile starting at index: 16<newline46mondego>Found a mile value: 602 with unit mil starting at index: 47<newline46mondego>Found a mile value: 603 with unit miles starting at index: 58<newline46mondego>Found a km value: 1001 with unit km starting at index: 6<newline46mondego>Found a km value: 1002 with unit kilometers starting at index: 70<newline46mondego>"
"7697splitHere46","17699538splitHere46","`public void addActionListnenersToComponents();`<newline46mondego>"
"7698splitHere46","17699538splitHere46","JButton newCustomerButton = new JButton(<doubleQuotes46>Add Customer<doubleQuotes46>);<newline46mondego>    newCustomerButton.addActionListener(new ActionListener() {<newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            newCustomer newCustomerFrame = new newCustomer();<newline46mondego>            newCustomerFrame.setVisible(true);<newline46mondego><newline46mondego>        }<newline46mondego>    }); <newline46mondego>"
"7699splitHere46","17699579splitHere46","<s:textfield name=<doubleQuotes46>myForm.values['%{dynamicNames}']<doubleQuotes46>/> <newline46mondego>"
"7700splitHere46","17699579splitHere46","dynamicNames"
"7701splitHere46","17699579splitHere46","<s:iterator value=<doubleQuotes46>values<doubleQuotes46>><newline46mondego>  <s:textfield name=<doubleQuotes46>myForm.values['%{key}']<doubleQuotes46>/><newline46mondego></s:iterator><newline46mondego>"
"7702splitHere46","17699579splitHere46","myForm2"
"7703splitHere46","17699579splitHere46","value=<doubleQuotes46>%{value}<doubleQuotes46>"
"7704splitHere46","17700078splitHere46","P(w,d) = \sum_c P(c) P(d|c) P(w|c) = P(d) \sum_c P(c|d) P(w|c) <newline46mondego>"
"7705splitHere46","17700083splitHere46","BrowserFieldConfig config = new BrowserFieldConfig();<newline46mondego>    config.setProperty(BrowserFieldConfig.JAVASCRIPT_ENABLED, Boolean.TRUE);<newline46mondego>    BrowserField browser  = new BrowserField(config);<newline46mondego>"
"7706splitHere46","17700341splitHere46","List"
"7707splitHere46","17700341splitHere46","get(index)"
"7708splitHere46","17700341splitHere46","x"
"7709splitHere46","17700341splitHere46","List<x> list"
"7710splitHere46","17700341splitHere46","public class ListHolder <x><newline46mondego>{ <newline46mondego>    List<x> list ;     <newline46mondego>    public  void print (List<x> list2, int count) <newline46mondego>    {      <newline46mondego>        list= list2;<newline46mondego>        for (int i = 0; i < count;  i++) <newline46mondego>        {<newline46mondego>            System.out.print(list2.get(i)+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } // end print<newline46mondego>} //end class<newline46mondego>"
"7711splitHere46","17700393splitHere46","public class Members {<newline46mondego><newline46mondego>  static int memberCount;<newline46mondego><newline46mondego>  public Members() {<newline46mondego>     memberCount++;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7712splitHere46","17700393splitHere46","memberCount"
"7713splitHere46","17700393splitHere46","Members"
"7714splitHere46","17700393splitHere46","memberCount"
"7715splitHere46","17700393splitHere46","Members.memberCount"
"7716splitHere46","17700471splitHere46","onBackPressed()"
"7717splitHere46","17700471splitHere46","@Override<newline46mondego>public void onBackPressed() {<newline46mondego>    Intent startMain = new Intent(Intent.ACTION_MAIN);<newline46mondego>    startMain.addCategory(Intent.CATEGORY_HOME);<newline46mondego>    startMain.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);<newline46mondego>    startActivity(startMain);<newline46mondego>}<newline46mondego>"
"7718splitHere46","17700471splitHere46","onBackPressed()"
"7719splitHere46","17700471splitHere46","@Override<newline46mondego>public void onBackPressed() {<newline46mondego>    this.getParent().onBackPressed();   <newline46mondego>}<newline46mondego>"
"7720splitHere46","17700486splitHere46","System.out.println(<doubleQuotes46>%%<doubleQuotes46>);<newline46mondego>"
"7721splitHere46","17700486splitHere46","%<newline46mondego>"
"7722splitHere46","17700647splitHere46","filterRegex()"
"7723splitHere46","17700647splitHere46","filter()"
"7724splitHere46","17700647splitHere46","/rest/.*"
"7725splitHere46","17700647splitHere46","/[0-9]/foo"
"7726splitHere46","17700647splitHere46","new ServletModule() {<newline46mondego>  @Override<newline46mondego>  protected void configureServlets() {<newline46mondego>    filter(<doubleQuotes46>^/rest/.*(?<!/\\d/foo)$<doubleQuotes46>).through(ObjectifyFilter.class);<newline46mondego>    filter(<doubleQuotes46>^/rest/.*(?<!/\\d/foo)$<doubleQuotes46>).through(SomeOtherFilter.class);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7727splitHere46","17700770splitHere46","<context-param><newline46mondego>    <param-name>contextConfigLocation</param-name><newline46mondego>    <param-value>/WEB-INF/applicationContext.xml</param-value><newline46mondego></context-param><newline46mondego>"
"7728splitHere46","17700770splitHere46","<context-param><newline46mondego>    <param-name>contextConfigLocation</param-name><newline46mondego>    <param-value>/WEB-INF/applicationContext.xml, /WEB-INF/applicationContext-security.xml</param-value><newline46mondego></context-param><newline46mondego>"
"7729splitHere46","17700813splitHere46","Dispatcher"
"7730splitHere46","17700813splitHere46","bean"
"7731splitHere46","17700813splitHere46","init"
"7732splitHere46","17700813splitHere46","ClasspathConfigurationProvider"
"7733splitHere46","17700813splitHere46","struts.xml"
"7734splitHere46","17700813splitHere46","<bean type=<doubleQuotes46>com.opensymphony.xwork2.config.PackageProvider<doubleQuotes46> name=<doubleQuotes46>myBean<doubleQuotes46> class=<doubleQuotes46>jspbean.struts.MyBean<doubleQuotes46> /><newline46mondego>"
"7735splitHere46","17700813splitHere46","MyBean.java"
"7736splitHere46","17700813splitHere46","public class MyBean implements ConfigurationProvider, DispatcherListener {<newline46mondego>  public MyBean() {<newline46mondego>    System.out.println(<doubleQuotes46>!!! MyBean !!!<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void dispatcherInitialized(Dispatcher du) {<newline46mondego>    System.out.println(<doubleQuotes46>!!! dispatcherInitialized !!!<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void dispatcherDestroyed(Dispatcher du) {<newline46mondego>    System.out.println(<doubleQuotes46>!!! dispatcherDestroyed !!!<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void destroy() {<newline46mondego>    System.out.println(<doubleQuotes46>!!! destroy !!!<doubleQuotes46>);<newline46mondego>    Dispatcher.removeDispatcherListener(this);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void init(Configuration configuration) throws ConfigurationException {<newline46mondego>    System.out.println(<doubleQuotes46>!!! init !!!<doubleQuotes46>);<newline46mondego>    Dispatcher.addDispatcherListener(this);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public boolean needsReload() {<newline46mondego>    return false;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void loadPackages() throws ConfigurationException {<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void register(ContainerBuilder builder, LocatableProperties props) throws ConfigurationException {<newline46mondego><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7737splitHere46","17700813splitHere46","15:27:50  INFO (org.apache.struts2.spring.StrutsSpringObjectFactory:42) - ... initialized Struts-Spring integration successfully<newline46mondego>!!! MyBean !!!<newline46mondego>!!! init !!!<newline46mondego>jul 18, 2013 3:27:51 PM org.apache.catalina.startup.HostConfig deployDirectory<newline46mondego>!!! dispatcherInitialized !!!<newline46mondego>[2013-07-18 06:28:11,102] Artifact jspbean:war exploded: Artifact is deployed successfully<newline46mondego>INFO: A valid shutdown command was received via the shutdown port. Stopping the Server instance.<newline46mondego>INFO: Stopping service Catalina<newline46mondego>!!! dispatcherDestroyed !!!<newline46mondego>"
"7738splitHere46","17700817splitHere46","@Override<newline46mondego>protected void updateItem(Image image, boolean b) {<newline46mondego>    super.updateItem(image, b);<newline46mondego>}<newline46mondego>"
"7739splitHere46","17700817splitHere46","public void updateItem(Product item, boolean empty);<newline46mondego>"
"7740splitHere46","17700817splitHere46","@Override<newline46mondego>"
"7741splitHere46","17700817splitHere46","<Image, Product> vs. <Product, Image><newline46mondego>"
"7742splitHere46","17701113splitHere46","public class RegisterFailedException extends RuntimeException {<newline46mondego><newline46mondego>    public RegisterFailedException () {<newline46mondego>        super();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7743splitHere46","17701113splitHere46","throws new RegisterFailedException();<newline46mondego>"
"7744splitHere46","17701113splitHere46","onFailure()"
"7745splitHere46","17701113splitHere46","if (caught instanceof RegisterFailedException){<newline46mondego><newline46mondego>}<newline46mondego>"
"7746splitHere46","17701237splitHere46","workingHash"
"7747splitHere46","17701325splitHere46","main"
"7748splitHere46","17701325splitHere46","public static void main(String[] args) {<newline46mondego>     //do something<newline46mondego><newline46mondego>  } <newline46mondego><newline46mondego> final double average(double number, double number2)<newline46mondego>    {<newline46mondego>        double number3 = (number + number2)/2;<newline46mondego>           return number3;<newline46mondego>    }<newline46mondego>    final double suk(double number4, double number5)<newline46mondego>    {<newline46mondego>        double number6 = number4 + number5;<newline46mondego>        return number6;<newline46mondego>    }<newline46mondego>    final double differenck(double number7, double number8)<newline46mondego>    {<newline46mondego>        double number9 = number7 - number8;<newline46mondego>        return number9;<newline46mondego>    }<newline46mondego>    final double produck(double number10, double number11)<newline46mondego>    {<newline46mondego>        double number12 = number10*number11;<newline46mondego>        return number12;<newline46mondego>    }<newline46mondego>"
"7749splitHere46","17701325splitHere46","return"
"7750splitHere46","17701325splitHere46","main"
"7751splitHere46","17701325splitHere46","void"
"7752splitHere46","17701360splitHere46","public class A {<newline46mondego>    private List<String> list = new ArrayList<String>();<newline46mondego>    public List<String> getList() {<newline46mondego>        return list;<newline46mondego>    }<newline46mondego>    public void setList(List<String> list) {<newline46mondego>        this.list = list;<newline46mondego>    }<newline46mondego>    public static class B {<newline46mondego>        // i want to update list here without making list as static<newline46mondego>        void updList() {<newline46mondego>            A a = new A();<newline46mondego>            a.setList(someOtherList);<newline46mondego>            System.out.println(a.getList());<newline46mondego>        }<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"7753splitHere46","17701433splitHere46","JTextField"
"7754splitHere46","17701433splitHere46","JTextField jt=new JTextField(<doubleQuotes46>text<doubleQuotes46>);<newline46mondego>        jt.addActionListener(new ActionListener(){<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                System.out.println(ae.getActionCommand());<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"7755splitHere46","17701433splitHere46","char[]"
"7756splitHere46","17701433splitHere46","ActionEvent"
"7757splitHere46","17701433splitHere46","command"
"7758splitHere46","17701433splitHere46","null"
"7759splitHere46","17701433splitHere46","null"
"7760splitHere46","17701433splitHere46","JPasswordField"
"7761splitHere46","17701433splitHere46","null"
"7762splitHere46","17701433splitHere46","null"
"7763splitHere46","17701433splitHere46","JPasswordField"
"7764splitHere46","17701433splitHere46","JPasswordField"
"7765splitHere46","17701433splitHere46","JPasswordField jt=new JPasswordField(<doubleQuotes46>text<doubleQuotes46>);<newline46mondego>        jt.setActionCommand(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        jt.addActionListener(new ActionListener(){<newline46mondego>            public void actionPerformed(ActionEvent ae)<newline46mondego>            {<newline46mondego>                System.out.println(ae.getActionCommand());<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"7766splitHere46","17701506splitHere46","public static String toJson(int i, List<User> users) {<newline46mondego>    StringBuilder sb = new StringBuilder(<doubleQuotes46>{\<doubleQuotes46><doubleQuotes46>).append(i).append(<doubleQuotes46>\<doubleQuotes46> : { \<doubleQuotes46>ids\<doubleQuotes46> : [<doubleQuotes46>);<newline46mondego>    for (User user : users)<newline46mondego>        sb.append(user.getId()).append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    sb.setCharAt(sb.length() - 1, ']');<newline46mondego>    sb.append(<doubleQuotes46>, \<doubleQuotes46>names\<doubleQuotes46> : [\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    for (User user : users)<newline46mondego>        sb.append(user.getName()).append(<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    return sb.replace(sb.length() - 2, sb.length(),<doubleQuotes46>] } ,<doubleQuotes46>).toString();<newline46mondego>}<newline46mondego>"
"7767splitHere46","17701506splitHere46","static class User {<newline46mondego>    private final int id;<newline46mondego>    private final String name;<newline46mondego><newline46mondego>    public User(int id, String name) {<newline46mondego>        this.id = id;<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static String toJson(int i, List<User> users) {<newline46mondego>    StringBuilder sb = new StringBuilder(<doubleQuotes46>{\<doubleQuotes46><doubleQuotes46>).append(i).append(<doubleQuotes46>\<doubleQuotes46> : { \<doubleQuotes46>ids\<doubleQuotes46> : [<doubleQuotes46>);<newline46mondego>    for (User user : users)<newline46mondego>        sb.append(user.getId()).append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    sb.setCharAt(sb.length() - 1, ']');<newline46mondego>    sb.append(<doubleQuotes46>, \<doubleQuotes46>names\<doubleQuotes46> : [\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    for (User user : users)<newline46mondego>        sb.append(user.getName()).append(<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>);<newline46mondego>    return sb.replace(sb.length() - 2, sb.length(),<doubleQuotes46>] } ,<doubleQuotes46>).toString();<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {//throws Exception {<newline46mondego>    List<User> users = new ArrayList<User>();<newline46mondego>    users.add(new User(1, <doubleQuotes46>anton<doubleQuotes46>));<newline46mondego>    users.add(new User(2, <doubleQuotes46>berta<doubleQuotes46>));<newline46mondego>    users.add(new User(3, <doubleQuotes46>charlie<doubleQuotes46>));<newline46mondego>    System.out.println(toJson(1, users));<newline46mondego> }<newline46mondego>"
"7768splitHere46","17701506splitHere46","{<doubleQuotes46>1<doubleQuotes46> : { <doubleQuotes46>ids<doubleQuotes46> : [1,2,3], <doubleQuotes46>names<doubleQuotes46> : [<doubleQuotes46>anton<doubleQuotes46>,<doubleQuotes46>berta<doubleQuotes46>,<doubleQuotes46>charlie<doubleQuotes46>] } ,<newline46mondego>"
"7769splitHere46","17701644splitHere46","str.split(<doubleQuotes46>(?<!/\\d{4}) +<doubleQuotes46>);<newline46mondego>"
"7770splitHere46","17701682splitHere46","ServletContext.getResourceAsStream()"
"7771splitHere46","17701682splitHere46","init()"
"7772splitHere46","17701682splitHere46","getServletConfig().getServletContext()"
"7773splitHere46","17701682splitHere46","@WebServlet(<doubleQuotes46>/Controler<doubleQuotes46>)<newline46mondego>public class Controler extends HttpServlet {<newline46mondego>    private Properties properties;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void init() {<newline46mondego>        properties = PropLoader.load(getServletConfig().getServletContext());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class PropLoader {<newline46mondego><newline46mondego>    private final static String FILE_PATH = <doubleQuotes46>/file.properties<doubleQuotes46>;<newline46mondego><newline46mondego>    public static Properties load(ServletContext context) {<newline46mondego>        Properties properties = new Properties();<newline46mondego>        properties.load(context.getResourceAsStream(FILE_PATH));<newline46mondego>        return properties;<newline46mondego>    }<newline46mondego>}    <newline46mondego>"
"7774splitHere46","17701682splitHere46","WEB-INF/classes"
"7775splitHere46","17701682splitHere46","getClass().getResourceAsStream(<doubleQuotes46>/file.properties<doubleQuotes46>)"
"7776splitHere46","17701682splitHere46","ServletContext"
"7777splitHere46","17701716splitHere46","String input = <doubleQuotes46>http://localhost:8080/sdpapi/request/10/notes/611/<doubleQuotes46>;<newline46mondego><newline46mondego>String output = input.split(<doubleQuotes46>notes/<doubleQuotes46>)[1].split(<doubleQuotes46>/<doubleQuotes46>)[0];<newline46mondego>"
"7778splitHere46","17701822splitHere46","CLASSPATH"
"7779splitHere46","17701822splitHere46","java -cp <path-to>\ojdbc7.jar oracle.jdbc.OracleDriver<newline46mondego>"
"7780splitHere46","17701822splitHere46","OracleDriver"
"7781splitHere46","17701822splitHere46","public static void main(String[] args)"
"7782splitHere46","17701822splitHere46","-cp"
"7783splitHere46","17701822splitHere46","Class-Path"
"7784splitHere46","17701822splitHere46","oracle.jdbc.driver.OracleDriver"
"7785splitHere46","17701822splitHere46","oracle.jdbc.OracleDriver"
"7786splitHere46","17702215splitHere46","AccountFactory"
"7787splitHere46","17702215splitHere46","AccountManager"
"7788splitHere46","17702215splitHere46","File"
"7789splitHere46","17702215splitHere46","Date"
"7790splitHere46","17702215splitHere46","Calendar"
"7791splitHere46","17702293splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><abc:abcTransaction xmlns:abc=<doubleQuotes46>http://www.abc.com/schema/abcTransaction<doubleQuotes46>><newline46mondego>    <abc:abcRequest><newline46mondego>        <abc:id>99999</abc:id><newline46mondego>        <abc:idString>abc</abc:idString><newline46mondego>    </abc:abcRequest><newline46mondego>    <abc:abcResponse><newline46mondego>        <abc:code>0</abc:code><newline46mondego>        <abc:description>blah</abc:description><newline46mondego>    </abc:abcResponse><newline46mondego></abc:abcTransaction><newline46mondego>"
"7792splitHere46","17702314splitHere46","ObjectError"
"7793splitHere46","17702314splitHere46","FieldError"
"7794splitHere46","17702314splitHere46","getField()"
"7795splitHere46","17702402splitHere46","countdownDisplay.invalidate();<newline46mondego>"
"7796splitHere46","17702442splitHere46","ps.start()"
"7797splitHere46","17702442splitHere46","ps.run()"
"7798splitHere46","17702514splitHere46","// Declared as fields, so they will be reused<newline46mondego>Vector2 position = new Vector2();<newline46mondego>Vector2 velocity = new Vector2();<newline46mondego>Vector2 movement = new Vector2();<newline46mondego><newline46mondego>Vector2 touch = new Vector2();<newline46mondego>Vector2 dir = new Vector2();<newline46mondego><newline46mondego>// On touch events, set the touch vector, then do this to get the direction vector<newline46mondego>dir.set(touch).sub(position).nor();<newline46mondego>"
"7799splitHere46","17702514splitHere46","velocity = new Vector2(dir).scl(speed);<newline46mondego>"
"7800splitHere46","17702514splitHere46","movement.set(velocity).scl(deltaTime);<newline46mondego>position.add(movement);<newline46mondego>"
"7801splitHere46","17702514splitHere46","class Game extends ApplicationAdapter {<newline46mondego><newline46mondego>    Vector2 position = new Vector2();<newline46mondego>    Vector2 velocity = new Vector2();<newline46mondego>    Vector2 movement = new Vector2();<newline46mondego>    Vector2 touch = new Vector2();<newline46mondego>    Vector2 dir = new Vector2();<newline46mondego><newline46mondego>    Vector3 temp = new Vector3();<newline46mondego><newline46mondego>    float speed = 100;<newline46mondego><newline46mondego>    OrthographicCamera camera;<newline46mondego><newline46mondego>    SpriteBatch batch;<newline46mondego>    Texture texture;<newline46mondego>    Sprite sprite;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void create () {<newline46mondego>        camera = new OrthographicCamera();<newline46mondego>        camera.setToOrtho(false);<newline46mondego><newline46mondego>        batch = new SpriteBatch();<newline46mondego><newline46mondego>        texture = new Texture(Gdx.files.internal(<doubleQuotes46>data/badlogicsmall.jpg<doubleQuotes46>));<newline46mondego><newline46mondego>        sprite = new Sprite(texture);<newline46mondego><newline46mondego>        Gdx.input.setInputProcessor(new InputAdapter() {<newline46mondego>            @Override<newline46mondego>            public boolean touchDown (int screenX, int screenY, int pointer, int button) {<newline46mondego>                camera.unproject(temp.set(screenX, screenY, 0));<newline46mondego>                touch.set(temp.x, temp.y);<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void render () {<newline46mondego>        Gdx.gl10.glClear(GL10.GL_COLOR_BUFFER_BIT);<newline46mondego>        update(Gdx.graphics.getDeltaTime());<newline46mondego>        batch.begin();<newline46mondego>        sprite.draw(batch);<newline46mondego>        batch.end();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void dispose() {<newline46mondego>        texture.dispose();<newline46mondego>        batch.dispose();            <newline46mondego>    }<newline46mondego>    public void update (float deltaTime) {<newline46mondego>        position.set(sprite.getX(), sprite.getY());<newline46mondego>        dir.set(touch).sub(position).nor();<newline46mondego>        velocity.set(dir).scl(speed);<newline46mondego>        movement.set(velocity).scl(deltaTime);<newline46mondego>        if (position.dst2(touch) > movement.len2()) {<newline46mondego>            position.add(movement); <newline46mondego>        } else {<newline46mondego>            position.set(touch);<newline46mondego>        }               <newline46mondego>        sprite.setX(position.x);<newline46mondego>        sprite.setY(position.y);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7802splitHere46","17702588splitHere46","sampleRate * (bitDepth / 8) * channelCount * 60<newline46mondego>"
"7803splitHere46","17702816splitHere46","localhost"
"7804splitHere46","17702848splitHere46","String"
"7805splitHere46","17702848splitHere46","String[]"
"7806splitHere46","17702848splitHere46","String x = null;<newline46mondego>testNull(x);<newline46mondego>"
"7807splitHere46","17702848splitHere46","String x = null;<newline46mondego>testNull(new String[] { x });<newline46mondego>"
"7808splitHere46","17702848splitHere46","string"
"7809splitHere46","17702848splitHere46","null"
"7810splitHere46","17702848splitHere46","String[]"
"7811splitHere46","17702848splitHere46","String"
"7812splitHere46","17703044splitHere46","product.getImage()"
"7813splitHere46","17703044splitHere46","javafx.scene.Image"
"7814splitHere46","17703044splitHere46","new Image(Image)"
"7815splitHere46","17703044splitHere46","imageview.setImage(product.getImage());<newline46mondego>"
"7816splitHere46","17703044splitHere46","ImageView"
"7817splitHere46","17703044splitHere46","TableCell<Product,Image> cell = new TableCell<Product,Image>(){<newline46mondego>                public void updateItem(Product item, boolean empty) {                        <newline46mondego>                if(item!=null){                            <newline46mondego>                    ImageView imageview = new ImageView();<newline46mondego>                    imageview.setFitHeight(50);<newline46mondego>                    imageview.setFitWidth(50);<newline46mondego>                    imageview.setImage(new Image(product.getImage()));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        return cell;<newline46mondego>"
"7818splitHere46","17703044splitHere46","ImageView"
"7819splitHere46","17703044splitHere46","TableCell"
"7820splitHere46","17703044splitHere46","//Set up the ImageView<newline46mondego>        final ImageView imageview = new ImageView();<newline46mondego>        imageview.setFitHeight(50);<newline46mondego>        imageview.setFitWidth(50);<newline46mondego><newline46mondego>        //Set up the Table<newline46mondego>        TableCell<Product,Image> cell = new TableCell<Product,Image>(){<newline46mondego>                public void updateItem(Product item, boolean empty) {                        <newline46mondego>                if(item!=null){<newline46mondego>                    imageview.setImage(product.getImage());  //Change suggested earlier<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        // Attach the imageview to the cell<newline46mondego>        cell.setGraphic(imageview) <newline46mondego>        return cell;<newline46mondego>"
"7821splitHere46","17703044splitHere46","bufferedImg = ImageIO.read(new ByteArrayInputStream(data));<newline46mondego> image = SwingFXUtils.toFXImage(bufferedImg, null);<newline46mondego>"
"7822splitHere46","17703044splitHere46","image = new Image(new ByteArrayInputStream(data));<newline46mondego>"
"7823splitHere46","17703099splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><rotate<newline46mondego> xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:fromDegrees=<doubleQuotes46>0<doubleQuotes46><newline46mondego>    android:toDegrees=<doubleQuotes46>-90<doubleQuotes46><newline46mondego>    android:pivotX=<doubleQuotes46>50%<doubleQuotes46><newline46mondego>    android:pivotY=<doubleQuotes46>50%<doubleQuotes46><newline46mondego>    android:duration=<doubleQuotes46>0<doubleQuotes46> android:fillAfter=<doubleQuotes46>true<doubleQuotes46>><newline46mondego></rotate><newline46mondego>"
"7824splitHere46","17703099splitHere46","@Override<newline46mondego>      public void onCreate(Bundle icicle) {<newline46mondego>      super.onCreate(icicle);<newline46mondego><newline46mondego>     setContentView(R.layout.myscreen);<newline46mondego><newline46mondego>     Animation rotateAnim = AnimationUtils.loadAnimation(this, R.anim.rotation);<newline46mondego>     LayoutAnimationController animController = new LayoutAnimationController(rotateAnim, 0);<newline46mondego>     FrameLayout layout = (FrameLayout)findViewById(R.id.MyScreen_ContentLayout);<newline46mondego>     layout.setLayoutAnimation(animController);<newline46mondego> }<newline46mondego>"
"7825splitHere46","17703115splitHere46","table.setValueAt(...);<newline46mondego>"
"7826splitHere46","17703126splitHere46","public Route(Route r) {<newline46mondego>    this(r.sites);<newline46mondego>}<newline46mondego>"
"7827splitHere46","17703126splitHere46","list"
"7828splitHere46","17703126splitHere46","ArrayList"
"7829splitHere46","17703126splitHere46","public Route(Route r) {<newline46mondego>    List<Site> newSites = new ArrayList<Site>();<newline46mondego><newline46mondego>    for (Site obj: r.sites) {<newline46mondego>        // Add copy of obj to the newSites<newline46mondego>        // So you need yet another copy constructor in 'Site' class.<newline46mondego>    }<newline46mondego><newline46mondego>    this.sites = newSites;<newline46mondego>}<newline46mondego>"
"7830splitHere46","17703260splitHere46","@XmlElement(name = <doubleQuotes46>orders<doubleQuotes46>)<newline46mondego>protected List<Order> orders;<newline46mondego><newline46mondego>public List<Order> getOrders() {<newline46mondego>    if (orders == null) {<newline46mondego>        orders = new ArrayList<Order>();<newline46mondego>    }<newline46mondego>    return this.orders;<newline46mondego>}<newline46mondego>"
"7831splitHere46","17703508splitHere46","String veryHugeString = ....;//<newline46mondego>String[] words = new String[]{...};<newline46mondego>boolean foundAtLeastOne = false;<newline46mondego>for (String word : words) {<newline46mondego>   if (veryHugeString.indexOf(word) > 0) {<newline46mondego>       foundAtLeastOne = true;<newline46mondego>       System.out.println(<doubleQuotes46>Word: <doubleQuotes46> + word + <doubleQuotes46> is found);<newline46mondego>       break;<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>Found at least one : <doubleQuotes46> + foundAtLeastOne);<newline46mondego>"
"7832splitHere46","17703639splitHere46","ListMultimap"
"7833splitHere46","17703639splitHere46","String"
"7834splitHere46","17703639splitHere46","byte[]"
"7835splitHere46","17703639splitHere46","Properties"
"7836splitHere46","17703639splitHere46","public ListMultimap<Object, Object> read(InputStream in) throws IOException<newline46mondego>{<newline46mondego>  ListMultimap<Object, Object> index = ArrayListMultimap.create();<newline46mondego><newline46mondego>  Properties properties = new Properties();<newline46mondego>  properties.load(in);<newline46mondego><newline46mondego>  for (Object serializedKey : properties.keySet())  <newline46mondego>  {<newline46mondego>    String deserializedKey = deserialize(serializedKey);<newline46mondego>    String values = properties.get(serializedKey);<newline46mondego><newline46mondego>    for (String value : values.split(<doubleQuotes46>,<doubleQuotes46>)) <newline46mondego>    {<newline46mondego>      index.put(deserializedKey, deserialize(value)); <newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  return index;<newline46mondego>}<newline46mondego>"
"7837splitHere46","17703639splitHere46","public void write(ListMultimap<Object, Object> index, OutputStream out) throws IOException<newline46mondego>{<newline46mondego>  Properties properties = new Properties();<newline46mondego><newline46mondego>  for (Object key : index.keySet())<newline46mondego>  {<newline46mondego>    StringBuilder values = new StringBuilder();<newline46mondego><newline46mondego>    for (Object value = index.get(key))<newline46mondego>    {<newline46mondego>      values.append(serailize(value)).append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    } <newline46mondego><newline46mondego>    properties.setProperty(serailize(key), values.subString(0, values.length - 1));<newline46mondego>  }<newline46mondego><newline46mondego>  properties.store(out, <doubleQuotes46>saving<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"7838splitHere46","17703639splitHere46","serialize"
"7839splitHere46","17703639splitHere46","deserialize"
"7840splitHere46","17703639splitHere46","public String serialize(Object object)<newline46mondego>"
"7841splitHere46","17703639splitHere46","public Object deserialize(String s)<newline46mondego>"
"7842splitHere46","17703729splitHere46","null"
"7843splitHere46","17703729splitHere46","Thread thread = null;<newline46mondego>thread = new Thread(this, <doubleQuotes46>game<doubleQuotes46>);<newline46mondego>// thread is guaranteed to be non-null here<newline46mondego>"
"7844splitHere46","17703729splitHere46","volatile"
"7845splitHere46","17703729splitHere46","volatile Thread thread = null;<newline46mondego>"
"7846splitHere46","17703729splitHere46","thread"
"7847splitHere46","17703729splitHere46","thread"
"7848splitHere46","17703729splitHere46","static"
"7849splitHere46","17703792splitHere46","void f()<newline46mondego>{<newline46mondego>    int x = 123; // <- located in stack<newline46mondego>}<newline46mondego><newline46mondego>int x; // <- located in heap<newline46mondego>void f()<newline46mondego>{<newline46mondego>    x = 123  <newline46mondego>}<newline46mondego>"
"7850splitHere46","17703822splitHere46","EntityManager.flush();"
"7851splitHere46","17703822splitHere46","EntityManager.persist()"
"7852splitHere46","17704090splitHere46","addRule"
"7853splitHere46","17704090splitHere46","getRule"
"7854splitHere46","17704090splitHere46","RelativeLayout.LayoutParams"
"7855splitHere46","17704248splitHere46","date.getTime()"
"7856splitHere46","17704248splitHere46","Mon Jul 15 20:15:35 UTC 2013"
"7857splitHere46","17704248splitHere46","Mon Jul 15 20:15:36 UTC 2013"
"7858splitHere46","17704248splitHere46","Filter startFilter = new FilterPredicate(<doubleQuotes46>date<doubleQuotes46>, Query.FilterOperator.GREATER_THAN_OR_EQUAL, startSecond);<newline46mondego>Filter endFilter = new FilterPredicate(<doubleQuotes46>date<doubleQuotes46>, Query.FilterOperator.LESS_THAN, nextSecond);<newline46mondego>"
"7859splitHere46","17704460splitHere46","int ret=0;<newline46mondego>int offset=0;<newline46mondego>int BUFF_LEN=64*1024;<newline46mondego>byte[] buffer = new byte[BUFF_LEN];<newline46mondego>while ((ret = is.read(buffer, offset, BUFF_LEN - offset)) > 0)<newline46mondego>{<newline46mondego>    offset+=ret;<newline46mondego>    // just in case the file is bigger that the buffer size<newline46mondego>   if (offset >= BUFF_LEN) break;<newline46mondego>}<newline46mondego>"
"7860splitHere46","17704503splitHere46","import java.util.regex.*;<newline46mondego><newline46mondego>Pattern urlPattern = Pattern.compile(<doubleQuotes46><img src=(.*?)-t1<doubleQuotes46>);<newline46mondego><newline46mondego>while ((line = br.readLine()) != null) {<newline46mondego>        Matcher m = urlPattern.matcher (line);<newline46mondego>        while (m.find()) {<newline46mondego>            System.out.println(m.group(1));<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"7861splitHere46","17704503splitHere46","<img src="
"7862splitHere46","17704503splitHere46","-t1"
"7863splitHere46","17704787splitHere46","long start = System.currentTimeMillis();<newline46mondego>// do some task<newline46mondego>long timeTakenMs = System.currentTimeMillis() - start;<newline46mondego>"
"7864splitHere46","17704787splitHere46","// Declare instance variable<newline46mondego>long start = 0L;<newline46mondego><newline46mondego>// OnStartTimer<newline46mondego>start = System.currentTimeMillis();<newline46mondego><newline46mondego>// OnStopTimer<newline46mondego>long elapsed = System.currentTimeMillis() - start;<newline46mondego>"
"7865splitHere46","17704836splitHere46","@Test<newline46mondego>public void test() throws Exception {<newline46mondego><newline46mondego>    MyLoader customLoader1 = new MyLoader();<newline46mondego>    MyLoader customLoader2 = new MyLoader();<newline46mondego><newline46mondego>    Class<?> c1 = customLoader1.loadClass(SPECIAL_CLASS_NAME);<newline46mondego>    Class<?> c2 = customLoader2.loadClass(SPECIAL_CLASS_NAME);<newline46mondego><newline46mondego>    LoadedClass o1 = (LoadedClass) c1.newInstance();<newline46mondego>    LoadedClass o2 = (LoadedClass) c2.newInstance();<newline46mondego><newline46mondego>    o1.setStaticPart(100d);<newline46mondego>    o2.setStaticPart(1d);<newline46mondego><newline46mondego>    assertEquals(100d, o1.getStaticPart());<newline46mondego>    assertEquals(1d, o2.getStaticPart());<newline46mondego>}<newline46mondego>"
"7866splitHere46","17704902splitHere46","public String transformURLIntoLinks(String text){<newline46mondego>String urlValidationRegex = <doubleQuotes46>(https?|ftp)://(www\\d?|[a-zA-Z0-9]+)?.[a-zA-Z0-9-]+(\\:|.)([a-zA-Z0-9.]+|(\\d+)?)([/?:].*)?<doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(urlValidationRegex);<newline46mondego>Matcher m = p.matcher(text);<newline46mondego>StringBuffer sb = new StringBuffer();<newline46mondego>while(m.find()){<newline46mondego>    String found =m.group(0); <newline46mondego>    m.appendReplacement(sb, <doubleQuotes46><a href='<doubleQuotes46>+found+<doubleQuotes46>'><doubleQuotes46>+found+<doubleQuotes46></a><doubleQuotes46>); <newline46mondego>}<newline46mondego>m.appendTail(sb);<newline46mondego>return sb.toString();<newline46mondego>   }<newline46mondego>"
"7867splitHere46","17705001splitHere46","Matcher#matches()"
"7868splitHere46","17705001splitHere46","Matcher#find()"
"7869splitHere46","17705001splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>content=\<doubleQuotes46>WordPress\\s+([\\d.]+)\<doubleQuotes46><doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(line);<newline46mondego>if(m.find())<newline46mondego>     System.out.println(m.group(1));<newline46mondego>else<newline46mondego>     System.out.println(<doubleQuotes46>not found<doubleQuotes46>);<newline46mondego>"
"7870splitHere46","17705077splitHere46","where"
"7871splitHere46","17705077splitHere46","WHERE [/R dir] [/Q] [/F] [/T] pattern<newline46mondego>"
"7872splitHere46","17705077splitHere46","/R"
"7873splitHere46","17705077splitHere46","notepad.exe"
"7874splitHere46","17705077splitHere46","String searchCmd;<newline46mondego>if (System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>).contains(<doubleQuotes46>Windows<doubleQuotes46>)) {<newline46mondego>    searchCmd = <doubleQuotes46>where<doubleQuotes46>;<newline46mondego>} else { // I'm assuming Linux here<newline46mondego>    searchCmd = <doubleQuotes46>which<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>ProcessBuilder procBuilder = new ProcessBuilder(searchCmd, <doubleQuotes46>notepad.exe<doubleQuotes46>);<newline46mondego>Process process = procBuilder.start();<newline46mondego><newline46mondego>ArrayList<String> filePaths = new ArrayList<String>();<newline46mondego>Scanner scanner = new Scanner(process.getInputStream());<newline46mondego>while (scanner.hasNextLine()) {<newline46mondego>    filePaths.add(scanner.nextLine());<newline46mondego>}<newline46mondego>scanner.close();<newline46mondego><newline46mondego>System.out.println(filePaths);<newline46mondego>"
"7875splitHere46","17705077splitHere46","[C:\Windows\System32\notepad.exe, C:\Windows\notepad.exe]<newline46mondego>"
"7876splitHere46","17705330splitHere46","schedule(300)"
"7877splitHere46","17705330splitHere46","scheduleRepeating(300)"
"7878splitHere46","17705330splitHere46","Window.getTitle()"
"7879splitHere46","17705330splitHere46","Window.setTitle(String)"
"7880splitHere46","17705330splitHere46","// create just an instance of the timer<newline46mondego>final MyUpdateTitleTimer mytimer = new MyUpdateTitleTimer();<newline46mondego>// To Start the updater<newline46mondego>mytimer.setPrefix(<doubleQuotes46>> <doubleQuotes46>);<newline46mondego>// To Stop set the prefix to null<newline46mondego>mytimer.setPrefix(null);<newline46mondego><newline46mondego><newline46mondego>class MyUpdateTitleTimer extends Timer {<newline46mondego>  private String prefix;<newline46mondego>  private String title;<newline46mondego>  private boolean b;<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    String s = (b = !b) ? prefix + title : title;<newline46mondego>    Window.setTitle(s);<newline46mondego>  }<newline46mondego><newline46mondego>  public void setPrefix(String prefix) {<newline46mondego>    if (title != null) {<newline46mondego>      Window.setTitle(title);<newline46mondego>    }<newline46mondego>    this.prefix = prefix;<newline46mondego>    if (prefix == null) {<newline46mondego>      cancel();<newline46mondego>    } else {<newline46mondego>      title = Window.getTitle();<newline46mondego>      scheduleRepeating(300);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7881splitHere46","17705528splitHere46","B"
"7882splitHere46","17705528splitHere46","extends"
"7883splitHere46","17705528splitHere46","A"
"7884splitHere46","17705528splitHere46","A's"
"7885splitHere46","17705528splitHere46","C extends B"
"7886splitHere46","17705528splitHere46","C"
"7887splitHere46","17705528splitHere46","A"
"7888splitHere46","17705528splitHere46","B"
"7889splitHere46","17705528splitHere46","private"
"7890splitHere46","17705528splitHere46","protected"
"7891splitHere46","17705528splitHere46","protected"
"7892splitHere46","17705528splitHere46","class A<newline46mondego>{<newline46mondego>   protected int x; <newline46mondego>}<newline46mondego><newline46mondego>class B extends A<newline46mondego>{<newline46mondego>   private int x; <newline46mondego>}<newline46mondego><newline46mondego>class C extends B<newline46mondego>{<newline46mondego>   private int z = x;<newline46mondego>}<newline46mondego>"
"7893splitHere46","17705528splitHere46","x"
"7894splitHere46","17705528splitHere46","B"
"7895splitHere46","17705528splitHere46","x"
"7896splitHere46","17705528splitHere46","A"
"7897splitHere46","17705528splitHere46","C"
"7898splitHere46","17705528splitHere46","x"
"7899splitHere46","17705528splitHere46","B's"
"7900splitHere46","17705528splitHere46","private"
"7901splitHere46","17705528splitHere46","x"
"7902splitHere46","17705528splitHere46","SubClass"
"7903splitHere46","17705528splitHere46","extend"
"7904splitHere46","17705571splitHere46","Map<String,Button> buttons = new HashMap<String,Button>();<newline46mondego>buttons.put(<doubleQuotes46>buttonA<doubleQuotes46>, new Button());<newline46mondego>buttons.get(<doubleQuotes46>buttonA<doubleQuotes46>);  // gets the button...<newline46mondego>"
"7905splitHere46","17705609splitHere46","new FormAttachment(int numerator, int offset)<newline46mondego>"
"7906splitHere46","17705609splitHere46","final Button button = new Button(shell, SWT.NONE);<newline46mondego>button.setText(<doubleQuotes46>Button<doubleQuotes46>);<newline46mondego><newline46mondego>final FormData layoutData = new FormData();<newline46mondego><newline46mondego>/* Compute the offset */<newline46mondego>int offset = -button.computeSize(SWT.DEFAULT, SWT.DEFAULT).y / 2;<newline46mondego><newline46mondego>/* Create the FormAttachment */<newline46mondego>layoutData.top = new FormAttachment(50, offset);<newline46mondego>layoutData.left = new FormAttachment(0);<newline46mondego>layoutData.right = new FormAttachment(100);<newline46mondego>button.setLayoutData(layoutData);<newline46mondego>"
"7907splitHere46","17705672splitHere46","@Stateless"
"7908splitHere46","17705672splitHere46","GenericManagerJPA"
"7909splitHere46","17705678splitHere46","th"
"7910splitHere46","17705678splitHere46","th"
"7911splitHere46","17705678splitHere46","o."
"7912splitHere46","17705678splitHere46","sum()"
"7913splitHere46","17705678splitHere46","diff()"
"7914splitHere46","17705678splitHere46","public class Sum implements Runnable {<newline46mondego>   public void run() {<newline46mondego>      //Add up your numbers<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>public class Diff implements Runnable {<newline46mondego>   public void run() {<newline46mondego>      //Subtract numbers<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class Test {<newline46mondego>   public static void main(String[] args) {<newline46mondego>      Thread sumThread = new Thread(new Sum());<newline46mondego>      Thread diffThread = new Thread(new Diff());<newline46mondego>      sumThread.start();<newline46mondego>      diffThread.start();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7915splitHere46","17705798splitHere46","if (a.equalsIgnoreCase(<doubleQuotes46>yes<doubleQuotes46>)) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"7916splitHere46","17705798splitHere46","equals"
"7917splitHere46","17705798splitHere46","<doubleQuotes46>yes<doubleQuotes46>"
"7918splitHere46","17705969splitHere46","BufferedImage image = ImageIO.read(new File(<doubleQuotes46>img.jpg<doubleQuotes46>));<newline46mondego>    BufferedImage img = new BufferedImage(200,150,BufferedImage.TYPE_INT_RGB);<newline46mondego>    img.getGraphics().drawImage(image,0,0,200,150,null);<newline46mondego><newline46mondego>    JLabel label = new JLabel(new ImageIcon(img));<newline46mondego>    add(label);<newline46mondego>"
"7919splitHere46","17705991splitHere46","LinkedList"
"7920splitHere46","17705991splitHere46","Linkedlist"
"7921splitHere46","17705991splitHere46","synchronized"
"7922splitHere46","17705991splitHere46","this"
"7923splitHere46","17705991splitHere46","SmartPhone"
"7924splitHere46","17705991splitHere46","LinkedList"
"7925splitHere46","17705991splitHere46","someObject1"
"7926splitHere46","17705991splitHere46","someObject2"
"7927splitHere46","17705991splitHere46","thread A: put e into queue1<newline46mondego>thread B: queue1.isEmpty()? No, so go on<newline46mondego>thread C: queue1.isEmpty()? No, so go on<newline46mondego>thread B: queue1.poll() // works<newline46mondego>thread C: queue1.poll() // NoSuchElementException<newline46mondego>"
"7928splitHere46","17705991splitHere46","BlockingQueue"
"7929splitHere46","17705991splitHere46","poll()"
"7930splitHere46","17705991splitHere46","null"
"7931splitHere46","17705991splitHere46","null"
"7932splitHere46","17706100splitHere46","characterList.remove(i);"
"7933splitHere46","17706100splitHere46","characterList.remove(i+1);"
"7934splitHere46","17706100splitHere46","i = 0"
"7935splitHere46","17706100splitHere46","i = -1"
"7936splitHere46","17706100splitHere46",".equals()"
"7937splitHere46","17706100splitHere46","=="
"7938splitHere46","17706100splitHere46","Character"
"7939splitHere46","17706100splitHere46","char"
"7940splitHere46","17706100splitHere46","for (int i = 0; i < characterList.size() - 1; i++) {<newline46mondego>        System.out.println(<doubleQuotes46>1st Loop: <doubleQuotes46> + characterList.get(i));<newline46mondego>        System.out.println(<doubleQuotes46>1st Loop: <doubleQuotes46> + characterList.get(i + 1));<newline46mondego>        System.out.println(<doubleQuotes46>1st Loop: <doubleQuotes46> + i);<newline46mondego>        System.out.println();<newline46mondego><newline46mondego>        for (int j = 0; j < openParenthesis.length; j++) {<newline46mondego>            if (characterList.get(i).equals(openParenthesis[j])) {<newline46mondego>                if (characterList.get(i + 1).equals(closeParenthesis[j])) {<newline46mondego>                    System.out.println(<doubleQuotes46>Nested Match<doubleQuotes46>);<newline46mondego>                    System.out.println(characterList.get(i));<newline46mondego>                    System.out.println(characterList.get(i + 1));<newline46mondego>                    System.out.println();<newline46mondego>                    characterList.remove(i);<newline46mondego>                    characterList.remove(i);<newline46mondego>                    i = -1;<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"7941splitHere46","17706394splitHere46","JPasswordField jt=new JPasswordField(20);<newline46mondego><newline46mondego>            // Put client property<newline46mondego>            jt.putClientProperty(<doubleQuotes46>JPasswordField.cutCopyAllowed<doubleQuotes46>,true);<newline46mondego><newline46mondego>            add(jt);<newline46mondego>"
"7942splitHere46","17706394splitHere46","JPasswordField"
"7943splitHere46","17706394splitHere46","jt.getActionMap().put(<doubleQuotes46>a<doubleQuotes46>,null);<newline46mondego>        jt.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(<doubleQuotes46>ctrl V<doubleQuotes46>),<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>"
"7944splitHere46","17706394splitHere46","paste()"
"7945splitHere46","17706394splitHere46","JPasswordField jt=new JPasswordField(20){<newline46mondego>  public void paste(){}<newline46mondego>};<newline46mondego>"
"7946splitHere46","17706429splitHere46","HTMLEditorKit.write()"
"7947splitHere46","17706446splitHere46","@HeaderParam"
"7948splitHere46","17706446splitHere46","String"
"7949splitHere46","17706446splitHere46","@BeanParam"
"7950splitHere46","17706446splitHere46","@Path(<doubleQuotes46>/foo<doubleQuotes46>)<newline46mondego>public class FooResource {<newline46mondego>    @GET<newline46mondego>    @Path(<doubleQuotes46>/bar<doubleQuotes46>)<newline46mondego>    public void bar(@BeanParam MyBean myBean) {<newline46mondego>      // Do something<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class MyBean {<newline46mondego>    private String uaCompatible;<newline46mondego><newline46mondego>    public MyBean(@HeaderParam(<doubleQuotes46>X-UA-Compatible<doubleQuotes46>) String uaCompatible) {<newline46mondego>        this.uaCompatible = uaCompatible;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getUacompatible() {<newline46mondego>        return this.uaCompatible;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7951splitHere46","17706446splitHere46","@BeanParam"
"7952splitHere46","17706446splitHere46","@InjectParam"
"7953splitHere46","17706446splitHere46","@Inject"
"7954splitHere46","17706446splitHere46","@Inject"
"7955splitHere46","17706511splitHere46","invokeAndWait"
"7956splitHere46","17706511splitHere46","invokeAndWait"
"7957splitHere46","17706511splitHere46","RepaintManager"
"7958splitHere46","17706511splitHere46","invokeAndWait"
"7959splitHere46","17706511splitHere46","if (EventQueue.isDispatchThread()) {"
"7960splitHere46","17706511splitHere46","if (SwingUtilities.isEventDispatchThread()) {"
"7961splitHere46","17706511splitHere46","setText(<doubleQuotes46><doubleQuotes46>)"
"7962splitHere46","17706511splitHere46","append(<doubleQuotes46><doubleQuotes46>"
"7963splitHere46","17706511splitHere46","invokeLater"
"7964splitHere46","17706511splitHere46","SwingWorker"
"7965splitHere46","17706511splitHere46","process"
"7966splitHere46","17706511splitHere46","publish"
"7967splitHere46","17706511splitHere46","setProcess"
"7968splitHere46","17706511splitHere46","done"
"7969splitHere46","17706511splitHere46","EDT by default"
"7970splitHere46","17706511splitHere46","SwingWorker"
"7971splitHere46","17706511splitHere46","Executor"
"7972splitHere46","17706511splitHere46","SwingWorker"
"7973splitHere46","17706511splitHere46","Runnable#Thread"
"7974splitHere46","17707080splitHere46","@RequestMapping( method = RequestMethod.POST, <newline46mondego>    value = DataController.RESOURCE_PATH + <doubleQuotes46>/file<doubleQuotes46>, <newline46mondego>    headers = <doubleQuotes46>content-type=application/json<doubleQuotes46> )<newline46mondego>public void export( @RequestBody JSONObject json, HttpServletResponse response ) <newline46mondego>    throws IOException {<newline46mondego>    String myString = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>    response.setContentType(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>text/plain<doubleQuotes46>);<newline46mondego>    response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>,<doubleQuotes46>attachment;filename=myFile.txt<doubleQuotes46>);<newline46mondego>    ServletOutputStream out = response.getOutputStream();<newline46mondego>    out.println(myString);<newline46mondego>    out.flush();<newline46mondego>    out.close();<newline46mondego>}<newline46mondego>"
"7975splitHere46","17707089splitHere46","arr[pivot] == high"
"7976splitHere46","17707099splitHere46","Preferences"
"7977splitHere46","17707099splitHere46","Windows > Preferences"
"7978splitHere46","17707099splitHere46","Java > Editor > Templates"
"7979splitHere46","17707099splitHere46","New..."
"7980splitHere46","17707099splitHere46","Ctrl + Space"
"7981splitHere46","17707099splitHere46","[type] [new_name] = ([type]) new ArrayList<String>();<newline46mondego>"
"7982splitHere46","17707099splitHere46","[]"
"7983splitHere46","17707099splitHere46","cast"
"7984splitHere46","17707099splitHere46","cast"
"7985splitHere46","17707099splitHere46","Ctrl + Space"
"7986splitHere46","17707099splitHere46","[type] [new_name] = ([type]) [name];<newline46mondego>"
"7987splitHere46","17707100splitHere46","#parse"
"7988splitHere46","17707100splitHere46","#macro(displayNode $node)<newline46mondego>{<newline46mondego>    <doubleQuotes46>name<doubleQuotes46> = <doubleQuotes46>$node.name<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>value<doubleQuotes46> = <doubleQuotes46>$node.value<doubleQuotes46>##<newline46mondego>    #if ($node.childrens.size() > 0),<newline46mondego>    <doubleQuotes46>childrens<doubleQuotes46> = {<newline46mondego>        #foreach ($child in $node.children)<newline46mondego>            #displayNode($child)<newline46mondego>        #end<newline46mondego>    }<newline46mondego>    #end<newline46mondego>}<newline46mondego>#end<newline46mondego>"
"7989splitHere46","17707100splitHere46","#evaluate"
"7990splitHere46","17707100splitHere46","#set ($d = '$')<newline46mondego>        #foreach ($child in $node.children)<newline46mondego>            #evaluate(<doubleQuotes46>#display${child.type}Node(${d}child)<doubleQuotes46>)<newline46mondego>        #end<newline46mondego>"
"7991splitHere46","17707119splitHere46","String noNewLines = <doubleQuotes46>Hi there, click here http://www.google.com ok?<doubleQuotes46>;<newline46mondego>String newLines = <doubleQuotes46>Hi there, \r\nclick here \nhttp://www.google.com ok?<doubleQuotes46>;<newline46mondego>// This is a String format with two String variables. <newline46mondego>// They will be replaced with the desired values once the <doubleQuotes46>format<doubleQuotes46> method is called.<newline46mondego>String replacementFormat = <doubleQuotes46><a href=\<doubleQuotes46>%s\<doubleQuotes46>>%s</a><doubleQuotes46>;<newline46mondego>// The first round brackets define a group with anything starting with<newline46mondego>// <doubleQuotes46>http(s)<doubleQuotes46>. The second round brackets delimit that group by a lookforward reference<newline46mondego>// to whitespace. <newline46mondego>String pattern = <doubleQuotes46>(http(s)?://.+?)(?=\\s)<doubleQuotes46>;<newline46mondego>noNewLines = noNewLines.replaceAll(<newline46mondego>        pattern,<newline46mondego>        // The <doubleQuotes46>$1<doubleQuotes46> literals are group back-references. <newline46mondego>        // In our instance, they reference the group enclosed between the first<newline46mondego>        // round brackets in the <doubleQuotes46>pattern<doubleQuotes46> String. <newline46mondego>        new Formatter().format(replacementFormat, <doubleQuotes46>$1<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>)<newline46mondego>        .toString()<newline46mondego>);<newline46mondego>System.out.println(noNewLines);<newline46mondego>System.out.println();<newline46mondego>newLines = newLines.replaceAll(<newline46mondego>        pattern,<newline46mondego>        new Formatter().format(replacementFormat, <doubleQuotes46>$1<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>)<newline46mondego>        .toString()<newline46mondego>);<newline46mondego>System.out.println(newLines);<newline46mondego>"
"7992splitHere46","17707119splitHere46","Hi there, click here <a href=<doubleQuotes46>http://www.google.com<doubleQuotes46>>http://www.google.com</a> ok?<newline46mondego><newline46mondego>Hi there, <newline46mondego>click here <newline46mondego><a href=<doubleQuotes46>http://www.google.com<doubleQuotes46>>http://www.google.com</a> ok?<newline46mondego>"
"7993splitHere46","17707119splitHere46","replacementFormat"
"7994splitHere46","17707119splitHere46","pattern"
"7995splitHere46","17707119splitHere46","final static String REPLACEMENT_FORMAT"
"7996splitHere46","17707160splitHere46","requestLocationUpdates()"
"7997splitHere46","17707160splitHere46","Context"
"7998splitHere46","17707160splitHere46","requestLocationUpdates(long minTime, float minDistance, Criteria criteria, PendingIntent intent)<newline46mondego>requestLocationUpdates(long minTime, float minDistance, Criteria criteria, LocationListener listener, Looper looper)<newline46mondego>requestLocationUpdates(String provider, long minTime, float minDistance, LocationListener listener)<newline46mondego>requestLocationUpdates(String provider, long minTime, float minDistance, LocationListener listener, Looper looper)<newline46mondego>requestLocationUpdates(String provider, long minTime, float minDistance, PendingIntent intent)<newline46mondego>"
"7999splitHere46","17707160splitHere46","oncreate()"
"8000splitHere46","17707160splitHere46","/* Use the LocationManager class to obtain GPS locations */<newline46mondego>LocationManager LM = (LocationManager) getSystemService(LOCATION_SERVICE);<newline46mondego>//Gather GPS data at a certain time interval.<newline46mondego>LM.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1, 1f, myContext);<newline46mondego>//Check to see if GPS is on<newline46mondego>boolean isGPS = LM<newline46mondego>        .isProviderEnabled(LocationManager.GPS_PROVIDER);<newline46mondego><newline46mondego>//If its off, request to turn it on.<newline46mondego>if (isGPS == false)<newline46mondego>{<newline46mondego>    //Enable GPS pop-up notification.<newline46mondego>    AlertDialog.Builder adb = new AlertDialog.Builder(myContext);<newline46mondego><newline46mondego>    // set title<newline46mondego>    adb.setTitle(<doubleQuotes46>Enable GPS?<doubleQuotes46>);<newline46mondego><newline46mondego>    // set dialog message<newline46mondego>    adb.setMessage(<doubleQuotes46>Enable GPS to get full function from the app.<doubleQuotes46>);<newline46mondego>    adb.setCancelable(false);<newline46mondego><newline46mondego>    //Yes Button<newline46mondego>    adb.setPositiveButton(<doubleQuotes46>Yes<doubleQuotes46>, new DialogInterface.OnClickListener() {<newline46mondego>        public void onClick(DialogInterface dialog, int id) {<newline46mondego>            startActivityForResult(<newline46mondego>                    new Intent(<newline46mondego>                            android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS),<newline46mondego>                    0);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    //No Button<newline46mondego>    adb.setNegativeButton(<doubleQuotes46>No<doubleQuotes46>, new DialogInterface.OnClickListener() {<newline46mondego>        public void onClick(DialogInterface dialog, int id) {<newline46mondego>            dialog.cancel();<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    // create GPS Alert [Pop-up]<newline46mondego>    AlertDialog alertDialog = adb.create();<newline46mondego><newline46mondego>    // show it<newline46mondego>    alertDialog.show();<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    //Added this so when the app gets refreshed it will show the true GPS info status.<newline46mondego>    status.setText(<doubleQuotes46>GPS Status: Enabled<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8001splitHere46","17707212splitHere46","static final"
"8002splitHere46","17707226splitHere46","class Child{<newline46mondego><newline46mondego>public void sayHello(){<newline46mondego>System.out.println(<doubleQuotes46>hello<doubleQuotes46>); <newline46mondego>}<newline46mondego>}<newline46mondego>"
"8003splitHere46","17707226splitHere46","Child myChild = new Child(); <newline46mondego>myChild.sayHello(); <newline46mondego>"
"8004splitHere46","17707426splitHere46","if ((i%2) == 1) {<newline46mondego>"
"8005splitHere46","17707426splitHere46","if ((i%2) == 0) {<newline46mondego>"
"8006splitHere46","17707426splitHere46","if ((i%2) == 1) {<newline46mondego> //code for x to go<newline46mondego><newline46mondego>}else {<newline46mondego>//code for y to go<newline46mondego>}<newline46mondego>"
"8007splitHere46","17707533splitHere46","BlockingQueue"
"8008splitHere46","17707533splitHere46","public void run() {<newline46mondego>   writer.println(text);<newline46mondego>}<newline46mondego>"
"8009splitHere46","17707533splitHere46","String text"
"8010splitHere46","17707533splitHere46","BlockingQueue<String>"
"8011splitHere46","17707533splitHere46","Runnable"
"8012splitHere46","17707533splitHere46","ExecutorService"
"8013splitHere46","17707533splitHere46","shutdown"
"8014splitHere46","17707533splitHere46","BlockingQueue"
"8015splitHere46","17707533splitHere46","ExecutorService"
"8016splitHere46","17707533splitHere46","volatile boolean shutdown = false"
"8017splitHere46","17707533splitHere46","while (!shutdown && !Thread.currentThread().isInterrupgted()) {<newline46mondego>    String text = textQueue.poll(1, TimeUnit.SECONDS);<newline46mondego>    if (text != null) {<newline46mondego>        // write the text<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8018splitHere46","17707649splitHere46","whole_word_found"
"8019splitHere46","17707649splitHere46","while (!word.equalsIgnoreCase(<doubleQuotes46>/exit<doubleQuotes46>)) {<newline46mondego>    // ...<newline46mondego>    whole_word_found = false;<newline46mondego>    for (int x = 0; !whole_word_found && x<grid.length; x++) {<newline46mondego>    // ...<newline46mondego>"
"8020splitHere46","17707657splitHere46","String string = <doubleQuotes46>sometext http://www.something.com<doubleQuotes46>;<newline46mondego>    String url = string.substring(string.indexOf(<doubleQuotes46>http<doubleQuotes46>), string.length());<newline46mondego>    System.out.println(url);<newline46mondego>"
"8021splitHere46","17707762splitHere46","Project -> Properties -> Build -> Compiling -> Compile and Save"
"8022splitHere46","17707781splitHere46","\"
"8023splitHere46","17707781splitHere46","\n"
"8024splitHere46","17707781splitHere46","\t"
"8025splitHere46","17707781splitHere46","text.charAt(i) == '\\'<newline46mondego>"
"8026splitHere46","17708201splitHere46","String regex = <doubleQuotes46>\\{%(?>[^%]++|%(?!}))*%}<doubleQuotes46>;<newline46mondego>"
"8027splitHere46","17708201splitHere46","\\{%         # { need to be escaped<newline46mondego>(?>          # open an atomic group *<newline46mondego>   [^%]++    # all characters but %, one or more times (possessive *)<newline46mondego>  |          # OR<newline46mondego>   %(?!})    # % not followed by } (<-no need to escape)<newline46mondego>)*           # close the atomic group, repeat zero or more times<newline46mondego>%}<newline46mondego>"
"8028splitHere46","17708249splitHere46","List<F.Promise<WS.HttpResponse>> newList = new ArrayList<F.Promise<WS.HttpResponse>>();<newline46mondego>"
"8029splitHere46","17708249splitHere46","public static void addToList(F.Promise<WS.HttpResponse> x)<newline46mondego>{<newline46mondego>   newList.add(x);<newline46mondego>}<newline46mondego>"
"8030splitHere46","17708249splitHere46","public static void makeThemWait()<newline46mondego>{<newline46mondego>   foreach(F.Promise<WS.HttpResponse> x:newList)<newline46mondego>   {<newline46mondego>       F.Promise.waitAll(x);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"8031splitHere46","17708273splitHere46","UserType"
"8032splitHere46","17708273splitHere46","Calendar"
"8033splitHere46","17708273splitHere46","BIGINT"
"8034splitHere46","17708273splitHere46","public class CalendarType implements UserType {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int[] sqlTypes() {<newline46mondego>        return new int[] {Types.BIGINT};<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Class<?> returnedClass() {<newline46mondego>        return Calendar.class;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object x, Object y) throws HibernateException {<newline46mondego>        return x.equals(y);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode(Object x) throws HibernateException {<newline46mondego>        return x.hashCode();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object nullSafeGet(ResultSet resultSet, String[] names,SessionImplementor session, Object owner) throws HibernateException, SQLException {<newline46mondego>        Long timeInMillis = resultSet.getLong(names[0]);<newline46mondego>        if (timeInMillis == null) {<newline46mondego>            return null;<newline46mondego>        } else {<newline46mondego>            Calendar calendar = Calendar.getInstance();<newline46mondego>            calendar.setTimeInMillis(timeInMillis);<newline46mondego>            return calendar;<newline46mondego>        }       <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void nullSafeSet(PreparedStatement preparedStatement, Object value, int index, SessionImplementor session) throws HibernateException, SQLException {<newline46mondego>        Calendar calendar = (Calendar) value;<newline46mondego>        preparedStatement.setLong(index, calendar.getTimeInMillis());       <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object deepCopy(Object value) throws HibernateException {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isMutable() {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Serializable disassemble(Object value) throws HibernateException {<newline46mondego>        Calendar calendar = (Calendar) value;       <newline46mondego>        return calendar.getTimeInMillis();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object assemble(Serializable cached, Object owner) throws HibernateException {<newline46mondego>        Long timeInMillis = (Long) cached;<newline46mondego><newline46mondego>        Calendar calendar = Calendar.getInstance();<newline46mondego>        calendar.setTimeInMillis(timeInMillis);<newline46mondego>        return calendar;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object replace(Object original, Object target, Object owner) throws HibernateException {<newline46mondego>        return original;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8035splitHere46","17708273splitHere46","@TypeDef(name = <doubleQuotes46>calendarType<doubleQuotes46>, typeClass = CalendarType.class)<newline46mondego>@Entity<newline46mondego>@Table<newline46mondego>public class Entity {<newline46mondego><newline46mondego>    @Type(type = <doubleQuotes46>calendarType<doubleQuotes46>)<newline46mondego>    @Column(nullable = false)<newline46mondego>    private Calendar transmissionDate;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"8036splitHere46","17708339splitHere46","String#split()"
"8037splitHere46","17708339splitHere46","String line = <doubleQuotes46>a,b,c,d,e<doubleQuotes46>;<newline46mondego>String[] values = line.split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println (<doubleQuotes46>Value at column 4 = <doubleQuotes46> + values[3]);<newline46mondego>"
"8038splitHere46","17708411splitHere46","readFileToByteArray(File file)"
"8039splitHere46","17708411splitHere46","writeByteArrayToFile(File file, byte[] data)"
"8040splitHere46","17708411splitHere46","try {<newline46mondego>    File file = new File(<doubleQuotes46>/example/path/contract.pdf<doubleQuotes46>);<newline46mondego>    byte[] array = FileUtils.readFileToByteArray(file);<newline46mondego>    FileUtils.writeByteArrayToFile(new File(<doubleQuotes46>/example/path/contract2.pdf<doubleQuotes46>), array);<newline46mondego><newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"8041splitHere46","17708441splitHere46","onDismiss"
"8042splitHere46","17708478splitHere46","public class ScanWebSO <newline46mondego>{<newline46mondego>public static void main (String args[])<newline46mondego>{<newline46mondego>    Document doc;<newline46mondego>    try{<newline46mondego>        doc =        Jsoup.connect(<doubleQuotes46>https://www.google.com/search?as_q=&as_epq=%22Yorkshire+Capital%22+&as_oq=fraud+OR+allegations+OR+scam&as_eq=&as_nlo=&as_nhi=&lr=lang_en&cr=countryCA&as_qdr=all&as_sitesearch=&as_occt=any&safe=images&tbs=&as_filetype=&as_rights=<doubleQuotes46>).userAgent(<doubleQuotes46>Mozilla<doubleQuotes46>).ignoreHttpErrors(true).timeout(0).get();<newline46mondego>        Elements links = doc.select(<doubleQuotes46>li[class=g]<doubleQuotes46>);<newline46mondego>        for (Element link : links) {<newline46mondego>            Elements titles = link.select(<doubleQuotes46>h3[class=r]<doubleQuotes46>);<newline46mondego>            String title = titles.text();<newline46mondego><newline46mondego>            Elements bodies = link.select(<doubleQuotes46>span[class=st]<doubleQuotes46>);<newline46mondego>            String body = bodies.text();<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>Title: <doubleQuotes46>+title);<newline46mondego>            System.out.println(<doubleQuotes46>Body: <doubleQuotes46>+body+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    catch (IOException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"8043splitHere46","17708478splitHere46","<ol eid=<doubleQuotes46><doubleQuotes46> id=<doubleQuotes46>rso<doubleQuotes46>><newline46mondego>"
"8044splitHere46","17708478splitHere46","<li class=<doubleQuotes46>g<doubleQuotes46>> <newline46mondego>"
"8045splitHere46","17708478splitHere46","<h3 class=<doubleQuotes46>r<doubleQuotes46> style=<doubleQuotes46>white-space: normal;<doubleQuotes46>><newline46mondego>"
"8046splitHere46","17708680splitHere46","Future"
"8047splitHere46","17708918splitHere46","Scanner"
"8048splitHere46","17708918splitHere46","Scanner#nextInt()"
"8049splitHere46","17708918splitHere46",","
"8050splitHere46","17708918splitHere46",","
"8051splitHere46","17708918splitHere46","Scanner"
"8052splitHere46","17708918splitHere46","whitespace"
"8053splitHere46","17708918splitHere46","Scanner#useDelimiter(String)"
"8054splitHere46","17708918splitHere46","Scanner scanner = new Scanner(new File(<doubleQuotes46>demo.txt<doubleQuotes46>));<newline46mondego>scanner.useDelimiter(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego><newline46mondego>while (scanner.hasNextInt()) {<newline46mondego>    System.out.println(scanner.nextInt());<newline46mondego>}<newline46mondego>"
"8055splitHere46","17709041splitHere46","O(N*Log(W))"
"8056splitHere46","17709041splitHere46","N"
"8057splitHere46","17709041splitHere46","W"
"8058splitHere46","17709041splitHere46","W"
"8059splitHere46","17709041splitHere46","N-W"
"8060splitHere46","17709041splitHere46","max"
"8061splitHere46","17709041splitHere46","i"
"8062splitHere46","17709041splitHere46","i-W"
"8063splitHere46","17709041splitHere46","O(Log(W))"
"8064splitHere46","17709041splitHere46","O(N*Log(W))"
"8065splitHere46","17709041splitHere46","int[] data = new int[] {2, 3, 4, 2, 6, 2, 5, 1};<newline46mondego>int W = 3;<newline46mondego>TreeMap<Integer,Integer> counts = new TreeMap<Integer,Integer>();<newline46mondego>for (int i = 0 ; i != W ; i++) {<newline46mondego>    if (counts.containsKey(data[i])) {<newline46mondego>        counts.put(data[i], counts.get(data[i])+1);<newline46mondego>    } else {<newline46mondego>        counts.put(data[i], 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>for (int i = W ; i != data.length ; i++) {<newline46mondego>    Integer max = counts.lastKey();<newline46mondego>    System.out.println(max);<newline46mondego>    int tmp = counts.get(data[i-W])-1;<newline46mondego>    if (tmp != 0) {<newline46mondego>        counts.put(data[i-W], tmp);<newline46mondego>    } else {<newline46mondego>        counts.remove(data[i-W]);<newline46mondego>    }<newline46mondego>    if (counts.containsKey(data[i])) {<newline46mondego>        counts.put(data[i], counts.get(data[i])+1);<newline46mondego>    } else {<newline46mondego>        counts.put(data[i], 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>System.out.println(counts.lastKey());<newline46mondego>"
"8066splitHere46","17709063splitHere46","The compiler automatically provides a no-argument, default constructor for any class without constructors<newline46mondego>"
"8067splitHere46","17709063splitHere46","Section 8.8.7 of the Java Language Specification, Second Edition describes a default constructor: If a class contains no constructor declarations, then a default constructor that takes no parameters is automatically provided. It invokes the superclass constructor with no arguments. The constructor has the same access as its class.<newline46mondego>The Javadoc tool generates documentation for default constructors. When it documents such a constructor, Javadoc leaves its description blank, because a default constructor can have no doc comment. <newline46mondego>"
"8068splitHere46","17709123splitHere46","solrServer.add(docs);"
"8069splitHere46","17709123splitHere46","...<newline46mondego> try {<newline46mondego>     solrServer.add(docs);<newline46mondego>     solrServer.commit();<newline46mondego> }<newline46mondego> ...<newline46mondego>"
"8070splitHere46","17709225splitHere46","@Inject"
"8071splitHere46","17709225splitHere46","@RequestScoped"
"8072splitHere46","17709225splitHere46","@SessionScoped"
"8073splitHere46","17709235splitHere46","break"
"8074splitHere46","17709235splitHere46","Comparable[] comparableList= getStore();<newline46mondego>for(Comparable p : comparableList) {<newline46mondego>    if(item.compareTo(p)==0) {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    if(item.compareTo(p)<0) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>return false;<newline46mondego>"
"8075splitHere46","17709257splitHere46","public TestConstructorException(int x) {<newline46mondego>}<newline46mondego>"
"8076splitHere46","17709257splitHere46","public TestConstructorException(int x) {<newline46mondego>  super();<newline46mondego>}<newline46mondego>"
"8077splitHere46","17709257splitHere46","try"
"8078splitHere46","17709311splitHere46","String sql = <doubleQuotes46>SELECT USER.* FROM USER_ AS USER WHERE ID = ?<doubleQuotes46>;<newline46mondego><newline46mondego>Query query = em.createNativeQuery(sql, User.class);<newline46mondego>query.setParameter(1, id);<newline46mondego>User user = (User) query.getSingleResult();<newline46mondego>"
"8079splitHere46","17709311splitHere46","@NamedNativeQuery(<newline46mondego>    name=<doubleQuotes46>complexQuery<doubleQuotes46>,<newline46mondego>    query=<doubleQuotes46>SELECT USER.* FROM USER_ AS USER WHERE ID = ?<doubleQuotes46>,<newline46mondego>    resultClass=User.class<newline46mondego>)<newline46mondego>public class User { ... }<newline46mondego><newline46mondego>Query query = em.createNamedQuery(<doubleQuotes46>complexQuery<doubleQuotes46>, User.class);<newline46mondego>query.setParameter(1, id);<newline46mondego>User user = (User) query.getSingleResult();<newline46mondego>"
"8080splitHere46","17709329splitHere46","transparent"
"8081splitHere46","17709329splitHere46",".button {<newline46mondego>    -fx-background-color: transparent, transparent, transparent, transparent;<newline46mondego>}<newline46mondego><newline46mondego>.button:hover{<newline46mondego>    -fx-background-color: transparent, rgba(0,0,0,.1), rgba(0,0,0,.1), transparent;<newline46mondego>}<newline46mondego><newline46mondego>.button:armed {<newline46mondego>    -fx-background-color: transparent, rgba(0,0,0,.1), rgba(0,0,0,.1), rgba(0,0,0,.2);<newline46mondego>}<newline46mondego>"
"8082splitHere46","17709329splitHere46","toolbar.getStylesheets().add(<doubleQuotes46>filename.css<doubleQuotes46>);<newline46mondego>"
"8083splitHere46","17709444splitHere46","HQL"
"8084splitHere46","17709444splitHere46","RatioFunctionExpression ratioFunctionExpression = null;<newline46mondego>RatioFunctionExpressionId ratioFunctionExpressionId = null;<newline46mondego>try {<newline46mondego>    ratioFunctionExpression = new RatioFunctionExpression();<newline46mondego><newline46mondego>    List<Object> params = new ArrayList<Object>();<newline46mondego>    params.add(ratioFunctionId);<newline46mondego>    params.add(expressionId);<newline46mondego><newline46mondego>    List<RatioFunctionExpression> instance<newline46mondego>        = (List<RatioFunctionExpression>) template.find(<doubleQuotes46>from RatioFunctionExpression ratioFunctionExpression where ratioFunctionExpression.id.ratioFunctionId = ? and ratioFunctionExpression.id.expressionId = ?<doubleQuotes46>,<newline46mondego>                                                        params.toArray());<newline46mondego>    logger.debug(<doubleQuotes46>get successful<doubleQuotes46>);<newline46mondego>    if (instance.size() > 0) {<newline46mondego>        ratioFunctionExpression = instance.get(0);<newline46mondego>    } else {<newline46mondego>        logger.debug(<doubleQuotes46>Lookup of id [<doubleQuotes46> + expressionId + <doubleQuotes46>] is not found in RatioFunctionExpression table<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"8085splitHere46","17709505splitHere46","public class Person {<newline46mondego>    @OneToMany(mappedBy = <doubleQuotes46>person<doubleQuotes46>)<newline46mondego>    private Set<RankedAddress> rankedAddresses;<newline46mondego>}<newline46mondego><newline46mondego>public class RankedAddress {<newline46mondego>    @ManyToOne<newline46mondego>    private Person person;<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    private Address address;<newline46mondego>}<newline46mondego><newline46mondego>public class Address {<newline46mondego>    @OneToMany(mappedBy = <doubleQuotes46>adress<doubleQuotes46>)<newline46mondego>    private Set<RankedAddress> rankedAddresses;<newline46mondego>}<newline46mondego>"
"8086splitHere46","17709505splitHere46","public class Person {<newline46mondego>    @ManyToMany<newline46mondego>    @OrderColumn(name = <doubleQuotes46>rank<doubleQuotes46>)<newline46mondego>    private List<Address> addresses;<newline46mondego>}<newline46mondego>"
"8087splitHere46","17709647splitHere46","@Test<newline46mondego>public void badTestWhichVerifiesPrivateConstructorIsCalled()<newline46mondego>{<newline46mondego>    new Expectations(Task.class) {{ // partially mocks `Task`<newline46mondego>        // Records an expectation on a private constructor:<newline46mondego>        newInstance(Task.class, <doubleQuotes46>name<doubleQuotes46>);<newline46mondego>    }};<newline46mondego><newline46mondego>    Task task = Task.getInstance(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego><newline46mondego>    assertNotNull(task);<newline46mondego>}<newline46mondego><newline46mondego>@Test<newline46mondego>public void goodTestWhichVerifiesTheNameOfANewTask()<newline46mondego>{<newline46mondego>    String taskName = <doubleQuotes46>name<doubleQuotes46>;<newline46mondego><newline46mondego>    Task task = Task.getInstance(taskName);<newline46mondego><newline46mondego>    assertNotNull(task);<newline46mondego>    assertEquals(taskName, task.getName());<newline46mondego>}<newline46mondego><newline46mondego>@Test<newline46mondego>public void goodTestWhichVerifiesANewTaskIsCreatedEverytime()<newline46mondego>{<newline46mondego>    Task task1 = Task.getInstance(<doubleQuotes46>name1<doubleQuotes46>);<newline46mondego>    Task task2 = Task.getInstance(<doubleQuotes46>name2<doubleQuotes46>);<newline46mondego><newline46mondego>    assertNotNull(task1);<newline46mondego>    assertNotNull(task2);<newline46mondego>    assertNotSame(task1, task2);<newline46mondego>}<newline46mondego>"
"8088splitHere46","17709735splitHere46","addEventHandler()"
"8089splitHere46","17709735splitHere46","T"
"8090splitHere46","17709735splitHere46","T"
"8091splitHere46","17709735splitHere46","EventHandler"
"8092splitHere46","17709735splitHere46","Integer"
"8093splitHere46","17709735splitHere46","Integer"
"8094splitHere46","17709735splitHere46","EventHandler"
"8095splitHere46","17709767splitHere46","Map"
"8096splitHere46","17709767splitHere46","Map"
"8097splitHere46","17709767splitHere46","Map"
"8098splitHere46","17709767splitHere46","HashMap"
"8099splitHere46","17709767splitHere46","TreeMap"
"8100splitHere46","17709814splitHere46","class PacketPrototype<newline46mondego>+ PacketPrototype(PacketType)<newline46mondego>+ addData(DataType, Bitlength, ...)<newline46mondego>+ deserilize(Bitstream stream) : ReceivedPacket<newline46mondego>+ serilizeThis() : ToSendPacket<newline46mondego>+ getPacketType() : int<newline46mondego>"
"8101splitHere46","17709814splitHere46","class PacketPrototypeHolder<newline46mondego>+ register(PacketPrototype)<newline46mondego>+ getPrototypeForPacketType(int Type) : PacketPrototype<newline46mondego>"
"8102splitHere46","17709814splitHere46","PacketEnemy00 = new PacketPrototype(0)<newline46mondego>PacketEnemy00.addData(Types.Int, 5) // health<newline46mondego>PacketEnemy00.addData(Types.String, 16) // name<newline46mondego>...<newline46mondego>"
"8103splitHere46","17709814splitHere46","Type = Bitstream.readInt(5)<newline46mondego>Prototype = PacketHolder.getPrototypeForPacketType(Type)<newline46mondego><newline46mondego>ReceivedPacket OfReceivedPacket = Prototype.deserilize(Bitstream)<newline46mondego><newline46mondego>// we need here a switch/if statement to determine how to handle the reading of the data<newline46mondego>switch(Type)<newline46mondego>{<newline46mondego>  case 0: // PacketEnemy00<newline46mondego>"
"8104splitHere46","17709814splitHere46","Prototype.deserilize"
"8105splitHere46","17709814splitHere46","int UnitHealth = OfReceivedPacket.getInt(/* index, we want the 1st int */0);<newline46mondego>   string UnitName = OfReceivedPacket.getString(/* index, we want the 1st string */0);<newline46mondego><newline46mondego>   and so on...<newline46mondego>   break;<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"8106splitHere46","17709948splitHere46","SAXReader reader = new SAXReader(<newline46mondego>            org.ccil.cowan.tagsoup.Parser.class.getName());<newline46mondego>    Document doc = reader.read(...);<newline46mondego>    XMLWriter writer = new XMLWriter(System.out);<newline46mondego>    writer.write(doc);<newline46mondego>"
"8107splitHere46","17709948splitHere46","<table:table-cell xmlns:table=<doubleQuotes46>urn:x-prefix:table<doubleQuotes46> xmlns:html=<doubleQuotes46>http://www.w3.org/1999/xhtml<doubleQuotes46> xmlns:office=<doubleQuotes46>urn:x-prefix:office<doubleQuotes46> table:style-name=<doubleQuotes46>Table2.A1<doubleQuotes46> office:value-type=<doubleQuotes46>string<doubleQuotes46>><newline46mondego>   <text:p xmlns:text=<doubleQuotes46>urn:x-prefix:text<doubleQuotes46> text:style-name=<doubleQuotes46>P32<doubleQuotes46>><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T1<doubleQuotes46>>test description</text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T2<doubleQuotes46>> </text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T1<doubleQuotes46>>17/07/2013</text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T2<doubleQuotes46>> </text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T1<doubleQuotes46>>test</text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T2<doubleQuotes46>> </text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T1<doubleQuotes46>>test</text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T3<doubleQuotes46>></text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T1<doubleQuotes46>>test</text:span><newline46mondego>      <text:span text:style-name=<doubleQuotes46>T3<doubleQuotes46>>test <!-- end tag is missing --><newline46mondego>  </text:span></text:p><newline46mondego></table:table-cell><newline46mondego>"
"8108splitHere46","17710118splitHere46","\<doubleQuotes46>,"
"8109splitHere46","17710118splitHere46","\\<doubleQuotes46>,"
"8110splitHere46","17710118splitHere46",","
"8111splitHere46","17710118splitHere46","\<doubleQuotes46>"
"8112splitHere46","17710118splitHere46","\<doubleQuotes46>, <doubleQuotes46>"
"8113splitHere46","17710118splitHere46","\\<doubleQuotes46>, <doubleQuotes46>"
"8114splitHere46","17710118splitHere46","\<doubleQuotes46><nl>"
"8115splitHere46","17710118splitHere46","\\<doubleQuotes46><nl>"
"8116splitHere46","17710118splitHere46","<nl>"
"8117splitHere46","17710118splitHere46","\r\n"
"8118splitHere46","17710118splitHere46","\r"
"8119splitHere46","17710118splitHere46","\n"
"8120splitHere46","17710121splitHere46","ByteBuffer"
"8121splitHere46","17710121splitHere46","GetDirectByteBufferAddress"
"8122splitHere46","17710121splitHere46","GetByteArrayElements"
"8123splitHere46","17710121splitHere46","ReleaseByteArrayElements"
"8124splitHere46","17710121splitHere46","ByteBuffer"
"8125splitHere46","17710121splitHere46","ByteBuffer"
"8126splitHere46","17710121splitHere46","memcpy"
"8127splitHere46","17710121splitHere46","ByteBuffer"
"8128splitHere46","17710121splitHere46","void Java_MyClass_createThumbnails(JNIEnv* env, jobject, jobject input, jobjectArray output)<newline46mondego>{<newline46mondego>    jsize nThumbnails = env->GetArrayLength(output) - 1;<newline46mondego>    void* inputPtr = env->GetDirectBufferAddress(input);<newline46mondego>    jlong inputLength = env->GetDirectBufferCapacity(input);<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    void* hash = ...; // a pointer to the hash data<newline46mondego>    int hashDataLength = ...;<newline46mondego>    void** thumbnails = ...; // an array of pointers, each one points to thumbnail data<newline46mondego>    int* thumbnailDataLengths = ...; // an array of ints, each one is the length of the thumbnail data with the same index<newline46mondego><newline46mondego>    jobject hashBuffer = env->NewDirectByteBuffer(hash, hashDataLength);<newline46mondego>    env->SetObjectArrayElement(output, 0, hashBuffer);<newline46mondego><newline46mondego>    for (int i = 0; i < nThumbnails; i++)<newline46mondego>        env->SetObjectArrayElement(output, i + 1, env->NewDirectByteBuffer(thumbnails[i], thumbnailDataLengths[i]));<newline46mondego>}<newline46mondego>"
"8129splitHere46","17710121splitHere46","GetByteArrayRegion"
"8130splitHere46","17710121splitHere46","GetByteArrayElements"
"8131splitHere46","17710121splitHere46","ByteBuffer"
"8132splitHere46","17710121splitHere46","GetByteArrayElements"
"8133splitHere46","17710121splitHere46","ByteBuffer"
"8134splitHere46","17710121splitHere46","ByteBuffer"
"8135splitHere46","17710121splitHere46","ByteBuffer"
"8136splitHere46","17710121splitHere46","NewDirectByteBuffer"
"8137splitHere46","17710121splitHere46","ByteBuffer"
"8138splitHere46","17710121splitHere46","ByteBuffer"
"8139splitHere46","17710121splitHere46","NewDirectByteBuffer"
"8140splitHere46","17710204splitHere46","MyPrMethod()"
"8141splitHere46","17710263splitHere46","/"
"8142splitHere46","17710263splitHere46","-"
"8143splitHere46","17710263splitHere46","String encodeURL(String s) {<newline46mondego>    byte[] bytes = s.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    for (byte b : bytes) {<newline46mondego>        String hex = String.format(<doubleQuotes46>%%%02X<doubleQuotes46>, ((int)b) & 0xFF);<newline46mondego>        sb.append(hex);<newline46mondego>    }<newline46mondego>    return sb.toString();<newline46mondego>}<newline46mondego>"
"8144splitHere46","17710267splitHere46","HOUR"
"8145splitHere46","17710267splitHere46","<doubleQuotes46>"
"8146splitHere46","17710267splitHere46","TABLE"
"8147splitHere46","17710367splitHere46","Classes contained within WEB-INF/lib or WEB-INF/classes have priority over classes on the parent class loader. This is the opposite of the normal behaviour of a java 2 class loader."
"8148splitHere46","17710431splitHere46","public static void main(String[] args){<newline46mondego>    String fichier =<doubleQuotes46>E:\\fichiers\\test.txt<doubleQuotes46>;<newline46mondego><newline46mondego>    int tab[] = {2, 2, 20, 8, 20, 8, 4, 3, 7, 3, 3, 3, 18, 139};<newline46mondego>    String tabS[] = new String[14];<newline46mondego><newline46mondego>    try {<newline46mondego><newline46mondego>        InputStream       ips  = new FileInputStream(fichier); <newline46mondego>        InputStreamReader ipsr = new InputStreamReader(ips);<newline46mondego>        BufferedReader    br   = new BufferedReader(ipsr);<newline46mondego><newline46mondego>        for(int i=0; i<tab.length; i++){<newline46mondego><newline46mondego>            char cbuf[] = new char[tab[i]];<newline46mondego><newline46mondego>            br.read(cbuf, 0, tab[i]);<newline46mondego><newline46mondego>            tabS[i] = new String(cbuf);<newline46mondego>            System.out.println(tabS[i]);<newline46mondego>        }<newline46mondego><newline46mondego>    } catch (Exception e){<newline46mondego>        System.out.println(e.toString());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8149splitHere46","17710478splitHere46","e.g. C:\Progra~1\Java\jre6"
"8150splitHere46","17710478splitHere46","Progra~1 = 'Program Files'<newline46mondego>Progra~2 = 'Program Files(x86)'<newline46mondego>"
"8151splitHere46","17710626splitHere46","# Create PKCS12 keystore from private key and public certificate.<newline46mondego>openssl pkcs12 -export -name myservercert -in selfsigned.crt -inkey server.key -out keystore.p12<newline46mondego><newline46mondego># Convert PKCS12 keystore into a JKS keystore<newline46mondego>keytool -importkeystore -destkeystore mykeystore.jks -srckeystore keystore.p12 -srcstoretype pkcs12 -alias myservercert<newline46mondego>"
"8152splitHere46","17710626splitHere46","keytool -list -v -keystore mykeystore.jks<newline46mondego>"
"8153splitHere46","17710655splitHere46","if (this.hoteis.length > 1 && this.hoteis[this.hoteis.length - 1] != null)"
"8154splitHere46","17710655splitHere46","public static void deleteHotel(String hotelName) {<newline46mondego>    for (int i = 0; i < hotels.length; i++) {<newline46mondego>        if (hotels[i].getName().equalsIgnoreCase(hotelName)) { //searches the array, looking for the object that has the inputted name<newline46mondego>            hotels[i] = null; //makes that object null<newline46mondego>            for (int x = i; x < hotels.length -1; x++) <newline46mondego>                hotels[x] = hotels[x + 1]; //makes that null position point to the next position that has an object, and then that position points to the object in the next position and so on<newline46mondego><newline46mondego>            Hotel[] hoteisTemp = new Hotel[hotels.length - 1];<newline46mondego>            for(int x = 0; x < hotels.length - 1; x++) //create a new array with one less position, and then copy the objects on the old array into the new array, then point the old array to the new array<newline46mondego>                hoteisTemp[x] = hotels[x];<newline46mondego><newline46mondego>            hotels = hoteisTemp;<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8155splitHere46","17710660splitHere46","// add JLabels to a JPanel that uses GridLayout set to have<newline46mondego>// 1 column and <doubleQuotes46>rows<doubleQuotes46> number of rows.<newline46mondego>JPanel labelHolder = new JPanel(new GridLayout(rows, 1);<newline46mondego>lbl = new JLabel[rows];<newline46mondego>for (int i = 0; i < rows; i++) {<newline46mondego>  lbl[i] = new JLabel(arrayResultRow[i].toString());<newline46mondego>  labelHolder.add(lbl[i]);<newline46mondego>}<newline46mondego>"
"8156splitHere46","17710806splitHere46","ServletContextListener"
"8157splitHere46","17710806splitHere46","EntityManager"
"8158splitHere46","17710822splitHere46","BLOB"
"8159splitHere46","17710842splitHere46","StringBuffer sb = new StringBuffer();<newline46mondego>while (br.ready()) {<newline46mondego>    char[] c = new char[] { 1024 };<newline46mondego>    br.read(c);<newline46mondego>    sb.append(c);<newline46mondego>}<newline46mondego>"
"8160splitHere46","17710905splitHere46","numberOfStudents <doubleQuotes46>\n<doubleQuotes46><newline46mondego>"
"8161splitHere46","17710905splitHere46","System.out.printf(<doubleQuotes46>Number of students: <doubleQuotes46> + numberOfStudents + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>"
"8162splitHere46","17710905splitHere46","println"
"8163splitHere46","17710905splitHere46","System.out.println(<doubleQuotes46>Number of students: <doubleQuotes46> + numberOfStudents);<newline46mondego>"
"8164splitHere46","17711104splitHere46","List<?>"
"8165splitHere46","17711104splitHere46","List<?> l = new ArrayList<Object>()"
"8166splitHere46","17711104splitHere46","?"
"8167splitHere46","17711106splitHere46","String cookie = CookieManager.getInstance().getCookie(<doubleQuotes46>http://the.url.com<doubleQuotes46>);<newline46mondego><newline46mondego>if(cookie != null){<newline46mondego>    //do something<newline46mondego>}<newline46mondego>else{<newline46mondego>    //do something else<newline46mondego>}<newline46mondego>"
"8168splitHere46","17711191splitHere46","double * rest = (double *)env->GetDirectBufferAddress(bytebuffer + 12);<newline46mondego>"
"8169splitHere46","17711191splitHere46","bytebuffer"
"8170splitHere46","17711191splitHere46","jobject"
"8171splitHere46","17711191splitHere46","GetDirectBufferAddress()"
"8172splitHere46","17711191splitHere46","int"
"8173splitHere46","17711191splitHere46","double * rest = (double *)((char *)env->GetDirectBufferAddress(bytebuffer) + 12);<newline46mondego>"
"8174splitHere46","17711191splitHere46","int"
"8175splitHere46","17711191splitHere46","double"
"8176splitHere46","17711191splitHere46","void * address = env->GetDirectBufferAddress(bytebuffer);<newline46mondego>int * firstInt = (int *)address;<newline46mondego>int * secondInt = (int *)address + 1;<newline46mondego>int * doubleCount = (int *)address + 2;<newline46mondego>double * rest = (double *)((char *)address + 3 * sizeof(int));<newline46mondego><newline46mondego>// you said the third int represents the number of doubles following<newline46mondego>for (int i = 0; i < doubleCount; i++) {<newline46mondego>    double d = *rest + i; // or rest[i]<newline46mondego>    // do something with the d double<newline46mondego>}<newline46mondego>"
"8177splitHere46","17711259splitHere46","GenericDao<T>"
"8178splitHere46","17711259splitHere46","GenericDao<object.class>"
"8179splitHere46","17711302splitHere46","public static boolean isOnline(Context context) {<newline46mondego>    ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);<newline46mondego>    NetworkInfo netInfo = cm.getActiveNetworkInfo();<newline46mondego>    if (netInfo != null && netInfo.isConnected()) {<newline46mondego>       return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"8180splitHere46","17711302splitHere46","if(isOnline(getApplicationContext()){<newline46mondego>    webview.loadUrl(<doubleQuotes46>http://the.url.com<doubleQuotes46>)<newline46mondego>}<newline46mondego>else{<newline46mondego>    Toast.makeText(context, text, duration).show()<newline46mondego>}<newline46mondego>"
"8181splitHere46","17711302splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.ACCESS_NETWORK_STATE<doubleQuotes46> /><newline46mondego>"
"8182splitHere46","17711318splitHere46","data"
"8183splitHere46","17711318splitHere46","if ($num_rows == 1) {<newline46mondego>    $row = mysql_fetch_assoc($result);<newline46mondego>    printf(<doubleQuotes46>%s\n<doubleQuotes46>,$row['data']);<newline46mondego>}<newline46mondego>"
"8184splitHere46","17711318splitHere46","BufferedReader in = new BufferedReader(new InputStreamReader(<newline46mondego>                                con.getInputStream()));<newline46mondego>String message = in.readLine();<newline46mondego>in.close();<newline46mondego>"
"8185splitHere46","17711318splitHere46","data"
"8186splitHere46","17711322splitHere46","java.io.Externalizable"
"8187splitHere46","17711322splitHere46","java.io.Serializable"
"8188splitHere46","17711322splitHere46","private void writeObject(ObjectOutputStream oos) {<newline46mondego>    oos.defaultWriteObject();<newline46mondego>    // custom serialization<newline46mondego>    oos.writeInt(notSerializableObj.getId());<newline46mondego>}<newline46mondego><newline46mondego>private void readObject(ObjectInputStream ois) {<newline46mondego>    ois.defaultReadObject();<newline46mondego>    // custom de-serialization<newline46mondego>    notSerializableObj = new NotSerializableObj(ois.readInt());<newline46mondego>}<newline46mondego>"
"8189splitHere46","17711322splitHere46","java.io.Externalizable"
"8190splitHere46","17711338splitHere46","split()"
"8191splitHere46","17711338splitHere46","Integer.parseInt()"
"8192splitHere46","17711570splitHere46","Memory"
"8193splitHere46","17711570splitHere46","Pointer"
"8194splitHere46","17711570splitHere46","Memory"
"8195splitHere46","17711596splitHere46","String[][] SundayArray = dates.toArray(new String[dates.size()]);<newline46mondego>"
"8196splitHere46","17711596splitHere46","new String[dates.size()]"
"8197splitHere46","17711596splitHere46","String[][] SundayArray"
"8198splitHere46","17711596splitHere46","List<LocalDate>"
"8199splitHere46","17711596splitHere46","String[]"
"8200splitHere46","17711596splitHere46","List<String> temp = new ArrayList(dates.size());<newline46mondego>for (LocalDate date : dates) {<newline46mondego>    temp.add(date.toString()); //toString() or the appropriate method<newline46mondego>}<newline46mondego>String[] SundayArray = temp.toArray(new String[dates.size()]);<newline46mondego>"
"8201splitHere46","17711707splitHere46","public static void main(java.lang.String[]);<newline46mondego>    Code:<newline46mondego>       0: iconst_0      <newline46mondego>       1: anewarray     #2                  // class java/lang/String<newline46mondego>       4: astore_1      <newline46mondego>       5: aload_1       <newline46mondego>       6: invokestatic  #3                  // Method foo:([Ljava/lang/String;)V<newline46mondego>       9: return <newline46mondego>"
"8202splitHere46","17711707splitHere46","public static void main(java.lang.String[]);<newline46mondego>    Code:<newline46mondego>       0: iconst_0      <newline46mondego>       1: anewarray     #2                  // class java/lang/String<newline46mondego>       4: invokestatic  #3                  // Method foo:([Ljava/lang/String;)V<newline46mondego>       7: return  <newline46mondego>"
"8203splitHere46","17711707splitHere46","astore_1"
"8204splitHere46","17711707splitHere46","aload_1"
"8205splitHere46","17711707splitHere46","a"
"8206splitHere46","17711741splitHere46","System"
"8207splitHere46","17711741splitHere46","user.dir"
"8208splitHere46","17711741splitHere46","System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>);"
"8209splitHere46","17711741splitHere46","AppData\Roaming"
"8210splitHere46","17711741splitHere46","AppData\Roaming"
"8211splitHere46","17711741splitHere46","AppData\Local"
"8212splitHere46","17711763splitHere46","cat tune.wav > /dev/dsp"
"8213splitHere46","17711767splitHere46","public enum Categories {<newline46mondego>    GENERAL, LIGHTS, EFFECTS, INTERACTIVE, UI(<doubleQuotes46>UI<doubleQuotes46>), ...<newline46mondego>"
"8214splitHere46","17711767splitHere46","Enum"
"8215splitHere46","17711767splitHere46","Categories.GENERAL, Categories.LIGHTS, Categories.UI, ...<newline46mondego>"
"8216splitHere46","17711767splitHere46","Enums"
"8217splitHere46","17711767splitHere46","GENERAL"
"8218splitHere46","17711767splitHere46","Categories() {<newline46mondego>    name = toString().toLowerCase(Locale.getDefault());<newline46mondego>    name = name.substring(0, 1).toUpperCase(Locale.getDefault()) +<newline46mondego>           name.substring(1, name.length());<newline46mondego>}<newline46mondego>"
"8219splitHere46","17711767splitHere46","UI(<doubleQuotes46>UI<doubleQuotes46>)"
"8220splitHere46","17711767splitHere46","Categories(String name) {<newline46mondego>    this.name = name;<newline46mondego>}<newline46mondego>"
"8221splitHere46","17711767splitHere46","Enum"
"8222splitHere46","17711767splitHere46","private String name;<newline46mondego>"
"8223splitHere46","17711767splitHere46","Categories.UI.getName();<newline46mondego>"
"8224splitHere46","17711912splitHere46","revalidate"
"8225splitHere46","17711912splitHere46","public void actionPerformed(ActionEvent a){<newline46mondego>    JPanel panel = Game.Game();<newline46mondego>    this.remove(menu);<newline46mondego>    this.add(panel);   <newline46mondego>    this.revalidate();<newline46mondego>}<newline46mondego>"
"8226splitHere46","17711912splitHere46","CardLayout"
"8227splitHere46","17711912splitHere46","JFrame"
"8228splitHere46","17711912splitHere46","JPanel"
"8229splitHere46","17711979splitHere46","text()"
"8230splitHere46","17711979splitHere46","Elements links = doc.getElementsByTag(<doubleQuotes46>cite<doubleQuotes46>);  <newline46mondego>                String crawlingNode = links.html();<newline46mondego>                    crawlingNode = crawlingNode.replaceAll(<doubleQuotes46>(?=<).*?(>=?)<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>); //Remove undesired html tags<newline46mondego><newline46mondego>                    for (Element link : links) {<newline46mondego><newline46mondego>                    String linkText = link.text()+System.lineSeparator();<newline46mondego>                    System.out.println(linkText);<newline46mondego>                    httptest.WriteOnFile(writer, linkText);<newline46mondego>}<newline46mondego>"
"8231splitHere46","17711980splitHere46","\\"
"8232splitHere46","17711980splitHere46","\\\\"
"8233splitHere46","17711980splitHere46","String str = <doubleQuotes46>{\<doubleQuotes46>path\<doubleQuotes46>:\<doubleQuotes46>folderA\\\\myfileA\<doubleQuotes46>}<doubleQuotes46>;<newline46mondego>"
"8234splitHere46","17712295splitHere46","background"
"8235splitHere46","17712295splitHere46","android:background=<doubleQuotes46>@drawable/your_file<doubleQuotes46>"
"8236splitHere46","17712307splitHere46","result = (prime * result + ((id == null) ? 0 : id.hashCode())) + <newline46mondego>         (prime * (prime * result + ((id == null) ? 0 : id.hashCode())) + <newline46mondego>         ((name == null) ? 0 : name.hashCode())); <newline46mondego>"
"8237splitHere46","17712327splitHere46","if(startTime <= now && endTime >= now || (startTime > endTime && (now <= endTime || now >= startTime)))<newline46mondego>"
"8238splitHere46","17712341splitHere46","new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy hh:mm:ss aa<doubleQuotes46>)<newline46mondego>"
"8239splitHere46","17712341splitHere46","hh"
"8240splitHere46","17712341splitHere46","HH"
"8241splitHere46","17712341splitHere46","HH"
"8242splitHere46","17712341splitHere46","SimpleDateFormat"
"8243splitHere46","17712488splitHere46","public class PropertiesWrapper {<newline46mondego>   private final Properties props;<newline46mondego>   ...<newline46mondego>   public String get(MyEnum key) {  return props.get(key.toString());<newline46mondego>}<newline46mondego>"
"8244splitHere46","17712488splitHere46","toString()"
"8245splitHere46","17712488splitHere46","name()"
"8246splitHere46","17712488splitHere46","toString()"
"8247splitHere46","17712488splitHere46","Properties"
"8248splitHere46","17712532splitHere46","ServiceLocator"
"8249splitHere46","17712532splitHere46","@ExampleAnnotation(<doubleQuotes46>someId<doubleQuotes46>)"
"8250splitHere46","17712532splitHere46","public class AnnotationServiceLocator implements ServiceLocator {<newline46mondego><newline46mondego>    @Autowired<newline46mondego>    private ApplicationContext context;<newline46mondego>    private Map<String, Service> services;<newline46mondego><newline46mondego>    public Service getService(String id) {<newline46mondego>        checkServices();<newline46mondego>        return services.get(id);<newline46mondego>    }<newline46mondego><newline46mondego>    private void checkServices() {<newline46mondego>        if (services == null) {<newline46mondego>            services = new HashMap<String, Service>();<newline46mondego>            Map<String, Object> beans = context.getBeansWithAnnotation(ExampleAnnotation.class);<newline46mondego>            for (Object bean : beans.values()) {<newline46mondego>                ExampleAnnotation ann = bean.getClass().getAnnotation(ExampleAnnotation.class);<newline46mondego>                services.put(ann.value(), (Service) bean);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"8251splitHere46","17712620splitHere46","firstMin"
"8252splitHere46","17712620splitHere46","secondMin"
"8253splitHere46","17712620splitHere46","firstMax"
"8254splitHere46","17712620splitHere46","secondMax"
"8255splitHere46","17712620splitHere46","if (value > firstMax) {<newline46mondego>    secondMax = firstMax;<newline46mondego>    firstMax = value;<newline46mondego>} <newline46mondego>else if (value > secondMax) {<newline46mondego>    secondMax = value;<newline46mondego>}<newline46mondego><newline46mondego>if (value < firstMin) {<newline46mondego>    secondMin = firstMin; <newline46mondego>    firstMin = value;<newline46mondego>}<newline46mondego>else if (value < secondMin) {<newline46mondego>    secondMin = value;<newline46mondego>}<newline46mondego>"
"8256splitHere46","17712620splitHere46","firstMin"
"8257splitHere46","17712620splitHere46","secondMin"
"8258splitHere46","17712620splitHere46","firstMax"
"8259splitHere46","17712620splitHere46","secondMax"
"8260splitHere46","17712620splitHere46","O(1)"
"8261splitHere46","17712668splitHere46","if (left.isEmpty() || right.isEmpty()){<newline46mondego>        newT.addAll(left);<newline46mondego>        newT.addAll(right);<newline46mondego>        return newT;<newline46mondego>    }<newline46mondego>"
"8262splitHere46","17712668splitHere46","null"
"8263splitHere46","17712668splitHere46","if (!t.isEmpty()){ ... return newT;}<newline46mondego>return null;<newline46mondego>"
"8264splitHere46","17712668splitHere46","ArrayList.addAll()"
"8265splitHere46","17712668splitHere46","null"
"8266splitHere46","17712668splitHere46","ArrayList"
"8267splitHere46","17712668splitHere46","null"
"8268splitHere46","17712693splitHere46","X"
"8269splitHere46","17712693splitHere46","Y"
"8270splitHere46","17712693splitHere46","(Cat)dog"
"8271splitHere46","17712693splitHere46","Foo< >"
"8272splitHere46","17712693splitHere46","Iterable< >"
"8273splitHere46","17712693splitHere46","0. None<newline46mondego>    1. Bounded    <doubleQuotes46>? extends Something<doubleQuotes46><newline46mondego>    2. Unbounded  <doubleQuotes46>?<doubleQuotes46><newline46mondego>"
"8274splitHere46","17712693splitHere46","wildcard#1    wildcard#2     should_compile   javac     eclipse<newline46mondego><newline46mondego>00   -             -              Y                Y         N<newline46mondego>01   -             ? extends      N                N         N<newline46mondego>02   -             ?              N                N         N<newline46mondego>10   ? extends     -              Y                N         Y<newline46mondego>11   ? extends     ? extends      Y                N         Y<newline46mondego>12   ? extends     ?              Y                Y         Y<newline46mondego>20   ?             -              Y                Y         Y<newline46mondego>"
"8275splitHere46","17712693splitHere46","should_compile"
"8276splitHere46","17712693splitHere46","10 and 11"
"8277splitHere46","17712693splitHere46","00"
"8278splitHere46","17712693splitHere46","void test00(Foo<Iterable<String>> foo) {<newline46mondego>    Bar<?> bar = (Bar<?>) foo;<newline46mondego>}<newline46mondego><newline46mondego>the question is, could there be a class/interface `X`, such that<newline46mondego>      Bar<X> <: Foo<Iterable<String>> <newline46mondego>=>    Foo<Iterable<X>> <: Foo<Iterable<String>> <newline46mondego>=>    Iterable<X> = Iterable<String><newline46mondego>=>    X = String<newline46mondego>so the answer is yes, the cast makes sense.<newline46mondego>"
"8279splitHere46","17712693splitHere46","01"
"8280splitHere46","17712693splitHere46","Foo<Iterable<X>> <: Foo<Iterable<? extends String>><newline46mondego>=>   Iterable<X> = Iterable<? extends String><newline46mondego>=>   NO SOLUTION<newline46mondego>     note that Iterable<String> != Iterable<? extends String><newline46mondego>"
"8281splitHere46","17712693splitHere46","11"
"8282splitHere46","17712693splitHere46","Foo<Iterable<X>>  <: Foo<? extends Iterable<? extends String>><newline46mondego>=>   Iterable<X> <: Iterable<? extends String><newline46mondego>=>   X <: String<newline46mondego>"
"8283splitHere46","17712693splitHere46","01"
"8284splitHere46","17712693splitHere46","Iterable"
"8285splitHere46","17712693splitHere46","class Bar<T> implements Foo<Iterable<? extends T>><newline46mondego>"
"8286splitHere46","17712794splitHere46","else if (a==b && b==c);//<-- semicolon here<newline46mondego>"
"8287splitHere46","17712794splitHere46","if"
"8288splitHere46","17712794splitHere46","if (!((a == b) && (a == c) && (b == c))); //<-- semicolon here<newline46mondego>{<newline46mondego>   System.out.println(<doubleQuotes46>Scalene Triangle<doubleQuotes46>);<newline46mondego>}<newline46mondego>if (((a + b) >= (c)) ||((a + b) >= (b)) ||((b +c) >= (a))); //<-- semicolon here<newline46mondego>{<newline46mondego>   System.out.println(<doubleQuotes46>Not a Triangle<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8289splitHere46","17712794splitHere46","<doubleQuotes46>Scalene Triangle<doubleQuotes46>"
"8290splitHere46","17712794splitHere46","<doubleQuotes46>Not a Triangle<doubleQuotes46>"
"8291splitHere46","17712794splitHere46","if"
"8292splitHere46","17712800splitHere46","playBounds = new Rectangle( 240, 400, 157, 177);<newline46mondego>batcher.drawSprite(playBounds.lowerLeft.x+playBounds.width/2, playBounds.lowerLeft.y+playBounds.height/2, playBounds.width, playBounds.height, Assets.mainMenu);<newline46mondego>"
"8293splitHere46","17712820splitHere46","inputLine"
"8294splitHere46","17712820splitHere46","inputLine = inputLine.replaceAll(<doubleQuotes46>[^a-zA-Z'\\s]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).toLowerCase();<newline46mondego>"
"8295splitHere46","17712820splitHere46",".replaceAll(<doubleQuotes46>\\p{Punct}<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)"
"8296splitHere46","17713113splitHere46","import java.util.HashMap;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Set;<newline46mondego>....<newline46mondego><newline46mondego>Map<String,String> mMap = new HashMap<String, String>();<newline46mondego>mMap.put(<doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>something<doubleQuotes46>);<newline46mondego>Iterator iter = mMap.entrySet().iterator();<newline46mondego>while (iter.hasNext()) {<newline46mondego>    Map.Entry mEntry = (Map.Entry) iter.next();<newline46mondego>    System.out.println(mEntry.getKey() + <doubleQuotes46> : <doubleQuotes46> + mEntry.getValue());<newline46mondego>}<newline46mondego>"
"8297splitHere46","17713133splitHere46","for(int counter = 1; counter < 100_000;    )<newline46mondego>                                       ^^^<newline46mondego>"
"8298splitHere46","17713133splitHere46","counter"
"8299splitHere46","17713133splitHere46","++counter"
"8300splitHere46","17713133splitHere46","Thread"
"8301splitHere46","17713225splitHere46","if (x[i][j] % 1 == 0 && x[i][j] != 0 ) {<newline46mondego>"
"8302splitHere46","17713225splitHere46","!="
"8303splitHere46","17713225splitHere46","=="
"8304splitHere46","17713225splitHere46","x[i][j]"
"8305splitHere46","17713225splitHere46","true"
"8306splitHere46","17713225splitHere46","false"
"8307splitHere46","17713345splitHere46","java.lang.*"
"8308splitHere46","17713345splitHere46","System"
"8309splitHere46","17713345splitHere46","Object"
"8310splitHere46","17713345splitHere46","String"
"8311splitHere46","17713345splitHere46","Math"
"8312splitHere46","17713447splitHere46","sqlite"
"8313splitHere46","17713447splitHere46","onCreate"
"8314splitHere46","17713447splitHere46","sqlite as = new sqlite(); <newline46mondego>"
"8315splitHere46","17713447splitHere46","startActivity(new Intent(myintent))"
"8316splitHere46","17713447splitHere46","sqlite as = new sqlite(); //sqlite class extends activity<newline46mondego> SQLiteDatabase sqLiteDB = null; // null value<newline46mondego> as.sqlitetry(sqLiteDB);<newline46mondego> as.sqlinit(); <newline46mondego>"
"8317splitHere46","17713447splitHere46","Activity"
"8318splitHere46","17713448splitHere46","Map myMap<String>, Integer> myData = new HashMap<String, Integer>();<newline46mondego>"
"8319splitHere46","17713448splitHere46","myMap.keySet()"
"8320splitHere46","17713448splitHere46","myMap.values()"
"8321splitHere46","17713448splitHere46","List<String> strings = new ArrayList<String>(myMap.keySet()); // get your strings<newline46mondego>List<Integer> numbers = new ArrayList<Integer>(myMap.values(); // get your numbers<newline46mondego>"
"8322splitHere46","17713541splitHere46","@Produces({ MediaType.APPLICATION_JSON })"
"8323splitHere46","17713541splitHere46","@Produces({ MediaType.APPLICATION_JSON })"
"8324splitHere46","17713557splitHere46","M = A*B.transp(); // where M, A, B are matrices<newline46mondego>"
"8325splitHere46","17713557splitHere46","class Matrix;<newline46mondego><newline46mondego>class Transposed<newline46mondego>{<newline46mondego>public:<newline46mondego>  Transposed(Matrix &matrix) : m_matrix(matrix) {}<newline46mondego>  Matrix & obj (void) { return m_matrix; }<newline46mondego>private:<newline46mondego>  Matrix & m_matrix;<newline46mondego>};<newline46mondego><newline46mondego>class MatrixMatrixMulTransPosed<newline46mondego>{<newline46mondego>public:<newline46mondego>  MatrixMatrixMulTransPosed(Matrix &matrix, Transposed &trans) <newline46mondego>    : m_matrix(matrix), m_transposed(trans.obj()) {}<newline46mondego>  Matrix & matrix (void) { return m_matrix; }<newline46mondego>  Matrix & transposed (void) { return m_transposed; }<newline46mondego>private:<newline46mondego>  Matrix & m_matrix;<newline46mondego>  Matrix & m_transposed;<newline46mondego>};<newline46mondego><newline46mondego>class Matrix<newline46mondego>{<newline46mondego>  public:<newline46mondego>    MatrixMatrixMulTransPosed operator* (Transposed &rhs)<newline46mondego>    { <newline46mondego>      return MatrixMatrixMulTransPosed(*this, rhs); <newline46mondego>    }<newline46mondego><newline46mondego>    Matrix& operator= (MatrixMatrixMulTransPosed &mmtrans)<newline46mondego>    {<newline46mondego>      // Actual computation goes here and is stored in this.<newline46mondego>      // using mmtrans.matrix() and mmtrans.transposed()<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"8326splitHere46","17713733splitHere46","public interface I {<newline46mondego>    void methodFromExternalAClass();<newline46mondego>    void methodFromExternalBClass();<newline46mondego>}<newline46mondego><newline46mondego>public class MyClass implements I {<newline46mondego>    @Override<newline46mondego>    public void methodFromExternalAClass() {<newline46mondego>         new A().someMethod();<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public void methodFromExternalBClass() {<newline46mondego>         new B().someMethod();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8327splitHere46","17713796splitHere46","@SafeVarargs"
"8328splitHere46","17713796splitHere46","null"
"8329splitHere46","17713796splitHere46","CoreMatchers"
"8330splitHere46","17713796splitHere46","allOf"
"8331splitHere46","17713796splitHere46","Iterable"
"8332splitHere46","17713825splitHere46","com.sun.jersey.spi.container.servlet.ServletContainer"
"8333splitHere46","17713825splitHere46","<servlet><newline46mondego>        <servlet-name>REST</servlet-name><newline46mondego>        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class><newline46mondego>        <init-param><newline46mondego>            <param-name>com.sun.jersey.config.property.packages</param-name><newline46mondego>            <param-value><newline46mondego>                com.rest.services;<newline46mondego>            </param-value><newline46mondego>        </init-param><newline46mondego>        <load-on-startup>1</load-on-startup><newline46mondego>    </servlet><newline46mondego><newline46mondego>    <servlet-mapping><newline46mondego>        <servlet-name>REST</servlet-name><newline46mondego>        <url-pattern>/*</url-pattern><newline46mondego>    </servlet-mapping><newline46mondego>"
"8334splitHere46","17713853splitHere46","String#replaceAll"
"8335splitHere46","17713853splitHere46","String pattern = <doubleQuotes46>\\s*-\\s*<doubleQuotes46>;<newline46mondego>String s1 = <doubleQuotes46>abc- abc<doubleQuotes46>;<newline46mondego>String s2 = <doubleQuotes46>abc -abc<doubleQuotes46>;<newline46mondego>String s3 = <doubleQuotes46>abc - abc<doubleQuotes46>;<newline46mondego>String s4 = <doubleQuotes46>abc-abc<doubleQuotes46>;<newline46mondego>System.out.println(s1.replaceAll(pattern, <doubleQuotes46> - <doubleQuotes46>));<newline46mondego>System.out.println(s2.replaceAll(pattern, <doubleQuotes46> - <doubleQuotes46>));<newline46mondego>System.out.println(s3.replaceAll(pattern, <doubleQuotes46> - <doubleQuotes46>));<newline46mondego>System.out.println(s4.replaceAll(pattern, <doubleQuotes46> - <doubleQuotes46>));<newline46mondego>"
"8336splitHere46","17713853splitHere46","<doubleQuotes46>\\s*-\\s*<doubleQuotes46>"
"8337splitHere46","17713853splitHere46","\\s"
"8338splitHere46","17713853splitHere46","\s"
"8339splitHere46","17713853splitHere46","\\"
"8340splitHere46","17713853splitHere46","*"
"8341splitHere46","17713853splitHere46","-"
"8342splitHere46","17713888splitHere46","null"
"8343splitHere46","17713888splitHere46","Object"
"8344splitHere46","17713888splitHere46","A<B<C>>"
"8345splitHere46","17713888splitHere46","A<B<C>>"
"8346splitHere46","17713888splitHere46","A<?>"
"8347splitHere46","17713888splitHere46","A<B<C>>"
"8348splitHere46","17713888splitHere46","A<B<C>>"
"8349splitHere46","17713888splitHere46","A<B<?>>"
"8350splitHere46","17713888splitHere46","A<B<C>>"
"8351splitHere46","17713888splitHere46","Foo<A>"
"8352splitHere46","17713888splitHere46","Foo<B>"
"8353splitHere46","17713888splitHere46","A"
"8354splitHere46","17713888splitHere46","B"
"8355splitHere46","17713888splitHere46","A<B<?>>"
"8356splitHere46","17713888splitHere46","B<?>"
"8357splitHere46","17713888splitHere46","?"
"8358splitHere46","17713888splitHere46","? extends something"
"8359splitHere46","17713888splitHere46","? super something"
"8360splitHere46","17713888splitHere46","A<B<?>>"
"8361splitHere46","17713888splitHere46","SubclassOfA<B<?>>"
"8362splitHere46","17713888splitHere46","A<B<C>>"
"8363splitHere46","17713888splitHere46","A<B<C>>"
"8364splitHere46","17713888splitHere46","SubclassOfA<B<C>>"
"8365splitHere46","17713892splitHere46","ShopJInternalFrame.shopHolderWAIType = new JLabel[itemSoldCount];<newline46mondego>"
"8366splitHere46","17713892splitHere46","JLabel"
"8367splitHere46","17713892splitHere46","ShopJInternalFrame.shopHolderWAIType[k].setText(waiType);<newline46mondego>"
"8368splitHere46","17713892splitHere46","shopHolderWAIType[k]"
"8369splitHere46","17713954splitHere46","JButton btnAdd = new JButton(<doubleQuotes46>Add<doubleQuotes46>);<newline46mondego>    btnAdd.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>        public void actionPerformed(ActionEvent arg0) {<newline46mondego><newline46mondego>            //setContentPane(contentPaneClient);<newline46mondego>            //panel.setVisible(true);<newline46mondego>            //contentPane.setVisible(true);<newline46mondego>            //contentPaneClient.setVisible(false);<newline46mondego><newline46mondego>            LigneJTab l = new LigneJTab(textFieldPrenomClient.getText(),textFieldNomClient.getText(), textFieldAdresseClient.getText(), chckbxHomme.isSelected(), Sport.FOOTBALL);<newline46mondego>            myModel.addLine(l);<newline46mondego><newline46mondego>            panel.setVisible(true);<newline46mondego>            contentPane.setVisible(true);<newline46mondego>            setContentPane(contentPane);<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>    btnAdd.setBounds(263, 40, 117, 29);<newline46mondego>    contentPaneClient.add(btnAdd);<newline46mondego>"
"8370splitHere46","17713954splitHere46","setContentPane(contentPane);"
"8371splitHere46","17714101splitHere46",".subtract( y1.multiply( x2 ).add( z1.multiply( w2 ) ) );<newline46mondego>"
"8372splitHere46","17714101splitHere46",".subtract( y1.multiply( x2 ) ).add( z1.multiply( w2 ) );  <newline46mondego>"
"8373splitHere46","17714158splitHere46","paint"
"8374splitHere46","17714158splitHere46","update"
"8375splitHere46","17714158splitHere46","paint"
"8376splitHere46","17714158splitHere46","RepaintManager"
"8377splitHere46","17714158splitHere46","paint"
"8378splitHere46","17714158splitHere46","paintComponent"
"8379splitHere46","17714158splitHere46","paintBorder"
"8380splitHere46","17714158splitHere46","paintChildren"
"8381splitHere46","17714158splitHere46","paint"
"8382splitHere46","17714158splitHere46","super.paint"
"8383splitHere46","17714158splitHere46","paint"
"8384splitHere46","17714158splitHere46","paintComponent"
"8385splitHere46","17714158splitHere46","JPanel"
"8386splitHere46","17714158splitHere46","JTable"
"8387splitHere46","17714158splitHere46","super.paintComponent"
"8388splitHere46","17714158splitHere46","repaint"
"8389splitHere46","17714158splitHere46","RepaintManager"
"8390splitHere46","17714158splitHere46","paint"
"8391splitHere46","17714315splitHere46","subList"
"8392splitHere46","17714315splitHere46","addAll"
"8393splitHere46","17714315splitHere46","for"
"8394splitHere46","17714529splitHere46","while (scan.hasNext()) {<newline46mondego>    String line = scan.nextLine();<newline46mondego>    numberchars += line.toCharArray().length;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"8395splitHere46","17714529splitHere46","while (scan.hasNext()) {<newline46mondego>    String line = scan.nextLine();<newline46mondego>    numberchars += line.length;<newline46mondego>    // ...    <newline46mondego>}<newline46mondego>"
"8396splitHere46","17714529splitHere46","BufferedReader reader = new BufferedReader(<newline46mondego>    new InputStreamReader(<newline46mondego>        new FileInputStream(file), charsetName));<newline46mondego>int charCount = 0;<newline46mondego>while (reader.read() > -1) {<newline46mondego>    charCount++;<newline46mondego>}<newline46mondego>"
"8397splitHere46","17714610splitHere46","String"
"8398splitHere46","17714610splitHere46","public interface PathConstants {<newline46mondego><newline46mondego>    protected static final String SPRITES_PATH = <doubleQuotes46>Pictures/Sprites<doubleQuotes46>;<newline46mondego>    protected static final String SPRITES_MISC_PATH = SPRITES_PATH + <doubleQuotes46>/Misc<doubleQuotes46>;<newline46mondego>    protected static final String POKEMON_SPRITES_PATH = SPRITES_PATH + <doubleQuotes46>/Pokemon<doubleQuotes46>;<newline46mondego>    protected static final String POKEMONB_SPRITES_PATH = SPRITES_PATH + <doubleQuotes46>/PokemonB<doubleQuotes46>;<newline46mondego>    protected static final String STARTERS_MENU_PATH = <doubleQuotes46>Pictures/Menu/Starters<doubleQuotes46>;<newline46mondego>    protected static final String SPRITES_BATTLE_PATH = SPRITES_PATH + <doubleQuotes46>/Battle<doubleQuotes46>;<newline46mondego>    protected static final String MENU_BATTLE_PATH = SPRITES_BATTLE_PATH + <doubleQuotes46>/BattleMenu<doubleQuotes46>;<newline46mondego><newline46mondego>}<newline46mondego>"
"8399splitHere46","17714610splitHere46","public enum Images {<newline46mondego>    Cosmet(PathConstants.SPRITES_PATH + <doubleQuotes46>/Cosmet.png<doubleQuotes46>), CosmetB(<newline46mondego>           PathConstants.POKEMONB_SPRITES_PATH + <doubleQuotes46>/CosmetB.png<doubleQuotes46>), CosmetStart(<newline46mondego>           PathConstants.STARTERS_MENU_PATH + <doubleQuotes46>/CosmetStart.png<doubleQuotes46>),<newline46mondego><newline46mondego>    Tykepol(PathConstants.POKEMON_SPRITES_PATH + <doubleQuotes46>/Tykepol.png<doubleQuotes46>), TykepolB(<newline46mondego>            PathConstants.POKEMONB_SPRITES_PATH + <doubleQuotes46>/TykepolB.png<doubleQuotes46>), TykepolStart(<newline46mondego>            PathConstants.STARTERS_MENU_PATH + <doubleQuotes46>/TykepolStart.png<doubleQuotes46>),<newline46mondego><newline46mondego>    Embite(PathConstants.POKEMON_SPRITES_PATH + <doubleQuotes46>/Embite.png<doubleQuotes46>), EmbiteB(<newline46mondego>           PathConstants.POKEMONB_SPRITES_PATH + <doubleQuotes46>/EmbiteB.png<doubleQuotes46>), EmbiteStart(<newline46mondego>           PathConstants.STARTERS_MENU_PATH + <doubleQuotes46>/EmbiteStart.png<doubleQuotes46>),<newline46mondego><newline46mondego>    // Balls<newline46mondego>    Pokeball(PathConstants.SPRITES_MISC_PATH + <doubleQuotes46>/Pokeball.png<doubleQuotes46>), Pokeball4(<newline46mondego>             PathConstants.SPRITES_MISC_PATH + <doubleQuotes46>/Pokeball4.gif<doubleQuotes46>),<newline46mondego><newline46mondego>    // Outlines<newline46mondego>    Outline1(PathConstants.MENU_BATTLE_PATH + <doubleQuotes46>/Outline1.png<doubleQuotes46>), Outline2(<newline46mondego>             PathConstants.MENU_BATTLE_PATH + <doubleQuotes46>/Outline2.png<doubleQuotes46>), Outline3(<newline46mondego>             PathConstants.MENU_BATTLE_PATH + <doubleQuotes46>/Outline3.png<doubleQuotes46>), Outline4(<newline46mondego>             PathConstants.MENU_BATTLE_PATH + <doubleQuotes46>/Outline4.png<doubleQuotes46>);<newline46mondego>"
"8400splitHere46","17714610splitHere46","SPRITES_PATH"
"8401splitHere46","17714743splitHere46","<projectRoot>/plugin"
"8402splitHere46","17714743splitHere46","$ gradle uploadArchives"
"8403splitHere46","17714743splitHere46","<projectRoot>/consumer"
"8404splitHere46","17714743splitHere46","$ gradle checkitout"
"8405splitHere46","17714743splitHere46","package org.joefernandez.gradle;<newline46mondego><newline46mondego>import org.gradle.api.Project;<newline46mondego>import org.gradle.api.Plugin;<newline46mondego><newline46mondego>public class MyJavaPlugin implements Plugin<Project> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void apply(Project target) {<newline46mondego>        target.task(<doubleQuotes46>javaTask<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8406splitHere46","17714743splitHere46","package org.joefernandez.gradle;<newline46mondego><newline46mondego>import org.gradle.api.DefaultTask;<newline46mondego>import org.gradle.api.tasks.TaskAction;<newline46mondego><newline46mondego>public class MyJavaTask extends DefaultTask {<newline46mondego><newline46mondego>    @TaskAction<newline46mondego>    public void javaTask() {<newline46mondego>        System.out.println(<doubleQuotes46>Hello from MyJavaTask<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8407splitHere46","17714743splitHere46","implementation-class=org.joefernandez.gradle.MyJavaPlugin<newline46mondego>"
"8408splitHere46","17714743splitHere46","apply plugin: 'java'<newline46mondego><newline46mondego>dependencies {<newline46mondego>    compile gradleApi()<newline46mondego>}<newline46mondego><newline46mondego>apply plugin: 'maven'<newline46mondego><newline46mondego>repositories {<newline46mondego>    mavenCentral()<newline46mondego>}<newline46mondego><newline46mondego>dependencies {<newline46mondego>    testCompile 'junit:junit:4.11'<newline46mondego>}<newline46mondego><newline46mondego>group = 'org.joefernandez'<newline46mondego>version = '1.0-SNAPSHOT'<newline46mondego><newline46mondego>uploadArchives {<newline46mondego>    repositories {<newline46mondego>        mavenDeployer {<newline46mondego>            repository(url: uri('../repo'))<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8409splitHere46","17714743splitHere46","rootProject.name = 'MyJavaPlugin'<newline46mondego>"
"8410splitHere46","17714743splitHere46","apply plugin: 'java'<newline46mondego><newline46mondego>dependencies {<newline46mondego>    compile gradleApi()<newline46mondego>}<newline46mondego>"
"8411splitHere46","17714743splitHere46","buildscript {<newline46mondego>    repositories {<newline46mondego>        maven {<newline46mondego>            url uri('../repo')<newline46mondego>        }<newline46mondego>    }<newline46mondego>    dependencies {<newline46mondego>        classpath group: 'org.joefernandez',<newline46mondego>                   name: 'MyJavaPlugin',<newline46mondego>                version: '1.0-SNAPSHOT'<newline46mondego>    }<newline46mondego>}<newline46mondego>apply plugin: 'test-plugin'<newline46mondego><newline46mondego>task checkitout(type: org.joefernandez.gradle.MyJavaTask) {<newline46mondego>    println(<doubleQuotes46>running consumer task!<doubleQuotes46>)<newline46mondego>}<newline46mondego>"
"8412splitHere46","17714777splitHere46","Language level"
"8413splitHere46","17714936splitHere46","doReturn()"
"8414splitHere46","17714936splitHere46","when()"
"8415splitHere46","17714936splitHere46","private static class Meh<newline46mondego>{<newline46mondego>    public String meh() { return <doubleQuotes46>meh<doubleQuotes46>; }<newline46mondego>}<newline46mondego><newline46mondego>@Test<newline46mondego>public void testMeh()<newline46mondego>{<newline46mondego>    final Meh meh = spy(new Meh());<newline46mondego><newline46mondego>    doReturn(<doubleQuotes46>foo<doubleQuotes46>).doReturn(<doubleQuotes46>bar<doubleQuotes46>).doCallRealMethod().when(meh).meh();<newline46mondego><newline46mondego>    assertEquals(<doubleQuotes46>foo<doubleQuotes46>, meh.meh());<newline46mondego>    assertEquals(<doubleQuotes46>bar<doubleQuotes46>, meh.meh());<newline46mondego>    assertEquals(<doubleQuotes46>meh<doubleQuotes46>, meh.meh());<newline46mondego>}<newline46mondego>"
"8416splitHere46","17714936splitHere46","when(x.y()).thenReturn(z1,z2)"
"8417splitHere46","17714936splitHere46",".thenReturn()"
"8418splitHere46","17714936splitHere46","when(x.y()).thenReturn(z1).thenThrow().thenReturn(z2)<newline46mondego>"
"8419splitHere46","17714981splitHere46","import java.util.logging.Filter;<newline46mondego>import java.util.logging.LogRecord;<newline46mondego><newline46mondego>public class CustomFilter implements Filter {<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean isLoggable(LogRecord record) {<newline46mondego><newline46mondego>    if(record.getMessage().contains(<doubleQuotes46>issued server command: /login<doubleQuotes46>)) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        return true;<newline46mondego>            }<newline46mondego>      }<newline46mondego>}<newline46mondego>"
"8420splitHere46","17714981splitHere46","CustomFilter filter = new CustomFilter();<newline46mondego>    plugin.getServer().getLogger().setFilter(filter);<newline46mondego>"
"8421splitHere46","17715016splitHere46","run"
"8422splitHere46","17715016splitHere46","start"
"8423splitHere46","17715016splitHere46","Runnable"
"8424splitHere46","17715016splitHere46","Thread"
"8425splitHere46","17715016splitHere46","start"
"8426splitHere46","17715016splitHere46","run"
"8427splitHere46","17715016splitHere46","Runnable"
"8428splitHere46","17715016splitHere46","new SecondThreadDemo().run();<newline46mondego>new SecondThreadDemo().run();<newline46mondego>new Thread(new SecondThreadDemo(), <doubleQuotes46>T3<doubleQuotes46>).run();<newline46mondego>new Thread(new SecondThreadDemo(), <doubleQuotes46>T2<doubleQuotes46>).start();<newline46mondego>new SecondThreadDemo().run();<newline46mondego>new Thread(new SecondThreadDemo(), <doubleQuotes46>T3<doubleQuotes46>).start();<newline46mondego>"
"8429splitHere46","17715016splitHere46","T1 (run)<newline46mondego>T1 (run)<newline46mondego>T1 (run) (cause I'm in T1's thread context)<newline46mondego>// Then it all depends...this MIGHT be the output...<newline46mondego>{T1} (run)<newline46mondego>{T2} (start)<newline46mondego>{T3} (start)<newline46mondego>"
"8430splitHere46","17715096splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>            var v = $(<doubleQuotes46>li.ui-widget.ui-menuitem.ui-corner-all.ui-menu-parent<doubleQuotes46>);<newline46mondego>            $(v).bind(<doubleQuotes46>mouseover<doubleQuotes46>,function(event){<newline46mondego>                var target = event.target;<newline46mondego>                var mItem;<newline46mondego><newline46mondego>                if($(target).is(<doubleQuotes46>a<doubleQuotes46>)){<newline46mondego>                    mItem = $(target).siblings(<doubleQuotes46>ul.ui-menu-list<doubleQuotes46>);<newline46mondego>                }<newline46mondego>                else if($(target).is(<doubleQuotes46>span<doubleQuotes46>)){<newline46mondego>                    mItem = $(target).parent().siblings(<doubleQuotes46>ul.ui-menu-list<doubleQuotes46>); <newline46mondego>                }<newline46mondego><newline46mondego>                if(mItem!=undefined){<newline46mondego>                    var parnt = $(mItem).parent();<newline46mondego>                    try{<newline46mondego>                        var parpos = $(parnt).offset();<newline46mondego>                        var x = parpos.left;<newline46mondego>                        var y = parpos.top;<newline46mondego>                        $(mItem).css('top',y);<newline46mondego>                        $(mItem).css('position','fixed');<newline46mondego><newline46mondego>                    }catch(err){}<newline46mondego>                }<newline46mondego>            });<newline46mondego>        </script><newline46mondego>"
"8431splitHere46","17715410splitHere46","sbt> ~ test"
"8432splitHere46","17715567splitHere46","Pattern"
"8433splitHere46","17715567splitHere46",".find()"
"8434splitHere46","17715567splitHere46","// Only the alternation is needed, no need for the capture<newline46mondego>private static final Pattern PATTERN<newline46mondego>    = Pattern.compile(<doubleQuotes46>012|123|234|345|456|567|678|789|890<doubleQuotes46>);<newline46mondego><newline46mondego>// ...<newline46mondego><newline46mondego>if (PATTERN.matcher(input).find())<newline46mondego>    // fail: illegal sequence found<newline46mondego>"
"8435splitHere46","17715567splitHere46","final CharBuffer buf = CharBuffer.wrap(input);<newline46mondego><newline46mondego>int maxSuccessive = 0;<newline46mondego>int successive = 0;<newline46mondego>char prev = buf.get();<newline46mondego>char next;<newline46mondego><newline46mondego>while (buf.hasRemaining()) {<newline46mondego>    next = buf.get();<newline46mondego>    if (next - prev == 1)<newline46mondego>        successive++;<newline46mondego>    else {<newline46mondego>        maxSuccessive = Math.max(maxSuccessive, successive);<newline46mondego>        successive = 0;<newline46mondego>    }<newline46mondego>    prev = next;<newline46mondego>}<newline46mondego><newline46mondego>// test maxSuccessive<newline46mondego>"
"8436splitHere46","17715567splitHere46","a"
"8437splitHere46","17715567splitHere46","A"
"8438splitHere46","17715567splitHere46","b"
"8439splitHere46","17715567splitHere46","public interface PasswordChecker<newline46mondego>{<newline46mondego>    boolean isValid(final String passwd);<newline46mondego>}<newline46mondego>"
"8440splitHere46","17715567splitHere46","List"
"8441splitHere46","17715567splitHere46","private final List<PasswordChecker> checkers = ...;<newline46mondego><newline46mondego>// then<newline46mondego><newline46mondego>for (final PasswordChecker checker: checkers)<newline46mondego>    if (!checker.isValid(passwd))<newline46mondego>        return false;<newline46mondego>return true;<newline46mondego>"
"8442splitHere46","17715567splitHere46","PasswordChecker"
"8443splitHere46","17715567splitHere46","Predicate<String>"
"8444splitHere46","17715773splitHere46","<servlet>    <newline46mondego>    <servlet-name></servlet-name><newline46mondego>    <servlet-class></servlet-class><newline46mondego>    <init-param><newline46mondego>        <param-name>${param-name}</param-name><newline46mondego>        <param-value>${param-value}</param-value><newline46mondego>    </init-param><newline46mondego></servlet><newline46mondego>"
"8445splitHere46","17715773splitHere46","ServletConfig#getInitParameter(String)"
"8446splitHere46","17715773splitHere46","getServletConfig().getInitParameter(paramName);<newline46mondego>"
"8447splitHere46","17715773splitHere46","<web-app ...><newline46mondego>    <context-param><newline46mondego>        <param-name>${param-name}</param-name><newline46mondego>        <param-value>${param-value}</param-value><newline46mondego>    </context-param><newline46mondego></web-app><newline46mondego>"
"8448splitHere46","17715773splitHere46","ServletContext#getInitParameter(String)"
"8449splitHere46","17715773splitHere46","getServletContext().getInitParameter(paramName);<newline46mondego>"
"8450splitHere46","17715773splitHere46","/WEB-INF/classes"
"8451splitHere46","17715773splitHere46","/src"
"8452splitHere46","17715773splitHere46","Properties props = new Properties();<newline46mondego>props.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>webapp.properties<doubleQuotes46>));<newline46mondego>"
"8453splitHere46","17715827splitHere46","1. Backward Compatibility - marking as deprecated.<newline46mondego>2. There is a specific scenario where we cannot use B implementation.<newline46mondego>"
"8454splitHere46","17715827splitHere46","1. There would have been no Capacity Restriction, which we normally <newline46mondego>   get from ArrayBlockingQueue.<newline46mondego><newline46mondego>2. There would have guards to access to tail and head pointers<newline46mondego>   same as in LinkedBlockingDeque and therefore no significant performance <newline46mondego>   gain over LinkedBlockingDeque.<newline46mondego>"
"8455splitHere46","17715859splitHere46","File.renameTo()"
"8456splitHere46","17715859splitHere46","rename(2)"
"8457splitHere46","17715859splitHere46","File"
"8458splitHere46","17715859splitHere46","Files.move(src, dst, StandardCopyOption.ATOMIC_MOVE);<newline46mondego>"
"8459splitHere46","17715859splitHere46","/home"
"8460splitHere46","17715859splitHere46","/"
"8461splitHere46","17715859splitHere46","fge@alustriel:~/tmp/t$ cat Rename.java <newline46mondego>import java.io.File;<newline46mondego><newline46mondego>public final class Rename<newline46mondego>{<newline46mondego>    private Rename()<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(final String... args)<newline46mondego>    {<newline46mondego>        final File f1 = new File(<doubleQuotes46>/home/fge/tmp/t/foo<doubleQuotes46>);<newline46mondego>        final File f2 = new File(<doubleQuotes46>/home/fge/tmp/t/bar<doubleQuotes46>);<newline46mondego>        final File f3 = new File(<doubleQuotes46>/tmp/foo<doubleQuotes46>);<newline46mondego><newline46mondego>        if (f1.renameTo(f2))<newline46mondego>            f2.renameTo(f3);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>fge@alustriel:~/tmp/t$ javac Rename.java<newline46mondego>fge@alustriel:~/tmp/t$ strace -ff -o TRACE java Rename<newline46mondego>fge@alustriel:~/tmp/t$ grep -w rename TRACE.*<newline46mondego>TRACE.17107:rename(<doubleQuotes46>/home/fge/tmp/t/foo<doubleQuotes46>, <doubleQuotes46>/home/fge/tmp/t/bar<doubleQuotes46>) = 0<newline46mondego>TRACE.17107:rename(<doubleQuotes46>/home/fge/tmp/t/bar<doubleQuotes46>, <doubleQuotes46>/tmp/foo<doubleQuotes46>) = -1 EXDEV (Invalid cross-device link)<newline46mondego>"
"8462splitHere46","17716050splitHere46","Context"
"8463splitHere46","17716050splitHere46","context"
"8464splitHere46","17716050splitHere46","this"
"8465splitHere46","17716050splitHere46","public static void yourMethod(Context mContext) {<newline46mondego><newline46mondego>calintent = new Intent(mContext, AlarmBroadcastReceiver.class);<newline46mondego>    calpendingintent = PendingIntent.getBroadcast(mContext.getApplicationContext(), 12345, calintent, 0);<newline46mondego>    am = (AlarmManager)mContext.getSystemService(Activity.ALARM_SERVICE);<newline46mondego>}<newline46mondego>"
"8466splitHere46","17716050splitHere46","public static void createAlarms(Context mContext) {<newline46mondego>    totaltimetaken = totaltimetaken + timetaken;<newline46mondego>    totalcost = totalcost + costone; <newline46mondego>    cal = Calendar.getInstance();<newline46mondego>    //cal.add(Calendar.HOUR, alarmintervalint);<newline46mondego>    cal.add(Calendar.SECOND, alarmintervalint);<newline46mondego>    calintent = new Intent(mContext, AlarmBroadcastReceiver.class);<newline46mondego>    calpendingintent = PendingIntent.getBroadcast(mContext.getApplicationContext(), 12345, calintent, 0);<newline46mondego>    am = (AlarmManager)mContext.getSystemService(Activity.ALARM_SERVICE);<newline46mondego>    am.set(AlarmManager.RTC_WAKEUP, alarmintervalint, calpendingintent);<newline46mondego>}<newline46mondego>"
"8467splitHere46","17716189splitHere46","$(<doubleQuotes46>#cropbox<doubleQuotes46>).load(function(){<newline46mondego>            $('#cropbox').Jcrop({<newline46mondego>                onChange: updateCoords,<newline46mondego>                onSelect: updateCoords<newline46mondego>            });<newline46mondego>  });<newline46mondego>"
"8468splitHere46","17716258splitHere46","fw.write(System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>));"
"8469splitHere46","17716258splitHere46","System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>)"
"8470splitHere46","17716304splitHere46","public void CreateObject()<newline46mondego>{<newline46mondego>    runOnUiThread(new Runnable() <newline46mondego>    {   <newline46mondego>        public void run()<newline46mondego>        {<newline46mondego>            HashMap<AdConfigKey, String> config = new HashMap<AdConfigKey, String>();<newline46mondego>            config.put(<doubleQuotes46>my string1<doubleQuotes46>, <doubleQuotes46>string1<doubleQuotes46>);<newline46mondego>            config.put(<doubleQuotes46>my string2<doubleQuotes46>, <doubleQuotes46>string2<doubleQuotes46>);<newline46mondego>            config.put(<doubleQuotes46>my string3<doubleQuotes46>, <doubleQuotes46>string3<doubleQuotes46>);<newline46mondego><newline46mondego>            MyObject = new MyObject(this, config);<newline46mondego>            MyObject.setListener(this);<newline46mondego>            MyObject.setLanguage(lang);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8471splitHere46","17716309splitHere46","user.setPath(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego> or<newline46mondego> user.setDomain(<doubleQuotes46>example.com<doubleQuotes46>);<newline46mondego>"
"8472splitHere46","17716312splitHere46","lastCheckup.MONTH"
"8473splitHere46","17716312splitHere46","lastCheckup.DAY_OF_MONTH"
"8474splitHere46","17716312splitHere46","int month = lastCheckUp.get(Calendar.MONTH);<newline46mondego>"
"8475splitHere46","17716312splitHere46","Calendar"
"8476splitHere46","17716312splitHere46","Calendar"
"8477splitHere46","17716312splitHere46","SimpleDateFormat"
"8478splitHere46","17716312splitHere46","// Not sure why you want a space at the end, but...<newline46mondego>DateFormat format = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy <doubleQuotes46>);<newline46mondego>mTextViewLastCheckDate.setText(format.format(lastCheckup.getTime());<newline46mondego>"
"8479splitHere46","17716312splitHere46","lastCheckUp.set(year, month+1, day);<newline46mondego>"
"8480splitHere46","17716312splitHere46","month"
"8481splitHere46","17716312splitHere46","set"
"8482splitHere46","17716528splitHere46","/*<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego>public class DupRemove {<newline46mondego>public static void main(String...arg){ <newline46mondego>  double val[]={1,4.3,5,2,4,4,4,6.5,2,2,2,2,2,3.5,3.7,4,7,8,9};<newline46mondego>  for(int i=0;i<val.length;i++){<newline46mondego>    add(val[i]);<newline46mondego>  }<newline46mondego>  Collections.sort(list);<newline46mondego>  System.out.println(list);<newline46mondego> }<newline46mondego>static List<Double> list=new ArrayList<>();<newline46mondego>public static void add(double d){<newline46mondego>  if(!list.contains(d)){list.add(d);}<newline46mondego>}<newline46mondego>}<newline46mondego>*/<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.util.*;<newline46mondego>public class PointStatue {<newline46mondego>/*private static List<Double> col1 = new ArrayList<Double>(); <newline46mondego>private static List<Double> col2 = new ArrayList<Double>();<newline46mondego>private static List<Double> col3 = new ArrayList<Double>();<newline46mondego>private static List<Double> col4 = new ArrayList<Double>();<newline46mondego>private static List<Double> col5 = new ArrayList<Double>();<newline46mondego>private static List<Double> col6 = new ArrayList<Double>();<newline46mondego>private static List<Double> col7 = new ArrayList<Double>();<newline46mondego>private static List<Double> col8 = new ArrayList<Double>();*/<newline46mondego>//private static List<Double> list=new ArrayList<Double>();<newline46mondego>private static ArrayList<List<Double>> rows=new ArrayList<List<Double>>();<newline46mondego><newline46mondego>private static List<Double> numbers = new ArrayList<Double>();<newline46mondego>private static void okuDiziyeKoy(String path,ArrayList<String> arr) throws Exception{<newline46mondego>  BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(path)));<newline46mondego>  //skip the first line<newline46mondego>  br.readLine();<newline46mondego>  String g;<newline46mondego>  while((g=br.readLine())!=null){<newline46mondego>    arr.add(g);<newline46mondego>  }<newline46mondego>}<newline46mondego>public static void main(String[] args) throws Exception {<newline46mondego>    ArrayList<String> puan = new ArrayList<String>();<newline46mondego>    okuDiziyeKoy(<doubleQuotes46>C:/deneme/HW.txt<doubleQuotes46>, puan);<newline46mondego>    //   puan = okuDiziyeKoy(<doubleQuotes46>C:\\deneme\\HW.txt<doubleQuotes46>);<newline46mondego>    System.out.format(<doubleQuotes46>%d kayıt okundu.%n<doubleQuotes46>, puan.size());<newline46mondego>    Double doubleValue;<newline46mondego><newline46mondego>    for (int j = 0; j < puan.size(); j++) {<newline46mondego>      List<Double> listToAdd=new ArrayList<Double>();<newline46mondego>        rows.add(j, listToAdd);<newline46mondego>        String point = puan.get(j);<newline46mondego>        //split data(line) by }{<newline46mondego>        String[] edit = point.split(<doubleQuotes46>[}][{]<doubleQuotes46>);<newline46mondego>        for(int l=3;l<edit.length-1;l++){<newline46mondego>          //parsing String as double<newline46mondego>          doubleValue=Double.parseDouble(edit[l]);<newline46mondego>          //check if double value is not exist then add it to list<newline46mondego>          if(!numbers.contains(doubleValue)){<newline46mondego>          numbers.add(doubleValue);<newline46mondego>          }<newline46mondego>          if(!listToAdd.contains(doubleValue)){<newline46mondego>            listToAdd.add(doubleValue);<newline46mondego>          }<newline46mondego>        }<newline46mondego>       /* for (String s : edit) {<newline46mondego><newline46mondego>            String a = s.replaceAll(<doubleQuotes46>[\\}\\-\\>\\>\\]\\[\\#\\*\\{]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>            String b = a.replaceAll(<doubleQuotes46>[\\.]+<doubleQuotes46>, <doubleQuotes46>,<doubleQuotes46>);<newline46mondego>            Scanner scanner = new Scanner(b);<newline46mondego><newline46mondego>            while (scanner.hasNext()) {<newline46mondego><newline46mondego>                if (scanner.hasNextDouble()) {<newline46mondego><newline46mondego>                    doubleValue = scanner.nextDouble();<newline46mondego>                    if(!numbers.contains(doubleValue)){<newline46mondego>                    numbers.add(doubleValue);<newline46mondego>                    }<newline46mondego>                    // System.out.println(Arrays.deepToString(numbers.toArray()));<newline46mondego><newline46mondego>                }// if scan end<newline46mondego><newline46mondego>                else {<newline46mondego><newline46mondego>                    //if it is string comes value here<newline46mondego>                    String stringValue = scanner.next();<newline46mondego><newline46mondego>                }// if scan end<newline46mondego><newline46mondego>            }// while end<newline46mondego><newline46mondego>        }// for string s<newline46mondego><newline46mondego>    }// for j end*/<newline46mondego><newline46mondego>        }<newline46mondego>    Collections.sort(numbers);<newline46mondego>    System.out.println(<doubleQuotes46>Unique values(in all rows): <doubleQuotes46>);<newline46mondego>    for(Double d :numbers){<newline46mondego>        System.out.print(d+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>      }<newline46mondego>    System.out.println();<newline46mondego>    /*int col=1;<newline46mondego>    for(int i=0;i<numbers.size();i++)<newline46mondego>    {<newline46mondego><newline46mondego>        Double rowValue = numbers.get(i);<newline46mondego><newline46mondego>        switch(col)<newline46mondego>        {<newline46mondego>        case 1:<newline46mondego>            col1.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 2:<newline46mondego>            col2.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 3:<newline46mondego>            col3.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 4:<newline46mondego>            col4.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 5:<newline46mondego>            col5.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 6:<newline46mondego>            col6.add(rowValue);<newline46mondego><newline46mondego>            col = 1;<newline46mondego>            break;<newline46mondego><newline46mondego>        }//switch end<newline46mondego><newline46mondego>    }//for i end*/<newline46mondego>   /* Collections.sort(col1);<newline46mondego>    Collections.sort(col2);<newline46mondego>    Collections.sort(col3);<newline46mondego>    Collections.sort(col4);<newline46mondego>    Collections.sort(col5);<newline46mondego>    Collections.sort(col6);*/<newline46mondego>    /*System.out.println(<doubleQuotes46>kolon1 <doubleQuotes46>+col1);<newline46mondego>    System.out.println(<doubleQuotes46>kolon2 <doubleQuotes46>+col2);<newline46mondego>    System.out.println(<doubleQuotes46>kolon3 <doubleQuotes46>+col3);<newline46mondego>    System.out.println(<doubleQuotes46>kolon4 <doubleQuotes46>+col4);<newline46mondego>    System.out.println(<doubleQuotes46>kolon5 <doubleQuotes46>+col5);<newline46mondego>    System.out.println(<doubleQuotes46>kolon6 <doubleQuotes46>+col6);*/<newline46mondego>    //sorting each row<newline46mondego>    for(int i=0;i<rows.size();i++){<newline46mondego>      Collections.sort(rows.get(i));<newline46mondego>    }<newline46mondego>    //showing each row(array)<newline46mondego>    for(int i=0;i<rows.size();i++){<newline46mondego>      System.out.println(<doubleQuotes46>kolon<doubleQuotes46>+i+<doubleQuotes46>: <doubleQuotes46>+rows.get(i));<newline46mondego>    }<newline46mondego><newline46mondego>}// main end  <newline46mondego>}<newline46mondego>"
"8483splitHere46","17716528splitHere46","/*<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Collections;<newline46mondego>import java.util.List;<newline46mondego>public class DupRemove {<newline46mondego>public static void main(String...arg){ <newline46mondego>  double val[]={1,4.3,5,2,4,4,4,6.5,2,2,2,2,2,3.5,3.7,4,7,8,9};<newline46mondego>  for(int i=0;i<val.length;i++){<newline46mondego>    add(val[i]);<newline46mondego>  }<newline46mondego>  Collections.sort(list);<newline46mondego>  System.out.println(list);<newline46mondego> }<newline46mondego>static List<Double> list=new ArrayList<>();<newline46mondego>public static void add(double d){<newline46mondego>  if(!list.contains(d)){list.add(d);}<newline46mondego>}<newline46mondego>}<newline46mondego>*/<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.util.*;<newline46mondego>public class PointStatue {<newline46mondego>/*private static List<Double> col1 = new ArrayList<Double>(); <newline46mondego>private static List<Double> col2 = new ArrayList<Double>();<newline46mondego>private static List<Double> col3 = new ArrayList<Double>();<newline46mondego>private static List<Double> col4 = new ArrayList<Double>();<newline46mondego>private static List<Double> col5 = new ArrayList<Double>();<newline46mondego>private static List<Double> col6 = new ArrayList<Double>();<newline46mondego>private static List<Double> col7 = new ArrayList<Double>();<newline46mondego>private static List<Double> col8 = new ArrayList<Double>();*/<newline46mondego>//private static List<Double> list=new ArrayList<Double>();<newline46mondego>private static ArrayList<List<Double>> rows=new ArrayList<List<Double>>();<newline46mondego><newline46mondego>private static List<Double> numbers = new ArrayList<Double>();<newline46mondego>private static void okuDiziyeKoy(String path,ArrayList<String> arr) throws Exception{<newline46mondego>  BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(path)));<newline46mondego>  //skip the first line<newline46mondego>  br.readLine();<newline46mondego>  String g;<newline46mondego>  while((g=br.readLine())!=null){<newline46mondego>    arr.add(g);<newline46mondego>  }<newline46mondego>}<newline46mondego>public static void main(String[] args) throws Exception {<newline46mondego>    ArrayList<String> puan = new ArrayList<String>();<newline46mondego>    okuDiziyeKoy(<doubleQuotes46>C:/deneme/HW.txt<doubleQuotes46>, puan);<newline46mondego>    //   puan = okuDiziyeKoy(<doubleQuotes46>C:\\deneme\\HW.txt<doubleQuotes46>);<newline46mondego>    System.out.format(<doubleQuotes46>%d kayıt okundu.%n<doubleQuotes46>, puan.size());<newline46mondego>    Double doubleValue;<newline46mondego>    for (int j = 0; j < 6; j++) {<newline46mondego>      rows.add(new ArrayList<Double>());<newline46mondego>    }<newline46mondego>    for (int j = 0; j < puan.size(); j++) {<newline46mondego>        String point = puan.get(j);<newline46mondego>        //split data(line) by }{<newline46mondego>        String[] edit = point.split(<doubleQuotes46>[}][{]<doubleQuotes46>);<newline46mondego>        for(int l=3;l<edit.length-1;l++){<newline46mondego>          //parsing String as double<newline46mondego>          doubleValue=Double.parseDouble(edit[l]);<newline46mondego>          //check if double value is not exist then add it to list<newline46mondego>          if(!numbers.contains(doubleValue)){<newline46mondego>          numbers.add(doubleValue);<newline46mondego>          }<newline46mondego>          if(!rows.get(l-3).contains(doubleValue)){<newline46mondego>            rows.get(l-3).add(doubleValue);<newline46mondego>          }<newline46mondego>        }<newline46mondego>       /* for (String s : edit) {<newline46mondego><newline46mondego>            String a = s.replaceAll(<doubleQuotes46>[\\}\\-\\>\\>\\]\\[\\#\\*\\{]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>            String b = a.replaceAll(<doubleQuotes46>[\\.]+<doubleQuotes46>, <doubleQuotes46>,<doubleQuotes46>);<newline46mondego>            Scanner scanner = new Scanner(b);<newline46mondego><newline46mondego>            while (scanner.hasNext()) {<newline46mondego><newline46mondego>                if (scanner.hasNextDouble()) {<newline46mondego><newline46mondego>                    doubleValue = scanner.nextDouble();<newline46mondego>                    if(!numbers.contains(doubleValue)){<newline46mondego>                    numbers.add(doubleValue);<newline46mondego>                    }<newline46mondego>                    // System.out.println(Arrays.deepToString(numbers.toArray()));<newline46mondego><newline46mondego>                }// if scan end<newline46mondego><newline46mondego>                else {<newline46mondego><newline46mondego>                    //if it is string comes value here<newline46mondego>                    String stringValue = scanner.next();<newline46mondego><newline46mondego>                }// if scan end<newline46mondego><newline46mondego>            }// while end<newline46mondego><newline46mondego>        }// for string s<newline46mondego><newline46mondego>    }// for j end*/<newline46mondego><newline46mondego>        }<newline46mondego>    Collections.sort(numbers);<newline46mondego>    System.out.println(<doubleQuotes46>Unique values(in all rows): <doubleQuotes46>);<newline46mondego>    for(Double d :numbers){<newline46mondego>        System.out.print(d+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>      }<newline46mondego>    System.out.println();<newline46mondego>    /*int col=1;<newline46mondego>    for(int i=0;i<numbers.size();i++)<newline46mondego>    {<newline46mondego><newline46mondego>        Double rowValue = numbers.get(i);<newline46mondego><newline46mondego>        switch(col)<newline46mondego>        {<newline46mondego>        case 1:<newline46mondego>            col1.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 2:<newline46mondego>            col2.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 3:<newline46mondego>            col3.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 4:<newline46mondego>            col4.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 5:<newline46mondego>            col5.add(rowValue);<newline46mondego><newline46mondego>            col++;<newline46mondego>            break;<newline46mondego>        case 6:<newline46mondego>            col6.add(rowValue);<newline46mondego><newline46mondego>            col = 1;<newline46mondego>            break;<newline46mondego><newline46mondego>        }//switch end<newline46mondego><newline46mondego>    }//for i end*/<newline46mondego>   /* Collections.sort(col1);<newline46mondego>    Collections.sort(col2);<newline46mondego>    Collections.sort(col3);<newline46mondego>    Collections.sort(col4);<newline46mondego>    Collections.sort(col5);<newline46mondego>    Collections.sort(col6);*/<newline46mondego>    /*System.out.println(<doubleQuotes46>kolon1 <doubleQuotes46>+col1);<newline46mondego>    System.out.println(<doubleQuotes46>kolon2 <doubleQuotes46>+col2);<newline46mondego>    System.out.println(<doubleQuotes46>kolon3 <doubleQuotes46>+col3);<newline46mondego>    System.out.println(<doubleQuotes46>kolon4 <doubleQuotes46>+col4);<newline46mondego>    System.out.println(<doubleQuotes46>kolon5 <doubleQuotes46>+col5);<newline46mondego>    System.out.println(<doubleQuotes46>kolon6 <doubleQuotes46>+col6);*/<newline46mondego>    //sorting each row<newline46mondego>    for(int i=0;i<rows.size();i++){<newline46mondego>      Collections.sort(rows.get(i));<newline46mondego>    }<newline46mondego>    //showing each row(array)<newline46mondego>    for(int i=0;i<rows.size();i++){<newline46mondego>      System.out.println(<doubleQuotes46>kolon<doubleQuotes46>+(i+1)+<doubleQuotes46>: <doubleQuotes46>+rows.get(i));<newline46mondego>    }<newline46mondego><newline46mondego>}// main end  <newline46mondego>}<newline46mondego>"
"8484splitHere46","17716541splitHere46","Result"
"8485splitHere46","17716562splitHere46","OnItemClickListener"
"8486splitHere46","17716562splitHere46","OnItemSelectedListener"
"8487splitHere46","17716562splitHere46","OnItemSelectedListener"
"8488splitHere46","17716622splitHere46","class FieldHandler implements ActionListener{<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent event)  {<newline46mondego>        if (event.getSource() == submit){<newline46mondego>            String user = usr.getText(); <newline46mondego>            // or String user = LoginPanel.this.usr.getText(); <newline46mondego>            char[] password = pass.getPassword();<newline46mondego>            // do whatever you want with the user and password<newline46mondego>        }<newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8489splitHere46","17716729splitHere46","[Full GC [PSYoungGen: 0K->0K(2752512K)] [ParOldGen: 2748534K->2748529K(7340032K)] 2748534K->2748529K(10092544K) [PSPermGen: 262143K->262143K(262144K)], 3.0554520 secs]<newline46mondego>"
"8490splitHere46","17716729splitHere46","PermGenSpace"
"8491splitHere46","17716729splitHere46","PermGenSpace"
"8492splitHere46","17716729splitHere46","PermGenSpace"
"8493splitHere46","17716900splitHere46","String inputString = <doubleQuotes46><html><img id=\<doubleQuotes46>MathMLEq1\<doubleQuotes46> style=\<doubleQuotes46>vertical-align: middle;\<doubleQuotes46> src=\<doubleQuotes46>/SOCH/img.PNG\<doubleQuotes46> alt=\<doubleQuotes46>\<doubleQuotes46>/></html><doubleQuotes46>;<newline46mondego>StringBuffer q= new StringBuffer(inputString);<newline46mondego>String add = <doubleQuotes46>file:///mnt/sdcard<doubleQuotes46>;<newline46mondego>int separatedInd = inputString.indexOf(<doubleQuotes46>/SOCH<doubleQuotes46>); //Get the index of occurrence of the folder name in input string, which I assume remains same<newline46mondego>q = q.insert(separatedInd ,add); //Insert your String at that index( before start of /SOCH)<newline46mondego>String result = q.toString();  // Contains the new final string which you require<newline46mondego>"
"8494splitHere46","17716900splitHere46","<img>"
"8495splitHere46","17716900splitHere46","ArrayList<Integer> arrayList = new ArrayList<Integer>();<newline46mondego>// Assuming three times here<newline46mondego>String inputString = <doubleQuotes46><html><img id=\<doubleQuotes46>MathMLEq1\<doubleQuotes46> style=\<doubleQuotes46>vertical-align: middle;\<doubleQuotes46> src=\<doubleQuotes46>/SOCH/img.PNG\<doubleQuotes46> alt=\<doubleQuotes46>\<doubleQuotes46>/></html> <html><img id=\<doubleQuotes46>MathMLEq1\<doubleQuotes46> style=\<doubleQuotes46>vertical-align: middle;\<doubleQuotes46> src=\<doubleQuotes46>/SOCH/img.PNG\<doubleQuotes46> alt=\<doubleQuotes46>\<doubleQuotes46>/></html> <html><img id=\<doubleQuotes46>MathMLEq1\<doubleQuotes46> style=\<doubleQuotes46>vertical-align: middle;\<doubleQuotes46> src=\<doubleQuotes46>/SOCH/img.PNG\<doubleQuotes46> alt=\<doubleQuotes46>\<doubleQuotes46>/></html><doubleQuotes46>;<newline46mondego>StringBuffer q= new StringBuffer(inputString);<newline46mondego>String add = <doubleQuotes46>file:///mnt/sdcard<doubleQuotes46>;<newline46mondego>//Get all indexed of the occurrence of /SOCH string<newline46mondego>for (int index = inputString.indexOf(<doubleQuotes46>/SOCH<doubleQuotes46>);<newline46mondego>     index >= 0;<newline46mondego>     index = inputString.indexOf(<doubleQuotes46>/SOCH<doubleQuotes46>, index + 1)){<newline46mondego><newline46mondego>    arrayList.add(index); //add the indexes to arrayList<newline46mondego>}<newline46mondego>int prev = 0;<newline46mondego>for (int i = 0; i < arrayList.size(); i++){ // for all indexes<newline46mondego>    q = q.insert(prev+ arrayList.get(i),add); //Insert the add string at position (index + (number of times 'add' string appears * length of 'add' string)  <newline46mondego>    prev = (i+1)*add.length(); // calculate the next position where to insert the string<newline46mondego><newline46mondego>}<newline46mondego>String result = q.toString(); //Gives the final output as desired.<newline46mondego>"
"8496splitHere46","17717092splitHere46","final TextBox editTb = new TextBox();<newline46mondego>    editTb.addStyleName(EDIT_FAV_DELETE_STYLE);<newline46mondego>    editTb.setText(favoriteBean.getName());<newline46mondego><newline46mondego>    Scheduler.get().scheduleDeferred(new ScheduledCommand() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void execute() {<newline46mondego>     editFavoriteTb.setFocus(true);<newline46mondego>     editTb.setCursorPos( favoriteBean.getName().length());<newline46mondego>    }<newline46mondego>  });<newline46mondego>"
"8497splitHere46","17717138splitHere46","//start points to draw<newline46mondego>int blockX=128,blockY=128;<newline46mondego>//size of the target rectangle need to be painted<newline46mondego>int w=128,h=128;<newline46mondego>int[] colors=new int[h*w];<newline46mondego>//....init color array<newline46mondego>//start painting from x value in array<newline46mondego>int colorOffset=0;<newline46mondego>//number of value should read from array for one row<newline46mondego>int paintWidth=128;<newline46mondego>//I think you get the Exception here, because of wrong number passed for drawing pixel for each row<newline46mondego>out.setRGB(blockX,blockY, w, h, colors, colorOffset, paintWidth);<newline46mondego>"
"8498splitHere46","17717193splitHere46","Tabexercise"
"8499splitHere46","17717193splitHere46","Intent i = new Intent(this, TabExercise.class);<newline46mondego>i.putExtra(<doubleQuotes46>tab_index<doubleQuotes46>,<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>startActivity(i);<newline46mondego>"
"8500splitHere46","17717193splitHere46","onCreate()"
"8501splitHere46","17717193splitHere46","Tabexercise"
"8502splitHere46","17717193splitHere46","TabHost tabHost = (TabHost)findViewById(android.R.id.tabhost); //Assuming that you are setting your tabHost like this<newline46mondego>Bundle extras = getIntent().getExtras();<newline46mondego>if (extras != null) {<newline46mondego>    String value = extras.getString(<doubleQuotes46>tab_index<doubleQuotes46>);<newline46mondego>    if(value.equals(<doubleQuotes46>1<doubleQuotes46>){<newline46mondego>        tabHost.setCurrentTab(Integer.valueOf(value)); <newline46mondego>    }<newline46mondego>    //and so on ...<newline46mondego><newline46mondego>}<newline46mondego>"
"8503splitHere46","17717226splitHere46","PrintColors.YELLOW<newline46mondego>"
"8504splitHere46","17717226splitHere46","RainbowCOlors.YELLOW<newline46mondego>"
"8505splitHere46","17717226splitHere46","LotsOfColors.MAGENTA"
"8506splitHere46","17717226splitHere46","PrintColors.MAGENTA"
"8507splitHere46","17717226splitHere46","LotsOfColors.MAGENTA"
"8508splitHere46","17717226splitHere46","PrintColors.MAGENTA"
"8509splitHere46","17717226splitHere46","LotsOfColors.YELLOW"
"8510splitHere46","17717226splitHere46","PrintColors.YELLOW"
"8511splitHere46","17717226splitHere46","RainbowColors.YELLOW"
"8512splitHere46","17717226splitHere46","PrintColors.YELLOW"
"8513splitHere46","17717226splitHere46","RainbowColors.YELLOW"
"8514splitHere46","17717408splitHere46","button.setEnabled(true);"
"8515splitHere46","17717538splitHere46","final TextView txtTest = (TextView) findViewById(R.id.txtOut);"
"8516splitHere46","17717538splitHere46","TextView txtTest = null;<newline46mondego>    CheckBox chkTest = null;<newline46mondego>    Button btnTest = null;<newline46mondego>    EditText etTest = null;<newline46mondego><newline46mondego> @Override<newline46mondego> protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>    txtTest = (TextView) findViewById(R.id.txtOut);<newline46mondego>    chkTest = (CheckBox) findViewById(R.id.chkTest);<newline46mondego>    btnTest = (Button) findViewById(R.id.btnTest);<newline46mondego>    etTest = (EditText) findViewById(R.id.etTest);<newline46mondego><newline46mondego>    ....<newline46mondego> }<newline46mondego><newline46mondego><newline46mondego> void reset(String text) {<newline46mondego>      chkTest.setChecked(false);<newline46mondego>      txtTest.setText(text);<newline46mondego> }<newline46mondego>"
"8517splitHere46","17717747splitHere46","timeout"
"8518splitHere46","17717747splitHere46","timeout"
"8519splitHere46","17717747splitHere46","HTTP-CODE"
"8520splitHere46","17717861splitHere46","random.nextInt"
"8521splitHere46","17717861splitHere46","public void paintComponent(Graphics g){<newline46mondego>    random=new Random();<newline46mondego><newline46mondego>    super.paintComponent(g);    <newline46mondego><newline46mondego>    for(int i=0; i<=4; i++){<newline46mondego>        rX=random.nextInt(500);<newline46mondego>        rY=random.nextInt(500);<newline46mondego>        g.fillRect(rX,rY,20,20);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    g.setColor(Color.red);<newline46mondego>    g.fillOval(x,y,20,20);<newline46mondego><newline46mondego>}<newline46mondego>"
"8522splitHere46","17717876splitHere46","public class Main {<newline46mondego>public static void main(String[] args) {<newline46mondego>   new Token().dynamicType();<newline46mondego>   new TestToken().dynamicType();<newline46mondego><newline46mondego>   Token.type();<newline46mondego>   TestToken.type();<newline46mondego><newline46mondego>}}<newline46mondego>"
"8523splitHere46","17717876splitHere46","Hello Dynamic world<newline46mondego>java.lang.Exception<newline46mondego>    at Token.dynamicType(Token.java:4)<newline46mondego>    at Main.main(Main.java:3)<newline46mondego>Hello Dynamic world<newline46mondego>java.lang.Exception<newline46mondego>    at Token.dynamicType(Token.java:4)<newline46mondego>    at Main.main(Main.java:4)<newline46mondego>Hello Static world<newline46mondego>java.lang.Exception<newline46mondego>    at Token.type(Token.java:3)<newline46mondego>    at Main.main(Main.java:6)<newline46mondego>Hello Static world<newline46mondego>java.lang.Exception<newline46mondego>    at Token.type(Token.java:3)<newline46mondego>    at Main.main(Main.java:7)<newline46mondego>"
"8524splitHere46","17717876splitHere46","Code:<newline46mondego> 0: new #2; //class Token<newline46mondego> 3: dup<newline46mondego> 4: invokespecial   #3; //Method Token.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego> 7: invokevirtual   #4; //Method Token.dynamicType:()V<newline46mondego> 10:    new #5; //class TestToken<newline46mondego> 13:    dup<newline46mondego> 14:    invokespecial   #6; //Method TestToken.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego> 17:    invokevirtual   #7; //Method TestToken.dynamicType:()V<newline46mondego> 20:    invokestatic    #8; //Method Token.type:()V<newline46mondego> 23:    invokestatic    #9; //Method TestToken.type:()V<newline46mondego> 26:    return<newline46mondego>"
"8525splitHere46","17717989splitHere46","public interface DataSourceOne {<newline46mondego>    public Data getData();<newline46mondego>}<newline46mondego><newline46mondego>public class DataSourceOneImpl implements DataSourceOne {<newline46mondego>    public Data getData() {<newline46mondego>        ...<newline46mondego>        return data;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public interface DataSourceTwo {<newline46mondego>    public Data getData();<newline46mondego>}<newline46mondego><newline46mondego>public class DataSourceTwoImpl implements DataSourceTwo {<newline46mondego>    public Data getData() {<newline46mondego>        ...<newline46mondego>        return data;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8526splitHere46","17717989splitHere46","public class ClassWithLongMethod {<newline46mondego>    private DataSourceOne dataSourceOne;<newline46mondego>    private DataSourceTwo dataSourceTwo;<newline46mondego><newline46mondego>    public ClassWithLongMethod(DataSourceOne dataSourceOne,<newline46mondego>                               DataSourceTwo dataSourceTwo) {<newline46mondego>        this.dataSourceOne = dataSourceOne;<newline46mondego>        this.dataSourceTwo = dataSourceTwo;<newline46mondego>    }<newline46mondego><newline46mondego>    public Result longMethod() {<newline46mondego>        someData = dataSourceOne.getData();<newline46mondego>        someMoreData = dataSourceTwo.getData();<newline46mondego>        ...<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8527splitHere46","17717989splitHere46","import org.junit.Test;<newline46mondego><newline46mondego>import static org.mockito.Mockito.mock;<newline46mondego>import static org.mockito.Mockito.when;<newline46mondego><newline46mondego>public class ClassWithLongMethodTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testLongMethod() {<newline46mondego><newline46mondego>        // Create mocked data sources which return the data required by your test<newline46mondego>        DataSourceOne dataSourceOne = mock(DataSourceOne.class);<newline46mondego>        when(dataSourceOne.getData()).thenReturn(...);<newline46mondego>        DataSourceTwo dataSourceTwo = mock(DataSourceTwo.class);<newline46mondego>        when(dataSourceTwo.getData()).thenReturn(...);<newline46mondego><newline46mondego>        // Create the object under test using the mocked data sources<newline46mondego>        ClassWithLongMethod sut = new ClassWithLongMethod(dataSourceOne,<newline46mondego>                                                          dataSourceTwo);<newline46mondego><newline46mondego>        // Now you can unit test the long method in isolation from it's dependencies<newline46mondego>        Result result = sut.longMethod();<newline46mondego><newline46mondego>        // Assertions on result<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8528splitHere46","17718015splitHere46","Messages.getString(Messages.exc01)<newline46mondego>"
"8529splitHere46","17718015splitHere46","Messages.exc01"
"8530splitHere46","17718015splitHere46","Messages.getString(<doubleQuotes46>exc01<doubleQuotes46>)<newline46mondego>"
"8531splitHere46","17718015splitHere46","public static String exc01 = <doubleQuotes46>exc01<doubleQuotes46>;<newline46mondego>...<newline46mondego>Messages.getString(Messages.exc01);<newline46mondego>"
"8532splitHere46","17718015splitHere46","public static final String EXC01 = <doubleQuotes46>exc01<doubleQuotes46>;<newline46mondego>...<newline46mondego>Messages.getString(Messages.EXC01);<newline46mondego>"
"8533splitHere46","17718015splitHere46","!testErr!"
"8534splitHere46","17718015splitHere46","!testErr!"
"8535splitHere46","17718067splitHere46","Example: <newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class PropertiesContacts {<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    int _id;<newline46mondego>    String _title;<newline46mondego>    String _description ;<newline46mondego><newline46mondego>    public int getID(){<newline46mondego>        return this._id;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void setID(int id){<newline46mondego>        this._id = id;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public String gettitle(){<newline46mondego>        return this._title;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void settitle(String title){<newline46mondego>        this._title = title;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    public String getdescription (){<newline46mondego>        return this._description ;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void setdescription (String description ){<newline46mondego>        this._description  = description ;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>Set properties value in activity<newline46mondego>Like<newline46mondego><newline46mondego>PropertiesContacts  obj=new PropertiesContacts ();<newline46mondego>obj._id=1;<newline46mondego>obj._title =<doubleQuotes46>amit<doubleQuotes46>;<newline46mondego>obj._description =<doubleQuotes46>test<doubleQuotes46>;<newline46mondego>insertNewRowInspectionPlan(obj);<newline46mondego>Hope you will understan <newline46mondego>"
"8536splitHere46","17718074splitHere46","FileInputStream fStream = new FileInputStream(new File(<doubleQuotes46>C:\\image.jpg<doubleQuotes46>));   <newline46mondego>Image image = new Image(display, fStream);<newline46mondego>shell.setImage(image);<newline46mondego>"
"8537splitHere46","17718134splitHere46","<form-property name=<doubleQuotes46>file<doubleQuotes46> type=<doubleQuotes46>org.apache.struts.upload.CommonsMultipartRequestHandler<doubleQuotes46>><newline46mondego>"
"8538splitHere46","17718134splitHere46","<form-property name=<doubleQuotes46>file<doubleQuotes46> type=<doubleQuotes46>org.apache.struts.upload.FormFile<doubleQuotes46>> <newline46mondego>"
"8539splitHere46","17718276splitHere46","If T is a class type, then either |S| <: |T|, or |T| <: |S|. Otherwise, a compile-time error occurs.<newline46mondego><newline46mondego>Furthermore, if there exists a supertype X of T, and a supertype Y of S, such that both X and Y are provably distinct parameterized types<newline46mondego>"
"8540splitHere46","17718276splitHere46","List<Integer>"
"8541splitHere46","17718276splitHere46","List<String>"
"8542splitHere46","17718276splitHere46","List"
"8543splitHere46","17718641splitHere46","com.itextpdf.text.pdf.ocg.OCGRemover"
"8544splitHere46","17718641splitHere46","OCGParser"
"8545splitHere46","17718641splitHere46","/**<newline46mondego> * Class that knows how to remove OCG layers.<newline46mondego> */<newline46mondego>public class OCGRemover<newline46mondego>{<newline46mondego>    /**<newline46mondego>     * Removes layers from a PDF document<newline46mondego>     * @param reader    a PdfReader containing a PDF document<newline46mondego>     * @param layers    a sequence of names of OCG layers<newline46mondego>     * @throws IOException<newline46mondego>     */<newline46mondego>    public void removeLayers(PdfReader reader, String... layers) throws IOException<newline46mondego>    [...]<newline46mondego>}<newline46mondego>"
"8546splitHere46","17718641splitHere46","PdfReader"
"8547splitHere46","17718641splitHere46","PdfStamper."
"8548splitHere46","17718728splitHere46","button.setBackgroundResource(0)"
"8549splitHere46","17718728splitHere46","android:background=<doubleQuotes46>@null<doubleQuotes46>"
"8550splitHere46","17718798splitHere46","START n=node:myIndex(name=<doubleQuotes46><nodename><doubleQuotes46>)                             <newline46mondego>MATCH n<-[rel:REL1]-m<newline46mondego>WHERE rel.a=<somevalue><newline46mondego>RETURN m<newline46mondego>"
"8551splitHere46","17718848splitHere46","enterlessonnames( new String[] { <doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46> } );<newline46mondego>"
"8552splitHere46","17718848splitHere46","enterLessonNames"
"8553splitHere46","17719047splitHere46","org.springframework.ui.Model"
"8554splitHere46","17719047splitHere46","Map<String, Object>"
"8555splitHere46","17719047splitHere46","Map<String, Object>"
"8556splitHere46","17719158splitHere46","<property name=<doubleQuotes46>hibernate.hbm2ddl.auto<doubleQuotes46> value=<doubleQuotes46>update<doubleQuotes46>/> <newline46mondego>"
"8557splitHere46","17719288splitHere46","c:\uploaded_files"
"8558splitHere46","17719438splitHere46","Shape s1 = new Circle(2);<newline46mondego>Shape s2 = new Square(2);<newline46mondego>"
"8559splitHere46","17719438splitHere46","Circle"
"8560splitHere46","17719438splitHere46","Square"
"8561splitHere46","17719438splitHere46","Shape"
"8562splitHere46","17719438splitHere46","Shape"
"8563splitHere46","17719438splitHere46","Shape"
"8564splitHere46","17719438splitHere46","Shape"
"8565splitHere46","17719438splitHere46","s1"
"8566splitHere46","17719438splitHere46","s2"
"8567splitHere46","17719438splitHere46","diameter"
"8568splitHere46","17719438splitHere46","Shape s1 = new Circle(2);<newline46mondego>s1.diameter();<newline46mondego>"
"8569splitHere46","17719438splitHere46","diameter"
"8570splitHere46","17719438splitHere46","Shape"
"8571splitHere46","17719538splitHere46","frequency"
"8572splitHere46","17719538splitHere46","List<String> list = Arrays.asList(myArray);<newline46mondego>int count = Collections.frequency(list, <doubleQuotes46>B<doubleQuotes46>);<newline46mondego>"
"8573splitHere46","17719538splitHere46","int count = Collections.frequency(Arrays.asList(myArray), <doubleQuotes46>B<doubleQuotes46>);<newline46mondego>"
"8574splitHere46","17719538splitHere46","long count = Arrays.stream(myArray).filter(s -> <doubleQuotes46>B<doubleQuotes46>.equals(s)).count();<newline46mondego>"
"8575splitHere46","17719927splitHere46","synchronized"
"8576splitHere46","17719943splitHere46","ActiveXComponent wmi = new ActiveXComponent(<doubleQuotes46>WbemScripting.SWbemLocator<doubleQuotes46>);        <newline46mondego><newline46mondego>  Variant variantParameters[] = new Variant[4];<newline46mondego>  variantParameters[0] = new Variant(_IPADDRESS);<newline46mondego>  variantParameters[1] = new Variant(<doubleQuotes46>root\\cimv2<doubleQuotes46>);<newline46mondego>  variantParameters[2] = new Variant(<doubleQuotes46>username<doubleQuotes46>);<newline46mondego>  variantParameters[3] = new Variant(<doubleQuotes46>password<doubleQuotes46>);     <newline46mondego>  ActiveXComponent axWMI;<newline46mondego>try<newline46mondego>{<newline46mondego>    Variant conRet = wmi.invoke(<doubleQuotes46>ConnectServer<doubleQuotes46>, variantParameters);        <newline46mondego>    axWMI = new ActiveXComponent(conRet.toDispatch());<newline46mondego>}catch(ComFailException e)<newline46mondego>{<newline46mondego>    axWMI = null;<newline46mondego>}<newline46mondego>if (axWMI == null)<newline46mondego>    return false;<newline46mondego>"
"8577splitHere46","17720050splitHere46","Color"
"8578splitHere46","17720050splitHere46","new Color(Color.HSBtoRGB((float) Math.random(), (float) Math.random, 0.5F + ((float) Math.random())/2F));"
"8579splitHere46","17720176splitHere46","java.io.RandomAccessFile"
"8580splitHere46","17720335splitHere46","new FileWriter(<doubleQuotes46>transaction.txt<doubleQuotes46>,true);<newline46mondego>"
"8581splitHere46","17720600splitHere46","sheet.protectSheet(String password);<newline46mondego>"
"8582splitHere46","17720600splitHere46","lockFormatCells() and lockDeleteColumns()"
"8583splitHere46","17720600splitHere46","sheet.enableLocking()"
"8584splitHere46","17720600splitHere46","DataValidationConstraint activationDateConstraint = validationHelper.createDateConstraint(DataValidationConstraint.OperatorType.BETWEEN, <doubleQuotes46>=VLOOKUP($D3,Offices!$B$2:$D$6,3,FALSE)<doubleQuotes46>, <doubleQuotes46>=TODAY()<doubleQuotes46>, <doubleQuotes46>dd/mm/yy<doubleQuotes46>);<newline46mondego>"
"8585splitHere46","17720743splitHere46","innerConstraints.fill = GridBagConstraints.BOTH<newline46mondego>"
"8586splitHere46","17720743splitHere46","BOTH<newline46mondego>public static final int BOTH<newline46mondego>Resize the component both horizontally and vertically.<newline46mondego>"
"8587splitHere46","17720889splitHere46","String language = (String)Variables.getInstallerVariable(<doubleQuotes46>sys.languageId<doubleQuotes46>)<newline46mondego>"
"8588splitHere46","17720889splitHere46","Locale.setDefault(new Locale(language));<newline46mondego>"
"8589splitHere46","17720889splitHere46","Variables"
"8590splitHere46","17720940splitHere46","String s = <doubleQuotes46>abc<doubleQuotes46>;"
"8591splitHere46","17720940splitHere46","String s = new String(<doubleQuotes46>abc<doubleQuotes46>)"
"8592splitHere46","17720940splitHere46","toString()"
"8593splitHere46","17720940splitHere46","toString()"
"8594splitHere46","17720940splitHere46","String s = <doubleQuotes46>abc<doubleQuotes46>;<newline46mondego>String s1 = <doubleQuotes46>abc<doubleQuotes46>;<newline46mondego>"
"8595splitHere46","17720940splitHere46","s"
"8596splitHere46","17720940splitHere46","s1"
"8597splitHere46","17720940splitHere46","abc"
"8598splitHere46","17721050splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><resources><newline46mondego> <color name=<doubleQuotes46>white<doubleQuotes46>>#FFFFFF</color><newline46mondego> <color name=<doubleQuotes46>yellow<doubleQuotes46>>#FFFF00</color><newline46mondego> <color name=<doubleQuotes46>fuchsia<doubleQuotes46>>#FF00FF</color><newline46mondego> <color name=<doubleQuotes46>red<doubleQuotes46>>#FF0000</color><newline46mondego> <color name=<doubleQuotes46>silver<doubleQuotes46>>#C0C0C0</color><newline46mondego> <color name=<doubleQuotes46>gray<doubleQuotes46>>#808080</color><newline46mondego> <color name=<doubleQuotes46>olive<doubleQuotes46>>#808000</color><newline46mondego> <color name=<doubleQuotes46>purple<doubleQuotes46>>#800080</color><newline46mondego> <color name=<doubleQuotes46>maroon<doubleQuotes46>>#800000</color><newline46mondego> <color name=<doubleQuotes46>aqua<doubleQuotes46>>#00FFFF</color><newline46mondego> <color name=<doubleQuotes46>lime<doubleQuotes46>>#00FF00</color><newline46mondego> <color name=<doubleQuotes46>teal<doubleQuotes46>>#008080</color><newline46mondego> <color name=<doubleQuotes46>green<doubleQuotes46>>#008000</color><newline46mondego> <color name=<doubleQuotes46>blue<doubleQuotes46>>#0000FF</color><newline46mondego> <color name=<doubleQuotes46>navy<doubleQuotes46>>#000080</color><newline46mondego> <color name=<doubleQuotes46>black<doubleQuotes46>>#000000</color><newline46mondego></resources><newline46mondego><newline46mondego><newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><resources><newline46mondego> <color name=<doubleQuotes46>White<doubleQuotes46>>#FFFFFF</color><newline46mondego> <color name=<doubleQuotes46>Ivory<doubleQuotes46>>#FFFFF0</color><newline46mondego> <color name=<doubleQuotes46>LightYellow<doubleQuotes46>>#FFFFE0</color><newline46mondego> <color name=<doubleQuotes46>Yellow<doubleQuotes46>>#FFFF00</color><newline46mondego> <color name=<doubleQuotes46>Snow<doubleQuotes46>>#FFFAFA</color><newline46mondego> <color name=<doubleQuotes46>FloralWhite<doubleQuotes46>>#FFFAF0</color><newline46mondego> <color name=<doubleQuotes46>LemonChiffon<doubleQuotes46>>#FFFACD</color><newline46mondego> <color name=<doubleQuotes46>Cornsilk<doubleQuotes46>>#FFF8DC</color><newline46mondego> <color name=<doubleQuotes46>Seashell<doubleQuotes46>>#FFF5EE</color><newline46mondego> <color name=<doubleQuotes46>LavenderBlush<doubleQuotes46>>#FFF0F5</color><newline46mondego> <color name=<doubleQuotes46>PapayaWhip<doubleQuotes46>>#FFEFD5</color><newline46mondego> <color name=<doubleQuotes46>BlanchedAlmond<doubleQuotes46>>#FFEBCD</color><newline46mondego> <color name=<doubleQuotes46>MistyRose<doubleQuotes46>>#FFE4E1</color><newline46mondego> <color name=<doubleQuotes46>Bisque<doubleQuotes46>>#FFE4C4</color><newline46mondego> <color name=<doubleQuotes46>Moccasin<doubleQuotes46>>#FFE4B5</color><newline46mondego> <color name=<doubleQuotes46>NavajoWhite<doubleQuotes46>>#FFDEAD</color><newline46mondego> <color name=<doubleQuotes46>PeachPuff<doubleQuotes46>>#FFDAB9</color><newline46mondego> <color name=<doubleQuotes46>Gold<doubleQuotes46>>#FFD700</color><newline46mondego> <color name=<doubleQuotes46>Pink<doubleQuotes46>>#FFC0CB</color><newline46mondego> <color name=<doubleQuotes46>LightPink<doubleQuotes46>>#FFB6C1</color><newline46mondego> <color name=<doubleQuotes46>Orange<doubleQuotes46>>#FFA500</color><newline46mondego> <color name=<doubleQuotes46>LightSalmon<doubleQuotes46>>#FFA07A</color><newline46mondego> <color name=<doubleQuotes46>DarkOrange<doubleQuotes46>>#FF8C00</color><newline46mondego> <color name=<doubleQuotes46>Coral<doubleQuotes46>>#FF7F50</color><newline46mondego> <color name=<doubleQuotes46>HotPink<doubleQuotes46>>#FF69B4</color><newline46mondego> <color name=<doubleQuotes46>Tomato<doubleQuotes46>>#FF6347</color><newline46mondego> <color name=<doubleQuotes46>OrangeRed<doubleQuotes46>>#FF4500</color><newline46mondego> <color name=<doubleQuotes46>DeepPink<doubleQuotes46>>#FF1493</color><newline46mondego> <color name=<doubleQuotes46>Fuchsia<doubleQuotes46>>#FF00FF</color><newline46mondego> <color name=<doubleQuotes46>Magenta<doubleQuotes46>>#FF00FF</color><newline46mondego> <color name=<doubleQuotes46>Red<doubleQuotes46>>#FF0000</color><newline46mondego> <color name=<doubleQuotes46>OldLace<doubleQuotes46>>#FDF5E6</color><newline46mondego> <color name=<doubleQuotes46>LightGoldenrodYellow<doubleQuotes46>>#FAFAD2</color><newline46mondego> <color name=<doubleQuotes46>Linen<doubleQuotes46>>#FAF0E6</color><newline46mondego> <color name=<doubleQuotes46>AntiqueWhite<doubleQuotes46>>#FAEBD7</color><newline46mondego> <color name=<doubleQuotes46>Salmon<doubleQuotes46>>#FA8072</color><newline46mondego> <color name=<doubleQuotes46>GhostWhite<doubleQuotes46>>#F8F8FF</color><newline46mondego> <color name=<doubleQuotes46>MintCream<doubleQuotes46>>#F5FFFA</color><newline46mondego> <color name=<doubleQuotes46>WhiteSmoke<doubleQuotes46>>#F5F5F5</color><newline46mondego> <color name=<doubleQuotes46>Beige<doubleQuotes46>>#F5F5DC</color><newline46mondego> <color name=<doubleQuotes46>Wheat<doubleQuotes46>>#F5DEB3</color><newline46mondego> <color name=<doubleQuotes46>SandyBrown<doubleQuotes46>>#F4A460</color><newline46mondego> <color name=<doubleQuotes46>Azure<doubleQuotes46>>#F0FFFF</color><newline46mondego> <color name=<doubleQuotes46>Honeydew<doubleQuotes46>>#F0FFF0</color><newline46mondego> <color name=<doubleQuotes46>AliceBlue<doubleQuotes46>>#F0F8FF</color><newline46mondego> <color name=<doubleQuotes46>Khaki<doubleQuotes46>>#F0E68C</color><newline46mondego> <color name=<doubleQuotes46>LightCoral<doubleQuotes46>>#F08080</color><newline46mondego> <color name=<doubleQuotes46>PaleGoldenrod<doubleQuotes46>>#EEE8AA</color><newline46mondego> <color name=<doubleQuotes46>Violet<doubleQuotes46>>#EE82EE</color><newline46mondego> <color name=<doubleQuotes46>DarkSalmon<doubleQuotes46>>#E9967A</color><newline46mondego> <color name=<doubleQuotes46>Lavender<doubleQuotes46>>#E6E6FA</color><newline46mondego> <color name=<doubleQuotes46>LightCyan<doubleQuotes46>>#E0FFFF</color><newline46mondego> <color name=<doubleQuotes46>BurlyWood<doubleQuotes46>>#DEB887</color><newline46mondego> <color name=<doubleQuotes46>Plum<doubleQuotes46>>#DDA0DD</color><newline46mondego> <color name=<doubleQuotes46>Gainsboro<doubleQuotes46>>#DCDCDC</color><newline46mondego> <color name=<doubleQuotes46>Crimson<doubleQuotes46>>#DC143C</color><newline46mondego> <color name=<doubleQuotes46>PaleVioletRed<doubleQuotes46>>#DB7093</color><newline46mondego> <color name=<doubleQuotes46>Goldenrod<doubleQuotes46>>#DAA520</color><newline46mondego> <color name=<doubleQuotes46>Orchid<doubleQuotes46>>#DA70D6</color><newline46mondego> <color name=<doubleQuotes46>Thistle<doubleQuotes46>>#D8BFD8</color><newline46mondego> <color name=<doubleQuotes46>LightGrey<doubleQuotes46>>#D3D3D3</color><newline46mondego> <color name=<doubleQuotes46>Tan<doubleQuotes46>>#D2B48C</color><newline46mondego> <color name=<doubleQuotes46>Chocolate<doubleQuotes46>>#D2691E</color><newline46mondego> <color name=<doubleQuotes46>Peru<doubleQuotes46>>#CD853F</color><newline46mondego> <color name=<doubleQuotes46>IndianRed<doubleQuotes46>>#CD5C5C</color><newline46mondego> <color name=<doubleQuotes46>MediumVioletRed<doubleQuotes46>>#C71585</color><newline46mondego> <color name=<doubleQuotes46>Silver<doubleQuotes46>>#C0C0C0</color><newline46mondego> <color name=<doubleQuotes46>DarkKhaki<doubleQuotes46>>#BDB76B</color><newline46mondego> <color name=<doubleQuotes46>RosyBrown<doubleQuotes46>>#BC8F8F</color><newline46mondego> <color name=<doubleQuotes46>MediumOrchid<doubleQuotes46>>#BA55D3</color><newline46mondego> <color name=<doubleQuotes46>DarkGoldenrod<doubleQuotes46>>#B8860B</color><newline46mondego> <color name=<doubleQuotes46>FireBrick<doubleQuotes46>>#B22222</color><newline46mondego> <color name=<doubleQuotes46>PowderBlue<doubleQuotes46>>#B0E0E6</color><newline46mondego> <color name=<doubleQuotes46>LightSteelBlue<doubleQuotes46>>#B0C4DE</color><newline46mondego> <color name=<doubleQuotes46>PaleTurquoise<doubleQuotes46>>#AFEEEE</color><newline46mondego> <color name=<doubleQuotes46>GreenYellow<doubleQuotes46>>#ADFF2F</color><newline46mondego> <color name=<doubleQuotes46>LightBlue<doubleQuotes46>>#ADD8E6</color><newline46mondego> <color name=<doubleQuotes46>DarkGray<doubleQuotes46>>#A9A9A9</color><newline46mondego> <color name=<doubleQuotes46>Brown<doubleQuotes46>>#A52A2A</color><newline46mondego> <color name=<doubleQuotes46>Sienna<doubleQuotes46>>#A0522D</color><newline46mondego> <color name=<doubleQuotes46>YellowGreen<doubleQuotes46>>#9ACD32</color><newline46mondego> <color name=<doubleQuotes46>DarkOrchid<doubleQuotes46>>#9932CC</color><newline46mondego> <color name=<doubleQuotes46>PaleGreen<doubleQuotes46>>#98FB98</color><newline46mondego> <color name=<doubleQuotes46>DarkViolet<doubleQuotes46>>#9400D3</color><newline46mondego> <color name=<doubleQuotes46>MediumPurple<doubleQuotes46>>#9370DB</color><newline46mondego> <color name=<doubleQuotes46>LightGreen<doubleQuotes46>>#90EE90</color><newline46mondego> <color name=<doubleQuotes46>DarkSeaGreen<doubleQuotes46>>#8FBC8F</color><newline46mondego> <color name=<doubleQuotes46>SaddleBrown<doubleQuotes46>>#8B4513</color><newline46mondego> <color name=<doubleQuotes46>DarkMagenta<doubleQuotes46>>#8B008B</color><newline46mondego> <color name=<doubleQuotes46>DarkRed<doubleQuotes46>>#8B0000</color><newline46mondego> <color name=<doubleQuotes46>BlueViolet<doubleQuotes46>>#8A2BE2</color><newline46mondego> <color name=<doubleQuotes46>LightSkyBlue<doubleQuotes46>>#87CEFA</color><newline46mondego> <color name=<doubleQuotes46>SkyBlue<doubleQuotes46>>#87CEEB</color><newline46mondego> <color name=<doubleQuotes46>Gray<doubleQuotes46>>#808080</color><newline46mondego> <color name=<doubleQuotes46>Olive<doubleQuotes46>>#808000</color><newline46mondego> <color name=<doubleQuotes46>Purple<doubleQuotes46>>#800080</color><newline46mondego> <color name=<doubleQuotes46>Maroon<doubleQuotes46>>#800000</color><newline46mondego> <color name=<doubleQuotes46>Aquamarine<doubleQuotes46>>#7FFFD4</color><newline46mondego> <color name=<doubleQuotes46>Chartreuse<doubleQuotes46>>#7FFF00</color><newline46mondego> <color name=<doubleQuotes46>LawnGreen<doubleQuotes46>>#7CFC00</color><newline46mondego> <color name=<doubleQuotes46>MediumSlateBlue<doubleQuotes46>>#7B68EE</color><newline46mondego> <color name=<doubleQuotes46>LightSlateGray<doubleQuotes46>>#778899</color><newline46mondego> <color name=<doubleQuotes46>SlateGray<doubleQuotes46>>#708090</color><newline46mondego> <color name=<doubleQuotes46>OliveDrab<doubleQuotes46>>#6B8E23</color><newline46mondego> <color name=<doubleQuotes46>SlateBlue<doubleQuotes46>>#6A5ACD</color><newline46mondego> <color name=<doubleQuotes46>DimGray<doubleQuotes46>>#696969</color><newline46mondego> <color name=<doubleQuotes46>MediumAquamarine<doubleQuotes46>>#66CDAA</color><newline46mondego> <color name=<doubleQuotes46>CornflowerBlue<doubleQuotes46>>#6495ED</color><newline46mondego> <color name=<doubleQuotes46>CadetBlue<doubleQuotes46>>#5F9EA0</color><newline46mondego> <color name=<doubleQuotes46>DarkOliveGreen<doubleQuotes46>>#556B2F</color><newline46mondego> <color name=<doubleQuotes46>Indigo<doubleQuotes46>>#4B0082</color><newline46mondego> <color name=<doubleQuotes46>MediumTurquoise<doubleQuotes46>>#48D1CC</color><newline46mondego> <color name=<doubleQuotes46>DarkSlateBlue<doubleQuotes46>>#483D8B</color><newline46mondego> <color name=<doubleQuotes46>SteelBlue<doubleQuotes46>>#4682B4</color><newline46mondego> <color name=<doubleQuotes46>RoyalBlue<doubleQuotes46>>#4169E1</color><newline46mondego> <color name=<doubleQuotes46>Turquoise<doubleQuotes46>>#40E0D0</color><newline46mondego> <color name=<doubleQuotes46>MediumSeaGreen<doubleQuotes46>>#3CB371</color><newline46mondego> <color name=<doubleQuotes46>LimeGreen<doubleQuotes46>>#32CD32</color><newline46mondego> <color name=<doubleQuotes46>DarkSlateGray<doubleQuotes46>>#2F4F4F</color><newline46mondego> <color name=<doubleQuotes46>SeaGreen<doubleQuotes46>>#2E8B57</color><newline46mondego> <color name=<doubleQuotes46>ForestGreen<doubleQuotes46>>#228B22</color><newline46mondego> <color name=<doubleQuotes46>LightSeaGreen<doubleQuotes46>>#20B2AA</color><newline46mondego> <color name=<doubleQuotes46>DodgerBlue<doubleQuotes46>>#1E90FF</color><newline46mondego> <color name=<doubleQuotes46>MidnightBlue<doubleQuotes46>>#191970</color><newline46mondego> <color name=<doubleQuotes46>Aqua<doubleQuotes46>>#00FFFF</color><newline46mondego> <color name=<doubleQuotes46>Cyan<doubleQuotes46>>#00FFFF</color><newline46mondego> <color name=<doubleQuotes46>SpringGreen<doubleQuotes46>>#00FF7F</color><newline46mondego> <color name=<doubleQuotes46>Lime<doubleQuotes46>>#00FF00</color><newline46mondego> <color name=<doubleQuotes46>MediumSpringGreen<doubleQuotes46>>#00FA9A</color><newline46mondego> <color name=<doubleQuotes46>DarkTurquoise<doubleQuotes46>>#00CED1</color><newline46mondego> <color name=<doubleQuotes46>DeepSkyBlue<doubleQuotes46>>#00BFFF</color><newline46mondego> <color name=<doubleQuotes46>DarkCyan<doubleQuotes46>>#008B8B</color><newline46mondego> <color name=<doubleQuotes46>Teal<doubleQuotes46>>#008080</color><newline46mondego> <color name=<doubleQuotes46>Green<doubleQuotes46>>#008000</color><newline46mondego> <color name=<doubleQuotes46>DarkGreen<doubleQuotes46>>#006400</color><newline46mondego> <color name=<doubleQuotes46>Blue<doubleQuotes46>>#0000FF</color><newline46mondego> <color name=<doubleQuotes46>MediumBlue<doubleQuotes46>>#0000CD</color><newline46mondego> <color name=<doubleQuotes46>DarkBlue<doubleQuotes46>>#00008B</color><newline46mondego> <color name=<doubleQuotes46>Navy<doubleQuotes46>>#000080</color><newline46mondego> <color name=<doubleQuotes46>Black<doubleQuotes46>>#000000</color><newline46mondego></resources><newline46mondego>"
"8599splitHere46","17721218splitHere46","UNICODE_TRANS.put('Ã·', <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>"
"8600splitHere46","17721218splitHere46","UNICODE_TRANS.put('÷', <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>"
"8601splitHere46","17721218splitHere46","javac"
"8602splitHere46","17721218splitHere46","-encoding UTF-8"
"8603splitHere46","17721218splitHere46","UNICODE_TRANS.put('\u00F7', <doubleQuotes46>/<doubleQuotes46>);<newline46mondego>"
"8604splitHere46","17721228splitHere46","getTimeOfTheDayInMs()"
"8605splitHere46","17721228splitHere46","currentTimeMillis()"
"8606splitHere46","17721228splitHere46","Calendar"
"8607splitHere46","17721384splitHere46","String[] array = {<doubleQuotes46>yes<doubleQuotes46>,<doubleQuotes46>yes<doubleQuotes46>,<doubleQuotes46>yes<doubleQuotes46>,<doubleQuotes46>yes<doubleQuotes46>,<doubleQuotes46>no<doubleQuotes46>,<doubleQuotes46>no<doubleQuotes46>,<doubleQuotes46>no<doubleQuotes46>,<doubleQuotes46>no<doubleQuotes46>};<newline46mondego>Set<String> mySet = new HashSet<String>(Arrays.asList(array));<newline46mondego>"
"8608splitHere46","17721384splitHere46","yes"
"8609splitHere46","17721384splitHere46","no"
"8610splitHere46","17721627splitHere46","addRecipient"
"8611splitHere46","17721627splitHere46","addRecipient(<doubleQuotes46>alice@example.com<doubleQuotes46>, <doubleQuotes46>bob@example.com<doubleQuotes46>, <doubleQuotes46>charlie@example.com<doubleQuotes46>);<newline46mondego>"
"8612splitHere46","17721627splitHere46","addRecipient"
"8613splitHere46","17721627splitHere46","String[] rcpts = new String[] {<doubleQuotes46>alice@example.com<doubleQuotes46>, <doubleQuotes46>bob@example.com<doubleQuotes46>};<newline46mondego>addRecipient(rcpts);<newline46mondego>"
"8614splitHere46","17721627splitHere46","List"
"8615splitHere46","17721627splitHere46","List<String> rcptsList = new ArrayList<String>();<newline46mondego>rcptsList.add(<doubleQuotes46>alice@example.com<doubleQuotes46>);<newline46mondego>rcptsList.add(<doubleQuotes46>bob@example.com<doubleQuotes46>);<newline46mondego>addRecipient(rcptsList.toArray(new String[rcptsList.size()]));<newline46mondego>"
"8616splitHere46","17721657splitHere46","hx = xn / (n - 1);<newline46mondego>"
"8617splitHere46","17721657splitHere46","double hx = (double)xn / (n - 1);<newline46mondego>"
"8618splitHere46","17721789splitHere46","String programNumber = <doubleQuotes46>3<doubleQuotes46>;<newline46mondego>// create the result list (empty initially)<newline46mondego>List<Map<String, String>> episodesForProgramNumber = new ArrayList<>();<newline46mondego><newline46mondego>// loop through all the episodes<newline46mondego>for (Map<String, String> episode : allEpisodes) {<newline46mondego><newline46mondego>    // if the current episode has the given program number, add it to the result<newline46mondego>    if (programNumber.equals(episode.get(<doubleQuotes46>pN<doubleQuotes46>)) {<newline46mondego>        episodesForProgramNumber.add(episode);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8619splitHere46","17721789splitHere46","Program"
"8620splitHere46","17721789splitHere46","Episode"
"8621splitHere46","17721789splitHere46","Program"
"8622splitHere46","17721789splitHere46","List<Episode>"
"8623splitHere46","17721887splitHere46","// Store both numbers in one byte<newline46mondego>    byte firstNumber = 10;<newline46mondego>    byte secondNumber = 15;<newline46mondego>    final byte bothNumbers = (byte) ((firstNumber << 4) | secondNumber);<newline46mondego><newline46mondego>    // Retreive the original numbers<newline46mondego>    firstNumber = (byte) ((bothNumbers >> 4) & (byte) 0x0F);<newline46mondego>    secondNumber = (byte) (bothNumbers & 0x0F);<newline46mondego>"
"8624splitHere46","17722031splitHere46","@ManagedBean( name = <doubleQuotes46>someClass<doubleQuotes46> )<newline46mondego>public class SomeClass {<newline46mondego><newline46mondego>    boolean annotated = false;<newline46mondego><newline46mondego>    public boolean isAnnotated(){<newline46mondego>        return annotated;<newline46mondego>    }<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    public void postConstruct(){<newline46mondego>        if (inspect(this.getClass().getMethod(<doubleQuotes46>someMethod<doubleQuotes46>)){<newline46mondego>            annotated=true;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8625splitHere46","17722031splitHere46","<h:outputText <newline46mondego>    value=<doubleQuotes46>someMethod is annotated by @MyAnnotation<doubleQuotes46> <newline46mondego>    rendered=<doubleQuotes46>#{someClass.annotated}<doubleQuotes46><newline46mondego> /><newline46mondego>"
"8626splitHere46","17722031splitHere46","//Notice in this case we're using a METHOD, not a GETTER<newline46mondego>public boolean annotated(String methodName){<newline46mondego>    return inspect(this.getClass().getMethod(methodName);<newline46mondego>}<newline46mondego>"
"8627splitHere46","17722031splitHere46","<h:outputText <newline46mondego>        value=<doubleQuotes46>someMethod is annotated by @MyAnnotation<doubleQuotes46> <newline46mondego>        rendered=<doubleQuotes46>#{someClass.annotated('methodName')}<doubleQuotes46><newline46mondego>     /><newline46mondego>"
"8628splitHere46","17722031splitHere46","@ApplicationScoped"
"8629splitHere46","17722031splitHere46","@ManagedBean<newline46mondego>@ApplicationScoped<newline46mondego>public class InspectorBean{<newline46mondego><newline46mondego>    public boolean inspectMethod(String className, String methodName){<newline46mondego>        return inspect(Class.forName(className).getMethod(methodName));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8630splitHere46","17722031splitHere46","<h:outputText <newline46mondego>        value=<doubleQuotes46>someMethod is annotated by @MyAnnotation<doubleQuotes46> <newline46mondego>        rendered=<doubleQuotes46>#{inspectorBean.inspectMethod('completeClassName','methodName')}<doubleQuotes46><newline46mondego>     /><newline46mondego>"
"8631splitHere46","17722216splitHere46","virtual"
"8632splitHere46","17722248splitHere46","public class DummyJob{<newline46mondego><newline46mondego>public DummyJob() throws ParseException, SchedulerException {<newline46mondego><newline46mondego>JobDetail job = new JobDetail();<newline46mondego>job.setName(<doubleQuotes46>dummyJ<doubleQuotes46>);<newline46mondego>job.setJobClass(NotificationCreater.class);<newline46mondego><newline46mondego>SimpleTrigger trigger = new SimpleTrigger();<newline46mondego>trigger.setName(<doubleQuotes46>mn<doubleQuotes46>);<newline46mondego>trigger.setStartTime(new Date(System.currentTimeMillis() + 1000));<newline46mondego>trigger.setRepeatCount(SimpleTrigger.REPEAT_INDEFINITELY);<newline46mondego>trigger.setRepeatInterval(30000);<newline46mondego><newline46mondego>Scheduler scheduler = new StdSchedulerFactory().getScheduler();<newline46mondego>scheduler.start();<newline46mondego>scheduler.scheduleJob(job, trigger);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"8633splitHere46","17722248splitHere46","public class JobInitializerServlet extends HttpServlet {<newline46mondego><newline46mondego>/**<newline46mondego> * <newline46mondego> */<newline46mondego>private static final long serialVersionUID = 5102955939315248840L;<newline46mondego><newline46mondego>/**<newline46mondego> * Application logger to log info, debug, error messages.<newline46mondego> */<newline46mondego>private static final Logger APP_LOGGER = Logger.getLogger(<doubleQuotes46>appLogger<doubleQuotes46>);<newline46mondego><newline46mondego>/**<newline46mondego> * @see Servlet#init(ServletConfig) Initializes DummyJob<newline46mondego> */<newline46mondego>public void init(ServletConfig config) throws ServletException {<newline46mondego><newline46mondego>    try {<newline46mondego>        DummyJob scheduler = new DummyJob();<newline46mondego>    } catch (java.text.ParseException e) {<newline46mondego>        APP_LOGGER.error(e.getLocalizedMessage(), e);<newline46mondego>    } catch (SchedulerException e) {<newline46mondego>        APP_LOGGER.error(e.getLocalizedMessage(), e);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8634splitHere46","17722248splitHere46","<servlet><newline46mondego>    <description><newline46mondego>    </description><newline46mondego>    <display-name>JobInitializerServlet</display-name><newline46mondego>    <servlet-name>JobInitializerServlet</servlet-name><newline46mondego>    <servlet-class>com.job.servlet.JobInitializerServlet</servlet-class><newline46mondego>    <load-on-startup>1</load-on-startup><newline46mondego></servlet><newline46mondego>"
"8635splitHere46","17722254splitHere46","id"
"8636splitHere46","17722254splitHere46","id"
"8637splitHere46","17722254splitHere46","final"
"8638splitHere46","17722254splitHere46","volatile"
"8639splitHere46","17722254splitHere46","Request"
"8640splitHere46","17722265splitHere46","Dialog"
"8641splitHere46","17722265splitHere46","Activity"
"8642splitHere46","17722265splitHere46","Context.startActivity"
"8643splitHere46","17722265splitHere46","Context.startActivityForResult"
"8644splitHere46","17722265splitHere46","Bundle"
"8645splitHere46","17722265splitHere46","Activity"
"8646splitHere46","17722265splitHere46","Activity"
"8647splitHere46","17722265splitHere46","Activity"
"8648splitHere46","17722265splitHere46","startActivity"
"8649splitHere46","17722265splitHere46","Intent"
"8650splitHere46","17722265splitHere46","FLAG_ACTIVITY_REORDER_TO_FRONT"
"8651splitHere46","17722322splitHere46","ButtonGroup.clearSelection()"
"8652splitHere46","17722328splitHere46","foo.doStuff()"
"8653splitHere46","17722328splitHere46","foo.doStuff(null)"
"8654splitHere46","17722328splitHere46","ExpectedException"
"8655splitHere46","17722328splitHere46","private Foo foo;<newline46mondego><newline46mondego>@Before <newline46mondego>public void setUp() {<newline46mondego> foo = new Foo();<newline46mondego>}<newline46mondego><newline46mondego>@Test(expected = IndexOutOfBoundsException.class)<newline46mondego>public void noArgsShouldFail() {<newline46mondego> foo.doStuff();<newline46mondego>}<newline46mondego><newline46mondego>@Test(expected = NullPointerException.class)<newline46mondego>public void nullArgShouldFail() {<newline46mondego> foo.doStuff(null);<newline46mondego>}<newline46mondego><newline46mondego>@Test(expected = MyOwnException.class)<newline46mondego>public void nullAndEmptyStringShouldFail() {<newline46mondego> foo.doStuff(null,<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>@Test(expected = DomainException.class)<newline46mondego>public void doOtherStuffShouldFail() {<newline46mondego> foo.doOtherStuff();<newline46mondego>}<newline46mondego>"
"8656splitHere46","17722328splitHere46","fail"
"8657splitHere46","17722328splitHere46","@Test<newline46mondego>public void testFailuresOfClass() {<newline46mondego> Foo foo = new Foo();<newline46mondego><newline46mondego> try {<newline46mondego>    foo.doStuff();<newline46mondego>    fail(<doubleQuotes46>doStuff() should not have succeeded<doubleQuotes46>);<newline46mondego> } catch (IndexOutOfBoundsException expected) {<newline46mondego>    // This is what we want.<newline46mondego> }<newline46mondego> try {<newline46mondego>    foo.doStuff(null);<newline46mondego>    fail(<doubleQuotes46>doStuff(null) should not have succeeded<doubleQuotes46>);<newline46mondego> } catch (NullPointerException expected) {<newline46mondego>    // This is what we want.<newline46mondego> }<newline46mondego> // etc for other failure modes<newline46mondego>}<newline46mondego>"
"8658splitHere46","17722382splitHere46","OLD_FORMAT"
"8659splitHere46","17722382splitHere46","<doubleQuotes46>yyyy-MM-dd<doubleQuotes46>"
"8660splitHere46","17722382splitHere46","m"
"8661splitHere46","17722382splitHere46","M"
"8662splitHere46","17722382splitHere46","m"
"8663splitHere46","17722382splitHere46","M"
"8664splitHere46","17722382splitHere46","OLD_FORMAT"
"8665splitHere46","17722414splitHere46","Date date = new Date(unixTime * 1000);<newline46mondego>String str = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>).format(date);<newline46mondego>"
"8666splitHere46","17722414splitHere46","String str = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>).format(unixTime * 1000);<newline46mondego>"
"8667splitHere46","17722644splitHere46","@RequestMapping(value = <doubleQuotes46>/doSomething<doubleQuotes46>)<newline46mondego>public @ResponseBody DoSomethingResultDTO doSomething(<newline46mondego>    @RequestBody DoSomethingRequestDTO, Principal principal)<newline46mondego>"
"8668splitHere46","17722785splitHere46","className"
"8669splitHere46","17722785splitHere46","@Entity(noClassnameStored = true)"
"8670splitHere46","17722785splitHere46","className"
"8671splitHere46","17722785splitHere46","className"
"8672splitHere46","17722785splitHere46","@Polimorphic"
"8673splitHere46","17722818splitHere46","while ((strLine = br.readLine()) != null) {<newline46mondego>    Paragraph para = new com.lowagie.text.Paragraph(strLine + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    para.setAlignment(Element.ALIGN_JUSTIFIED);<newline46mondego>    document.add(para);<newline46mondego>}<newline46mondego>"
"8674splitHere46","17722818splitHere46","Font"
"8675splitHere46","17722818splitHere46","Paragraph para = new com.lowagie.text.Paragraph(strLine + <doubleQuotes46>\n<doubleQuotes46>, FontFactory.getFont(<doubleQuotes46>Arial<doubleQuotes46>, 14f /*This is the size, but as a float!*/);<newline46mondego>"
"8676splitHere46","17722870splitHere46","username"
"8677splitHere46","17722870splitHere46","password"
"8678splitHere46","17722870splitHere46","clientFactory"
"8679splitHere46","17722870splitHere46","clientFactory"
"8680splitHere46","17722870splitHere46","<property name=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46>yourUsername<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>password<doubleQuotes46> value=<doubleQuotes46>yourPassword<doubleQuotes46>/><newline46mondego>"
"8681splitHere46","17722921splitHere46","int num = 1234;<newline46mondego>double sum = num.ToString().Sum(s => Char.GetNumericValue(s));<newline46mondego>"
"8682splitHere46","17723003splitHere46","T"
"8683splitHere46","17723003splitHere46","public final class Utilities { <newline46mondego>  ... <newline46mondego>  public static <T> HashSet<T> create(int size) {  <newline46mondego>    return new HashSet<T>(size);  <newline46mondego>  } <newline46mondego>} <newline46mondego>public final class Test <newline46mondego>  public static void main(String[] args) { <newline46mondego>    HashSet<Integer> hi = Utilities.create(10); // T is inferred from LHS to be `Integer`<newline46mondego>  } <newline46mondego>}<newline46mondego>"
"8684splitHere46","17723028splitHere46","@SessionAttributes"
"8685splitHere46","17723028splitHere46","@ModelAttribute"
"8686splitHere46","17723028splitHere46","@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/counter<doubleQuotes46>)<newline46mondego>@SessionAttributes(<doubleQuotes46>mycounter<doubleQuotes46>)<newline46mondego>public class CounterController {<newline46mondego><newline46mondego>  // Checks if there's a model attribute 'mycounter', if not create a new one.<newline46mondego>  // Since 'mycounter' is labelled as session attribute it will be persisted to<newline46mondego>  // HttpSession<newline46mondego>  @RequestMapping(method = GET)<newline46mondego>  public String get(Model model) {<newline46mondego>    if(!model.containsAttribute(<doubleQuotes46>mycounter<doubleQuotes46>)) {<newline46mondego>      model.addAttribute(<doubleQuotes46>mycounter<doubleQuotes46>, new MyCounter(0));<newline46mondego>    }<newline46mondego>    return <doubleQuotes46>counter<doubleQuotes46>;<newline46mondego>  }<newline46mondego><newline46mondego>  // Obtain 'mycounter' object for this user's session and increment it<newline46mondego>  @RequestMapping(method = POST)<newline46mondego>  public String post(@ModelAttribute(<doubleQuotes46>mycounter<doubleQuotes46>) MyCounter myCounter) {<newline46mondego>    myCounter.increment();<newline46mondego>    return <doubleQuotes46>redirect:/counter<doubleQuotes46>;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8687splitHere46","17723030splitHere46","if (myIndex < myFirstStringArray.length) {<newline46mondego>    System.out.println(<doubleQuotes46>Present<doubleQuotes46>);<newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>Not Present<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"8688splitHere46","17723394splitHere46","SharedPreferences settings = PreferenceManager.getDefaultSharedPreferences(this);<newline46mondego>SharedPreferences.Editor editor = settings.edit(); <newline46mondego>                        editor.putBoolean(<doubleQuotes46>proversion<doubleQuotes46>, true);<newline46mondego>                        editor.commit();<newline46mondego>"
"8689splitHere46","17723394splitHere46","SharedPreferences settings = PreferenceManager.getDefaultSharedPreferences(this);<newline46mondego>boolean proversion= settings.getBoolean(<doubleQuotes46>proversion<doubleQuotes46>, false);<newline46mondego>"
"8690splitHere46","17723394splitHere46","if (proversion) {<newline46mondego>// pro Version DB<newline46mondego>}<newline46mondego>"
"8691splitHere46","17723773splitHere46","SimpleDateFormat format  = new SimpleDateFormat(<doubleQuotes46>dd.MM.yyyy HH:mm:ss<doubleQuotes46>);<newline46mondego>Date date = format.parse(<doubleQuotes46>18.07.2013 15:31:10<doubleQuotes46>);<newline46mondego>Calendar calendar = Calendar.getInstance();<newline46mondego>calenadr.setTime(date);<newline46mondego>"
"8692splitHere46","17723773splitHere46","calendar"
"8693splitHere46","17723773splitHere46","int dayOfTheWeek = calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH);<newline46mondego>"
"8694splitHere46","17723807splitHere46","system32"
"8695splitHere46","17723807splitHere46","PATH"
"8696splitHere46","17723972splitHere46","Geocoder geocoder = new Geocoder(this, Locale.getDefault());<newline46mondego>List<Address> addresses = geocoder.getFromLocation(gettextLat, getTextLong, 1);<newline46mondego>"
"8697splitHere46","17723972splitHere46","public class myLocationListner implements LocationListener{<newline46mondego><newline46mondego>    Geocoder mGeocoder;<newline46mondego><newline46mondego>    // default constructor<newline46mondego>    myLocationListener() {<newline46mondego>        // instantiate geocoder object:<newline46mondego>        mGeocoder = new Geocoder(this, Locale.getDefault());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onLocationChanged(Location location) {<newline46mondego>        if (location != null){<newline46mondego><newline46mondego>            double gettextLong = location.getLongitude();<newline46mondego>            double gettextLat = location.getLatitude();<newline46mondego><newline46mondego>            textLat.setText(Double.toString(gettextLat));<newline46mondego>            textLong.setText(Double.toString(gettextLong));<newline46mondego><newline46mondego>            List<Address> addresses = mGeocoder.getFromLocation(gettextLat, getTextLong, 1);<newline46mondego><newline46mondego>        }<newline46mondego>   }<newline46mondego>"
"8698splitHere46","17723977splitHere46","hours = Hours.hoursBetween(new LocalDateTime(DateTime1), new LocalDateTime(DateTime2)).getHours();<newline46mondego>"
"8699splitHere46","17724008splitHere46","Hashtable dataStock = new Hashtable();<newline46mondego>    dataStock.put(<doubleQuotes46>someArray<doubleQuotes46>, new Float[24]);<newline46mondego>    Float[] anotherArray = (Float[]) dataStock.get(<doubleQuotes46>someArray<doubleQuotes46>);<newline46mondego>"
"8700splitHere46","17724008splitHere46","dataStock"
"8701splitHere46","17724008splitHere46","someArray"
"8702splitHere46","17724008splitHere46","Float[]"
"8703splitHere46","17724093splitHere46","exec(String[] cmdarray)"
"8704splitHere46","17724093splitHere46","Process process = runtime.exec(new String[] {<doubleQuotes46>/usr/bin/adb<doubleQuotes46>, <doubleQuotes46>devices<doubleQuotes46>});<newline46mondego>"
"8705splitHere46","17724230splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><newline46mondego><?import java.lang.*?><newline46mondego><?import java.util.*?><newline46mondego><?import javafx.geometry.*?><newline46mondego><?import javafx.scene.control.*?><newline46mondego><?import javafx.scene.image.*?><newline46mondego><?import javafx.scene.layout.*?><newline46mondego><?import javafx.scene.paint.*?><newline46mondego><newline46mondego><?import javafx.scene.Group?><newline46mondego><AnchorPane id=<doubleQuotes46>AnchorPane<doubleQuotes46> maxHeight=<doubleQuotes46>-Infinity<doubleQuotes46> maxWidth=<doubleQuotes46>-Infinity<doubleQuotes46> minHeight=<doubleQuotes46>-Infinity<doubleQuotes46> minWidth=<doubleQuotes46>-Infinity<doubleQuotes46> prefHeight=<doubleQuotes46>700.0<doubleQuotes46> prefWidth=<doubleQuotes46>700.0<doubleQuotes46> xmlns:fx=<doubleQuotes46>http://javafx.com/fxml<doubleQuotes46> fx:controller=<doubleQuotes46>test.StackOverflowController<doubleQuotes46>><newline46mondego>  <children><newline46mondego>    <VBox prefHeight=<doubleQuotes46>687.0<doubleQuotes46> prefWidth=<doubleQuotes46>710.0<doubleQuotes46> AnchorPane.bottomAnchor=<doubleQuotes46>0.0<doubleQuotes46> AnchorPane.leftAnchor=<doubleQuotes46>0.0<doubleQuotes46> AnchorPane.rightAnchor=<doubleQuotes46>0.0<doubleQuotes46> AnchorPane.topAnchor=<doubleQuotes46>0.0<doubleQuotes46>><newline46mondego>      <children><newline46mondego>        <ToolBar prefWidth=<doubleQuotes46>600.0<doubleQuotes46> style=<doubleQuotes46>-fx-base: firebrick<doubleQuotes46>><newline46mondego>          <items><newline46mondego>            <Button fx:id=<doubleQuotes46>btn_ImgFromFile<doubleQuotes46> mnemonicParsing=<doubleQuotes46>false<doubleQuotes46> style=<doubleQuotes46>-fx-base: firebrick<doubleQuotes46> text=<doubleQuotes46>Load Image From File<doubleQuotes46> /><newline46mondego>            <Button fx:id=<doubleQuotes46>btn_ImgFromWindow<doubleQuotes46> mnemonicParsing=<doubleQuotes46>false<doubleQuotes46> style=<doubleQuotes46>-fx-base: firebrick<doubleQuotes46> text=<doubleQuotes46>Load Image From Window<doubleQuotes46> /><newline46mondego>            <Separator orientation=<doubleQuotes46>VERTICAL<doubleQuotes46> prefHeight=<doubleQuotes46>21.0<doubleQuotes46> /><newline46mondego>            <Button fx:id=<doubleQuotes46>btn_LoadInfo<doubleQuotes46> mnemonicParsing=<doubleQuotes46>false<doubleQuotes46> style=<doubleQuotes46>-fx-base: firebrick<doubleQuotes46> text=<doubleQuotes46>Load Window Info<doubleQuotes46> /><newline46mondego>            <Button fx:id=<doubleQuotes46>btn_SaveInfo<doubleQuotes46> mnemonicParsing=<doubleQuotes46>false<doubleQuotes46> style=<doubleQuotes46>-fx-base: firebrick<doubleQuotes46> text=<doubleQuotes46>Save Window Info<doubleQuotes46> /><newline46mondego>          </items><newline46mondego>        </ToolBar><newline46mondego>        <StackPane fx:id=<doubleQuotes46>pane_main<doubleQuotes46> prefHeight=<doubleQuotes46>200.0<doubleQuotes46> prefWidth=<doubleQuotes46>200.0<doubleQuotes46> VBox.vgrow=<doubleQuotes46>ALWAYS<doubleQuotes46>><newline46mondego>          <children><newline46mondego>            <Group><newline46mondego>            <ScrollPane fx:id=<doubleQuotes46>scroll_pane<doubleQuotes46> prefHeight=<doubleQuotes46>200.0<doubleQuotes46> prefWidth=<doubleQuotes46>200.0<doubleQuotes46> AnchorPane.bottomAnchor=<doubleQuotes46>-1.0<doubleQuotes46> AnchorPane.leftAnchor=<doubleQuotes46>0.0<doubleQuotes46> AnchorPane.rightAnchor=<doubleQuotes46>0.0<doubleQuotes46> AnchorPane.topAnchor=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego>              <content><newline46mondego>                <StackPane fx:id=<doubleQuotes46>stack_pane<doubleQuotes46> prefHeight=<doubleQuotes46>230.0<doubleQuotes46> prefWidth=<doubleQuotes46>333.0<doubleQuotes46> style=<doubleQuotes46>-fx-background-color: #000000;<doubleQuotes46> /><newline46mondego>              </content><newline46mondego>            </ScrollPane><newline46mondego>            </Group><newline46mondego>          </children><newline46mondego>        </StackPane><newline46mondego>      </children><newline46mondego>    </VBox><newline46mondego>  </children><newline46mondego></AnchorPane><newline46mondego>"
"8706splitHere46","17724358splitHere46","speakOut();"
"8707splitHere46","17724358splitHere46","onInit(int status)"
"8708splitHere46","17724358splitHere46","speakOut();"
"8709splitHere46","17724358splitHere46","private void speakOut(String text) {<newline46mondego>    tts.speak(text, TextToSpeech.QUEUE_FLUSH, null);<newline46mondego>}<newline46mondego>"
"8710splitHere46","17724358splitHere46","@Override<newline46mondego> public void onClick(View v) {<newline46mondego>     View parent = (View)v.getParent();<newline46mondego>     ViewHolder vh = (ViewHolder)parent.getTag();<newline46mondego>     TextView tv = vh.text1;<newline46mondego>     speakOut(tv.getText().toString());<newline46mondego> }<newline46mondego>"
"8711splitHere46","17724375splitHere46","tick()"
"8712splitHere46","17724375splitHere46","TickCount"
"8713splitHere46","17724375splitHere46","ticked"
"8714splitHere46","17724674splitHere46","!instanceof UIResource"
"8715splitHere46","17724674splitHere46","private void setExceptionState(JComponent password) {<newline46mondego>    password.setBackground(null);<newline46mondego>    UIDefaults overrides = new UIDefaults();<newline46mondego>    overrides.put(<doubleQuotes46>PasswordField.background<doubleQuotes46>, Color.RED);<newline46mondego>    password.putClientProperty(<doubleQuotes46>Nimbus.Overrides<doubleQuotes46>, overrides);<newline46mondego>}<newline46mondego><newline46mondego>private void resetExceptionState(JComponent password) {<newline46mondego>    password.setBackground(null);<newline46mondego>    UIDefaults overrides = new UIDefaults();<newline46mondego>    overrides.put(<doubleQuotes46>PasswordField.background<doubleQuotes46>, Color.WHITE);<newline46mondego>    password.putClientProperty(<doubleQuotes46>Nimbus.Overrides<doubleQuotes46>, overrides);<newline46mondego>}<newline46mondego>"
"8716splitHere46","17724674splitHere46","protected void installCustomPasswordFieldState() {<newline46mondego>    // implement a custom state<newline46mondego>    State<JPasswordField> state = new State<JPasswordField>(<doubleQuotes46>Invalid<doubleQuotes46>) {<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected boolean isInState(JPasswordField c) {<newline46mondego>            Object invalid = c.getClientProperty(<doubleQuotes46>Invalid<doubleQuotes46>);<newline46mondego>            return Boolean.TRUE.equals(invalid);<newline46mondego>        }<newline46mondego><newline46mondego>    };<newline46mondego>    UIDefaults defaults = UIManager.getLookAndFeelDefaults();<newline46mondego>    // register available states <newline46mondego>    // note: couldn't find a way to grab the already available states<newline46mondego>    // so this is guesswork<newline46mondego>    defaults.put(<doubleQuotes46>PasswordField.States<doubleQuotes46>, <doubleQuotes46>Enabled, Focused, Invalid<doubleQuotes46>);<newline46mondego>    // install the custom state<newline46mondego>    defaults.put(<doubleQuotes46>PasswordField.Invalid<doubleQuotes46>, state);<newline46mondego>    // install the properties for the custom state<newline46mondego>    // note: background has no effect<newline46mondego>    defaults.put(<doubleQuotes46>PasswordField[Invalid].background<doubleQuotes46>, <newline46mondego>            Color.RED); <newline46mondego>    javax.swing.Painter<JComponent> p = new javax.swing.Painter<JComponent>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void paint(Graphics2D g, JComponent object, int width, int height) {<newline46mondego>            g.setColor(Color.RED);<newline46mondego>            // this is crude - overpainting the complete area, do better!<newline46mondego>            g.fillRect(0, 0, width, height);<newline46mondego>        }<newline46mondego><newline46mondego>    };<newline46mondego>    // using a painter has an effect <newline46mondego>    defaults.put(<doubleQuotes46>PasswordField[Invalid].backgroundPainter<doubleQuotes46>, p);<newline46mondego>}<newline46mondego><newline46mondego>// example usage, toggling<newline46mondego>// a new property (for simplicity implemented as clientProperty<newline46mondego>// to toggle the invalid state<newline46mondego>Action reset = new AbstractAction(<doubleQuotes46>reset<doubleQuotes46>) {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        boolean isInvalid = Boolean.TRUE.equals(field.getClientProperty(<doubleQuotes46>Invalid<doubleQuotes46>)); <newline46mondego>        if (isInvalid) {<newline46mondego>            field.putClientProperty(<doubleQuotes46>Invalid<doubleQuotes46>, null); <newline46mondego>        } else {<newline46mondego>            field.putClientProperty(<doubleQuotes46>Invalid<doubleQuotes46>, Boolean.TRUE); <newline46mondego>        }<newline46mondego>        field.repaint();<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"8717splitHere46","17724679splitHere46","getFieldOrder()"
"8718splitHere46","17724736splitHere46","String expected = <newline46mondego>       <doubleQuotes46><?xml version=\<doubleQuotes46>1.0\<doubleQuotes46> encoding=\<doubleQuotes46>ISO-8859-1\<doubleQuotes46>?>RATE>1.0</RATE><doubleQuotes46>;<newline46mondego>Assert.assertEquals(expected,<newline46mondego>       <doubleQuotes46><RATE>1.0</RATE><doubleQuotes46>, XMLUtil.formatXML(TEST_XML).replaceAll(<doubleQuotes46>[\r\n]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"8719splitHere46","17724771splitHere46","BufferedWriter.newline()"
"8720splitHere46","17724771splitHere46","line.separator"
"8721splitHere46","17724771splitHere46","\r\n"
"8722splitHere46","17724798splitHere46","String id;<newline46mondego>    String mailToString; <newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>Message-ID: <(.*)><doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(mailToString);<newline46mondego>    if(m.find()){<newline46mondego>        id =  m.group();<newline46mondego>    }<newline46mondego>"
"8723splitHere46","17724825splitHere46","fromXML"
"8724splitHere46","17724825splitHere46","String"
"8725splitHere46","17724825splitHere46","fromXML"
"8726splitHere46","17724825splitHere46","File"
"8727splitHere46","17724825splitHere46","URL"
"8728splitHere46","17724825splitHere46","InputStream"
"8729splitHere46","17724826splitHere46","ResourceConfig rc = new ResourceConfig(HelloWorldResource.class);<newline46mondego>HttpServer server = JdkHttpServerFactory.createHttpServer(baseUri, rc);<newline46mondego>"
"8730splitHere46","17724874splitHere46","String text = <doubleQuotes46> 1 2 3 4 5 6 7 8 9 10<doubleQuotes46>;<newline46mondego>text = text.replace(<doubleQuotes46> <doubleQuotes46>,<doubleQuotes46>\\\\<doubleQuotes46>);<newline46mondego>System.out.println(text2);<newline46mondego>"
"8731splitHere46","17724914splitHere46","for (i=0; i<10; i++) {<newline46mondego>  int rand = (int) Math.round(Math.random() * 100);<newline46mondego>  arr[i] = rand;<newline46mondego>}<newline46mondego>"
"8732splitHere46","17724924splitHere46","if(req.getParameter(<doubleQuotes46>report<doubleQuotes46>).equals(<doubleQuotes46>true<doubleQuotes46>))<newline46mondego>{<newline46mondego>  req.getSession().setAttrinute(<doubleQuotes46>REPORT_OK<doubleQuotes46>,false);<newline46mondego>  //If the query string parameter is set, generate the PDF.<newline46mondego>  if(!PdfReportGenerator.generateReport(res, repositoryURI)) {<newline46mondego>    // Something went wrong, so redirect the browser.<newline46mondego>    res.sendRedirect(req.getRequestURI());<newline46mondego>  }else{<newline46mondego>    req.getSession().setAttrinute(<doubleQuotes46>REPORT_OK<doubleQuotes46>,true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8733splitHere46","17724924splitHere46","REPORT_OK"
"8734splitHere46","17724924splitHere46","null"
"8735splitHere46","17724924splitHere46","false"
"8736splitHere46","17724924splitHere46","true"
"8737splitHere46","17724924splitHere46","$(document).ready(function() {<newline46mondego>  var divToChange = $('#message');//div id of the message you show to user<newline46mondego>  $.ajax({<newline46mondego>    type: 'POST',<newline46mondego>    url: 'checkReport.jsp',<newline46mondego>    data: {},<newline46mondego>    beforeSend:function(){<newline46mondego>        divToChange.html('Loading...');<newline46mondego>    },<newline46mondego>    success:function(data){<newline46mondego>        divToChange.html(data);<newline46mondego>    },<newline46mondego>    error:function(){<newline46mondego>        divToChange.html('Checking file failed!');<newline46mondego>    }<newline46mondego>  });<newline46mondego>)};<newline46mondego>"
"8738splitHere46","17724924splitHere46","checkReport.jsp"
"8739splitHere46","17724924splitHere46","<%<newline46mondego>Boolean status = (Boolean) session.getAttribute(<doubleQuotes46>REPORT_OK<doubleQuotes46>);<newline46mondego>if(status==null){<newline46mondego>    //dont return anything<newline46mondego>}else if(status){<newline46mondego>    out.print(<doubleQuotes46>Report is ok<doubleQuotes46>);<newline46mondego>}else {<newline46mondego>    out.print(<doubleQuotes46>Report generation failed <doubleQuotes46>);<newline46mondego>}<newline46mondego>%><newline46mondego>"
"8740splitHere46","17725053splitHere46","setDataSource"
"8741splitHere46","17725053splitHere46","prepare()"
"8742splitHere46","17725053splitHere46","player.setDataSource(getAssets().openFd(<doubleQuotes46>raw/airbourne_runnin_wild.mp3<doubleQuotes46>).getFileDescriptor());<newline46mondego>player.prepare();<newline46mondego>"
"8743splitHere46","17725053splitHere46","setDataSource()"
"8744splitHere46","17725053splitHere46","prepare()"
"8745splitHere46","17725053splitHere46","MediaPlayer.create()"
"8746splitHere46","17725053splitHere46","setDataSource()"
"8747splitHere46","17725053splitHere46",".create()"
"8748splitHere46","17725053splitHere46",".stop()"
"8749splitHere46","17725053splitHere46",".pause()"
"8750splitHere46","17725053splitHere46",".play()"
"8751splitHere46","17725265splitHere46","@RequestParam"
"8752splitHere46","17725265splitHere46","@ResourceMapping(<doubleQuotes46>entitledRequest<doubleQuotes46>)<newline46mondego>public void getServiceAutoComplete(@RequestParam(<doubleQuotes46>pfx<doubleQuotes46>)  String elemPrefix, @RequestParam  String acc, @RequestParam String mac, ResourceRequest request, ResourceResponse response) throws IOException {<newline46mondego><newline46mondego>}<newline46mondego>"
"8753splitHere46","17725265splitHere46","Parameters"
"8754splitHere46","17725265splitHere46","Ajax"
"8755splitHere46","17725265splitHere46","PortletNamespace"
"8756splitHere46","17725265splitHere46","ResourceRequest"
"8757splitHere46","17725265splitHere46","HTTPServletRequest"
"8758splitHere46","17725265splitHere46","Spring"
"8759splitHere46","17725265splitHere46","@RequestParam"
"8760splitHere46","17725265splitHere46","HTTPServletRequest"
"8761splitHere46","17725265splitHere46","<portlet:namespace/>"
"8762splitHere46","17725265splitHere46","Ajax"
"8763splitHere46","17725265splitHere46","Controller"
"8764splitHere46","17725333splitHere46","public static byte[] encrypt(byte[] decrypted, byte[] keyvalue) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException{<newline46mondego>    MessageDigest sha256 = MessageDigest.getInstance(<doubleQuotes46>SHA-256<doubleQuotes46>);<newline46mondego>    byte[] key = sha256.digest(keyvalue);<newline46mondego><newline46mondego>    MessageDigest md5 = MessageDigest.getInstance(<doubleQuotes46>MD5<doubleQuotes46>);<newline46mondego>    byte[] checksum = md5.digest(decrypted);<newline46mondego><newline46mondego>    //The length of the value to encrypt must be a multiple of 16.<newline46mondego>    byte[] decryptedAndChecksum = new byte[(decrypted.length + md5.getDigestLength() + 15) / 16 * 16];<newline46mondego>    System.arraycopy(decrypted, 0, decryptedAndChecksum, 0, decrypted.length);<newline46mondego>    System.arraycopy(checksum, 0, decryptedAndChecksum, decrypted.length, checksum.length);<newline46mondego>    //The remaining bytes of decryptedAndChecksum stay as 0 (default byte value) because PHP pads with 0's.<newline46mondego><newline46mondego>    SecureRandom rnd = new SecureRandom();<newline46mondego>    byte[] iv = new byte[16];<newline46mondego>    rnd.nextBytes(iv);<newline46mondego>    IvParameterSpec ivSpec = new IvParameterSpec(iv);<newline46mondego><newline46mondego>    Cipher cipher = Cipher.getInstance(<doubleQuotes46>AES/CBC/NoPadding<doubleQuotes46>);<newline46mondego>    cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, <doubleQuotes46>AES<doubleQuotes46>), ivSpec);<newline46mondego>    byte[] encrypted = Base64.encodeBase64(cipher.doFinal(decryptedAndChecksum));<newline46mondego><newline46mondego>    byte[] ivBase64 = Base64.encodeBase64String(iv).substring(0, 22).getBytes();<newline46mondego>    byte[] output = new byte[encrypted.length + ivBase64.length];<newline46mondego>    System.arraycopy(ivBase64, 0, output, 0, ivBase64.length);<newline46mondego>    System.arraycopy(encrypted, 0, output, ivBase64.length, encrypted.length);<newline46mondego>    return output;<newline46mondego>}<newline46mondego>"
"8765splitHere46","17725333splitHere46","Base64"
"8766splitHere46","17725570splitHere46","07-18 18:57:24.687: W/System.err(7031): java.net.SocketTimeoutException: Read timed out <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSL_read(Native Method) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:675) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.io.Streams.readSingleByte(Streams.java:41) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:659) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.io.Streams.readAsciiLine(Streams.java:201) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.net.http.HttpEngine.readResponseHeaders(HttpEngine.java:560) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.net.http.HttpEngine.readResponse(HttpEngine.java:813) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.net.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:274) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.net.http.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:168) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at libcore.net.http.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:271) <newline46mondego>07-18 18:57:24.773: W/System.err(7031): at com.Webservice.downloadFileAddPassword(Webservice.java:192) <newline46mondego>07-18 18:57:24.777: W/System.err(7031): at com.patientcontext.DocumentViewerActivity2$DocumentsShowAsyncTask.doInBackground(DocumentViewerActivity2.java:219) <newline46mondego>07-18 18:57:24.777: W/System.err(7031): at com.patientcontext.DocumentViewerActivity2$DocumentsShowAsyncTask.doInBackground(DocumentViewerActivity2.java:1) <newline46mondego>07-18 18:57:24.777: W/System.err(7031): at android.os.AsyncTask$2.call(AsyncTask.java:287) <newline46mondego>07-18 18:57:24.777: W/System.err(7031): at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305) <newline46mondego>07-18 18:57:24.777: W/System.err(7031): at java.util.concurrent.FutureTask.run(FutureTask.java:137) <newline46mondego>07-18 18:57:24.777: W/System.err(7031): at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:230) <newline46mondego>07-18 18:57:24.781: W/System.err(7031): at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076) <newline46mondego>07-18 18:57:24.785: W/System.err(7031): at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569) <newline46mondego>07-18 18:57:24.785: W/System.err(7031): at java.lang.Thread.run(Thread.java:856)<newline46mondego>"
"8767splitHere46","17725574splitHere46","07-18 16:38:38.903: E/AndroidRuntime(24807): android.content.ActivityNotFoundException: Unable to find explicit activity class {com.ahmadghaddar.riddles/com.ahmadghaddar.riddles.Easy}; have you declared this activity in your AndroidManifest.xml?<newline46mondego>"
"8768splitHere46","17725574splitHere46","<activity<newline46mondego>    android:name=<doubleQuotes46>com.ahmadghaddar.riddles.Easy<doubleQuotes46><newline46mondego>    android:label=<doubleQuotes46>@string/app_name<doubleQuotes46> ><newline46mondego>    <intent-filter><newline46mondego>        <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego>        <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>    </intent-filter><newline46mondego></activity><newline46mondego>"
"8769splitHere46","17725574splitHere46","andorid:name"
"8770splitHere46","17725574splitHere46","android:category"
"8771splitHere46","17725724splitHere46","private int foo = 0;<newline46mondego><newline46mondego>private ReadWriteLock rwLock = /* use some implementation of ReadWriteLock here */;<newline46mondego><newline46mondego>public int get() {<newline46mondego>    Lock l = rwLock.readLock();<newline46mondego>    int result = 0;<newline46mondego>    l.lock();<newline46mondego>    try {<newline46mondego>        result = this.foo;<newline46mondego>    }<newline46mondego>    catch(Exception ex) {<newline46mondego>        // may throw the Exception here<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>        l.unlock();<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>public void set(int bar){ <newline46mondego>    Lock l = rwLock.writeLock();<newline46mondego>    l.lock();<newline46mondego>    try {<newline46mondego>        this.foo = bar;<newline46mondego>    }<newline46mondego>    catch(Exception ex) {<newline46mondego>        // may throw the Exception here<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>        l.unlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8772splitHere46","17725915splitHere46","doc.field( <doubleQuotes46>city<doubleQuotes46>, new ODocument(<doubleQuotes46>City<doubleQuotes46>).field(<doubleQuotes46>name<doubleQuotes46>,<doubleQuotes46>Rome<doubleQuotes46>).field(<doubleQuotes46>country<doubleQuotes46>, <doubleQuotes46>Italy<doubleQuotes46>),<newline46mondego>                OType.EMBEDDED)<newline46mondego>"
"8773splitHere46","17726013splitHere46","DateMidnight"
"8774splitHere46","17726013splitHere46","LocalDate"
"8775splitHere46","17726013splitHere46","DateMidnight"
"8776splitHere46","17726141splitHere46","Sat Mar 10 18:00:00 CST 2012<newline46mondego>"
"8777splitHere46","17726141splitHere46","Sun Mar 11 19:00:00 CDT 2012<newline46mondego>"
"8778splitHere46","17726237splitHere46","byte[][] twoDByteArray=new byte[5][1024];<newline46mondego>"
"8779splitHere46","17726388splitHere46","event.getData()"
"8780splitHere46","17726399splitHere46","Map<String, ? extends GenericClass<? extends Serializable>> map2 =<newline46mondego>        new HashMap<String, GenericClass<String>>();<newline46mondego>"
"8781splitHere46","17726399splitHere46","HashMap<String, GenericClass<String>>"
"8782splitHere46","17726399splitHere46","Map<String, GenericClass<? extends Serializable>>"
"8783splitHere46","17726399splitHere46","GenericClass<? extends Serializable>"
"8784splitHere46","17726617splitHere46","String s;<newline46mondego>while ((s = pq.poll()) != null) {<newline46mondego>    System.out.println(s);<newline46mondego>}<newline46mondego>"
"8785splitHere46","17726617splitHere46","Sing<newline46mondego>Sing10<newline46mondego>Sing11<newline46mondego>Sing12<newline46mondego>Sing13<newline46mondego>Sing2<newline46mondego>Sing3<newline46mondego>Sing4<newline46mondego>"
"8786splitHere46","17726828splitHere46","import java.awt.BasicStroke;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego><newline46mondego>import javax.swing.AbstractCellEditor;<newline46mondego>import javax.swing.JComboBox;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.table.TableCellEditor;<newline46mondego><newline46mondego>public class TableCellLineEditor extends AbstractCellEditor implements TableCellEditor, ActionListener {<newline46mondego><newline46mondego>    JComboBox combobox;<newline46mondego>    private BasicStroke val;<newline46mondego>    protected static final String EDIT = <doubleQuotes46>edit<doubleQuotes46>;<newline46mondego><newline46mondego>    public TableCellLineEditor() {<newline46mondego><newline46mondego>        combobox = new JComboBox(LineStyle.values());<newline46mondego>        combobox.setRenderer(new ListCellLineRenderer());<newline46mondego>        combobox.setActionCommand(EDIT);<newline46mondego>        combobox.addActionListener(this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object getCellEditorValue() {<newline46mondego>        return (BasicStroke) ((LineStyle) combobox.getSelectedItem()).getStroke();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {<newline46mondego>        val = (BasicStroke) value;<newline46mondego><newline46mondego>        for (int i = 0; i < LineStyle.values().length; i++) {<newline46mondego>            if (val.equals(((BasicStroke) (LineStyle.values()[i]).getStroke()))) {<newline46mondego>                combobox.setSelectedItem(LineStyle.values()[i]);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return combobox;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>        if (EDIT.equals(e.getActionCommand())) {<newline46mondego>            val = (BasicStroke) ((LineStyle) combobox.getSelectedItem()).getStroke();<newline46mondego>            fireEditingStopped();<newline46mondego>        } else {<newline46mondego>            val = (BasicStroke) combobox.getSelectedItem();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8787splitHere46","17727104splitHere46","Access denied (java.lang.RuntimePermission exitVM.0)<newline46mondego>"
"8788splitHere46","17727104splitHere46","ClipboardTest.main()"
"8789splitHere46","17727104splitHere46","System.exit()"
"8790splitHere46","17727104splitHere46","ClipboardTest.main()"
"8791splitHere46","17727132splitHere46","Thread.sleep()"
"8792splitHere46","17727132splitHere46","Handler"
"8793splitHere46","17727132splitHere46","private ViewFlipper mFliptest;<newline46mondego>private Handler mHandler = new Handler();<newline46mondego>private Random mRand = new Random();<newline46mondego>private Runnable mFlip = new Runnable() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        mFliptest.setDisplayedChild(mRand.nextInt());<newline46mondego>        mHandler.postDelayed(this, mRand.nextInt(6) * 2000);<newline46mondego>    }    <newline46mondego>}<newline46mondego><newline46mondego>//in the onCreate method<newline46mondego>mFliptest = (ViewFlipper) findViewById(R.id.menuFlipper);<newline46mondego>mHandler.postDelayed(mFlip, randomTime);<newline46mondego>"
"8794splitHere46","17727313splitHere46","SELECT<newline46mondego>    100*floor(race_number/100) race_number_group,<newline46mondego>    avg(speed) average_speed<newline46mondego>FROM user_test<newline46mondego>GROUP BY floor(race_number/100);<newline46mondego>"
"8795splitHere46","17727357splitHere46","UUID artID = UUID.nameUUIDFromBytes(artIDArr);<newline46mondego>"
"8796splitHere46","17727357splitHere46","static UUID toUUID(byte[] bytes) {<newline46mondego>    if (bytes.length != 16) {<newline46mondego>        throw new IllegalArgumentException();<newline46mondego>    }<newline46mondego>    int i = 0;<newline46mondego>    long msl = 0;<newline46mondego>    for (; i < 8; i++) {<newline46mondego>        msl = (msl << 8) | (bytes[i] & 0xFF);<newline46mondego>    }<newline46mondego>    long lsl = 0;<newline46mondego>    for (; i < 16; i++) {<newline46mondego>        lsl = (lsl << 8) | (bytes[i] & 0xFF);<newline46mondego>    }<newline46mondego>    return new UUID(msl, lsl);<newline46mondego>}<newline46mondego>UUID artID = toUUID(artIDArr);<newline46mondego>"
"8797splitHere46","17727359splitHere46","short"
"8798splitHere46","17727359splitHere46","short a = Short.parseShort(b, 2);<newline46mondego>ByteBuffer bytes = ByteBuffer.allocate(2).putShort(a);<newline46mondego><newline46mondego>byte[] array = bytes.array();<newline46mondego>"
"8799splitHere46","17727640splitHere46","field:term* field:term^2"
"8800splitHere46","17727640splitHere46","public class MyPrefixQuery extends BooleanQuery {<newline46mondego>    public MyPrefixQuery(Term t){<newline46mondego>        add(new PrefixQuery(t), Occur.SHOULD);<newline46mondego>        add(new TermQuery(t), Occur.SHOULD);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8801splitHere46","17727682splitHere46","modelBatch = new ModelBatch();<newline46mondego>"
"8802splitHere46","17727682splitHere46","modelBatch.dispose();<newline46mondego>"
"8803splitHere46","17727697splitHere46","ActionContext"
"8804splitHere46","17727697splitHere46","getContext()"
"8805splitHere46","17727697splitHere46","setContext(ActionContext context)"
"8806splitHere46","17727697splitHere46","ThreadLocal"
"8807splitHere46","17727697splitHere46","Map<String, Object> contextMap = new HashMap<String, Object>();<newline46mondego>contextMap.put(StrutsStatics.HTTP_REQUEST, yourMockHttpServletRequest);<newline46mondego>ActionContext.setContext(new ActionContext(contextMap));<newline46mondego>"
"8808splitHere46","17727697splitHere46","ActionContext.setContext(null);<newline46mondego>"
"8809splitHere46","17727840splitHere46","public class App {<newline46mondego><newline46mondego>    public static void main( String[] args )<newline46mondego>    {<newline46mondego>        Properties prop = new Properties();<newline46mondego><newline46mondego>        try {<newline46mondego>               //load a properties file<newline46mondego>               prop.load(new FileInputStream(<doubleQuotes46>config.properties<doubleQuotes46>));<newline46mondego><newline46mondego>               //get the property value and print it out<newline46mondego>               System.out.println(prop.getProperty(<doubleQuotes46>database<doubleQuotes46>));<newline46mondego>               System.out.println(prop.getProperty(<doubleQuotes46>dbuser<doubleQuotes46>));<newline46mondego>               System.out.println(prop.getProperty(<doubleQuotes46>dbpassword<doubleQuotes46>));<newline46mondego><newline46mondego>        } catch (IOException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8810splitHere46","17728529splitHere46","Object os = new Object[]{1,2,3};<newline46mondego>System.out.println(os);<newline46mondego>f(os);<newline46mondego>"
"8811splitHere46","17728529splitHere46","os"
"8812splitHere46","17728529splitHere46","Object"
"8813splitHere46","17728529splitHere46","Object[]"
"8814splitHere46","17728529splitHere46","Object[]"
"8815splitHere46","17728529splitHere46","Object[] os = new Object[]{1,2,3};<newline46mondego>System.out.println(os);<newline46mondego>f(os);<newline46mondego>"
"8816splitHere46","17728529splitHere46","f"
"8817splitHere46","17728529splitHere46","Arrays.copyOf"
"8818splitHere46","17728529splitHere46","System.arraycopy"
"8819splitHere46","17728568splitHere46","HashMap"
"8820splitHere46","17728568splitHere46","HashMap"
"8821splitHere46","17728568splitHere46","FileOutputStream fileOutputStream = new FileOutputStream(<doubleQuotes46>myMap.whateverExtension<doubleQuotes46>);<newline46mondego>ObjectOutputStream objectOutputStream= new ObjectOutputStream(fileOutputStream);<newline46mondego><newline46mondego>objectOutputStream.writeObject(myHashMap);<newline46mondego>objectOutputStream.close();<newline46mondego>"
"8822splitHere46","17728568splitHere46","HashMap"
"8823splitHere46","17728568splitHere46","FileInputStream fileInputStream  = new FileInputStream(<doubleQuotes46>myMap.whateverExtension<doubleQuotes46>);<newline46mondego>ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);<newline46mondego><newline46mondego>Map myNewlyReadInMap = (HashMap) objectInputStream.readObject();<newline46mondego>objectInputStream.close();<newline46mondego>"
"8824splitHere46","17728804splitHere46","from(<doubleQuotes46>netty:tcp://localhost:5150?sync=false&keepAlive=true<doubleQuotes46>).to(<doubleQuotes46>seda:break<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>from(<doubleQuotes46>seda:break<doubleQuotes46>).threads(5)<newline46mondego>.routeId(<doubleQuotes46>tcp.input<doubleQuotes46>)<newline46mondego>.transform()<newline46mondego>.simple(<doubleQuotes46>insert into tamponems (AVIS) values (\<doubleQuotes46>${in.body}\<doubleQuotes46>);<doubleQuotes46>)<newline46mondego>.to(<doubleQuotes46>jdbc:mydb<doubleQuotes46>);<newline46mondego>"
"8825splitHere46","17728804splitHere46","from(<doubleQuotes46>seda:backup<doubleQuotes46>)<newline46mondego>.routePolicy(policy)<newline46mondego>.errorHandler(<newline46mondego>  defaultErrorHandler()<newline46mondego>  .redeliveryDelay(1000L)<newline46mondego>  .maximumRedeliveries(-1)<newline46mondego>  .retryAttemptedLogLevel(LoggingLevel.ERROR)<newline46mondego>).threads(2).to(<doubleQuotes46>jdbc:mydb<doubleQuotes46>);<newline46mondego>"
"8826splitHere46","17728804splitHere46","public class StopRoutePolicy extends RoutePolicySupport {<newline46mondego><newline46mondego>  private static final Logger LOG = LoggerFactory.getLogger(String.class);<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void onExchangeBegin(Route route, Exchange exchange) {<newline46mondego>    String stop = <doubleQuotes46>tcp.input<doubleQuotes46>;<newline46mondego>    CamelContext context = exchange.getContext();<newline46mondego>    if (context.getRouteStatus(stop) != null && context.getRouteStatus(stop).isStarted()) {<newline46mondego>      try {<newline46mondego>        exchange.getContext().getInflightRepository().remove(exchange);<newline46mondego>        LOG.info(<doubleQuotes46>STOP ROUTE: {}<doubleQuotes46>, stop);<newline46mondego>        context.stopRoute(stop);<newline46mondego>      } catch (Exception e) {<newline46mondego>        getExceptionHandler().handleException(e);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void onExchangeDone(Route route, Exchange exchange) {<newline46mondego>    String stop = <doubleQuotes46>tcp.input<doubleQuotes46>;<newline46mondego>    CamelContext context = exchange.getContext();<newline46mondego>    if (context.getRouteStatus(stop) != null && context.getRouteStatus(stop).isStopped()) {<newline46mondego>      try {<newline46mondego>        LOG.info(<doubleQuotes46>RESTART ROUTE: {}<doubleQuotes46>, stop);<newline46mondego>        context.startRoute(stop);<newline46mondego>      } catch (Exception e) {<newline46mondego>        getExceptionHandler().handleException(e);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"8827splitHere46","17728922splitHere46","FileInputStream s = new FileInputStream(<doubleQuotes46>\\\\server\\share\\file.txt<doubleQuotes46>);<newline46mondego>"
"8828splitHere46","17728929splitHere46","<table><newline46mondego>  <s:iterator value=<doubleQuotes46>bills<doubleQuotes46> var=<doubleQuotes46>bill<doubleQuotes46>><newline46mondego>    <tr><newline46mondego>    <td><input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>selectedBills<doubleQuotes46> value=<doubleQuotes46>${bill.id}<doubleQuotes46> id=<doubleQuotes46>selectedBills-2<doubleQuotes46>/></td><newline46mondego>    <td style=<doubleQuotes46>text-align: right<doubleQuotes46>>${bill.amount}</td><newline46mondego>    <td>${bill.date}</td><newline46mondego>    <td>${bill.description}/td><newline46mondego>    </tr><newline46mondego>  </s:iterator><newline46mondego></table><newline46mondego>"
"8829splitHere46","17729280splitHere46","File dir = new File(<doubleQuotes46>path/to/files/<doubleQuotes46>);<newline46mondego><newline46mondego>for (File file : dir.listFiles()) {<newline46mondego>    Scanner s = new Scanner(file);<newline46mondego>    ...<newline46mondego>    s.close();<newline46mondego>}<newline46mondego>"
"8830splitHere46","17729280splitHere46","listFiles()"
"8831splitHere46","17729280splitHere46","FileFilter"
"8832splitHere46","17729332splitHere46","JPanels"
"8833splitHere46","17729332splitHere46","JPanels"
"8834splitHere46","17729332splitHere46","indexes"
"8835splitHere46","17729332splitHere46","swaping indexes"
"8836splitHere46","17729332splitHere46","Color"
"8837splitHere46","17729332splitHere46","setBackground(Color.Xxx)"
"8838splitHere46","17729332splitHere46","JPanels"
"8839splitHere46","17729332splitHere46","puzzle-like game"
"8840splitHere46","17729332splitHere46","Images"
"8841splitHere46","17729332splitHere46","Images"
"8842splitHere46","17729332splitHere46","Icon/ImageIcons"
"8843splitHere46","17729332splitHere46","JLabel"
"8844splitHere46","17729332splitHere46","JPanel"
"8845splitHere46","17729332splitHere46","Mouse Events"
"8846splitHere46","17729332splitHere46","setIcon()"
"8847splitHere46","17729332splitHere46","Icons"
"8848splitHere46","17729332splitHere46","JLabels"
"8849splitHere46","17729332splitHere46","Icons"
"8850splitHere46","17729332splitHere46","JLabel"
"8851splitHere46","17729332splitHere46","Icon"
"8852splitHere46","17729332splitHere46","setPressedIcon()"
"8853splitHere46","17729624splitHere46","$WAR_HOME/WEB-INF"
"8854splitHere46","17729624splitHere46","glassfish-web.xml"
"8855splitHere46","17729624splitHere46","web.xml"
"8856splitHere46","17729624splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><!DOCTYPE glassfish-web-app PUBLIC <doubleQuotes46>-//GlassFish.org//DTD GlassFish Application Server 3.1 Servlet 3.0//EN<doubleQuotes46> <doubleQuotes46>http://glassfish.org/dtds/glassfish-web-app_3_0-1.dtd<doubleQuotes46>><newline46mondego><glassfish-web-app><newline46mondego>  <context-root>/</context-root><newline46mondego>  ...<newline46mondego></glassfish-web-app><newline46mondego>"
"8857splitHere46","17729624splitHere46","glassfish-web.xml"
"8858splitHere46","17729624splitHere46","/app"
"8859splitHere46","17729632splitHere46","JSONParser"
"8860splitHere46","17729632splitHere46","JSONParser"
"8861splitHere46","17729632splitHere46","com.cd.JSONParser"
"8862splitHere46","17729632splitHere46","JSONParser"
"8863splitHere46","17729632splitHere46","org.json.simple.parser.JSONParser"
"8864splitHere46","17729632splitHere46","org.json.simple.parser.JSONParser"
"8865splitHere46","17729632splitHere46","JSONParser"
"8866splitHere46","17729777splitHere46","class Foo<newline46mondego>{    <newline46mondego>    private String var;<newline46mondego><newline46mondego>    Object getVar() {<newline46mondego>        return var;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class B extends Foo<newline46mondego>{<newline46mondego>    private int var;<newline46mondego><newline46mondego>    @Override<newline46mondego>    Object getVar() {<newline46mondego>        return var;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8867splitHere46","17729777splitHere46","Foo"
"8868splitHere46","17729777splitHere46","var"
"8869splitHere46","17729777splitHere46","List<String>"
"8870splitHere46","17729777splitHere46","B"
"8871splitHere46","17729777splitHere46","var"
"8872splitHere46","17729777splitHere46","List<Item>"
"8873splitHere46","17729777splitHere46","Item"
"8874splitHere46","17729777splitHere46","abstract class Foo<T> {<newline46mondego><newline46mondego>    List<T> list;<newline46mondego><newline46mondego>    // common logic<newline46mondego>}<newline46mondego><newline46mondego>class A extends Foo<String> { }<newline46mondego><newline46mondego>class B extends Foo<Item> { }<newline46mondego>"
"8875splitHere46","17729783splitHere46","UUID.nameUUIDFromBytes(byte[] bytes)"
"8876splitHere46","17729783splitHere46","byte[] bytes"
"8877splitHere46","17729783splitHere46","Random"
"8878splitHere46","17729783splitHere46","SecureRandom"
"8879splitHere46","17729946splitHere46","DigestInputStream"
"8880splitHere46","17729946splitHere46","MessageDigest"
"8881splitHere46","17729946splitHere46","InputStream"
"8882splitHere46","17729946splitHere46","DigestInputStream dis = new DigestInputStream(is,<newline46mondego>  MessageDigest.getInstance(SHA1));<newline46mondego>BufferedInputStream bis = new BufferedInputStream(dis);<newline46mondego>BufferedOutputStream bos = new BufferedOutputStream(<newline46mondego>  new FileOutputStream(file.getName()));<newline46mondego>while ((i = bis.read()) != -1) {<newline46mondego>   bos.write(i);<newline46mondego>}<newline46mondego>bos.close();<newline46mondego>return dis.getMessageDigest().digest();<newline46mondego>"
"8883splitHere46","17730032splitHere46","RequestInterceptor requestInterceptor = new RequestInterceptor()<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public void intercept(RequestFacade request) {<newline46mondego>        request.addQueryParam(<doubleQuotes46>app_version<doubleQuotes46>, <doubleQuotes46>Version 1.x<doubleQuotes46>);<newline46mondego>        request.addQueryParam(<doubleQuotes46>device_type<doubleQuotes46>, <doubleQuotes46>Samsung S4<doubleQuotes46>);<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>restAdapter.setRequestInterceptor(requestInterceptor)<newline46mondego>"
"8884splitHere46","17730187splitHere46","org.eclipse.persistence.oxm.annotations.XmlVariableNode"
"8885splitHere46","17730187splitHere46","<dependency><newline46mondego>    <groupId>org.eclipse.persistence</groupId><newline46mondego>    <artifactId>eclipselink</artifactId><newline46mondego>    <version>2.6.0-SNAPSHOT</version><newline46mondego></dependency><newline46mondego>"
"8886splitHere46","17730187splitHere46","<repository><newline46mondego>    <id>oss.sonatype.org</id><newline46mondego>    <name>OSS Sonatype Staging</name><newline46mondego>    <url>https://oss.sonatype.org/content/groups/staging</url><newline46mondego></repository><newline46mondego>"
"8887splitHere46","17730257splitHere46","<hbm2java  jdk5=<doubleQuotes46>true<doubleQuotes46> ejb3=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"8888splitHere46","17730257splitHere46","jdk     Code will contain JDK 5 constructs <newline46mondego>        such as generics and static imports (Default = False)<newline46mondego>ejb3    Code will contain EJB 3 features, e.g. using annotations <newline46mondego>        from javax.persistence and org.hibernate.annotations    (Default = False)<newline46mondego>"
"8889splitHere46","17730325splitHere46","public class Rect {<newline46mondego><newline46mondego>    private int x;<newline46mondego>    private int y;<newline46mondego>    private int width;<newline46mondego>    private int height;<newline46mondego><newline46mondego>    public Rect() {<newline46mondego>        random=new Random();<newline46mondego>        x=random.nextInt(400);<newline46mondego>        y=random.nextInt(400);<newline46mondego>        width=20;<newline46mondego>        height=20;<newline46mondego>    }<newline46mondego>    //getters and setters<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>private Rect rectangles[1000] = new Rect[]();<newline46mondego><newline46mondego><newline46mondego>public void paintComponent(Graphics g){<newline46mondego>    super.paintComponent(g);<newline46mondego><newline46mondego>    for (int i=0; i<1000;i++) {<newline46mondego>        g.drawRect(rectangles[i].getX(), rectangles[i].getY(),<newline46mondego>                   rectangles[i].getwidth(), rectangles[i].getHeight());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8890splitHere46","17730556splitHere46","instanceof"
"8891splitHere46","17730556splitHere46","private View getReferenceForView(View view, int resId)<newline46mondego>{<newline46mondego>     if(view instanceof TextView)<newline46mondego>         view = view.findViewById(resId);<newline46mondego><newline46mondego>     else if(view instanceof EditText)<newline46mondego><newline46mondego>     // and so on..<newline46mondego><newline46mondego>     return view;<newline46mondego>  }<newline46mondego>"
"8892splitHere46","17730561splitHere46","public static JsonObject get() {<newline46mondego>  String url = <doubleQuotes46>http://127.0.0.1:8080/core/api/person<doubleQuotes46>;<newline46mondego>  URI uri = URI.create(url);<newline46mondego><newline46mondego>  final Client client = ClientBuilder.newClient();<newline46mondego>  WebTarget webTarget = client.target(uri);<newline46mondego><newline46mondego>  Response response = webTarget.request(MediaType.APPLICATION_JSON).get();<newline46mondego><newline46mondego>  //Se Response.Status.OK;<newline46mondego>  if (response.getStatus() == 200) {<newline46mondego>     StringReader stringReader = new StringReader(webTarget.request(MediaType.APPLICATION_JSON).get(String.class));<newline46mondego>     try (JsonReader jsonReader = Json.createReader(stringReader)) {<newline46mondego>        return jsonReader.readObject();<newline46mondego>     }<newline46mondego>  }<newline46mondego><newline46mondego>  return null;<newline46mondego>"
"8893splitHere46","17730672splitHere46","ArrayList<Friends> friends = new ArrayList<>();<newline46mondego>"
"8894splitHere46","17730672splitHere46","while (choice != 2) {<newline46mondego>       System.out.println(<doubleQuotes46>Enter Friend's Name: <doubleQuotes46>);<newline46mondego>       String name = input.next();<newline46mondego>       System.out.println(<doubleQuotes46>Enter Friend's Age: <doubleQuotes46>);<newline46mondego>       String age= input.nextInt();<newline46mondego>       Friends f = new Friends(name, age);<newline46mondego>       friends.add(f);<newline46mondego>       System.out.println(<doubleQuotes46>Enter another? 1: Yes, 2: No<doubleQuotes46>);<newline46mondego>       choice = input.nextInt();<newline46mondego>  }<newline46mondego>"
"8895splitHere46","17730672splitHere46","for(int i=0;i<friends.length;i++) {<newline46mondego>   friends.get(i).toString();<newline46mondego>}<newline46mondego>"
"8896splitHere46","17730672splitHere46","public void toString()<newline46mondego>{<newline46mondego>    System.out.println(this.getName() + <doubleQuotes46> <doubleQuotes46> + this.getAge());<newline46mondego>}<newline46mondego>"
"8897splitHere46","17730686splitHere46","onMeasure"
"8898splitHere46","17730686splitHere46","CoordinateGridView"
"8899splitHere46","17730686splitHere46","public void onMeasure(int widthSpec, int heightSpec) {<newline46mondego>  super.onMeasure(widthSpec, heightSpec);<newline46mondego>  int size = Math.min(getMeasuredWidth(), getMeasuredHeight());<newline46mondego>  setMeasuredDimension(size, size);<newline46mondego>}<newline46mondego>"
"8900splitHere46","17730692splitHere46","String#isEmpty()"
"8901splitHere46","17730692splitHere46","public boolean isEmpty() {<newline46mondego>    return count == 0;<newline46mondego>}<newline46mondego>"
"8902splitHere46","17730692splitHere46","count"
"8903splitHere46","17730692splitHere46","0"
"8904splitHere46","17730692splitHere46","String.equals()"
"8905splitHere46","17730692splitHere46","String#equals(Object)"
"8906splitHere46","17730692splitHere46","isEmpty()"
"8907splitHere46","17730692splitHere46","String.isEmpty()"
"8908splitHere46","17730692splitHere46","value.length == 0"
"8909splitHere46","17730692splitHere46","count"
"8910splitHere46","17730692splitHere46","offset"
"8911splitHere46","17730692splitHere46","count"
"8912splitHere46","17730692splitHere46","value.length"
"8913splitHere46","17730692splitHere46","equals()"
"8914splitHere46","17730692splitHere46","String.isEmpty()"
"8915splitHere46","17730743splitHere46","Shape() //default no-args<newline46mondego>{<newline46mondego>    //do something<newline46mondego>}<newline46mondego><newline46mondego>Shape(int a, int b)<newline46mondego>{<newline46mondego>    //do something with a and b<newline46mondego>}<newline46mondego>"
"8916splitHere46","17730780splitHere46","Sort"
"8917splitHere46","17730780splitHere46","SortField primarySort = new SortField(<doubleQuotes46>field<doubleQuotes46>, SortField.Type.STRING);<newline46mondego>Sort sort = new Sort(primarySort, SortField.FIELD_SCORE);<newline46mondego>searcher.search(query, hits, sort);<newline46mondego>"
"8918splitHere46","17730780splitHere46","Sort"
"8919splitHere46","17730924splitHere46","@Variable(<doubleQuotes46>Primary Class<doubleQuotes46>)<newline46mondego>public String getHClass(Player p) {<newline46mondego>    return getHeroFromPlayer(p).getHeroClass().getName();<newline46mondego>}<newline46mondego><newline46mondego>@Variable(<doubleQuotes46>Primary Class Level<doubleQuotes46>)<newline46mondego>public int getHLevel(Player p) {<newline46mondego>    return getHeroFromPlayer(p).getHLevel();<newline46mondego>}<newline46mondego><newline46mondego>@Variable(<doubleQuotes46>Secondary Class<doubleQuotes46>)<newline46mondego>public String getHSecClass(Player p) {<newline46mondego>    return getHeroFromPlayer(p).getSecondClass().getName();<newline46mondego>}<newline46mondego><newline46mondego>@Variable(<doubleQuotes46>Secondary Class Level<doubleQuotes46>)<newline46mondego>public int getHLevel(Player p) {<newline46mondego>    return getHeroFromPlayer(p).getHSecLevel();<newline46mondego>}<newline46mondego>"
"8920splitHere46","17730924splitHere46","Class heroClass = <newline46mondego>for(Method method : heroClass.getMethods()) {<newline46mondego>   Variable var = method.getAnnotation(Variable.class);<newline46mondego>   if (var == null) continue; // ignore Object.getClass()<newline46mondego>   String description = var.value; // text to display to users<newline46mondego>   String attributeName = method.getName().substring(3); // cut <doubleQuotes46>get<doubleQuotes46><newline46mondego>   String initials = attributeName.replaceAll(<doubleQuotes46>[a-z]+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>}<newline46mondego>"
"8921splitHere46","17731021splitHere46","@com.sun.jersey.spi.resource.Singleton"
"8922splitHere46","17731021splitHere46","@javax.inject.Singleton"
"8923splitHere46","17731438splitHere46","public class PageModelInterceptor extends HandlerInterceptorAdapter {<newline46mondego>    private MessagingService mailboxService;<newline46mondego><newline46mondego>    public PageModelInterceptor() {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void postHandle(final HttpServletRequest request, final HttpServletResponse response, final Object handler, final ModelAndView modelAndView) {<newline46mondego>        addNbConversationUpdates(request);<newline46mondego>    }<newline46mondego><newline46mondego>    private void addNbConversationUpdates(final HttpServletRequest request) {<newline46mondego>        if (XSecurity.principal() != null) {<newline46mondego>            final int nbUpdatedConversations = mailboxService.getUpdatedConversations(XSecurity.principal().getId()).size();<newline46mondego>            request.setAttribute(<doubleQuotes46>nbConversationUpdates<doubleQuotes46>, nbUpdatedConversations);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void setMailboxService(final MessagingService mailboxService) {<newline46mondego>        this.mailboxService = mailboxService;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8924splitHere46","17731438splitHere46","<mvc:interceptor><newline46mondego>    <mvc:mapping path=<doubleQuotes46>/ui/**<doubleQuotes46> /><newline46mondego>    <bean class=<doubleQuotes46>com.xyz.project.web.PageModelInterceptor<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>mailboxService<doubleQuotes46> ref=<doubleQuotes46>mailboxService<doubleQuotes46> /><newline46mondego>    </bean><newline46mondego></mvc:interceptor><newline46mondego>"
"8925splitHere46","17731594splitHere46","Client IP | Client Port | Server IP | Server Port | Protocol<newline46mondego>"
"8926splitHere46","17731594splitHere46","Source IP | Source Port | Destination IP | Destination Port | Protocol<newline46mondego>"
"8927splitHere46","17731594splitHere46","0.0.0.0:45000 -> 1.1.1.1:80<newline46mondego>0.0.0.0:45001 -> 1.1.1.1:80<newline46mondego>"
"8928splitHere46","17731594splitHere46","accept"
"8929splitHere46","17731630splitHere46","SimpleDateFormat dateFormat= (SimpleDateFormat) DateFormat.getDateInstance();<newline46mondego>dateFormat.applyPattern(dateFormat.toPattern().replaceAll(<doubleQuotes46>y{4}<doubleQuotes46>, <doubleQuotes46>yy<doubleQuotes46>));<newline46mondego>"
"8930splitHere46","17731630splitHere46","applyPattern(String pattern)"
"8931splitHere46","17731630splitHere46","dateFormat.toPattern()"
"8932splitHere46","17731630splitHere46","dateFormat.toPattern().replaceAll(String regex, String replacement)"
"8933splitHere46","17731630splitHere46","regex"
"8934splitHere46","17731630splitHere46","replacement"
"8935splitHere46","17731630splitHere46","<doubleQuotes46>y{4}<doubleQuotes46>"
"8936splitHere46","17731630splitHere46","<doubleQuotes46>yy<doubleQuotes46>"
"8937splitHere46","17731630splitHere46","SimpleDateFormat dateFormat = (SimpleDateFormat)     <newline46mondego>                 android.text.format.DateFormat.getDateFormat(getApplicationContext());<newline46mondego>"
"8938splitHere46","17731630splitHere46","DateFormat"
"8939splitHere46","17731630splitHere46","java.text.DateFormat"
"8940splitHere46","17731630splitHere46","android.text.format.DateFormat"
"8941splitHere46","17731646splitHere46","public class t1 implements MouseListener<newline46mondego>    { <newline46mondego>    static TextArea textArea;<newline46mondego>    static Frame frame;<newline46mondego>        public static void main(String[] args)<newline46mondego>        {<newline46mondego>        // Create frame with title<newline46mondego>          frame = new Frame(<doubleQuotes46>Click Counter Project<doubleQuotes46>);<newline46mondego><newline46mondego>            // Create a component to add to the frame<newline46mondego>             textArea = new TextArea(<doubleQuotes46>Click<doubleQuotes46>);<newline46mondego>             t1 clickCount= new t1();<newline46mondego>        }<newline46mondego>    ...<newline46mondego> t1()<newline46mondego>    {<newline46mondego>        frame.add(textArea, BorderLayout.NORTH);<newline46mondego>            int width = 300;<newline46mondego>            int height = 300;<newline46mondego>            frame.setSize(width, height);<newline46mondego>            frame.addMouseListener(this);<newline46mondego>            frame.setVisible(true);<newline46mondego>    }<newline46mondego>    }<newline46mondego>"
"8942splitHere46","17731734splitHere46","super"
"8943splitHere46","17731734splitHere46","public class Test2 extends Test1{<newline46mondego>    public void dis()<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Inside test2<doubleQuotes46>);<newline46mondego>        super.dis();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8944splitHere46","17731734splitHere46","super.dis()"
"8945splitHere46","17731734splitHere46","dis()"
"8946splitHere46","17731734splitHere46","dis()"
"8947splitHere46","17731734splitHere46","super"
"8948splitHere46","17731734splitHere46","super"
"8949splitHere46","17731734splitHere46","public class Test2 extends Test1{<newline46mondego>    public Test2() {<newline46mondego>        super(); // explicitly invokes parent class default constructor<newline46mondego>        . . .<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8950splitHere46","17731734splitHere46","super."
"8951splitHere46","17731749splitHere46","private Path[] getVerifiedPaths()<newline46mondego>{<newline46mondego>    ArrayList<Path> verifiedFilePaths= new ArrayList<>();<newline46mondego>    for(Path filepath : fileList)<newline46mondego>        verifiedFilePaths.add(filepath);<newline46mondego>    return verifiedFilePaths.toArray(new Path[0]);<newline46mondego>}<newline46mondego><newline46mondego>Path[] filePaths = getVerifiedPaths();<newline46mondego>    for(Path filePath : filePaths) { ...rename...}<newline46mondego>"
"8952splitHere46","17731749splitHere46","for(Path filepath : fileList){...rename...}<newline46mondego>"
"8953splitHere46","17731758splitHere46","@XmlPath"
"8954splitHere46","17731758splitHere46","import javax.xml.bind.annotation.*;<newline46mondego>import org.eclipse.persistence.oxm.annotations.XmlPath;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Foo {<newline46mondego><newline46mondego>    @XmlPath(<doubleQuotes46>name[@xml:lang='cs']/text()<doubleQuotes46>)<newline46mondego>    private String csName;<newline46mondego><newline46mondego>    @XmlPath(<doubleQuotes46>name[@xml:lang='en']/text()<doubleQuotes46>)<newline46mondego>    private String enName;<newline46mondego><newline46mondego>}<newline46mondego>"
"8955splitHere46","17731758splitHere46","import java.io.File;<newline46mondego>import javax.xml.bind.*;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Foo.class);<newline46mondego><newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        File xml = new File(<doubleQuotes46>src/forum17731167/input.xml<doubleQuotes46>);<newline46mondego>        Foo foo = (Foo) unmarshaller.unmarshal(xml);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(foo, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"8956splitHere46","17731766splitHere46","LoadingCache<Key, Graph> graphs = CacheBuilder.newBuilder()<newline46mondego>       .expireAfterWrite(1, TimeUnit.MINUTES)<newline46mondego>       .build(<newline46mondego>           new CacheLoader<Key, Graph>() {<newline46mondego>             public Graph load(Key key) {<newline46mondego>               return createExpensiveGraph(key);<newline46mondego>             }<newline46mondego>           });<newline46mondego>"
"8957splitHere46","17731778splitHere46","getKey()"
"8958splitHere46","17731831splitHere46","split"
"8959splitHere46","17731831splitHere46","params"
"8960splitHere46","17731831splitHere46","split"
"8961splitHere46","17731831splitHere46","limit"
"8962splitHere46","17731831splitHere46","limit"
"8963splitHere46","17731831splitHere46","String[] params = splitS1[i].split(<doubleQuotes46>=<doubleQuotes46>, -1);<newline46mondego>"
"8964splitHere46","17731831splitHere46","2"
"8965splitHere46","17731831splitHere46","="
"8966splitHere46","17731876splitHere46","private BufferedImage convertColors(BufferedImage img, int oldColor, int newColor)<newline46mondego>{<newline46mondego>    int [] pixels = new int [img.getWidth() * img.getHeight()];<newline46mondego>    img.getRGB(0, 0, img.getWidth(), img.getHeight(), pixels, 0, img.getWidth());<newline46mondego>    Color old = new Color(oldColor);<newline46mondego>    Color newC = new Color(newColor);<newline46mondego><newline46mondego>    for(int x = 0; x < img.getWidth(); x++)<newline46mondego>    {<newline46mondego>        for(int y = 0; y < img.getHeight(); y++)<newline46mondego>        {<newline46mondego>            Color tmp = new Color(pixels[x + y * img.getWidth()]);<newline46mondego>            if(tmp.equals(old))<newline46mondego>            {<newline46mondego>                pixels[x + y * img.getWidth()] = newC.getRGB();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    img.setRGB(0, 0, img.getWidth(), img.getHeight(), pixels, 0, img.getWidth());<newline46mondego><newline46mondego>    return newImg;<newline46mondego>}<newline46mondego>"
"8967splitHere46","17732105splitHere46","warningButton.styleProperty().bind(<newline46mondego>    new SimpleStringProperty(<doubleQuotes46>-fx-base: <doubleQuotes46>)<newline46mondego>        .concat(colorStringProperty)<newline46mondego>        .concat(<doubleQuotes46>;<doubleQuotes46>)<newline46mondego>        .concat(<doubleQuotes46>-fx-font-size: 20px;<doubleQuotes46>)<newline46mondego>);<newline46mondego>"
"8968splitHere46","17732105splitHere46","import javafx.animation.*;<newline46mondego>import javafx.application.Application;<newline46mondego>import javafx.beans.property.*;<newline46mondego>import javafx.beans.value.*;<newline46mondego>import javafx.event.*;<newline46mondego>import javafx.scene.Scene;<newline46mondego>import javafx.scene.control.Button;<newline46mondego>import javafx.scene.image.*;<newline46mondego>import javafx.scene.layout.StackPane;<newline46mondego>import javafx.scene.paint.Color;<newline46mondego>import javafx.stage.Stage;<newline46mondego>import javafx.util.Duration;<newline46mondego><newline46mondego>/** Shows how you can modify css styles dynamically using a timeline. */<newline46mondego>public class Warning extends Application {<newline46mondego><newline46mondego>    private static final String BACKGROUND = <doubleQuotes46>http://bobgreiner.tripod.com/1cc2ce10.jpg<doubleQuotes46>; <newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start(Stage stage) throws Exception{<newline46mondego>        final ObjectProperty<Color> warningColor = new SimpleObjectProperty<>(Color.GRAY);<newline46mondego>        final StringProperty colorStringProperty = createWarningColorStringProperty(warningColor);<newline46mondego><newline46mondego>        StackPane layout = new StackPane();<newline46mondego>        layout.getChildren().addAll(<newline46mondego>                new ImageView(new Image(BACKGROUND)),<newline46mondego>                createWarningButton(<newline46mondego>                        warningColor, <newline46mondego>                        colorStringProperty<newline46mondego>                )<newline46mondego>        );<newline46mondego>        stage.setScene(new Scene(layout));<newline46mondego>        stage.show();<newline46mondego>    }<newline46mondego><newline46mondego>    private StringProperty createWarningColorStringProperty(final ObjectProperty<Color> warningColor) {<newline46mondego>        final StringProperty colorStringProperty = new SimpleStringProperty();<newline46mondego>        setColorStringFromColor(colorStringProperty, warningColor);<newline46mondego>        warningColor.addListener(new ChangeListener<Color>() {<newline46mondego>            @Override<newline46mondego>            public void changed(ObservableValue<? extends Color> observableValue, Color oldColor, Color newColor) {<newline46mondego>                setColorStringFromColor(colorStringProperty, warningColor);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        return colorStringProperty;<newline46mondego>    }<newline46mondego><newline46mondego>    private Button createWarningButton(final ObjectProperty<Color> warningColor, StringProperty colorStringProperty) {<newline46mondego>        final Button warningButton = new Button(<doubleQuotes46>Warning! Warning!<doubleQuotes46>);<newline46mondego>        warningButton.styleProperty().bind(<newline46mondego>                new SimpleStringProperty(<doubleQuotes46>-fx-base: <doubleQuotes46>)<newline46mondego>                        .concat(colorStringProperty)<newline46mondego>                        .concat(<doubleQuotes46>;<doubleQuotes46>)<newline46mondego>                        .concat(<doubleQuotes46>-fx-font-size: 20px;<doubleQuotes46>)<newline46mondego>        );<newline46mondego><newline46mondego>        warningButton.setOnAction(new EventHandler<ActionEvent>() {<newline46mondego>            @Override<newline46mondego>            public void handle(ActionEvent actionEvent) {<newline46mondego>                Timeline flash = new Timeline(<newline46mondego>                    new KeyFrame(Duration.seconds(0),    new KeyValue(warningColor, Color.GRAY, Interpolator.LINEAR)),<newline46mondego>                    new KeyFrame(Duration.seconds(0.25), new KeyValue(warningColor, Color.GRAY, Interpolator.LINEAR)),<newline46mondego>                    new KeyFrame(Duration.seconds(1),    new KeyValue(warningColor, Color.RED,  Interpolator.LINEAR)),<newline46mondego>                    new KeyFrame(Duration.seconds(1.25), new KeyValue(warningColor, Color.RED,  Interpolator.LINEAR))<newline46mondego>                );<newline46mondego>                flash.setCycleCount(6);<newline46mondego>                flash.setAutoReverse(true);<newline46mondego>                flash.play();<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        return warningButton;<newline46mondego>    }<newline46mondego><newline46mondego>    private void setColorStringFromColor(StringProperty colorStringProperty, ObjectProperty<Color> color) {<newline46mondego>        colorStringProperty.set(<newline46mondego>                <doubleQuotes46>rgba(<doubleQuotes46><newline46mondego>                        + ((int) (color.get().getRed()   * 255)) + <doubleQuotes46>,<doubleQuotes46><newline46mondego>                        + ((int) (color.get().getGreen() * 255)) + <doubleQuotes46>,<doubleQuotes46><newline46mondego>                        + ((int) (color.get().getBlue()  * 255)) + <doubleQuotes46>,<doubleQuotes46><newline46mondego>                        + color.get().getOpacity() +<newline46mondego>                <doubleQuotes46>)<doubleQuotes46><newline46mondego>        );<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        launch(args);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8969splitHere46","17732146splitHere46","public class main {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Foo foo = new A();<newline46mondego>        foo.foo();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8970splitHere46","17732146splitHere46","public class main {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        A a = new A();<newline46mondego>        a.foo();<newline46mondego><newline46mondego>        B b = new B();<newline46mondego>        b.foo();<newline46mondego><newline46mondego>        C c = new C();<newline46mondego>        c.foo();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"8971splitHere46","17732146splitHere46","javac *.java<newline46mondego>dx --dex --output=temp.dex *.class<newline46mondego>baksmali -N -D temp.dump temp.dex<newline46mondego>"
"8972splitHere46","17732185splitHere46","Button myButton = (Button)findViewById(R.id.button1);<newline46mondego>Button mySecondButton = (Button)findViewById(R.id.button2);<newline46mondego><newline46mondego>myButton.setTag(<doubleQuotes46>Tag1<doubleQuotes46>);<newline46mondego>mySecondButton.setTag(<doubleQuotes46>Tag1<doubleQuotes46>);<newline46mondego>"
"8973splitHere46","17732233splitHere46","codeA()"
"8974splitHere46","17732233splitHere46","codeB()"
"8975splitHere46","17732233splitHere46","codeA()"
"8976splitHere46","17732233splitHere46","codeB()"
"8977splitHere46","17732233splitHere46","String [] lines = ...<newline46mondego>for (int i = 0; i < N; i++){<newline46mondego>   // delegate to a utility class LineBuilder (perhaps an extension of StringBuilder) to concatenate lines<newline46mondego>   // this class would still need to check a condition e.g. for the first line to skip the <doubleQuotes46>\n<doubleQuotes46><newline46mondego>   // since we have delegated the decisions we do not have two code parts inside the loop<newline46mondego>   lineBuilder.addLine( lines[i] );<newline46mondego>}<newline46mondego>"
"8978splitHere46","17732233splitHere46","List<Line> lines = Arrays.asList(<newline46mondego>             new FirstLine(<doubleQuotes46>Every<doubleQuotes46>),    // note this class is different<newline46mondego>             new Line(<doubleQuotes46>word<doubleQuotes46>), <newline46mondego>             new Line(<doubleQuotes46>on<doubleQuotes46>), <newline46mondego>             new Line(<doubleQuotes46>separate<doubleQuotes46>), <newline46mondego>             new Line(<doubleQuotes46>line<doubleQuotes46>) );<newline46mondego><newline46mondego>StringBuffer sb = new StringBuffer();<newline46mondego><newline46mondego>for (Line l : lines) {<newline46mondego>    // Again the decision is delegated. Data knows how to print itself<newline46mondego>    // Line would return: <doubleQuotes46>\n<doubleQuotes46> + s<newline46mondego>    // FirstLine would return: s<newline46mondego>    sb.append( l.getPrintVersion() );<newline46mondego>}<newline46mondego>"
"8979splitHere46","17732298splitHere46","new ModelBatch()"
"8980splitHere46","17732298splitHere46","render"
"8981splitHere46","17732298splitHere46","DefaultShaderProvider"
"8982splitHere46","17732298splitHere46","public ModelBatch() {<newline46mondego>  this(new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN, 1)),<newline46mondego>       new DefaultShaderProvider(),<newline46mondego>       new DefaultRenderableSorter());<newline46mondego>}<newline46mondego>"
"8983splitHere46","17732298splitHere46","DefaultShaderProvider"
"8984splitHere46","17732298splitHere46","createShader"
"8985splitHere46","17732298splitHere46","@Override<newline46mondego>protected Shader createShader(final Renderable renderable) {<newline46mondego>  Gdx.app.log(<doubleQuotes46>DefaultShaderProvider<doubleQuotes46>, <doubleQuotes46>Creating new shader<doubleQuotes46>);<newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"8986splitHere46","17732298splitHere46","modelBatch"
"8987splitHere46","17732298splitHere46","create"
"8988splitHere46","17732298splitHere46","render"
"8989splitHere46","17732419splitHere46","public class MySwingWorker extends SwingWorker<String,String> {<newline46mondego><newline46mondego>       @Override<newline46mondego>       public String doInBackground() {<newline46mondego>           //here you make heavy task in another thread<newline46mondego>           // you call publish or setProgress or both<newline46mondego>       }<newline46mondego><newline46mondego>       @Override<newline46mondego>       protected void done() {<newline46mondego>           //here is call when job is done, you can update here your gui<newline46mondego>       }<newline46mondego><newline46mondego>      public void process(List<String> chunks){<newline46mondego>          // this is called when you do publish in the background here<newline46mondego>          // you update the gui<newline46mondego>      }<newline46mondego><newline46mondego>}<newline46mondego>"
"8990splitHere46","17732419splitHere46","mySwingWorker.execute()"
"8991splitHere46","17732444splitHere46","((MyActivity)getActivity()).myGlobalVariable();<newline46mondego>"
"8992splitHere46","17732473splitHere46","String input = <doubleQuotes46>#[flowVars['variable_name']]<doubleQuotes46>;<newline46mondego>System.out.println(input.replaceAll(<doubleQuotes46>.*'(.*)'.*<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>));<newline46mondego>"
"8993splitHere46","17732473splitHere46",".*"
"8994splitHere46","17732473splitHere46","'"
"8995splitHere46","17732473splitHere46","(.*)"
"8996splitHere46","17732473splitHere46","$1"
"8997splitHere46","17732473splitHere46","$2"
"8998splitHere46","17732473splitHere46","System.out.println(input.replaceAll(<doubleQuotes46>(.*)'(.*)'(.*)<doubleQuotes46>, <doubleQuotes46>$2, $1, $3<doubleQuotes46>));<newline46mondego>"
"8999splitHere46","17732473splitHere46","String input = <doubleQuotes46>#[flowVars['variable_name1']]#[flowVars['variable_name2']]<doubleQuotes46>;<newline46mondego>"
"9000splitHere46","17732473splitHere46","Pattern"
"9001splitHere46","17732473splitHere46","Matcher"
"9002splitHere46","17732473splitHere46","String regex = <doubleQuotes46>(?<=#\[flowVars\[')[^']*<doubleQuotes46>;<newline46mondego>"
"9003splitHere46","17732473splitHere46","(?<=#\[flowVars\[')"
"9004splitHere46","17732473splitHere46","[^']"
"9005splitHere46","17732529splitHere46","button().click();  <newline46mondego>"
"9006splitHere46","17732529splitHere46","GuiTestObject button = new GuiTestObject( getMappedTestObject(<doubleQuotes46>thebutton<doubleQuotes46>));//This currently resides in the helper file.<newline46mondego> button.click();<newline46mondego>"
"9007splitHere46","17732529splitHere46","button(anchorobject,flags).click();<newline46mondego>"
"9008splitHere46","17732529splitHere46","GuiTestObject button1 = new GuiTestObject(getMappedTestObject(<doubleQuotes46>thebutton<doubleQuotes46>),anchor,flags);<newline46mondego>    button1.click(); <newline46mondego>"
"9009splitHere46","17732529splitHere46","GuiTestObject button = button();//where button() still is in helper class<newline46mondego>button.click();<newline46mondego>button.dosomthingelse();<newline46mondego>"
"9010splitHere46","17732559splitHere46","public class OpenNLPFactory {<newline46mondego><newline46mondego>  public synchronized OpenNLP getOpenNLP() {<newline46mondego>      if(OpenNLP ready )  { <newline46mondego>          return it<newline46mondego>      } else {<newline46mondego>          build it and return it.<newline46mondego>     }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"9011splitHere46","17732589splitHere46","get(Query<TypeA>)"
"9012splitHere46","17732589splitHere46","get(SomeQuery)"
"9013splitHere46","17732589splitHere46","Service"
"9014splitHere46","17732589splitHere46","interface Service<T extends BaseType, Q extends Query<T>> {<newline46mondego>    public Result<T> get(Q query);<newline46mondego>}<newline46mondego><newline46mondego>class SomeService implements Service<TypeA, SomeQuery> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public SomeResult get(SomeQuery query) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9015splitHere46","17732589splitHere46","SomeService"
"9016splitHere46","17732589splitHere46","Service<TypeA, SomeQuery>"
"9017splitHere46","17732589splitHere46","get"
"9018splitHere46","17732589splitHere46","Result<TypeA>"
"9019splitHere46","17732589splitHere46","interface Service<T extends BaseType, Q extends Query<T>, R extends Result<T>> {<newline46mondego>    public R get(Q query);<newline46mondego>}<newline46mondego><newline46mondego>class SomeService implements Service<TypeA, SomeQuery, SomeResult> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public SomeResult get(SomeQuery query) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9020splitHere46","17732636splitHere46","table.getColumn(<doubleQuotes46>Name<doubleQuotes46>).setCellRenderer(<newline46mondego>            new DefaultTableCellRenderer() {<newline46mondego><newline46mondego>        Color originalColor = null;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {<newline46mondego>            DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);<newline46mondego>            if (originalColor == null) {<newline46mondego>                originalColor = getForeground();<newline46mondego>            }<newline46mondego>            if (value == null) {<newline46mondego>                renderer.setText(<doubleQuotes46><doubleQuotes46>);<newline46mondego>            } else {<newline46mondego>                renderer.setText(value.toString());<newline46mondego>            }<newline46mondego><newline46mondego>            if (row == 3) {<newline46mondego>                renderer.setForeground(Color.RED);<newline46mondego>            } else {<newline46mondego>                renderer.setForeground(originalColor); // Retore original color<newline46mondego>            }<newline46mondego>            return renderer;<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"9021splitHere46","17732702splitHere46","RandomAccessFile f = new RandomAccessFile(fileName, <doubleQuotes46>rw<doubleQuotes46>);<newline46mondego>long length = f.length() - 1;<newline46mondego>do {                     <newline46mondego>  length -= 1;<newline46mondego>  f.seek(length);<newline46mondego>  byte b = f.readbyte();<newline46mondego>} while(b != 10);<newline46mondego>f.setLength(length+1);<newline46mondego>"
"9022splitHere46","17732710splitHere46","Answer"
"9023splitHere46","17732710splitHere46","package com.sandbox;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego>import org.mockito.invocation.InvocationOnMock;<newline46mondego>import org.mockito.stubbing.Answer;<newline46mondego><newline46mondego>import static org.junit.Assert.assertEquals;<newline46mondego>import static org.mockito.Mockito.mock;<newline46mondego><newline46mondego>public class SandboxTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testMocking() {<newline46mondego>        Foo foo = mock(Foo.class, new Answer() {<newline46mondego>            @Override<newline46mondego>            public Object answer(InvocationOnMock invocation) throws Throwable {<newline46mondego>                String name = invocation.getMethod().getName();<newline46mondego>                if (name.contains(<doubleQuotes46>get<doubleQuotes46>)) {<newline46mondego>                    return <doubleQuotes46>this is a getter<doubleQuotes46>;<newline46mondego>                }<newline46mondego>                return null;<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        assertEquals(<doubleQuotes46>this is a getter<doubleQuotes46>, foo.getY());<newline46mondego>        assertEquals(<doubleQuotes46>this is a getter<doubleQuotes46>, foo.getX());<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Foo {<newline46mondego>        private String x;<newline46mondego>        private String y;<newline46mondego><newline46mondego>        public String getX() {<newline46mondego>            return x;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setX(String x) {<newline46mondego>            this.x = x;<newline46mondego>        }<newline46mondego><newline46mondego>        public String getY() {<newline46mondego>            return y;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setY(String y) {<newline46mondego>            this.y = y;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"9024splitHere46","17732710splitHere46","contains"
"9025splitHere46","17732745splitHere46","public static void main(String[] args)"
"9026splitHere46","17732796splitHere46","request = http GET to <doubleQuotes46>${url}<doubleQuotes46> with headers, [ 'Cookie': 'monster' ]<newline46mondego>"
"9027splitHere46","17732796splitHere46","request = http( GET ).to( <doubleQuotes46>${url}<doubleQuotes46> ).with( headers, [ 'Cookie': 'monster' ] )<newline46mondego>"
"9028splitHere46","17732796splitHere46","request with headers, [ 'Cookie': 'monster' ]<newline46mondego>"
"9029splitHere46","17732796splitHere46","request( with headers, [ 'Cookie': 'monster' ] )<newline46mondego>"
"9030splitHere46","17732804splitHere46","overloading"
"9031splitHere46","17732804splitHere46","this(inOwner, inAddress);"
"9032splitHere46","17733027splitHere46","hh"
"9033splitHere46","17733027splitHere46","HH"
"9034splitHere46","17733027splitHere46","<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss<doubleQuotes46><newline46mondego>"
"9035splitHere46","17733027splitHere46","SimpleDateFormat"
"9036splitHere46","17733027splitHere46","kk"
"9037splitHere46","17733027splitHere46","KK"
"9038splitHere46","17733027splitHere46","Date"
"9039splitHere46","17733027splitHere46","SimpleDateFormat"
"9040splitHere46","17733136splitHere46","languages.xx=Language name<newline46mondego>"
"9041splitHere46","17733137splitHere46","faces-config.xml"
"9042splitHere46","17733137splitHere46","<faces-config xmlns=<doubleQuotes46>http://xmlns.jcp.org/xml/ns/javaee<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://xmlns.jcp.org/xml/ns/javaee<newline46mondego>        http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.2<doubleQuotes46>><newline46mondego><newline46mondego></faces-config><newline46mondego>"
"9043splitHere46","17733340splitHere46","ArrayList"
"9044splitHere46","17733340splitHere46","tokens = new ArrayList<String>();<newline46mondego>"
"9045splitHere46","17733340splitHere46","tokens"
"9046splitHere46","17733340splitHere46","null"
"9047splitHere46","17733450splitHere46","getFloat"
"9048splitHere46","17733450splitHere46","ResultSet"
"9049splitHere46","17733450splitHere46","executeQuery()"
"9050splitHere46","17733450splitHere46","String selectScore = <doubleQuotes46>SELECT SCORES FROM STUDENTS<doubleQuotes46>;<newline46mondego>ResultSet rs = st.executeQuery(selectScore);<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>float AllScores = rs.getFloat(<doubleQuotes46>SCORES<doubleQuotes46>);<newline46mondego>"
"9051splitHere46","17733459splitHere46","final String html = <doubleQuotes46><tr valign=\<doubleQuotes46>top\<doubleQuotes46>>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td><a href=\<doubleQuotes46>#\<doubleQuotes46>> 1 </a></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td><a href=\<doubleQuotes46>#\<doubleQuotes46>> 2 </a></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td><span> 3 </span></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td><a href=\<doubleQuotes46>#\<doubleQuotes46>> 4 </a></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td><a href=\<doubleQuotes46>#\<doubleQuotes46>> 5 </a></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46>    <td><a href=\<doubleQuotes46>#\<doubleQuotes46>> 6 </a></td>\n<doubleQuotes46><newline46mondego>        + <doubleQuotes46></tr><doubleQuotes46>;<newline46mondego><newline46mondego>Document doc = Jsoup.parse(html);<newline46mondego><newline46mondego>Element nextToSpan = doc.select(<doubleQuotes46>span<doubleQuotes46>).first().nextElementSibling();<newline46mondego>"
"9052splitHere46","17733459splitHere46","doc.select(<doubleQuotes46>span<doubleQuotes46>) // Select the span-tags of doc<newline46mondego>    .first()    // retrieve the first one<newline46mondego>    .nextElementSibling();  // Get the element that's next to it<newline46mondego>"
"9053splitHere46","17733493splitHere46","|"
"9054splitHere46","17733493splitHere46","if"
"9055splitHere46","17733493splitHere46","if"
"9056splitHere46","17733493splitHere46","if"
"9057splitHere46","17733493splitHere46","if (foo() | bar())<newline46mondego>"
"9058splitHere46","17733493splitHere46","foo()"
"9059splitHere46","17733493splitHere46","bar()"
"9060splitHere46","17733493splitHere46","||"
"9061splitHere46","17733493splitHere46","foo()"
"9062splitHere46","17733493splitHere46","bar()"
"9063splitHere46","17733493splitHere46","if"
"9064splitHere46","17733493splitHere46","InputType"
"9065splitHere46","17733493splitHere46","InputType.TYPE_CLASS_TEXT = Constant Value: 1 (0x00000001)<newline46mondego>InputType.TYPE_TEXT_VARIATION_PASSWORD = Constant Value: 128 (0x00000080)<newline46mondego>"
"9066splitHere46","17733591splitHere46","Button save = (Button) findViewById(R.id.button1);<newline46mondego>"
"9067splitHere46","17733591splitHere46","Button save;<newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onCreate(Bundle savedInstanceState) {<newline46mondego><newline46mondego>        save  = (Button) findViewById(R.id.button1);//this line is before onclicklistener.<newline46mondego> save.setOnclickListner(new View.OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego>            name = nameXML.getText().toString(); <newline46mondego>            Editor nameEditor = filename.edit();<newline46mondego>            nameEditor.putString(<doubleQuotes46>nameString<doubleQuotes46>, name);<newline46mondego>            nameEditor.commit();<newline46mondego>        }<newline46mondego>    });<newline46mondego>    }<newline46mondego>"
"9068splitHere46","17733821splitHere46","System.out.println(map.get(<doubleQuotes46>test<doubleQuotes46>)[0][1]);<newline46mondego>"
"9069splitHere46","17733821splitHere46","TreeMap"
"9070splitHere46","17733964splitHere46","Ask for value, put into Object1<newline46mondego>if not done<newline46mondego>  Ask for value, put into Object2<newline46mondego>else <newline46mondego>  put default into Object2<newline46mondego>if not done<newline46mondego>  Ask for value, put into Object3<newline46mondego>else <newline46mondego>  put default into Object3<newline46mondego>...<newline46mondego>"
"9071splitHere46","17733964splitHere46","for x<newline46mondego>  if not done<newline46mondego>    Ask for value, put into Objectx<newline46mondego>  else<newline46mondego>    put default into Objectx<newline46mondego>"
"9072splitHere46","17733964splitHere46","Map<String, SomeType>"
"9073splitHere46","17733964splitHere46","Map<String, SomeType> dict = new ...<newline46mondego>for(int x = 0; x < 10; x++)<newline46mondego>  if not done<newline46mondego>    Ask for value, put into dict[<doubleQuotes46>object<doubleQuotes46>+x.ToString()]<newline46mondego>  else<newline46mondego>    put default into dict[<doubleQuotes46>object<doubleQuotes46>+x.ToString()]<newline46mondego>"
"9074splitHere46","17734048splitHere46","java.util.concurrent.ConcurrentHashMap"
"9075splitHere46","17734048splitHere46","import java.io.File<newline46mondego>import scala.util._<newline46mondego>def walk(f: File, callback: File => Unit, pick: File => Boolean = _ => true) {<newline46mondego>  Try {<newline46mondego>    val (dirs, fs) = f.listFiles.partition(_.isDirectory)<newline46mondego>    fs.filter(pick).foreach(callback)<newline46mondego>    dirs.par.foreach(f => walk(f, callback, pick))<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9076splitHere46","17734048splitHere46","foreach"
"9077splitHere46","17734048splitHere46","ConcurrentLinkedQueue"
"9078splitHere46","17734222splitHere46","textArea.setCaretPosition( textArea.getDocument().getLength() );<newline46mondego>"
"9079splitHere46","17734286splitHere46","Iterator<String>"
"9080splitHere46","17734286splitHere46","iterator()"
"9081splitHere46","17734286splitHere46","new"
"9082splitHere46","17734286splitHere46","class Bar {}<newline46mondego><newline46mondego>class Foo {<newline46mondego>    Bar createBar() {<newline46mondego>        return new Bar();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Foo foo = new Foo();<newline46mondego>        Bar bar = foo.createBar();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9083splitHere46","17734369splitHere46","if(myString.matches(<doubleQuotes46>\\d{2}-\\d{2}-\\d{4}<doubleQuotes46>)){<newline46mondego>    //Do something<newline46mondego>}<newline46mondego>"
"9084splitHere46","17734369splitHere46","\d"
"9085splitHere46","17734375splitHere46","LOCAL_CFLAGS    := -frtti<newline46mondego>"
"9086splitHere46","17734375splitHere46","LOCAL_CFLAGS    := -frtti -fexceptions<newline46mondego>"
"9087splitHere46","17734393splitHere46","MainScreen#setBanner()"
"9088splitHere46","17734393splitHere46","MainScreen#setStatus()"
"9089splitHere46","17734393splitHere46","public class HeaderFooterListScreen extends MainScreen {<newline46mondego><newline46mondego>   private static final int BG_COLOR = Color.BLACK;<newline46mondego>   private static final int HIGHLIGHT_COLOR = Color.BLUE;<newline46mondego>   private static final int FONT_COLOR = Color.WHITE;<newline46mondego>   private static final int ROW_HEIGHT = 60;<newline46mondego><newline46mondego>   private Object[] _rowData;<newline46mondego>   private Field _header;<newline46mondego>   private Field _footer;<newline46mondego>   private Field _spacer;<newline46mondego>   private int _orientation;<newline46mondego><newline46mondego>   public HeaderFooterListScreen() {<newline46mondego>      super(MainScreen.VERTICAL_SCROLL | MainScreen.VERTICAL_SCROLLBAR);<newline46mondego><newline46mondego>      Background bg = BackgroundFactory.createSolidBackground(BG_COLOR);<newline46mondego>      setBackground(bg);<newline46mondego>      getMainManager().setBackground(bg);<newline46mondego><newline46mondego>      // header<newline46mondego>      Bitmap headerImg = Bitmap.getBitmapResource(<doubleQuotes46>header.png<doubleQuotes46>);<newline46mondego>      _header = new BitmapField(headerImg);<newline46mondego>      setBanner(_header);<newline46mondego><newline46mondego>      // list<newline46mondego>      _rowData = new Object[] { <doubleQuotes46>row one<doubleQuotes46>, <doubleQuotes46>row two<doubleQuotes46>, <doubleQuotes46>row three<doubleQuotes46> }; //, <doubleQuotes46>row four<doubleQuotes46>, <doubleQuotes46>row five<doubleQuotes46>, <doubleQuotes46>row six<doubleQuotes46>, <doubleQuotes46>row seven<doubleQuotes46>, <doubleQuotes46>row eight<doubleQuotes46>, <doubleQuotes46>row nine<doubleQuotes46>, <doubleQuotes46>row ten<doubleQuotes46> };<newline46mondego>      ListField list = new ListField();<newline46mondego>      int c = Color.RED;<newline46mondego>      XYEdges edgeColors = new XYEdges(c, c, c, c);<newline46mondego>      XYEdges edgeThicknesses = new XYEdges(5, 5, 5, 5);<newline46mondego>      list.setBorder(BorderFactory.createSimpleBorder(edgeThicknesses, edgeColors, Border.STYLE_SOLID));<newline46mondego>      list.setCallback(new CustomListFieldCallback());<newline46mondego>      list.setRowHeight(ROW_HEIGHT);<newline46mondego>      list.setSize(_rowData.length);<newline46mondego><newline46mondego>      add(list);<newline46mondego><newline46mondego>      // footer<newline46mondego>      _footer = new LabelField(<doubleQuotes46>Footer Showing Status As Text<doubleQuotes46>, Field.USE_ALL_WIDTH | DrawStyle.HCENTER) {<newline46mondego>         public void paint(Graphics g) {<newline46mondego>            // change font color<newline46mondego>            int oldColor = g.getColor();<newline46mondego>            g.setColor(FONT_COLOR);<newline46mondego>            super.paint(g);<newline46mondego>            g.setColor(oldColor);<newline46mondego>         }<newline46mondego>      };<newline46mondego>      _footer.setFont(_footer.getFont().derive(Font.PLAIN, 24));<newline46mondego>      setStatus(_footer);<newline46mondego>   }    <newline46mondego><newline46mondego>   private void centerList() {<newline46mondego>      if (_spacer != null && _spacer.getManager() != null) {<newline46mondego>         // delete the old spacer field, if there was one      <newline46mondego>         delete(_spacer);     <newline46mondego>      }<newline46mondego>      int listHeight = _rowData.length * ROW_HEIGHT;<newline46mondego>      int availableHeight = getHeight() - _footer.getHeight() - _header.getHeight(); <newline46mondego>      if (availableHeight > listHeight) {<newline46mondego>         boolean firstRun = (_spacer == null);<newline46mondego>         // add a spacer above the list to force it down enough to be centered<newline46mondego>         final int SPACE = (availableHeight - listHeight) / 2;         <newline46mondego>         _spacer = new Field() {<newline46mondego>            protected void layout(int width, int height) {<newline46mondego>               setExtent(width, SPACE);              <newline46mondego>            }<newline46mondego>            protected void paint(Graphics graphics) {            <newline46mondego>            }            <newline46mondego>         };<newline46mondego>         insert(_spacer, 0); <newline46mondego>         if (firstRun) {<newline46mondego>            getMainManager().setVerticalScroll(0);<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }   <newline46mondego><newline46mondego>   // called when device orientation changes<newline46mondego>   protected void sublayout(int width, int height) {<newline46mondego>      super.sublayout(width, height);<newline46mondego><newline46mondego>      if (_orientation != Display.getOrientation()) {<newline46mondego>         _orientation = Display.getOrientation();<newline46mondego><newline46mondego>         // run with invokeLater() to avoid recursive sublayout() calls<newline46mondego>         UiApplication.getUiApplication().invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>               // TODO: may have to adjust header, too?<newline46mondego>               centerList();<newline46mondego>            }<newline46mondego>         });<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   private class CustomListFieldCallback implements ListFieldCallback {<newline46mondego><newline46mondego>      private final int PAD = 10;<newline46mondego><newline46mondego>      public void drawListRow(ListField listField, Graphics graphics,<newline46mondego>            int index, int y, int width) {<newline46mondego><newline46mondego>         int oldColor = graphics.getColor();<newline46mondego>         if (listField.getSelectedIndex() == index) {<newline46mondego>            graphics.setColor(HIGHLIGHT_COLOR);<newline46mondego>         } else {<newline46mondego>            graphics.setColor(BG_COLOR);<newline46mondego>         }<newline46mondego>         graphics.fillRect(0, y, width, listField.getRowHeight());<newline46mondego><newline46mondego>         graphics.setColor(FONT_COLOR);<newline46mondego>         String text = (String)get(listField, index);               <newline46mondego>         graphics.drawText(text, PAD, y + PAD, DrawStyle.LEFT);<newline46mondego><newline46mondego>         graphics.setColor(oldColor);<newline46mondego>      }<newline46mondego><newline46mondego>      public Object get(ListField listField, int index) {<newline46mondego>         return _rowData[index];<newline46mondego>      }<newline46mondego><newline46mondego>      public int getPreferredWidth(ListField listField) {         <newline46mondego>         return Display.getWidth();<newline46mondego>      }<newline46mondego><newline46mondego>      public int indexOfList(ListField listField, String prefix, int start) {         <newline46mondego>         return -1;  // TODO?<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9090splitHere46","17734393splitHere46","Fields"
"9091splitHere46","17734393splitHere46","Managers"
"9092splitHere46","17734465splitHere46","List"
"9093splitHere46","17734465splitHere46","ArrayList"
"9094splitHere46","17734465splitHere46","List<Tuple<String,String,String>> Queries = new ArrayList<Tuple<String,String,String>>();<newline46mondego>"
"9095splitHere46","17734465splitHere46","Tuple"
"9096splitHere46","17734465splitHere46","List"
"9097splitHere46","17734547splitHere46","<dependency><newline46mondego><groupId>mysql</groupId><newline46mondego><artifactId>mysql-connector-java</artifactId><newline46mondego><version>5.1.6</version><newline46mondego>"
"9098splitHere46","17734569splitHere46","HttpGetAndroidExample"
"9099splitHere46","17734569splitHere46","HttpGetAndroidExample"
"9100splitHere46","17734569splitHere46","extend"
"9101splitHere46","17734569splitHere46","Activiy"
"9102splitHere46","17734569splitHere46","HttpGetAndroidExample cannot be cast to android.app.Activity"
"9103splitHere46","17734715splitHere46","if"
"9104splitHere46","17734715splitHere46","else if"
"9105splitHere46","17734715splitHere46","else"
"9106splitHere46","17734715splitHere46","System.out.println(<doubleQuotes46>What is your Gender?<doubleQuotes46>);<newline46mondego>String gender = input.nextLine();<newline46mondego>if (gender.equals (<doubleQuotes46>male<doubleQuotes46>)){<newline46mondego>    System.out.println(<doubleQuotes46>What is your age?<doubleQuotes46>);<newline46mondego>    int agem = input.nextInt();<newline46mondego>    if (agem >= 21 && agem < 65){<newline46mondego>        System.out.println(<doubleQuotes46>Access Granted<doubleQuotes46>);<newline46mondego>    }else{<newline46mondego>        System.out.println(<doubleQuotes46>Access Denied<doubleQuotes46>);<newline46mondego>    }<newline46mondego>} else if (gender.equals (<doubleQuotes46>female<doubleQuotes46>)){<newline46mondego>    System.out.println(<doubleQuotes46>What is your age?<doubleQuotes46>);<newline46mondego>    int agef = input.nextInt();<newline46mondego>    if (agef >=18 && agef < 60){<newline46mondego>        System.out.println(<doubleQuotes46>Access Granted<doubleQuotes46>);<newline46mondego>    }else{<newline46mondego>        System.out.println(<doubleQuotes46>Access Denied<doubleQuotes46>);<newline46mondego>    }<newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>Unrecognized input.<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"9107splitHere46","17734886splitHere46","-Xss"
"9108splitHere46","17734886splitHere46","-Xms"
"9109splitHere46","17734886splitHere46","-Xmx"
"9110splitHere46","17734970splitHere46","package com.sandbox;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>import static org.junit.Assert.assertEquals;<newline46mondego><newline46mondego>public class SandboxTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testMocking() {<newline46mondego>        assertEquals(<doubleQuotes46>foo<doubleQuotes46>, stringBits(<doubleQuotes46>f1o2o3<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    public String stringBits(String str) {<newline46mondego>        StringBuffer tmp = new StringBuffer();<newline46mondego>        for (int i = 0; i < str.length(); i += 2) {<newline46mondego>            tmp.append(str.charAt(i));<newline46mondego>        }<newline46mondego>        String ret = new String(tmp);<newline46mondego>        return ret;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9111splitHere46","17734970splitHere46","StringCharacterIterator"
"9112splitHere46","17734970splitHere46","package com.sandbox;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>import java.text.CharacterIterator;<newline46mondego>import java.text.StringCharacterIterator;<newline46mondego><newline46mondego>import static org.junit.Assert.assertEquals;<newline46mondego><newline46mondego>public class SandboxTest {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testMocking() {<newline46mondego>        assertEquals(<doubleQuotes46>foo<doubleQuotes46>, stringBits(<doubleQuotes46>f1o2o3<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    public String stringBits(String str) {<newline46mondego>        StringBuilder buf = new StringBuilder();<newline46mondego>        StringCharacterIterator iterator = new StringCharacterIterator(str);<newline46mondego>        for (char c = iterator.first(); c != CharacterIterator.DONE; c = iterator.next()) {<newline46mondego>            buf.append(c);<newline46mondego>            iterator.next();<newline46mondego>        }<newline46mondego>        return buf.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9113splitHere46","17735045splitHere46","String subnet = <doubleQuotes46>12.21.31.0/24<doubleQuotes46>;<newline46mondego>SubnetUtils utils = new SubnetUtils(subnet);<newline46mondego>utils.getInfo().isInRange(address);<newline46mondego>"
"9114splitHere46","17735045splitHere46","CIDRUtils cidrUtils = new CIDRUtils(<doubleQuotes46>10.21.31.0/24<doubleQuotes46>);<newline46mondego>String networkAddress = cidrUtils.getNetworkAddress();<newline46mondego>String broadcastAddress = cidrUtils.getBroadcastAddress();<newline46mondego>"
"9115splitHere46","17735146splitHere46","date.setTimeZone(TimeZone value) <newline46mondego>"
"9116splitHere46","17735146splitHere46","TimeZone timeZone = new TimeZone ();<newline46mondego>timeZone.setRawOffset(int offsetMillis);<newline46mondego>"
"9117splitHere46","17735146splitHere46","# sudo cp /etc/localtime /etc/localtime.dist<newline46mondego># sudo ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime<newline46mondego>"
"9118splitHere46","17735319splitHere46","<aop:scoped-proxy/>"
"9119splitHere46","17735319splitHere46","@Scope(proxyMode = ScopedProxyMode.TARGET_CLASS, value = <doubleQuotes46>prototype<doubleQuotes46>)<newline46mondego>"
"9120splitHere46","17735488splitHere46","%t"
"9121splitHere46","17735527splitHere46","rs.next()"
"9122splitHere46","17735527splitHere46","mapRow"
"9123splitHere46","17735527splitHere46","mapRow"
"9124splitHere46","17735527splitHere46","mapRow"
"9125splitHere46","17735581splitHere46","// convert Oracle's hard-coded: '2013-01-02 03:04:05.060708 +9:00'<newline46mondego>// to properly formatted ISO 8601: '2013-01-02T03:04:05.060708 +9:00'<newline46mondego>String iso = rs.getString(col).replaceFirst(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>T<doubleQuotes46>); <newline46mondego>"
"9126splitHere46","17735693splitHere46","getClass().toString()"
"9127splitHere46","17735693splitHere46","class com.myproject.fresh.stubClasses.TestModel"
"9128splitHere46","17735693splitHere46","class"
"9129splitHere46","17735693splitHere46","getName()"
"9130splitHere46","17735693splitHere46","Class<?> clazz = Class.forName(getClass().getName());<newline46mondego>"
"9131splitHere46","17735693splitHere46","Class<?> clazz = getClass();<newline46mondego>"
"9132splitHere46","17735693splitHere46","Class<? extends TestModel> clazz = getClass();<newline46mondego>Constructor<? extends TestModel> ctor = clazz.getConstructor();<newline46mondego>model = ctor.newInstance();<newline46mondego>"
"9133splitHere46","17735693splitHere46","return getClass().getConstructor().newInstance();<newline46mondego>"
"9134splitHere46","17735763splitHere46","int start = yourString.indexOf(searchString);<newline46mondego>System.out.println(yourString.subString(start + 1, start + 6);<newline46mondego>"
"9135splitHere46","17735826splitHere46","ID (?:\[([^\]:]+):([^\]|]+)\|([^\]]+)\]).*?SetTime \[([^\]]+)\], ClearedTime \[([^\]]+)\]<newline46mondego>"
"9136splitHere46","17735826splitHere46","1: ID [StrValue1:StrValu2|StrValue3], Instance [4053], SetStatus [0], AckStatus [1], SetTime [DateValue4], ClearedTime [DateValue5]<newline46mondego>  [1]: StrValue1<newline46mondego>  [2]: StrValu2<newline46mondego>  [3]: StrValue3<newline46mondego>  [4]: DateValue4<newline46mondego>  [5]: DateValue5<newline46mondego>"
"9137splitHere46","17735826splitHere46","(ID|SetTime|ClearedTime) \[([^\]]+)\<newline46mondego>"
"9138splitHere46","17735826splitHere46","1: ID [StrValue1:StrValu2|StrValue3]<newline46mondego>  [1]: ID<newline46mondego>  [2]: StrValue1:StrValu2|StrValue3<newline46mondego>1: SetTime [DateValue4]<newline46mondego>  [1]: SetTime<newline46mondego>  [2]: DateValue4<newline46mondego>1: ClearedTime [DateValue5]<newline46mondego>  [1]: ClearedTime<newline46mondego>  [2]: DateValue5<newline46mondego>"
"9139splitHere46","17735908splitHere46","String age = <doubleQuotes46>0<doubleQuotes46>;<newline46mondego>    try<newline46mondego>    {<newline46mondego>        age = JOptionPane.showInputDialog(<doubleQuotes46>What was your age yesterday?<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    catch(Exception e)<newline46mondego>    {<newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>Thanks a lot, you broke it. CYA later.<doubleQuotes46>);<newline46mondego>        return;<newline46mondego>    }<newline46mondego>    int iage = Integer.parseInt(age);<newline46mondego>"
"9140splitHere46","17735908splitHere46","String age = JOptionPane.showInputDialog(<doubleQuotes46>What was your age yesterday?<doubleQuotes46>);<newline46mondego>try {<newline46mondego>  iage = Integer.parseInt(age);<newline46mondego>} catch (NumberFormatException nfe) {<newline46mondego>  // show error<newline46mondego>}  <newline46mondego>"
"9141splitHere46","17735908splitHere46","Exception"
"9142splitHere46","17735908splitHere46","NumberFormatException"
"9143splitHere46","17735908splitHere46","Boolean.parseBoolean(...)"
"9144splitHere46","17735908splitHere46","equalsIgnoreCase(...)"
"9145splitHere46","17735911splitHere46","Node node = soapMessage.getSOAPBody();<newline46mondego>unmarshaller.unmarshal(node)(<newline46mondego>"
"9146splitHere46","17736002splitHere46","if((top.x1 == n2.x1) && (top.y1 == n2.y1)){<newline46mondego>                // found our node;<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>"
"9147splitHere46","17736002splitHere46","gNode"
"9148splitHere46","17736002splitHere46","int"
"9149splitHere46","17736081splitHere46","import java.util.regex.Matcher;<newline46mondego>import java.util.regex.Pattern;<newline46mondego><newline46mondego>public class Mkt {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>([$\\d.,]+)|([\\w\\d!$]+)<doubleQuotes46>);<newline46mondego>    String str = <doubleQuotes46>--- FREE!! $50 192.168.1.1 $24,500<doubleQuotes46>;<newline46mondego>    System.out.println(<doubleQuotes46>input: <doubleQuotes46> + str);<newline46mondego><newline46mondego>    Matcher m = p.matcher(str);<newline46mondego>    while(m.find()) {<newline46mondego>      System.out.println(<doubleQuotes46>token: <doubleQuotes46> + m.group());<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9150splitHere46","17736081splitHere46","$ javac Mkt.java && java Mkt<newline46mondego>input: --- FREE!! $50 192.168.1.1 $24,500<newline46mondego>token: FREE!!<newline46mondego>token: $50<newline46mondego>token: 192.168.1.1<newline46mondego>token: $24,500<newline46mondego>"
"9151splitHere46","17736081splitHere46","$24,500"
"9152splitHere46","17736081splitHere46","$24,500abc"
"9153splitHere46","17736081splitHere46","$24,500EUR"
"9154splitHere46","17736081splitHere46","192.168.1.1"
"9155splitHere46","17736081splitHere46","192,168.1,1"
"9156splitHere46","17736081splitHere46","."
"9157splitHere46","17736081splitHere46",","
"9158splitHere46","17736105splitHere46","if"
"9159splitHere46","17736105splitHere46","String UserInput;<newline46mondego>if (RAWUserInput.contains(<doubleQuotes46>example<doubleQuotes46>) {<newline46mondego>   UserInput = RAWUserInput.replace(<doubleQuotes46>example<doubleQuotes46>, <doubleQuotes46>eg<doubleQuotes46>);<newline46mondego>}else{<newline46mondego>   UserInput = RAWUserInput;<newline46mondego>}<newline46mondego>"
"9160splitHere46","17736105splitHere46","if"
"9161splitHere46","17736105splitHere46","if"
"9162splitHere46","17736105splitHere46","else"
"9163splitHere46","17736105splitHere46","UserInput"
"9164splitHere46","17736105splitHere46","userInput"
"9165splitHere46","17736105splitHere46","rawUserInput"
"9166splitHere46","17736179splitHere46","2400 * 4 = 9600"
"9167splitHere46","17736179splitHere46","60 * 80 * 4 = 19200"
"9168splitHere46","17736179splitHere46","i"
"9169splitHere46","17736179splitHere46","ia"
"9170splitHere46","17736179splitHere46","ib"
"9171splitHere46","17736179splitHere46","ia"
"9172splitHere46","17736179splitHere46","i*8"
"9173splitHere46","17736179splitHere46","(i*8)+2"
"9174splitHere46","17736179splitHere46","ib"
"9175splitHere46","17736179splitHere46","(i*8)+4"
"9176splitHere46","17736179splitHere46","(i*8)+6"
"9177splitHere46","17736179splitHere46","(i*8)+3"
"9178splitHere46","17736179splitHere46","(i*8)+7"
"9179splitHere46","17736179splitHere46","0xFF"
"9180splitHere46","17736179splitHere46","decodeByteArry()"
"9181splitHere46","17736285splitHere46","AnnotationConfigUtils.registerAnnotationConfigProcessors(ctx);<newline46mondego>"
"9182splitHere46","17736285splitHere46","GenericApplicationContext ctx = new GenericApplicationContext();<newline46mondego>XmlBeanDefinitionReader xmlReader = new XmlBeanDefinitionReader(ctx);<newline46mondego>xmlReader.loadBeanDefinitions(new ClassPathResource(<doubleQuotes46>config.xml<doubleQuotes46>));<newline46mondego>AnnotationConfigUtils.registerAnnotationConfigProcessors(ctx);<newline46mondego>ctx.refresh();<newline46mondego>"
"9183splitHere46","17736343splitHere46","false"
"9184splitHere46","17736343splitHere46","true"
"9185splitHere46","17736343splitHere46","false"
"9186splitHere46","17736343splitHere46","bday"
"9187splitHere46","17736343splitHere46","equalsIgnoreCase()"
"9188splitHere46","17736343splitHere46","true"
"9189splitHere46","17736343splitHere46","false"
"9190splitHere46","17736343splitHere46","try-catch"
"9191splitHere46","17736343splitHere46","if (bday.equalsIgnoreCase(<doubleQuotes46>true<doubleQuotes46>) || bday.equalsIgnoreCase(<doubleQuotes46>false<doubleQuotes46>)) {<newline46mondego>    bage = Boolean.parseBoolean(bday);<newline46mondego>} else {<newline46mondego>    JOptionPane.showMessageDialog(null, <doubleQuotes46>Invalid choice: Enter true or false.<doubleQuotes46>);<newline46mondego>    return;<newline46mondego>}<newline46mondego><newline46mondego>if (bage){ // bage == true is unnecessary<newline46mondego>    iage += 1;<newline46mondego>    JOptionPane.showMessageDialog(null, <doubleQuotes46>You are now <doubleQuotes46> + iage);<newline46mondego>} else { // no need to check the condition again<newline46mondego>    JOptionPane.showMessageDialog(null, <doubleQuotes46>Happy unbirthday!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"9192splitHere46","17736411splitHere46","Path"
"9193splitHere46","17736411splitHere46","System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>)"
"9194splitHere46","17736411splitHere46","Path path = FileSystems.getDefault().getPath(System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>));<newline46mondego>"
"9195splitHere46","17736411splitHere46","JFileChooser"
"9196splitHere46","17736411splitHere46","FileSystemView"
"9197splitHere46","17736411splitHere46","Path path = FileSystemView.getFileSystemView().getDefaultDirectory().toPath()<newline46mondego>"
"9198splitHere46","17736411splitHere46","Path docs = FileSystems.getDefault().getPath(System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>), <doubleQuotes46>Documents<doubleQuotes46>);<newline46mondego>Path myDocs = FileSystems.getDefault().getPath(System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>), <doubleQuotes46>My Documents<doubleQuotes46>);<newline46mondego>Path userHome = FileSystems.getDefault().getPath(System.getProperty(<doubleQuotes46>user.home<doubleQuotes46>));<newline46mondego>"
"9199splitHere46","17736622splitHere46","Enumeration myEnumerate(final Object array[]) {<newline46mondego>        class E implements Enumeration {<newline46mondego>            int count = 0;<newline46mondego>            public boolean hasMoreElements()<newline46mondego>                { return count < array.length; }<newline46mondego>            public Object nextElement() {<newline46mondego>                { return array[count++]; }<newline46mondego>        }<newline46mondego>        return new E();<newline46mondego>    }<newline46mondego>"
"9200splitHere46","17736622splitHere46","array"
"9201splitHere46","17736622splitHere46","val$array"
"9202splitHere46","17736622splitHere46","array"
"9203splitHere46","17736622splitHere46","final"
"9204splitHere46","17736622splitHere46","Enumeration myEnumerate(Object array[], int copy) { // array not final, let's see...<newline46mondego>    for (int i = 0, i < 2; i++ ) { // loop to have several copies<newline46mondego>        class E implements Enumeration {<newline46mondego>            int count = 0;<newline46mondego>            public boolean hasMoreElements()<newline46mondego>                { return count < array.length; }<newline46mondego>            public Object nextElement() {<newline46mondego>                { return array[count++]; }<newline46mondego>        } // we hope to be done with E... oh no <newline46mondego><newline46mondego>        array = null; // not final => can change<newline46mondego><newline46mondego>        if (i == copy) {<newline46mondego>            return new E(); // we need to look outside of E<newline46mondego>            // to figure value of array it uses<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"9205splitHere46","17736622splitHere46","// ...<newline46mondego>    for (int i = 0, i < 2; i++ ) { // loop to have several copies<newline46mondego>        if (i == copy) {<newline46mondego>            return new Enumeration() {<newline46mondego>                int count = 0;<newline46mondego>                public boolean hasMoreElements()<newline46mondego>                    { return count < array.length; }<newline46mondego>                public Object nextElement() {<newline46mondego>                    { return array[count++]; }<newline46mondego>            } // we hope to be done... oh no<newline46mondego>        }<newline46mondego><newline46mondego>        array = null; // not final => can change<newline46mondego>    }<newline46mondego>"
"9206splitHere46","17736630splitHere46","asJavaCollection"
"9207splitHere46","17736630splitHere46","import scala.collection.JavaConverters._<newline46mondego><newline46mondego>var attrDefs = Vector(new AttributeDefinition(), new AttributeDefinition())<newline46mondego><newline46mondego>request.setAttributeDefinitions(attrDefs.asJavaCollection)<newline46mondego>"
"9208splitHere46","17736630splitHere46","import scala.collection.JavaConversions._"
"9209splitHere46","17736630splitHere46","asJavaCollection"
"9210splitHere46","17736630splitHere46","import scala.collection.JavaConversions._<newline46mondego><newline46mondego>var attrDefs = Vector(new AttributeDefinition(), new AttributeDefinition())<newline46mondego><newline46mondego>request.setAttributeDefinitions(attrDefs)<newline46mondego>"
"9211splitHere46","17736659splitHere46","ON DELETE CASCADE"
"9212splitHere46","17736659splitHere46","FOREIGN KEY"
"9213splitHere46","17736659splitHere46","ON DELETE RESTRICT"
"9214splitHere46","17736706splitHere46","Cache"
"9215splitHere46","17736706splitHere46","public class Cache<K,V> extends LinkedHashMap<K,V>{<newline46mondego>"
"9216splitHere46","17736706splitHere46","Cache<Integer,String> cache = new Cache<>();<newline46mondego>...<newline46mondego>cache.put(1,<doubleQuotes46>String 1<doubleQuotes46>);<newline46mondego>cache.put(2,<doubleQuotes46>String 2<doubleQuotes46>);<newline46mondego>"
"9217splitHere46","17736706splitHere46","cache.put(1,<doubleQuotes46>String 1<doubleQuotes46>);<newline46mondego>cache.put(new MyObject1(), new SomeOtherObject());<newline46mondego>"
"9218splitHere46","17736706splitHere46","<Object,Object>"
"9219splitHere46","17736833splitHere46","Uri"
"9220splitHere46","17736833splitHere46","Uri uri = Uri.parse(<doubleQuotes46>https://graph.facebook.com/me/home?limit=25&since=1374196005<doubleQuotes46>);<newline46mondego>String protocol = uri.getScheme();<newline46mondego>String server = uri.getAuthority();<newline46mondego>String path = uri.getPath();<newline46mondego>Set<String> args = uri.getQueryParameterNames();<newline46mondego>String limit = uri.getQueryParameter(<doubleQuotes46>limit<doubleQuotes46>);<newline46mondego>"
"9221splitHere46","17736838splitHere46","race.equals(races[0])"
"9222splitHere46","17736838splitHere46","race == races[0]"
"9223splitHere46","17736838splitHere46","equals"
"9224splitHere46","17736838splitHere46","=="
"9225splitHere46","17736901splitHere46","private MockMvc mockMvc;<newline46mondego><newline46mondego> private SomeController controller = new SomeController();<newline46mondego> @Mock <newline46mondego> private ResourceAdminService resourceAdminService;<newline46mondego><newline46mondego><newline46mondego> @Before<newline46mondego> public void setup() throws Exception {<newline46mondego>    controller.setResourceAdminService(resourceAdminService);<newline46mondego>    this.mockMvc = MockMvcBuilders.standaloneSetup(controller).build();<newline46mondego> }<newline46mondego>"
"9226splitHere46","17736918splitHere46","Producer"
"9227splitHere46","17736918splitHere46","static class Producer implements Runnable {<newline46mondego>    public void run() {<newline46mondego>        while (true) {<newline46mondego>            synchronized (q) {<newline46mondego>                if (q.size() < 10) {<newline46mondego>                    String st = System.currentTimeMillis() + <doubleQuotes46><doubleQuotes46>;<newline46mondego>                    q.add(st);<newline46mondego>                    q.notifyAll();<newline46mondego>                } else {<newline46mondego>                    try {<newline46mondego>                        System.out.println(<doubleQuotes46>Q is full so waiting<doubleQuotes46>);<newline46mondego>                        q.wait();<newline46mondego>                    } catch (InterruptedException ex) {<newline46mondego>                        ex.printStackTrace();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9228splitHere46","17736918splitHere46","Consumer"
"9229splitHere46","17736918splitHere46","static class Consumer implements Runnable {<newline46mondego>    public void run() {<newline46mondego>        while (true) {<newline46mondego>            synchronized (q) {<newline46mondego>                if (q.isEmpty()) {<newline46mondego>                    try {<newline46mondego>                        System.out.println(<doubleQuotes46>Q is empty so waiting <doubleQuotes46>);<newline46mondego>                        q.wait();<newline46mondego>                    }catch(InterruptedException ie) {<newline46mondego>                        ie.printStackTrace();<newline46mondego>                    }<newline46mondego>                } else {<newline46mondego>                    System.out.println(q.remove());<newline46mondego>                    q.notifyAll();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9230splitHere46","17737121splitHere46","com.joyce.cit.DummyActivity"
"9231splitHere46","17737121splitHere46","com.joyce.cit.pdfview.DummyActivity"
"9232splitHere46","17737260splitHere46","BitSet"
"9233splitHere46","17737260splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.BufferedWriter;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.OutputStreamWriter;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>/**<newline46mondego> * Generate all prime numbers between two given numbers.<newline46mondego> * The input begins with the number t of test cases on a single line (t <= 10).<newline46mondego> * In each of the next t lines there are two numbers m and n (1 <= m <= n <= 1000000000, n - m <= 100000) separated by a space.<newline46mondego> * For every test case print all prime numbers p such that m <= p <= n, one number per line, test cases separated by an empty line.<newline46mondego> */<newline46mondego>public class Main {<newline46mondego>  // the upper limit on the number of primes to pre-compute<newline46mondego>  private static final int SIEVE_LIMIT = (int)Math.floor(Math.sqrt(1000000000)) + 1;<newline46mondego>  // pre-computed composites<newline46mondego>  private static final boolean[] COMPOSITES = new boolean[SIEVE_LIMIT];<newline46mondego>//  // pre-computed primes<newline46mondego>  private static final ArrayList<Integer> PRIMES = new ArrayList<Integer>();<newline46mondego><newline46mondego>  /**<newline46mondego>   * Read in input and generate output<newline46mondego>   * @param args optional list of I/O file names (used for testing)<newline46mondego>   */<newline46mondego>  public static void main(String[] args) {<newline46mondego>    // variable declarations<newline46mondego>    BufferedReader inStream = null;<newline46mondego>    BufferedWriter outStream = null;<newline46mondego>    int outerSieveNdx, innerSieveNdx, numCases, spaceNdx, beg, end, limit;<newline46mondego>    String line = null;<newline46mondego>    boolean[] segmentedSieve = null;<newline46mondego>    StringBuilder resultBuilder = new StringBuilder();<newline46mondego><newline46mondego>    //pre-compute a set of primes using Sieve of Eratosthenes method<newline46mondego>    COMPOSITES[0] = true;<newline46mondego>    COMPOSITES[1] = true;<newline46mondego><newline46mondego>    for (outerSieveNdx = 2; outerSieveNdx * outerSieveNdx < SIEVE_LIMIT; ++outerSieveNdx) {<newline46mondego>      for (innerSieveNdx = outerSieveNdx * outerSieveNdx; innerSieveNdx < SIEVE_LIMIT; innerSieveNdx += outerSieveNdx) {<newline46mondego>        COMPOSITES[innerSieveNdx] = true;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    for (outerSieveNdx = 2; outerSieveNdx < SIEVE_LIMIT; ++outerSieveNdx) {<newline46mondego>      if (!COMPOSITES[outerSieveNdx]) PRIMES.add(outerSieveNdx);<newline46mondego>    }<newline46mondego><newline46mondego>    // set input and output streams if file names are not provided<newline46mondego>    inStream = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>    outStream = new BufferedWriter(new OutputStreamWriter(System.out));<newline46mondego><newline46mondego>    try {<newline46mondego>      // get the number of cases in this run<newline46mondego>      numCases = Integer.parseInt(inStream.readLine());<newline46mondego><newline46mondego>      // get the ranges for each case & generate the primes for each range<newline46mondego>      for (outerSieveNdx = 0; outerSieveNdx < numCases; ++outerSieveNdx) {<newline46mondego>        line = inStream.readLine();<newline46mondego>        spaceNdx = line.indexOf(' ');<newline46mondego>        beg = Integer.parseInt(line.substring(0, spaceNdx));<newline46mondego>        end = Integer.parseInt(line.substring(spaceNdx + 1));<newline46mondego><newline46mondego>        // if the end is smaller than the largest pre-computed prime, just use the pre-computed list<newline46mondego>        if (end < SIEVE_LIMIT) {<newline46mondego>          for (int aPrime : PRIMES) {<newline46mondego>            if (aPrime > end) break;<newline46mondego>            else {<newline46mondego>              if (aPrime >= beg) {<newline46mondego>                resultBuilder.append(Integer.toString(aPrime) + '\n');<newline46mondego>              }<newline46mondego>            }<newline46mondego>          }<newline46mondego>        // if the beginning is larger than the largest pre-computed prime, use a segmented sieve <newline46mondego>        } else if (beg > SIEVE_LIMIT) {<newline46mondego>          segmentedSieve = segmentedSieve(beg, end);<newline46mondego>          for (innerSieveNdx = 0; innerSieveNdx < segmentedSieve.length; ++innerSieveNdx) {<newline46mondego>            if (!segmentedSieve[innerSieveNdx]) {<newline46mondego>              resultBuilder.append(Integer.toString(beg + innerSieveNdx) + '\n');<newline46mondego>            }<newline46mondego>          }<newline46mondego>        // if both of the above are false, use a combined method<newline46mondego>        } else {<newline46mondego>          for (int aPrime : PRIMES) {<newline46mondego>            if (aPrime >= beg) {<newline46mondego>              resultBuilder.append(Integer.toString(aPrime) + '\n');<newline46mondego>            }<newline46mondego>          }<newline46mondego><newline46mondego>          segmentedSieve = segmentedSieve(SIEVE_LIMIT, end);<newline46mondego><newline46mondego>          limit = end - SIEVE_LIMIT;<newline46mondego>          for (innerSieveNdx = 0; innerSieveNdx <= limit; ++innerSieveNdx) {<newline46mondego>            if (!segmentedSieve[innerSieveNdx]) {<newline46mondego>              resultBuilder.append(Integer.toString(SIEVE_LIMIT + innerSieveNdx) + '\n');<newline46mondego>            }<newline46mondego>          }<newline46mondego>        }<newline46mondego><newline46mondego>        resultBuilder.append('\n');<newline46mondego>      }<newline46mondego><newline46mondego>      // clean up, output result and exit<newline46mondego>      inStream.close();<newline46mondego>      outStream.write(resultBuilder.toString().trim());<newline46mondego>      outStream.close();<newline46mondego>      return;<newline46mondego>    } catch (Exception e) {<newline46mondego>      e.printStackTrace();<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Execute a segmented Sieve of Eratosthenes.<newline46mondego>   * @param beg the first number in the segment<newline46mondego>   * @param end the last number in the segment<newline46mondego>   * @return a BitSet with indices corresponding to composite numbers set TRUE<newline46mondego>   */<newline46mondego>  public static boolean[] segmentedSieve(int beg, int end) {<newline46mondego>    boolean[] segmentedSieve = null;<newline46mondego><newline46mondego>    int innerSieveNdx;<newline46mondego>    int limit = (int)Math.ceil(Math.sqrt(end));<newline46mondego>    int remainder;<newline46mondego><newline46mondego>    segmentedSieve = new boolean[end - beg + 1];<newline46mondego>    for (int aPrime : PRIMES) {<newline46mondego>      if (aPrime > limit) break;<newline46mondego>      innerSieveNdx = beg;<newline46mondego><newline46mondego>      remainder = innerSieveNdx % aPrime;<newline46mondego>      if (remainder != 0) {<newline46mondego>        innerSieveNdx += aPrime - remainder;<newline46mondego>      }<newline46mondego><newline46mondego>      for (; innerSieveNdx <= end; innerSieveNdx += aPrime) {<newline46mondego>        segmentedSieve[innerSieveNdx - beg] = true;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    return segmentedSieve;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9234splitHere46","17737272splitHere46","public static HashMap<String, String> getEnvVariables(String scriptFile,<newline46mondego>            String config) {<newline46mondego>        HashMap<String, String> vars = new HashMap<String, String>();<newline46mondego>        BufferedReader br = null;<newline46mondego>        try {<newline46mondego>            FileInputStream fstream = new FileInputStream(scriptFile);<newline46mondego>            br = new BufferedReader(new InputStreamReader(fstream));<newline46mondego>            String strLine = null;<newline46mondego>            String stopvar = <doubleQuotes46>HDK7564<doubleQuotes46>;<newline46mondego>            String startvar = <doubleQuotes46>HDK1001<doubleQuotes46>;<newline46mondego>            String keyword = <doubleQuotes46>export<doubleQuotes46>;<newline46mondego>            do {<newline46mondego>                if (strLine != null && strLine.contains(startvar)) {<newline46mondego>                    if (strLine.contains(stopvar)) {<newline46mondego>                        return vars;<newline46mondego>                    }<newline46mondego>                    while (strLine != null && !strLine.contains(stopvar)) {<newline46mondego>                        strLine = br.readLine();<newline46mondego>                        if (strLine.startsWith(keyword)) {<newline46mondego>                            strLine = strLine.substring(keyword.length())<newline46mondego>                                    .trim();<newline46mondego>                            String[] split = strLine.split(<doubleQuotes46>=<doubleQuotes46>);<newline46mondego>                            String name = split[0];<newline46mondego>                            String value = split[1];<newline46mondego>                            System.out.println(name + <doubleQuotes46>=<doubleQuotes46> + value);<newline46mondego>                            vars.put(name, value);<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } while ((strLine = br.readLine()) != null);<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>        return vars;<newline46mondego>    }<newline46mondego>"
"9235splitHere46","17737374splitHere46","enum"
"9236splitHere46","17737374splitHere46","JComboBox"
"9237splitHere46","17737374splitHere46","//Definition of the enum<newline46mondego>enum ItemType {<newline46mondego>  First(<doubleQuotes46>First choice<doubleQuotes46>), Second(<doubleQuotes46>Second choice<doubleQuotes46>), Third(<doubleQuotes46>Final choice<doubleQuotes46>);<newline46mondego>  private final String display;<newline46mondego>  private ItemType(String s) {<newline46mondego>    display = s;<newline46mondego>  }<newline46mondego>  @Override<newline46mondego>  public String toString() {<newline46mondego>    return display;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>//Assigning values of enum to 'play' JComboBox<newline46mondego>play.setModel(new DefaultComboBoxModel(ItemType.values()));<newline46mondego><newline46mondego>//Reading the value of JComboBox<newline46mondego>ItemType selectedType = (ItemType)play.getSelectedItem();<newline46mondego>gGame.setPlayer(selectedType); //toString is overridden, so it will assign the appropriate text value of the enum<newline46mondego>"
"9238splitHere46","17737574splitHere46","Component#contains"
"9239splitHere46","17737574splitHere46","contains"
"9240splitHere46","17737574splitHere46","true"
"9241splitHere46","17737574splitHere46","Point"
"9242splitHere46","17737574splitHere46","0 x 0 x width x height"
"9243splitHere46","17737574splitHere46","Point p = SwingUtilities.convertPoint(frame, me.getPoint(), theView[i][j])<newline46mondego>if (theView[i][j].contains(p)) {...<newline46mondego>"
"9244splitHere46","17737574splitHere46","Rectangle"
"9245splitHere46","17737574splitHere46","if (theView[i][j].getBounds().contains(me.getPoint())) {...<newline46mondego>"
"9246splitHere46","17737627splitHere46","public static Response upload(File file){<newline46mondego>    System.out.println(<doubleQuotes46>Appliaction.upload<doubleQuotes46>);<newline46mondego>    response = ResumableUpload.post();<newline46mondego>    return response;<newline46mondego>"
"9247splitHere46","17737642splitHere46","repaint"
"9248splitHere46","17737642splitHere46","RepaintManager"
"9249splitHere46","17737642splitHere46","RepaintManager"
"9250splitHere46","17737642splitHere46","repaint"
"9251splitHere46","17737642splitHere46","RepaintManager"
"9252splitHere46","17737642splitHere46","paint"
"9253splitHere46","17737672splitHere46","superclass"
"9254splitHere46","17737672splitHere46","subclass"
"9255splitHere46","17737672splitHere46","List<Object> list = new ArrayList<Object>();<newline46mondego>         list.add(new Cat());<newline46mondego>         list.add(new Dog());<newline46mondego>         list.add(new Animal());<newline46mondego>         list.add(new Cat());<newline46mondego><newline46mondego>         for (int i = 0; i < list.size(); i++) {<newline46mondego><newline46mondego>             if(list.get(i) instanceof Cat){<newline46mondego>                 System.out.println(<doubleQuotes46>Cat at <doubleQuotes46>+i);<newline46mondego>             }else if(list.get(i) instanceof Dog){<newline46mondego>                 System.out.println(<doubleQuotes46>Dog at <doubleQuotes46>+i);<newline46mondego>             }else if(list.get(i) instanceof Animal){<newline46mondego>                 System.out.println(<doubleQuotes46>Animal at <doubleQuotes46>+i);<newline46mondego>             }<newline46mondego>        }<newline46mondego>"
"9256splitHere46","17737672splitHere46","(list.get(i) instanceof Animal)"
"9257splitHere46","17737672splitHere46","(list.get(i) instanceof Animal)"
"9258splitHere46","17737672splitHere46","(list.get(i) instanceof Cat)"
"9259splitHere46","17737686splitHere46","frame.setVisible(true);<newline46mondego>"
"9260splitHere46","17737745splitHere46","if (inventoryMap.containsKey(x)) {<newline46mondego>     inventoryMap.put(x,inventoryMap.get(x).add(s));<newline46mondego>} <newline46mondego>"
"9261splitHere46","17737745splitHere46","if (inventoryMap.containsKey(x)) {<newline46mondego>    inventoryMap.get(x).add(s);<newline46mondego>} <newline46mondego>"
"9262splitHere46","17737745splitHere46","inventoryMap.get(x).add(s)"
"9263splitHere46","17737968splitHere46","// do this once to setup<newline46mondego>CharsetEncoder enc = Charset.forName(<doubleQuotes46>ISO-8859-1<doubleQuotes46>).newEncoder();<newline46mondego><newline46mondego>// for each string<newline46mondego>int len = str.length();<newline46mondego>byte b[] = new byte[len + 1];<newline46mondego>ByteBuffer bbuf = ByteBuffer.wrap(b);<newline46mondego>enc.encode(CharBuffer.wrap(str), bbuf, true);<newline46mondego>// you might want to ensure that bbuf.position() == len<newline46mondego>b[len] = 0;<newline46mondego>"
"9264splitHere46","17737983splitHere46","import org.apache.commons.httpclient.Cookie;<newline46mondego>import org.apache.commons.httpclient.HttpState;<newline46mondego>import org.apache.commons.httpclient.HttpClient;<newline46mondego>import org.apache.commons.httpclient.methods.GetMethod;<newline46mondego><newline46mondego>public class GetCookiePrintAndSetValue {<newline46mondego><newline46mondego>  public static void main(String args[]) throws Exception {<newline46mondego><newline46mondego>    HttpClient client = new HttpClient();<newline46mondego>    client.getParams().setParameter(<doubleQuotes46>http.useragent<doubleQuotes46>, <doubleQuotes46>My Browser<doubleQuotes46>);<newline46mondego><newline46mondego>    GetMethod method = new GetMethod(<doubleQuotes46>http://localhost:8080/<doubleQuotes46>);<newline46mondego>    try{<newline46mondego>      client.executeMethod(method);<newline46mondego>      Cookie[] cookies = client.getState().getCookies();<newline46mondego>      for (int i = 0; i < cookies.length; i++) {<newline46mondego>        Cookie cookie = cookies[i];<newline46mondego>        System.err.println(<newline46mondego>          <doubleQuotes46>Cookie: <doubleQuotes46> + cookie.getName() +<newline46mondego>          <doubleQuotes46>, Value: <doubleQuotes46> + cookie.getValue() +<newline46mondego>          <doubleQuotes46>, IsPersistent?: <doubleQuotes46> + cookie.isPersistent() +<newline46mondego>          <doubleQuotes46>, Expiry Date: <doubleQuotes46> + cookie.getExpiryDate() +<newline46mondego>          <doubleQuotes46>, Comment: <doubleQuotes46> + cookie.getComment());<newline46mondego><newline46mondego>        cookie.setValue(<doubleQuotes46>My own value<doubleQuotes46>);<newline46mondego>      }<newline46mondego>      client.executeMethod(method);<newline46mondego>    } catch(Exception e) {<newline46mondego>      System.err.println(e);<newline46mondego>    } finally {<newline46mondego>      method.releaseConnection();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"9265splitHere46","17738055splitHere46","public class Instructor extends Person {<newline46mondego>    public String getIname() {<newline46mondego>        return iname;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setIname(String iname) {<newline46mondego>        this.iname = iname;<newline46mondego>    }<newline46mondego><newline46mondego>    private String iname;<newline46mondego><newline46mondego>    public Instructor(Person p, String myinstructor) {<newline46mondego>        super(p);<newline46mondego>        this.iname = myinstructor;<newline46mondego>    }<newline46mondego><newline46mondego>    public Instructor(Instructor clone) {<newline46mondego>        super(clone);<newline46mondego>        this.iname = clone.iname;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9266splitHere46","17738081splitHere46","JavaConversions"
"9267splitHere46","17738081splitHere46","seqAsJavaList"
"9268splitHere46","17738081splitHere46","java.util.List<String> convert(scala.collection.Seq<String> seq) {<newline46mondego>    return scala.collection.JavaConversions.seqAsJavaList(seq);<newline46mondego>}<newline46mondego>"
"9269splitHere46","17738252splitHere46","3244444444"
"9270splitHere46","17738252splitHere46","int"
"9271splitHere46","17738252splitHere46","l"
"9272splitHere46","17738252splitHere46","L"
"9273splitHere46","17738252splitHere46","long l2 = 3244444444l; // or 3244444444L<newline46mondego>"
"9274splitHere46","17738289splitHere46","House[] allHouses = new House[10];<newline46mondego>    for(int i=0;i<allHouses.length;i++) {<newline46mondego>        allHouses[i] = new House();<newline46mondego>        allHouses[i].setNumberOfRooms(someIntValue);<newline46mondego>    }<newline46mondego>"
"9275splitHere46","17738308splitHere46","//Initialize ConcurrentHashMap instance<newline46mondego>ConcurrentHashMap<String, Integer> m = new ConcurrentHashMap<String, Integer>();<newline46mondego><newline46mondego>//Print all values stored in ConcurrentHashMap instance<newline46mondego>for each (Entry<String, Integer> e : m.entrySet())<newline46mondego>{<newline46mondego>system.out.println(e.getKey()+<doubleQuotes46>=<doubleQuotes46>+e.getValue());<newline46mondego>}<newline46mondego>"
"9276splitHere46","17738312splitHere46","String regex = <doubleQuotes46>[01]*<doubleQuotes46>;  //all binary Strings including empty string, * == 0 or more<newline46mondego><newline46mondego>String regex = <doubleQuotes46>[01]+<doubleQuotes46>; //all binary Strings except empty String, + == 1 or more<newline46mondego><newline46mondego>String regex = <doubleQuotes46>^1(?:.*1)?$<doubleQuotes46>; // a string that begins and ends with 1.<newline46mondego>"
"9277splitHere46","17738312splitHere46","(?:exp)"
"9278splitHere46","17738312splitHere46","^"
"9279splitHere46","17738312splitHere46","$"
"9280splitHere46","17738312splitHere46","?"
"9281splitHere46","17738312splitHere46","(?:.*1)?"
"9282splitHere46","17738428splitHere46","@RequestMapping(value = <doubleQuotes46>/user-search<doubleQuotes46>, method = RequestMethod.GET)<newline46mondego>    public String initUserSearchForm(Model model) {<newline46mondego>        User user = new User();<newline46mondego>        model.addAttribute(<doubleQuotes46>User<doubleQuotes46>, user);<newline46mondego>        if(!model.containsAttribute(<doubleQuotes46>userObject<doubleQuotes46>))<newline46mondego>           model.addAttribute('userObject',createDefaultUserCredntials());<newline46mondego>        return <doubleQuotes46>user<doubleQuotes46>;<newline46mondego>    }<newline46mondego>"
"9283splitHere46","17738428splitHere46","model.addAttribute('userObject',createDefaultUserCredntials());"
"9284splitHere46","17738431splitHere46","public static void main(String args)<newline46mondego>"
"9285splitHere46","17738431splitHere46","public static void main(String[] args)<newline46mondego>"
"9286splitHere46","17738450splitHere46","table  = (LinkedList<Map.Entry<K, V>>[])new LinkedList[10];<newline46mondego>"
"9287splitHere46","17738460splitHere46","Array.newInstance"
"9288splitHere46","17738460splitHere46","Object"
"9289splitHere46","17738460splitHere46","Object"
"9290splitHere46","17738460splitHere46","<T> T[] newInstance(Class<T> componentType, int length)<newline46mondego>"
"9291splitHere46","17738460splitHere46","Object[]"
"9292splitHere46","17738460splitHere46","Object"
"9293splitHere46","17738460splitHere46","Arrays.copyOf"
"9294splitHere46","17738550splitHere46","paint"
"9295splitHere46","17738550splitHere46","repaint"
"9296splitHere46","17738550splitHere46","repaint"
"9297splitHere46","17738550splitHere46","paint"
"9298splitHere46","17738628splitHere46","HashMap<...>"
"9299splitHere46","17738628splitHere46","for (int....)"
"9300splitHere46","17738651splitHere46","public LargeMap(int value1, ThyPoint p1, ThyPoint p2, ThyPoint p3)  <newline46mondego>    {  <newline46mondego>       if ( value1 == 0 )  <newline46mondego>         System.out.println( p1.toString() + p2.toString() + p3.toString());  <newline46mondego>       else <newline46mondego>         System.out.println( p2.toString() + p3.toString() + p1.toString());  <newline46mondego>    } <newline46mondego>"
"9301splitHere46","17738651splitHere46","LargeMap.goodMethod(value1, p1, p2, p3); <newline46mondego>"
"9302splitHere46","17738651splitHere46","LargeMap myMap = new LargeMap(value1, p1, p2, p3); <newline46mondego>"
"9303splitHere46","17738672splitHere46","sc.next()"
"9304splitHere46","17738672splitHere46","public static String getValidContinueCode(Scanner sc, String prompt) {<newline46mondego>    String choice = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    boolean isValid = false;<newline46mondego><newline46mondego>    while (!isValid) {<newline46mondego>        System.out.print(prompt);<newline46mondego><newline46mondego>        choice = sc.next();<newline46mondego>        if (choice.equalsIgnoreCase(<doubleQuotes46>y<doubleQuotes46>)) {<newline46mondego>            isValid = true;<newline46mondego>        }<newline46mondego>        else if (choice.equalsIgnoreCase(<doubleQuotes46>n<doubleQuotes46>)) {<newline46mondego>            isValid = true;<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            System.out.println(<doubleQuotes46>Please enter y or n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return choice;<newline46mondego><newline46mondego>}<newline46mondego>"
"9305splitHere46","17738672splitHere46","public static boolean getValidContinueCode(Scanner sc, String prompt) {<newline46mondego>    while (true) {<newline46mondego>        System.out.print(prompt);<newline46mondego><newline46mondego>        if (sc.next().equalsIgnoreCase(<doubleQuotes46>y<doubleQuotes46>)) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        else if (sc.next().equalsIgnoreCase(<doubleQuotes46>n<doubleQuotes46>)) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            System.out.println(<doubleQuotes46>Please enter y or n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9306splitHere46","17738684splitHere46","public GradeApplication(String nme, int ID, String hw, String lbs, String tsts, double proj, double disc)<newline46mondego>    {<newline46mondego>        name=nme;<newline46mondego>        id=ID;<newline46mondego><newline46mondego>        homework=hw; <newline46mondego>        labs=lbs;    <newline46mondego>        tests=tsts;<newline46mondego><newline46mondego>        project=proj;<newline46mondego>        discussion=disc;<newline46mondego>    }<newline46mondego>"
"9307splitHere46","17738882splitHere46","if"
"9308splitHere46","17738882splitHere46","%"
"9309splitHere46","17738882splitHere46","if"
"9310splitHere46","17738882splitHere46","if (4000 % 3 == 0) {<newline46mondego>"
"9311splitHere46","17738882splitHere46","%"
"9312splitHere46","17738948splitHere46","00"
"9313splitHere46","17738948splitHere46","^[01]*00$<newline46mondego>"
"9314splitHere46","17738948splitHere46","1"
"9315splitHere46","17738948splitHere46","^(?=.*(?:0*1){3})[01]*$<newline46mondego>"
"9316splitHere46","17738948splitHere46","^(?=.*(?:0*1){3})[01]*00$<newline46mondego>"
"9317splitHere46","17738948splitHere46","^        # Start of string<newline46mondego>(?=      # Assert that the following could be matched here:<newline46mondego> .*      # Any number of characters<newline46mondego> (?:0*1) # followed by any number of 0s and exactly one 1<newline46mondego> {3}     # three times<newline46mondego>)        # End of lookahead<newline46mondego>[01]*    # Match any number of ones or zeroes<newline46mondego>00       # Match two zeroes<newline46mondego>$        # at the end of the string<newline46mondego>"
"9318splitHere46","17738948splitHere46","^(?:0*1){3}[01]*00$<newline46mondego>"
"9319splitHere46","17739016splitHere46","BaseActivity.imageLoader.init(ImageLoaderConfiguration.createDefault(getBaseCont‌​ext()));<newline46mondego>"
"9320splitHere46","17739137splitHere46","public void getAllClassAndFields() {<newline46mondego>    ObjectFactory objectFactory = new ObjectFactory();<newline46mondego>    Method[] methods = objectFactory.getClass().getDeclaredMethods();<newline46mondego>    for (Method method : methods) {<newline46mondego>        try {<newline46mondego>            // Check if method have XmlElementDecl annotation<newline46mondego>            XmlElementDecl annotation = method.getAnnotation(XmlElementDecl.java);<newline46mondego>            if (annotation == null) {<newline46mondego>                // Invoke method only if it is not annoatated with XmlElementDecl <newline46mondego>                Object object = method.invoke(objectFactory, new Object[] {});<newline46mondego>                System.out.println(<doubleQuotes46>Class Name = <doubleQuotes46> + object.getClass().getName());<newline46mondego>                printFileds(object);<newline46mondego>            }<newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>          // I used Exception to keep it simple, instead use appropriate exception types here <newline46mondego>        } <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static void printFileds(Object obj) {<newline46mondego>    Field[] fields = obj.getClass().getFields();<newline46mondego>    for (Field field : fields) {<newline46mondego>        System.out.println(<doubleQuotes46>Field Name = <doubleQuotes46> + field.getName());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9321splitHere46","17739170splitHere46","public class Test {<newline46mondego><newline46mondego>public static void main(String args[])<newline46mondego>{<newline46mondego>    LinkedList<String> dataList = new LinkedList<String>();<newline46mondego>    for(int i=0;i < 5;i++)<newline46mondego>    {<newline46mondego>        dataList.add(<doubleQuotes46>test<doubleQuotes46>+i);<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(dataList.indexOf(<doubleQuotes46>test3<doubleQuotes46>));<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"9322splitHere46","17739248splitHere46","try{<newline46mondego>        statement = con.prepareStatement(<newline46mondego>                <doubleQuotes46>SELECT * FROM users WHERE Username = ? AND Password =?<doubleQuotes46>);<newline46mondego>        statement.setString(0,LOGIN_UsernameField.getText());<newline46mondego>        statement.setString(0,LOGIN_PasswordField.getPassword());<newline46mondego>        ResultSet rs = statement.execute();<newline46mondego>        while(rs.next()){<newline46mondego>           System.out.println(<doubleQuotes46>UserName:<doubleQuotes46>+rs.getString(<doubleQuotes46>Username<doubleQuotes46>)+<doubleQuotes46>\nPassword:<doubleQuotes46>+rs.getString(<doubleQuotes46>Password<doubleQuotes46>));<newline46mondego>       } <newline46mondego>}catch(){<newline46mondego> //handle exceptions<newline46mondego>}finally{<newline46mondego> //close statements, statement and resultset here..<newline46mondego>}<newline46mondego>"
"9323splitHere46","17739394splitHere46","double dPivot = daFinishTime[(daFinishTime[0] + daFinishTime.length - 1) / 2];<newline46mondego>"
"9324splitHere46","17739394splitHere46","double dPivot = daFinishTime[(i+j)/2];<newline46mondego>"
"9325splitHere46","17739394splitHere46","static void doQuickSort(double[] daFinishTime, int i, int j) {<newline46mondego>        double dTemp;<newline46mondego>        String sTemp;<newline46mondego><newline46mondego>        int start = i;<newline46mondego>        int end = j;<newline46mondego>        // Pivot<newline46mondego>        double dPivot = daFinishTime[(i + j) / 2];<newline46mondego><newline46mondego>        // Partition<newline46mondego>        while (start <= end) {<newline46mondego>            while (daFinishTime[start] < dPivot) {<newline46mondego>                start++;<newline46mondego>            }<newline46mondego>            while (daFinishTime[end] > dPivot) {<newline46mondego>                end--;<newline46mondego>            }<newline46mondego>            if (start <= end) {<newline46mondego>                dTemp = daFinishTime[start];<newline46mondego>                daFinishTime[start] = daFinishTime[end];<newline46mondego>                daFinishTime[end] = dTemp;<newline46mondego><newline46mondego>                sTemp = saRunnerName[start];<newline46mondego>                saRunnerName[start] = saRunnerName[end];<newline46mondego>                saRunnerName[end] = sTemp;<newline46mondego><newline46mondego>                start++;<newline46mondego>                end--;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Recursion<newline46mondego>        if (start < j) {<newline46mondego>            doQuickSort(daFinishTime, start, j);<newline46mondego>        }<newline46mondego>        if (i < end) {<newline46mondego>            doQuickSort(daFinishTime, i, end);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"9326splitHere46","17739411splitHere46","?chunk"
"9327splitHere46","17739411splitHere46","<#list section.field?chunk(2) as row><newline46mondego>  <#list row as field><newline46mondego>    <div class=<doubleQuotes46>col${field_index + 1}<doubleQuotes46>><newline46mondego>      ${field.@label}: <input type=<doubleQuotes46>text<doubleQuotes46>/><newline46mondego>    </div><newline46mondego>  </#list><newline46mondego></#list><newline46mondego>"
"9328splitHere46","17739411splitHere46","<#assign fields = section.field><newline46mondego><#assign idx = 0><newline46mondego><#list 0..999999 as _><newline46mondego>   <#if idx == fields?size><#break></#if><newline46mondego>   ... even column ...<newline46mondego>   <#assign idx = idx + 1><newline46mondego><newline46mondego>   <#if idx == fields?size><#break></#if><newline46mondego>   ... odd column ...<newline46mondego>   <#assign idx = idx + 1><newline46mondego></#list><newline46mondego>...<newline46mondego>"
"9329splitHere46","17739460splitHere46","InputStream stream = new MyInputStream(...);<newline46mondego>try {<newline46mondego>    // ... use stream<newline46mondego>} catch(IOException e) {<newline46mondego>   // handle exception<newline46mondego>} finally {<newline46mondego>    try {<newline46mondego>        if(stream != null) {<newline46mondego>            stream.close();<newline46mondego>        }<newline46mondego>    } catch(IOException e) {<newline46mondego>        // handle yet another possible exception<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9330splitHere46","17739460splitHere46","try (InputStream stream = new MyInputStream(...)){<newline46mondego>    // ... use stream<newline46mondego>} catch(IOException e) {<newline46mondego>   // handle exception<newline46mondego>}<newline46mondego>"
"9331splitHere46","17739555splitHere46","// use async task like this .this will solve ur problem<newline46mondego><newline46mondego><newline46mondego>Class A{<newline46mondego> public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.activity_main);<newline46mondego><newline46mondego>        button1 = (Button) findViewById(R.id.button1);<newline46mondego><newline46mondego>        button1.setOnClickListener(new View.OnClickListener() {<newline46mondego>            public void onClick(View v) {<newline46mondego><newline46mondego>                MainActivity.this.runOnUiThread(new Runnable() {<newline46mondego><newline46mondego>                    public void run() {<newline46mondego>                      new RequestLogInFromServer().execute();<newline46mondego><newline46mondego>                    }<newline46mondego>                });<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>      public class RequestLogInFromServer extends AsyncTask<Object, Object, Object><newline46mondego>        {<newline46mondego><newline46mondego><newline46mondego>            @Override<newline46mondego>            protected Object doInBackground(Object... params)<newline46mondego>            {<newline46mondego><newline46mondego>                String responsearray[] = new String[2];<newline46mondego>            //JSONObject jsonResponse = null;<newline46mondego><newline46mondego><newline46mondego>            // Create a new HttpClient and Post Header<newline46mondego>            HttpClient httpClient = new DefaultHttpClient();<newline46mondego>            HttpPost httpPost = new HttpPost(<doubleQuotes46>http://shopstable.turkcell.com.tr/timme/getPerosConfig.do<doubleQuotes46>);<newline46mondego>            httpPost.setHeader(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/x-www-form-urlencoded<doubleQuotes46>);<newline46mondego><newline46mondego>            try {<newline46mondego>                // Add your data<newline46mondego><newline46mondego>          in case if u want to pass any data to server else leave it<newline46mondego><newline46mondego>                List<NameValuePair> signinDetails = new ArrayList<NameValuePair>();<newline46mondego>                signinDetails.add(new BasicNameValuePair(<doubleQuotes46>name<doubleQuotes46>,uname));<newline46mondego>                signinDetails.add(new BasicNameValuePair(<doubleQuotes46>pass<doubleQuotes46>,pwd));<newline46mondego><newline46mondego>                httpPost.setEntity(new UrlEncodedFormEntity(signinDetails));<newline46mondego><newline46mondego>                // Execute HTTP Post Request<newline46mondego>                HttpResponse httpResponse = httpClient.execute(httpPost);<newline46mondego>                Log.v(<doubleQuotes46>Post Status<doubleQuotes46>, <doubleQuotes46>Code: <doubleQuotes46><newline46mondego>                        + httpResponse.getStatusLine().getStatusCode());<newline46mondego>                responseCode = httpResponse.getStatusLine().getStatusCode();<newline46mondego>                Log.e(<doubleQuotes46>responseBody<doubleQuotes46>, String.valueOf(responseCode));<newline46mondego>                responsearray[0]=String.valueOf(responseCode);<newline46mondego>                switch(responseCode){<newline46mondego>                case 200:<newline46mondego><newline46mondego>                Log.e(<doubleQuotes46>responseCode<doubleQuotes46>, String.valueOf(responseCode));<newline46mondego>                HttpEntity entity = httpResponse.getEntity();<newline46mondego>                Log.e(<doubleQuotes46>entity<doubleQuotes46>, String.valueOf(entity));<newline46mondego>                if (entity != null) {<newline46mondego><newline46mondego>                    responsearray[1] = EntityUtils.toString(entity);<newline46mondego>                    Log.e(<doubleQuotes46>responsearray<doubleQuotes46>, String.valueOf(responsearray));<newline46mondego><newline46mondego><newline46mondego>                /*  Log.e(<doubleQuotes46>responseBody<doubleQuotes46>, String.valueOf(responseBody));<newline46mondego>                    JSONTokener jsonTokener = new JSONTokener(responseBody);<newline46mondego>                    jsonResponse = new JSONObject(jsonTokener);<newline46mondego>                    Log.e(<doubleQuotes46>finalResult<doubleQuotes46>, String.valueOf(jsonResponse));<newline46mondego><newline46mondego>                    JSONObject response = jsonResponse.getJSONObject(<doubleQuotes46>response<doubleQuotes46>);<newline46mondego><newline46mondego>                    // Getting String inside response object<newline46mondego>                    String status = response.getString(<doubleQuotes46>status<doubleQuotes46>);<newline46mondego>                    String message = response.getString(<doubleQuotes46>message<doubleQuotes46>);<newline46mondego>                    Log.e(<doubleQuotes46>status<doubleQuotes46>, String.valueOf(status));<newline46mondego>                    Log.e(<doubleQuotes46>message<doubleQuotes46>, String.valueOf(message));<newline46mondego>                    */<newline46mondego><newline46mondego>                  } // if (entity != null)  end<newline46mondego>                break;                  <newline46mondego>                case 503:               <newline46mondego>                    responsearray[1]=<doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>                break;<newline46mondego><newline46mondego>                default:<newline46mondego>                    responsearray[1]=<doubleQuotes46><doubleQuotes46>;            <newline46mondego>                    break;<newline46mondego><newline46mondego><newline46mondego>                }//switch end<newline46mondego><newline46mondego>            } catch (ClientProtocolException cpeExp) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>            } catch (Exception allExp) {<newline46mondego>                // TODO Auto-generated catch block<newline46mondego>            }<newline46mondego><newline46mondego>            return responsearray;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego><newline46mondego>            @Override<newline46mondego>            protected void onPostExecute(Object result) <newline46mondego>            {<newline46mondego><newline46mondego><newline46mondego>                super.onPostExecute(result);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            protected void onPreExecute() {<newline46mondego><newline46mondego>                progressDialog = ProgressDialog.show(SignInActivity.this, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>Please wait<doubleQuotes46>);<newline46mondego>                super.onPreExecute();<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>} //close class A<newline46mondego>"
"9332splitHere46","17739630splitHere46","osdetail"
"9333splitHere46","17739630splitHere46","getOsdetail()"
"9334splitHere46","17739630splitHere46","getOSDetail()"
"9335splitHere46","17739630splitHere46","osdetail"
"9336splitHere46","17739630splitHere46","setOsdetail()"
"9337splitHere46","17739975splitHere46","$"
"9338splitHere46","17739975splitHere46","<s:hidden name=<doubleQuotes46>username_type<doubleQuotes46><newline46mondego>          value=<doubleQuotes46>%{@com.packagename.models.UsernameModel$UsernameTypes@ALIAS}<doubleQuotes46> /><newline46mondego>"
"9339splitHere46","17740133splitHere46","<doubleQuotes46>yyyyMMdd'T'HHmmss'Z'<doubleQuotes46>"
"9340splitHere46","17740133splitHere46","Z"
"9341splitHere46","17740133splitHere46","<doubleQuotes46>20130718T090000Z<doubleQuotes46>"
"9342splitHere46","17740270splitHere46","javac"
"9343splitHere46","17740270splitHere46","sort(java.util.ArrayList<MyItem<V>>"
"9344splitHere46","17740270splitHere46","java.util.Collections.<T>sort(java.util.List<T>,java.util.Comparator<?<newline46mondego>  super T>)"
"9345splitHere46","17740270splitHere46","java.util.Collections.<T>sort(java.util.List<T>)"
"9346splitHere46","17740270splitHere46","MyItem<V>"
"9347splitHere46","17740270splitHere46","java.lang.Comparable<? super MyItem<V>>"
"9348splitHere46","17740270splitHere46","Collections.<T>sort(java.util.List<T>)"
"9349splitHere46","17740270splitHere46","Collections.<T>sort(java.util.List<T>)"
"9350splitHere46","17740270splitHere46","T"
"9351splitHere46","17740270splitHere46","<T extends Comparable<? super T>>"
"9352splitHere46","17740270splitHere46","T"
"9353splitHere46","17740270splitHere46","Comparable"
"9354splitHere46","17740270splitHere46","String"
"9355splitHere46","17740270splitHere46","...implements ...  Comparable<String>"
"9356splitHere46","17740270splitHere46","Item"
"9357splitHere46","17740270splitHere46","Item<T> implements Comparable<T>"
"9358splitHere46","17740270splitHere46","Item<T> implements Comparable<Item<T>>"
"9359splitHere46","17740270splitHere46","Item"
"9360splitHere46","17740270splitHere46","public abstract class Item<T> implements Comparable<Item<T>><newline46mondego>{<newline46mondego>    protected T item;<newline46mondego><newline46mondego>    public int compareTo(Item<T> o)<newline46mondego>    {<newline46mondego>        return 0; // this doesn't matter for the time being<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9361splitHere46","17740589splitHere46","ShoppingBasket"
"9362splitHere46","17740589splitHere46","@Entity<newline46mondego>public class ShoppingBasket implements Serializable{<newline46mondego><newline46mondego>   public List <BasketLineItem> items;<newline46mondego>   private Long Id;<newline46mondego>   @Temporal(TemporalType.TIMESTAMP)<newline46mondego>   private Date beginTime;<newline46mondego>   @Temporal(TemporalType.TIMESTAMP)<newline46mondego>   private Date endTime;<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"9363splitHere46","17740589splitHere46","@Entity<newline46mondego>public class BasketLineItem {<newline46mondego>     private Long Id;<newline46mondego>     private Item item;<newline46mondego>     private Date addedDate;<newline46mondego>     ......<newline46mondego>}<newline46mondego>"
"9364splitHere46","17740667splitHere46","Set<String>"
"9365splitHere46","17740667splitHere46","List"
"9366splitHere46","17740667splitHere46","LinkedHashSet"
"9367splitHere46","17740667splitHere46","// set2 contains lines in second file, set1 in first file<newline46mondego>set2.removeAll(set1);<newline46mondego>"
"9368splitHere46","17740667splitHere46","set2"
"9369splitHere46","17740667splitHere46","Sets.difference()"
"9370splitHere46","17740667splitHere46","Files.readLines()"
"9371splitHere46","17740667splitHere46","Files"
"9372splitHere46","17740667splitHere46","Files.readAllLines()"
"9373splitHere46","17740667splitHere46","File"
"9374splitHere46","17740667splitHere46","final Path path1 = Paths.get(<doubleQuotes46>/path/to/file1<doubleQuotes46>);<newline46mondego>final Path path2 = Paths.get(<doubleQuotes46>/path/to/file2<doubleQuotes46>);<newline46mondego>final Path outfile = Paths.get(<doubleQuotes46>/path/to/outfile<doubleQuotes46>);<newline46mondego><newline46mondego>final List<String> list1 = Files.readAllLines(path1, StandardCharsets.UTF_8);<newline46mondego>final List<String> list2 = Files.readAllLines(path2, StandardCharsets.UTF_8);<newline46mondego><newline46mondego>list2.removeAll(list1);<newline46mondego><newline46mondego>Files.write(outfile, list2, StandardCharsets.UTF_8);<newline46mondego>"
"9375splitHere46","17740682splitHere46","<param name=<doubleQuotes46>Threshold<doubleQuotes46> value=<doubleQuotes46>INFO<doubleQuotes46>/> <newline46mondego>"
"9376splitHere46","17740892splitHere46","for(Player p : waiting) {<newline46mondego>    if(!boat.playerInArea(p)) {<newline46mondego>        waiting.remove(p); // BOOM<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9377splitHere46","17740892splitHere46","Iterator"
"9378splitHere46","17740892splitHere46","for(Iterator<Player> i = waiting.iterator(); i.hasNext();) {<newline46mondego>    Player p = i.next(); <newline46mondego>    if(!boat.playerInArea(p)) {<newline46mondego>        i.remove(); // Allowed with an iterator<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9379splitHere46","17740899splitHere46","<uses-sdk<newline46mondego>    android:minSdkVersion=<doubleQuotes46>8<doubleQuotes46><newline46mondego>"
"9380splitHere46","17740899splitHere46","SupportFragment"
"9381splitHere46","17740899splitHere46","<fragment<newline46mondego>class=<doubleQuotes46>com.google.android.gms.maps.SupportMapFragment<doubleQuotes46><newline46mondego>android:id=<doubleQuotes46>@+id/map<doubleQuotes46>  <newline46mondego>android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46>/><newline46mondego>"
"9382splitHere46","17740899splitHere46","FragmentActivity"
"9383splitHere46","17740899splitHere46","<permission<newline46mondego>    android:name=<doubleQuotes46>com.Test.projecttest.permission.MAPS_RECEIVE<doubleQuotes46><newline46mondego>    android:protectionLevel=<doubleQuotes46>signature<doubleQuotes46>/><newline46mondego>    <uses-permission android:name=<doubleQuotes46>com.Test.projecttest.permission.MAPS_RECEIVE<doubleQuotes46>/><newline46mondego>"
"9384splitHere46","17740899splitHere46","SupportMapFragment fm = (SupportMapFragment)  getSupportFragmentManager().findFragmentById(R.id.map);<newline46mondego> GoogleMap mMap = fm.getMap(); <newline46mondego>"
"9385splitHere46","17740899splitHere46","import android.support.v4.app.FragmentActivity;  <newline46mondego>import com.google.android.gms.maps.SupportMapFragment; <newline46mondego>"
"9386splitHere46","17741116splitHere46","public class ClassName {<newline46mondego><newline46mondego>public static int bitmapSizeWidth;<newline46mondego>public static int bitmapSizeHeight;<newline46mondego>public static final int bitmapPadding = 8;<newline46mondego>public static final int howManyImagesColumn = 3;<newline46mondego>public static final int howManyImagesRows = 2;<newline46mondego><newline46mondego>public static Bitmap folderBitmap(ArrayList<Bitmap> bitmapArray, int imageViewWidth, int imageViewHeight) {<newline46mondego>    bitmapSizeWidth = imageViewWidth;<newline46mondego>    bitmapSizeHeight = imageViewHeight;<newline46mondego><newline46mondego>    Bitmap b = Bitmap.createBitmap(bitmapSizeWidth, bitmapSizeHeight, Bitmap.Config.RGB_565);<newline46mondego>    Canvas c = new Canvas(b);<newline46mondego><newline46mondego>    //Lets do it in a set coordinate system now<newline46mondego>    if (bitmapArray.size() >= 1)<newline46mondego>        c.drawBitmap(bitmapArray.get(0), bitmapPadding, bitmapPadding, paint);<newline46mondego><newline46mondego>    if (bitmapArray.size() >= 2)<newline46mondego>        c.drawBitmap(bitmapArray.get(1), calculateSecondCoord().xPos, bitmapPadding, paint);<newline46mondego><newline46mondego>    if (bitmapArray.size() >= 3)<newline46mondego>        c.drawBitmap(bitmapArray.get(2), calculateThirdCoord().xPos, bitmapPadding, paint);<newline46mondego><newline46mondego>    if (bitmapArray.size() >= 4)<newline46mondego>        c.drawBitmap(bitmapArray.get(3), bitmapPadding, calculateSecondCoord().yPos, paint);<newline46mondego><newline46mondego>    if (bitmapArray.size() >= 5) {<newline46mondego>        c.drawBitmap(bitmapArray.get(4), calculateSecondCoord().xPos, calculateSecondCoord().yPos, paint);<newline46mondego>    }<newline46mondego><newline46mondego>    if (bitmapArray.size() >= 6) {<newline46mondego>        c.drawBitmap(bitmapArray.get(5), calculateThirdCoord().xPos, calculateSecondCoord().yPos, paint);<newline46mondego>    }<newline46mondego><newline46mondego>    return b;<newline46mondego>}<newline46mondego><newline46mondego>public static BitmapSize calculateSingleBitmapSize(int imageViewWidth, int imageViewHeight) {<newline46mondego>    bitmapSizeWidth = imageViewWidth;<newline46mondego>    bitmapSizeHeight = imageViewHeight;<newline46mondego>    BitmapSize bsize = new BitmapSize();<newline46mondego>    bsize.widthSize = (int) (bitmapSizeWidth -<newline46mondego>            (bitmapPadding * (howManyImagesColumn + 1))) / howManyImagesColumn;<newline46mondego>    bsize.heightSize = (int) (imageViewHeight - (bitmapPadding * (howManyImagesRows + 1))) / howManyImagesRows;<newline46mondego>    return bsize;<newline46mondego>}<newline46mondego><newline46mondego>/*<newline46mondego> * First coord = padding<newline46mondego> * Second coord (bitmapPadding) + calculateSingleBitmapSize(bitmapSizeWidth);<newline46mondego> * Third coord (bitmapPadding * 3) + (calculateSingleBitmapSize(bitmapSizeWidth) * 2)<newline46mondego> * The math is supposed to be correct but can perhaps be done in a more efficient way<newline46mondego> */<newline46mondego>private static BitmapCoord calculateSecondCoord() {<newline46mondego>    BitmapCoord bCoord = new BitmapCoord();<newline46mondego>    bCoord.xPos = (int) (bitmapPadding * (howManyImagesColumn - 1)) + calculateSingleBitmapSize(bitmapSizeWidth, bitmapSizeHeight).widthSize;<newline46mondego>    bCoord.yPos = (int) (bitmapPadding * (howManyImagesRows)) + calculateSingleBitmapSize(bitmapSizeWidth, bitmapSizeHeight).heightSize;<newline46mondego><newline46mondego>    return bCoord;<newline46mondego>}<newline46mondego><newline46mondego>private static BitmapCoord calculateThirdCoord() {<newline46mondego>    BitmapCoord bCoord = new BitmapCoord();<newline46mondego>    bCoord.xPos = (int) (bitmapPadding * howManyImagesColumn) + calculateSingleBitmapSize(bitmapSizeWidth, bitmapSizeHeight).widthSize * 2;<newline46mondego>    bCoord.yPos = (int) (bitmapPadding * howManyImagesRows - 1) + calculateSingleBitmapSize(bitmapSizeWidth, bitmapSizeHeight).heightSize * 2;<newline46mondego><newline46mondego>    return bCoord;<newline46mondego>}<newline46mondego><newline46mondego>public static class BitmapSize {<newline46mondego>    public int widthSize;<newline46mondego>    public int heightSize;<newline46mondego>}<newline46mondego><newline46mondego>static class BitmapCoord {<newline46mondego>    int xPos;<newline46mondego>    int yPos;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"9387splitHere46","17741147splitHere46","String WebViewUrl = appView.getUrl()<newline46mondego>"
"9388splitHere46","17741227splitHere46","FlowLayout"
"9389splitHere46","17741227splitHere46","BorderLayout"
"9390splitHere46","17741227splitHere46","JPanel"
"9391splitHere46","17741227splitHere46","JPanel"
"9392splitHere46","17741227splitHere46","JTabbedPane"
"9393splitHere46","17741227splitHere46","JPanel"
"9394splitHere46","17741227splitHere46","JTabbedPane"
"9395splitHere46","17741227splitHere46","JPanel"
"9396splitHere46","17741227splitHere46","GridBagLayout"
"9397splitHere46","17741227splitHere46","JPanel"
"9398splitHere46","17741227splitHere46","JPanel"
"9399splitHere46","17741227splitHere46","JPanel"
"9400splitHere46","17741227splitHere46","BoxLayout"
"9401splitHere46","17741227splitHere46","JPanel"
"9402splitHere46","17741227splitHere46","JPanel"
"9403splitHere46","17741227splitHere46","GridBagLayout"
"9404splitHere46","17741227splitHere46","JPanel"
"9405splitHere46","17741227splitHere46","JPanel"
"9406splitHere46","17741227splitHere46","JPanel"
"9407splitHere46","17741227splitHere46","BoxLayout"
"9408splitHere46","17741227splitHere46","JLabel"
"9409splitHere46","17741227splitHere46","JList"
"9410splitHere46","17741227splitHere46","JPanel"
"9411splitHere46","17741227splitHere46","GridBagLayout"
"9412splitHere46","17741227splitHere46","GridBagLayout"
"9413splitHere46","17741227splitHere46","JPanel"
"9414splitHere46","17741227splitHere46","FlowLayout"
"9415splitHere46","17741227splitHere46","JLabel"
"9416splitHere46","17741227splitHere46","JTextField"
"9417splitHere46","17741227splitHere46","JPanel"
"9418splitHere46","17741227splitHere46","JPanel"
"9419splitHere46","17741227splitHere46","BoxLayout"
"9420splitHere46","17741227splitHere46","JPanel"
"9421splitHere46","17741227splitHere46","JFrame"
"9422splitHere46","17741284splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>  JFileChooser c = new JFileChooser();<newline46mondego>  File dir = new File(<doubleQuotes46>directoryOfFile<doubleQuotes46>);<newline46mondego>  final String uuid = <doubleQuotes46>507f23e3-7634-42b6-8bef-df3eb87a595b<doubleQuotes46>;<newline46mondego>  dir.listFiles(new FilenameFilter() {<newline46mondego>     @Override<newline46mondego>     public boolean accept(File dir, String name)<newline46mondego>     {<newline46mondego>        // checks for a filename consisting of uuid with a custom extension<newline46mondego>        return name.startsWith(uuid + <doubleQuotes46>.<doubleQuotes46>);<newline46mondego>     }<newline46mondego>  });<newline46mondego>}<newline46mondego>"
"9423splitHere46","17741284splitHere46","507f23e3-7634-42b6-8bef-df3eb87a595b.abc.def<newline46mondego>"
"9424splitHere46","17741284splitHere46","startsWith"
"9425splitHere46","17741284splitHere46","return name.startsWith(uuid + <doubleQuotes46>.<doubleQuotes46>) && name.lastIndexOf(<doubleQuotes46>.<doubleQuotes46>) == uuid.length();<newline46mondego>"
"9426splitHere46","17741284splitHere46","uuid"
"9427splitHere46","17741344splitHere46","getMsgKey()"
"9428splitHere46","17741344splitHere46","return getClass().getSimpleName() + <doubleQuotes46>_<doubleQuotes46> + name();<newline46mondego>"
"9429splitHere46","17741344splitHere46","EnumTranslator"
"9430splitHere46","17741425splitHere46","2013-07-12T18:31:01.000Z"
"9431splitHere46","17741425splitHere46","String startDate = <doubleQuotes46>2013-07-12T18:31:01.000Z<doubleQuotes46>;<newline46mondego>  DateTime dt = ISODateTimeFormat.dateTime().parseDateTime(startDate);  <newline46mondego>"
"9432splitHere46","17741425splitHere46","UTC"
"9433splitHere46","17741425splitHere46","String startDate = <doubleQuotes46>2013-07-12T18:31:01.000Z<doubleQuotes46>;<newline46mondego>  DateTime dt = ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC).parseDateTime(startDate);<newline46mondego>"
"9434splitHere46","17741534splitHere46","this.loginView.addLoginListener(new LoginHandler());<newline46mondego>"
"9435splitHere46","17741534splitHere46","this.loginView"
"9436splitHere46","17741534splitHere46","loginView"
"9437splitHere46","17741534splitHere46","this.loginView = loginView;<newline46mondego>"
"9438splitHere46","17741534splitHere46","LoginView"
"9439splitHere46","17741534splitHere46","se.bbs.nackademin.main.Demo.main(Demo.java:23)"
"9440splitHere46","17741534splitHere46","Demo"
"9441splitHere46","17741534splitHere46","LoginController"
"9442splitHere46","17741534splitHere46","Demo.java"
"9443splitHere46","17741540splitHere46","xmlns:f=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46><newline46mondego>"
"9444splitHere46","17741540splitHere46","xmlns://xmlns.jcp.org/jsf/core<newline46mondego>"
"9445splitHere46","17741565splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.EventQueue;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.ScrollPaneConstants;<newline46mondego><newline46mondego>public class ChatPanel {<newline46mondego><newline46mondego>    private JFrame jf = new JFrame(<doubleQuotes46>Testing msgpanel<doubleQuotes46>);<newline46mondego>    private JScrollPane scroll = new JScrollPane();<newline46mondego>    private JPanel jp;<newline46mondego>    private ChatPaneMsgBox mb;<newline46mondego>    private ChatPaneMsgBox mb2;<newline46mondego>    private JPanel cp = new JPanel();<newline46mondego>    private JButton jb = new JButton(<doubleQuotes46>  ME !!! <doubleQuotes46>);<newline46mondego>    private JButton jb1 = new JButton(<doubleQuotes46>  YOU !!! <doubleQuotes46>);<newline46mondego><newline46mondego>    public ChatPanel() {<newline46mondego>        jp = new JPanel();<newline46mondego>        jp.setLayout(new BoxLayout(jp, BoxLayout.Y_AXIS));<newline46mondego>        mb = new ChatPaneMsgBox(<doubleQuotes46><html><body style='width: 200px; padding: 5px;'><doubleQuotes46><newline46mondego>                + <doubleQuotes46><h1>Do U C Me?</h1><doubleQuotes46><newline46mondego>                + <doubleQuotes46>Here is a long string that will wrap.  <doubleQuotes46><newline46mondego>                + <doubleQuotes46>The effect we want is a multi-line label.<doubleQuotes46>, true);<newline46mondego>        addmsg(mb);<newline46mondego>        mb2 = new ChatPaneMsgBox(<doubleQuotes46>Hello 2<doubleQuotes46>, false);<newline46mondego>        addmsg(mb2);<newline46mondego>        scroll.setViewportView(jp);<newline46mondego>        scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);<newline46mondego>        scroll.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);<newline46mondego>        jb.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                mb = new ChatPaneMsgBox(<doubleQuotes46><html><body style='width: 200px; padding: 5px;'><doubleQuotes46><newline46mondego>                        + <doubleQuotes46><h1>Do U C Me?</h1><doubleQuotes46><newline46mondego>                        + <doubleQuotes46>Here is a long string that will wrap.  <doubleQuotes46><newline46mondego>                        + <doubleQuotes46>The effect we want is a multi-line label.<doubleQuotes46>, true);<newline46mondego>                addmsg(mb);<newline46mondego>                Rectangle rect = jp.getBounds();<newline46mondego>                Rectangle r2 = scroll.getViewport().getVisibleRect();<newline46mondego>                jp.scrollRectToVisible(new Rectangle((int) rect.getWidth(), <newline46mondego>                        (int) rect.getHeight(), (int) r2.getWidth(), (int) r2.getHeight()));<newline46mondego>            }<newline46mondego>        });<newline46mondego>        jb1.addActionListener(new ActionListener() {<newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                mb2 = new ChatPaneMsgBox(<doubleQuotes46>Hello 2<doubleQuotes46>, false);<newline46mondego>                addmsg(mb2);<newline46mondego>                Rectangle rect = jp.getBounds();<newline46mondego>                Rectangle r2 = scroll.getViewport().getVisibleRect();<newline46mondego>                jp.scrollRectToVisible(new Rectangle((int) rect.getWidth(), <newline46mondego>                        (int) rect.getHeight(), (int) r2.getWidth(), (int) r2.getHeight()));<newline46mondego>            }<newline46mondego>        });<newline46mondego>        cp.add(jb);<newline46mondego>        cp.add(jb1);<newline46mondego>        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        jf.add(scroll);<newline46mondego>        jf.add(cp, BorderLayout.SOUTH);<newline46mondego>        jf.setSize(400, 400);<newline46mondego>        jf.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private void addmsg(Component co) {<newline46mondego>        jp.add(co);<newline46mondego>        jp.revalidate();<newline46mondego>        jp.repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new ChatPanel();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9446splitHere46","17741565splitHere46","import java.awt.Color;<newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingConstants;<newline46mondego><newline46mondego>class ChatPaneMsgBox extends JPanel {<newline46mondego><newline46mondego>    boolean ij = true;<newline46mondego>    private String msg = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    private JLabel jl;<newline46mondego><newline46mondego>    public ChatPaneMsgBox() {<newline46mondego>    }<newline46mondego><newline46mondego>    public ChatPaneMsgBox(String str, boolean bj) {<newline46mondego>        ij = bj;<newline46mondego>        msg = str;<newline46mondego>        msgpnl();<newline46mondego>    }<newline46mondego><newline46mondego>    private void msgpnl() {<newline46mondego>        this.setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));<newline46mondego>        if (ij) {<newline46mondego>            jl = new JLabel(msg);<newline46mondego><newline46mondego>            jl.setOpaque(true);<newline46mondego>            jl.setBorder(new TextBubbleBorder(Color.LIGHT_GRAY, 1, 10, 7, ij));<newline46mondego><newline46mondego>            jl.setBackground(new Color(123, 104, 238));<newline46mondego>            jl.setAlignmentX(0);<newline46mondego>        } else {<newline46mondego>            jl = new JLabel(msg, SwingConstants.RIGHT);<newline46mondego><newline46mondego>            jl.setOpaque(true);<newline46mondego>            jl.setBorder(new TextBubbleBorder(Color.LIGHT_GRAY, 1, 10, 7, ij));<newline46mondego><newline46mondego>            jl.setBackground(new Color(224, 102, 255));<newline46mondego>            jl.setAlignmentX(1);<newline46mondego>        }<newline46mondego>        this.add(jl);<newline46mondego>        System.out.print(<doubleQuotes46>\nThis executed<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9447splitHere46","17741565splitHere46","import java.awt.BasicStroke;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Insets;<newline46mondego>import java.awt.Polygon;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import java.awt.RenderingHints;<newline46mondego>import java.awt.geom.Area;<newline46mondego>import java.awt.geom.RoundRectangle2D;<newline46mondego>import javax.swing.border.AbstractBorder;<newline46mondego><newline46mondego>class TextBubbleBorder extends AbstractBorder {<newline46mondego><newline46mondego>    private Color color;<newline46mondego>    private int thickness = 4;<newline46mondego>    private int radii = 8;<newline46mondego>    private int pointerSize = 7;<newline46mondego>    private Insets insets = null;<newline46mondego>    private BasicStroke stroke = null;<newline46mondego>    private int strokePad;<newline46mondego>    private int pointerPad = 4;<newline46mondego>    private boolean left = true;<newline46mondego>    RenderingHints hints;<newline46mondego><newline46mondego>    TextBubbleBorder(Color color) {<newline46mondego>        new TextBubbleBorder(color, 4, 8, 7);<newline46mondego>    }<newline46mondego><newline46mondego>    TextBubbleBorder(Color color, int thickness, int radii, int pointerSize) {<newline46mondego>        this.thickness = thickness;<newline46mondego>        this.radii = radii;<newline46mondego>        this.pointerSize = pointerSize;<newline46mondego>        this.color = color;<newline46mondego>        stroke = new BasicStroke(thickness);<newline46mondego>        strokePad = thickness / 2;<newline46mondego>        hints = new RenderingHints(RenderingHints.KEY_ANTIALIASING, <newline46mondego>                RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>        int pad = radii + strokePad;<newline46mondego>        int bottomPad = pad + pointerSize + strokePad;<newline46mondego>        insets = new Insets(pad, pad, bottomPad, pad);<newline46mondego>    }<newline46mondego><newline46mondego>    TextBubbleBorder(Color color, int thickness, int radii, int pointerSize, boolean left) {<newline46mondego>        this(color, thickness, radii, pointerSize);<newline46mondego>        this.left = left;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Insets getBorderInsets(Component c) {<newline46mondego>        return insets;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Insets getBorderInsets(Component c, Insets insets) {<newline46mondego>        return getBorderInsets(c);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {<newline46mondego>        Graphics2D g2 = (Graphics2D) g;<newline46mondego>        int bottomLineY = height - thickness - pointerSize;<newline46mondego>        RoundRectangle2D.Double bubble = new RoundRectangle2D.Double(<newline46mondego>                0 + strokePad,<newline46mondego>                0 + strokePad,<newline46mondego>                width - thickness,<newline46mondego>                bottomLineY,<newline46mondego>                radii,<newline46mondego>                radii);<newline46mondego>        Polygon pointer = new Polygon();<newline46mondego>        if (left) {<newline46mondego>            // left point<newline46mondego>            pointer.addPoint(<newline46mondego>                    strokePad + radii + pointerPad,<newline46mondego>                    bottomLineY);<newline46mondego>            // right point<newline46mondego>            pointer.addPoint(<newline46mondego>                    strokePad + radii + pointerPad + pointerSize,<newline46mondego>                    bottomLineY);<newline46mondego>            // bottom point<newline46mondego>            pointer.addPoint(<newline46mondego>                    strokePad + radii + pointerPad + (pointerSize / 2),<newline46mondego>                    height - strokePad);<newline46mondego>        } else {<newline46mondego>            // left point<newline46mondego>            pointer.addPoint(<newline46mondego>                    width - (strokePad + radii + pointerPad),<newline46mondego>                    bottomLineY);<newline46mondego>            // right point<newline46mondego>            pointer.addPoint(<newline46mondego>                    width - (strokePad + radii + pointerPad + pointerSize),<newline46mondego>                    bottomLineY);<newline46mondego>            // bottom point<newline46mondego>            pointer.addPoint(<newline46mondego>                    width - (strokePad + radii + pointerPad + (pointerSize / 2)),<newline46mondego>                    height - strokePad);<newline46mondego>        }<newline46mondego>        Area area = new Area(bubble);<newline46mondego>        area.add(new Area(pointer));<newline46mondego>        g2.setRenderingHints(hints);<newline46mondego>        // Paint the BG color of the parent, everywhere outside the clip<newline46mondego>        // of the text bubble.<newline46mondego>        Component parent = c.getParent();<newline46mondego>        if (parent != null) {<newline46mondego>            Color bg = parent.getBackground();<newline46mondego>            Rectangle rect = new Rectangle(0, 0, width, height);<newline46mondego>            Area borderRegion = new Area(rect);<newline46mondego>            borderRegion.subtract(area);<newline46mondego>            g2.setClip(borderRegion);<newline46mondego>            g2.setColor(bg);<newline46mondego>            g2.fillRect(0, 0, width, height);<newline46mondego>            g2.setClip(null);<newline46mondego>        }<newline46mondego>        g2.setColor(color);<newline46mondego>        g2.setStroke(stroke);<newline46mondego>        g2.draw(area);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9448splitHere46","17741779splitHere46","values()"
"9449splitHere46","17741779splitHere46","Status.values()[0]"
"9450splitHere46","17741779splitHere46","toString()"
"9451splitHere46","17741895splitHere46","1"
"9452splitHere46","17741895splitHere46","RSAPrivateCrtKey"
"9453splitHere46","17742195splitHere46","equals()"
"9454splitHere46","17742195splitHere46","list"
"9455splitHere46","17742195splitHere46","Collections.synchronizedCollection(list).equals(list) == true<newline46mondego>"
"9456splitHere46","17742195splitHere46","list.equals(list)"
"9457splitHere46","17742195splitHere46","list.equals(Collections.synchronizedCollection(list)) == false<newline46mondego>"
"9458splitHere46","17742195splitHere46","Collections.synchronizedCollection(list)"
"9459splitHere46","17742195splitHere46","Object.equals()"
"9460splitHere46","17742195splitHere46","Collections.synchronizedList()"
"9461splitHere46","17742195splitHere46","Collections.synchronizedSet()"
"9462splitHere46","17742295splitHere46","String parameter;<newline46mondego>    try {<newline46mondego>        ...<newline46mondego>    } catch (Exception e) {<newline46mondego>        logFailure(e, parameter);<newline46mondego>        throwException(e);<newline46mondego>    }<newline46mondego><newline46mondego>    public void throwException(Exception e) throws Exception{<newline46mondego>       if (e instanceof X) {<newline46mondego>            throw new A(e);<newline46mondego>        } else if (e instanceof Y<newline46mondego>                || e instanceof Z) {<newline46mondego>            throw new B(e);<newline46mondego>        } <newline46mondego>        throw new InternalServerErrorException(e);<newline46mondego>    }<newline46mondego>"
"9463splitHere46","17742295splitHere46","Logger"
"9464splitHere46","17742295splitHere46","method"
"9465splitHere46","17742348splitHere46","public MyFrame extends JFrame{<newline46mondego><newline46mondego><newline46mondego>  public JFrame add(Container container){<newline46mondego>    super.add(container);<newline46mondego>    return this;<newline46mondego>  }<newline46mondego><newline46mondego>  public JFrame setLocation(int x, int y){<newline46mondego>    super.setLocation(x,y);<newline46mondego>    return this;<newline46mondego>  }<newline46mondego>  //and so on<newline46mondego>}<newline46mondego>"
"9466splitHere46","17742348splitHere46","MyFrame frame = new MyFrame();<newline46mondego>frame.add(somecontainer).setLocation(200,200).....<newline46mondego>"
"9467splitHere46","17742695splitHere46","@Test<newline46mondego>public void test() throws InterruptedException {<newline46mondego>        WebDriver driver = new ChromeDriver();<newline46mondego>        driver.get(<doubleQuotes46>http://www.lexisnexis.com/hottopics/lnacademic/?verb=sf&sfi=AC00NBGenSrch<doubleQuotes46>); <newline46mondego>        driver.switchTo().frame(<doubleQuotes46>mainFrame<doubleQuotes46>);<newline46mondego><newline46mondego>        WebDriverWait waitst = new WebDriverWait(driver, 0);<newline46mondego>        waitst.until(ExpectedConditions.visibilityOfElementLocated(By.name(<doubleQuotes46>sourceTitle<doubleQuotes46>)));<newline46mondego><newline46mondego>        WebElement sourceTitle = driver.findElement(By.name(<doubleQuotes46>sourceTitle<doubleQuotes46>));<newline46mondego>        sourceTitle.sendKeys(<doubleQuotes46>Times<doubleQuotes46>); <newline46mondego>        Thread.sleep(5000);<newline46mondego>        WebElement firstItem = driver.findElement(By.xpath(<doubleQuotes46>//*[@class='auto_suggest']/*[@class='title_item']<doubleQuotes46>));<newline46mondego>        firstItem.click();<newline46mondego>}<newline46mondego>"
"9468splitHere46","17742762splitHere46","public class Global extends GlobalSettings {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void beforeStart(Application app) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        super.beforeStart(app);<newline46mondego><newline46mondego>        String libopencv_java = <doubleQuotes46>/Users/yoonjechoi/git/myFirstApp/target/native_libraries/64bits/libopencv_java246.jnilib<doubleQuotes46>;<newline46mondego>        System.load(libopencv_java);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9469splitHere46","17742880splitHere46","public abstract class A {<newline46mondego>    public int getNewNo() {<newline46mondego>        int newNo = getNo() + 2;<newline46mondego>        return newNo;<newline46mondego>    }<newline46mondego><newline46mondego>    abstract int getNo();<newline46mondego>}<newline46mondego>"
"9470splitHere46","17743049splitHere46","private List<File> sendRequest(){<newline46mondego>    List<File> result = new ArrayList<File>();<newline46mondego><newline46mondego>    try{<newline46mondego>        Files.List request = service.files().list().setQ(<doubleQuotes46>trashed = false<doubleQuotes46>);<newline46mondego><newline46mondego>        do{<newline46mondego>            try{<newline46mondego>                FileList files = request.execute();<newline46mondego><newline46mondego>                result.addAll(files.getItems());<newline46mondego>                request.setPageToken(files.getNextPageToken());<newline46mondego>            }<newline46mondego>            catch(IOException e){<newline46mondego>                System.out.println(<doubleQuotes46>An error occurred: <doubleQuotes46> + e);<newline46mondego>                request.setPageToken(null);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        while(request.getPageToken() != null<newline46mondego>                && request.getPageToken().length() > 0);<newline46mondego><newline46mondego>    }<newline46mondego>    catch(IOException e1){<newline46mondego>        e1.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>    for(File file : result){<newline46mondego>        Log.d(TAG, <doubleQuotes46>file : <doubleQuotes46> + file.getTitle());<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"9471splitHere46","17743049splitHere46","Files.List request = service.files().list().setQ(<doubleQuotes46>'<doubleQuotes46> + folderId + <doubleQuotes46>' in parents and trashed = false<doubleQuotes46>);<newline46mondego>"
"9472splitHere46","17743123splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>    response.getEntity().writeTo(baos);<newline46mondego>    byte[] bytes = baos.getBytes();<newline46mondego>"
"9473splitHere46","17743123splitHere46","HttpResponse"
"9474splitHere46","17743123splitHere46","HttpResponse response = ...<newline46mondego>    response.setEntity(new ByteArrayEntity(bytes));<newline46mondego>"
"9475splitHere46","17743123splitHere46","HttpResponseWriter"
"9476splitHere46","17743123splitHere46","HttpResponseParser"
"9477splitHere46","17743304splitHere46","MyClass"
"9478splitHere46","17743304splitHere46","AnythingPerformerClass"
"9479splitHere46","17743304splitHere46","MyClass"
"9480splitHere46","17743304splitHere46","class MyClass {<newline46mondego><newline46mondego>   private final AnythingPerformerClass clazz;<newline46mondego><newline46mondego>   MyClass(AnythingPerformerClass clazz) {<newline46mondego>      this.clazz = clazz;<newline46mondego>   }<newline46mondego><newline46mondego>   public boolean performAnything() {         <newline46mondego>     return clazz.doSomething();        <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"9481splitHere46","17743304splitHere46","@Test<newline46mondego>public void testPerformAnything() throws Exception {<newline46mondego>   AnythingPerformerClass mockedPerformer = Mockito.mock(AnythingPerformerClass.class);<newline46mondego>   MyClass clazz = new MyClass(mockedPerformer);<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"9482splitHere46","17743304splitHere46","AnythingPerformerClass"
"9483splitHere46","17743304splitHere46","AnythingPerformerClassBuilder"
"9484splitHere46","17743344splitHere46","Go through this para if you know some theory about compilers otherwise read next para"
"9485splitHere46","17743344splitHere46","NO"
"9486splitHere46","17743344splitHere46","YES"
"9487splitHere46","17743344splitHere46","NO"
"9488splitHere46","17743344splitHere46","James Gosling and his team"
"9489splitHere46","17743344splitHere46","YES"
"9490splitHere46","17743410splitHere46","String mimetype = entity.getMimeType();<newline46mondego><newline46mondego>// sets response content type<newline46mondego>if (mimetype == null) {<newline46mondego>    mimetype = <doubleQuotes46>application/octet-stream<doubleQuotes46>;<newline46mondego>}<newline46mondego>response.setContentType(mimetype);<newline46mondego>response.setContentLength((int)file.length());<newline46mondego>String fileName = (new File(filePath)).getName();<newline46mondego><newline46mondego>// sets HTTP header<newline46mondego>response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>, <doubleQuotes46>attachment; filename=\<doubleQuotes46><doubleQuotes46> + fileName + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"9491splitHere46","17743414splitHere46","commonView"
"9492splitHere46","17743414splitHere46","common_status_bar.xml"
"9493splitHere46","17743414splitHere46","<RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>        xmlns:tools=<doubleQuotes46>http://schemas.android.com/tools<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>match_parent<doubleQuotes46><newline46mondego>        android:paddingBottom=<doubleQuotes46>10dp<doubleQuotes46><newline46mondego>        android:paddingLeft=<doubleQuotes46>10dp<doubleQuotes46><newline46mondego>        android:paddingRight=<doubleQuotes46>10dp<doubleQuotes46><newline46mondego>        android:paddingTop=<doubleQuotes46>10dp<doubleQuotes46> ><newline46mondego><newline46mondego>        <include<newline46mondego>            android:id=<doubleQuotes46>@+id/common_status_bar<doubleQuotes46><newline46mondego>            layout=<doubleQuotes46>@layout/common_status_bar<doubleQuotes46> /><newline46mondego><newline46mondego>    </RelativeLayout><newline46mondego>"
"9494splitHere46","17743414splitHere46","commonView = layoutInflater.inflate(R.layout.common_status_bar, null);<newline46mondego>"
"9495splitHere46","17743414splitHere46","commonView = findViewById(R.id.common_status_bar);<newline46mondego>"
"9496splitHere46","17743455splitHere46","SELECT (SELECT movement FROM user WHERE Date <= ? ORDER BY Date) = 'Static'<newline46mondego>   AND (SELECT movement FROM user WHERE Date <= ? ORDER BY Date) = 'Static'<newline46mondego>   AND (SELECT movement FROM user WHERE Date <= ? ORDER BY Date) = 'Static'<newline46mondego>   AND (SELECT movement FROM user WHERE Date <= ? ORDER BY Date) = 'Static';<newline46mondego>"
"9497splitHere46","17743574splitHere46","HIDE_ON_CLOSE"
"9498splitHere46","17743574splitHere46","JFrame.setVisible(false)"
"9499splitHere46","17743574splitHere46","JFrame"
"9500splitHere46","17743574splitHere46","JFrame.dispose()"
"9501splitHere46","17743574splitHere46","JFrame.setVisible(true)"
"9502splitHere46","17743574splitHere46","JFrame"
"9503splitHere46","17743574splitHere46","CardLayout"
"9504splitHere46","17743574splitHere46","JFrame.pack()"
"9505splitHere46","17743574splitHere46","JFrames"
"9506splitHere46","17743574splitHere46","Object"
"9507splitHere46","17743574splitHere46","never will be CG'ed"
"9508splitHere46","17743574splitHere46","JFrame.HIDE_ON_CLOSE"
"9509splitHere46","17743574splitHere46","JFrame.DISPOSE_ON_CLOSE"
"9510splitHere46","17743574splitHere46","JFrame.setVisible(false)"
"9511splitHere46","17743574splitHere46","CardLayout"
"9512splitHere46","17743574splitHere46","JComponents"
"9513splitHere46","17743574splitHere46","JFrames ContentPane"
"9514splitHere46","17743574splitHere46","JComponents"
"9515splitHere46","17743574splitHere46","LayoutManager"
"9516splitHere46","17743574splitHere46","JFrame"
"9517splitHere46","17743574splitHere46","JFrame.(re)validate();"
"9518splitHere46","17743574splitHere46","JFrame.repaint();"
"9519splitHere46","17743574splitHere46","JFrame.pack();"
"9520splitHere46","17743782splitHere46","MalformedJsonException"
"9521splitHere46","17743782splitHere46","public boolean isValidJson(String json) {<newline46mondego>    try {<newline46mondego>        // parse json<newline46mondego>        return true;<newline46mondego>    } catch(MalformedJsonException e) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9522splitHere46","17743942splitHere46","javac com/util/Hello.java <newline46mondego>"
"9523splitHere46","17743942splitHere46","cd /home/scripts<newline46mondego>java -cp . com.util.Hello<newline46mondego>"
"9524splitHere46","17743942splitHere46","java -cp <doubleQuotes46>/home/scripts<doubleQuotes46> com.util.Hello   <newline46mondego>"
"9525splitHere46","17743945splitHere46","List"
"9526splitHere46","17743945splitHere46","Object"
"9527splitHere46","17743945splitHere46","Object"
"9528splitHere46","17743945splitHere46","Object"
"9529splitHere46","17743945splitHere46","List<String>"
"9530splitHere46","17743945splitHere46","List"
"9531splitHere46","17743945splitHere46","String s = list.get(i)"
"9532splitHere46","17743945splitHere46","GenericClass a"
"9533splitHere46","17743945splitHere46","a.getList()"
"9534splitHere46","17743945splitHere46","Object"
"9535splitHere46","17743945splitHere46","GenericClass<Number> a = null;"
"9536splitHere46","17743945splitHere46","a.getList()"
"9537splitHere46","17743945splitHere46","GenericClass<Number>"
"9538splitHere46","17743945splitHere46","extends Number"
"9539splitHere46","17744079splitHere46","<Context path=<doubleQuotes46>/yourAppName<doubleQuotes46> /><newline46mondego>"
"9540splitHere46","17744130splitHere46","String#toCharArray()"
"9541splitHere46","17744130splitHere46","int[]"
"9542splitHere46","17744130splitHere46","char"
"9543splitHere46","17744130splitHere46","int"
"9544splitHere46","17744130splitHere46","char"
"9545splitHere46","17744130splitHere46","int"
"9546splitHere46","17744130splitHere46","char ch = '3';<newline46mondego>int chToInt = ch - '0';<newline46mondego>"
"9547splitHere46","17744130splitHere46","ArrayList"
"9548splitHere46","17744130splitHere46","ArrayList"
"9549splitHere46","17744130splitHere46","2314 / 1000 = 2     // First digit (add to ArrayList)<newline46mondego>2314 % 1000 = 314  // This is the new number <newline46mondego><newline46mondego>314 / 100 = 3   // Add this to ArrayList<newline46mondego>314 / 100 = 14  // This is the new number<newline46mondego><newline46mondego>// Proceed like this<newline46mondego>"
"9550splitHere46","17744130splitHere46","loop"
"9551splitHere46","17744277splitHere46","HttpClient http = new DefaultHttpClient();<newline46mondego>String htmlcode = <doubleQuotes46><doubleQuotes46>;<newline46mondego>HttpGet request = new HttpGet(<doubleQuotes46>http://www.example.com<doubleQuotes46>);<newline46mondego>HttpResponse response = null;<newline46mondego>try {<newline46mondego>    response = http.execute(request);<newline46mondego>} catch (ClientProtocolException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>} catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>if(response != null){<newline46mondego>    BufferedReader read = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));<newline46mondego><newline46mondego>    String line = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    while((line = read.readLine()) != null){<newline46mondego>        htmlcode += line; <newline46mondego>    }<newline46mondego>}<newline46mondego>// at this point we have the pages markup<newline46mondego>Document doc = Jsoup.parse(htmlcode);<newline46mondego>Elements lis = doc.getElementsByTag(<doubleQuotes46>li<doubleQuotes46>); // get all entries in lists<newline46mondego>for(Element el : lis){<newline46mondego>    String val = el.text().trim();<newline46mondego>    // do something for each list entry<newline46mondego>}<newline46mondego>"
"9552splitHere46","17744713splitHere46","mvn -Dmaven.surefire.debug test<newline46mondego>"
"9553splitHere46","17744713splitHere46","mvn -Dmaven.surefire.debug=<doubleQuotes46>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000 -Xnoagent -Djava.compiler=NONE<doubleQuotes46> test<newline46mondego>"
"9554splitHere46","17745116splitHere46","shaders"
"9555splitHere46","17745116splitHere46","#ifdef GL_ES<newline46mondego>    precision mediump float;<newline46mondego>#endif<newline46mondego><newline46mondego>varying vec4 v_color;<newline46mondego>varying vec2 v_texCoords;<newline46mondego>uniform sampler2D u_texture;<newline46mondego>uniform float aspectRatio;<newline46mondego>uniform vec2 center;<newline46mondego>uniform float radius;<newline46mondego>uniform float scale;<newline46mondego><newline46mondego>void main() <newline46mondego>{  <newline46mondego>    vec2 textureCoordinateToUse = vec2(v_texCoords.x, (v_texCoords.y * aspectRatio + center.y - center.y * aspectRatio));<newline46mondego>    float dist = distance(center, textureCoordinateToUse);<newline46mondego>    textureCoordinateToUse = v_texCoords;<newline46mondego>    if (dist < radius)<newline46mondego>    {<newline46mondego>        textureCoordinateToUse -= center;<newline46mondego>        float percent = 1.0 - ((radius - dist) / radius) * scale;<newline46mondego>        percent = percent * percent;<newline46mondego>        textureCoordinateToUse = textureCoordinateToUse * percent;<newline46mondego>        textureCoordinateToUse += center;<newline46mondego>    }<newline46mondego>    gl_FragColor = texture2D(u_texture, textureCoordinateToUse);<newline46mondego>}<newline46mondego>"
"9556splitHere46","17745162splitHere46","post"
"9557splitHere46","17745162splitHere46","getWidth()"
"9558splitHere46","17745162splitHere46","getHeight()"
"9559splitHere46","17745162splitHere46","mImage.post(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        mImage.setImageBitmap(loadBitmapFromView(mImage));<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"9560splitHere46","17745176splitHere46","....<newline46mondego><select<#rt/><newline46mondego>        name=<doubleQuotes46>${parameters.doubleName?default(<doubleQuotes46><doubleQuotes46>)?html}<doubleQuotes46><#rt/><newline46mondego><#if parameters.disabled?default(false)><newline46mondego>        disabled=<doubleQuotes46>disabled<doubleQuotes46><#rt/><newline46mondego></#if><newline46mondego><#if parameters.doubleTabindex??><newline46mondego>        tabindex=<doubleQuotes46>${parameters.doubleTabindex?html}<doubleQuotes46><#rt/><newline46mondego></#if><newline46mondego>........................<newline46mondego>........................<newline46mondego><#if parameters.doubleOnchange??><newline46mondego>    onchange=<doubleQuotes46>${parameters.doubleOnchange?html}<doubleQuotes46><newline46mondego></#if><newline46mondego>        ><newline46mondego></select><newline46mondego>....<newline46mondego>"
"9561splitHere46","17745176splitHere46","<#if parameters.doubleOnchange??><newline46mondego>    onchange=<doubleQuotes46>${parameters.doubleOnchange?html}<doubleQuotes46><newline46mondego></#if><newline46mondego>"
"9562splitHere46","17745267splitHere46","images/Graph.png"
"9563splitHere46","17745267splitHere46","img"
"9564splitHere46","17745267splitHere46","//Get the URL with method class.getResource(<doubleQuotes46>/path/to/image.png<doubleQuotes46>)<newline46mondego>URL url = System.class.getResource(<doubleQuotes46>/images/Graph.png<doubleQuotes46>);<newline46mondego><newline46mondego>//Use it to get the image<newline46mondego>Image img = Toolkit.getDefaultToolkit().getImage(url);<newline46mondego><newline46mondego>final TrayIcon trayIcon = new TrayIcon(img, <doubleQuotes46>Application Name<doubleQuotes46>, popup);<newline46mondego>"
"9565splitHere46","17745267splitHere46","images/"
"9566splitHere46","17745370splitHere46","javax.servlet.context.tempdir"
"9567splitHere46","17745370splitHere46","DiskDataStore"
"9568splitHere46","17745370splitHere46","HttpSessionDataStore"
"9569splitHere46","17745370splitHere46","StoreSettings#inmemoryCacheSize"
"9570splitHere46","17745425splitHere46","n1"
"9571splitHere46","17745425splitHere46","n2"
"9572splitHere46","17745425splitHere46","n1 != null && n2 != null"
"9573splitHere46","17745425splitHere46","if(n1 != null && n2 != null) {<newline46mondego>        if(n1.value < n2.value) {<newline46mondego>            result = n1;<newline46mondego>            result.next = merge(n1.next, n2);<newline46mondego>        } else {<newline46mondego>            result = n2;<newline46mondego>            result.next = merge(n1, n2.next);<newline46mondego>        }<newline46mondego><newline46mondego>} else if (n1 != null) {  <newline46mondego>    result = n1;  // Add all the elements of `n1` to `result`<newline46mondego>} else if (n2 != null) {<newline46mondego>    result = n2;  // Add all the elements of `n2` to `result`<newline46mondego>}<newline46mondego>"
"9574splitHere46","17745425splitHere46","result"
"9575splitHere46","17745425splitHere46","public static Node merge(Node n1, Node n2) {<newline46mondego>    if (n1 == null) return n2;<newline46mondego>    if (n2 == null) return n1;<newline46mondego><newline46mondego>    if (n1.value < n2.value) {<newline46mondego>        n1.next = merge(n1.next, n2);<newline46mondego>        return n1;<newline46mondego>    } else {<newline46mondego>        n2.next = merge(n2.next, n1);<newline46mondego>        return n2;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9576splitHere46","17745461splitHere46","UPDATE MessageCount SET count = count + 1<newline46mondego>"
"9577splitHere46","17745494splitHere46","C Drive"
"9578splitHere46","17745494splitHere46","components-JWSFileChooserDemoProject<newline46mondego>                  |<newline46mondego>  ------------------------------------<newline46mondego>  |           |           |          |<newline46mondego>nbproject    src      build.xml    manifest.mf<newline46mondego>              |<newline46mondego>          components<newline46mondego>              |<newline46mondego>  -------------------------------------------------<newline46mondego>  |       |       |                               |<newline46mondego>images   jars     |                               |<newline46mondego>             JWSFileChooserDemo.java      JWSFileChooserDemo.jnlp<newline46mondego>"
"9579splitHere46","17745494splitHere46","components Directory"
"9580splitHere46","17745494splitHere46","Directory"
"9581splitHere46","17745494splitHere46","build"
"9582splitHere46","17745494splitHere46","Directory - components"
"9583splitHere46","17745494splitHere46","build"
"9584splitHere46","17745494splitHere46","images"
"9585splitHere46","17745494splitHere46","jars"
"9586splitHere46","17745494splitHere46","JWSFileChooserDemo.java"
"9587splitHere46","17745494splitHere46","JWSFileChooserDemo.jnlp"
"9588splitHere46","17745494splitHere46","components Directory"
"9589splitHere46","17745494splitHere46","C:\components-JWSFileChooserDemoProject\src\components>javac -classpath images\*;jars\*;build -d build JWSFileChooserDemo.java<newline46mondego>"
"9590splitHere46","17745494splitHere46","-classpath"
"9591splitHere46","17745494splitHere46","Directories"
"9592splitHere46","17745494splitHere46","images"
"9593splitHere46","17745494splitHere46","jars"
"9594splitHere46","17745494splitHere46","build"
"9595splitHere46","17745494splitHere46","JWSFileChooserDemo.java"
"9596splitHere46","17745494splitHere46","-d"
"9597splitHere46","17745494splitHere46",".class"
"9598splitHere46","17745494splitHere46","<doubleQuotes46>build<doubleQuotes46>"
"9599splitHere46","17745494splitHere46","C:\components-JWSFileChooserDemoProject\src\components>cd build<newline46mondego>"
"9600splitHere46","17745494splitHere46","C:\components-JWSFileChooserDemoProject\src\components\build>java -cp .;..\images\*;..\jars\* components.JWSFileChooserDemo<newline46mondego>"
"9601splitHere46","17745494splitHere46","-cp"
"9602splitHere46","17745494splitHere46","."
"9603splitHere46","17745494splitHere46","..\images\*"
"9604splitHere46","17745494splitHere46","images Directory"
"9605splitHere46","17745494splitHere46","..\jars\*"
"9606splitHere46","17745494splitHere46","-d"
"9607splitHere46","17745494splitHere46","Java Compiler - javac"
"9608splitHere46","17745494splitHere46","components Directory"
"9609splitHere46","17745494splitHere46","C:\components-JWSFileChooserDemoProject\src\components>javac -classpath images\*;jars\* JWSFileChooserDemo.java<newline46mondego>"
"9610splitHere46","17745494splitHere46","package structure"
"9611splitHere46","17745494splitHere46","File System"
"9612splitHere46","17745494splitHere46","Directory components"
"9613splitHere46","17745494splitHere46",".class"
"9614splitHere46","17745494splitHere46","components Directory"
"9615splitHere46","17745494splitHere46","images"
"9616splitHere46","17745494splitHere46","components"
"9617splitHere46","17745494splitHere46","Directory - components"
"9618splitHere46","17745494splitHere46","components(which further contains JWSFileChooserDemo.class , JWSFileChooserDemo$1.class and images folder)"
"9619splitHere46","17745494splitHere46","images"
"9620splitHere46","17745494splitHere46","jars"
"9621splitHere46","17745494splitHere46","JWSFileChooserDemo.java"
"9622splitHere46","17745494splitHere46","JWSFileChooserDemo.jnlp"
"9623splitHere46","17745494splitHere46","C:\components-JWSFileChooserDemoProject\src\components>java -cp .;jars\* components.JWSFileChooserDemo<newline46mondego>"
"9624splitHere46","17745494splitHere46","images"
"9625splitHere46","17745494splitHere46","components"
"9626splitHere46","17745494splitHere46",".java"
"9627splitHere46","17745494splitHere46","relative path"
"9628splitHere46","17745494splitHere46","javac"
"9629splitHere46","17745494splitHere46","C:\components-JWSFileChooserDemoProject\src>java -cp .;components\jars\* components.JWSFileChooserDemo<newline46mondego>"
"9630splitHere46","17745536splitHere46","\\p{L}<newline46mondego>"
"9631splitHere46","17745536splitHere46","Pattern.UNICODE_CASE"
"9632splitHere46","17745536splitHere46","Pattern p = Pattern.compile(regex, Pattern.UNICODE_CASE);<newline46mondego>"
"9633splitHere46","17745561splitHere46","// other imports<newline46mondego>import com.google.appengine.tools.development.DevAppServerMain;<newline46mondego><newline46mondego>public class DevServer {<newline46mondego>    public static void launch(final String[] args) {<newline46mondego>        Logger logger = Logger.getLogger(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        logger.info(<doubleQuotes46>Launching AppEngine server...<doubleQuotes46>);<newline46mondego>        Thread server = new Thread() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                try {<newline46mondego>                    DevAppServerMain.main(args);  // run DevAppServer<newline46mondego>                } catch (Exception e) { e.printStackTrace(); }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        server.setDaemon(true);  // shut down server when rest of app completes<newline46mondego>        server.start();          // run server in separate thread<newline46mondego>        URLConnection cxn;<newline46mondego>        try {<newline46mondego>            cxn = new URL(<doubleQuotes46>http://localhost:8888<doubleQuotes46>).openConnection();<newline46mondego>        } catch (IOException e) { return; }  // should never happen<newline46mondego>        boolean running = false;<newline46mondego>        while (!running) {  // maybe add timeout in case server fails to load<newline46mondego>            try {<newline46mondego>                cxn.connect();  // try to connect to server<newline46mondego>                running = true;<newline46mondego>                // Maybe limit rate with a Thread.sleep(...) here<newline46mondego>            } catch (Exception e) {}<newline46mondego>        }<newline46mondego>        logger.info(<doubleQuotes46>Server running.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9634splitHere46","17745561splitHere46","public static void main(String[] args) {<newline46mondego>    DevServer.launch(args);  // launch AppEngine Dev Server (blocks until ready)<newline46mondego>    // Do everything else<newline46mondego>}<newline46mondego>"
"9635splitHere46","17745561splitHere46","main(...)"
"9636splitHere46","17745561splitHere46","main(...)"
"9637splitHere46","17745561splitHere46","DevServer"
"9638splitHere46","17745583splitHere46","@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Foo {<newline46mondego><newline46mondego>   private String fooProp;<newline46mondego><newline46mondego>}<newline46mondego>"
"9639splitHere46","17745583splitHere46","Foo"
"9640splitHere46","17745583splitHere46","Foo"
"9641splitHere46","17745583splitHere46","@XmlRootElement(name=<doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>@XmlType(name=<doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Bar {<newline46mondego><newline46mondego>    @XmlElement(name=<doubleQuotes46>fooProp<doubleQuotes46>)<newline46mondego>    private String barProp;<newline46mondego><newline46mondego>}<newline46mondego>"
"9642splitHere46","17745667splitHere46","<doubleQuotes46>"
"9643splitHere46","17745667splitHere46","s = s.replaceAll(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>); <newline46mondego>"
"9644splitHere46","17745719splitHere46","this"
"9645splitHere46","17745719splitHere46","TheMain"
"9646splitHere46","17745719splitHere46","main"
"9647splitHere46","17745719splitHere46","static"
"9648splitHere46","17745719splitHere46","addActionListener(this);<newline46mondego>"
"9649splitHere46","17745719splitHere46","addActionListener(main);<newline46mondego>"
"9650splitHere46","17745838splitHere46","long lastSize = <newline46mondego>int maxSleep = 5000, sleep = 200;<newline46mondego>while(!Thread.currentThread().isInterrupted()) {<newline46mondego>     long size = file.length();<newline46mondego>     if (size > lastSize) {<newline46mondego>        copyData(size - lastSize);<newline46mondego>        lastSize = size;<newline46mondego>        sleep = 200;<newline46mondego>     } else {<newline46mondego>        Thread.sleep(sleep);<newline46mondego>        sleep += 200;<newline46mondego>        if (sleep > maxSleep)<newline46mondego>            sleep = maxSleep;<newline46mondego>}<newline46mondego>"
"9651splitHere46","17745868splitHere46","InputStream ddlStream = <SomeClassInsideTheSameJar>.class<newline46mondego>    .getClassLoader().getResourceAsStream(<doubleQuotes46>some/pack/age/somelib.dll<doubleQuotes46>);<newline46mondego>FileOutputStream fos = null;<newline46mondego>try {<newline46mondego>    fos = new FileOutputStream(<doubleQuotes46>somelib.dll<doubleQuotes46>);<newline46mondego>    byte[] buf = new byte[2048];<newline46mondego>    int r = ddlStream.read(buf);<newline46mondego>    while(r != -1) {<newline46mondego>        fos.write(buf, 0, r);<newline46mondego>        r = ddlStream.read(buf);<newline46mondego>    }<newline46mondego>} finally {<newline46mondego>    if(fos != null) {<newline46mondego>        fos.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"9652splitHere46","17745868splitHere46","some.pack.age"
"9653splitHere46","17745881splitHere46","Capabilities"
"9654splitHere46","17745881splitHere46","ChromeOptions"
"9655splitHere46","17745881splitHere46","ChromeOptions options = new ChromeOptions();<newline46mondego>options.addArgument(<doubleQuotes46>--disable-web-security<doubleQuotes46>);<newline46mondego>options.addArgument(<doubleQuotes46>--start-maximized<doubleQuotes46>);<newline46mondego><newline46mondego>// For use with RemoteWebDriver:<newline46mondego>DesiredCapabilities capabilities = DesiredCapabilities.chrome();<newline46mondego>capabilities.setCapability(ChromeOptions.CAPABILITY, options);<newline46mondego>RemoteWebDriver driver = new RemoteWebDriver(new URL(<doubleQuotes46>http://localhost:4444/wd/hub<doubleQuotes46>), capabilities);<newline46mondego>"
"9656splitHere46","17745995splitHere46","apache-tomcat-7.0.42.tar.gz"
"9657splitHere46","17746029splitHere46","public static String ALARM_TO_SET = <doubleQuotes46>ALRMTOSEND<doubleQuotes46>;<newline46mondego>yourButton.setOnClickListener(new OnClickListener(){<newline46mondego>public void onClick(View view){<newline46mondego>     int time = 10 * 1000;<newline46mondego><newline46mondego>    intentAlarm = new Intent(ALARM_TO_SET);<newline46mondego><newline46mondego>    alarm = (AlarmManager) getSystemService(Context.ALARM_SERVICE);<newline46mondego>    PendingIntent pIntent = PendingIntent.getBroadcast(this, 0, intentAlarm, 0)<newline46mondego>    alarm.setRepeating(AlarmManager.RTC_WAKEUP, time, time, pIntent);<newline46mondego><newline46mondego><newline46mondego>  }<newline46mondego>});<newline46mondego>"
"9658splitHere46","17746029splitHere46","<receiver android:name=<doubleQuotes46>.AlarmRecieverClass<doubleQuotes46>><newline46mondego><intent-filter><newline46mondego><action android:name=<doubleQuotes46>ALRMTOSEND<doubleQuotes46> /><newline46mondego></intent-filter><newline46mondego></receiver><newline46mondego>"
"9659splitHere46","17746139splitHere46","String newTemp = temp.replaceAll(<doubleQuotes46>core-\\w+<doubleQuotes46>, <doubleQuotes46>testingPlatform<doubleQuotes46>);<newline46mondego>"
"9660splitHere46","17746139splitHere46","\w+"
"9661splitHere46","17746139splitHere46","[a-zA-Z_0-9]"
"9662splitHere46","17746139splitHere46","String newTemp = temp.replaceAll(<doubleQuotes46>core-\\p{L}+<doubleQuotes46>, <doubleQuotes46>testingPlatform<doubleQuotes46>);<newline46mondego>"
"9663splitHere46","17746160splitHere46","DownloadManager"
"9664splitHere46","17746160splitHere46","Integer.MAX_VALUE"
"9665splitHere46","17746196splitHere46","dbunitConn.getConfig().setProperty(DatabaseConfig.PROPERTY_ESCAPE_PATTERN, <doubleQuotes46>\<doubleQuotes46>?\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"9666splitHere46","17746309splitHere46","Object temp = lWorkspace.getScTyp() == null ? ChartFactory.BLANK_STRING : lWorkspace.getScTyp();<newline46mondego>ScTyp lScTyp = (ScTyp)temp;<newline46mondego>"
"9667splitHere46","17746379splitHere46","dataSource.getConnection"
"9668splitHere46","17746411splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego> <resources><newline46mondego><string-array name=<doubleQuotes46>planets_array<doubleQuotes46>> // name of the string array<newline46mondego>    <item>Mercury</item> // items<newline46mondego>    <item>Venus</item><newline46mondego>    <item>Earth</item><newline46mondego>    <item>Mars</item><newline46mondego></string-array><newline46mondego></resources><newline46mondego>"
"9669splitHere46","17746411splitHere46","Resources res = getResources(); <newline46mondego>  String[] planets = res.getStringArray(R.array.planets_array);<newline46mondego><newline46mondego>                 or<newline46mondego><newline46mondego>  String[] planets = getResources().getStringArray(R.array.planets_array);<newline46mondego>"
"9670splitHere46","17746411splitHere46","getResource"
"9671splitHere46","17746411splitHere46","new CustomAdapter(ActivityName.this);<newline46mondego>"
"9672splitHere46","17746411splitHere46","class CustomAdapter extends BaseAdapter<newline46mondego>  {<newline46mondego>      Context mContext;<newline46mondego>      public CustomAdapter(Context context)<newline46mondego>      {<newline46mondego>           mContext = context;<newline46mondego>      }<newline46mondego>   ...// rest of the code<newline46mondego>  }<newline46mondego>"
"9673splitHere46","17746411splitHere46","mContext.getResources()"
"9674splitHere46","17746429splitHere46","public static final"
"9675splitHere46","17746429splitHere46","implements"
"9676splitHere46","17746429splitHere46","public static void main(String[] args) throws Exception{<newline46mondego>   System.out.println(I.s); // accessing Interface I's variable<newline46mondego>   I i = new I() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int getS() {<newline46mondego>        return 10;<newline46mondego>    }<newline46mondego>   };<newline46mondego>   System.out.println(i.getS()); // accessing I's method<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>interface I {<newline46mondego><newline46mondego>   String s = <doubleQuotes46>test<doubleQuotes46>;<newline46mondego><newline46mondego>   int getS();<newline46mondego>}<newline46mondego>"
"9677splitHere46","17746588splitHere46","(var1 > var2) ^ (var1 > var3)<newline46mondego>"
"9678splitHere46","17746588splitHere46","A ^ B"
"9679splitHere46","17746588splitHere46","true"
"9680splitHere46","17746588splitHere46","A"
"9681splitHere46","17746588splitHere46","B"
"9682splitHere46","17746588splitHere46","true"
"9683splitHere46","17746593splitHere46","<form:select path=<doubleQuotes46>Action<doubleQuotes46> ><newline46mondego>    <form:option  value=<doubleQuotes46><doubleQuotes46> /><newline46mondego>    <form:options items=<doubleQuotes46>${actionList}<doubleQuotes46> /><newline46mondego>    <form:errors  path=<doubleQuotes46>Action<doubleQuotes46> cssClass=<doubleQuotes46>error<doubleQuotes46>/><newline46mondego></form:select><newline46mondego>"
