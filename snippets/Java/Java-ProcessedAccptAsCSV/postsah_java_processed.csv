"1splitHere46","1734403splitHere46","super(calculateRGB(...))"
"2splitHere46","1734403splitHere46","normalize"
"3splitHere46","1734432splitHere46","java.awt.Desktop.getDesktop().browse(new URI(<doubleQuotes46>http://stackoverflow.com<doubleQuotes46>));<newline46mondego>"
"4splitHere46","1734538splitHere46","for (Set<IConnection> set : scope.getConnections()) {<newline46mondego>   for (IConnection iConnection : set) {<newline46mondego>      // use each iConnection<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5splitHere46","1734574splitHere46","public enum Part {<newline46mondego>  ROTOR(<doubleQuotes46>This is a rotor<doubleQuotes46>);<newline46mondego><newline46mondego>  private final String name;<newline46mondego><newline46mondego>  Part(final String name) {<newline46mondego>      this.name = name;<newline46mondego>  } <newline46mondego><newline46mondego>  @Override<newline46mondego>  public String toString() {<newline46mondego>      return name;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6splitHere46","1734653splitHere46","matrixentry"
"7splitHere46","1734653splitHere46","null"
"8splitHere46","1734653splitHere46",".getColumn()"
"9splitHere46","1734653splitHere46",".getNextColumn()"
"10splitHere46","1734653splitHere46","matrixentry = rowArray[row];<newline46mondego><newline46mondego>    while (null != maxtrixentry && matrixentry.getColumn() < col) {<newline46mondego>         matrixentry = matrixentry.getNextColumn();<newline46mondego>    }<newline46mondego><newline46mondego>    if (null == maxtrixentry || matrixentry.getColumn() > col){<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>    result = matrixentry.getData();<newline46mondego>"
"11splitHere46","1734909splitHere46","SortedMap<String, Letter> map = new TreeMap<String, Letter>();<newline46mondego>for (Letter l : Letter.values()) {<newline46mondego>    map.put(l.getDescription, l);<newline46mondego>}<newline46mondego>return map.values();<newline46mondego>"
"12splitHere46","1735548splitHere46","[RQrq1-6]*"
"13splitHere46","1735548splitHere46","[RQrq1-6]"
"14splitHere46","1735548splitHere46","import java.util.regex.Pattern;<newline46mondego><newline46mondego>public class Spike {<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>	testIt(<doubleQuotes46>Q<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>q<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>z<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>Z<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>R<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>r<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>4<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>5<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>6<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>7<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>02<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>11<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46>17<doubleQuotes46>);<newline46mondego>	testIt(<doubleQuotes46><doubleQuotes46>); // should fail, used to pass with the question's regex<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public static void testIt(String sample) {<newline46mondego>	System.out.print(sample+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>	if (Pattern.matches(<doubleQuotes46>[RQrq1-6]*<doubleQuotes46>, sample)) {<newline46mondego>		System.out.println(<doubleQuotes46>match<doubleQuotes46>);<newline46mondego>	} else {<newline46mondego>		System.out.println(<doubleQuotes46>fail<doubleQuotes46>);<newline46mondego>	}<newline46mondego>}<newline46mondego>"
"15splitHere46","1735548splitHere46","Q match<newline46mondego>q match<newline46mondego>z fail<newline46mondego>Z fail<newline46mondego>R match<newline46mondego>r match<newline46mondego>0 fail<newline46mondego>1 match<newline46mondego>2 match<newline46mondego>3 match<newline46mondego>4 match<newline46mondego>5 match<newline46mondego>6 match<newline46mondego>7 fail<newline46mondego>02 fail<newline46mondego>11 match<newline46mondego>17 fail<newline46mondego> match<newline46mondego>"
"16splitHere46","1735548splitHere46","Q match<newline46mondego>q match<newline46mondego>z fail<newline46mondego>Z fail<newline46mondego>R match<newline46mondego>r match<newline46mondego>0 fail<newline46mondego>1 match<newline46mondego>2 match<newline46mondego>3 match<newline46mondego>4 match<newline46mondego>5 match<newline46mondego>6 match<newline46mondego>7 fail<newline46mondego>02 fail<newline46mondego>11 fail<newline46mondego>17 fail<newline46mondego> fail<newline46mondego>"
"17splitHere46","1735548splitHere46","public static void testIt(String sample) {<newline46mondego>	System.out.print(sample+<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>	Pattern pattern = Pattern.compile(<doubleQuotes46>\\s*([RQrq1-6])\\s*<doubleQuotes46>);<newline46mondego>	Matcher matcher = pattern.matcher(sample);<newline46mondego><newline46mondego>	if (matcher.matches()) {<newline46mondego>		System.out.println(<doubleQuotes46>match '<doubleQuotes46>+matcher.group(1)+<doubleQuotes46>'<doubleQuotes46>);<newline46mondego>	} else {<newline46mondego>		System.out.println(<doubleQuotes46>fail<doubleQuotes46>);<newline46mondego>	}<newline46mondego>}<newline46mondego>"
"18splitHere46","1735548splitHere46","testIt(<doubleQuotes46> 6<doubleQuotes46>);// ignore space tests<newline46mondego>testIt(<doubleQuotes46> 7<doubleQuotes46>);// ignore space tests<newline46mondego>testIt(<doubleQuotes46>6 <doubleQuotes46>);// ignore space tests<newline46mondego>testIt(<doubleQuotes46>7 <doubleQuotes46>);// ignore space tests<newline46mondego><newline46mondego>    6 match '6'<newline46mondego>    7 fail<newline46mondego>   6  match '6'<newline46mondego>   7  fail<newline46mondego>"
"19splitHere46","1735686splitHere46","public class FibMain {<newline46mondego>    public static void main(String... args) {<newline46mondego>        {<newline46mondego>            long start = System.nanoTime();<newline46mondego>            System.out.println(iteration_fib(Integer.parseInt(args[0])));<newline46mondego>            long time = System.nanoTime() - start;<newline46mondego>            System.out.printf(<doubleQuotes46>Iteration took %,d us%n<doubleQuotes46>, time /  1000);<newline46mondego>        }<newline46mondego>        {<newline46mondego>            long start = System.nanoTime();<newline46mondego>            System.out.println(recursive_fib(Integer.parseInt(args[0])));<newline46mondego>            long time = System.nanoTime() - start;<newline46mondego>            System.out.printf(<doubleQuotes46>Recursion took %,d us%n<doubleQuotes46>, time /  1000);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static long iteration_fib(int n) {<newline46mondego>        long t1 = 1;<newline46mondego>        long t2 = 1;<newline46mondego>        while (n-- > 2) {<newline46mondego>            long t = t2;<newline46mondego>            t2 += t1;<newline46mondego>            t1 = t;<newline46mondego>        }<newline46mondego>        return t2;<newline46mondego>    }<newline46mondego><newline46mondego>    public static long recursive_fib(int n) {<newline46mondego>        if (n <= 2) return 1;<newline46mondego>        return recursive_fib(n - 1) + recursive_fib(n - 2);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"20splitHere46","1735686splitHere46","public static long iteration_fib(int);<newline46mondego>  Code:<newline46mondego>   0:   lconst_1<newline46mondego>   1:   lstore_1<newline46mondego>   2:   lconst_1<newline46mondego>   3:   lstore_3<newline46mondego>   4:   iload_0<newline46mondego>   5:   iinc    0, -1<newline46mondego>   8:   iconst_2<newline46mondego>   9:   if_icmple       25<newline46mondego>   12:  lload_3<newline46mondego>   13:  lstore  5<newline46mondego>   15:  lload_3<newline46mondego>   16:  lload_1<newline46mondego>   17:  ladd<newline46mondego>   18:  lstore_3<newline46mondego>   19:  lload   5<newline46mondego>   21:  lstore_1<newline46mondego>   22:  goto    4<newline46mondego>   25:  lload_3<newline46mondego>   26:  lreturn<newline46mondego><newline46mondego>public static long recursive_fib(int);<newline46mondego>  Code:<newline46mondego>   0:   iload_0<newline46mondego>   1:   iconst_2<newline46mondego>   2:   if_icmpgt       7<newline46mondego>   5:   lconst_1<newline46mondego>   6:   lreturn<newline46mondego>   7:   iload_0<newline46mondego>   8:   iconst_1<newline46mondego>   9:   isub<newline46mondego>   10:  invokestatic    #13; //Method recursive_fib:(I)J<newline46mondego>   13:  iload_0<newline46mondego>   14:  iconst_2<newline46mondego>   15:  isub<newline46mondego>   16:  invokestatic    #13; //Method recursive_fib:(I)J<newline46mondego>   19:  ladd<newline46mondego>   20:  lreturn<newline46mondego>"
"21splitHere46","1735686splitHere46","701408733<newline46mondego>Iteration took 495 us<newline46mondego>701408733<newline46mondego>Recursion took 19,174,036 us<newline46mondego>"
"22splitHere46","1735821splitHere46","Object[] objects = structure.entrySet().toArray();<newline46mondego>Object nextObj = structure[4];<newline46mondego>"
"23splitHere46","1735821splitHere46","java.util.Map.Entry<K, V> entry = (java.util.Map.Entry<K, V>) structure[4];<newline46mondego>K key = entry.getKey();<newline46mondego>V value = entry.getValue();<newline46mondego>"
"24splitHere46","1735855splitHere46","data[0] = (byte) (width & 0xFF);<newline46mondego>data[1] = (byte) ((width >> 8) & 0xFF);<newline46mondego>"
"25splitHere46","1735855splitHere46","& 0xFF"
"26splitHere46","1735855splitHere46",">> 8"
"27splitHere46","1735855splitHere46","int"
"28splitHere46","1735855splitHere46","int"
"29splitHere46","1735855splitHere46","byte"
"30splitHere46","1735855splitHere46","byte"
"31splitHere46","1735855splitHere46",">>"
"32splitHere46","1735855splitHere46","int"
"33splitHere46","1735855splitHere46",">>>"
"34splitHere46","1735855splitHere46",">>"
"35splitHere46","1735903splitHere46","merge(A, B):<newline46mondego>  C = empty list<newline46mondego><newline46mondego>  While A and B are not empty:<newline46mondego>    If the first element of A is smaller than the first element of B:<newline46mondego>      Remove first element of A.<newline46mondego>      Add it to the end of C.<newline46mondego>    Otherwise:<newline46mondego>      Remove first element of B.<newline46mondego>      Add it to the end of C.<newline46mondego><newline46mondego>  If A or B still contains elements, add them to the end of C.<newline46mondego><newline46mondego>mergeSort(A):<newline46mondego>  if length of A is 1:<newline46mondego>    return A<newline46mondego><newline46mondego>  Split A into two lists, L and R.<newline46mondego><newline46mondego>  Q = merge(mergeSort(L), mergeSort(R))<newline46mondego><newline46mondego>  return Q<newline46mondego>"
"36splitHere46","1735903splitHere46","public static void mergeSort(int[] array, int left,  int lHigh, int right, int rHigh) {   <newline46mondego>        // what do lHigh and rHigh represent?<newline46mondego><newline46mondego>        int elements = (rHigh - lHigh +1) ;     <newline46mondego>        int[] temp = new int[elements];<newline46mondego>        int num = left;<newline46mondego><newline46mondego>      // what does this while loop do **conceptually**? <newline46mondego>      while ((left <= lHigh) && (right <= rHigh)){<newline46mondego>       if (a[left] <= a[right]) {<newline46mondego>          // where is 'pos' declared or defined?<newline46mondego>          temp[pos] = a[left];<newline46mondego>          // where is leftLow declared or defined? Did you mean 'left' instead?<newline46mondego>          leftLow ++;<newline46mondego>        }<newline46mondego>        else {<newline46mondego>          temp[num] = a[right];<newline46mondego>          right ++;<newline46mondego>        }<newline46mondego>       num++;   <newline46mondego>      }<newline46mondego><newline46mondego>     // what does this while loop do **conceptually**?<newline46mondego>     while (left <= right){<newline46mondego>        // At this point, what is the value of 'num'?<newline46mondego>        temp[num] = a[left];<newline46mondego>        left += 1;<newline46mondego>        num += 1;   <newline46mondego>     }<newline46mondego>     while (right <= rHigh) {<newline46mondego>        temp[num] = a[right];<newline46mondego>        right += 1;<newline46mondego>        num += 1;       <newline46mondego>     }<newline46mondego>     // Maybe you meant a[i] = temp[i]?<newline46mondego>     for (int i=0; i < elements; i++){<newline46mondego>       // what happens if rHigh is less than elements at this point? Could<newline46mondego>       // rHigh ever become negative? This would be a runtime error if it did<newline46mondego>       a[rHigh] = temp[rHigh];<newline46mondego>       rHigh -= 1;      <newline46mondego>     }<newline46mondego>"
"37splitHere46","1735903splitHere46","O(N * log N)"
"38splitHere46","1735903splitHere46","O(N^2)"
"39splitHere46","1735903splitHere46","// Precondition: array[left..lHigh] is sorted and array[right...rHigh] is sorted.<newline46mondego>  // Postcondition: array[left..rHigh] contains the same elements of the above parts, sorted.<newline46mondego>  public static void mergeSort(int[] array, int left,  int lHigh, int right, int rHigh) {   <newline46mondego>        // temp[] needs to be as large as the number of elements you're sorting (not half!)<newline46mondego>        //int elements = (rHigh - lHigh +1) ;<newline46mondego>        int elements = rHigh - left;<newline46mondego><newline46mondego>        int[] temp = new int[elements];<newline46mondego><newline46mondego>        // this is your index into the temp array<newline46mondego>        int num = left;<newline46mondego><newline46mondego>        // now you need to create indices into your two lists<newline46mondego>        int iL = left;<newline46mondego>        int iR = right;<newline46mondego><newline46mondego>        // Pseudo code... when you code this, make use of iR, iL, and num!<newline46mondego>        while( temp is not full ) {<newline46mondego>           if( left side is all used up ) {<newline46mondego>             copy rest of right side in.<newline46mondego>             make sure that at the end of this temp is full so the<newline46mondego>               while loop quits.<newline46mondego>           }<newline46mondego>           else if ( right side is all used up) {<newline46mondego>             copy rest of left side in.<newline46mondego>             make sure that at the end of this temp is full so the<newline46mondego>               while loop quits.<newline46mondego>           }<newline46mondego>           else if (array[iL] < array[iR]) { ... }<newline46mondego>           else if (array[iL] >= array[iR]) { ... }<newline46mondego>        }<newline46mondego> }<newline46mondego>"
"40splitHere46","1736253splitHere46","main()"
"41splitHere46","1736253splitHere46","private void loop() {<newline46mondego>        while (true){<newline46mondego>           try{<newline46mondego>               BufferedReader br = new BufferedReader(new InputStreamReader(System.in));<newline46mondego><newline46mondego>               //other logic goes here...<newline46mondego>               if(br.readLine().equalsIgnoreCase(<doubleQuotes46>Q<doubleQuotes46>)){<newline46mondego>                   return; // You're done and you are returning to the caller.<newline46mondego>               }<newline46mondego>           }<newline46mondego>           catch (IOException ioe) {<newline46mondego>               System.out.println(<doubleQuotes46>IO error trying to read your selection<doubleQuotes46>);<newline46mondego>           }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        loop();<newline46mondego>    }<newline46mondego>"
"42splitHere46","1736253splitHere46","System.exit(0)"
"43splitHere46","1736461splitHere46","execute()"
"44splitHere46","1736461splitHere46","execute()"
"45splitHere46","1736461splitHere46","begin()"
"46splitHere46","1736461splitHere46","CommandQuit.execute()"
"47splitHere46","1736461splitHere46","aMachine"
"48splitHere46","1736461splitHere46","begin()"
"49splitHere46","1736461splitHere46","while (aMachine.stillRunning()) {  // instead of while (true)<newline46mondego>    ...<newline46mondego>    // This will clear aMachine.stillRunning() if the user quits.<newline46mondego>    aMachine.getCommand(select.toUpperCase()).execute(aMachine);<newline46mondego>}<newline46mondego>"
"50splitHere46","1736520splitHere46","UserAccount"
"51splitHere46","1736520splitHere46","Group"
"52splitHere46","1736520splitHere46","@OneToMany(targetEntity=GroupImpl.class, cascade{CascadeType.ALL},mappedBy=<doubleQuotes46>userAccount<doubleQuotes46>)<newline46mondego>"
"53splitHere46","1736520splitHere46","UserAccount"
"54splitHere46","1736520splitHere46","UserAccount"
"55splitHere46","1736520splitHere46","public void addGroup(Group group){<newline46mondego>     group.setUserAccount(this);<newline46mondego>     groups.add(group);<newline46mondego>}<newline46mondego>"
"56splitHere46","1736520splitHere46","public void removeGroup(Group group){<newline46mondego>    group.setUserAccount(null);<newline46mondego>    groups.remove(group);<newline46mondego>}<newline46mondego>"
"57splitHere46","1736520splitHere46","UserAccount ua = //load user account object<newline46mondego>for(Group g : ua.getGroups())<newline46mondego>      ua.removeGroup(g);<newline46mondego><newline46mondego>session.delete(ua);<newline46mondego>"
"58splitHere46","1736520splitHere46","DELETE_ORPHAN"
"59splitHere46","1736520splitHere46","groups"
"60splitHere46","1736646splitHere46","<select id=<doubleQuotes46>sel1<doubleQuotes46> name=<doubleQuotes46>animal<doubleQuotes46>><newline46mondego><c:forEach var=<doubleQuotes46>animal<doubleQuotes46> items=<doubleQuotes46>${model.animals}<doubleQuotes46>><newline46mondego><option value=<doubleQuotes46><c:out value=<doubleQuotes46>${animal.id}<doubleQuotes46>/><c:out value=<doubleQuotes46>${animal.name}<doubleQuotes46>/></option><newline46mondego></c:forEach><newline46mondego></select><newline46mondego>"
"61splitHere46","1736646splitHere46","<select id=<doubleQuotes46>sel1<doubleQuotes46> name=<doubleQuotes46>animal<doubleQuotes46>><newline46mondego></select><newline46mondego><newline46mondego><script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>$(function() {<newline46mondego>  $.get('/server/getanimals', function(data, textStatus) {<newline46mondego>    var sel = $(<doubleQuotes46>#sel1<doubleQuotes46>);<newline46mondego>    for (var i=0; i<data.length; i++) {<newline46mondego>      sel.append('<option value=<doubleQuotes46>' + data[i].id + '<doubleQuotes46>>' + data[i].name + '</option>');<newline46mondego>    }<newline46mondego>  }, 'json');<newline46mondego>});<newline46mondego></script><newline46mondego>"
"62splitHere46","1736646splitHere46","/server/getanimals"
"63splitHere46","1736779splitHere46","Properties"
"64splitHere46","1736779splitHere46","Java Compiler"
"65splitHere46","1736779splitHere46","Compiler compliance level"
"66splitHere46","1736830splitHere46","bin"
"67splitHere46","1736830splitHere46","add()"
"68splitHere46","1736830splitHere46","remove()"
"69splitHere46","1736830splitHere46","head"
"70splitHere46","1736830splitHere46","tail"
"71splitHere46","1736830splitHere46","digit = number % 10"
"72splitHere46","1737132splitHere46","group(X)"
"73splitHere46","1737132splitHere46","X"
"74splitHere46","1737132splitHere46","Matcher m = Pattern.compile(<doubleQuotes46>>([^<>]*)</a><doubleQuotes46>).matcher(html);<newline46mondego>while (m.find()) {<newline46mondego> resp.getWriter().println(m.group(1));<newline46mondego>}<newline46mondego>"
"75splitHere46","1737132splitHere46","import java.io.*;<newline46mondego>import javax.swing.text.*;<newline46mondego>import javax.swing.text.html.*;<newline46mondego>import javax.swing.text.html.parser.*;<newline46mondego><newline46mondego>public class HtmlParseDemo {<newline46mondego>   public static void main(String [] args) throws Exception {<newline46mondego>       Reader reader = new StringReader(<doubleQuotes46>foo <a href=\<doubleQuotes46>#\<doubleQuotes46>>Link 1</a> bar <a href=\<doubleQuotes46>#\<doubleQuotes46>>Link <b>2</b> more</a> baz<doubleQuotes46>);<newline46mondego>       HTMLEditorKit.Parser parser = new ParserDelegator();<newline46mondego>       parser.parse(reader, new LinkParser(), true);<newline46mondego>       reader.close();<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class LinkParser extends HTMLEditorKit.ParserCallback {<newline46mondego><newline46mondego>    private boolean linkStarted = false;<newline46mondego>    private StringBuilder b = new StringBuilder();<newline46mondego><newline46mondego>    public void handleText(char[] data, int pos) {<newline46mondego>        if(linkStarted) b.append(new String(data));<newline46mondego>    }<newline46mondego><newline46mondego>    public void handleStartTag(HTML.Tag t, MutableAttributeSet a, int pos) {<newline46mondego>        if(t == HTML.Tag.A) linkStarted = true;<newline46mondego>    }<newline46mondego><newline46mondego>    public void handleEndTag(HTML.Tag t, int pos) {<newline46mondego>        if(t == HTML.Tag.A) {<newline46mondego>            linkStarted = false;<newline46mondego>            System.out.println(b);<newline46mondego>            b = new StringBuilder();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"76splitHere46","1737132splitHere46","Link 1<newline46mondego>Link 2 more<newline46mondego>"
"77splitHere46","1737334splitHere46","array[][] := ...<newline46mondego>position := ...<newline46mondego>sum := 0<newline46mondego><newline46mondego>//add the contents of the outer array<newline46mondego>for i := 0 to array.length do<newline46mondego>	sum := sum + array[i][position]<newline46mondego><newline46mondego>	//if we're at (pos, pos) then start looping over the inner array<newline46mondego>	if i = position then<newline46mondego><newline46mondego>		//note we start at pos + 1 so as not to count array[i][position] twice<newline46mondego>		for j := position + 1 to array[j].length do<newline46mondego>			sum := sum + array[i][j]<newline46mondego>		end<newline46mondego><newline46mondego>	    break from loop  <newline46mondego><newline46mondego>	end<newline46mondego>end<newline46mondego>"
"78splitHere46","1737355splitHere46","public static int average(Integer... ints) {<newline46mondego>   for (Integer i : ints) {<newline46mondego>       // sum here...<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"79splitHere46","1737849splitHere46","Scanner"
"80splitHere46","1737849splitHere46","BufferedReader br = new BufferedReader(new FileReader(<doubleQuotes46>myfile.txt<doubleQuotes46>))<newline46mondego>"
"81splitHere46","1737849splitHere46","String line = br.readLine()<newline46mondego>"
"82splitHere46","1738419splitHere46","Vector v = new Vector(20);<newline46mondego>/* This vector will have the starting capacity<newline46mondego>   of 20 elements, before it has to increase<newline46mondego>   its capacity */<newline46mondego><newline46mondego><newline46mondego>Vector v = new Vector(10, 5);<newline46mondego>/* This vector will have an initial capacity<newline46mondego>   of 10 elements, and when it overflows the<newline46mondego>   second parameter tells the vector to increase<newline46mondego>   its capacity by 5. */<newline46mondego>"
"83splitHere46","1738419splitHere46","/* Vector instantiation goes here */<newline46mondego><newline46mondego>boolean keepRunningFlag = true;<newline46mondego>while(keepRunningFlag) {<newline46mondego>    if (!vector.isEmpty()) {<newline46mondego>        Object o = vector.remove(vector.size() - 1);<newline46mondego>        keepRunningFlag = doStuffWithVectorElement(o);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"84splitHere46","1738721splitHere46","URLClassLoader"
"85splitHere46","1738721splitHere46","Class.forName(String,ClassLoader);"
"86splitHere46","1738721splitHere46","URLClassLoader"
"87splitHere46","1738721splitHere46","@Test<newline46mondego>public void testUrlClassLoader() throws Exception {<newline46mondego>	Random random = new Random();<newline46mondego>	String newClassName = <doubleQuotes46>Foo<doubleQuotes46> + random.nextInt(1000);<newline46mondego>	JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();<newline46mondego>	StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null);<newline46mondego>	List<File> files = new ArrayList<File>();<newline46mondego>	File sourceFolder = new File(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>	File sourceFile = new File(sourceFolder, newClassName + <doubleQuotes46>.java<doubleQuotes46>);<newline46mondego>	FileWriter fileWriter = new FileWriter(sourceFile);<newline46mondego>	fileWriter.write(<doubleQuotes46>public class <doubleQuotes46> + newClassName + <doubleQuotes46> { { System.out.println(\<doubleQuotes46><doubleQuotes46><newline46mondego>			+ newClassName + <doubleQuotes46> loaded\<doubleQuotes46>); }}<doubleQuotes46>);<newline46mondego>	fileWriter.close();<newline46mondego>	files.add(sourceFile);<newline46mondego>	Iterable<? extends JavaFileObject> compilationUnits1 = fileManager<newline46mondego>			.getJavaFileObjectsFromFiles(files);<newline46mondego>	compiler.getTask(null, fileManager, null, null, null, compilationUnits1).call();<newline46mondego>	fileManager.close();<newline46mondego><newline46mondego>	URL url = sourceFolder.toURI().toURL();<newline46mondego>	URLClassLoader urlClassLoader = new URLClassLoader(new URL[] { url });<newline46mondego>	Object newInstance = urlClassLoader.loadClass(newClassName).newInstance();<newline46mondego>	assertEquals(newClassName, newInstance.getClass().getName());<newline46mondego>}<newline46mondego>"
"88splitHere46","1739150splitHere46","man 3 if_nametoindex"
"89splitHere46","1739150splitHere46","LIBRARY<newline46mondego>     Standard C Library (libc, -lc)<newline46mondego>"
"90splitHere46","1739468splitHere46","target"
"91splitHere46","1739468splitHere46","filteredCollection"
"92splitHere46","1739468splitHere46","filter()"
"93splitHere46","1739608splitHere46","<target name=<doubleQuotes46>run<doubleQuotes46> depends=<doubleQuotes46>compile<doubleQuotes46>><newline46mondego>	<java classname=<doubleQuotes46>com.mypackage.Main<doubleQuotes46> fork=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>		<classpath><newline46mondego>			<dirset dir=<doubleQuotes46>${other.dir}<doubleQuotes46>><newline46mondego>				<include name=<doubleQuotes46>out/**<doubleQuotes46>/><newline46mondego>			</dirset><newline46mondego>			<pathelement location=<doubleQuotes46>${bin}<doubleQuotes46> /><newline46mondego>		</classpath><newline46mondego>	</java><newline46mondego></target><newline46mondego>"
"94splitHere46","1739721splitHere46","class AShell <T extends ObjectA>{<newline46mondego><newline46mondego>protected UltraTable<T> tableA;<newline46mondego><newline46mondego>protected List<T> getAObjects() {<newline46mondego>    return null; // the list is created here}<newline46mondego>}<newline46mondego>"
"95splitHere46","1739805splitHere46","int count = 10;<newline46mondego>int total = 20;<newline46mondego>DecimalFormat dec = new DecimalFormat(<doubleQuotes46>#.00<doubleQuotes46>);<newline46mondego>double rawPercent = ( (double)(count) / (double)(total) ) * 100.00;<newline46mondego><newline46mondego>double percentage = Double.valueOf(dec.format(rawPercent));<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>DF Version: <doubleQuotes46> + dec.format(rawPercent));<newline46mondego>System.out.println(<doubleQuotes46>double version: <doubleQuotes46> + percentage);<newline46mondego>"
"96splitHere46","1739805splitHere46","<doubleQuotes46>DF Version: 50.00<doubleQuotes46><newline46mondego><doubleQuotes46>double version: 50.0<doubleQuotes46><newline46mondego>"
"97splitHere46","1739867splitHere46","GOMAXPROCS()"
"98splitHere46","1739867splitHere46","runtime.GOMAXPROCS(4); //somewhere in main"
"99splitHere46","1740450splitHere46","s1.equals(s4)<newline46mondego>"
"100splitHere46","1740467splitHere46","http://www.novell.com/coolsolutions/feature/15380.html<newline46mondego>"
"101splitHere46","1740467splitHere46","#!/bin/bash<newline46mondego>#<newline46mondego># tomcat<newline46mondego>#<newline46mondego># chkconfig:<newline46mondego># description:  Start up the Tomcat servlet engine.<newline46mondego><newline46mondego># Source function library.<newline46mondego>. /etc/init.d/functions<newline46mondego><newline46mondego><newline46mondego>RETVAL=$?<newline46mondego>CATALINA_HOME=<doubleQuotes46>/usr/apps/apache/tomcat/jakarta-tomcat-4.0.4<doubleQuotes46><newline46mondego><newline46mondego>case <doubleQuotes46>$1<doubleQuotes46> in<newline46mondego> start)<newline46mondego>        if [ -f $CATALINA_HOME/bin/startup.sh ];<newline46mondego>          then<newline46mondego>      echo $<doubleQuotes46>Starting Tomcat<doubleQuotes46><newline46mondego>            /bin/su tomcat $CATALINA_HOME/bin/startup.sh<newline46mondego>        fi<newline46mondego>  ;;<newline46mondego> stop)<newline46mondego>        if [ -f $CATALINA_HOME/bin/shutdown.sh ];<newline46mondego>          then<newline46mondego>      echo $<doubleQuotes46>Stopping Tomcat<doubleQuotes46><newline46mondego>            /bin/su tomcat $CATALINA_HOME/bin/shutdown.sh<newline46mondego>        fi<newline46mondego>  ;;<newline46mondego> *)<newline46mondego>  echo $<doubleQuotes46>Usage: $0 {start|stop}<doubleQuotes46><newline46mondego>  exit 1<newline46mondego>  ;;<newline46mondego>esac<newline46mondego>"
"102splitHere46","1740566splitHere46","java -jar metro-2_0-ea.jar<newline46mondego>"
"103splitHere46","1740567splitHere46","public class C1 {<newline46mondego><newline46mondego>    static public void M1() {<newline46mondego>        System.out.println(<doubleQuotes46>C1.M1().<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    static public void main(String ... Args) {<newline46mondego>        M1();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class C2 extends C1 {<newline46mondego><newline46mondego>    static public void M1() {<newline46mondego>        System.out.println(<doubleQuotes46>C2.M1().<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    static public void main(String ... Args) {<newline46mondego>        M1();<newline46mondego>        C1.main(Args);<newline46mondego>    }<newline46mondego><newline46mondego>}"
"104splitHere46","1740567splitHere46","C2.main(null)"
"105splitHere46","1740567splitHere46","C2.M1().<newline46mondego>C1.M1()."
"106splitHere46","1740567splitHere46","M1()"
"107splitHere46","1740567splitHere46","M1()"
"108splitHere46","1740567splitHere46","main()"
"109splitHere46","1740567splitHere46","C1                has static method M1.<newline46mondego>C2 extends C1 and has static method M1.<newline46mondego>C3 extends C2."
"110splitHere46","1740567splitHere46","C1.M1()"
"111splitHere46","1740567splitHere46","C2.M1()"
"112splitHere46","1740567splitHere46","C3.M1()"
"113splitHere46","1740567splitHere46","C2.M1()"
"114splitHere46","1740567splitHere46","C1_M()"
"115splitHere46","1740567splitHere46","C2_M()"
"116splitHere46","1740567splitHere46","String aClsName = <doubleQuotes46>C1<doubleQuotes46>; // <doubleQuotes46>C2<doubleQuotes46>;<newline46mondego>Class aCls = Class.forName(aClsName);<newline46mondego>Method   aMth = aCls.getMethod(<doubleQuotes46>M1<doubleQuotes46>);   // M1 of C1 or C2 depends on the class name.<newline46mondego>aMth.invoke(null);<newline46mondego>"
"117splitHere46","1740567splitHere46","Object aObj = new C1(); // new C2();<newline46mondego>Class aCls = aObj.getClass();<newline46mondego>Method   aMth = aCls.getMethod(<doubleQuotes46>M1<doubleQuotes46>);   // M1 of C1 or C2 depends on the class of the object.<newline46mondego>aMth.invoke(null);<newline46mondego>"
"118splitHere46","1740567splitHere46","writeObject(...)"
"119splitHere46","1740703splitHere46","gameplay"
"120splitHere46","1740703splitHere46","loader"
"121splitHere46","1740703splitHere46","Serializable"
"122splitHere46","1740705splitHere46","'.'"
"123splitHere46","1740705splitHere46","$cat UsingC.java  UsingS.java  <newline46mondego>public class UsingC { <newline46mondego>    public static void main( String [] args ) { <newline46mondego>        String someString  = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        String anotherString = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>        int i = 0;<newline46mondego>        while( i++ < 10000000 ) { <newline46mondego>            String a = someString + '.' + anotherString;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>public class UsingS{ <newline46mondego>    public static void main( String [] args ) { <newline46mondego>        String someString  = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        String anotherString = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>        int i = 0;<newline46mondego>        while( i++ < 10000000 ) { <newline46mondego>            String a = someString + <doubleQuotes46>.<doubleQuotes46> + anotherString;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>$for i in 1 2 3 4 5 ; do time java UsingC; done<newline46mondego><newline46mondego>real    0m1.643s<newline46mondego>user    0m1.424s<newline46mondego>sys 0m0.108s<newline46mondego><newline46mondego>real    0m1.670s<newline46mondego>user    0m1.468s<newline46mondego>sys 0m0.056s<newline46mondego><newline46mondego>real    0m2.023s<newline46mondego>user    0m1.448s<newline46mondego>sys 0m0.080s<newline46mondego><newline46mondego>real    0m1.669s<newline46mondego>user    0m1.432s<newline46mondego>sys 0m0.088s<newline46mondego><newline46mondego>real    0m1.674s<newline46mondego>user    0m1.416s<newline46mondego>sys 0m0.104s<newline46mondego>$for i in 1 2 3 4 5 ; do time java UsingS; done<newline46mondego><newline46mondego>real    0m2.344s<newline46mondego>user    0m1.584s<newline46mondego>sys 0m0.136s<newline46mondego><newline46mondego>real    0m2.057s<newline46mondego>user    0m1.640s<newline46mondego>sys 0m0.084s<newline46mondego><newline46mondego>real    0m2.112s<newline46mondego>user    0m1.732s<newline46mondego>sys 0m0.072s<newline46mondego><newline46mondego>real    0m2.482s<newline46mondego>user    0m1.704s<newline46mondego>sys 0m0.108s<newline46mondego><newline46mondego>real    0m2.134s<newline46mondego>user    0m1.788s<newline46mondego>sys 0m0.072s<newline46mondego>"
"124splitHere46","1740875splitHere46","Foo[] foo = new Foo[o2.length);<newline46mondego>  .... loop over o2 copying each element o2[i] into foo[i] like <doubleQuotes46>foo[i] = (Foo) o2[i]<doubleQuotes46><newline46mondego> System.out.println(foo[0].accountNumber);<newline46mondego> System.out.println(foo[1].accountNumber);<newline46mondego>"
"125splitHere46","1741054splitHere46","valueOf"
"126splitHere46","1741054splitHere46","Character"
"127splitHere46","1741054splitHere46","Character.valueOf(in)"
"128splitHere46","1741054splitHere46","new Character(in)"
"129splitHere46","1741229splitHere46","// Passwords with only alphabetic characters.<newline46mondego>for (int i = 0; i < 8; i++) {<newline46mondego>    System.out.println(RandomStringUtils.randomAlphabetic(8));<newline46mondego>}<newline46mondego>System.out.println(<doubleQuotes46>--------<doubleQuotes46>);<newline46mondego>// Passwords with alphabetic and numeric characters.<newline46mondego>for (int i = 0; i < 8; i++) {<newline46mondego>    System.out.println(RandomStringUtils.randomAlphanumeric(8));<newline46mondego>}<newline46mondego>"
"130splitHere46","1741229splitHere46","zXHzaLdG<newline46mondego>oDtlFDdf<newline46mondego>bqPbXVfq<newline46mondego>tzQUWuxU<newline46mondego>qBHBRKQP<newline46mondego>uBLwSvnt<newline46mondego>gzBcTnIm<newline46mondego>yTUgXlCc<newline46mondego>--------<newline46mondego>khDzEFD2<newline46mondego>cHz1p6yJ<newline46mondego>3loXcBau<newline46mondego>F6NJAQr7<newline46mondego>PyfN079I<newline46mondego>8tJye7bu<newline46mondego>phfwpY6y<newline46mondego>62q27YRt<newline46mondego>"
"131splitHere46","1741229splitHere46","for (int i = 0; i < 8; i++) {<newline46mondego>    System.out.println(RandomStringUtils.random(8, <doubleQuotes46>abcDEF123<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"132splitHere46","1741229splitHere46","D13DD1Eb<newline46mondego>cac1Dac2<newline46mondego>FE1bD2DE<newline46mondego>2ab3Fb3D<newline46mondego>213cFEFD<newline46mondego>3c2FEDDF<newline46mondego>FDbFcc1E<newline46mondego>b2cD1c11<newline46mondego>"
"133splitHere46","1741248splitHere46","abstract class BaseTest{<newline46mondego><newline46mondego> @Test<newline46mondego> public void featureX(){<newline46mondego>    Type t = createInstance();<newline46mondego>    // do something with t<newline46mondego> }<newline46mondego><newline46mondego> abstract Type createInstance();<newline46mondego>}<newline46mondego><newline46mondego>ConcreteTest extends BaseTest{<newline46mondego><newline46mondego>    Type createInstace(){<newline46mondego>        return //instantiate concrete type here.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"134splitHere46","1741618splitHere46","Date d=new Date((long)phpTimeStamp*1000);<newline46mondego>"
"135splitHere46","1741686splitHere46","Date"
"136splitHere46","1741686splitHere46","Calendar"
"137splitHere46","1741686splitHere46","Calendar.getTime"
"138splitHere46","1741716splitHere46","<select style=<doubleQuotes46>font-family: monospace;<doubleQuotes46>><newline46mondego>    <option>Data1& & & & & & & & & & & & & & & |& Data2& & & & & & & & & & & |& Data3</option><newline46mondego>    <option>DataLargerThan1& & & & & |& Data2& & & & & & & & & & & |& DataLargerThan3</option><newline46mondego>    <option>DataMuchLargerThan1& |& DataLargerThan2& |& Data3</option><newline46mondego></select><newline46mondego>"
"139splitHere46","1741731splitHere46","values().length"
"140splitHere46","1741731splitHere46","List"
"141splitHere46","1741731splitHere46","private static final int size = Configuration.values().length;<newline46mondego>"
"142splitHere46","1741731splitHere46","values().length"
"143splitHere46","1741731splitHere46","values()"
"144splitHere46","1741731splitHere46","EnumSet.allOf().size()"
"145splitHere46","1741731splitHere46","size"
"146splitHere46","1741765splitHere46","<f:view locale=<doubleQuotes46>nl<doubleQuotes46>><newline46mondego>    <h:outputText value=<doubleQuotes46>#{numbers.someDouble}<doubleQuotes46>><newline46mondego>      <f:convertNumber pattern=<doubleQuotes46>#,##0.00;(#,##0.00)<doubleQuotes46> /><newline46mondego>    </h:outputText><newline46mondego>    <br /><newline46mondego>    <h:outputText value=<doubleQuotes46>#{numbers.someDouble}<doubleQuotes46>><newline46mondego>      <f:convertNumber locale=<doubleQuotes46>en<doubleQuotes46> pattern=<doubleQuotes46>#,##0.00;(#,##0.00)<doubleQuotes46> /><newline46mondego>    </h:outputText><newline46mondego>  </f:view><newline46mondego>"
"147splitHere46","1741765splitHere46","12.341.234,43<newline46mondego>12,341,234.43<newline46mondego>"
"148splitHere46","1741954splitHere46","InputStream"
"149splitHere46","1741954splitHere46","HttpConnectionManager"
"150splitHere46","1741954splitHere46","HttpConnection"
"151splitHere46","1742104splitHere46","main"
"152splitHere46","1742104splitHere46","Action"
"153splitHere46","1742104splitHere46","ActionListener"
"154splitHere46","1742104splitHere46","JComponent"
"155splitHere46","1742104splitHere46","ActionMap"
"156splitHere46","1742104splitHere46","JToolBar"
"157splitHere46","1742104splitHere46","JComponent"
"158splitHere46","1742104splitHere46","assert SwingUtilities.isEventDispatchThread()"
"159splitHere46","1742104splitHere46","TaskManager"
"160splitHere46","1742104splitHere46","SwingWorker"
"161splitHere46","1742104splitHere46","Task"
"162splitHere46","1742104splitHere46","TaskManager"
"163splitHere46","1742104splitHere46","setDescription(String)"
"164splitHere46","1742104splitHere46","setThrowable(Throwable)"
"165splitHere46","1742104splitHere46","cancel()"
"166splitHere46","1742104splitHere46","Observer"
"167splitHere46","1742104splitHere46","Observable"
"168splitHere46","1742104splitHere46","ChangeListener"
"169splitHere46","1742104splitHere46","PropertyChangeListener"
"170splitHere46","1742104splitHere46","Observer"
"171splitHere46","1742104splitHere46","Object"
"172splitHere46","1742104splitHere46","JTable"
"173splitHere46","1742104splitHere46","JList"
"174splitHere46","1742104splitHere46","JList"
"175splitHere46","1742104splitHere46","DefaultTableModel"
"176splitHere46","1742104splitHere46","DefaultTableModel"
"177splitHere46","1742104splitHere46","AbstractTableModel"
"178splitHere46","1742104splitHere46","List"
"179splitHere46","1742245splitHere46","TopDocs hits = searcher.search(query, searchFilter, max);<newline46mondego>ScoreDoc[] scoreDocs = hits.scoreDocs;<newline46mondego>for (ScoreDoc scoreDoc : scoreDocs) {<newline46mondego>  String explanation = searcher.explain(query, scoreDoc.doc).toString();<newline46mondego>  Log.debug(explanation);<newline46mondego>}<newline46mondego>"
"180splitHere46","1742776splitHere46","int main()<newline46mondego>{<newline46mondego>    time t;<newline46mondego>}<newline46mondego>"
"181splitHere46","1742776splitHere46","t.simpleDate;<newline46mondego>"
"182splitHere46","1742776splitHere46","t.perciseDate;<newline46mondego>"
"183splitHere46","1742776splitHere46","0x12345678;<newline46mondego>"
"184splitHere46","1742776splitHere46","struct Msg<newline46mondego>{<newline46mondego>   int msgType;<newline46mondego>   double Val1;<newline46mondego>   double Val2;<newline46mondego>}; // assuming packing on 32-bit boundary<newline46mondego><newline46mondego>union<newline46mondego>{<newline46mondego>   Msg msg;<newline46mondego>   unsigned char msgAsBinary[20];<newline46mondego>};<newline46mondego>"
"185splitHere46","1742857splitHere46","public class MyStockPanel extends JPanel {<newline46mondego>  private final BlockingQueue<StockEvent> stockEvents;<newline46mondego><newline46mondego>  // Runnable invoked on event dispatch thread and responsible for applying any<newline46mondego>  // pending events to the table model.<newline46mondego>  private final Runnable processEventsRunnable = new Runnable() {<newline46mondego>    public void run() {<newline46mondego>      StockEvent evt;<newline46mondego><newline46mondego>      while ((evt = stockEvents.poll() != null) {<newline46mondego>        // Update table model and fire table event.<newline46mondego>        // Could optimise here by firing a single table changed event<newline46mondego>        // when the queue is empty if processing a large #events.<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  // Called by thread other than event dispatch thread.  Adds event to<newline46mondego>  // <doubleQuotes46>pending<doubleQuotes46> queue ready to be processed.<newline46mondego>  public void addStockEvent(StockEvent evt) {<newline46mondego>    stockEvents.add(evt);<newline46mondego><newline46mondego>    // Optimisation 1: Only invoke EDT if the queue was previously empty before<newline46mondego>    // adding this event.  If the size is 0 at this point then the EDT must have<newline46mondego>    // already been active and removed the event from the queue, and if the size<newline46mondego>    // is > 0 we know that the EDT must have already been invoked in a previous<newline46mondego>    // method call but not yet drained the queue (i.e. so no need to invoke it<newline46mondego>    // again).<newline46mondego>    if (stockEvents.size() == 1) {<newline46mondego>      // Optimisation 2: Do not create a new Runnable each time but use a stateless<newline46mondego>      // inner class to drain the queue and update the table model.<newline46mondego>      SwingUtilities.invokeLater(processEventsRunnable);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"186splitHere46","1743006splitHere46","accountService"
"187splitHere46","1743006splitHere46","AccountRmiServiceImpl"
"188splitHere46","1743006splitHere46","NullPointerException"
"189splitHere46","1743006splitHere46","AccountServiceImpl"
"190splitHere46","1743006splitHere46","AccountServiceImpl"
"191splitHere46","1743067splitHere46","if(A.equals(B) || B.equals(C) || A.equals(C))<newline46mondego>   // not unique<newline46mondego>"
"192splitHere46","1743067splitHere46","equals"
"193splitHere46","1743067splitHere46","null"
"194splitHere46","1743127splitHere46","super"
"195splitHere46","1743195splitHere46","(0xFF & ((int)header[1] << 8))<newline46mondego>"
"196splitHere46","1743195splitHere46","((0xFF & ((int)header[1])) << 8)<newline46mondego>"
"197splitHere46","1743195splitHere46","ByteBuffer buf = ByteBuffer.allocate(4);<newline46mondego>"
"198splitHere46","1743195splitHere46","while"
"199splitHere46","1743748splitHere46","ts()"
"200splitHere46","1743748splitHere46","ts()"
"201splitHere46","1743748splitHere46","ts()"
"202splitHere46","1743748splitHere46","A.ts()"
"203splitHere46","1743748splitHere46","B.ts()"
"204splitHere46","1743748splitHere46","ts()"
"205splitHere46","1743748splitHere46","ts()"
"206splitHere46","1743748splitHere46","final"
"207splitHere46","1743954splitHere46","import java.io.FileReader;<newline46mondego><newline46mondego>import javax.script.ScriptEngine;<newline46mondego>import javax.script.ScriptEngineManager;<newline46mondego><newline46mondego>public class RunScriptFile {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    ScriptEngineManager manager = new ScriptEngineManager();<newline46mondego>    ScriptEngine engine = manager.getEngineByName(<doubleQuotes46>js<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>      FileReader reader = new FileReader(args[0]);<newline46mondego>      engine.eval(reader);<newline46mondego>      reader.close();<newline46mondego>    } catch (Exception e) {<newline46mondego>      e.printStackTrace();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"208splitHere46","1743954splitHere46","javac RunScriptFile.java.<newline46mondego>You'll get <doubleQuotes46>RunScriptFile.class<doubleQuotes46><newline46mondego>"
"209splitHere46","1743954splitHere46","java RunScriptFile <myawesomescript.js><newline46mondego>"
"210splitHere46","1743994splitHere46","new Date(Long.MAX_VALUE)<newline46mondego>"
"211splitHere46","1744337splitHere46","OutputStream out = null;<newline46mondego>InputStream in = null;<newline46mondego>try {<newline46mondego>   out = /* some output stream */;<newline46mondego>   in = new java.util.GZIPInputStream(/*some stream*/);<newline46mondego>   byte[] buffer = new byte[4096];<newline46mondego>   int c = 0;<newline46mondego>   while (( c = in.read(buffer, 0, 4096)) > 0) {<newline46mondego>      out.write(buffer, 0, c);<newline46mondego>   }<newline46mondego>} finally {<newline46mondego>   if (in != null) {<newline46mondego>      in.close();<newline46mondego>   }<newline46mondego>   if (out != null) {<newline46mondego>      out.close();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"212splitHere46","1744733splitHere46","javax.mail.util.ByteArrayDataSource"
"213splitHere46","1744733splitHere46","DataSource source = new ByteArrayDataSource(pdffile, <doubleQuotes46>application/pdf<doubleQuotes46>);<newline46mondego>"
"214splitHere46","1744733splitHere46","FileDataSource"
"215splitHere46","1744733splitHere46","DataSource source = new FileDataSource(pdfpath);<newline46mondego>"
"216splitHere46","1745193splitHere46","oracle.sql.NUMBER"
"217splitHere46","1745193splitHere46","int"
"218splitHere46","1745229splitHere46","(ns erikcw)<newline46mondego><newline46mondego>(defn toHex8 [n] (format <doubleQuotes46>%08x<doubleQuotes46> n))        ; Just a guess!<newline46mondego><newline46mondego>                                           ; can't use str, that's predefined.<newline46mondego>(defn calculateChecksum [url]               ; I renamed the arg to url so I can use strn later.<newline46mondego>  (loop [strn url                          ; this will loop over chars in strn.<newline46mondego>         hash (cycle <doubleQuotes46>bjytk3lfj%3jklDskj<doubleQuotes46>) ; now hash repeats for as long as you need it.<newline46mondego>         key 1690912]                      ; modifying key along the way.<newline46mondego>    (prn strn key)                           ; debug print.<newline46mondego>    (let [k2 (bit-xor (bit-xor key (int (first hash))) (int (first strn)))<newline46mondego>          k3 (bit-or (bit-shift-right k2 23) (bit-shift-left k2 9))]<newline46mondego>      (if (empty? (rest strn))<newline46mondego>        (str <doubleQuotes46>8<doubleQuotes46> (toHex8 (bit-shift-right k3 8)) (toHex8 (bit-and k3 255)))<newline46mondego>        (recur (rest strn) (rest hash) k3)))))<newline46mondego><newline46mondego>(prn (calculateChecksum <doubleQuotes46>HowNowBrownCow<doubleQuotes46>))<newline46mondego>"
"219splitHere46","1745229splitHere46","toHex8"
"220splitHere46","1745229splitHere46","hash"
"221splitHere46","1745229splitHere46","strn"
"222splitHere46","1745229splitHere46","hash"
"223splitHere46","1745229splitHere46","(cycle)"
"224splitHere46","1745229splitHere46","bit-"
"225splitHere46","1745229splitHere46","<< 9"
"226splitHere46","1745229splitHere46","(reduce)"
"227splitHere46","1745229splitHere46","(defn next-key [key str-hash]<newline46mondego>  (let [str1 (first str-hash)<newline46mondego>        hash1 (second str-hash)<newline46mondego>        k2 (bit-xor (bit-xor key hash1) str1)]<newline46mondego>        (bit-or (bit-shift-right k2 23) (bit-shift-left k2 9))))<newline46mondego><newline46mondego>(defn calculateChecksum2 [url]<newline46mondego>  (let [kk<newline46mondego>    (reduce next-key 1690912<newline46mondego>      (partition 2                ; (72 98) (111 106) (119 121) ...<newline46mondego>        (map int                  ; 72 98 111 106 119 121<newline46mondego>          (interleave url (cycle <doubleQuotes46>bjytk3lfj%3jklDskj<doubleQuotes46>))))) ; <doubleQuotes46>HbojwyNt...<doubleQuotes46><newline46mondego>  ]<newline46mondego>  (str <doubleQuotes46>8<doubleQuotes46> (toHex8 (bit-shift-right kk 8)) (toHex8 (bit-and kk 255)))))<newline46mondego><newline46mondego>(prn (calculateChecksum2 <doubleQuotes46>HowNowBrownCow<doubleQuotes46>))<newline46mondego>"
"228splitHere46","1745229splitHere46","next-key"
"229splitHere46","1745229splitHere46","reduce"
"230splitHere46","1745457splitHere46","public class Driver {<newline46mondego>    public static void main(String[] args) {<newline46mondego>    	final JFrame frame = new JFrame(<doubleQuotes46>JLabel Test<doubleQuotes46>);<newline46mondego>    	frame.setSize(160,120);<newline46mondego>    	frame.getContentPane().add(<newline46mondego>    		new JLabel(<doubleQuotes46>The quick brown fox jumped over the lazy dog.<doubleQuotes46>) );<newline46mondego>    	frame.setVisible(true);<newline46mondego>    }<newline46mondego>}"
"231splitHere46","1745640splitHere46","server = new Server();<newline46mondego><newline46mondego>        int port = Integer.parseInt(portNumber);<newline46mondego>        if (connector == null) {<newline46mondego>            connector = createConnector(port);<newline46mondego>        }<newline46mondego>        server.addConnector(connector);<newline46mondego><newline46mondego>        for (Webapp webapp : webapps) {<newline46mondego>            File sourceDirFile = new File(webapp.getWebappSourceDirectory());<newline46mondego>            WebAppContext wac = new WebAppContext(sourceDirFile.getCanonicalPath(), webapp.getContextPath());<newline46mondego>            WebAppClassLoader loader = new WebAppClassLoader(wac);<newline46mondego>            if (webapp.getLibDirectory() != null) {<newline46mondego>                Resource r = Resource.newResource(webapp.getLibDirectory());<newline46mondego>                loader.addJars(r);<newline46mondego>            }<newline46mondego>            if (webapp.getClasspathEntries() != null) {<newline46mondego>                for (String dir : webapp.getClasspathEntries()) {<newline46mondego>                    loader.addClassPath(dir);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            wac.setClassLoader(loader);<newline46mondego>            server.addHandler(wac);<newline46mondego>        }<newline46mondego>        server.start();<newline46mondego>"
"232splitHere46","1746074splitHere46","JAXBContext.newInstance()"
"233splitHere46","1746074splitHere46","JAXBContext"
"234splitHere46","1746103splitHere46","singleton"
"235splitHere46","1746103splitHere46","ConcurrentModificationException"
"236splitHere46","1746103splitHere46","session"
"237splitHere46","1746103splitHere46","prototype"
"238splitHere46","1746224splitHere46","public static Queue<String> topoSort(final DirectedGraph<String, DefaultEdge> g) {<newline46mondego>"
"239splitHere46","1746224splitHere46","public void doSomething(int i, int j)<newline46mondego>{<newline46mondego>  final int n = i + j; // must be declared final<newline46mondego><newline46mondego>  Comparator comp = new Comparator()<newline46mondego>  {<newline46mondego>    public int compare(Object left, Object right)<newline46mondego>    {<newline46mondego>      return n; // return copy of a local variable<newline46mondego>    }<newline46mondego>  };<newline46mondego>}<newline46mondego>"
"240splitHere46","1746601splitHere46","class C extends A {<newline46mondego><newline46mondego>   private final A delegate;<newline46mondego><newline46mondego>   C(A obj) {<newline46mondego>      this.delegate = obj;<newline46mondego>   }<newline46mondego><newline46mondego>   Object get() { return delegate.get() }<newline46mondego><newline46mondego>   Object whatever() {<newline46mondego>      return action();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"241splitHere46","1746675splitHere46","StringTokenizer"
"242splitHere46","1746675splitHere46","String.split(...);"
"243splitHere46","1746802splitHere46","wb"
"244splitHere46","1746802splitHere46","wb"
"245splitHere46","1746802splitHere46","Workbook wb = wb.getWorkbook(...);<newline46mondego>"
"246splitHere46","1747028splitHere46","process-sources"
"247splitHere46","1747349splitHere46","etc/init.d/jetty"
"248splitHere46","1747349splitHere46","JETTY_USER=jetty<newline46mondego>"
"249splitHere46","1747349splitHere46","chown jetty /var/development/.../webstart -R<newline46mondego>"
"250splitHere46","1747427splitHere46","email.AddHeaderField(<doubleQuotes46>Disposition-Notification-To<doubleQuotes46>,<doubleQuotes46><g.revolution@stackoverflow.com><doubleQuotes46>)<newline46mondego>"
"251splitHere46","1747553splitHere46","SELECT * FROM $tableName$<newline46mondego>"
"252splitHere46","1747553splitHere46","tableName"
"253splitHere46","1747553splitHere46","sqlMapClient"
"254splitHere46","1747553splitHere46","sqlMapClient"
"255splitHere46","1747553splitHere46","sqlMapClients"
"256splitHere46","1747553splitHere46","sqlMapClient"
"257splitHere46","1747653splitHere46","List<IDataCollector>"
"258splitHere46","1747681splitHere46","excelFileNotFound        <newline46mondego>excelFileTooBig         <newline46mondego>expectedGlobals         <newline46mondego>passwordProtected         <newline46mondego>streamNotFound         <newline46mondego>unrecognizedBiffVersion<newline46mondego>unrecognizedOLEFile<newline46mondego>"
"259splitHere46","1747681splitHere46","unrecognizedOLEFile"
"260splitHere46","1747900splitHere46","ftw -> odp"
"261splitHere46","1747900splitHere46","head == ftw"
"262splitHere46","1747900splitHere46","tlt"
"263splitHere46","1747900splitHere46","head == tlt"
"264splitHere46","1747900splitHere46","head"
"265splitHere46","1747900splitHere46","head == null"
"266splitHere46","1747900splitHere46","head"
"267splitHere46","1747900splitHere46","tlt"
"268splitHere46","1747900splitHere46","ftw"
"269splitHere46","1747900splitHere46","tlt"
"270splitHere46","1748044splitHere46","System.out.println(Integer.toHexString(test[0]));<newline46mondego>"
"271splitHere46","1748044splitHere46","System.out.printf(<doubleQuotes46>0x%02X<doubleQuotes46>, test[0]);<newline46mondego>"
"272splitHere46","1748044splitHere46","System.out.println(String.format(<doubleQuotes46>0x%02X<doubleQuotes46>, test[0]));<newline46mondego>"
"273splitHere46","1748229splitHere46","List<File> attachments = new ArrayList<File>();<newline46mondego>for (Message message : temp) {<newline46mondego>    Multipart multipart = (Multipart) message.getContent();<newline46mondego>    // System.out.println(multipart.getCount());<newline46mondego><newline46mondego>    for (int i = 0; i < multipart.getCount(); i++) {<newline46mondego>    BodyPart bodyPart = multipart.getBodyPart(i);<newline46mondego>    if(!Part.ATTACHMENT.equalsIgnoreCase(bodyPart.getDisposition()) &&<newline46mondego>               !StringUtils.isNotBlank(bodyPart.getFileName())) {<newline46mondego>      continue; // dealing with attachments only<newline46mondego>    } <newline46mondego>    InputStream is = bodyPart.getInputStream();<newline46mondego>    File f = new File(<doubleQuotes46>/tmp/<doubleQuotes46> + bodyPart.getFileName());<newline46mondego>    FileOutputStream fos = new FileOutputStream(f);<newline46mondego>    byte[] buf = new byte[4096];<newline46mondego>    int bytesRead;<newline46mondego>    while((bytesRead = is.read(buf))!=-1) {<newline46mondego>        fos.write(buf, 0, bytesRead);<newline46mondego>    }<newline46mondego>    fos.close();<newline46mondego>    attachments.add(f);<newline46mondego>    }<newline46mondego>"
"274splitHere46","1748310splitHere46","HttpServletRequest#getInputStream()"
"275splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>public interface UUIDTyped<T><newline46mondego>{<newline46mondego>    public UUID value();<newline46mondego>}<newline46mondego>"
"276splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import java.util.UUID;<newline46mondego><newline46mondego>public class UUIDFactory<newline46mondego>{<newline46mondego>    public static class PersonUUID implements UUIDTyped<Person>{<newline46mondego><newline46mondego>        /* (non-Javadoc)<newline46mondego>         * @see com.stackoverflow.q1747780.UUIDTyped#value()<newline46mondego>         */<newline46mondego>        @Override<newline46mondego>        public UUID value() {<newline46mondego>        return UUID.randomUUID();<newline46mondego>        }};<newline46mondego><newline46mondego><newline46mondego>    public static class AddressUUID implements UUIDTyped<Address>{<newline46mondego><newline46mondego><newline46mondego>        /* (non-Javadoc)<newline46mondego>         * @see com.stackoverflow.q1747780.UUIDTyped#value()<newline46mondego>         */<newline46mondego>        @Override<newline46mondego>        public UUID value() {<newline46mondego>        return UUID.randomUUID();<newline46mondego>        }};<newline46mondego><newline46mondego><newline46mondego>    public <T> UUIDTyped<T> newUUID() {<newline46mondego>    return new UUIDTyped<T>()<newline46mondego>    {        <newline46mondego>        /**<newline46mondego>         * There is no difference on how Person and Address UUIDs are generated<newline46mondego>         */<newline46mondego>        @Override<newline46mondego>        public UUID value() {<newline46mondego>        return UUID.randomUUID();<newline46mondego>        }<newline46mondego>    };        <newline46mondego>    }<newline46mondego><newline46mondego>    public UUIDTyped<Person> newPersonUUID(){<newline46mondego>    return new PersonUUID();<newline46mondego>    }<newline46mondego><newline46mondego>    public UUIDTyped<Address> newAddressUUID(){<newline46mondego>    return new AddressUUID();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"277splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import junit.framework.Assert;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego><newline46mondego>public class UUIDFactoryTest<newline46mondego>{<newline46mondego>    @Test<newline46mondego>    public void testPersonUUID()<newline46mondego>    {<newline46mondego>        UUIDFactory uuidFactory = new UUIDFactory();<newline46mondego><newline46mondego>        UUIDTyped<Person> newUUID = uuidFactory.newPersonUUID();<newline46mondego><newline46mondego>        Assert.assertNotNull(newUUID.value());<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testAddressUUID()<newline46mondego>    {<newline46mondego>        UUIDFactory uuidFactory = new UUIDFactory();<newline46mondego><newline46mondego>        UUIDTyped<Address> newUUID = uuidFactory.newAddressUUID();<newline46mondego><newline46mondego>        Assert.assertNotNull(newUUID.value());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"278splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import junit.framework.Assert;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>public class UUIDFactoryTest<newline46mondego>{<newline46mondego>    @Test<newline46mondego>    public void testNewUUID()<newline46mondego>    {<newline46mondego>        UUIDFactory uuidFactory = new UUIDFactory();<newline46mondego><newline46mondego>        UUIDTyped<Person> newUUID = uuidFactory.newUUID();        <newline46mondego>        UUIDTyped<Address> addressUUID = uuidFactory.newUUID();<newline46mondego><newline46mondego>        Assert.assertNotNull(newUUID.value());<newline46mondego>        Assert.assertNotNull(addressUUID.value());<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"279splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public interface Service<T><newline46mondego>{<newline46mondego>    public List< UUIDTyped<T> > search(String text);<newline46mondego><newline46mondego>    public T fetch( UUIDTyped<T> uuid);<newline46mondego>}<newline46mondego>"
"280splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class PersonService implements Service<Person><newline46mondego>{<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see com.stackoverflow.q1747780.Service#fetch(com.stackoverflow.q1747780.UUIDTyped)<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public Person fetch(UUIDTyped<Person> uuid) {<newline46mondego>    return null;<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see com.stackoverflow.q1747780.Service#search(java.lang.String)<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public List< UUIDTyped<Person> > search(String text) {<newline46mondego>    return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"281splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego><newline46mondego><newline46mondego>public class AddressService implements Service<Address><newline46mondego>{<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see com.stackoverflow.q1747780.Service#fetch(com.stackoverflow.q1747780.UUIDTyped)<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public Address fetch(UUIDTyped<Address> uuid) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see com.stackoverflow.q1747780.Service#search(java.lang.String)<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public List<UUIDTyped<Address>> search(String text) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"282splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class PersonServiceTest<newline46mondego>{<newline46mondego>    @Test<newline46mondego>    public void testFetch()<newline46mondego>    {<newline46mondego>        UUIDFactory uuidFactory = new UUIDFactory();<newline46mondego>        PersonService service = new PersonService();<newline46mondego><newline46mondego>        Person person = service.fetch( uuidFactory.newPersonUUID() );        <newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testSearch()<newline46mondego>    {<newline46mondego>        PersonService service = new PersonService();<newline46mondego><newline46mondego>        List< UUIDTyped<Person> > uuidList = service.search(<doubleQuotes46>foo<doubleQuotes46>);        <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"283splitHere46","1748371splitHere46","package com.stackoverflow.q1747780;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>public class AddressServiceTest<newline46mondego>{<newline46mondego>    @Test<newline46mondego>    public void testFetch()<newline46mondego>    {<newline46mondego>        UUIDFactory uuidFactory = new UUIDFactory();<newline46mondego>        AddressService service = new AddressService();<newline46mondego><newline46mondego>        Address address = service.fetch( uuidFactory.newAddressUUID() );        <newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testSearch()<newline46mondego>    {<newline46mondego>        AddressService service = new AddressService();<newline46mondego><newline46mondego>        List< UUIDTyped<Address> > uuidList = service.search(<doubleQuotes46>foo<doubleQuotes46>);        <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"284splitHere46","1748811splitHere46","EntityResolver"
"285splitHere46","1748811splitHere46","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>dbf.setNamespaceAware(true);<newline46mondego>dbf.setValidating(true);<newline46mondego>DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>db.setEntityResolver(new EntityResolver()<newline46mondego>{<newline46mondego>    public InputSource resolveEntity(String publicId, String systemId)<newline46mondego>        throws SAXException, IOException<newline46mondego>    {<newline46mondego>        return new InputSource(new StringReader(dtd));<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"286splitHere46","1748859splitHere46","try-catch"
"287splitHere46","1748859splitHere46","main"
"288splitHere46","1748859splitHere46","main"
"289splitHere46","1748859splitHere46","Throwable"
"290splitHere46","1748859splitHere46","main"
"291splitHere46","1748859splitHere46","Thread.setDefaultUncaughtExceptionHandler()"
"292splitHere46","1748859splitHere46","new File(...).deleteOnExit()"
"293splitHere46","1748859splitHere46","import org.apache.commons.lang.exception.ExceptionUtils;<newline46mondego><newline46mondego>public class Demo<newline46mondego>{<newline46mondego>    public static void main (String[] args)<newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            Demo obj = new Demo ();<newline46mondego>            obj.run (args);<newline46mondego>            System.out.println (<doubleQuotes46>Done.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch (Throwable t)<newline46mondego>        {<newline46mondego>            ExceptionUtils.printRootCauseStackTrace (t);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"294splitHere46","1748898splitHere46","getInputStream()"
"295splitHere46","1748898splitHere46","getOutputStream()"
"296splitHere46","1748903splitHere46","java.text.SimpleDateFormat"
"297splitHere46","1748903splitHere46","java.util.Date"
"298splitHere46","1748903splitHere46","SimpleDateFormat"
"299splitHere46","1748903splitHere46","java.util.Date"
"300splitHere46","1748903splitHere46","String datestring1 = <doubleQuotes46>2009-10-27 14:36:59.580250<doubleQuotes46>;<newline46mondego>Date date1 = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>).parse(datestring1);<newline46mondego>String datestring2 = new SimpleDateFormat(<doubleQuotes46>dd.MM.yyyy HH:mm<doubleQuotes46>).format(date1);<newline46mondego>System.out.println(datestring2);<newline46mondego>"
"301splitHere46","1748903splitHere46",".SSSSSS"
"302splitHere46","1748903splitHere46","<doubleQuotes46>yyyy-MM-dd HH:mm:ss.SSS<doubleQuotes46>"
"303splitHere46","1748903splitHere46","<doubleQuotes46>yyyy-MM-dd HH:mm:ss.SSSSSS<doubleQuotes46>"
"304splitHere46","1748903splitHere46","SimpleDateFormat"
"305splitHere46","1749194splitHere46","package com;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Random;<newline46mondego>import java.util.Set;<newline46mondego>import java.util.concurrent.ConcurrentSkipListSet;<newline46mondego>import java.util.concurrent.CountDownLatch;<newline46mondego>import java.util.concurrent.TimeUnit;<newline46mondego>import java.util.concurrent.atomic.AtomicLong;<newline46mondego><newline46mondego>public class AAA {<newline46mondego><newline46mondego>    private static final long DURATION = TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);<newline46mondego>    private static final int THREADS_NUMBER = 2;<newline46mondego>    private static final ThreadLocal<AtomicLong> COUNTER = new ThreadLocal<AtomicLong>() {<newline46mondego>        @Override<newline46mondego>        protected AtomicLong initialValue() {<newline46mondego>            return new AtomicLong();<newline46mondego>        }<newline46mondego>    };<newline46mondego>    private static final ThreadLocal<AtomicLong> DUMMY_DATA = new ThreadLocal<AtomicLong>() {<newline46mondego>        @Override<newline46mondego>        protected AtomicLong initialValue() {<newline46mondego>            return new AtomicLong();<newline46mondego>        }<newline46mondego>    };<newline46mondego>    private static final AtomicLong DUMMY_COUNTER = new AtomicLong();<newline46mondego>    private static final AtomicLong END_TIME = new AtomicLong(System.nanoTime() + DURATION);<newline46mondego><newline46mondego>    private static final List<ThreadLocal<CharSequence>> DUMMY_SOURCE = new ArrayList<ThreadLocal<CharSequence>>();<newline46mondego>    static {<newline46mondego>        for (int i = 0; i < 40; ++i) {<newline46mondego>            DUMMY_SOURCE.add(new ThreadLocal<CharSequence>());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static final Set<Long> COUNTERS = new ConcurrentSkipListSet<Long>();<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        final CountDownLatch startLatch = new CountDownLatch(THREADS_NUMBER);<newline46mondego>        final CountDownLatch endLatch = new CountDownLatch(THREADS_NUMBER);<newline46mondego><newline46mondego>        for (int i = 0; i < THREADS_NUMBER; i++) {<newline46mondego>            new Thread() {<newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego>                    initDummyData();<newline46mondego>                    startLatch.countDown();<newline46mondego>                    try {<newline46mondego>                        startLatch.await();<newline46mondego>                    } catch (InterruptedException e) {<newline46mondego>                        e.printStackTrace();<newline46mondego>                    }<newline46mondego>                    while (System.nanoTime() < END_TIME.get()) {<newline46mondego>                        doJob();<newline46mondego>                    }<newline46mondego>                    COUNTERS.add(COUNTER.get().get());<newline46mondego>                    DUMMY_COUNTER.addAndGet(DUMMY_DATA.get().get());<newline46mondego>                    endLatch.countDown();<newline46mondego>                }<newline46mondego>            }.start();<newline46mondego>        }<newline46mondego>        startLatch.await();<newline46mondego>        END_TIME.set(System.nanoTime() + DURATION);<newline46mondego><newline46mondego>        endLatch.await();<newline46mondego>        printStatistics();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void initDummyData() {<newline46mondego>        for (ThreadLocal<CharSequence> threadLocal : DUMMY_SOURCE) {<newline46mondego>            threadLocal.set(getRandomString());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static CharSequence getRandomString() {<newline46mondego>        StringBuilder result = new StringBuilder();<newline46mondego>        Random random = new Random();<newline46mondego>        for (int i = 0; i < 127; ++i) {<newline46mondego>            result.append((char)random.nextInt(0xFF));<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    private static void doJob() {<newline46mondego>        Random random = new Random();<newline46mondego>        for (ThreadLocal<CharSequence> threadLocal : DUMMY_SOURCE) {<newline46mondego>            for (int i = 0; i < threadLocal.get().length(); ++i) {<newline46mondego>                DUMMY_DATA.get().addAndGet(threadLocal.get().charAt(i) << random.nextInt(31));<newline46mondego>            }<newline46mondego>        }<newline46mondego>        COUNTER.get().incrementAndGet();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void printStatistics() {<newline46mondego>        long total = 0L;<newline46mondego>        for (Long counter : COUNTERS) {<newline46mondego>            total += counter;<newline46mondego>        }<newline46mondego>        System.out.printf(<doubleQuotes46>Total iterations number: %d, dummy data: %d, distribution:%n<doubleQuotes46>, total, DUMMY_COUNTER.get());<newline46mondego>        for (Long counter : COUNTERS) {<newline46mondego>            System.out.printf(<doubleQuotes46>%f%%%n<doubleQuotes46>, counter * 100d / total);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"306splitHere46","1749194splitHere46","public class Exchanger<V> {<newline46mondego>   ...<newline46mondego>   private static final int NCPU = Runtime.getRuntime().availableProcessors();<newline46mondego>   ....<newline46mondego>   /**<newline46mondego>    * The number of times to spin (doing nothing except polling a<newline46mondego>    * memory location) before blocking or giving up while waiting to<newline46mondego>    * be fulfilled.  Should be zero on uniprocessors.  On<newline46mondego>    * multiprocessors, this value should be large enough so that two<newline46mondego>    * threads exchanging items as fast as possible block only when<newline46mondego>    * one of them is stalled (due to GC or preemption), but not much<newline46mondego>    * longer, to avoid wasting CPU resources.  Seen differently, this<newline46mondego>    * value is a little over half the number of cycles of an average<newline46mondego>    * context switch time on most systems.  The value here is<newline46mondego>    * approximately the average of those across a range of tested<newline46mondego>    * systems.<newline46mondego>    */<newline46mondego>   private static final int SPINS = (NCPU == 1) ? 0 : 2000;<newline46mondego>"
"307splitHere46","1749237splitHere46","<doubleQuotes46>file.encoding<doubleQuotes46>"
"308splitHere46","1749237splitHere46","System.setProperty(<doubleQuotes46>file.encoding<doubleQuotes46>, <doubleQuotes46>Latin-1<doubleQuotes46>);"
"309splitHere46","1749237splitHere46","Charset.defaultCharset()"
"310splitHere46","1749237splitHere46","Default Charset=ISO-8859-1<newline46mondego>file.encoding=Latin-1<newline46mondego>Default Charset=ISO-8859-1<newline46mondego>Default Charset in Use=ISO8859_1<newline46mondego>"
"311splitHere46","1749237splitHere46","public static Charset defaultCharset() {<newline46mondego>synchronized (Charset.class) {<newline46mondego>    if (defaultCharset == null) {<newline46mondego>	java.security.PrivilegedAction pa =<newline46mondego>	    new GetPropertyAction(<doubleQuotes46>file.encoding<doubleQuotes46>);<newline46mondego>	String csn = (String)AccessController.doPrivileged(pa);<newline46mondego>	Charset cs = lookup(csn);<newline46mondego>	if (cs != null)<newline46mondego>	    return cs;<newline46mondego>	return forName(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return defaultCharset;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"312splitHere46","1749237splitHere46","public static Charset defaultCharset() {<newline46mondego>    if (defaultCharset == null) {<newline46mondego>    synchronized (Charset.class) {<newline46mondego>	java.security.PrivilegedAction pa =<newline46mondego>	    new GetPropertyAction(<doubleQuotes46>file.encoding<doubleQuotes46>);<newline46mondego>	String csn = (String)AccessController.doPrivileged(pa);<newline46mondego>	Charset cs = lookup(csn);<newline46mondego>	if (cs != null)<newline46mondego>	    defaultCharset = cs;<newline46mondego>            else <newline46mondego>	    defaultCharset = forName(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        }<newline46mondego>}<newline46mondego>return defaultCharset;<newline46mondego>}<newline46mondego>"
"313splitHere46","1749237splitHere46","file.encoding=Latin-1"
"314splitHere46","1749237splitHere46","Charset.defaultCharset()"
"315splitHere46","1749237splitHere46","Latin-1"
"316splitHere46","1749237splitHere46","UTF-8"
"317splitHere46","1749237splitHere46","OutputStreamWriter"
"318splitHere46","1749237splitHere46","sun.nio.cs.StreamEncoder"
"319splitHere46","1749237splitHere46","Charset.defaultCharset()"
"320splitHere46","1749237splitHere46","Converters.getDefaultEncodingName();"
"321splitHere46","1749237splitHere46","public static StreamEncoder forOutputStreamWriter(OutputStream out,<newline46mondego>                                                     Object lock,<newline46mondego>                                                     String charsetName)<newline46mondego>       throws UnsupportedEncodingException<newline46mondego>   {<newline46mondego>       String csn = charsetName;<newline46mondego>       if (csn == null)<newline46mondego>           csn = Charset.defaultCharset().name();<newline46mondego>       try {<newline46mondego>           if (Charset.isSupported(csn))<newline46mondego>               return new StreamEncoder(out, lock, Charset.forName(csn));<newline46mondego>       } catch (IllegalCharsetNameException x) { }<newline46mondego>       throw new UnsupportedEncodingException (csn);<newline46mondego>   }<newline46mondego>"
"322splitHere46","1749237splitHere46","public static StreamEncoder forOutputStreamWriter(OutputStream out,<newline46mondego>					      Object lock,<newline46mondego>					      String charsetName)<newline46mondego>throws UnsupportedEncodingException<newline46mondego>{<newline46mondego>String csn = charsetName;<newline46mondego>if (csn == null)<newline46mondego>    csn = Converters.getDefaultEncodingName();<newline46mondego>if (!Converters.isCached(Converters.CHAR_TO_BYTE, csn)) {<newline46mondego>    try {<newline46mondego>	if (Charset.isSupported(csn))<newline46mondego>	    return new CharsetSE(out, lock, Charset.forName(csn));<newline46mondego>    } catch (IllegalCharsetNameException x) { }<newline46mondego>}<newline46mondego>return new ConverterSE(out, lock, csn);<newline46mondego>}<newline46mondego>"
"323splitHere46","1749307splitHere46","@WebMethod(exclude = true)"
"324splitHere46","1749375splitHere46","db.connection.driver_class=org.hsqldb.jdbcDriver<newline46mondego>db.connection.url=jdbc:hsqldb:mem:aname<newline46mondego>db.connection.username=sa<newline46mondego>db.connection.password=<newline46mondego>hibernate.dialect=org.hibernate.dialect.HSQLDialect<newline46mondego>"
"325splitHere46","1749375splitHere46","<dependency><newline46mondego>    <groupId>hsqldb</groupId><newline46mondego>    <artifactId>hsqldb</artifactId><newline46mondego>    <version>1.8.0.7</version><newline46mondego>    <scope>test</scope><newline46mondego></dependency><newline46mondego>"
"326splitHere46","1749394splitHere46","<property name=<doubleQuotes46>destinationName<doubleQuotes46> value=<doubleQuotes46>myQueue<doubleQuotes46>/><newline46mondego>"
"327splitHere46","1749394splitHere46","<property name=<doubleQuotes46>destinationName<doubleQuotes46> ref=<doubleQuotes46>myQueue<doubleQuotes46>/><newline46mondego>"
"328splitHere46","1749440splitHere46","<module rename-to='gwt-models'><newline46mondego>    <inherits name='com.google.gwt.user.User' /><newline46mondego>    <source path=<doubleQuotes46>client<doubleQuotes46> /><newline46mondego></module><newline46mondego>"
"329splitHere46","1749440splitHere46","<inherits name=<doubleQuotes46>com.daveparoulek.gwt.server.models<doubleQuotes46> /><newline46mondego>"
"330splitHere46","1749482splitHere46","# Hxtt Access dialect sample<newline46mondego>hibernate.dialect=com.hxtt.support.hibernate.HxttAccessDialect<newline46mondego>hibernate.connection.driver_class=com.hxtt.sql.access.AccessDriver<newline46mondego>hibernate.connection.url=jdbc:access:///c:/yourAccessDirectory<newline46mondego>"
"331splitHere46","1749507splitHere46","<module rename-to=<doubleQuotes46>mainModule<doubleQuotes46>><newline46mondego>    <inherits name=<doubleQuotes46>com.smartgwt.SmartGwt<doubleQuotes46> /><newline46mondego><newline46mondego>    <!-- (other configurations) --><newline46mondego><newline46mondego>    <!-- gwt-log configuration --><newline46mondego>    <define-property name=<doubleQuotes46>log_level<doubleQuotes46> values=<doubleQuotes46>OFF,DEBUG<doubleQuotes46> /><newline46mondego>    <inherits name=<doubleQuotes46>com.allen_sauer.gwt.log.gwt-log-common<doubleQuotes46> /><newline46mondego><newline46mondego>    <!-- Locales we want to compile for --><newline46mondego>    <extend-property name=<doubleQuotes46>locale<doubleQuotes46> values=<doubleQuotes46>en<doubleQuotes46> /><newline46mondego>    <extend-property name=<doubleQuotes46>locale<doubleQuotes46> values=<doubleQuotes46>fr_FR<doubleQuotes46> /><newline46mondego><newline46mondego></module><newline46mondego>"
"332splitHere46","1749507splitHere46","<module rename-to=<doubleQuotes46>mainModule<doubleQuotes46>><newline46mondego>    <inherits name=<doubleQuotes46>com.example.MainModule<doubleQuotes46> /><newline46mondego><newline46mondego>    <set-property name=<doubleQuotes46>user.agent<doubleQuotes46> value=<doubleQuotes46>gecko1_8<doubleQuotes46> /><newline46mondego>    <set-property name=<doubleQuotes46>locale<doubleQuotes46> value=<doubleQuotes46>fr_FR<doubleQuotes46>/><newline46mondego>    <set-property name=<doubleQuotes46>log_level<doubleQuotes46> value=<doubleQuotes46>DEBUG<doubleQuotes46> /><newline46mondego></module><newline46mondego>"
"333splitHere46","1749507splitHere46","<project><newline46mondego>    (...)<newline46mondego>    <properties><newline46mondego>    (...)<newline46mondego>    <!--<newline46mondego>    Suffix appended to the names of the GWT modules we compile in our child projects.<newline46mondego>    Empty by default, this suffix is overriden by some profiles to specify an alternative module to compile.<newline46mondego>     --><newline46mondego>    <gwt.module.suffix></gwt.module.suffix><newline46mondego>    <!-- We force GWT-recompilation by default (except when using the <doubleQuotes46>gwtDebug<doubleQuotes46> profile - see below for more info) --><newline46mondego>    <gwt.compiler.force>true</gwt.compiler.force><newline46mondego>    </properties><newline46mondego>    (...)<newline46mondego><newline46mondego><plugin><newline46mondego>    <groupId>org.codehaus.mojo</groupId><newline46mondego>    <artifactId>gwt-maven-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>        (...)<newline46mondego>        <module>com.example.MainModule${gwt.module.suffix}</module><newline46mondego>    </configuration><newline46mondego></plugin><newline46mondego><newline46mondego>    (...)<newline46mondego><newline46mondego>    <profiles><newline46mondego>    <!-- This profile should be used during *DEVELOPMENT* --><newline46mondego>        <profile><newline46mondego>            <id>gwtDebug</id><newline46mondego>            <properties><newline46mondego>                <gwt.module.suffix>Debug</gwt.module.suffix><newline46mondego>             <!-- Tells gwt-maven-plugin to recompile GWT modules only when necessary --><newline46mondego>                <gwt.compiler.force>false</gwt.compiler.force><newline46mondego>            </properties><newline46mondego>            <activation><newline46mondego>                <property><newline46mondego>                    <name>gwtDebug</name><newline46mondego>                </property><newline46mondego>            </activation><newline46mondego>        </profile><newline46mondego>    </profiles><newline46mondego></project><newline46mondego>"
"334splitHere46","1749645splitHere46","objenesis"
"335splitHere46","1749645splitHere46","hamcrest"
"336splitHere46","1749645splitHere46","objensis"
"337splitHere46","1750033splitHere46","firstEntry()"
"338splitHere46","1750305splitHere46","java.util.Collections.unmodifiableMap(Map m)"
"339splitHere46","1750453splitHere46",".equals()"
"340splitHere46","1750453splitHere46","=="
"341splitHere46","1750453splitHere46","=="
"342splitHere46","1750701splitHere46","Project --> clean"
"343splitHere46","1750701splitHere46","com.digitalenginesoftware.healthinmotion"
"344splitHere46","1750780splitHere46","NaN"
"345splitHere46","1750780splitHere46","Integer.MIN_VALUE"
"346splitHere46","1750780splitHere46","Integer.MIN_VALUE"
"347splitHere46","1750780splitHere46","Integer.MAX_VALUE"
"348splitHere46","1750780splitHere46","Integer.MAX_VALUE"
"349splitHere46","1751060splitHere46","setBackgroundColor()"
"350splitHere46","1751060splitHere46","setBackgroundSelectionColor()"
"351splitHere46","1751060splitHere46","super"
"352splitHere46","1751136splitHere46","select u.name from User u<newline46mondego>"
"353splitHere46","1751136splitHere46","select u from User u<newline46mondego>"
"354splitHere46","1751291splitHere46","public List<? extends IObject> getObject(){<newline46mondego>  ArrayList<ConcreteObject> objects = new ArrayList<ConcreteObject>();<newline46mondego>  return objects;<newline46mondego>}<newline46mondego>"
"355splitHere46","1751291splitHere46","public <T extends IObject> List<T> getObject(){<newline46mondego>  ArrayList<T> objects = (ArrayList<T>) new ArrayList<ConcreteObject>();<newline46mondego>  return objects;<newline46mondego>}<newline46mondego>"
"356splitHere46","1751291splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>public <T extends IObject> List<T> getObject(){<newline46mondego>  ArrayList<T> objects = (ArrayList<T>) new ArrayList<ConcreteObject>();<newline46mondego>  objects.add(new ConcreteObject());<newline46mondego>  return objects;<newline46mondego>}<newline46mondego><newline46mondego>…<newline46mondego>List<OtherConcreteObject> objects = getObject(); // Works.<newline46mondego>OtherConcreteObject obj = OtherConcreteObject.get(0); // Throws CCE.<newline46mondego>"
"357splitHere46","1751291splitHere46","ClassCastException"
"358splitHere46","1751291splitHere46","ConcreteObject"
"359splitHere46","1751291splitHere46","OtherConcreteObject"
"360splitHere46","1751358splitHere46","MediaStreamSource"
"361splitHere46","1751358splitHere46","MediaFileSource"
"362splitHere46","1751426splitHere46","import java.lang.management.*<newline46mondego>import javax.management.ObjectName<newline46mondego>import javax.management.remote.JMXConnectorFactory as JmxFactory<newline46mondego>import javax.management.remote.JMXServiceURL as JmxUrl<newline46mondego>import groovy.swing.SwingBuilder<newline46mondego>import javax.swing.WindowConstants as WC<newline46mondego><newline46mondego>def serverUrl = 'service:jmx:rmi:///jndi/rmi://localhost:9003/jmxrmi'<newline46mondego>String beanName = <doubleQuotes46>com.webwars.gameplatform.data:type=udmdataloadsystem,id=0<doubleQuotes46><newline46mondego>def server = JmxFactory.connect(new JmxUrl(serverUrl)).MBeanServerConnection<newline46mondego>def dataSystem = new GroovyMBean(server, beanName)<newline46mondego><newline46mondego>println <doubleQuotes46>Connected to:\n$dataSystem\n<doubleQuotes46><newline46mondego><newline46mondego>println <doubleQuotes46>Executing jmxForceRefresh()<doubleQuotes46><newline46mondego>dataSystem.jmxForceRefresh();<newline46mondego>"
"363splitHere46","1751426splitHere46","#!/bin/bash<newline46mondego><newline46mondego>cmdLineJMXJar=./cmdline-jmxclient-0.10.3.jar<newline46mondego>user=yourUser<newline46mondego>password=yourPassword<newline46mondego>jmxHost=localhost<newline46mondego>port=9003<newline46mondego><newline46mondego>#No User and password so pass '-'<newline46mondego>echo <doubleQuotes46>Available Operations for com.company.data:type=datasystem,id=0<doubleQuotes46><newline46mondego>java -jar ${cmdLineJMXJar} ${user}:${password} ${jmxHost}:${port} com.company.data:type=datasystem,id=0<newline46mondego><newline46mondego>echo <doubleQuotes46>Executing XML update...<doubleQuotes46><newline46mondego>java -jar ${cmdLineJMXJar} - ${jmxHost}:${port} com.company.data:type=datasystem,id=0 jmxForceRefresh<newline46mondego>"
"364splitHere46","1751499splitHere46","?"
"365splitHere46","1751499splitHere46","*"
"366splitHere46","1751499splitHere46","String pt = <doubleQuotes46>\\[!(.*?)¡\\]<doubleQuotes46>;<newline46mondego>"
"367splitHere46","1751538splitHere46","Build Automatically"
"368splitHere46","1752073splitHere46","xmlns"
"369splitHere46","1752073splitHere46","AddFixedPriceItemRequest"
"370splitHere46","1752073splitHere46","AddFixedPriceItemRequest"
"371splitHere46","1752073splitHere46","AddFixedPriceItemRequest"
"372splitHere46","1752073splitHere46","xmlns"
"373splitHere46","1752073splitHere46","xmlns"
"374splitHere46","1752073splitHere46","DOMResult"
"375splitHere46","1752073splitHere46","Marshaller"
"376splitHere46","1752073splitHere46","xmlns"
"377splitHere46","1752212splitHere46","ShoppyPOSApp.frame.mainDesktopPane.getAllFrames()[i] == internalFrame<newline46mondego>"
"378splitHere46","1752212splitHere46","HIDE_ON_CLOSE"
"379splitHere46","1752212splitHere46","setVisible(false)"
"380splitHere46","1752212splitHere46","dispose()"
"381splitHere46","1752212splitHere46","setVisible(true)"
"382splitHere46","1752212splitHere46","setInternalFrame"
"383splitHere46","1752300splitHere46","printStackTrace"
"384splitHere46","1752300splitHere46","Throwable.getStackTrace()"
"385splitHere46","1752300splitHere46","StackTraceElement[]"
"386splitHere46","1752300splitHere46","StackTraceElement[]"
"387splitHere46","1752300splitHere46","printStackTrace"
"388splitHere46","1752300splitHere46","StackTraceElement"
"389splitHere46","1752314splitHere46","org.osgi.util.tracker.ServiceTracker"
"390splitHere46","1752314splitHere46","ServiceTracker"
"391splitHere46","1752314splitHere46","ServiceTracker"
"392splitHere46","1752523splitHere46","new File(<doubleQuotes46>some/path/to/somewhere/then-my-file<doubleQuotes46>).getParentFile().mkdirs()"
"393splitHere46","1752572splitHere46","<!-- removes session ids from urls (such as jsessionid and PHPSESSID) --><newline46mondego><regex><newline46mondego>  <pattern>([;_]?((?i)l|j|bv_)?((?i)sid|phpsessid|sessionid)=.*?)(\?|&amp;|#|$)</pattern><newline46mondego>  <substitution>$4</substitution><newline46mondego></regex><newline46mondego>"
"394splitHere46","1752572splitHere46","# skip URLs containing certain characters as probable queries, etc.<newline46mondego>-[?*!@=]<newline46mondego>"
"395splitHere46","1752572splitHere46","urlnormalizer.order<newline46mondego>urlnormalizer.regex.file<newline46mondego>plugin.includes<newline46mondego>"
"396splitHere46","1752807splitHere46","Joiner.on(<doubleQuotes46> and <doubleQuotes46>).join(names)<newline46mondego>"
"397splitHere46","1752807splitHere46","Joiner.on(<doubleQuotes46> and <doubleQuotes46>).skipNulls().join(names);<newline46mondego>"
"398splitHere46","1752807splitHere46","Joiner.on(<doubleQuotes46> and <doubleQuotes46>).useForNull(<doubleQuotes46>[unknown]<doubleQuotes46>).join(names);<newline46mondego>"
"399splitHere46","1752807splitHere46","Map<String, Integer> ages = .....;<newline46mondego>String foo = Joiner.on(<doubleQuotes46>, <doubleQuotes46>).withKeyValueSeparator(<doubleQuotes46> is <doubleQuotes46>).join(ages);<newline46mondego>// Outputs:<newline46mondego>// Bill is 25, Joe is 30, Betty is 35<newline46mondego>"
"400splitHere46","1753341splitHere46","autowired"
"401splitHere46","1753341splitHere46","default-autowire"
"402splitHere46","1753341splitHere46","autowire"
"403splitHere46","1753341splitHere46","byType"
"404splitHere46","1753341splitHere46","@Component(<doubleQuotes46>yay<doubleQuotes46>)<newline46mondego>@Scope(BeanDefinition.SCOPE_PROTOTYPE)<newline46mondego>public BooYay implements Boo<newline46mondego>{...}<newline46mondego><newline46mondego><newline46mondego>@Component(<doubleQuotes46>hoo<doubleQuotes46>)<newline46mondego>@Scope(BeanDefinition.SCOPE_PROTOTYPE)<newline46mondego>public BooHoo implements Boo<newline46mondego>{...}<newline46mondego>"
"405splitHere46","1753341splitHere46","autowire = <doubleQuotes46>byName<doubleQuotes46>"
"406splitHere46","1753341splitHere46","@Qualifiers"
"407splitHere46","1753389splitHere46","id"
"408splitHere46","1753389splitHere46","name"
"409splitHere46","1753389splitHere46","getParameterValues(name)"
"410splitHere46","1753389splitHere46","getParameterMap()"
"411splitHere46","1753389splitHere46","ServletRequest"
"412splitHere46","1753587splitHere46","<opt>"
"413splitHere46","1753587splitHere46","<jre>"
"414splitHere46","1753701splitHere46","getTextFromPage(int)"
"415splitHere46","1753701splitHere46","getTextFromPage(0)"
"416splitHere46","1753701splitHere46","getTextFromPage(1)"
"417splitHere46","1753701splitHere46","getTextFromPage(int)"
"418splitHere46","1753747splitHere46","package test;<newline46mondego><newline46mondego>import java.io.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>  private static final String FILE_NAME = <doubleQuotes46>D:/Arne/workspaces/IDEDeluxe/TestParser/bin/test/Main.class<doubleQuotes46>;<newline46mondego><newline46mondego>  private static Map<Integer, String> strings = new HashMap<Integer, String>();<newline46mondego>  private static Set<Integer> classes = new HashSet<Integer>();<newline46mondego>  private static int indexCorrection = 0; // for correcting indexes to constant pools with long and double entries<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    printReferencedClassesFromFile(FILE_NAME);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void printReferencedClassesFromFile(String fileName) throws IOException {<newline46mondego>    printReferencedClassesFromFile(new File(fileName));<newline46mondego>  }<newline46mondego><newline46mondego>  private static void printReferencedClassesFromFile(File file) throws IOException {<newline46mondego>    DataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(file)));<newline46mondego>    try {<newline46mondego>      saveReferencedClassesFromStream(stream);<newline46mondego>    } finally {<newline46mondego>      stream.close();<newline46mondego>    }<newline46mondego>    printReferencedClasses();<newline46mondego>  }<newline46mondego><newline46mondego>  private static void printReferencedClasses() {<newline46mondego>    for(Integer index : classes)<newline46mondego>      System.out.println(strings.get(index));<newline46mondego>  }<newline46mondego><newline46mondego>  private static void saveReferencedClassesFromStream(DataInputStream stream) throws IOException {<newline46mondego>    skipHeader(stream);<newline46mondego>    saveReferencedClassesFromConstantPool(stream);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void skipHeader(DataInputStream dataInputStream) throws IOException {<newline46mondego>    readU4(dataInputStream); // magic byte<newline46mondego>    readU2(dataInputStream); // minor version<newline46mondego>    readU2(dataInputStream); // major version<newline46mondego>  }<newline46mondego><newline46mondego>  private static void saveReferencedClassesFromConstantPool(DataInputStream stream) throws IOException {<newline46mondego>    int poolSize = readU2(stream);<newline46mondego>    for(int n = 1; n < poolSize; n++)<newline46mondego>      savePoolEntryIfIsClassReference(n, stream);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void savePoolEntryIfIsClassReference(int index, DataInputStream stream) throws IOException {<newline46mondego>    int tag = readU1(stream);<newline46mondego>    switch(tag) {<newline46mondego>    case 1: // Utf8<newline46mondego>      saveStringFromUtf8Entry(index, stream);<newline46mondego>      break;<newline46mondego>    case 7: // Class<newline46mondego>      saveClassEntry(stream);<newline46mondego>      break;<newline46mondego>    case 8: // String<newline46mondego>      readU2(stream);<newline46mondego>      break;<newline46mondego>    case 3: // Integer<newline46mondego>    case 4: // Float<newline46mondego>      readU4(stream);<newline46mondego>      break;<newline46mondego>    case 5: // Long<newline46mondego>    case 6: // Double<newline46mondego>      readU4(stream);<newline46mondego>      readU4(stream);<newline46mondego>      indexCorrection++;<newline46mondego>      break;<newline46mondego>    case 9: // Fieldref<newline46mondego>    case 10: // Methodref<newline46mondego>    case 11: // InterfaceMethodref<newline46mondego>    case 12: // NameAndType<newline46mondego>      readU2(stream);<newline46mondego>      readU2(stream);<newline46mondego>      break;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private static void saveClassEntry(DataInputStream stream) throws IOException {<newline46mondego>    int nameIndex = readU2(stream);<newline46mondego>    classes.add(nameIndex - indexCorrection);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void saveStringFromUtf8Entry(int index, DataInputStream stream) throws IOException {<newline46mondego>    String content = readString(stream);<newline46mondego>    strings.put(index, content);<newline46mondego>  }<newline46mondego><newline46mondego>  private static String readString(DataInputStream stream) throws IOException {<newline46mondego>    return stream.readUTF();<newline46mondego>  }<newline46mondego><newline46mondego>  private static int readU1(DataInputStream stream) throws IOException {<newline46mondego>    return stream.readUnsignedByte();<newline46mondego>  }<newline46mondego><newline46mondego>  private static int readU2(DataInputStream stream) throws IOException {<newline46mondego>    return stream.readUnsignedShort();<newline46mondego>  }<newline46mondego><newline46mondego>  private static int readU4(DataInputStream stream) throws IOException {<newline46mondego>    return stream.readInt();<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"419splitHere46","1753747splitHere46","test/Main<newline46mondego>java/lang/Object<newline46mondego>java/io/BufferedInputStream<newline46mondego>java/util/Iterator<newline46mondego>java/io/FileInputStream<newline46mondego>java/lang/System<newline46mondego>java/lang/Integer<newline46mondego>java/lang/Exception<newline46mondego>java/lang/String<newline46mondego>java/io/File<newline46mondego>java/util/Map<newline46mondego>java/util/HashMap<newline46mondego>java/io/IOException<newline46mondego>java/util/Set<newline46mondego>java/io/DataInputStream<newline46mondego>java/io/PrintStream<newline46mondego>java/util/HashSet<newline46mondego>java/lang/Throwable<newline46mondego>"
"420splitHere46","1753828splitHere46","url.openConnection()"
"421splitHere46","1753828splitHere46","URL url = new URL(<doubleQuotes46>https://your.https.url.here/<doubleQuotes46>);<newline46mondego>HttpsURLConnection connection = (HttpsURLConnection) myurl.openConnection();<newline46mondego>"
"422splitHere46","1754131splitHere46","-D"
"423splitHere46","1754131splitHere46","System.setProperty(<doubleQuotes46>propname<doubleQuotes46>, <doubleQuotes46>hello world<doubleQuotes46>);<newline46mondego><newline46mondego>// ... later ...<newline46mondego>String value = System.getProperty(<doubleQuotes46>propname<doubleQuotes46>);<newline46mondego>"
"424splitHere46","1754131splitHere46","suspend=n"
"425splitHere46","1754131splitHere46","-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=12345<newline46mondego>"
"426splitHere46","1754351splitHere46","String.matches(regex)"
"427splitHere46","1754351splitHere46","new Integer(value)"
"428splitHere46","1754351splitHere46","List"
"429splitHere46","1754407splitHere46","objects"
"430splitHere46","1754407splitHere46","function foo(&$var)<newline46mondego>{<newline46mondego>    $var++;<newline46mondego>}<newline46mondego><newline46mondego>$a=5;<newline46mondego>foo($a);<newline46mondego>// $a is 6 here<newline46mondego>"
"431splitHere46","1754407splitHere46","class foo {<newline46mondego>    public $value = 42;<newline46mondego><newline46mondego>    public function &getValue() {<newline46mondego>        return $this->value;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>$obj = new foo;<newline46mondego>$myValue = &$obj->getValue(); // $myValue is a reference to $obj->value, which is 42.<newline46mondego>$obj->value = 2;<newline46mondego>echo $myValue; // prints the new value of $obj->value, i.e. 2.<newline46mondego>"
"432splitHere46","1754407splitHere46","foreach"
"433splitHere46","1754407splitHere46","$arr = array(1, 2, 3, 4);<newline46mondego>foreach ($arr as &$value) {<newline46mondego>    $value = $value * 2;<newline46mondego>}<newline46mondego>// $arr is now array(2, 4, 6, 8)<newline46mondego>unset($value); // break the reference with the last element<newline46mondego>"
"434splitHere46","1754407splitHere46","unset()"
"435splitHere46","1754407splitHere46","$value"
"436splitHere46","1754407splitHere46","$array = array(1, 2, 3, 4);<newline46mondego>function modifyArray(&$data)<newline46mondego>{<newline46mondego>    unset($data[1]);<newline46mondego>}<newline46mondego>modifyArrax($array);<newline46mondego>// $array = array(0 => 1, 2 => 3, 3 => 4)<newline46mondego>"
"437splitHere46","1754430splitHere46","RAW"
"438splitHere46","1754430splitHere46","DATE"
"439splitHere46","1754430splitHere46","PL/SQL RECORD"
"440splitHere46","1754473splitHere46","public class FooException extends Exception {<newline46mondego>  public FooException() { super(); }<newline46mondego>  public FooException(String message) { super(message); }<newline46mondego>  public FooException(String message, Throwable cause) { super(message, cause); }<newline46mondego>  public FooException(Throwable cause) { super(cause); }<newline46mondego>}<newline46mondego>"
"441splitHere46","1754473splitHere46","public void calculate(int i) throws FooException, IOException;<newline46mondego>"
"442splitHere46","1754473splitHere46","try {<newline46mondego>  int i = 5;<newline46mondego>  myObject.calculate(5);<newline46mondego>} catch(FooException ex) {<newline46mondego>  // Print error and terminate application.<newline46mondego>  ex.printStackTrace();<newline46mondego>  System.exit(1);<newline46mondego>} catch(IOException ex) {<newline46mondego>  // Rethrow as FooException.<newline46mondego>  throw new FooException(ex);<newline46mondego>}<newline46mondego>"
"443splitHere46","1754473splitHere46","IOException"
"444splitHere46","1754473splitHere46","FooException"
"445splitHere46","1754473splitHere46","java.lang.Exception"
"446splitHere46","1754473splitHere46","public class FooRuntimeException extends RuntimeException {<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"447splitHere46","1754473splitHere46","FooRuntimeException"
"448splitHere46","1754473splitHere46","public void calculate(int i) {<newline46mondego>  if (i < 0) {<newline46mondego>    throw new FooRuntimeException(<doubleQuotes46>i < 0: <doubleQuotes46> + i);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"449splitHere46","1754473splitHere46","java.lang.Exception"
"450splitHere46","1754473splitHere46","Throwable"
"451splitHere46","1754473splitHere46","Throwable"
"452splitHere46","1754473splitHere46","Error"
"453splitHere46","1754473splitHere46","Throwable"
"454splitHere46","1754473splitHere46","Error"
"455splitHere46","1754473splitHere46","Exception"
"456splitHere46","1754547splitHere46","TreeSelectionListener"
"457splitHere46","1754547splitHere46","JTree"
"458splitHere46","1754547splitHere46","public static class SelectionMaintainer implements TreeSelectionListener {<newline46mondego>  private final JTree tree1;<newline46mondego>  private final JTree tree2;<newline46mondego><newline46mondego>  private boolean changing;<newline46mondego><newline46mondego>  public SelectionMaintainer(JTree tree1, JTree tree2) {<newline46mondego>    this.tree1 = tree1;<newline46mondego>    this.tree2 = tree2;<newline46mondego>  }<newline46mondego><newline46mondego>  public valueChanged(TreeSelectionEvent e) {<newline46mondego>    // Use boolean flag to guard against infinite loop caused by performing<newline46mondego>    // a selection change in this method (resulting in another selection<newline46mondego>    // event being fired).<newline46mondego>    if (!changing) {<newline46mondego>      changing = true;<newline46mondego>      try {<newline46mondego>        if (e.getSource == tree1) {<newline46mondego>          tree2.clearSelection();<newline46mondego>        } else {<newline46mondego>          tree1.clearSelection();<newline46mondego>        }<newline46mondego>      } finally {<newline46mondego>        changing = false;<newline46mondego>      }<newline46mondego>    }   <newline46mondego>  }<newline46mondego>}<newline46mondego>"
"459splitHere46","1754799splitHere46","<rich:datatable ...><newline46mondego> <rich:column filterValue=<doubleQuotes46>#{yourSessionBean.filterByProperty}<doubleQuotes46> ... ><newline46mondego>...<newline46mondego>"
"460splitHere46","1754799splitHere46","filterValue"
"461splitHere46","1754799splitHere46","filterBy"
"462splitHere46","1754950splitHere46","<newline46mondego>String[] params = new String[] {<doubleQuotes46>jack<doubleQuotes46>, <doubleQuotes46>25<doubleQuotes46>};<newline46mondego>Object[] realParams = new Object[params.length];<newline46mondego>Method[] methods = getClass().getMethods();<newline46mondego>for (Method method : methods) {<newline46mondego>  if (method.getParameterTypes().length == params.length) {<newline46mondego>     for (int i = 0; i < method.getParameterTypes().length; i ++) {<newline46mondego>        Class<?> paramClass = method.getParameterTypes()[i];<newline46mondego>        if (paramClass = String.class) {<newline46mondego>           realParams.add(param);<newline46mondego>        } else if (paramClass == Integer.class || paramClass == Integer.TYPE) {<newline46mondego>           realParams.add(Integer.parseInt(param));<newline46mondego>        } else if (other primitive wrappers) {<newline46mondego>            ...<newline46mondego>        } else {<newline46mondego>          realParams.add(null); // can't create a random object based on just string<newline46mondego>          // you can have some object factory here, or use ObjectInputStream<newline46mondego>        }<newline46mondego>     }<newline46mondego>     break; // you can continue here if the parameters weren't converted successfully,     <newline46mondego>     //to attempt another method with the same arguments count.<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"463splitHere46","1755074splitHere46","jar"
"464splitHere46","1755074splitHere46","plugin-info.xml"
"465splitHere46","1755155splitHere46","getContentType()"
"466splitHere46","1755155splitHere46","charset="
"467splitHere46","1755155splitHere46","US-ASCII"
"468splitHere46","1755244splitHere46","<doubleQuotes46> marketData*<doubleQuotes46><newline46mondego>"
"469splitHere46","1755244splitHere46","*"
"470splitHere46","1755244splitHere46","String command = <doubleQuotes46>sh -c \<doubleQuotes46>tar --remove-files -cjvf <doubleQuotes46>+archivedFile+<doubleQuotes46> marketData*\<doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"471splitHere46","1755244splitHere46","\<doubleQuotes46>"
"472splitHere46","1755282splitHere46","public static void main(String[] args) {<newline46mondego>"
"473splitHere46","1755856splitHere46","static final Font defaultFont =new Font( <doubleQuotes46>Arial Unicode MS<doubleQuotes46>, Font.BOLD, 48 );<newline46mondego><newline46mondego>static private Font[] allFonts;<newline46mondego><newline46mondego>static final char sampleChineseCharacter = '\u4F60';  // ni3 as in ni3 hao3<newline46mondego><newline46mondego>public static void loadFonts() {<newline46mondego><newline46mondego>    GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego><newline46mondego>    allFonts = env.getAllFonts();<newline46mondego>    int nFonts = allFonts != null ? allFonts.length : 0;<newline46mondego>    fontNames = new String[nFonts];<newline46mondego>    fontMap = new Hashtable();<newline46mondego>    String currentFamily = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    int j = 0;<newline46mondego><newline46mondego>    for ( int i = 0; i < nFonts; i++ ) {<newline46mondego><newline46mondego>        Font font = allFonts[ i ];<newline46mondego><newline46mondego>        System.out.println( allFonts[ i ] );<newline46mondego><newline46mondego>        if ( font.canDisplay( sampleChineseCharacter )) {<newline46mondego><newline46mondego>                currentFamily = font.getFamily();<newline46mondego><newline46mondego>                Object key = fontMap.put( currentFamily, font );<newline46mondego><newline46mondego>                if ( key == null ) {<newline46mondego><newline46mondego>                    // The currentFamily hasn't been seen yet.<newline46mondego><newline46mondego>                    fontNames[ j ] = currentFamily;<newline46mondego>                    j++;<newline46mondego><newline46mondego>                }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    String tmp[] = fontNames;<newline46mondego>    fontNames = new String[j];<newline46mondego>    System.arraycopy( tmp, 0, fontNames, 0, j );<newline46mondego><newline46mondego>}<newline46mondego>"
"474splitHere46","1755868splitHere46","HttpSession#getAttribute()"
"475splitHere46","1755868splitHere46","java.lang.Object"
"476splitHere46","1755868splitHere46","public java.lang.Object getAttribute(java.lang.String name)<newline46mondego>"
"477splitHere46","1755868splitHere46","sriList = (ArrayList)session.getAttribute(<doubleQuotes46>scannedMatches<doubleQuotes46>);<newline46mondego>"
"478splitHere46","1755887splitHere46","using System.Security.Cryptography<newline46mondego><newline46mondego>string key;<newline46mondego>Stream input;<newline46mondego>string output;<newline46mondego>DESCryptoServiceProvider DES = new DESCryptoServiceProvider();<newline46mondego>//Set key and initialization vector for DES algorithm<newline46mondego>DES.Key = ASCIIEncoding.ASCII.GetBytes(key);<newline46mondego>DES.IV = ASCIIEncoding.ASCII.GetBytes(key);<newline46mondego><newline46mondego>//Create CryptoStream layer to decrypt input on reading<newline46mondego>CryptoStream decryptStream = new CryptoStream(input, DES.CreateDecryptor(), CryptoStreamMode.Read);<newline46mondego>//return decrypted<newline46mondego>return new StreamReader(decryptStream ).ReadToEnd();<newline46mondego>"
"479splitHere46","1755887splitHere46","DES.Mode = CipherMode.ECB<newline46mondego>"
"480splitHere46","1756056splitHere46","dayArray [0] = <doubleQuotes46>monday<doubleQuotes46>;<newline46mondego>dayArray [1] = <doubleQuotes46>tuesday<doubleQuotes46>;<newline46mondego>dayArray [2] = <doubleQuotes46>wednesday<doubleQuotes46>;<newline46mondego>dayArray [3] = <doubleQuotes46>Thursday<doubleQuotes46>;<newline46mondego>"
"481splitHere46","1756165splitHere46","-Dcom.sun.management.jmxremote=true<newline46mondego>-Dcom.sun.management.jmxremote.port=12345<newline46mondego>"
"482splitHere46","1756208splitHere46","InputStream.reset()"
"483splitHere46","1756208splitHere46","Inpustream.mark()"
"484splitHere46","1756208splitHere46","InputStream.markSupported()"
"485splitHere46","1756208splitHere46","MIDlet.startApp()"
"486splitHere46","1756208splitHere46","Canvas.keyPressed()"
"487splitHere46","1756208splitHere46","CommandListener.commandAction()"
"488splitHere46","1756208splitHere46","PlayerListener.playerUpdate()"
"489splitHere46","1756208splitHere46","Thread.run()"
"490splitHere46","1756289splitHere46","<b>"
"491splitHere46","1756294splitHere46","rsync"
"492splitHere46","1756442splitHere46","OutputStream"
"493splitHere46","1756442splitHere46","CountingOutputStream"
"494splitHere46","1756459splitHere46","getBean()"
"495splitHere46","1756459splitHere46","spring-2.5.6.SEC01.jar"
"496splitHere46","1756532splitHere46","^(\d+\.\d+\.\d+\.\d+)\s-\s-\s\[(\d+)\/(\w{3})\/(\d{4}):(\d{2}):(\d{2}):(\d{2})\s(\d{4})\]<newline46mondego>"
"497splitHere46","1757107splitHere46","public class Main { <newline46mondego>    public static void main(String[] args) {<newline46mondego>        String line = <doubleQuotes46>foo,bar,c;qual=\<doubleQuotes46>baz,blurb\<doubleQuotes46>,d;junk=\<doubleQuotes46>quux,syzygy\<doubleQuotes46><doubleQuotes46>;<newline46mondego>        String[] tokens = line.split(<doubleQuotes46>,(?=([^\<doubleQuotes46>]*\<doubleQuotes46>[^\<doubleQuotes46>]*\<doubleQuotes46>)*[^\<doubleQuotes46>]*$)<doubleQuotes46>);<newline46mondego>        for(String t : tokens) {<newline46mondego>            System.out.println(<doubleQuotes46>> <doubleQuotes46>+t);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"498splitHere46","1757107splitHere46","> foo<newline46mondego>> bar<newline46mondego>> c;qual=<doubleQuotes46>baz,blurb<doubleQuotes46><newline46mondego>> d;junk=<doubleQuotes46>quux,syzygy<doubleQuotes46><newline46mondego>"
"499splitHere46","1757107splitHere46","public class Main { <newline46mondego>    public static void main(String[] args) {<newline46mondego>        String line = <doubleQuotes46>foo,bar,c;qual=\<doubleQuotes46>baz,blurb\<doubleQuotes46>,d;junk=\<doubleQuotes46>quux,syzygy\<doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>        String otherThanQuote = <doubleQuotes46> [^\<doubleQuotes46>] <doubleQuotes46>;<newline46mondego>        String quotedString = String.format(<doubleQuotes46> \<doubleQuotes46> %s* \<doubleQuotes46> <doubleQuotes46>, otherThanQuote);<newline46mondego>        String regex = String.format(<doubleQuotes46>(?x) <doubleQuotes46>+ // enable comments, ignore white spaces<newline46mondego>                <doubleQuotes46>,                         <doubleQuotes46>+ // match a comma<newline46mondego>                <doubleQuotes46>(?=                       <doubleQuotes46>+ // start positive look ahead<newline46mondego>                <doubleQuotes46>  (                       <doubleQuotes46>+ //   start group 1<newline46mondego>                <doubleQuotes46>    %s*                   <doubleQuotes46>+ //     match 'otherThanQuote' zero or more times<newline46mondego>                <doubleQuotes46>    %s                    <doubleQuotes46>+ //     match 'quotedString'<newline46mondego>                <doubleQuotes46>  )*                      <doubleQuotes46>+ //   end group 1 and repeat it zero or more times<newline46mondego>                <doubleQuotes46>  %s*                     <doubleQuotes46>+ //   match 'otherThanQuote'<newline46mondego>                <doubleQuotes46>  $                       <doubleQuotes46>+ // match the end of the string<newline46mondego>                <doubleQuotes46>)                         <doubleQuotes46>, // stop positive look ahead<newline46mondego>                otherThanQuote, quotedString, otherThanQuote);<newline46mondego><newline46mondego>        String[] tokens = line.split(regex, -1);<newline46mondego>        for(String t : tokens) {<newline46mondego>            System.out.println(<doubleQuotes46>> <doubleQuotes46>+t);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"500splitHere46","1757163splitHere46","<param name=<doubleQuotes46>file<doubleQuotes46> value=<doubleQuotes46>MyApp<doubleQuotes46>/><newline46mondego>"
"501splitHere46","1757163splitHere46","Appender"
"502splitHere46","1757163splitHere46","FileAppender"
"503splitHere46","1757163splitHere46","DailyRollingFileAppender"
"504splitHere46","1757186splitHere46","Cipher"
"505splitHere46","1757469splitHere46","@Test (expected=RuntimeException.class)<newline46mondego>"
"506splitHere46","1757469splitHere46","main(..) { }"
"507splitHere46","1757469splitHere46","Going to sleep...<newline46mondego>main thread about to throw runtime...<newline46mondego>Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.RuntimeException: fail<newline46mondego>        at Test.main(Test.java:22)<newline46mondego>slept 1000 ms<newline46mondego>Must print this.<newline46mondego>"
"508splitHere46","1757585splitHere46","buffer"
"509splitHere46","1757585splitHere46","availableIngredients"
"510splitHere46","1757633splitHere46","keytool -import -alias <Name for the cert> -file <the .cer file> -keystore <path to cacerts><newline46mondego>"
"511splitHere46","1757633splitHere46","keytool -import -alias <Name for the cert> -file <the .cer file> -keystore <path to new trust store><newline46mondego>"
"512splitHere46","1757633splitHere46","java -Djavax.net.ssl.trustStore=<path to new trust store> -Djavax.net.ssl.trustStorePassword=<trust store password><newline46mondego>"
"513splitHere46","1757790splitHere46","Random r = new Random();<newline46mondego>"
"514splitHere46","1757790splitHere46","if (to.c == from.c && to.r == from.r) {<newline46mondego>    // reached destination<newline46mondego>    return;<newline46mondego>}<newline46mondego><newline46mondego>if (to.c > from.c) {<newline46mondego>    // move right<newline46mondego>} else if (to.c < from.c) {<newline46mondego>    // move left<newline46mondego>} else {<newline46mondego>    // random step left/right<newline46mondego>}<newline46mondego><newline46mondego>if (to.r > from.r) {<newline46mondego>    // move down<newline46mondego>} else if (to.r < from.r) {<newline46mondego>    // move up<newline46mondego>} else {<newline46mondego>    // random step up/down<newline46mondego>}<newline46mondego><newline46mondego>// take next step<newline46mondego>"
"515splitHere46","1757790splitHere46","to"
"516splitHere46","1758029splitHere46","SessionContext"
"517splitHere46","1758029splitHere46","DataSources"
"518splitHere46","1758029splitHere46","UserTransaction"
"519splitHere46","1758029splitHere46","EntityManager"
"520splitHere46","1758029splitHere46","TimerService"
"521splitHere46","1758029splitHere46","CustomClass"
"522splitHere46","1758202splitHere46","public class SuperClass {<newline46mondego>   public SuperClass(String parameter) {<newline46mondego>       // this is called when anonymous class is created<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>// an anonymous class is created and instantiated here<newline46mondego>new SuperClass(parameterForSuperClassConstructor) {<newline46mondego>   {<newline46mondego>      // this code is executed when object is initialized<newline46mondego>      // and can be used to do many same things as a constructors<newline46mondego>   }<newline46mondego><newline46mondego>   private void someMethod() {<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"523splitHere46","1758322splitHere46","void"
"524splitHere46","1758365splitHere46","ArrayList"
"525splitHere46","1758365splitHere46","ArrayList"
"526splitHere46","1758365splitHere46","LinkedList"
"527splitHere46","1759089splitHere46","boost::thread* thr = new boost::thread(MyFunc());<newline46mondego>thr->join();<newline46mondego>"
"528splitHere46","1759089splitHere46","()"
"529splitHere46","1759089splitHere46","boost::mutex"
"530splitHere46","1759089splitHere46","std::thread"
"531splitHere46","1759090splitHere46","#{currentDate}<newline46mondego>"
"532splitHere46","1759318splitHere46","RandomAccessFile"
"533splitHere46","1759318splitHere46","readLine"
"534splitHere46","1759318splitHere46","CharacterBuffer"
"535splitHere46","1759318splitHere46","ByteBuffer"
"536splitHere46","1759318splitHere46","nio"
"537splitHere46","1759481splitHere46","@SupportedAnnotationTypes(<doubleQuotes46>*<doubleQuotes46>)   // needed to run on all classes being compiled<newline46mondego>@SupportedSourceVersion(SourceVersion.RELEASE_6)<newline46mondego>public class DefaultConstructor extends AbstractProcessor {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean process(Set<? extends TypeElement> annotations,<newline46mondego>            RoundEnvironment roundEnv) {<newline46mondego><newline46mondego>        for (TypeElement type : ElementFilter.typesIn(roundEnv.getRootElements())) {<newline46mondego>            if (requiresDefaultConstructor(type))<newline46mondego>                checkForDefaultConstructor(type);<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    private void checkForDefaultConstructor(TypeElement type) {<newline46mondego>        for (ExecutableElement cons :<newline46mondego>            ElementFilter.constructorsIn(type.getEnclosedElements())) {<newline46mondego>            if (cons.getParameters().isEmpty())<newline46mondego>                return;<newline46mondego>        }<newline46mondego><newline46mondego>        // Couldn't find any default constructor here<newline46mondego>        processingEnv.getMessager().printMessage(<newline46mondego>                Diagnostic.Kind.ERROR, <doubleQuotes46>type is missing a default constructor<doubleQuotes46>,<newline46mondego>                type);<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean requiresDefaultConstructor(TypeElement type) {<newline46mondego>        // sample: require any JPA Entity to have a default constructor<newline46mondego>        return type.getAnnotation(Entity.class)) != null<newline46mondego>               || type.getQualifiedName().toString().contains(<doubleQuotes46>POJO<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"538splitHere46","1759481splitHere46","requiresDefaultConstructor()"
"539splitHere46","1759481splitHere46","TypeElement"
"540splitHere46","1759481splitHere46","return type.getQualifiedName().toString().contains(<doubleQuotes46>POJO<doubleQuotes46>);<newline46mondego>"
"541splitHere46","1759481splitHere46","return type.getAnnotation(Entity.class) != null;<newline46mondego>"
"542splitHere46","1759481splitHere46","TypeElement basetype = processingEnv.getElements().getTypeElement(<doubleQuotes46>com.notnoop.mybase<doubleQuotes46>);<newline46mondego>return processingEnv.getTypes().isSubtype(type.asType(), basetype.asType());<newline46mondego>"
"543splitHere46","1759481splitHere46","MyPlain"
"544splitHere46","1759481splitHere46","@Inherited"
"545splitHere46","1759481splitHere46","return type.getAnnotation(MyPlain.class) != null;<newline46mondego>"
"546splitHere46","1759481splitHere46","requiresDefaultConstructor"
"547splitHere46","1759481splitHere46","SupportedAnnotationTypes"
"548splitHere46","1759481splitHere46","SupportedAnnotationTypes"
"549splitHere46","1759481splitHere46","SupportedAnnotationTypes"
"550splitHere46","1759481splitHere46","<doubleQuotes46>*<doubleQuotes46>"
"551splitHere46","1759481splitHere46","<doubleQuotes46>*<doubleQuotes46>"
"552splitHere46","1759481splitHere46","<doubleQuotes46>*<doubleQuotes46>"
"553splitHere46","1759481splitHere46","false"
"554splitHere46","1759565splitHere46","T"
"555splitHere46","1759565splitHere46","String"
"556splitHere46","1759565splitHere46","Integer"
"557splitHere46","1759565splitHere46","public <S, T> void func(Set<S> s, Set<T> t)<newline46mondego>"
"558splitHere46","1759565splitHere46","S"
"559splitHere46","1759565splitHere46","T"
"560splitHere46","1759565splitHere46","public class MyClass<S, T> {<newline46mondego>   public        void foo(Set<S> s, Set<T> t); //same type params as on class<newline46mondego>   public <U, V> void bar(Set<U> s, Set<V> t); //type params independent of class<newline46mondego>}<newline46mondego>"
"561splitHere46","1759565splitHere46","java.util"
"562splitHere46","1759565splitHere46","? extends"
"563splitHere46","1759565splitHere46","? super"
"564splitHere46","1759565splitHere46","Set<Number>"
"565splitHere46","1759565splitHere46","Set<Integer>"
"566splitHere46","1759565splitHere46","public void baz(Set<? extends T> s);<newline46mondego>"
"567splitHere46","1759565splitHere46","int"
"568splitHere46","1759678splitHere46","return !result.isEmpty();<newline46mondego>"
"569splitHere46","1759784splitHere46","KeyStroke.getKeyStroke(keyCode, <newline46mondego>  java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.META_MASK);<newline46mondego>"
"570splitHere46","1759857splitHere46","takeLast()"
"571splitHere46","1759857splitHere46","putLast(E e)"
"572splitHere46","1759857splitHere46","putFirst(E e)"
"573splitHere46","1759857splitHere46","Queue"
"574splitHere46","1759857splitHere46","blockingPeek()"
"575splitHere46","1759857splitHere46","takeLast()"
"576splitHere46","1759857splitHere46","putLast()"
"577splitHere46","1759857splitHere46","LinkedBlockingDeque"
"578splitHere46","1759958splitHere46","+1 == O"
"579splitHere46","1759958splitHere46","-1 == X"
"580splitHere46","1759958splitHere46","0"
"581splitHere46","1759958splitHere46","+3"
"582splitHere46","1759958splitHere46","-3"
"583splitHere46","1759958splitHere46","$ java Board<newline46mondego>Creating board:<newline46mondego><newline46mondego>---<newline46mondego>---<newline46mondego>---<newline46mondego><newline46mondego>Initialising board:<newline46mondego><newline46mondego>-OX<newline46mondego>O--<newline46mondego>XO-<newline46mondego>Terminal state: false<newline46mondego><newline46mondego><newline46mondego>Generating next move states:<newline46mondego><newline46mondego>XOX<newline46mondego>O--<newline46mondego>XO-<newline46mondego><newline46mondego>-OX<newline46mondego>OX-<newline46mondego>XO-<newline46mondego><newline46mondego>-OX<newline46mondego>O-X<newline46mondego>XO-<newline46mondego><newline46mondego>-OX<newline46mondego>O--<newline46mondego>XOX<newline46mondego>"
"584splitHere46","1759958splitHere46","import java.util.List;<newline46mondego>import java.util.LinkedList;<newline46mondego>import java.util.Random;<newline46mondego><newline46mondego>public class Board {<newline46mondego>    private final int[] squares;<newline46mondego><newline46mondego>    public Board() {<newline46mondego>    this.squares = new int[9];<newline46mondego>    }<newline46mondego><newline46mondego>    protected Board(int[] squares) {<newline46mondego>    this.squares = squares;<newline46mondego>    }<newline46mondego><newline46mondego>    public void init() {<newline46mondego>    Random rnd = new Random();<newline46mondego>    int turn = 1; // 'O' always goes first.<newline46mondego><newline46mondego>        for (int i=0; i<squares.length; ++i) {<newline46mondego>        double d = rnd.nextDouble();<newline46mondego><newline46mondego>        if (d < 0.75) {<newline46mondego>    	squares[i] = turn;<newline46mondego>    	turn = turn == 1 ? -1 : 1; // Flip to other player's turn.<newline46mondego>        } else {<newline46mondego>    	squares[i] = 0; // Empty square.<newline46mondego>        }<newline46mondego><newline46mondego>        if (isTerminalState()) {<newline46mondego>    	break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isTerminalState() {<newline46mondego>    boolean ret = false;<newline46mondego><newline46mondego>    boolean foundEmpty = false;<newline46mondego>    int hSum = 0;<newline46mondego>    int[] vSum = new int[3];<newline46mondego><newline46mondego>    for (int i=0; i<squares.length; ++i) {<newline46mondego>        hSum += squares[i];<newline46mondego><newline46mondego>        if (isWinningRow(hSum)) {<newline46mondego>    	ret = true;<newline46mondego>    	break;<newline46mondego>        } else if (i == 2 || i == 5) {<newline46mondego>    	hSum = 0;<newline46mondego>        }<newline46mondego><newline46mondego>        int col = i % 3;<newline46mondego>        vSum[col] += squares[i];<newline46mondego><newline46mondego>        if (isWinningRow(vSum[col])) {<newline46mondego>    	ret = true;<newline46mondego>    	break;<newline46mondego>        }<newline46mondego><newline46mondego>        if (squares[i] == 0) {<newline46mondego>    	foundEmpty = true;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    if (!ret) {<newline46mondego>        if (!foundEmpty) {<newline46mondego>    	ret = true;<newline46mondego>        } else {<newline46mondego>    	int diag1 = 0;<newline46mondego>    	int diag2 = 0;<newline46mondego>    	int rowSz = (int)Math.sqrt(squares.length);<newline46mondego><newline46mondego>    	for (int i=0; i<squares.length; ++i) {<newline46mondego>    	    if (i % (rowSz + 1) == 0) {<newline46mondego>    		diag1 += squares[i];<newline46mondego><newline46mondego>    		if (isWinningRow(diag1)) {<newline46mondego>    		    ret = true;<newline46mondego>    		    break;<newline46mondego>    		}<newline46mondego>    	    }<newline46mondego><newline46mondego>    	    if (i > 0 && i % (rowSz - 1) == 0) {<newline46mondego>    		diag2 += squares[i];<newline46mondego><newline46mondego>    		if (isWinningRow(diag2)) {<newline46mondego>    		    ret = true;<newline46mondego>    		    break;<newline46mondego>    		}<newline46mondego>    	    }<newline46mondego>    	}<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return ret;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean isWinningRow(int rowSum) {<newline46mondego>    return rowSum == 3 || rowSum == -3;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Board> getNextStates() {<newline46mondego>    List<Board> ret = new LinkedList<Board>();<newline46mondego><newline46mondego>    int tmp = 0;<newline46mondego>    for (int i=0; i<squares.length; ++i) {<newline46mondego>        tmp += squares[i];<newline46mondego>    }<newline46mondego><newline46mondego>    // Next turn is 'O' (i.e. +1) if the board sums to 0.<newline46mondego>    // Otherwise it's 'X's turn.<newline46mondego>    int turn = tmp == 0 ? 1 : -1;<newline46mondego><newline46mondego>    if (!isTerminalState()) {<newline46mondego>        for (int i=0; i<squares.length; ++i) {<newline46mondego>    	if (squares[i] == 0) { // Empty square		    <newline46mondego>    	    int[] squaresA = new int[squares.length];<newline46mondego>    	    System.arraycopy(squares, 0, squaresA, 0, squares.length);<newline46mondego>    	    squaresA[i] = turn;<newline46mondego>    	    ret.add(new Board(squaresA));<newline46mondego>    	}<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return ret;<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString() {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego><newline46mondego>    for (int i=0; i<squares.length; ++i) {<newline46mondego>        if (squares[i] == 1) {<newline46mondego>    	sb.append('O');<newline46mondego>        } else if (squares[i] == -1) {<newline46mondego>    	sb.append('X');<newline46mondego>        } else {<newline46mondego>    	assert squares[i] == 0;<newline46mondego>    	sb.append('-');<newline46mondego>        }<newline46mondego><newline46mondego>        if (i == 2 || i == 5) {<newline46mondego>    	sb.append('\n');<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return sb.toString();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>    System.err.println(<doubleQuotes46>Creating board:\n<doubleQuotes46>);<newline46mondego>    Board bd = new Board();<newline46mondego>    System.err.println(bd);<newline46mondego><newline46mondego>    System.err.println(<doubleQuotes46>\nInitialising board:\n<doubleQuotes46>);<newline46mondego>    bd.init();<newline46mondego>    System.err.println(bd);<newline46mondego>    System.err.println(<doubleQuotes46>Terminal state: <doubleQuotes46> + bd.isTerminalState() + '\n');<newline46mondego><newline46mondego>    System.err.println(<doubleQuotes46>\nGenerating next move states:\n<doubleQuotes46>);<newline46mondego>    List<Board> nextStates = bd.getNextStates();<newline46mondego><newline46mondego>    for (Board bd1 : nextStates) {<newline46mondego>        System.err.println(bd1.toString() + '\n');<newline46mondego>    }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"585splitHere46","1760017splitHere46","k=1"
"586splitHere46","1760017splitHere46","i=0"
"587splitHere46","1760017splitHere46","i=1"
"588splitHere46","1760017splitHere46","i<=k"
"589splitHere46","1760017splitHere46","i<k"
"590splitHere46","1760385splitHere46","signal()"
"591splitHere46","1760385splitHere46","Condition"
"592splitHere46","1760385splitHere46","notify()"
"593splitHere46","1760385splitHere46","synchronize"
"594splitHere46","1760385splitHere46","Condition"
"595splitHere46","1760385splitHere46","wait()"
"596splitHere46","1760385splitHere46","notify()"
"597splitHere46","1760385splitHere46","Object"
"598splitHere46","1760385splitHere46","Condition"
"599splitHere46","1760385splitHere46","await()"
"600splitHere46","1760385splitHere46","signal()"
"601splitHere46","1760531splitHere46","Queue new1 = new Queue();<newline46mondego>new1.enqueu(1);<newline46mondego>new1.enqueu(3);<newline46mondego>new1.enqueu(5);<newline46mondego><newline46mondego>Queue new2 = new Queue();<newline46mondego>new1.enqueu(2);<newline46mondego>new1.enqueu(4);<newline46mondego>new1.enqueu(6);<newline46mondego>"
"602splitHere46","1760531splitHere46","new1"
"603splitHere46","1760531splitHere46","new2"
"604splitHere46","1760531splitHere46","merge"
"605splitHere46","1760531splitHere46","Queue"
"606splitHere46","1760531splitHere46","Queue q = new Queue();<newline46mondego>Queue merged = q.merge(new1, new2);<newline46mondego>"
"607splitHere46","1760531splitHere46","static Queue merge(Queue q1, Queue q2) {<newline46mondego>     ...<newline46mondego>}<newline46mondego><newline46mondego>//in main()...<newline46mondego>Queue merged = Queue.merge(new1, new2);<newline46mondego>"
"608splitHere46","1760668splitHere46","ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>PrintStream ps = new PrintStream(baos);<newline46mondego>your_function(object, ps);<newline46mondego>String content = baos.toString(charsetName); // e.g. ISO-8859-1<newline46mondego>"
"609splitHere46","1760686splitHere46","throws"
"610splitHere46","1760686splitHere46","new FileInputStream(File pFile)"
"611splitHere46","1760686splitHere46","FileInputStream"
"612splitHere46","1760686splitHere46","File"
"613splitHere46","1760686splitHere46","public String readTextFile(File pFile) {<newline46mondego>    try {<newline46mondego>        FileInputStream FIO = new FileInputStream(pFile);<newline46mondego>        ... // Do the reading and return<newline46mondego>    } catch (FileNotFoundException E) {<newline46mondego>        System.err.println(<doubleQuotes46>The file is not found<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}"
"614splitHere46","1760686splitHere46","public String readTextFile(File pFile) throws FileNotFoundException {<newline46mondego>    FileInputStream FIO = new FileInputStream(pFile);<newline46mondego>    ... // Do the reading and return<newline46mondego>}"
"615splitHere46","1760686splitHere46","readTextFile"
"616splitHere46","1760868splitHere46","SecretKeyFactory"
"617splitHere46","1760937splitHere46","/*<newline46mondego> * JavaScript Pretty Date<newline46mondego> * Copyright (c) 2008 John Resig (jquery.com)<newline46mondego> * Licensed under the MIT license.<newline46mondego> */<newline46mondego><newline46mondego>// Takes an ISO time and returns a string representing how<newline46mondego>// long ago the date represents.<newline46mondego>function prettyDate(time){<newline46mondego>    var date = new Date((time || <doubleQuotes46><doubleQuotes46>).replace(/-/g,<doubleQuotes46>/<doubleQuotes46>).replace(/[TZ]/g,<doubleQuotes46> <doubleQuotes46>)),<newline46mondego>    	diff = (((new Date()).getTime() - date.getTime()) / 1000),<newline46mondego>    	day_diff = Math.floor(diff / 86400);<newline46mondego><newline46mondego>    if ( isNaN(day_diff) || day_diff < 0 || day_diff >= 31 )<newline46mondego>    	return;<newline46mondego><newline46mondego>    return day_diff == 0 && (<newline46mondego>    		diff < 60 && <doubleQuotes46>just now<doubleQuotes46> ||<newline46mondego>    		diff < 120 && <doubleQuotes46>1 minute ago<doubleQuotes46> ||<newline46mondego>    		diff < 3600 && Math.floor( diff / 60 ) + <doubleQuotes46> minutes ago<doubleQuotes46> ||<newline46mondego>    		diff < 7200 && <doubleQuotes46>1 hour ago<doubleQuotes46> ||<newline46mondego>    		diff < 86400 && Math.floor( diff / 3600 ) + <doubleQuotes46> hours ago<doubleQuotes46>) ||<newline46mondego>    	day_diff == 1 && <doubleQuotes46>Yesterday<doubleQuotes46> ||<newline46mondego>    	day_diff < 7 && day_diff + <doubleQuotes46> days ago<doubleQuotes46> ||<newline46mondego>    	day_diff < 31 && Math.ceil( day_diff / 7 ) + <doubleQuotes46> weeks ago<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>// If jQuery is included in the page, adds a jQuery plugin to handle it as well<newline46mondego>if ( typeof jQuery != <doubleQuotes46>undefined<doubleQuotes46> )<newline46mondego>    jQuery.fn.prettyDate = function(){<newline46mondego>    	return this.each(function(){<newline46mondego>    		var date = prettyDate(this.title);<newline46mondego>    		if ( date )<newline46mondego>    			jQuery(this).text( date );<newline46mondego>    	});<newline46mondego>    };<newline46mondego>"
"618splitHere46","1761232splitHere46","hashCode()"
"619splitHere46","1761232splitHere46","public int hashCode() {       <newline46mondego>    Arrays.sort(a);<newline46mondego>    Arrays.sort(b);       <newline46mondego>    return a[0] + powerOf52(a[1], 1) + powerOf52(b[0], 2) + powerOf52(b[1], 3) + powerOf52(b[2], 4);<newline46mondego>}<newline46mondego><newline46mondego>public static int powerOf52(byte b, int power) {<newline46mondego>    int result = b;<newline46mondego>    for (int i = 0; i < power; i++) {<newline46mondego>        result *= 52;<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"620splitHere46","1761232splitHere46","hashCode()"
"621splitHere46","1761232splitHere46","168350.17<newline46mondego>109409.195<newline46mondego>81344.91<newline46mondego>64319.023<newline46mondego>53780.79<newline46mondego>45931.258<newline46mondego>39680.29<newline46mondego>34972.676<newline46mondego>31354.514<newline46mondego>28343.062<newline46mondego>25562.371<newline46mondego>23850.695<newline46mondego>22299.22<newline46mondego>20998.006<newline46mondego>19797.799<newline46mondego>18702.951<newline46mondego>17702.434<newline46mondego>16832.182<newline46mondego>16084.52<newline46mondego>15353.083<newline46mondego>"
"622splitHere46","1761232splitHere46","337837.84<newline46mondego>337268.12<newline46mondego>337078.66<newline46mondego>336983.97<newline46mondego>313873.2<newline46mondego>317460.3<newline46mondego>317748.5<newline46mondego>320000.0<newline46mondego>309704.06<newline46mondego>310752.03<newline46mondego>312944.5<newline46mondego>265780.75<newline46mondego>275540.5<newline46mondego>264350.44<newline46mondego>273522.97<newline46mondego>270910.94<newline46mondego>279008.7<newline46mondego>276285.5<newline46mondego>283455.16<newline46mondego>289603.25<newline46mondego>"
"623splitHere46","1761357splitHere46","java.io.FileReader"
"624splitHere46","1761357splitHere46","java.io.BufferedReader"
"625splitHere46","1761357splitHere46","java.util.regexp.Pattern"
"626splitHere46","1761441splitHere46","<h:outputText value=<doubleQuotes46>#{currentDate}<doubleQuotes46>><newline46mondego>   <f:convertDateTime type=<doubleQuotes46>date<doubleQuotes46> pattern=<doubleQuotes46>dd.MM.yyyy<doubleQuotes46> /><newline46mondego></h:outputText><newline46mondego>"
"627splitHere46","1761523splitHere46","salt"
"628splitHere46","1761523splitHere46","password"
"629splitHere46","1761523splitHere46","char[] password = args[0].toCharArray();<newline46mondego>byte[] salt = new byte[8];<newline46mondego>for (int i = 0; i < 8; ++i) {<newline46mondego>  salt[i] = (byte) Integer.parseInt(args[1].substring(i * 2, i * 2 + 2), 16);<newline46mondego>}<newline46mondego>"
"630splitHere46","1761545splitHere46","if ( model.isFileLoaded() ){<newline46mondego>     enable buttons<newline46mondego>} else {<newline46mondego>      disable all buttons except the load<newline46mondego>      if ( model.hadError() ) {<newline46mondego>          display helpful message (and let user specify a different file)<newline46mondego>      }<newline46mondego>}<newline46mondego>"
"631splitHere46","1761714splitHere46","{workspace_loc:"
"632splitHere46","1761714splitHere46","}"
"633splitHere46","1761777splitHere46","@Autowired"
"634splitHere46","1761777splitHere46","@Component"
"635splitHere46","1761840splitHere46",".so"
"636splitHere46","1761878splitHere46","<link rel=<doubleQuotes46>stylesheet<doubleQuotes46> href=<doubleQuotes46>mobile.css<doubleQuotes46> media=<doubleQuotes46>handheld<doubleQuotes46>/><newline46mondego>"
"637splitHere46","1761932splitHere46","Timer"
"638splitHere46","1761932splitHere46","Timer"
"639splitHere46","1762207splitHere46","String result = regex.replaceAll( <doubleQuotes46>.*@@.*<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> );<newline46mondego>"
"640splitHere46","1762207splitHere46","<doubleQuotes46>(?m)^.*@@.*$<doubleQuotes46><newline46mondego>"
"641splitHere46","1762207splitHere46","String result = regex.replaceAll( <doubleQuotes46>.*@@.*(\r?\n|\r)?<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> );<newline46mondego>"
"642splitHere46","1762280splitHere46","KeyGenerator"
"643splitHere46","1762280splitHere46","KeyGenerator"
"644splitHere46","1762286splitHere46","start()"
"645splitHere46","1762286splitHere46","stop()"
"646splitHere46","1762286splitHere46","<bean class=<doubleQuotes46>MyClass<doubleQuotes46> init-method=<doubleQuotes46>start<doubleQuotes46> destroy-method=<doubleQuotes46>stop<doubleQuotes46>/><newline46mondego>"
"647splitHere46","1762286splitHere46","ServletContextListener"
"648splitHere46","1762627splitHere46","configFile.load(new FileReader(new File(propertyFile)));<newline46mondego>"
"649splitHere46","1762629splitHere46","HttpServletRequest#getParameterValues()"
"650splitHere46","1762629splitHere46","<logic:iterate id=<doubleQuotes46>foo<doubleQuotes46> name=<doubleQuotes46>bean<doubleQuotes46> property=<doubleQuotes46>arrayOrList<doubleQuotes46>>  <newline46mondego>    <html:hidden name=<doubleQuotes46>paramName<doubleQuotes46> property=<doubleQuotes46>propertyName<doubleQuotes46> indexed=<doubleQuotes46>true<doubleQuotes46> />  <newline46mondego></logic:iterate><newline46mondego>"
"651splitHere46","1762975splitHere46","package arrayExceptionsWithInput;<newline46mondego>import java.util.*;<newline46mondego>public class InputException<newline46mondego>{<newline46mondego>public static void main(String[] args)<newline46mondego>{<newline46mondego>boolean error = false;<newline46mondego>int firstInt;<newline46mondego>int secondInt;<newline46mondego>Scanner yourNumbers = new Scanner(System.in);<newline46mondego>{<newline46mondego>	do{<newline46mondego>			try<newline46mondego>			{<newline46mondego><newline46mondego>					System.out.println(<doubleQuotes46> please enter your first number<doubleQuotes46>);<newline46mondego>					firstInt = yourNumbers.nextInt();<newline46mondego>					yourNumbers.nextLine();<newline46mondego>					System.out.println(<doubleQuotes46> pleas enter your second number<doubleQuotes46>);<newline46mondego>					secondInt = yourNumbers.nextInt();<newline46mondego>					yourNumbers.nextLine();<newline46mondego>					int finalInt = (firstInt+secondInt);<newline46mondego>					System.out.println(<doubleQuotes46>total is: <doubleQuotes46> + finalInt);<newline46mondego>					yourNumbers.nextLine();<newline46mondego><newline46mondego>			}<newline46mondego>			catch(InputMismatchException Q)<newline46mondego>			{<newline46mondego><newline46mondego>				Q.printStackTrace();<newline46mondego>				System.out.println(<doubleQuotes46> one of your integers was incorrect, please try again<doubleQuotes46>);<newline46mondego>				error = true;<newline46mondego>				yourNumbers.nextLine();<newline46mondego>			}	<newline46mondego>		}while (error == true);<newline46mondego>	}error = false;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"652splitHere46","1763095splitHere46","SELECT COUNT(Orders) FROM Orders WHERE NodeOrderedAt.IsDescendantOf(@Node)<newline46mondego>"
"653splitHere46","1763169splitHere46","// get the class of an object instance - any object.  <newline46mondego>// We just defined an empty one, and did everything as static.<newline46mondego>class EmptyClass{}<newline46mondego>Class loadClass = new EmptyClass().getClass();<newline46mondego>// load the image and put it directly into an ImageIcon if it suits you<newline46mondego>ImageIcon ii = new ImageIcon(loadClass.getResource(<doubleQuotes46>/com/blah/Images/a.png<doubleQuotes46>));<newline46mondego>// and add the ImageIcon to your JComponent or JPanel in a JLabel<newline46mondego>aComponent.add(new JLabel(ii));<newline46mondego>"
"654splitHere46","1763169splitHere46","jar -tf <archive_file_name>"
"655splitHere46","1763288splitHere46","@Override"
"656splitHere46","1763288splitHere46","ExecutorService"
"657splitHere46","1763288splitHere46","java.util"
"658splitHere46","1763288splitHere46","<T> T invokeAny(Collection<Callable<T>> tasks)<newline46mondego>"
"659splitHere46","1763288splitHere46","<T> T invokeAny(Collection<? extends Callable<T>> tasks)<newline46mondego>"
"660splitHere46","1763288splitHere46","List<MyCallable<String>>"
"661splitHere46","1763314splitHere46","web.xml"
"662splitHere46","1763314splitHere46","DefaultServlet"
"663splitHere46","1763314splitHere46","listings"
"664splitHere46","1763314splitHere46","false"
"665splitHere46","1763314splitHere46","<init-param><newline46mondego>    <param-name>listings</param-name><newline46mondego>    <param-value>false</param-value><newline46mondego></init-param><newline46mondego>"
"666splitHere46","1763849splitHere46","public static String readString(InputStream inputStream) throws IOException {<newline46mondego><newline46mondego>    ByteArrayOutputStream into = new ByteArrayOutputStream();<newline46mondego>    byte[] buf = new byte[4096];<newline46mondego>    for (int n; 0 < (n = inputStream.read(buf));) {<newline46mondego>        into.write(buf, 0, n);<newline46mondego>    }<newline46mondego>    into.close();<newline46mondego>    return new String(into.toByteArray(), <doubleQuotes46>UTF-8<doubleQuotes46>); // Or whatever encoding<newline46mondego>}<newline46mondego>"
"667splitHere46","1764098splitHere46","contact"
"668splitHere46","1764098splitHere46","group"
"669splitHere46","1764098splitHere46","Contact"
"670splitHere46","1764098splitHere46","Group"
"671splitHere46","1764098splitHere46","contactToGroup"
"672splitHere46","1764098splitHere46","from Contact c <newline46mondego>left join fetch c.contactToGroupSet joinTable <newline46mondego>left join fetch joinTable.Group<newline46mondego>"
"673splitHere46","1764158splitHere46","java.awt.*"
"674splitHere46","1764158splitHere46","java.awt.font"
"675splitHere46","1764158splitHere46","java.awt.font"
"676splitHere46","1764158splitHere46","java.awt.font.*"
"677splitHere46","1764158splitHere46","java.awt"
"678splitHere46","1764158splitHere46","java.awt.color"
"679splitHere46","1764229splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>public class MyClass extends JPanel {<newline46mondego>    private JLayeredPane layeredPane;<newline46mondego>    private JLabel imageContainer = new JLabel();<newline46mondego>    private JButton info = new JButton(<doubleQuotes46>i<doubleQuotes46>);<newline46mondego><newline46mondego>    MyClass(ImageIcon image) {<newline46mondego>        super();<newline46mondego><newline46mondego>        this.imageContainer.setIcon(image);<newline46mondego><newline46mondego>        this.layeredPane = new JLayeredPane();<newline46mondego>        layeredPane.setPreferredSize(new Dimension(300, 300));<newline46mondego>        layeredPane.add(imageContainer, new Integer(50));<newline46mondego>        layeredPane.add(info, new Integer(100));<newline46mondego>        this.add(layeredPane);<newline46mondego>        // CHANGED CODE<newline46mondego>        // Manually set layout the components. <newline46mondego>        imageContainer.setBounds( 0, 0,  <newline46mondego>                                  image.getIconWidth(),<newline46mondego>                                  image.getIconHeight() ); <newline46mondego>        info.setBounds( 200, 00,  50, 40 );<newline46mondego>    }<newline46mondego>    public static void main( String [] args ) {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>        frame.add( new MyClass( new ImageIcon(<doubleQuotes46>logo.png<doubleQuotes46>)  ) );<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible( true );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"680splitHere46","1764254splitHere46","kgen = KeyGenerator.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>        kgen.init(128);<newline46mondego>        // Generate the secret key specs.<newline46mondego>        SecretKey skey = kgen.generateKey();<newline46mondego>        byte[] raw = skey.getEncoded();<newline46mondego>        SecretKeySpec skeySpec = new SecretKeySpec(raw, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"681splitHere46","1764417splitHere46","Robot robot;             // Set speaker volume to 80<newline46mondego>try<newline46mondego>{<newline46mondego>  robot=new Robot();<newline46mondego>  robot.mouseMove(1828,1178);<newline46mondego>  robot.mousePress(InputEvent.BUTTON1_MASK);<newline46mondego>  robot.mouseRelease(InputEvent.BUTTON1_MASK);<newline46mondego>  robot.delay(90);<newline46mondego>  robot.mouseMove(1828,906);<newline46mondego>  robot.mousePress(InputEvent.BUTTON1_MASK);<newline46mondego>  robot.mouseRelease(InputEvent.BUTTON1_MASK);<newline46mondego>  robot.delay(260);<newline46mondego>  robot.mousePress(InputEvent.BUTTON1_MASK);<newline46mondego>  robot.mouseRelease(InputEvent.BUTTON1_MASK);<newline46mondego>}<newline46mondego>catch (AWTException ex)<newline46mondego>{<newline46mondego>  System.err.println(<doubleQuotes46>Can't start Robot: <doubleQuotes46> + ex);<newline46mondego>  System.exit(0);<newline46mondego>}<newline46mondego>"
"682splitHere46","1764642splitHere46","Method.getGenericParameterTypes();<newline46mondego>"
"683splitHere46","1764642splitHere46","Method m = Something.class.getMethod(<doubleQuotes46>setCollection<doubleQuotes46>, Collection.class);<newline46mondego>    Class<?> parameter = (Class<?>) ((ParameterizedType) m.getGenericParameterTypes()[0]).getActualTypeArguments()[0];<newline46mondego>"
"684splitHere46","1765035splitHere46","int[][][] ary = {{{0},{1}}};<newline46mondego><newline46mondego>		Class cls = ary.getClass();<newline46mondego><newline46mondego>		boolean isAry = cls.isArray();<newline46mondego>		String clsName = cls.getName();<newline46mondego><newline46mondego>		System.out.println(<doubleQuotes46>is array=<doubleQuotes46> + isAry);<newline46mondego>		System.out.println(<doubleQuotes46>name=<doubleQuotes46> + clsName);<newline46mondego><newline46mondego>		int nrDims = 1 + clsName.lastIndexOf('[');<newline46mondego><newline46mondego>		System.out.println(<doubleQuotes46>nrDims=<doubleQuotes46> + nrDims);<newline46mondego><newline46mondego>		Object orly = ary;<newline46mondego><newline46mondego>		for (int n = 0; n < nrDims; n++) {<newline46mondego><newline46mondego>			int len = Array.getLength(orly);<newline46mondego><newline46mondego>			System.out.println(<doubleQuotes46>dim[<doubleQuotes46> + n + <doubleQuotes46>]=<doubleQuotes46> + len);<newline46mondego><newline46mondego>			if (0 < len) {<newline46mondego>				orly = Array.get(orly, 0);<newline46mondego>			}<newline46mondego>		}<newline46mondego>"
"685splitHere46","1765035splitHere46","is array=true<newline46mondego>name=[[[I<newline46mondego>nrDims=3<newline46mondego>dim[0]=1<newline46mondego>dim[1]=2<newline46mondego>dim[2]=1<newline46mondego>"
"686splitHere46","1765060splitHere46","import java.io.*;<newline46mondego>import java.util.*;<newline46mondego>import org.jruby.embed.ScriptingContainer;<newline46mondego>import org.apache.commons.codec.binary.Base64;<newline46mondego>import javax.servlet.*;<newline46mondego>import javax.servlet.http.*;<newline46mondego><newline46mondego>public class process extends HttpServlet {<newline46mondego><newline46mondego>  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>   HttpSession session = request.getSession(true);<newline46mondego><newline46mondego>    PrintWriter out = response.getWriter();<newline46mondego>    Cookie[] cookies = request.getCookies();<newline46mondego><newline46mondego>    for(int i=0; i<cookies.length; i++) {<newline46mondego>      Cookie cookie = cookies[i];<newline46mondego><newline46mondego>      // base64 decode, then un-marshall ruby style...<newline46mondego>      // finally figure out what to do with our session secret key<newline46mondego>      if(cookie.getName().equals(<doubleQuotes46>_session_id<doubleQuotes46>)) {<newline46mondego>        ScriptingContainer container = new ScriptingContainer();<newline46mondego>        container.setWriter(out);<newline46mondego>        container.runScriptlet(<doubleQuotes46>require 'base64'; puts \<doubleQuotes46><doubleQuotes46> + cookie.getValue() + <doubleQuotes46>\<doubleQuotes46>; <doubleQuotes46> +<newline46mondego>                              <doubleQuotes46>puts Marshal.load(Base64.decode64(\<doubleQuotes46><doubleQuotes46> + cookie.getValue() + <doubleQuotes46>\<doubleQuotes46>)).to_s; <doubleQuotes46>);<newline46mondego>      }                       <newline46mondego><newline46mondego>    } <newline46mondego><newline46mondego>}     <newline46mondego>}<newline46mondego>"
"687splitHere46","1765287splitHere46","chflags -R nouchg .<newline46mondego>"
"688splitHere46","1765349splitHere46","listModel.addElement(tivitImage.getImage()); // maybe this part is wrong<newline46mondego>"
"689splitHere46","1765435splitHere46","For each char c in original string {<newline46mondego>  hash[c]++<newline46mondego>}<newline46mondego>For each target string str {<newline46mondego>  For each char c_ in str {<newline46mondego>    if hash[c_] > 0 {<newline46mondego>      result++;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"690splitHere46","1766511splitHere46","interface Function<T> {<newline46mondego>    public T eval(T argument);<newline46mondego>}<newline46mondego><newline46mondego>class Lazy<T> {<newline46mondego>    private Iterator<T> source;<newline46mondego>    private Function<T> filter;<newline46mondego>    Lazy(final Iterator<t> source, final Function<T> filter) {<newline46mondego>        this.source = source;<newline46mondego>        this.filter = filter;<newline46mondego>    }<newline46mondego>    public T step() {<newline46mondego>        return filter.eval(source.next());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"691splitHere46","1766705splitHere46","public interface UInterface {<newline46mondego><newline46mondego>         Collection<? extends UInterface> getCollection();<newline46mondego><newline46mondego>  }<newline46mondego>"
"692splitHere46","1766705splitHere46","public interface UInterface<T extends UInterface> {<newline46mondego><newline46mondego>        Collection<T> getCollection();<newline46mondego><newline46mondego> }<newline46mondego>"
"693splitHere46","1766705splitHere46","public class TClass implements UInterface<TClass> {<newline46mondego><newline46mondego>        pubic Collection<TClass> getCollection();<newline46mondego><newline46mondego> }<newline46mondego>"
"694splitHere46","1766725splitHere46","AutoPilot ap2 = new AutoPilot(); ap2.selectXPath(<doubleQuotes46>blah<doubleQuotes46>);<newline46mondego>"
"695splitHere46","1766725splitHere46","while ((result = ap.evalXPath()) != -1) {<newline46mondego> // evaluate XPath Expressions within the test tags<newline46mondego>  int i2=-1;<newline46mondego>  while((i2=ap2.evalXPath())!=-1){<newline46mondego>     // do more stuff here<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"696splitHere46","1766732splitHere46","isReadOnly"
"697splitHere46","1766732splitHere46","false"
"698splitHere46","1766732splitHere46","true"
"699splitHere46","1766797splitHere46","public Book(String title, String author, String date, String deweyClassification, String isbn)<newline46mondego>"
"700splitHere46","1766797splitHere46","public Book(String title, String author, Date date, Dewey deweyClassification, ISBN isbn)<newline46mondego>"
"701splitHere46","1766797splitHere46","Book"
"702splitHere46","1766797splitHere46","ISBN"
"703splitHere46","1766797splitHere46","Book"
"704splitHere46","1766797splitHere46","Strings"
"705splitHere46","1767138splitHere46","@Override<newline46mondego>public void handleStartTag(Tag t, MutableAttributeSet a, int pos) {<newline46mondego>    if (Tag.DIV.equals(t)) {<newline46mondego>        String id = (String) a.getAttribute(HTML.Attribute.ID);<newline46mondego>        String clazz = (String) a.getAttribute(HTML.Attribute.CLASS);<newline46mondego>        ...<newline46mondego>"
"706splitHere46","1767277splitHere46","-Xms512m -Xmx512m"
"707splitHere46","1767277splitHere46","jvm.dll"
"708splitHere46","1767277splitHere46","ThreadPool"
"709splitHere46","1767540splitHere46","BinaryTreeNode b1 = new BinaryTreeNode(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>BinaryTreeNode b3 = new BinaryTreeNode(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>BinaryTreeNode b5 = new BinaryTreeNode(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego>BinaryTreeNode bAB = new BinaryTreeNode(<doubleQuotes46>-<doubleQuotes46>, b1, b3);<newline46mondego>BinaryTreeNode bRoot = new BinaryTreeNode(<doubleQuotes46>/<doubleQuotes46>, bAB, b5);<newline46mondego>"
"710splitHere46","1767821splitHere46","<s:layout-component>"
"711splitHere46","1767821splitHere46","<jsp:include>"
"712splitHere46","1767821splitHere46","<c:forEach>"
"713splitHere46","1767821splitHere46","<jsp:include>"
"714splitHere46","1767821splitHere46","<jsp:param>"
"715splitHere46","1767821splitHere46","<jsp:include>"
"716splitHere46","1767821splitHere46","<stripes:param>"
"717splitHere46","1767821splitHere46","<%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> %><newline46mondego><newline46mondego><% <newline46mondego>    // Just for demo purposes. Do NOT use scriptlets in real work.<newline46mondego>    request.setAttribute(<doubleQuotes46>items<doubleQuotes46>, java.util.Arrays.asList(<doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>bar<doubleQuotes46>, <doubleQuotes46>waa<doubleQuotes46>));<newline46mondego>%><newline46mondego><newline46mondego><c:forEach items=<doubleQuotes46>${items}<doubleQuotes46> var=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>    <jsp:include page=<doubleQuotes46>include.jsp<doubleQuotes46>><newline46mondego>        <jsp:param name=<doubleQuotes46>item<doubleQuotes46> value=<doubleQuotes46>${item}<doubleQuotes46> /><newline46mondego>    </jsp:include><newline46mondego></c:forEach><newline46mondego>"
"718splitHere46","1767821splitHere46","${param.item}<newline46mondego><newline46mondego>"
"719splitHere46","1767821splitHere46","foo<newline46mondego>bar<newline46mondego>waa<newline46mondego>"
"720splitHere46","1768089splitHere46","TreePrinter.printNewickFormat(tree, output);<newline46mondego>output.close(); // <-- this is the missing part<newline46mondego>} catch (IOException e) {<newline46mondego>"
"721splitHere46","1768089splitHere46","delete()"
"722splitHere46","1768089splitHere46","createNewFile()"
"723splitHere46","1768120splitHere46","myControl.Dispose(),"
"724splitHere46","1768123splitHere46","class Temperature implements Comparable<Temperature> {<newline46mondego>    private double kelvinTemperature; // Kelvin is probably the better scale to store a temperature <newline46mondego>    public int compareTo(Temperature t) {<newline46mondego>        if(t.kelvinTemperature > this.kelvinTemperature)<newline46mondego>            return 1;<newline46mondego>        else if (t.kelvinTemperature < this.kelvinTemperature)<newline46mondego>            return -1;<newline46mondego>        else<newline46mondego>            return 0; <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"725splitHere46","1768123splitHere46","public static Temperature fromCelsius(double celsiusTemperature)<newline46mondego>"
"726splitHere46","1768123splitHere46","public static Temperature WATER_FREEZING_POINT = Temperature.fromCelsius(0.0);<newline46mondego>"
"727splitHere46","1768123splitHere46","boolean belowFreezing = temperatureInstance.compareTo(WATER_FREEZING_POINT) < 0;<newline46mondego>"
"728splitHere46","1768163splitHere46","public class Overlay<newline46mondego>{<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Transparent Window<doubleQuotes46>);<newline46mondego>        frame.setBackground(new Color(0, 0, 0, 0));<newline46mondego>        frame.setUndecorated(true);<newline46mondego>        frame.setAlwaysOnTop(true);<newline46mondego>        // Without this, the window is draggable from any non transparent<newline46mondego>        // point, including points  inside textboxes.<newline46mondego>        frame.getRootPane().putClientProperty(<doubleQuotes46>apple.awt.draggableWindowBackground<doubleQuotes46>, false);<newline46mondego><newline46mondego>        frame.getContentPane().setLayout(new java.awt.BorderLayout());<newline46mondego>        frame.getContentPane().add(new JTextField(<doubleQuotes46>text field north<doubleQuotes46>), java.awt.BorderLayout.NORTH);<newline46mondego>        frame.getContentPane().add(new JTextField(<doubleQuotes46>text field south<doubleQuotes46>), java.awt.BorderLayout.SOUTH);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"729splitHere46","1768245splitHere46","public void modify(int newX, int y, int width, int h) {<newline46mondego>    int x = newX;  // the value isn't saved to the class members<newline46mondego>    this.y = y; // this is saved, hence you see the change in the y value<newline46mondego>    width = width; // meaningless, the variable is overwritten with it's own value<newline46mondego>    this.height = height; // who is height? the function receives h<newline46mondego>}<newline46mondego>"
"730splitHere46","1768273splitHere46","java.lang.Class"
"731splitHere46","1768273splitHere46","java.lang.Class"
"732splitHere46","1768273splitHere46","Class<MyObject>"
"733splitHere46","1768388splitHere46","String[] columnNames = {<doubleQuotes46>First Name<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46>Last Name<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46>Sport<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46># of Years<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46>Vegetarian<doubleQuotes46>};<newline46mondego><newline46mondego>Object[][] data = {<newline46mondego>    {<doubleQuotes46>Mary<doubleQuotes46>, <doubleQuotes46>Campione<doubleQuotes46>,<newline46mondego>     <doubleQuotes46>Snowboarding<doubleQuotes46>, new Integer(5), new Boolean(false)},<newline46mondego>    {<doubleQuotes46>Alison<doubleQuotes46>, <doubleQuotes46>Huml<doubleQuotes46>,<newline46mondego>     <doubleQuotes46>Rowing<doubleQuotes46>, new Integer(3), new Boolean(true)},<newline46mondego>    {<doubleQuotes46>Kathy<doubleQuotes46>, <doubleQuotes46>Walrath<doubleQuotes46>,<newline46mondego>     <doubleQuotes46>Knitting<doubleQuotes46>, new Integer(2), new Boolean(false)},<newline46mondego>    {<doubleQuotes46>Sharon<doubleQuotes46>, <doubleQuotes46>Zakhour<doubleQuotes46>,<newline46mondego>     <doubleQuotes46>Speed reading<doubleQuotes46>, new Integer(20), new Boolean(true)},<newline46mondego>    {<doubleQuotes46>Philip<doubleQuotes46>, <doubleQuotes46>Milne<doubleQuotes46>,<newline46mondego>     <doubleQuotes46>Pool<doubleQuotes46>, new Integer(10), new Boolean(false)}<newline46mondego>};<newline46mondego><newline46mondego>JTable table = new JTable(data, columnNames);<newline46mondego>"
"734splitHere46","1768388splitHere46","columnNames"
"735splitHere46","1768388splitHere46","data"
"736splitHere46","1768437splitHere46","if (searchString.equals(array[i].getBoatMaterial())) {<newline46mondego>"
"737splitHere46","1768440splitHere46","Input: A 2x10 matrix P storing 10 2D points <newline46mondego>       and tolerance = tolerance for error.<newline46mondego>Output: The equation of the ellipse in the matrix form, <newline46mondego>        i.e. a 2x2 matrix A and a 2x1 vector C representing <newline46mondego>        the center of the ellipse.<newline46mondego><newline46mondego>// Dimension of the points<newline46mondego>d = 2;   <newline46mondego>// Number of points<newline46mondego>N = 10;  <newline46mondego><newline46mondego>// Add a row of 1s to the 2xN matrix P - so Q is 3xN now.<newline46mondego>Q = [P;ones(1,N)]  <newline46mondego><newline46mondego>// Initialize<newline46mondego>count = 1;<newline46mondego>err = 1;<newline46mondego>//u is an Nx1 vector where each element is 1/N<newline46mondego>u = (1/N) * ones(N,1)       <newline46mondego><newline46mondego>// Khachiyan Algorithm<newline46mondego>while err > tolerance<newline46mondego>{<newline46mondego>    // Matrix multiplication: <newline46mondego>    // diag(u) : if u is a vector, places the elements of u <newline46mondego>    // in the diagonal of an NxN matrix of zeros<newline46mondego>    X = Q*diag(u)*Q'; // Q' - transpose of Q    <newline46mondego><newline46mondego>    // inv(X) returns the matrix inverse of X<newline46mondego>    // diag(M) when M is a matrix returns the diagonal vector of M<newline46mondego>    M = diag(Q' * inv(X) * Q); // Q' - transpose of Q  <newline46mondego><newline46mondego>    // Find the value and location of the maximum element in the vector M<newline46mondego>    maximum = max(M);<newline46mondego>    j = find_maximum_value_location(M);<newline46mondego><newline46mondego>    // Calculate the step size for the ascent<newline46mondego>    step_size = (maximum - d -1)/((d+1)*(maximum-1));<newline46mondego><newline46mondego>    // Calculate the new_u:<newline46mondego>    // Take the vector u, and multiply all the elements in it by (1-step_size)<newline46mondego>    new_u = (1 - step_size)*u ;<newline46mondego><newline46mondego>    // Increment the jth element of new_u by step_size<newline46mondego>    new_u(j) = new_u(j) + step_size;<newline46mondego><newline46mondego>    // Store the error by taking finding the square root of the SSD <newline46mondego>    // between new_u and u<newline46mondego>    // The SSD or sum-of-square-differences, takes two vectors <newline46mondego>    // of the same size, creates a new vector by finding the <newline46mondego>    // difference between corresponding elements, squaring <newline46mondego>    // each difference and adding them all together. <newline46mondego><newline46mondego>    // So if the vectors were: a = [1 2 3] and b = [5 4 6], then:<newline46mondego>    // SSD = (1-5)^2 + (2-4)^2 + (3-6)^2;<newline46mondego>    // And the norm(a-b) = sqrt(SSD);<newline46mondego>    err = norm(new_u - u);<newline46mondego><newline46mondego>    // Increment count and replace u<newline46mondego>    count = count + 1;<newline46mondego>    u = new_u;<newline46mondego>}<newline46mondego><newline46mondego>// Put the elements of the vector u into the diagonal of a matrix<newline46mondego>// U with the rest of the elements as 0<newline46mondego>U = diag(u);<newline46mondego><newline46mondego>// Compute the A-matrix<newline46mondego>A = (1/d) * inv(P * U * P' - (P * u)*(P*u)' );<newline46mondego><newline46mondego>// And the center,<newline46mondego>c = P * u;<newline46mondego>"
"738splitHere46","1768511splitHere46","parseable"
"739splitHere46","1768511splitHere46","add(parseable)"
"740splitHere46","1768511splitHere46","parseable"
"741splitHere46","1768511splitHere46","parseable"
"742splitHere46","1768511splitHere46","new"
"743splitHere46","1768844splitHere46","if (item[i] instanceof Animal)<newline46mondego>    map.put(key[i], (Animal) item[i]);<newline46mondego>"
"744splitHere46","1768844splitHere46","isAssignableFrom"
"745splitHere46","1768844splitHere46","var a = item[i] as Animal;<newline46mondego>if (a != null)<newline46mondego>    map[key[i]] = a;<newline46mondego>"
"746splitHere46","1768844splitHere46","item[i]"
"747splitHere46","1768844splitHere46","Animal"
"748splitHere46","1768871splitHere46","BufferedReader"
"749splitHere46","1768871splitHere46","PrintWriter"
"750splitHere46","1768871splitHere46","PrintWriter"
"751splitHere46","1768871splitHere46","FileInputStream"
"752splitHere46","1768871splitHere46","FileOutputStream"
"753splitHere46","1768871splitHere46","*Stream"
"754splitHere46","1768871splitHere46","*Reader"
"755splitHere46","1768871splitHere46","*Writer"
"756splitHere46","1768871splitHere46","Reader"
"757splitHere46","1768871splitHere46","BufferedReader"
"758splitHere46","1768871splitHere46","InputStreamReader"
"759splitHere46","1768871splitHere46","OutputStreamWriter"
"760splitHere46","1768871splitHere46","BufferedReader"
"761splitHere46","1768871splitHere46","InputStreamReader"
"762splitHere46","1768871splitHere46","FileInputStream"
"763splitHere46","1768871splitHere46","readLine()"
"764splitHere46","1768871splitHere46","BufferedWriter"
"765splitHere46","1768871splitHere46","OutputStreamWriter"
"766splitHere46","1768871splitHere46","FileOutputStream"
"767splitHere46","1768871splitHere46","write(String)"
"768splitHere46","1768871splitHere46","newLine()"
"769splitHere46","1768871splitHere46","FileReader"
"770splitHere46","1768871splitHere46","FileInputStream"
"771splitHere46","1768871splitHere46","InputStreamReader"
"772splitHere46","1768871splitHere46","FileWriter"
"773splitHere46","1769009splitHere46","mywebsite.com/mainfolder/images/myimage.jpeg"
"774splitHere46","1769145splitHere46","while(st.hasMoreTokens())<newline46mondego>   {<newline46mondego><newline46mondego>if(count==1)<newline46mondego>{<newline46mondego>    e.ename=st.nextToken();<newline46mondego>    count++;<newline46mondego>}<newline46mondego>if(count==2)<newline46mondego>{<newline46mondego>    e.eno=st.nextToken();<newline46mondego>    count=0;<newline46mondego>}<newline46mondego>a1.add(e);<newline46mondego>"
"775splitHere46","1769509splitHere46","javac -encoding utf8 MyClass.java<newline46mondego>"
"776splitHere46","1769509splitHere46","java -Dfile.encoding=utf8 MyClass<newline46mondego>"
"777splitHere46","1769523splitHere46","wait()"
"778splitHere46","1769523splitHere46","notify()"
"779splitHere46","1769523splitHere46","wait()"
"780splitHere46","1769523splitHere46","notify"
"781splitHere46","1769523splitHere46","notify()"
"782splitHere46","1769523splitHere46","wait()"
"783splitHere46","1769523splitHere46","myBlockingObject.notify()"
"784splitHere46","1769523splitHere46","notify()"
"785splitHere46","1769523splitHere46","myObj.wait()"
"786splitHere46","1769523splitHere46","myObj.notify()"
"787splitHere46","1769582splitHere46","String hostname = InetAddress.getLocalHost().getHostName();<newline46mondego>"
"788splitHere46","1769743splitHere46","ZZ"
"789splitHere46","1769743splitHere46","Z"
"790splitHere46","1769743splitHere46","2009-11-20T11:08:00.000Z"
"791splitHere46","1769743splitHere46","2009-11-20T11:08:00.000+08:00"
"792splitHere46","1769782splitHere46","<x:set var=<doubleQuotes46>tmp<doubleQuotes46> select=<doubleQuotes46>$doc/properties/entry[@key='foo.bar']<doubleQuotes46> /><newline46mondego><x:set var=<doubleQuotes46>logrows<doubleQuotes46> select='number($tmp)'/>    <newline46mondego><c:forEach items=<doubleQuotes46>${bar.foo}<doubleQuotes46> var=<doubleQuotes46>log<doubleQuotes46> begin=<doubleQuotes46>1<doubleQuotes46> step=<doubleQuotes46>1<doubleQuotes46> varStatus=<doubleQuotes46>i<doubleQuotes46> end=<doubleQuotes46>${logrows}<doubleQuotes46>><newline46mondego>"
"793splitHere46","1769783splitHere46","<selectKey>"
"794splitHere46","1769783splitHere46","<insert>"
"795splitHere46","1769783splitHere46","INSERT"
"796splitHere46","1769783splitHere46","<insert id=<doubleQuotes46>insert<doubleQuotes46>><newline46mondego>  <selectKey keyProperty=<doubleQuotes46>myId<doubleQuotes46><newline46mondego>             resultClass=<doubleQuotes46>int<doubleQuotes46>><newline46mondego>    SELECT nextVal('my_id_seq')<newline46mondego>  </selectKey><newline46mondego>  INSERT INTO my<newline46mondego>    (myId, foo, bar)<newline46mondego>  VALUES<newline46mondego>    (#myId#, #foo#, #bar#)<newline46mondego></insert><newline46mondego>"
"797splitHere46","1769783splitHere46","Integer insertedId = (Integer) sqlMap.insert(<doubleQuotes46>insert<doubleQuotes46>, params)<newline46mondego>"
"798splitHere46","1769783splitHere46","my_id_seq"
"799splitHere46","1769823splitHere46","KeyGenerator kgen = KeyGenerator.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>kgen.init(128);<newline46mondego>SecretKey key = kgen.generateKey();<newline46mondego>byte[] encoded = key.getEncoded();<newline46mondego>FileOutputStream output = new FileOutputStream(new File(<doubleQuotes46>target-file<doubleQuotes46>));<newline46mondego>IOUtils.write(encoded, output);<newline46mondego>"
"800splitHere46","1769904splitHere46","Method"
"801splitHere46","1769999splitHere46","clone()"
"802splitHere46","1769999splitHere46","public interface MyI extends Cloneable {<newline46mondego>    public MyI clone();<newline46mondego>}<newline46mondego>"
"803splitHere46","1769999splitHere46","Cloneable"
"804splitHere46","1769999splitHere46","clone()"
"805splitHere46","1769999splitHere46","clone()"
"806splitHere46","1769999splitHere46","protected"
"807splitHere46","1769999splitHere46","Object"
"808splitHere46","1770034splitHere46","iam/q4e"
"809splitHere46","1770350splitHere46","byte[] keyBytes = secretKey.getEncoded();<newline46mondego>"
"810splitHere46","1770350splitHere46","SecretKey key = new SecretKeySpec(keyBytes, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"811splitHere46","1770350splitHere46","public static SecretKey getAesKey(char[] password, int keyLength)<newline46mondego>   throws GeneralSecurityException {<newline46mondego><newline46mondego>  int count = 128; // Iteration count<newline46mondego>  byte[] salt;<newline46mondego>  try {<newline46mondego>   salt = <doubleQuotes46>This is a fixed salt string<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>  } catch (UnsupportedEncodingException e) {<newline46mondego>   throw new IllegalStateException(<doubleQuotes46>No UTF-8<doubleQuotes46>);<newline46mondego>  }<newline46mondego>  PBEKeySpec keySpec = new PBEKeySpec(password, salt, count, keyLength);<newline46mondego>  SecretKeyFactory skf = SecretKeyFactory<newline46mondego>    .getInstance(<doubleQuotes46>PBKDF2WithHmacSHA1<doubleQuotes46>);<newline46mondego>  SecretKey pbeKey = skf.generateSecret(keySpec);<newline46mondego>  byte[] raw = pbeKey.getEncoded();<newline46mondego>  return new SecretKeySpec(raw, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego> }<newline46mondego>"
"812splitHere46","1770376splitHere46","<definition name=<doubleQuotes46>.basic.layout<doubleQuotes46> path=<doubleQuotes46>/WEB-INF/jsps/basicLayout.jsp<doubleQuotes46>><newline46mondego>        <put name=<doubleQuotes46>title<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46>/><newline46mondego>        <put name=<doubleQuotes46>homeMenuClass<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46>/><newline46mondego>        <put name=<doubleQuotes46>forumMenuClass<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46>/><newline46mondego>        <put name=<doubleQuotes46>helpMenuClass<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46>/><newline46mondego>    </definition><newline46mondego>"
"813splitHere46","1770376splitHere46","<li class=<doubleQuotes46><tiles:getAsString name=<doubleQuotes46>homeMenuClass<doubleQuotes46>/><doubleQuotes46>>...<newline46mondego>    <li class=<doubleQuotes46><tiles:getAsString name=<doubleQuotes46>forumMenuClass<doubleQuotes46>/><doubleQuotes46>>...<newline46mondego>    <li class=<doubleQuotes46><tiles:getAsString name=<doubleQuotes46>helpMenuClass<doubleQuotes46>/><doubleQuotes46>>...<newline46mondego>"
"814splitHere46","1770392splitHere46","select currval('sometable_id_seq')<newline46mondego>"
"815splitHere46","1770392splitHere46","INSERT INTO sometable ( somefield ) VALUES ( #value# ) returning id<newline46mondego>"
"816splitHere46","1770779splitHere46","<newline46mondego>String params = URLEncoder.encode(<doubleQuotes46>موسوعة<doubleQuotes46>, <doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego>String cmd = <doubleQuotes46>cmd.exe /C start \<doubleQuotes46>Open file\<doubleQuotes46> \<doubleQuotes46>http://ar.wikipedia.org/wiki/<doubleQuotes46> + params + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>;<newline46mondego>Runtime.getRuntime().exec(cmd);<newline46mondego><newline46mondego>"
"817splitHere46","1771092splitHere46","List<?>"
"818splitHere46","1771092splitHere46","String"
"819splitHere46","1771092splitHere46","BigDecimal"
"820splitHere46","1771092splitHere46","List<T>"
"821splitHere46","1771092splitHere46","T"
"822splitHere46","1771092splitHere46","T"
"823splitHere46","1771092splitHere46","public static <T extends Comparable<? super T>> List<T> merge(Set<List<T>> lists) {<newline46mondego>    List<T> result = new LinkedList<T>();<newline46mondego>    HashBiMap<List<T>, Integer> location = HashBiMap.create();<newline46mondego>"
"824splitHere46","1771092splitHere46","<T extends Comparable<? super T>> List<T>"
"825splitHere46","1771092splitHere46","T"
"826splitHere46","1771092splitHere46","Comparable<? super T>"
"827splitHere46","1771092splitHere46","Comparable<X>"
"828splitHere46","1771092splitHere46","X"
"829splitHere46","1771092splitHere46","T"
"830splitHere46","1771092splitHere46","? super T"
"831splitHere46","1771092splitHere46","Comparable"
"832splitHere46","1771092splitHere46","T"
"833splitHere46","1771092splitHere46","Double extends Integer extends Number"
"834splitHere46","1771092splitHere46","Double"
"835splitHere46","1771092splitHere46","Integer"
"836splitHere46","1771092splitHere46","Comparable"
"837splitHere46","1771092splitHere46","Number"
"838splitHere46","1771092splitHere46","Integer"
"839splitHere46","1771092splitHere46","Double"
"840splitHere46","1771092splitHere46","Number"
"841splitHere46","1771092splitHere46","Comparable<Number>"
"842splitHere46","1771092splitHere46","super"
"843splitHere46","1771092splitHere46","T"
"844splitHere46","1771092splitHere46","Number"
"845splitHere46","1771092splitHere46","Integer"
"846splitHere46","1771092splitHere46","Double"
"847splitHere46","1771092splitHere46","Comparable"
"848splitHere46","1771092splitHere46","Number"
"849splitHere46","1771092splitHere46","T"
"850splitHere46","1771092splitHere46","Integer"
"851splitHere46","1771092splitHere46","Double"
"852splitHere46","1771092splitHere46","Integer"
"853splitHere46","1771092splitHere46","T"
"854splitHere46","1771092splitHere46","Double"
"855splitHere46","1771092splitHere46","Number"
"856splitHere46","1771092splitHere46","T extends Comparable"
"857splitHere46","1771092splitHere46","super"
"858splitHere46","1771092splitHere46","static"
"859splitHere46","1771092splitHere46","List"
"860splitHere46","1771092splitHere46","T"
"861splitHere46","1771092splitHere46","public"
"862splitHere46","1771438splitHere46","<many-to-many class=<doubleQuotes46>Server<doubleQuotes46>><newline46mondego>     <column name=<doubleQuotes46>CHILD_ID<doubleQuotes46> /><newline46mondego></many-to-many><newline46mondego>"
"863splitHere46","1771648splitHere46","public class Main<newline46mondego>{<newline46mondego>   public static final int ROW_COUNT = 5;<newline46mondego>   public static final int COL_COUNT = 10;<newline46mondego><newline46mondego>   public static void main(String[] args)<newline46mondego>   {<newline46mondego>      ArrayList<ArrayList<Double>> grades = new ArrayList<ArrayList<Double>>();<newline46mondego><newline46mondego>      for (int i = 0; i < ROW_COUNT; i++)<newline46mondego>      {<newline46mondego>         ArrayList<Double> row = new ArrayList<Double>();<newline46mondego><newline46mondego>         for (int j = 0; j < COL_COUNT; j++)<newline46mondego>         {<newline46mondego>            row.add(100.0 - j - i);<newline46mondego>         }<newline46mondego><newline46mondego>         grades.add(row);<newline46mondego>      }<newline46mondego><newline46mondego>      for (int i = 0; i < ROW_COUNT; i++)<newline46mondego>      {<newline46mondego>         for (int j = 0; j < COL_COUNT; j++)<newline46mondego>         {<newline46mondego>            System.out.print(grades.get(i).get(j));<newline46mondego>            System.out.print(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>         }<newline46mondego><newline46mondego>         System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"864splitHere46","1771725splitHere46","ClassA.class"
"865splitHere46","1771725splitHere46","ClassB.class"
"866splitHere46","1771725splitHere46","ClassB"
"867splitHere46","1771725splitHere46","ClassA"
"868splitHere46","1771725splitHere46","ClassLoaderC"
"869splitHere46","1771725splitHere46","ClassLoaderD"
"870splitHere46","1771725splitHere46","Thread.currentThread().getContextClassLoader()"
"871splitHere46","1771773splitHere46","field.setAccessible(true);<newline46mondego>"
"872splitHere46","1772237splitHere46","public static <T> Set<T> makeSet(Collection<? extends Collection<T>> a_collection) {<newline46mondego>    Iterator<? extends Collection<T>> it = a_collection.iterator();<newline46mondego>    Set<T> result = new HashSet<T>();<newline46mondego>    while (it.hasNext()) {<newline46mondego>            result.addAll(it.next());<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"873splitHere46","1772597splitHere46","public class MyClass<T extends Enum<T>> { }<newline46mondego>"
"874splitHere46","1772629splitHere46","JButton"
"875splitHere46","1772629splitHere46","JOptionPane"
"876splitHere46","1772629splitHere46","for (JButton button : SwingUtils.getDescendantsOfType(JButton.class, pane)) {<newline46mondego>    button.setFont(new Font(<doubleQuotes46>Verdana<doubleQuotes46>, Font.BOLD, 32));<newline46mondego>}<newline46mondego>"
"877splitHere46","1772629splitHere46","JButton"
"878splitHere46","1772629splitHere46","JOptionPane"
"879splitHere46","1772629splitHere46","JOptionPane"
"880splitHere46","1772629splitHere46","UIManager.put(<newline46mondego>    <doubleQuotes46>OptionPane.messageFont<doubleQuotes46>,<newline46mondego>    new FontUIResource(new Font(<doubleQuotes46>Verdana<doubleQuotes46>, Font.BOLD, 32))<newline46mondego>);<newline46mondego>"
"881splitHere46","1772629splitHere46","JOptionPane"
"882splitHere46","1772701splitHere46","engine.get(module_name); //gets the class object of the module<newline46mondego>getConstructors[0].newInstance(null) on the class to get an object<newline46mondego><newline46mondego>//cast it to your interface!"
"883splitHere46","1772985splitHere46","final JOptionPane optionPane = new JOptionPane(<newline46mondego>                <doubleQuotes46>The only way to close this dialog is by\n<doubleQuotes46><newline46mondego>                + <doubleQuotes46>pressing one of the following buttons.\n<doubleQuotes46><newline46mondego>                + <doubleQuotes46>Do you understand?<doubleQuotes46>,<newline46mondego>                JOptionPane.QUESTION_MESSAGE,<newline46mondego>                JOptionPane.YES_NO_OPTION);<newline46mondego><newline46mondego>final JDialog dialog = new JDialog(frame, <newline46mondego>                             <doubleQuotes46>Click a button<doubleQuotes46>,<newline46mondego>                             true);<newline46mondego>dialog.setContentPane(optionPane);<newline46mondego>dialog.setDefaultCloseOperation(<newline46mondego>    JDialog.DO_NOTHING_ON_CLOSE);<newline46mondego>dialog.addWindowListener(new WindowAdapter() {<newline46mondego>    public void windowClosing(WindowEvent we) {<newline46mondego>        setLabel(<doubleQuotes46>Thwarted user attempt to close window.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>optionPane.addPropertyChangeListener(<newline46mondego>    new PropertyChangeListener() {<newline46mondego>        public void propertyChange(PropertyChangeEvent e) {<newline46mondego>            String prop = e.getPropertyName();<newline46mondego><newline46mondego>            if (dialog.isVisible() <newline46mondego>             && (e.getSource() == optionPane)<newline46mondego>             && (prop.equals(JOptionPane.VALUE_PROPERTY))) {<newline46mondego>                //If you were going to check something<newline46mondego>                //before closing the window, you'd do<newline46mondego>                //it here.<newline46mondego>                dialog.setVisible(false);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>dialog.pack();<newline46mondego>dialog.setVisible(true);<newline46mondego><newline46mondego>int value = ((Integer)optionPane.getValue()).intValue();<newline46mondego>if (value == JOptionPane.YES_OPTION) {<newline46mondego>    setLabel(<doubleQuotes46>Good.<doubleQuotes46>);<newline46mondego>} else if (value == JOptionPane.NO_OPTION) {<newline46mondego>    setLabel(<doubleQuotes46>Try using the window decorations <doubleQuotes46><newline46mondego>             + <doubleQuotes46>to close the non-auto-closing dialog. <doubleQuotes46><newline46mondego>             + <doubleQuotes46>You can't!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"884splitHere46","1773161splitHere46","String msg = <doubleQuotes46>(c)www.sanjaal.com<doubleQuotes46>;<newline46mondego>int margin = 2;<newline46mondego>g.drawString(msg, getWidth() - g.getFontMetrics().stringWidth(msg) - margin, strY);<newline46mondego>"
"885splitHere46","1773166splitHere46","A"
"886splitHere46","1773166splitHere46","B"
"887splitHere46","1773166splitHere46","C"
"888splitHere46","1773166splitHere46","C"
"889splitHere46","1773166splitHere46","B"
"890splitHere46","1773166splitHere46","A"
"891splitHere46","1773166splitHere46","B"
"892splitHere46","1773166splitHere46","C"
"893splitHere46","1773166splitHere46","A"
"894splitHere46","1773166splitHere46","A"
"895splitHere46","1773166splitHere46","B"
"896splitHere46","1773365splitHere46","List"
"897splitHere46","1773365splitHere46","Arrays#asList"
"898splitHere46","1773443splitHere46","throw new RuntimeException(originalException)"
"899splitHere46","1773730splitHere46","package com.sun.jna.examples;<newline46mondego>"
"900splitHere46","1773730splitHere46","examples"
"901splitHere46","1773730splitHere46","jna.jar"
"902splitHere46","1773730splitHere46","/examples<newline46mondego> jna.jar<newline46mondego> /com<newline46mondego>   /sun<newline46mondego>      /jna<newline46mondego>         /examples<newline46mondego>           HelloWorld.java<newline46mondego>"
"903splitHere46","1773730splitHere46","javac -classpath .:jna.jar -g com/sun/jna/examples/HelloWorld.java<newline46mondego><newline46mondego>java -classpath .:jna.jar com.sun.jna.examples.HelloWorld<newline46mondego>"
"904splitHere46","1773741splitHere46","Foo"
"905splitHere46","1773741splitHere46","public class SomeOtherClass<A>{<newline46mondego>    private Foo<A> x;<newline46mondego>    public SomeOtherClass() {<newline46mondego>        //create anonymous extension of the abstract outer class<newline46mondego>        //for a real abstract class this would mean you have to<newline46mondego>        //implement all methods which are declared abstract<newline46mondego>        x = new Foo<A>(){};<newline46mondego>        x = x.new Bar<A>();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"906splitHere46","1773741splitHere46","Bar"
"907splitHere46","1773741splitHere46","Foo"
"908splitHere46","1774119splitHere46","final String[] data;<newline46mondego>final int      index;<newline46mondego><newline46mondego>data = new String[] { /* init the elements here or however you want to do it */ };<newline46mondego>Collections.sort(data);<newline46mondego>index = Arrays.binarySearch(data, value);<newline46mondego>"
"909splitHere46","1774119splitHere46","int index = -1; // not found<newline46mondego><newline46mondego>for(int i = 0; i < data.length; i++)<newline46mondego>{<newline46mondego>    if(data[i].equals(value))<newline46mondego>    {<newline46mondego>        index = i;<newline46mondego>        break; // stop looking<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"910splitHere46","1774119splitHere46","// strict one - disallow nulls for everything<newline46mondego>public <T> static int linearSearch(final T[] data, final T value)<newline46mondego>{<newline46mondego>    int index;<newline46mondego><newline46mondego>    if(data == null)<newline46mondego>    {<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>data cannot be null<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    if(value == null)<newline46mondego>    {<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>value cannot be null<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    index = -1;<newline46mondego><newline46mondego>    for(int i = 0; i < data.length; i++)<newline46mondego>    {<newline46mondego>        if(data[i] == null)<newline46mondego>        {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>data[<doubleQuotes46> + i + <doubleQuotes46>] cannot be null<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        if(data[i].equals(value))<newline46mondego>        {<newline46mondego>            index = i;<newline46mondego>            break; // stop looking<newline46mondego>        }<newline46mondego>    }    <newline46mondego><newline46mondego>    return (index);<newline46mondego>}<newline46mondego>"
"911splitHere46","1774119splitHere46","public static <T> int linearSearch(final T[] data, final T value)<newline46mondego>{<newline46mondego>    int index;<newline46mondego><newline46mondego>    index = -1;<newline46mondego><newline46mondego>    if(data != null)<newline46mondego>    {<newline46mondego>        for(int i = 0; i < data.length; i++)<newline46mondego>        {<newline46mondego>            if(value == null)<newline46mondego>            {<newline46mondego>                if(data[i] == null)<newline46mondego>                {<newline46mondego>                    index = i;<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            } <newline46mondego>            else<newline46mondego>            {            <newline46mondego>                if(value.equals(data[i]))<newline46mondego>                {<newline46mondego>                    index = i;<newline46mondego>                    break; // stop looking<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }    <newline46mondego>    }<newline46mondego><newline46mondego>    return (index);<newline46mondego>}<newline46mondego>"
"912splitHere46","1774119splitHere46","public static <T> int linearSearch(final T[] data, final T value)<newline46mondego>{<newline46mondego>    final int index;<newline46mondego><newline46mondego>    if(data == null)<newline46mondego>    {<newline46mondego>        index = -1;<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        final List<T> list;<newline46mondego><newline46mondego>        list  = Arrays.asList(data);<newline46mondego>        index = list.indexOf(value);<newline46mondego>    }<newline46mondego><newline46mondego>    return (index);<newline46mondego>}<newline46mondego>"
"913splitHere46","1774165splitHere46","value"
"914splitHere46","1774165splitHere46","Timestamped"
"915splitHere46","1774208splitHere46","java -classpath .;path/to/yourlib.jar your.package.path.ClassWithMain<newline46mondego>"
"916splitHere46","1774208splitHere46","java -classpath .:path/to/yourlib.jar your.package.path.ClassWithMain<newline46mondego>"
"917splitHere46","1774208splitHere46","java -classpath .;path/to/yourlib.jar ClassWithMain<newline46mondego>"
"918splitHere46","1774409splitHere46","HashMap<String, Integer>"
"919splitHere46","1774409splitHere46","Map"
"920splitHere46","1774409splitHere46","HashMap"
"921splitHere46","1774409splitHere46","if (foo instanceof Map) {                                                                                                                                                                                                        <newline46mondego>  ((Map) foo).put(<doubleQuotes46>a<doubleQuotes46>, 5);                                                                                                                                                                                    <newline46mondego>}<newline46mondego>"
"922splitHere46","1774409splitHere46","Map<String, Object> map = Maps.newHashMap(); // or new HashMap<String, Object>();<newline46mondego>Object foo = map.get(<doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>if (foo instanceof Widget) {<newline46mondego>  ((Widget) foo).spin();<newline46mondego>}<newline46mondego>"
"923splitHere46","1774409splitHere46","Widget widget = (Widget) map.get(<doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>widget.spin();<newline46mondego>"
"924splitHere46","1774468splitHere46","java.lang.NoClassDefFoundError: org/jdom/JDOMException<newline46mondego>"
"925splitHere46","1774663splitHere46","ByteArrayOutputStream"
"926splitHere46","1774663splitHere46","ByteBuffer"
"927splitHere46","1774669splitHere46","jar cvf ClassName.jar *.class<newline46mondego>"
"928splitHere46","1774669splitHere46","<applet>"
"929splitHere46","1774765splitHere46","encrypt(new ByteArrayInputStream(theCell_00.getBytes()), outputStream)<newline46mondego>"
"930splitHere46","1774900splitHere46","mapParents.put(obj, parent)<newline46mondego>"
"931splitHere46","1774900splitHere46","parent=mapParents.get(obj)<newline46mondego>"
"932splitHere46","1774968splitHere46","<xsl:param name=<doubleQuotes46>newname<doubleQuotes46>/><newline46mondego><xsl:param name=<doubleQuotes46>newphone<doubleQuotes46>/><newline46mondego>"
"933splitHere46","1774968splitHere46","(...)<newline46mondego><xsl:template match=<doubleQuotes46>myagenda<doubleQuotes46>><newline46mondego><newline46mondego><xsl:apply-templates select=<doubleQuotes46>contact<doubleQuotes46>/><newline46mondego><newline46mondego><xsl:if test=<doubleQuotes46>string-length($newname)&gt;0<doubleQuotes46>><newline46mondego> <xsl:element name=<doubleQuotes46>contact<doubleQuotes46>><newline46mondego>  <xsl:element name=<doubleQuotes46>name<doubleQuotes46>><newline46mondego>    <xsl:value-of select=<doubleQuotes46>$newname<doubleQuotes46>/><newline46mondego>  </xsl:element><newline46mondego>  <xsl:element name=<doubleQuotes46>phone<doubleQuotes46>><newline46mondego>    <xsl:value-of select=<doubleQuotes46>$newphone<doubleQuotes46>/><newline46mondego>  </xsl:element><newline46mondego> </xsl:element><newline46mondego></xsl:if><newline46mondego></xsl:template><newline46mondego>(...)<newline46mondego>"
"934splitHere46","1775408splitHere46","<definition name=<doubleQuotes46>product.nav<doubleQuotes46> template=<doubleQuotes46>/productNavLayout.jsp<doubleQuotes46>>    <newline46mondego>    <put-attribute name=<doubleQuotes46>productPathNav<doubleQuotes46> value=<doubleQuotes46>/productPathNav.jsp<doubleQuotes46> />    <newline46mondego>    <put-attribute name=<doubleQuotes46>productNav<doubleQuotes46> value=<doubleQuotes46>/productNav.jsp<doubleQuotes46> />  <newline46mondego></definition> <newline46mondego><newline46mondego><definition name=<doubleQuotes46>product.nav.extended<doubleQuotes46> extends=<doubleQuotes46>product.nav<doubleQuotes46>>    <newline46mondego>    <put-attribute name=<doubleQuotes46>productContent<doubleQuotes46> value=<doubleQuotes46>product.grid<doubleQuotes46> />  <newline46mondego></definition> <newline46mondego><newline46mondego><definition name=<doubleQuotes46>page.products<doubleQuotes46> extends=<doubleQuotes46>layout<doubleQuotes46>><newline46mondego>    <put-attribute name=<doubleQuotes46>content<doubleQuotes46> value=<doubleQuotes46>product.nav.extended<doubleQuotes46> />  <newline46mondego></definition><newline46mondego>"
"935splitHere46","1775472splitHere46","Right click on your project > Properties > Builders > New"
"936splitHere46","1775713splitHere46","java -classpath b.jar;c.jar -jar a.jar //does not work see below<newline46mondego>"
"937splitHere46","1775713splitHere46","java -classpath b.jar;c.jar;a.jar mobat.Launcher<newline46mondego>"
"938splitHere46","1775713splitHere46","Class-Path: lib/b.jar lib/c.jar<newline46mondego>"
"939splitHere46","1775713splitHere46","java -jar a.jar<newline46mondego>"
"940splitHere46","1775738splitHere46","Collections.synchronizedMap(...)"
"941splitHere46","1775738splitHere46","Map m = Collections.synchronizedMap(new HashMap());<newline46mondego>...<newline46mondego>Set s = m.keySet();  // Needn't be in synchronized block<newline46mondego>...<newline46mondego>synchronized(m) {  // Synchronizing on m, not s!<newline46mondego>    Iterator i = s.iterator(); // Must be in synchronized block<newline46mondego>    while (i.hasNext())<newline46mondego>        foo(i.next());<newline46mondego>}<newline46mondego>"
"942splitHere46","1775738splitHere46","synchronized"
"943splitHere46","1775738splitHere46","public int size() {<newline46mondego>    synchronized( this ) {<newline46mondego>        return collection.size();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"944splitHere46","1775738splitHere46","collection"
"945splitHere46","1775748splitHere46","public static <T extends Comparable<? super T>> List<T> merge(Set<List<T>> lists) {<newline46mondego>    int totalSize = 0; // every element in the set<newline46mondego>    for (List<T> l : lists) {<newline46mondego>            totalSize += l.size();<newline46mondego>    }<newline46mondego><newline46mondego>    List<T> result = new ArrayList<T>(totalSize);<newline46mondego><newline46mondego>    List<T> lowest;<newline46mondego><newline46mondego>    while (result.size() < totalSize) { // while we still have something to add<newline46mondego>            lowest = null;<newline46mondego><newline46mondego>            for (List<T> l : lists) {<newline46mondego>                    if (! l.isEmpty()) {<newline46mondego>                            if (lowest == null) {<newline46mondego>                                    lowest = l;<newline46mondego>                            }<newline46mondego>                            else if (l.get(0).compareTo(lowest.get(0)) <= 0) {<newline46mondego>                                    lowest = l;<newline46mondego>                            }<newline46mondego>                    }<newline46mondego>            }<newline46mondego>            result.add(lowest.get(0));<newline46mondego>            lowest.remove(0);<newline46mondego>    }<newline46mondego>    return result;}<newline46mondego>"
"946splitHere46","1775839splitHere46","Tools/Plugins"
"947splitHere46","1775839splitHere46","Mobility"
"948splitHere46","1775839splitHere46","Available plugins"
"949splitHere46","1775839splitHere46","Tools/Java Platform"
"950splitHere46","1775839splitHere46","Add platform"
"951splitHere46","1775839splitHere46","Java ME MIDP Platform Emulator"
"952splitHere46","1775839splitHere46","Next"
"953splitHere46","1776053splitHere46","System.nanoTime()"
"954splitHere46","1776053splitHere46","System.currentTimeMillis()"
"955splitHere46","1776053splitHere46","nanoTime"
"956splitHere46","1776053splitHere46","currentTimeMillis"
"957splitHere46","1776053splitHere46","nanoTime"
"958splitHere46","1776053splitHere46","currentTimeMillis"
"959splitHere46","1776053splitHere46","nanoTime"
"960splitHere46","1776053splitHere46","nanoTime"
"961splitHere46","1776129splitHere46","n"
"962splitHere46","1776129splitHere46","Inner"
"963splitHere46","1776129splitHere46","public int getOuterN() { return n; }<newline46mondego>"
"964splitHere46","1776129splitHere46","getOuterN() != that.getOuterN()<newline46mondego>"
"965splitHere46","1776158splitHere46","<Context aliases=<doubleQuotes46>/img=/e:/pictures/<doubleQuotes46> ...><newline46mondego>"
"966splitHere46","1776268splitHere46","<%@ page trimDirectiveWhitespaces=<doubleQuotes46>true<doubleQuotes46> %><newline46mondego>"
"967splitHere46","1776268splitHere46","<jsp-config><newline46mondego>  <jsp-property-group><newline46mondego>    <url-pattern>*.jsp</url-pattern><newline46mondego>    <trim-directive-whitespaces>true</trim-directive-whitespaces><newline46mondego>  </jsp-property-group><newline46mondego></jsp-config><newline46mondego>"
"968splitHere46","1776268splitHere46","flush"
"969splitHere46","1776268splitHere46","close"
"970splitHere46","1776268splitHere46","OutputStream"
"971splitHere46","1776268splitHere46","dataOutput.flush();<newline46mondego>dataOutput.close();<newline46mondego>return;<newline46mondego>"
"972splitHere46","1776316splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego><newline46mondego>public class Main<newline46mondego>{<newline46mondego>    public static void main(final String[] argv)<newline46mondego>    {<newline46mondego>        final int startValue;<newline46mondego>        final int iterations;<newline46mondego>        final List<String> list;<newline46mondego><newline46mondego>        startValue = Integer.parseInt(argv[0]);<newline46mondego>        iterations = Integer.parseInt(argv[1]);<newline46mondego>        list = encodeAll(startValue, iterations);<newline46mondego>        System.out.println(list);<newline46mondego>    }<newline46mondego><newline46mondego>    private static List<String> encodeAll(final int startValue, final int iterations)<newline46mondego>    {<newline46mondego>        final List<String> allEncodings;<newline46mondego><newline46mondego>        allEncodings = new ArrayList<String>();<newline46mondego><newline46mondego>        for(int i = 0; i < iterations; i++)<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                final int    value;<newline46mondego>                final String str;<newline46mondego>                final String encoding;<newline46mondego><newline46mondego>                value = i + startValue;<newline46mondego>                str = String.format(<doubleQuotes46>%06d<doubleQuotes46>, value);<newline46mondego>                encoding = encoding(str);<newline46mondego>                allEncodings.add(encoding);<newline46mondego>            }<newline46mondego>            catch(final BadNumberException ex)<newline46mondego>            {<newline46mondego>                // do nothing<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return allEncodings;<newline46mondego>    }<newline46mondego><newline46mondego>    public static String encoding(String str)<newline46mondego>        throws BadNumberException<newline46mondego>    {<newline46mondego>        final int[]         digit;<newline46mondego>        final StringBuilder s;<newline46mondego><newline46mondego>        digit = new int[10];<newline46mondego><newline46mondego>        for(int i = 0; i < 6; i++)<newline46mondego>        {<newline46mondego>            digit[i] = Integer.parseInt(String.valueOf(str.charAt(i)));<newline46mondego>        }<newline46mondego><newline46mondego>        digit[6] = ((4*digit[0])+(10*digit[1])+(9*digit[2])+(2*digit[3])+(digit[4])+(7*digit[5])) % 11;<newline46mondego>        digit[7] = ((7*digit[0])+(8*digit[1])+(7*digit[2])+(digit[3])+(9*digit[4])+(6*digit[5])) % 11;<newline46mondego>        digit[8] = ((9*digit[0])+(digit[1])+(7*digit[2])+(8*digit[3])+(7*digit[4])+(7*digit[5])) % 11;<newline46mondego>        digit[9] = ((digit[0])+(2*digit[1])+(9*digit[2])+(10*digit[3])+(4*digit[4])+(digit[5])) % 11;<newline46mondego><newline46mondego>        // Insert Parity Checking method (Vandermonde Matrix)<newline46mondego>        s = new StringBuilder();<newline46mondego><newline46mondego>        for(int i = 0; i < 9; i++)<newline46mondego>        {<newline46mondego>            s.append(Integer.toString(digit[i]));<newline46mondego>        }<newline46mondego><newline46mondego>        if(digit[6] == 10 || digit[7] == 10 || digit[8] == 10 || digit[9] == 10)<newline46mondego>        {<newline46mondego>            throw new BadNumberException(str);<newline46mondego>        }<newline46mondego><newline46mondego>        return (s.toString());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class BadNumberException<newline46mondego>    extends Exception<newline46mondego>{<newline46mondego>    public BadNumberException(final String str)<newline46mondego>    {<newline46mondego>        super(str + <doubleQuotes46> cannot be encoded<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"973splitHere46","1776484splitHere46","import java.io.*;<newline46mondego>import java.net.*;<newline46mondego>public class Provider{<newline46mondego>    ServerSocket providerSocket;<newline46mondego>    Socket connection = null;<newline46mondego>    ObjectOutputStream out;<newline46mondego>    ObjectInputStream in;<newline46mondego>    String message;<newline46mondego>    Provider(){}<newline46mondego>    void run()<newline46mondego>    {<newline46mondego>        try{<newline46mondego>            //1. creating a server socket<newline46mondego>            providerSocket = new ServerSocket(2004, 10);<newline46mondego>            //2. Wait for connection<newline46mondego>            System.out.println(<doubleQuotes46>Waiting for connection<doubleQuotes46>);<newline46mondego>            connection = providerSocket.accept();<newline46mondego>            System.out.println(<doubleQuotes46>Connection received from <doubleQuotes46> + connection.getInetAddress().getHostName());<newline46mondego>            //3. get Input and Output streams<newline46mondego>            out = new ObjectOutputStream(connection.getOutputStream());<newline46mondego>            out.flush();<newline46mondego>            in = new ObjectInputStream(connection.getInputStream());<newline46mondego>            sendMessage(<doubleQuotes46>Connection successful<doubleQuotes46>);<newline46mondego>            //4. The two parts communicate via the input and output streams<newline46mondego>            do{<newline46mondego>                try{<newline46mondego>                    message = (String)in.readObject();<newline46mondego>                    System.out.println(<doubleQuotes46>client><doubleQuotes46> + message);<newline46mondego>                    if (message.equals(<doubleQuotes46>bye<doubleQuotes46>))<newline46mondego>                        sendMessage(<doubleQuotes46>bye<doubleQuotes46>);<newline46mondego>                }<newline46mondego>                catch(ClassNotFoundException classnot){<newline46mondego>                    System.err.println(<doubleQuotes46>Data received in unknown format<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            }while(!message.equals(<doubleQuotes46>bye<doubleQuotes46>));<newline46mondego>        }<newline46mondego>        catch(IOException ioException){<newline46mondego>            ioException.printStackTrace();<newline46mondego>        }<newline46mondego>        finally{<newline46mondego>            //4: Closing connection<newline46mondego>            try{<newline46mondego>                in.close();<newline46mondego>                out.close();<newline46mondego>                providerSocket.close();<newline46mondego>            }<newline46mondego>            catch(IOException ioException){<newline46mondego>                ioException.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    void sendMessage(String msg)<newline46mondego>    {<newline46mondego>        try{<newline46mondego>            out.writeObject(msg);<newline46mondego>            out.flush();<newline46mondego>            System.out.println(<doubleQuotes46>server><doubleQuotes46> + msg);<newline46mondego>        }<newline46mondego>        catch(IOException ioException){<newline46mondego>            ioException.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        Provider server = new Provider();<newline46mondego>        while(true){<newline46mondego>            server.run();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"974splitHere46","1776484splitHere46","import java.io.*;<newline46mondego>import java.net.*;<newline46mondego>public class Requester{<newline46mondego>    Socket requestSocket;<newline46mondego>    ObjectOutputStream out;<newline46mondego>    ObjectInputStream in;<newline46mondego>    String message;<newline46mondego>    Requester(){}<newline46mondego>    void run()<newline46mondego>    {<newline46mondego>        try{<newline46mondego>            //1. creating a socket to connect to the server<newline46mondego>            requestSocket = new Socket(<doubleQuotes46>localhost<doubleQuotes46>, 2004);<newline46mondego>            System.out.println(<doubleQuotes46>Connected to localhost in port 2004<doubleQuotes46>);<newline46mondego>            //2. get Input and Output streams<newline46mondego>            out = new ObjectOutputStream(requestSocket.getOutputStream());<newline46mondego>            out.flush();<newline46mondego>            in = new ObjectInputStream(requestSocket.getInputStream());<newline46mondego>            //3: Communicating with the server<newline46mondego>            do{<newline46mondego>                try{<newline46mondego>                    message = (String)in.readObject();<newline46mondego>                    System.out.println(<doubleQuotes46>server><doubleQuotes46> + message);<newline46mondego>                    sendMessage(<doubleQuotes46>Hi my server<doubleQuotes46>);<newline46mondego>                    message = <doubleQuotes46>bye<doubleQuotes46>;<newline46mondego>                    sendMessage(message);<newline46mondego>                }<newline46mondego>                catch(ClassNotFoundException classNot){<newline46mondego>                    System.err.println(<doubleQuotes46>data received in unknown format<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            }while(!message.equals(<doubleQuotes46>bye<doubleQuotes46>));<newline46mondego>        }<newline46mondego>        catch(UnknownHostException unknownHost){<newline46mondego>            System.err.println(<doubleQuotes46>You are trying to connect to an unknown host!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch(IOException ioException){<newline46mondego>            ioException.printStackTrace();<newline46mondego>        }<newline46mondego>        finally{<newline46mondego>            //4: Closing connection<newline46mondego>            try{<newline46mondego>                in.close();<newline46mondego>                out.close();<newline46mondego>                requestSocket.close();<newline46mondego>            }<newline46mondego>            catch(IOException ioException){<newline46mondego>                ioException.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    void sendMessage(String msg)<newline46mondego>    {<newline46mondego>        try{<newline46mondego>            out.writeObject(msg);<newline46mondego>            out.flush();<newline46mondego>            System.out.println(<doubleQuotes46>client><doubleQuotes46> + msg);<newline46mondego>        }<newline46mondego>        catch(IOException ioException){<newline46mondego>            ioException.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        Requester client = new Requester();<newline46mondego>        client.run();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"975splitHere46","1776568splitHere46","...<newline46mondego>int[] lastNode = new int[nnodes];<newline46mondego>lastNode[source] = source;<newline46mondego>for (int i = 0; i < nnodes; ++i)<newline46mondego>    for (int j = 0; j < edges.size(); ++j) {<newline46mondego>        if (distance[edges.get(j).source] == INF) continue;<newline46mondego>        int newDistance = distance[edges.get(j).source] + edges.get(j).weight;<newline46mondego>        if (newDistance < distance[edges.get(j).destination])<newline46mondego>        {<newline46mondego>            distance[edges.get(j).destination] = newDistance;<newline46mondego>            lastNode[edges.get(j).destination] = edges.get(j).source;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"976splitHere46","1776568splitHere46","static void printPath(int source, int end, int[] lastNodes)<newline46mondego>{<newline46mondego>    if(source!=end)<newline46mondego>        printPath(source, lastNodes[end], lastNodes);<newline46mondego>    System.out.print(end+<doubleQuotes46> <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"977splitHere46","1776633splitHere46","spring-core.jar"
"978splitHere46","1776633splitHere46","lib"
"979splitHere46","1776633splitHere46","uniprotjapi.zip"
"980splitHere46","1776633splitHere46","uniprotjapi.zip"
"981splitHere46","1776633splitHere46","lib"
"982splitHere46","1777098splitHere46","java.util.concurrent"
"983splitHere46","1777134splitHere46","ArrayList"
"984splitHere46","1777134splitHere46","// Let's say a = [0,1,2,3,4] (Integer[])<newline46mondego> a[2] = null;<newline46mondego> // Now a = [0,1,null,3,4]<newline46mondego>"
"985splitHere46","1777155splitHere46","if()"
"986splitHere46","1777291splitHere46","/**<NEWLINE>"
"987splitHere46","1777416splitHere46",".war"
"988splitHere46","1777416splitHere46","Example2"
"989splitHere46","1777416splitHere46","Example2.war"
"990splitHere46","1777416splitHere46","C:/jboss-4.2.3.GA/server/default/deploy/Example2.war"
"991splitHere46","1777716splitHere46","public class Global {<newline46mondego>  public static final Lock webLock = new ReentrantLock();<newline46mondego>}<newline46mondego><newline46mondego>public class ClassA {<newline46mondego>    public void go() {<newline46mondego>        Global.webLock.lock()<newline46mondego>        try {<newline46mondego>            // do A stuff<newline46mondego>        } finally {<newline46mondego>            Global.webLock.unlock()<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class ClassB {<newline46mondego>    public void go() {<newline46mondego>        Global.webLock.lock()<newline46mondego>        try {<newline46mondego>            // do B stuff<newline46mondego>        } finally {<newline46mondego>            Global.webLock.unlock()<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class ClassC {<newline46mondego>    public void go() {<newline46mondego>        Global.webLock.lock()<newline46mondego>        try {<newline46mondego>            // do C stuff<newline46mondego>        } finally {<newline46mondego>            Global.webLock.unlock()<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"992splitHere46","1777933splitHere46","FileWriter"
"993splitHere46","1777933splitHere46","FileWriter"
"994splitHere46","1777933splitHere46","OutputStream out = new FileOutputStream(<doubleQuotes46>out.pdf<doubleQuotes46>);<newline46mondego>out.write(bArray);<newline46mondego>out.close();<newline46mondego>"
"995splitHere46","1777962splitHere46","catch"
"996splitHere46","1777962splitHere46","catch"
"997splitHere46","1777962splitHere46","IOException"
"998splitHere46","1777962splitHere46","FileUploader"
"999splitHere46","1777962splitHere46","IOException"
"1000splitHere46","1777962splitHere46","UploadFailedException"
"1001splitHere46","1777962splitHere46","IOException"
"1002splitHere46","1777962splitHere46","catch"
"1003splitHere46","1777962splitHere46","catch"
"1004splitHere46","1777962splitHere46","throws"
"1005splitHere46","1777962splitHere46","try...catch"
"1006splitHere46","1777962splitHere46","main"
"1007splitHere46","1777962splitHere46","finally"
"1008splitHere46","1777962splitHere46","catch"
"1009splitHere46","1777962splitHere46","finally"
"1010splitHere46","1777962splitHere46","try"
"1011splitHere46","1777962splitHere46","try...finally"
"1012splitHere46","1777962splitHere46","try...catch"
"1013splitHere46","1777962splitHere46","catch"
"1014splitHere46","1777962splitHere46","finally"
"1015splitHere46","1778113splitHere46","PrintWriter"
"1016splitHere46","1778304splitHere46","XmlInputFactory"
"1017splitHere46","1778304splitHere46","XmlEventReader"
"1018splitHere46","1778304splitHere46","XmlStreamReader"
"1019splitHere46","1778620splitHere46","invoker/war/WEB-INF/classes/org/jboss/invocation/http/servlet/InvokerServlet$GetCredentialAction.class"
"1020splitHere46","1778620splitHere46","Action"
"1021splitHere46","1778620splitHere46","PackageBasedActionConfigBuilder"
"1022splitHere46","1778620splitHere46","getResources()"
"1023splitHere46","1778620splitHere46","ClassFinder"
"1024splitHere46","1778620splitHere46","getResources()"
"1025splitHere46","1778620splitHere46","Action"
"1026splitHere46","1778620splitHere46","ClassFinder"
"1027splitHere46","1778620splitHere46","ClassFinder"
"1028splitHere46","1778625splitHere46","NamedQueries"
"1029splitHere46","1778625splitHere46","LazyInitializationException"
"1030splitHere46","1778625splitHere46","hibernate.max_fetch_depth"
"1031splitHere46","1778779splitHere46","verify(bar).DoStuff(any(Foo[].class));<newline46mondego>"
"1032splitHere46","1778822splitHere46","List<Foo>"
"1033splitHere46","1778822splitHere46","List<Bar>"
"1034splitHere46","1778822splitHere46","List"
"1035splitHere46","1778822splitHere46","List<X>.class"
"1036splitHere46","1778874splitHere46","add"
"1037splitHere46","1778874splitHere46","public void add(CacheItem<TKey, TValue> cacheItem)<newline46mondego>"
"1038splitHere46","1779087splitHere46","ConcurrentHashMap"
"1039splitHere46","1779087splitHere46","ConcurrentHashMap"
"1040splitHere46","1779197splitHere46","mail.jar"
"1041splitHere46","1779197splitHere46","/home/{whatever}"
"1042splitHere46","1779291splitHere46","private final Object X_LOCK = new Object();"
"1043splitHere46","1779335splitHere46","public void setDataSourceName(String name) {<newline46mondego>    InitialContext ctx = new InitialContext();<newline46mondego>    jdbcTemplate = new JdbcTemplate((DataSource) ctx.lookup(name));<newline46mondego>}<newline46mondego>"
"1044splitHere46","1779719splitHere46","FontMetrics"
"1045splitHere46","1779719splitHere46","Graphics"
"1046splitHere46","1779719splitHere46","g.getFontMetrics()"
"1047splitHere46","1779719splitHere46","getHeight"
"1048splitHere46","1779813splitHere46","Lock"
"1049splitHere46","1779813splitHere46","tryLock"
"1050splitHere46","1779813splitHere46","if (lock.tryLock())<newline46mondego>{<newline46mondego>    // Got the lock<newline46mondego>    try<newline46mondego>    {<newline46mondego>        // Process record<newline46mondego>    }<newline46mondego>    finally<newline46mondego>    {<newline46mondego>        // Make sure to unlock so that we don't cause a deadlock<newline46mondego>        lock.unlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    // Someone else had the lock, abort<newline46mondego>}<newline46mondego>"
"1051splitHere46","1779813splitHere46","tryLock"
"1052splitHere46","1779813splitHere46","Monitor"
"1053splitHere46","1779900splitHere46","long time1 = System.currentTimeMillis();<newline46mondego>// some code for function 1<newline46mondego>long time2 = System.currentTimeMillis();<newline46mondego><newline46mondego>try {<newline46mondego>    OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(new File(<doubleQuotes46>log.txt<doubleQuotes46>),true));<newline46mondego>    osw.write(<doubleQuotes46>function1,<doubleQuotes46>+(time2 - time1)+<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    osw.close();<newline46mondego>} catch (FileNotFoundException ex) {<newline46mondego>    ex.printStackTrace();<newline46mondego>} catch (IOException ex) {<newline46mondego>    ex.printStackTrace();<newline46mondego>}<newline46mondego>"
"1054splitHere46","1779900splitHere46","#!/bin/bash<newline46mondego><newline46mondego>i=0<newline46mondego>while [ $i -lt 500 ]<newline46mondego>do<newline46mondego>    ./algo1.ex<newline46mondego>    ./algo2.ex<newline46mondego>    i=$(( $i+1 ))<newline46mondego>done<newline46mondego>"
"1055splitHere46","1779900splitHere46","#!/usr/bin/expect -f <newline46mondego><newline46mondego>spawn java -jar algo1.jar<newline46mondego><newline46mondego>expect <doubleQuotes46>enter your choice<doubleQuotes46> {send <doubleQuotes46>1\n<doubleQuotes46>}<newline46mondego>expect <doubleQuotes46>enter a name :<doubleQuotes46> {send <doubleQuotes46>Peju, M.\n<doubleQuotes46>}<newline46mondego>expect <doubleQuotes46>enter your choice<doubleQuotes46> {send <doubleQuotes46>2\n<doubleQuotes46>}<newline46mondego>expect <doubleQuotes46>enter a name :<doubleQuotes46> {send <doubleQuotes46>Creasy, R. J.\n<doubleQuotes46>}<newline46mondego>expect <doubleQuotes46>enter your choice<doubleQuotes46> {send <doubleQuotes46>0\n<doubleQuotes46>}<newline46mondego><newline46mondego>exit<newline46mondego>"
"1056splitHere46","1779900splitHere46","#!/usr/bin/python<newline46mondego># -*- coding: utf8 -*-<newline46mondego><newline46mondego>import sys<newline46mondego><newline46mondego>if __name__ == <doubleQuotes46>__main__<doubleQuotes46>:<newline46mondego>    if sys.argv[1:]:<newline46mondego>    	arg = sys.argv[1]<newline46mondego>    	filin = open(arg, 'r')<newline46mondego><newline46mondego>    	line = filin.readline()<newline46mondego><newline46mondego>    	res= 0, 0, 0<newline46mondego>    	int n = 1<newline46mondego>    	while line !='':<newline46mondego>    		t = line.partition(',')<newline46mondego><newline46mondego>    		if t[0] == <doubleQuotes46>function1<doubleQuotes46>:<newline46mondego>    			res = (res[0] + int(t[2]), res[1], res[2])<newline46mondego>    		if t[0] == <doubleQuotes46>function2<doubleQuotes46>:<newline46mondego>    			res = (res[0], res[1] + int(t[2]), res[2])<newline46mondego>    		if t[0] == <doubleQuotes46>function3<doubleQuotes46>:<newline46mondego>    			res = (res[0], res[1], res[2] + int(t[2]))<newline46mondego><newline46mondego>    		ligne = filin.readline()<newline46mondego>        	n = n+1<newline46mondego>    	print res<newline46mondego>    	print (res[0]/(n/3.0), res[1]/(n/3.0), res[2]/(n/3.0))<newline46mondego><newline46mondego>    	filin.close()<newline46mondego>"
"1057splitHere46","1780013splitHere46","\begin{tabular}<b>{p{15em} p{15em}}</b><code><newline46mondego>String11 & String21 \\<newline46mondego>\hline<newline46mondego>String12 & String22 \\<newline46mondego>\end{tabular}"
"1058splitHere46","1780013splitHere46","// regex to place a new line delimiter (eg. \newline) after every 15 characters<newline46mondego>string11.replaceAll(<doubleQuotes46>.{15}<doubleQuotes46>, <doubleQuotes46>$0<doubleQuotes46> + someNewLineDelimiter);"
"1059splitHere46","1780013splitHere46","\newline"
"1060splitHere46","1780019splitHere46","String allLetters = new String[] {<newline46mondego>                <doubleQuotes46>0<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>1<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>ABC<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>DEF<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>GHI<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>JKL<doubleQuotes46>,<newline46mondego>                // etc...<newline46mondego>        };<newline46mondego><newline46mondego>public static void convert(String phoneNumber)<newline46mondego>{<newline46mondego>  convertSubstring(phoneNumber,<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>private static void convertSubstring(String phoneNumber, String convertedLetters)<newline46mondego>{                   <newline46mondego>  int digit = Integer.parseInt(phoneNumber.substring(0, 1));<newline46mondego>  string letters=allLetters[digit];<newline46mondego>  string remainingString=phoneNumber.substring(1);<newline46mondego><newline46mondego>  for (int i = 0; i < letters.length(); ++i) <newline46mondego>  {<newline46mondego>     char letter = letters.charAt(i);<newline46mondego>     String result=convertedLetters+letter;<newline46mondego>     if (remainingString.length()==0)<newline46mondego>        System.out.println(result);<newline46mondego>     else<newline46mondego>        convertSubstring(remainingString, result);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1061splitHere46","1780062splitHere46","import java.awt.FlowLayout;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego><newline46mondego>public class Main<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(<newline46mondego>            new Runnable() <newline46mondego>            {<newline46mondego>                public void run() <newline46mondego>                {<newline46mondego>                    createAndShowGUI();<newline46mondego>                }<newline46mondego>            });<newline46mondego>    }<newline46mondego><newline46mondego>    private static void createAndShowGUI()<newline46mondego>    {<newline46mondego>        final TestFrame frame;<newline46mondego><newline46mondego>        frame = new TestFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setBounds(new Rectangle(10, 10, 300, 300));<newline46mondego>        frame.init();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class TestFrame<newline46mondego>    extends    JFrame<newline46mondego>    implements ActionListener<newline46mondego>{<newline46mondego>    private final JButton aBtn;<newline46mondego>    private final JButton bBtn;<newline46mondego><newline46mondego>    public TestFrame()<newline46mondego>    {<newline46mondego>        super(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego><newline46mondego>        aBtn = new JButton(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>        bBtn = new JButton(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void init()<newline46mondego>    {<newline46mondego>        setLayout(new FlowLayout());<newline46mondego>        add(aBtn);<newline46mondego>        add(bBtn);<newline46mondego><newline46mondego>        // the class, since it implements ActionListener<newline46mondego>        aBtn.addActionListener(this);<newline46mondego>        bBtn.addActionListener(this);<newline46mondego><newline46mondego>        // outer classes<newline46mondego>        aBtn.addActionListener(new OuterAListener(this));<newline46mondego>        bBtn.addActionListener(new OuterBListener(this));<newline46mondego><newline46mondego>        // inner class<newline46mondego>        aBtn.addActionListener(new InnerAListener());<newline46mondego>        bBtn.addActionListener(new InnerBListener());<newline46mondego><newline46mondego>        // anonymous classes<newline46mondego>        aBtn.addActionListener(<newline46mondego>            new ActionListener()<newline46mondego>            {<newline46mondego>                public void actionPerformed(final ActionEvent e)<newline46mondego>                {<newline46mondego>                    System.out.println (<doubleQuotes46>Hi from Anonymous A<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>        bBtn.addActionListener(<newline46mondego>            new ActionListener()<newline46mondego>            {<newline46mondego>                public void actionPerformed(final ActionEvent e)<newline46mondego>                {<newline46mondego>                    System.out.println (<doubleQuotes46>Hi from Anonymous B<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            });<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(final ActionEvent evt)<newline46mondego>    {<newline46mondego>        final Object source;<newline46mondego><newline46mondego>        source = evt.getSource();<newline46mondego><newline46mondego>        if(source == aBtn)<newline46mondego>        {<newline46mondego>            System.out.println (<doubleQuotes46>Hi from this A<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else if (source == bBtn)<newline46mondego>        {<newline46mondego>            System.out.println (<doubleQuotes46>Hi from this B<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            // ???<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private class InnerAListener<newline46mondego>        implements ActionListener<newline46mondego>    {<newline46mondego>        public void actionPerformed(final ActionEvent e)<newline46mondego>        {<newline46mondego>            System.out.println (<doubleQuotes46>Hi from Inner A<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private class InnerBListener<newline46mondego>        implements ActionListener<newline46mondego>    {<newline46mondego>        public void actionPerformed(final ActionEvent e)<newline46mondego>        {<newline46mondego>            System.out.println (<doubleQuotes46>Hi from Inner B<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class OuterAListener<newline46mondego>    implements ActionListener<newline46mondego>{<newline46mondego>    private final TestFrame frame;<newline46mondego><newline46mondego>    public OuterAListener(final TestFrame f)<newline46mondego>    {<newline46mondego>        frame = f;<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(final ActionEvent e)<newline46mondego>    {<newline46mondego>        System.out.println (<doubleQuotes46>Hi from Outer A<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class OuterBListener<newline46mondego>    implements ActionListener<newline46mondego>{<newline46mondego>    private final TestFrame frame;<newline46mondego><newline46mondego>    public OuterBListener(final TestFrame f)<newline46mondego>    {<newline46mondego>        frame = f;<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(final ActionEvent e)<newline46mondego>    {<newline46mondego>        System.out.println (<doubleQuotes46>Hi from Outer B<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1062splitHere46","1780283splitHere46","mother.kind"
"1063splitHere46","1780283splitHere46","Criteria c = session.createCriteria(Cat.class);<newline46mondego>c.createAlias(<doubleQuotes46>mother.kind<doubleQuotes46>, <doubleQuotes46>motherKind<doubleQuotes46>);<newline46mondego>c.addOrder(Order.asc(<doubleQuotes46>motherKind.value<doubleQuotes46>));<newline46mondego>return c.list();<newline46mondego>"
"1064splitHere46","1780337splitHere46","//pseudocode<newline46mondego>String line;<newline46mondego>StringBuilder toFile = new StringBuilder();<newline46mondego>int i=0;<newline46mondego>for (;array.length>0 && i<array.length-2;i++){<newline46mondego>   toFile.append(<doubleQuotes46>%d <doubleQuotes46>,array[i]);<newline46mondego>}<newline46mondego><newline46mondego>toFile.append(<doubleQuotes46>%d<doubleQuotes46>,array[i]);<newline46mondego><newline46mondego>fileOut.write(toFile.toString());<newline46mondego>"
"1065splitHere46","1780354splitHere46","import java.applet.*;<newline46mondego>public class Test extends Applet {<newline46mondego>	String data[][];<newline46mondego>	public void init() {<newline46mondego>		data = new String[5][2];<newline46mondego>		data[0] = new String[] { <doubleQuotes46>Peter<doubleQuotes46>, <doubleQuotes46>Griffin<doubleQuotes46>};<newline46mondego>		data[1] = new String[] { <doubleQuotes46>Glen<doubleQuotes46>, <doubleQuotes46>Quagmire<doubleQuotes46>};<newline46mondego>		data[2] = new String[] { <doubleQuotes46>Joe<doubleQuotes46>, <doubleQuotes46>Something<doubleQuotes46>};<newline46mondego>		data[3] = new String[] { <doubleQuotes46>Cleveland<doubleQuotes46>, <doubleQuotes46>Brown<doubleQuotes46>};<newline46mondego>		data[4] = new String[] { <doubleQuotes46>Buzz<doubleQuotes46>, <doubleQuotes46>Killington<doubleQuotes46>};<newline46mondego>	}<newline46mondego><newline46mondego>	public String getData() {<newline46mondego>		return toJSON(data);<newline46mondego>	}<newline46mondego><newline46mondego>	/* Quick and dirty, you may want to look<newline46mondego>	* online for a 'complete' converter<newline46mondego>	*<newline46mondego>	* This returns [[<doubleQuotes46>Peter<doubleQuotes46>, <doubleQuotes46>Griffin<doubleQuotes46>], [<doubleQuotes46>Glen<doubleQuotes46>, <doubleQuotes46>Quagmire<doubleQuotes46>], ... etc<newline46mondego>	*/<newline46mondego>	protected String toJSON(String data[][]) {<newline46mondego>		int x, y;<newline46mondego>		String s = <doubleQuotes46>[<doubleQuotes46>;<newline46mondego>		for (y = 0;y < data.length;y += 1) {<newline46mondego>			s += <doubleQuotes46>[<doubleQuotes46>;<newline46mondego>			for (x = 0;x < data[y].length;x += 1) {<newline46mondego>				s += <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>+data[y][x].replaceAll(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>,<doubleQuotes46>\\\<doubleQuotes46><doubleQuotes46>)+<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>;<newline46mondego>				if (x < data[y].length-1) {<newline46mondego>					s += <doubleQuotes46>, <doubleQuotes46>;<newline46mondego>				}<newline46mondego>			}<newline46mondego>			s += <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>			if (y < data.length-1) {<newline46mondego>				s += <doubleQuotes46>, <doubleQuotes46>;<newline46mondego>			}<newline46mondego>		}<newline46mondego>		s += <doubleQuotes46>]<doubleQuotes46>;<newline46mondego><newline46mondego>		return s;<newline46mondego>	}<newline46mondego>}<newline46mondego>"
"1066splitHere46","1780354splitHere46","<html><newline46mondego><body><newline46mondego><p><applet id=<doubleQuotes46>applet<doubleQuotes46> code=<doubleQuotes46>Test<doubleQuotes46>></applet></p><newline46mondego><input id=<doubleQuotes46>button<doubleQuotes46> type=<doubleQuotes46>button<doubleQuotes46> value=<doubleQuotes46>Click me<doubleQuotes46>/><newline46mondego><newline46mondego><script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>(function () {<newline46mondego>	var button = document.getElementById(<doubleQuotes46>button<doubleQuotes46>), applet = document.getElementById(<doubleQuotes46>applet<doubleQuotes46>);<newline46mondego>	button.onclick = function () {<newline46mondego>		var html = [], newWindow, data = JSON.parse(applet.getData()), j;<newline46mondego><newline46mondego>		html.push(<doubleQuotes46><table><tr><th>First Name</th><th>Last Name</th></tr><doubleQuotes46>);<newline46mondego>		for (j = 0;j < data.length;j += 1) {<newline46mondego>			html.push(<doubleQuotes46><tr><td><doubleQuotes46>+data[j][0]+<doubleQuotes46></td><td><doubleQuotes46>+data[j][1]+<doubleQuotes46></td></tr><doubleQuotes46>);<newline46mondego>		}<newline46mondego>		html.push(<doubleQuotes46></table><doubleQuotes46>);<newline46mondego><newline46mondego>		newWindow = window.open();<newline46mondego>		newWindow.document.firstChild.innerHTML = html.join(<doubleQuotes46><doubleQuotes46>);<newline46mondego>	};<newline46mondego>}());<newline46mondego></script><newline46mondego>"
"1067splitHere46","1780362splitHere46","jar-file"
"1068splitHere46","1780362splitHere46","<persistence><newline46mondego>    <persistence-unit name=<doubleQuotes46>OrderManagement<doubleQuotes46>><newline46mondego>        <description>This unit manages orders and customers.<newline46mondego>            It does not rely on any vendor-specific features and can<newline46mondego>            therefore be deployed to any persistence provider.<newline46mondego>        </description><newline46mondego>        <jta-data-source>jdbc/MyOrderDB</jta-data-source><newline46mondego>        <jar-file>MyOrderApp.jar</jar-file><newline46mondego>        <class>com.widgets.Order</class><newline46mondego>        <class>com.widgets.Customer</class><newline46mondego>    </persistence-unit><newline46mondego></persistence><newline46mondego>"
"1069splitHere46","1780362splitHere46","OrderManagement"
"1070splitHere46","1780362splitHere46","jdbc/MyOrderDB"
"1071splitHere46","1780362splitHere46","jar-file"
"1072splitHere46","1780362splitHere46","class"
"1073splitHere46","1780362splitHere46","jar-file"
"1074splitHere46","1780362splitHere46","class"
"1075splitHere46","1780362splitHere46","hibernate.archive.autodetection"
"1076splitHere46","1780362splitHere46","<persistence-unit name=<doubleQuotes46>eventractor<doubleQuotes46> transaction-type=<doubleQuotes46>RESOURCE_LOCAL<doubleQuotes46>><newline46mondego>  <!-- This is required to be spec compliant, Hibernate however supports<newline46mondego>       auto-detection even in JSE.<newline46mondego>  <class>pl.michalmech.eventractor.domain.User</class><newline46mondego>  <class>pl.michalmech.eventractor.domain.Address</class><newline46mondego>  <class>pl.michalmech.eventractor.domain.City</class><newline46mondego>  <class>pl.michalmech.eventractor.domain.Country</class><newline46mondego>   --><newline46mondego><newline46mondego>  <properties><newline46mondego>    <!-- Scan for annotated classes and Hibernate mapping XML files --><newline46mondego>    <property name=<doubleQuotes46>hibernate.archive.autodetection<doubleQuotes46> value=<doubleQuotes46>class, hbm<doubleQuotes46>/><newline46mondego><newline46mondego>    <property name=<doubleQuotes46>hibernate.hbm2ddl.auto<doubleQuotes46> value=<doubleQuotes46>validate<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>hibernate.show_sql<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>  </properties><newline46mondego></persistence-unit><newline46mondego>"
"1077splitHere46","1780390splitHere46","Map<String, Integer> myMap = new HashMap<String, Integer>();<newline46mondego>"
"1078splitHere46","1780390splitHere46","myMap.put(<doubleQuotes46>foo<doubleQuotes46>, 3);<newline46mondego>"
"1079splitHere46","1780390splitHere46","myMap.put(<doubleQuotes46>foo<doubleQuotes46>, new Integer(3));<newline46mondego>"
"1080splitHere46","1780390splitHere46","int i = myMap.get(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>"
"1081splitHere46","1780390splitHere46","int i = myMap.get(<doubleQuotes46>foo<doubleQuotes46>).intValue();<newline46mondego>"
"1082splitHere46","1780390splitHere46","intValue()"
"1083splitHere46","1780390splitHere46","NullPointerException"
"1084splitHere46","1780390splitHere46","int i = myMap.get(<doubleQuotes46>bar<doubleQuotes46>); // NullPointerException<newline46mondego>"
"1085splitHere46","1780390splitHere46","Integer i = (Integer)myMap.get(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>"
"1086splitHere46","1780390splitHere46","Map<String, Integer> myMap = new HashMap<String, Integer>();<newline46mondego>Map<Integer, String> map2 = (Map<Integer, String>)myMap;<newline46mondego>map2.put(3, <doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>"
"1087splitHere46","1780634splitHere46","String host =<doubleQuotes46>myHost<doubleQuotes46>;<newline46mondego>int port = 1234;<newline46mondego>HashMap map = new HashMap();<newline46mondego>String[] credentials = new String[2];<newline46mondego>credentials[0] = user;<newline46mondego>credentials[1] = password;<newline46mondego>map.put(<doubleQuotes46>jmx.remote.credentials<doubleQuotes46>, credentials);<newline46mondego>JMXConnector c = JMXConnectorFactory.newJMXConnector(createConnectionURL(host, port), map);<newline46mondego>c.connect();<newline46mondego>Object o = c.getMBeanServerConnection().getAttribute(new ObjectName(<doubleQuotes46>java.lang:type=Memory<doubleQuotes46>), <doubleQuotes46>HeapMemoryUsage<doubleQuotes46>);<newline46mondego>CompositeData cd = (CompositeData) o;<newline46mondego>System.out.println(cd.get(<doubleQuotes46>committed<doubleQuotes46>));<newline46mondego><newline46mondego>private static JMXServiceURL createConnectionURL(String host, int port) throws MalformedURLException<newline46mondego>{<newline46mondego>    return new JMXServiceURL(<doubleQuotes46>rmi<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, 0, <doubleQuotes46>/jndi/rmi://<doubleQuotes46> + host + <doubleQuotes46>:<doubleQuotes46> + port + <doubleQuotes46>/jmxrmi<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1088splitHere46","1780634splitHere46","-Dcom.sun.management.jmxremote.port=1234<newline46mondego>-Dcom.sun.management.jmxremote.authenticate=false<newline46mondego>-Dcom.sun.management.jmxremote.ssl=false<newline46mondego>"
"1089splitHere46","1780738splitHere46","DatabaseMetaDataCallback"
"1090splitHere46","1780738splitHere46","JDBCUtils.extractDatabaseMetaData"
"1091splitHere46","1780750splitHere46","."
"1092splitHere46","1780750splitHere46","/"
"1093splitHere46","1780750splitHere46",".class"
"1094splitHere46","1780750splitHere46","String name = String.class.getName().replace(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>) + <doubleQuotes46>.class<doubleQuotes46>;<newline46mondego>URL url = Thread.currentThread().getContextClassLoader().getResource(name);<newline46mondego>InputStream input = Thread.currentThread().getContextClassLoader().getResourceAsStream(name);<newline46mondego>"
"1095splitHere46","1780750splitHere46","inputStream.available()"
"1096splitHere46","1780910splitHere46","@Override<newline46mondego>public String toString() {<newline46mondego>  StringBuilder sb = new StringBuilder();<newline46mondego>  sb.append(getClass().getName());<newline46mondego>  sb.append(<doubleQuotes46>: <doubleQuotes46>);<newline46mondego>  for (Field f : getClass().getDeclaredFields()) {<newline46mondego>    sb.append(f.getName());<newline46mondego>    sb.append(<doubleQuotes46>=<doubleQuotes46>);<newline46mondego>    sb.append(f.get(this));<newline46mondego>    sb.append(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>  }<newline46mondego>  return sb.toString();<newline46mondego>}<newline46mondego>"
"1097splitHere46","1780910splitHere46","toString()"
"1098splitHere46","1780910splitHere46","StringBuilder"
"1099splitHere46","1780910splitHere46","toString()"
"1100splitHere46","1780910splitHere46","import lombok.ToString;<newline46mondego><newline46mondego>@ToString(excludes=<doubleQuotes46>id<doubleQuotes46>)<newline46mondego>public class ToStringExample {<newline46mondego>  private static final int STATIC_VAR = 10;<newline46mondego>  private String name;<newline46mondego>  private Shape shape = new Square(5, 10);<newline46mondego>  private String[] tags;<newline46mondego>  private int id;<newline46mondego><newline46mondego>  @ToString(callSuper=true, includeFieldNames=true)<newline46mondego>  public static class Square extends Shape {<newline46mondego>    private final int width, height;<newline46mondego><newline46mondego>    public Square(int width, int height) {<newline46mondego>      this.width = width;<newline46mondego>      this.height = height;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1101splitHere46","1781009splitHere46","java.nio.file.Files"
"1102splitHere46","1781009splitHere46","newDirectoryStream"
"1103splitHere46","1781009splitHere46","*"
"1104splitHere46","1781009splitHere46","**"
"1105splitHere46","1781009splitHere46","?"
"1106splitHere46","1781009splitHere46","[...]"
"1107splitHere46","1781009splitHere46","{...}"
"1108splitHere46","1781009splitHere46","~"
"1109splitHere46","1781151splitHere46","public static class ByteClassLoader extends URLClassLoader {<newline46mondego>    private final Map<String, byte[]> extraClassDefs;<newline46mondego><newline46mondego>    public ByteClassLoader(URL[] urls, ClassLoader parent, Map<String, byte[]> extraClassDefs) {<newline46mondego>      super(urls, parent);<newline46mondego>      this.extraClassDefs = new HashMap<String, byte[]>(extraClassDefs);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Class<?> findClass(final String name) throws ClassNotFoundException {<newline46mondego>      byte[] classBytes = this.extraClassDefs.remove(name);<newline46mondego>      if (classBytes != null) {<newline46mondego>        return defineClass(name, classBytes, 0, classBytes.length); <newline46mondego>      }<newline46mondego>      return super.findClass(name);<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego>"
"1110splitHere46","1781152splitHere46","java.util.ResourceBundle"
"1111splitHere46","1781152splitHere46","getKeys"
"1112splitHere46","1781524splitHere46","*"
"1113splitHere46","1781524splitHere46","List"
"1114splitHere46","1781524splitHere46","<jsp:setProperty />"
"1115splitHere46","1781950splitHere46","Map<Car,Vendor>"
"1116splitHere46","1781950splitHere46","Map<Student,Course>"
"1117splitHere46","1781950splitHere46","String name"
"1118splitHere46","1781950splitHere46","String phonenumber"
"1119splitHere46","1781950splitHere46","// Dummy value to associate with an Object in the backing Map<newline46mondego>private static final Object PRESENT = new Object();<newline46mondego>private transient HashMap<E,Object> map;<newline46mondego><newline46mondego>public boolean add(E e) {<newline46mondego>  return map.put(e, PRESENT)==null;<newline46mondego>}<newline46mondego>"
"1120splitHere46","1782010splitHere46","public class ImageButton extends Canvas {<newline46mondego>    private int mouse = 0;<newline46mondego>    private boolean hit = false;<newline46mondego><newline46mondego>    public ImageButton(Composite parent, int style) {<newline46mondego>        super(parent, style);<newline46mondego><newline46mondego>        this.addPaintListener(new PaintListener() {<newline46mondego>            public void paintControl(PaintEvent e) {<newline46mondego>                switch (mouse) {<newline46mondego>                case 0:<newline46mondego>                    // Default state<newline46mondego>                    e.gc.drawString(<doubleQuotes46>Normal<doubleQuotes46>, 5, 5);<newline46mondego>                    break;<newline46mondego>                case 1:<newline46mondego>                    // Mouse over<newline46mondego>                    e.gc.drawString(<doubleQuotes46>Mouse over<doubleQuotes46>, 5, 5);<newline46mondego>                    break;<newline46mondego>                case 2:<newline46mondego>                    // Mouse down<newline46mondego>                    e.gc.drawString(<doubleQuotes46>Hit<doubleQuotes46>, 5, 5);<newline46mondego>                    break;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        this.addMouseMoveListener(new MouseMoveListener() {<newline46mondego>            public void mouseMove(MouseEvent e) {<newline46mondego>                if (!hit)<newline46mondego>                    return;<newline46mondego>                mouse = 2;<newline46mondego>                if (e.x < 0 || e.y < 0 || e.x > getBounds().width<newline46mondego>                        || e.y > getBounds().height) {<newline46mondego>                    mouse = 0;<newline46mondego>                }<newline46mondego>                redraw();<newline46mondego>            }<newline46mondego>        });<newline46mondego>        this.addMouseTrackListener(new MouseTrackAdapter() {<newline46mondego>            public void mouseEnter(MouseEvent e) {<newline46mondego>                mouse = 1;<newline46mondego>                redraw();<newline46mondego>            }<newline46mondego><newline46mondego>            public void mouseExit(MouseEvent e) {<newline46mondego>                mouse = 0;<newline46mondego>                redraw();<newline46mondego>            }<newline46mondego>        });<newline46mondego>        this.addMouseListener(new MouseAdapter() {<newline46mondego>            public void mouseDown(MouseEvent e) {<newline46mondego>                hit = true;<newline46mondego>                mouse = 2;<newline46mondego>                redraw();<newline46mondego>            }<newline46mondego><newline46mondego>            public void mouseUp(MouseEvent e) {<newline46mondego>                hit = false;<newline46mondego>                mouse = 1;<newline46mondego>                if (e.x < 0 || e.y < 0 || e.x > getBounds().width<newline46mondego>                        || e.y > getBounds().height) {<newline46mondego>                    mouse = 0;<newline46mondego>                }<newline46mondego>                redraw();<newline46mondego>                if (mouse == 1)<newline46mondego>                    notifyListeners(SWT.Selection, new Event());<newline46mondego>            }<newline46mondego>        });<newline46mondego>        this.addKeyListener(new KeyAdapter() {<newline46mondego>            public void keyPressed(KeyEvent e) {<newline46mondego>                if (e.keyCode == '\r' || e.character == ' ') {<newline46mondego>                    Event event = new Event();<newline46mondego>                    notifyListeners(SWT.Selection, event);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1121splitHere46","1782088splitHere46","@code"
"1122splitHere46","1782088splitHere46","/** This parses {@code <complexType name=<doubleQuotes46><doubleQuotes46>>} */"
"1123splitHere46","1782342splitHere46","// Create tabbed pane and add tabs.<newline46mondego>JTabbedPane tabbedPane = ...<newline46mondego><newline46mondego>// Create bespoke component for rendering the tab.<newline46mondego>JLabel lbl = new JLabel(<doubleQuotes46>Hello, World<doubleQuotes46>);<newline46mondego>Icon icon = new ImageIcon(getClass().getResource(<doubleQuotes46>/foo/bar/hello.jpg<doubleQuotes46>));<newline46mondego>lbl.setIcon(icon);<newline46mondego><newline46mondego>// Add some spacing between text and icon, and position text to the RHS.<newline46mondego>lbl.setIconTextGap(5);<newline46mondego>lbl.setHorizontalTextPosition(SwingConstants.RIGHT);<newline46mondego><newline46mondego>// Assign bespoke tab component for first tab.<newline46mondego>tabbedPane.setTabComponentAt(0, lbl);<newline46mondego>"
"1124splitHere46","1782342splitHere46","private void addTab(JTabbedPane tabbedPane, Component tab, String title, Icon icon) {<newline46mondego>  tabbedPane.add(tab);<newline46mondego><newline46mondego>  JLabel lbl = ... // Create bespoke label for rendering tab title.<newline46mondego><newline46mondego>  tabbedPane.setTabComponentAt(tabbedPane.getTabCount() - 1, lbl);<newline46mondego>}<newline46mondego>"
"1125splitHere46","1782402splitHere46","<plugins><newline46mondego>    <plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-war-plugin</artifactId><newline46mondego>    <version>2.0.2</version><newline46mondego>    <configuration><newline46mondego>    <webResources><newline46mondego>    	<resource><newline46mondego>    		<directory>${basedir}/src/main/webapp/WEB-INF</directory><newline46mondego>    		<filtering>true</filtering><newline46mondego>    		<targetPath>WEB-INF</targetPath><newline46mondego>    		<includes><newline46mondego>    			<include>**/xmlgateway-context.xml</include><newline46mondego>    		</includes><newline46mondego>    	</resource><newline46mondego>    </webResources><newline46mondego>    </configuration><newline46mondego></plugin><newline46mondego>"
"1126splitHere46","1782402splitHere46","src/main/webapp/WEB-INF"
"1127splitHere46","1782402splitHere46","xmlgateway-context.xml"
"1128splitHere46","1782402splitHere46","WEB-INF"
"1129splitHere46","1782402splitHere46","target"
"1130splitHere46","1782533splitHere46","JFrame"
"1131splitHere46","1782533splitHere46","paint()"
"1132splitHere46","1782533splitHere46","JFrame"
"1133splitHere46","1782533splitHere46","setVisibile()"
"1134splitHere46","1782533splitHere46","paint()"
"1135splitHere46","1782533splitHere46","Graphics"
"1136splitHere46","1782533splitHere46","Bar"
"1137splitHere46","1782533splitHere46","runMe()"
"1138splitHere46","1782533splitHere46","Foo"
"1139splitHere46","1782533splitHere46","Bar"
"1140splitHere46","1782533splitHere46","public class Test {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        new Bar();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Foo {<newline46mondego>    public Foo() { runMe(); }<newline46mondego>    public void runMe() { System.out.println(<doubleQuotes46>Foo<doubleQuotes46>); }<newline46mondego>}<newline46mondego><newline46mondego>public class Bar extends Foo {<newline46mondego>    public void runMe() { System.out.println(<doubleQuotes46>Bar<doubleQuotes46>);}<newline46mondego>}<newline46mondego>"
"1141splitHere46","1782730splitHere46","Return-Path"
"1142splitHere46","1782730splitHere46","Return-Path"
"1143splitHere46","1782730splitHere46","SMTP MAIL FROM"
"1144splitHere46","1782730splitHere46","mail.smtp.from"
"1145splitHere46","1782730splitHere46","from"
"1146splitHere46","1782730splitHere46","from"
"1147splitHere46","1782730splitHere46","replyto@example.com"
"1148splitHere46","1782730splitHere46","smtp.mail.from"
"1149splitHere46","1782730splitHere46","from@example.com"
"1150splitHere46","1782730splitHere46","m.addFrom(...);"
"1151splitHere46","1782730splitHere46","telnet smtp.example.com 25 <newline46mondego>220 smtp.example.com ESMTP .....<newline46mondego><newline46mondego>helo computername<newline46mondego>250 smtp.example.com Hello computername [123.123.123.123]<newline46mondego><newline46mondego>mail from:<replyto@example.com><newline46mondego>250 <replyto@example.com> is syntactically correct<newline46mondego><newline46mondego>rcpt to:<rcpt@foo.com><newline46mondego>250 <rcpt@foo.com> verified<newline46mondego><newline46mondego>data<newline46mondego>354 Enter message, ending with <doubleQuotes46>.<doubleQuotes46> on a line by itself<newline46mondego>To: Joey <to@joey.com><newline46mondego>From: Joey <from@example.com> <newline46mondego>Subject: Joey<newline46mondego><newline46mondego>Hey Joey!<newline46mondego><newline46mondego>.<newline46mondego>250 OK id=....<newline46mondego><newline46mondego>Quit<newline46mondego>"
"1152splitHere46","1782730splitHere46","props.put(<doubleQuotes46>mail.smtp.from<doubleQuotes46>, <doubleQuotes46>replyto@example.com<doubleQuotes46>);<newline46mondego>Session session = Session.getDefaultInstance(props, null);<newline46mondego>MimeMessage m = new MimeMessage(session);<newline46mondego>m.addFrom(InternetAddress.parse(<doubleQuotes46>from@example.com<doubleQuotes46>));<newline46mondego>"
"1153splitHere46","1782930splitHere46","public final Comparator<String> ID_IGN_CASE_COMP = new Comparator<String>() {<newline46mondego><newline46mondego>    public int compare(String s1, String s2) {<newline46mondego>        int result = s1.compareToIgnoreCase(s2);<newline46mondego>        if( result == 0 )<newline46mondego>            result = s1.compareTo(s2);<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"1154splitHere46","1783274splitHere46","ServiceUtils.invokeOnAllConnections(room, <doubleQuotes46>my_as3_function<doubleQuotes46>, userList);<newline46mondego>"
"1155splitHere46","1783525splitHere46","i = i/1000 * 1000<newline46mondego>"
"1156splitHere46","1783525splitHere46","i = i - (i % 1000)<newline46mondego>"
"1157splitHere46","1783682splitHere46","InputStream input = servletContext.getResourceAsStream(<doubleQuotes46>file.txt<doubleQuotes46>);<newline46mondego>"
"1158splitHere46","1783682splitHere46","InputStream input = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>file.txt<doubleQuotes46>);<newline46mondego>"
"1159splitHere46","1783682splitHere46","InputStream input = new FileInputStream(servletContext.getRealPath(<doubleQuotes46>file.txt<doubleQuotes46>));<newline46mondego>"
"1160splitHere46","1783682splitHere46","path/to/file.txt"
"1161splitHere46","1783682splitHere46","ServletContext"
"1162splitHere46","1783682splitHere46","ServletActionContext#getServletContext()"
"1163splitHere46","1783682splitHere46","String path=GetPointsOfInterestAction.class.getResource(<doubleQuotes46>../../../resources/visitor_attractions.txt<doubleQuotes46>)<newline46mondego>"
"1164splitHere46","1783682splitHere46","GetPointsOfInterestAction"
"1165splitHere46","1783682splitHere46","cd ../"
"1166splitHere46","1783682splitHere46","resources/visitor_attractions.txt"
"1167splitHere46","1783728splitHere46","cls = (*env)->FindClass(env,<doubleQuotes46>my.ClassABC<doubleQuotes46>);<newline46mondego>"
"1168splitHere46","1783728splitHere46","cls = (*env)->FindClass(env,<doubleQuotes46>my/ClassABC<doubleQuotes46>);<newline46mondego>"
"1169splitHere46","1783728splitHere46","...<newline46mondego>JavaVMOption options[3];<newline46mondego>...<newline46mondego>options[2].optionString = <doubleQuotes46>-verbose:jni<doubleQuotes46>;<newline46mondego>...<newline46mondego>"
"1170splitHere46","1783747splitHere46","popMessage()"
"1171splitHere46","1783747splitHere46","wait()"
"1172splitHere46","1783747splitHere46","notifyAll()"
"1173splitHere46","1783747splitHere46","wait()"
"1174splitHere46","1783818splitHere46","JRBeanCollectionDataSource($F{Projects})<newline46mondego>"
"1175splitHere46","1783864splitHere46","<mbean code=<doubleQuotes46>org.jboss.mq.server.jmx.Queue<doubleQuotes46> <newline46mondego>  name=<doubleQuotes46>jboss.mq.destination:service=Queue,name=MyQueue<doubleQuotes46>> <newline46mondego>  <depends optional-attribute-name=<doubleQuotes46>DestinationManager<doubleQuotes46>>jboss.mq:service=DestinationManager</depends><newline46mondego></mbean><newline46mondego>"
"1176splitHere46","1783864splitHere46","Queue queue = (Queue) ctx.lookup(<doubleQuotes46>queue/MyQueue<doubleQuotes46>);"
"1177splitHere46","1783880splitHere46","setSize()"
"1178splitHere46","1783880splitHere46","setPreferredSize()"
"1179splitHere46","1783880splitHere46","setMinimumSize"
"1180splitHere46","1783880splitHere46","setMaximumSize"
"1181splitHere46","1783880splitHere46","setSize()"
"1182splitHere46","1783880splitHere46","JFrames"
"1183splitHere46","1783880splitHere46","JWindows"
"1184splitHere46","1783880splitHere46","scrolled panes"
"1185splitHere46","1783880splitHere46","setSize()"
"1186splitHere46","1783880splitHere46","setPreferredSize()"
"1187splitHere46","1783880splitHere46","setSize()"
"1188splitHere46","1783880splitHere46","setLocation()"
"1189splitHere46","1783880splitHere46","BorderLayout"
"1190splitHere46","1783880splitHere46","preferred size"
"1191splitHere46","1783880splitHere46","jframe"
"1192splitHere46","1783929splitHere46","BigInteger"
"1193splitHere46","1783929splitHere46","sum"
"1194splitHere46","1783929splitHere46","add"
"1195splitHere46","1783929splitHere46","sum"
"1196splitHere46","1783929splitHere46","sum = sum.add(BigInteger.valueOf(i));<newline46mondego>"
"1197splitHere46","1783929splitHere46","BigInteger"
"1198splitHere46","1783929splitHere46","int"
"1199splitHere46","1783959splitHere46","public User() {<newline46mondego>  System.out.println(<doubleQuotes46>I'm inside the User constructor!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1200splitHere46","1784025splitHere46","$F{CODE}"
"1201splitHere46","1784044splitHere46","<tx:jta-transaction-manager/>"
"1202splitHere46","1784044splitHere46","javax.naming.NameNotFoundException"
"1203splitHere46","1784044splitHere46","java:/TransactionManager"
"1204splitHere46","1784044splitHere46","java:/comp/TransactionManager"
"1205splitHere46","1784044splitHere46","<tx:jta-transaction-manager/>"
"1206splitHere46","1784044splitHere46","JtaTransactionManager"
"1207splitHere46","1784164splitHere46","<assembly><newline46mondego>    <id>atoms</id><newline46mondego>    <formats><newline46mondego>    	<format>jar</format><newline46mondego>    </formats><newline46mondego>    <includeBaseDirectory>false</includeBaseDirectory><newline46mondego>    <fileSets><newline46mondego>    	<fileSet><newline46mondego>    		<directory>${basedir}/target/classes<newline46mondego>    		</directory><newline46mondego>    		<outputDirectory>/</outputDirectory><newline46mondego>    		<includes><newline46mondego>    			<include>com/atoms/vo.**</include><newline46mondego>    			<include>com/atoms/rules/**</include><newline46mondego>    		</includes><newline46mondego>    	</fileSet><newline46mondego>    </fileSets><newline46mondego></assembly><newline46mondego>"
"1208splitHere46","1784259splitHere46","com.sybase.jaguar.server.jvm.options=-Djava.protocol.handler.pkgs=sun.security.provider.Sun|com.sun.net.ssl.internal.ssl<newline46mondego>"
"1209splitHere46","1784259splitHere46","SCL profile allocation"
"1210splitHere46","1784259splitHere46","com.sybase.jaguar.server.java.classes"
"1211splitHere46","1784259splitHere46","com.sybase.jaguar.server.jvm.bootclasspath.jars"
"1212splitHere46","1784259splitHere46","com.sybase.jaguar.server.jvm.classpath.jars"
"1213splitHere46","1784259splitHere46","C:\Sybase\EAServer\java\lib"
"1214splitHere46","1784282splitHere46","<include android:id=<doubleQuotes46>@+id/the_id<doubleQuotes46> layout=<doubleQuotes46>@layout/my_layout_to_include<doubleQuotes46> /><newline46mondego>"
"1215splitHere46","1784311splitHere46","jasperReport.WHEN_NO_DATA_TYPE_BLANK_PAGE<newline46mondego>  jasperReport.WHEN_NO_DATA_TYPE_NO_PAGES<newline46mondego>  jasperReport .WHEN_NO_DATA_TYPE_ALL_SECTIONS_NO_DETAIL<newline46mondego>"
"1216splitHere46","1784601splitHere46","private void updateRowHeights()<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        for (int row = 0; row < table.getRowCount(); row++)<newline46mondego>        {<newline46mondego>            int rowHeight = table.getRowHeight();<newline46mondego><newline46mondego>            for (int column = 0; column < table.getColumnCount(); column++)<newline46mondego>            {<newline46mondego>                Component comp = table.prepareRenderer(table.getCellRenderer(row, column), row, column);<newline46mondego>                rowHeight = Math.max(rowHeight, comp.getPreferredSize().height);<newline46mondego>            }<newline46mondego><newline46mondego>            table.setRowHeight(row, rowHeight);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    catch(ClassCastException e) {}<newline46mondego>}<newline46mondego>"
"1217splitHere46","1784720splitHere46","Status.Status()"
"1218splitHere46","1784720splitHere46","super();<newline46mondego>"
"1219splitHere46","1785300splitHere46","public class ConnectionChangeReceiver extends BroadcastReceiver<newline46mondego>{<newline46mondego>  @Override<newline46mondego>  public void onReceive( Context context, Intent intent )<newline46mondego>  {<newline46mondego>    ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService( Context.CONNECTIVITY_SERVICE );<newline46mondego>    NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();<newline46mondego>    NetworkInfo mobNetInfo = connectivityManager.getNetworkInfo(     ConnectivityManager.TYPE_MOBILE );<newline46mondego>    if ( activeNetInfo != null )<newline46mondego>    {<newline46mondego>      Toast.makeText( context, <doubleQuotes46>Active Network Type : <doubleQuotes46> + activeNetInfo.getTypeName(), Toast.LENGTH_SHORT ).show();<newline46mondego>    }<newline46mondego>    if( mobNetInfo != null )<newline46mondego>    {<newline46mondego>      Toast.makeText( context, <doubleQuotes46>Mobile Network Type : <doubleQuotes46> + mobNetInfo.getTypeName(), Toast.LENGTH_SHORT ).show();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1220splitHere46","1785300splitHere46","<!-- Needed to check when the network connection changes --><newline46mondego><uses-permission android:name=<doubleQuotes46>android.permission.ACCESS_NETWORK_STATE<doubleQuotes46>/><newline46mondego>"
"1221splitHere46","1785300splitHere46","<receiver android:name=<doubleQuotes46>com.blackboard.androidtest.receiver.ConnectionChangeReceiver<doubleQuotes46><newline46mondego>          android:label=<doubleQuotes46>NetworkConnection<doubleQuotes46>><newline46mondego>  <intent-filter><newline46mondego>    <action android:name=<doubleQuotes46>android.net.conn.CONNECTIVITY_CHANGE<doubleQuotes46>/><newline46mondego>  </intent-filter><newline46mondego></receiver><newline46mondego>"
"1222splitHere46","1785369splitHere46","HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\LSA\SuppressExtendedProtection<newline46mondego>"
"1223splitHere46","1785496splitHere46","xsi:schemaLocation"
"1224splitHere46","1785496splitHere46","root.addAttribute(new Attribute(<doubleQuotes46>xsi:schemaLocation<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd<doubleQuotes46>));<newline46mondego>"
"1225splitHere46","1785496splitHere46","Attribute(String name, String URI, String value)"
"1226splitHere46","1785583splitHere46","getProvider()"
"1227splitHere46","1785583splitHere46","getAlgorithm()"
"1228splitHere46","1785835splitHere46","importContacts()"
"1229splitHere46","1785835splitHere46","txtName.setText(Name.get(0));<newline46mondego> txtPhone.setText(Phone.get(0));<newline46mondego> txtMobile.setText(Mobile.get(0));<newline46mondego> txtAddress.setText(Address.get(0));<newline46mondego>"
"1230splitHere46","1785835splitHere46",".get(0)"
"1231splitHere46","1785835splitHere46",".get(index)"
"1232splitHere46","1785835splitHere46","public void Previous()<newline46mondego>            {<newline46mondego>                    if (index > 0)<newline46mondego>                    {<newline46mondego>                            index--;<newline46mondego>                    }<newline46mondego>                    txtName.setText(Name.get(index));<newline46mondego>                    txtPhone.setText(Phone.get(index));<newline46mondego>                    txtMobile.setText(Mobile.get(index));<newline46mondego>                    txtAddress.setText(Address.get(index));<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>  public void Next()<newline46mondego>            {<newline46mondego>                    if(index < temp.size() - 1){<newline46mondego>		               index++;<newline46mondego>		             }<newline46mondego>                    txtName.setText(Name.get(index));<newline46mondego>                    txtPhone.setText(Phone.get(index));<newline46mondego>                    txtMobile.setText(Mobile.get(index));<newline46mondego>                    txtAddress.setText(Address.get(index));<newline46mondego><newline46mondego>            }<newline46mondego>"
"1233splitHere46","1785851splitHere46","log4j.appender.stdout.layout.ConversionPattern=%d{}{America/New_York} %p [%c] - %m%n<newline46mondego>"
"1234splitHere46","1786096splitHere46","public String readLine(BufferedReader pReader) {<newline46mondego>    try {<newline46mondego>        return pReader.readLine();<newline46mondego>    } catch(IOException IOE) {<newline46mondego>        /* Not a very good practice but let say <doubleQuotes46>We don't care!<doubleQuotes46> */<newline46mondego>        // Return null if the line is not there (like there was no 4 lines in the file)<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void importContacts() {<newline46mondego>    try {<newline46mondego>        BufferedReader infoReader = new BufferedReader(new FileReader(<doubleQuotes46>../files/example.txt<doubleQuotes46>));<newline46mondego>        txtName   .setText(readLine(infoReader));<newline46mondego>        txtPhone  .setText(readLine(infoReader));<newline46mondego>        txtMobile .setText(readLine(infoReader));<newline46mondego>        txtAddress.setText(readLine(infoReader));<newline46mondego>    } catch (IOException ioe) {<newline46mondego>        JOptionPane.showMessageDialog(null, ioe.getMessage());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1235splitHere46","1786395splitHere46","List.getSize()"
"1236splitHere46","1786428splitHere46","import java.io.*;<newline46mondego>import java.security.MessageDigest;<newline46mondego><newline46mondego>public class Checksum <newline46mondego>{    <newline46mondego>    const string Algorithm = <doubleQuotes46>SHA-1<doubleQuotes46>; // or MD5 etc.<newline46mondego><newline46mondego>    public static byte[] createChecksum(String filename) throws<newline46mondego>       Exception<newline46mondego>    {<newline46mondego>        InputStream fis =  new FileInputStream(filename);<newline46mondego>        try<newline46mondego>        {<newline46mondego>             byte[] buffer = new byte[1024];<newline46mondego>             MessageDigest complete = MessageDigest.getInstance(<doubleQuotes46>MD5<doubleQuotes46>); <newline46mondego>             int numRead;<newline46mondego>             do <newline46mondego>             {<newline46mondego>                 numRead = fis.read(buffer);<newline46mondego>                 if (numRead > 0) <newline46mondego>                 {<newline46mondego>                     complete.update(buffer, 0, numRead);<newline46mondego>                 }<newline46mondego>             } while (numRead != -1);<newline46mondego>             return complete.digest();<newline46mondego>         }<newline46mondego>         finally<newline46mondego>         {<newline46mondego>             fis.close();<newline46mondego>         }<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"1237splitHere46","1786615splitHere46","public class Foo {<newline46mondego><newline46mondego>	private long threadCount;<newline46mondego><newline46mondego>	public synchronized void enter() {<newline46mondego>		threadCount++;<newline46mondego>	}<newline46mondego><newline46mondego>	public synchronized void exit() {<newline46mondego>		threadCount--;<newline46mondego>		notifyAll();<newline46mondego>	}<newline46mondego><newline46mondego>	public synchronized void doStuff() {<newline46mondego>		...<newline46mondego>	}<newline46mondego><newline46mondego>	public synchronized void logout() {<newline46mondego>		while(threadCount > 0) {<newline46mondego>			try {<newline46mondego>				wait();<newline46mondego>			} catch (InterruptedException e) {<newline46mondego>				...<newline46mondego>			}<newline46mondego>		}<newline46mondego>	}<newline46mondego><newline46mondego>}<newline46mondego>"
"1238splitHere46","1786640splitHere46","conn.setRequestProperty(<doubleQuotes46>User-Agent<doubleQuotes46>, <doubleQuotes46>Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.15) Gecko/2009101600 Firefox/3.0.15<doubleQuotes46>);<newline46mondego>"
"1239splitHere46","1786797splitHere46","panel.setLayout(null);<newline46mondego>"
"1240splitHere46","1786797splitHere46","panel.setLayout(new BorderLayout());<newline46mondego>"
"1241splitHere46","1786797splitHere46","panel.add(loadData, BorderLayout.SOUTH) // e.g. for the button<newline46mondego><newline46mondego> // e.g. for the table<newline46mondego> panel.add(new JScrollPane(table, .....)), BorderLayout.CENTER)<newline46mondego>"
"1242splitHere46","1786995splitHere46","Section section = new Section(parent, SWT.NONE);<newline46mondego>Composite toolbar = new Composite(section, SWT.NONE);<newline46mondego>RowLayout layout = new RowLayout(SWT.HORIZONTAL);<newline46mondego>layout.marginLeft = 0;<newline46mondego>layout.marginRight = 0;<newline46mondego>layout.spacing = 0;<newline46mondego>layout.marginTop = 0;<newline46mondego>layout.marginBottom = 0;<newline46mondego>toolbar.setLayout(layout);<newline46mondego>parent.setTextClient(toolbar);<newline46mondego><newline46mondego>ImageHyperlink imageHyperLink = new ImageHyperlink(toolbar, SWT.CENTER);<newline46mondego>imageHyperLink.setBackgroundImage(section.getBackgroundImage());<newline46mondego>imageHyperLink.setToolTipText(<doubleQuotes46>Click me for help<doubleQuotes46>);<newline46mondego>imageHyperLink.setImage(JFaceResources.getImage(Dialog.DLG_IMG_HELP));<newline46mondego>imageHyperLink.addHyperlinkListener(new HyperlinkAdapter()<newline46mondego>{<newline46mondego>    public void linkActivated(HyperlinkEvent e)<newline46mondego>    {<newline46mondego>         // Show help<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1243splitHere46","1787096splitHere46","0xc0000000"
"1244splitHere46","1787096splitHere46","0xbf800000"
"1245splitHere46","1787175splitHere46","id=<doubleQuotes46>myapplet<doubleQuotes46>"
"1246splitHere46","1787175splitHere46","myapplet.safeMethod();"
"1247splitHere46","1787175splitHere46","AccessControlException"
"1248splitHere46","1787175splitHere46","grant"
"1249splitHere46","1787175splitHere46","AccessControlException"
"1250splitHere46","1787175splitHere46","userName2()"
"1251splitHere46","1787175splitHere46","userName()"
"1252splitHere46","1787175splitHere46","userName2()"
"1253splitHere46","1787175splitHere46","userName()"
"1254splitHere46","1787175splitHere46","userName2()"
"1255splitHere46","1787175splitHere46","userName2()"
"1256splitHere46","1787175splitHere46","JSObject"
"1257splitHere46","1787175splitHere46","import java.applet.Applet;<newline46mondego>import java.awt.*;<newline46mondego>import java.security.AccessControlException;<newline46mondego><newline46mondego>public class TestApp extends Applet {<newline46mondego>  Label output = new Label(<doubleQuotes46>What is the value of user.name?<doubleQuotes46>);<newline46mondego>  String userName;<newline46mondego>  Thread access = new Thread() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>      try {<newline46mondego>        userName = System.getProperty(<doubleQuotes46>user.name<doubleQuotes46>);<newline46mondego>      } catch (AccessControlException e) {<newline46mondego>        userName = <doubleQuotes46>Oops, failed in thread. No read permissions!<doubleQuotes46>;<newline46mondego>      }<newline46mondego>    }<newline46mondego>  };<newline46mondego>  public void init() {<newline46mondego>    setLayout(new BorderLayout());<newline46mondego>    add(BorderLayout.CENTER, output);<newline46mondego>  }<newline46mondego>  public String userName2() throws InterruptedException {<newline46mondego>    access.start();<newline46mondego>    access.join();<newline46mondego>    output.setText(userName);<newline46mondego>    return userName;<newline46mondego>  }<newline46mondego>  public String userName() {<newline46mondego>    String userName = <doubleQuotes46>Oops, failed in liveconnect-context. No read permissions!<doubleQuotes46>;<newline46mondego>    try {<newline46mondego>      userName = System.getProperty(<doubleQuotes46>user.name<doubleQuotes46>);<newline46mondego>    } catch (AccessControlException e) {<newline46mondego>      e.printStackTrace();<newline46mondego>    }<newline46mondego>    output.setText(userName);<newline46mondego>    return userName;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1258splitHere46","1787175splitHere46","<html><head><title>test</title></head><body><newline46mondego>  <applet id=<doubleQuotes46>myapplet<doubleQuotes46> code=<doubleQuotes46>TestApp<doubleQuotes46> width=<doubleQuotes46>350px<doubleQuotes46> height=<doubleQuotes46>80px<doubleQuotes46>></applet><newline46mondego><newline46mondego>  <input type=<doubleQuotes46>button<doubleQuotes46> value=<doubleQuotes46>liveconnect version<doubleQuotes46> onclick=<doubleQuotes46>javascript:alert(myapplet.userName());<doubleQuotes46>><newline46mondego><newline46mondego>  <input type=<doubleQuotes46>button<doubleQuotes46> value=<doubleQuotes46>hacky thread version<doubleQuotes46> onclick=<doubleQuotes46>javascript:alert(myapplet.userName2());<doubleQuotes46>><newline46mondego></body></html><newline46mondego>"
"1259splitHere46","1787175splitHere46","."
"1260splitHere46","1787175splitHere46","grant codeBase <doubleQuotes46>http://[domain].xxx/-<doubleQuotes46> {<newline46mondego>  permission java.util.PropertyPermission <doubleQuotes46>user.name<doubleQuotes46>, <doubleQuotes46>read<doubleQuotes46>;<newline46mondego>};<newline46mondego>"
"1261splitHere46","1787430splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego> <decorators defaultdir=<doubleQuotes46>/decorators<doubleQuotes46>><newline46mondego>  <decorator name=<doubleQuotes46>main<doubleQuotes46> page=<doubleQuotes46>main.jsp<doubleQuotes46>><newline46mondego>      <pattern>/*</pattern><newline46mondego>  </decorator><newline46mondego> </decorators><newline46mondego>"
"1262splitHere46","1787430splitHere46","<filter-mapping><newline46mondego>    <filter-name>sitemesh</filter-name><newline46mondego>    <url-pattern>/*</url-pattern><newline46mondego>    <dispatcher>REQUEST</dispatcher><newline46mondego>    <dispatcher>FORWARD</dispatcher><newline46mondego>    <dispatcher>INCLUDE</dispatcher><newline46mondego>  </filter-mapping><newline46mondego>"
"1263splitHere46","1787582splitHere46","scala.xml.Elem"
"1264splitHere46","1787582splitHere46","javax.xml.transform.stream.StreamSource"
"1265splitHere46","1787582splitHere46","import java.io.StringReader<newline46mondego>import javax.xml.transform.stream.StreamSource<newline46mondego>import javax.xml.validation.{Schema, SchemaFactory}<newline46mondego>import javax.xml.XMLConstants<newline46mondego>import scala.xml.Elem<newline46mondego><newline46mondego>val schemaXml = <xsd:schema xmlns:xsd=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46>><newline46mondego>                  <xsd:element name=<doubleQuotes46>foo<doubleQuotes46>/><newline46mondego>                </xsd:schema><newline46mondego>val schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);<newline46mondego><newline46mondego>implicit def toStreamSource(x:Elem) = new StreamSource(new StringReader(x.toString))<newline46mondego><newline46mondego>// Very possible, possibly still not any good:<newline46mondego>val schema = schemaFactory.newSchema(schemaXml)<newline46mondego>"
"1266splitHere46","1787610splitHere46","ParentObject"
"1267splitHere46","1787610splitHere46","ChildObject"
"1268splitHere46","1787610splitHere46","FOR UPDATE"
"1269splitHere46","1787610splitHere46","FROM"
"1270splitHere46","1787610splitHere46","ChildObject"
"1271splitHere46","1787610splitHere46","ParentObject"
"1272splitHere46","1787610splitHere46","session.lock()"
"1273splitHere46","1787610splitHere46","ParentObject"
"1274splitHere46","1787610splitHere46","String hql = <doubleQuotes46>select c from ChildObject c, ParentObject p where c.id = p.id<doubleQuotes46>;<newline46mondego>session.createQuery(hql)<newline46mondego> .setLockMode(<doubleQuotes46>c<doubleQuotes46>, LockMode.READ)<newline46mondego> .setLockMode(<doubleQuotes46>p<doubleQuotes46>, LockMode.READ).list();<newline46mondego>"
"1275splitHere46","1787654splitHere46","ThreadPoolExecutor"
"1276splitHere46","1787654splitHere46",".awaitTermination()"
"1277splitHere46","1787773splitHere46","server = HttpServer.create(address, 128);<newline46mondego>"
"1278splitHere46","1788021splitHere46","String s21 = s2.toString();<newline46mondego>"
"1279splitHere46","1788021splitHere46","toString()"
"1280splitHere46","1788021splitHere46","char[]"
"1281splitHere46","1788021splitHere46","String s21 = new String(s2);<newline46mondego>"
"1282splitHere46","1788557splitHere46","JTable"
"1283splitHere46","1788906splitHere46","--x - x--"
"1284splitHere46","1788906splitHere46","x"
"1285splitHere46","1788906splitHere46","-="
"1286splitHere46","1788906splitHere46","x"
"1287splitHere46","1788906splitHere46","tmp = x // copy the value of x<newline46mondego>x = tmp - (--x - x--) // complicated way to say x = x<newline46mondego>"
"1288splitHere46","1788906splitHere46","tmp = (--x - x--) // first evaluate RHS, from left to right, which means x -= 2.<newline46mondego>x = x - tmp // substract 0 from x<newline46mondego>"
"1289splitHere46","1788906splitHere46","+---- (-=) ----+<newline46mondego>        v     -=       v<newline46mondego>        x        +--- (-) ----+<newline46mondego>                 v            v<newline46mondego>              PREDEC x    POSTDEC x<newline46mondego>"
"1290splitHere46","1788906splitHere46","x"
"1291splitHere46","1788906splitHere46","x"
"1292splitHere46","1788906splitHere46","x-x"
"1293splitHere46","1788906splitHere46","0"
"1294splitHere46","1788906splitHere46","--x-x"
"1295splitHere46","1788906splitHere46","0"
"1296splitHere46","1788906splitHere46","--x, x-x"
"1297splitHere46","1788906splitHere46","x-x--"
"1298splitHere46","1788906splitHere46","0"
"1299splitHere46","1788906splitHere46","a = --y - x--"
"1300splitHere46","1788906splitHere46","0"
"1301splitHere46","1788906splitHere46","--x - x--"
"1302splitHere46","1788906splitHere46","0"
"1303splitHere46","1788906splitHere46","x"
"1304splitHere46","1788906splitHere46","-="
"1305splitHere46","1788906splitHere46","-="
"1306splitHere46","1788906splitHere46","a+b"
"1307splitHere46","1788906splitHere46","a"
"1308splitHere46","1788906splitHere46","+=b"
"1309splitHere46","1788906splitHere46","#include <stdio.h><newline46mondego><newline46mondego>int main() {<newline46mondego>		int x = 8;<newline46mondego>		x -= --x - x--;<newline46mondego>		printf(<doubleQuotes46>x=%d\n<doubleQuotes46>, x);<newline46mondego>}<newline46mondego>"
"1310splitHere46","1788906splitHere46",".loc 1 4 0<newline46mondego>    movl    $8, -4(%rbp)    ; x = 8<newline46mondego>    .loc 1 5 0<newline46mondego>    subl    $1, -4(%rbp)    ; x--<newline46mondego>    movl    $0, %eax        ; tmp = 0<newline46mondego>    subl    %eax, -4(%rbp)  ; x -= tmp<newline46mondego>    subl    $1, -4(%rbp)    ; x--<newline46mondego>    .loc 1 6 0<newline46mondego>    movl    -4(%rbp), %esi  ; push `x` into the place where printf() expects it<newline46mondego>"
"1311splitHere46","1788906splitHere46","movl"
"1312splitHere46","1788906splitHere46","x"
"1313splitHere46","1788906splitHere46","8"
"1314splitHere46","1788906splitHere46","-4(%rbp)"
"1315splitHere46","1788906splitHere46","x"
"1316splitHere46","1788906splitHere46","x-x"
"1317splitHere46","1788906splitHere46","0"
"1318splitHere46","1788906splitHere46","--"
"1319splitHere46","1788906splitHere46","6"
"1320splitHere46","1788906splitHere46","x"
"1321splitHere46","1788949splitHere46","public static String fromStandartToExponent(String v){<newline46mondego>	return String.format(<doubleQuotes46>%e<doubleQuotes46>,Double.parseDouble(v));<newline46mondego>}<newline46mondego>"
"1322splitHere46","1788949splitHere46","java.util.Formatter"
"1323splitHere46","1788962splitHere46","addMethod"
"1324splitHere46","1789100splitHere46","RSAEngine"
"1325splitHere46","1789100splitHere46","AsymmetricBlockCipher"
"1326splitHere46","1789100splitHere46","PKCS1"
"1327splitHere46","1789100splitHere46","OAEP"
"1328splitHere46","1789177splitHere46","outer:<newline46mondego>  for(..)<newline46mondego>    for(..)<newline46mondego>      for(..){<newline46mondego>        break outer;  //this will break out from all three loops<newline46mondego>      }<newline46mondego>"
"1329splitHere46","1789228splitHere46","cmd.exe"
"1330splitHere46","1789228splitHere46","ProcessBuilder"
"1331splitHere46","1789378splitHere46","HttpSession session = request.getSession(false); // Will not create a new session.<newline46mondego>if(session!=null)<newline46mondego>{<newline46mondego>   session.invalidate();<newline46mondego>}<newline46mondego>session = request.getSession(true);<newline46mondego>"
"1332splitHere46","1789568splitHere46","PageContext#setAttribute()"
"1333splitHere46","1789568splitHere46","getAttribute()"
"1334splitHere46","1789696splitHere46","Map#get(key)"
"1335splitHere46","1789696splitHere46","Object value = map.get(myCode);<newline46mondego>"
"1336splitHere46","1789696splitHere46","Object#toString()"
"1337splitHere46","1789696splitHere46","java.lang.String"
"1338splitHere46","1789696splitHere46","s"
"1339splitHere46","1789696splitHere46","java.lang.string"
"1340splitHere46","1789696splitHere46","Object#toString()"
"1341splitHere46","1789696splitHere46","System.out.println()"
"1342splitHere46","1789696splitHere46","toString()"
"1343splitHere46","1789696splitHere46","@Override<newline46mondego>public String toString() {<newline46mondego>    return <doubleQuotes46>This is Object X with a property value <doubleQuotes46> + value;<newline46mondego>}<newline46mondego>"
"1344splitHere46","1789765splitHere46","struts.locale=en_US<newline46mondego>struts.i18n.encoding=UTF-8<newline46mondego>"
"1345splitHere46","1789864splitHere46","class ThingThatUsesStreamCopier {<newline46mondego><newline46mondego>    // our copier instance. set in constructor, but might equally use<newline46mondego>    // a setter for this:<newline46mondego>    private StreamCopier copier;<newline46mondego><newline46mondego>    public ThingThatUsesStreamCopier(StreamCopier copier) {<newline46mondego>        this.copier = copier;<newline46mondego>    }<newline46mondego><newline46mondego>    public void makeCopy(Stream in, Stream out) {<newline46mondego>        // probably something a little less trivial...<newline46mondego>        copier.copy(in, out);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1346splitHere46","1789864splitHere46","ThingThatUsesStreamCopier"
"1347splitHere46","1789864splitHere46","StreamCopier"
"1348splitHere46","1789864splitHere46","ThingThatUsesStreamCopier"
"1349splitHere46","1789864splitHere46","StreamCopier"
"1350splitHere46","1790038splitHere46","javac -g:none<newline46mondego>"
"1351splitHere46","1790338splitHere46","// Create a File object on the root of the directory containing the class file<newline46mondego>File file = new File(<doubleQuotes46>c:\\myclasses\\<doubleQuotes46>);<newline46mondego><newline46mondego>try {<newline46mondego>    // Convert File to a URL<newline46mondego>    URL url = file.toURL();          // file:/c:/myclasses/<newline46mondego>    URL[] urls = new URL[]{url};<newline46mondego><newline46mondego>    // Create a new class loader with the directory<newline46mondego>    ClassLoader cl = new URLClassLoader(urls);<newline46mondego><newline46mondego>    // Load in the class; MyClass.class should be located in<newline46mondego>    // the directory file:/c:/myclasses/com/mycompany<newline46mondego>    Class cls = cl.loadClass(<doubleQuotes46>com.mycompany.MyClass<doubleQuotes46>);<newline46mondego>} catch (MalformedURLException e) {<newline46mondego>} catch (ClassNotFoundException e) {<newline46mondego>}<newline46mondego>"
"1352splitHere46","1790338splitHere46","Object object = cls.newInstance();<newline46mondego>cls.getMethod(<doubleQuotes46>print<doubleQuotes46>).invoke(object);<newline46mondego>"
"1353splitHere46","1790366splitHere46","lblTitle = new JLabel(<doubleQuotes46>Bournemouth University Address Book<doubleQuotes46>);<newline46mondego>lblTitle.setBounds(100, 0, 400, 20);<newline46mondego>panel.add(lblTitle);<newline46mondego>"
"1354splitHere46","1790541splitHere46","value"
"1355splitHere46","1790541splitHere46","UIInput"
"1356splitHere46","1790541splitHere46","<h:selectManyCheckbox value=<doubleQuotes46>#{bean.selectedItems}<doubleQuotes46>><newline46mondego>    <f:selectItems value=<doubleQuotes46>#{bean.selectItems}<doubleQuotes46> /><newline46mondego></h:selectManyCheckbox><newline46mondego>"
"1357splitHere46","1790541splitHere46","private List<String> selectedItems; // +getter +setter.<newline46mondego>private List<SelectItem> selectItems; // +getter.<newline46mondego><newline46mondego>public Bean() {<newline46mondego>    // Preset the selected items.<newline46mondego>    this.selectedItems = new ArrayList<String>();<newline46mondego>    this.selectedItems.add(<doubleQuotes46>valueToBePreselected1<doubleQuotes46>);<newline46mondego>    this.selectedItems.add(<doubleQuotes46>valueToBePreselected2<doubleQuotes46>);<newline46mondego>    // Those values should be exactly the same as one of the SelectItem values.<newline46mondego>    // I.e. the Object#equals() must return true for any of them.<newline46mondego>}<newline46mondego>"
"1358splitHere46","1790543splitHere46","editor.setContentType( <doubleQuotes46>text/html<doubleQuotes46> );    <newline46mondego>editor.setText( <doubleQuotes46><html><body>Hello, world</body></html><doubleQuotes46> );<newline46mondego>"
"1359splitHere46","1790582splitHere46","bin/shutdown.sh<newline46mondego>rm webapps/ROOT.war<newline46mondego>rm -rf webapps/ROOT<newline46mondego>cp ~/ROOT.war webapps<newline46mondego>bin/startup.sh<newline46mondego>"
"1360splitHere46","1790715splitHere46","List<Float>"
"1361splitHere46","1790715splitHere46","List<? extends Number>"
"1362splitHere46","1790715splitHere46","Long"
"1363splitHere46","1790973splitHere46","s"
"1364splitHere46","1790973splitHere46","s.getBytes"
"1365splitHere46","1790973splitHere46","byte buf[] = null.getBytes();<newline46mondego>"
"1366splitHere46","1790973splitHere46","String s = data[i-2][j];<newline46mondego>byte buf[];<newline46mondego>if (s != null) <newline46mondego>    buf = s.getBytes();<newline46mondego>else<newline46mondego>   buf = //What do you want the default behavior to be? maybe <doubleQuotes46><doubleQuotes46>.getBytes()?<newline46mondego>"
"1367splitHere46","1790996splitHere46","javac -source 1.6<newline46mondego>"
"1368splitHere46","1791030splitHere46","int length = ... // file length in number of samples<newline46mondego>FileInputStream fis = new FileInputStream(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego><newline46mondego>AudioInputStream ais = new AudioInputStream(<newline46mondego>    fis, new AudioFormat(AudioFormat.Encoding.ULAW, 8000, 8, 1, 1, 8000, false), length);<newline46mondego>"
"1369splitHere46","1791219splitHere46","File newFile = new File(outputDirectory + fileName + <doubleQuotes46>.xml<doubleQuotes46>);<newline46mondego>"
"1370splitHere46","1791590splitHere46","httpConnectionManager.setParams( params )"
"1371splitHere46","1791590splitHere46","params.setDefaultMaxConnectionsPerHost()"
"1372splitHere46","1791590splitHere46","httpConnectionManager.setParams"
"1373splitHere46","1791678splitHere46","List<String>"
"1374splitHere46","1791678splitHere46","List<Tag>"
"1375splitHere46","1791678splitHere46","xstream.alias(<doubleQuotes46>tag<doubleQuotes46>, org.goring.Tag.class);<newline46mondego>"
"1376splitHere46","1791795splitHere46","@@SPID"
"1377splitHere46","1791795splitHere46","sys.dm_exec_sessions"
"1378splitHere46","1791795splitHere46","sys.dm_exec_connections"
"1379splitHere46","1791795splitHere46","program_name"
"1380splitHere46","1791795splitHere46","host_process_id"
"1381splitHere46","1791795splitHere46","client_net_address"
"1382splitHere46","1791795splitHere46","sys.dm_exec_requests"
"1383splitHere46","1791795splitHere46","session_id"
"1384splitHere46","1791795splitHere46","sys.dm_exec_query_plan"
"1385splitHere46","1791795splitHere46","plan_handle"
"1386splitHere46","1792032splitHere46","java.util.concurrent.ConcurrentHashMap"
"1387splitHere46","1792041splitHere46","String.valueOf(value);<newline46mondego>"
"1388splitHere46","1792112splitHere46","java.util.Hashtable"
"1389splitHere46","1792112splitHere46","java.util.HashMap"
"1390splitHere46","1792124splitHere46","http://localhost.com/context/register/mypage.htm"
"1391splitHere46","1792124splitHere46","<servlet-mapping><newline46mondego>  <servlet-name>Faces Servlet</servlet-name><newline46mondego>  <url-pattern>/faces/*</url-pattern><newline46mondego></servlet-mapping><newline46mondego><servlet-mapping><newline46mondego>  <servlet-name>Faces Servlet</servlet-name><newline46mondego>  <url-pattern>*.faces</url-pattern><newline46mondego></servlet-mapping><newline46mondego><servlet-mapping><newline46mondego>  <servlet-name>Faces Servlet</servlet-name><newline46mondego>  <url-pattern>*.jsf</url-pattern><newline46mondego></servlet-mapping><newline46mondego><servlet-mapping><newline46mondego>  <servlet-name>Faces Servlet</servlet-name><newline46mondego>  <url-pattern>*.htm</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"1392splitHere46","1792153splitHere46","ArrayList"
"1393splitHere46","1792153splitHere46","Vector"
"1394splitHere46","1792153splitHere46","Vector"
"1395splitHere46","1792686splitHere46","<junit printsummary=<doubleQuotes46>yes<doubleQuotes46> haltonfailure=<doubleQuotes46>yes<doubleQuotes46>><newline46mondego>    <classpath><newline46mondego>        <path refid=<doubleQuotes46>your.classpath.refid<doubleQuotes46> /><newline46mondego>        <fileset dir=<doubleQuotes46>${junit.dir}<doubleQuotes46>><newline46mondego>            <include name=<doubleQuotes46>**/junit.jar<doubleQuotes46> /><newline46mondego>        </fileset><newline46mondego>    </classpath><newline46mondego>    ...<newline46mondego></junit><newline46mondego>"
"1396splitHere46","1792794splitHere46","/var/tomcat/persist"
"1397splitHere46","1792794splitHere46","base.persist.dir"
"1398splitHere46","1792808splitHere46","compile"
"1399splitHere46","1792808splitHere46","<target name=<doubleQuotes46>compile<doubleQuotes46> depends=<doubleQuotes46>init<doubleQuotes46> description=<doubleQuotes46>compile the source code <doubleQuotes46> ><newline46mondego>  <javac srcdir=<doubleQuotes46>${src}<doubleQuotes46> destdir=<doubleQuotes46>${build}<doubleQuotes46>><newline46mondego>    <classpath><newline46mondego>      <fileset dir=<doubleQuotes46>lib<doubleQuotes46>><newline46mondego>        <include name=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego>      </fileset><newline46mondego>    </classpath><newline46mondego>  </javac><newline46mondego>  <javac srcdir=<doubleQuotes46>${tests}<doubleQuotes46> destdir=<doubleQuotes46>${build}<doubleQuotes46>><newline46mondego>    <classpath><newline46mondego>      <pathelement path=<doubleQuotes46>${build}<doubleQuotes46>/><newline46mondego>      <fileset dir=<doubleQuotes46>lib<doubleQuotes46>><newline46mondego>        <include name=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego>      </fileset><newline46mondego>    </classpath><newline46mondego>  </javac><newline46mondego></target><newline46mondego>"
"1400splitHere46","1792944splitHere46","b = getButtonByIndex(index);<newline46mondego>"
"1401splitHere46","1793017splitHere46","src/assembly/bin.xml"
"1402splitHere46","1793017splitHere46","<assembly><newline46mondego>  <id>bin</id><newline46mondego>  <formats><newline46mondego>    <format>tar.gz</format><newline46mondego>    <format>tar.bz2</format><newline46mondego>    <format>zip</format><newline46mondego>  </formats><newline46mondego>  <dependencySets><newline46mondego>    <dependencySet><newline46mondego>      <unpack>false</unpack><newline46mondego>      <scope>runtime</scope><newline46mondego>      <outputDirectory>lib</outputDirectory><newline46mondego>    </dependencySet><newline46mondego>  </dependencySets><newline46mondego>  <fileSets><newline46mondego>    <fileSet><newline46mondego>      <directory>src/main/command</directory><newline46mondego>      <outputDirectory>bin</outputDirectory><newline46mondego>      <includes><newline46mondego>        <include>*.sh</include><newline46mondego>        <include>*.bat</include><newline46mondego>      </includes><newline46mondego>    </fileSet><newline46mondego>    <fileSet><newline46mondego>      <directory>target</directory><newline46mondego>      <outputDirectory>lib</outputDirectory><newline46mondego>      <includes><newline46mondego>        <include>*.jar</include><newline46mondego>      </includes><newline46mondego>    </fileSet><newline46mondego>  </fileSets><newline46mondego></assembly><newline46mondego>"
"1403splitHere46","1793017splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-assembly-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>      <descriptors><newline46mondego>        <descriptor>src/assembly/bin.xml</descriptor><newline46mondego>      </descriptors><newline46mondego>    </configuration><newline46mondego>    <executions><newline46mondego>      <execution><newline46mondego>        <phase>package</phase><newline46mondego>        <goals><newline46mondego>          <goal>single</goal><newline46mondego>        </goals><newline46mondego>      </execution><newline46mondego>    </executions><newline46mondego>  </plugin><newline46mondego>"
"1404splitHere46","1793017splitHere46","src/main/command"
"1405splitHere46","1793017splitHere46","bin"
"1406splitHere46","1793017splitHere46","lib"
"1407splitHere46","1793112splitHere46","mkdir -p helloservice/endpoint/<newline46mondego>"
"1408splitHere46","1793112splitHere46","package helloservice.endpoint;<newline46mondego><newline46mondego>import javax.jws.WebService;<newline46mondego><newline46mondego>@WebService()<newline46mondego>public class Hello {<newline46mondego>  private String message = new String(<doubleQuotes46>Hello, <doubleQuotes46>);<newline46mondego><newline46mondego>  public void Hello() {}<newline46mondego><newline46mondego>  public String sayHello(String name) {<newline46mondego>    return message + name + <doubleQuotes46>.<doubleQuotes46>;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1409splitHere46","1793112splitHere46","package helloservice.endpoint;<newline46mondego>import javax.xml.ws.Endpoint;<newline46mondego><newline46mondego>public class Server {<newline46mondego><newline46mondego>    protected Server() throws Exception {<newline46mondego>        System.out.println(<doubleQuotes46>Starting Server<doubleQuotes46>);<newline46mondego>        Object implementor = new Hello();<newline46mondego>        String address = <doubleQuotes46>http://localhost:9000/SoapContext/SoapPort<doubleQuotes46>;<newline46mondego>        Endpoint.publish(address, implementor);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego>        new Server();<newline46mondego>        System.out.println(<doubleQuotes46>Server ready...<doubleQuotes46>);<newline46mondego><newline46mondego>        Thread.sleep(5 * 60 * 1000);<newline46mondego>        System.out.println(<doubleQuotes46>Server exiting<doubleQuotes46>);<newline46mondego>        System.exit(0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1410splitHere46","1793112splitHere46","mkdir build<newline46mondego>javac -d build helloservice/endpoint/*java<newline46mondego>$JAVA_HOME/wsgen -d build -s build -classpath .  helloservice.endpoint.Hello<newline46mondego>"
"1411splitHere46","1793112splitHere46","java -cp  build helloservice.endpoint.Server<newline46mondego>"
"1412splitHere46","1793211splitHere46","DriverManager#getConnection()"
"1413splitHere46","1793211splitHere46","DriverManager#getConnection()"
"1414splitHere46","1793211splitHere46","getConnection()"
"1415splitHere46","1793211splitHere46","close()"
"1416splitHere46","1793211splitHere46","Connection"
"1417splitHere46","1793211splitHere46","Statement"
"1418splitHere46","1793211splitHere46","ResultSet"
"1419splitHere46","1793211splitHere46","finally"
"1420splitHere46","1793211splitHere46","DriverManager#getConnection()"
"1421splitHere46","1793211splitHere46","Connection"
"1422splitHere46","1793211splitHere46","Connection"
"1423splitHere46","1793211splitHere46","close()"
"1424splitHere46","1793211splitHere46","Connection"
"1425splitHere46","1793248splitHere46","class Java::JavaUtil::Arrays<newline46mondego>  boolean_array_class = [false].to_java(:boolean).java_class<newline46mondego>  java_alias :boolean_equals, :equals, [boolean_array_class, boolean_array_class]<newline46mondego>end<newline46mondego><newline46mondego>a1 = [false, true]<newline46mondego>Java::JavaUtil::Arrays.boolean_equals a1, a1<newline46mondego># => TypeError: for method Arrays.equals expected [class [Z, class [Z]; got: [org.jruby.RubyArray,org.jruby.RubyArray]; error: argument type mismatch<newline46mondego>Java::JavaUtil::Arrays.boolean_equals a1.to_java(:boolean), a1.to_java(:boolean)<newline46mondego># => true<newline46mondego>a2 = [true, false]<newline46mondego>Java::JavaUtil::Arrays.boolean_equals a1.to_java(:boolean), a2.to_java(:boolean)<newline46mondego># => false<newline46mondego>"
"1426splitHere46","1793444splitHere46","Connection connection = null;<newline46mondego><newline46mondego>try {<newline46mondego>   // Load the JDBC driver<newline46mondego>   String driverName = <doubleQuotes46>oracle.jdbc.driver.OracleDriver<doubleQuotes46>;<newline46mondego>   Class.forName(driverName);<newline46mondego><newline46mondego>   // Create a connection to the database<newline46mondego>   String serverName = <doubleQuotes46>127.0.0.1<doubleQuotes46>;<newline46mondego>   String portNumber = <doubleQuotes46>1521<doubleQuotes46>;<newline46mondego>   String sid = <doubleQuotes46>mydatabase<doubleQuotes46>;<newline46mondego>   String url = <doubleQuotes46>jdbc:oracle:thin:@<doubleQuotes46> + serverName + <doubleQuotes46>:<doubleQuotes46> + portNumber + <doubleQuotes46>:<doubleQuotes46> + sid;<newline46mondego>   String username = <doubleQuotes46>username<doubleQuotes46>;<newline46mondego>   String password = <doubleQuotes46>password<doubleQuotes46>;<newline46mondego>   connection = DriverManager.getConnection(url, username, password);<newline46mondego>} catch (ClassNotFoundException e) {<newline46mondego>   // Could not find the database driver<newline46mondego>} catch (SQLException e) {<newline46mondego>   // Could not connect to the database<newline46mondego>}<newline46mondego>"
"1427splitHere46","1793646splitHere46","BigUglyResource"
"1428splitHere46","1793646splitHere46","private static BigUglyResource bur;<newline46mondego><newline46mondego>@BeforeClass<newline46mondego>public static void before(){<newline46mondego>   bur=new BigUglyResource();<newline46mondego>}<newline46mondego>"
"1429splitHere46","1793994splitHere46","selenium.`type`(<doubleQuotes46>ab<doubleQuotes46>,<doubleQuotes46>abc<doubleQuotes46>)<newline46mondego>"
"1430splitHere46","1794091splitHere46","File.toURI"
"1431splitHere46","1794091splitHere46","grant {<newline46mondego>    permission java.io.FilePermission <doubleQuotes46>C:\\class\\-<doubleQuotes46>, <doubleQuotes46>read<doubleQuotes46>;<newline46mondego>    permission java.io.FilePermission <doubleQuotes46>C:\\class<doubleQuotes46>, <doubleQuotes46>read<doubleQuotes46>;<newline46mondego>    permission java.lang.RuntimePermission <doubleQuotes46>createClassLoader<doubleQuotes46>;<newline46mondego>};<newline46mondego>"
"1432splitHere46","1794091splitHere46","URLClassLoader.newInstance"
"1433splitHere46","1794091splitHere46","createClassLoader"
"1434splitHere46","1794117splitHere46","SSLContext sctx1 = SSLContext.getInstance(<doubleQuotes46>SSLv3<doubleQuotes46>);<newline46mondego>        sctx1.init(new X509KeyManager[] { <newline46mondego>        		new MyKeyManager(<doubleQuotes46>/config/master.jks<doubleQuotes46>, <newline46mondego>        				<doubleQuotes46>changeme<doubleQuotes46>.toCharArray(), <doubleQuotes46>site1.example.com<doubleQuotes46>) },<newline46mondego>                      null, null);<newline46mondego>        SSLServerSocketFactory ssf = <newline46mondego>        	(SSLServerSocketFactory) sctx1.getServerSocketFactory();<newline46mondego>		ServerSocket ss1 = ssf.createServerSocket(1234);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>        SSLContext sctx2 = SSLContext.getInstance(<doubleQuotes46>SSLv3<doubleQuotes46>);<newline46mondego>        sctx2.init(new X509KeyManager[] { <newline46mondego>        		new MyKeyManager(<doubleQuotes46>/config/master.jks<doubleQuotes46>, <newline46mondego>        				<doubleQuotes46>changeme<doubleQuotes46>.toCharArray(), <doubleQuotes46>site2.example.com<doubleQuotes46>) },<newline46mondego>                      null, null);<newline46mondego>        ssf = <newline46mondego>        	(SSLServerSocketFactory) sctx2.getServerSocketFactory();<newline46mondego>		ServerSocket ss2 = ssf.createServerSocket(5678);<newline46mondego>"
"1435splitHere46","1794117splitHere46","public static class MyKeyManager implements X509KeyManager {<newline46mondego>    private KeyStore keyStore;<newline46mondego>    private String alias;<newline46mondego>    private char[] password;<newline46mondego><newline46mondego>    MyKeyManager(String keyStoreFile, char[] password, String alias)<newline46mondego>        throws IOException, GeneralSecurityException<newline46mondego>    {<newline46mondego>        this.alias = alias;<newline46mondego>        this.password = password;<newline46mondego>        InputStream stream = new FileInputStream(keyStoreFile);<newline46mondego>        keyStore = KeyStore.getInstance(KeyStore.getDefaultType());<newline46mondego>        keyStore.load(stream, password);<newline46mondego>    }<newline46mondego><newline46mondego>    public PrivateKey getPrivateKey(String alias) {<newline46mondego>        try {<newline46mondego>			return (PrivateKey) keyStore.getKey(alias, password);<newline46mondego>		} catch (Exception e) {<newline46mondego>			return null;<newline46mondego>		}<newline46mondego>    }<newline46mondego><newline46mondego>    public X509Certificate[] getCertificateChain(String alias) {<newline46mondego>        try {<newline46mondego>            java.security.cert.Certificate[] certs = keyStore.getCertificateChain(alias);<newline46mondego>            if (certs == null || certs.length == 0)<newline46mondego>            	return null;<newline46mondego>            X509Certificate[] x509 = new X509Certificate[certs.length];<newline46mondego>            for (int i = 0; i < certs.length; i++)<newline46mondego>            	x509[i] = (X509Certificate)certs[i];<newline46mondego>			return x509;<newline46mondego>		} catch (Exception e) {<newline46mondego>			return null;<newline46mondego>		}          <newline46mondego>    }<newline46mondego><newline46mondego>    public String chooseServerAlias(String keyType, Principal[] issuers,<newline46mondego>                                    Socket socket) {<newline46mondego>        return alias;<newline46mondego>    }<newline46mondego><newline46mondego>    public String[] getClientAliases(String parm1, Principal[] parm2) {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>Method getClientAliases() not yet implemented.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public String chooseClientAlias(String keyTypes[], Principal[] issuers, Socket socket) {<newline46mondego>        throw new UnsupportedOperationException(<doubleQuotes46>Method chooseClientAlias() not yet implemented.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public String[] getServerAliases(String parm1, Principal[] parm2) {<newline46mondego>        return new String[] { alias };<newline46mondego>    }<newline46mondego><newline46mondego>    public String chooseServerAlias(String parm1, Principal[] parm2) {<newline46mondego>        return alias;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1436splitHere46","1794237splitHere46","/WEB-INF/lib"
"1437splitHere46","1794237splitHere46","/WEB-INF/lib"
"1438splitHere46","1794237splitHere46","/WEB-INF/lib"
"1439splitHere46","1794237splitHere46","/lib"
"1440splitHere46","1794237splitHere46","/lib"
"1441splitHere46","1794333splitHere46","else"
"1442splitHere46","1794333splitHere46","next()"
"1443splitHere46","1794333splitHere46","else<newline46mondego>{<newline46mondego>      System.out.println(<doubleQuotes46>You have entered an invalid input. Try again.<doubleQuotes46>);<newline46mondego>      in.next();<newline46mondego>}<newline46mondego>"
"1444splitHere46","1794341splitHere46","ServletContextListener"
"1445splitHere46","1794341splitHere46","contextInitialized()"
"1446splitHere46","1794341splitHere46","contextDestroyed()"
"1447splitHere46","1794341splitHere46","java.io.Serializable"
"1448splitHere46","1794341splitHere46","java.util.Properties"
"1449splitHere46","1794341splitHere46","ClassLoader#getResourceAsStream()"
"1450splitHere46","1794341splitHere46","InputStream"
"1451splitHere46","1794341splitHere46","WEB-INF"
"1452splitHere46","1794341splitHere46","ServletContext#getResourceAsStream()"
"1453splitHere46","1794398splitHere46","String getPropertySafely(String key) {<newline46mondego>   try {<newline46mondego>      return getProperty(key);<newline46mondego>   } catch (Exception e) {<newline46mondego>      return null;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1454splitHere46","1794416splitHere46","<context-param><newline46mondego>    <param-name>contextConfigLocation</param-name><newline46mondego>    <param-value>/WEB-INF/applicationContext.xml</param-value><newline46mondego></context-param><newline46mondego>"
"1455splitHere46","1794416splitHere46","<import resource=<doubleQuotes46>myapp-service.xml<doubleQuotes46>/><newline46mondego>"
"1456splitHere46","1794527splitHere46","public static JTextArea TXTAREA<newline46mondego><newline46mondego>void main_application(){<newline46mondego>    //set up app<newline46mondego>    ...<newline46mondego>    TXTAREA = new JTextArea()<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"1457splitHere46","1794527splitHere46","TXTAREA"
"1458splitHere46","1794770splitHere46","Runtime re = Runtime.getRuntime();<newline46mondego>BufferedReader output;  		<newline46mondego>try{ <newline46mondego>  cmd = re.exec(<doubleQuotes46>java -jar MyFile.jar<doubleQuotes46> + argument); <newline46mondego>  output =  new BufferedReader(new InputStreamReader(cmd.getInputStream()));<newline46mondego>} catch (IOException ioe){<newline46mondego>  ioe.printStackTrace();<newline46mondego>}<newline46mondego>String resultOutput = output.readLine();<newline46mondego>"
"1459splitHere46","1794870splitHere46","test2"
"1460splitHere46","1794870splitHere46","Circle"
"1461splitHere46","1794870splitHere46","test1"
"1462splitHere46","1794870splitHere46","Rectangle"
"1463splitHere46","1795003splitHere46","while( !input.isEmpty() )<newline46mondego>{<newline46mondego>    idCode = GetIdCode(input);<newline46mondego><newline46mondego>    // New lines below.<newline46mondego>    System.out.println (<doubleQuotes46>input = [<doubleQuotes46> + input + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    System.out.println (<doubleQuotes46>idCode = [<doubleQuotes46> + idCode + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>    int i1 = input.indexOf(idCode);<newline46mondego>    System.out.println (<doubleQuotes46>offst1 = [<doubleQuotes46> + i1 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>    int i2 = input.indexOf(<doubleQuotes46>(<doubleQuotes46>,i1);<newline46mondego>    System.out.println (<doubleQuotes46>offst2 = [<doubleQuotes46> + i2 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>    int i3 = input.indexOf(<doubleQuotes46>)<doubleQuotes46>,i1);<newline46mondego>    System.out.println (<doubleQuotes46>offst3 = [<doubleQuotes46> + i3 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>    String s1 = input.substring(i2+1,i3);<newline46mondego>    System.out.println (<doubleQuotes46>strng1 = [<doubleQuotes46> + s1 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>    float f1 = Float.parseFloat(s1);<newline46mondego>    System.out.println (<doubleQuotes46>float1 = [<doubleQuotes46> + f1 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    // New lines above.<newline46mondego><newline46mondego>    tot = tot + Float.parseFloat( input.substring( <newline46mondego>        input.indexOf( <doubleQuotes46>(<doubleQuotes46>, input.indexOf( idCode ) ) + 1, <newline46mondego>        input.indexOf( <doubleQuotes46>)<doubleQuotes46>, input.indexOf( idCode ) ) ) );<newline46mondego>"
"1464splitHere46","1795003splitHere46","println"
"1465splitHere46","1795003splitHere46","public class xx {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        String idCode = <doubleQuotes46>CT<doubleQuotes46>;<newline46mondego>        String input = <doubleQuotes46>fgdfgdg CT: (2.57)<doubleQuotes46>;<newline46mondego><newline46mondego>        System.out.println (<doubleQuotes46>input  = [<doubleQuotes46> + input + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>        System.out.println (<doubleQuotes46>idCode = [<doubleQuotes46> + idCode + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>        int i1 = input.indexOf(idCode);<newline46mondego>        System.out.println (<doubleQuotes46>offst1 = [<doubleQuotes46> + i1 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>        int i2 = input.indexOf(<doubleQuotes46>(<doubleQuotes46>,i1);<newline46mondego>        System.out.println (<doubleQuotes46>offst2 = [<doubleQuotes46> + i2 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>        int i3 = input.indexOf(<doubleQuotes46>)<doubleQuotes46>,i1);<newline46mondego>        System.out.println (<doubleQuotes46>offst3 = [<doubleQuotes46> + i3 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>        String s1 = input.substring(i2+1,i3);<newline46mondego>        System.out.println (<doubleQuotes46>strng1 = [<doubleQuotes46> + s1 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>        float f1 = Float.parseFloat(s1);<newline46mondego>        System.out.println (<doubleQuotes46>float1 = [<doubleQuotes46> + f1 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println (<doubleQuotes46>full   = [<doubleQuotes46> + Float.parseFloat( input.substring( <newline46mondego>            input.indexOf( <doubleQuotes46>(<doubleQuotes46>, input.indexOf( idCode ) ) + 1, <newline46mondego>            input.indexOf( <doubleQuotes46>)<doubleQuotes46>, input.indexOf( idCode ) ) )) + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1466splitHere46","1795003splitHere46","input  = [fgdfgdg CT: (2.57)]<newline46mondego>idCode = [CT]<newline46mondego>offst1 = [8]<newline46mondego>offst2 = [12]<newline46mondego>offst3 = [17]<newline46mondego>strng1 = [2.57]<newline46mondego>float1 = [2.57]<newline46mondego>full   = [2.57]<newline46mondego>"
"1467splitHere46","1795261splitHere46","File.separator"
"1468splitHere46","1795261splitHere46","/"
"1469splitHere46","1795323splitHere46","import org.apache.poi.xssf.usermodel.*;<newline46mondego>import org.apache.poi.ss.usermodel.*;<newline46mondego>import org.apache.poi.hssf.usermodel.*;<newline46mondego>import java.io.*;<newline46mondego><newline46mondego>public class SpreadSheet {<newline46mondego><newline46mondego>    /**<newline46mondego>     * Reads text from a file line by line<newline46mondego>     */<newline46mondego>    public void readFromFile(String filename) {<newline46mondego><newline46mondego>        BufferedReader bufferedReader = null;<newline46mondego>        HSSFWorkbook wb;<newline46mondego>        Sheet sheet;<newline46mondego>        Row row;<newline46mondego>        Cell aCell;<newline46mondego>        int s_row;<newline46mondego>        FileOutputStream fileOut = null;<newline46mondego><newline46mondego>        try {<newline46mondego><newline46mondego>            //Construct the BufferedReader object<newline46mondego>            bufferedReader = new BufferedReader(new FileReader(filename));<newline46mondego><newline46mondego>            String line = null;<newline46mondego><newline46mondego>            s_row = 0;<newline46mondego>            wb = new HSSFWorkbook();<newline46mondego>            sheet = wb.createSheet(<doubleQuotes46>new sheet<doubleQuotes46>);<newline46mondego>            row = sheet.createRow(0);<newline46mondego>            fileOut = new FileOutputStream(<doubleQuotes46>workbook.xls<doubleQuotes46>);<newline46mondego><newline46mondego>            while ((line = bufferedReader.readLine()) != null) <newline46mondego>            {        <newline46mondego>                    aCell = row.createCell(s_row++);<newline46mondego>                    aCell.setCellValue(line);<newline46mondego>            }<newline46mondego><newline46mondego>            // Do this once<newline46mondego>            wb.write(fileOut);<newline46mondego>        } catch (FileNotFoundException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        } catch (IOException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        } finally {<newline46mondego>            //Close the BufferedReader<newline46mondego>            try {<newline46mondego>                if (bufferedReader != null)<newline46mondego>                    bufferedReader.close();<newline46mondego>                if (fileOut != null)<newline46mondego>                    fileOut.close();<newline46mondego>            } catch (IOException ex) {<newline46mondego>                ex.printStackTrace();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args the command line arguments<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        new SpreadSheet().readFromFile(<doubleQuotes46>testinput.txt<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1470splitHere46","1795323splitHere46","1<newline46mondego>2<newline46mondego>3<newline46mondego>4<newline46mondego>5<newline46mondego>6<newline46mondego>7<newline46mondego>"
"1471splitHere46","1795604splitHere46","public static Comparator<Entry<Integer,?>> KeyComparator = new Comparator<Entry<Integer,?>>()<newline46mondego>  {<newline46mondego>     public int compare(Entry<Integer,?> o1, Entry<Integer,?> o2)<newline46mondego>       {<newline46mondego>         Integer key1 = o1.getKey();<newline46mondego>         Integer key2 = o2.getKey();<newline46mondego>         return key1.compareTo(key2);<newline46mondego>       }<newline46mondego>  }<newline46mondego>"
"1472splitHere46","1795604splitHere46","getKey()"
"1473splitHere46","1795604splitHere46","Integer"
"1474splitHere46","1795604splitHere46","<K>"
"1475splitHere46","1795620splitHere46","String.indexOf(substring) != -1<newline46mondego>"
"1476splitHere46","1795634splitHere46","void"
"1477splitHere46","1795634splitHere46","return"
"1478splitHere46","1795640splitHere46","class ClassA {<newline46mondego>    public ClassA() {<newline46mondego>    	UiApplication.getUiApplication().invokeLater(new Runnable() {<newline46mondego>    		public void run() {<newline46mondego>    			Dialog.inform(<doubleQuotes46>ClassA()<doubleQuotes46>);<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ClassB extends ClassA {<newline46mondego>    public ClassB() {<newline46mondego>    	super();<newline46mondego>    	UiApplication.getUiApplication().invokeLater(new Runnable() {<newline46mondego>    		public void run() {<newline46mondego>    			Dialog.inform(<doubleQuotes46>ClassB()<doubleQuotes46>);<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ClassC extends ClassA {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class ClassD extends ClassA {<newline46mondego>    public ClassD() {<newline46mondego>    	UiApplication.getUiApplication().invokeLater(new Runnable() {<newline46mondego>    		public void run() {<newline46mondego>    			Dialog.inform(<doubleQuotes46>ClassD()<doubleQuotes46>);<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1479splitHere46","1795640splitHere46","class Scr extends MainScreen {<newline46mondego><newline46mondego>    protected void makeMenu(Menu menu, int instance) {<newline46mondego>    	super.makeMenu(menu, instance);<newline46mondego><newline46mondego>    	menu.add(new MenuItem(<doubleQuotes46>class A<doubleQuotes46>, 0, 0) {<newline46mondego>    		public void run() {<newline46mondego>    			ClassA a = new ClassA();<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    	menu.add(new MenuItem(<doubleQuotes46>class B<doubleQuotes46>, 0, 0) {<newline46mondego>    		public void run() {<newline46mondego>    			ClassB b = new ClassB();<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    	menu.add(new MenuItem(<doubleQuotes46>class C<doubleQuotes46>, 0, 0) {<newline46mondego>    		public void run() {<newline46mondego>    			ClassC c = new ClassC();<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    	menu.add(new MenuItem(<doubleQuotes46>class D<doubleQuotes46>, 0, 0) {<newline46mondego>    		public void run() {<newline46mondego>    			ClassD d = new ClassD();<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1480splitHere46","1795866splitHere46","PreparedStatement stm = con.prepareStatement(<doubleQuotes46>SELECT A.* FROM A WHERE (((A.Name) LIKE ?))<doubleQuotes46>);<newline46mondego>stm.setString(1,<doubleQuotes46>%like text%<doubleQuotes46>);<newline46mondego>"
"1481splitHere46","1795872splitHere46","if (str != null && !str.isEmpty()) {<newline46mondego>  doSomethingWith(str.charAt(0));<newline46mondego>}<newline46mondego>"
"1482splitHere46","1795872splitHere46","if (str == null || str.isEmpty()) {<newline46mondego>  complainAboutUnusableString();<newline46mondego>} else {<newline46mondego>  doSomethingWith(str.charAt(0));<newline46mondego>}<newline46mondego>"
"1483splitHere46","1795954splitHere46","myJTable.getModel().getValueAt(rowIndex, columnIndex);<newline46mondego>"
"1484splitHere46","1795995splitHere46","public void addStudentAction() {<newline46mondego>  AddStudent myAddStudentDialog = new AddStudent(this, true, this.management);<newline46mondego>  myAddStudentDialog.setVisible(true);<newline46mondego>  // now you enter a password on the dialog<newline46mondego>  if (this.management.getStudentsPasswort() == null) {<newline46mondego>    // There's a bug in AddStudent class<newline46mondego>  } else {<newline46mondego>    System.out.println(<doubleQuotes46>HipHipHooray<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1485splitHere46","1796283splitHere46","Thread.currentThread().getContextClassLoader().getResource(<doubleQuotes46>TEXT.TXT<doubleQuotes46>)<newline46mondego>"
"1486splitHere46","1796306splitHere46","for( i = 0; i < stringLength; i++ ) {<newline46mondego>    if( stringAt pos i starts with <doubleQuotes46>this<doubleQuotes46> )<newline46mondego>       found!<newline46mondego>    if( stringAt pos i starts with <doubleQuotes46>that<doubleQuotes46> )<newline46mondego>       found!<newline46mondego>}<newline46mondego>"
"1487splitHere46","1796306splitHere46","<doubleQuotes46>.*this.*|.*that.*<doubleQuotes46>"
"1488splitHere46","1796384splitHere46","if( upperBounds < lowerBounds || upperBounds > lowerBounds )<newline46mondego>"
"1489splitHere46","1796384splitHere46","int sec = s.compareTo(test[lowerBounds + middle]);<newline46mondego>"
"1490splitHere46","1796475splitHere46","<c:url>"
"1491splitHere46","1796475splitHere46","<a href=<doubleQuotes46><c:url value=<doubleQuotes46>page.jsp<doubleQuotes46> /><doubleQuotes46>>link</a><newline46mondego>"
"1492splitHere46","1796475splitHere46","jsessionid"
"1493splitHere46","1796475splitHere46","HttpServletResponse#encodeURL()"
"1494splitHere46","1796475splitHere46","HttpServletResponse#encodeRedirectURL()"
"1495splitHere46","1796475splitHere46","response.sendRedirect(response.encodeRedirectURL(<doubleQuotes46>page.jsp<doubleQuotes46>));<newline46mondego>"
"1496splitHere46","1796687splitHere46","JTextPane"
"1497splitHere46","1796687splitHere46","replaceSelection()"
"1498splitHere46","1796687splitHere46","insertComponent()"
"1499splitHere46","1796687splitHere46","insertIcon()"
"1500splitHere46","1796687splitHere46","setLogicalStyle()"
"1501splitHere46","1796687splitHere46","setCharacterAttributes()"
"1502splitHere46","1796687splitHere46","setParagraphAttributes()"
"1503splitHere46","1796687splitHere46","JTextArea"
"1504splitHere46","1796687splitHere46","insert()"
"1505splitHere46","1796687splitHere46","append()"
"1506splitHere46","1796687splitHere46","replaceRange()"
"1507splitHere46","1796687splitHere46","JTextComponent"
"1508splitHere46","1796687splitHere46","replaceSelection()"
"1509splitHere46","1796687splitHere46","setText()"
"1510splitHere46","1796687splitHere46","print()"
"1511splitHere46","1796687splitHere46","getPrintable()"
"1512splitHere46","1796687splitHere46","UndoManager"
"1513splitHere46","1796687splitHere46","DefaultStyledDocument"
"1514splitHere46","1796687splitHere46","insert()"
"1515splitHere46","1796687splitHere46","setLogicalStyle()"
"1516splitHere46","1796687splitHere46","setCharacterAttributes()"
"1517splitHere46","1796687splitHere46","setParagraphAttributes()"
"1518splitHere46","1796687splitHere46","StyleContext"
"1519splitHere46","1796687splitHere46","addAttribute()"
"1520splitHere46","1796687splitHere46","addAttributes()"
"1521splitHere46","1796687splitHere46","removeAttribute()"
"1522splitHere46","1796687splitHere46","removeAttributes()"
"1523splitHere46","1796687splitHere46","reclaim()"
"1524splitHere46","1796687splitHere46","AbstractDocument"
"1525splitHere46","1796687splitHere46","render()"
"1526splitHere46","1796687splitHere46","remove()"
"1527splitHere46","1796687splitHere46","insertString()"
"1528splitHere46","1796687splitHere46","createPosition()"
"1529splitHere46","1796687splitHere46","PlainDocument"
"1530splitHere46","1796687splitHere46","insertString()"
"1531splitHere46","1796687splitHere46","HTMLDocument"
"1532splitHere46","1796687splitHere46","setParagraphAttributes()"
"1533splitHere46","1796807splitHere46","{1, 2, 3}"
"1534splitHere46","1796807splitHere46","int array[] = funkyBoolean ? new int[]{1,2,3} : new int[]{4,5,6};<newline46mondego>"
"1535splitHere46","1796807splitHere46","int[] array = ...<newline46mondego>"
"1536splitHere46","1796807splitHere46","{1, 2, 3}"
"1537splitHere46","1797084splitHere46","int id = 123;<newline46mondego>String questionText = <doubleQuotes46>some text<doubleQuotes46>;<newline46mondego>int[] nodes = new int[] { 123, 111 };<newline46mondego><newline46mondego>JSONObject question = new JSONObject();<newline46mondego>question.put(<doubleQuotes46>:id<doubleQuotes46>, id);<newline46mondego>question.put(<doubleQuotes46>:question text<doubleQuotes46>, questionText);<newline46mondego>question.put(<doubleQuotes46>:nodes<doubleQuotes46>, nodes);<newline46mondego>JSONObject json = new JSONObject();<newline46mondego>json.put(<doubleQuotes46>:question<doubleQuotes46>, question);<newline46mondego><newline46mondego>String jsonString = json.toString();<newline46mondego>"
"1538splitHere46","1797493splitHere46","// Width and height of rectangular region around mouse<newline46mondego>// pointer to use for hit detection on lines<newline46mondego>private static final int HIT_BOX_SIZE = 2;<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public void mousePressed(MouseEvent e) {<newline46mondego>    int x = e.getX();<newline46mondego>    int y = e.getY();<newline46mondego><newline46mondego>    Line2D clickedLine = getClickedLine(x, y);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego>* Returns the first line in the collection of lines that<newline46mondego>* is close enough to where the user clicked, or null if<newline46mondego>* no such line exists<newline46mondego>*<newline46mondego>*/<newline46mondego><newline46mondego>public Line2D getClickedLine(int x, int y) {<newline46mondego>int boxX = x - HIT_BOX_SIZE / 2;<newline46mondego>int boxY = y - HIT_BOX_SIZE / 2;<newline46mondego><newline46mondego>int width = HIT_BOX_SIZE;<newline46mondego>int height = HIT_BOX_SIZE;<newline46mondego><newline46mondego>for (Line2D line : getLines()) {<newline46mondego>	if (line.intersects(boxX, boxY, width, height) {<newline46mondego>		return line;<newline46mondego>	}		<newline46mondego>}<newline46mondego>return null;<newline46mondego>"
"1539splitHere46","1797558splitHere46","public class LabelSyncer implements ListSelectionListener {<newline46mondego><newline46mondego>    private JLabel toSync;<newline46mondego>    private int columnIndex;<newline46mondego><newline46mondego>    public LabelSyncer(JLabel toSync, int columnIndex) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void valueChanged(ListSelectionEvent e) {<newline46mondego>    	JTable table = (JTable) e.getSource();<newline46mondego>    	int row = table.getSelectedRow();<newline46mondego>    	toSync.setText(table.getModel().getValueAt(row, columnIndex).toString());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1540splitHere46","1797558splitHere46","table.getSelectionModel().addListSelectionListener(new LabelSyncer(label, columnIndex));<newline46mondego>"
"1541splitHere46","1797595splitHere46","string s = <doubleQuotes46>\u0159<doubleQuotes46>;  // Should be your character<newline46mondego>"
"1542splitHere46","1797595splitHere46","bf = BaseFont.CreateFont(...);<newline46mondego>font = new Font(bf, 12);<newline46mondego>document.Add(new Paragraph(s, font);<newline46mondego>"
"1543splitHere46","1797596splitHere46","Collections.emptyList()"
"1544splitHere46","1797596splitHere46","new ArrayList()"
"1545splitHere46","1797596splitHere46","addAll()"
"1546splitHere46","1798247splitHere46","double sum=0;<newline46mondego><newline46mondego>for(String str : w.split(<doubleQuotes46> <doubleQuotes46>)) {<newline46mondego>    sum += Integer.parseInt(str);<newline46mondego>}<newline46mondego><newline46mondego>return sum / w.split(<doubleQuotes46> <doubleQuotes46>).length;<newline46mondego>"
"1547splitHere46","1798527splitHere46","Gson#fromJson()"
"1548splitHere46","1798599splitHere46","mouseMotionListener"
"1549splitHere46","1798599splitHere46","mousePressed"
"1550splitHere46","1798599splitHere46","mousePressed"
"1551splitHere46","1798718splitHere46","Collection<Collection<Object>> multiDimensional = <newline46mondego>                     new ArrayList<Collection<Object>>();<newline46mondego>"
"1552splitHere46","1798739splitHere46","Image theImage = ...<newline46mondego>Image scaled = theImage.getScaledInstance(32, -1, Image.SCALE_FAST);<newline46mondego>"
"1553splitHere46","1798943splitHere46","using System;<newline46mondego>using System.IO;<newline46mondego>using org.objectweb.asm;<newline46mondego><newline46mondego>namespace test.helloWorld<newline46mondego>{<newline46mondego>    public class helloDump<newline46mondego>    {<newline46mondego><newline46mondego>        public static byte[] dump ()<newline46mondego>        {<newline46mondego><newline46mondego>            ClassWriter cw = new ClassWriter(0);<newline46mondego>            MethodVisitor mv;<newline46mondego><newline46mondego>            cw.visit(Opcodes.__Fields.V1_6, Opcodes.__Fields.ACC_PUBLIC + Opcodes.__Fields.ACC_SUPER, <doubleQuotes46>hello<doubleQuotes46>, null, <doubleQuotes46>java/lang/Object<doubleQuotes46>, null);<newline46mondego><newline46mondego>            mv = cw.visitMethod(Opcodes.__Fields.ACC_PUBLIC, <doubleQuotes46><init><doubleQuotes46>, <doubleQuotes46>()V<doubleQuotes46>, null, null);<newline46mondego>            mv.visitCode();<newline46mondego>            mv.visitVarInsn(Opcodes.__Fields.ALOAD, 0);<newline46mondego>            mv.visitMethodInsn(Opcodes.__Fields.INVOKESPECIAL, <doubleQuotes46>java/lang/Object<doubleQuotes46>, <doubleQuotes46><init><doubleQuotes46>, <doubleQuotes46>()V<doubleQuotes46>);<newline46mondego>            mv.visitInsn(Opcodes.__Fields.RETURN);<newline46mondego>            mv.visitMaxs(1, 1);<newline46mondego>            mv.visitEnd();<newline46mondego><newline46mondego>            mv = cw.visitMethod(Opcodes.__Fields.ACC_PUBLIC + Opcodes.__Fields.ACC_STATIC, <doubleQuotes46>main<doubleQuotes46>, <doubleQuotes46>([Ljava/lang/String;)V<doubleQuotes46>, null, null);<newline46mondego>            mv.visitCode();<newline46mondego>            mv.visitFieldInsn(Opcodes.__Fields.GETSTATIC, <doubleQuotes46>java/lang/System<doubleQuotes46>, <doubleQuotes46>out<doubleQuotes46>, <doubleQuotes46>Ljava/io/PrintStream;<doubleQuotes46>);<newline46mondego>            mv.visitLdcInsn(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>            mv.visitMethodInsn(Opcodes.__Fields.INVOKEVIRTUAL, <doubleQuotes46>java/io/PrintStream<doubleQuotes46>, <doubleQuotes46>println<doubleQuotes46>, <doubleQuotes46>(Ljava/lang/String;)V<doubleQuotes46>);<newline46mondego>            mv.visitInsn(Opcodes.__Fields.RETURN);<newline46mondego>            mv.visitMaxs(2, 1);<newline46mondego>            mv.visitEnd();<newline46mondego><newline46mondego>            cw.visitEnd();<newline46mondego><newline46mondego>            return cw.toByteArray();<newline46mondego>        }<newline46mondego><newline46mondego>        public static void Main(string[] args)<newline46mondego>        {<newline46mondego>            FileStream helloWorldFile = new FileStream(<doubleQuotes46>hello.class<doubleQuotes46>, FileMode.Create);<newline46mondego>            byte[] helloWorldClass = dump();<newline46mondego>            helloWorldFile.Seek(0, SeekOrigin.Begin);<newline46mondego>            helloWorldFile.Write(helloWorldClass, 0, helloWorldClass.Length);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1554splitHere46","1798943splitHere46","$ ikvmc -out:org.objectweb.asm.dll -target:library -version:3.2.0.0 asm-3.2.jar<newline46mondego>$ mcs -r:org.objectweb.asm.dll  hello.cs<newline46mondego>$ mono hello.exe<newline46mondego>$ ls hello.class<newline46mondego>$ java hello<newline46mondego>"
"1555splitHere46","1799244splitHere46","sumOfSquares = mapReduce(myBigCollection, <newline46mondego>                         { Double x => x * x }, <newline46mondego>                         { Double x, Double y => x + y });<newline46mondego>"
"1556splitHere46","1799244splitHere46","public static <T,throws E extends Exception><newline46mondego>T withLock(Lock lock, {=>T throws E} block) throws E {<newline46mondego>    lock.lock();<newline46mondego>    try {<newline46mondego>        return block.invoke();<newline46mondego>    } finally {<newline46mondego>        lock.unlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1557splitHere46","1799244splitHere46","withLock(lock, {=><newline46mondego>    System.out.println(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>});<newline46mondego>"
"1558splitHere46","1799244splitHere46","withLock(lock) {<newline46mondego>    System.out.println(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1559splitHere46","1799244splitHere46","Double sumOfSquares = mapReduce(myBigCollection,<newline46mondego>    UnaryFunction<Double>(Double x) { return x*x; },<newline46mondego>    BinaryFunction<Double, Double>(Double x, Double y) { return x+y; });<newline46mondego>"
"1560splitHere46","1799360splitHere46","ApplicationContext"
"1561splitHere46","1799360splitHere46","PortletApplicationContextUtils.getRequiredWebApplicationContext(portletContext)<newline46mondego>"
"1562splitHere46","1799441splitHere46","e"
"1563splitHere46","1799441splitHere46","Exception"
"1564splitHere46","1799441splitHere46","e"
"1565splitHere46","1799441splitHere46","InvalidResourceException"
"1566splitHere46","1799441splitHere46","ResourceException"
"1567splitHere46","1799441splitHere46","e"
"1568splitHere46","1799441splitHere46","Exception"
"1569splitHere46","1799448splitHere46","dependency:tree"
"1570splitHere46","1799452splitHere46","getResource()"
"1571splitHere46","1799452splitHere46","Java Build Path"
"1572splitHere46","1799452splitHere46","Libraries"
"1573splitHere46","1799452splitHere46","Add Class Folder"
"1574splitHere46","1799476splitHere46","UTF-8"
"1575splitHere46","1799476splitHere46","System.out.println(<doubleQuotes46>\u0905\u092E\u0940\u0924\u093E\u092A<doubleQuotes46>);<newline46mondego>"
"1576splitHere46","1799476splitHere46","UTF-8"
"1577splitHere46","1799476splitHere46","UTF-8"
"1578splitHere46","1799476splitHere46","UTF-8"
"1579splitHere46","1799476splitHere46","ISO-8859-1"
"1580splitHere46","1799476splitHere46","cp1252"
"1581splitHere46","1799476splitHere46","OutputStream"
"1582splitHere46","1799476splitHere46","OutputStreamWriter"
"1583splitHere46","1799476splitHere46","UTF-8"
"1584splitHere46","1799946splitHere46","RuntimeException"
"1585splitHere46","1799946splitHere46","<error-page>"
"1586splitHere46","1799946splitHere46","Throwable"
"1587splitHere46","1800073splitHere46","class A {<newline46mondego>    B b = new B(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>}<newline46mondego>class B {<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>$javac A.java <newline46mondego><newline46mondego>A.java:2: cannot find symbol<newline46mondego>symbol  : constructor B(java.lang.String)<newline46mondego>location: class B<newline46mondego>    B b = new B(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>          ^<newline46mondego>1 error<newline46mondego>"
"1588splitHere46","1800088splitHere46","public void widgetSelected(SelectionEvent event) {<newline46mondego>    tip.setVisible(event.detail != SWT.NONE);<newline46mondego>}<newline46mondego>"
"1589splitHere46","1800222splitHere46","/WEB-INF/freemarker"
"1590splitHere46","1800222splitHere46","WebApplicationContext"
"1591splitHere46","1800222splitHere46","DispatcherServlet"
"1592splitHere46","1800222splitHere46","configuration"
"1593splitHere46","1800222splitHere46","ViewResolver"
"1594splitHere46","1800222splitHere46","IOException"
"1595splitHere46","1800260splitHere46","import java.text.SimpleDateFormat;<newline46mondego>import java.text.ParseException;<newline46mondego><newline46mondego>class Test {<newline46mondego>    public static void main( String [] args ) throws ParseException  {<newline46mondego><newline46mondego>        SimpleDateFormat in  = new SimpleDateFormat(<doubleQuotes46>MM/dd<doubleQuotes46>);<newline46mondego>        SimpleDateFormat out = new SimpleDateFormat(<doubleQuotes46>MMMM, dd<doubleQuotes46>);<newline46mondego><newline46mondego>        System.out.println( out.format( in.parse(<doubleQuotes46>07/08<doubleQuotes46>) ) );<newline46mondego><newline46mondego>        // Verbose <newline46mondego>        //String input = <doubleQuotes46>07/09<doubleQuotes46>;           <newline46mondego>        //Date  date = in.parse( input );  <newline46mondego>        //String output = out.format( date );<newline46mondego>        //System.out.println( output );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1596splitHere46","1800464splitHere46","std::less"
"1597splitHere46","1800464splitHere46","<"
"1598splitHere46","1800464splitHere46","=="
"1599splitHere46","1800571splitHere46","Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(<doubleQuotes46>c:\\Decrypted.txt<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"1600splitHere46","1800583splitHere46","new ThreadPoolExecutor(10, // core size<newline46mondego>    50, // max size<newline46mondego>    10*60, // idle timeout<newline46mondego>    TimeUnit.SECONDS,<newline46mondego>    new ArrayBlockingQueue<Runnable>(20)); // queue with a size<newline46mondego>"
"1601splitHere46","1800802splitHere46","reloadable=true"
"1602splitHere46","1800802splitHere46","Context"
"1603splitHere46","1800802splitHere46","true"
"1604splitHere46","1800802splitHere46","/WEB-INF/classes/"
"1605splitHere46","1800802splitHere46","/WEB-INF/lib"
"1606splitHere46","1800802splitHere46","false"
"1607splitHere46","1800978splitHere46","SwingUtilities.invokeLater()"
"1608splitHere46","1800978splitHere46","Listener implements MouseListener <newline46mondego>    +mouseClicked( event: MouseEvent ) <newline46mondego>        SwingUtilities.invokeLater( // returns immediately <newline46mondego>              someTask() <newline46mondego>        )<newline46mondego><newline46mondego>    -someTask()<newline46mondego>        // perform some long task.<newline46mondego>"
"1609splitHere46","1800978splitHere46","addListener( new Listener() )<newline46mondego> addListener( new Listener() )<newline46mondego> addListener( new Listener() )<newline46mondego> addListener( new ExecuteAtTheEnd() )<newline46mondego>"
"1610splitHere46","1800978splitHere46","ExecuteAtTheEnd"
"1611splitHere46","1800978splitHere46","Listener implements MouseListener <newline46mondego>    +mouseClicked( event: MouseEvent )<newline46mondego>        lockFlagCount++ <newline46mondego>        SwingUtilities.invokeLater( <newline46mondego>              someTask() <newline46mondego>        )<newline46mondego><newline46mondego>    -someTask()<newline46mondego>        // perform some long task.<newline46mondego>        lockFlag--<newline46mondego>"
"1612splitHere46","1800978splitHere46","ExecuteAtTheEndListener implements MouseListener <newline46mondego><newline46mondego>       + mouseClicked( event: MouseEvent ) <newline46mondego>        SwingUtilities.invokeLater( <newline46mondego>              executeAtTheEnd() <newline46mondego>        )<newline46mondego>       - executeAtTheEnd() <newline46mondego>            while( logFlagCount > 0 ) <newline46mondego>                wait()<newline46mondego><newline46mondego>             if( logFlagCount == 0 ) <newline46mondego>                 // continue with the task.<newline46mondego>"
"1613splitHere46","1801015splitHere46","public class property<newline46mondego>{<newline46mondego>    private String propertyname;<newline46mondego>    private String owner;<newline46mondego>    private double price;<newline46mondego>    private double rent;<newline46mondego><newline46mondego>    public String getPropertyName()<newline46mondego>    {<newline46mondego>    	return propertyname;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setPropertyName(string newName)<newline46mondego>    {<newline46mondego>    	propertyname = newName;<newline46mondego>    }<newline46mondego><newline46mondego>    // more getter/setter methods here<newline46mondego><newline46mondego>    public property(String propertyname, String owner, double price, double rent)//constructor<newline46mondego>    {<newline46mondego>    	this.propertyname = propertyname;<newline46mondego>    	this.owner = owner;<newline46mondego>    	this.price = price;<newline46mondego>    	this.rent = rent;<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Property info for <doubleQuotes46> + propertyname + <doubleQuotes46> - Rent : £<doubleQuotes46> + rent + <doubleQuotes46>Price : £<doubleQuotes46> + price + <doubleQuotes46>owned by :<doubleQuotes46> + owner);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1614splitHere46","1801041splitHere46","BigInteger.probablePrime(bitLength, random)"
"1615splitHere46","1801041splitHere46","probablePrime()"
"1616splitHere46","1801055splitHere46","ntohs"
"1617splitHere46","1801055splitHere46","htons"
"1618splitHere46","1801055splitHere46","ByteBuffer#getShort()"
"1619splitHere46","1801055splitHere46","ByteBuffer#order(ByteOrder)"
"1620splitHere46","1801055splitHere46","ByteOrder#BIG_ENDIAN"
"1621splitHere46","1801055splitHere46","ByteBuffer"
"1622splitHere46","1801055splitHere46","BIG_ENDIAN"
"1623splitHere46","1801055splitHere46","java.net.Socket"
"1624splitHere46","1801055splitHere46","Socket#getChannel()"
"1625splitHere46","1801055splitHere46","java.nio.channels.SocketChannel"
"1626splitHere46","1801055splitHere46","java.nio.channels.ByteChannel"
"1627splitHere46","1801055splitHere46","ByteBuffer"
"1628splitHere46","1801114splitHere46","start-stop-daemon"
"1629splitHere46","1801114splitHere46","DAEMON=<doubleQuotes46>$APP_JAVAHOME/bin/java<doubleQuotes46><newline46mondego>ARGS=<doubleQuotes46>-server -Djava.awt.headless=true -jar $MAIN<doubleQuotes46><newline46mondego><newline46mondego>start-stop-daemon --start --pidfile <doubleQuotes46>$PIDFILE<doubleQuotes46> --chuid <doubleQuotes46>$USER<doubleQuotes46> --background --make-pidfile --startas <doubleQuotes46>$DAEMON<doubleQuotes46> -- $ARGS<newline46mondego>"
"1630splitHere46","1801254splitHere46","read(byte[])"
"1631splitHere46","1801254splitHere46","InputStream in; // initialized however you're doing<newline46mondego>int bytesRead = 0;<newline46mondego>byte bytes[60]; // We'll read in up to 60 bytes at a time<newline46mondego>while ((bytesRead = in.read(bytes)) > 0) {<newline46mondego>    // bytesRead is = to the number of bytes actually read<newline46mondego>    // bytes array holds the next 'bytesRead' number of bytes<newline46mondego>}<newline46mondego>"
"1632splitHere46","1801362splitHere46","class MultiKeyStoreManager implements X509KeyManager {<newline46mondego> private static final Logger logger = Logger.getLogger(MultiKeyStoreManager.class); <newline46mondego> private final X509KeyManager jvmKeyManager;<newline46mondego> private final X509KeyManager customKeyManager;<newline46mondego><newline46mondego> public MultiKeyStoreManager(X509KeyManager jvmKeyManager, X509KeyManager customKeyManager ) {<newline46mondego>  this.jvmKeyManager = jvmKeyManager;<newline46mondego>  this.customKeyManager = customKeyManager;  <newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public String chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket) {<newline46mondego>  // try the first key manager<newline46mondego>  String alias = customKeyManager.chooseClientAlias(keyType, issuers, socket);<newline46mondego>  if( alias == null ) {<newline46mondego>   alias = jvmKeyManager.chooseClientAlias(keyType, issuers, socket);<newline46mondego>   logger.warn(<doubleQuotes46>Reverting to JVM CLIENT alias : <doubleQuotes46> + alias);<newline46mondego>  }<newline46mondego><newline46mondego>  return alias;<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public String chooseServerAlias(String keyType, Principal[] issuers, Socket socket) {<newline46mondego>  // try the first key manager<newline46mondego>  String alias = customKeyManager.chooseServerAlias(keyType, issuers, socket);<newline46mondego>  if( alias == null ) {<newline46mondego>   alias =  jvmKeyManager.chooseServerAlias(keyType, issuers, socket);<newline46mondego>   logger.warn(<doubleQuotes46>Reverting to JVM Server alias : <doubleQuotes46> + alias);<newline46mondego>  } <newline46mondego>  return alias;<newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public X509Certificate[] getCertificateChain(String alias) {<newline46mondego>  X509Certificate[] chain = customKeyManager.getCertificateChain(alias);<newline46mondego>  if( chain == null || chain.length == 0) {<newline46mondego>   logger.warn(<doubleQuotes46>Reverting to JVM Chain : <doubleQuotes46> + alias);<newline46mondego>   return jvmKeyManager.getCertificateChain(alias);<newline46mondego>  } else {<newline46mondego>   return chain;<newline46mondego>  }  <newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public String[] getClientAliases(String keyType, Principal[] issuers) {<newline46mondego>  String[] cAliases = customKeyManager.getClientAliases(keyType, issuers);<newline46mondego>  String[] jAliases = jvmKeyManager.getClientAliases(keyType, issuers);<newline46mondego>  logger.warn(<doubleQuotes46>Supported Client Aliases Custom: <doubleQuotes46> + cAliases.length + <doubleQuotes46> JVM : <doubleQuotes46> + jAliases.length);<newline46mondego>  return ArrayUtils.join(cAliases,jAliases);<newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public PrivateKey getPrivateKey(String alias) {<newline46mondego>  PrivateKey key = customKeyManager.getPrivateKey(alias);<newline46mondego>  if( key == null ) {<newline46mondego>   logger.warn(<doubleQuotes46>Reverting to JVM Key : <doubleQuotes46> + alias);<newline46mondego>   return jvmKeyManager.getPrivateKey(alias);<newline46mondego>  } else {<newline46mondego>   return key;<newline46mondego>  }<newline46mondego> }<newline46mondego><newline46mondego> @Override<newline46mondego> public String[] getServerAliases(String keyType, Principal[] issuers) {<newline46mondego>  String[] cAliases = customKeyManager.getServerAliases(keyType, issuers);<newline46mondego>  String[] jAliases = jvmKeyManager.getServerAliases(keyType, issuers);<newline46mondego>  logger.warn(<doubleQuotes46>Supported Server Aliases Custom: <doubleQuotes46> + cAliases.length + <doubleQuotes46> JVM : <doubleQuotes46> + jAliases.length);<newline46mondego>  return ArrayUtils.join(cAliases,jAliases);<newline46mondego> }<newline46mondego><newline46mondego>}<newline46mondego>"
"1633splitHere46","1801362splitHere46","/**<newline46mondego>  * Returns an array of KeyManagers, set up to use the required keyStore.<newline46mondego>  * This method does the bulk of the work of setting up the custom trust managers.<newline46mondego>  * <newline46mondego>  * @param props <newline46mondego>  * <newline46mondego>  * @return an array of KeyManagers set up accordingly.<newline46mondego>  */<newline46mondego> private static KeyManager[] getKeyManagers(Properties props) throws IOException, GeneralSecurityException {<newline46mondego>  // First, get the default KeyManagerFactory.<newline46mondego>  String alg = KeyManagerFactory.getDefaultAlgorithm();<newline46mondego>  KeyManagerFactory kmFact = KeyManagerFactory.getInstance(alg);   <newline46mondego>  // Next, set up the KeyStore to use. We need to load the file into<newline46mondego>  // a KeyStore instance.<newline46mondego>  FileInputStream fis = new FileInputStream(props.getProperty(SSL_KEYSTORE));<newline46mondego>  logger.info(<doubleQuotes46>Loaded keystore<doubleQuotes46>);<newline46mondego>  KeyStore ks = KeyStore.getInstance(<doubleQuotes46>jks<doubleQuotes46>);<newline46mondego>  String keyStorePassword = props.getProperty(SSL_KEYSTORE_PASSWORD);<newline46mondego>  ks.load(fis, keyStorePassword.toCharArray());<newline46mondego>  fis.close();<newline46mondego>  // Now we initialise the KeyManagerFactory with this KeyStore<newline46mondego>  kmFact.init(ks, keyStorePassword.toCharArray());<newline46mondego><newline46mondego>  // default<newline46mondego>  KeyManagerFactory dkmFact = KeyManagerFactory.getInstance(alg); <newline46mondego>  dkmFact.init(null,null);  <newline46mondego><newline46mondego>  // Get the first X509KeyManager in the list<newline46mondego>  X509KeyManager customX509KeyManager = getX509KeyManager(alg, kmFact);<newline46mondego>  X509KeyManager jvmX509KeyManager = getX509KeyManager(alg, dkmFact);<newline46mondego><newline46mondego>  KeyManager[] km = { new MultiKeyStoreManager(jvmX509KeyManager, customX509KeyManager) };   <newline46mondego>  logger.debug(<doubleQuotes46>Number of key managers registered:<doubleQuotes46> + km.length);  <newline46mondego>  return km;<newline46mondego> }<newline46mondego><newline46mondego><newline46mondego> /**<newline46mondego>  * Find a X509 Key Manager compatible with a particular algorithm<newline46mondego>  * @param algorithm<newline46mondego>  * @param kmFact<newline46mondego>  * @return<newline46mondego>  * @throws NoSuchAlgorithmException<newline46mondego>  */<newline46mondego> private static X509KeyManager getX509KeyManager(String algorithm, KeyManagerFactory kmFact)<newline46mondego>   throws NoSuchAlgorithmException {<newline46mondego>  KeyManager[] keyManagers = kmFact.getKeyManagers();<newline46mondego><newline46mondego>  if (keyManagers == null || keyManagers.length == 0) {<newline46mondego>   throw new NoSuchAlgorithmException(<doubleQuotes46>The default algorithm :<doubleQuotes46> + algorithm + <doubleQuotes46> produced no key managers<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  X509KeyManager x509KeyManager = null;<newline46mondego><newline46mondego>  for (int i = 0; i < keyManagers.length; i++) {<newline46mondego>   if (keyManagers[i] instanceof X509KeyManager) {<newline46mondego>    x509KeyManager = (X509KeyManager) keyManagers[i];<newline46mondego>    break;<newline46mondego>   }<newline46mondego>  }<newline46mondego><newline46mondego>  if (x509KeyManager == null) {<newline46mondego>   throw new NoSuchAlgorithmException(<doubleQuotes46>The default algorithm :<doubleQuotes46>+ algorithm + <doubleQuotes46> did not produce a X509 Key manager<doubleQuotes46>);<newline46mondego>  }<newline46mondego>  return x509KeyManager;<newline46mondego> }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego> private static void initialiseManager(Properties props) throws IOException, GeneralSecurityException { <newline46mondego>  // Next construct and initialise a SSLContext with the KeyStore and<newline46mondego>  // the TrustStore. We use the default SecureRandom.<newline46mondego>  SSLContext context = SSLContext.getInstance(<doubleQuotes46>SSL<doubleQuotes46>);<newline46mondego>  context.init(getKeyManagers(props), getTrustManagers(props), null);<newline46mondego>  SSLContext.setDefault(context);<newline46mondego><newline46mondego> }<newline46mondego>"
"1634splitHere46","1801471splitHere46",">>> L = [2, 1, 4, 3, 5, 1, 2, 1, 1, 6, 5]<newline46mondego>>>> S = set()<newline46mondego>>>> M = []<newline46mondego>>>> for e in L:<newline46mondego>...     if e in S:<newline46mondego>...         continue<newline46mondego>...     S.add(e)<newline46mondego>...     M.append(e)<newline46mondego>... <newline46mondego>>>> M<newline46mondego>[2, 1, 4, 3, 5, 6]<newline46mondego>"
"1635splitHere46","1801471splitHere46","M = list(set(L))<newline46mondego>"
"1636splitHere46","1802126splitHere46","ByteArrayInputStream"
"1637splitHere46","1802126splitHere46","InputStream is = new ByteArrayInputStream(decodedBytes);<newline46mondego>"
"1638splitHere46","1802545splitHere46","<%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46>%><newline46mondego>"
"1639splitHere46","1802669splitHere46",".*?"
"1640splitHere46","1802669splitHere46","Pattern p = Pattern.compile(<doubleQuotes46><(LOCATION|PERSON|ORGANIZATION)>.*?</(LOCATION|PERSON|ORGANIZATION)><doubleQuotes46>);<newline46mondego>"
"1641splitHere46","1802789splitHere46","Calendar"
"1642splitHere46","1802789splitHere46","long"
"1643splitHere46","1802789splitHere46","toString"
"1644splitHere46","1802841splitHere46","@GeneratedValue"
"1645splitHere46","1802862splitHere46","fair=true"
"1646splitHere46","1802862splitHere46","Lock lock = new ReentrantLock(true);"
"1647splitHere46","1802873splitHere46","session.invalidate()"
"1648splitHere46","1802879splitHere46","WeakHashMap<Thread, SomeMetaData><newline46mondego>"
"1649splitHere46","1802879splitHere46","new MapMaker().weakValues().makeMap();<newline46mondego>"
"1650splitHere46","1802879splitHere46","new MapMaker().weakValues().expiration(5, TimeUnit.MINUTES).makeMap();<newline46mondego>"
"1651splitHere46","1802940splitHere46","StringUtils.leftPad(<doubleQuotes46>foobar<doubleQuotes46>, 10, '*'); // Returns <doubleQuotes46>****foobar<doubleQuotes46><newline46mondego>"
"1652splitHere46","1802941splitHere46","Collection<String> resourceIds = Lists.newArrayList(<newline46mondego>  Iterables.filter(<newline46mondego>     Iterables.transform(matchingComputers, ... your Function ...),<newline46mondego>     Predicates.notNull();<newline46mondego>  )<newline46mondego>);<newline46mondego>"
"1653splitHere46","1802941splitHere46","public class Computer {<newline46mondego>....<newline46mondego>    public static Function<Computer, String> TO_ID = ...;<newline46mondego>}<newline46mondego>"
"1654splitHere46","1803012splitHere46","import org.apache.commons.codec.binary.Base64;<newline46mondego><newline46mondego>void example() {    <newline46mondego>    String srr = FileUtils.readFileToString(new File(<doubleQuotes46>c:\\test.txt<doubleQuotes46>));<newline46mondego>    byte b[]; <newline46mondego>    Base64 base64 = new Base64();<newline46mondego>    b=base64.decode(srr);<newline46mondego>}<newline46mondego>"
"1655splitHere46","1803089splitHere46","timer.cancel();<newline46mondego>timer.schedule(...);<newline46mondego>"
"1656splitHere46","1803305splitHere46","String huge = ...;<newline46mondego>String small = s.substring(0,2); //huge.value char[] is not garbage collected here<newline46mondego>String gcFriendly = new String(small); //now huge.value char[] can be garbage collected<newline46mondego>"
"1657splitHere46","1803322splitHere46","Applet.getParameterInfo()"
"1658splitHere46","1803414splitHere46","setWheelScrollingEnabled()"
"1659splitHere46","1803414splitHere46","JScrollPane"
"1660splitHere46","1803414splitHere46","addMouseListener()"
"1661splitHere46","1803735splitHere46","List<Runnable> runnables = ...<newline46mondego>runnables.get(2).call();<newline46mondego>"
"1662splitHere46","1803735splitHere46","import org.apache.commons.beanutils.MethodUtils;<newline46mondego><newline46mondego>Object target = ...<newline46mondego>List<String> methodNames = ...<newline46mondego>MethodUtils.invokeMethod(target, methodNames.get(2), /*args*/ null);<newline46mondego>"
"1663splitHere46","1803762splitHere46","int month, day;<newline46mondego><newline46mondego>public void  printNumeric()<newline46mondego>{<newline46mondego>  System.out.printf(<doubleQuotes46>%02d/%02d\n<doubleQuotes46>, month, day);<newline46mondego>  // i would like the month if it is 5 to be 05 same thing with the day<newline46mondego>}<newline46mondego>"
"1664splitHere46","1803877splitHere46","x *= (i - j) / (j + 1);<newline46mondego>"
"1665splitHere46","1803877splitHere46","x = x * ((i - j) / (j + 1));<newline46mondego>"
"1666splitHere46","1803877splitHere46","(i - j) / (j + 1)"
"1667splitHere46","1803877splitHere46","x = x * (i - j) / (j + 1);<newline46mondego>"
"1668splitHere46","1803959splitHere46","x.clone() == x"
"1669splitHere46","1803959splitHere46","interface Foo extends Cloneable { public int getX(); public void setX(int x);  }<newline46mondego>enum FooSingleton implements Foo { <newline46mondego>    INSTANCE; <newline46mondego>    private int x;<newline46mondego>    public int getX(){ return x; }<newline46mondego>    public void setX(int x){ this.x = x; }<newline46mondego>}<newline46mondego>class FooClass implements Foo { <newline46mondego>    private int x;<newline46mondego>    public int getX(){ return x; }<newline46mondego>    public void setX(int x){ this.x = x; }<newline46mondego>}<newline46mondego><newline46mondego>boolean omg(Foo f){<newline46mondego>    Foo c = f.clone();<newline46mondego>    c.setX(c.getX() + 1);<newline46mondego>    return c.getX() != f.getX();   <newline46mondego>}<newline46mondego>assert omg(new FooClass());        // OK<newline46mondego>assert omg(FooSingleton.INSTANCE); // WTF?<newline46mondego>"
"1670splitHere46","1803959splitHere46","clone()"
"1671splitHere46","1803959splitHere46","return this"
"1672splitHere46","1803959splitHere46","clone()"
"1673splitHere46","1803959splitHere46","clone()"
"1674splitHere46","1803959splitHere46","clone()"
"1675splitHere46","1803959splitHere46","IdentityHashMap"
"1676splitHere46","1804035splitHere46","String[] months = {<doubleQuotes46>Jan<doubleQuotes46>, <doubleQuotes46>Feb<doubleQuotes46>, <doubleQuotes46>Mar<doubleQuotes46>, <doubleQuotes46>Apr<doubleQuotes46>, <doubleQuotes46>May<doubleQuotes46>, <doubleQuotes46>Jun<doubleQuotes46>, <newline46mondego>                    <doubleQuotes46>Jul<doubleQuotes46>, <doubleQuotes46>Aug<doubleQuotes46>, <doubleQuotes46>Sep<doubleQuotes46>, <doubleQuotes46>Oct<doubleQuotes46>, <doubleQuotes46>Nov<doubleQuotes46>, <doubleQuotes46>Dec<doubleQuotes46>}<newline46mondego><newline46mondego>System.out.println(months[month - 1] + <doubleQuotes46>, <doubleQuotes46> + day);<newline46mondego>"
"1677splitHere46","1804115splitHere46","@XmlRootElement public static class A {<newline46mondego>  public List<B> b = new ArrayList<B>();<newline46mondego>}<newline46mondego><newline46mondego>public static class B {<newline46mondego>  public List<C> c = new ArrayList<C>();<newline46mondego>  @XmlAttribute(name = <doubleQuotes46>attribute-foo<doubleQuotes46>) public String attributeFoo = <doubleQuotes46>foo<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>public static class C {<newline46mondego>  @XmlAttribute(name = <doubleQuotes46>attribute-this<doubleQuotes46>) public String attributeThis = <doubleQuotes46>is<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>  A a = new A();<newline46mondego>  a.b.add(new B());<newline46mondego>  a.b.get(0).c.add(new C());<newline46mondego>  JAXB.marshal(a, System.out);<newline46mondego>}<newline46mondego>//TODO: getters/setters, error handling and so on<newline46mondego>"
"1678splitHere46","1804115splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>yes<doubleQuotes46>?><newline46mondego><a><newline46mondego>    <b attribute-foo=<doubleQuotes46>foo<doubleQuotes46>><newline46mondego>        <c attribute-this=<doubleQuotes46>is<doubleQuotes46>/><newline46mondego>    </b><newline46mondego></a><newline46mondego>"
"1679splitHere46","1804281splitHere46","DocumentBuilderFactory"
"1680splitHere46","1804281splitHere46","DocumentBuilderFactory.newInstance()"
"1681splitHere46","1804281splitHere46","DocumentBuilderFactory"
"1682splitHere46","1804281splitHere46","javax.xml.parsers.DocumentBuilderFactory"
"1683splitHere46","1804281splitHere46","$JAVA_HOME/jre/lib/jaxp.properties"
"1684splitHere46","1804281splitHere46","META-INF/services/javax.xml.parsers.DocumentBuilderFactory"
"1685splitHere46","1804281splitHere46","private static void OutputJaxpImplementationInfo() {<newline46mondego>    System.out.println(getJaxpImplementationInfo(<doubleQuotes46>DocumentBuilderFactory<doubleQuotes46>, DocumentBuilderFactory.newInstance().getClass()));<newline46mondego>    System.out.println(getJaxpImplementationInfo(<doubleQuotes46>XPathFactory<doubleQuotes46>, XPathFactory.newInstance().getClass()));<newline46mondego>    System.out.println(getJaxpImplementationInfo(<doubleQuotes46>TransformerFactory<doubleQuotes46>, TransformerFactory.newInstance().getClass()));<newline46mondego>    System.out.println(getJaxpImplementationInfo(<doubleQuotes46>SAXParserFactory<doubleQuotes46>, SAXParserFactory.newInstance().getClass()));<newline46mondego>}<newline46mondego><newline46mondego>private static String getJaxpImplementationInfo(String componentName, Class componentClass) {<newline46mondego>    CodeSource source = componentClass.getProtectionDomain().getCodeSource();<newline46mondego>    return MessageFormat.format(<newline46mondego>            <doubleQuotes46>{0} implementation: {1} loaded from: {2}<doubleQuotes46>,<newline46mondego>            componentName,<newline46mondego>            componentClass.getName(),<newline46mondego>            source == null ? <doubleQuotes46>Java Runtime<doubleQuotes46> : source.getLocation());<newline46mondego>}<newline46mondego>"
"1686splitHere46","1804281splitHere46","DocumentBuilderFactory implementation: org.apache.xerces.jaxp.DocumentBuilderFactoryImpl loaded from: file:/C:/Projects/Scratch/lib/xerces-2.8.0.jar<newline46mondego>XPathFactory implementation: com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl loaded from: Java Runtime<newline46mondego>TransformerFactory implementation: org.apache.xalan.processor.TransformerFactoryImpl loaded from: file:/C:/Projects/Scratch/lib/xalan.jar<newline46mondego>SAXParserFactory implementation: org.apache.xerces.jaxp.SAXParserFactoryImpl loaded from: file:/C:/Projects/Scratch/lib/xerces-2.8.0.jar<newline46mondego>"
"1687splitHere46","1804490splitHere46","class ClientList {<newline46mondego> Integer clients = 0;<newline46mondego> public String debugClientList() {<newline46mondego>   return clients.toString();<newline46mondego> }<newline46mondego>"
"1688splitHere46","1804490splitHere46","print(clients.debugCientList());<newline46mondego>"
"1689splitHere46","1804490splitHere46","InterpreterSingleton {  <newline46mondego>    public static final void Console console = new Interpreter();<newline46mondego>}<newline46mondego>....<newline46mondego><newline46mondego>class ClientList {<newline46mondego> Integer clients = 0;<newline46mondego> public void addClient(Client c) {<newline46mondego>    ....<newline46mondego>    InterpreterSingleton.console.print(<doubleQuotes46>Client added, clients now are <doubleQuotes46> + clients);<newline46mondego> }<newline46mondego>"
"1690splitHere46","1804490splitHere46","class InterpreterSingletonList {  <newline46mondego>    public static final void Set<Interpreter> is = new HashSet();<newline46mondego>    void printToAll(String s) {<newline46mondego>         for (Interpreter i: is) {<newline46mondego>             i.print(s);<newline46mondego>         }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>package bsh.util;<newline46mondego><newline46mondego>import java.io.*;<newline46mondego><newline46mondego>import java.net.Socket;<newline46mondego>import java.net.ServerSocket;<newline46mondego>import bsh.*;<newline46mondego><newline46mondego>/**<newline46mondego>    BeanShell remote session server.<newline46mondego>    Starts instances of bsh for client connections.<newline46mondego>    Note: the sessiond effectively maps all connections to the same interpreter<newline46mondego>    (shared namespace).<newline46mondego>*/<newline46mondego>public class Sessiond extends Thread<newline46mondego>{<newline46mondego>    private ServerSocket ss;<newline46mondego>    NameSpace globalNameSpace;<newline46mondego><newline46mondego>    public Sessiond(NameSpace globalNameSpace, int port) throws IOException<newline46mondego>    {<newline46mondego>    	ss = new ServerSocket(port);<newline46mondego>    	this.globalNameSpace = globalNameSpace;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>    	try<newline46mondego>    	{<newline46mondego>    		while(true)<newline46mondego>    			new SessiondConnection(globalNameSpace, ss.accept()).start();<newline46mondego>    	}<newline46mondego>    	catch(IOException e) { System.out.println(e); }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class SessiondConnection extends Thread<newline46mondego>{<newline46mondego>    NameSpace globalNameSpace;<newline46mondego>    Socket client;<newline46mondego><newline46mondego>    SessiondConnection(NameSpace globalNameSpace, Socket client)<newline46mondego>    {<newline46mondego>    	this.client = client;<newline46mondego>    	this.globalNameSpace = globalNameSpace;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>    	try<newline46mondego>    	{<newline46mondego>    		InputStream in = client.getInputStream();<newline46mondego>    		PrintStream out = new PrintStream(client.getOutputStream());<newline46mondego>    		/* this is the one you're looking for */<newline46mondego>                        Interpreter i = new Interpreter( <newline46mondego>    			new InputStreamReader(in), out, out, true, globalNameSpace);<newline46mondego>    		i.setExitOnEOF( false ); // don't exit interp<newline46mondego>                    /*store the interpreter on the list*/<newline46mondego>                    InterpreterSingletonList.is.add(i);<newline46mondego>    		i.run();<newline46mondego>                    /*remove it (i.run() blocks)*/<newline46mondego>                    InterpreterSingletonList.is.remove(i);<newline46mondego>    	}<newline46mondego>    	catch(IOException e) { System.out.println(e); }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1691splitHere46","1804675splitHere46","dir /x"
"1692splitHere46","1804675splitHere46","c:\docume~1\polter.pdf"
"1693splitHere46","1804774splitHere46",".jar"
"1694splitHere46","1804774splitHere46","/usr/lib/myapp/myapp.jar"
"1695splitHere46","1804774splitHere46","java -j /usr/lib/myapp/myapp.jar"
"1696splitHere46","1804774splitHere46","/usr/bin/java"
"1697splitHere46","1804921splitHere46","DataSource"
"1698splitHere46","1804921splitHere46","ByteArrayDataSource"
"1699splitHere46","1805117splitHere46","Set<V> nodes = new HashSet<V>(g.vertexSet());<newline46mondego>for (V v : nodes) {<newline46mondego>  if (! conn.pathExists(start, v)) {<newline46mondego>    g.removeVertex(v);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1700splitHere46","1805151splitHere46","public static final void arcTo(GeneralPath path, float rx, float ry, float theta, boolean largeArcFlag, boolean sweepFlag, float x, float y) {<newline46mondego>            // Ensure radii are valid<newline46mondego>            if (rx == 0 || ry == 0) {<newline46mondego>                    path.lineTo(x, y);<newline46mondego>                    return;<newline46mondego>            }<newline46mondego>            // Get the current (x, y) coordinates of the path<newline46mondego>            Point2D p2d = path.getCurrentPoint();<newline46mondego>            float x0 = (float) p2d.getX();<newline46mondego>            float y0 = (float) p2d.getY();<newline46mondego>            // Compute the half distance between the current and the final point<newline46mondego>            float dx2 = (x0 - x) / 2.0f;<newline46mondego>            float dy2 = (y0 - y) / 2.0f;<newline46mondego>            // Convert theta from degrees to radians<newline46mondego>            theta = (float) Math.toRadians(theta % 360f);<newline46mondego><newline46mondego>            //<newline46mondego>            // Step 1 : Compute (x1, y1)<newline46mondego>            //<newline46mondego>            float x1 = (float) (Math.cos(theta) * (double) dx2 + Math.sin(theta)<newline46mondego>                            * (double) dy2);<newline46mondego>            float y1 = (float) (-Math.sin(theta) * (double) dx2 + Math.cos(theta)<newline46mondego>                            * (double) dy2);<newline46mondego>            // Ensure radii are large enough<newline46mondego>            rx = Math.abs(rx);<newline46mondego>            ry = Math.abs(ry);<newline46mondego>            float Prx = rx * rx;<newline46mondego>            float Pry = ry * ry;<newline46mondego>            float Px1 = x1 * x1;<newline46mondego>            float Py1 = y1 * y1;<newline46mondego>            double d = Px1 / Prx + Py1 / Pry;<newline46mondego>            if (d > 1) {<newline46mondego>                    rx = Math.abs((float) (Math.sqrt(d) * (double) rx));<newline46mondego>                    ry = Math.abs((float) (Math.sqrt(d) * (double) ry));<newline46mondego>                    Prx = rx * rx;<newline46mondego>                    Pry = ry * ry;<newline46mondego>            }<newline46mondego><newline46mondego>            //<newline46mondego>            // Step 2 : Compute (cx1, cy1)<newline46mondego>            //<newline46mondego>            double sign = (largeArcFlag == sweepFlag) ? -1d : 1d;<newline46mondego>            float coef = (float) (sign * Math<newline46mondego>                            .sqrt(((Prx * Pry) - (Prx * Py1) - (Pry * Px1))<newline46mondego>                                            / ((Prx * Py1) + (Pry * Px1))));<newline46mondego>            float cx1 = coef * ((rx * y1) / ry);<newline46mondego>            float cy1 = coef * -((ry * x1) / rx);<newline46mondego><newline46mondego>            //<newline46mondego>            // Step 3 : Compute (cx, cy) from (cx1, cy1)<newline46mondego>            //<newline46mondego>            float sx2 = (x0 + x) / 2.0f;<newline46mondego>            float sy2 = (y0 + y) / 2.0f;<newline46mondego>            float cx = sx2<newline46mondego>                            + (float) (Math.cos(theta) * (double) cx1 - Math.sin(theta)<newline46mondego>                                            * (double) cy1);<newline46mondego>            float cy = sy2<newline46mondego>                            + (float) (Math.sin(theta) * (double) cx1 + Math.cos(theta)<newline46mondego>                                            * (double) cy1);<newline46mondego><newline46mondego>            //<newline46mondego>            // Step 4 : Compute the angleStart (theta1) and the angleExtent (dtheta)<newline46mondego>            //<newline46mondego>            float ux = (x1 - cx1) / rx;<newline46mondego>            float uy = (y1 - cy1) / ry;<newline46mondego>            float vx = (-x1 - cx1) / rx;<newline46mondego>            float vy = (-y1 - cy1) / ry;<newline46mondego>            float p, n;<newline46mondego>            // Compute the angle start<newline46mondego>            n = (float) Math.sqrt((ux * ux) + (uy * uy));<newline46mondego>            p = ux; // (1 * ux) + (0 * uy)<newline46mondego>            sign = (uy < 0) ? -1d : 1d;<newline46mondego>            float angleStart = (float) Math.toDegrees(sign * Math.acos(p / n));<newline46mondego>            // Compute the angle extent<newline46mondego>            n = (float) Math.sqrt((ux * ux + uy * uy) * (vx * vx + vy * vy));<newline46mondego>            p = ux * vx + uy * vy;<newline46mondego>            sign = (ux * vy - uy * vx < 0) ? -1d : 1d;<newline46mondego>            float angleExtent = (float) Math.toDegrees(sign * Math.acos(p / n));<newline46mondego>            if (!sweepFlag && angleExtent > 0) {<newline46mondego>                    angleExtent -= 360f;<newline46mondego>            } else if (sweepFlag && angleExtent < 0) {<newline46mondego>                    angleExtent += 360f;<newline46mondego>            }<newline46mondego>            angleExtent %= 360f;<newline46mondego>            angleStart %= 360f;<newline46mondego><newline46mondego>            Arc2D.Float arc = new Arc2D.Float();<newline46mondego>            arc.x = cx - rx;<newline46mondego>            arc.y = cy - ry;<newline46mondego>            arc.width = rx * 2.0f;<newline46mondego>            arc.height = ry * 2.0f;<newline46mondego>            arc.start = -angleStart;<newline46mondego>            arc.extent = -angleExtent;<newline46mondego>            path.append(arc, true);<newline46mondego>    }<newline46mondego>"
"1701splitHere46","1805249splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego><newline46mondego>public class Matrix<newline46mondego>{<newline46mondego>    private double[][] data;<newline46mondego><newline46mondego>    public Matrix(double[][] data)<newline46mondego>    {<newline46mondego>        int r= data.length;<newline46mondego>        int c= data[0].length;<newline46mondego>        this.data= new double[r][c];<newline46mondego>        for(int i = 0; i < r; i++) {<newline46mondego>            for(int j = 0; j < c; j++) {<newline46mondego>                    this.data[i][j] = data[i][j];<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /* convenience method for getting a <newline46mondego>       string representation of matrix */<newline46mondego>    public String toString()<newline46mondego>    {<newline46mondego>    	StringBuilder sb = new StringBuilder(1024);<newline46mondego>    	for(double[] row : this.data)<newline46mondego>    	{<newline46mondego>    		for(double val : row)<newline46mondego>    		{<newline46mondego>    			sb.append(val);<newline46mondego>    			sb.append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    		}<newline46mondego>    		sb.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    	}<newline46mondego><newline46mondego>    	return(sb.toString());<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeRowsWithValue(final double value)<newline46mondego>    {<newline46mondego>            /* Use an array list to track of the rows we're going to want to <newline46mondego>               keep...arraylist makes it easy to grow dynamically so we don't <newline46mondego>               need to know up front how many rows we're keeping */<newline46mondego>    	List<double[]> rowsToKeep = new ArrayList<double[]>(this.data.length);<newline46mondego>    	for(double[] row : this.data)<newline46mondego>    	{<newline46mondego>    		/* If you download Apache Commons, it has built-in array search<newline46mondego>                      methods so you don't have to write your own */<newline46mondego>    		boolean found = false;<newline46mondego>    		for(double testValue : row)<newline46mondego>    		{<newline46mondego>                            /* Using == to compares doubles is generally a bad idea <newline46mondego>                               since they can be represented slightly off their actual<newline46mondego>                               value in memory */<newline46mondego>    			if(Double.compare(value,testValue) == 0)<newline46mondego>    			{<newline46mondego>    				found = true;<newline46mondego>    				break;<newline46mondego>    			}<newline46mondego>    		}<newline46mondego><newline46mondego>                    /* if we didn't find our value in the current row, <newline46mondego>                      that must mean its a row we keep */<newline46mondego>    		if(!found)<newline46mondego>    		{<newline46mondego>    			rowsToKeep.add(row);<newline46mondego>    		}<newline46mondego>    	}<newline46mondego><newline46mondego>            /* now that we know what rows we want to keep, make our <newline46mondego>               new 2D array with only those rows */<newline46mondego>    	this.data = new double[rowsToKeep.size()][];<newline46mondego>    	for(int i=0; i < rowsToKeep.size(); i++)<newline46mondego>    	{<newline46mondego>    		this.data[i] = rowsToKeep.get(i);<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	double[][] test = { {1, 2, 3, 4, 5, 6, 7, 8, 9},<newline46mondego>    						{6, 2, 7, 2, 9, 6, 8, 10, 5},<newline46mondego>    						{2, 6, 4, 7, 8, 4, 3, 2, 5},<newline46mondego>    						{9, 8, 7, 5, 9, 7, 4, 1, 10},<newline46mondego>    						{5, 3, 6, 8, 2, 7, 3, 7, 2} };<newline46mondego><newline46mondego>            //make the original array and print it out      	<newline46mondego>    	Matrix m = new Matrix(test);<newline46mondego>    	System.out.println(m);<newline46mondego><newline46mondego>            //remove rows with the value <doubleQuotes46>10<doubleQuotes46> and then reprint the array<newline46mondego>    	m.removeRowsWithValue(10);<newline46mondego>    	System.out.println(m);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1702splitHere46","1805285splitHere46","Method"
"1703splitHere46","1805285splitHere46","Method m = getClass().getMethod(<doubleQuotes46>myMethod<doubleQuotes46>);<newline46mondego>MyAnnotation a = m.getAnnotation(MyAnnotation.class);<newline46mondego>MyValueType value1 = a.attribute1();<newline46mondego>"
"1704splitHere46","1805285splitHere46","getClass()"
"1705splitHere46","1805285splitHere46","Class.forName()"
"1706splitHere46","1805285splitHere46","getDeclaredMethods()"
"1707splitHere46","1805506splitHere46","eclipse -vm C:\jdk\jre\bin\javaw.exe<newline46mondego>"
"1708splitHere46","1805649splitHere46","public class User {<newline46mondego>    Dog dog;<newline46mondego>}<newline46mondego>"
"1709splitHere46","1805649splitHere46","public class User {<newline46mondego>    Dog dog = new Dog();<newline46mondego>}<newline46mondego>"
"1710splitHere46","1805649splitHere46","public class User {<newline46mondego>    Dog dog;<newline46mondego>    public User() {<newline46mondego>        this.dog = new Dog();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1711splitHere46","1805649splitHere46","Dog"
"1712splitHere46","1805649splitHere46","User"
"1713splitHere46","1805649splitHere46","faces-config.xml"
"1714splitHere46","1805649splitHere46","<managed-bean><newline46mondego>    <managed-bean-name>dog</managed-bean-name><newline46mondego>    <managed-bean-class>mypackage.Dog</managed-bean-class><newline46mondego>    <managed-bean-scope>request</managed-bean-scope><newline46mondego></managed-bean><newline46mondego><newline46mondego><managed-bean><newline46mondego>    <managed-bean-name>user</managed-bean-name><newline46mondego>    <managed-bean-class>mypackage.User</managed-bean-class><newline46mondego>    <managed-bean-scope>request</managed-bean-scope><newline46mondego>    <managed-property><newline46mondego>        <property-name>dog</property-name><newline46mondego>        <value>#{dog}</value><newline46mondego>    </managed-property><newline46mondego></managed-bean><newline46mondego>"
"1715splitHere46","1805667splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego>import javax.swing.event.*;<newline46mondego>import javax.swing.text.*;<newline46mondego><newline46mondego>public class TextPrompt extends JLabel<newline46mondego>    implements FocusListener, DocumentListener<newline46mondego>{<newline46mondego>    private JTextComponent component;<newline46mondego>    private Document document;<newline46mondego><newline46mondego>    public TextPrompt(String text, JTextComponent component)<newline46mondego>    {<newline46mondego>    	this.component = component;<newline46mondego>    	document = component.getDocument();<newline46mondego><newline46mondego>    	setText( text );<newline46mondego>    	setFont( component.getFont() );<newline46mondego>    	setBorder( new EmptyBorder(component.getInsets()) );<newline46mondego><newline46mondego>    	component.addFocusListener( this );<newline46mondego>    	document.addDocumentListener( this );<newline46mondego><newline46mondego>    	component.add( this );<newline46mondego>    }<newline46mondego><newline46mondego>    public void checkForPrompt()<newline46mondego>    {<newline46mondego>    	if (document.getLength() == 0)<newline46mondego>    		setSize( component.getSize() );<newline46mondego>    	else<newline46mondego>    		setSize(0, 0);<newline46mondego>    }<newline46mondego><newline46mondego>//  Implement FocusListener<newline46mondego><newline46mondego>    public void focusGained(FocusEvent e)<newline46mondego>    {<newline46mondego>    	checkForPrompt();<newline46mondego>    }<newline46mondego><newline46mondego>    public void focusLost(FocusEvent e)<newline46mondego>    {<newline46mondego>    	setSize(0, 0);<newline46mondego>    }<newline46mondego><newline46mondego>//  Implement DocumentListener<newline46mondego><newline46mondego>    public void insertUpdate(DocumentEvent e)<newline46mondego>    {<newline46mondego>    	checkForPrompt();<newline46mondego>    }<newline46mondego><newline46mondego>    public void removeUpdate(DocumentEvent e)<newline46mondego>    {<newline46mondego>    	checkForPrompt();<newline46mondego>    }<newline46mondego><newline46mondego>    public void changedUpdate(DocumentEvent e) {}<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	JPanel panel = new JPanel();<newline46mondego>    	JTextField tf1 = new JTextField(10);<newline46mondego>    	panel.add(tf1);<newline46mondego>    	JTextField tf2 = new JTextField(10);<newline46mondego>    	panel.add(tf2);<newline46mondego><newline46mondego>    	new TextPrompt(<doubleQuotes46>First Name<doubleQuotes46>, tf1);<newline46mondego>    	new TextPrompt(<doubleQuotes46>Last Name<doubleQuotes46>, tf2);<newline46mondego><newline46mondego>    	JFrame frame = new JFrame();<newline46mondego>    	frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>    	frame.add(panel);<newline46mondego>    	frame.pack();<newline46mondego>    	frame.setLocationRelativeTo( null );<newline46mondego>    	frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1716splitHere46","1805747splitHere46","M[w] = max(M[w], min(e.weight, M[v]))<newline46mondego>"
"1717splitHere46","1805786splitHere46","System.out.println(<doubleQuotes46>     AA     BB<doubleQuotes46>.replaceAll(<doubleQuotes46>\\s+<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>).trim());<newline46mondego>"
"1718splitHere46","1805786splitHere46","AA BB<newline46mondego>"
"1719splitHere46","1805786splitHere46","System.out.println(<doubleQuotes46>     AA     BB<doubleQuotes46>.replaceAll(<doubleQuotes46> {2,}<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>).trim());<newline46mondego>"
"1720splitHere46","1805910splitHere46","import java.awt.Component;<newline46mondego>import java.awt.FlowLayout;<newline46mondego><newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JCheckBox;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JList;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.ListCellRenderer;<newline46mondego><newline46mondego><newline46mondego>public class Relequestual extends JFrame {<newline46mondego><newline46mondego>   private final FunkyCellRendererComponent funkyCRC = new FunkyCellRendererComponent();<newline46mondego><newline46mondego>   public Relequestual() {<newline46mondego>      getContentPane().setLayout(new FlowLayout());<newline46mondego><newline46mondego>      String[] items = { <doubleQuotes46>Item 1<doubleQuotes46>, <doubleQuotes46>Item 2<doubleQuotes46>, <doubleQuotes46>Item 3<doubleQuotes46>, <doubleQuotes46>Item 4<doubleQuotes46> };<newline46mondego>      JList theList = new JList(items);<newline46mondego>      theList.setCellRenderer(<newline46mondego>      new ListCellRenderer() {<newline46mondego>         @Override<newline46mondego>         public Component getListCellRendererComponent(JList list, Object value, int index,<newline46mondego>               boolean isSelected, boolean cellHasFocus) {<newline46mondego>            funkyCRC.setup(list, value, index, isSelected, cellHasFocus);<newline46mondego>            return funkyCRC;<newline46mondego>         }<newline46mondego>      });<newline46mondego>      getContentPane().add(theList);<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>   /**<newline46mondego>    * @param args<newline46mondego>    */<newline46mondego>   public static void main(String[] args) {<newline46mondego>      Relequestual gui = new Relequestual();<newline46mondego>      gui.pack();<newline46mondego>      gui.setVisible(true);<newline46mondego>   }<newline46mondego><newline46mondego>   class FunkyCellRendererComponent extends JPanel {<newline46mondego><newline46mondego>      private JCheckBox checkBox = new JCheckBox();<newline46mondego>      private JLabel label = new JLabel();<newline46mondego>      private JList list;<newline46mondego>      private int index;<newline46mondego><newline46mondego>      public FunkyCellRendererComponent() {<newline46mondego>         super(null);<newline46mondego>         setLayout(new BoxLayout(this, BoxLayout.X_AXIS));<newline46mondego>         add(this.checkBox);<newline46mondego>         add(this.label);<newline46mondego>      }<newline46mondego><newline46mondego>      public void setup(JList list, Object value, int index,<newline46mondego>               boolean isSelected, boolean cellHasFocus) {<newline46mondego>         this.list = list;<newline46mondego>         this.index = index;<newline46mondego>         this.label.setText((String) list.getModel().getElementAt(index)); <newline46mondego>         if (isSelected) {<newline46mondego>            setForeground(list.getSelectionForeground());<newline46mondego>            setBackground(list.getSelectionBackground());<newline46mondego>         } else {<newline46mondego>            setForeground(list.getForeground());<newline46mondego>            setBackground(list.getBackground());<newline46mondego>         }<newline46mondego>         this.checkBox.setSelected(isSelected);<newline46mondego>      }<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"1721splitHere46","1805920splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> id=<doubleQuotes46>someName<doubleQuotes46> value=<doubleQuotes46>someInterestingValue<doubleQuotes46>/><newline46mondego>"
"1722splitHere46","1805920splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>someName<doubleQuotes46> value=<doubleQuotes46>someInterestingValue<doubleQuotes46>/><newline46mondego>"
"1723splitHere46","1805925splitHere46","root"
"1724splitHere46","1805925splitHere46","Document"
"1725splitHere46","1806085splitHere46","final"
"1726splitHere46","1806085splitHere46","public void doSomething1(Object arg)<newline46mondego>{<newline46mondego>    arg = new Object(); // OK.<newline46mondego>}<newline46mondego><newline46mondego>public void doSomething2(final Object arg)<newline46mondego>{<newline46mondego>    arg = new Object(); // Compile error.<newline46mondego>}<newline46mondego>"
"1727splitHere46","1806085splitHere46","arg"
"1728splitHere46","1806130splitHere46","A.this"
"1729splitHere46","1806130splitHere46","this"
"1730splitHere46","1806130splitHere46","this"
"1731splitHere46","1806165splitHere46","xjc"
"1732splitHere46","1806165splitHere46","Person"
"1733splitHere46","1806165splitHere46","lat"
"1734splitHere46","1806165splitHere46","lon"
"1735splitHere46","1806165splitHere46","Double"
"1736splitHere46","1806165splitHere46","<lat>"
"1737splitHere46","1806165splitHere46","<lon>"
"1738splitHere46","1806165splitHere46","Person"
"1739splitHere46","1806165splitHere46","null"
"1740splitHere46","1806165splitHere46","0.0"
"1741splitHere46","1806165splitHere46","<xsd:schema xmlns:xsd=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>        targetNamespace=<doubleQuotes46>http://www.example.com/person<doubleQuotes46>><newline46mondego> <xsd:element name=<doubleQuotes46>Person<doubleQuotes46>><newline46mondego>  <xsd:complexType><newline46mondego>    <xsd:sequence><newline46mondego>    <xsd:element name=<doubleQuotes46>name<doubleQuotes46> type=<doubleQuotes46>xsd:string<doubleQuotes46> /><newline46mondego>    <xsd:element name=<doubleQuotes46>lat<doubleQuotes46> type=<doubleQuotes46>xsd:double<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    <xsd:element name=<doubleQuotes46>lon<doubleQuotes46> type=<doubleQuotes46>xsd:double<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>   </xsd:sequence><newline46mondego>  </xsd:complexType><newline46mondego> </xsd:element><newline46mondego></xsd:schema><newline46mondego>"
"1742splitHere46","1806165splitHere46","Test.java"
"1743splitHere46","1806165splitHere46","import com.example.person.Person;<newline46mondego>import javax.xml.bind.JAXB;<newline46mondego>import java.io.File;<newline46mondego><newline46mondego>public class Test {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    Person p = JAXB.unmarshal(new File(<doubleQuotes46>foo.xml<doubleQuotes46>), Person.class);<newline46mondego>    System.out.println(p.getName());<newline46mondego>    System.out.println(p.getLat());<newline46mondego>    System.out.println(p.getLon());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1744splitHere46","1806165splitHere46","foo.xml"
"1745splitHere46","1806165splitHere46","<Person><newline46mondego> <name>Fred</name><newline46mondego> <lat>1.0</lat><newline46mondego></Person><newline46mondego>"
"1746splitHere46","1806210splitHere46","taglib"
"1747splitHere46","1806210splitHere46","web.xml"
"1748splitHere46","1806213splitHere46","switch (month) {<newline46mondego>  case 4:<newline46mondego>  case 6:<newline46mondego>  case 9:<newline46mondego>  case 11:<newline46mondego>    do something;<newline46mondego>    break;<newline46mondego>}<newline46mondego>"
"1749splitHere46","1806213splitHere46","case 4,6,9,11:"
"1750splitHere46","1806213splitHere46","if month in [4,6,9,11] do something;"
"1751splitHere46","1806213splitHere46","if ((abs(month-5) == 1) || (abs(month-10) == 1)) do_something;<newline46mondego>"
"1752splitHere46","1806214splitHere46","DefaultWeightedEdge"
"1753splitHere46","1806214splitHere46","equals()"
"1754splitHere46","1806214splitHere46","hashCode()"
"1755splitHere46","1806214splitHere46","java.lang.Object"
"1756splitHere46","1806214splitHere46","DefaultWeightedEdge"
"1757splitHere46","1806214splitHere46","a"
"1758splitHere46","1806214splitHere46","b"
"1759splitHere46","1806214splitHere46","true"
"1760splitHere46","1806214splitHere46","a.equals(b)"
"1761splitHere46","1806214splitHere46","true"
"1762splitHere46","1806214splitHere46","a"
"1763splitHere46","1806214splitHere46","b"
"1764splitHere46","1806214splitHere46",".equals()"
"1765splitHere46","1806214splitHere46","hashCode()"
"1766splitHere46","1806327splitHere46","ObjectOutoutStream"
"1767splitHere46","1806327splitHere46","ObjectInputStream"
"1768splitHere46","1806327splitHere46","Seriablizable"
"1769splitHere46","1806391splitHere46","Map<String, Object> context = new HashMap<String, Object>();<newline46mondego>context.put(<doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>some object<doubleQuotes46>);<newline46mondego>context.put(<doubleQuotes46>key2<doubleQuotes46>, <doubleQuotes46>another object<doubleQuotes46>);<newline46mondego>ActionContext.getContext().getValueStack().push(context);<newline46mondego>"
"1770splitHere46","1806391splitHere46","<s:property value=<doubleQuotes46>key<doubleQuotes46> /><newline46mondego><s:property value=<doubleQuotes46>key2<doubleQuotes46> /><newline46mondego>"
"1771splitHere46","1806408splitHere46","log4j.appender.A1.layout.ConversionPattern=%-4r [%t] %-5p %c %x -<newline46mondego>%m%n<newline46mondego>"
"1772splitHere46","1806408splitHere46","log4j.appender.A1.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n<newline46mondego>"
"1773splitHere46","1806408splitHere46","%"
"1774splitHere46","1806408splitHere46","%m%n%"
"1775splitHere46","1806408splitHere46","m%n"
"1776splitHere46","1806408splitHere46","-"
"1777splitHere46","1806408splitHere46","ConversionPattern"
"1778splitHere46","1806408splitHere46","%n"
"1779splitHere46","1806830splitHere46","for (int counter = 1; counter < decMax.length; counter++)<newline46mondego>{<newline46mondego>     if (decMax[counter] > max)<newline46mondego>     {<newline46mondego>      max = decMax[counter];<newline46mondego>     }<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>The highest maximum for the December is: <doubleQuotes46> + max);<newline46mondego>"
"1780splitHere46","1807451splitHere46","int n = number of verticles;<newline46mondego>int[][] D = RunDijkstraOrWarshall()<newline46mondego>// D[a,b] = length of shortest path from a to b<newline46mondego>int[] Vm = new int[n];<newline46mondego>for(int i=0; i<n i++)<newline46mondego>{<newline46mondego>   Vm[i] = 0<newline46mondego>   for(int j=0; j<n; j++) <newline46mondego>   {<newline46mondego>     if (Vm[i] < D[i,j]) Vm[i] = D[i,j];<newline46mondego>   }  <newline46mondego>}<newline46mondego><newline46mondego>minVm = int.Max;<newline46mondego>for(int i=0; i<n ;i++)<newline46mondego>{<newline46mondego>  if (minVm < Vm[i]) minVm = Vm[i];<newline46mondego>}<newline46mondego><newline46mondego>for(int i=0; i<n ;i++)<newline46mondego>{<newline46mondego>  if (Vm[i] == minVm)<newline46mondego>  {<newline46mondego>     // graph center contans i<newline46mondego>  }<newline46mondego>"
"1781splitHere46","1807850splitHere46","@Transactional"
"1782splitHere46","1807850splitHere46","rollbackFor"
"1783splitHere46","1807875splitHere46","@Produces(<doubleQuotes46>your-content-type<doubleQuotes46>)"
"1784splitHere46","1808268splitHere46","new FileInputStream(<doubleQuotes46>c:/file.ext<doubleQuotes46>)"
"1785splitHere46","1808424splitHere46","transform"
"1786splitHere46","1808469splitHere46","ByteBuffer buf = file.<newline46mondego>"
"1787splitHere46","1808841splitHere46","StackOverflowException"
"1788splitHere46","1808841splitHere46","class T { }<newline46mondego>class N<Z> { }<newline46mondego>class C<X> extends N<N<? super C<C<X>>>> {<newline46mondego>  N<? super C<T>> cast(C<T> c) { return c; }<newline46mondego>}<newline46mondego>"
"1789splitHere46","1808980splitHere46","ACTIVEMQ_OPTS=-Xss160k bin/activemq<newline46mondego>"
"1790splitHere46","1808983splitHere46","displaycontact();<newline46mondego>        }}});  // <- HERE<newline46mondego>"
"1791splitHere46","1808983splitHere46","imp.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>  public void actionPerformed(ActionEvent event) {<newline46mondego>    JFileChooser fileopen = new JFileChooser();<newline46mondego><newline46mondego>    int ret = fileopen.showDialog(null, <doubleQuotes46>Open file<doubleQuotes46>);<newline46mondego><newline46mondego>    if (ret == JFileChooser.APPROVE_OPTION) {<newline46mondego>      try {<newline46mondego>        BufferedReader fileStream = new BufferedReader(new FileReader(<doubleQuotes46>src/contacts.buab<doubleQuotes46>));<newline46mondego>        while (true) {<newline46mondego>          String fileInput = fileStream.readLine();<newline46mondego>          if (fileInput == null)<newline46mondego>            break;<newline46mondego><newline46mondego>          Contact a = new Contact();<newline46mondego>          a.setname(fileInput);<newline46mondego>          a.setsurname(fileStream.readline());<newline46mondego>          a.setphone(fileStream.readLine());<newline46mondego>          a.setmobile(fileStream.readLine());<newline46mondego>          a.setaddress(fileStream.readLine());<newline46mondego>          a.setpostcode(fileStream.readline());<newline46mondego>          Contacts.add(a);<newline46mondego>          System.out.println(a.getname());<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        fileStream.close();<newline46mondego>      } catch (Exception ex) {<newline46mondego>        JOptionPane.showMessageDialog(null, ioe.getMessage());<newline46mondego>      }<newline46mondego>      displaycontact();<newline46mondego>    }<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"1792splitHere46","1809048splitHere46","50 4B"
"1793splitHere46","1809048splitHere46","PK"
"1794splitHere46","1809079splitHere46","<xsl:output method=<doubleQuotes46>html<doubleQuotes46> /><newline46mondego>"
"1795splitHere46","1809079splitHere46","<xsl:output method=<doubleQuotes46>xml<doubleQuotes46> /><newline46mondego>"
"1796splitHere46","1809079splitHere46","&mdash;"
"1797splitHere46","1809124splitHere46","if (foo.needsProcessing()) {<newline46mondego>    synchronized (foo) {<newline46mondego>        foo.process();  // foo's state may be changed here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1798splitHere46","1809124splitHere46","foo.process()"
"1799splitHere46","1809124splitHere46","synchronized (foo) {<newline46mondego>    if (foo.needsProcessing()) {<newline46mondego>        foo.process();  // foo's state may be changed here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1800splitHere46","1809171splitHere46","public void myContractualMethod(final String x, final Set<String> y) {<newline46mondego>    checkNotNull(x);<newline46mondego>    checkArgument(!x.isEmpty());<newline46mondego>    checkNotNull(y);<newline46mondego>}<newline46mondego>"
"1801splitHere46","1809395splitHere46","class Scr extends MainScreen {<newline46mondego> public Scr() {<newline46mondego>  String time1 = <doubleQuotes46>2009-11-27 01:38:05<doubleQuotes46>;<newline46mondego>  String zone1 = <doubleQuotes46>Pacific/Midway<doubleQuotes46>;<newline46mondego>  String time2 = <doubleQuotes46>2008-05-01 12:38:05<doubleQuotes46>;<newline46mondego>  String zone2 = <doubleQuotes46>MST<doubleQuotes46>;<newline46mondego><newline46mondego>  long timeDiff = getTimeDifference(time1, zone1, time2, zone2);<newline46mondego>  Date date = new Date(timeDiff);<newline46mondego>  add(new LabelField(String.valueOf(date)));<newline46mondego> }<newline46mondego><newline46mondego> public long getTimeDifference(String timestamp1, String timezone1,<newline46mondego>   String timestamp2, String timezone2) {<newline46mondego>  long time1 = getTime(timestamp1, TimeZone.getTimeZone(timezone1));<newline46mondego>  long time2 = getTime(timestamp2, TimeZone.getTimeZone(timezone2));<newline46mondego>  return time2 - time1;<newline46mondego> }<newline46mondego><newline46mondego> public long getTime(String time, TimeZone timeZone) {<newline46mondego>  Date formatter = new Date(HttpDateParser.parse(time));<newline46mondego>  int offset = timeZone.getRawOffset();<newline46mondego>  return formatter.getTime() + offset;<newline46mondego> }<newline46mondego>}<newline46mondego>"
"1802splitHere46","1809710splitHere46","System.setOut()"
"1803splitHere46","1809710splitHere46","PrintStream"
"1804splitHere46","1809710splitHere46","OutputStream"
"1805splitHere46","1809710splitHere46","write()"
"1806splitHere46","1809710splitHere46","PrintStream"
"1807splitHere46","1809927splitHere46","EntityManager#merge()"
"1808splitHere46","1809927splitHere46","merge()"
"1809splitHere46","1809927splitHere46","update()"
"1810splitHere46","1809927splitHere46","@PersistenceContext<newline46mondego>private EntityManager em;<newline46mondego><newline46mondego>public User update (User transientUser) {<newline46mondego>    return em.merge(transientUser);<newline46mondego>}<newline46mondego>"
"1811splitHere46","1809927splitHere46","user.setPhone(<doubleQuotes46>YYYYYY<doubleQuotes46>);<newline46mondego>user = dao.update(user);<newline46mondego>"
"1812splitHere46","1809928splitHere46","public Date toDate( String inStr ) {<newline46mondego>    return new SimpleDateFormat(<doubleQuotes46>MM/dd<doubleQuotes46>).parse(inStr);<newline46mondego>}<newline46mondego>"
"1813splitHere46","1809955splitHere46","FutureTask#done()"
"1814splitHere46","1809955splitHere46","RunnableFuture#run()"
"1815splitHere46","1809955splitHere46","FutureTask#done()"
"1816splitHere46","1809955splitHere46","ITaskStatusHandler#taskRunning()"
"1817splitHere46","1809955splitHere46","ITaskStatusHandler#taskCompleted()"
"1818splitHere46","1809955splitHere46","@Override<newline46mondego>public void run() {<newline46mondego>  statusHandler.TaskRunning(this);<newline46mondego>  try {<newline46mondego>    super.run();<newline46mondego>  finally {<newline46mondego>    statusHandler.TaskCompleted(this);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1819splitHere46","1809955splitHere46","RunnableFuture#run()"
"1820splitHere46","1809955splitHere46","FutureTask#run()"
"1821splitHere46","1809955splitHere46","ITaskStatusHandler#taskRunning()"
"1822splitHere46","1809955splitHere46","Callable"
"1823splitHere46","1809955splitHere46","Runnable"
"1824splitHere46","1809955splitHere46","FutureTask#run()"
"1825splitHere46","1809955splitHere46","Callable"
"1826splitHere46","1809955splitHere46","Runnable"
"1827splitHere46","1809955splitHere46","FutureTask"
"1828splitHere46","1809955splitHere46","FutureTask"
"1829splitHere46","1809955splitHere46","ITaskStatusHandler#taskRunning()"
"1830splitHere46","1809955splitHere46","FutureTask#run()"
"1831splitHere46","1809973splitHere46","Map"
"1832splitHere46","1810175splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>public ObjectReference(LoadableObjectFactory<T> obj)<newline46mondego>{<newline46mondego>	_cls = (Class<? extends LoadableObjectFactory<T>>) obj.getClass();<newline46mondego>}<newline46mondego>"
"1833splitHere46","1810665splitHere46","// Prepare.<newline46mondego>String packageName = <doubleQuotes46>com.example.commands<doubleQuotes46>;<newline46mondego>List<Class<ICommand>> commands = new ArrayList<Class<ICommand>>();<newline46mondego>URL root = Thread.currentThread().getContextClassLoader().getResource(packageName.replace(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46>/<doubleQuotes46>));<newline46mondego><newline46mondego>// Filter .class files.<newline46mondego>File[] files = new File(root.getFile()).listFiles(new FilenameFilter() {<newline46mondego>    public boolean accept(File dir, String name) {<newline46mondego>        return name.endsWith(<doubleQuotes46>.class<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego><newline46mondego>// Find classes implementing ICommand.<newline46mondego>for (File file : files) {<newline46mondego>    String className = file.getName().replaceAll(<doubleQuotes46>.class$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>    Class<?> cls = Class.forName(packageName + <doubleQuotes46>.<doubleQuotes46> + className);<newline46mondego>    if (ICommand.class.isAssignableFrom(cls)) {<newline46mondego>        commands.add((Class<ICommand>) cls);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1834splitHere46","1810967splitHere46","String.join(<doubleQuotes46><doubleQuotes46>, strings)"
"1835splitHere46","1810967splitHere46","public static String concat(String... strs) {<newline46mondego>    int size = 0;<newline46mondego>    for (String str : strs) {<newline46mondego>        size += str.length;<newline46mondego>    }<newline46mondego><newline46mondego>    final char[] cs = new char[size];<newline46mondego>    int off = 0;<newline46mondego>    try {<newline46mondego>        for (String str : strs) {<newline46mondego>            int len = str.length();<newline46mondego>            str.getChars(0, len, cs, off);<newline46mondego>            off += len;<newline46mondego>        }<newline46mondego>    } catch (ArrayIndexOutOfBoundsException exc) {<newline46mondego>        throw new ConcurrentModificationException(exc);<newline46mondego>    }<newline46mondego>    if (off != cs.length) {<newline46mondego>        throw new ConcurrentModificationException();<newline46mondego>    }<newline46mondego>    return new String(cs);<newline46mondego>}<newline46mondego>"
"1836splitHere46","1811015splitHere46","public class TestHomePage {<newline46mondego>    private static WicketTester	tester;<newline46mondego><newline46mondego>    @BeforeClass<newline46mondego>    public static void setUp() {<newline46mondego>    	tester = new WicketTester(new WicketApplication() {<newline46mondego>    		@Override<newline46mondego>    		protected void init() {<newline46mondego>    			//Override init to use SpringUtil's SpringContext due to missing WebApplicationContext<newline46mondego>    			addComponentInstantiationListener(new SpringComponentInjector(this, SpringUtil.getContext()));<newline46mondego>    		}<newline46mondego>    	});<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testRenderMyPage() {<newline46mondego>    	//start and render the test page<newline46mondego>    	tester.startPage(HomePage.class);<newline46mondego><newline46mondego>    	//assert rendered page class<newline46mondego>    	tester.assertRenderedPage(HomePage.class);<newline46mondego><newline46mondego>    	//assert page contents<newline46mondego>    	tester.assertContains(<doubleQuotes46>Welcome to my webpage<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1837splitHere46","1811045splitHere46","public class MyFlexTable extends FlexTable implements MouseOverHandler, HasMouseOverHandler {<newline46mondego>    public MyFlexTable() {<newline46mondego>        this.addMouseOverHandler(this);<newline46mondego>    }<newline46mondego><newline46mondego>    public void onMouseOver(MouseOverEvent event) {<newline46mondego>        //do something<newline46mondego>    }<newline46mondego>    public HandlerRegistration addMouseOverHandler(MouseOverHandler handler) {<newline46mondego>        return addDomHandler(handler, MouseOverEvent.getType());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1838splitHere46","1811073splitHere46","0x0d"
"1839splitHere46","1811073splitHere46","0x0a"
"1840splitHere46","1811122splitHere46","double"
"1841splitHere46","1811122splitHere46","set(...)"
"1842splitHere46","1811122splitHere46","DoubleType"
"1843splitHere46","1811122splitHere46","Double"
"1844splitHere46","1811122splitHere46","@org.hibernate.annotations.type(type=<doubleQuotes46>myDouble<doubleQuotes46>)"
"1845splitHere46","1811122splitHere46","@org.hibernate.annotations.TypeDef"
"1846splitHere46","1811134splitHere46","java.util.Hashtable"
"1847splitHere46","1811168splitHere46","double"
"1848splitHere46","1811168splitHere46","Double"
"1849splitHere46","1811168splitHere46","assertEquals(Object, Object)"
"1850splitHere46","1811168splitHere46","assertEquals(double, double)"
"1851splitHere46","1811168splitHere46","assertEquals(Object, Object)"
"1852splitHere46","1811168splitHere46","assertEquals(double, double)"
"1853splitHere46","1811168splitHere46","assertEquals(Double.valueOf(70), eccen.get(<doubleQuotes46>alpha<doubleQuotes46>));<newline46mondego>"
"1854splitHere46","1811168splitHere46","assertEquals(70.0d, eccen.get(<doubleQuotes46>alpha<doubleQuotes46>).doubleValue());<newline46mondego>"
"1855splitHere46","1811230splitHere46","layout"
"1856splitHere46","1811230splitHere46","initComponents();"
"1857splitHere46","1811230splitHere46","Code"
"1858splitHere46","1811230splitHere46","Design"
"1859splitHere46","1811230splitHere46","initComponents"
"1860splitHere46","1811230splitHere46","initComponentsFix"
"1861splitHere46","1811230splitHere46","initComponents"
"1862splitHere46","1811230splitHere46","initComponentsFix"
"1863splitHere46","1811230splitHere46","Design"
"1864splitHere46","1811230splitHere46",".form"
"1865splitHere46","1811318splitHere46","public class Date{<newline46mondego>"
"1866splitHere46","1811318splitHere46","public Date(String inString){<newline46mondego>    String s = inString;<newline46mondego>    String b;<newline46mondego>    b.printThis(s);<newline46mondego>"
"1867splitHere46","1811318splitHere46","printThis(...)"
"1868splitHere46","1811318splitHere46","b"
"1869splitHere46","1811318splitHere46","printThis(s)"
"1870splitHere46","1811318splitHere46","b"
"1871splitHere46","1811318splitHere46","b"
"1872splitHere46","1811318splitHere46","printThis"
"1873splitHere46","1811318splitHere46","static"
"1874splitHere46","1811318splitHere46","private"
"1875splitHere46","1811318splitHere46","}<newline46mondego><newline46mondego>public void printThis(getString) {<newline46mondego>"
"1876splitHere46","1811318splitHere46","getString"
"1877splitHere46","1811318splitHere46","String getString"
"1878splitHere46","1811318splitHere46","System.out.printf(System.out.printf( <newline46mondego>        new SimpleDateFormat(<doubleQuotes46>MM/dd<doubleQuotes46>).format(<newline46mondego>        new SimpleDateFormat(<doubleQuotes46>MM/dd<doubleQuotes46>).parse(getString) ) );<newline46mondego>"
"1879splitHere46","1811318splitHere46","printf"
"1880splitHere46","1811318splitHere46","String"
"1881splitHere46","1811318splitHere46","Locale"
"1882splitHere46","1811318splitHere46","PrintStream"
"1883splitHere46","1811318splitHere46","System.out.printf(System.out.printf("
"1884splitHere46","1811318splitHere46","System.out.println"
"1885splitHere46","1811318splitHere46","System.out.print"
"1886splitHere46","1811318splitHere46","printf"
"1887splitHere46","1811318splitHere46","PrintStream"
"1888splitHere46","1811318splitHere46","}<newline46mondego>"
"1889splitHere46","1811349splitHere46","SELECT tblInventory.* From tblInventory;<newline46mondego>"
"1890splitHere46","1811349splitHere46","SELECT qryInventory.InventoryID, qryAuthor.AuthorName<newline46mondego>  FROM qryInventory JOIN qryAuthor ON qryInventory.AuthorID = qryAuthor.AuthorID<newline46mondego>"
"1891splitHere46","1811349splitHere46","Table 1 in qryInventory<newline46mondego>  Table 2 in qryInventory<newline46mondego>  qryInventory<newline46mondego>  Table 1 in qryAuthor<newline46mondego>  Table 2 in qryAuthor<newline46mondego>  qryAuthor<newline46mondego>  the top-level QueryDef<newline46mondego>"
"1892splitHere46","1811349splitHere46","Dim db As DAO.Database<newline46mondego>  Dim rs As DAO.Recordset<newline46mondego><newline46mondego>  Set db = DBEngine(0).OpenDatabase(<doubleQuotes46>[database path/name]<doubleQuotes46>)<newline46mondego>  Set rs = db.OpenRecordset(<doubleQuotes46>[SQL String]<doubleQuotes46>)<newline46mondego>"
"1893splitHere46","1811349splitHere46","rs.Close         ' closes the recordset<newline46mondego>  Set rs = Nothing ' clears the pointer to the memory formerly used by it<newline46mondego>  db.Close<newline46mondego>  Set db = Nothing<newline46mondego>"
"1894splitHere46","1811550splitHere46","byte[] bytes = new BigInteger(<doubleQuotes46>7F<doubleQuotes46> + str, 16).toByteArray();<newline46mondego>SecretKeySpec key = new SecretKeySpec(bytes, 1, bytes.length-1, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"1895splitHere46","1811684splitHere46","FileLock"
"1896splitHere46","1811684splitHere46","FileLock"
"1897splitHere46","1811684splitHere46","ReentrantReadWriteLock"
"1898splitHere46","1811711splitHere46","inverse.get(animal)"
"1899splitHere46","1811711splitHere46","inverse"
"1900splitHere46","1811711splitHere46","animal"
"1901splitHere46","1811711splitHere46","null"
"1902splitHere46","1811711splitHere46","Integer"
"1903splitHere46","1811711splitHere46","int"
"1904splitHere46","1811711splitHere46","int"
"1905splitHere46","1811711splitHere46","inverse.containsKey(animal)"
"1906splitHere46","1811711splitHere46","Integer"
"1907splitHere46","1811810splitHere46","ConcurrentSkipListMap"
"1908splitHere46","1811810splitHere46","ConcurrentHashMap"
"1909splitHere46","1811810splitHere46","ConcurrentHashMap"
"1910splitHere46","1811810splitHere46","HashMap"
"1911splitHere46","1811810splitHere46","SkipListMap"
"1912splitHere46","1812263splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class DefaultDict<K, V> extends HashMap<K, V> {<newline46mondego><newline46mondego>    Class<V> klass;<newline46mondego>    public DefaultDict(Class klass) {<newline46mondego>        this.klass = klass;    <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public V get(Object key) {<newline46mondego>        V returnValue = super.get(key);<newline46mondego>        if (returnValue == null) {<newline46mondego>            try {<newline46mondego>                returnValue = klass.newInstance();<newline46mondego>            } catch (Exception e) {<newline46mondego>                throw new RuntimeException(e);<newline46mondego>            }<newline46mondego>            this.put((K) key, returnValue);<newline46mondego>        }<newline46mondego>        return returnValue;<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"1913splitHere46","1812263splitHere46","public static void main(String[] args) {<newline46mondego>    DefaultDict<Integer, List<Integer>> dict =<newline46mondego>        new DefaultDict<Integer, List<Integer>>(ArrayList.class);<newline46mondego>    dict.get(1).add(2);<newline46mondego>    dict.get(1).add(3);<newline46mondego>    System.out.println(dict);<newline46mondego>}<newline46mondego>"
"1914splitHere46","1812263splitHere46","{1=[2, 3]}"
"1915splitHere46","1812356splitHere46","/path/to/images"
"1916splitHere46","1812356splitHere46","C:"
"1917splitHere46","1812356splitHere46","C:/path/to/images"
"1918splitHere46","1812356splitHere46","DefaultServlet"
"1919splitHere46","1812356splitHere46","/conf/server.xml"
"1920splitHere46","1812356splitHere46","<Host>"
"1921splitHere46","1812356splitHere46","<Context docBase=<doubleQuotes46>/path/to/images<doubleQuotes46> path=<doubleQuotes46>/images<doubleQuotes46> /><newline46mondego>"
"1922splitHere46","1812356splitHere46","http://example.com/images/..."
"1923splitHere46","1812356splitHere46","Servlet"
"1924splitHere46","1812356splitHere46","InputStream"
"1925splitHere46","1812356splitHere46","FileInputStream"
"1926splitHere46","1812356splitHere46","OutputStream"
"1927splitHere46","1812356splitHere46","HttpServletResponse"
"1928splitHere46","1812356splitHere46","Content-Type"
"1929splitHere46","1812356splitHere46","Content-Length"
"1930splitHere46","1812356splitHere46","Content-Disposition"
"1931splitHere46","1812356splitHere46","protected void doGet(HttpServletRequest request, HttpServletResponse response)<newline46mondego>    throws ServletException, IOException<newline46mondego>{<newline46mondego>    String filename = URLDecoder.decode(request.getPathInfo(), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    File file = new File(<doubleQuotes46>/path/to/images<doubleQuotes46>, filename);<newline46mondego><newline46mondego>    response.setContentType(getServletContext().getMimeType(file.getName()));<newline46mondego>    response.setContentLength(file.length());<newline46mondego>    response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>, <doubleQuotes46>inline; filename=\<doubleQuotes46><doubleQuotes46> + file.getName() + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    BufferedInputStream input = null;<newline46mondego>    BufferedOutputStream output = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        input = new BufferedInputStream(new FileInputStream(file));<newline46mondego>        output = new BufferedOutputStream(response.getOutputStream());<newline46mondego><newline46mondego>        byte[] buffer = new byte[8192];<newline46mondego>        int length;<newline46mondego>        while ((length = input.read(buffer)) > 0) {<newline46mondego>            output.write(buffer, 0, length);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (output != null) try { output.close(); } catch (IOException ignore) {}<newline46mondego>        if (input != null) try { input.close(); } catch (IOException ignore) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1932splitHere46","1812356splitHere46","url-pattern"
"1933splitHere46","1812356splitHere46","/images/*"
"1934splitHere46","1812356splitHere46","http://example.com/images/filename.jpg"
"1935splitHere46","1812356splitHere46","DefaultServlet"
"1936splitHere46","1812356splitHere46","if (!file.exists()) file = new File(<doubleQuotes46>/path/to/images<doubleQuotes46>, <doubleQuotes46>404.gif<doubleQuotes46>)"
"1937splitHere46","1812356splitHere46","request.getPathInfo()"
"1938splitHere46","1812356splitHere46","request.getParameter()"
"1939splitHere46","1812356splitHere46","FileServlet"
"1940splitHere46","1812583splitHere46","java -X"
"1941splitHere46","1812597splitHere46","final Lock lock = new ReentrantLock();<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>void attemptJob( Runnable runnable )<newline46mondego>{<newline46mondego>    if (!lock.tryLock())<newline46mondego>        throw new ConcurrentJobException();<newline46mondego><newline46mondego>    try<newline46mondego>    {<newline46mondego>       runnable.run();<newline46mondego>    }<newline46mondego>    finally<newline46mondego>    {<newline46mondego>       lock.unlock();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1942splitHere46","1812597splitHere46","final Lock lock = new ReentrantLock();<newline46mondego>final ExecutorService service = Executors.newSingleThreadExecutor();<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>void attemptJob( final Runnable runnable )<newline46mondego>{<newline46mondego>    if (!lock.tryLock())<newline46mondego>        throw new ConcurrentJobException();<newline46mondego><newline46mondego>    service.execute( new Runnable()<newline46mondego>    {<newline46mondego>        public void run()<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                runnable.run();<newline46mondego>            }<newline46mondego>            finally<newline46mondego>            {<newline46mondego>                lock.unlock();<newline46mondego>            } <newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"1943splitHere46","1812738splitHere46","import java.text.*<newline46mondego>import java.util.* <newline46mondego><newline46mondego>Calendar cal = new GregorianCalendar();<newline46mondego>Date date = cal.getTime();<newline46mondego>SimpleDateFormat formatter = new SimpleDateFormat(<doubleQuotes46>yyyy.MM.dd G 'at' HH:mm:ss z<doubleQuotes46>);<newline46mondego>formatter.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>GMT<doubleQuotes46>));<newline46mondego>System.out.println(formatter.format(date));<newline46mondego>"
"1944splitHere46","1812920splitHere46","public insertUser(String name, String email) {<newline46mondego>   Connection conn = null;<newline46mondego>   PreparedStatement stmt = null;<newline46mondego>   try {<newline46mondego>      conn = setupTheDatabaseConnectionSomehow();<newline46mondego>      stmt = conn.prepareStatement(<doubleQuotes46>INSERT INTO person (name, email) values (?, ?)<doubleQuotes46>);<newline46mondego>      stmt.setString(1, name);<newline46mondego>      stmt.setString(2, email);<newline46mondego>      stmt.executeUpdate();<newline46mondego>   }<newline46mondego>   finally {<newline46mondego>      try {<newline46mondego>         if (stmt != null) { stmt.close(); }<newline46mondego>      }<newline46mondego>      catch (Exception e) {<newline46mondego>         // log this error<newline46mondego>      }<newline46mondego>      try {<newline46mondego>         if (conn != null) { conn.close(); }<newline46mondego>      }<newline46mondego>      catch (Exception e) {<newline46mondego>         // log this error<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1945splitHere46","1812920splitHere46","setInt"
"1946splitHere46","1813152splitHere46","Random rng = new Random();<newline46mondego>	int a = rng.nextInt(10);<newline46mondego>	int b = rng.nextInt(9);<newline46mondego>	if (b >= a) ++b;<newline46mondego>"
"1947splitHere46","1813178splitHere46","if (intLays > 0) {<newline46mondego>    strBuiltOrder = intSnickers + <doubleQuotes46>Snickers\n<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"1948splitHere46","1813801splitHere46","DeclaredType typeArgument = declaredType(classElement(<doubleQuotes46>returnTypeName<doubleQuotes46>));<newline46mondego>DeclaredType validReturnType = declaredType(interfaceElement(GENERATOR_TYPE_NAME), typeArgument);<newline46mondego>TypeParameterElement typeParameter = typeParameterElement();<newline46mondego>ExecutableElement methodExecutableElement = Model.methodExecutableElement(name, validReturnType, typeParameter);<newline46mondego>"
"1949splitHere46","1813801splitHere46","Model"
"1950splitHere46","1813801splitHere46","declaredType"
"1951splitHere46","1813801splitHere46","public static DeclaredType declaredType(final Element element, final TypeMirror... argumentTypes) {<newline46mondego>    return new DeclaredType(){<newline46mondego>        @Override public Element asElement() {<newline46mondego>            return element;<newline46mondego>        }<newline46mondego>        @Override public List<? extends TypeMirror> getTypeArguments() {<newline46mondego>            return Arrays.asList(argumentTypes);<newline46mondego>        }<newline46mondego>        @Override public String toString() {<newline46mondego>            return format(<doubleQuotes46>DeclareTypeModel[element=%s, argumentTypes=%s]<doubleQuotes46>,<newline46mondego>                    element, Arrays.toString(argumentTypes));<newline46mondego>        }<newline46mondego>        @Override public <R, P> R accept(TypeVisitor<R, P> v, P p) {<newline46mondego>            return v.visitDeclared(this, p);<newline46mondego>        }<newline46mondego>        @Override public boolean equals(Object obj) { throw new UnsupportedOperationException(); }<newline46mondego>        @Override public int hashCode() { throw new UnsupportedOperationException(); }<newline46mondego><newline46mondego>        @Override public TypeKind getKind() { throw new UnsupportedOperationException(); }<newline46mondego>        @Override public TypeMirror getEnclosingType() { throw new UnsupportedOperationException(); }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"1952splitHere46","1813801splitHere46","Method actual = new Method(environment(), methodExecutableElement);<newline46mondego>Method expected = new Method(..);<newline46mondego>assertEquals(expected, actual);<newline46mondego>"
"1953splitHere46","1813825splitHere46","t:saveState"
"1954splitHere46","1813825splitHere46","<t:saveState value=<doubleQuotes46>#{bean.item.id}<doubleQuotes46> /><newline46mondego>"
"1955splitHere46","1813825splitHere46","<t:saveState value=<doubleQuotes46>#{bean.item}<doubleQuotes46> /><newline46mondego>"
"1956splitHere46","1813825splitHere46","t:dataList"
"1957splitHere46","1813825splitHere46","t:dataTable preserveDataModel=<doubleQuotes46>true<doubleQuotes46>"
"1958splitHere46","1813825splitHere46","t:selectOneRadio layout=<doubleQuotes46>spread<doubleQuotes46>"
"1959splitHere46","1813825splitHere46","t:inputFileUpload"
"1960splitHere46","1813825splitHere46","<h:inputHidden>"
"1961splitHere46","1813825splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46>>"
"1962splitHere46","1813825splitHere46","binding"
"1963splitHere46","1813825splitHere46","value"
"1964splitHere46","1813825splitHere46","private HtmlInputHidden itemId = new HtmlInputHidden();<newline46mondego>private Item item = new Item();<newline46mondego><newline46mondego>public void editItem() { // Action method when selecting an item for edit.        <newline46mondego>    itemId.setValue(item.getId());<newline46mondego>}<newline46mondego><newline46mondego>public void saveItem() { // Action method when saving edited item.<newline46mondego>    item.setId((Integer) itemId.getValue());<newline46mondego>}<newline46mondego>"
"1965splitHere46","1813825splitHere46","<h:inputHidden binding=<doubleQuotes46>#{bean.itemId}<doubleQuotes46> /><newline46mondego>"
"1966splitHere46","1813873splitHere46","private static final boolean enableFast = false;<newline46mondego><newline46mondego>// ...<newline46mondego>if (enableFast) {<newline46mondego>  // This is removed at compile time<newline46mondego>}<newline46mondego>"
"1967splitHere46","1813873splitHere46","private static final boolean enableFast = <doubleQuotes46>true<doubleQuotes46>.equals(System.getProperty(<doubleQuotes46>fast<doubleQuotes46>));<newline46mondego>"
"1968splitHere46","1814066splitHere46","int numberOfClips = 10;<newline46mondego>List<Clip> clips = new ArrayList<Clip>();<newline46mondego>for (int i = 0; i < numberOfClips; i++) {<newline46mondego>    Clip clip = new Clip();<newline46mondego>    clips.add(clip);<newline46mondego>}<newline46mondego>"
"1969splitHere46","1814066splitHere46","clips"
"1970splitHere46","1814112splitHere46","ArrayList"
"1971splitHere46","1814112splitHere46","Contact"
"1972splitHere46","1814112splitHere46","Comparable"
"1973splitHere46","1814112splitHere46","name"
"1974splitHere46","1814112splitHere46","public class Contact implements Comparable<Contact> {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private String phone;<newline46mondego>    private Address address;<newline46mondego><newline46mondego>    public int compareTo(Contact other) {<newline46mondego>        return name.compareTo(other.name);<newline46mondego>    }<newline46mondego><newline46mondego>    // Add/generate getters/setters and other boilerplate.<newline46mondego>}<newline46mondego>"
"1975splitHere46","1814112splitHere46","List<Contact> contacts = new ArrayList<Contact>();<newline46mondego>// Fill it.<newline46mondego><newline46mondego>Collections.sort(contacts);<newline46mondego>"
"1976splitHere46","1814112splitHere46","Comparator"
"1977splitHere46","1814112splitHere46","List<Contact> contacts = new ArrayList<Contact>();<newline46mondego>// Fill it.<newline46mondego><newline46mondego>// Now sort by address instead of name (default).<newline46mondego>Collections.sort(contacts, new Comparator<Contact>() {<newline46mondego>    public int compare(Contact one, Contact other) {<newline46mondego>        return one.getAddress().compareTo(other.getAddress());<newline46mondego>    }<newline46mondego>}); <newline46mondego>"
"1978splitHere46","1814112splitHere46","Comparator"
"1979splitHere46","1814112splitHere46","Contact"
"1980splitHere46","1814112splitHere46","public class Contact {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private String phone;<newline46mondego>    private Address address;<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    public static Comparator<Contact> COMPARE_BY_PHONE = new Comparator<Contact>() {<newline46mondego>        public int compare(Contact one, Contact other) {<newline46mondego>            return one.phone.compareTo(other.phone);<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public static Comparator<Contact> COMPARE_BY_ADDRESS = new Comparator<Contact>() {<newline46mondego>        public int compare(Contact one, Contact other) {<newline46mondego>            return one.address.compareTo(other.address);<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>}<newline46mondego>"
"1981splitHere46","1814112splitHere46","List<Contact> contacts = new ArrayList<Contact>();<newline46mondego>// Fill it.<newline46mondego><newline46mondego>// Sort by address.<newline46mondego>Collections.sort(contacts, Contact.COMPARE_BY_ADDRESS);<newline46mondego><newline46mondego>// Sort later by phone.<newline46mondego>Collections.sort(contacts, Contact.COMPARE_BY_PHONE);<newline46mondego>"
"1982splitHere46","1814112splitHere46","public class BeanComparator implements Comparator<Object> {<newline46mondego><newline46mondego>    private String getter;<newline46mondego><newline46mondego>    public BeanComparator(String field) {<newline46mondego>        this.getter = <doubleQuotes46>get<doubleQuotes46> + field.substring(0, 1).toUpperCase() + field.substring(1);<newline46mondego>    }<newline46mondego><newline46mondego>    public int compare(Object o1, Object o2) {<newline46mondego>        try {<newline46mondego>            if (o1 != null && o2 != null) {<newline46mondego>                o1 = o1.getClass().getMethod(getter, new Class[0]).invoke(o1, new Object[0]);<newline46mondego>                o2 = o2.getClass().getMethod(getter, new Class[0]).invoke(o2, new Object[0]);<newline46mondego>            }<newline46mondego>        } catch (Exception e) {<newline46mondego>            // If this exception occurs, then it is usually a fault of the developer.<newline46mondego>            throw new RuntimeException(<doubleQuotes46>Cannot compare <doubleQuotes46> + o1 + <doubleQuotes46> with <doubleQuotes46> + o2 + <doubleQuotes46> on <doubleQuotes46> + getter, e);<newline46mondego>        }<newline46mondego><newline46mondego>        return (o1 == null) ? -1 : ((o2 == null) ? 1 : ((Comparable<Object>) o1).compareTo(o2));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1983splitHere46","1814112splitHere46","// Sort on <doubleQuotes46>phone<doubleQuotes46> field of the Contact bean.<newline46mondego>Collections.sort(contacts, new BeanComparator(<doubleQuotes46>phone<doubleQuotes46>));<newline46mondego>"
"1984splitHere46","1814128splitHere46","String[] strings = new String[] { <doubleQuotes46>red<doubleQuotes46>, <doubleQuotes46>leaps<doubleQuotes46>, <doubleQuotes46>dog<doubleQuotes46> };<newline46mondego>String[] literals = new String(<doubleQuotes46>The quick (red|brown|blue|yellow) fox <doubleQuotes46> +<newline46mondego>    <doubleQuotes46>(jumps|leaps) over the lazy (dog|cat).<doubleQuotes46>).split(<doubleQuotes46>(?=[^\\\\])\\(.*?\\)<doubleQuotes46>);<newline46mondego><newline46mondego>StringBuilder sb = new StringBuilder(literals[0]);<newline46mondego>for(int i = 0; i < strings.length; i++) {<newline46mondego>    sb.append(strings[i]);<newline46mondego>    sb.append(literals[i + 1]);<newline46mondego>}<newline46mondego><newline46mondego>// => sb.toString();<newline46mondego>"
"1985splitHere46","1814184splitHere46","ClassDefNotFoundError"
"1986splitHere46","1814184splitHere46","LiveStreamModelTest"
"1987splitHere46","1814697splitHere46","package"
"1988splitHere46","1814697splitHere46","jar:jar"
"1989splitHere46","1814697splitHere46","jar"
"1990splitHere46","1814697splitHere46","assembly:assembly"
"1991splitHere46","1814697splitHere46","jar-with-dependencies"
"1992splitHere46","1814697splitHere46","Could not find the main class: com.gorkwobble.logmanager.LogManager. Program will exit.<newline46mondego>"
"1993splitHere46","1814697splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-jar-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>      <archive><newline46mondego>        <manifest><newline46mondego>          <addClasspath>true</addClasspath><newline46mondego>          <mainClass>com.gorkwobble.logmanager.LogManager</mainClass><newline46mondego>        </manifest><newline46mondego>      </archive><newline46mondego>    </configuration><newline46mondego>  </plugin><newline46mondego>"
"1994splitHere46","1814697splitHere46","logmanager-0.1.0.jar"
"1995splitHere46","1814697splitHere46","com.gorkwobble.logmanager.LogManager"
"1996splitHere46","1814697splitHere46","Failed to load Main-Class manifest attribute from: C:\EclipseProjects\logmanager\target\logmanager-0.1.0-jar-with-dependencies.jar<newline46mondego>"
"1997splitHere46","1814697splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-assembly-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>      <descriptorRefs><newline46mondego>        <descriptorRef>jar-with-dependencies</descriptorRef><newline46mondego>      </descriptorRefs><newline46mondego>    </configuration><newline46mondego>  </plugin><newline46mondego>"
"1998splitHere46","1814697splitHere46","logmanager-0.1.0-jar-with-dependencies.jar"
"1999splitHere46","1814697splitHere46","META-INF/MANIFEST.MF"
"2000splitHere46","1814697splitHere46","Main-Class"
"2001splitHere46","1814697splitHere46","configuration"
"2002splitHere46","1814697splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-jar-plugin</artifactId><newline46mondego>    <version>2.2</version><newline46mondego>    <!-- nothing here --><newline46mondego>  </plugin><newline46mondego>  <plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-assembly-plugin</artifactId><newline46mondego>    <version>2.2-beta-4</version><newline46mondego>    <configuration><newline46mondego>      <descriptorRefs><newline46mondego>        <descriptorRef>jar-with-dependencies</descriptorRef><newline46mondego>      </descriptorRefs><newline46mondego>      <archive><newline46mondego>        <manifest><newline46mondego>          <mainClass>org.sample.App</mainClass><newline46mondego>        </manifest><newline46mondego>      </archive><newline46mondego>    </configuration><newline46mondego>    <executions><newline46mondego>      <execution><newline46mondego>        <phase>package</phase><newline46mondego>        <goals><newline46mondego>          <goal>single</goal><newline46mondego>        </goals><newline46mondego>      </execution><newline46mondego>    </executions><newline46mondego>  </plugin><newline46mondego>"
"2003splitHere46","1814697splitHere46","org.sample.App"
"2004splitHere46","1814697splitHere46","assembly:single"
"2005splitHere46","1814697splitHere46","package"
"2006splitHere46","1814697splitHere46","assembly:assembly"
"2007splitHere46","1814697splitHere46","mvn install"
"2008splitHere46","1814697splitHere46","mvn clean install"
"2009splitHere46","1814697splitHere46","target"
"2010splitHere46","1814697splitHere46","java -jar logmanager-0.1.0-jar-with-dependencies.jar<newline46mondego>"
"2011splitHere46","1814697splitHere46","META-INF/MANIFEST.MF"
"2012splitHere46","1814697splitHere46","pom.xml"
"2013splitHere46","1814697splitHere46","java -cp logmanager-0.1.0-jar-with-dependencies.jar com.gorkwobble.logmanager.LogManager<newline46mondego>"
"2014splitHere46","1814697splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-compiler-plugin</artifactId><newline46mondego>    <configuration><newline46mondego>      <source>1.6</source><newline46mondego>      <target>1.6</target><newline46mondego>    </configuration><newline46mondego>  </plugin><newline46mondego>"
"2015splitHere46","1814760splitHere46","T"
"2016splitHere46","1814760splitHere46","Processor"
"2017splitHere46","1814760splitHere46","Processor"
"2018splitHere46","1814760splitHere46","public interface Processor<T>{<newline46mondego>  public void addHandler(Handler<? super T> u); <newline46mondego>  public void process(T t);<newline46mondego>}<newline46mondego>"
"2019splitHere46","1814760splitHere46","Processor"
"2020splitHere46","1814760splitHere46","String"
"2021splitHere46","1814760splitHere46","Integer"
"2022splitHere46","1814760splitHere46","Processor<String> proc = ...<newline46mondego>proc.addHandler(new Handler<String>());   // valid<newline46mondego>proc.addHandler(new Handler<Object>());   // valid, as Strings are Objects too<newline46mondego>proc.addHandler(new Handler<Integer>());  // invalid, not a String handler<newline46mondego>proc.process(<doubleQuotes46>good<doubleQuotes46>);     // valid<newline46mondego>proc.process(1);          // invalid, not a String<newline46mondego>"
"2023splitHere46","1814760splitHere46","Processor"
"2024splitHere46","1814760splitHere46","proc"
"2025splitHere46","1814760splitHere46","Processor<?>"
"2026splitHere46","1814788splitHere46","@Resource"
"2027splitHere46","1814788splitHere46","@javax.ws.rs.core.Context <newline46mondego>ServletContext context;<newline46mondego>"
"2028splitHere46","1814788splitHere46","public class MyService {<newline46mondego>    @Context ServletContext context;<newline46mondego><newline46mondego>    public MyService() {<newline46mondego>         print(<doubleQuotes46>Constructor <doubleQuotes46> + context);  // null here     <newline46mondego>    }<newline46mondego><newline46mondego>    @GET<newline46mondego>    @Path(<doubleQuotes46>/thing<doubleQuotes46>) {               <newline46mondego>             print(<doubleQuotes46>in  wizard service <doubleQuotes46> + context); // available here<newline46mondego>"
"2029splitHere46","1814827splitHere46","String colors = <doubleQuotes46><doubleQuotes46>;<newline46mondego>for(int i = 0; i < arrayOfColors.length; i++)<newline46mondego>    colors += arrayOfColors[i] + <doubleQuotes46> <doubleQuotes46>;<newline46mondego>"
"2030splitHere46","1814839splitHere46","<key>LSArchitecturePriority</key><newline46mondego><array><newline46mondego><string>i386</string><newline46mondego><string>ppc</string><newline46mondego></array><newline46mondego>"
"2031splitHere46","1815149splitHere46","o1"
"2032splitHere46","1815149splitHere46","o2"
"2033splitHere46","1815149splitHere46","o1"
"2034splitHere46","1815149splitHere46","o2"
"2035splitHere46","1815149splitHere46","o1"
"2036splitHere46","1815149splitHere46","o2"
"2037splitHere46","1815149splitHere46","o2"
"2038splitHere46","1815149splitHere46","o2"
"2039splitHere46","1815149splitHere46","o3"
"2040splitHere46","1815149splitHere46","o2"
"2041splitHere46","1815149splitHere46","o1"
"2042splitHere46","1815149splitHere46","public synchronized void synch1() {<newline46mondego>   // body<newline46mondego>}<newline46mondego>// equivalent to:<newline46mondego>public void synch2() {<newline46mondego>   synchronized( this ) {<newline46mondego>      // body<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2043splitHere46","1815218splitHere46","a = sprintf( <doubleQuotes46>There are %i green bottle%s on the wall.<doubleQuotes46>, i, (i==1?<doubleQuotes46><doubleQuotes46>:<doubleQuotes46>s<doubleQuotes46>) );<newline46mondego>"
"2044splitHere46","1815218splitHere46","messageColor = (color != null ? color : messageColor);<newline46mondego>"
"2045splitHere46","1815218splitHere46","messageColor = color || messageColor;<newline46mondego>"
"2046splitHere46","1815425splitHere46","nextInt()"
"2047splitHere46","1815425splitHere46","nextLine()"
"2048splitHere46","1815425splitHere46","nextLine()"
"2049splitHere46","1815793splitHere46","ConcurrentHashMap<String,CacheEntry>"
"2050splitHere46","1815793splitHere46","ArrayList<CacheEntry>"
"2051splitHere46","1815797splitHere46","Integer.numberOfLeadingZeros(i) + 1"
"2052splitHere46","1815797splitHere46","public static int numberOfLeadingZeros(int i) {<newline46mondego>    // HD, Figure 5-6<newline46mondego>    if (i == 0)<newline46mondego>        return 32;<newline46mondego>    int n = 1;<newline46mondego>    if (i >>> 16 == 0) { n += 16; i <<= 16; }<newline46mondego>    if (i >>> 24 == 0) { n +=  8; i <<=  8; }<newline46mondego>    if (i >>> 28 == 0) { n +=  4; i <<=  4; }<newline46mondego>    if (i >>> 30 == 0) { n +=  2; i <<=  2; }<newline46mondego>    n -= i >>> 31;<newline46mondego>    return n;<newline46mondego>}<newline46mondego>"
"2053splitHere46","1815917splitHere46","String.valueOf"
"2054splitHere46","1815966splitHere46","//Player is a custom class <newline46mondego>ArrayList<Player> numberofPlayersArray = new ArrayList<Player>(n);<newline46mondego><newline46mondego>//n is a variable for the number of Player class objects that I want to create<newline46mondego>for(int i = 0; i < n; i++) {<newline46mondego><newline46mondego>    //this is what I can come up with but I am missing something <newline46mondego><newline46mondego>     Player p = new Player();<newline46mondego>     numberofPlayersArray.add(p);<newline46mondego>}<newline46mondego>"
"2055splitHere46","1815966splitHere46","ArrayList"
"2056splitHere46","1815993splitHere46","for(int i=0; i < colorvalues.length; i++){<newline46mondego>     for (int j = 0; j < colorvalues.length; j++){<newline46mondego>             histogram[colorvalues[i][j]]++;<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"2057splitHere46","1815993splitHere46","int[]"
"2058splitHere46","1815993splitHere46","if (colorvalues[i][j] >= 0 && colorvalues[i][j] <= 255) {<newline46mondego>    histogram[colorvalues[i][j]]++;<newline46mondego>}<newline46mondego>"
"2059splitHere46","1815993splitHere46","int"
"2060splitHere46","1815993splitHere46","ArrayIndexOutOfBoundsException"
"2061splitHere46","1815993splitHere46","histogram"
"2062splitHere46","1815993splitHere46","int[255]"
"2063splitHere46","1815993splitHere46","new int[256]"
"2064splitHere46","1816165splitHere46","jmap"
"2065splitHere46","1816165splitHere46","jstack"
"2066splitHere46","1816165splitHere46","visualvm"
"2067splitHere46","1816199splitHere46","package psychic;<newline46mondego><newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class PsychicGameMore<newline46mondego>{<newline46mondego>    private ArrayList<Player> players;<newline46mondego>    private int orginalNumber;<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        PsychicGameMore game = new PsychicGameMore();<newline46mondego>        game.play();<newline46mondego>    }<newline46mondego><newline46mondego>    public PsychicGameMore()<newline46mondego>    {<newline46mondego>        int n;<newline46mondego>        Scanner s;<newline46mondego>        s = new Scanner(System.in);<newline46mondego>        System.out.println(<doubleQuotes46>How many players will there be?, Please enter a number<doubleQuotes46>);<newline46mondego>        n = s.nextInt();<newline46mondego>        players = new ArrayList<Player>(n);<newline46mondego><newline46mondego>        //for loop to create n number of Players<newline46mondego>        for (int i = 0; i < n; i++)<newline46mondego>        {<newline46mondego>            Player p;<newline46mondego>            p = new Player();<newline46mondego><newline46mondego><newline46mondego>            players.add(p);<newline46mondego>        }<newline46mondego><newline46mondego>        orginalNumber = 0;<newline46mondego>    }<newline46mondego><newline46mondego>    public void play()<newline46mondego>    {<newline46mondego>        Random myRandom;<newline46mondego>        myRandom = new Random();<newline46mondego><newline46mondego>        boolean hasWon = false;<newline46mondego>        do<newline46mondego>        {<newline46mondego>            orginalNumber = myRandom.nextInt(6) + 1;<newline46mondego>            System.out.println(<doubleQuotes46>The computer has choosen the number <doubleQuotes46> + orginalNumber);<newline46mondego>            for (Player player : players)<newline46mondego>            {<newline46mondego>                player.play();<newline46mondego><newline46mondego>                if (orginalNumber == player.getGuessedNumber())<newline46mondego>                {<newline46mondego>                    System.out.println(player.getName() + <doubleQuotes46> has won!!!!!!!!!!!!!!!!<doubleQuotes46>);<newline46mondego>                    hasWon = true;<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego>        } while (!hasWon);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2068splitHere46","1816208splitHere46","Collection"
"2069splitHere46","1816208splitHere46","Iterator"
"2070splitHere46","1816208splitHere46","for-each"
"2071splitHere46","1816208splitHere46","for (Iterator<PopulationMember> it = population.iterator(); it.hasNext();) {<newline46mondego>    PopulationMemeber p = it.next();<newline46mondego>    int[] probs = ProbablityArrayDeath(GrowthRate,Death,(int)p.fitness());<newline46mondego>    if (probs[RandomNumberGen.nextRandomInt(0, 99)] == 0) {<newline46mondego>        it.remove();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2072splitHere46","1816462splitHere46","OuterClass.this"
"2073splitHere46","1816462splitHere46","public OuterClass getOuter() {<newline46mondego>    return OuterClass.this;<newline46mondego>}<newline46mondego>"
"2074splitHere46","1816462splitHere46","this$0"
"2075splitHere46","1816462splitHere46","$"
"2076splitHere46","1816607splitHere46","CONSTARINT"
"2077splitHere46","1816607splitHere46","CONSTRAINT"
"2078splitHere46","1816676splitHere46","File f = new File(filePathString);<newline46mondego>if(f.exists() && !f.isDirectory()) { /* do something */ }<newline46mondego>"
"2079splitHere46","1816711splitHere46","serialVersionUID"
"2080splitHere46","1816711splitHere46","ObjectInputStream"
"2081splitHere46","1816711splitHere46","serialVersionUID"
"2082splitHere46","1816711splitHere46","serialVersionUID"
"2083splitHere46","1816711splitHere46","import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InvalidClassException;<newline46mondego>import java.io.ObjectInputStream;<newline46mondego>import java.io.ObjectStreamClass;<newline46mondego>import org.slf4j.Logger;<newline46mondego>import org.slf4j.LoggerFactory;<newline46mondego><newline46mondego><newline46mondego>public class DecompressibleInputStream extends ObjectInputStream {<newline46mondego><newline46mondego>    private static Logger logger = LoggerFactory.getLogger(DecompressibleInputStream.class);<newline46mondego><newline46mondego>    public DecompressibleInputStream(InputStream in) throws IOException {<newline46mondego>        super(in);<newline46mondego>    }<newline46mondego><newline46mondego>    protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException {<newline46mondego>        ObjectStreamClass resultClassDescriptor = super.readClassDescriptor(); // initially streams descriptor<newline46mondego>        Class localClass; // the class in the local JVM that this descriptor represents.<newline46mondego>        try {<newline46mondego>            localClass = Class.forName(resultClassDescriptor.getName()); <newline46mondego>        } catch (ClassNotFoundException e) {<newline46mondego>            logger.error(<doubleQuotes46>No local class for <doubleQuotes46> + resultClassDescriptor.getName(), e);<newline46mondego>            return resultClassDescriptor;<newline46mondego>        }<newline46mondego>        ObjectStreamClass localClassDescriptor = ObjectStreamClass.lookup(localClass);<newline46mondego>        if (localClassDescriptor != null) { // only if class implements serializable<newline46mondego>            final long localSUID = localClassDescriptor.getSerialVersionUID();<newline46mondego>            final long streamSUID = resultClassDescriptor.getSerialVersionUID();<newline46mondego>            if (streamSUID != localSUID) { // check for serialVersionUID mismatch.<newline46mondego>                final StringBuffer s = new StringBuffer(<doubleQuotes46>Overriding serialized class version mismatch: <doubleQuotes46>);<newline46mondego>                s.append(<doubleQuotes46>local serialVersionUID = <doubleQuotes46>).append(localSUID);<newline46mondego>                s.append(<doubleQuotes46> stream serialVersionUID = <doubleQuotes46>).append(streamSUID);<newline46mondego>                Exception e = new InvalidClassException(s.toString());<newline46mondego>                logger.error(<doubleQuotes46>Potentially Fatal Deserialization Operation.<doubleQuotes46>, e);<newline46mondego>                resultClassDescriptor = localClassDescriptor; // Use local class descriptor for deserialization<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return resultClassDescriptor;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2084splitHere46","1816865splitHere46","new FileOutputStream(fPrivateKeyStore);"
"2085splitHere46","1816865splitHere46","getClass().getClassLoader().getResourceAsStream(fPrivateKeyStore);"
"2086splitHere46","1816865splitHere46","private.keystore"
"2087splitHere46","1816865splitHere46","new File(fPrivateKeyStore).getAbsolutePath()"
"2088splitHere46","1816865splitHere46","getClass().getClassLoader().getResource(fPrivateKeyStore).toFileURL();"
"2089splitHere46","1816878splitHere46","glBindTexture()"
"2090splitHere46","1817028splitHere46","for (int j = 0; j < seats[0].length; j++)<newline46mondego>    System.out.print(((char) ('A' + j)) + <doubleQuotes46>\t<doubleQuotes46>);<newline46mondego>System.out.println();<newline46mondego>"
"2091splitHere46","1817105splitHere46","List"
"2092splitHere46","1817291splitHere46","list.setSelectedIndex(0);<newline46mondego>"
"2093splitHere46","1817544splitHere46","Array.newInstance()"
"2094splitHere46","1817544splitHere46","private Comparable[] hashtable;<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>hashtable = (Comparable)Array.newInstance(Comparable.class, tableSize);<newline46mondego>"
"2095splitHere46","1817544splitHere46","List<String> list = new ArrayList<String>();<newline46mondego>List<Integer> list2 = (List<Integer>)list;<newline46mondego>list.add(3);<newline46mondego>"
"2096splitHere46","1817544splitHere46","public <T> T newInstance(T t) {<newline46mondego>  return new T(); // error!<newline46mondego>}<newline46mondego>"
"2097splitHere46","1817544splitHere46","public <T> T newInstance(T t, Class<T> clazz) {<newline46mondego>  return clazz.newInstance();<newline46mondego>}<newline46mondego>"
"2098splitHere46","1817544splitHere46","String arr[] = new String[10];<newline46mondego>Integer arr2[] = (Integer[])arr; // error!<newline46mondego>"
"2099splitHere46","1817544splitHere46","ArrayList"
"2100splitHere46","1817544splitHere46","ArrayList"
"2101splitHere46","1817544splitHere46","Object[]"
"2102splitHere46","1817544splitHere46","String[]"
"2103splitHere46","1817544splitHere46","Object[]"
"2104splitHere46","1817591splitHere46","SystemController"
"2105splitHere46","1817591splitHere46","Main"
"2106splitHere46","1817591splitHere46","SystemController"
"2107splitHere46","1817591splitHere46","Main"
"2108splitHere46","1817718splitHere46","rowIndex"
"2109splitHere46","1817718splitHere46","columnIndex"
"2110splitHere46","1817718splitHere46","numberOfColumns"
"2111splitHere46","1817718splitHere46","rowIndex * numberOfColumns + columnIndex.<newline46mondego>"
"2112splitHere46","1817718splitHere46","rowIndex"
"2113splitHere46","1817718splitHere46","columnIndex"
"2114splitHere46","1817718splitHere46","numberOfRow"
"2115splitHere46","1817718splitHere46","columnIndex * numberOfRows + rowIndex.<newline46mondego>"
"2116splitHere46","1817718splitHere46","int[10] oneDim = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};<newline46mondego>int rows = 2;<newline46mondego>int columns = 5;<newline46mondego>for (int row = 0; row < rows; row++) {<newline46mondego>    for (int column = 0; column < columns; column++) {<newline46mondego>        System.out.println(row + <doubleQuotes46>, <doubleQuotes46> + column + <doubleQuotes46>: <doubleQuotes46> + oneDim[row * columns + column]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2117splitHere46","1817718splitHere46","0, 0: 1<newline46mondego>0, 1: 2<newline46mondego>0, 2: 3<newline46mondego>0, 3: 4<newline46mondego>0, 4: 5<newline46mondego>1, 0: 6<newline46mondego>1, 1: 7<newline46mondego>1, 2: 8<newline46mondego>1, 3: 9<newline46mondego>1, 4: 10<newline46mondego>"
"2118splitHere46","1817718splitHere46","for"
"2119splitHere46","1817718splitHere46","int column = index % numberOfColumns;<newline46mondego>int row = (index - column) / numberOfColumns;<newline46mondego>"
"2120splitHere46","1817718splitHere46","int row = index % numberOfRows;<newline46mondego>int column = (index - row) / numberOfRows;<newline46mondego>"
"2121splitHere46","1817718splitHere46","int[10] oneDim = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};<newline46mondego>int rows = 2;<newline46mondego>int columns = 5;<newline46mondego>for(int index = 0; index < 10; index++) {<newline46mondego>    int column = index % columns;<newline46mondego>    int row = (index - column) / columns;<newline46mondego>    System.out.println(row + <doubleQuotes46>, <doubleQuotes46> + column + <doubleQuotes46>: <doubleQuotes46> + oneDim[index]);<newline46mondego>}<newline46mondego>"
"2122splitHere46","1817718splitHere46","0, 0: 1<newline46mondego>0, 1: 2<newline46mondego>0, 2: 3<newline46mondego>0, 3: 4<newline46mondego>0, 4: 5<newline46mondego>1, 0: 6<newline46mondego>1, 1: 7<newline46mondego>1, 2: 8<newline46mondego>1, 3: 9<newline46mondego>1, 4: 10<newline46mondego>"
"2123splitHere46","1817728splitHere46","while(true) {                <newline46mondego>      Socket sock = servsock.accept();                <newline46mondego>      System.out.println(<doubleQuotes46>Connection from: <doubleQuotes46> + sock.getInetAddress());                <newline46mondego>      Scanner in = new Scanner(sock.getInputStream());                <newline46mondego>      PrintWriter out = new PrintWriter(sock.getOutputStream());                <newline46mondego>      String request = <doubleQuotes46><doubleQuotes46>;                <newline46mondego>      while (in.hasNext()) {<newline46mondego>          request = in.next();                <newline46mondego>          System.out.println(<doubleQuotes46>Request: <doubleQuotes46> + request);                <newline46mondego>          if(request.toUpperCase().equals(<doubleQuotes46>TIME<doubleQuotes46>)) {                     <newline46mondego>              out.println(getTime());<newline46mondego>              out.flush();                <newline46mondego>          } else {<newline46mondego>               out.println(<doubleQuotes46>Invalid Request...<doubleQuotes46>);                     <newline46mondego>               out.flush();<newline46mondego>          }<newline46mondego>      }<newline46mondego> }<newline46mondego>"
"2124splitHere46","1817756splitHere46","@GeneratedValue(strategy=GenerationType.TABLE)"
"2125splitHere46","1817756splitHere46","hibernate_sequences"
"2126splitHere46","1817756splitHere46","hibernate.show_sql"
"2127splitHere46","1817756splitHere46","true"
"2128splitHere46","1817756splitHere46","log4j.logger.org.hibernate.SQL=DEBUG"
"2129splitHere46","1817756splitHere46","hibernate.dialect"
"2130splitHere46","1817756splitHere46","GenerationType.AUTO"
"2131splitHere46","1817756splitHere46","SEQUENCE"
"2132splitHere46","1817756splitHere46","GenerationType.AUTO"
"2133splitHere46","1817756splitHere46","hibernate_sequence"
"2134splitHere46","1817756splitHere46","GenerationType.AUTO"
"2135splitHere46","1817756splitHere46","@Id<newline46mondego>@GeneratedValue(strategy=GenerationType.AUTO, generator=<doubleQuotes46>my_entity_seq_gen<doubleQuotes46>)<newline46mondego>@SequenceGenerator(name=<doubleQuotes46>my_entity_seq_gen<doubleQuotes46>, sequenceName=<doubleQuotes46>MY_ENTITY_SEQ<doubleQuotes46>)<newline46mondego>private long id;<newline46mondego>"
"2136splitHere46","1817863splitHere46","copyBtn = new JButton(new AbstractAction(<doubleQuotes46>copy<doubleQuotes46>){<newline46mondego>    public void actionPerformed(ActionEvent e){<newline46mondego>        Clipboard system = Toolkit.getDefaultToolkit().getSystemClipboard();<newline46mondego>        StringSelection sel = new StringSelection(myTextField.getText());<newline46mondego>        system.setContents(sel, sel);<newline46mondego>    }    <newline46mondego>});<newline46mondego>"
"2137splitHere46","1818019splitHere46","> Warning : *** Shift/Reduce conflict<newline46mondego>> found in state #106   between cmdList<newline46mondego>> ::= statementList (*)    and    <newline46mondego>> statement ::= (*) LBRACKET varList<newline46mondego>> RBRACKET    under symbol LBRACKET  <newline46mondego>> Resolved in favor of shifting.<newline46mondego>"
"2138splitHere46","1818019splitHere46","[something]"
"2139splitHere46","1818198splitHere46","Window->Preferences->Java->Compiler->Building->Output folder<newline46mondego>"
"2140splitHere46","1818198splitHere46",".svn"
"2141splitHere46","1818198splitHere46","src"
"2142splitHere46","1818198splitHere46","test"
"2143splitHere46","1818198splitHere46","src/.svn/entries"
"2144splitHere46","1818198splitHere46","test/.svn/entries"
"2145splitHere46","1818387splitHere46","Authenticator"
"2146splitHere46","1818387splitHere46","getRequestingHost()"
"2147splitHere46","1818387splitHere46","getRequestingHost()"
"2148splitHere46","1818387splitHere46","PasswordAuthentication"
"2149splitHere46","1818416splitHere46","/usr/share/i18n/SUPPORTED"
"2150splitHere46","1818416splitHere46","InputStreamReader"
"2151splitHere46","1818581splitHere46","List cats = sess.createCriteria(Cat.class)<newline46mondego>    .add( Restrictions.in( <doubleQuotes46>name<doubleQuotes46>, new String[] { <doubleQuotes46>Fritz<doubleQuotes46>, <doubleQuotes46>Izi<doubleQuotes46>, <doubleQuotes46>Pk<doubleQuotes46> } ) )<newline46mondego>"
"2152splitHere46","1818736splitHere46","public static enum InstrumentType {<newline46mondego><newline46mondego>    SPOT(<doubleQuotes46>MKP<doubleQuotes46>),<newline46mondego>    VOLATILITY(<doubleQuotes46>VOL<doubleQuotes46>);<newline46mondego><newline46mondego>    private final String name;<newline46mondego><newline46mondego>    InstrumentType(String name)<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString()<newline46mondego>    {<newline46mondego>        return this.name;<newline46mondego>    }<newline46mondego><newline46mondego>    public static InstrumentType getValue(String s)<newline46mondego>    {<newline46mondego>        for (InstrumentType t : InstrumentType.values())<newline46mondego>        {<newline46mondego>            if (t.toString().equals(s))<newline46mondego>                return t;<newline46mondego>        }<newline46mondego>        return SOME_DEFAULT_VALUE;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2153splitHere46","1818736splitHere46","getValue()"
"2154splitHere46","1818742splitHere46","ArrayList<Integer> list = new ArrayList<Integer>();<newline46mondego>...<newline46mondego>int size = list.size();<newline46mondego>for (Integer i : list) { <newline46mondego>    ...<newline46mondego>    if (--size == 0) {<newline46mondego>        // Last item.<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2155splitHere46","1818742splitHere46","for"
"2156splitHere46","1818742splitHere46","iterator"
"2157splitHere46","1818742splitHere46","for (int i = 0; i < list.size(); i++) {<newline46mondego>    ...<newline46mondego><newline46mondego>    if (i == (list.size() - 1)) {<newline46mondego>        // Last item...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2158splitHere46","1818742splitHere46","for (Iterator it = list.iterator(); it.hasNext(); ) {<newline46mondego>    ...<newline46mondego><newline46mondego>    if (!it.hasNext()) {<newline46mondego>        // Last item...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2159splitHere46","1818759splitHere46","private transient NumberFormat numberFormatterDontSerializeMe;<newline46mondego>"
"2160splitHere46","1818941splitHere46","OutOfMemoryError"
"2161splitHere46","1819170splitHere46","(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|<doubleQuotes46>(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*<doubleQuotes46>)@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])<newline46mondego>"
"2162splitHere46","1819170splitHere46","*@*"
"2163splitHere46","1819810splitHere46","<property name=<doubleQuotes46>exposeTransactionAwareSessionFactory<doubleQuotes46>><value>false</value></property><newline46mondego>"
"2164splitHere46","1819854splitHere46","Console"
"2165splitHere46","1819905splitHere46","<action<newline46mondego>path=<doubleQuotes46>/create<doubleQuotes46><newline46mondego>type=<doubleQuotes46>package.CreateAction<doubleQuotes46><newline46mondego>name=<doubleQuotes46>YourForm<doubleQuotes46><newline46mondego>scope=<doubleQuotes46>request<doubleQuotes46><newline46mondego>validate=<doubleQuotes46>false<doubleQuotes46>><newline46mondego><forward<newline46mondego>    name=<doubleQuotes46>failure<doubleQuotes46><newline46mondego>    path=<doubleQuotes46>/mainMenu.jsp<doubleQuotes46>/><newline46mondego><forward<newline46mondego>    name=<doubleQuotes46>success<doubleQuotes46><newline46mondego>    path=<doubleQuotes46>/view.do<doubleQuotes46> redirect=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego></action><newline46mondego><newline46mondego><action<newline46mondego>path=<doubleQuotes46>/view<doubleQuotes46><newline46mondego>type=<doubleQuotes46>package.ViewAndEditAction<doubleQuotes46><newline46mondego>name=<doubleQuotes46>YourForm<doubleQuotes46><newline46mondego>scope=<doubleQuotes46>request<doubleQuotes46><newline46mondego>validate=<doubleQuotes46>false<doubleQuotes46>><newline46mondego><forward<newline46mondego>    name=<doubleQuotes46>failure<doubleQuotes46><newline46mondego>    path=<doubleQuotes46>/mainMenu.jsp<doubleQuotes46>/><newline46mondego><forward<newline46mondego>    name=<doubleQuotes46>success<doubleQuotes46><newline46mondego>    path=<doubleQuotes46>/view.jsp<doubleQuotes46>/><newline46mondego></action><newline46mondego>"
"2166splitHere46","1820190splitHere46","Thread.currentThread().isInterrupted()"
"2167splitHere46","1820190splitHere46","private final AtomicReference<Thread> currentThread = new AtomicReference<Thread>();<newline46mondego><newline46mondego>public void run() {<newline46mondego>    Proxy proxy = ProxyFactory.generateProxy();<newline46mondego>    Source source;<newline46mondego><newline46mondego>    currentThread.set(Thread.currentThread());<newline46mondego><newline46mondego>    while (!Thread.currentThread().isInterrupted()) {<newline46mondego>        try {<newline46mondego>            source = proxy.getPenfingSources();<newline46mondego>            scheduleSource(source);<newline46mondego>        } catch (Exception e) {<newline46mondego>            log.error(<doubleQuotes46>UnExpected Exception caught while running<doubleQuotes46>, e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void stop() {<newline46mondego>    currentThread.get().interrupt();<newline46mondego>}<newline46mondego>"
"2168splitHere46","1820367splitHere46","request.getInputStream()"
"2169splitHere46","1820367splitHere46","String"
"2170splitHere46","1820367splitHere46","String"
"2171splitHere46","1820367splitHere46","um.unmarshall(new StringReader(str))"
"2172splitHere46","1820367splitHere46","String"
"2173splitHere46","1820726splitHere46","background"
"2174splitHere46","1820726splitHere46","private Color getLifeColor() {<newline46mondego>       return this.alive?liveColor:deadColor;<newline46mondego>   }<newline46mondego>"
"2175splitHere46","1820726splitHere46","public void paintComponent(Graphics gr) {<newline46mondego>       setBackground( getLifeColor() );<newline46mondego>       super.paintComponent( gr );<newline46mondego>  }<newline46mondego>"
"2176splitHere46","1821214splitHere46","public void save() {<newline46mondego>    dataservice.save(form);<newline46mondego>}<newline46mondego>"
"2177splitHere46","1821214splitHere46","dataservice"
"2178splitHere46","1821309splitHere46","plot.setLabelGenerator(null); //null means no labels<newline46mondego>"
"2179splitHere46","1821587splitHere46","java.lang.NoClassDefFoundError: javax/persistence/spi/ProviderUtil"
"2180splitHere46","1821650splitHere46","49 49"
"2181splitHere46","1821650splitHere46","II"
"2182splitHere46","1821650splitHere46","II"
"2183splitHere46","1821650splitHere46","2 bytes: Tag ID<newline46mondego>2 bytes: Tag Type<newline46mondego>4 bytes: Length<newline46mondego>4 bytes: data if the data is 4 bytes or less, or an offset to the data<newline46mondego>"
"2184splitHere46","1821692splitHere46","NullPointerException"
"2185splitHere46","1821692splitHere46","JLS Section 15.25"
"2186splitHere46","1821692splitHere46","endOfData()"
"2187splitHere46","1821692splitHere46","Integer"
"2188splitHere46","1821692splitHere46","localcount"
"2189splitHere46","1821692splitHere46","int"
"2190splitHere46","1821692splitHere46","endOfData()"
"2191splitHere46","1821692splitHere46","endOfData()"
"2192splitHere46","1821692splitHere46","Integer"
"2193splitHere46","1821717splitHere46","CLASSPATH"
"2194splitHere46","1821717splitHere46","javac"
"2195splitHere46","1821717splitHere46","java"
"2196splitHere46","1821717splitHere46","-cp"
"2197splitHere46","1821717splitHere46","javac"
"2198splitHere46","1821717splitHere46","java"
"2199splitHere46","1821717splitHere46",".BAT"
"2200splitHere46","1821717splitHere46",".sh"
"2201splitHere46","1821717splitHere46","-cp"
"2202splitHere46","1821717splitHere46","common"
"2203splitHere46","1821717splitHere46","common/lib"
"2204splitHere46","1821717splitHere46","WEB-INF/lib"
"2205splitHere46","1821717splitHere46","lib"
"2206splitHere46","1821717splitHere46","WEB-INF"
"2207splitHere46","1821717splitHere46","Build Path | add to build path"
"2208splitHere46","1821912splitHere46","<jar destfile=<doubleQuotes46>${store.dir}/temp_final.jar<doubleQuotes46> filesetmanifest=<doubleQuotes46>skip<doubleQuotes46>><newline46mondego>    <zipgroupfileset dir=<doubleQuotes46>dist<doubleQuotes46> includes=<doubleQuotes46>*.jar<doubleQuotes46>/><newline46mondego>    <zipgroupfileset dir=<doubleQuotes46>dist/lib<doubleQuotes46> includes=<doubleQuotes46>*.jar<doubleQuotes46> excludes=<doubleQuotes46><doubleQuotes46>/><newline46mondego><newline46mondego>    <manifest><newline46mondego>        <attribute name=<doubleQuotes46>Main-Class<doubleQuotes46> value=<doubleQuotes46>${main.class}<doubleQuotes46>/><newline46mondego>        <attribute name=<doubleQuotes46>Class-Path<doubleQuotes46> value=<doubleQuotes46>${mf.classpath}<doubleQuotes46>/><newline46mondego>    </manifest><newline46mondego></jar><newline46mondego>"
"2209splitHere46","1821912splitHere46","<path id=<doubleQuotes46>build.classpath<doubleQuotes46>><newline46mondego>	<fileset dir=<doubleQuotes46>${basedir}/<doubleQuotes46>><newline46mondego>		<include name=<doubleQuotes46>${lib.dir}/*.jar<doubleQuotes46>/><newline46mondego>	</fileset><newline46mondego></path><newline46mondego><newline46mondego><pathconvert property=<doubleQuotes46>mf.classpath<doubleQuotes46> pathsep=<doubleQuotes46> <doubleQuotes46>><newline46mondego>	<path refid=<doubleQuotes46>build.classpath<doubleQuotes46>/><newline46mondego>	<mapper><newline46mondego>		<chainedmapper><newline46mondego>			<flattenmapper/><newline46mondego>			<globmapper from=<doubleQuotes46>*.jar<doubleQuotes46> to=<doubleQuotes46>lib/*.jar<doubleQuotes46>/><newline46mondego>		</chainedmapper><newline46mondego>	</mapper><newline46mondego></pathconvert><newline46mondego>"
"2210splitHere46","1821912splitHere46","<path id=<doubleQuotes46>jars<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>${lib.dir}<doubleQuotes46> includes=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego></path><newline46mondego><newline46mondego><target name=<doubleQuotes46>compile<doubleQuotes46>><newline46mondego>	<mkdir dir=<doubleQuotes46>${build.dir}<doubleQuotes46>/><newline46mondego>	<javac srcdir=<doubleQuotes46>${src.dir}<doubleQuotes46> destdir=<doubleQuotes46>${build.dir}<doubleQuotes46> classpathref=<doubleQuotes46>jars<doubleQuotes46> debug=<doubleQuotes46>on<doubleQuotes46>/><newline46mondego></target><newline46mondego>"
"2211splitHere46","1821913splitHere46","public class Person {<newline46mondego><newline46mondego>private Person[] myChildren;<newline46mondego><newline46mondego>public int getNumberOfDescendants() {<newline46mondego>  if (myChildren == null || myChildren.length==0) return 0;<newline46mondego>  int myDescendants = 0;<newline46mondego>  for (Person child:myChildren) {<newline46mondego>    myDescendants += 1; // for this particular child itself<newline46mondego>    myDescendants += child.getNumberOfDescendants();  //add the child's children, grandchildren, etc.<newline46mondego>  }<newline46mondego>  return myDescendants;<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"2212splitHere46","1822043splitHere46","public Powell_5()<newline46mondego> {  <newline46mondego>     //etc<newline46mondego>"
"2213splitHere46","1822085splitHere46","E"
"2214splitHere46","1822085splitHere46","E"
"2215splitHere46","1822085splitHere46","Void"
"2216splitHere46","1822085splitHere46","E"
"2217splitHere46","1822085splitHere46","E"
"2218splitHere46","1822085splitHere46","E"
"2219splitHere46","1822085splitHere46","∀E. E"
"2220splitHere46","1822085splitHere46","E"
"2221splitHere46","1822085splitHere46","E"
"2222splitHere46","1822353splitHere46","//private String is_a;"
"2223splitHere46","1822353splitHere46","isas"
"2224splitHere46","1822353splitHere46","Map<Something>"
"2225splitHere46","1822353splitHere46","GOTerm t"
"2226splitHere46","1822573splitHere46","@Parameters"
"2227splitHere46","1822573splitHere46","@Parameters"
"2228splitHere46","1822792splitHere46","& "
"2229splitHere46","1822792splitHere46","\s"
"2230splitHere46","1822885splitHere46","BeanComparator"
"2231splitHere46","1822885splitHere46","Comparator<Question>"
"2232splitHere46","1822885splitHere46","BeanComparator"
"2233splitHere46","1822885splitHere46","BeanComparator"
"2234splitHere46","1822885splitHere46","Comparator<Question>"
"2235splitHere46","1822885splitHere46","questions"
"2236splitHere46","1822885splitHere46","List<?>"
"2237splitHere46","1823147splitHere46","ArrayList<String> arr = new ArrayList<String>();<newline46mondego><newline46mondego>    for (int i = 0; i < arr.size(); i++) {<newline46mondego><newline46mondego>        String t = arr.get(i);<newline46mondego><newline46mondego>        if (// your condition is met) {<newline46mondego>            arr.set(i, <doubleQuotes46>your new value<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2238splitHere46","1823197splitHere46","JAVA_HOME"
"2239splitHere46","1823197splitHere46","tools.jar"
"2240splitHere46","1823197splitHere46","bin"
"2241splitHere46","1823197splitHere46","JAVA_HOME"
"2242splitHere46","1823390splitHere46","n = input()<newline46mondego>print <doubleQuotes46>class A{public static void main(String[] a){}enum B{<doubleQuotes46><newline46mondego>print ','.join(<doubleQuotes46>C%d<doubleQuotes46> % x for x in range(n))<newline46mondego>print '}}'<newline46mondego>"
"2243splitHere46","1824455splitHere46","HttpServletRequest"
"2244splitHere46","1824642splitHere46","class Coordinates implements Serializable{...}<newline46mondego><newline46mondego>ObjectOutputStream out = new ObjectOutputStream(...);<newline46mondego>out.writeObject(new Coordinates(...));<newline46mondego>"
"2245splitHere46","1824724splitHere46","hibernateTemplate.getSessionFactory().evictQueries(<doubleQuotes46>query.ContactInfoList<doubleQuotes46>);<newline46mondego>"
"2246splitHere46","1824785splitHere46","Runtime.getRuntime().exec(<doubleQuotes46>rmiregistry 2020<doubleQuotes46>);<newline46mondego>"
"2247splitHere46","1824785splitHere46","LocateRegistry.createRegistry(2020);<newline46mondego>"
"2248splitHere46","1825170splitHere46","flush()"
"2249splitHere46","1825654splitHere46","getState()"
"2250splitHere46","1825654splitHere46","Thread.State"
"2251splitHere46","1825694splitHere46","URL url = new URL(<doubleQuotes46>http://www.stackoverflow.com<doubleQuotes46>);<newline46mondego>URLConnection urlConnection = url.openConnection();<newline46mondego>InputStream result = urlConnection.getInputStream();<newline46mondego><newline46mondego>BufferedReader reader = new BufferedReader(new InputStreamReader(result));<newline46mondego>String line = null;<newline46mondego>while ((line = reader.readLine()) != null) {<newline46mondego>    System.out.println(line);<newline46mondego>}<newline46mondego>reader.close();<newline46mondego>"
"2252splitHere46","1825694splitHere46","InputStream"
"2253splitHere46","1825694splitHere46","InputStream"
"2254splitHere46","1825694splitHere46","InputStream"
"2255splitHere46","1825694splitHere46","InputStream result = new URL(<doubleQuotes46>http://www.stackoverflow.com<doubleQuotes46>).openStream();<newline46mondego>"
"2256splitHere46","1825909splitHere46","getDeclaredMethod(String name, Class<?>... parameterTypes)"
"2257splitHere46","1825909splitHere46","Random random = new Random();<newline46mondego>while(true){<newline46mondego>    try {<newline46mondego>    	X.class.getDeclaredMethod(toBinaryString(random.nextLong()));<newline46mondego>    } catch (Exception e) {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2258splitHere46","1826046splitHere46","for"
"2259splitHere46","1826046splitHere46","for Java"
"2260splitHere46","1826046splitHere46","n"
"2261splitHere46","1826336splitHere46","jdbc:oracle:thin:@theserver:1521/mydb<newline46mondego>"
"2262splitHere46","1826353splitHere46","ClassWriter cw2 = new ClassWriter(cr2, 0);<newline46mondego> ClassAdapter checker = new CheckClassAdapter(cw2);<newline46mondego>"
"2263splitHere46","1826353splitHere46","ClassWriter cw2 = new ClassWriter(cr2, 0);<newline46mondego> ClassAdapter checker = new CheckClassAdapter(cw);<newline46mondego>"
"2264splitHere46","1826403splitHere46","ArrayDescriptor arrayDescriptor = ArrayDescriptor.createDescriptor(<doubleQuotes46>KnownLanguages<doubleQuotes46>, connection);<newline46mondego>"
"2265splitHere46","1827055splitHere46","ServletRequest#getLocalXXX()"
"2266splitHere46","1827055splitHere46","ServletRequest#getLocalName()"
"2267splitHere46","1827055splitHere46","ServletRequest#getLocalAddr()"
"2268splitHere46","1827055splitHere46","ServletRequest#getLocalPort()"
"2269splitHere46","1827116splitHere46","String text = <doubleQuotes46>Pubblichiamo la presentazione di IBM riguardante DB2 per i vari sistemi operativi<doubleQuotes46><newline46mondego>	+<doubleQuotes46>Linux, UNIX e Windows.\r\n\r\nQuesto documento sta sulla piattaforma KM e lo potete<doubleQuotes46><newline46mondego>	+<doubleQuotes46>scaricare a questo <a href=\'https://sfkm.griffon.local/sites/BSF%20KM/BSF/CC%20T/Specifiche/Eventi2008/IBM%20DB2%20for%20Linux,%20UNIX%20e%20Windows.pdf\' target=blank>link</a>.<doubleQuotes46>;<newline46mondego><newline46mondego>TextExtractor te = new TextExtractor(new Source(text)){<newline46mondego>	@Override<newline46mondego>	public boolean excludeElement(StartTag startTag) {<newline46mondego>		return startTag.getName() != HTMLElementName.A;<newline46mondego>	}<newline46mondego>};<newline46mondego>System.out.println(te.toString());<newline46mondego>"
"2270splitHere46","1827233splitHere46","buildr"
"2271splitHere46","1827233splitHere46","compile.with()"
"2272splitHere46","1827233splitHere46","lib"
"2273splitHere46","1827233splitHere46","compile.with Dir['lib/*.jar'] <newline46mondego>"
"2274splitHere46","1827233splitHere46","buildfile"
"2275splitHere46","1827233splitHere46","buildr"
"2276splitHere46","1827320splitHere46","java.net.NetworkInterface.getNetworkInterfaces()"
"2277splitHere46","1827320splitHere46","getInetAddresses()"
"2278splitHere46","1827448splitHere46","@WebServiceProvider(portName = <doubleQuotes46>Port<doubleQuotes46>, serviceName = <doubleQuotes46>Service<doubleQuotes46>, targetNamespace = <doubleQuotes46>tns<doubleQuotes46>,                                                                                                        wsdlLocation = <doubleQuotes46>/wsdls/x.wsdl<doubleQuotes46>)<newline46mondego>@BindingType(value = <doubleQuotes46>http://schemas.xmlsoap.org/wsdl/soap/http<doubleQuotes46>)<newline46mondego>@ServiceMode(value = javax.xml.ws.Service.Mode.MESSAGE)<newline46mondego>public class ServiceProvider implements Provider<SOAPMessage><newline46mondego>"
"2279splitHere46","1827448splitHere46","@WebService(portName = <doubleQuotes46>Port<doubleQuotes46>, serviceName = <doubleQuotes46>Service<doubleQuotes46>, targetNamespace = <doubleQuotes46>tns<doubleQuotes46>,<newline46mondego>wsdlLocation = <doubleQuotes46>/wsdls/x.wsdl<doubleQuotes46>, endpointInterface = <doubleQuotes46>tns.PortType<doubleQuotes46>)<newline46mondego>@BindingType(<doubleQuotes46>http://schemas.xmlsoap.org/wsdl/soap/http<doubleQuotes46>)<newline46mondego>public class ServicePort implements PortType<newline46mondego>"
"2280splitHere46","1827541splitHere46","ConfigurableApplicationContext"
"2281splitHere46","1827541splitHere46","AbstractApplicationContext"
"2282splitHere46","1827541splitHere46","ApplicationContext ctx = ...;<newline46mondego>if (ctx instanceof ConfigurableApplicationContext) {<newline46mondego>    ((ConfigurableApplicationContext)ctx).registerShutdownHook();<newline46mondego>}<newline46mondego>"
"2283splitHere46","1827541splitHere46","((ConfigurableApplicationContext)ctx).close()"
"2284splitHere46","1827541splitHere46","Runtime.getRuntime().addShutdownHook(new Thread() {<newline46mondego>    public void run(){<newline46mondego>       if (ctx instanceof ConfigurableApplicationContext) {<newline46mondego>           ((ConfigurableApplicationContext)ctx).close();<newline46mondego>       }<newline46mondego>    }<newline46mondego> });<newline46mondego>"
"2285splitHere46","1827614splitHere46","Hyperlink myLink = new Hyperlink(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>myLink.addClickHandler(new ClickHandler() {<newline46mondego>  @Override<newline46mondego>  public void onClick(ClickEvent event) {<newline46mondego>    String currentToken = History.getToken();<newline46mondego>    String newToken = ((Hyperlink) event.getSource()).getTargetHistoryToken();<newline46mondego>    if (currentToken == newToken) {<newline46mondego>      History.fireCurrentHistoryState();<newline46mondego>    }<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"2286splitHere46","1827623splitHere46","<class name=<doubleQuotes46>Payment<doubleQuotes46> table=<doubleQuotes46>PAYMENT<doubleQuotes46>><newline46mondego>    <id name=<doubleQuotes46>id<doubleQuotes46> type=<doubleQuotes46>long<doubleQuotes46> column=<doubleQuotes46>PAYMENT_ID<doubleQuotes46>><newline46mondego>        <generator class=<doubleQuotes46>native<doubleQuotes46>/><newline46mondego>    </id><newline46mondego>    <discriminator column=<doubleQuotes46>PAYMENT_TYPE<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>amount<doubleQuotes46> column=<doubleQuotes46>AMOUNT<doubleQuotes46>/><newline46mondego>    ...<newline46mondego>    <subclass name=<doubleQuotes46>CreditCardPayment<doubleQuotes46> discriminator-value=<doubleQuotes46>CREDIT<doubleQuotes46>><newline46mondego>        <join table=<doubleQuotes46>CREDIT_PAYMENT<doubleQuotes46>><newline46mondego>            <property name=<doubleQuotes46>creditCardType<doubleQuotes46> column=<doubleQuotes46>CCTYPE<doubleQuotes46>/><newline46mondego>            ...<newline46mondego>        </join><newline46mondego>    </subclass><newline46mondego>    <subclass name=<doubleQuotes46>CashPayment<doubleQuotes46> discriminator-value=<doubleQuotes46>CASH<doubleQuotes46>><newline46mondego>        ...<newline46mondego>    </subclass><newline46mondego></class><newline46mondego>"
"2287splitHere46","1827623splitHere46","@SecondaryTable annotation"
"2288splitHere46","1827623splitHere46","@Entity<newline46mondego>@Inheritance(strategy=InheritanceType.SINGLE_TABLE)<newline46mondego>@DiscriminatorColumn(name=<doubleQuotes46>PAYMENT_TYPE<doubleQuotes46>)<newline46mondego>@DiscriminatorValue(<doubleQuotes46>PAYMENT<doubleQuotes46>)<newline46mondego>public class Payment { ... }<newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>CREDIT<doubleQuotes46>)<newline46mondego>@SecondaryTable(name=<doubleQuotes46>CREDIT_PAYMENT<doubleQuotes46>, pkJoinColumns={<newline46mondego>    @PrimaryKeyJoinColumn(name=<doubleQuotes46>payment_id<doubleQuotes46>, referencedColumnName=<doubleQuotes46>id<doubleQuotes46>)<newline46mondego>)<newline46mondego>public class CreditCardPayment extends Payment { ... }<newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>CASH<doubleQuotes46>)<newline46mondego>public class CashPayment extends Payment { ... }<newline46mondego>"
"2289splitHere46","1827628splitHere46","java.awt.geom.RoundRectangle2D"
"2290splitHere46","1827628splitHere46","public void paint(Graphics g) {<newline46mondego>    Graphics2D g2d = (Graphics2D) g;<newline46mondego>    RoundRectangle2D rr = new RoundRectangle2D.Float(50, 50, 200, 100, 10, 10);<newline46mondego>    g2d.draw(rr);<newline46mondego>}<newline46mondego>"
"2291splitHere46","1827732splitHere46","HttpServeletResponse#setCharacterEncoding()"
"2292splitHere46","1827732splitHere46","#setContentType()"
"2293splitHere46","1827732splitHere46","@page"
"2294splitHere46","1827732splitHere46","c:out"
"2295splitHere46","1827732splitHere46","c:out"
"2296splitHere46","1827732splitHere46","String input = <doubleQuotes46><script>alert('XSS');</script><doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego><p><c:out value=<doubleQuotes46>${input}<doubleQuotes46> /></p> <!-- works fine, no alert, just escaped. --><newline46mondego><p>${input}</p> <!-- JS get interpreted and executed! XSS! --><newline46mondego>"
"2297splitHere46","1827732splitHere46","String username = view.getField(<doubleQuotes46>username<doubleQuotes46>, REQUIRED, MINLENGTH(3));<newline46mondego>String email = view.getField(<doubleQuotes46>email<doubleQuotes46>, REQUIRED, EMAIL);<newline46mondego>Integer age = view.getField(<doubleQuotes46>age<doubleQuotes46>, Integer.class, NUMBER);<newline46mondego><newline46mondego><newline46mondego>// ...<newline46mondego><newline46mondego><newline46mondego>public String getField(String name, Validator... validators) {<newline46mondego>    return getField(name, String.class, validators);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public <T extends Object> T getField(String name, Class<T> type, Validator... validators) {<newline46mondego>    String value = request.getParameter(name);<newline46mondego>    return validateAndConvert(name, value, type, validators);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>private <T extends Object> T validateAndConvert<newline46mondego>    (String name, String value, Class<T> type, Validator... validators)<newline46mondego>{<newline46mondego>    value = (value != null && !value.trim().isEmpty()) ? value.trim() : null;<newline46mondego>    try {<newline46mondego>        for (Validator validator : validators) {<newline46mondego>            validator.validate(value);<newline46mondego>        }<newline46mondego>    } catch (ValidatorException e) {<newline46mondego>        setError(name, e.getMessage());<newline46mondego>    }<newline46mondego>    return (value != null) ? Converter.convert(value, type) : null;<newline46mondego>}<newline46mondego>"
"2298splitHere46","1827792splitHere46","System.in"
"2299splitHere46","1827792splitHere46","String[]"
"2300splitHere46","1827792splitHere46","main"
"2301splitHere46","1828035splitHere46","HSSFWorkbook wb = ...;<newline46mondego>DataFormat format = wb.createDataFormat();<newline46mondego><newline46mondego>HSSFCellStyle cellStyle = wb.createCellStyle();<newline46mondego>style.setDataFormat(format.getFormat(<doubleQuotes46>@<doubleQuotes46>)); // or <doubleQuotes46>text<doubleQuotes46><newline46mondego>cell.setCellStyle(cellStyle);<newline46mondego>"
"2302splitHere46","1828551splitHere46","<exec>"
"2303splitHere46","1828551splitHere46","outputproperty"
"2304splitHere46","1828551splitHere46","errorproperty"
"2305splitHere46","1828551splitHere46","resultproperty"
"2306splitHere46","1828551splitHere46","<exec command=<doubleQuotes46>python some-python-script-that-returns-true-or-false-strings-to-stout.py<doubleQuotes46><newline46mondego>      outputproperty=<doubleQuotes46>myout<doubleQuotes46> resultproperty=<doubleQuotes46>myresult<doubleQuotes46>/><newline46mondego><if><newline46mondego>  <equals arg1=<doubleQuotes46>${myresult}<doubleQuotes46> arg2=<doubleQuotes46>1<doubleQuotes46> /><newline46mondego>  <then><newline46mondego>    <echo message=<doubleQuotes46>I did sometheing<doubleQuotes46> /><newline46mondego>  </then><newline46mondego>  <else><newline46mondego>    <echo message=<doubleQuotes46>I did something else<doubleQuotes46> /><newline46mondego>  </else><newline46mondego></if><newline46mondego>"
"2307splitHere46","1828808splitHere46","applicationContext.xml"
"2308splitHere46","1828808splitHere46","xmlns:jaxws=<doubleQuotes46>http://cxf.apache.org/jaxws<doubleQuotes46>"
"2309splitHere46","1828808splitHere46","<beans>"
"2310splitHere46","1828808splitHere46","http://cxf.apache.org/core<newline46mondego>        http://cxf.apache.org/schemas/core.xsd<newline46mondego>        http://cxf.apache.org/jaxws<newline46mondego>        http://cxf.apache.org/schemas/jaxws.xsd<newline46mondego>"
"2311splitHere46","1828808splitHere46","schemaLocation"
"2312splitHere46","1828808splitHere46","<!-- Loading CXF modules --><newline46mondego><import resource=<doubleQuotes46>classpath:META-INF/cxf/cxf.xml<doubleQuotes46> /><newline46mondego><import resource=<doubleQuotes46>classpath:META-INF/cxf/cxf-extension-soap.xml<doubleQuotes46> /><newline46mondego><import resource=<doubleQuotes46>classpath:META-INF/cxf/cxf-servlet.xml<doubleQuotes46> /><newline46mondego>"
"2313splitHere46","1828808splitHere46","<jaxws:endpoint id=<doubleQuotes46>MyWebService<doubleQuotes46> implementor=<doubleQuotes46>#MyWebServiceImpl<doubleQuotes46><newline46mondego>    address=<doubleQuotes46>/myWebServiceAddress<doubleQuotes46> /><newline46mondego>"
"2314splitHere46","1828808splitHere46","#MyWebServiceImpl"
"2315splitHere46","1828808splitHere46","http://yourhost/cxfuri/myWebServiceAddress"
"2316splitHere46","1828836splitHere46","// You might just be able to use an existing Point depending on what you<newline46mondego>// want to do with the position<newline46mondego>class Position {<newline46mondego>  int x;<newline46mondego>  int y;<newline46mondego><newline46mondego>  // implementations of hashCode() + equals()<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2317splitHere46","1828836splitHere46","Set<Position> positions = new HashSet<Position>();<newline46mondego>positions.add(new Position(3,4));<newline46mondego>positions.add(new Position(5,6)); // and so on<newline46mondego>"
"2318splitHere46","1828836splitHere46","positions.contains(new Point(2,1)); // returns false<newline46mondego>positions.contains(new Point(3,4)); // returns true<newline46mondego>"
"2319splitHere46","1828840splitHere46","import java.net.URL;<newline46mondego>import java.security.SecureRandom;<newline46mondego>import java.security.cert.CertificateException;<newline46mondego>import java.security.cert.X509Certificate;<newline46mondego>import javax.net.ssl.HostnameVerifier;<newline46mondego>import javax.net.ssl.HttpsURLConnection;<newline46mondego>import javax.net.ssl.KeyManager;<newline46mondego>import javax.net.ssl.SSLContext;<newline46mondego>import javax.net.ssl.SSLSession;<newline46mondego>import javax.net.ssl.TrustManager;<newline46mondego>import javax.net.ssl.X509TrustManager;<newline46mondego><newline46mondego>public class SSLTest {<newline46mondego><newline46mondego>    public static void main(String [] args) throws Exception {<newline46mondego>        // configure the SSLContext with a TrustManager<newline46mondego>        SSLContext ctx = SSLContext.getInstance(<doubleQuotes46>TLS<doubleQuotes46>);<newline46mondego>        ctx.init(new KeyManager[0], new TrustManager[] {new DefaultTrustManager()}, new SecureRandom());<newline46mondego>        SSLContext.setDefault(ctx);<newline46mondego><newline46mondego>        URL url = new URL(<doubleQuotes46>https://mms.nw.ru<doubleQuotes46>);<newline46mondego>        HttpsURLConnection conn = (HttpsURLConnection) url.openConnection();<newline46mondego>        conn.setHostnameVerifier(new HostnameVerifier() {<newline46mondego>            @Override<newline46mondego>            public boolean verify(String arg0, SSLSession arg1) {<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        });<newline46mondego>        System.out.println(conn.getResponseCode());<newline46mondego>        conn.disconnect();<newline46mondego>    }<newline46mondego><newline46mondego>    private static class DefaultTrustManager implements X509TrustManager {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {}<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void checkServerTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {}<newline46mondego><newline46mondego>        @Override<newline46mondego>        public X509Certificate[] getAcceptedIssuers() {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2320splitHere46","1829060splitHere46","g.drawImage(img, 0, 0, null);<newline46mondego>"
"2321splitHere46","1829060splitHere46","g.drawImage(img, 0, 0, this);<newline46mondego>"
"2322splitHere46","1829140splitHere46","ExecutorService"
"2323splitHere46","1829140splitHere46","<T> T invokeAny(Collection<? extends Callable<T>> tasks)<newline46mondego>            throws InterruptedException,<newline46mondego>                   ExecutionException<newline46mondego>"
"2324splitHere46","1829140splitHere46","ExecutorService"
"2325splitHere46","1829140splitHere46","<T> T invokeAny(Collection<Callable<T>> tasks)<newline46mondego>            throws InterruptedException,<newline46mondego>                   ExecutionException<newline46mondego>"
"2326splitHere46","1829297splitHere46","ThreadMXBean tm = ManagementFactory.getThreadMXBean();<newline46mondego>long cpuTime = tm.getCurrentThreadCpuTime();<newline46mondego>"
"2327splitHere46","1829433splitHere46","String x = 'c'+<doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"2328splitHere46","1829433splitHere46","String.valueOf('c');<newline46mondego>"
"2329splitHere46","1829438splitHere46","open()"
"2330splitHere46","1829438splitHere46","// Added two lines.<newline46mondego>DataLine.Info info = new DataLine.Info( SourceDataLine.class, audioFormat );<newline46mondego>SourceDataLine dataLine = (SourceDataLine) AudioSystem.getLine( info );<newline46mondego>dataLine.open();<newline46mondego>// Adjust the volume on the output line.<newline46mondego>if( dataLine.isControlSupported( FloatControl.Type.MASTER_GAIN)) {<newline46mondego>    // If inside this if, the Master_Gain must be supported. Yes?<newline46mondego>    FloatControl volume = (FloatControl) dataLine.getControl(FloatControl.Type.MASTER_GAIN);<newline46mondego>    // This line throws an exception. <doubleQuotes46>Master_Gain not supported<doubleQuotes46><newline46mondego>    volume.setValue( 100.0F );<newline46mondego>}<newline46mondego>"
"2331splitHere46","1829583splitHere46","getBundle"
"2332splitHere46","1829583splitHere46","getBundle(String, ResourceBundle.Control)"
"2333splitHere46","1829583splitHere46","Control"
"2334splitHere46","1829770splitHere46","SimluationClass<newline46mondego>{<newline46mondego>    public int startSim()<newline46mondego>    {<newline46mondego>      ...<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class SimulationView<newline46mondego>{<newline46mondego><newline46mondego>    SimulationClass sim = new SimulationClass();      <newline46mondego><newline46mondego>    private void init()<newline46mondego>    {<newline46mondego><newline46mondego>      JButton button = new JButton(<doubleQuotes46>Start<doubleQuotes46>);<newline46mondego>      button.addActionListener(new ActionListener() {<newline46mondego>          void actionPerformed(...) <newline46mondego>          {<newline46mondego>               sim.startSim()<newline46mondego>          }<newline46mondego>          });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2335splitHere46","1829823splitHere46","new SomeOutputStream()"
"2336splitHere46","1829823splitHere46","new FileOutputStream(<doubleQuotes46>c:/foo.txt<doubleQuotes46>)"
"2337splitHere46","1829823splitHere46","IllegalStateException"
"2338splitHere46","1829823splitHere46","IllegalStateException"
"2339splitHere46","1829834splitHere46","for(int idx=(len-1); idx>=0; idx--) {...}<newline46mondego>"
"2340splitHere46","1829915splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.border.*;<newline46mondego><newline46mondego>public class BoxExample extends JFrame<newline46mondego>{<newline46mondego>    public BoxExample()<newline46mondego>    {<newline46mondego>    	Box box = Box.createHorizontalBox();<newline46mondego>    	box.setBorder( new EmptyBorder(5, 5, 5, 5) );<newline46mondego>    	Dimension size = new Dimension(100, 25);<newline46mondego><newline46mondego>    	box.add( createButton(<doubleQuotes46>Button1<doubleQuotes46>, size) );<newline46mondego>    	box.add( createStrut() );<newline46mondego>    	box.add( createButton(<doubleQuotes46>Button2<doubleQuotes46>, size) );<newline46mondego>    	box.add( createStrut() );<newline46mondego>    	box.add( createButton(<doubleQuotes46>Button3<doubleQuotes46>, size) );<newline46mondego>    	box.add( createStrut() );<newline46mondego>    	box.add( createButton(<doubleQuotes46>Button4<doubleQuotes46>, size) );<newline46mondego><newline46mondego>    	add( box );<newline46mondego>    }<newline46mondego><newline46mondego>    private JButton createButton(String text, Dimension size)<newline46mondego>    {<newline46mondego>    	JButton button = new JButton(text);<newline46mondego>    	button.setPreferredSize( size );<newline46mondego>    	button.setMinimumSize( size );<newline46mondego>    	button.setMaximumSize( size );<newline46mondego>    	return button;<newline46mondego>    }<newline46mondego><newline46mondego>    private Component createStrut()<newline46mondego>    {<newline46mondego>    	JComponent component = (JComponent)Box.createHorizontalStrut(5);<newline46mondego>    	component.setMinimumSize(new Dimension(0, 0));<newline46mondego>    	component.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));<newline46mondego>    	return component;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	BoxExample frame = new BoxExample();<newline46mondego>    	frame.setDefaultCloseOperation( EXIT_ON_CLOSE );<newline46mondego>    	frame.pack();<newline46mondego>    	frame.setLocationRelativeTo( null );<newline46mondego>    	frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2341splitHere46","1829960splitHere46","<Match><newline46mondego>   <Class name=<doubleQuotes46>com.mycompany.Foo<doubleQuotes46> /><newline46mondego>   <Method name=<doubleQuotes46>bar<doubleQuotes46> /><newline46mondego>   <Bug pattern=<doubleQuotes46>DLS_DEAD_STORE_OF_CLASS_LITERAL<doubleQuotes46> /><newline46mondego></Match><newline46mondego>"
"2342splitHere46","1829960splitHere46","SuppressWarnings"
"2343splitHere46","1829960splitHere46","@edu.umd.cs.findbugs.annotations.SuppressWarnings(<newline46mondego>    value=<doubleQuotes46>HE_EQUALS_USE_HASHCODE<doubleQuotes46>, <newline46mondego>    justification=<doubleQuotes46>I know what I'm doing<doubleQuotes46>)<newline46mondego>"
"2344splitHere46","1830253splitHere46","ArrayList"
"2345splitHere46","1830399splitHere46","import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.io.*;<newline46mondego>public class Main extends JFrame implements ActionListener {<newline46mondego>    private int[] intArray = new int[10000];<newline46mondego>    private int numOfInts = 0;<newline46mondego>    private int avg = 0;<newline46mondego><newline46mondego>    protected JButton avgBtn;<newline46mondego>    protected JTextField indexEntry;<newline46mondego>    protected JLabel instructions;<newline46mondego>    protected JPanel resultsPanel;<newline46mondego><newline46mondego>    //constructor - construct the components here and do the initializations<newline46mondego>    public Main(){<newline46mondego>        //create main frame 	<newline46mondego>    	this.setTitle(<doubleQuotes46>Section V, question 2<doubleQuotes46>);<newline46mondego>    	this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    	this.setSize(350, 250);<newline46mondego>    	this.setLayout(new GridLayout(4, 1));<newline46mondego>    	//this.setVisible(true);<newline46mondego><newline46mondego>    	//create instruction label and add to frame<newline46mondego>    	instructions = new JLabel(<doubleQuotes46>Follow the instructions on the exam to use this program<doubleQuotes46>);<newline46mondego>    	this.add(instructions);<newline46mondego><newline46mondego>    	//create textfield for index entry and add to frame<newline46mondego>    	indexEntry = new JTextField();<newline46mondego>    	this.add(indexEntry);<newline46mondego><newline46mondego>    	//create button for average and add to frame<newline46mondego>    	avgBtn = new JButton(<doubleQuotes46>Click for Average<doubleQuotes46>);<newline46mondego>    	this.add(avgBtn);<newline46mondego>    	avgBtn.addActionListener(this);<newline46mondego><newline46mondego>    	//create panel to display results and add to frame<newline46mondego>    	resultsPanel = new JPanel();<newline46mondego>    	resultsPanel.setBackground(Color.BLUE);<newline46mondego>    	this.add(resultsPanel);<newline46mondego><newline46mondego>    	//read in from file<newline46mondego>    	readFromFile();<newline46mondego><newline46mondego>    	//compute average<newline46mondego>    	computeAverage();<newline46mondego>    	System.out.println(avg);<newline46mondego>    }<newline46mondego><newline46mondego>    private void readFromFile() {<newline46mondego>    	try {<newline46mondego>    		// Open the file that is the first<newline46mondego>    		// command line parameter<newline46mondego>    		FileInputStream fstream = new FileInputStream(<doubleQuotes46>numbers.dat<doubleQuotes46>);<newline46mondego>    		// Get the object of DataInputStream<newline46mondego>    		DataInputStream in = new DataInputStream(fstream);<newline46mondego>    		BufferedReader br = new BufferedReader(new InputStreamReader(in));<newline46mondego>    		String strLine;<newline46mondego>    		//Read File Line By Line<newline46mondego>    		int i = 0;<newline46mondego>    		while ((strLine = br.readLine()) != null) {<newline46mondego>    			// Print the content on the console<newline46mondego>    			System.out.println (strLine);<newline46mondego>    			intArray[i] = Integer.parseInt(strLine);<newline46mondego>    			numOfInts++;<newline46mondego>    			i++;<newline46mondego>    		}<newline46mondego>    		//Close the input stream<newline46mondego>    		in.close();<newline46mondego>    		System.out.println (<doubleQuotes46>numOfInts = <doubleQuotes46> + numOfInts);<newline46mondego>    	}<newline46mondego>    	catch (Exception e) {<newline46mondego>    		//Catch exception if any<newline46mondego>    		System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>    	}<newline46mondego>    }<newline46mondego>    private void computeAverage() {<newline46mondego>    	int sum = 0;<newline46mondego>    	for (int i = 0; i < numOfInts; i++)<newline46mondego>    	sum += intArray[i];<newline46mondego>    	avg = sum/numOfInts;<newline46mondego>    	//return avg;<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>    	if(e.getSource() == avgBtn) {<newline46mondego>    		computeAverage();<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Main m = new Main();<newline46mondego>        m.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2346splitHere46","1830674splitHere46","class MyPanel extends JPanel {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.drawString(Integer.toString(avg), 75, 75);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2347splitHere46","1830674splitHere46","//event handling<newline46mondego>public void actionPerformed(ActionEvent e) {<newline46mondego>    if (e.getSource() == avgBtn) {<newline46mondego>        computeAverage();<newline46mondego>        panel.repaint();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2348splitHere46","1830783splitHere46","InputStream"
"2349splitHere46","1830783splitHere46","OutputStream"
"2350splitHere46","1830783splitHere46","InputStream"
"2351splitHere46","1830783splitHere46","OutputStream"
"2352splitHere46","1830783splitHere46","InputStream instr"
"2353splitHere46","1830783splitHere46","OutputStream osstr"
"2354splitHere46","1830783splitHere46","int i;<newline46mondego><newline46mondego>while ((i = instr.read()) != -1) {<newline46mondego>    osstr.write(i);<newline46mondego>}<newline46mondego><newline46mondego>instr.close();<newline46mondego>osstr.close();<newline46mondego>"
"2355splitHere46","1830944splitHere46","method_missing"
"2356splitHere46","1831155splitHere46","javac -cp $TOMCAT_HOME/lib/servlet-api.jar *.java<newline46mondego>"
"2357splitHere46","1831822splitHere46","@ContextConfiguration"
"2358splitHere46","1831822splitHere46","@ContextConfiguration(locations={<doubleQuotes46>/etc/ws/applicationContext.xml<doubleQuotes46>})"
"2359splitHere46","1831822splitHere46","@ContextConfiguration(locations={<doubleQuotes46>classpath:applicationContext.xml<doubleQuotes46>})"
"2360splitHere46","1831828splitHere46","src/org/json/<newline46mondego>"
"2361splitHere46","1831913splitHere46","Display display = new Display();<newline46mondego>Shell shell = new Shell(display);<newline46mondego>shell.setLayout(new GridLayout());<newline46mondego>Label label = new Label(shell, SWT.NONE);<newline46mondego>label.setText(<doubleQuotes46>I am italic<doubleQuotes46>);<newline46mondego>FontData fontData = label.getFont().getFontData()[0];<newline46mondego>Font font = new Font(display, new FontData(fontData.getName(), fontData<newline46mondego>    .getHeight(), SWT.ITALIC));<newline46mondego>label.setFont(font);<newline46mondego>shell.open();<newline46mondego>while (!shell.isDisposed()) {<newline46mondego>  if (!display.readAndDispatch())<newline46mondego>    display.sleep();<newline46mondego>}<newline46mondego>font.dispose();<newline46mondego>display.dispose();<newline46mondego>"
"2362splitHere46","1831997splitHere46","-Dcoldfusion.disablejsafe=true"
"2363splitHere46","1831997splitHere46","jvm.config"
"2364splitHere46","1832022splitHere46",".java"
"2365splitHere46","1832022splitHere46",".class"
"2366splitHere46","1832022splitHere46",".java"
"2367splitHere46","1832022splitHere46","aa.a(ab)"
"2368splitHere46","1832022splitHere46","employee.setName(name)"
"2369splitHere46","1832045splitHere46","<h:outputText value=<doubleQuotes46>#{debCredTab.rows eq null}<doubleQuotes46> /><newline46mondego>"
"2370splitHere46","1832253splitHere46","if (invalidInput())<newline46mondego>         new IllegalArgumentException(<doubleQuotes46>Invalid argument <doubleQuotes46> + x + <doubleQuotes46>, expected ...<doubleQuotes46>);<newline46mondego>"
"2371splitHere46","1832253splitHere46","public class MyIllegalArgumentException extends IllegalArgumentException {  <newline46mondego>    public MyIllegalArgumentException(Object arg...) {    ....  } <newline46mondego>}<newline46mondego>"
"2372splitHere46","1832253splitHere46","if (invalidInput())<newline46mondego>         new IllegalArgumentException(<doubleQuotes46>Invalid argument <doubleQuotes46> + x + <doubleQuotes46>, expected ...<doubleQuotes46>, new MyContextException(a,b,c));<newline46mondego>"
"2373splitHere46","1832532splitHere46","String[] icons = { <doubleQuotes46>icon16.png<doubleQuotes46>, <doubleQuotes46>icon32.png<doubleQuotes46>, <doubleQuotes46>icon48.png<doubleQuotes46> };<newline46mondego>shell.setImages(getImages(icons));<newline46mondego>"
"2374splitHere46","1832588splitHere46","Date"
"2375splitHere46","1832588splitHere46","Date"
"2376splitHere46","1832588splitHere46","@Column(name = <doubleQuotes46>DATE_COLUMN<doubleQuotes46>)<newline46mondego>@Temporal(TemporalType.TIMESTAMP)<newline46mondego>private Date dateValue;<newline46mondego><newline46mondego>public Date getDate()<newline46mondego>{<newline46mondego>   return dateValue;<newline46mondego>}<newline46mondego>"
"2377splitHere46","1832588splitHere46","UtcTimestampAdapter"
"2378splitHere46","1832588splitHere46","public class UtcTimestampAdapter extends XmlAdapter<XMLGregorianCalendar, Date><newline46mondego>{<newline46mondego>   @Override<newline46mondego>   public XMLGregorianCalendar marshal(Date date) throws Exception<newline46mondego>   {<newline46mondego>      GregorianCalendar calendar = new GregorianCalendar();<newline46mondego>      calendar.setTime(date);<newline46mondego><newline46mondego>      DatatypeFactory dataTypeFactory = DatatypeFactory.newInstance();<newline46mondego>      XMLGregorianCalendar xmlCalendar = <newline46mondego>         dataTypeFactory.newXMLGregorianCalendar(calendar);<newline46mondego><newline46mondego>      //Reset time zone to UTC<newline46mondego>      xmlCalendar.setTimezone(0);<newline46mondego><newline46mondego>      return xmlCalendar;<newline46mondego>   }<newline46mondego><newline46mondego>   @Override<newline46mondego>   public Date unmarshal(XMLGregorianCalendar calendar) throws Exception<newline46mondego>   {<newline46mondego>      return calendar.toGregorianCalendar().getTime();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"2379splitHere46","1832588splitHere46","Data"
"2380splitHere46","1832588splitHere46","@XmlJavaTypeAdapter(value = UtcTimestampAdapter.class, type = Date.class)<newline46mondego>@XmlSchemaType(name = <doubleQuotes46>dateTime<doubleQuotes46>, type = XMLGregorianCalendar.class)<newline46mondego>package com.companyname.modulename;<newline46mondego>"
"2381splitHere46","1832722splitHere46","darn.namePrompt.setText(<doubleQuotes46>Congradulations,<newline46mondego>   Your mind is Awesome!!!<doubleQuotes46>);<newline46mondego>"
"2382splitHere46","1832722splitHere46","darn.namePrompt.setText(<doubleQuotes46>Congradulations,<doubleQuotes46> + <newline46mondego>    <doubleQuotes46> Your mind is Awesome!!!<doubleQuotes46>);<newline46mondego>"
"2383splitHere46","1832722splitHere46","import javax.swing.*;<newline46mondego><newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>public class AlbertCardonaProg7 extends JFrame {<newline46mondego>	private static final int WIDTH = 350;<newline46mondego>	private static final int HEIGHT = 250;<newline46mondego>	private static final String[] colorValues = { <doubleQuotes46>red<doubleQuotes46>, <doubleQuotes46>white<doubleQuotes46>, <doubleQuotes46>yellow<doubleQuotes46>,<newline46mondego>		<doubleQuotes46>green<doubleQuotes46>, <doubleQuotes46>blue<doubleQuotes46> };<newline46mondego><newline46mondego>	private final JLabel[] inputLabels = new JLabel[colorValues.length];<newline46mondego>	private final JTextField[] inputFields = new JTextField[colorValues.length];<newline46mondego>	private int index = 0;<newline46mondego><newline46mondego>	public AlbertCardonaProg7() {<newline46mondego>		//Create the UI controls<newline46mondego>		for (int i = 0; i < colorValues.length; i++) {<newline46mondego>			inputLabels[i] = new JLabel(<doubleQuotes46>Input color number <doubleQuotes46> + i + <doubleQuotes46>:<doubleQuotes46>);<newline46mondego>			inputLabels[i].setVisible(false);<newline46mondego>			inputFields[i] = new JTextField(15);<newline46mondego>			inputFields[i].setVisible(false);<newline46mondego>			inputFields[i].addActionListener(new Listener());<newline46mondego><newline46mondego>			add(inputLabels[i]);<newline46mondego>			add(inputFields[i]);<newline46mondego>		}<newline46mondego><newline46mondego>		//Make the first set visible<newline46mondego>		inputLabels[0].setVisible(true);<newline46mondego>		inputFields[0].setVisible(true);<newline46mondego><newline46mondego>		setTitle(<doubleQuotes46>MEMORY GAME<doubleQuotes46>);<newline46mondego>		setSize(WIDTH, HEIGHT);<newline46mondego>		setLayout(new FlowLayout(FlowLayout.CENTER));<newline46mondego>		setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>		setVisible(true);<newline46mondego>	}<newline46mondego><newline46mondego>	private class Listener implements ActionListener {<newline46mondego>		public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>			if (inputFields[index].getText().equals(colorValues[index])) {<newline46mondego>				JOptionPane.showMessageDialog(null, <doubleQuotes46>Congratulations, you got the answer correct<doubleQuotes46>);<newline46mondego><newline46mondego>				//See if there are more controls to make visible<newline46mondego>				if (++index < colorValues.length) {<newline46mondego>					inputLabels[index].setVisible(true);<newline46mondego>					inputFields[index].setVisible(true);<newline46mondego>				}<newline46mondego>			} else {<newline46mondego>				JOptionPane.showMessageDialog(null,<newline46mondego>						<doubleQuotes46>Sorry, your answer is wrong<doubleQuotes46>, <doubleQuotes46>Error<doubleQuotes46>,<newline46mondego>						JOptionPane.ERROR_MESSAGE);<newline46mondego>			}<newline46mondego>		}<newline46mondego>	}<newline46mondego><newline46mondego>	public static void main(String[] args) {<newline46mondego>		String colors = <doubleQuotes46><doubleQuotes46>;<newline46mondego>		for (int i = 0; i < colorValues.length; i++) {<newline46mondego>			colors += colorValues[i] + <doubleQuotes46>  <doubleQuotes46>;<newline46mondego>		}<newline46mondego><newline46mondego>		JOptionPane.showMessageDialog(null, <doubleQuotes46>How good is your memory.\n<doubleQuotes46><newline46mondego>				+ <doubleQuotes46>See if you can memorize this sequence.\n\n<doubleQuotes46> + colors,<newline46mondego>				<doubleQuotes46>Message<doubleQuotes46>, JOptionPane.INFORMATION_MESSAGE);<newline46mondego><newline46mondego>		AlbertCardonaProg7 outBox = new AlbertCardonaProg7();<newline46mondego><newline46mondego>	}<newline46mondego>}<newline46mondego>"
"2384splitHere46","1832722splitHere46","import javax.swing.*;<newline46mondego><newline46mondego>import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>public class AlbertCardonaProg7 extends JFrame {<newline46mondego>    private static final int WIDTH = 350;<newline46mondego>    private static final int HEIGHT = 250;<newline46mondego>    private static final String[] colorValues = { <doubleQuotes46>red<doubleQuotes46>, <doubleQuotes46>white<doubleQuotes46>, <doubleQuotes46>yellow<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>green<doubleQuotes46>, <doubleQuotes46>blue<doubleQuotes46> };<newline46mondego><newline46mondego>    private final JLabel[] inputLabels = new JLabel[colorValues.length];<newline46mondego>    private final JTextField[] inputFields = new JTextField[colorValues.length];<newline46mondego><newline46mondego>    public AlbertCardonaProg7() {<newline46mondego>        //Create the UI controls<newline46mondego>        for (int i = 0; i < colorValues.length; i++) {<newline46mondego>            inputLabels[i] = new JLabel(<doubleQuotes46>Input color number <doubleQuotes46> + i + <doubleQuotes46>:<doubleQuotes46>);<newline46mondego>            inputFields[i] = new JTextField(15);<newline46mondego>            inputFields[i].addActionListener(new Listener());<newline46mondego><newline46mondego>            add(inputLabels[i]);<newline46mondego>            add(inputFields[i]);<newline46mondego>        }<newline46mondego><newline46mondego>        setTitle(<doubleQuotes46>MEMORY GAME<doubleQuotes46>);<newline46mondego>        setSize(WIDTH, HEIGHT);<newline46mondego>        setLayout(new FlowLayout(FlowLayout.CENTER));<newline46mondego>        setDefaultCloseOperation(EXIT_ON_CLOSE);<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private class Listener implements ActionListener {<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego><newline46mondego>            // See if there are any wrong answers<newline46mondego>            boolean correct = true;<newline46mondego>            for(int i = 0; i < colorValues.length; i++) {<newline46mondego>                if (!inputFields[i].getText().equals(colorValues[i])) {<newline46mondego>                    correct = false;<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            if(correct) {<newline46mondego>                JOptionPane.showMessageDialog(null, <newline46mondego>                        <doubleQuotes46>Congratulations, you got the answer correct<doubleQuotes46>);<newline46mondego>            } else {<newline46mondego>                JOptionPane.showMessageDialog(null,<newline46mondego>                        <doubleQuotes46>Sorry, your answer is wrong<doubleQuotes46>, <doubleQuotes46>Error<doubleQuotes46>,<newline46mondego>                        JOptionPane.ERROR_MESSAGE);<newline46mondego><newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String colors = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        for (int i = 0; i < colorValues.length; i++) {<newline46mondego>            colors += colorValues[i] + <doubleQuotes46>  <doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        JOptionPane.showMessageDialog(null, <doubleQuotes46>How good is your memory.\n<doubleQuotes46><newline46mondego>                + <doubleQuotes46>See if you can memorize this sequence.\n\n<doubleQuotes46> + colors,<newline46mondego>                <doubleQuotes46>Message<doubleQuotes46>, JOptionPane.INFORMATION_MESSAGE);<newline46mondego><newline46mondego>        AlbertCardonaProg7 outBox = new AlbertCardonaProg7();<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2385splitHere46","1832734splitHere46","setAttribute"
"2386splitHere46","1832734splitHere46","getAttribute"
"2387splitHere46","1832734splitHere46","ServletContext"
"2388splitHere46","1832755splitHere46","DaoMediator"
"2389splitHere46","1832755splitHere46","DAO"
"2390splitHere46","1832980splitHere46","new String(<doubleQuotes46>..<doubleQuotes46>).intern()"
"2391splitHere46","1833120splitHere46","keyboardInput.readLine()"
"2392splitHere46","1833120splitHere46","return keyboardInput.readLine();<newline46mondego>"
"2393splitHere46","1833120splitHere46","readLine"
"2394splitHere46","1833120splitHere46","IOException"
"2395splitHere46","1833120splitHere46","public String getFlavour() throws IOException {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"2396splitHere46","1833120splitHere46","public static String getFlavour() {<newline46mondego>	BufferedReader keyboardInput = null;<newline46mondego>	try {<newline46mondego>		keyboardInput = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>		System.out.println(<doubleQuotes46> please enter your flavour ice cream<doubleQuotes46>);<newline46mondego>		// in this case, you don't need to declare this extra variable<newline46mondego>		// String flavour = keyboardInput.readLine();<newline46mondego>		// return flavour;<newline46mondego>		return keyboardInput.readLine();<newline46mondego>	} catch (IOException e) {<newline46mondego>		// handle this<newline46mondego>		e.printStackTrace();<newline46mondego>	}<newline46mondego>	return null;<newline46mondego>}<newline46mondego>"
"2397splitHere46","1833165splitHere46","System.out.println(System.getProperty(<doubleQuotes46>java.vm.name<doubleQuotes46>));<newline46mondego>"
"2398splitHere46","1833521splitHere46","foos"
"2399splitHere46","1833521splitHere46","foos"
"2400splitHere46","1833521splitHere46","foos"
"2401splitHere46","1833655splitHere46","public static int countAnnotationsInClass(Class<?> testClass, Class<?> annotation) {<newline46mondego>  // ...<newline46mondego>}<newline46mondego>"
"2402splitHere46","1833702splitHere46","<a href=<doubleQuotes46>http://java.sun.com/j2se/1.4.2/docs/api/java/net/Socket.html#bind%28java.net.SocketAddress%29<doubleQuotes46> rel=<doubleQuotes46>nofollow<doubleQuotes46>>bind()</a>"
"2403splitHere46","1833702splitHere46","<a href=<doubleQuotes46>http://en.wikipedia.org/wiki/Berkeley%5Fsockets#bind.28.29<doubleQuotes46> rel=<doubleQuotes46>nofollow<doubleQuotes46>>bind()</a>"
"2404splitHere46","1833726splitHere46","CONSTANT"
"2405splitHere46","1834363splitHere46","myTextField.setValue(new Float(<doubleQuotes46>555.55555<doubleQuotes46>));<newline46mondego>"
"2406splitHere46","1834467splitHere46","append<newline46mondego><newline46mondego>RealVector append(double d)<newline46mondego>Construct a vector by appending a double to this vector.<newline46mondego>Parameters:<newline46mondego>d - double to append.<newline46mondego>Returns:<newline46mondego>a new vector<newline46mondego>"
"2407splitHere46","1834467splitHere46","RealVector"
"2408splitHere46","1834467splitHere46","O(n^2)"
"2409splitHere46","1834467splitHere46","ArrayList<Double>"
"2410splitHere46","1834467splitHere46","RealVector"
"2411splitHere46","1834475splitHere46","JTextArea c = (JTextArea) (((JViewportView) (((JScrollPane) jTabbedPane1.getComponentAt(i)).getViewport()))).getView();<newline46mondego>"
"2412splitHere46","1834475splitHere46","TextArea"
"2413splitHere46","1834475splitHere46","ArrayList"
"2414splitHere46","1834475splitHere46","List<JTextArea> listAreas = new ArrayList<JTextArea>();<newline46mondego><newline46mondego>...<newline46mondego>JTextArea c = listAreas.get(i);<newline46mondego>"
"2415splitHere46","1834475splitHere46","JTextArea c = new JTextArea();<newline46mondego>jTabbedPane1.addTab(<doubleQuotes46>Title<doubleQuotes46>, new JScrollPane(c));<newline46mondego>listAreas.add(c);<newline46mondego>"
"2416splitHere46","1834600splitHere46","The format is not guaranteed to be the same in later releases. In particular the output associated with -XX:+PrintGCDetails is almost guaranteed to change in that it represents the current needs of JVM developers.<newline46mondego>"
"2417splitHere46","1834789splitHere46","java.util.logging.Handler"
"2418splitHere46","1834789splitHere46","class LogHandler extends Handler<newline46mondego>{<newline46mondego>    Level lastLevel = Level.FINEST;<newline46mondego><newline46mondego>    public Level  checkLevel() {<newline46mondego>        return lastLevel;<newline46mondego>    }    <newline46mondego><newline46mondego>    public void publish(LogRecord record) {<newline46mondego>        lastLevel = record.getLevel();<newline46mondego>    }<newline46mondego><newline46mondego>    public void close(){}<newline46mondego>    public void flush(){}<newline46mondego>}<newline46mondego>"
"2419splitHere46","1834789splitHere46","LogRecord"
"2420splitHere46","1834789splitHere46","java.util.logging.Logger"
"2421splitHere46","1834789splitHere46","LogHandler"
"2422splitHere46","1834789splitHere46","@Test tester() {<newline46mondego>    Logger logger = Logger.getLogger(<doubleQuotes46>my junit-test logger<doubleQuotes46>);<newline46mondego>    LogHandler handler = new LogHandler();<newline46mondego>    handler.setLevel(Level.ALL);<newline46mondego>    logger.setUseParentHandlers(false);<newline46mondego>    logger.addHandler(handler);<newline46mondego>    logger.setLevel(Level.ALL);<newline46mondego>"
"2423splitHere46","1834789splitHere46","setUseParentHandlers()"
"2424splitHere46","1834789splitHere46","libraryUnderTest.setLogger(logger);<newline46mondego>    methodUnderTest(true);  // see original question.<newline46mondego>    assertEquals(<doubleQuotes46>Log level as expected?<doubleQuotes46>, Level.INFO, handler.checkLevel() );<newline46mondego>}<newline46mondego>"
"2425splitHere46","1834789splitHere46","@Before"
"2426splitHere46","1834905splitHere46","maven-shade-plugin"
"2427splitHere46","1834905splitHere46","jar-with-dependencies"
"2428splitHere46","1834905splitHere46","pom.xml"
"2429splitHere46","1834905splitHere46","<plugin><newline46mondego>  <groupId>org.apache.maven.plugins</groupId><newline46mondego>  <artifactId>maven-assembly-plugin</artifactId><newline46mondego>  <configuration><newline46mondego>    <archive><newline46mondego>      <manifest><newline46mondego>        <mainClass>my.package.to.my.MainClass</mainClass><newline46mondego>      </manifest><newline46mondego>    </archive><newline46mondego>  </configuration><newline46mondego></plugin><newline46mondego>"
"2430splitHere46","1834905splitHere46","mvn assembly:assembly -DdescriptorId=jar-with-dependencies<newline46mondego>"
"2431splitHere46","1834905splitHere46","src/assembly/uberjar.xml"
"2432splitHere46","1834905splitHere46","<assembly><newline46mondego>  <id>uberjar</id><newline46mondego>  <formats><newline46mondego>    <format>jar</format><newline46mondego>  </formats><newline46mondego>  <includeBaseDirectory>false</includeBaseDirectory><newline46mondego>  <dependencySets><newline46mondego>    <dependencySet><newline46mondego>      <unpack>false</unpack><newline46mondego>      <scope>runtime</scope><newline46mondego>      <useProjectArtifact>false</useProjectArtifact><newline46mondego>    </dependencySet><newline46mondego>  </dependencySets><newline46mondego>  <fileSets><newline46mondego>    <fileSet><newline46mondego>      <directory>${project.build.outputDirectory}</directory><newline46mondego>      <outputDirectory>/</outputDirectory><newline46mondego>    </fileSet><newline46mondego>  </fileSets><newline46mondego></assembly><newline46mondego>"
"2433splitHere46","1834905splitHere46","Class-Path"
"2434splitHere46","1834905splitHere46","<plugin><newline46mondego>  <groupId>org.apache.maven.plugins</groupId><newline46mondego>  <artifactId>maven-assembly-plugin</artifactId><newline46mondego>  <configuration><newline46mondego>    <descriptors> <newline46mondego>      <descriptor>src/assembly/uberjar.xml</descriptor><newline46mondego>    </descriptors><newline46mondego>    <archive><newline46mondego>      <manifest><newline46mondego>        <mainClass>my.package.to.my.MainClass</mainClass><newline46mondego>        <addClasspath>true</addClasspath><newline46mondego>      </manifest><newline46mondego>    </archive><newline46mondego>  </configuration><newline46mondego>  <!--<newline46mondego>  <executions><newline46mondego>    <execution><newline46mondego>      <phase>package</phase><newline46mondego>      <goals><newline46mondego>        <goal>single</goal><newline46mondego>      </goals><newline46mondego>    </execution><newline46mondego>  </executions><newline46mondego>  --><newline46mondego></plugin><newline46mondego>"
"2435splitHere46","1834905splitHere46","mvn assembly:assembly"
"2436splitHere46","1834905splitHere46","executions"
"2437splitHere46","1834905splitHere46","package"
"2438splitHere46","1835377splitHere46","for (interface obj: myList) {<newline46mondego>   if(obj instanceof A)<newline46mondego>      doSomething((A) obj);<newline46mondego>   else if(obj instanceof B)<newline46mondego>      doSomething((B) obj);<newline46mondego>   else<newline46mondego>      doSomething(obj); // Calls the method receiving Interface<newline46mondego>}<newline46mondego>"
"2439splitHere46","1835377splitHere46","interface Interface {<newline46mondego>    void visit(OtherClass methodHolder);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class A implements Interface {<newline46mondego>    public void visit(OtherClass methodHolder) {<newline46mondego>        methodHolder.doSomething(this);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class B implements Interface {<newline46mondego>    public void visit(OtherClass methodHolder) {<newline46mondego>        methodHolder.doSomething(this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2440splitHere46","1835403splitHere46","final RowMapper managerMapper = new BeanPropertyRowMapper(Manager.class);<newline46mondego>    final RowMapper employeeMapper = new BeanPropertyRowMapper(Employee.class);<newline46mondego>    final RowMapper contractorMapper = new BeanPropertyRowMapper(Contractor.class);<newline46mondego><newline46mondego>    RowMapper rm = new RowMapper()<newline46mondego>    {<newline46mondego>        @Override<newline46mondego>        public Object mapRow(ResultSet rs, int rowNum)<newline46mondego>            throws SQLException<newline46mondego>        {<newline46mondego>            int employeeType = rs.getInt(<doubleQuotes46>type<doubleQuotes46>);<newline46mondego>            switch (employeeType)<newline46mondego>            {<newline46mondego>                case 1:<newline46mondego>                    return managerMapper.mapRow(rs, rowNum); <newline46mondego><newline46mondego>                case 2:<newline46mondego>                    return employeeMapper.mapRow(rs, rowNum);<newline46mondego><newline46mondego>                case 3:<newline46mondego>                    return contractorMapper.mapRow(rs, rowNum);<newline46mondego><newline46mondego>                default:<newline46mondego>                    break;<newline46mondego><newline46mondego>            }<newline46mondego>        }<newline46mondego>    };<newline46mondego>"
"2441splitHere46","1835529splitHere46","/* ____________________________________________________________________________<newline46mondego> * <newline46mondego> * File:    UnicodeBOMInputStream.java<newline46mondego> * Author:  Gregory Pakosz.<newline46mondego> * Date:    02 - November - 2005    <newline46mondego> * ____________________________________________________________________________<newline46mondego> */<newline46mondego>package com.stackoverflow.answer;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.PushbackInputStream;<newline46mondego><newline46mondego>/**<newline46mondego> * The <code>UnicodeBOMInputStream</code> class wraps any<newline46mondego> * <code>InputStream</code> and detects the presence of any Unicode BOM<newline46mondego> * (Byte Order Mark) at its beginning, as defined by<newline46mondego> * <a href=<doubleQuotes46>http://www.faqs.org/rfcs/rfc3629.html<doubleQuotes46>>RFC 3629 - UTF-8, a transformation format of ISO 10646</a><newline46mondego> * <newline46mondego> * <p>The<newline46mondego> * <a href=<doubleQuotes46>http://www.unicode.org/unicode/faq/utf_bom.html<doubleQuotes46>>Unicode FAQ</a><newline46mondego> * defines 5 types of BOMs:<ul><newline46mondego> * <li><pre>00 00 FE FF  = UTF-32, big-endian</pre></li><newline46mondego> * <li><pre>FF FE 00 00  = UTF-32, little-endian</pre></li><newline46mondego> * <li><pre>FE FF        = UTF-16, big-endian</pre></li><newline46mondego> * <li><pre>FF FE        = UTF-16, little-endian</pre></li><newline46mondego> * <li><pre>EF BB BF     = UTF-8</pre></li><newline46mondego> * </ul></p><newline46mondego> * <newline46mondego> * <p>Use the {@link #getBOM()} method to know whether a BOM has been detected<newline46mondego> * or not.<newline46mondego> * </p><newline46mondego> * <p>Use the {@link #skipBOM()} method to remove the detected BOM from the<newline46mondego> * wrapped <code>InputStream</code> object.</p><newline46mondego> */<newline46mondego>public class UnicodeBOMInputStream extends InputStream<newline46mondego>{<newline46mondego>  /**<newline46mondego>   * Type safe enumeration class that describes the different types of Unicode<newline46mondego>   * BOMs.<newline46mondego>   */<newline46mondego>  public static final class BOM<newline46mondego>  {<newline46mondego>    /**<newline46mondego>     * NONE.<newline46mondego>     */<newline46mondego>    public static final BOM NONE = new BOM(new byte[]{},<doubleQuotes46>NONE<doubleQuotes46>);<newline46mondego><newline46mondego>    /**<newline46mondego>     * UTF-8 BOM (EF BB BF).<newline46mondego>     */<newline46mondego>    public static final BOM UTF_8 = new BOM(new byte[]{(byte)0xEF,<newline46mondego>                                                       (byte)0xBB,<newline46mondego>                                                       (byte)0xBF},<newline46mondego>                                            <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego><newline46mondego>    /**<newline46mondego>     * UTF-16, little-endian (FF FE).<newline46mondego>     */<newline46mondego>    public static final BOM UTF_16_LE = new BOM(new byte[]{ (byte)0xFF,<newline46mondego>                                                            (byte)0xFE},<newline46mondego>                                                <doubleQuotes46>UTF-16 little-endian<doubleQuotes46>);<newline46mondego><newline46mondego>    /**<newline46mondego>     * UTF-16, big-endian (FE FF).<newline46mondego>     */<newline46mondego>    public static final BOM UTF_16_BE = new BOM(new byte[]{ (byte)0xFE,<newline46mondego>                                                            (byte)0xFF},<newline46mondego>                                                <doubleQuotes46>UTF-16 big-endian<doubleQuotes46>);<newline46mondego><newline46mondego>    /**<newline46mondego>     * UTF-32, little-endian (FF FE 00 00).<newline46mondego>     */<newline46mondego>    public static final BOM UTF_32_LE = new BOM(new byte[]{ (byte)0xFF,<newline46mondego>                                                            (byte)0xFE,<newline46mondego>                                                            (byte)0x00,<newline46mondego>                                                            (byte)0x00},<newline46mondego>                                                <doubleQuotes46>UTF-32 little-endian<doubleQuotes46>);<newline46mondego><newline46mondego>    /**<newline46mondego>     * UTF-32, big-endian (00 00 FE FF).<newline46mondego>     */<newline46mondego>    public static final BOM UTF_32_BE = new BOM(new byte[]{ (byte)0x00,<newline46mondego>                                                            (byte)0x00,<newline46mondego>                                                            (byte)0xFE,<newline46mondego>                                                            (byte)0xFF},<newline46mondego>                                                <doubleQuotes46>UTF-32 big-endian<doubleQuotes46>);<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns a <code>String</code> representation of this <code>BOM</code><newline46mondego>     * value.<newline46mondego>     */<newline46mondego>    public final String toString()<newline46mondego>    {<newline46mondego>      return description;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns the bytes corresponding to this <code>BOM</code> value.<newline46mondego>     */<newline46mondego>    public final byte[] getBytes()<newline46mondego>    {<newline46mondego>      final int     length = bytes.length;<newline46mondego>      final byte[]  result = new byte[length];<newline46mondego><newline46mondego>      // Make a defensive copy<newline46mondego>      System.arraycopy(bytes,0,result,0,length);<newline46mondego><newline46mondego>      return result;<newline46mondego>    }<newline46mondego><newline46mondego>    private BOM(final byte bom[], final String description)<newline46mondego>    {<newline46mondego>      assert(bom != null)               : <doubleQuotes46>invalid BOM: null is not allowed<doubleQuotes46>;<newline46mondego>      assert(description != null)       : <doubleQuotes46>invalid description: null is not allowed<doubleQuotes46>;<newline46mondego>      assert(description.length() != 0) : <doubleQuotes46>invalid description: empty string is not allowed<doubleQuotes46>;<newline46mondego><newline46mondego>      this.bytes          = bom;<newline46mondego>      this.description  = description;<newline46mondego>    }<newline46mondego><newline46mondego>            final byte    bytes[];<newline46mondego>    private final String  description;<newline46mondego><newline46mondego>  } // BOM<newline46mondego><newline46mondego>  /**<newline46mondego>   * Constructs a new <code>UnicodeBOMInputStream</code> that wraps the<newline46mondego>   * specified <code>InputStream</code>.<newline46mondego>   * <newline46mondego>   * @param inputStream an <code>InputStream</code>.<newline46mondego>   * <newline46mondego>   * @throws NullPointerException when <code>inputStream</code> is<newline46mondego>   * <code>null</code>.<newline46mondego>   * @throws IOException on reading from the specified <code>InputStream</code><newline46mondego>   * when trying to detect the Unicode BOM.<newline46mondego>   */<newline46mondego>  public UnicodeBOMInputStream(final InputStream inputStream) throws  NullPointerException,<newline46mondego>                                                                      IOException<newline46mondego><newline46mondego>  {<newline46mondego>    if (inputStream == null)<newline46mondego>      throw new NullPointerException(<doubleQuotes46>invalid input stream: null is not allowed<doubleQuotes46>);<newline46mondego><newline46mondego>    in = new PushbackInputStream(inputStream,4);<newline46mondego><newline46mondego>    final byte  bom[] = new byte[4];<newline46mondego>    final int   read  = in.read(bom);<newline46mondego><newline46mondego>    switch(read)<newline46mondego>    {<newline46mondego>      case 4:<newline46mondego>        if ((bom[0] == (byte)0xFF) &&<newline46mondego>            (bom[1] == (byte)0xFE) &&<newline46mondego>            (bom[2] == (byte)0x00) &&<newline46mondego>            (bom[3] == (byte)0x00))<newline46mondego>        {<newline46mondego>          this.bom = BOM.UTF_32_LE;<newline46mondego>          break;<newline46mondego>        }<newline46mondego>        else<newline46mondego>        if ((bom[0] == (byte)0x00) &&<newline46mondego>            (bom[1] == (byte)0x00) &&<newline46mondego>            (bom[2] == (byte)0xFE) &&<newline46mondego>            (bom[3] == (byte)0xFF))<newline46mondego>        {<newline46mondego>          this.bom = BOM.UTF_32_BE;<newline46mondego>          break;<newline46mondego>        }<newline46mondego><newline46mondego>      case 3:<newline46mondego>        if ((bom[0] == (byte)0xEF) &&<newline46mondego>            (bom[1] == (byte)0xBB) &&<newline46mondego>            (bom[2] == (byte)0xBF))<newline46mondego>        {<newline46mondego>          this.bom = BOM.UTF_8;<newline46mondego>          break;<newline46mondego>        }<newline46mondego><newline46mondego>      case 2:<newline46mondego>        if ((bom[0] == (byte)0xFF) &&<newline46mondego>            (bom[1] == (byte)0xFE))<newline46mondego>        {<newline46mondego>          this.bom = BOM.UTF_16_LE;<newline46mondego>          break;<newline46mondego>        }<newline46mondego>        else<newline46mondego>        if ((bom[0] == (byte)0xFE) &&<newline46mondego>            (bom[1] == (byte)0xFF))<newline46mondego>        {<newline46mondego>          this.bom = BOM.UTF_16_BE;<newline46mondego>          break;<newline46mondego>        }<newline46mondego><newline46mondego>      default:<newline46mondego>        this.bom = BOM.NONE;<newline46mondego>        break;<newline46mondego>    }<newline46mondego><newline46mondego>    if (read > 0)<newline46mondego>      in.unread(bom,0,read);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Returns the <code>BOM</code> that was detected in the wrapped<newline46mondego>   * <code>InputStream</code> object.<newline46mondego>   * <newline46mondego>   * @return a <code>BOM</code> value.<newline46mondego>   */<newline46mondego>  public final BOM getBOM()<newline46mondego>  {<newline46mondego>    // BOM type is immutable.<newline46mondego>    return bom;<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Skips the <code>BOM</code> that was found in the wrapped<newline46mondego>   * <code>InputStream</code> object.<newline46mondego>   * <newline46mondego>   * @return this <code>UnicodeBOMInputStream</code>.<newline46mondego>   * <newline46mondego>   * @throws IOException when trying to skip the BOM from the wrapped<newline46mondego>   * <code>InputStream</code> object.<newline46mondego>   */<newline46mondego>  public final synchronized UnicodeBOMInputStream skipBOM() throws IOException<newline46mondego>  {<newline46mondego>    if (!skipped)<newline46mondego>    {<newline46mondego>      in.skip(bom.bytes.length);<newline46mondego>      skipped = true;<newline46mondego>    }<newline46mondego>    return this;<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public int read() throws IOException<newline46mondego>  {<newline46mondego>    return in.read();<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public int read(final byte b[]) throws  IOException,<newline46mondego>                                          NullPointerException<newline46mondego>  {<newline46mondego>    return in.read(b,0,b.length);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public int read(final byte b[],<newline46mondego>                  final int off,<newline46mondego>                  final int len) throws IOException,<newline46mondego>                                        NullPointerException<newline46mondego>  {<newline46mondego>    return in.read(b,off,len);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public long skip(final long n) throws IOException<newline46mondego>  {<newline46mondego>    return in.skip(n);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public int available() throws IOException<newline46mondego>  {<newline46mondego>    return in.available();<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public void close() throws IOException<newline46mondego>  {<newline46mondego>    in.close();<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public synchronized void mark(final int readlimit)<newline46mondego>  {<newline46mondego>    in.mark(readlimit);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public synchronized void reset() throws IOException<newline46mondego>  {<newline46mondego>    in.reset();<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * {@inheritDoc}<newline46mondego>   */<newline46mondego>  public boolean markSupported() <newline46mondego>  {<newline46mondego>    return in.markSupported();<newline46mondego>  }<newline46mondego><newline46mondego>  private final PushbackInputStream in;<newline46mondego>  private final BOM                 bom;<newline46mondego>  private       boolean             skipped = false;<newline46mondego><newline46mondego>} // UnicodeBOMInputStream<newline46mondego>"
"2442splitHere46","1835529splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego><newline46mondego>public final class UnicodeBOMInputStreamUsage<newline46mondego>{<newline46mondego>  public static void main(final String[] args) throws Exception<newline46mondego>  {<newline46mondego>    FileInputStream fis = new FileInputStream(<doubleQuotes46>test/offending_bom.txt<doubleQuotes46>);<newline46mondego>    UnicodeBOMInputStream ubis = new UnicodeBOMInputStream(fis);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>detected BOM: <doubleQuotes46> + ubis.getBOM());<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>Reading the content of the file without skipping the BOM: <doubleQuotes46>);<newline46mondego>    InputStreamReader isr = new InputStreamReader(ubis);<newline46mondego>    BufferedReader br = new BufferedReader(isr);<newline46mondego><newline46mondego>    System.out.println(br.readLine());<newline46mondego><newline46mondego>    br.close();<newline46mondego>    isr.close();<newline46mondego>    ubis.close();<newline46mondego>    fis.close();<newline46mondego><newline46mondego>    fis = new FileInputStream(<doubleQuotes46>test/offending_bom.txt<doubleQuotes46>);<newline46mondego>    ubis = new UnicodeBOMInputStream(fis);<newline46mondego>    isr = new InputStreamReader(ubis);<newline46mondego>    br = new BufferedReader(isr);<newline46mondego><newline46mondego>    ubis.skipBOM();<newline46mondego><newline46mondego>    System.out.print(<doubleQuotes46>Reading the content of the file after skipping the BOM: <doubleQuotes46>);<newline46mondego>    System.out.println(br.readLine());<newline46mondego><newline46mondego>    br.close();<newline46mondego>    isr.close();<newline46mondego>    ubis.close();<newline46mondego>    fis.close();<newline46mondego>  }<newline46mondego><newline46mondego>} // UnicodeBOMInputStreamUsage<newline46mondego>"
"2443splitHere46","1835594splitHere46","graphOfAnimals(Set<Animal>)"
"2444splitHere46","1835594splitHere46","graphOfDistances"
"2445splitHere46","1835594splitHere46","graphOfAnimals"
"2446splitHere46","1835594splitHere46","graphOfAnimals"
"2447splitHere46","1835594splitHere46","Set<Animal>"
"2448splitHere46","1835594splitHere46","JGraphtUtilities"
"2449splitHere46","1835615splitHere46","addTestSuite(YourTestClass.class)<newline46mondego>"
"2450splitHere46","1835803splitHere46","request.getSession(boolean)"
"2451splitHere46","1835803splitHere46","request.getSession()"
"2452splitHere46","1835803splitHere46","test1"
"2453splitHere46","1835803splitHere46","request.getSession().setAttribute(<doubleQuotes46>test<doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>"
"2454splitHere46","1835803splitHere46","test2"
"2455splitHere46","1835803splitHere46","test1"
"2456splitHere46","1835803splitHere46","String test = (String) request.getSession().getAttribute(<doubleQuotes46>test<doubleQuotes46>); // Returns <doubleQuotes46>foo<doubleQuotes46>.<newline46mondego>"
"2457splitHere46","1835803splitHere46","User"
"2458splitHere46","1835803splitHere46","User user = userDAO.find(username, password);<newline46mondego>if (user != null) {<newline46mondego>    request.getSession().setAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>} else {<newline46mondego>    // Show error?<newline46mondego>}<newline46mondego>"
"2459splitHere46","1835803splitHere46","Filter"
"2460splitHere46","1835803splitHere46","url-pattern"
"2461splitHere46","1835803splitHere46","User"
"2462splitHere46","1835803splitHere46","if (((HttpServletRequest) request).getSession().getAttribute(<doubleQuotes46>user<doubleQuotes46>) != null) {<newline46mondego>    chain.doFilter(request, response); // Just continue.<newline46mondego>} else {<newline46mondego>    ((HttpServletResponse) response).sendRedirect(<doubleQuotes46>login<doubleQuotes46>); // Not logged-in, redirect to login page.<newline46mondego>}<newline46mondego>"
"2463splitHere46","1835803splitHere46","User"
"2464splitHere46","1835803splitHere46","request.getSession().removeAttribute(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego><newline46mondego>// Or, more drastically:<newline46mondego>request.getSession().invalidate();<newline46mondego>"
"2465splitHere46","1835803splitHere46","web.xml"
"2466splitHere46","1835803splitHere46","server.xml"
"2467splitHere46","1835811splitHere46","//Regular code that doesn't need to be covered by a try/catch block<newline46mondego><newline46mondego>try {<newline46mondego><newline46mondego>  //critical code only<newline46mondego><newline46mondego>} catch (NullPointerException npe) {<newline46mondego>  //Code<newline46mondego>} catch (RandomException re) {<newline46mondego>  //code<newline46mondego>} catch (Exception e) {<newline46mondego>  //code<newline46mondego>}<newline46mondego>"
"2468splitHere46","1835904splitHere46","@Transactional"
"2469splitHere46","1835904splitHere46","propagation"
"2470splitHere46","1835904splitHere46","REQUIRED"
"2471splitHere46","1835904splitHere46","@Transactional"
"2472splitHere46","1835904splitHere46","<aop:config><newline46mondego>    <aop:pointcut id=<doubleQuotes46>serviceMethods<doubleQuotes46><newline46mondego>        expression=<doubleQuotes46>execution(* com.company.product.service..*.*(..))<doubleQuotes46> /><newline46mondego>    <aop:advisor advice-ref=<doubleQuotes46>txAdvice<doubleQuotes46> pointcut-ref=<doubleQuotes46>serviceMethods<doubleQuotes46> /><newline46mondego></aop:config><newline46mondego><newline46mondego><newline46mondego><tx:advice id=<doubleQuotes46>txAdvice<doubleQuotes46> transaction-manager=<doubleQuotes46>transactionManager<doubleQuotes46>><newline46mondego>    <tx:attributes><newline46mondego>        <tx:method name=<doubleQuotes46>*<doubleQuotes46> propagation=<doubleQuotes46>REQUIRED<doubleQuotes46> /><newline46mondego>    </tx:attributes><newline46mondego></tx:advice><newline46mondego>"
"2473splitHere46","1835904splitHere46","service"
"2474splitHere46","1836087splitHere46","MessagingNotification"
"2475splitHere46","1836087splitHere46","static"
"2476splitHere46","1836087splitHere46","updateAllNotifications"
"2477splitHere46","1836087splitHere46","PathClassLoader"
"2478splitHere46","1836087splitHere46","PathClassLoader c = new PathClassLoader(<doubleQuotes46>/system/app/Mms.apk<doubleQuotes46>, getClassLoader());<newline46mondego>Class.forName(<doubleQuotes46>com.android.mms.util.ContactInfoCache<doubleQuotes46>, true, c)<newline46mondego>    .getMethod(<doubleQuotes46>init<doubleQuotes46>, Context.class).invoke(null, context);<newline46mondego>Class.forName(<doubleQuotes46>com.android.mms.transaction.MessagingNotification<doubleQuotes46>, true, c)<newline46mondego>    .getMethod(<doubleQuotes46>updateAllNotifications<doubleQuotes46>, Context.class).invoke(null, context);<newline46mondego>"
"2479splitHere46","1836156splitHere46","%d"
"2480splitHere46","1836156splitHere46","%s"
"2481splitHere46","1836156splitHere46","System.out.printf(<doubleQuotes46>%2d <doubleQuotes46>, ary2[i]);<newline46mondego>"
"2482splitHere46","1836156splitHere46","3  5  9 11 15 18 22 23 30 31 35 39<newline46mondego>"
"2483splitHere46","1836156splitHere46","3  5  9  11 15 18 22 23 30 31 35 39<newline46mondego>"
"2484splitHere46","1836156splitHere46","java.util.Formatter"
"2485splitHere46","1836231splitHere46","int pos=str.indexOf('a');<newline46mondego>if(pos < 0) // Not obvious from code--should comment...<newline46mondego>    System.out.println(<doubleQuotes46>Fail<doubleQuotes46>);<newline46mondego>else<newline46mondego>    //Do something with pos...<newline46mondego>"
"2486splitHere46","1836231splitHere46","try {<newline46mondego>    int pos=str.indexOf('a');<newline46mondego>    //Do something with pos...<newline46mondego>} catch(CharacterNotFoundInStringException e) {<newline46mondego>    System.out.println(<doubleQuotes46>Fail<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2487splitHere46","1836231splitHere46","Position pos=str.indexOf('a');<newline46mondego>if(!pos.characterFound())<newline46mondego>    System.out.println(<doubleQuotes46>Fail<doubleQuotes46>);<newline46mondego>else<newline46mondego>    // do something with pos.location();<newline46mondego>"
"2488splitHere46","1836288splitHere46","private void createContent(Container main){<newline46mondego>    String[]                            rows,cols;                                  // row/column specification arrays<newline46mondego><newline46mondego>    JPanel                              phnpnl,cszpnl,btnpnl;                       // special nested panels<newline46mondego><newline46mondego>    // create components here...<newline46mondego><newline46mondego>    // CREATE MAIN PANEL WITH DESIRED ROWS AND COLUMNS<newline46mondego>    rows=MatrixLayout.arrayOf(10,<doubleQuotes46>Size=Pref CellAlign=Middle CellInsets=5,0<doubleQuotes46>);   // standard row spec<newline46mondego>    rows[6]                     =<doubleQuotes46>Size=100% CellAlign=Top    CellInsets=5,0<doubleQuotes46>;    // note: row 7 ([6] is index)<newline46mondego>    rows[7]                     =<doubleQuotes46>Size=Pref CellAlign=Top    CellInsets=5,0<doubleQuotes46>;    // note: row 8 ([7] is index)<newline46mondego>    rows[8]                     =<doubleQuotes46>Size=Pref CellAlign=Top    CellInsets=5,0<doubleQuotes46>;    // note: row 9 ([8] is index)<newline46mondego>    cols=MatrixLayout.arrayOf(3 ,<doubleQuotes46>size=Pref CellAlign=Right  CellInsets=5,0<doubleQuotes46>);   // standard column spec<newline46mondego>    cols[1]                     =<doubleQuotes46>Size=50%  CellAlign=Left   CellInsets=5,0<doubleQuotes46>;    // note: col 2 ([1] is index)<newline46mondego>    cols[2]                     =<doubleQuotes46>Size=50%  CellAlign=Left   CellInsets=5,0<doubleQuotes46>;    // note: col 3 ([2] is index)<newline46mondego>    con.setLayout(new MatrixLayout(rows,cols,<doubleQuotes46>Row=Cur Col=Next<doubleQuotes46>));<newline46mondego><newline46mondego>    // CREATE SPECIAL NESTED PANELS<newline46mondego>    phnpnl=MatrixLayout.singleRowBar(5,false,new DctComponent[]{phnPart1,phnPart2,phnPart3                                   });<newline46mondego>    cszpnl=MatrixLayout.singleRowBar(5,1    ,new DctComponent[]{city,createLabel(<doubleQuotes46>State<doubleQuotes46>),state,createLabel(<doubleQuotes46>Zip<doubleQuotes46>),zip,zipext});<newline46mondego>    btnpnl=MatrixLayout.singleRowBar(5,true ,new DctComponent[]{yes,no,cancel                                                });<newline46mondego>    phnpnl.setName(<doubleQuotes46>PhonePanel<doubleQuotes46>);<newline46mondego>    cszpnl.setName(<doubleQuotes46>CityStateZipPanel<doubleQuotes46>);<newline46mondego>    btnpnl.setName(<doubleQuotes46>ButtonPanel<doubleQuotes46>);<newline46mondego><newline46mondego>    // ADD COMPONENTS TO MAIN PANEL<newline46mondego>    con.add(createLabel(   <doubleQuotes46>Name :<doubleQuotes46>),<doubleQuotes46>row=Next col=1<doubleQuotes46>); con.add(name    ,<doubleQuotes46>               hAlign=Fill  hSpan=2                               <doubleQuotes46>);<newline46mondego>    con.add(createLabel(<doubleQuotes46>Address :<doubleQuotes46>),<doubleQuotes46>row=Next col=1<doubleQuotes46>); con.add(address1,<doubleQuotes46>               hAlign=Fill  hSpan=2                               <doubleQuotes46>);<newline46mondego>                                                        con.add(address2,<doubleQuotes46>Row=Next Col=2 hAlign=Fill  hSpan=2                               <doubleQuotes46>);<newline46mondego>                                                        con.add(address3,<doubleQuotes46>Row=Next Col=2 hAlign=Fill  hSpan=2                               <doubleQuotes46>);<newline46mondego>    con.add(createLabel(   <doubleQuotes46>City :<doubleQuotes46>),<doubleQuotes46>row=Next col=1<doubleQuotes46>); con.add(cszpnl  ,<doubleQuotes46>                            hSpan=2                               <doubleQuotes46>);<newline46mondego>    con.add(createLabel(  <doubleQuotes46>Phone :<doubleQuotes46>),<doubleQuotes46>row=Next col=1<doubleQuotes46>); con.add(phnpnl  ,<doubleQuotes46>                            hSpan=2                               <doubleQuotes46>);<newline46mondego>    con.add(createLabel(  <doubleQuotes46>Notes :<doubleQuotes46>),<doubleQuotes46>row=Next col=1<doubleQuotes46>); con.add(notes1  ,<doubleQuotes46>Row=Cur  Col=2 hAlign=Fill          vAlign=Fill                   <doubleQuotes46>);<newline46mondego>                                                        con.add(notes2  ,<doubleQuotes46>Row=Cur        hAlign=Fill          vAlign=Fill                   <doubleQuotes46>);<newline46mondego>                                                        con.add(notes3  ,<doubleQuotes46>Row=Next Col=2 hAlign=Left                      hGroup=NoteButtons<doubleQuotes46>);<newline46mondego>                                                        con.add(notes4  ,<doubleQuotes46>Row=Cur        hAlign=Right                     hGroup=NoteButtons<doubleQuotes46>);<newline46mondego>    con.add(btnpnl                  ,<doubleQuotes46>row=Next col=1 hAlign=Right hSpan=3<doubleQuotes46>);<newline46mondego>    main.setBorder(new DctEmptyBorder(10));<newline46mondego>    main.setBackground(SystemColor.window);<newline46mondego>    }<newline46mondego>"
"2489splitHere46","1836518splitHere46","CircleList"
"2490splitHere46","1836518splitHere46","class CircleList<newline46mondego>{<newline46mondego>  static class Circle<newline46mondego>  {<newline46mondego>    public float x, y, radius;<newline46mondego>  }<newline46mondego><newline46mondego>  ArrayList<Circle> circles;<newline46mondego><newline46mondego>  public CirclesList()<newline46mondego>  {<newline46mondego>    circles = new ArrayList<Circle>();<newline46mondego>  }<newline46mondego><newline46mondego>  public void draw(Graphics2D g) // draw must be called by paintComponent of the panel<newline46mondego>  {<newline46mondego>    for (Circle c : circles)<newline46mondego>      g.fillOval(c.x, c.y, c.radius, c.radius)<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2491splitHere46","1836547splitHere46","fail()"
"2492splitHere46","1836547splitHere46","public void testNullParameter() {<newline46mondego>    try {<newline46mondego>        IPAddress addr = new IPAddress(null);<newline46mondego>        fail(<doubleQuotes46>InvalidIPAddressException not thrown.<doubleQuotes46>);<newline46mondego>    } catch(InvalidIPAddressException e) {<newline46mondego>        assertNotNull(e.getMessage());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2493splitHere46","1836547splitHere46","assertTrue(addr.getOctets() == null);"
"2494splitHere46","1836547splitHere46","@Test (expected=InvalidIPAddressException.class) <newline46mondego>public void testNullParameter() throws InvalidIPAddressException {<newline46mondego>    IPAddress addr = new IPAddress(null);<newline46mondego>}<newline46mondego>"
"2495splitHere46","1836691splitHere46","domain.xml"
"2496splitHere46","1837077splitHere46","mvn appfuse:gen-model"
"2497splitHere46","1837077splitHere46","mvn appfuse:gen"
"2498splitHere46","1837100splitHere46","DBDATE=<doubleQuotes46>Y4MD-<doubleQuotes46>"
"2499splitHere46","1837100splitHere46","abc|123|2009-12-02|a\|b\\c\<newline46mondego>d||<newline46mondego>"
"2500splitHere46","1837100splitHere46","SELECT 'INSERT INTO Target(Col1, Col2) VALUES (' ||<newline46mondego>       Col1 || ', ''' || Col2 || ''');'<newline46mondego>  FROM Source<newline46mondego>"
"2501splitHere46","1837360splitHere46","System.out.println()"
"2502splitHere46","1837360splitHere46","list()"
"2503splitHere46","1837360splitHere46","setCacheable(true)"
"2504splitHere46","1837360splitHere46","Criteria crit = ...;<newline46mondego>crit.setCacheable(true);<newline46mondego>return crit.list();<newline46mondego>"
"2505splitHere46","1837360splitHere46","HibernateTemplate"
"2506splitHere46","1837360splitHere46","doInHibernate"
"2507splitHere46","1837360splitHere46","public List<TestPOJOcategory> getAllCategory(final String keyword, final int nFirst,<newline46mondego>    final int nPageSize,<newline46mondego>    final String sortColumnId,<newline46mondego>    final boolean bSortOrder) {<newline46mondego><newline46mondego>  DetachedCriteria crit = DetachedCriteria.forClass(TestPOJOcategory.class);<newline46mondego>  crit.add(Restrictions.ilike(<doubleQuotes46>categoryname<doubleQuotes46>, keyword))<newline46mondego>   .addOrder(bSortOrder ? Order.asc(sortColumnId) : Order.desc(sortColumnId));<newline46mondego>  getHibernateTemplate().setCacheQueries(true); // works on both queries and criteria<newline46mondego>  return (List<TestPOJOcategory>) getHibernateTemplate()<newline46mondego>   .findByCriteria(crit, nFirst, nPageSize);<newline46mondego>}<newline46mondego>"
"2508splitHere46","1837497splitHere46","URL url = new URL(<doubleQuotes46>http://stackoverflow.com<doubleQuotes46>);<newline46mondego>URLConnection connection = new URLConnection(url);<newline46mondego>InputStream stream = url.openConnection();<newline46mondego>// ... read stream like any file stream<newline46mondego>"
"2509splitHere46","1837842splitHere46","hibernate.transaction.manager_lookup_class"
"2510splitHere46","1837842splitHere46","TransactionManager"
"2511splitHere46","1837842splitHere46","Session.close()"
"2512splitHere46","1837842splitHere46","Session.disconnect()"
"2513splitHere46","1837842splitHere46","hibernate.transaction.manager_lookup_class"
"2514splitHere46","1837842splitHere46","Session.close()"
"2515splitHere46","1837842splitHere46","Session.disconnect()"
"2516splitHere46","1837842splitHere46","hibernate.transaction.manager_lookup_class"
"2517splitHere46","1838074splitHere46","RemoteServiceServlet"
"2518splitHere46","1838074splitHere46","final String ip = getThreadLocalRequest().getRemoteAddr();<newline46mondego>"
"2519splitHere46","1838172splitHere46","public class ObjectList {<newline46mondego>  private final List cats;<newline46mondego>  private final List dogs; <newline46mondego><newline46mondego>  public ObjectList() {   <newline46mondego>    cats = new ArrayList();<newline46mondego>    dogs = new ArrayList();<newline46mondego>  }<newline46mondego><newline46mondego>  public void addCat(Cat c) {<newline46mondego>    cats.add(c);<newline46mondego>  }<newline46mondego><newline46mondego>  public void addDog(Dog d) {<newline46mondego>    dogs.add(d);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2520splitHere46","1838172splitHere46","public class ObjectList {<newline46mondego>  private final List<Cat> cats;<newline46mondego>  private final List<Dog> dogs; <newline46mondego><newline46mondego>  public ObjectList() {   <newline46mondego>    cats = new ArrayList<Cat>();<newline46mondego>    dogs = new ArrayList<Dog>();<newline46mondego>  }<newline46mondego><newline46mondego>  public void addCat(Cat c) {<newline46mondego>    cats.add(c);<newline46mondego>  }<newline46mondego><newline46mondego>  public void addDog(Dog d) {<newline46mondego>    dogs.add(d);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2521splitHere46","1838172splitHere46","ObjectList objList = new ObjectList();<newline46mondego>for (int i=0; i<3; i++)  {<newline46mondego>  Cat cat = new Cat(<doubleQuotes46>meow<doubleQuotes46>,i);<newline46mondego>  Dog dog = new Dog(<doubleQuotes46>woof<doubleQuotes46>,i);<newline46mondego>  objList.addCat(cat);<newline46mondego>  objList.addDog(dog);<newline46mondego>}<newline46mondego>"
"2522splitHere46","1838226splitHere46","@Cache"
"2523splitHere46","1838226splitHere46","@Cache"
"2524splitHere46","1838226splitHere46","@DataCache"
"2525splitHere46","1838226splitHere46","@Cache"
"2526splitHere46","1838234splitHere46","Proxy proxy = new Proxy(Proxy.DIRECT,<newline46mondego>    new InetSocketAddress(proxyHost, proxyPort));<newline46mondego>url.openConnection(proxy);<newline46mondego>"
"2527splitHere46","1838234splitHere46","System.setProperty(<doubleQuotes46>http.proxyHost<doubleQuotes46>, <doubleQuotes46>my.proxyhost.com<doubleQuotes46>);<newline46mondego>System.setProperty(<doubleQuotes46>http.proxyPort<doubleQuotes46>, <doubleQuotes46>1234<doubleQuotes46>);<newline46mondego>"
"2528splitHere46","1838344splitHere46","Column lookup(String)"
"2529splitHere46","1838479splitHere46","keytool -genkey -keystore myKeyStore -alias me"
"2530splitHere46","1838479splitHere46","keytool -selfcert -keystore myKeyStore -alias me"
"2531splitHere46","1838479splitHere46","jarsigner -keystore myKeyStore jarfile.jar me"
"2532splitHere46","1838624splitHere46","byte & 0xc0 == 0xc0"
"2533splitHere46","1838644splitHere46","RemoveFoo"
"2534splitHere46","1838644splitHere46","Foo foo = foos.remove (name);<newline46mondego>if (foo != null) foo.removeAll();<newline46mondego>"
"2535splitHere46","1838644splitHere46","get()"
"2536splitHere46","1838644splitHere46","remove()"
"2537splitHere46","1838644splitHere46","Foo"
"2538splitHere46","1838644splitHere46","bars"
"2539splitHere46","1838746splitHere46","monitor off"
"2540splitHere46","1838746splitHere46","lockws"
"2541splitHere46","1838769splitHere46","SimpleDateFormat"
"2542splitHere46","1838769splitHere46","ThreadLocal"
"2543splitHere46","1838846splitHere46","SimpleFormController"
"2544splitHere46","1838846splitHere46","AbstractFormController"
"2545splitHere46","1838846splitHere46","@Controller"
"2546splitHere46","1838893splitHere46","JAXBElement"
"2547splitHere46","1838959splitHere46","X -> Y -> Z -> U -> V -> P -> Q -> A <newline46mondego>                     \-> D -> E -> B<newline46mondego>"
"2548splitHere46","1838959splitHere46","A-B-E-D-V-P-Q"
"2549splitHere46","1839005splitHere46","System.out.println()"
"2550splitHere46","1839496splitHere46","Session.createDurableSubscriber()"
"2551splitHere46","1839516splitHere46","include java.security.MessageDigest;<newline46mondego><newline46mondego>// Exception handling not shown<newline46mondego><newline46mondego>String prehash = ...<newline46mondego><newline46mondego>final byte[] prehashBytes= prehash.getBytes( <doubleQuotes46>iso-8859-1<doubleQuotes46> );<newline46mondego><newline46mondego>System.out.println( prehash.length( ) );<newline46mondego>System.out.println( prehashBytes.length );<newline46mondego><newline46mondego>final MessageDigest digester = MessageDigest.getInstance( <doubleQuotes46>MD5<doubleQuotes46> );<newline46mondego><newline46mondego>digester.update( prehashBytes );<newline46mondego><newline46mondego>final byte[] digest = digester.digest( );<newline46mondego><newline46mondego>final StringBuffer hexString = new StringBuffer();<newline46mondego><newline46mondego>for ( final byte b : digest ) {<newline46mondego>    final int intByte = 0xFF & b;<newline46mondego><newline46mondego>    if ( intByte < 10 )<newline46mondego>    {<newline46mondego>        hexString.append( <doubleQuotes46>0<doubleQuotes46> );<newline46mondego>    }<newline46mondego><newline46mondego>    hexString.append(<newline46mondego>        Integer.toHexString( intByte )<newline46mondego>    );<newline46mondego>}<newline46mondego><newline46mondego>System.out.println( hexString.toString( ).toUpperCase( ) );<newline46mondego>"
"2552splitHere46","1839516splitHere46","prehash"
"2553splitHere46","1839516splitHere46","prehashBytes"
"2554splitHere46","1839516splitHere46","presash.getBytes( <doubleQuotes46>utf-8<doubleQuotes46> )"
"2555splitHere46","1839516splitHere46","prehash"
"2556splitHere46","1839666splitHere46","<Context>"
"2557splitHere46","1839666splitHere46","<Context<newline46mondego>    path=<doubleQuotes46>/tcadmin<doubleQuotes46><newline46mondego>    docBase=<doubleQuotes46>${catalina.home}/server/webapps/admin<doubleQuotes46><newline46mondego>    privileged=<doubleQuotes46>true<doubleQuotes46><newline46mondego>><newline46mondego>    <Valve className=<doubleQuotes46>org.apache.catalina.valves.RemoteAddrValve<doubleQuotes46><newline46mondego>        allow=<doubleQuotes46>127\.0\.0\.1<doubleQuotes46><newline46mondego>    /><newline46mondego></Context><newline46mondego>"
"2558splitHere46","1839666splitHere46","ServletRequest"
"2559splitHere46","1839666splitHere46","doFilter"
"2560splitHere46","1839666splitHere46","<filter><newline46mondego>  <filter-name>GatekeeperFilter</filter-name><newline46mondego>  <filter-class>your.package.GatekeeperFilter</filter-class><newline46mondego>  <init-param><newline46mondego>    <param-name>allowedNetwork</param-name><newline46mondego>    <param-value>192\.168\.2\.*</param-value><newline46mondego>  </init-param><newline46mondego></filter><newline46mondego><newline46mondego><filter-mapping><newline46mondego>  <filter-name>GatekeeperFilter</filter-name><newline46mondego>  <url-pattern>/path/to/protected/folder</url-pattern><newline46mondego></filter-mapping><newline46mondego>"
"2561splitHere46","1839673splitHere46","<logger>"
"2562splitHere46","1839673splitHere46","<appender name=<doubleQuotes46>ERROR_FILE<doubleQuotes46>><newline46mondego>   <param name=<doubleQuotes46>Threshold<doubleQuotes46> value=<doubleQuotes46>ERROR<doubleQuotes46>/><newline46mondego></appender><newline46mondego><newline46mondego><appender name=<doubleQuotes46>GENERAL<doubleQuotes46>><newline46mondego>   <param name=<doubleQuotes46>Threshold<doubleQuotes46> value=<doubleQuotes46>INFO<doubleQuotes46>/><newline46mondego></appender><newline46mondego>"
"2563splitHere46","1839673splitHere46","<logger name=<doubleQuotes46>com.acme<doubleQuotes46>><newline46mondego>  <level value=<doubleQuotes46>INFO<doubleQuotes46>/><newline46mondego>  <appender-ref ref=<doubleQuotes46>ERROR_FILE<doubleQuotes46>/><newline46mondego>  <appender-ref ref=<doubleQuotes46>GENERAL<doubleQuotes46>/><newline46mondego></logger><newline46mondego>"
"2564splitHere46","1840022splitHere46","Collection<?> c = new ArrayList<String>();<newline46mondego>c.add(new Object()); // Compile time error<newline46mondego>"
"2565splitHere46","1840104splitHere46","java.sql.Driver"
"2566splitHere46","1840104splitHere46","Class#forName()"
"2567splitHere46","1840104splitHere46","META-INF/services"
"2568splitHere46","1840104splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    List<Class<Driver>> drivers = findClassesImplementing(Driver.class);<newline46mondego>    System.out.println(drivers);<newline46mondego>}        <newline46mondego><newline46mondego>public static <T extends Object> List<Class<T>> findClassesImplementing(Class<T> cls) throws IOException {<newline46mondego>    List<Class<T>> classes = new ArrayList<Class<T>>();<newline46mondego><newline46mondego>    for (URL root : Collections.list(Thread.currentThread().getContextClassLoader().getResources(<doubleQuotes46><doubleQuotes46>))) {<newline46mondego>        for (File file : findFiles(new File(root.getFile()), <doubleQuotes46>.+\\.jar$<doubleQuotes46>)) {<newline46mondego>            JarFile jarFile = new JarFile(file);<newline46mondego>            for (JarEntry jarEntry : Collections.list(jarFile.entries())) {<newline46mondego>                String name = jarEntry.getName();<newline46mondego>                if (name.endsWith(<doubleQuotes46>.class<doubleQuotes46>)) try {<newline46mondego>                    Class<?> found = Class.forName(name.replace(<doubleQuotes46>/<doubleQuotes46>, <doubleQuotes46>.<doubleQuotes46>).replaceAll(<doubleQuotes46>\\.class$<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>                    if (cls.isAssignableFrom(found)) {<newline46mondego>                        classes.add((Class<T>) found);<newline46mondego>                    }<newline46mondego>                } catch (Throwable ignore) {<newline46mondego>                    // No real class file, or JAR not in classpath, or missing links.<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return classes;<newline46mondego>}<newline46mondego><newline46mondego>public static List<File> findFiles(File directory, final String pattern) throws IOException {<newline46mondego>    File[] files = directory.listFiles(new FileFilter() {<newline46mondego>        public boolean accept(File file) {<newline46mondego>            return file.isDirectory() || file.getName().matches(pattern);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    List<File> found = new ArrayList<File>(files.length);<newline46mondego><newline46mondego>    for (File file : files) {<newline46mondego>        if (file.isDirectory()) {<newline46mondego>            found.addAll(findFiles(file, pattern));<newline46mondego>        } else {<newline46mondego>            found.add(file);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return found;<newline46mondego>}<newline46mondego>"
"2569splitHere46","1840104splitHere46","Set<Class<? extends Driver>> drivers = reflections.getSubTypesOf(Driver.class);<newline46mondego>"
"2570splitHere46","1840134splitHere46","Frame"
"2571splitHere46","1840134splitHere46","JFrame"
"2572splitHere46","1840134splitHere46","setResizable"
"2573splitHere46","1840134splitHere46","Frame"
"2574splitHere46","1840222splitHere46","Map<Thread,T>"
"2575splitHere46","1840228splitHere46","foreach row<newline46mondego>  if (col1 and col2 and not col3 OR col1 and not col2 and col3 OR not col1 and col2 and col3)<newline46mondego>foreach col<newline46mondego>  if (row1 and row2 and not row3 OR row1 and not row2 and row3 OR not row1 and row2 and row3)<newline46mondego>"
"2576splitHere46","1840236splitHere46","build.xml"
"2577splitHere46","1840236splitHere46","<target name=<doubleQuotes46>-init-macrodef-java<doubleQuotes46>><newline46mondego>    <macrodef name=<doubleQuotes46>java<doubleQuotes46> uri=<doubleQuotes46>http://www.netbeans.org/ns/j2se-project/1<doubleQuotes46>><newline46mondego>        <attribute default=<doubleQuotes46>${main.class}<doubleQuotes46> name=<doubleQuotes46>classname<doubleQuotes46>/><newline46mondego>        <attribute default=<doubleQuotes46>${run.classpath}<doubleQuotes46> name=<doubleQuotes46>classpath<doubleQuotes46>/><newline46mondego>        <element name=<doubleQuotes46>customize<doubleQuotes46> optional=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <sequential><newline46mondego>            <exec executable=<doubleQuotes46>gksudo<doubleQuotes46> failonerror=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>                <arg value=<doubleQuotes46>--<doubleQuotes46>/><newline46mondego>                <arg value=<doubleQuotes46>java<doubleQuotes46>/><newline46mondego>                <arg value=<doubleQuotes46>-classpath<doubleQuotes46>/><newline46mondego>                <arg path=<doubleQuotes46>@{classpath}<doubleQuotes46>/><newline46mondego>                <arg line=<doubleQuotes46>${run.jvmargs}<doubleQuotes46>/><newline46mondego>                <arg value=<doubleQuotes46>@{classname}<doubleQuotes46>/><newline46mondego>            </exec><newline46mondego>        </sequential><newline46mondego>    </macrodef><newline46mondego></target><newline46mondego>"
"2578splitHere46","1840463splitHere46","csocket.getRemoteSocketAddress().toString();<newline46mondego>"
"2579splitHere46","1840609splitHere46","Vector<Integer> moves = new Vector<Integer>();<newline46mondego><newline46mondego>move.add(new Integer(x));<newline46mondego>"
"2580splitHere46","1840609splitHere46","<>"
"2581splitHere46","1840609splitHere46","Vector"
"2582splitHere46","1840609splitHere46","E"
"2583splitHere46","1840609splitHere46","String"
"2584splitHere46","1840609splitHere46","Vector<Integer>"
"2585splitHere46","1840609splitHere46","Vector"
"2586splitHere46","1840609splitHere46","List"
"2587splitHere46","1840609splitHere46","ArrayList"
"2588splitHere46","1840609splitHere46","int"
"2589splitHere46","1840609splitHere46","Integer"
"2590splitHere46","1840609splitHere46","int"
"2591splitHere46","1840609splitHere46","int"
"2592splitHere46","1840609splitHere46","Integer"
"2593splitHere46","1840609splitHere46","Vector<Integer> v = new Vector<Integer>();<newline46mondego>v.add(5);    // Not necessary to use an Integer value.<newline46mondego>"
"2594splitHere46","1840785splitHere46","SELECT p.id as parent, count(c.id) as children from children c right outer join c.parent p group by p.id;<newline46mondego>"
"2595splitHere46","1840925splitHere46","String value = <doubleQuotes46>attachment;filename=\<doubleQuotes46><doubleQuotes46> + URLEncoder.encode(filename, <doubleQuotes46>UTF-8<doubleQuotes46>) +'<doubleQuotes46>';<newline46mondego>response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>, value);<newline46mondego>response.setHeader(<doubleQuotes46>Content-Transfer-Encoding<doubleQuotes46>, <doubleQuotes46>binary<doubleQuotes46>);<newline46mondego>"
"2596splitHere46","1841447splitHere46","ast.toStringTree()<newline46mondego>"
"2597splitHere46","1841447splitHere46","toString()"
"2598splitHere46","1841447splitHere46","toStringTree()"
"2599splitHere46","1841447splitHere46","toStringTree"
"2600splitHere46","1841447splitHere46","toString"
"2601splitHere46","1841471splitHere46","char"
"2602splitHere46","1841471splitHere46","char"
"2603splitHere46","1841471splitHere46","char"
"2604splitHere46","1841682splitHere46","TextBox box = new TextBox();<newline46mondego>box.setText(<doubleQuotes46>Default Text<doubleQuotes46>);<newline46mondego>box.addKeyboardListener(this);<newline46mondego>defaultValue = true; // this is a global boolean value<newline46mondego>"
"2605splitHere46","1841682splitHere46","public void onKeyPress(Widget arg0, char arg1, int arg2) <newline46mondego>{<newline46mondego>    if(defaultValue)<newline46mondego>    {<newline46mondego>        box.setText = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        defaultValue = false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2606splitHere46","1841768splitHere46","B"
"2607splitHere46","1841768splitHere46","A"
"2608splitHere46","1841768splitHere46","A"
"2609splitHere46","1841768splitHere46","B"
"2610splitHere46","1841768splitHere46","SELECT a FROM A a WHERE a.b.id IS NULL<newline46mondego>"
"2611splitHere46","1841773splitHere46","public class MyObject {<newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        return 42;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        MyObject obj1 = new MyObject();<newline46mondego>        MyObject obj2 = new MyObject(); // Ta-da!<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2612splitHere46","1841806splitHere46","<head><newline46mondego>  blablabla<newline46mondego>  <c:import url=<doubleQuotes46>slave.jsp<doubleQuotes46>><newline46mondego>    <c:param name=<doubleQuotes46>sectionName<doubleQuotes46> value=<doubleQuotes46>HEAD<doubleQuotes46> /><newline46mondego>  </c:import><newline46mondego></head><newline46mondego><body><newline46mondego>  blablabla<newline46mondego>  <c:import url=<doubleQuotes46>slave.jsp<doubleQuotes46>><newline46mondego>  </c:import><newline46mondego></body><newline46mondego>"
"2613splitHere46","1841806splitHere46","<c:choose><newline46mondego>  <c:when test=<doubleQuotes46>${param.sectionName == 'HEAD'}<doubleQuotes46>><newline46mondego>     head section here [without the <HEAD> tags !]<newline46mondego>  </c:when><newline46mondego>  <c:otherwise><newline46mondego>     body section here [without the <BODY> tags !]<newline46mondego>  </c:otherwise><newline46mondego></c:choose><newline46mondego>"
"2614splitHere46","1841880splitHere46","public class Foo {}<newline46mondego>"
"2615splitHere46","1841880splitHere46","[steven@scstop:~]% javac test.java<newline46mondego>test.java:1: class Foo is public, should be declared in a file named Foo.java<newline46mondego>public class Foo {<newline46mondego>       ^<newline46mondego>1 error<newline46mondego>"
"2616splitHere46","1842049splitHere46","String foo = <doubleQuotes46>123456<doubleQuotes46>;<newline46mondego>"
"2617splitHere46","1842049splitHere46","String.format"
"2618splitHere46","1842049splitHere46","<doubleQuotes46>%s%<doubleQuotes46>"
"2619splitHere46","1842049splitHere46","+="
"2620splitHere46","1842049splitHere46","+="
"2621splitHere46","1842049splitHere46","append"
"2622splitHere46","1842128splitHere46","getTotalFoos"
"2623splitHere46","1842128splitHere46","getBarredFoos"
"2624splitHere46","1842216splitHere46","options {<newline46mondego>    output=AST;<newline46mondego>}<newline46mondego>"
"2625splitHere46","1842238splitHere46","myLabel.setText(<doubleQuotes46><html><body>with<newline46mondego>linebreak</body></html><doubleQuotes46>);<newline46mondego>"
"2626splitHere46","1842328splitHere46","public class Person<newline46mondego>{<newline46mondego>  private Integer id;<newline46mondego>  private String name;<newline46mondego>  private Address address;<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego><newline46mondego>public class Address {<newline46mondego>  Integer id;<newline46mondego>  String line1;<newline46mondego>  String line2.<newline46mondego>}<newline46mondego>"
"2627splitHere46","1842397splitHere46","svn co https://jgrapht.svn.sourceforge.net/svnroot/jgrapht jgrapht<newline46mondego>"
"2628splitHere46","1842471splitHere46","Thread.currentThread().sleep(10000)"
"2629splitHere46","1842556splitHere46","wait(long)"
"2630splitHere46","1842556splitHere46","wait"
"2631splitHere46","1842556splitHere46","synchronized"
"2632splitHere46","1842556splitHere46","this"
"2633splitHere46","1842556splitHere46","static synchronized"
"2634splitHere46","1842556splitHere46","Class<?>"
"2635splitHere46","1842556splitHere46","synchronized(x)"
"2636splitHere46","1842556splitHere46","x"
"2637splitHere46","1842556splitHere46","wait()"
"2638splitHere46","1842731splitHere46","while (rs.next()){<newline46mondego>   Technician empl = new Technician();<newline46mondego>   empl.setEmpFName(rs.getString(<doubleQuotes46>EMP_LNAME<doubleQuotes46>));          <newline46mondego>   empl.setEmpLName(rs.getString(<doubleQuotes46>EMP_FNAME<doubleQuotes46>));          <newline46mondego>   empl.setEmpId(rs.getInt(<doubleQuotes46>EMP_ID<doubleQuotes46>));          <newline46mondego>   employees.add(empl);<newline46mondego>}<newline46mondego>"
"2639splitHere46","1842789splitHere46","AUser"
"2640splitHere46","1842789splitHere46","@ManyToOne(fetch = FetchType.LAZY)<newline46mondego>private Company company;<newline46mondego>"
"2641splitHere46","1842789splitHere46","join fetch"
"2642splitHere46","1842789splitHere46","select user<newline46mondego>  from AUser user left join fetch user.company<newline46mondego> where user.company.id = :companyId<newline46mondego>"
"2643splitHere46","1842833splitHere46","autoReconnect"
"2644splitHere46","1842833splitHere46","testOnBorrow"
"2645splitHere46","1842833splitHere46","<Resource name=<doubleQuotes46>jdbc/db<doubleQuotes46><newline46mondego>          auth=<doubleQuotes46>Container<doubleQuotes46><newline46mondego>          type=<doubleQuotes46>javax.sql.DataSource<doubleQuotes46><newline46mondego>          username=<doubleQuotes46>db1<doubleQuotes46><newline46mondego>          password=<doubleQuotes46>somepass<doubleQuotes46><newline46mondego>          driverClassName=<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46><newline46mondego>          url=<doubleQuotes46>jdbc:mysql://localhost:3306/db<doubleQuotes46><newline46mondego>          maxActive=<doubleQuotes46>15<doubleQuotes46><newline46mondego>          maxIdle=<doubleQuotes46>3<doubleQuotes46><newline46mondego>          maxWait=<doubleQuotes46>5000<doubleQuotes46><newline46mondego>          removeAbandoned=<doubleQuotes46>true<doubleQuotes46><newline46mondego>          removeAbandonedTimeout=<doubleQuotes46>20<doubleQuotes46><newline46mondego>          logAbandoned=<doubleQuotes46>true<doubleQuotes46><newline46mondego>          factory=<doubleQuotes46>org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory<doubleQuotes46><newline46mondego>          validationQuery=<doubleQuotes46>select 1<doubleQuotes46><newline46mondego>          minEvictableIdleTimeMillis=<doubleQuotes46>3600000<doubleQuotes46><newline46mondego>          timeBetweenEvictionRunsMillis=<doubleQuotes46>1800000<doubleQuotes46><newline46mondego>          numTestsPerEvictionRun=<doubleQuotes46>10<doubleQuotes46><newline46mondego>          testWhileIdle=<doubleQuotes46>true<doubleQuotes46><newline46mondego>          testOnBorrow=<doubleQuotes46>true<doubleQuotes46><newline46mondego>          testOnReturn=<doubleQuotes46>false<doubleQuotes46><newline46mondego>          /><newline46mondego>"
"2646splitHere46","1842927splitHere46","interprolog.jar"
"2647splitHere46","1842927splitHere46","Properties"
"2648splitHere46","1842927splitHere46","Java build path"
"2649splitHere46","1842927splitHere46","Libraries"
"2650splitHere46","1842927splitHere46","Add External Jar..."
"2651splitHere46","1842927splitHere46","new TermListModel"
"2652splitHere46","1842927splitHere46","import com.declarativa.interprolog.gui.TermListModel"
"2653splitHere46","1842990splitHere46","displayImage"
"2654splitHere46","1842990splitHere46","ColorModel"
"2655splitHere46","1842990splitHere46","IndexColorModel"
"2656splitHere46","1842990splitHere46","BufferedImage"
"2657splitHere46","1842990splitHere46","DirectColorModel"
"2658splitHere46","1842990splitHere46","BufferedImage"
"2659splitHere46","1842990splitHere46","IndexColorModel"
"2660splitHere46","1842990splitHere46","NEAREST_NEIGHBOR"
"2661splitHere46","1842990splitHere46","filter()"
"2662splitHere46","1842990splitHere46","BufferedImage"
"2663splitHere46","1842990splitHere46","DirectColorModel"
"2664splitHere46","1842990splitHere46","displayImage2"
"2665splitHere46","1842990splitHere46","BufferedImage"
"2666splitHere46","1842990splitHere46","DirectColorModel"
"2667splitHere46","1842990splitHere46","ColorConvertOp"
"2668splitHere46","1843010splitHere46","<bean id=<doubleQuotes46>propertyConfigurer<doubleQuotes46> class=<doubleQuotes46>org.springframework.beans.factory.config.PropertyPlaceholderConfigurer<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>locations<doubleQuotes46>><newline46mondego>    <list><newline46mondego>        <value>classpath:defaults.properties</value><newline46mondego>        <value>file:/a/defined/location/project.properties</value><newline46mondego>        <value>file:${AN_ENV_CONFIGURED_DIR}/project.properties</value><newline46mondego>    </list><newline46mondego>  </property><newline46mondego><newline46mondego>  <property name=<doubleQuotes46>ignoreResourceNotFound<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>  <property name=<doubleQuotes46>searchSystemEnvironment<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>  <property name=<doubleQuotes46>systemPropertiesModeName<doubleQuotes46> value=<doubleQuotes46>SYSTEM_PROPERTIES_MODE_OVERRIDE<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"2669splitHere46","1843010splitHere46","<bean id=<doubleQuotes46>configPath<doubleQuotes46> class=<doubleQuotes46>org.springframework.beans.factory.config.MethodInvokingFactoryBean<doubleQuotes46> ><newline46mondego>    <property name=<doubleQuotes46>targetClass<doubleQuotes46> value=<doubleQuotes46>java.lang.String<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>staticMethod<doubleQuotes46> value=<doubleQuotes46>java.lang.System.getenv<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>arguments<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <value>NAME_OF_VARIABLE</value><newline46mondego>        </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"2670splitHere46","1843074splitHere46","public void deleteRecord(Class classOfProduct, Object id) {<newline46mondego><newline46mondego>    PersistenceManager pm = PMF.get().getPersistenceManager();<newline46mondego>    try {<newline46mondego>            Object p = pm.getObjectById(classOfProduct, id);<newline46mondego>            pm.deletePersistent(p);<newline46mondego>    } finally {<newline46mondego>            pm.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2671splitHere46","1843074splitHere46","theObject.deleteRecord(Person.class, s.getId());<newline46mondego>theObject.deleteRecord(Product.class, s.getId());<newline46mondego>"
"2672splitHere46","1843312splitHere46","ColorConvertOp"
"2673splitHere46","1843312splitHere46","IndexColorModel"
"2674splitHere46","1843312splitHere46","Raster"
"2675splitHere46","1843312splitHere46","BufferedImage"
"2676splitHere46","1843312splitHere46","TYPE_BYTE_BINARY"
"2677splitHere46","1843312splitHere46","IndexColorMap"
"2678splitHere46","1843312splitHere46","ColorConvertOp"
"2679splitHere46","1843312splitHere46","filter()"
"2680splitHere46","1843312splitHere46","BufferedImage"
"2681splitHere46","1843623splitHere46","public class Hasher {<newline46mondego><newline46mondego>    public  <V> void toGraphViz(final Graph<V, DefaultWeightedEdge> g, String filename) {<newline46mondego>         final Map<V, Integer> hashcodes = new HashMap< V, Integer>();<newline46mondego>         final int latestHashHolder[] = { 0 }; // array to allow access from inner class<newline46mondego><newline46mondego>         DOTExporter<V, DefaultWeightedEdge> dot <newline46mondego>                 = new DOTExporter<V, DefaultWeightedEdge>(new VertexNameProvider<V> ()) {<newline46mondego><newline46mondego>         // vertex name must be unqiue<newline46mondego>        	@Override<newline46mondego>        	public synchronized String getVertexName(V vertex) {<newline46mondego>        		int hashcode;<newline46mondego>        		if ( hashcodes.containsKey(vertex)){<newline46mondego>        			hashcode = hashcodes.get(vertex);<newline46mondego>        		} else {	    		<newline46mondego>        			hashcode = latestHashHolder[0];<newline46mondego>        			latestHashHolder[0]++;<newline46mondego>        			hashcodes.put(vertex, (Integer)latestHashHolder[0]);<newline46mondego>        		}<newline46mondego>        		return <doubleQuotes46>Vertex-<doubleQuotes46> + hashcode;<newline46mondego>        	}<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2682splitHere46","1843697splitHere46","public void add(String sortedWord, String word) {<newline46mondego><newline46mondego>    lock.read();<newline46mondego><newline46mondego>    if (head == null) {<newline46mondego>        lock.upgrade();<newline46mondego>        head = new TreeNode(sortedWord, word);<newline46mondego>        lock.downgrade();<newline46mondego>        lock.unlock();<newline46mondego>        return;<newline46mondego>    }<newline46mondego><newline46mondego>    TreeNode current = head, previous = null;<newline46mondego>    while (current != null) {<newline46mondego><newline46mondego>            if (current.getSortedWord().equals(sortedWord)) {<newline46mondego>                    lock.upgrade();<newline46mondego>                    current.add(word);<newline46mondego>                    lock.downgrade();<newline46mondego>                    lock.unlock();<newline46mondego>                    return;<newline46mondego>            }<newline46mondego><newline46mondego>            .. more tree traversal, do not touch the lock here ..<newline46mondego>            ...<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    if (previous.compareTo(sortedWord) > 0) {<newline46mondego>        lock.upgrade();<newline46mondego>        previous.setLeft(sortedWord, word);<newline46mondego>        lock.downgrade();<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        lock.upgrade();<newline46mondego>        previous.setRight(sortedWord, word);<newline46mondego>        lock.downgrade();<newline46mondego>    }<newline46mondego><newline46mondego>    lock.unlock();<newline46mondego>}<newline46mondego>"
"2683splitHere46","1843697splitHere46","if( current.getSortedWord().equals(sortedWord) ) {...}"
"2684splitHere46","1843722splitHere46","// Reformatted slightly to avoid scrolling :)<newline46mondego>public static final String XML_POLICY =<newline46mondego>  <doubleQuotes46><?xml version=\<doubleQuotes46>1.0\<doubleQuotes46>?><doubleQuotes46><newline46mondego>  + <doubleQuotes46><!DOCTYPE cross-domain-policy SYSTEM \<doubleQuotes46>/xml/dtds/cross-domain-policy.dtd\<doubleQuotes46>><doubleQuotes46><newline46mondego>  + <doubleQuotes46><cross-domain-policy><doubleQuotes46><newline46mondego>  + <doubleQuotes46><allow-access-from domain=\<doubleQuotes46>*\<doubleQuotes46> to-ports=\<doubleQuotes46>*\<doubleQuotes46> /><doubleQuotes46><newline46mondego>  + <doubleQuotes46></cross-domain-policy><doubleQuotes46>;<newline46mondego>"
"2685splitHere46","1843722splitHere46","public static final String XML_POLICY =<newline46mondego>    <doubleQuotes46><?xml version='1.0'?><doubleQuotes46><newline46mondego>    +<doubleQuotes46><!DOCTYPE cross-domain-policy SYSTEM '/xml/dtds/cross-domain-policy.dtd'><doubleQuotes46><newline46mondego>    + <doubleQuotes46><cross-domain-policy><doubleQuotes46><newline46mondego>    + <doubleQuotes46><allow-access-from domain='*' to-ports='*' /><doubleQuotes46><newline46mondego>    + <doubleQuotes46></cross-domain-policy><doubleQuotes46>;<newline46mondego>"
"2686splitHere46","1843722splitHere46","String x = <doubleQuotes46>I said, \<doubleQuotes46>Hello.\<doubleQuotes46> The child laughed.<doubleQuotes46>;<newline46mondego>"
"2687splitHere46","1843887splitHere46","DetachedCriteria"
"2688splitHere46","1843887splitHere46","Person"
"2689splitHere46","1843887splitHere46","House"
"2690splitHere46","1843887splitHere46","Boat"
"2691splitHere46","1843887splitHere46","Car"
"2692splitHere46","1843887splitHere46","Person"
"2693splitHere46","1843887splitHere46","DetachedCriteria personCriteria = DetachedCriteria.forClass(Person.class);<newline46mondego>"
"2694splitHere46","1843887splitHere46","// this assumes that <doubleQuotes46>Boat<doubleQuotes46> is mapped as many-to-one <doubleQuotes46>boat<doubleQuotes46> property on <doubleQuotes46>Person<doubleQuotes46><newline46mondego>DetachedCriteria boatCriteria = personCriteria.createCriteria(<doubleQuotes46>boat<doubleQuotes46>);<newline46mondego>boatCriteria.add(Restriction.eq(<doubleQuotes46>color<doubleQuotes46>, <doubleQuotes46>red<doubleQuotes46>));<newline46mondego><newline46mondego>// same for house<newline46mondego>DetachedCriteria houseCriteria = personCriteria.createCriteria(<doubleQuotes46>house<doubleQuotes46>);<newline46mondego>houseCriteria.add(Restriction.eq(<doubleQuotes46>color<doubleQuotes46>, <doubleQuotes46>blue<doubleQuotes46>));<newline46mondego><newline46mondego>// when you're all done you search based on <doubleQuotes46>personCriteria<doubleQuotes46><newline46mondego>personCriteria.getExecutableCriteria(session).list();<newline46mondego>"
"2695splitHere46","1843919splitHere46","finally"
"2696splitHere46","1843919splitHere46","try"
"2697splitHere46","1843919splitHere46","finalize()"
"2698splitHere46","1843919splitHere46","finally"
"2699splitHere46","1843919splitHere46","finalize()"
"2700splitHere46","1843919splitHere46","finalize()"
"2701splitHere46","1843919splitHere46","finally"
"2702splitHere46","1843987splitHere46","public Example(){<newline46mondego>    System.out.println(<doubleQuotes46>Example started<doubleQuotes46>);<newline46mondego>    setBounds(100,100,200,200);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>cmGUI instantiated<doubleQuotes46>);<newline46mondego>    CheckingMessagesGUI cmGUI = new CheckingMessagesGUI();<newline46mondego>    System.out.println(<doubleQuotes46>Set cmGUI visible<doubleQuotes46>);<newline46mondego>    cmGUI.setVisible(true);<newline46mondego>    cmGUI.validate();<newline46mondego><newline46mondego>    Thread thread = new Thread(new Runnable() {<newline46mondego>        try {<newline46mondego>            System.out.println(<doubleQuotes46>timer started<doubleQuotes46>);<newline46mondego>            Thread.sleep(5000);<newline46mondego>            System.out.println(<doubleQuotes46>timer done<doubleQuotes46>);<newline46mondego>        } catch(InterruptedException e) {<newline46mondego>        }<newline46mondego>        System.exit(0);<newline46mondego>    });<newline46mondego>    thread.start();<newline46mondego>}<newline46mondego>"
"2703splitHere46","1843987splitHere46","invokeLater"
"2704splitHere46","1843987splitHere46","invokeAndWait"
"2705splitHere46","1844204splitHere46","FileAppender"
"2706splitHere46","1844204splitHere46","RollingFileAppender"
"2707splitHere46","1844204splitHere46","BufferedIO"
"2708splitHere46","1844204splitHere46","BufferSize"
"2709splitHere46","1844335splitHere46","TestRunner"
"2710splitHere46","1844335splitHere46","extends TestCase"
"2711splitHere46","1844335splitHere46","TestRunner.run(IPAddressTest.class);"
"2712splitHere46","1844335splitHere46","JUnitCore.runClasses(IPAddressTest.class);"
"2713splitHere46","1844618splitHere46","`Pattern pattern = Pattern.compile(<doubleQuotes46>(\\*)(?:\\S.*\\S)(\\*)<doubleQuotes46>);`<newline46mondego>"
"2714splitHere46","1844618splitHere46","(\\*), (?:\\S.*\\S), (\\*)"
"2715splitHere46","1844618splitHere46","import java.util.regex.Pattern;<newline46mondego>import java.util.regex.Matcher;<newline46mondego><newline46mondego>public class RegexTest {<newline46mondego><newline46mondego>/**<newline46mondego> * @param args<newline46mondego> */<newline46mondego>public static void main(String[] args) {<newline46mondego><newline46mondego><newline46mondego>        Pattern pattern = Pattern.compile(<doubleQuotes46>(\\*)(?:\\S.*\\S)(\\*)<doubleQuotes46>);<newline46mondego><newline46mondego>        String string =<doubleQuotes46>for example *y text1 text2 u*<doubleQuotes46>;<newline46mondego>        Matcher matcher = pattern.matcher(string);<newline46mondego><newline46mondego>        boolean found = false;<newline46mondego>        if (matcher.find()) {<newline46mondego>            System.out.println(<doubleQuotes46>group count:<doubleQuotes46>+matcher.groupCount());<newline46mondego>            System.out.println(<doubleQuotes46>---------------<doubleQuotes46>);<newline46mondego>            for(int i=1; i<=matcher.groupCount(); i++)<newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>group <doubleQuotes46>+i);<newline46mondego>                System.out.println(<doubleQuotes46>start index:<doubleQuotes46>+matcher.start(i));<newline46mondego>                System.out.println(<doubleQuotes46>end index:<doubleQuotes46>+matcher.end(i));<newline46mondego>                System.out.println(<doubleQuotes46>text:<doubleQuotes46>+string.substring(matcher.start(i), matcher.end(i)));<newline46mondego>                System.out.println(<doubleQuotes46>---------------<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>            found = true;<newline46mondego>        }<newline46mondego>        if(!found){<newline46mondego>            System.out.println(<doubleQuotes46>not found.<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"2716splitHere46","1844618splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>(\\*)(\\S.*\\S)(\\*)<doubleQuotes46>);<newline46mondego>"
"2717splitHere46","1844846splitHere46","Class"
"2718splitHere46","1844846splitHere46","Class<?>"
"2719splitHere46","1845319splitHere46","s"
"2720splitHere46","1845319splitHere46","List<? extends S>"
"2721splitHere46","1845319splitHere46","List<S>"
"2722splitHere46","1845319splitHere46","List<R>"
"2723splitHere46","1845319splitHere46","List<T>"
"2724splitHere46","1845319splitHere46","T"
"2725splitHere46","1845319splitHere46","S"
"2726splitHere46","1845319splitHere46","R"
"2727splitHere46","1845319splitHere46","S"
"2728splitHere46","1845319splitHere46","R"
"2729splitHere46","1845319splitHere46","T"
"2730splitHere46","1845319splitHere46","T"
"2731splitHere46","1845319splitHere46","R"
"2732splitHere46","1845319splitHere46","Double"
"2733splitHere46","1845319splitHere46","List<? extends Number>"
"2734splitHere46","1845319splitHere46","Double"
"2735splitHere46","1845319splitHere46","Number"
"2736splitHere46","1845319splitHere46","List<? extends Number>"
"2737splitHere46","1845319splitHere46","List<Integer>"
"2738splitHere46","1845319splitHere46","Double"
"2739splitHere46","1845319splitHere46","add"
"2740splitHere46","1845319splitHere46","List<? extends S>"
"2741splitHere46","1845319splitHere46","S"
"2742splitHere46","1845319splitHere46","S"
"2743splitHere46","1845319splitHere46","S"
"2744splitHere46","1845319splitHere46","public S getElement(List<? extends S> s) {<newline46mondego>  S result = s.get(0);<newline46mondego>  return result;<newline46mondego>}<newline46mondego>"
"2745splitHere46","1845386splitHere46","List<Callable<Result>> list = ... create list of callables<newline46mondego><newline46mondego>ExecutorService es = Executors.newFixedThreadPool(3);<newline46mondego>List<Future<Result>> results = es.invokeAll(list);<newline46mondego>"
"2746splitHere46","1845386splitHere46","ExecutorService.invokeAll"
"2747splitHere46","1845386splitHere46","ExecutorService"
"2748splitHere46","1845386splitHere46","invokeAll"
"2749splitHere46","1845386splitHere46","Executors"
"2750splitHere46","1845386splitHere46","Callable"
"2751splitHere46","1845433splitHere46","Connection con = DriverManager.getConnection(<newline46mondego>     <doubleQuotes46>jdbc:odbc:Driver={Microsoft Access Driver (*.mdb)};DBQ=c:/bd1.mdb<doubleQuotes46><newline46mondego>      );<newline46mondego>"
"2752splitHere46","1845567splitHere46","Strings"
"2753splitHere46","1845567splitHere46","Readers"
"2754splitHere46","1845777splitHere46","os"
"2755splitHere46","1845777splitHere46","os"
"2756splitHere46","1845893splitHere46","Levels levels = new Levels(); // first need an instance of the enclosing class<newline46mondego><newline46mondego>// The items object contains an implicit reference to the levels object<newline46mondego>Levels.Items items  = levels.new Items();<newline46mondego>"
"2757splitHere46","1846349splitHere46","public void listFilesForFolder(final File folder) {<newline46mondego>    for (final File fileEntry : folder.listFiles()) {<newline46mondego>        if (fileEntry.isDirectory()) {<newline46mondego>            listFilesForFolder(fileEntry);<newline46mondego>        } else {<newline46mondego>            System.out.println(fileEntry.getName());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>final File folder = new File(<doubleQuotes46>/home/you/Desktop<doubleQuotes46>);<newline46mondego>listFilesForFolder(folder);<newline46mondego>"
"2758splitHere46","1846349splitHere46","Files.walk(Paths.get(<doubleQuotes46>/home/you/Desktop<doubleQuotes46>)).forEach(filePath -> {<newline46mondego>    if (Files.isRegularFile(filePath)) {<newline46mondego>        System.out.println(filePath);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"2759splitHere46","1846412splitHere46","DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale);<newline46mondego>df.setTimeZone(User.getTimeZone());<newline46mondego>StringBuffer sb = new StringBuffer();<newline46mondego>FieldPosition fp = new FieldPosition(DateFormat.MINUTE_FIELD);<newline46mondego>sb = df.format(d, sb, fp);<newline46mondego>sb.insert( fp.getEndIndex(), new SimpleDateFormat(<doubleQuotes46>:ss<doubleQuotes46>).format(d) );<newline46mondego>String s = sb.toString();<newline46mondego>"
"2760splitHere46","1846443splitHere46","for f in src/*.java; do <newline46mondego>  file=`basename $f`; <newline46mondego>  if [[ src/$file -nt build/${file//.java/} ]]; then <newline46mondego>     echo src/$file; <newline46mondego>  fi; <newline46mondego>done<newline46mondego>"
"2761splitHere46","1846557splitHere46","public enum Role implements Serializable{<newline46mondego><newline46mondego>    USER, MODERATOR, ADMIN;<newline46mondego><newline46mondego>}<newline46mondego>"
"2762splitHere46","1846557splitHere46","@CollectionOfElements(fetch = FetchType.EAGER)<newline46mondego>  public Set<Role> getRoles() {<newline46mondego>	  return roles;<newline46mondego>  }<newline46mondego><newline46mondego>  public void setRoles(Set<Role> roles) {<newline46mondego>	  this.roles = roles;<newline46mondego>  }<newline46mondego>"
"2763splitHere46","1846706splitHere46","<task:annotation-driven executor=<doubleQuotes46>yourTaskExecutor<doubleQuotes46> scheduler=<doubleQuotes46>yourTaskScheduler<doubleQuotes46>/><newline46mondego>"
"2764splitHere46","1846918splitHere46","BigDecimal"
"2765splitHere46","1846918splitHere46","BigDecimal result = test.add(new BigDecimal(30));<newline46mondego>System.out.println(result);<newline46mondego>"
"2766splitHere46","1846967splitHere46","src/java/"
"2767splitHere46","1846967splitHere46","grails run-app"
"2768splitHere46","1846967splitHere46","grails war"
"2769splitHere46","1847282splitHere46","<jnlp spec=<doubleQuotes46>1.0+<doubleQuotes46> codebase=<doubleQuotes46>http://localhost/ValidatorWEB/<doubleQuotes46> href=<doubleQuotes46>validator.jnlp<doubleQuotes46>><newline46mondego>"
"2770splitHere46","1847282splitHere46","http://localhost:8080/ValidatorWEB/<newline46mondego>"
"2771splitHere46","1847282splitHere46","<jnlp spec=<doubleQuotes46>1.0+<doubleQuotes46> codebase=<doubleQuotes46>http://localhost:8080/ValidatorWEB/<doubleQuotes46> href=<doubleQuotes46>validator.jnlp<doubleQuotes46>><newline46mondego>"
"2772splitHere46","1847307splitHere46","@MappedSuperClass"
"2773splitHere46","1847307splitHere46","@MappedSuperClass<newline46mondego>public class Foo {<newline46mondego>    private Long id;<newline46mondego>    // ... getters and setters<newline46mondego>}<newline46mondego><newline46mondego>@Table(<doubleQuotes46>BAR<doubleQuotes46>)<newline46mondego>@AttributeOverride(name=<doubleQuotes46>id<doubleQuotes46> column=@Column(name = <doubleQuotes46>BAR_ID<doubleQuotes46>))<newline46mondego>public class Bar extends Foo {<newline46mondego>    // ... map your table<newline46mondego>}<newline46mondego>"
"2774splitHere46","1847307splitHere46","Foo"
"2775splitHere46","1847307splitHere46","Bar"
"2776splitHere46","1847307splitHere46","@AttributeOverride"
"2777splitHere46","1847416splitHere46","Pattern tokens = Pattern.compile( <doubleQuotes46>([a-zA-Z0-9]+):\\s*(\\w+(?:,?\\w+)*)<doubleQuotes46> );<newline46mondego><newline46mondego>Matcher m = tokens.matcher( myString );<newline46mondego>while( m.find() ) {<newline46mondego>    System.out.println( <doubleQuotes46>tag:<doubleQuotes46> + m.group(1) + <doubleQuotes46>  value:<doubleQuotes46> + m.group(2) );<newline46mondego>}<newline46mondego>"
"2778splitHere46","1847416splitHere46","Pattern tokens = Pattern.compile( <doubleQuotes46>([a-zA-Z0-9]+):\\s*(\\w+(?:[ ,]+?\\w+)*)(?=\\s+[a-zA-Z0-9]+:)|([a-zA-Z0-9]+):\\s*(\\w+(?:[ ,]+?\\w+)*)<doubleQuotes46> );<newline46mondego>"
"2779splitHere46","1847416splitHere46","Pattern main = Pattern.compile( <doubleQuotes46>([a-zA-Z0-9]+):<doubleQuotes46> );<newline46mondego>Matcher m = main.matcher(myString);<newline46mondego>int lastStart = 0;<newline46mondego>while( m.find() ) {<newline46mondego>    if( lastStart != 0 ) {<newline46mondego>        processToken( myString.substring(lastStart, m.start()) );<newline46mondego>    }<newline46mondego>    lastStart = m.start();<newline46mondego>}<newline46mondego>processToken( myString.substring(lastStart) );<newline46mondego>"
"2780splitHere46","1847511splitHere46","setMnemonic()"
"2781splitHere46","1847511splitHere46","AbstractButton.setDisplayedMnemonicIndex()"
"2782splitHere46","1847943splitHere46","pArray = new int[] {-3, -1, -2, -3, -4};<newline46mondego>"
"2783splitHere46","1848251splitHere46","import java.lang.reflect.Field;<newline46mondego>import java.lang.reflect.ParameterizedType;<newline46mondego>import java.lang.reflect.Type;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    public static List<String> list;<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Field field = Main.class.getField(<doubleQuotes46>list<doubleQuotes46>);<newline46mondego>        Type type = field.getGenericType();<newline46mondego><newline46mondego>        if (type instanceof ParameterizedType) {<newline46mondego>            ParameterizedType pType = (ParameterizedType) type;<newline46mondego>            Type[] types = pType.getActualTypeArguments();<newline46mondego>            for (Type t : types) {<newline46mondego>                System.out.println(t);<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            System.err.println(<doubleQuotes46>not parameterized<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2784splitHere46","1848251splitHere46","class java.lang.String<newline46mondego>"
"2785splitHere46","1848392splitHere46","<tag><![CDATA[This is<newline46mondego>three<newline46mondego>lines]]></tag><newline46mondego>"
"2786splitHere46","1848392splitHere46","<tag>This is<newline46mondego>three<newline46mondego>lines</tag><newline46mondego>"
"2787splitHere46","1848400splitHere46","registerFunction(<doubleQuotes46>concat<doubleQuotes46>, new VarArgsSQLFunction(Hibernate.STRING, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"2788splitHere46","1848400splitHere46","Dialect d = ((SessionFactoryImpl)sessionFactory).getDialect()<newline46mondego>"
"2789splitHere46","1848770splitHere46","@Path(<doubleQuotes46>/transactions<doubleQuotes46>)<newline46mondego>public class TestResource<X> {<newline46mondego><newline46mondego>	private Class<X> jaxbClass;<newline46mondego><newline46mondego>	@POST<newline46mondego>	@Path(<doubleQuotes46>/{transaction-id}<doubleQuotes46>)<newline46mondego>	@Consumes(<doubleQuotes46>application/xml<doubleQuotes46>)<newline46mondego>	public Response processPost(@Context Providers providers, @Context HttpHeaders httpHeaders, @PathParam(<doubleQuotes46>transaction-id<doubleQuotes46>) final long transactionId,<newline46mondego>			final String xmlString) throws WebApplicationException, IOException {<newline46mondego><newline46mondego>		MessageBodyReader<X> reader = providers.getMessageBodyReader(jaxbClass, null, null, MediaType.APPLICATION_XML_TYPE);<newline46mondego>		InputStream entityStream = new ByteArrayInputStream(xmlString.getBytes());<newline46mondego>		final X xmlObject = reader.readFrom(jaxbClass, null, null, MediaType.APPLICATION_XML_TYPE, httpHeaders.getRequestHeaders(), entityStream);<newline46mondego><newline46mondego>		//insert logic here<newline46mondego><newline46mondego>		return Response.ok().build();<newline46mondego>	}<newline46mondego>}<newline46mondego>"
"2790splitHere46","1848922splitHere46","%JBOSS_HOME%\server\<serverName>\deploy\jboss-web.deployer\META-INF\jboss-service.xml"
"2791splitHere46","1848922splitHere46","<attribute name=<doubleQuotes46>UseJBossWebLoader<doubleQuotes46>>true</attribute>"
"2792splitHere46","1848922splitHere46","deploy/"
"2793splitHere46","1849113splitHere46","public static void main (String[] args) {<newline46mondego>    new MainFrame ();<newline46mondego>}<newline46mondego>"
"2794splitHere46","1849113splitHere46","javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            new MainFrame();<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"2795splitHere46","1849114splitHere46","ThreadLocal"
"2796splitHere46","1849296splitHere46","Runtime.getRuntime().exec( <doubleQuotes46>cmd.exe /C c:\\targetFolder\\myBatch.bat<doubleQuotes46> );<newline46mondego>"
"2797splitHere46","1849351splitHere46","3.14<newline46mondego>3.140<newline46mondego>3.140000<newline46mondego>3.14000000000000012434<newline46mondego>"
"2798splitHere46","1849351splitHere46","BigDecimal"
"2799splitHere46","1849612splitHere46","DoAskForLaneClear(LanePair.this);<newline46mondego>"
"2800splitHere46","1849612splitHere46","this"
"2801splitHere46","1849612splitHere46","TimerTask"
"2802splitHere46","1849612splitHere46","LanePair"
"2803splitHere46","1849612splitHere46","LanePair.this"
"2804splitHere46","1849673splitHere46","Query query = em.createQuery(sql.toString()).setHint(<doubleQuotes46>toplink.refresh<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>"
"2805splitHere46","1849767splitHere46","1:public class Server extends HttpServlet {<newline46mondego>2:  public static int requestNo = 0;<newline46mondego>3:  public void doGet(HttpServletRequest req, HttpServletResponse resp)<newline46mondego>4:  {<newline46mondego>5:     requestNo++;<newline46mondego>6:     resp.getWriter().println(requestNo);<newline46mondego>7:  }<newline46mondego>8:}<newline46mondego>"
"2806splitHere46","1849852splitHere46","Map<String, Integer>"
"2807splitHere46","1849852splitHere46","public void add(String s) {<newline46mondego>    if (map.containsKey(s)) {<newline46mondego>    	map.put(s, map.get(s) + 1);<newline46mondego>    } else {<newline46mondego>    	map.put(s, 1);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2808splitHere46","1850129splitHere46","double DELTA = 10^-6//your error threshold here<newline46mondego>double STEP_SIZE = 10.0;<newline46mondego>double oldValue=Double.MAX_VALUE;<newline46mondego>double newValue=oldValue;<newline46mondego>double lowerBound=-10; //or whatever you want to start with--for (-infinity,1), I'd<newline46mondego>                       //start with something like -10<newline46mondego>double upperBound=1;<newline46mondego><newline46mondego>do{<newline46mondego>     oldValue = newValue;<newline46mondego><newline46mondego>     lowerBound-= STEP_SIZE;<newline46mondego>     newValue = integrate(lowerBound,upperBound); //perform your integration methods here<newline46mondego>}while(Math.abs(newValue-oldValue)>DELTA);<newline46mondego>"
"2809splitHere46","1850312splitHere46","http://localhost:8080/manager/start?path=/myapp"
"2810splitHere46","1850312splitHere46","http://localhost:8080/manager/stop?path=/myapp"
"2811splitHere46","1850750splitHere46","//select all elements which don't have a type attribute<newline46mondego>String xpath = <doubleQuotes46>//result[not(@type)]<doubleQuotes46>;<newline46mondego>assertXpathsEqual(xpath, file1sub, xpath, file1sub2)<newline46mondego>"
"2812splitHere46","1850757splitHere46","IDisposable"
"2813splitHere46","1850835splitHere46","O(1)"
"2814splitHere46","1850835splitHere46","clear()"
"2815splitHere46","1851021splitHere46","cache-control"
"2816splitHere46","1851021splitHere46","cache"
"2817splitHere46","1851021splitHere46","public"
"2818splitHere46","1851021splitHere46","embed"
"2819splitHere46","1851021splitHere46","object"
"2820splitHere46","1851021splitHere46","iframe"
"2821splitHere46","1851021splitHere46","expires"
"2822splitHere46","1851021splitHere46","last-modified"
"2823splitHere46","1851021splitHere46","etag"
"2824splitHere46","1851069splitHere46","public static void setIconImages(final java.awt.Window window, <newline46mondego>                                 final List<? extends Image> icons) <newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        Method setIconImagesMethod;<newline46mondego><newline46mondego>        setIconImagesMethod = // use reflection to get the setIconImages method. <newline46mondego>        setIconImagesMethod.invoke(window, icons);<newline46mondego>    }<newline46mondego>    catch(final NoSuchMethodException ex)<newline46mondego>    {<newline46mondego>        // fall back to the single image method<newline46mondego>        window.setIconImage(icons.get(0));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2825splitHere46","1851684splitHere46","Map<String,Person> map= new HashMap<String,Person>();<newline46mondego>(...)<newline46mondego>map.put(<doubleQuotes46>a<doubleQuotes46>+i,new Person(hierarchy[i]));<newline46mondego>"
"2826splitHere46","1851801splitHere46","weblogic.jar"
"2827splitHere46","1851801splitHere46","api.jar"
"2828splitHere46","1851801splitHere46","{BEA_HOME}/wlsever_10.3/server/lib/"
"2829splitHere46","1851801splitHere46","MANIFEST.MF"
"2830splitHere46","1851801splitHere46","{BEA_HOME}/modules/*.jar"
"2831splitHere46","1851801splitHere46","{BEA_HOME}/modules/javax.servlet_1.0.0.0_2-5.jar"
"2832splitHere46","1851982splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.ListIterator;<newline46mondego><newline46mondego>public class Main<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        List<Integer> list = new ArrayList<Integer>();<newline46mondego>        list.add(1);<newline46mondego>        list.add(2);<newline46mondego>        list.add(3);<newline46mondego><newline46mondego>        // Is the sequence returned by i1 and i2 is the same?<newline46mondego>        ListIterator<Integer> i1 = list.listIterator();<newline46mondego>        ListIterator<Integer> i2 = list.listIterator();<newline46mondego><newline46mondego>        while (i1.hasNext())<newline46mondego>        {<newline46mondego>            System.out.println(i1.next());<newline46mondego>        }<newline46mondego>        while (i2.hasNext())<newline46mondego>        {<newline46mondego>            System.out.println(i2.next());<newline46mondego>        }    <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2833splitHere46","1851982splitHere46","1<newline46mondego>2<newline46mondego>3<newline46mondego>1<newline46mondego>2<newline46mondego>3<newline46mondego>"
"2834splitHere46","1852104splitHere46","Custom row mapper:<newline46mondego>186 ms (invocation count 224 (weird...))<newline46mondego>ParameterizedBeanPropertyRowMapper:<newline46mondego>1301 ms (invocation count 112)<newline46mondego>"
"2835splitHere46","1852244splitHere46","flush()"
"2836splitHere46","1852510splitHere46","it = list.iterator();<newline46mondego>"
"2837splitHere46","1852510splitHere46","javax.microedition.io"
"2838splitHere46","1852705splitHere46","Map<Integer, Integer>"
"2839splitHere46","1852705splitHere46","int mostFrequent(int... ary) {<newline46mondego>    Map<Integer, Integer> m = new HashMap<Integer, Integer>();<newline46mondego><newline46mondego>    for (int a : ary) {<newline46mondego>        Integer freq = m.get(a);<newline46mondego>        m.put(a, (freq == null) ? 1 : freq + 1);<newline46mondego>    }<newline46mondego><newline46mondego>    int max = -1;<newline46mondego>    int mostFrequent = -1;<newline46mondego><newline46mondego>    for (Map.Entry<Integer, Integer> e : m.entrySet()) {<newline46mondego>        if (e.getValue() > max) {<newline46mondego>            mostFrequent = e.getKey();<newline46mondego>            max = e.getValue();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return mostFrequent;<newline46mondego>}<newline46mondego>"
"2840splitHere46","1853158splitHere46","DisplayKitten()"
"2841splitHere46","1853185splitHere46","MessageHolder"
"2842splitHere46","1853185splitHere46","MessagePrinterInternal"
"2843splitHere46","1853185splitHere46","MessagePrinterInternal"
"2844splitHere46","1853265splitHere46","SimpleAttributSet keyWord = new SimpleAttributeSet();<newline46mondego>StyleConstants.setForeground(keyWord, Color.RED);<newline46mondego>StyleConstants.setBackground(keyWord, Color.YELLOW);<newline46mondego>StyleConstants.setBold(keyWord, true);<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>    doc.insertString(doc.getLength(), <doubleQuotes46>\nSome more text<doubleQuotes46>, keyWord );<newline46mondego>}<newline46mondego>catch(Exception e) {}<newline46mondego>"
"2845splitHere46","1853614splitHere46","BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));<newline46mondego>StringBuilder fullResponse = new StringBuilder();<newline46mondego>String str;<newline46mondego>while ((str = in.readLine()) != null) {<newline46mondego>  fullResponse.append(str);<newline46mondego>}<newline46mondego>"
"2846splitHere46","1853614splitHere46","JSONObject obj = new JSONObject(fullResponse.toString()); //[1]<newline46mondego>"
"2847splitHere46","1853614splitHere46","JSONArray arr = new JSONArray(fullResponse.toStrin()); //[2]<newline46mondego>"
"2848splitHere46","1853651splitHere46","% java -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n LZWDecompress<newline46mondego><newline46mondego>% jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=8000<newline46mondego>"
"2849splitHere46","1853966splitHere46","worker.isDone()"
"2850splitHere46","1853966splitHere46","SwingWorker.isDone()"
"2851splitHere46","1853966splitHere46","FutureTask"
"2852splitHere46","1853966splitHere46","Sync"
"2853splitHere46","1853966splitHere46","state"
"2854splitHere46","1853966splitHere46","isDone()"
"2855splitHere46","1853966splitHere46","synchronized"
"2856splitHere46","1853966splitHere46","worker.get()"
"2857splitHere46","1853966splitHere46","img"
"2858splitHere46","1854222splitHere46","dump decompressed<newline46mondego>"
"2859splitHere46","1854337splitHere46","class SomeClass<T> {<newline46mondego>  private T data;<newline46mondego><newline46mondego>  public SomeClass() {<newline46mondego>  }<newline46mondego><newline46mondego>  public void set(T data_) {<newline46mondego>    data = data_;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2860splitHere46","1854849splitHere46","em.persist(obj)"
"2861splitHere46","1854849splitHere46","obj"
"2862splitHere46","1854849splitHere46","persist"
"2863splitHere46","1854849splitHere46","persist"
"2864splitHere46","1854849splitHere46","em.flush()"
"2865splitHere46","1854905splitHere46","String"
"2866splitHere46","1854905splitHere46","compareToIgnoreCase(String str)"
"2867splitHere46","1854933splitHere46","<on-start><newline46mondego> <evaluate expression=<doubleQuotes46>youractionClass.createbackingBean()<doubleQuotes46> result=<doubleQuotes46>conversationScope.yourbean<doubleQuotes46> /> <newline46mondego>  </on-start>"
"2868splitHere46","1854933splitHere46","<view-state id=<doubleQuotes46>registerForm<doubleQuotes46> model=<doubleQuotes46>registerBean<doubleQuotes46><newline46mondego>"
"2869splitHere46","1855183splitHere46","intern()"
"2870splitHere46","1855183splitHere46","new String()"
"2871splitHere46","1855183splitHere46","String s1 = <doubleQuotes46>Rakesh<doubleQuotes46>;<newline46mondego>String s2 = <doubleQuotes46>Rakesh<doubleQuotes46>;<newline46mondego>String s3 = <doubleQuotes46>Rakesh<doubleQuotes46>.intern();<newline46mondego>String s4 = new String(<doubleQuotes46>Rakesh<doubleQuotes46>);<newline46mondego>String s5 = new String(<doubleQuotes46>Rakesh<doubleQuotes46>).intern();<newline46mondego><newline46mondego>if ( s1 == s2 ){<newline46mondego>    System.out.println(<doubleQuotes46>s1 and s2 are same<doubleQuotes46>);  // 1.<newline46mondego>}<newline46mondego><newline46mondego>if ( s1 == s3 ){<newline46mondego>    System.out.println(<doubleQuotes46>s1 and s3 are same<doubleQuotes46> );  // 2.<newline46mondego>}<newline46mondego><newline46mondego>if ( s1 == s4 ){<newline46mondego>    System.out.println(<doubleQuotes46>s1 and s4 are same<doubleQuotes46> );  // 3.<newline46mondego>}<newline46mondego><newline46mondego>if ( s1 == s5 ){<newline46mondego>    System.out.println(<doubleQuotes46>s1 and s5 are same<doubleQuotes46> );  // 4.<newline46mondego>}<newline46mondego>"
"2872splitHere46","1855183splitHere46","s1 and s2 are same<newline46mondego>s1 and s3 are same<newline46mondego>s1 and s5 are same<newline46mondego>"
"2873splitHere46","1855485splitHere46","RichList<T>"
"2874splitHere46","1855485splitHere46","List"
"2875splitHere46","1855485splitHere46","List"
"2876splitHere46","1855485splitHere46","EqualityChecker<T>"
"2877splitHere46","1855485splitHere46","EqualityChecker<T>"
"2878splitHere46","1855485splitHere46","List"
"2879splitHere46","1855485splitHere46","EqualityChecker"
"2880splitHere46","1855485splitHere46","EqualityChecker<T>"
"2881splitHere46","1855485splitHere46","EqualityChecker"
"2882splitHere46","1855547splitHere46","class Person<newline46mondego>  {<newline46mondego>       int customerNumber;<newline46mondego>       String name;<newline46mondego>       String surName;<newline46mondego>       String address;<newline46mondego>  };<newline46mondego>"
"2883splitHere46","1855547splitHere46","String [] temp;<newline46mondego>"
"2884splitHere46","1855547splitHere46","if(testarray[i] > testarray[i+1])<newline46mondego>"
"2885splitHere46","1855547splitHere46","if(testarray[i][1] > testarray[i+1][1])<newline46mondego>"
"2886splitHere46","1855580splitHere46","jsp:useBean"
"2887splitHere46","1855580splitHere46","public class User {<newline46mondego><newline46mondego>    private String name;<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2888splitHere46","1855580splitHere46","doGet()"
"2889splitHere46","1855580splitHere46","protected void doGet(HttpServletRequest request, HttpServletResponse response) {<newline46mondego>    User user = new User();<newline46mondego>    user.setName(<doubleQuotes46>Jitendra<doubleQuotes46>);<newline46mondego>    request.setAttribute(<doubleQuotes46>user<doubleQuotes46>, user); // Store in request scope.<newline46mondego>    request.getRequestDispatcher(<doubleQuotes46>/WEB-INF/show.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>}<newline46mondego>"
"2890splitHere46","1855580splitHere46","web.xml"
"2891splitHere46","1855580splitHere46","url-pattern"
"2892splitHere46","1855580splitHere46","/show"
"2893splitHere46","1855580splitHere46","http://example.com/context/show"
"2894splitHere46","1855580splitHere46","doGet()"
"2895splitHere46","1855580splitHere46","show.jsp"
"2896splitHere46","1855580splitHere46","/WEB-INF"
"2897splitHere46","1855580splitHere46","http://example.com/context/show.jsp"
"2898splitHere46","1855580splitHere46","<p>User name: ${user.name}</p><newline46mondego>"
"2899splitHere46","1855580splitHere46","${user}"
"2900splitHere46","1855580splitHere46","user"
"2901splitHere46","1855580splitHere46","jspContext.findAttribute(<doubleQuotes46>user<doubleQuotes46>)"
"2902splitHere46","1855580splitHere46","User"
"2903splitHere46","1855580splitHere46","${user.name}"
"2904splitHere46","1855580splitHere46","getName()"
"2905splitHere46","1855580splitHere46","User"
"2906splitHere46","1855580splitHere46","jsp:useBean"
"2907splitHere46","1855717splitHere46","replaceAll(<doubleQuotes46>;.*<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);"
"2908splitHere46","1855759splitHere46","weblogic-application.xml"
"2909splitHere46","1855759splitHere46","META-INF/weblogic-application.xml"
"2910splitHere46","1855759splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><weblogic-application><newline46mondego>  <application-param><newline46mondego>    <param-name>webapp.encoding.default</param-name><newline46mondego>    <param-value>UTF-8</param-value><newline46mondego>  </application-param><newline46mondego>  <prefer-application-packages><newline46mondego>    <package-name>com.sun.xml.*</package-name><newline46mondego>    <package-name>javax.xml.bind.*</package-name><newline46mondego>    <package-name>javax.jws.*</package-name><newline46mondego>    <package-name>javax.xml.soap.*</package-name><newline46mondego>  </prefer-application-packages><newline46mondego></weblogic-application><newline46mondego>"
"2911splitHere46","1855759splitHere46","WEB-INF/lib"
"2912splitHere46","1855759splitHere46","prefer-application-packages"
"2913splitHere46","1855774splitHere46","public static void main(String[] args) {<newline46mondego>    Scanner scan;<newline46mondego>    File file = new File(<doubleQuotes46>resources\\scannertester\\data.txt<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        scan = new Scanner(file);<newline46mondego><newline46mondego>        while(scan.hasNextDouble())<newline46mondego>        {<newline46mondego>            System.out.println( scan.nextDouble() );<newline46mondego>        }<newline46mondego><newline46mondego>    } catch (FileNotFoundException e1) {<newline46mondego>            e1.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2914splitHere46","1855774splitHere46","0.0<newline46mondego>0.0<newline46mondego>0.023<newline46mondego>0.023<newline46mondego>0.05<newline46mondego>0.05<newline46mondego>0.2<newline46mondego>0.2<newline46mondego>0.5<newline46mondego>0.5<newline46mondego>0.8<newline46mondego>0.8<newline46mondego>0.95<newline46mondego>0.95<newline46mondego>0.977<newline46mondego>0.977<newline46mondego>1.0<newline46mondego>1.0<newline46mondego>"
"2915splitHere46","1855886splitHere46","<service-include file-path=<doubleQuotes46>remoting-config.xml<doubleQuotes46> /><newline46mondego>"
"2916splitHere46","1855886splitHere46","<flex:message-broker/>"
"2917splitHere46","1855886splitHere46","applicationContext.xml"
"2918splitHere46","1855886splitHere46","/WEB-INF/flex/services-config.xml"
"2919splitHere46","1855886splitHere46","remoting-config.xml"
"2920splitHere46","1855886splitHere46","services-config.xml"
"2921splitHere46","1855886splitHere46","<flex:remoting-destination>"
"2922splitHere46","1855886splitHere46","<bean id=<doubleQuotes46>productService<doubleQuotes46> class=<doubleQuotes46>flex.samples.product.ProductServiceImpl<doubleQuotes46> /><newline46mondego><flex:remoting-destination ref=<doubleQuotes46>productService<doubleQuotes46> /><newline46mondego>"
"2923splitHere46","1855886splitHere46","applicationContext.xml"
"2924splitHere46","1855886splitHere46","<context:annotation-config/>"
"2925splitHere46","1855886splitHere46","@Service(<doubleQuotes46>productService<doubleQuotes46>)<newline46mondego>@RemotingDestination(channels={<doubleQuotes46>my-amf<doubleQuotes46>,<doubleQuotes46>my-secure-amf<doubleQuotes46>})<newline46mondego>public class ProductServiceImpl implements ProductService {<newline46mondego>etc...<newline46mondego>"
"2926splitHere46","1855943splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    arrayConvert array_convert = new arrayConvert();<newline46mondego>    int[] intArray = array_convert.StrArrtoIntArr(args);<newline46mondego>    array_convert.displayArray(intArray);<newline46mondego>}<newline46mondego>"
"2927splitHere46","1855943splitHere46","import java.lang.String;"
"2928splitHere46","1855943splitHere46","String strArray[];"
"2929splitHere46","1855943splitHere46","strArray[]"
"2930splitHere46","1855943splitHere46","StrArrtoIntArr"
"2931splitHere46","1856122splitHere46","Thread.currentThread().getContextClassLoader()<newline46mondego>"
"2932splitHere46","1856122splitHere46","JEditorPane.registerEditorKitForContentType"
"2933splitHere46","1856122splitHere46","JEditorPane"
"2934splitHere46","1856122splitHere46","MyClass.class.getClassLoader()"
"2935splitHere46","1856122splitHere46","ClassLoader"
"2936splitHere46","1856122splitHere46","Thread thread = Thread.currentThread();<newline46mondego>ClassLoader old = thread.getContextClassLoader();<newline46mondego>thread.setContextClassLoader(fooClassLoader);<newline46mondego>try {<newline46mondego>  // do call that depends on context ClassLoader<newline46mondego>} finally {<newline46mondego>  thread.setContextClassLoader(old);<newline46mondego>}<newline46mondego>"
"2937splitHere46","1856122splitHere46","setContextClassLoader"
"2938splitHere46","1856122splitHere46","ClassLoader"
"2939splitHere46","1856122splitHere46","ClassLoader"
"2940splitHere46","1856122splitHere46","private ClassLoader findClassLoaderForContext(Class<?> c) {<newline46mondego>  ClassLoader context = Thread.currentThread().getContextClassLoader();<newline46mondego>  ClassLoader me = c.getClassLoader();<newline46mondego>  ClassLoader system = ClassLoader.getSystemClassLoader();<newline46mondego>  return (context == null) ? (me == null) ? system : me : context;<newline46mondego>}<newline46mondego>"
"2941splitHere46","1856166splitHere46","i"
"2942splitHere46","1856166splitHere46","i + 1"
"2943splitHere46","1856166splitHere46","i"
"2944splitHere46","1856166splitHere46","i +"
"2945splitHere46","1856166splitHere46","if(customerdata[i][sortafter].compareTo(customerdata[i+1][sortafter]) < 0){<newline46mondego>"
"2946splitHere46","1856166splitHere46","if(customerdata[i][sortafter].compareTo(customerdata[i+1][sortafter]) > 0){<newline46mondego>"
"2947splitHere46","1856321splitHere46","public Person(Integer id, String name) throws InvalidPersonException<newline46mondego>         if (name==null) throw new InvalidPersonException(<doubleQuotes46>You cant have a person without a name<doubleQuotes46>);<newline46mondego>         ...<newline46mondego>"
"2948splitHere46","1856470splitHere46","java.io.Serializable"
"2949splitHere46","1856470splitHere46","Serializable"
"2950splitHere46","1856620splitHere46","import java.io.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class Assignment4<newline46mondego>{<newline46mondego>    public static void main(String[] args) throws IOException<newline46mondego>    {<newline46mondego>    	Map<String, String> morseCodes = new HashMap<String, String>();<newline46mondego>    	File file1 = new File (<doubleQuotes46>morsecode.txt<doubleQuotes46>);<newline46mondego>    	Scanner in = new Scanner(file1);  <newline46mondego><newline46mondego>    	while (in.hasNext())<newline46mondego>        {<newline46mondego>            String letter = in.next();          <newline46mondego>    		String code = in.next();   <newline46mondego>    		morseCodes.put(code, letter);<newline46mondego>        }<newline46mondego><newline46mondego>        File morseCode = new File(<doubleQuotes46>message.txt<doubleQuotes46>);<newline46mondego>        BufferedReader bufferedReader = new BufferedReader(new FileReader(morseCode));<newline46mondego>        String line;<newline46mondego><newline46mondego>        while ((line = bufferedReader.readLine()) != null)<newline46mondego>        {<newline46mondego>    		String letter = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>            for (String morseLetter: line.split(<doubleQuotes46> <doubleQuotes46>))<newline46mondego>            {<newline46mondego>    			letter = morseCodes.get(morseLetter);<newline46mondego>                System.out.print(letter);<newline46mondego>    		}<newline46mondego><newline46mondego>    		if (letter.equals(<doubleQuotes46>.<doubleQuotes46>)) {<newline46mondego>    			// Insert a new line after a period.<newline46mondego>    			System.out.println();<newline46mondego>    		} else {<newline46mondego>    			// Insert a space between words.<newline46mondego>    			System.out.print(' ');<newline46mondego>    		}<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2951splitHere46","1856620splitHere46","THIS IS A TEST PROGRAM.<newline46mondego>IF YOU SEE THIS MESSAGE THAT IS GOOD NEWS YOUR PROGRAM WORKS.<newline46mondego>"
"2952splitHere46","1856917splitHere46","JLabel label = new JLabel(<doubleQuotes46><html>Te<u>x</u>t</html><doubleQuotes46>);<newline46mondego>"
"2953splitHere46","1857602splitHere46","else if (numvalue = 0) { **//This is where it highlights my error**<newline46mondego>"
"2954splitHere46","1857602splitHere46","else if (numvalue == 0) { **//This is where it highlights my error**<newline46mondego>"
"2955splitHere46","1857607splitHere46","public void removeNode(Node previousNode, Node nodeToRemove) {<newline46mondego>  if (previousNode != null) {<newline46mondego>    previousNode.setLink(nodeToRemove.getLink());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2956splitHere46","1857607splitHere46","N1 -> N2 -> N3 -> N4<newline46mondego>"
"2957splitHere46","1857607splitHere46","N1 -> N3 -> N4<newline46mondego>"
"2958splitHere46","1857708splitHere46","import javax.swing.JFrame;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego><newline46mondego>public class Main<newline46mondego>{<newline46mondego>    private Main()<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        SwingUtilities.invokeLater(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                createAndShowGUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private static void createAndShowGUI()<newline46mondego>    {<newline46mondego>        final FooFrame frame;<newline46mondego><newline46mondego>        frame = new FooFrame();<newline46mondego>        frame.setupGUI();<newline46mondego>        frame.pack();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2959splitHere46","1857708splitHere46","import java.awt.FlowLayout;<newline46mondego>import java.awt.LayoutManager;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego><newline46mondego>public class FooFrame<newline46mondego>    extends JFrame<newline46mondego>{<newline46mondego>    private final JButton incrementBtn;<newline46mondego>    private final JButton decrementBtn;<newline46mondego>    private int value;<newline46mondego><newline46mondego>    {<newline46mondego>        incrementBtn = new JButton(<doubleQuotes46>++<doubleQuotes46>);<newline46mondego>        decrementBtn = new JButton(<doubleQuotes46>--<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    private class IncrementListener<newline46mondego>        implements ActionListener<newline46mondego>    {<newline46mondego><newline46mondego>        public void actionPerformed(final ActionEvent evt)<newline46mondego>        {<newline46mondego>            increment();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private class DecrementListener<newline46mondego>        implements ActionListener<newline46mondego>    {<newline46mondego><newline46mondego>        public void actionPerformed(final ActionEvent evt)<newline46mondego>        {<newline46mondego>            decrement();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void setupGUI()<newline46mondego>    {<newline46mondego>        final LayoutManager layout;<newline46mondego><newline46mondego>        layout = new FlowLayout();<newline46mondego>        setLayout(layout);<newline46mondego>        setupListeners();<newline46mondego>        addComponents();<newline46mondego>    }<newline46mondego><newline46mondego>    private void setupListeners()<newline46mondego>    {<newline46mondego>        incrementBtn.addActionListener(new IncrementListener());<newline46mondego>        decrementBtn.addActionListener(new DecrementListener());<newline46mondego>    }<newline46mondego><newline46mondego>    private void addComponents()<newline46mondego>    {<newline46mondego>        add(incrementBtn);<newline46mondego>        add(decrementBtn);<newline46mondego>    }<newline46mondego><newline46mondego>    private void increment()<newline46mondego>    {<newline46mondego>        value++;<newline46mondego>        System.out.println(<doubleQuotes46>value = <doubleQuotes46> + value);<newline46mondego>    }<newline46mondego><newline46mondego>    private void decrement()<newline46mondego>    {<newline46mondego>        value--;<newline46mondego>        System.out.println(<doubleQuotes46>value = <doubleQuotes46> + value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2960splitHere46","1857784splitHere46","Class.getDeclaredMethods()"
"2961splitHere46","1857784splitHere46","Class c = ob.getClass();<newline46mondego>for (Method method : c.getDeclaredMethods()) {<newline46mondego>  if (method.getAnnotation(PostConstruct.class) != null) {<newline46mondego>    System.out.println(method.getName());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2962splitHere46","1857784splitHere46","Class.getMethods()"
"2963splitHere46","1857784splitHere46","Class c = ob.getClass();<newline46mondego>for (Class c = ob.getClass(); c != null; c = c.getSuperclass()) {<newline46mondego>  for (Method method : c.getDeclaredMethods()) {<newline46mondego>    if (method.getAnnotation(PostConstruct.class) != null) {<newline46mondego>      System.out.println(c.getName() + <doubleQuotes46>.<doubleQuotes46> + method.getName());<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2964splitHere46","1857970splitHere46","String trimmed = original_string.replaceAll(<doubleQuotes46>\n<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2965splitHere46","1857970splitHere46","replaceAll(<doubleQuotes46>\\s+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>)"
"2966splitHere46","1858037splitHere46","@SuppressWarnings( <doubleQuotes46>deprecation<doubleQuotes46> )<newline46mondego>"
"2967splitHere46","1858578splitHere46","public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        String x = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>        String y = new String(x);<newline46mondego>        System.out.println(x == y); // Prints false<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2968splitHere46","1858578splitHere46","public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        String x = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>        String y = <doubleQuotes46>hel<doubleQuotes46> + <doubleQuotes46>lo<doubleQuotes46>; // Concatenated at compile-time<newline46mondego>        System.out.println(x == y); // Prints true<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2969splitHere46","1858635splitHere46","<%@ page import=<doubleQuotes46>java.util.*<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>org.ivec.eresearch.knowledgeportal.dao.CategoryDao<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>org.ivec.eresearch.knowledgeportal.model.Category<doubleQuotes46> %><newline46mondego>"
"2970splitHere46","1858635splitHere46","<%@ page import=<doubleQuotes46>java.util.*<doubleQuotes46> %><newline46mondego> <%@ page import=<doubleQuotes46>org.ivec.eresearch.knowledgeportal.dao.CategoryDao<doubleQuotes46> %><newline46mondego> <%@ page import=<doubleQuotes46>org.ivec.eresearch.knowledgeportal.model.Category;<doubleQuotes46> %><newline46mondego>"
"2971splitHere46","1858732splitHere46","// Define the viewer<newline46mondego>viewer = new ListViewer(parent);<newline46mondego>viewer.setContentProvider(new ObservableListContentProvider());<newline46mondego>List<Person> persons = new ArrayList<Person>();<newline46mondego>// Just for testing we create sample data<newline46mondego>createExampleData(persons);<newline46mondego>input = new WritableList(persons, Person.class);<newline46mondego>// Set the writeableList as input for the viewer<newline46mondego>viewer.setInput(input);<newline46mondego>"
"2972splitHere46","1858732splitHere46","org.eclipse.jface.databinding.viewers.ObservableListTreeContentProvider"
"2973splitHere46","1858786splitHere46","<newline46mondego>@Entity<newline46mondego>@Inheritance(strategy = InheritanceType.SINGLE_TABLE)<newline46mondego>@DiscriminatorColumn(name = <doubleQuotes46>request_type<doubleQuotes46>, discriminatorType = DiscriminatorType.STRING)<newline46mondego>public abstract class CashTransferCurrencyAmount {<newline46mondego>    // id, version and so on<newline46mondego><newline46mondego>    @Column(length = 3)<newline46mondego>    private String currencyCode;<newline46mondego><newline46mondego>    @Basic<newline46mondego>    private BigDecimal amount;<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    private CashTransfer cashTransfer;<newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>REQUIRED<doubleQuotes46>)<newline46mondego>public class CashTransferCurrencyAmountRequired extends CashTransferCurrencyAmount {<newline46mondego>    // required anount specific stuff here<newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>ACTUAL<doubleQuotes46>)<newline46mondego>public class CashTransferCurrencyAmountActual extends CashTransferCurrencyAmount {<newline46mondego>    // actual anount specific stuff here<newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>public class CashTransfer {<newline46mondego>    // id, version and so on<newline46mondego><newline46mondego>    @OneToMany(mappedBy=<doubleQuotes46>cashTransfer<doubleQuotes46>)<newline46mondego>    private Set requiredCurrencyAmountSet = new HashSet();<newline46mondego><newline46mondego>//Stackoverflow deleting my generic sets! But it's exactly the same as in your code...<newline46mondego><newline46mondego>    @OneToMany(mappedBy=<doubleQuotes46>cashTransfer<doubleQuotes46>)<newline46mondego>    private Set actualCurrencyAmountSet = new HashSet();<newline46mondego>}<newline46mondego>"
"2974splitHere46","1858842splitHere46","Microsoft SQL Server 2005 JDBC Driver\sqljdbc_1.2\enu\sqljdbc.jar"
"2975splitHere46","1858842splitHere46","-cp"
"2976splitHere46","1858842splitHere46","java"
"2977splitHere46","1858842splitHere46","com.microsoft.sqlserver.jdbc.SQLServerDriver"
"2978splitHere46","1858842splitHere46","jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]"
"2979splitHere46","1858842splitHere46","help"
"2980splitHere46","1858842splitHere46","help/samples/connections/ConnectURL.java"
"2981splitHere46","1858927splitHere46","if"
"2982splitHere46","1858927splitHere46","EnumSets"
"2983splitHere46","1858927splitHere46","contains"
"2984splitHere46","1858991splitHere46","@Retention(RetentionPolicy.RUNTIME)<newline46mondego>@interface Table{<newline46mondego>  String name();<newline46mondego><newline46mondego>  int intValue();<newline46mondego>}<newline46mondego>"
"2985splitHere46","1859013splitHere46","class Foo {<newline46mondego><newline46mondego>  // the constants<newline46mondego>  public static final Foo RHUBARB = new Foo();<newline46mondego>  public static final Foo CUSTARD = new Foo();<newline46mondego><newline46mondego>  // only this class and subclasses can create constants<newline46mondego>  protected Foo(){ }<newline46mondego>}<newline46mondego>"
"2986splitHere46","1859131splitHere46","java -cp c:\program files\..\sqljdbc_2.0\enu\sqljdbc4.jar {yourclassfile}<newline46mondego>"
"2987splitHere46","1859308splitHere46","hasNotLost = ufo_ship.getY() < 200;"
"2988splitHere46","1859308splitHere46","boolean hasNotLost(GRect ufo_ship){ return ufo_ship.getY() < 200; }<newline46mondego><newline46mondego>while(hasNotLost(ufo_ship))<newline46mondego>{<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"2989splitHere46","1859379splitHere46","String field1 = getField(request, <doubleQuotes46>field1<doubleQuotes46>, true);<newline46mondego>String field2 = getField(request, <doubleQuotes46>field2<doubleQuotes46>, true);<newline46mondego>String field3 = getField(request, <doubleQuotes46>field3<doubleQuotes46>, false);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>public static String getField(HttpServletRequest request, String fieldName, boolean required) throws ValidatorException {<newline46mondego>    String fieldValue = request.getParameter(fieldName);<newline46mondego>    if (fieldValue == null || fieldValue.trim().isEmpty()) {<newline46mondego>        if (required) {<newline46mondego>            throw new ValidatorException(<doubleQuotes46>Field is required<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            fieldValue = null; // Make empty string null so that you don't need to hassle with equals(<doubleQuotes46><doubleQuotes46>) afterwards.<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return fieldValue;<newline46mondego>}<newline46mondego>"
"2990splitHere46","1859729splitHere46","java version <doubleQuotes46>1.5.0<doubleQuotes46><newline46mondego>Java(TM) 2 Runtime Environment, Standard Edition (build pap32devifx-20090506 (SR9-SSU +PK76176+IZ44410+IZ44495))<newline46mondego>IBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 AIX ppc-32 j9vmap3223ifx-20090225 (JIT enabled)<newline46mondego>J9VM - 20090224_30451_bHdSMr<newline46mondego>JIT  - 20081112_1511ifx1_r8<newline46mondego>GC   - 200811_07)<newline46mondego>"
"2991splitHere46","1859729splitHere46","FILE_ENCODING: file.encoding=ISO8859-1 (read-only)<newline46mondego>FILE_ENCODING_PKG: file.encoding.pkg=null (read-only)<newline46mondego>FILE_SEPARATOR: file.separator=/ (read-only)<newline46mondego>JAVA_AWT_GRAPHICSENV: java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment (read-only)<newline46mondego>JAVA_AWT_PRINTERJOB: java.awt.printerjob=sun.print.PSPrinterJob (read-only)<newline46mondego>JAVA_CLASS_PATH: java.class.path=. (read-only)<newline46mondego>JAVA_CLASS_VERSION: java.class.version=49.0 (read-only)<newline46mondego>JAVA_COMPILER: java.compiler=j9jit23 (read-only)<newline46mondego>JAVA_ENDORSED_DIRS: java.endorsed.dirs=null (read-only)<newline46mondego>JAVA_EXT_DIRS: java.ext.dirs=/prj/was/java/jre/lib/ext (read-only)<newline46mondego>JAVA_HOME: java.home=/prj/was/java/jre (read-only)<newline46mondego>JAVA_IO_TMPDIR: java.io.tmpdir=/tmp/<newline46mondego>JAVA_LIBRARY_PATH: java.library.path=/prj/was/java/jre/bin:/prj/was/java/jre/bin:/prj/was/java/jre/bin/classic:/prj/was/java/jre/bin:/prj/was/java/jre/bin/j9vm:/usr/lib (read-only)<newline46mondego>JAVA_RUNTIME_NAME: java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition (read-only)<newline46mondego>JAVA_RUNTIME_VERSION: java.runtime.version=pap32devifx-20090506 (SR9-SSU +PK76176+IZ44410+IZ44495) (read-only)<newline46mondego>JAVA_SPECIFICATION_NAME: java.specification.name=Java Platform API Specification (read-only)<newline46mondego>JAVA_SPECIFICATION_VENDOR: java.specification.vendor=Sun Microsystems Inc. (read-only)<newline46mondego>JAVA_SPECIFICATION_VERSION: java.specification.version=1.5 (read-only)<newline46mondego>JAVA_VERSION: java.version=1.5.0 (read-only)<newline46mondego>JAVA_VENDOR: java.vendor=IBM Corporation (read-only)<newline46mondego>JAVA_VENDOR_URL: java.vendor.url=http://www.ibm.com/ (read-only)<newline46mondego>JAVA_VENDOR_URL_BUG: java.vendor.url.bug=null (read-only)<newline46mondego>JAVA_VM_INFO: java.vm.info=J2RE 1.5.0 IBM J9 2.3 AIX ppc-32 j9vmap3223ifx-20090225 (JIT enabled)<newline46mondego>J9VM - 20090224_30451_bHdSMr<newline46mondego>JIT  - 20081112_1511ifx1_r8<newline46mondego>GC   - 200811_07 (read-only)<newline46mondego>JAVA_VM_NAME: java.vm.name=IBM J9 VM (read-only)<newline46mondego>JAVA_VM_SPECIFICATION_NAME: java.vm.specification.name=Java Virtual Machine Specification (read-only)<newline46mondego>JAVA_VM_SPECIFICATION_VENDOR: java.vm.specification.vendor=Sun Microsystems Inc. (read-only)<newline46mondego>JAVA_VM_SPECIFICATION_VERSION: java.vm.specification.version=1.0 (read-only)<newline46mondego>JAVA_VM_VERSION: java.vm.version=2.3 (read-only)<newline46mondego>JAVA_VM_VENDOR: java.vm.vendor=IBM Corporation (read-only)<newline46mondego>LINE_SEPARATOR: line.separator=<newline46mondego> (read-only)<newline46mondego>OS_NAME: os.name=AIX (read-only)<newline46mondego>OS_ARCH: os.arch=ppc (read-only)<newline46mondego>OS_VERSION: os.version=5.3 (read-only)<newline46mondego>PATH_SEPARATOR: path.separator=: (read-only)<newline46mondego>SUN_ARCH_DATA_MODEL: sun.arch.data.model=32 (read-only)<newline46mondego>SUN_BOOT_CLASS_PATH: sun.boot.class.path=/prj/was/java/jre/lib/vm.jar:/prj/was/java/jre/lib/core.jar:/prj/was/java/jre/lib/charsets.jar:/prj/was/java/jre/lib/graphics.jar:/prj/was/java/jre/lib/security.jar:/prj/was/java/jre/lib/ibmpkcs.jar:/prj/was/java/jre/lib/ibmorb.jar:/prj/was/java/jre/lib/ibmcfw.jar:/prj/was/java/jre/lib/ibmorbapi.jar:/prj/was/java/jre/lib/ibmjcefw.jar:/prj/was/java/jre/lib/ibmjgssprovider.jar:/prj/was/java/jre/lib/ibmjsseprovider2.jar:/prj/was/java/jre/lib/ibmjaaslm.jar:/prj/was/java/jre/lib/ibmcertpathprovider.jar:/prj/was/java/jre/lib/server.jar:/prj/was/java/jre/lib/xml.jar (read-only)<newline46mondego>SUN_BOOT_LIBRARY_PATH: sun.boot.library.path=/prj/was/java/jre/bin (read-only)<newline46mondego>SUN_CPU_ENDIAN: sun.cpu.endian=null (read-only)<newline46mondego>SUN_CPU_ISALIST: sun.cpu.isalist=null (read-only)<newline46mondego>SUN_IO_UNICODE_ENCODING: sun.io.unicode.encoding=UnicodeBig (read-only)<newline46mondego>SUN_JAVA_LAUNCHER: sun.java.launcher=null (read-only)<newline46mondego>SUN_JNU_ENCODING: sun.jnu.encoding=ISO8859-1 (read-only)<newline46mondego>SUN_MANAGEMENT_COMPILER: sun.management.compiler=null (read-only)<newline46mondego>SUN_OS_PATCH_LEVEL: sun.os.patch.level=null (read-only)<newline46mondego>USER_COUNTRY: user.country=US (read-only)<newline46mondego>USER_DIR: user.dir=/tmp/avd (read-only)<newline46mondego>USER_HOME: user.home=/root (read-only)<newline46mondego>USER_LANGUAGE: user.language=en (read-only)<newline46mondego>USER_NAME: user.name=root (read-only)<newline46mondego>USER_TIMEZONE: user.timezone= (read-only)<newline46mondego>USER_VARIANT: user.variant= (read-only)<newline46mondego>SUN_DESKTOP: sun.desktop=null (read-only)<newline46mondego>USER_ZONEINFO_DIR: user.zoneinfo.dir=null (read-only)<newline46mondego>AWT_NATIVE_DOUBLE_BUFFERING: awt.nativeDoubleBuffering=null (read-only)<newline46mondego>AWT_TOOLKIT: awt.toolkit=null (read-only)<newline46mondego>FTP_NON_PROXY_HOSTS: ftp.nonProxyHosts=null (read-only)<newline46mondego>GOPHER_PROXY_SET: gopherProxySet=null (read-only)<newline46mondego>HTTP_NON_PROXY_HOSTS: http.nonProxyHosts=null (read-only)<newline46mondego>MRJ_VERSION: mrj.version=null (read-only)<newline46mondego>SOCKS_NON_PROXY_HOSTS: socksNonProxyHosts=null (read-only)<newline46mondego>GNU_CLASSPATH_HOME: gnu.classpath.home=null (read-only)<newline46mondego>GNU_CLASSPATH_HOME_URL: gnu.classpath.home.url=null (read-only)<newline46mondego>GNU_CLASSPATH_VERSION: gnu.classpath.version=null (read-only)<newline46mondego>GNU_CLASSPATH_VM_SHORTNAME: gnu.classpath.vm.shortname=null (read-only)<newline46mondego>GNU_CPU_ENDIAN: gnu.cpu.endian=null (read-only)<newline46mondego>GNU_GCJ_PRECOMPILED_DB_PATH: gnu.gcj.precompiled.db.path=null (read-only)<newline46mondego>GNU_GCJ_PROGNAME: gnu.gcj.progname=null (read-only)<newline46mondego>GNU_GCJ_RUNTIME_ENDORSED_DIRS: gnu.gcj.runtime.endorsed.dirs=null (read-only)<newline46mondego>GNU_GCJ_USER_REALNAME: gnu.gcj.user.realname=null (read-only)<newline46mondego>GNU_JAVA_UTIL_ZONEINFO_DIR: gnu.java.util.zoneinfo.dir=null (read-only)<newline46mondego>HTTP_AGENT: http.agent=null (read-only)<newline46mondego>JAVA_FULLVERSION: java.fullversion=J2RE 1.5.0 IBM J9 2.3 AIX ppc-32 j9vmap3223ifx-20090225 (JIT enabled)<newline46mondego>J9VM - 20090224_30451_bHdSMr<newline46mondego>JIT  - 20081112_1511ifx1_r8<newline46mondego>GC   - 200811_07 (read-only)<newline46mondego>USER_REGION: user.region=null (read-only)<newline46mondego>PROGRAM_NAME: program.name=null (read-only)<newline46mondego>GROOVY_HOME: groovy.home=null (read-only)<newline46mondego>GROOVY_STARTER_CONF: groovy.starter.conf=null (read-only)<newline46mondego>JAVA_AWT_HEADLESS: java.awt.headless=false<newline46mondego>SUN_AWT_DISABLE_MIXING: sun.awt.disableMixing=null<newline46mondego>SUN_AWT_NOERASEBACKGROUND: sun.awt.noerasebackground=null<newline46mondego>SUN_AWT_XEMBEDSERVER: sun.awt.xembedserver=null<newline46mondego>OS_FAMILY: os.family=unknown (derived)<newline46mondego>JAVA_VM_SERVER: java.vm.server=false (derived)<newline46mondego><newline46mondego><newline46mondego>### UNKNOWN<newline46mondego>FILE_ENCODING_PKG: file.encoding.pkg=null (read-only)<newline46mondego>JAVA_ENDORSED_DIRS: java.endorsed.dirs=null (read-only)<newline46mondego>JAVA_VENDOR_URL_BUG: java.vendor.url.bug=null (read-only)<newline46mondego>SUN_CPU_ENDIAN: sun.cpu.endian=null (read-only)<newline46mondego>SUN_CPU_ISALIST: sun.cpu.isalist=null (read-only)<newline46mondego>SUN_JAVA_LAUNCHER: sun.java.launcher=null (read-only)<newline46mondego>SUN_MANAGEMENT_COMPILER: sun.management.compiler=null (read-only)<newline46mondego>SUN_OS_PATCH_LEVEL: sun.os.patch.level=null (read-only)<newline46mondego>SUN_DESKTOP: sun.desktop=null (read-only)<newline46mondego>USER_ZONEINFO_DIR: user.zoneinfo.dir=null (read-only)<newline46mondego>AWT_NATIVE_DOUBLE_BUFFERING: awt.nativeDoubleBuffering=null (read-only)<newline46mondego>AWT_TOOLKIT: awt.toolkit=null (read-only)<newline46mondego>FTP_NON_PROXY_HOSTS: ftp.nonProxyHosts=null (read-only)<newline46mondego>GOPHER_PROXY_SET: gopherProxySet=null (read-only)<newline46mondego>HTTP_NON_PROXY_HOSTS: http.nonProxyHosts=null (read-only)<newline46mondego>MRJ_VERSION: mrj.version=null (read-only)<newline46mondego>SOCKS_NON_PROXY_HOSTS: socksNonProxyHosts=null (read-only)<newline46mondego>GNU_CLASSPATH_HOME: gnu.classpath.home=null (read-only)<newline46mondego>GNU_CLASSPATH_HOME_URL: gnu.classpath.home.url=null (read-only)<newline46mondego>GNU_CLASSPATH_VERSION: gnu.classpath.version=null (read-only)<newline46mondego>GNU_CLASSPATH_VM_SHORTNAME: gnu.classpath.vm.shortname=null (read-only)<newline46mondego>GNU_CPU_ENDIAN: gnu.cpu.endian=null (read-only)<newline46mondego>GNU_GCJ_PRECOMPILED_DB_PATH: gnu.gcj.precompiled.db.path=null (read-only)<newline46mondego>GNU_GCJ_PROGNAME: gnu.gcj.progname=null (read-only)<newline46mondego>GNU_GCJ_RUNTIME_ENDORSED_DIRS: gnu.gcj.runtime.endorsed.dirs=null (read-only)<newline46mondego>GNU_GCJ_USER_REALNAME: gnu.gcj.user.realname=null (read-only)<newline46mondego>GNU_JAVA_UTIL_ZONEINFO_DIR: gnu.java.util.zoneinfo.dir=null (read-only)<newline46mondego>HTTP_AGENT: http.agent=null (read-only)<newline46mondego>USER_REGION: user.region=null (read-only)<newline46mondego>PROGRAM_NAME: program.name=null (read-only)<newline46mondego>GROOVY_HOME: groovy.home=null (read-only)<newline46mondego>GROOVY_STARTER_CONF: groovy.starter.conf=null (read-only)<newline46mondego>JAVA_AWT_HEADLESS: java.awt.headless=false<newline46mondego>SUN_AWT_DISABLE_MIXING: sun.awt.disableMixing=null<newline46mondego>SUN_AWT_NOERASEBACKGROUND: sun.awt.noerasebackground=null<newline46mondego>SUN_AWT_XEMBEDSERVER: sun.awt.xembedserver=null<newline46mondego>OS_FAMILY: os.family=unknown (derived)<newline46mondego>JAVA_VM_SERVER: java.vm.server=false (derived)<newline46mondego><newline46mondego><newline46mondego>### MISSING<newline46mondego>com.ibm.cpu.endian=big<newline46mondego>com.ibm.oti.configuration=scar<newline46mondego>com.ibm.oti.jcl.build=20081111_1646<newline46mondego>com.ibm.oti.vm.bootstrap.library.path=/prj/was/java/jre/bin<newline46mondego>com.ibm.oti.vm.library.version=23<newline46mondego>com.ibm.util.extralibs.properties=<newline46mondego>com.ibm.vm.bitmode=32<newline46mondego>ibm.signalhandling.rs=false<newline46mondego>ibm.signalhandling.sigchain=true<newline46mondego>ibm.signalhandling.sigint=true<newline46mondego>ibm.system.encoding=ISO8859-1<newline46mondego>invokedviajava=<newline46mondego>java.assistive=ON<newline46mondego>java.awt.fonts=<newline46mondego>java.jcl.version=20090506<newline46mondego>java.util.prefs.PreferencesFactory=java.util.prefs.FileSystemPreferencesFactory<newline46mondego>jxe.current.romimage.version=9<newline46mondego>jxe.lowest.romimage.version=9<newline46mondego>sun.java2d.fontpath=<newline46mondego><newline46mondego><newline46mondego>### PLEASE POST FULL OUTPUT AT http://j.mp/props0 or http://j.mp/props1<newline46mondego>    /**<newline46mondego>     * AIX only: known values: big<newline46mondego>     */<newline46mondego>    COM_IBM_CPU_ENDIAN(<doubleQuotes46>com.ibm.cpu.endian<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: scar<newline46mondego>     */<newline46mondego>    COM_IBM_OTI_CONFIGURATION(<doubleQuotes46>com.ibm.oti.configuration<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: 20081111_1646<newline46mondego>     */<newline46mondego>    COM_IBM_OTI_JCL_BUILD(<doubleQuotes46>com.ibm.oti.jcl.build<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: /prj/was/java/jre/bin<newline46mondego>     */<newline46mondego>    COM_IBM_OTI_VM_BOOTSTRAP_LIBRARY_PATH(<doubleQuotes46>com.ibm.oti.vm.bootstrap.library.path<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: 23<newline46mondego>     */<newline46mondego>    COM_IBM_OTI_VM_LIBRARY_VERSION(<doubleQuotes46>com.ibm.oti.vm.library.version<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: <newline46mondego>     */<newline46mondego>    COM_IBM_UTIL_EXTRALIBS_PROPERTIES(<doubleQuotes46>com.ibm.util.extralibs.properties<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: 32<newline46mondego>     */<newline46mondego>    COM_IBM_VM_BITMODE(<doubleQuotes46>com.ibm.vm.bitmode<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: false<newline46mondego>     */<newline46mondego>    IBM_SIGNALHANDLING_RS(<doubleQuotes46>ibm.signalhandling.rs<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: true<newline46mondego>     */<newline46mondego>    IBM_SIGNALHANDLING_SIGCHAIN(<doubleQuotes46>ibm.signalhandling.sigchain<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: true<newline46mondego>     */<newline46mondego>    IBM_SIGNALHANDLING_SIGINT(<doubleQuotes46>ibm.signalhandling.sigint<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: ISO8859-1<newline46mondego>     */<newline46mondego>    IBM_SYSTEM_ENCODING(<doubleQuotes46>ibm.system.encoding<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: <newline46mondego>     */<newline46mondego>    INVOKEDVIAJAVA(<doubleQuotes46>invokedviajava<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: ON<newline46mondego>     */<newline46mondego>    JAVA_ASSISTIVE(<doubleQuotes46>java.assistive<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: <newline46mondego>     */<newline46mondego>    JAVA_AWT_FONTS(<doubleQuotes46>java.awt.fonts<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: 20090506<newline46mondego>     */<newline46mondego>    JAVA_JCL_VERSION(<doubleQuotes46>java.jcl.version<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: java.util.prefs.FileSystemPreferencesFactory<newline46mondego>     */<newline46mondego>    JAVA_UTIL_PREFS__PREFERENCES_FACTORY(<doubleQuotes46>java.util.prefs.PreferencesFactory<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: 9<newline46mondego>     */<newline46mondego>    JXE_CURRENT_ROMIMAGE_VERSION(<doubleQuotes46>jxe.current.romimage.version<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: 9<newline46mondego>     */<newline46mondego>    JXE_LOWEST_ROMIMAGE_VERSION(<doubleQuotes46>jxe.lowest.romimage.version<doubleQuotes46>),<newline46mondego>    /**<newline46mondego>     * AIX only: known values: <newline46mondego>     */<newline46mondego>    SUN_JAVA2D_FONTPATH(<doubleQuotes46>sun.java2d.fontpath<doubleQuotes46>),<newline46mondego>"
"2992splitHere46","1859761splitHere46","dropStartValue"
"2993splitHere46","1859761splitHere46","newCounterValue"
"2994splitHere46","1859761splitHere46","dropStartValue = newCounterValue;<newline46mondego>"
"2995splitHere46","1859761splitHere46","BigDecimal"
"2996splitHere46","1859978splitHere46","MyHtml2Text parser = new MyHtml2Text();<newline46mondego>try {<newline46mondego>    parser.parse(new StringReader(myTextPane.getText()));<newline46mondego>} catch (IOException ee) {<newline46mondego>  //handle exception<newline46mondego>}<newline46mondego>System.out.println(parser.getText());<newline46mondego>"
"2997splitHere46","1859978splitHere46","Html2Text"
"2998splitHere46","1859978splitHere46","import java.io.IOException;<newline46mondego>import javax.swing.text.html.*;<newline46mondego>import javax.swing.text.html.parser.*;<newline46mondego><newline46mondego>public class MyHtml2Text extends HTMLEditorKit.ParserCallback {<newline46mondego>    StringBuffer s;<newline46mondego>    public MyHtml2Text() {}<newline46mondego>    public void parse(Reader in) throws IOException {<newline46mondego>        s = new StringBuffer();<newline46mondego>        ParserDelegator delegator = new ParserDelegator();<newline46mondego>        delegator.parse(in, this, Boolean.TRUE);<newline46mondego>    }<newline46mondego>    public void handleText(char[] text, int pos) {<newline46mondego>        s.append(text);<newline46mondego>        s.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    public String getText() {<newline46mondego>        return s.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2999splitHere46","1859978splitHere46","HTMLEditorKit.ParserCallback"
"3000splitHere46","1860589splitHere46","HashBag"
"3001splitHere46","1860589splitHere46","getCount(Object)"
"3002splitHere46","1860674splitHere46","InputStream inputStream = new FileInputStream(<doubleQuotes46>logging.properties<doubleQuotes46>);<newline46mondego>LogManager.getLogManager().readConfiguration(inputStream);<newline46mondego>"
"3003splitHere46","1860813splitHere46","class Queue {<newline46mondego>    private Object[] mElements = new Object[] {};<newline46mondego><newline46mondego>    public void enqueue(Object element) {<newline46mondego>    	Arrays.insertAt(mElements, element, 0);<newline46mondego>    }<newline46mondego><newline46mondego>    public Object dequeue() {<newline46mondego>    	Object result = null;<newline46mondego>    	if (null != mElements && 0 < mElements.length) {<newline46mondego>    		result = mElements[mElements.length - 1];<newline46mondego>    		Arrays.remove(mElements, result);<newline46mondego>    	}<newline46mondego>    	return result;<newline46mondego>    }<newline46mondego><newline46mondego>    public Object peek() {<newline46mondego>    	if (null != mElements && 0 < mElements.length)<newline46mondego>    		return mElements[mElements.length - 1];<newline46mondego>    	else<newline46mondego>    		return null;<newline46mondego>    }<newline46mondego><newline46mondego>    public void remove() {<newline46mondego>    	if (null != mElements && 0 < mElements.length)<newline46mondego>    		Arrays.remove(mElements, peek());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3004splitHere46","1860813splitHere46","class Scr extends MainScreen {<newline46mondego>    public Scr() {<newline46mondego>    	Queue queue = new Queue();<newline46mondego>    	queue.enqueue(new String(<doubleQuotes46>3<doubleQuotes46>));			<newline46mondego>    	queue.enqueue(new Boolean(true));<newline46mondego>    	queue.enqueue(new Integer(1));		<newline46mondego>    	//see <doubleQuotes46>3<doubleQuotes46> in console<newline46mondego>    	System.out.println(queue.peek());<newline46mondego>    	//see <doubleQuotes46>3<doubleQuotes46> still there<newline46mondego>    	System.out.println(queue.peek());<newline46mondego>    	//remove <doubleQuotes46>3<doubleQuotes46><newline46mondego>    	queue.remove();<newline46mondego>    	//see <doubleQuotes46>true<doubleQuotes46> in console<newline46mondego>    	System.out.println(queue.peek());		<newline46mondego>    	//dequeue all elements<newline46mondego>    	Object element = null;<newline46mondego>    	while ((element = queue.dequeue()) != null) {<newline46mondego>    		System.out.println(element.toString());<newline46mondego>    	}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3005splitHere46","1861142splitHere46","java.sql.Blob"
"3006splitHere46","1861142splitHere46","java.sql.Clob"
"3007splitHere46","1861142splitHere46","java.sql.NClob"
"3008splitHere46","1861142splitHere46","CREATE TABLE dbo.IndustrySectorTearSheetBlob (<newline46mondego>...<newline46mondego>htmlBlob varchar(max) NULL<newline46mondego>... <newline46mondego>)<newline46mondego>"
"3009splitHere46","1861182splitHere46","new SwingWorker<Void,Void>() {<newline46mondego>    @Override<newline46mondego>    protected Void doInBackground() throws Exception {<newline46mondego>        Thread.sleep(500);<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    protected void done() {<newline46mondego>        cell2.setIcon(image2);<newline46mondego>    }<newline46mondego>}.execute();<newline46mondego>"
"3010splitHere46","1861215splitHere46","String pattern = String.format(<doubleQuotes46>%%h/programName%tYmd%%u%%g.log<doubleQuotes46>, today);<newline46mondego>FileHandler fh = new FileHandler(pattern);<newline46mondego>"
"3011splitHere46","1861300splitHere46","EntityManagerFactory factory;<newline46mondego>factory = Persistence.createEntityManagerFactory(<doubleQuotes46>jpatest<doubleQuotes46>);<newline46mondego>EntityManager em = factory.createEntityManager();<newline46mondego>"
"3012splitHere46","1861350splitHere46","<wsdl:binding name=<doubleQuotes46>CompileAndExecuteServiceHttpBinding<doubleQuotes46> <newline46mondego>              type=<doubleQuotes46>ns:CompileAndExecuteServicePortType<doubleQuotes46>><newline46mondego><http:binding verb=<doubleQuotes46>POST<doubleQuotes46>/><newline46mondego><wsdl:operation name=<doubleQuotes46>execute<doubleQuotes46>><newline46mondego>	<http:operation location=<doubleQuotes46>CompileAndExecuteService/execute<doubleQuotes46>/><newline46mondego>	<wsdl:input><newline46mondego>		<mime:content type=<doubleQuotes46>text/xml<doubleQuotes46> part=<doubleQuotes46>execute<doubleQuotes46>/><newline46mondego>	</wsdl:input><newline46mondego>	<wsdl:output><newline46mondego>		<mime:content type=<doubleQuotes46>text/xml<doubleQuotes46> part=<doubleQuotes46>execute<doubleQuotes46>/><newline46mondego>	</wsdl:output><newline46mondego>	<wsdl:fault name=<doubleQuotes46>Exception<doubleQuotes46>><newline46mondego>		<soap12:fault use=<doubleQuotes46>literal<doubleQuotes46> name=<doubleQuotes46>Exception<doubleQuotes46>/><newline46mondego>	</wsdl:fault><newline46mondego></wsdl:operation><newline46mondego>"
"3013splitHere46","1861367splitHere46","private"
"3014splitHere46","1861579splitHere46","PiePlot.setSectionPaint(Comparable key, Paint paint);<newline46mondego>"
"3015splitHere46","1861774splitHere46","import java.net.URLEncoder;<newline46mondego><newline46mondego>public class QueryString {<newline46mondego><newline46mondego>    private String query = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    public QueryString(HashMap<String, String> map) {<newline46mondego>        Iterator it = mp.entrySet().iterator();<newline46mondego>        while (it.hasNext()) {<newline46mondego>           Map.Entry pairs = (Map.Entry)it.next();<newline46mondego>           query += URLEncoder.encode(pairs.getKey()) + <doubleQuotes46>=<doubleQuotes46> +         <newline46mondego>           URLEncoder.encode(pairs.getValue());<newline46mondego>           if (it.hasNext()) { query += <doubleQuotes46>&<doubleQuotes46>; }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public QueryString(Object name, Object value) {<newline46mondego>        query = URLEncoder.encode(name.toString()) + <doubleQuotes46>=<doubleQuotes46> +         <newline46mondego>           URLEncoder.encode(value.toString());<newline46mondego>   }<newline46mondego><newline46mondego>   public QueryString() { query = <doubleQuotes46><doubleQuotes46>; }<newline46mondego><newline46mondego>   public synchronized void add(Object name, Object value) {<newline46mondego>       if (!query.trim().equals(<doubleQuotes46><doubleQuotes46>)) query += <doubleQuotes46>&<doubleQuotes46>;<newline46mondego>       query += URLEncoder.encode(name.toString()) + <doubleQuotes46>=<doubleQuotes46> +         <newline46mondego>           URLEncoder.encode(value.toString());<newline46mondego>   }<newline46mondego><newline46mondego>   public String toString() { return query; }<newline46mondego>}<newline46mondego>"
"3016splitHere46","1861774splitHere46","HashMap<String, String> map = new HashMap<String, String>();<newline46mondego>map.put(<doubleQuotes46>hello<doubleQuotes46>, <doubleQuotes46>world<doubleQuotes46>);<newline46mondego>map.put(<doubleQuotes46>lang<doubleQuotes46>, <doubleQuotes46>en<doubleQuotes46>);<newline46mondego><newline46mondego>QueryString q = new QueryString(map);<newline46mondego>System.out.println(q);<newline46mondego>// => <doubleQuotes46>hello=world&lang=en<doubleQuotes46><newline46mondego>"
"3017splitHere46","1861785splitHere46","class Foo {<newline46mondego>    protected void method() {}<newline46mondego>}<newline46mondego><newline46mondego>class FooWrapper extends Foo {<newline46mondego><newline46mondego>    protected void method() {<newline46mondego>        super.method();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3018splitHere46","1861785splitHere46","public class Foo {<newline46mondego><newline46mondego>    protected void method() {<newline46mondego>        System.out.println(<doubleQuotes46>In Foo.method()<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class FooWrapper extends Foo {<newline46mondego><newline46mondego>    private Foo foo;<newline46mondego><newline46mondego>    public FooWrapper(Foo foo) {<newline46mondego>        this.foo = foo;<newline46mondego>    }<newline46mondego><newline46mondego>    public void method() {<newline46mondego>        try {<newline46mondego>            Method m = foo.getClass().getDeclaredMethod(<doubleQuotes46>method<doubleQuotes46>, null);<newline46mondego>            m.setAccessible(true);<newline46mondego>            m.invoke(foo, null);<newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3019splitHere46","1861785splitHere46","public class Foo {<newline46mondego><newline46mondego>    protected void method() {<newline46mondego>        System.out.println(<doubleQuotes46>In Foo.method()<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class DelegateFoo extends Foo {<newline46mondego><newline46mondego>    public void method() {<newline46mondego>        super.method();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class FooWrapper extends Foo {<newline46mondego><newline46mondego>    private DelegateFoo foo;<newline46mondego><newline46mondego>    public FooWrapper(DelegateFoo foo) {<newline46mondego>        this.foo = foo;<newline46mondego>    }<newline46mondego><newline46mondego>    public void method() {<newline46mondego>        foo.method();<newline46mondego>        /* extra logic here */<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3020splitHere46","1861805splitHere46","days = (date2.getTime() - date1.getTime())/86400000L<newline46mondego>"
"3021splitHere46","1861874splitHere46","HashMap<String, Foo> map = new HashMap<String, Foo>();<newline46mondego>	for (Foo bar: this.FooList)<newline46mondego>	{<newline46mondego>		if (!map.containsKey(bar.getName()))<newline46mondego>		{<newline46mondego>			map.put(bar.getName(), bar);<newline46mondego>		}<newline46mondego>		else<newline46mondego>		{<newline46mondego>			Foo foo = map.get(bar.getName());<newline46mondego>			if (foo != null)<newline46mondego>				foo.doSomeThing();<newline46mondego>			map.put(bar.getName(), null);<newline46mondego>		}<newline46mondego>	}<newline46mondego>"
"3022splitHere46","1861874splitHere46","import java.util.HashMap;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>public class Example<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	new Example().run();<newline46mondego>    }<newline46mondego><newline46mondego>    private ArrayList<Foo> FooList = new ArrayList<Foo>();<newline46mondego><newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>abc<doubleQuotes46>, 1));<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>abc<doubleQuotes46>, 2));<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>def<doubleQuotes46>, 3));<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>abc<doubleQuotes46>, 4));<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>abc<doubleQuotes46>, 5));<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>ghi<doubleQuotes46>, 6));<newline46mondego>    	FooList.add(new Foo(<doubleQuotes46>def<doubleQuotes46>, 7));<newline46mondego><newline46mondego>    	HashMap<String, Foo> map = new HashMap<String, Foo>();<newline46mondego>    	for (Foo bar: this.FooList)<newline46mondego>    	{<newline46mondego>    		if (!map.containsKey(bar.getName()))<newline46mondego>    		{<newline46mondego>    			map.put(bar.getName(), bar);<newline46mondego>    		}<newline46mondego>    		else<newline46mondego>    		{<newline46mondego>    			Foo foo = map.get(bar.getName());<newline46mondego>    			if (foo != null)<newline46mondego>    				foo.doSomeThing();<newline46mondego>    			map.put(bar.getName(), null);<newline46mondego>    		}<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    class Foo<newline46mondego>    {<newline46mondego>    	public Foo(String name, int i)<newline46mondego>    	{<newline46mondego>    		this.name = name;<newline46mondego>    		this.i = i;<newline46mondego>    	}<newline46mondego><newline46mondego>    	public String getName()<newline46mondego>    	{<newline46mondego>    		return name;<newline46mondego>    	}<newline46mondego><newline46mondego>    	public void doSomeThing()<newline46mondego>    	{<newline46mondego>    		System.out.println(getName() + <doubleQuotes46> <doubleQuotes46> + i);<newline46mondego>    	}<newline46mondego><newline46mondego>    	private String name;<newline46mondego>    	private int i;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3023splitHere46","1861874splitHere46","abc 1<newline46mondego>def 3<newline46mondego>"
"3024splitHere46","1861956splitHere46","try{<newline46mondego>           // say you are comparing FileReader objects that<newline46mondego>           // refer to XML documents<newline46mondego>           assertXMLEqual(filereader1, filereader2); <newline46mondego>        } catch (final SAXException e) {<newline46mondego>           // show faiulre message<newline46mondego>        } catch (final IOException e) {<newline46mondego>           // show failure message<newline46mondego>        } catch (final AssertionError e) {<newline46mondego>            System.err.println(e.toString());<newline46mondego>        }<newline46mondego>"
"3025splitHere46","1862247splitHere46","import java.awt.GridBagConstraints;<newline46mondego>import java.awt.GridBagLayout;<newline46mondego><newline46mondego>GridBagLayout layout = new GridBagLayout();<newline46mondego>GridBagConstraints c = new GridBagConstraints();<newline46mondego><newline46mondego>JPanel panel = new JPanel();<newline46mondego>JLabel label = new JLabel(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego><newline46mondego>panel.setLayout(layout);<newline46mondego><newline46mondego>c.gridx = 0;<newline46mondego>c.gridy = 0;<newline46mondego>panel.add(label, c);<newline46mondego>"
"3026splitHere46","1862269splitHere46","ServletContextListener"
"3027splitHere46","1862269splitHere46","contextDestroyed()"
"3028splitHere46","1862269splitHere46","public class Config implements ServletContextListener {<newline46mondego><newline46mondego>    public void contextInitialized(ServletContextEvent event) {<newline46mondego>        // Write code here which should be executed on webapp startup.<newline46mondego>    }<newline46mondego><newline46mondego>    public void contextDestroyed(ServletContextEvent event) {<newline46mondego>        // Write code here which should be executed on webapp shutdown.<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3029splitHere46","1862269splitHere46","<listener>"
"3030splitHere46","1862269splitHere46","web.xml"
"3031splitHere46","1862269splitHere46","<listener><newline46mondego>    <listener-class>com.example.Config</listener-class><newline46mondego></listener><newline46mondego>"
"3032splitHere46","1862469splitHere46","Hashtable env = new Hashtable();<newline46mondego>env.put(<doubleQuotes46>java.naming.factory.initial<doubleQuotes46>, <doubleQuotes46>org.jnp.interfaces.NamingContextFactory<doubleQuotes46>);<newline46mondego>env.put(<doubleQuotes46>java.naming.provider.url<doubleQuotes46>, <doubleQuotes46>jnp://localhost:1099<doubleQuotes46>);<newline46mondego>env.put(<doubleQuotes46>java.naming.factory.url.pkgs<doubleQuotes46>, <doubleQuotes46>org.jboss.naming:org.jnp.interfaces<doubleQuotes46>);<newline46mondego>Context ctx = new InitialContext(env); <newline46mondego>// name is whatever JNDI name you gave it <newline46mondego>Object o = ctx.lookup(<doubleQuotes46>home name<doubleQuotes46>); <newline46mondego>EJBHome ejbHome = (EJBHome) PortableRemoteObject.narrow(o,EJBHome.class); <newline46mondego>// This is userID should be the one passed. <newline46mondego>EJB ejb = ejbHome.create(..);<newline46mondego>"
"3033splitHere46","1862503splitHere46","Tools"
"3034splitHere46","1862503splitHere46","Analyze Javadocs"
"3035splitHere46","1862503splitHere46","Tools"
"3036splitHere46","1862503splitHere46","Analyze Javadocs"
"3037splitHere46","1862508splitHere46","jdbc:jtds:<server_type>://<server>[:<port>][/<database>][;<property>=<value>[;...]]<newline46mondego>"
"3038splitHere46","1862508splitHere46","MYPC"
"3039splitHere46","1862508splitHere46","jdbc:jtds:sqlserver://MYPC:1433/Blog;instance=SQLEXPRESS;user=sa;password=s3cr3t<newline46mondego>"
"3040splitHere46","1862508splitHere46","getConnection(url, <doubleQuotes46>sa<doubleQuotes46>, <doubleQuotes46>s3cr3t<doubleQuotes46>)"
"3041splitHere46","1862508splitHere46","jdbc:jtds:sqlserver://MYPC:1433/Blog;instance=SQLEXPRESS<newline46mondego>"
"3042splitHere46","1862508splitHere46","Connection refused"
"3043splitHere46","1862814splitHere46","public Object replace(Object newValue, Object existingValue, Object arg2)throws HibernateException {<newline46mondego>	return newValue;<newline46mondego>}<newline46mondego>"
"3044splitHere46","1862814splitHere46","...  <newline46mondego>import org.hibernate.annotations.Type;  <newline46mondego>import org.hibernate.annotations.TypeDefs;  <newline46mondego>import org.hibernate.annotations.TypeDef;  <newline46mondego><newline46mondego>@TypeDefs({  <newline46mondego>    @TypeDef(  <newline46mondego>    	name=<doubleQuotes46>clob<doubleQuotes46>,  <newline46mondego>    	typeClass = foo.StringClobType.class  <newline46mondego>    )  <newline46mondego>})  <newline46mondego>@Entity  <newline46mondego>@Table(name=<doubleQuotes46>EA_COMMENTS<doubleQuotes46>)  <newline46mondego>public class Comment extends SWDataObject implements JSONString, Serializable {  <newline46mondego>...  <newline46mondego>}<newline46mondego>"
"3045splitHere46","1862814splitHere46","@Type(type=<doubleQuotes46>clob<doubleQuotes46>)<newline46mondego>@Column(name=<doubleQuotes46>COMMENT_DOC<doubleQuotes46>)<newline46mondego>public String getDocument(){<newline46mondego>	return get(<doubleQuotes46>Document<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3046splitHere46","1862814splitHere46","<persistence-unit name=<doubleQuotes46>###<doubleQuotes46> transaction-type=<doubleQuotes46>RESOURCE_LOCAL<doubleQuotes46>><newline46mondego>	<provider>org.hibernate.ejb.HibernatePersistence</provider><newline46mondego>	<properties><newline46mondego>		<property name=<doubleQuotes46>hibernate.archive.autodetection<doubleQuotes46> value=<doubleQuotes46>class<doubleQuotes46>/> <newline46mondego>		<property name=<doubleQuotes46>hibernate.connection.password<doubleQuotes46> value=<doubleQuotes46>###<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.connection.username<doubleQuotes46> value=<doubleQuotes46>###<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.connection.url<doubleQuotes46> value=<doubleQuotes46>jdbc:oracle:thin:@server.something.com:1521:###<doubleQuotes46>/><newline46mondego>		<property name=<doubleQuotes46>hibernate.connection.driver_class<doubleQuotes46> value=<doubleQuotes46>oracle.jdbc.OracleDriver<doubleQuotes46>/><newline46mondego>		<property name=<doubleQuotes46>hibernate.default_schema<doubleQuotes46> value=<doubleQuotes46>###<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.dialect<doubleQuotes46> value=<doubleQuotes46>org.hibernate.dialect.Oracle9iDialect<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.c3p0.min_size<doubleQuotes46> value=<doubleQuotes46>5<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.c3p0.max_size<doubleQuotes46> value=<doubleQuotes46>100<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.c3p0.timeout<doubleQuotes46> value=<doubleQuotes46>300<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.c3p0.max_statements<doubleQuotes46> value=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.c3p0.idle_test period<doubleQuotes46> value=<doubleQuotes46>3000<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.c3p0.idle_connection_test_period<doubleQuotes46> value=<doubleQuotes46>300<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>show_sql<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>format_sql<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>use_sql_comments<doubleQuotes46> value=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>		<property name=<doubleQuotes46>hibernate.jdbc.batch_size<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>	</properties><newline46mondego></persistence-unit><newline46mondego>"
"3047splitHere46","1862819splitHere46","<set name=<doubleQuotes46>subdirs<doubleQuotes46> lazy=<doubleQuotes46>false<doubleQuotes46> cascade=<doubleQuotes46>all-delete-orphan<doubleQuotes46> inverse=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>            <key column=<doubleQuotes46>parentid <doubleQuotes46> /><newline46mondego>            <one-to-many class=<doubleQuotes46>DirObject<doubleQuotes46> /><newline46mondego> </set><newline46mondego>"
"3048splitHere46","1862819splitHere46","<many-to-one name=<doubleQuotes46>parent<doubleQuotes46> class=<doubleQuotes46>DirObject<doubleQuotes46>><newline46mondego>            <column name=<doubleQuotes46>parentid<doubleQuotes46> /><newline46mondego> </many-to-one><newline46mondego>"
"3049splitHere46","1863012splitHere46","// Verify key<newline46mondego>Akismet api = new Akismet(<doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>http://url.com<doubleQuotes46>, <doubleQuotes46>Test/1.0<doubleQuotes46>);<newline46mondego>if (!api.VerifyKey()) throw new Exception(<doubleQuotes46>Key could not be verified.<doubleQuotes46>);<newline46mondego><newline46mondego>// Create comment object for testing<newline46mondego>AkismetComment comment = new AkismetComment();<newline46mondego>comment.Blog = <doubleQuotes46>http://joel.net<doubleQuotes46>;<newline46mondego>comment.UserIp = <doubleQuotes46>147.202.45.202<doubleQuotes46>;<newline46mondego>comment.UserAgent = <doubleQuotes46>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)<doubleQuotes46>;<newline46mondego>comment.CommentContent = <doubleQuotes46><a href=\<doubleQuotes46>http://someone.finderinn.com\<doubleQuotes46>>find someone</a><doubleQuotes46>;<newline46mondego>comment.CommentType = <doubleQuotes46>comment<doubleQuotes46>;<newline46mondego>comment.CommentAuthor = <doubleQuotes46>someone<doubleQuotes46>;<newline46mondego>comment.CommentAuthorEmail = <doubleQuotes46>backthismailtojerry@fastmail.fm<doubleQuotes46>;<newline46mondego>comment.CommentAuthorUrl = <doubleQuotes46>http://someone.finderrin.com<doubleQuotes46>;<newline46mondego><newline46mondego>// Test comment against akismet's service<newline46mondego>bool isSpam = api.COmmentCheck(comment);<newline46mondego>"
"3050splitHere46","1863239splitHere46","org.jboss.resource.adapter.jdbc.remote.SerializableInputStream (inputStream) extends java.io.inputStream<newline46mondego>"
"3051splitHere46","1863411splitHere46","WEB-INF/lib"
"3052splitHere46","1863484splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.RuntimeException<newline46mondego>        at Derived.printArg(Test.java:28)<newline46mondego>        at Derived.printArg(Test.java:1)     << synthetic<newline46mondego>        at Base.doIt(Test.java:14)<newline46mondego>        at Test.main(Test.java:39)<newline46mondego>"
"3053splitHere46","1863635splitHere46","java.util.concurrent"
"3054splitHere46","1863635splitHere46","ThreadPoolExecutor"
"3055splitHere46","1863635splitHere46","Executor"
"3056splitHere46","1863635splitHere46","Executors"
"3057splitHere46","1863635splitHere46","ThreadPoolExecutor.awaitTermination()"
"3058splitHere46","1863639splitHere46","/faces"
"3059splitHere46","1863639splitHere46","url-pattern"
"3060splitHere46","1863639splitHere46","/faces/*"
"3061splitHere46","1863639splitHere46","*.jsf"
"3062splitHere46","1863639splitHere46","/faces"
"3063splitHere46","1863639splitHere46","http://localhost:8080/Monaco/cadastro/pessoa/listar.jsf"
"3064splitHere46","1863639splitHere46",".jsp"
"3065splitHere46","1863639splitHere46",".jsf"
"3066splitHere46","1863639splitHere46",".jsp"
"3067splitHere46","1863639splitHere46","RuntimeException: FacesContext not found"
"3068splitHere46","1863639splitHere46","WEB-INF"
"3069splitHere46","1863639splitHere46","java.lang.ClassNotFoundException: org.apache.commons.digester.Digester<newline46mondego>"
"3070splitHere46","1863639splitHere46","WEB-INF/lib"
"3071splitHere46","1863697splitHere46","doctype=<doubleQuotes46>HTML PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'<doubleQuotes46><newline46mondego>"
"3072splitHere46","1863697splitHere46","ajaxDelegate=<doubleQuotes46>ognl:null<doubleQuotes46><newline46mondego>"
"3073splitHere46","1864043splitHere46","Comparable"
"3074splitHere46","1864043splitHere46","Comparator"
"3075splitHere46","1864043splitHere46","Comparable"
"3076splitHere46","1864043splitHere46","Comparator"
"3077splitHere46","1864043splitHere46","public class Student {<newline46mondego>  private final int id;<newline46mondego>  private final String name;<newline46mondego>  private final int age; <newline46mondego><newline46mondego>  public Student(int id, String name, int age) {<newline46mondego>    this.id = id;<newline46mondego>    this.name = name;<newline46mondego>    this.age = age;<newline46mondego>  }<newline46mondego><newline46mondego>  public int getId() { return id; }<newline46mondego>  public String getName() { return name; }<newline46mondego>  public int getAge() { return age; }<newline46mondego>}<newline46mondego>"
"3078splitHere46","1864043splitHere46","public class AgeComparator implements Comparator<Student> {<newline46mondego>  public int compare(Student s1, Student s2) {<newline46mondego>    if (s1.getAge() == s2.getAge()) {<newline46mondego>      return 0;<newline46mondego>    } else {<newline46mondego>      return s1.getAge() < s2.getAge() ? -1 : 1;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3079splitHere46","1864043splitHere46","List<Student> students = new ArrayList<Student>();<newline46mondego>students.add(new Student(1, <doubleQuotes46>bob<doubleQuotes46>, 15));<newline46mondego>students.add(new Student(2, <doubleQuotes46>Jane<doubleQuotes46>, 14));<newline46mondego>students.add(new Student(3, <doubleQuotes46>Gary<doubleQuotes46>, 16));<newline46mondego><newline46mondego>SortedSet<Student> set1 = new TreeSet<Student>(new AgeComparator());<newline46mondego>set1.addAll(students);<newline46mondego>for (Student student : set1) {<newline46mondego>  // age order<newline46mondego>}<newline46mondego>"
"3080splitHere46","1864070splitHere46","keywords"
"3081splitHere46","1864070splitHere46","t"
"3082splitHere46","1864070splitHere46","keywords"
"3083splitHere46","1864070splitHere46","initKeywords()"
"3084splitHere46","1864155splitHere46","ActionListener"
"3085splitHere46","1864155splitHere46","javax.swing.Action"
"3086splitHere46","1864155splitHere46","repository of actions"
"3087splitHere46","1864155splitHere46","Action getAction(String)"
"3088splitHere46","1864155splitHere46","actionCommand"
"3089splitHere46","1864195splitHere46","<doubleQuotes46>Lorg/someapp/SomeClass$_data<doubleQuotes46>"
"3090splitHere46","1864195splitHere46","<doubleQuotes46>Lorg/someapp/SomeClass$_data;<doubleQuotes46>"
"3091splitHere46","1864229splitHere46","FooImpl"
"3092splitHere46","1864229splitHere46","static"
"3093splitHere46","1864229splitHere46","getFoo"
"3094splitHere46","1864229splitHere46","Foo"
"3095splitHere46","1864289splitHere46","return hits.get(<doubleQuotes46>responseData<doubleQuotes46>).get(<doubleQuotes46>cursor<doubleQuotes46>).get(<doubleQuotes46>estimatedResultsCount<doubleQuotes46>);<newline46mondego>"
"3096splitHere46","1864510splitHere46","compare(a, b)"
"3097splitHere46","1864510splitHere46","compare(b, a)"
"3098splitHere46","1864606splitHere46","@Column(name = <doubleQuotes46>id<doubleQuotes46>, columnDefinition = <doubleQuotes46>TINYINT<doubleQuotes46>)<newline46mondego>"
"3099splitHere46","1864611splitHere46","$1"
"3100splitHere46","1864611splitHere46","$2"
"3101splitHere46","1864611splitHere46","\1"
"3102splitHere46","1864611splitHere46","\2"
"3103splitHere46","1864611splitHere46","#<doubleQuotes46><doubleQuotes46>"
"3104splitHere46","1864611splitHere46","user> (.replaceAll <doubleQuotes46><a href=\<doubleQuotes46>www.foo.com/bar\<doubleQuotes46>>baz</a><doubleQuotes46><newline46mondego>                   <doubleQuotes46><a.*href=\<doubleQuotes46>(.*)\<doubleQuotes46>>(.*)</a><doubleQuotes46><newline46mondego>                   <doubleQuotes46>$2\\\\footnote{$1}<doubleQuotes46>)<newline46mondego><doubleQuotes46>baz\\footnote{www.foo.com/bar}<doubleQuotes46><newline46mondego>"
"3105splitHere46","1864611splitHere46","user> (require '(clojure.contrib [str-utils2 :as s]))<newline46mondego>nil<newline46mondego>user> (s/replace <doubleQuotes46><a href=\<doubleQuotes46>www.foo.com/bar\<doubleQuotes46>>baz</a><doubleQuotes46><newline46mondego>                 #<doubleQuotes46><a.*href=\<doubleQuotes46>(.*)\<doubleQuotes46>>(.*)</a><doubleQuotes46><newline46mondego>                 (fn [[_ url txt]]<newline46mondego>                     (str txt <doubleQuotes46>\\\\footnote{<doubleQuotes46> url <doubleQuotes46>}<doubleQuotes46>)))<newline46mondego><doubleQuotes46>baz\\footnote{www.foo.com/bar}<doubleQuotes46><newline46mondego>"
"3106splitHere46","1864611splitHere46","<doubleQuotes46>\2<doubleQuotes46>"
"3107splitHere46","1864611splitHere46","^B"
"3108splitHere46","1864611splitHere46","(char 2)"
"3109splitHere46","1864834splitHere46","for"
"3110splitHere46","1864834splitHere46","foreach"
"3111splitHere46","1864834splitHere46","while"
"3112splitHere46","1864834splitHere46","foreach"
"3113splitHere46","1864834splitHere46","map"
"3114splitHere46","1864834splitHere46","filter"
"3115splitHere46","1864834splitHere46","reduce"
"3116splitHere46","1864834splitHere46","mapcat"
"3117splitHere46","1864834splitHere46","do"
"3118splitHere46","1864834splitHere46","if"
"3119splitHere46","1864834splitHere46","when"
"3120splitHere46","1864834splitHere46","for"
"3121splitHere46","1864834splitHere46","with-open"
"3122splitHere46","1864834splitHere46","condp"
"3123splitHere46","1864834splitHere46","seq"
"3124splitHere46","1864834splitHere46","->"
"3125splitHere46","1864834splitHere46","doto"
"3126splitHere46","1864834splitHere46","proxy"
"3127splitHere46","1864834splitHere46","reify"
"3128splitHere46","1864834splitHere46","public static void main(String[] args){...}"
"3129splitHere46","1865163splitHere46","user-webservice-servlet.xml"
"3130splitHere46","1865163splitHere46","user-webservice-servlet.xml"
"3131splitHere46","1865163splitHere46","user-webservice-beans.xml"
"3132splitHere46","1865163splitHere46","contextConfigLocation"
"3133splitHere46","1865163splitHere46","<servlet><newline46mondego>  <servlet-name>myservlet</servlet-name><newline46mondego>  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><newline46mondego>  <load-on-startup>1</load-on-startup><newline46mondego></servlet><newline46mondego><newline46mondego><servlet-mapping><newline46mondego>  <servlet-name>myservlet</servlet-name><newline46mondego>  <url-pattern>*.htm</url-pattern><newline46mondego></servlet-mapping><newline46mondego><newline46mondego><context-param><newline46mondego>  <param-name>contextConfigLocation</param-name><newline46mondego>  <param-value><newline46mondego>    /WEB-INF/applicationContext.xml<newline46mondego>    /WEB-INF/user-webservice-beans.xml<newline46mondego>  </param-value><newline46mondego></context-param><newline46mondego><newline46mondego><servlet><newline46mondego>  <servlet-name>user-webservice</servlet-name><newline46mondego>  <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class><newline46mondego>  <load-on-startup>2</load-on-startup><newline46mondego></servlet><newline46mondego><newline46mondego><servlet-mapping><newline46mondego>  <servlet-name>user-webservice</servlet-name><newline46mondego>  <url-pattern>/UserService/*</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"3134splitHere46","1865318splitHere46","commons-lang"
"3135splitHere46","1865318splitHere46","WEB-INF/lib"
"3136splitHere46","1865645splitHere46","app1: delete/update table1.record24<newline46mondego>app2: delete/update table1.record24<newline46mondego>"
"3137splitHere46","1866125splitHere46","public ResourceMap getResourceMap() {<newline46mondego>    if (resourceMap == null) {<newline46mondego>        ApplicationContext context = getContext();<newline46mondego>        if (context != null) {<newline46mondego>            resourceMap = context.getResourceMap(getResourceStartClass(), <newline46mondego>                   getResourceStopClass());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return resourceMap;<newline46mondego>}<newline46mondego><newline46mondego>public ApplicationContext getContext() {<newline46mondego>    if (applicationContext == null) {<newline46mondego>        Application app = getApplication();<newline46mondego>        if (app != null) {<newline46mondego>            applicationContext = app.getContext();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return applicationContext;<newline46mondego>}<newline46mondego><newline46mondego>public Application getApplication() {<newline46mondego>    if (application == null) {<newline46mondego>        application = Application.getInstance();<newline46mondego>    }<newline46mondego><newline46mondego>    return application;<newline46mondego>}<newline46mondego>"
"3138splitHere46","1866163splitHere46","setKeywords(new Vector<String>())"
"3139splitHere46","1866163splitHere46","Vector"
"3140splitHere46","1866163splitHere46","ArrayList"
"3141splitHere46","1866163splitHere46","setKeywords(String key)"
"3142splitHere46","1866163splitHere46","addKeyword"
"3143splitHere46","1866163splitHere46","Vector"
"3144splitHere46","1866318splitHere46","name"
"3145splitHere46","1866318splitHere46","(double) total / (double) SIZE)"
"3146splitHere46","1866318splitHere46","Result"
"3147splitHere46","1866318splitHere46","studentName"
"3148splitHere46","1866318splitHere46","mark"
"3149splitHere46","1866318splitHere46","public void process() {<newline46mondego>  final int SIZE = 10;<newline46mondego>  String[] names = new String[SIZE];<newline46mondego>  int[] marks = new int[SIZE];<newline46mondego>  for(int i = 0; i < SIZE; i++) {<newline46mondego>    names[i] = readStudentNameFromGUI();<newline46mondego>    marks[i] = readStudentsMarkFromGUI();<newline46mondego>  }<newline46mondego>  double average = calculateAverage(marks);<newline46mondego>}<newline46mondego>"
"3150splitHere46","1866333splitHere46","1000*attempts+random"
"3151splitHere46","1866339splitHere46","final PipedInputStream pin = getInputStream();<newline46mondego>	final PipedOutputStream pout = getOutputStream();<newline46mondego><newline46mondego>	final CountDownLatch latch = new CountDownLatch(1);<newline46mondego><newline46mondego>	InputStream in = new InputStream() {<newline46mondego><newline46mondego>		@Override<newline46mondego>		public int read() throws IOException {<newline46mondego>			return pin.read();<newline46mondego>		}<newline46mondego><newline46mondego>		@Override<newline46mondego>		public void close() throws IOException {<newline46mondego>			super.close();<newline46mondego>			latch.countDown();<newline46mondego>		}<newline46mondego>	};<newline46mondego><newline46mondego><newline46mondego>	OutputStream out = new OutputStream(){<newline46mondego><newline46mondego>		@Override<newline46mondego>		public void write(int b) throws IOException {<newline46mondego>			pout.write(b);<newline46mondego>		}<newline46mondego><newline46mondego>		@Override<newline46mondego>		public void close() throws IOException {<newline46mondego>			while(latch.getCount()!=0) {<newline46mondego>				try {<newline46mondego>					latch.await();<newline46mondego>				} catch (InterruptedException e) {<newline46mondego>					//too bad<newline46mondego>				}<newline46mondego>			}<newline46mondego>			super.close();<newline46mondego>		}<newline46mondego>	};<newline46mondego><newline46mondego>	//give the streams to your threads, they don't know a latch ever existed<newline46mondego>	threadOne.feed(in);<newline46mondego>	threadTwo.feed(out);<newline46mondego>"
"3152splitHere46","1866403splitHere46","java.lang.NoClassDefFoundError: org/apache/lucene/spatial/tier/DistanceFilter<newline46mondego>"
"3153splitHere46","1866403splitHere46","NoClassDefFoundError"
"3154splitHere46","1866403splitHere46","ClassNotFoundException"
"3155splitHere46","1866403splitHere46","WEB-INF/lib"
"3156splitHere46","1866403splitHere46","Appserver/lib"
"3157splitHere46","1866403splitHere46","JRE/lib"
"3158splitHere46","1866430splitHere46","CREATE OR REPLACE FUNCTION FOOBAR (p1 IN ARRAY_TEST_T ) <newline46mondego>RETURN VARCHAR2 AUTHID CURRENT_USER AS<newline46mondego>LANGUAGE JAVA<newline46mondego>NAME 'foobar.FoobarFunction.test_function(java.sql.Array)<newline46mondego>      return lava.lang.String';<newline46mondego><newline46mondego><newline46mondego>package foobar;<newline46mondego>public class FoobarFunction {<newline46mondego>    public static String test_function(java.sql.Array array) {<newline46mondego>        final Object[] content = (Object[]) array.getArray();<newline46mondego>        for (Object c : content) {<newline46mondego>                // expecting java.sql.Struct type for c;<newline46mondego><newline46mondego>                // get TEST_T attribute values for c1 and c2<newline46mondego>                final Object[] attrs = ((java.sql.Struct) c).getAttributes();<newline46mondego>                String c1 = (String) attrs[0];<newline46mondego>                String c2 = (String) attrs[1];<newline46mondego>            .......<newline46mondego>        }<newline46mondego><newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3159splitHere46","1866527splitHere46","("
"3160splitHere46","1866527splitHere46",")"
"3161splitHere46","1866527splitHere46","$n"
"3162splitHere46","1866527splitHere46","n"
"3163splitHere46","1866527splitHere46","String string = <doubleQuotes46>foo bar 567 baz<doubleQuotes46>;<newline46mondego>String replaced = string.replaceAll(<doubleQuotes46>(\\d+)<doubleQuotes46>, <doubleQuotes46>num:$1<doubleQuotes46>);<newline46mondego>"
"3164splitHere46","1866915splitHere46","<!DOCTYPE schema PUBLIC <doubleQuotes46>http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd<doubleQuotes46>><newline46mondego>"
"3165splitHere46","1866915splitHere46","spf.setValidating(false);"
"3166splitHere46","1866929splitHere46","public static final ObjectName OBJECT_NAME = createObjectName(<doubleQuotes46>foo:type=bar<doubleQuotes46>);<newline46mondego>private static ObjectName createObjectName(final String name) {<newline46mondego>    try {<newline46mondego>        return new ObjectName(name);<newline46mondego>    } catch (final SomeException exc) {<newline46mondego>        throw new Error(exc);<newline46mondego>    }  <newline46mondego>}<newline46mondego>"
"3167splitHere46","1866929splitHere46","public static final ObjectName OBJECT_NAME = createObjectName();<newline46mondego>private static ObjectName createObjectName() {<newline46mondego>    try {<newline46mondego>        OBJECT_NAME = new ObjectName(<doubleQuotes46>foo:type=bar<doubleQuotes46>);<newline46mondego>    } catch (final SomeException exc) {<newline46mondego>        throw new Error(exc);<newline46mondego>    }  <newline46mondego>}<newline46mondego>"
"3168splitHere46","1866992splitHere46","<bean id=<doubleQuotes46>mailSender<doubleQuotes46> <newline46mondego>	class=<doubleQuotes46>org.springframework.mail.javamail.JavaMailSenderImpl<doubleQuotes46>><newline46mondego><property name=<doubleQuotes46>session<doubleQuotes46> ref=<doubleQuotes46>mailSession<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>username<doubleQuotes46>><newline46mondego>    <jee:jndi-lookup jndi-name=<doubleQuotes46>config/mail/username<doubleQuotes46> resource-ref=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego></property><newline46mondego><property name=<doubleQuotes46>password<doubleQuotes46>><newline46mondego>    <jee:jndi-lookup jndi-name=<doubleQuotes46>config/mail/password<doubleQuotes46> resource-ref=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego></property><newline46mondego>"
"3169splitHere46","1866992splitHere46","<env-entry><newline46mondego>    <env-entry-name>config/mail/username</env-entry-name><newline46mondego>    <env-entry-type>java.lang.String</env-entry-type><newline46mondego>    <env-entry-value></env-entry-value><newline46mondego></env-entry><newline46mondego><env-entry><newline46mondego>    <env-entry-name>config/mail/password</env-entry-name><newline46mondego>    <env-entry-type>java.lang.String</env-entry-type><newline46mondego>    <env-entry-value></env-entry-value><newline46mondego></env-entry><newline46mondego>"
"3170splitHere46","1867249splitHere46","readLine()"
"3171splitHere46","1867249splitHere46","BufferedReader"
"3172splitHere46","1867656splitHere46","hashAndSign"
"3173splitHere46","1867670splitHere46","<h:selectOneRadio>"
"3174splitHere46","1867670splitHere46","<h:selectManyCheckbox>"
"3175splitHere46","1867670splitHere46","layout"
"3176splitHere46","1867670splitHere46","spread"
"3177splitHere46","1867670splitHere46","<t:selectOneRadio>"
"3178splitHere46","1867670splitHere46","<t:selectOneRadio id=<doubleQuotes46>foo<doubleQuotes46> value=<doubleQuotes46>#{bean.foo}<doubleQuotes46> layout=<doubleQuotes46>spread<doubleQuotes46>><newline46mondego>    <f:selectItems value=<doubleQuotes46>#{bean.foos}<doubleQuotes46> /><newline46mondego></t:selectOneRadio><newline46mondego>...<newline46mondego><t:radio for=<doubleQuotes46>foo<doubleQuotes46> index=<doubleQuotes46>0<doubleQuotes46> /><newline46mondego>...<newline46mondego><t:radio for=<doubleQuotes46>foo<doubleQuotes46> index=<doubleQuotes46>1<doubleQuotes46> /><newline46mondego>...<newline46mondego><t:radio for=<doubleQuotes46>foo<doubleQuotes46> index=<doubleQuotes46>2<doubleQuotes46> /><newline46mondego>...<newline46mondego>"
"3179splitHere46","1867670splitHere46","<table>"
"3180splitHere46","1867670splitHere46","<h:panelGrid>"
"3181splitHere46","1867670splitHere46","<div>"
"3182splitHere46","1867670splitHere46","<h:panelGroup layout=<doubleQuotes46>block<doubleQuotes46>>"
"3183splitHere46","1867670splitHere46","<div>"
"3184splitHere46","1867670splitHere46","styleClass"
"3185splitHere46","1867670splitHere46","class"
"3186splitHere46","1867670splitHere46","style"
"3187splitHere46","1867670splitHere46","style"
"3188splitHere46","1867670splitHere46","NamingContainer"
"3189splitHere46","1867670splitHere46","<h:form>"
"3190splitHere46","1867670splitHere46","<h:dataTable>"
"3191splitHere46","1867670splitHere46",":"
"3192splitHere46","1867670splitHere46","\"
"3193splitHere46","1867670splitHere46","<h:form id=<doubleQuotes46>form<doubleQuotes46>><newline46mondego>    <h:inputText id=<doubleQuotes46>input<doubleQuotes46> ... /><newline46mondego>"
"3194splitHere46","1867670splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> id=<doubleQuotes46>form:input<doubleQuotes46> ... />"
"3195splitHere46","1867670splitHere46","#form\:input {<newline46mondego>    background: gray;<newline46mondego>}<newline46mondego>"
"3196splitHere46","1867670splitHere46","NamingContainer"
"3197splitHere46","1867853splitHere46","public abstract class XmlElement implements Serializable {<newline46mondego>    protected static Document elementGenerator = createElementGenerator();<newline46mondego><newline46mondego>    protected static Document createElementGenerator() {<newline46mondego>        try {<newline46mondego>            elementGenerator = documentBuilderFactory.newInstance().newDocumentBuilder().newDocument();<newline46mondego>        } catch (ParserConfigurationException e) {<newline46mondego>            StateController.getInstance().addLog(new Log(Log.Type.ERROR, <doubleQuotes46>Couldn't load XML parser: <doubleQuotes46> + e));<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public abstract Element toXML();<newline46mondego>    public abstract void fromXML(Element element);<newline46mondego>    protected abstract String getTag();<newline46mondego>}<newline46mondego>"
"3198splitHere46","1868228splitHere46","Serializable"
"3199splitHere46","1868228splitHere46","Cloneable"
"3200splitHere46","1868228splitHere46","int[]"
"3201splitHere46","1868228splitHere46","Object[]"
"3202splitHere46","1868228splitHere46","Arrays"
"3203splitHere46","1868228splitHere46","System.out.println(Arrays.toString(names));<newline46mondego>System.out.println(Arrays.toString(numbers));<newline46mondego>"
"3204splitHere46","1868228splitHere46","Arrays"
"3205splitHere46","1868228splitHere46","public static void printAll(Object[] items) {<newline46mondego>    for (Object o : items)<newline46mondego>        System.out.println(o);<newline46mondego>}<newline46mondego>public static void printAll(int[] items) {<newline46mondego>    for (int i : items)<newline46mondego>        System.out.println(i);<newline46mondego>}<newline46mondego>public static void printAll(double[] items) {<newline46mondego>    for (double d : items)<newline46mondego>        System.out.println(d);<newline46mondego>}<newline46mondego>// ...<newline46mondego>"
"3206splitHere46","1868228splitHere46","Collection"
"3207splitHere46","1868228splitHere46","Iterable"
"3208splitHere46","1868228splitHere46","public static <T> void printAll(Iterable<T> items) {<newline46mondego>    for (T t : items)<newline46mondego>        System.out.println(t);<newline46mondego>}<newline46mondego>"
"3209splitHere46","1868375splitHere46","java.lang.reflect.Field"
"3210splitHere46","1868375splitHere46","Field#getType()"
"3211splitHere46","1868375splitHere46","Class.getDeclaredFields()"
"3212splitHere46","1868375splitHere46","for (Field field : Person.class.getDeclaredFields()) {<newline46mondego>    System.out.format(<doubleQuotes46>Type: %s%n<doubleQuotes46>, field.getType());<newline46mondego>    System.out.format(<doubleQuotes46>GenericType: %s%n<doubleQuotes46>, field.getGenericType());<newline46mondego>}<newline46mondego>"
"3213splitHere46","1868375splitHere46","Field#getGenericType()"
"3214splitHere46","1868375splitHere46","Type"
"3215splitHere46","1868375splitHere46","ParameterizedType"
"3216splitHere46","1868375splitHere46","ParameterizedType#getRawType()"
"3217splitHere46","1868375splitHere46","ParameterizedType#getActualTypeArgument()"
"3218splitHere46","1868375splitHere46","ParameterizedType"
"3219splitHere46","1868375splitHere46","for (Field field : Person.class.getDeclaredFields()) {<newline46mondego>    System.out.print(<doubleQuotes46>Field: <doubleQuotes46> + field.getName() + <doubleQuotes46> - <doubleQuotes46>);<newline46mondego>    Type type = field.getGenericType();<newline46mondego>    if (type instanceof ParameterizedType) {<newline46mondego>        ParameterizedType pType = (ParameterizedType)type;<newline46mondego>        System.out.print(<doubleQuotes46>Raw type: <doubleQuotes46> + pType.getRawType() + <doubleQuotes46> - <doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Type args: <doubleQuotes46> + pType.getActualTypeArguments()[0]);<newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>Type: <doubleQuotes46> + field.getType());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3220splitHere46","1868375splitHere46","Field: name - Type: class java.lang.String<newline46mondego>Field: children - Raw type: interface java.util.List - Type args: class foo.Person<newline46mondego>"
"3221splitHere46","1868486splitHere46","Parser"
"3222splitHere46","1868486splitHere46","File.ReadAllLines()"
"3223splitHere46","1868486splitHere46","String[]"
"3224splitHere46","1868486splitHere46","StreamReader"
"3225splitHere46","1868486splitHere46","ReadLine()"
"3226splitHere46","1868486splitHere46","String"
"3227splitHere46","1868486splitHere46","Split()"
"3228splitHere46","1868486splitHere46","// Read in the whole file<newline46mondego>String[] strLines = File.ReadAllLines(strFilePath);<newline46mondego><newline46mondego>// Loop through each of the lines to process their contents<newline46mondego>foreach (String strLine in strLines) {<newline46mondego>    // Tokenize on the spaces<newline46mondego>    String[] strTokens = strLine.Split(' ');<newline46mondego><newline46mondego>    // Parse the values<newline46mondego>    int iIntValue = Int.Parse(strTokens[0]);<newline46mondego>    double dDoubleValue = Double.Parse(strTokens[1]);<newline46mondego><newline46mondego>    // Do something with the values<newline46mondego>}<newline46mondego>"
"3229splitHere46","1868486splitHere46","Parser"
"3230splitHere46","1868486splitHere46","StreamReader"
"3231splitHere46","1869041splitHere46","for"
"3232splitHere46","1869041splitHere46","public class Words implements Iterator<String> {<newline46mondego>  private final Iterator<HasWord> sentences;<newline46mondego>  private Iterator<String> currentSentence;<newline46mondego><newline46mondego>  public boolean hasNext() {<newline46mondego>    return currentSentence.hasNext() || sentences.hasNext();<newline46mondego>  }<newline46mondego><newline46mondego>  public String next() {<newline46mondego>    if (currentSentence.hasNext()) {<newline46mondego>      return currentSentence.next();<newline46mondego>    }<newline46mondego>    currentSentence = sentences.next();<newline46mondego>    return next(); // will return the first word of the next sentence<newline46mondego>  }<newline46mondego>  //remove() omitted for brevity<newline46mondego>}<newline46mondego>"
"3233splitHere46","1869041splitHere46","sentences"
"3234splitHere46","1869041splitHere46","sentences.iterator();"
"3235splitHere46","1869240splitHere46","PersistentStore"
"3236splitHere46","1869240splitHere46","Vector data = (Vector) PersistentStore.getPersistentObject(KEY).getContents();<newline46mondego>"
"3237splitHere46","1869240splitHere46","PersistentStore.getPersistentObject(KEY).setContents(data);<newline46mondego>PersistentStore.getPersistentObject(KEY).commit();<newline46mondego>"
"3238splitHere46","1869438splitHere46","-Djava.security.manager"
"3239splitHere46","1869847splitHere46","foo"
"3240splitHere46","1869847splitHere46","/page.jsp"
"3241splitHere46","1869847splitHere46","www.foo.com/foo/page.jsf"
"3242splitHere46","1869847splitHere46","www.foo.com/foo/bar/page.jsf"
"3243splitHere46","1869847splitHere46","page.jsf"
"3244splitHere46","1870005splitHere46","String[] caseStartLineSplitted = caseStartLine.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>"
"3245splitHere46","1870005splitHere46","String[] caseStartLineSplitted = caseStartLine.split(<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"3246splitHere46","1870005splitHere46","2<newline46mondego>3 2 1<newline46mondego>0 3<newline46mondego>"
"3247splitHere46","1870272splitHere46","Connection"
"3248splitHere46","1870272splitHere46","Statement"
"3249splitHere46","1870272splitHere46","ResultSet"
"3250splitHere46","1870272splitHere46","List"
"3251splitHere46","1870272splitHere46","Map"
"3252splitHere46","1870272splitHere46","Iterator"
"3253splitHere46","1870272splitHere46","public List<Data> list() throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    Statement statement = null;<newline46mondego>    ResultSet resultSet = null;<newline46mondego>    List<Data> list = new ArrayList<Data>();<newline46mondego><newline46mondego>    try {<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.createStatement(<doubleQuotes46>SELECT id, name, value FROM data<doubleQuotes46>);<newline46mondego>        resultSet = statement.executeQuery();<newline46mondego>        while (resultSet.next()) {<newline46mondego>            Data data = new Data(); <newline46mondego>            data.setId(resultSet.getLong(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>            data.setName(resultSet.getString(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>            data.setValue(resultSet.getInteger(<doubleQuotes46>value<doubleQuotes46>));<newline46mondego>            list.add(data);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (resultSet != null) try { resultSet.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego><newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"3254splitHere46","1870272splitHere46","List<Data> list = dataDAO.list(); <newline46mondego>int count = list.size(); // Easy as that.<newline46mondego>Iterator<Data> iterator = list.iterator(); // There is your Iterator.<newline46mondego>"
"3255splitHere46","1870287splitHere46","war"
"3256splitHere46","1870287splitHere46","ear"
"3257splitHere46","1870287splitHere46","pom.xml"
"3258splitHere46","1870287splitHere46","my-project<newline46mondego>|-- pom.xml       // packaging of type pom and my-war and my-ear as modules<newline46mondego>|-- my-war<newline46mondego>|   `-- pom.xml   // packaging of type war<newline46mondego>`-- my-ear<newline46mondego>    `-- pom.xml   // packaging of type ear<newline46mondego>"
"3259splitHere46","1870307splitHere46","// @todo: scan for devices<newline46mondego>    // @todo: for each device search obex push service<newline46mondego>    String deviceObexUrl = serviceRecords[i].getConnectionURL(ServiceRecord.NOAUTHENTICATE_NOENCRYPT, false);<newline46mondego><newline46mondego>    // send file<newline46mondego>    ClientSession clientSession = (ClientSession) Connector.open(deviceObexUrl);<newline46mondego>    HeaderSet hsConnectReply = clientSession.connect(null);<newline46mondego>    if (hsConnectReply.getResponseCode() != ResponseCodes.OBEX_HTTP_OK) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    byte data[] = readAllFile(file);<newline46mondego><newline46mondego>    HeaderSet headerSet = clientSession.createHeaderSet();<newline46mondego>    headerSet.setHeader(HeaderSet.NAME, file.getName());<newline46mondego>    headerSet.setHeader(HeaderSet.TYPE, mimeType);<newline46mondego>    headerSet.setHeader(HeaderSet.LENGTH, new Long(data.length));<newline46mondego>    Operation op = clientSession.put(headerSet);<newline46mondego><newline46mondego>    OutputStream outputStream = op.openOutputStream();<newline46mondego>    // @todo: write all data and close outputStream, op and clientSession<newline46mondego>"
"3260splitHere46","1870454splitHere46","public class Jessy extends JFrame {<newline46mondego><newline46mondego>   private static final int DRAWING_SIZE = 600;<newline46mondego>   private static final int SUBDIVISIONS = 2;<newline46mondego>   private static final int SUBDIVISION_SIZE = DRAWING_SIZE / SUBDIVISIONS;<newline46mondego><newline46mondego>   public Jessy() {<newline46mondego>      setSize(800, 800);<newline46mondego>      setLayout(new GridBagLayout());<newline46mondego>      GridBagConstraints gbc = new GridBagConstraints();<newline46mondego>      gbc.weightx = 1.0;<newline46mondego>      gbc.weighty = 1.0;<newline46mondego>      gbc.gridx = 0;<newline46mondego>      gbc.gridy = 0;<newline46mondego>      JLabel drawingBoard = new JLabel(<doubleQuotes46>Drawing Board<doubleQuotes46>);<newline46mondego>      gbc.anchor = GridBagConstraints.SOUTH;<newline46mondego>      drawingBoard.setFont(new Font(<doubleQuotes46>Serif<doubleQuotes46>, Font.BOLD, 28));<newline46mondego>      add(drawingBoard, gbc);<newline46mondego>      JPanel panel = new JPanel() {<newline46mondego>         @Override public void paintComponent(Graphics g) {<newline46mondego>            super.paintComponent(g);<newline46mondego>            Graphics2D g2 = (Graphics2D) g;<newline46mondego>            g2.setPaint(Color.GRAY);<newline46mondego>            for (int i = 1; i < SUBDIVISIONS; i++) {<newline46mondego>               int x = i * SUBDIVISION_SIZE;<newline46mondego>               g2.drawLine(x, 0, x, getSize().height);<newline46mondego>            }<newline46mondego>            for (int i = 1; i < SUBDIVISIONS; i++) {<newline46mondego>               int y = i * SUBDIVISION_SIZE;<newline46mondego>               g2.drawLine(0, y, getSize().width, y);<newline46mondego>            }<newline46mondego>         }          <newline46mondego>      };<newline46mondego>      panel.setPreferredSize(new Dimension(DRAWING_SIZE, DRAWING_SIZE));<newline46mondego>      panel.setBackground(Color.WHITE);<newline46mondego>      panel.setBorder(BorderFactory.createLineBorder(Color.BLACK));<newline46mondego>      gbc.gridy++;<newline46mondego>      gbc.anchor = GridBagConstraints.CENTER;<newline46mondego>      add(panel, gbc);<newline46mondego>      JButton saveDrawing = new JButton(<doubleQuotes46>SAVE DRAWING<doubleQuotes46>);<newline46mondego>      gbc.gridy++;<newline46mondego>      gbc.anchor = GridBagConstraints.NORTH;<newline46mondego>      add(saveDrawing, gbc);<newline46mondego>   }<newline46mondego>   public static void main(String[] args) {<newline46mondego>      (new Jessy()).setVisible(true);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3261splitHere46","1870454splitHere46","paintComponents()"
"3262splitHere46","1870454splitHere46","super.paintComponents()"
"3263splitHere46","1870907splitHere46","allStates = new Set<State>();<newline46mondego>"
"3264splitHere46","1871078splitHere46","socket.getLocalAddress()"
"3265splitHere46","1871374splitHere46","int value = someValue | 0x1;<newline46mondego>"
"3266splitHere46","1871374splitHere46","int value = someValue & (~0x1);<newline46mondego>"
"3267splitHere46","1871374splitHere46","int value = someValue ^ 0x1;<newline46mondego>"
"3268splitHere46","1871437splitHere46","public void markInitialState (int initialStateId) {<newline46mondego><newline46mondego>        State theInitialState = allStates.get(initialStateId);<newline46mondego>        theInitialState.isInitial=true;<newline46mondego>        allStates.add(initialStateId, theInitialState);<newline46mondego><newline46mondego>        /*DEBUG*/<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46> THE INITIAL STATE ID IS <doubleQuotes46> + initialStateId);<newline46mondego><newline46mondego>        theInitialState = allStates.get(initialStateId);<newline46mondego>        if ((theInitialState.isInitial)==true)<newline46mondego>        System.out.println(<doubleQuotes46>THE STATE <doubleQuotes46> + theInitialState + <doubleQuotes46> IS MARKED AS INITIAL<doubleQuotes46>);<newline46mondego><newline46mondego>}<newline46mondego>"
"3269splitHere46","1871437splitHere46","theInitialState"
"3270splitHere46","1871437splitHere46","initialStateID"
"3271splitHere46","1871502splitHere46","ExecutorService executor = Executors.newFixedThreadPool(10);<newline46mondego>for (final Object item : collectionThingy) {<newline46mondego>  executor.submit(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>      // do stuff with item<newline46mondego>    }<newline46mondego>  });<newline46mondego>}<newline46mondego>executor.shutdown();<newline46mondego>executor.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);<newline46mondego>"
"3272splitHere46","1871502splitHere46","@Override"
"3273splitHere46","1871502splitHere46","InterruptedException"
"3274splitHere46","1871502splitHere46","ExecutionException"
"3275splitHere46","1871691splitHere46","import java.lang.reflect.Field;<newline46mondego>import java.net.InetAddress;<newline46mondego>import java.net.UnknownHostException;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego>public class DNSCache {<newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    InetAddress.getByName(<doubleQuotes46>stackoverflow.com<doubleQuotes46>);<newline46mondego>    InetAddress.getByName(<doubleQuotes46>www.google.com<doubleQuotes46>);<newline46mondego>    InetAddress.getByName(<doubleQuotes46>www.yahoo.com<doubleQuotes46>);<newline46mondego>    InetAddress.getByName(<doubleQuotes46>www.example.com<doubleQuotes46>);<newline46mondego>    try {<newline46mondego>        InetAddress.getByName(<doubleQuotes46>nowhere.example.com<doubleQuotes46>);<newline46mondego>    } catch (UnknownHostException e) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    String addressCache = <doubleQuotes46>addressCache<doubleQuotes46>;<newline46mondego>    System.out.println(addressCache);<newline46mondego>    printDNSCache(addressCache);<newline46mondego>    String negativeCache = <doubleQuotes46>negativeCache<doubleQuotes46>;<newline46mondego>    System.out.println(negativeCache);<newline46mondego>    printDNSCache(negativeCache);<newline46mondego>  }<newline46mondego>  private static void printDNSCache(String cacheName) throws Exception {<newline46mondego>    Class<InetAddress> klass = InetAddress.class;<newline46mondego>    Field acf = klass.getDeclaredField(cacheName);<newline46mondego>    acf.setAccessible(true);<newline46mondego>    Object addressCache = acf.get(null);<newline46mondego>    Class cacheKlass = addressCache.getClass();<newline46mondego>    Field cf = cacheKlass.getDeclaredField(<doubleQuotes46>cache<doubleQuotes46>);<newline46mondego>    cf.setAccessible(true);<newline46mondego>    Map<String, Object> cache = (Map<String, Object>) cf.get(addressCache);<newline46mondego>    for (Map.Entry<String, Object> hi : cache.entrySet()) {<newline46mondego>        Object cacheEntry = hi.getValue();<newline46mondego>        Class cacheEntryKlass = cacheEntry.getClass();<newline46mondego>        Field expf = cacheEntryKlass.getDeclaredField(<doubleQuotes46>expiration<doubleQuotes46>);<newline46mondego>        expf.setAccessible(true);<newline46mondego>        long expires = (Long) expf.get(cacheEntry);<newline46mondego><newline46mondego>        Field af = cacheEntryKlass.getDeclaredField(<doubleQuotes46>address<doubleQuotes46>);<newline46mondego>        af.setAccessible(true);<newline46mondego>        InetAddress[] addresses = (InetAddress[]) af.get(cacheEntry);<newline46mondego>        List<String> ads = new ArrayList<String>(addresses.length);<newline46mondego>        for (InetAddress address : addresses) {<newline46mondego>            ads.add(address.getHostAddress());<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(hi.getKey() + <doubleQuotes46> <doubleQuotes46>+new Date(expires) +<doubleQuotes46> <doubleQuotes46> +ads);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3276splitHere46","1871813splitHere46","collection = [<doubleQuotes46>element1<doubleQuotes46>, <doubleQuotes46>element2<doubleQuotes46>]<newline46mondego>collection.each_with_index {|item,index| puts item; puts index}<newline46mondego>"
"3277splitHere46","1871883splitHere46","internal"
"3278splitHere46","1871883splitHere46","protected"
"3279splitHere46","1871883splitHere46","public class X<newline46mondego>{<newline46mondego>    internal class A<newline46mondego>    {<newline46mondego>    }<newline46mondego><newline46mondego>    protected IEnumerable<A> ACollection { get; set; }<newline46mondego>}<newline46mondego>"
"3280splitHere46","1871936splitHere46","public interface Function<T> {<newline46mondego>  T execute(T input);<newline46mondego>}<newline46mondego><newline46mondego>public static <T> List<T> map(List<T> input, final Function<T> func)<newline46mondego>    throws InterruptedException, ExecutionException {<newline46mondego>  List<Future<T>> futures = new ArrayList<Future<T>>(input.size());<newline46mondego>  ExecutorService executor = Executors.newFixedThreadPool(10);<newline46mondego>  for (final T item : input) {<newline46mondego>    futures.add(executor.submit(new Callable<T>() {<newline46mondego>      @Override<newline46mondego>      public T call() {<newline46mondego>        return func.execute(item);<newline46mondego>      }<newline46mondego>    }));<newline46mondego>  }<newline46mondego>  executor.shutdown();<newline46mondego>  executor.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);<newline46mondego>  List<T> ret = new ArrayList<T>(futures.size());<newline46mondego>  for (Future<T> future : futures) {<newline46mondego>    ret.add(future.get());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3281splitHere46","1871936splitHere46","List<Integer> input = new ArrayList<Integer>();<newline46mondego>for (int i=0; i<100; i++) {<newline46mondego>  input.add(i);<newline46mondego>}<newline46mondego>List<Integer> result = map(input, new Function<Integer>() {<newline46mondego>  @Override<newline46mondego>  public Integer execute(Integer in) {<newline46mondego>    return in * in;<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"3282splitHere46","1872325splitHere46","public"
"3283splitHere46","1872338splitHere46","G=25<newline46mondego>M=912<newline46mondego>R = 912 % 25 = 12<newline46mondego>R = 1100 (binary)<newline46mondego>"
"3284splitHere46","1872512splitHere46","SELECT the_number FROM the_table where the_key = :key"
"3285splitHere46","1872512splitHere46","INSERT INTO the_table SELECT :key, the_seq.NEXT_VAL RETURNING the_number INTO :number"
"3286splitHere46","1872512splitHere46","COMMIT"
"3287splitHere46","1872512splitHere46","SELECT"
"3288splitHere46","1872620splitHere46","<#if order.needByDate??>${order.needByDate?date}</#if><newline46mondego>"
"3289splitHere46","1873070splitHere46","<bean id=<doubleQuotes46>aliasUrlMapping<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.servlet.handler.SimpleUrlHandlerMapping<doubleQuotes46>><newline46mondego>  <description><newline46mondego>    <![CDATA[<newline46mondego>      The following URLs are in fact shortcuts (or aliases) <newline46mondego>      to other URLs etc etc (...I'll spare you the ugly part)<newline46mondego>    ]]><newline46mondego>  </description><newline46mondego>  <property name=<doubleQuotes46>mappings<doubleQuotes46>><newline46mondego>    <props><newline46mondego>      <prop key=<doubleQuotes46>/first.do<doubleQuotes46>>theController</prop><newline46mondego>      ...<newline46mondego><newline46mondego><bean id=<doubleQuotes46>urlMapping<doubleQuotes46> class=<doubleQuotes46>org.springframework.web.servlet.handler.SimpleUrlHandlerMapping<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>mappings<doubleQuotes46>><newline46mondego>    <props><newline46mondego>      <prop key=<doubleQuotes46>/second.do<doubleQuotes46>>theController</prop><newline46mondego>      ...<newline46mondego>"
"3290splitHere46","1873157splitHere46","com.sun.*"
"3291splitHere46","1873198splitHere46","* openInputStream<newline46mondego>* openDataInputStream<newline46mondego>* getLength<newline46mondego>* getType<newline46mondego>* getEncoding<newline46mondego>* getHeaderField<newline46mondego>* getResponseCode<newline46mondego>* getResponseMessage<newline46mondego>* getHeaderFieldInt<newline46mondego>* getHeaderFieldDate<newline46mondego>* getExpiration<newline46mondego>* getDate<newline46mondego>* getLastModified<newline46mondego>* getHeaderField<newline46mondego>* getHeaderFieldKey<newline46mondego>"
"3292splitHere46","1873428splitHere46","Map<ReferenceObjectKey,Thing> map;<newline46mondego>"
"3293splitHere46","1873428splitHere46","Map<ValueObjectKey,ReferenceObject<Thing>> map;<newline46mondego>"
"3294splitHere46","1873471splitHere46","#!/bin/sh<newline46mondego># Changed code to remove the 'head -1' as per the suggestion in comment.<newline46mondego>JAVA_VERSION=`java -version 2>&1 |awk 'NR==1{ gsub(/<doubleQuotes46>/,<doubleQuotes46><doubleQuotes46>); print $3 }'`<newline46mondego># export JAVA_VERSION<newline46mondego>echo $JAVA_VERSION<newline46mondego>"
"3295splitHere46","1873471splitHere46","$ 1.6.0_15<newline46mondego>"
"3296splitHere46","1873485splitHere46","src/main/webapp/WEB-INF/jsp"
"3297splitHere46","1873485splitHere46","<warSourceDirectory>${basedir}/web/WEB-INF</warSourceDirectory><newline46mondego>"
"3298splitHere46","1873485splitHere46","${basedir}/src/main/webapp"
"3299splitHere46","1873890splitHere46","get(0)"
"3300splitHere46","1873890splitHere46","NodeList<Route>"
"3301splitHere46","1873890splitHere46","NodeList"
"3302splitHere46","1873890splitHere46","int distance = ((Route) routes.get(0)).distance)"
"3303splitHere46","1873890splitHere46","public int distance;"
"3304splitHere46","1873890splitHere46","public int getDistance() { return this.distance; }"
"3305splitHere46","1873964splitHere46","reloadable=true"
"3306splitHere46","1873964splitHere46","<Context>"
"3307splitHere46","1873964splitHere46","reloadable"
"3308splitHere46","1873964splitHere46","true"
"3309splitHere46","1873964splitHere46","/WEB-INF/classes/"
"3310splitHere46","1873964splitHere46","/WEB-INF/lib"
"3311splitHere46","1874048splitHere46","<HEAD>"
"3312splitHere46","1874048splitHere46","<BODY>"
"3313splitHere46","1874311splitHere46","LocalDateTime"
"3314splitHere46","1874311splitHere46","DateTime"
"3315splitHere46","1874311splitHere46","Date"
"3316splitHere46","1874452splitHere46","public boolean equals(Object obj) {<newline46mondego>    if (obj instanceof Integer) {<newline46mondego>        return value == ((Integer)obj).intValue();<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"3317splitHere46","1874452splitHere46","x.intValue() == y.intValue()"
"3318splitHere46","1874452splitHere46","equals()"
"3319splitHere46","1874452splitHere46","int"
"3320splitHere46","1874452splitHere46","Integer"
"3321splitHere46","1874452splitHere46","equals()"
"3322splitHere46","1874510splitHere46","BeanFactory newFactory = new XmlBeanFactory(xmlResource, yourParentBeanFactory);<newline46mondego><newline46mondego>// if you what an ApplicationContext<newline46mondego><newline46mondego>ApplicationContext newContext = new ClassPathXmlApplicationContext( new String[]{<doubleQuotes46>newBeans.xml<doubleQuotes46>}, parent);<newline46mondego>"
"3323splitHere46","1874510splitHere46","ApplicationContextAware"
"3324splitHere46","1874585splitHere46","Wallet"
"3325splitHere46","1874915splitHere46","0.023/0.024"
"3326splitHere46","1875061splitHere46","SELECT name, id, xyz FROM table ORDER BY 'xyz'<newline46mondego>"
"3327splitHere46","1875093splitHere46","List<State>"
"3328splitHere46","1875181splitHere46","tomcat.conf"
"3329splitHere46","1875181splitHere46","/conf"
"3330splitHere46","1875554splitHere46","System.gc()"
"3331splitHere46","1875964splitHere46","printf (<doubleQuotes46>%-32s %f\n<doubleQuotes46>, pt.toString(), conditionalProbs[1])<newline46mondego>"
"3332splitHere46","1875964splitHere46","%s"
"3333splitHere46","1875964splitHere46","%f"
"3334splitHere46","1876503splitHere46","public static void find(String delim) {<newline46mondego>    File dir = new File(<doubleQuotes46>/tmp/files<doubleQuotes46>);<newline46mondego>    Pattern strPattern = Pattern.compile(delim);<newline46mondego>    if (dir.exists()) {<newline46mondego>        try {<newline46mondego>            for(File curFile : dir.listFiles()){<newline46mondego>              if(!curFile.getName().endsWith(<doubleQuotes46>.txt<doubleQuotes46>)){continue;}<newline46mondego>              BufferedReader in = new BufferedReader(new FileReader(<newline46mondego>                       curFile));<newline46mondego>              int foundCount = 0;<newline46mondego>              String read = null;<newline46mondego>              while ((read = in.readLine()) != null) {<newline46mondego>                if(strPattern.matcher(read).matches()){<newline46mondego>                  foundCount ++;<newline46mondego>                }<newline46mondego>              }<newline46mondego>              System.out.println(<doubleQuotes46>Found <doubleQuotes46>+ delim +<doubleQuotes46> <doubleQuotes46>+ foundCount + <doubleQuotes46> time(s) in <doubleQuotes46>+curFile);<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>error: dir wasn't found!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3335splitHere46","1876891splitHere46","x"
"3336splitHere46","1876891splitHere46","y"
"3337splitHere46","1877184splitHere46","row"
"3338splitHere46","1877184splitHere46","col"
"3339splitHere46","1877184splitHere46","VisualObject"
"3340splitHere46","1877721splitHere46","Collection<String>"
"3341splitHere46","1877721splitHere46","List<String>"
"3342splitHere46","1877721splitHere46","Collections.sort(myList, myComparator);"
"3343splitHere46","1877721splitHere46","public List<String> sortThem(List<String> strings, Comparator<String> comp) {<newline46mondego>    ... do cool things ...<newline46mondego><newline46mondego>    Collections.sort(strings, comp);<newline46mondego><newline46mondego>    return strings;<newline46mondego>}<newline46mondego>"
"3344splitHere46","1877919splitHere46","public abstract class JavaAbstractType implements JavaType {<newline46mondego>    public Class<?> getType() {<newline46mondego>        return type;<newline46mondego>    }<newline46mondego>"
"3345splitHere46","1877919splitHere46","<%<newline46mondego>	//////////////////////////////////<newline46mondego>	/// Check if class has been Aliased by XStream<newline46mondego>	def alias = jClass.qualifiedName;<newline46mondego>	def actualClass = jClass.type;<newline46mondego><newline46mondego>	if (jClass.isAnnotationPresent(<newline46mondego>                        com.thoughtworks.xstream.annotations.XStreamAlias.class)) {<newline46mondego>		com.thoughtworks.xstream.annotations.XStreamAlias xstreamAlias = actualClass.getAnnotation(com.thoughtworks.xstream.annotations.XStreamAlias.class);<newline46mondego>		alias = xstreamAlias.value();<newline46mondego>	}<newline46mondego>%><newline46mondego>[Bindable]<newline46mondego>[RemoteClass(alias=<doubleQuotes46>${alias}<doubleQuotes46>)]<newline46mondego>public class ${jClass.as3Type.name} extends ${jClass.as3Type.name}Base {<%<newline46mondego>"
"3346splitHere46","1877980splitHere46","[<newline46mondego>    [0, -1, 0],<newline46mondego>    [1, 0, 0],<newline46mondego>    [0, 0, 1]<newline46mondego>]<newline46mondego>"
"3347splitHere46","1878064splitHere46","...<newline46mondego>br.readLine();<newline46mondego>...<newline46mondego>"
"3348splitHere46","1878064splitHere46","readLine()"
"3349splitHere46","1878064splitHere46","line"
"3350splitHere46","1878192splitHere46","where column in (:firstsubset) or column in (:secondsubset) or ..."
"3351splitHere46","1878284splitHere46","function next_boards(board)<newline46mondego>   yields a set of reachable in one move from the current board<newline46mondego><newline46mondego>queue = [start_board]<newline46mondego><newline46mondego>while true:<newline46mondego>   current = queue.pop()<newline46mondego>   if current = goal: break<newline46mondego><newline46mondego>   queue.push for all next_boards(current)<newline46mondego>"
"3352splitHere46","1878351splitHere46","String sql = <doubleQuotes46>insert into foo (bar,baz) values(<doubleQuotes46> +myValue1 + <doubleQuotes46>, <doubleQuotes46> + myValue2 + <doubleQuotes46>)<doubleQuotes46>;<newline46mondego>Statement stmt = connection.createStatement();<newline46mondego>stmt.executeUpdate( sql );<newline46mondego>"
"3353splitHere46","1878351splitHere46","String sql = <doubleQuotes46>insert into foo (bar, baz) values( ?, ? )<doubleQuotes46>;<newline46mondego>PreparedStatement stmt = connection.prepareStatement( sql );<newline46mondego>stmt.setString( 1, myValue1 );<newline46mondego>stmt.setString( 2, myValue2 );<newline46mondego>stmt.executeUpdate();<newline46mondego>"
"3354splitHere46","1878481splitHere46","class Cons { int x; }<newline46mondego>"
"3355splitHere46","1878481splitHere46","class Cons { int x; public Cons() {} }<newline46mondego>"
"3356splitHere46","1878481splitHere46","class A { public A() { System.out.println(<doubleQuotes46>A<doubleQuotes46>); } }<newline46mondego>"
"3357splitHere46","1878481splitHere46","class B extends A { public B() { System.out.println(<doubleQuotes46>B<doubleQuotes46>); } }<newline46mondego>"
"3358splitHere46","1878481splitHere46","class B extends A { public B() { super(); System.out.println(<doubleQuotes46>B<doubleQuotes46>); } }<newline46mondego>"
"3359splitHere46","1878481splitHere46","A<newline46mondego>B<newline46mondego>"
"3360splitHere46","1878481splitHere46","new NoCons2();<newline46mondego>"
"3361splitHere46","1878765splitHere46","class AbstractClass {<newline46mondego>   AbstractClass(){ /* useful implementation */ }<newline46mondego>}<newline46mondego><newline46mondego>class ConcreteClass1 extends AbstractClass {<newline46mondego>     ConcreteClass1(){ super(); /* useful implementation */ }<newline46mondego>     ConcreteClass1(boolean skip){ super(); }<newline46mondego>}<newline46mondego>class CustomizedClass1 extends ConcreteClass1 {<newline46mondego>     CustomizedCLass1(){ super(true); /* useful implementation */ }<newline46mondego>}<newline46mondego>"
"3362splitHere46","1878796splitHere46","get()"
"3363splitHere46","1878796splitHere46","cancel(true)"
"3364splitHere46","1879197splitHere46","Class.forName(...)<newline46mondego>"
"3365splitHere46","1879292splitHere46","// traditional for loop<newline46mondego>for (int i = 0; i < collection.size(); i++) {<newline46mondego>  T obj = collection.get(i);<newline46mondego>  // snip<newline46mondego>}<newline46mondego><newline46mondego>// using iterator<newline46mondego>Iterator<T> iter = collection.iterator();<newline46mondego>while (iter.hasNext()) {<newline46mondego>  T obj = iter.next();<newline46mondego>  // snip<newline46mondego>}<newline46mondego><newline46mondego>// using iterator internally (confirm it yourself using javap -c)<newline46mondego>for (T obj : collection) {<newline46mondego>   // snip<newline46mondego>}<newline46mondego>"
"3366splitHere46","1879292splitHere46","list.get(i)"
"3367splitHere46","1879549splitHere46","$ touch MyMainClass.class<newline46mondego><newline46mondego>$ echo 'Main-Class: MyMainClass' > MyManifest<newline46mondego><newline46mondego>$ jar cvmf MyManifest myjar.jar MyMainClass.class<newline46mondego>added manifest<newline46mondego>adding: MyMainClass.class(in = 0) (out= 0)(stored 0%)<newline46mondego><newline46mondego>$ unzip -c myjar.jar META-INF/MANIFEST.MF<newline46mondego>Archive:  myjar.jar<newline46mondego>  inflating: META-INF/MANIFEST.MF<newline46mondego>Manifest-Version: 1.0<newline46mondego>Created-By: 1.6.0_17 (Apple Inc.)<newline46mondego>Main-Class: MyMainClass<newline46mondego><newline46mondego>$ jarsigner myjar.jar mykeyid<newline46mondego>Enter Passphrase for keystore:<newline46mondego><newline46mondego>$ unzip -c myjar.jar META-INF/MANIFEST.MF<newline46mondego>Archive:  myjar.jar<newline46mondego>  inflating: META-INF/MANIFEST.MF<newline46mondego>Manifest-Version: 1.0<newline46mondego>Created-By: 1.6.0_17 (Apple Inc.)<newline46mondego>Main-Class: MyMainClass<newline46mondego>Name: MyMainClass.class<newline46mondego>SHA1-Digest: 2jmj7l5rSw0yVb/vlWAYkK/YBwk=<newline46mondego>"
"3368splitHere46","1879587splitHere46","<attribute name=<doubleQuotes46>URLs<doubleQuotes46>>deploy/, file:\C:\Apps\foo.war</attribute><newline46mondego>"
"3369splitHere46","1879733splitHere46","python.cachedir.skip=true<newline46mondego>"
"3370splitHere46","1879935splitHere46","HashMap"
"3371splitHere46","1879935splitHere46","/**<newline46mondego> * Applies a supplemental hash function to a given hashCode, which<newline46mondego> * defends against poor quality hash functions.  This is critical<newline46mondego> * because HashMap uses power-of-two length hash tables, that<newline46mondego> * otherwise encounter collisions for hashCodes that do not differ<newline46mondego> * in lower bits. Note: Null keys always map to hash 0, thus index 0.<newline46mondego> */<newline46mondego>static int hash(int h) {<newline46mondego>    // This function ensures that hashCodes that differ only by<newline46mondego>    // constant multiples at each bit position have a bounded<newline46mondego>    // number of collisions (approximately 8 at default load factor).<newline46mondego>    h ^= (h >>> 20) ^ (h >>> 12);<newline46mondego>    return h ^ (h >>> 7) ^ (h >>> 4);<newline46mondego>}<newline46mondego>"
"3372splitHere46","1879935splitHere46","/**<newline46mondego> * Returns a hash value for the specified object.  In addition to <newline46mondego> * the object's own hashCode, this method applies a <doubleQuotes46>supplemental<newline46mondego> * hash function,<doubleQuotes46> which defends against poor quality hash functions.<newline46mondego> * This is critical because HashMap uses power-of two length <newline46mondego> * hash tables.<p><newline46mondego> *<newline46mondego> * The shift distances in this function were chosen as the result<newline46mondego> * of an automated search over the entire four-dimensional search space.<newline46mondego> */<newline46mondego>static int hash(Object x) {<newline46mondego>    int h = x.hashCode();<newline46mondego><newline46mondego>    h += ~(h << 9);<newline46mondego>    h ^=  (h >>> 14);<newline46mondego>    h +=  (h << 4);<newline46mondego>    h ^=  (h >>> 10);<newline46mondego>    return h;<newline46mondego>}<newline46mondego>"
"3373splitHere46","1879965splitHere46",".nps"
"3374splitHere46","1879965splitHere46",".hprof"
"3375splitHere46","1879965splitHere46",".nps"
"3376splitHere46","1879965splitHere46",".hprof"
"3377splitHere46","1879965splitHere46",".hprof"
"3378splitHere46","1879965splitHere46",".hprof"
"3379splitHere46","1879965splitHere46",".nps"
"3380splitHere46","1879965splitHere46",".nps"
"3381splitHere46","1879965splitHere46",".nps"
"3382splitHere46","1880066splitHere46","Class.getResource/getResourceAsStream"
"3383splitHere46","1880170splitHere46","request.getAttribute(<doubleQuotes46>javax.servlet.error.request_uri<doubleQuotes46>);<newline46mondego>"
"3384splitHere46","1880170splitHere46","javax.servlet.error.status_code<newline46mondego>javax.servlet.error.exception_type<newline46mondego>javax.servlet.error.message<newline46mondego>javax.servlet.error.exception<newline46mondego>"
"3385splitHere46","1880186splitHere46","<<"
"3386splitHere46","1880186splitHere46",">>"
"3387splitHere46","1880186splitHere46","char"
"3388splitHere46","1880378splitHere46","public class TestBean {<newline46mondego><newline46mondego>	private transient final List<PropertyChangeListener> listeners = new ArrayList<PropertyChangeListener>();<newline46mondego><newline46mondego>	private String name;<newline46mondego><newline46mondego>	public void addPropertyChangeListener (PropertyChangeListener listener) {<newline46mondego>		listeners.add(listener);<newline46mondego>	}<newline46mondego><newline46mondego>	public void removePropertyChangeListener (PropertyChangeListener listener) {<newline46mondego>		listeners.remove(listener);<newline46mondego>	}<newline46mondego><newline46mondego>	private void firePropertyChange (String property, Object oldValue, Object newValue) {<newline46mondego><newline46mondego>		if (oldValue == newValue || oldValue != null && oldValue.equals(newValue)) {<newline46mondego>			return;<newline46mondego>		}<newline46mondego><newline46mondego>		PropertyChangeEvent evt = new PropertyChangeEvent(this, property, oldValue, newValue);<newline46mondego>		for (PropertyChangeListener listener : new ArrayList<PropertyChangeListener>(listeners)) {<newline46mondego>			listener.propertyChange(evt);<newline46mondego>		}<newline46mondego>	}<newline46mondego><newline46mondego>	public String getName () {<newline46mondego>		return name;<newline46mondego>	}<newline46mondego><newline46mondego>	public void setName (String name) {<newline46mondego><newline46mondego>		firePropertyChange(<doubleQuotes46>name<doubleQuotes46>, this.name, this.name = name);<newline46mondego>	}<newline46mondego>}<newline46mondego>"
"3389splitHere46","1880828splitHere46","long[] l = new long[Integer.MAX_VALUE];<newline46mondego>"
"3390splitHere46","1880828splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.OutOfMemoryError: Requested array size exceeds VM limit"
"3391splitHere46","1880828splitHere46","throw new OutOfMemoryError(<doubleQuotes46>Requested array size exceeds VM limit<doubleQuotes46>)"
"3392splitHere46","1880935splitHere46","ProviderManager.getInstance().addIQProvider(<doubleQuotes46>vCard<doubleQuotes46>, <doubleQuotes46>vcard-temp<doubleQuotes46>, new VCardProvider());<newline46mondego>"
"3393splitHere46","1880978splitHere46","prepareStatement(...)"
"3394splitHere46","1880978splitHere46","prepareCall(...)"
"3395splitHere46","1881062splitHere46","<info>"
"3396splitHere46","1881062splitHere46","</info>"
"3397splitHere46","1881197splitHere46","type* function()"
"3398splitHere46","1881197splitHere46","com.sun.jna.Pointer"
"3399splitHere46","1881197splitHere46","foo()"
"3400splitHere46","1881197splitHere46","extern <doubleQuotes46>C<doubleQuotes46> void bar(type* var){<newline46mondego>   var->foo();<newline46mondego>}<newline46mondego>"
"3401splitHere46","1881413splitHere46","SELECT"
"3402splitHere46","1881413splitHere46","SELECT<newline46mondego>customer.Name,<newline46mondego>customer.AccountNumber,<newline46mondego>customer.SalespersonName,<newline46mondego>ch.`2009 Sales`<newline46mondego>FROM<newline46mondego>customer<newline46mondego>Left Join (<newline46mondego>    SELECT<newline46mondego>    customerhistory.AccountNumber,<newline46mondego>    SUM ( CASE WHEN customerhistory.`Year` = 2009 <newline46mondego>               THEN customerhistory.`Sales` <newline46mondego>               ELSE 0 <newline46mondego>               END<newline46mondego>        ) AS `2009 Sales`<newline46mondego>    FROM<newline46mondego>    customerhistory<newline46mondego>    GROUP BY<newline46mondego>    customerhistory.AccountNumber<newline46mondego>) ch ON customer.AccountNumber = ch.AccountNumber<newline46mondego>"
"3403splitHere46","1881511splitHere46","<security-constraint><newline46mondego>    	<web-resource-collection><newline46mondego>    		<web-resource-name>Test Application</web-resource-name><newline46mondego>    		<url-pattern>/pages/*</url-pattern><newline46mondego>    	</web-resource-collection><newline46mondego>    	<auth-constraint><newline46mondego>             ...<newline46mondego>    	</auth-constraint><newline46mondego>    </security-constraint><newline46mondego>"
"3404splitHere46","1881616splitHere46","<f:view afterPhase=<doubleQuotes46>#{bean.afterPhase}<doubleQuotes46>><newline46mondego>"
"3405splitHere46","1881616splitHere46","afterPhaseListener"
"3406splitHere46","1881709splitHere46","import java.lang.management.ManagementFactory;<newline46mondego><newline46mondego>import javax.management.ObjectName;<newline46mondego>import javax.management.openmbean.CompositeData;<newline46mondego>import javax.management.openmbean.CompositeDataSupport;<newline46mondego><newline46mondego>public class HotSpotTest {<newline46mondego><newline46mondego>    public static void main(String [] args) throws Exception {<newline46mondego>        printHotSpotOption(<doubleQuotes46>MaxHeapFreeRatio<doubleQuotes46>);<newline46mondego>        printHotSpotOption(<doubleQuotes46>SurvivorRatio<doubleQuotes46>);<newline46mondego>        printHotSpotOptions();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void printHotSpotOption(String option) throws Exception {<newline46mondego>        ObjectName name = new ObjectName(<doubleQuotes46>com.sun.management:type=HotSpotDiagnostic<doubleQuotes46>);<newline46mondego>        String operationName = <doubleQuotes46>getVMOption<doubleQuotes46>;<newline46mondego>        Object [] params = new Object [] {option};<newline46mondego>        String [] signature = new String[] {String.class.getName()};<newline46mondego>        Object result = ManagementFactory.getPlatformMBeanServer().invoke(name, operationName, params, signature);<newline46mondego>        CompositeDataSupport data = (CompositeDataSupport) result;<newline46mondego><newline46mondego>        System.out.println(option);<newline46mondego>        System.out.println(<doubleQuotes46>- Value: <doubleQuotes46>+data.get(<doubleQuotes46>value<doubleQuotes46>));<newline46mondego>        System.out.println(<doubleQuotes46>- Origin: <doubleQuotes46>+data.get(<doubleQuotes46>origin<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    private static void printHotSpotOptions() throws Exception {<newline46mondego>        ObjectName name = new ObjectName(<doubleQuotes46>com.sun.management:type=HotSpotDiagnostic<doubleQuotes46>);<newline46mondego>        String attributeName = <doubleQuotes46>DiagnosticOptions<doubleQuotes46>;<newline46mondego>        Object result = ManagementFactory.getPlatformMBeanServer().getAttribute(name, attributeName);<newline46mondego>        CompositeData [] array = (CompositeData[]) result;<newline46mondego>        for (CompositeData d : array) {<newline46mondego>            System.out.println(d.get(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>            System.out.println(<doubleQuotes46>- Value: <doubleQuotes46>+d.get(<doubleQuotes46>value<doubleQuotes46>));<newline46mondego>            System.out.println(<doubleQuotes46>- Origin: <doubleQuotes46>+d.get(<doubleQuotes46>origin<doubleQuotes46>));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3407splitHere46","1881710splitHere46","theInfo"
"3408splitHere46","1881710splitHere46","varInfo"
"3409splitHere46","1881761splitHere46","yourThread.setIsTerminating(true); // tell the thread to stop<newline46mondego>yourThread.join(); // wait for the thread to stop<newline46mondego>"
"3410splitHere46","1881860splitHere46","<bean id=<doubleQuotes46>messageSource<doubleQuotes46> class=<doubleQuotes46>org.springframework.context.support.ResourceBundleMessageSource<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>basename<doubleQuotes46> value=<doubleQuotes46>messages<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"3411splitHere46","1881860splitHere46","error.firstname.null=Please enter your first name.<newline46mondego>error.lastname.null=Please enter your last name.<newline46mondego>"
"3412splitHere46","1881860splitHere46","<bean id=<doubleQuotes46>myController<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>messageCodesResolver<doubleQuotes46> ref=<doubleQuotes46>myMessageCodesResolver<doubleQuotes46>/><newline46mondego></bean<newline46mondego>"
"3413splitHere46","1881936splitHere46","new"
"3414splitHere46","1881936splitHere46","String"
"3415splitHere46","1881936splitHere46","String s = <doubleQuotes46>abc<doubleQuotes46>;<newline46mondego>String p = <doubleQuotes46>abc<doubleQuotes46>;<newline46mondego>"
"3416splitHere46","1881936splitHere46","String"
"3417splitHere46","1881936splitHere46","s"
"3418splitHere46","1881936splitHere46","p"
"3419splitHere46","1881936splitHere46","String s = new String(<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>"
"3420splitHere46","1881936splitHere46","String"
"3421splitHere46","1881936splitHere46","<doubleQuotes46>abc<doubleQuotes46>"
"3422splitHere46","1881936splitHere46","String"
"3423splitHere46","1881936splitHere46","String"
"3424splitHere46","1881936splitHere46","new String(<doubleQuotes46>literal<doubleQuotes46>)"
"3425splitHere46","1881936splitHere46","intern()"
"3426splitHere46","1881936splitHere46","String"
"3427splitHere46","1881936splitHere46","String"
"3428splitHere46","1881967splitHere46","InetAddress.getLocalHost()"
"3429splitHere46","1881967splitHere46","127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4  <newline46mondego>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<newline46mondego>"
"3430splitHere46","1881967splitHere46","<your-machine-ip> <your-machine-name> localhost"
"3431splitHere46","1881967splitHere46","192.168.1.73 my_foo localhost<newline46mondego>"
"3432splitHere46","1881967splitHere46","192.168.1.73 my_foo localhost<newline46mondego>127.0.0.1    localhost localhost.localdomain localhost4 localhost4.localdomain4<newline46mondego>::1          localhost localhost.localdomain localhost6 localhost6.localdomain6<newline46mondego>"
"3433splitHere46","1882160splitHere46","public void mouseExited(MouseEvent e) <newline46mondego>{<newline46mondego>    if (! getVisibleRect().contains(e.getPoint()) )<newline46mondego>    {<newline46mondego>    	setBackground(...);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3434splitHere46","1882363splitHere46","web.xml"
"3435splitHere46","1882363splitHere46","<plugin><newline46mondego>  <groupId>org.apache.maven.plugins</groupId><newline46mondego>  <artifactId>maven-war-plugin</artifactId><newline46mondego>  <version>2.1-beta-1</version><newline46mondego>  <configuration><newline46mondego>    <webXml>src/main/config/${env}/web.xml</webXml><newline46mondego>    <warName>cas-test</warName><newline46mondego>  </configuration><newline46mondego></plugin><newline46mondego>"
"3436splitHere46","1882363splitHere46","env"
"3437splitHere46","1882363splitHere46","web.xml"
"3438splitHere46","1882363splitHere46","<profiles><newline46mondego>  <profile><newline46mondego>    <id>uat</id><newline46mondego>    <properties><newline46mondego>      <env>test</env><newline46mondego>    </properties><newline46mondego>  </profile><newline46mondego>  <profile><newline46mondego>    <id>prod</id><newline46mondego>    <properties><newline46mondego>      <env>prod</env><newline46mondego>    </properties><newline46mondego>  </profile><newline46mondego></profiles><newline46mondego>"
"3439splitHere46","1882363splitHere46","web.xml"
"3440splitHere46","1882363splitHere46","<profiles><newline46mondego>  <profile><newline46mondego>    <id>env-uat</id><newline46mondego>    <activation><newline46mondego>      <property><newline46mondego>        <name>env</name><newline46mondego>        <value>uat</value><newline46mondego>      </property><newline46mondego>    </activation><newline46mondego>    <properties><newline46mondego>      <key1>uat_value_key_1</key1><newline46mondego>      <keyN>uat_value_key_n</keyN><newline46mondego>    </properties><newline46mondego>  </profile><newline46mondego>  <profile><newline46mondego>    <id>env-prod</id><newline46mondego>    <activation><newline46mondego>      <property><newline46mondego>        <name>env</name><newline46mondego>        <value>prod</value><newline46mondego>      </property><newline46mondego>    </activation>  <newline46mondego>    <properties><newline46mondego>      <key1>prod_value_key_1</key1><newline46mondego>      <keyN>prod_value_key_n</keyN><newline46mondego>    </properties><newline46mondego>  </profile><newline46mondego></profiles><newline46mondego>"
"3441splitHere46","1882363splitHere46","mvn -Denv=uat package<newline46mondego>"
"3442splitHere46","1882365splitHere46","if (length > arrayOopDesc::max_array_length(T_ARRAY)) {<newline46mondego>  THROW_OOP_0(Universe::out_of_memory_error_array_size());<newline46mondego>}<newline46mondego>"
"3443splitHere46","1882365splitHere46","max_array_length"
"3444splitHere46","1882365splitHere46","static int32_t max_array_length(BasicType type) {<newline46mondego>  assert(type >= 0 && type < T_CONFLICT, <doubleQuotes46>wrong type<doubleQuotes46>);<newline46mondego>  assert(type2aelembytes[type] != 0, <doubleQuotes46>wrong type<doubleQuotes46>);<newline46mondego>  // We use max_jint, since object_size is internally represented by an 'int'<newline46mondego>  // This gives us an upper bound of max_jint words for the size of the oop.<newline46mondego>  int32_t max_words = (max_jint - header_size(type) - 2);<newline46mondego>  int elembytes = (type == T_OBJECT) ? T_OBJECT_aelem_bytes : type2aelembytes[type];<newline46mondego>  jlong len = ((jlong)max_words * HeapWordSize) / elembytes;<newline46mondego>  return (len > max_jint) ? max_jint : (int32_t)len;<newline46mondego>}<newline46mondego>"
"3445splitHere46","1882421splitHere46","TreeModelListener.treeNodesRemoved"
"3446splitHere46","1882421splitHere46","SwingUtilities.invokeLater(<newline46mondego>  new Runnable() <newline46mondego>  {<newline46mondego>    public void run() <newline46mondego>    {<newline46mondego>      //Delete and event firing logic goes here.<newline46mondego>      ...<newline46mondego>    }<newline46mondego>  }<newline46mondego>);<newline46mondego>"
"3447splitHere46","1882587splitHere46","Object.clone()"
"3448splitHere46","1882587splitHere46","Object"
"3449splitHere46","1882587splitHere46","public class MyFoo<newline46mondego>{<newline46mondego><newline46mondego>   ...<newline46mondego><newline46mondego>   // Note covariant return here, method does not just return Object<newline46mondego>   public MyFoo clone()<newline46mondego>   {<newline46mondego>       // Implementation<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3450splitHere46","1882587splitHere46","clone()"
"3451splitHere46","1882587splitHere46","MyFoo"
"3452splitHere46","1882587splitHere46","Object"
"3453splitHere46","1882587splitHere46","clone()"
"3454splitHere46","1882750splitHere46","action"
"3455splitHere46","1882750splitHere46","action"
"3456splitHere46","1882750splitHere46","executeProcName"
"3457splitHere46","1883064splitHere46","serializedSublist.addAll(getQuestions());<newline46mondego>"
"3458splitHere46","1883064splitHere46","ArrayList serializedSublist = new ArrayList(getQuestions());<newline46mondego>"
"3459splitHere46","1883142splitHere46","Reader"
"3460splitHere46","1883142splitHere46","InputStream"
"3461splitHere46","1883142splitHere46","InputStream"
"3462splitHere46","1883142splitHere46","Reader"
"3463splitHere46","1883142splitHere46","OutputStream"
"3464splitHere46","1883142splitHere46","Writer"
"3465splitHere46","1883142splitHere46","Writer"
"3466splitHere46","1883209splitHere46","class SpinnerEditor extends DefaultCellEditor<newline46mondego>{<newline46mondego>    private JSpinner spinner;<newline46mondego><newline46mondego>    public SpinnerEditor()<newline46mondego>    {<newline46mondego>    	super( new JTextField() );<newline46mondego>    	spinner = new JSpinner(new SpinnerNumberModel(0, 0, 100, 5));<newline46mondego>    	spinner.setBorder( null );<newline46mondego>    }<newline46mondego><newline46mondego>    public Component getTableCellEditorComponent(<newline46mondego>    	JTable table, Object value, boolean isSelected, int row, int column)<newline46mondego>    {<newline46mondego>    	spinner.setValue( value );<newline46mondego>    	return spinner;<newline46mondego>    }<newline46mondego><newline46mondego>    public Object getCellEditorValue()<newline46mondego>    {<newline46mondego>    	return spinner.getValue();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3467splitHere46","1883333splitHere46","System.out.flush();<newline46mondego>System.err.flush();<newline46mondego>"
"3468splitHere46","1883827splitHere46","substring(startIndex)"
"3469splitHere46","1883827splitHere46","xmlMessage.indexOf(<doubleQuotes46><<doubleQuotes46>)"
"3470splitHere46","1884022splitHere46","echo <doubleQuotes46>What is the password<doubleQuotes46><newline46mondego>stty -echo<newline46mondego>read server_password<newline46mondego>stty echo<newline46mondego># error check<newline46mondego>export server_password<newline46mondego>"
"3471splitHere46","1884022splitHere46","password = System.getenv(<doubleQuotes46>server_password<doubleQuotes46>);<newline46mondego>"
"3472splitHere46","1884492splitHere46","public class Foo : Bar, IBaz"
"3473splitHere46","1884492splitHere46","public class Foo extends Bar implements IBaz"
"3474splitHere46","1884495splitHere46","enum First {One, Two}   <newline46mondego> enum Second extends First {Three, Four}   <newline46mondego><newline46mondego> First a = Second.Four;   // clearly illegal <newline46mondego> Second a = First.One;  // should work<newline46mondego>"
"3475splitHere46","1884594splitHere46","theReg"
"3476splitHere46","1884594splitHere46","public class Start {<newline46mondego>    public Register theReg = new Register(); //<<---- your global var<newline46mondego>    public static Start go = new Start();<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Register theReg = new Register();  // <<---- hiding the global<newline46mondego>        go.regUsers();<newline46mondego><newline46mondego>        if(theReg.logIn(<doubleQuotes46>jsmith<doubleQuotes46>,<doubleQuotes46>password<doubleQuotes46>)) <newline46mondego>          System.out.println(<doubleQuotes46>You're logged in as <doubleQuotes46> + theReg.userLoggedIn.getName());<newline46mondego>        else <newline46mondego>          System.out.println(<doubleQuotes46>dang<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3477splitHere46","1884916splitHere46","Map<String, String> map = new HashMap<String, String>() {<newline46mondego>      {<newline46mondego>        put(<doubleQuotes46>test<doubleQuotes46>, <doubleQuotes46>test123<doubleQuotes46>);<newline46mondego>        put(<doubleQuotes46>test2<doubleQuotes46>, <doubleQuotes46>test456<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    };<newline46mondego><newline46mondego>    for(Iterator<Map.Entry<String, String>> it = map.entrySet().iterator(); it.hasNext(); ) {<newline46mondego>      Map.Entry<String, String> entry = it.next();<newline46mondego>      if(entry.getKey().equals(<doubleQuotes46>test<doubleQuotes46>)) {<newline46mondego>        it.remove();<newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"3478splitHere46","1885158splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import java.util.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class ComboBoxTwo extends JFrame implements ActionListener<newline46mondego>{<newline46mondego>    private JComboBox mainComboBox;<newline46mondego>    private JComboBox subComboBox;<newline46mondego>    private Hashtable subItems = new Hashtable();<newline46mondego><newline46mondego>    public ComboBoxTwo()<newline46mondego>    {<newline46mondego>    	String[] items = { <doubleQuotes46>Select Item<doubleQuotes46>, <doubleQuotes46>Color<doubleQuotes46>, <doubleQuotes46>Shape<doubleQuotes46>, <doubleQuotes46>Fruit<doubleQuotes46> };<newline46mondego>    	mainComboBox = new JComboBox( items );<newline46mondego>    	mainComboBox.addActionListener( this );<newline46mondego><newline46mondego>    	getContentPane().add( mainComboBox, BorderLayout.WEST );<newline46mondego><newline46mondego>    	//  Create sub combo box with multiple models<newline46mondego><newline46mondego>    	subComboBox = new JComboBox();<newline46mondego>    	subComboBox.setPrototypeDisplayValue(<doubleQuotes46>XXXXXXXXXX<doubleQuotes46>); // JDK1.4<newline46mondego>    	getContentPane().add( subComboBox, BorderLayout.EAST );<newline46mondego><newline46mondego>    	String[] subItems1 = { <doubleQuotes46>Select Color<doubleQuotes46>, <doubleQuotes46>Red<doubleQuotes46>, <doubleQuotes46>Blue<doubleQuotes46>, <doubleQuotes46>Green<doubleQuotes46> };<newline46mondego>    	subItems.put(items[1], subItems1);<newline46mondego><newline46mondego>    	String[] subItems2 = { <doubleQuotes46>Select Shape<doubleQuotes46>, <doubleQuotes46>Circle<doubleQuotes46>, <doubleQuotes46>Square<doubleQuotes46>, <doubleQuotes46>Triangle<doubleQuotes46> };<newline46mondego>    	subItems.put(items[2], subItems2);<newline46mondego><newline46mondego>    	String[] subItems3 = { <doubleQuotes46>Select Fruit<doubleQuotes46>, <doubleQuotes46>Apple<doubleQuotes46>, <doubleQuotes46>Orange<doubleQuotes46>, <doubleQuotes46>Banana<doubleQuotes46> };<newline46mondego>    	subItems.put(items[3], subItems3);<newline46mondego>    }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e)<newline46mondego>    {<newline46mondego>    	String item = (String)mainComboBox.getSelectedItem();<newline46mondego>    	Object o = subItems.get( item );<newline46mondego><newline46mondego>    	if (o == null)<newline46mondego>    	{<newline46mondego>    		subComboBox.setModel( new DefaultComboBoxModel() );<newline46mondego>    	}<newline46mondego>    	else<newline46mondego>    	{<newline46mondego>    		subComboBox.setModel( new DefaultComboBoxModel( (String[])o ) );<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	JFrame frame = new ComboBoxTwo();<newline46mondego>    	frame.setDefaultCloseOperation( EXIT_ON_CLOSE );<newline46mondego>    	frame.pack();<newline46mondego>    	frame.setLocationRelativeTo( null );<newline46mondego>    	frame.setVisible( true );<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"3479splitHere46","1885341splitHere46","ContainerServlet"
"3480splitHere46","1885341splitHere46","Wrapper"
"3481splitHere46","1885341splitHere46","Context context = (Context) wrapper.getParent();<newline46mondego>Wrapper newWrapper = context.createWrapper();<newline46mondego>newWrapper.setName(name);<newline46mondego>newWrapper.setLoadOnStartup(1);<newline46mondego>newWrapper.setServletClass(servletClass);<newline46mondego>context.addChild(newWrapper);<newline46mondego>context.addServletMapping(pattern, name);<newline46mondego>"
"3482splitHere46","1885347splitHere46","Set<MyGenericType> keySet = map.keySet();<newline46mondego>"
"3483splitHere46","1885492splitHere46","Runtime.totalMemory()"
"3484splitHere46","1885625splitHere46","writeTo"
"3485splitHere46","1885625splitHere46","CharArrayWriter copy = new CharArrayWriter(x.size());<newline46mondego>x.writeTo(copy);<newline46mondego>"
"3486splitHere46","1885821splitHere46","stateHistory"
"3487splitHere46","1885821splitHere46","checkCompletion"
"3488splitHere46","1885821splitHere46","add"
"3489splitHere46","1885821splitHere46","stateHistory"
"3490splitHere46","1885821splitHere46","stateDepth"
"3491splitHere46","1885821splitHere46","agenda"
"3492splitHere46","1885821splitHere46","checkCompletion"
"3493splitHere46","1885821splitHere46","stateHistory"
"3494splitHere46","1885821splitHere46","Solution Exists at Level 28 of the tree<newline46mondego>123456780 at 28<newline46mondego>123450786 at 27<newline46mondego>120453786 at 26<newline46mondego>102453786 at 25<newline46mondego>152403786 at 24<newline46mondego>152043786 at 23<newline46mondego>152743086 at 22<newline46mondego>152743806 at 21<newline46mondego>152743860 at 20<newline46mondego>152740863 at 19<newline46mondego>150742863 at 18<newline46mondego>105742863 at 17<newline46mondego>145702863 at 16<newline46mondego>145072863 at 15<newline46mondego>045172863 at 14<newline46mondego>405172863 at 13<newline46mondego>475102863 at 12<newline46mondego>475162803 at 11<newline46mondego>475162083 at 10<newline46mondego>475062183 at 9<newline46mondego>475602183 at 8<newline46mondego>475682103 at 7<newline46mondego>475682130 at 6<newline46mondego>475680132 at 5<newline46mondego>470685132 at 4<newline46mondego>407685132 at 3<newline46mondego>487605132 at 2<newline46mondego>487065132 at 1<newline46mondego>087465132 at 0<newline46mondego>"
"3495splitHere46","1885821splitHere46","import java.util.HashMap;<newline46mondego>import java.util.LinkedList;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Queue;<newline46mondego><newline46mondego>class EightPuzzle {<newline46mondego><newline46mondego>    Queue<String> agenda = new LinkedList<String>();    // Use of Queue Implemented using LinkedList for Storing All the Nodes in BFS.<newline46mondego>    Map<String,Integer> stateDepth = new HashMap<String, Integer>(); // HashMap is used to ignore repeated nodes<newline46mondego>    Map<String,String> stateHistory = new HashMap<String,String>(); // relates each position to its predecessor<newline46mondego><newline46mondego>    public static void main(String args[]){<newline46mondego><newline46mondego>        String str=<doubleQuotes46>087465132<doubleQuotes46>;                                 // Input the Board State as a String with 0 as the Blank Space<newline46mondego><newline46mondego>        EightPuzzle e = new EightPuzzle();              // New Instance of the EightPuzzle<newline46mondego>        e.add(str, null);                                                   // Add the Initial State<newline46mondego><newline46mondego>        while(!e.agenda.isEmpty()){<newline46mondego>            String currentState = e.agenda.remove();<newline46mondego>            e.up(currentState);                                       // Move the blank space up and add new state to queue<newline46mondego>            e.down(currentState);                                     // Move the blank space down<newline46mondego>            e.left(currentState);                                     // Move left<newline46mondego>            e.right(currentState);                          // Move right and remove the current node from Queue<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Solution doesn't exist<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    //Add method to add the new string to the Map and Queue<newline46mondego>    void add(String newState, String oldState){<newline46mondego>        if(!stateDepth.containsKey(newState)){<newline46mondego>            int newValue = oldState == null ? 0 : stateDepth.get(oldState) + 1;<newline46mondego>            stateDepth.put(newState, newValue);<newline46mondego>            agenda.add(newState);<newline46mondego>            stateHistory.put(newState, oldState);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /* Each of the Methods below Takes the Current State of Board as String. Then the operation to move the blank space is done if possible.<newline46mondego>      After that the new string is added to the map and queue.If it is the Goal State then the Program Terminates.<newline46mondego>     */<newline46mondego>    void up(String currentState){<newline46mondego>        int a = currentState.indexOf(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        if(a>2){<newline46mondego>            String nextState = currentState.substring(0,a-3)+<doubleQuotes46>0<doubleQuotes46>+currentState.substring(a-2,a)+currentState.charAt(a-3)+currentState.substring(a+1);<newline46mondego>            checkCompletion(currentState, nextState);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    void down(String currentState){<newline46mondego>        int a = currentState.indexOf(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        if(a<6){<newline46mondego>            String nextState = currentState.substring(0,a)+currentState.substring(a+3,a+4)+currentState.substring(a+1,a+3)+<doubleQuotes46>0<doubleQuotes46>+currentState.substring(a+4);<newline46mondego>            checkCompletion(currentState, nextState);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    void left(String currentState){<newline46mondego>        int a = currentState.indexOf(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        if(a!=0 && a!=3 && a!=6){<newline46mondego>            String nextState = currentState.substring(0,a-1)+<doubleQuotes46>0<doubleQuotes46>+currentState.charAt(a-1)+currentState.substring(a+1);<newline46mondego>            checkCompletion(currentState, nextState);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    void right(String currentState){<newline46mondego>        int a = currentState.indexOf(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>        if(a!=2 && a!=5 && a!=8){<newline46mondego>            String nextState = currentState.substring(0,a)+currentState.charAt(a+1)+<doubleQuotes46>0<doubleQuotes46>+currentState.substring(a+2);<newline46mondego>            checkCompletion(currentState, nextState);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private void checkCompletion(String oldState, String newState) {<newline46mondego>        add(newState, oldState);<newline46mondego>        if(newState.equals(<doubleQuotes46>123456780<doubleQuotes46>)) {<newline46mondego>            System.out.println(<doubleQuotes46>Solution Exists at Level <doubleQuotes46>+stateDepth.get(newState)+<doubleQuotes46> of the tree<doubleQuotes46>);<newline46mondego>            String traceState = newState;<newline46mondego>            while (traceState != null) {<newline46mondego>                System.out.println(traceState + <doubleQuotes46> at <doubleQuotes46> + stateDepth.get(traceState));<newline46mondego>                traceState = stateHistory.get(traceState);<newline46mondego>            }<newline46mondego>            System.exit(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3496splitHere46","1885928splitHere46","List<Integer> list = new ArrayList<Integer>();<newline46mondego><newline46mondego>// populate list<newline46mondego><newline46mondego>for (int value : list) {<newline46mondego>    System.out.println(<doubleQuotes46>value is <doubleQuotes46> + value);<newline46mondego>}<newline46mondego>"
"3497splitHere46","1886209splitHere46","Matcher m = Pattern.compile(<doubleQuotes46>(?:^.{0,125}\\b)|(?:^.{0,125}$)<doubleQuotes46>).matcher(mailBody);<newline46mondego>"
"3498splitHere46","1886209splitHere46","if(result == null)  <newline46mondego>   result = new StringBuffer(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>mailBody = mailBody.trim();<newline46mondego><newline46mondego>while(mailBody.length() > 125) {<newline46mondego><newline46mondego>    // Try not to break immediately before closing punctuation<newline46mondego>    Matcher m = Pattern.compile(<doubleQuotes46>^.{1,125}\\b(?![-\\.?;&)])<doubleQuotes46>).matcher(mailBody);<newline46mondego>    String oneLineString;<newline46mondego><newline46mondego>    // Found a safe place to break string<newline46mondego>    if (m.find()) {<newline46mondego><newline46mondego>        oneLineString = m.group(0);<newline46mondego><newline46mondego>    // Forced to break string in an ugly fashion<newline46mondego>    } else {<newline46mondego><newline46mondego>        // Try to break at any word boundary at least<newline46mondego>        m = Pattern.compile(<doubleQuotes46>^.{1,125}\\b<doubleQuotes46>).matcher(mailBody);<newline46mondego><newline46mondego>        if (m.find()) {<newline46mondego><newline46mondego>            oneLineString = m.group(0);<newline46mondego><newline46mondego>        // Last ditch scenario, just break at 125 characters<newline46mondego>        } else {<newline46mondego><newline46mondego>            oneLineString = mailBody.substring(0,124);<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    result.append(oneLineString + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    mailBody = mailBody.substring(oneLineString.length(),<newline46mondego>                                  mailBody.length()).trim();  <newline46mondego>}<newline46mondego><newline46mondego>result.append(mailBody);<newline46mondego>"
"3499splitHere46","1886446splitHere46","A.trace()"
"3500splitHere46","1886446splitHere46","main"
"3501splitHere46","1886446splitHere46","trace()"
"3502splitHere46","1886446splitHere46","Matrix"
"3503splitHere46","1886446splitHere46","trace()"
"3504splitHere46","1886446splitHere46","Matrix"
"3505splitHere46","1886494splitHere46","I"
"3506splitHere46","1886494splitHere46","ClientClass"
"3507splitHere46","1886494splitHere46","C"
"3508splitHere46","1886494splitHere46","I"
"3509splitHere46","1886543splitHere46","LongClassName"
"3510splitHere46","1886543splitHere46","DefaultTableModel"
"3511splitHere46","1886543splitHere46","Code1"
"3512splitHere46","1886543splitHere46","FibonacciCalc"
"3513splitHere46","1886543splitHere46","Fibonacci"
"3514splitHere46","1886543splitHere46","Abstract"
"3515splitHere46","1886543splitHere46","Impl"
"3516splitHere46","1886543splitHere46","org.package.gui<newline46mondego>org.package.core<newline46mondego>org.package.extensions<newline46mondego>"
"3517splitHere46","1886635splitHere46","public enum PersistenceHandlerFactory<newline46mondego>{<newline46mondego>    POSTAL_ADDRESS<newline46mondego>    {<newline46mondego>        @Override Object newField()<newline46mondego>        {<newline46mondego>            return new PostalAddress();<newline46mondego>        }<newline46mondego>    },<newline46mondego>    ...;<newline46mondego><newline46mondego>    public abstract Object newField();<newline46mondego>}<newline46mondego>"
"3518splitHere46","1886635splitHere46","Class<T>"
"3519splitHere46","1886635splitHere46","new HtmlForm<PersonInfo>(PersistenceHandler.POSTAL_ADDRESS)<newline46mondego>"
"3520splitHere46","1886652splitHere46","public Object call(Object bean,<newline46mondego>        String methodName,<newline46mondego>        Object[] args,<newline46mondego>        Class[] parameterTypes,<newline46mondego>        UUID sessionId) throws Throwable {<newline46mondego><newline46mondego>    //find the session<newline46mondego>    SessionContext sessionContext = SessionRegistry.getSession(sessionId);<newline46mondego>    //set it as current<newline46mondego>    SessionRegistry.setLocalSession(sessionContext);<newline46mondego>    .....<newline46mondego>}<newline46mondego>"
"3521splitHere46","1886652splitHere46","sessionId"
"3522splitHere46","1886652splitHere46","getBean(MyConcreteEJB.class).someMethod()"
"3523splitHere46","1886652splitHere46","SessionRegistry"
"3524splitHere46","1886652splitHere46","private static ThreadLocal<SessionContext> localSessionContext = new <newline46mondego>   ThreadLocal<SessionContext>();<newline46mondego>"
"3525splitHere46","1886652splitHere46","SessionContext"
"3526splitHere46","1886652splitHere46","set(key, value)"
"3527splitHere46","1886652splitHere46","get(key)"
"3528splitHere46","1886652splitHere46","@Stateful"
"3529splitHere46","1886652splitHere46","SessionContext"
"3530splitHere46","1886680splitHere46","Class<T>"
"3531splitHere46","1886680splitHere46","public MyClass<T><newline46mondego>{<newline46mondego>    private final Class<T> clazz;<newline46mondego><newline46mondego>    public MyClass(Class<T> clazz)<newline46mondego>    {<newline46mondego>        this.clazz = clazz;<newline46mondego>    }<newline46mondego><newline46mondego>    public void myMethod()<newline46mondego>    {<newline46mondego>        if (clazz == String.class)<newline46mondego>        {<newline46mondego>           ...<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3532splitHere46","1886680splitHere46","int"
"3533splitHere46","1886871splitHere46","Order.setOrderLines(collection orderLines)"
"3534splitHere46","1886871splitHere46","orderLines"
"3535splitHere46","1886871splitHere46","Order"
"3536splitHere46","1886871splitHere46","Order"
"3537splitHere46","1887182splitHere46","ByteBuffer"
"3538splitHere46","1887182splitHere46","File file = new File(<doubleQuotes46>swiss_roll_data.matlab5<doubleQuotes46>);<newline46mondego>    FileChannel channel = new FileInputStream(file).getChannel();<newline46mondego>    ByteBuffer scan = channel.map(MapMode.READ_ONLY,0,channel.size());<newline46mondego>    scan.order(ByteOrder.BIG_ENDIAN);<newline46mondego>"
"3539splitHere46","1887606splitHere46","'DataFormatted.csv'"
"3540splitHere46","1887606splitHere46","'C:/DataFormatted.csv'"
"3541splitHere46","1887645splitHere46","s"
"3542splitHere46","1887645splitHere46","s2"
"3543splitHere46","1887645splitHere46","s"
"3544splitHere46","1887645splitHere46","s1"
"3545splitHere46","1887645splitHere46","s2"
"3546splitHere46","1887645splitHere46","s3"
"3547splitHere46","1887645splitHere46","s"
"3548splitHere46","1887645splitHere46","s2"
"3549splitHere46","1887645splitHere46","String x = new String(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>String y = new String(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>"
"3550splitHere46","1887645splitHere46","x == y"
"3551splitHere46","1887645splitHere46","String x = new String(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>String y = new String(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>String z = <doubleQuotes46>foo<doubleQuotes46>;<newline46mondego><newline46mondego>// Expressions and their values:<newline46mondego>x == y: false<newline46mondego>x == z: false<newline46mondego>x.intern() == y.intern(): true<newline46mondego>x.intern() == z: true<newline46mondego>"
"3552splitHere46","1887645splitHere46","new String(String)"
"3553splitHere46","1887645splitHere46","String"
"3554splitHere46","1887645splitHere46","char[]"
"3555splitHere46","1887645splitHere46","char[]"
"3556splitHere46","1887645splitHere46","new String(String)"
"3557splitHere46","1887645splitHere46","char[]"
"3558splitHere46","1887645splitHere46","BufferedReader.readLine()"
"3559splitHere46","1887645splitHere46","new String(reader.readLine())"
"3560splitHere46","1887854splitHere46","Multiplier.py"
"3561splitHere46","1887854splitHere46","class Multiplier:<newline46mondego><newline46mondego>  def multiply(self, x, y):<newline46mondego>    return x * y<newline46mondego><newline46mondego>x = Multiplier().multiply(5, 7)<newline46mondego>"
"3562splitHere46","1887854splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    ScriptEngine engine = new ScriptEngineManager().getEngineByName(<doubleQuotes46>python<doubleQuotes46>);<newline46mondego><newline46mondego>    FileReader f = new FileReader(<doubleQuotes46>Multiplier.py<doubleQuotes46>);<newline46mondego>    engine.eval(f);<newline46mondego>    Object x = engine.get(<doubleQuotes46>x<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>x: <doubleQuotes46> + x);<newline46mondego>}<newline46mondego>"
"3563splitHere46","1887854splitHere46","x: 35<newline46mondego>"
"3564splitHere46","1887864splitHere46","double finalPrice = 2.46;<newline46mondego>DecimalFormat fmt = new DecimalFormat(<doubleQuotes46>0.0'0'<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>£<doubleQuotes46> + fmt.format(finalPrice) + <doubleQuotes46> Approx<doubleQuotes46>);<newline46mondego>"
"3565splitHere46","1887946splitHere46","@Entity<newline46mondego>public class WBList {<newline46mondego><newline46mondego>    private WBListPK id;<newline46mondego>    private String wb;<newline46mondego>    private Integer rid;<newline46mondego>    private Integer sid;<newline46mondego><newline46mondego>    @Id<newline46mondego>    public WBListPK getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego>    public void setId(WBListPK id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego>    @Column(name=<doubleQuotes46>wb<doubleQuotes46>)<newline46mondego>    public String getWb() {<newline46mondego>        return wb;<newline46mondego>    }<newline46mondego>    public void setWb(String wb) {<newline46mondego>        this.wb = wb;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3566splitHere46","1887946splitHere46","@Embeddable<newline46mondego>public class WBListPK implements Serializable {<newline46mondego><newline46mondego>    private int rid;<newline46mondego>    private int sid;<newline46mondego><newline46mondego>    public WBListPK() {<newline46mondego>    }<newline46mondego><newline46mondego>    public WBListPK(Integer rid, Integer sid) {<newline46mondego>        this.rid = rid;<newline46mondego>        this.sid = sid;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getRid() {<newline46mondego>        return rid;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRid(int rid) {<newline46mondego>        this.rid = rid;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getSid() {<newline46mondego>        return sid;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSid(int sid) {<newline46mondego>        this.sid = sid;<newline46mondego>    }<newline46mondego>"
"3567splitHere46","1887946splitHere46","WBList wbList = new WBList();<newline46mondego>wbList.setWb(<doubleQuotes46>d<doubleQuotes46>);<newline46mondego>WBListPK wbListPK = new WBListPK(30,40);<newline46mondego>wbList.setId(wbListPK);<newline46mondego>this.wbListSecurityProcessor.save(wbList);<newline46mondego>"
"3568splitHere46","1888284splitHere46","InputStreamReader"
"3569splitHere46","1888284splitHere46","Reader reader = new InputStreamReader(new FileInputStream(<doubleQuotes46>c:/foo.txt<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"3570splitHere46","1888284splitHere46","CP-1252"
"3571splitHere46","1888284splitHere46","InputStreamReader"
"3572splitHere46","1888284splitHere46","public class UnicodeReader extends Reader {<newline46mondego>    private static final int BOM_SIZE = 4;<newline46mondego>    private final InputStreamReader reader;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Construct UnicodeReader<newline46mondego>     * @param in Input stream.<newline46mondego>     * @param defaultEncoding Default encoding to be used if BOM is not found,<newline46mondego>     * or <code>null</code> to use system default encoding.<newline46mondego>     * @throws IOException If an I/O error occurs.<newline46mondego>     */<newline46mondego>    public UnicodeReader(InputStream in, String defaultEncoding) throws IOException {<newline46mondego>        byte bom[] = new byte[BOM_SIZE];<newline46mondego>        String encoding;<newline46mondego>        int unread;<newline46mondego>        PushbackInputStream pushbackStream = new PushbackInputStream(in, BOM_SIZE);<newline46mondego>        int n = pushbackStream.read(bom, 0, bom.length);<newline46mondego><newline46mondego>        // Read ahead four bytes and check for BOM marks.<newline46mondego>        if ((bom[0] == (byte) 0xEF) && (bom[1] == (byte) 0xBB) && (bom[2] == (byte) 0xBF)) {<newline46mondego>            encoding = <doubleQuotes46>UTF-8<doubleQuotes46>;<newline46mondego>            unread = n - 3;<newline46mondego>        } else if ((bom[0] == (byte) 0xFE) && (bom[1] == (byte) 0xFF)) {<newline46mondego>            encoding = <doubleQuotes46>UTF-16BE<doubleQuotes46>;<newline46mondego>            unread = n - 2;<newline46mondego>        } else if ((bom[0] == (byte) 0xFF) && (bom[1] == (byte) 0xFE)) {<newline46mondego>            encoding = <doubleQuotes46>UTF-16LE<doubleQuotes46>;<newline46mondego>            unread = n - 2;<newline46mondego>        } else if ((bom[0] == (byte) 0x00) && (bom[1] == (byte) 0x00) && (bom[2] == (byte) 0xFE) && (bom[3] == (byte) 0xFF)) {<newline46mondego>            encoding = <doubleQuotes46>UTF-32BE<doubleQuotes46>;<newline46mondego>            unread = n - 4;<newline46mondego>        } else if ((bom[0] == (byte) 0xFF) && (bom[1] == (byte) 0xFE) && (bom[2] == (byte) 0x00) && (bom[3] == (byte) 0x00)) {<newline46mondego>            encoding = <doubleQuotes46>UTF-32LE<doubleQuotes46>;<newline46mondego>            unread = n - 4;<newline46mondego>        } else {<newline46mondego>            encoding = defaultEncoding;<newline46mondego>            unread = n;<newline46mondego>        }<newline46mondego><newline46mondego>        // Unread bytes if necessary and skip BOM marks.<newline46mondego>        if (unread > 0) {<newline46mondego>            pushbackStream.unread(bom, (n - unread), unread);<newline46mondego>        } else if (unread < -1) {<newline46mondego>            pushbackStream.unread(bom, 0, 0);<newline46mondego>        }<newline46mondego><newline46mondego>        // Use given encoding.<newline46mondego>        if (encoding == null) {<newline46mondego>            reader = new InputStreamReader(pushbackStream);<newline46mondego>        } else {<newline46mondego>            reader = new InputStreamReader(pushbackStream, encoding);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public String getEncoding() {<newline46mondego>        return reader.getEncoding();<newline46mondego>    }<newline46mondego><newline46mondego>    public int read(char[] cbuf, int off, int len) throws IOException {<newline46mondego>        return reader.read(cbuf, off, len);<newline46mondego>    }<newline46mondego><newline46mondego>    public void close() throws IOException {<newline46mondego>        reader.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3573splitHere46","1888284splitHere46","'a'== 97<newline46mondego>"
"3574splitHere46","1888284splitHere46","ASCII"
"3575splitHere46","1888284splitHere46","0x00"
"3576splitHere46","1888284splitHere46","0x7F"
"3577splitHere46","1888284splitHere46","ASCII"
"3578splitHere46","1888284splitHere46","ISO-8859"
"3579splitHere46","1888284splitHere46","ASCII"
"3580splitHere46","1888284splitHere46","Unicode"
"3581splitHere46","1888284splitHere46","ISO-8859-1"
"3582splitHere46","1888358splitHere46","ps -eLf"
"3583splitHere46","1888358splitHere46","/lib/libc.so.6"
"3584splitHere46","1888358splitHere46","/lib64/libc.so.6"
"3585splitHere46","1888358splitHere46","/lib/x86_64-linux-gnu/libc.so.6"
"3586splitHere46","1888358splitHere46","pthread_kill()"
"3587splitHere46","1888624splitHere46","OutOfMemoryError"
"3588splitHere46","1888624splitHere46","Error"
"3589splitHere46","1888624splitHere46","Exception"
"3590splitHere46","1888624splitHere46","OutOfMemoryError"
"3591splitHere46","1888624splitHere46","Exception"
"3592splitHere46","1888624splitHere46","catch (Exception e)"
"3593splitHere46","1888624splitHere46","OutOfMemoryError"
"3594splitHere46","1888624splitHere46","Throwable"
"3595splitHere46","1888805splitHere46","solve2"
"3596splitHere46","1888805splitHere46","ExecutorCompletionService"
"3597splitHere46","1888805splitHere46","ExecutorService"
"3598splitHere46","1888805splitHere46","LinkedBlockingQueue"
"3599splitHere46","1888805splitHere46","ecs.take().get();"
"3600splitHere46","1888805splitHere46","ExecutorCompletionService"
"3601splitHere46","1888805splitHere46","ExecutorCompletionService"
"3602splitHere46","1888805splitHere46","Future<String>"
"3603splitHere46","1888805splitHere46","ecs.take();"
"3604splitHere46","1888805splitHere46","solve2"
"3605splitHere46","1888805splitHere46","solve1"
"3606splitHere46","1888841splitHere46","NullPointerException"
"3607splitHere46","1888841splitHere46","IllegalArgumentException"
"3608splitHere46","1888841splitHere46","throws"
"3609splitHere46","1889182splitHere46","action=<doubleQuotes46>#{user.edit}<doubleQuotes46>"
"3610splitHere46","1889182splitHere46","action=<doubleQuotes46>#{userService.edit}<doubleQuotes46>"
"3611splitHere46","1889182splitHere46","edit"
"3612splitHere46","1889182splitHere46","User"
"3613splitHere46","1889182splitHere46","<f:setPropertyActionListener>"
"3614splitHere46","1889182splitHere46","UIData#getRowData()"
"3615splitHere46","1889182splitHere46","UIData"
"3616splitHere46","1889195splitHere46","<target name=<doubleQuotes46>some.war<doubleQuotes46>><newline46mondego>    <description><newline46mondego>           This war file provides ...<newline46mondego>    </description><newline46mondego>  </target><newline46mondego>"
"3617splitHere46","1889480splitHere46","Location"
"3618splitHere46","1889480splitHere46","WLProxySSL"
"3619splitHere46","1889480splitHere46","ON"
"3620splitHere46","1889480splitHere46","WLProxySSL"
"3621splitHere46","1889480splitHere46","ON"
"3622splitHere46","1889584splitHere46","javaType"
"3623splitHere46","1889584splitHere46","javaType"
"3624splitHere46","1889974splitHere46","svn export"
"3625splitHere46","1890147splitHere46","smaps"
"3626splitHere46","1890300splitHere46","ObjectOutputStream"
"3627splitHere46","1890300splitHere46","ObjectInputStream"
"3628splitHere46","1890300splitHere46","BigInteger"
"3629splitHere46","1890300splitHere46","toByteArray"
"3630splitHere46","1890300splitHere46","byte[]"
"3631splitHere46","1890300splitHere46","byte[]"
"3632splitHere46","1890300splitHere46","DataOutputStream"
"3633splitHere46","1890300splitHere46","writeInt"
"3634splitHere46","1890451splitHere46","Hello <b><%= request.getParameter(<doubleQuotes46>name<doubleQuotes46>) %></b>!<newline46mondego>"
"3635splitHere46","1890451splitHere46","http://hostname.com/mywebapp/mypage.jsp?name=John+Smith<newline46mondego>"
"3636splitHere46","1890451splitHere46","Hello <b>John Smith</b>!<newline46mondego>"
"3637splitHere46","1890451splitHere46","Hello <b>null</b>!<newline46mondego>"
"3638splitHere46","1890451splitHere46","<%<newline46mondego>    if (request.getParameter(<doubleQuotes46>name<doubleQuotes46>) == null) {<newline46mondego>        out.println(<doubleQuotes46>Please enter your name.<doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        out.println(<doubleQuotes46>Hello <b><doubleQuotes46>+request. getParameter(<doubleQuotes46>name<doubleQuotes46>)+<doubleQuotes46></b>!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>%><newline46mondego>"
"3639splitHere46","1890728splitHere46","select c<newline46mondego>  from Entity e join e.components c<newline46mondego> where index(c) = :index<newline46mondego>"
"3640splitHere46","1890740splitHere46","// MIME type for Excel<newline46mondego>res.setContentType( <doubleQuotes46>application/vnd.ms-excel<doubleQuotes46> ); <newline46mondego>"
"3641splitHere46","1890740splitHere46","text/csv"
"3642splitHere46","1890740splitHere46","res.setHeader(<doubleQuotes46>Content-disposition<doubleQuotes46>,<newline46mondego>                  <doubleQuotes46>attachment; filename=Example.xls<doubleQuotes46> );<newline46mondego>"
"3643splitHere46","1890740splitHere46","content-disposition"
"3644splitHere46","1890754splitHere46","work = this.totalWork;<newline46mondego>"
"3645splitHere46","1890754splitHere46","this.totalWork = work;<newline46mondego>"
"3646splitHere46","1890754splitHere46","work"
"3647splitHere46","1890754splitHere46","this.totalWork"
"3648splitHere46","1890755splitHere46","public static void main(final String[] args) throws Exception<newline46mondego>{<newline46mondego>    final MessageDigest md5 = MessageDigest.getInstance(<doubleQuotes46>MD5<doubleQuotes46>);<newline46mondego>    final byte[] digest = md5.digest(<doubleQuotes46>Grommit<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>    long result = 0;<newline46mondego>    for (int i = 0; i < 8; i++)<newline46mondego>    {<newline46mondego>        System.out.println(Long.toHexString(0xFFL & digest[i]));<newline46mondego>        result |= (0xFFL & digest[i]) << (i * 8);<newline46mondego>    }<newline46mondego>    System.out.println(Long.toHexString(result));<newline46mondego>}<newline46mondego>"
"3649splitHere46","1890846splitHere46","StringBuilder builder;<newline46mondego><newline46mondego>public void startElement(String uri, String localName, String qName, Attributes atts) {<newline46mondego>   builder = new StringBuilder();<newline46mondego>}<newline46mondego><newline46mondego>public void characters(char[] ch, int start, int length) {<newline46mondego>   builder.append(ch,start,length);<newline46mondego>}<newline46mondego><newline46mondego>public void endElement(String uri, String localName, String qName) {<newline46mondego>  String theFullText = builder.toString();<newline46mondego>}<newline46mondego>"
"3650splitHere46","1891487splitHere46","package module.a;<newline46mondego><newline46mondego>import org.osgi.framework.*;<newline46mondego><newline46mondego>public class Activator<newline46mondego>    implements BundleActivator, ServiceListener {<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void start(BundleContext bc)<newline46mondego>      throws Exception {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>*** started<doubleQuotes46>);<newline46mondego>    bc.addServiceListener(this);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void stop(BundleContext bc)<newline46mondego>      throws Exception {<newline46mondego><newline46mondego>    bc.removeServiceListener(this);<newline46mondego>    System.out.println(<doubleQuotes46>*** stopped<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void serviceChanged(ServiceEvent se) {<newline46mondego>    String s;<newline46mondego><newline46mondego>    switch (se.getType()) {<newline46mondego>      case ServiceEvent.MODIFIED:<newline46mondego>        s = <doubleQuotes46>modified<doubleQuotes46>;<newline46mondego>        break;<newline46mondego>      case ServiceEvent.REGISTERED:<newline46mondego>        s = <doubleQuotes46>registered<doubleQuotes46>;<newline46mondego>        break;<newline46mondego>      case ServiceEvent.UNREGISTERING:<newline46mondego>        s = <doubleQuotes46>unregistered<doubleQuotes46>;<newline46mondego>        break;<newline46mondego>      default:<newline46mondego>        s = <doubleQuotes46>unknown<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>= = = service changed: <doubleQuotes46> + s);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3651splitHere46","1891487splitHere46","Manifest-Version: 1.0<newline46mondego>X-COMMENT: Main-Class will be added automatically by build<newline46mondego>Bundle-Name: Module A<newline46mondego>Bundle-Description: Module A<newline46mondego>Bundle-Vendor: me<newline46mondego>Bundle-Version: 1.0.0<newline46mondego>Bundle-Activator: module.a.Activator<newline46mondego>Import-Package: org.osgi.framework<newline46mondego>"
"3652splitHere46","1891487splitHere46","package usage;<newline46mondego><newline46mondego>import java.util.*;<newline46mondego>import org.apache.felix.framework.*;<newline46mondego>import org.apache.felix.framework.util.*;<newline46mondego>import org.osgi.framework.*;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>  static class HostActivator<newline46mondego>      implements BundleActivator {<newline46mondego><newline46mondego>    private BundleContext context = null;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void start(BundleContext bc) {<newline46mondego>      context = bc;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void stop(BundleContext bc) {<newline46mondego>      context = null;<newline46mondego>    }<newline46mondego><newline46mondego>    public BundleContext getContext() {<newline46mondego>      return context;<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args)<newline46mondego>      throws Exception {<newline46mondego><newline46mondego>    Map<String, Object> map = new HashMap<String, Object>();<newline46mondego><newline46mondego>    map.put(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA,<newline46mondego>        <doubleQuotes46>some.module.i.dont.know; version=1.0.0<doubleQuotes46>);<newline46mondego><newline46mondego>    HostActivator activator = new HostActivator();<newline46mondego><newline46mondego>    List<Object> list = new LinkedList<Object>();<newline46mondego>    list.add(activator);<newline46mondego>    map.put(FelixConstants.SYSTEMBUNDLE_ACTIVATORS_PROP, list);<newline46mondego><newline46mondego>    Felix f = new Felix(map);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>starting OSGI...<doubleQuotes46>);<newline46mondego>    f.start();<newline46mondego><newline46mondego>    Bundle b = f.getBundleContext().installBundle(<newline46mondego>        <doubleQuotes46>file:../OsgiModuleA/dist/OsgiModuleA.jar<doubleQuotes46>); // dirty path ;)<newline46mondego>    String bName = b.getLocation();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>starting bundle <doubleQuotes46> + bName);<newline46mondego>    b.start();<newline46mondego><newline46mondego>    Set<String> inUse = new HashSet<String>();<newline46mondego>    for (ServiceReference sr : f.getServicesInUse()) {<newline46mondego>      inUse.add(sr.toString());<newline46mondego>    }<newline46mondego>    for (ServiceReference sr : f.getRegisteredServices()) {<newline46mondego>      String flag = (inUse.contains(sr.toString()) ? <doubleQuotes46>[in use]<doubleQuotes46> : <doubleQuotes46>[      ]<doubleQuotes46>);<newline46mondego>      System.out.println(<doubleQuotes46>+ registered service: <doubleQuotes46> + flag + <doubleQuotes46> <doubleQuotes46> + sr.toString());<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>stopping bundle <doubleQuotes46> + bName);<newline46mondego>    b.stop();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>uninstalling bundle <doubleQuotes46> + bName);<newline46mondego>    b.uninstall();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>stopping...<doubleQuotes46>);<newline46mondego>    f.stop();<newline46mondego>    f.waitForStop(1000);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3653splitHere46","1891487splitHere46","starting OSGI...<newline46mondego>starting bundle file:../OsgiModuleA/dist/OsgiModuleA.jar<newline46mondego>*** started<newline46mondego>+ registered service: [in use] [org.osgi.service.startlevel.StartLevel]<newline46mondego>+ registered service: [      ] [org.osgi.service.packageadmin.PackageAdmin]<newline46mondego>stopping bundle file:../OsgiModuleA/dist/OsgiModuleA.jar<newline46mondego>*** stopped<newline46mondego>uninstalling bundle file:../OsgiModuleA/dist/OsgiModuleA.jar<newline46mondego>stopping...<newline46mondego>"
"3654splitHere46","1891505splitHere46","-Dfile.encoding"
"3655splitHere46","1891505splitHere46","window.alert"
"3656splitHere46","1891505splitHere46","div"
"3657splitHere46","1891505splitHere46","var hack = window.alert;<newline46mondego>window.alert = function( text ) {<newline46mondego>    hack( text + ' was converted' );<newline46mondego>};<newline46mondego>alert('hello');<newline46mondego>"
"3658splitHere46","1891505splitHere46","154   // only parse HTML responses<newline46mondego>  155   if (extendedResponse.getContentType() != null && isValidContentType(extendedResponse.getContentType()))<newline46mondego>  156   {<newline46mondego>        ...<newline46mondego>  172        // writes the response<newline46mondego>  173        addResource.writeResponse(extendedRequest, servletResponse);<newline46mondego>  174    }<newline46mondego>  175   else<newline46mondego>  176   {<newline46mondego>  178        byte[] responseArray = extendedResponse.getBytes();<newline46mondego>  180        if(responseArray.length > 0)<newline46mondego>  181       {<newline46mondego>  182       // When not filtering due to not valid content-type, deliver the byte-array instead of a charset-converted string.<newline46mondego>  183       // Otherwise a binary stream gets corrupted.<newline46mondego>  184       servletResponse.getOutputStream().write(responseArray);<newline46mondego>  185     }<newline46mondego>"
"3659splitHere46","1891505splitHere46","file.encoding"
"3660splitHere46","1891505splitHere46","&#xx;"
"3661splitHere46","1891505splitHere46","cflow"
"3662splitHere46","1891505splitHere46","call"
"3663splitHere46","1891505splitHere46","addResource.writeResponse"
"3664splitHere46","1891505splitHere46","public aspect SkipEncoding {  <newline46mondego>    pointcut encodingInExtFilter() : <newline46mondego>    	cflow( * org.apache.myfaces.webapp.filter. ExtensionsFilter.doFilter(..) ) && <newline46mondego>    	call ( String UnicodeEncoder.encode( String, bool, bool ));   <newline46mondego>    around( String s, bool b1, bool b2 ) : encodingInExtFilter<newline46mondego>    {<newline46mondego>    	return s; // skip encoding<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3665splitHere46","1891519splitHere46","@Override<newline46mondego>public void writeToParcel(Parcel dest, int flags) {<newline46mondego>    Parcelable[] a;<newline46mondego>    /* <newline46mondego>        some stuff to populate <doubleQuotes46>a<doubleQuotes46> with Arrival <newline46mondego>        objects (which implements Parcelable) <newline46mondego>    */<newline46mondego>    dest.writeParcelableArray(a, 0);<newline46mondego>}<newline46mondego>"
"3666splitHere46","1891602splitHere46","Long.TYPE"
"3667splitHere46","1891602splitHere46","Byte.TYPE"
"3668splitHere46","1891602splitHere46","Character.TYPE"
"3669splitHere46","1891603splitHere46","class A {<newline46mondego>   int x;<newline46mondego>public:<newline46mondego>   A() : X(0) {}<newline46mondego>   virtual void f() { x=x+1; }<newline46mondego>   virtual int getX() { return x; }<newline46mondego>};<newline46mondego><newline46mondego>int main() {<newline46mondego>   A *a = (A *)malloc(sizeof(A));<newline46mondego>   cout << a->getX();<newline46mondego>   free(a);<newline46mondego>}<newline46mondego>"
"3670splitHere46","1891626splitHere46","<newline46mondego>int max = Math.Max(ar1.Count, ar2.Count);<newline46mondego>ArrayList ar3 = new ArrayList();<newline46mondego><newline46mondego>for (int i=0; i < max; i++)<newline46mondego>{<newline46mondego>    if (i < ar1.Count)<newline46mondego>    {<newline46mondego>       ar3.Add(ar1[i]);<newline46mondego>    }<newline46mondego>    if (i < ar2.Count)<newline46mondego>    {<newline46mondego>       ar3.Add(ar2[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3671splitHere46","1891641splitHere46","public class Album<newline46mondego>{<newline46mondego>    private String name;<newline46mondego>    private String artist;<newline46mondego><newline46mondego>    public Album(String name, String artist)<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>        this.artist = artist;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName()<newline46mondego>    {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name)<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getArtist()<newline46mondego>    {<newline46mondego>        return artist;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setArtist(String artist)<newline46mondego>    {<newline46mondego>        this.artist = artist;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean equals(Object o)<newline46mondego>    {<newline46mondego>        if (o instanceof Album)<newline46mondego>        {<newline46mondego>            Album that = (Album)o;<newline46mondego>            return album.equals(that.album) && artist.equals(that.artist);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public int hashCode() {<newline46mondego>        final int prime = 31;<newline46mondego>        int result = 1;<newline46mondego>        result = prime * result + ((album == null) ? 0 : album.hashCode());<newline46mondego>        result = prime * result + ((artist == null) ? 0 : artist.hashCode());<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3672splitHere46","1892100splitHere46","META-INF"
"3673splitHere46","1892100splitHere46","WEB-INF/classes/META-INF/"
"3674splitHere46","1892100splitHere46","WEB-INF/classes/"
"3675splitHere46","1892606splitHere46","Object"
"3676splitHere46","1892606splitHere46","isArray()"
"3677splitHere46","1892606splitHere46","getComponentType()"
"3678splitHere46","1892606splitHere46","isPrimitive()"
"3679splitHere46","1892704splitHere46","rid"
"3680splitHere46","1892704splitHere46","sid"
"3681splitHere46","1892704splitHere46","WbListPK"
"3682splitHere46","1892704splitHere46","if(wbListPK.getRid()!=0){<newline46mondego>  criteria.add(Expression.eq(<doubleQuotes46>id.rid<doubleQuotes46>, wbListPK.getRid()));<newline46mondego>}<newline46mondego>if(wbListPK.getSid()!=0){<newline46mondego>  criteria.add(Expression.eq(<doubleQuotes46>id.sid<doubleQuotes46>, wbListPK.getSid()));<newline46mondego>}<newline46mondego>"
"3683splitHere46","1892704splitHere46","id."
"3684splitHere46","1892778splitHere46","WordUtils.capitalize(str)"
"3685splitHere46","1892778splitHere46","capitalizeFully(..)"
"3686splitHere46","1893218splitHere46","import static java.lang.System.out;<newline46mondego><newline46mondego>public class Zeug {<newline46mondego>    static String[] opts = new String[] { <doubleQuotes46>java.version<doubleQuotes46>, <doubleQuotes46>java.vendor<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.vendor.url<doubleQuotes46>, <doubleQuotes46>java.home<doubleQuotes46>, <doubleQuotes46>java.vm.specification.version<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.vm.specification.vendor<doubleQuotes46>, <doubleQuotes46>java.vm.specification.name<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.vm.version<doubleQuotes46>, <doubleQuotes46>java.vm.vendor<doubleQuotes46>, <doubleQuotes46>java.vm.name<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.specification.version<doubleQuotes46>, <doubleQuotes46>java.specification.vendor<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.specification.name<doubleQuotes46>, <doubleQuotes46>java.class.version<doubleQuotes46>, <doubleQuotes46>java.class.path<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.library.path<doubleQuotes46>, <doubleQuotes46>java.io.tmpdir<doubleQuotes46>, <doubleQuotes46>java.compiler<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>java.ext.dirs<doubleQuotes46>, <doubleQuotes46>os.name<doubleQuotes46>, <doubleQuotes46>os.arch<doubleQuotes46>, <doubleQuotes46>os.version<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>file.separator<doubleQuotes46>, <doubleQuotes46>path.separator<doubleQuotes46>, <doubleQuotes46>line.separator<doubleQuotes46>, <doubleQuotes46>user.name<doubleQuotes46>,<newline46mondego>    		<doubleQuotes46>user.home<doubleQuotes46>, <doubleQuotes46>user.dir<doubleQuotes46> };<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>    	for(String o : opts) {<newline46mondego>    		out.println(o + <doubleQuotes46>: <doubleQuotes46> + System.getProperty(o));<newline46mondego>    	}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3687splitHere46","1893300splitHere46","Object"
"3688splitHere46","1893300splitHere46","null"
"3689splitHere46","1893300splitHere46","SomeObject someObject1 = new SomeObject(); // References something.<newline46mondego>SomeObject someObject2 = null; // References nothing.<newline46mondego>"
"3690splitHere46","1893300splitHere46","null"
"3691splitHere46","1893300splitHere46","NullPointerException"
"3692splitHere46","1893300splitHere46","null"
"3693splitHere46","1893300splitHere46","someObject1.doSomething(); // Works fine.<newline46mondego>someObject2.doSomething(); // Throws NullPointerException.<newline46mondego>"
"3694splitHere46","1893300splitHere46","if (someObject2 == null) {<newline46mondego>    someObject2 = new SomeObject();<newline46mondego>}<newline46mondego>someObject2.doSomething(); // No NPE anymore!<newline46mondego>"
"3695splitHere46","1893300splitHere46","if (someObject2 != null) {<newline46mondego>    someObject2.doSomething(); // No NPE anymore!<newline46mondego>}<newline46mondego>"
"3696splitHere46","1893300splitHere46","admin.birthList.add(list1);"
"3697splitHere46","1893300splitHere46","."
"3698splitHere46","1893300splitHere46","admin.birthList"
"3699splitHere46","1893300splitHere46","birthList.add(list1)"
"3700splitHere46","1893300splitHere46","admin"
"3701splitHere46","1893300splitHere46","null"
"3702splitHere46","1893300splitHere46","birthList"
"3703splitHere46","1893300splitHere46","null"
"3704splitHere46","1893300splitHere46","System.out.println()"
"3705splitHere46","1893300splitHere46","admin.birthList.add(list1);<newline46mondego>"
"3706splitHere46","1893300splitHere46","System.out.println(<doubleQuotes46>admin: <doubleQuotes46> + admin);<newline46mondego>List<Birth> birthList = admin.birthList;<newline46mondego>System.out.println(<doubleQuotes46>birthList: <doubleQuotes46> + birthList);<newline46mondego>birthList.add(list1);<newline46mondego>"
"3707splitHere46","1893300splitHere46","null"
"3708splitHere46","1893300splitHere46","if (admin == null) throw new NullPointerException(<doubleQuotes46>admin is null!<doubleQuotes46>);<newline46mondego>List<Birth> birthList = admin.birthList;<newline46mondego>if (birthList == null) throw new NullPointerException(<doubleQuotes46>birthList is null!<doubleQuotes46>);<newline46mondego>birthList.add(list1);<newline46mondego>"
"3709splitHere46","1893300splitHere46","List<Birth> birthList = admin.birthList; // If NPE line points here, then admin is null.<newline46mondego>birthList.add(list1); // If NPE line points here, then birthList is null.<newline46mondego>"
"3710splitHere46","1893321splitHere46","public class Test {<newline46mondego><newline46mondego>    static {<newline46mondego>         System.out.println(<doubleQuotes46>static initializer<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    {<newline46mondego>         System.out.println(<doubleQuotes46>instance initializer<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public Test() {<newline46mondego>         System.out.println(<doubleQuotes46>constructor<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3711splitHere46","1893321splitHere46","public class Main {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Test test1 = new Test();<newline46mondego>        Test test2 = new Test();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3712splitHere46","1893321splitHere46","static initializer<newline46mondego>instance initializer<newline46mondego>constructor<newline46mondego>instance initializer<newline46mondego>constructor<newline46mondego>"
"3713splitHere46","1893321splitHere46","Class.forName(<doubleQuotes46>com.example.jdbc.Driver<doubleQuotes46>);<newline46mondego>"
"3714splitHere46","1893321splitHere46","static"
"3715splitHere46","1893321splitHere46","DriverManager"
"3716splitHere46","1893321splitHere46","static {<newline46mondego>      DriverManager.registerDriver(new com.example.jdbc.Driver());<newline46mondego> }<newline46mondego>"
"3717splitHere46","1893321splitHere46","DriverManager"
"3718splitHere46","1893321splitHere46","getConnection()"
"3719splitHere46","1893355splitHere46","public interface MyInterface<newline46mondego>{<newline46mondego>  void doStuff();<newline46mondego>}<newline46mondego><newline46mondego>public class MyClass implements MyInterface<newline46mondego>{<newline46mondego>  public void doStuff()<newline46mondego>  {<newline46mondego>    System.Console.Writeln(<doubleQuotes46>done!<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3720splitHere46","1893355splitHere46","MyInterface mobj = (myInterface)obj;<newline46mondego>mobj.doStuff();<newline46mondego>"
"3721splitHere46","1893355splitHere46","MyClass"
"3722splitHere46","1893366splitHere46","JFileChooser chooser = new JFileChooser();<newline46mondego>    chooser.addPropertyChangeListener( new PropertyChangeListener() {<newline46mondego>      public void propertyChange( PropertyChangeEvent evt )<newline46mondego>      {<newline46mondego>        if ( evt.getPropertyName().equals( <doubleQuotes46>directoryChanged<doubleQuotes46> ) )<newline46mondego>        {<newline46mondego>          JFileChooser me = (JFileChooser)evt.getSource(); <newline46mondego>          me.setSelectedFile( new File( <doubleQuotes46>text.txt<doubleQuotes46> ) );<newline46mondego>        }<newline46mondego>      }<newline46mondego>    });<newline46mondego>"
"3723splitHere46","1893808splitHere46","long renderStart = System.nanoTime()<newline46mondego>// render stuff here<newline46mondego>long renderTime = (System.nanoTime() - renderStart) / 1000000;<newline46mondego>"
"3724splitHere46","1893814splitHere46","<fileset dir=<doubleQuotes46>${lib.dir}<doubleQuotes46>><newline46mondego>    <include name=<doubleQuotes46>**/*.jar<doubleQuotes46> /><newline46mondego></fileset><newline46mondego>"
"3725splitHere46","1893859splitHere46","<subreport><newline46mondego>   <reportElement x=<doubleQuotes46>100<doubleQuotes46> y=<doubleQuotes46>20<doubleQuotes46> width=<doubleQuotes46>355<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>/><newline46mondego>   <dataSourceExpression><![CDATA[new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource($F{phones})]]><newline46mondego>        </dataSourceExpression><newline46mondego>   <subreportExpression class=<doubleQuotes46>java.lang.String<doubleQuotes46>><![CDATA[$P{SUBREPORT_DIR} + <doubleQuotes46>report_sub.jasper<doubleQuotes46>]]><newline46mondego>        </subreportExpression><newline46mondego></subreport><newline46mondego>"
"3726splitHere46","1893894splitHere46","Class<?> klass = object.getClass();<newline46mondego>Method method = klass.getMethod(<doubleQuotes46>name<doubleQuotes46>, String.class); // parameter types, if any<newline46mondego>method.invoke(object, <doubleQuotes46>whatever<doubleQuotes46>); // parameters, if any<newline46mondego>"
"3727splitHere46","1893978splitHere46","Process p = Runtime.getRuntime().exec(cmd);<newline46mondego>"
"3728splitHere46","1893978splitHere46","exec"
"3729splitHere46","1893978splitHere46","(command, null, null)"
"3730splitHere46","1893978splitHere46","exec"
"3731splitHere46","1893978splitHere46","(cmdarray, envp, dir)"
"3732splitHere46","1893978splitHere46","exec"
"3733splitHere46","1893978splitHere46","(String[] cmdarray, String[] envp, File dir)"
"3734splitHere46","1893978splitHere46","dir"
"3735splitHere46","1893978splitHere46","dir"
"3736splitHere46","1893978splitHere46","null"
"3737splitHere46","1893978splitHere46","test.sh"
"3738splitHere46","1893978splitHere46","java"
"3739splitHere46","1893978splitHere46","WEB-INF/classes"
"3740splitHere46","1893978splitHere46","user.dir"
"3741splitHere46","1893978splitHere46","String cwd = System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>)<newline46mondego>"
"3742splitHere46","1893978splitHere46","Runtime"
"3743splitHere46","1893978splitHere46","hello.sh"
"3744splitHere46","1893978splitHere46","./path/to/hello.sh"
"3745splitHere46","1893978splitHere46","/path/to/hello.sh"
"3746splitHere46","1893978splitHere46","dir"
"3747splitHere46","1893978splitHere46","exec()"
"3748splitHere46","1893978splitHere46","getResourceAsStream()"
"3749splitHere46","1893978splitHere46","exec()"
"3750splitHere46","1893978splitHere46","WEB-INF/classes/test/hello.sh"
"3751splitHere46","1893978splitHere46","InputStream is = this.getClass().getResourceAsStream(<doubleQuotes46>hello.sh<doubleQuotes46>);<newline46mondego><newline46mondego>String[] cmd = null;<newline46mondego>File tempFile = null;<newline46mondego><newline46mondego>tempFile = File.createTempFile(<doubleQuotes46>hello<doubleQuotes46>, <doubleQuotes46>sh<doubleQuotes46>);<newline46mondego>// extract the embedded hello.sh file from the war and save it to above file<newline46mondego>OutputStream os = new FileOutputStream(tempFile);<newline46mondego>byte[] buffer = new byte[1024];<newline46mondego>int bytes;<newline46mondego>while( (bytes = is.read(buffer)) != -1) {<newline46mondego>    os.write(buffer, 0, bytes);<newline46mondego>}<newline46mondego>os.close();      <newline46mondego><newline46mondego>tempFile.setExecutable(true);<newline46mondego><newline46mondego>cmd = new String[] { tempFile.getAbsolutePath() };<newline46mondego><newline46mondego>Runtime runtime = Runtime.getRuntime();<newline46mondego>Process process = runtime.exec(cmd);<newline46mondego>"
"3752splitHere46","1894068splitHere46","processKeyEvent()"
"3753splitHere46","1894068splitHere46","KeyListener"
"3754splitHere46","1894068splitHere46","this.addKeyListener(new KeyAdapter() {<newline46mondego>            @Override<newline46mondego>            public void keyPressed(KeyEvent e) { ...<newline46mondego>"
"3755splitHere46","1894068splitHere46","KeyAdapter"
"3756splitHere46","1894068splitHere46","KeyListener"
"3757splitHere46","1894068splitHere46","KeyListener"
"3758splitHere46","1894068splitHere46","public void keyPressed(KeyEvent e) { ... }"
"3759splitHere46","1894068splitHere46","KeyAdapter"
"3760splitHere46","1894270splitHere46","pom.xml"
"3761splitHere46","1894270splitHere46","gwt.version"
"3762splitHere46","1894270splitHere46","2.0.0"
"3763splitHere46","1894270splitHere46","gwt-maven-plugin"
"3764splitHere46","1894270splitHere46","1.2-SNAPSHOT"
"3765splitHere46","1894270splitHere46","1.2"
"3766splitHere46","1894270splitHere46","<runTarget>"
"3767splitHere46","1894270splitHere46","pom.xml"
"3768splitHere46","1894270splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>  xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<doubleQuotes46>><newline46mondego>  <!--<newline46mondego>    GWT-Maven archetype generated POM<newline46mondego>  --><newline46mondego>  <modelVersion>4.0.0</modelVersion><newline46mondego>  <groupId>com.mycompany.demo</groupId><newline46mondego>  <artifactId>my-gwtapp</artifactId><newline46mondego>  <packaging>war</packaging><newline46mondego>  <version>0.0.1-SNAPSHOT</version><newline46mondego>  <name>gwt-maven-archetype-project</name><newline46mondego><newline46mondego>  <properties><newline46mondego><newline46mondego>      <!-- convenience to define GWT version in one place --><newline46mondego>      <gwt.version>2.0.0</gwt.version><newline46mondego><newline46mondego>      <!--  tell the compiler we can use 1.5 --><newline46mondego>      <maven.compiler.source>1.5</maven.compiler.source><newline46mondego>      <maven.compiler.target>1.5</maven.compiler.target><newline46mondego><newline46mondego>  </properties><newline46mondego><newline46mondego>  <dependencies><newline46mondego><newline46mondego>    <!--  GWT dependencies (from central repo) --><newline46mondego>    <dependency><newline46mondego>      <groupId>com.google.gwt</groupId><newline46mondego>      <artifactId>gwt-servlet</artifactId><newline46mondego>      <version>${gwt.version}</version><newline46mondego>      <scope>runtime</scope><newline46mondego>    </dependency><newline46mondego>    <dependency><newline46mondego>      <groupId>com.google.gwt</groupId><newline46mondego>      <artifactId>gwt-user</artifactId><newline46mondego>      <version>${gwt.version}</version><newline46mondego>      <scope>provided</scope><newline46mondego>    </dependency><newline46mondego><newline46mondego>    <!-- test --><newline46mondego>    <dependency><newline46mondego>      <groupId>junit</groupId><newline46mondego>      <artifactId>junit</artifactId><newline46mondego>      <version>4.4</version><newline46mondego>      <scope>test</scope><newline46mondego>    </dependency><newline46mondego>  </dependencies><newline46mondego><newline46mondego>  <build><newline46mondego>    <outputDirectory>war/WEB-INF/classes</outputDirectory><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>gwt-maven-plugin</artifactId><newline46mondego>        <version>1.2</version><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <goals><newline46mondego>              <goal>compile</goal><newline46mondego>              <goal>generateAsync</goal><newline46mondego>              <goal>test</goal><newline46mondego>            </goals><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>        <configuration><newline46mondego>          <runTarget>com.mycompany.demo.gwt.Application/Application.html</runTarget><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>      <!--<newline46mondego>          If you want to use the target/web.xml file mergewebxml produces,<newline46mondego>          tell the war plugin to use it.<newline46mondego>          Also, exclude what you want from the final artifact here.<newline46mondego>            <plugin><newline46mondego>                <groupId>org.apache.maven.plugins</groupId><newline46mondego>                <artifactId>maven-war-plugin</artifactId><newline46mondego>                <configuration><newline46mondego>                    <webXml>target/web.xml</webXml><newline46mondego>                    <warSourceExcludes>.gwt-tmp/**</warSourceExcludes><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>            --><newline46mondego>      <plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-war-plugin</artifactId><newline46mondego>        <version>2.0.2</version><newline46mondego>        <configuration><newline46mondego>          <warSourceDirectory>war</warSourceDirectory><newline46mondego>          <webXml>src/main/webapp/WEB-INF/web.xml</webXml><newline46mondego>        </configuration><newline46mondego>      </plugin>    <newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego><newline46mondego></project><newline46mondego>"
"3769splitHere46","1894270splitHere46","gwt:eclipse"
"3770splitHere46","1894270splitHere46","gwt:compile gwt:run"
"3771splitHere46","1894291splitHere46","java.lang.Object"
"3772splitHere46","1894291splitHere46","equals()"
"3773splitHere46","1894291splitHere46","NullPointerException"
"3774splitHere46","1894328splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.io.FileWriter;<newline46mondego>import java.util.LinkedList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.TreeMap;<newline46mondego><newline46mondego>public class Sort {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>    	BufferedReader reader = new BufferedReader(new FileReader(<doubleQuotes46>data1.csv<doubleQuotes46>));<newline46mondego>    	Map<String, List<String>> map = new TreeMap<String, List<String>>();<newline46mondego>    	String line = reader.readLine();//read header<newline46mondego>    	while ((line = reader.readLine()) != null) {<newline46mondego>    		String key = getField(line);<newline46mondego>    		List<String> l = map.get(key);<newline46mondego>    		if (l == null) {<newline46mondego>    			l = new LinkedList<String>();<newline46mondego>    			map.put(key, l);<newline46mondego>    		}<newline46mondego>    		l.add(line);<newline46mondego><newline46mondego>    	}<newline46mondego>    	reader.close();<newline46mondego>    	FileWriter writer = new FileWriter(<doubleQuotes46>sorted_numbers.txt<doubleQuotes46>);<newline46mondego>    	writer.write(<doubleQuotes46>UserID, Module, Mark\n<doubleQuotes46>);<newline46mondego>    	for (List<String> list : map.values()) {<newline46mondego>    		for (String val : list) {<newline46mondego>    			writer.write(val);<newline46mondego>    			writer.write(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>    		}<newline46mondego>    	}<newline46mondego>    	writer.close();<newline46mondego>    }<newline46mondego><newline46mondego>    private static String getField(String line) {<newline46mondego>    	return line.split(<doubleQuotes46>,<doubleQuotes46>)[0];// extract value you want to sort on<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3775splitHere46","1894612splitHere46","ClassNotFoundException"
"3776splitHere46","1894612splitHere46","org.apache.derby.jdbc.EmbeddedDrive"
"3777splitHere46","1894630splitHere46","matches"
"3778splitHere46","1894630splitHere46","find"
"3779splitHere46","1894630splitHere46","import java.util.regex.*;<newline46mondego><newline46mondego>public class Example<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	System.out.println(<doubleQuotes46>Matches: <doubleQuotes46> + <doubleQuotes46>abc<doubleQuotes46>.matches(<doubleQuotes46>a+<doubleQuotes46>));<newline46mondego><newline46mondego>    	Matcher matcher = Pattern.compile(<doubleQuotes46>a+<doubleQuotes46>).matcher(<doubleQuotes46>abc<doubleQuotes46>);<newline46mondego>    	System.out.println(<doubleQuotes46>Find: <doubleQuotes46> + matcher.find());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3780splitHere46","1894630splitHere46","Matches: false<newline46mondego>Find: true<newline46mondego>"
"3781splitHere46","1894745splitHere46","-vm<newline46mondego>c:/path/to/your/jdk1.6.0_17/jre/bin/client/jvm.dll<newline46mondego>"
"3782splitHere46","1894842splitHere46","InputStream#available()"
"3783splitHere46","1894842splitHere46","ReadableByteChannel"
"3784splitHere46","1894842splitHere46","ByteBuffer"
"3785splitHere46","1894842splitHere46","ReadableByteChannelImpl"
"3786splitHere46","1894842splitHere46","AbstractInterruptibleChannel"
"3787splitHere46","1894842splitHere46","InputStream"
"3788splitHere46","1894842splitHere46","Channel#close()"
"3789splitHere46","1894842splitHere46","InterruptibleChannel#close()"
"3790splitHere46","1894842splitHere46","AbstractInterruptibleChannel"
"3791splitHere46","1894842splitHere46","ReadableByteChannelImpl"
"3792splitHere46","1895070splitHere46","WashMyCar(myCar);<newline46mondego>"
"3793splitHere46","1895070splitHere46","public class Car {<newline46mondego>  String make;<newline46mondego>  String model;<newline46mondego>  String color;<newline46mondego>}<newline46mondego>"
"3794splitHere46","1895070splitHere46","Car myCar = new Car();<newline46mondego>myCar.make = <doubleQuotes46>Honda<doubleQuotes46>;<newline46mondego>myCar.model = <doubleQuotes46>Accord<doubleQuotes46>;<newline46mondego>myCar.color = <doubleQuotes46>Black<doubleQuotes46>;<newline46mondego>"
"3795splitHere46","1895070splitHere46","public class Car {<newline46mondego>  String make;<newline46mondego>  String model;<newline46mondego>  String color;<newline46mondego>  String condition;<newline46mondego>  void washMe() {<newline46mondego>    this.condition = <doubleQuotes46>clean<doubleQuotes46>;<newline46mondego>  }<newline46mondego>  void goOffroad() {<newline46mondego>    this.condition = <doubleQuotes46>dirty<doubleQuotes46>;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3796splitHere46","1895070splitHere46","Car myCar = new Car();<newline46mondego>myCar.make = <doubleQuotes46>Honda<doubleQuotes46>;<newline46mondego>myCar.model = <doubleQuotes46>Accord<doubleQuotes46>;<newline46mondego>myCar.color = <doubleQuotes46>Black<doubleQuotes46>;<newline46mondego><newline46mondego>myCar.goOffroad();<newline46mondego>System.out.println(myCar.condition); // dirty<newline46mondego>myCar.washMe();<newline46mondego>System.out.println(myCar.condition); // clean<newline46mondego>"
"3797splitHere46","1895221splitHere46","int"
"3798splitHere46","1895221splitHere46","Integer.reverseBytes(int)"
"3799splitHere46","1895221splitHere46","java.io.DataInputStream"
"3800splitHere46","1895254splitHere46","for(int j = 0; j < 3; j++) {<newline46mondego>    for(int i = 0; i < scat_size.length; i++)<newline46mondego>        scat_size[j][i] = i;<newline46mondego><newline46mondego>    for(int i = 0; i < scat_times.length; i++)<newline46mondego>        scat_times[j][i] = i;<newline46mondego>}<newline46mondego><newline46mondego>// This should be 1,1 2,2 3,3 etc. in Red<newline46mondego>scatter_values[0] = new TwoArray(scat_size[0], scat_times[0]);<newline46mondego><newline46mondego>// Trying to test a large co-ord so this should be green<newline46mondego>scat_size[1][2] = 70;<newline46mondego>scat_times[1][2] = 20;<newline46mondego>scatter_values[1] = new TwoArray(scat_size[1], scat_times[1]);<newline46mondego><newline46mondego>// Trying to test another different co-ord so this should be blue<newline46mondego>scat_size[2][2] = 3;<newline46mondego>scat_times[2][2] = 7;<newline46mondego>scatter_values[2] = new TwoArray(scat_size[2], scat_times[2]);<newline46mondego><newline46mondego>myScatter = new ScatterPanel(scatter_values, scat_title, color_list);<newline46mondego>"
"3801splitHere46","1895607splitHere46","private Method searchForMethod( String name, Class[] parms ) {<newline46mondego>    Method[] methods = type.getMethods();<newline46mondego>    for( int i = 0; i < methods.length; i++ ) {<newline46mondego>        // Has to be named the same of course.<newline46mondego>        if( !methods[i].getName().equals( name ) )<newline46mondego>            continue;<newline46mondego><newline46mondego>        Class[] types = methods[i].getParameterTypes();<newline46mondego><newline46mondego>        // Does it have the same number of arguments that we're looking for.<newline46mondego>        if( types.length != parms.length )<newline46mondego>            continue;<newline46mondego><newline46mondego>        // Check for type compatibility<newline46mondego>        if( InspectionUtils.areTypesCompatible( types, parms ) )<newline46mondego>            return methods[i];<newline46mondego>        }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"3802splitHere46","1895607splitHere46","for( int i = 0; i < targets.length; i++ ) {<newline46mondego>        if( sources[i] == null )<newline46mondego>            continue;<newline46mondego><newline46mondego>        if( !translateFromPrimitive( targets[i] ).isAssignableFrom( sources[i] ) )<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    return( true );<newline46mondego>}<newline46mondego>"
"3803splitHere46","1895628splitHere46","Object.equals()"
"3804splitHere46","1895628splitHere46","true"
"3805splitHere46","1895628splitHere46","null"
"3806splitHere46","1895696splitHere46","ob instanceof Grafo<?,?>.Par"
"3807splitHere46","1895696splitHere46","ob instanceof Par"
"3808splitHere46","1895696splitHere46","ob instanceof Grafo<V,E>.Par"
"3809splitHere46","1895696splitHere46","instanceof"
"3810splitHere46","1895908splitHere46","InterruptedException"
"3811splitHere46","1895908splitHere46","Runnable.run"
"3812splitHere46","1895908splitHere46","Executable.execute()"
"3813splitHere46","1895908splitHere46","Thread.interrupt()"
"3814splitHere46","1896610splitHere46","jstl.jar"
"3815splitHere46","1896610splitHere46","standard.jar"
"3816splitHere46","1896610splitHere46","/jsp"
"3817splitHere46","1896610splitHere46","_rt"
"3818splitHere46","1896610splitHere46","http://java.sun.com/jstl/core_rt"
"3819splitHere46","1896610splitHere46","/jsp"
"3820splitHere46","1896610splitHere46","http://java.sun.com/jsp/jstl/core"
"3821splitHere46","1896610splitHere46","jstl-1.2.jar"
"3822splitHere46","1896610splitHere46","MANIFEST.MF"
"3823splitHere46","1896610splitHere46","web.xml"
"3824splitHere46","1896610splitHere46","Webapp/WEB-INF/lib"
"3825splitHere46","1896610splitHere46","JRE/lib"
"3826splitHere46","1896610splitHere46","Appserver/lib"
"3827splitHere46","1896610splitHere46","Appserver/lib"
"3828splitHere46","1896610splitHere46","Webapp/WEB-INF/lib"
"3829splitHere46","1896610splitHere46","web.xml"
"3830splitHere46","1896610splitHere46","web.xml"
"3831splitHere46","1896610splitHere46","web.xml"
"3832splitHere46","1896610splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><web-app <newline46mondego>    xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.5<doubleQuotes46>><newline46mondego><newline46mondego>    <!-- Config here. --><newline46mondego><newline46mondego></web-app><newline46mondego>"
"3833splitHere46","1896748splitHere46","public boolean isValidSHA1(String s) {<newline46mondego>    return s.matches(<doubleQuotes46>[a-fA-F0-9]{40}<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3834splitHere46","1896748splitHere46","public boolean isValidMD5(String s) {<newline46mondego>    return s.matches(<doubleQuotes46>[a-fA-F0-9]{32}<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3835splitHere46","1896919splitHere46","javax.jdo.annotations.Transactional"
"3836splitHere46","1896919splitHere46","@Transactional"
"3837splitHere46","1896919splitHere46","javax.jdo.annotations.Transactional"
"3838splitHere46","1896919splitHere46","javax.jdo.annotations.Transactional"
"3839splitHere46","1896919splitHere46","@Transactional"
"3840splitHere46","1896919splitHere46","javax.jdo.annotations.Transactional"
"3841splitHere46","1896919splitHere46","org.springframework.transaction.annotation.Transactional"
"3842splitHere46","1897013splitHere46",":"
"3843splitHere46","1897013splitHere46","."
"3844splitHere46","1897013splitHere46","com/KitJar.jar:."
"3845splitHere46","1897013splitHere46","com/KitJar.jar"
"3846splitHere46","1897057splitHere46","package com.stackoverflow.homework;<newline46mondego><newline46mondego>public class MyApplication<newline46mondego>{<newline46mondego>  static void native setAppUserModelID();<newline46mondego><newline46mondego>  static<newline46mondego>  {<newline46mondego>    System.loadLibrary(<doubleQuotes46>MyApplicationJNI<doubleQuotes46>);<newline46mondego>    setAppUserModelID();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3847splitHere46","1897057splitHere46","JNIEXPORT jboolean JNICALL Java_com_stackoverflow_howework_MyApplication_ setAppUserModelID(JNIEnv* env)<newline46mondego>{<newline46mondego>  LPCWSTR id = L<doubleQuotes46>com.stackoverflow.homework.MyApplication<doubleQuotes46>;<newline46mondego>  HRESULT hr = SetCurrentProcessExplicitAppUserModelID(id);<newline46mondego><newline46mondego>  return hr == S_OK;<newline46mondego>}<newline46mondego>"
"3848splitHere46","1897057splitHere46","SetCurrentProcessExplicitAppUserModelID()"
"3849splitHere46","1897057splitHere46","SetCurrentProcessExplicitAppUserModelID()"
"3850splitHere46","1897057splitHere46","System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>);"
"3851splitHere46","1897057splitHere46","<doubleQuotes46>Windows 7<doubleQuotes46>"
"3852splitHere46","1897057splitHere46","shell32.dll"
"3853splitHere46","1897057splitHere46","LoadLibrary"
"3854splitHere46","1897057splitHere46","SetCurrentProcessExplicitAppUserModelID"
"3855splitHere46","1897057splitHere46","GetProcAddress"
"3856splitHere46","1897057splitHere46","GetProcAddress"
"3857splitHere46","1897057splitHere46","NULL"
"3858splitHere46","1897057splitHere46","shell32"
"3859splitHere46","1897083splitHere46","jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]<newline46mondego>"
"3860splitHere46","1897083splitHere46","RAVIGARG"
"3861splitHere46","1897083splitHere46","jdbc:sqlserver://RAVIGARG\SQLSERVER2005;databaseName=Sahil_test_12_12_09;SelectMethod=cursor<newline46mondego>"
"3862splitHere46","1897083splitHere46","<driver-class>"
"3863splitHere46","1897241splitHere46","~/.eclipse"
"3864splitHere46","1897241splitHere46","~/.eclipse.save"
"3865splitHere46","1897249splitHere46","<c:forEach var=<doubleQuotes46>person<doubleQuotes46> varStatus=<doubleQuotes46>loopStatus<doubleQuotes46> items=<doubleQuotes46>myCommand.persons<doubleQuotes46>><newline46mondego>   <form:input path=<doubleQuotes46>persons[${loopStatus.index}].fname<doubleQuotes46> />& <form:input path=<doubleQuotes46>persons[${loopStatus.index}].lname<doubleQuotes46> /><br /><newline46mondego></c:forEach><newline46mondego>"
"3866splitHere46","1897305splitHere46","synchronized"
"3867splitHere46","1897305splitHere46","synchronized"
"3868splitHere46","1897315splitHere46","<newline46mondego>package com.ramps;<newline46mondego><newline46mondego>import android.app.Activity;<newline46mondego>import android.content.Context;<newline46mondego>import android.os.Bundle;<newline46mondego>import android.widget.ArrayAdapter;<newline46mondego>import android.widget.Spinner;<newline46mondego>import android.widget.SpinnerAdapter;<newline46mondego><newline46mondego>public class MySpinner extends Activity {<newline46mondego>    //data that will be used as a spinner options<newline46mondego>    private static String data[] = {<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>two<doubleQuotes46>, <doubleQuotes46>three<doubleQuotes46>};<newline46mondego><newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        //main.xml file contains spinner<newline46mondego>        setContentView(R.layout.main);<newline46mondego>        Spinner spinner = (Spinner) findViewById(R.id.spinner);<newline46mondego>        //create your own adapter<newline46mondego>        MySpinnerAdapter adapter = new MySpinnerAdapter(this,R.layout.custom_spinner_row,R.id.text, data );<newline46mondego>        //set your custom adapter <newline46mondego>        spinner.setAdapter( adapter );<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    private class MySpinnerAdapter extends ArrayAdapter{<newline46mondego><newline46mondego>    	public MySpinnerAdapter(Context context, int resource,<newline46mondego>    			int textViewResourceId, String[] objects) {<newline46mondego>    		super(context, resource, textViewResourceId, objects);			<newline46mondego>    	}	<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3869splitHere46","1897362splitHere46","-Xmx"
"3870splitHere46","1897362splitHere46","-Xmx"
"3871splitHere46","1897404splitHere46","IFigure.setOpaque(false)"
"3872splitHere46","1897692splitHere46","ps"
"3873splitHere46","1897692splitHere46","Runtime.exec()"
"3874splitHere46","1897692splitHere46","java.lang.Process"
"3875splitHere46","1897692splitHere46","java.lang.UnixProcess"
"3876splitHere46","1897692splitHere46","int pid"
"3877splitHere46","1897692splitHere46","Field f = p.getClass().getDeclaredField(<doubleQuotes46>pid<doubleQuotes46>);<newline46mondego>f.setAccessible(true);<newline46mondego>System.out.println( f.get( p ) );<newline46mondego>"
"3878splitHere46","1898755splitHere46","public class Foo <newline46mondego>{<newline46mondego>    // constants must always be immutable (no changeable state)<newline46mondego>    public static final String EXTERNAL_CONSTANT;<newline46mondego>    private static final String INTERNAL_CONSTANT;<newline46mondego><newline46mondego>    public static final int EXTERNAL_CONSTANT_USED_IN_SWITCH = 1;<newline46mondego>    private static final int INTERNAL_CONSTANT_USED_IN_SWITCH = 2; <newline46mondego><newline46mondego>     // no public variables that can be modified<newline46mondego>     private static int internalClassVariable;<newline46mondego><newline46mondego>     static<newline46mondego>     {<newline46mondego>         EXTERNAL_CONSTANT = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>         INTERNAL_CONSTANT = <doubleQuotes46>World<doubleQuotes46>;<newline46mondego>     }<newline46mondego><newline46mondego>     private final List<String> constantsMustBeStaticAndFinal;<newline46mondego>     private int instanceVariable;<newline46mondego><newline46mondego>     {<newline46mondego>         constantsMustBeStaticAndFinal = new ArrayList<String>();<newline46mondego>     }<newline46mondego><newline46mondego>     public Foo(final int parametersAreAlwaysFinal)<newline46mondego>     {<newline46mondego>         final int localVariable;<newline46mondego><newline46mondego>         locatlVariable   = parameterAreALwaysFinal * 10;<newline46mondego>         instanceVariable = localVariable;<newline46mondego>     } <newline46mondego>}<newline46mondego>"
"3879splitHere46","1898755splitHere46","{<newline46mondego>    int x = 0;    <newline46mondego><newline46mondego>    // this line added later<newline46mondego>    x = 7;<newline46mondego>}<newline46mondego>"
"3880splitHere46","1899387splitHere46","new"
"3881splitHere46","1899387splitHere46","singleton"
"3882splitHere46","1899387splitHere46","prototype"
"3883splitHere46","1899387splitHere46","singleton"
"3884splitHere46","1899387splitHere46","ThreadtestRunnable"
"3885splitHere46","1899387splitHere46","applicationContext.xml"
"3886splitHere46","1899387splitHere46","@Component(<doubleQuotes46>myThreadBean<doubleQuotes46>)"
"3887splitHere46","1899387splitHere46","abstract"
"3888splitHere46","1899387splitHere46","createThread"
"3889splitHere46","1899387splitHere46","@Transactional"
"3890splitHere46","1899387splitHere46","propagateion=Propagation.REQUIRES_NEW<doubleQuotes46>"
"3891splitHere46","1899387splitHere46","@Transactional"
"3892splitHere46","1899394splitHere46","Long      i     = new Long(20);    // the service implementation<newline46mondego>Hashtable props = new Hashtable();<newline46mondego>props.put(<doubleQuotes46>description<doubleQuotes46>, <doubleQuotes46>This an long value<doubleQuotes46>);<newline46mondego>bundleContext.registerService(Long.class.getName(), i, props);<newline46mondego>"
"3893splitHere46","1899465splitHere46","@avg"
"3894splitHere46","1899465splitHere46","//classFoo is a NSManagedObjects I've fetched<newline46mondego>if ([[classFoo valueForKey@<doubleQuotes46>courseNumber<doubleQuotes46>] intValue] < 400) {<newline46mondego>    NSLog(@<doubleQuotes46>undergraduate class<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3895splitHere46","1899465splitHere46","intValue"
"3896splitHere46","1899465splitHere46","id"
"3897splitHere46","1899465splitHere46","int"
"3898splitHere46","1899465splitHere46","-Wextra"
"3899splitHere46","1899619splitHere46","settings.xml"
"3900splitHere46","1899619splitHere46","pom.xml"
"3901splitHere46","1899619splitHere46","settings.xml"
"3902splitHere46","1899619splitHere46","pom.xml"
"3903splitHere46","1899625splitHere46","K"
"3904splitHere46","1899625splitHere46","T"
"3905splitHere46","1899625splitHere46","Pair"
"3906splitHere46","1899625splitHere46","private class BSTMapIter<K,T> implements Iterator<Pair<K,T>><newline46mondego>"
"3907splitHere46","1899625splitHere46","private class BSTMapIter implements Iterator<Pair<K,T>><newline46mondego>"
"3908splitHere46","1899625splitHere46","// When it's an inner class<newline46mondego>public Iterator<Pair<K,T>> iterator() {<newline46mondego>    return new BSTMapIter(this.root, this.size, this.order);<newline46mondego>}<newline46mondego><newline46mondego>// When it's a standalone generic class<newline46mondego>public Iterator<Pair<K,T>> iterator() {<newline46mondego>    return new BSTMapIter<K, T>(this.root, this.size, this.order);<newline46mondego>}<newline46mondego>"
"3909splitHere46","1899660splitHere46","@Configurable<newline46mondego>public class Person {<newline46mondego>    private IPeopleDAO _dao;<newline46mondego><newline46mondego>    // SNIP<newline46mondego><newline46mondego>    public save() {<newline46mondego>        _dao.save(this);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// use it like this<newline46mondego>new Person(<doubleQuotes46>john<doubleQuotes46>, <doubleQuotes46>doe<doubleQuotes46>).save();<newline46mondego>"
"3910splitHere46","1899773splitHere46","_"
"3911splitHere46","1899773splitHere46","result"
"3912splitHere46","1900050splitHere46","class Visitor {<newline46mondego>    Stack<Node> stack = new Stack<Node>();<newline46mondego><newline46mondego>//    . . .<newline46mondego><newline46mondego>    void visitPlus(PlusExp pe) {<newline46mondego>        pe.left.accept(this);<newline46mondego>        pe.right.accept(this);<newline46mondego>        Node b = stack.pop();<newline46mondego>        Node a = stack.pop();<newline46mondego>        stack.push(new BinOp(BinOp.PLUS, a, b));<newline46mondego>    }<newline46mondego>"
"3913splitHere46","1900063splitHere46","JTextField inputSides = new JTextField(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>"
"3914splitHere46","1900063splitHere46","<doubleQuotes46> <doubleQuotes46>"
"3915splitHere46","1900063splitHere46","getSides = inputSides.getText();<newline46mondego>sidesToRoll = Integer.parseInt(getSides);<newline46mondego>"
"3916splitHere46","1900063splitHere46","JTextField inputSides = new JTextField(<doubleQuotes46>6<doubleQuotes46>);<newline46mondego>"
"3917splitHere46","1900063splitHere46","inputSides"
"3918splitHere46","1900063splitHere46","arg == <doubleQuotes46>ROLL<doubleQuotes46><newline46mondego>"
"3919splitHere46","1900063splitHere46","arg"
"3920splitHere46","1900063splitHere46","<doubleQuotes46>ROLL<doubleQuotes46>.equals(arg)<newline46mondego>"
"3921splitHere46","1900063splitHere46","public class ObjectReferences {<newline46mondego>  private final JLabel label = new JLabel(<doubleQuotes46>I am FOO<doubleQuotes46>); // label 1<newline46mondego><newline46mondego>  public ObjectReferences() {<newline46mondego>    JLabel label = new JLabel(<doubleQuotes46>I am BAR<doubleQuotes46>); // label 2<newline46mondego><newline46mondego>    JButton button = new JButton(<doubleQuotes46>Click me<doubleQuotes46>);<newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego>      @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        onclick();<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    // will display <doubleQuotes46>I am BAR<doubleQuotes46><newline46mondego>    JFrame frame = new JFrame();<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(600, 400);<newline46mondego>    frame.setLayout(new FlowLayout());<newline46mondego>    frame.add(label); // label 2<newline46mondego>    frame.add(button);<newline46mondego>    frame.setVisible(true);<newline46mondego>  }<newline46mondego><newline46mondego>  public void onclick() {<newline46mondego>    // will display <doubleQuotes46>I am FOO<doubleQuotes46><newline46mondego>    JOptionPane.showMessageDialog(null, label.getText()); // label 1<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    new ObjectReferences();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3922splitHere46","1900063splitHere46","onclick()"
"3923splitHere46","1900063splitHere46","label"
"3924splitHere46","1900063splitHere46","label"
"3925splitHere46","1900063splitHere46","public class ObjectReferences {<newline46mondego>  private final JLabel label = new JLabel(<doubleQuotes46>I am FOO<doubleQuotes46>);<newline46mondego><newline46mondego>  public ObjectReferences() {<newline46mondego>    JButton button = new JButton(<doubleQuotes46>Click me<doubleQuotes46>);<newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego>      @Override public void actionPerformed(ActionEvent e) {<newline46mondego>        onclick();<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    JFrame frame = new JFrame();<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(600, 400);<newline46mondego>    frame.setLayout(new FlowLayout());<newline46mondego>    frame.add(label);<newline46mondego>    frame.add(button);<newline46mondego>    frame.setVisible(true);<newline46mondego>  }<newline46mondego><newline46mondego>  public void onclick() {<newline46mondego>    JOptionPane.showMessageDialog(null, label.getText());<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    new ObjectReferences();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3926splitHere46","1900173splitHere46","getResource"
"3927splitHere46","1900173splitHere46","getSystemResource"
"3928splitHere46","1900173splitHere46","URL resource = getClass().getClassLoader().getResource(<doubleQuotes46>R.txt<doubleQuotes46>);<newline46mondego>URL resource = Foo.class.getClassLoader().getResource(<doubleQuotes46>R.txt<doubleQuotes46>);<newline46mondego>URL resource = getClass().getResource(<doubleQuotes46>/R.txt<doubleQuotes46>);<newline46mondego>URL resource = Foo.class.getResource(<doubleQuotes46>/R.txt<doubleQuotes46>);<newline46mondego>"
"3929splitHere46","1900173splitHere46","Class.getResource"
"3930splitHere46","1900173splitHere46","ClassLoader.getResource"
"3931splitHere46","1900173splitHere46","Class.getResource"
"3932splitHere46","1900173splitHere46","ClassLoader.getResource"
"3933splitHere46","1900185splitHere46","com.gwt.example"
"3934splitHere46","1900185splitHere46","package com.gwt.example.myproject.client;<newline46mondego><newline46mondego>public class Login implements EntryPoint {<newline46mondego><newline46mondego>  public void onModuleLoad() {<newline46mondego>    ... create loginWidget ..<newline46mondego><newline46mondego>    RootPanel.get(<doubleQuotes46>my-login-div<doubleQuotes46>).add(loginWidget);<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3935splitHere46","1900185splitHere46","war/com.gwt.example"
"3936splitHere46","1900185splitHere46","com.gwt.example.login.nocache.js"
"3937splitHere46","1900185splitHere46","com.gwt.example.admin.nocache.js"
"3938splitHere46","1900185splitHere46","<html><newline46mondego>....other stuff...<newline46mondego><script type=<doubleQuotes46>text/javascript<doubleQuotes46> language=<doubleQuotes46>javascript<doubleQuotes46> src=<doubleQuotes46>com.gwt.example.login.nocache.js<doubleQuotes46>></script><newline46mondego>....other stuff....<newline46mondego><div id=<doubleQuotes46>my-login-widget<doubleQuotes46>></div><newline46mondego>....the rest of your html markup....<newline46mondego></html><newline46mondego>"
"3939splitHere46","1900204splitHere46","<xsl:template match=<doubleQuotes46>comment<doubleQuotes46>><newline46mondego>  <fo:block><newline46mondego>    <xsl:call-template name=<doubleQuotes46>dig-links<doubleQuotes46>><newline46mondego>      <xsl:with-param name=<doubleQuotes46>content<doubleQuotes46> select=<doubleQuotes46>.<doubleQuotes46>/><newline46mondego>    </xsl:call-template><newline46mondego>  </fo:block><newline46mondego></xsl:template><newline46mondego><xsl:template name=<doubleQuotes46>dig-links<doubleQuotes46>><newline46mondego>  <xsl:param name=<doubleQuotes46>content<doubleQuotes46> /><newline46mondego>  <xsl:choose><newline46mondego>    <xsl:when test=<doubleQuotes46>contains($content, 'http://')<doubleQuotes46>><newline46mondego>      <xsl:value-of select=<doubleQuotes46>substring-before($content, 'http://')<doubleQuotes46>/><newline46mondego>      <xsl:variable name=<doubleQuotes46>url<doubleQuotes46> select=<doubleQuotes46>concat('http://', substring-before(substring-after(concat($content, ' '), 'http://'), ' '))<doubleQuotes46>/><newline46mondego>      <fo:basic-link><newline46mondego>        <xsl:attribute name=<doubleQuotes46>external-destination<doubleQuotes46>><newline46mondego>          <xsl:choose><newline46mondego>            <xsl:when test=<doubleQuotes46>substring($url, string-length($url), 1) = '.'<doubleQuotes46>><newline46mondego>              <xsl:value-of select=<doubleQuotes46>substring($url, 1, string-length($url)-1)<doubleQuotes46>/><newline46mondego>            </xsl:when><newline46mondego>            <xsl:otherwise><newline46mondego>              <xsl:value-of select=<doubleQuotes46>$url<doubleQuotes46>/><newline46mondego>            </xsl:otherwise><newline46mondego>          </xsl:choose><newline46mondego>        </xsl:attribute><newline46mondego>        <xsl:value-of select=<doubleQuotes46>$url<doubleQuotes46>/><newline46mondego>      </fo:basic-link><newline46mondego>      <xsl:call-template name=<doubleQuotes46>dig-links<doubleQuotes46>><newline46mondego>        <xsl:with-param name=<doubleQuotes46>content<doubleQuotes46> select=<doubleQuotes46>substring-after($content, $url)<doubleQuotes46>/><newline46mondego>      </xsl:call-template><newline46mondego>    </xsl:when><newline46mondego>    <xsl:otherwise><newline46mondego>      <xsl:value-of select=<doubleQuotes46>$content<doubleQuotes46>/><newline46mondego>    </xsl:otherwise><newline46mondego>  </xsl:choose><newline46mondego></xsl:template><newline46mondego>"
"3940splitHere46","1900320splitHere46","hbm2java"
"3941splitHere46","1900320splitHere46","generate-sources"
"3942splitHere46","1900320splitHere46","<plugin><newline46mondego>    <groupId>org.codehaus.mojo</groupId><newline46mondego>    <artifactId>hibernate3-maven-plugin</artifactId><newline46mondego>    <version>2.2</version><newline46mondego>    <executions><newline46mondego>      <execution><newline46mondego>        <phase>generate-sources</phase><newline46mondego>        <goals><newline46mondego>          <goal>hbm2java</goal><newline46mondego>        </goals><newline46mondego>      </execution><newline46mondego>    </executions><newline46mondego>    <configuration><newline46mondego>      <components><newline46mondego>        <component><newline46mondego>          <name>hbm2java</name><newline46mondego>          <implementation>configuration</implementation><newline46mondego>          <outputDirectory>target/generated-sources/hibernate3</outputDirectory><newline46mondego>        </component><newline46mondego>      </components><newline46mondego>      <componentProperties><newline46mondego>        <drop>true</drop><newline46mondego>        <jdk5>true</jdk5><newline46mondego>        <configurationfile>/src/main/resources/hibernate.cfg.xml</configurationfile><newline46mondego>      </componentProperties><newline46mondego>    </configuration><newline46mondego>  </plugin> <newline46mondego>"
"3943splitHere46","1900320splitHere46",".hbm.xml"
"3944splitHere46","1900320splitHere46","target/classes"
"3945splitHere46","1900320splitHere46","src/main/resources"
"3946splitHere46","1900320splitHere46","target/classes"
"3947splitHere46","1900320splitHere46","process-resources"
"3948splitHere46","1900320splitHere46","pom.xml"
"3949splitHere46","1900320splitHere46","hibernate.cfg.xml"
"3950splitHere46","1900320splitHere46","<?xml version='1.0' encoding='utf-8'?><newline46mondego><!DOCTYPE hibernate-configuration PUBLIC<newline46mondego>    <doubleQuotes46>-//Hibernate/Hibernate Configuration DTD//EN<doubleQuotes46><newline46mondego>    <doubleQuotes46>http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd<doubleQuotes46>><newline46mondego><hibernate-configuration><newline46mondego>  <session-factory><newline46mondego>    <!-- Database connection settings --><newline46mondego>    <property name=<doubleQuotes46>connection.driver_class<doubleQuotes46>>org.apache.derby.jdbc.ClientDriver</property><newline46mondego>    <property name=<doubleQuotes46>connection.url<doubleQuotes46>>jdbc:derby://localhost:1527/mydatabase</property><newline46mondego>    <property name=<doubleQuotes46>connection.username<doubleQuotes46>>app</property><newline46mondego>    <property name=<doubleQuotes46>connection.password<doubleQuotes46>>app</property><newline46mondego><newline46mondego>    <!-- JDBC connection pool (use the built-in) --><newline46mondego>    <property name=<doubleQuotes46>connection.pool_size<doubleQuotes46>>1</property><newline46mondego><newline46mondego>    <!-- SQL dialect --><newline46mondego>    <property name=<doubleQuotes46>dialect<doubleQuotes46>>org.hibernate.dialect.DerbyDialect</property><newline46mondego><newline46mondego>    <!-- Echo all executed SQL to stdout --><newline46mondego>    <property name=<doubleQuotes46>show_sql<doubleQuotes46>>false</property><newline46mondego><newline46mondego>    <!-- Mapping files --><newline46mondego>    <mapping resource=<doubleQuotes46>Person.hbm.xml<doubleQuotes46> /><newline46mondego>  </session-factory><newline46mondego></hibernate-configuration><newline46mondego>"
"3951splitHere46","1900320splitHere46","Person.hbm.xml"
"3952splitHere46","1900320splitHere46","<?xml version='1.0' encoding='utf-8'?><newline46mondego><!DOCTYPE hibernate-mapping<newline46mondego>   PUBLIC <doubleQuotes46>-//Hibernate/Hibernate Mapping DTD//EN<doubleQuotes46><newline46mondego>   <doubleQuotes46>http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd<doubleQuotes46>><newline46mondego><newline46mondego><hibernate-mapping><newline46mondego><newline46mondego>  <class name=<doubleQuotes46>Person<doubleQuotes46> table=<doubleQuotes46>person<doubleQuotes46>><newline46mondego>    <id name=<doubleQuotes46>id<doubleQuotes46> type=<doubleQuotes46>int<doubleQuotes46>><newline46mondego>      <generator class=<doubleQuotes46>increment<doubleQuotes46> /><newline46mondego>    </id><newline46mondego><newline46mondego>    <property name=<doubleQuotes46>name<doubleQuotes46> column=<doubleQuotes46>cname<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46> /><newline46mondego>  </class><newline46mondego><newline46mondego></hibernate-mapping><newline46mondego>"
"3953splitHere46","1900320splitHere46","mvn install"
"3954splitHere46","1900320splitHere46","Person.java"
"3955splitHere46","1900320splitHere46","$ cat target/generated-sources/hibernate3/Person.java <newline46mondego>// default package<newline46mondego>// Generated Dec 14, 2009 2:19:22 PM by Hibernate Tools 3.2.2.GA<newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * Person generated by hbm2java<newline46mondego> */<newline46mondego>public class Person  implements java.io.Serializable {<newline46mondego><newline46mondego><newline46mondego>     private int id;<newline46mondego>     private String name;<newline46mondego><newline46mondego>    public Person() {<newline46mondego>    }<newline46mondego><newline46mondego>    public Person(String name) {<newline46mondego>       this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getId() {<newline46mondego>        return this.id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(int id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego>    public String getName() {<newline46mondego>        return this.name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"3956splitHere46","1900482splitHere46","char[] chars = new char[len];<newline46mondego>Arrays.fill(chars, ch);<newline46mondego>String s = new String(chars);<newline46mondego>"
"3957splitHere46","1900590splitHere46","SIGINT"
"3958splitHere46","1900844splitHere46","animals.jsp"
"3959splitHere46","1900844splitHere46","<%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jstl/core<doubleQuotes46> %><newline46mondego><c:forEach var=<doubleQuotes46>animal<doubleQuotes46> items=<doubleQuotes46>${animals}<doubleQuotes46>><newline46mondego>   <c:set var=<doubleQuotes46>animalName<doubleQuotes46> value=<doubleQuotes46>${animal}<doubleQuotes46>/><newline46mondego>   <c:out value=<doubleQuotes46>${animalName}<doubleQuotes46>/><newline46mondego></c:forEach><newline46mondego>"
"3960splitHere46","1900854splitHere46","public class Function {<newline46mondego>    private static int last = 0;<newline46mondego>    public static int foo(int n) {<newline46mondego>        last += n; <newline46mondego>        return last; <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3961splitHere46","1900854splitHere46","last"
"3962splitHere46","1900966splitHere46","long bitSetInt = 0;<newline46mondego>for (int i = 0 ; i < ar.length ; i++) {<newline46mondego>   bitSetInt = (bitSetInt | toDigit(ar[i])) << 1;<newline46mondego>}<newline46mondego>println(String.format(<doubleQuotes46>%x<doubleQuotes46>, bitSetInt));<newline46mondego>"
"3963splitHere46","1900966splitHere46","int toDigit(boolean b) { return b?1:0;}<newline46mondego>"
"3964splitHere46","1900966splitHere46","ar"
"3965splitHere46","1901066splitHere46","IMenuManager rootMenu = getViewSite().getActionBars().getMenuManager();<newline46mondego>MenuManager menu = new MenuManager(<doubleQuotes46>Menu &2<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>);<newline46mondego>menu.add(new Action(<doubleQuotes46>Action1<doubleQuotes46>) {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        //do something<newline46mondego>    }});<newline46mondego>menu.add(new Action(<doubleQuotes46>Action2<doubleQuotes46>) {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        //do something<newline46mondego>    }});<newline46mondego>rootMenu.add(menu);<newline46mondego>"
"3966splitHere46","1901204splitHere46","if ((val & (1L << bitPosition)) != 0)<newline46mondego>    // etc<newline46mondego>"
"3967splitHere46","1901204splitHere46","string padding = <doubleQuotes46>0000000000000000000000000000000000000000000000000000000000000000<doubleQuotes46>;<newline46mondego>string result = padding + Long.toBinaryString(val);<newline46mondego>result = result.substring(result.length() - 64, result.length());  // take the right-most 64 digits<newline46mondego>"
"3968splitHere46","1901229splitHere46","final LocalDate ld = new LocalDate(mySqlTime);<newline46mondego>"
"3969splitHere46","1901229splitHere46","System.out.println(new LocalDate(Time.valueOf(<doubleQuotes46>18:30:00<doubleQuotes46>)));<newline46mondego>"
"3970splitHere46","1901238splitHere46","javax.lang.model.util.ElementKindVisitor6"
"3971splitHere46","1901238splitHere46","javax.lang.model.util.ElementScanner6"
"3972splitHere46","1901275splitHere46","Class<T> persistentClass = (Class<T>) ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0];<newline46mondego>"
"3973splitHere46","1901533splitHere46","java.net.URLConnection"
"3974splitHere46","1901533splitHere46","protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    String action = request.getParameter(<doubleQuotes46>action<doubleQuotes46>); // Or request.getPathInfo() whatever you want.<newline46mondego>    String result = someDAO.doAction(action);<newline46mondego>    response.getWriter().write(result);<newline46mondego>}<newline46mondego>"
"3975splitHere46","1901533splitHere46","URL url = new URL(<doubleQuotes46>http://example.com/databaseservlet?action=someaction<doubleQuotes46>);<newline46mondego>URLConnection connection = url.openConnection();<newline46mondego>InputStream result = connection.getInputStream(); // Important. This actually fires the request!<newline46mondego>"
"3976splitHere46","1901533splitHere46","PreparedStatement"
"3977splitHere46","1901777splitHere46","String str = new String(<doubleQuotes46>hello<doubleQuotes46>);<newline46mondego>"
"3978splitHere46","1901811splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-dependency-plugin</artifactId><newline46mondego>    <executions><newline46mondego>    	<execution><newline46mondego>    		<phase>prepare-package</phase><newline46mondego>    		<goals><newline46mondego>    			<goal>copy</goal><newline46mondego>    		</goals><newline46mondego>    	</execution><newline46mondego>    </executions><newline46mondego>    <configuration><newline46mondego>    	<artifactItems><newline46mondego>    		<artifactItem><newline46mondego>    			<groupId>group</groupId><newline46mondego>    			<artifactId>artifact</artifactId><newline46mondego>    			<version>version</version><newline46mondego>    			<type>jar</type><newline46mondego>    			<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</outputDirectory><newline46mondego>    		</artifactItem><newline46mondego>    	</artifactItems><newline46mondego>    </configuration><newline46mondego></plugin><newline46mondego>"
"3979splitHere46","1902383splitHere46","System#nanoTime()"
"3980splitHere46","1902383splitHere46","System#currentTimeMillis()"
"3981splitHere46","1902530splitHere46","static int state;<newline46mondego>static public void main(String... args) {<newline46mondego>    state = 0;                   // (1)<newline46mondego>    Thread t = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            state = state + 1;   // (2) <newline46mondego>        }<newline46mondego>    };<newline46mondego>    t.start();<newline46mondego>    t.join();<newline46mondego>    System.out.println(state);  // (3)<newline46mondego>}<newline46mondego>"
"3982splitHere46","1902530splitHere46","run()"
"3983splitHere46","1903151splitHere46","Runtime r = Runtime.getRuntime();<newline46mondego>r.gc();<newline46mondego>"
"3984splitHere46","1903279splitHere46","[0-9]<newline46mondego>"
"3985splitHere46","1904095splitHere46","interrupted()"
"3986splitHere46","1904095splitHere46","static"
"3987splitHere46","1904095splitHere46","isInterrupted()"
"3988splitHere46","1904095splitHere46","Thread"
"3989splitHere46","1904095splitHere46","Thread myThread = ...;<newline46mondego>if (myThread.interrupted()) {} // WRONG! This might not be checking myThread.<newline46mondego>if (myThread.isInterrupted()) {} // Right!<newline46mondego>"
"3990splitHere46","1904095splitHere46","interrupted()"
"3991splitHere46","1904095splitHere46","false"
"3992splitHere46","1904095splitHere46","true"
"3993splitHere46","1904135splitHere46","scheduler.unscheduleJob"
"3994splitHere46","1904285splitHere46","Person // model<newline46mondego>   update();<newline46mondego><newline46mondego>View<newline46mondego>   modelUpdated()<newline46mondego>       println(Person.name); ...<newline46mondego><newline46mondego>Controller<newline46mondego>     main()<newline46mondego>         while( input = getInput() )<newline46mondego>             person.update(...);<newline46mondego>             view.modelUpdated();<newline46mondego>"
"3995splitHere46","1904598splitHere46","synchronized"
"3996splitHere46","1905043splitHere46","AbstractPersistentCollection"
"3997splitHere46","1905043splitHere46","PersistentCollection"
"3998splitHere46","1905043splitHere46","ImportTable"
"3999splitHere46","1905043splitHere46","PersistentCollection"
"4000splitHere46","1905043splitHere46","Serializable"
"4001splitHere46","1905045splitHere46","setComposite(AlphaComposite.Clear)"
"4002splitHere46","1905045splitHere46","fillRect()"
"4003splitHere46","1905045splitHere46","filter()"
"4004splitHere46","1905045splitHere46","WritableRaster"
"4005splitHere46","1905045splitHere46","RenderingHints"
"4006splitHere46","1905045splitHere46","KEY_ALPHA_INTERPOLATION"
"4007splitHere46","1905045splitHere46","AffineTransformOp"
"4008splitHere46","1905045splitHere46","private BufferedImage getSquareImage(BufferedImage image) {<newline46mondego>    int w = image.getWidth();<newline46mondego>    int h = image.getHeight();<newline46mondego>    int max = Math.max(w, h);<newline46mondego>    BufferedImage square = new BufferedImage(<newline46mondego>            max, max, BufferedImage.TYPE_INT_ARGB);<newline46mondego>    Graphics2D g2d = square.createGraphics();<newline46mondego>    g2d.setRenderingHint(<newline46mondego>            RenderingHints.KEY_ANTIALIASING,<newline46mondego>            RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>    g2d.setComposite(AlphaComposite.Clear);<newline46mondego>    g2d.fillRect(0, 0, max, max);<newline46mondego>    g2d.setComposite(AlphaComposite.Src);<newline46mondego>    g2d.drawImage(image, (max - w) / 2, (max - h) / 2, null);<newline46mondego>    g2d.dispose();<newline46mondego>    return square;<newline46mondego>}<newline46mondego>"
"4009splitHere46","1905200splitHere46","weighty"
"4010splitHere46","1905200splitHere46","GridBagConstraints.NORTH"
"4011splitHere46","1905200splitHere46","c.weighty = 1.0"
"4012splitHere46","1905200splitHere46","sideBar.add(buttonBar, c);"
"4013splitHere46","1905447splitHere46","ClassNotFoundException"
"4014splitHere46","1905447splitHere46","import"
"4015splitHere46","1905447splitHere46","web.xml"
"4016splitHere46","1905481splitHere46","List<Object> objects = new ArrayList<Object>();<newline46mondego>"
"4017splitHere46","1905481splitHere46","public class Data {<newline46mondego>    private Double double1;<newline46mondego>    private Double double2;<newline46mondego>    private int int1;<newline46mondego>    private int int2;<newline46mondego>    private Calendar calendar;<newline46mondego>    // Add/generate getters and setters.<newline46mondego>}<newline46mondego>"
"4018splitHere46","1905514splitHere46","Document"
"4019splitHere46","1905514splitHere46","getDocument()"
"4020splitHere46","1905514splitHere46","StyledDocument"
"4021splitHere46","1905514splitHere46","setCharacterAttributes"
"4022splitHere46","1905519splitHere46","TableA.SIM1"
"4023splitHere46","1905519splitHere46","TableB.SIM2"
"4024splitHere46","1905519splitHere46","VARCHAR"
"4025splitHere46","1905519splitHere46","NUMERIC"
"4026splitHere46","1905519splitHere46","CREATE INDEX index_name1 ON TableA (SIM1);<newline46mondego>CREATE INDEX index_name2 ON TableB (SIM2);<newline46mondego>"
"4027splitHere46","1905519splitHere46","SIM1 = SIM2"
"4028splitHere46","1905558splitHere46","format.setLenient(false);<newline46mondego>"
"4029splitHere46","1905613splitHere46","executeUpdate()"
"4030splitHere46","1905613splitHere46","executeQuery()"
"4031splitHere46","1905613splitHere46","executeUpdate()"
"4032splitHere46","1905751splitHere46","/*"
"4033splitHere46","1905751splitHere46","/somethingElse.jsp"
"4034splitHere46","1905794splitHere46","CREATE INDEX index_name ON TableA (SIM1)<newline46mondego>"
"4035splitHere46","1905916splitHere46","getTableModel()"
"4036splitHere46","1905916splitHere46","columnSelectionChanged"
"4037splitHere46","1905916splitHere46","TableColumnModelListener"
"4038splitHere46","1905916splitHere46","getColumnModel()"
"4039splitHere46","1905916splitHere46","addColumnModelListener()"
"4040splitHere46","1905937splitHere46","JScrollPane pane = new JScrollPane();<newline46mondego>pane.setViewport(<newline46mondego>  new JViewport(){<newline46mondego>    /**<newline46mondego>     * An empty override implementation to prevent undesired scrolling on<newline46mondego>     * size changes of the client.<newline46mondego>     */<newline46mondego>     @Override<newline46mondego>     public void scrollRectToVisible(Rectangle rect){}<newline46mondego>  });<newline46mondego>"
"4041splitHere46","1906186splitHere46",",\n"
"4042splitHere46","1906301splitHere46","${version}"
"4043splitHere46","1906701splitHere46","Thread"
"4044splitHere46","1906744splitHere46","List<ByteArrayOutputStream>"
"4045splitHere46","1906744splitHere46","List<? extends OutputStream>"
"4046splitHere46","1906744splitHere46","FileOutputStream"
"4047splitHere46","1906744splitHere46","List<ByteArrayOutputStream>"
"4048splitHere46","1906744splitHere46","OutputStream"
"4049splitHere46","1906744splitHere46","List<OutputStream>"
"4050splitHere46","1906744splitHere46","List<? super ByteArrayOutputStream>"
"4051splitHere46","1906744splitHere46","ByteArrayOutputStream"
"4052splitHere46","1906861splitHere46","Integer"
"4053splitHere46","1906861splitHere46","byte"
"4054splitHere46","1907027splitHere46","-source release<newline46mondego>    Specifies the version of source code accepted. The following values for release are allowed:<newline46mondego>    1.3     the compiler does not support assertions, generics, or other language features introduced after JDK 1.3.<newline46mondego>    1.4     the compiler accepts code containing assertions, which were introduced in JDK 1.4.<newline46mondego>    1.5     the compiler accepts code containing generics and other language features introduced in JDK 5. The compiler defaults to the version 5 behavior if the -source flag is not used.<newline46mondego>    5   Synonym for 1.5<newline46mondego>"
"4055splitHere46","1907027splitHere46","-target version<newline46mondego>    Generate class files that will work on VMs with the specified version. The default is to generate class files to be compatible with the JDK 5 VM. When the -source 1.4 or lower option is used, the default target is 1.4. The versions supported by javac are:<newline46mondego>    1.1     Generate class files that will run on VMs in JDK 1.1 and later.<newline46mondego>    1.2     Generate class files that will run on VMs in JDK 1.2 and later, but will not run on 1.1 VMs.<newline46mondego>    1.3     Generate class files that will run on VMs in JDK 1.3 and later, but will not run on 1.1 or 1.2 VMs.<newline46mondego>    1.4     Generate class files that will run on VMs in JDK 1.4 and later, but will not run on 1.1, 1.2 or 1.3 VMs.<newline46mondego>    1.5     Generate class files that are compatible only with JDK 5 VMs.<newline46mondego>    5   Synonym for 1.5<newline46mondego>"
"4056splitHere46","1907060splitHere46","com.sun.image.codec.jpeg"
"4057splitHere46","1907060splitHere46","ImageIO"
"4058splitHere46","1907142splitHere46","java.util.Observable"
"4059splitHere46","1907142splitHere46","java.util.Observer"
"4060splitHere46","1907142splitHere46","Observer"
"4061splitHere46","1907142splitHere46","Observable"
"4062splitHere46","1907142splitHere46","SimpleObserver"
"4063splitHere46","1907142splitHere46","public class MyObservableClass {<newline46mondego><newline46mondego>    List<SimpleObserver> observers = new ArrayList<SimpleObserver>();<newline46mondego><newline46mondego>    /**<newline46mondego>     * Registers the observer<newline46mondego>     */<newline46mondego>    public void addObserver(SimpleObserver observer) {<newline46mondego>        observers.add(observer);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Removes the registered observer (to be nice towards the<newline46mondego>     * garbage collector).<newline46mondego>     */<newline46mondego>    public void removeObserver(SimpleObserver observer) {<newline46mondego>        observers.remove(observer);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Notifies the observers with the given data<newline46mondego>     */<newline46mondego>    private void notifyObservers(String data) {<newline46mondego>        for(SimpleObserver o : observers) {<newline46mondego>            o.onEvent(data);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void doSomething() {<newline46mondego>        // Do some stuff<newline46mondego>        String data = <doubleQuotes46>Waffles and pwnies<doubleQuotes46>;<newline46mondego>        // Notify the observers that something happened.<newline46mondego>        notifyObservers(data)<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4064splitHere46","1907142splitHere46","public interface SimpleObserver {<newline46mondego>    void onEvent(String data);<newline46mondego>}<newline46mondego>"
"4065splitHere46","1907161splitHere46","array[i++]"
"4066splitHere46","1907161splitHere46","array[i]"
"4067splitHere46","1907161splitHere46","i"
"4068splitHere46","1907161splitHere46","array[++i]"
"4069splitHere46","1907161splitHere46","i"
"4070splitHere46","1907161splitHere46","array[i]"
"4071splitHere46","1907161splitHere46","array[i+1]"
"4072splitHere46","1907161splitHere46","i"
"4073splitHere46","1907161splitHere46","i"
"4074splitHere46","1907161splitHere46","i"
"4075splitHere46","1907161splitHere46","i"
"4076splitHere46","1907301splitHere46","PreparedStatement"
"4077splitHere46","1907507splitHere46","web.xml"
"4078splitHere46","1907507splitHere46","servlet-mapping"
"4079splitHere46","1907507splitHere46","myservlet"
"4080splitHere46","1907507splitHere46","/foo"
"4081splitHere46","1907507splitHere46","<servlet><newline46mondego>  <servlet-name>myservlet</servlet-name><newline46mondego>  <servlet-class>com.stackoverflow.examples.MyServlet</servlet-class><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>  <servlet-name>myservlet</servlet-name><newline46mondego>  <url-pattern>/foo/*</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"4082splitHere46","1907507splitHere46","<a href=<doubleQuotes46>/foo/test.html<doubleQuotes46>>Click Me</a>"
"4083splitHere46","1907554splitHere46","public Session newSession(){<newline46mondego>    Session session = sessionFactory.openSession();<newline46mondego>    // this assumes you don't have criteria to set depending on the context<newline46mondego>    session.enableFilter(<doubleQuotes46>yourFilter<doubleQuotes46>);  <newline46mondego>    return session;<newline46mondego>}<newline46mondego>"
"4084splitHere46","1907554splitHere46","disableFilter(<doubleQuotes46>yourFilter<doubleQuotes46>);"
"4085splitHere46","1907808splitHere46","JFileChooser"
"4086splitHere46","1907808splitHere46","JFileChooser"
"4087splitHere46","1907892splitHere46","URL url = new URL(<doubleQuotes46>https://api.del.icio.us/v1/posts/suggest<doubleQuotes46>);<newline46mondego>	byte[] b64 = Base64.encodeBase64(<doubleQuotes46>username:pass<doubleQuotes46>.getBytes());<newline46mondego>	URLConnection conn = url.openConnection();<newline46mondego>	conn.setRequestProperty(<doubleQuotes46>Authorization<doubleQuotes46>, <doubleQuotes46>Basic <doubleQuotes46> + new String(b64));<newline46mondego>	BufferedReader r = new BufferedReader(new InputStreamReader(conn.getInputStream()));<newline46mondego>	while(r.ready()){<newline46mondego>		System.out.println(r.readLine());<newline46mondego>	}<newline46mondego>"
"4088splitHere46","1907940splitHere46","public void windowDeactivated(WindowEvent e) {<newline46mondego>		if(e.getOppositeWindow() == null){<newline46mondego>			// will be null when another application window gets activated, stop recording<newline46mondego>		}<newline46mondego>		for(Window w : appFrame.getOwnedWindows()){<newline46mondego>			if(w.equals(e.getOppositeWindow())){<newline46mondego>				// one of the windows owned by the frame is active, don't stop recording<newline46mondego>			}<newline46mondego>		}<newline46mondego><newline46mondego>	}<newline46mondego>"
"4089splitHere46","1908215splitHere46","crossdomain.xml"
"4090splitHere46","1908215splitHere46","crossdomain.xml"
"4091splitHere46","1908248splitHere46","String test1 = new String(turkish.getBytes());<newline46mondego>"
"4092splitHere46","1908248splitHere46","System.out.println(test1)"
"4093splitHere46","1908248splitHere46","String test2 = new String(turkish.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"4094splitHere46","1908248splitHere46","String test3 = new String(turkish.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"4095splitHere46","1908248splitHere46","new OutputStreamWriter(System.out, <doubleQuotes46>cp1252<doubleQuotes46>)"
"4096splitHere46","1908248splitHere46","ğşĞŞı"
"4097splitHere46","1908248splitHere46","üçÜÇ"
"4098splitHere46","1908368splitHere46","String getStaticProperty() { return staticProperty; }<newline46mondego>"
"4099splitHere46","1908368splitHere46","staticProperty"
"4100splitHere46","1908368splitHere46","super"
"4101splitHere46","1908372splitHere46","URL.openStream()"
"4102splitHere46","1908372splitHere46","OpenRulesEngine()"
"4103splitHere46","1908372splitHere46","File.createTempFile()"
"4104splitHere46","1908372splitHere46","InputStream"
"4105splitHere46","1908406splitHere46","<br />"
"4106splitHere46","1908406splitHere46","<af:outputText value=<doubleQuotes46>#{msg.TCW_SELECT_PART_ANALYSIS}<br />#{msg.TCW_SELECT_PART_ANALYSIS2}<doubleQuotes46> escape=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>"
"4107splitHere46","1908406splitHere46","escape=<doubleQuotes46>false<doubleQuotes46>"
"4108splitHere46","1908406splitHere46","<br />"
"4109splitHere46","1908406splitHere46","<br />"
"4110splitHere46","1908406splitHere46","<af:outputText value=<doubleQuotes46>#{msg.TCW_SELECT_PART_ANALYSIS}<doubleQuotes46> /><newline46mondego><br /><newline46mondego><af:outputText value=<doubleQuotes46>#{msg.TCW_SELECT_PART_ANALYSIS2}<doubleQuotes46> /><newline46mondego>"
"4111splitHere46","1908406splitHere46","<f:verbatim>"
"4112splitHere46","1908406splitHere46","<f:verbatim><br /></f:verbatim><newline46mondego>"
"4113splitHere46","1908419splitHere46","Calendar"
"4114splitHere46","1908419splitHere46","Calendar cal = Calendar.getInstance(); // locale-specific<newline46mondego>cal.setTime(dateObject);<newline46mondego>cal.set(Calendar.HOUR_OF_DAY, 0);<newline46mondego>cal.set(Calendar.MINUTE, 0);<newline46mondego>cal.set(Calendar.SECOND, 0);<newline46mondego>cal.set(Calendar.MILLISECOND, 0);<newline46mondego>long time = cal.getTimeInMillis();<newline46mondego>"
"4115splitHere46","1908447splitHere46","<f:setPropertyActionListener>"
"4116splitHere46","1908447splitHere46","menuItem"
"4117splitHere46","1908579splitHere46","public void executeMultiThread(int numThreads)<newline46mondego>   throws Exception<newline46mondego>{<newline46mondego>    List threads = new ArrayList();<newline46mondego><newline46mondego>    for (int i = 0; i < numThreads; i++)<newline46mondego>    {<newline46mondego>        Thread t = new Thread(new Runnable()<newline46mondego>        {<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                // do your work<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        // System.out.println(<doubleQuotes46>STARTING: <doubleQuotes46> + t);<newline46mondego>        t.start();<newline46mondego>        threads.add(t);<newline46mondego>    }<newline46mondego><newline46mondego>    for (int i = 0; i < threads.size(); i++)<newline46mondego>    {<newline46mondego>        // Big number to wait so this can be debugged<newline46mondego>        // System.out.println(<doubleQuotes46>JOINING: <doubleQuotes46> + threads.get(i));<newline46mondego>        ((Thread)threads.get(i)).join(1000000);<newline46mondego>    }<newline46mondego>"
"4118splitHere46","1908671splitHere46","`ID` int(10) unsigned NOT NULL AUTO_INCREMENT,<newline46mondego>"
"4119splitHere46","1908671splitHere46","query = (<doubleQuotes46>insert into birthtable (nameCol, familyCol, fatherNameCol, mNameCol, dOfBirthCol, pOfBirthCol, inputCol) VALUES(?,?,?,?,?,?,?)<doubleQuotes46>);<newline46mondego>        pstmt = (PreparedStatement) conn.prepareStatement(query);<newline46mondego>        pstmt.setString(1, name);<newline46mondego>        pstmt.setString(2, family);<newline46mondego>        pstmt.setString(3, fatherName);<newline46mondego>        pstmt.setString(4, mName);<newline46mondego>        pstmt.setString(5, dOfBirth);<newline46mondego>        pstmt.setString(6, pOfBirth);<newline46mondego>        // Method used to insert a stream of bytes<newline46mondego>        pstmt.setBinaryStream(7, input);<newline46mondego>"
"4120splitHere46","1908690splitHere46","char"
"4121splitHere46","1908690splitHere46","String"
"4122splitHere46","1908749splitHere46","ConfirmationBean"
"4123splitHere46","1908749splitHere46","faces-config.xml"
"4124splitHere46","1908749splitHere46","public String submit() {<newline46mondego>    ConfirmationBean conformationBean = new ConfirmationBean();<newline46mondego>    confirmationBean.setOutcome(<doubleQuotes46>outcome<doubleQuotes46>); // Set navigation case outcome where it should return back.<newline46mondego>    FacesContext.getCurrentInstance().getExternalContext().getRequestMap().put(<doubleQuotes46>confirmationBean<doubleQuotes46>, confirmationBean);<newline46mondego>    return <doubleQuotes46>confirm<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"4125splitHere46","1908749splitHere46","confirm.jsf"
"4126splitHere46","1908749splitHere46","<h:selectBooleanCheckbox value=<doubleQuotes46>#{confirmationBean.confirm}<doubleQuotes46> /><newline46mondego><h:inputHidden value=<doubleQuotes46>#{confirmationBean.outcome}<doubleQuotes46> /><newline46mondego><h:commandButton value=<doubleQuotes46>confirm<doubleQuotes46> action=<doubleQuotes46>#{confirmationBean.submit}<doubleQuotes46> /><newline46mondego>"
"4127splitHere46","1908749splitHere46","ConfirmationBean"
"4128splitHere46","1908749splitHere46","public String submit() {<newline46mondego>    if (confirm) {<newline46mondego>        return outcome;<newline46mondego>    } else {<newline46mondego>        return <doubleQuotes46>confirm<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4129splitHere46","1908749splitHere46","public String submit() {<newline46mondego>    return confirm ? outcome : <doubleQuotes46>confirm<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"4130splitHere46","1908842splitHere46","src"
"4131splitHere46","1909005splitHere46","getBean"
"4132splitHere46","1909006splitHere46","AbstractItem"
"4133splitHere46","1909006splitHere46","C"
"4134splitHere46","1909006splitHere46","public abstract class MyMotherClass<C extends AbstractItem> {<newline46mondego><newline46mondego>    private AbstractItem item;<newline46mondego><newline46mondego>    public void setItem(AbstractItem item) {<newline46mondego>    	this.item = item;<newline46mondego>    }<newline46mondego><newline46mondego>    public AbstractItem getItem() {<newline46mondego>    	return this.item;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4135splitHere46","1909006splitHere46","Map<String, MyMotherClass<?>> myCollection = new HashMap<String, MyMotherClass<?>>();<newline46mondego>Map<String, AbstractItem> myItems = new HashMap<String, AbstractItem>();<newline46mondego><newline46mondego>// fill the 2 collections<newline46mondego><newline46mondego>MyMotherClass<?> child = myCollection.get(<doubleQuotes46>key<doubleQuotes46>);<newline46mondego>child.setItem(myItems.get(<doubleQuotes46>key2<doubleQuotes46>));<newline46mondego>"
"4136splitHere46","1909006splitHere46","MyChildClass"
"4137splitHere46","1909006splitHere46","MyMotherClass#getItem()"
"4138splitHere46","1909006splitHere46","@Override<newline46mondego>public ConcreteItem getItem() {<newline46mondego>    return (ConcreteItem) super.getItem();<newline46mondego>}<newline46mondego>"
"4139splitHere46","1909006splitHere46","MyMotherClass"
"4140splitHere46","1909587splitHere46","myString.replaceAll(<doubleQuotes46>(.*://[^<>[:space:]]+[[:alnum:]/])<doubleQuotes46>, <doubleQuotes46><a href=\<doubleQuotes46>$1\<doubleQuotes46>>HereWasAnURL</a><doubleQuotes46>);<newline46mondego>"
"4141splitHere46","1909587splitHere46","()"
"4142splitHere46","1909587splitHere46","$1"
"4143splitHere46","1909587splitHere46","$1"
"4144splitHere46","1909667splitHere46","user_id"
"4145splitHere46","1909667splitHere46","varchar"
"4146splitHere46","1909667splitHere46","varchar2"
"4147splitHere46","1909667splitHere46","rtrim()"
"4148splitHere46","1910019splitHere46","black_black"
"4149splitHere46","1910085splitHere46","CachedRowSet"
"4150splitHere46","1910085splitHere46","Connection con = ...<newline46mondego>ResultSet rs = ...<newline46mondego><newline46mondego>CachedRowSet rowset = new CachedRowSetImpl();<newline46mondego>rowset.populate(rs);<newline46mondego><newline46mondego>con.close()<newline46mondego>"
"4151splitHere46","1910620splitHere46","/etc/ant.conf"
"4152splitHere46","1910620splitHere46","/usr/share/ant"
"4153splitHere46","1910679splitHere46","public class FirstVideo extends FirstCanvas {<newline46mondego>   ...<newline46mondego>}<newline46mondego><newline46mondego>public class SecondVideo extends SecondCanvas {<newline46mondego>   ...<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego>video = (something ? new FirstVideo() : new SecondVideo());<newline46mondego>"
"4154splitHere46","1910736splitHere46","byte[] buffer = new byte[4096];<newline46mondego>InputStream is = request.getInputStream();<newline46mondego>ByteArrayOutputStrem os = new ByteArrayOutputStream();<newline46mondego><newline46mondego>for (int read = is.read(buffer); read > 0; read = is.read(buffer)) {<newline46mondego>    os.write(buffer, 0, read);<newline46mondego>}<newline46mondego><newline46mondego>is.close();<newline46mondego>os.close();<newline46mondego><newline46mondego>String queryString = os.toString(<doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>       Map<String, String> map = new TreeMap<String, String>();<newline46mondego><newline46mondego>        if (queryString == null)<newline46mondego>                return map;<newline46mondego><newline46mondego>        // Split at & and ignore space/newline at the ends<newline46mondego>        String pairs[] = queryString.split(<doubleQuotes46>[&\\s]<doubleQuotes46>);<newline46mondego><newline46mondego>        for (String pair : pairs) {<newline46mondego>            int pos = pair.indexOf('=');<newline46mondego>            String key;<newline46mondego>            String value;<newline46mondego>            try {<newline46mondego>                    if (pos == -1) {<newline46mondego>                        key = URLDecoder.decode(pair, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>                        value = null;<newline46mondego>                    } else {<newline46mondego>                                        key = URLDecoder.decode(pair.substring(0, pos), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>                                value = URLDecoder.decode(pair.substring(pos+1, pair.length()), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>                                }<newline46mondego>            } catch (UnsupportedEncodingException e) {<newline46mondego>                                        // All JRE has UTF-8<newline46mondego>                                throw new IllegalStateException(<doubleQuotes46>No UTF-8<doubleQuotes46>);<newline46mondego>                        }<newline46mondego>            map.put(key, value);<newline46mondego>        }<newline46mondego><newline46mondego>        return map;<newline46mondego>"
"4155splitHere46","1910736splitHere46","map"
"4156splitHere46","1910972splitHere46","<definitions .... ><newline46mondego>    <import namespace=<doubleQuotes46>uri<doubleQuotes46> location=<doubleQuotes46>uri<doubleQuotes46>/> *<newline46mondego></definitions><newline46mondego>"
"4157splitHere46","1910972splitHere46","file://"
"4158splitHere46","1910972splitHere46","<wsdl:import namespace=<doubleQuotes46>discoveryinsurance.com/schemas/acordRq<doubleQuotes46> location=<doubleQuotes46>DicAcordQuoteRq.xsd<doubleQuotes46>/><newline46mondego><wsdl:import namespace=<doubleQuotes46>discoveryinsurance.com/schemas/acordRs<doubleQuotes46> location=<doubleQuotes46>DicAcordQuoteRs.xsd<doubleQuotes46>/><newline46mondego>"
"4159splitHere46","1911164splitHere46","*"
"4160splitHere46","1911288splitHere46","<? extends T>"
"4161splitHere46","1911288splitHere46","<? super T>"
"4162splitHere46","1911674splitHere46","frame.pack();<newline46mondego>"
"4163splitHere46","1911674splitHere46","<doubleQuotes46>Causes this Window to be sized to fit the preferred size and layouts<newline46mondego>of its subcomponents. If the window and/or its owner are not yet displayable,<newline46mondego>both are made displayable before calculating the preferred size. The Window<newline46mondego>will be validated after the preferredSize is calculated.<doubleQuotes46><newline46mondego>"
"4164splitHere46","1911675splitHere46","<project name=<doubleQuotes46>coverage-merge<doubleQuotes46> basedir=<doubleQuotes46>.<doubleQuotes46> default=<doubleQuotes46>all<doubleQuotes46>><newline46mondego>    <!-- directory that contains emma.jar and emma_ant.jar: --><newline46mondego>    <property name=<doubleQuotes46>emma.dir<doubleQuotes46> value=<doubleQuotes46>${basedir}/lib<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>coverage.dir<doubleQuotes46> location=<doubleQuotes46>${basedir}/coverage<doubleQuotes46>/><newline46mondego><newline46mondego>    <path id=<doubleQuotes46>emma.lib<doubleQuotes46>><newline46mondego>        <pathelement location=<doubleQuotes46>${emma.dir}/emma-teamcity-3.1.1.jar<doubleQuotes46>/><newline46mondego>        <pathelement location=<doubleQuotes46>${emma.dir}/emma_ant-2.0.5312.jar<doubleQuotes46>/><newline46mondego>    </path><newline46mondego><newline46mondego>    <taskdef resource=<doubleQuotes46>emma_ant.properties<doubleQuotes46> classpathref=<doubleQuotes46>emma.lib<doubleQuotes46>/><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>all<doubleQuotes46> depends=<doubleQuotes46>-report<doubleQuotes46>/><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>-report<doubleQuotes46>><newline46mondego>        <emma><newline46mondego>            <report sourcepath=<doubleQuotes46>${src.dir}<doubleQuotes46> sort=<doubleQuotes46>+block,+name,+method,+class<doubleQuotes46> <newline46mondego>                    metrics=<doubleQuotes46>method:70,block:80,line:80,class:100<doubleQuotes46>><newline46mondego>                <infileset dir=<doubleQuotes46>${coverage.dir}<doubleQuotes46> includes=<doubleQuotes46>**/*.em, **/*.ec<doubleQuotes46>/><newline46mondego><newline46mondego>                <!-- for every type of report desired, configure a nested<newline46mondego>                     element; various report parameters<newline46mondego>                     can be inherited from the parent <report><newline46mondego>                     and individually overridden for each report type:<newline46mondego>                --><newline46mondego>                <txt outfile=<doubleQuotes46>${coverage.dir}/coverage.txt<doubleQuotes46> depth=<doubleQuotes46>package<doubleQuotes46> <newline46mondego>                        columns=<doubleQuotes46>class,method,block,line,name<doubleQuotes46>/><newline46mondego>                <xml outfile=<doubleQuotes46>${coverage.dir}/coverage.xml<doubleQuotes46> depth=<doubleQuotes46>package<doubleQuotes46>/><newline46mondego>                <html outfile=<doubleQuotes46>${coverage.dir}/coverage.html<doubleQuotes46> depth=<doubleQuotes46>method<doubleQuotes46> <newline46mondego>                        columns=<doubleQuotes46>name,class,method,block,line<doubleQuotes46>/><newline46mondego>            </report><newline46mondego>        </emma><newline46mondego>    </target><newline46mondego></project><newline46mondego>"
"4165splitHere46","1911675splitHere46","metrics"
"4166splitHere46","1911675splitHere46","report"
"4167splitHere46","1911793splitHere46","Note: Embedded runtime is always used for dependency resolution, but does<newline46mondego>not use global settings when it is used to launch Maven.<newline46mondego>To learn more, visit the maven web page.<newline46mondego>"
"4168splitHere46","1911917splitHere46","String#matches()"
"4169splitHere46","1911917splitHere46","\w"
"4170splitHere46","1911917splitHere46","boolean valid = input.matches(<doubleQuotes46>\\w+<doubleQuotes46>);<newline46mondego>"
"4171splitHere46","1911917splitHere46","_"
"4172splitHere46","1911917splitHere46","[A-Za-z]+"
"4173splitHere46","1911917splitHere46","String clean = Normalizer.normalize(input, Form.NFD).replaceAll(<doubleQuotes46>\\p{InCombiningDiacriticalMarks}+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>boolean valid = clean.matches(<doubleQuotes46>\\w+<doubleQuotes46>);<newline46mondego>"
"4174splitHere46","1911917splitHere46","\p{L}"
"4175splitHere46","1911917splitHere46","boolean valid = input.matches(<doubleQuotes46>\\p{L}+<doubleQuotes46>);<newline46mondego>"
"4176splitHere46","1911972splitHere46","SimpleJdbcCall#withReturnValue()"
"4177splitHere46","1912173splitHere46","if (rst.getString(2).equals(name) && rst.getString(3).equals(family) && rst.getString(4).equals(fatherName) && rst.getString(5).equals(mName) && rst.getString(6).equals(dOfBirth) && rst.getString(7).equals(pOfBirth))<newline46mondego>"
"4178splitHere46","1912173splitHere46","String a;<newline46mondego>String b;<newline46mondego>String c;<newline46mondego>String d;<newline46mondego>String e;<newline46mondego>String f;<newline46mondego><newline46mondego>a = rst.getString(2);<newline46mondego>b = rst.getString(3);<newline46mondego>c = rst.getString(4);<newline46mondego>d = rst.getString(5);<newline46mondego>e = rst.getString(6);<newline46mondego>f = rst.getString(7);<newline46mondego><newline46mondego>if (!(a.equals(name))<newline46mondego>{<newline46mondego>    bool = false;<newline46mondego>}<newline46mondego><newline46mondego>if(!(b.equals(family))<newline46mondego>{<newline46mondego>    bool = false;<newline46mondego>}<newline46mondego><newline46mondego>if(!(c.equals(fatherName))<newline46mondego>{<newline46mondego>    bool = false;<newline46mondego>}<newline46mondego><newline46mondego>if(!(d.equals(mName))<newline46mondego>{<newline46mondego>    bool = false;<newline46mondego>}<newline46mondego><newline46mondego>if(!(e.equals(dOfBirth))<newline46mondego>{<newline46mondego>    bool = false;<newline46mondego>}<newline46mondego><newline46mondego>if(!(f.equals(pOfBirth))<newline46mondego>{<newline46mondego>    bool = false;<newline46mondego>}<newline46mondego>"
"4179splitHere46","1912173splitHere46","public class Person<newline46mondego>{<newline46mondego>    private final String firstName;<newline46mondego>    private final String lastName;<newline46mondego>    private final String middleName; // guessing that is what mName is...<newline46mondego>    private final String fathersName;<newline46mondego>    private final String dateOfBirth;<newline46mondego>    private final String placeOfBirth; // guessing that is what pOfBirth is...<newline46mondego><newline46mondego>    public Person(final String firstName,<newline46mondego>                  final String lastName,<newline46mondego>                  final String middleName,<newline46mondego>                  final String fathersName,<newline46mondego>                  final String dateOfBirth,<newline46mondego>                  final String placeOfBirth)<newline46mondego>    {<newline46mondego>        if(firstName == null)<newline46mondego>        {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>firstName cannot be null<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        if(lastName == null)<newline46mondego>        {<newline46mondego>            throw new IllegalArgumentException(<doubleQuotes46>lastName cannot be null<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        ... etc for all of the other arguments ...<newline46mondego><newline46mondego>        // I would never do the this.fristName thing.. .I would name the parameter different than the instance vairable...<newline46mondego>        this.firstName = firstName;<newline46mondego>        this.lastName  = lastName;<newline46mondego><newline46mondego>        ... etc for all of the other arguments ... <newline46mondego>    }<newline46mondego><newline46mondego>    public boolean equals(final Object o)<newline46mondego>    {<newline46mondego>        final Person person;<newline46mondego><newline46mondego>        if(!(o instanceof Person))<newline46mondego>        {<newline46mondego>            return (false);<newline46mondego>        }<newline46mondego><newline46mondego>        other = (Person)o;<newline46mondego><newline46mondego>        // the code you I put above + your code for checking if they are equal<newline46mondego>    }<newline46mondego><newline46mondego>    public int hashCode()<newline46mondego>    {<newline46mondego>        // this is probably good enough<newline46mondego>        return (firstName.hashCode() + lastName.hashCode());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4180splitHere46","1912173splitHere46","rst = stmt.executeQuery(<doubleQuotes46>SELECT * FROM birthtable<doubleQuotes46>);<newline46mondego><newline46mondego>    while (rst.next()) <newline46mondego>    {<newline46mondego>        final Person person;<newline46mondego><newline46mondego>        // I would use temp variables rather than passing in the result of getString directly...<newline46mondego>        person = new Person(rst.getString(2),<newline46mondego>                            rst.getString(3),<newline46mondego>                            rst.getString(4),<newline46mondego>                            rst.getString(5),<newline46mondego>                            rst.getString(6),<newline46mondego>                            rst.getString(7));<newline46mondego><newline46mondego>        // otherPerson would be passed into the method instead of the String you are passing now<newline46mondego>        bool = person.equals(otherPerson);<newline46mondego><newline46mondego>        ... etc ...<newline46mondego>    }<newline46mondego>"
"4181splitHere46","1912266splitHere46","JButton add = new JButton(<doubleQuotes46>Add<doubleQuotes46>);<newline46mondego>JButton cancel = new JButton(<doubleQuotes46>Cancel<doubleQuotes46>);<newline46mondego><newline46mondego>cancel.setEnabled(false);<newline46mondego><newline46mondego>// Then something along these lines...<newline46mondego>add.addActionListener(new ActionListener(){<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        cancel.setEnabled(true);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4182splitHere46","1912365splitHere46","<meta>"
"4183splitHere46","1912365splitHere46","<data>"
"4184splitHere46","1912365splitHere46","<myobject><newline46mondego>    <item>foo</item><newline46mondego>    <anotheritem>foo</anotheritem><newline46mondego>    <alist><newline46mondego>        <alistitem><newline46mondego>            <value1>v1</value1><newline46mondego>            <value2>v2</value2><newline46mondego>            <value3>v3</value3><newline46mondego>            ...<newline46mondego>        </alistitem><newline46mondego>        ...<newline46mondego>        <alistitem><newline46mondego>            <value1>v1</value1><newline46mondego>            <value2>v2</value2><newline46mondego>            <value3>v3</value3><newline46mondego>            ...<newline46mondego>        </alistitem><newline46mondego>    </alist><newline46mondego>    <anotherlist><newline46mondego>        <anotherlistitem><newline46mondego>            <valA>A</valA><newline46mondego>            <valB>B</valB><newline46mondego>            <valC>C</valC><newline46mondego>            ...<newline46mondego>        </anotherlistitem><newline46mondego>        ...<newline46mondego>    </anotherlist><newline46mondego></myobject><newline46mondego>"
"4185splitHere46","1912492splitHere46","interface"
"4186splitHere46","1912492splitHere46","public abstract class Stream { /* lots of code, some abstract methods */ }<newline46mondego>"
"4187splitHere46","1912492splitHere46","Stream"
"4188splitHere46","1912492splitHere46","abstract"
"4189splitHere46","1912492splitHere46","Stream"
"4190splitHere46","1912492splitHere46","Stream s = CreateStream(...); // I don't *care* what kind of stream<newline46mondego>s.Write(new byte[] {1,2,3,4,5});<newline46mondego>s.Close();<newline46mondego>"
"4191splitHere46","1913209splitHere46","property-ref"
"4192splitHere46","1913367splitHere46","lblDisplay.setIcon(images);<newline46mondego>        lblDisplay.paintImmediately(getBounds());<newline46mondego>        th.sleep(25);<newline46mondego>"
"4193splitHere46","1913545splitHere46","Class<?> clazz"
"4194splitHere46","1913575splitHere46","FileInputStream"
"4195splitHere46","1913575splitHere46","FileInputStream"
"4196splitHere46","1913575splitHere46","getResourceAsStream()"
"4197splitHere46","1913575splitHere46","FileInputStream"
"4198splitHere46","1913575splitHere46","InputStream"
"4199splitHere46","1913605splitHere46","String.getBytes"
"4200splitHere46","1913605splitHere46","Charset"
"4201splitHere46","1913605splitHere46","UnsupportedEncodingException"
"4202splitHere46","1913605splitHere46","getBytes"
"4203splitHere46","1913605splitHere46","String.getBytes"
"4204splitHere46","1913605splitHere46","byte[] data = Hex.decodeHex(text.toCharArray());<newline46mondego>"
"4205splitHere46","1913627splitHere46","trim"
"4206splitHere46","1913627splitHere46","char"
"4207splitHere46","1913627splitHere46","char"
"4208splitHere46","1913627splitHere46","varchar2"
"4209splitHere46","1913971splitHere46","cipher = Cipher.getInstance(<doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"4210splitHere46","1913971splitHere46","cipher.init(Cipher.ENCRYPT_MODE, skeySpec);<newline46mondego>"
"4211splitHere46","1913971splitHere46","encrypted = cipher.doFinal(str.getBytes())<newline46mondego>"
"4212splitHere46","1914003splitHere46","javax.xml.ws.etc"
"4213splitHere46","1914003splitHere46","com.sun.etc.."
"4214splitHere46","1914122splitHere46","String test = <doubleQuotes46>hello << world < blah < blah << blah<doubleQuotes46>;<newline46mondego><newline46mondego>String _test = test.replaceAll(<doubleQuotes46>(^|[^<])<([^<]|$)<doubleQuotes46>, <doubleQuotes46>$1X$2<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(_test);<newline46mondego>"
"4215splitHere46","1914122splitHere46","hello << world X blah X blah << blah<newline46mondego>"
"4216splitHere46","1914219splitHere46","SortedMap"
"4217splitHere46","1914393splitHere46","addStyleNames"
"4218splitHere46","1914393splitHere46","<g:DecoratorPanel addStyleNames=<doubleQuotes46>{style.myCssClass}<doubleQuotes46>><newline46mondego>"
"4219splitHere46","1914393splitHere46","grep"
"4220splitHere46","1914393splitHere46","addStyleNames"
"4221splitHere46","1914393splitHere46","addStyleNames"
"4222splitHere46","1914486splitHere46","nullable"
"4223splitHere46","1914486splitHere46","//not nullable<newline46mondego>@Column(nullable = false)<newline46mondego>private String prop1;<newline46mondego><newline46mondego>//nullable<newline46mondego>@Column(nullable = true)<newline46mondego>private String prop2;<newline46mondego><newline46mondego>//default = nullable<newline46mondego>@Column<newline46mondego>private String prop3;<newline46mondego>"
"4224splitHere46","1914518splitHere46","java -cp a.jar:b.jar:c.jar:./src MainClass<newline46mondego>"
"4225splitHere46","1914518splitHere46","java -cp ./src:* MainClass<newline46mondego>"
"4226splitHere46","1914518splitHere46","java -cp ./src:./jars/* MainClass<newline46mondego>"
"4227splitHere46","1914518splitHere46","java -cp ./src:./jars/* com.mypackage.MainClass<newline46mondego>"
"4228splitHere46","1914540splitHere46","str.split(<doubleQuotes46>[\\W\\d_]+<doubleQuotes46>);"
"4229splitHere46","1914665splitHere46","Path dir = oldFile.getParent();        <newline46mondego>    Path fn = oldFile.getFileSystem().getPath(newNameString);<newline46mondego>    Path target = (dir == null) ? fn : dir.resolve(fn);        <newline46mondego>    oldFile.moveTo(target);<newline46mondego>"
"4230splitHere46","1914722splitHere46","String data = null;<newline46mondego>StringBuffer dataBuffer = new StringBuffer();<newline46mondego>while ((data = stdInput.readLine()) != null) {<newline46mondego>    logger.info(<doubleQuotes46>Data:<doubleQuotes46>+data);<newline46mondego>    dataBuffer.append(data).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>}<newline46mondego>String completeData = dataBuffer.toString();<newline46mondego>"
"4231splitHere46","1915085splitHere46","(?:\{sup\s)?(\d)(?=\d*})}?<newline46mondego>"
"4232splitHere46","1915085splitHere46","{sup $1}<newline46mondego>"
"4233splitHere46","1915085splitHere46","(?:                            | start non-capturing group 1<newline46mondego>  \{                           |   match the character '{'<newline46mondego>  sup                          |   match the substring: <doubleQuotes46>sup<doubleQuotes46><newline46mondego>  \s                           |   match any white space character<newline46mondego>)                              | end non-capturing group 1<newline46mondego>?                              | ...and repeat it once or not at all<newline46mondego>(                              | start group 1<newline46mondego>  \d                           |   match any character in the range 0..9<newline46mondego>)                              | end group 1<newline46mondego>(?=                            | start positive look ahead<newline46mondego>  \d                           |   match any character in the range 0..9<newline46mondego>  *                            |   ...and repeat it zero or more times<newline46mondego>  }                            |   match the substring: <doubleQuotes46>}<doubleQuotes46><newline46mondego>)                              | stop negative look ahead<newline46mondego>}                              | match the substring: <doubleQuotes46>}<doubleQuotes46><newline46mondego>?                              | ...and repeat it once or not at all<newline46mondego>"
"4234splitHere46","1915085splitHere46","}"
"4235splitHere46","1915085splitHere46","{sup"
"4236splitHere46","1915085splitHere46","}"
"4237splitHere46","1915085splitHere46","(?:\{sup\s|\G)(\d)(?=\d*})}?<newline46mondego>"
"4238splitHere46","1915085splitHere46","<doubleQuotes46>set={123}<doubleQuotes46>"
"4239splitHere46","1915085splitHere46","\G"
"4240splitHere46","1915127splitHere46","HttpSession.getMaxInactiveInterval"
"4241splitHere46","1915197splitHere46","Statement#getGeneratedKeys()"
"4242splitHere46","1915197splitHere46","Statement"
"4243splitHere46","1915197splitHere46","INSERT"
"4244splitHere46","1915197splitHere46","Statement.RETURN_GENERATED_KEYS"
"4245splitHere46","1915197splitHere46","public void create(User user) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego>    ResultSet generatedKeys = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(SQL_INSERT, Statement.RETURN_GENERATED_KEYS);<newline46mondego>        statement.setString(1, user.getName());<newline46mondego>        statement.setString(2, user.getPassword());<newline46mondego>        statement.setString(3, user.getEmail());<newline46mondego>        // ...<newline46mondego><newline46mondego>        int affectedRows = statement.executeUpdate();<newline46mondego>        if (affectedRows == 0) {<newline46mondego>            throw new SQLException(<doubleQuotes46>Creating user failed, no rows affected.<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        generatedKeys = statement.getGeneratedKeys();<newline46mondego>        if (generatedKeys.next()) {<newline46mondego>            user.setId(generatedKeys.getLong(1));<newline46mondego>        } else {<newline46mondego>            throw new SQLException(<doubleQuotes46>Creating user failed, no generated key obtained.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (generatedKeys != null) try { generatedKeys.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4246splitHere46","1915197splitHere46","CallableStatement"
"4247splitHere46","1915197splitHere46","RETURNING"
"4248splitHere46","1915197splitHere46","SELECT CURRVAL(sequencename)"
"4249splitHere46","1915197splitHere46","INSERT"
"4250splitHere46","1915344splitHere46","byte[] data = ...<newline46mondego>MagicMatch match = Magic.getMagicMatch(data);<newline46mondego>String mimeType = match.getMimeType();<newline46mondego>"
"4251splitHere46","1915785splitHere46","5"
"4252splitHere46","1915785splitHere46","Integer"
"4253splitHere46","1915785splitHere46","Integer"
"4254splitHere46","1915785splitHere46","Number"
"4255splitHere46","1916124splitHere46","public final class SQLUtil {<newline46mondego>    private static DataSource dataSource;<newline46mondego>    // ..<newline46mondego><newline46mondego>    static {<newline46mondego>        try {<newline46mondego>            dataSource = (DataSource) new InitialContext().lookup(name);<newline46mondego>        } catch (NamingException e) {<newline46mondego>            throw new ExceptionInInitializerError(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static Connection getConnection() throws SQLException {  <newline46mondego>        return dataSource.getConnection();             <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4256splitHere46","1916124splitHere46","ExceptionInInitializerError"
"4257splitHere46","1916124splitHere46","NullPointerException"
"4258splitHere46","1916162splitHere46","public long getDayStartByMath(long date) {<newline46mondego>  // 1000*60*60*24<newline46mondego>  long fullDayPart = 86400000;<newline46mondego>  return date - date % fullDayPart + (fullDayPart >> 1);<newline46mondego> }<newline46mondego>"
"4259splitHere46","1916162splitHere46","public long getDayStartByCalendar(long date) {<newline46mondego>  Calendar c = Calendar.getInstance();<newline46mondego>  c.setTime(new Date(date));<newline46mondego>  c.set(Calendar.AM_PM, Calendar.AM);<newline46mondego>  c.set(Calendar.HOUR, 12);<newline46mondego>  c.set(Calendar.MINUTE, 0);<newline46mondego>  c.set(Calendar.SECOND, 0);<newline46mondego>  c.set(Calendar.MILLISECOND, 0);<newline46mondego>  return c.getTime().getTime();<newline46mondego> }<newline46mondego>"
"4260splitHere46","1916485splitHere46","1"
"4261splitHere46","1916485splitHere46","final CountDownLatch barrier = new CountDownLatch(1);<newline46mondego>"
"4262splitHere46","1916485splitHere46","barrier.await();<newline46mondego>"
"4263splitHere46","1916485splitHere46","barrier.countDown();<newline46mondego>"
"4264splitHere46","1916581splitHere46","LocalSessionFactoryBean"
"4265splitHere46","1916581splitHere46","mappingResources"
"4266splitHere46","1916581splitHere46","mappingLocations"
"4267splitHere46","1916581splitHere46","mappingJarLocations"
"4268splitHere46","1916581splitHere46","mappingDirectoryLocations"
"4269splitHere46","1916581splitHere46","mappingDirectoryLocations"
"4270splitHere46","1916581splitHere46","<property name=<doubleQuotes46>mappingDirectoryLocations<doubleQuotes46>><newline46mondego>      <list><newline46mondego>        <value><newline46mondego>          com/…/domain/<newline46mondego>        </value><newline46mondego>      </list><newline46mondego></property><newline46mondego>"
"4271splitHere46","1916908splitHere46","public byte[] ConvertToDsaSignatureToJavaEncoding(byte[] dsa){<newline46mondego>  if(dsa.Length!=40)<newline46mondego>    throw new ArgumentException(<doubleQuotes46>dsa<doubleQuotes46>, <doubleQuotes46>DSA signature should always be 40 bytes long<doubleQuotes46>);<newline46mondego>  // Split into r and s.<newline46mondego>  byte[] r = new byte[20];<newline46mondego>  Array.Copy(dsa, 0, r, 0, 20);<newline46mondego>  byte[] s = new byte[20];<newline46mondego>  Array.Copy(dsa, 20, s, 0, 20);<newline46mondego><newline46mondego>  // Convert to complement-2<newline46mondego>  byte[] complementTwoR = ToComplementTwo(r);<newline46mondego>  byte[] complementTwoS = ToComplementTwo(s);<newline46mondego><newline46mondego>  // Build the result<newline46mondego>  byte[] res = new byte[complementTwoR.Length + complementTwoS.Length + 6];<newline46mondego>  // Sequence{<newline46mondego>  res[0] = 0x30;<newline46mondego>  res[1] = (byte) (complementTwoR.Length + complementTwoS.Length + 4);<newline46mondego>  // Integer (R)<newline46mondego>  res[2] = 0x02;<newline46mondego>  res[3] = (byte) complementTwoR.Length;<newline46mondego>  Array.Copy(complementTwoR, 0, res, 4, complementTwoR.Length);<newline46mondego>  // Integer (S)<newline46mondego>  res[complementTwoR.Length + 4] = 0x02;<newline46mondego>  res[complementTwoR.Length + 5] = (byte) complementTwoS.Length;<newline46mondego>  Array.Copy(complementTwoS, 0, res, complementTwoR.Length + 6, complementTwoS.Length);<newline46mondego><newline46mondego>  return res;<newline46mondego>}<newline46mondego><newline46mondego>public byte[] ToComplementTwo(byte[] d){<newline46mondego>// Ensure the top-bit is zero, otherwise remove unneeded zeroes<newline46mondego>// - Find non-zero byte<newline46mondego>int i = 0;<newline46mondego>while (i < d.Length && d[i] == 0) i++;<newline46mondego>// - Do we need an extra byte<newline46mondego>int extraByte = (d[i] & 0x80) == 1 ? 1 : 0;<newline46mondego>// - Build the result<newline46mondego>byte[] res = new byte[d.Length-i+extraByte];<newline46mondego>Array.Copy(d, i, res, extraByte, d.Length-i);<newline46mondego>return res;<newline46mondego>"
"4272splitHere46","1917168splitHere46","execute"
"4273splitHere46","1917168splitHere46","final AtomicInteger messagesReceived = new AtomicInteger(0);<newline46mondego><newline46mondego>// ThreadedListenerAdapter is the class that I'm testing <newline46mondego>// It's not germane to the question other than as a target for a thread pool.<newline46mondego>final ThreadedListenerAdapter<Integer> adapter = <newline46mondego>    new ThreadedListenerAdapter<Integer>(listener);<newline46mondego>int taskCount = 10;<newline46mondego><newline46mondego>List<FutureTask<Integer>> taskList = new ArrayList<FutureTask<Integer>>();<newline46mondego><newline46mondego>for (int whichTask = 0; whichTask < taskCount; whichTask++) {<newline46mondego>    FutureTask<Integer> futureTask = <newline46mondego>        new FutureTask<Integer>(new Callable<Integer>() {<newline46mondego>        @Override<newline46mondego>        public Integer call() throws Exception {<newline46mondego>            // Does useful work that affects messagesSent<newline46mondego>            return messagesSent;<newline46mondego>        }<newline46mondego>    });<newline46mondego>    taskList.add(futureTask);<newline46mondego>}<newline46mondego><newline46mondego>for (FutureTask<Integer> task : taskList) {<newline46mondego>    LocalExecutorService.getExecutorService().submit(task);<newline46mondego>}<newline46mondego><newline46mondego>for (FutureTask<Integer> task : taskList) {<newline46mondego>    int result = 0;<newline46mondego>    try {<newline46mondego>        result = task.get();<newline46mondego>    } catch (InterruptedException ex) {<newline46mondego>        Thread.currentThread().interrupt();<newline46mondego>    } catch (ExecutionException ex) {<newline46mondego>        throw new RuntimeException(<doubleQuotes46>ExecutionException in task <doubleQuotes46> + task, ex);<newline46mondego>    }<newline46mondego>    assertEquals(maxMessages, result);<newline46mondego>}<newline46mondego><newline46mondego>int messagesSent = taskCount * maxMessages;<newline46mondego>assertEquals(messagesSent, messagesReceived.intValue());<newline46mondego>"
"4274splitHere46","1917169splitHere46","equals"
"4275splitHere46","1917169splitHere46","AbstractList"
"4276splitHere46","1917169splitHere46","public boolean equals(Object o) {<newline46mondego>if (o == this)<newline46mondego>    return true;<newline46mondego>if (!(o instanceof List))<newline46mondego>    return false;<newline46mondego><newline46mondego>ListIterator<E> e1 = listIterator();<newline46mondego>ListIterator e2 = ((List) o).listIterator();<newline46mondego>while(e1.hasNext() && e2.hasNext()) {<newline46mondego>    E o1 = e1.next();<newline46mondego>    Object o2 = e2.next();<newline46mondego>    if (!(o1==null ? o2==null : o1.equals(o2)))<newline46mondego>	return false;<newline46mondego>}<newline46mondego>return !(e1.hasNext() || e2.hasNext());<newline46mondego>}<newline46mondego>"
"4277splitHere46","1917169splitHere46","List"
"4278splitHere46","1917352splitHere46","Imports iTextSharp.text<newline46mondego>Imports iTextSharp.text.pdf<newline46mondego><newline46mondego>Module Module1<newline46mondego><newline46mondego>    Sub Main()<newline46mondego><newline46mondego>        Dim table As New PdfPTable(3)<newline46mondego>        table.AddCell(<doubleQuotes46>Cell 1<doubleQuotes46>)<newline46mondego>        Dim f As New Font(Font.HELVETICA, 8.0F, Font.NORMAL, Color.YELLOW)<newline46mondego>        Dim ph As New Phrase(<doubleQuotes46>Cell 2<doubleQuotes46>, f)<newline46mondego>        Dim cell As New PdfPCell(ph)<newline46mondego><newline46mondego>    End Sub<newline46mondego><newline46mondego>End Module<newline46mondego>"
"4279splitHere46","1917410splitHere46","System.out.println()"
"4280splitHere46","1917462splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class FlowLayoutInvisible extends JFrame<newline46mondego>    implements ActionListener<newline46mondego>{<newline46mondego>    JPanel north;<newline46mondego>    int i;<newline46mondego><newline46mondego>    public FlowLayoutInvisible()<newline46mondego>    {<newline46mondego><newline46mondego>    	north = new JPanel();<newline46mondego><newline46mondego>    	for (int i = 0; i < 5; i++)<newline46mondego>    	{<newline46mondego>    		JButton button = new JButton(<doubleQuotes46>North - <doubleQuotes46> + i);<newline46mondego>    		button.addActionListener(this);<newline46mondego>    		north.add(button);<newline46mondego>    	}<newline46mondego><newline46mondego>    	getContentPane().add(north, BorderLayout.NORTH);<newline46mondego>        }<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e)<newline46mondego>    {<newline46mondego>    	Component c = (Component)e.getSource();<newline46mondego>    	c.setVisible(false);<newline46mondego>	((JPanel)c.getParent()).revalidate();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>    	FlowLayoutInvisible frame = new FlowLayoutInvisible();<newline46mondego>    	frame.setDefaultCloseOperation( EXIT_ON_CLOSE );<newline46mondego>    	frame.pack();<newline46mondego>    	frame.setLocationRelativeTo( null );<newline46mondego>    	frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4281splitHere46","1917569splitHere46","String"
"4282splitHere46","1917569splitHere46","byte[]"
"4283splitHere46","1917569splitHere46","getBytes()"
"4284splitHere46","1917569splitHere46","DocumentBuilder"
"4285splitHere46","1917569splitHere46","DocumentBuilderFactory"
"4286splitHere46","1917569splitHere46","parse()"
"4287splitHere46","1917569splitHere46","ByteArrayOutputStream"
"4288splitHere46","1917593splitHere46","public static Object showInputDialog(Component parentComponent,<newline46mondego>                                     Object message,<newline46mondego>                                     String title,<newline46mondego>                                     int messageType,<newline46mondego>                                     Icon icon,<newline46mondego>                                     Object[] selectionValues,<newline46mondego>                                     Object initialSelectionValue)<newline46mondego>"
"4289splitHere46","1917826splitHere46","deploy:deploy-file"
"4290splitHere46","1917826splitHere46","deploy:deploy-file"
"4291splitHere46","1917826splitHere46","mvn deploy:deploy-file -Durl=file://C:\m2-repo \<newline46mondego>                       -DrepositoryId=some.id \<newline46mondego>                       -Dfile=your-artifact-1.0.jar \<newline46mondego>                       [-DpomFile=your-pom.xml] \<newline46mondego>                       [-DgroupId=org.some.group] \<newline46mondego>                       [-DartifactId=your-artifact] \<newline46mondego>                       [-Dversion=1.0] \<newline46mondego>                       [-Dpackaging=jar] \<newline46mondego>                       [-Dclassifier=test] \<newline46mondego>                       [-DgeneratePom=true] \<newline46mondego>                       [-DgeneratePom.description=<doubleQuotes46>My Project Description<doubleQuotes46>] \<newline46mondego>                       [-DrepositoryLayout=legacy] \<newline46mondego>                       [-DuniqueVersion=false]<newline46mondego>"
"4292splitHere46","1917826splitHere46","<id>"
"4293splitHere46","1917826splitHere46","<server>"
"4294splitHere46","1917826splitHere46","settings.xml"
"4295splitHere46","1917826splitHere46","file://"
"4296splitHere46","1917826splitHere46","scp://"
"4297splitHere46","1917826splitHere46","mvn deploy:deploy-file -DgroupId=my.group -DartifactId=myartifact -Dversion=1.0 \<newline46mondego>  -DgeneratePom=true \<newline46mondego>  -Dpackaging=jar \<newline46mondego>  -Dfile=custom.jar \<newline46mondego>  -DrepositoryId=some.id \<newline46mondego>  -Durl=scp://REMOTEMACHINE/PATH/TO/WEB_ROOT/maven2_repository<newline46mondego>"
"4298splitHere46","1917861splitHere46","public class CustomList extends ListActivity {<newline46mondego>private LayoutInflater mInflater;<newline46mondego>private Vector<RowData> data;<newline46mondego><newline46mondego>/** Called when the activity is first created. */<newline46mondego>@Override<newline46mondego>public void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.main);        <newline46mondego>    mInflater = (LayoutInflater) getSystemService(Activity.LAYOUT_INFLATER_SERVICE);<newline46mondego>    data = new Vector<RowData>();<newline46mondego>    RowData rd = new RowData(<doubleQuotes46>item1<doubleQuotes46>, <doubleQuotes46>description1<doubleQuotes46>);<newline46mondego>    data.add(rd);<newline46mondego>    rd = new RowData(<doubleQuotes46>item2<doubleQuotes46>, <doubleQuotes46>description2<doubleQuotes46>);<newline46mondego>    data.add(rd);<newline46mondego>    rd = new RowData(<doubleQuotes46>item2<doubleQuotes46>, <doubleQuotes46>description3<doubleQuotes46>);<newline46mondego>    data.add(rd);<newline46mondego><newline46mondego>    CustomAdapter adapter = new CustomAdapter(this, R.layout.custom_row,R.id.item, data);<newline46mondego>    setListAdapter(adapter);        <newline46mondego>    getListView().setTextFilterEnabled(true);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public void onListItemClick(ListView parent, View v, int position, long id) {<newline46mondego>    CustomAdapter adapter = (CustomAdapter) parent.getAdapter();<newline46mondego>	RowData row = adapter.getItem(position);		<newline46mondego>    Builder builder = new AlertDialog.Builder(this);<newline46mondego>    builder.setTitle(row.mItem); <newline46mondego>    builder.setMessage(row.mDescription + <doubleQuotes46> -> <doubleQuotes46> + position );<newline46mondego>    builder.setPositiveButton(<doubleQuotes46>ok<doubleQuotes46>, null);<newline46mondego>    builder.show();<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Data type used for custom adapter. Single item of the adapter.      <newline46mondego> */<newline46mondego>private class RowData {<newline46mondego>    protected String mItem;<newline46mondego>	protected String mDescription;<newline46mondego><newline46mondego>	RowData(String item, String description){<newline46mondego>    	mItem = item;<newline46mondego>    	mDescription = description;    		<newline46mondego>    }<newline46mondego><newline46mondego>	@Override<newline46mondego>	public String toString() {<newline46mondego>		return mItem + <doubleQuotes46> <doubleQuotes46> +  mDescription;<newline46mondego>	}<newline46mondego>}<newline46mondego><newline46mondego>private class CustomAdapter extends ArrayAdapter<RowData> {<newline46mondego><newline46mondego>	public CustomAdapter(Context context, int resource,<newline46mondego>			int textViewResourceId, List<RowData> objects) {<newline46mondego>		super(context, resource, textViewResourceId, objects);<newline46mondego><newline46mondego>	}<newline46mondego><newline46mondego>	@Override<newline46mondego>	public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>		ViewHolder holder = null;<newline46mondego><newline46mondego>		//widgets displayed by each item in your list<newline46mondego>		TextView item = null;<newline46mondego>		TextView description = null;<newline46mondego><newline46mondego>		//data from your adapter<newline46mondego>		RowData rowData= getItem(position);<newline46mondego><newline46mondego><newline46mondego>		//we want to reuse already constructed row views...<newline46mondego>		if(null == convertView){<newline46mondego>			convertView = mInflater.inflate(R.layout.custom_row, null);<newline46mondego>			holder = new ViewHolder(convertView);<newline46mondego>			convertView.setTag(holder);<newline46mondego>		}<newline46mondego>		// <newline46mondego>		holder = (ViewHolder) convertView.getTag();<newline46mondego>		item = holder.getItem();<newline46mondego>		item.setText(rowData.mItem);<newline46mondego><newline46mondego>		description = holder.getDescription();		<newline46mondego>		description.setText(rowData.mDescription);<newline46mondego><newline46mondego>		return convertView;<newline46mondego>	}<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Wrapper for row data.<newline46mondego> *<newline46mondego> */<newline46mondego>private class ViewHolder {      <newline46mondego>    private View mRow;<newline46mondego>    private TextView description = null;<newline46mondego>    private TextView item = null;<newline46mondego><newline46mondego>	public ViewHolder(View row) {<newline46mondego>    	mRow = row;<newline46mondego>	}<newline46mondego><newline46mondego>	public TextView getDescription() {<newline46mondego>		if(null == description){<newline46mondego>			description = (TextView) mRow.findViewById(R.id.description);<newline46mondego>		}<newline46mondego>		return description;<newline46mondego>	}<newline46mondego><newline46mondego>	public TextView getItem() {<newline46mondego>		if(null == item){<newline46mondego>			item = (TextView) mRow.findViewById(R.id.item);<newline46mondego>		}<newline46mondego>		return item;<newline46mondego>	}    	<newline46mondego>}<newline46mondego>"
"4299splitHere46","1917902splitHere46","public class A {<newline46mondego><newline46mondego>  private final String g;<newline46mondego>  private int x;<newline46mondego><newline46mondego>  public A(String g) {<newline46mondego>    this.g = g;<newline46mondego>    x_$eq(x() + g.length());<newline46mondego>    x = 0;<newline46mondego>  }<newline46mondego><newline46mondego>  public void x_$eq(int arg0) {<newline46mondego>    x = arg0;<newline46mondego>  }<newline46mondego><newline46mondego>  public int x() {<newline46mondego>    return x;<newline46mondego>  }<newline46mondego><newline46mondego>  public String g() {<newline46mondego>    return g;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4300splitHere46","1918011splitHere46","button.setBorder(null);<newline46mondego>"
"4301splitHere46","1918155splitHere46","Properties"
"4302splitHere46","1918155splitHere46","Validation"
"4303splitHere46","1918155splitHere46","Window"
"4304splitHere46","1918155splitHere46","Preferences"
"4305splitHere46","1918155splitHere46","Validation"
"4306splitHere46","1918210splitHere46","int x = 2;<newline46mondego>int y = 2;<newline46mondego>while (y > 0)<newline46mondego>{<newline46mondego>   System.out.println(x + <doubleQuotes46> <doubleQuotes46>+ y + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>   x++;<newline46mondego>   y--; // or --y;<newline46mondego>}<newline46mondego>"
"4307splitHere46","1918210splitHere46","for (ForInit ; Expression ; ForUpdate)<newline46mondego>    forLoopBody();<newline46mondego>"
"4308splitHere46","1918210splitHere46","{<newline46mondego>    ForInit;<newline46mondego>    while (Expression) {<newline46mondego>        forLoopBody();<newline46mondego>        ForUpdate;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4309splitHere46","1918271splitHere46","book"
"4310splitHere46","1918271splitHere46","<h:dataTable value=<doubleQuotes46>#{homePage.books}<doubleQuotes46><newline46mondego>    var=<doubleQuotes46>book<doubleQuotes46><newline46mondego>    styleClass=<doubleQuotes46>homeTable<doubleQuotes46><newline46mondego>    rowClasses=<doubleQuotes46>evenColumn,oddColumn<doubleQuotes46>><newline46mondego>"
"4311splitHere46","1918271splitHere46","book"
"4312splitHere46","1918271splitHere46","<managed-bean><newline46mondego>    <managed-bean-name>book</managed-bean-name><newline46mondego>    <managed-bean-class>omitted.for.anonymity.beans.Book</managed-bean-class><newline46mondego>    <managed-bean-scope>session</managed-bean-scope><newline46mondego></managed-bean><newline46mondego>"
"4313splitHere46","1918271splitHere46","var"
"4314splitHere46","1918271splitHere46","#{requestScope.book.title}"
"4315splitHere46","1918271splitHere46","<!DOCTYPE faces-config PUBLIC<newline46mondego>  <doubleQuotes46>-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN<doubleQuotes46><newline46mondego>  <doubleQuotes46>http://java.sun.com/dtd/web-facesconfig_1_1.dtd<doubleQuotes46>><newline46mondego>"
"4316splitHere46","1918311splitHere46","Console c = System.console();<newline46mondego>"
"4317splitHere46","1918311splitHere46","c"
"4318splitHere46","1918564splitHere46","content: bind <doubleQuotes46>{consecutive.toString()} in a row!<doubleQuotes46><newline46mondego>"
"4319splitHere46","1918666splitHere46","x"
"4320splitHere46","1918666splitHere46","x"
"4321splitHere46","1918666splitHere46","B"
"4322splitHere46","1918666splitHere46","A.x"
"4323splitHere46","1918666splitHere46","B.x"
"4324splitHere46","1918666splitHere46","A"
"4325splitHere46","1918666splitHere46","getObject"
"4326splitHere46","1918666splitHere46","A"
"4327splitHere46","1918666splitHere46","A"
"4328splitHere46","1918666splitHere46","B"
"4329splitHere46","1918666splitHere46","class A  {<newline46mondego>    public String print() {<newline46mondego>        return <doubleQuotes46>A<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class B extends A {<newline46mondego>    public String print() {<newline46mondego>        return <doubleQuotes46>B<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4330splitHere46","1918666splitHere46","System.out.println(c1.getObject().print());<newline46mondego>"
"4331splitHere46","1918704splitHere46","String[] codes = new String[data.length];<newline46mondego>for (int r = 0; r < data.length; r++) {<newline46mondego>    codes[r] = data[r][0];<newline46mondego>}<newline46mondego>"
"4332splitHere46","1918707splitHere46","transient"
"4333splitHere46","1918707splitHere46","MTRandom"
"4334splitHere46","1918707splitHere46","java.util.Random"
"4335splitHere46","1918707splitHere46","MTRandom"
"4336splitHere46","1918707splitHere46","Random"
"4337splitHere46","1918707splitHere46","transient"
"4338splitHere46","1918756splitHere46","apt-get"
"4339splitHere46","1918756splitHere46","/opt/apache-maven-2.2.1"
"4340splitHere46","1918756splitHere46","/opt/maven"
"4341splitHere46","1918756splitHere46","export M2_HOME=/opt/maven"
"4342splitHere46","1918756splitHere46","~/.profile"
"4343splitHere46","1918756splitHere46","$M2_HOME/bin"
"4344splitHere46","1918756splitHere46","PATH"
"4345splitHere46","1918756splitHere46","~/.profile"
"4346splitHere46","1918998splitHere46","toString()"
"4347splitHere46","1918998splitHere46","toString()"
"4348splitHere46","1918998splitHere46","a"
"4349splitHere46","1918998splitHere46","for (ExampleClass e: listA){<newline46mondego>    listB.add(e.toString());<newline46mondego>}<newline46mondego><newline46mondego>// and in ExampleClass<newline46mondego>public String toString(){<newline46mondego>   return a;<newline46mondego>}<newline46mondego>"
"4350splitHere46","1918998splitHere46","toString()"
"4351splitHere46","1918998splitHere46","getA()"
"4352splitHere46","1918998splitHere46","toString()"
"4353splitHere46","1919074splitHere46","RandomAccessFile.read()"
"4354splitHere46","1919074splitHere46","private byte[] readData(File f, int startByte, int chunkSize) throws Exception {<newline46mondego>    RandomAccessFile raf = new RandomAccessFile(f, <doubleQuotes46>r<doubleQuotes46>);<newline46mondego>    raf.seek(startByte);<newline46mondego>    byte[] data = new byte[chunkSize];<newline46mondego>    int bytesRead = raf.read(data);<newline46mondego>    if (bytesRead != chunkSize) {<newline46mondego>         byte[] smallerData = new byte[bytesRead];<newline46mondego>         System.arraycopy(data, 0, smallerData, 0, bytesRead);<newline46mondego>         data = smallerData;<newline46mondego>    }<newline46mondego>    raf.close();<newline46mondego>    return data;<newline46mondego>}<newline46mondego>"
"4355splitHere46","1919418splitHere46","sendRedirect()"
"4356splitHere46","1920056splitHere46","String sql = <doubleQuotes46>SELECT id FROM %s WHERE id > :lastInsertedYesterday <doubleQuotes46>;<newline46mondego>NamedParameterStatement p = new NamedParameterStatement(con, <newline46mondego>                                    String.format(sql, <doubleQuotes46>table1<doubleQuotes46>));<newline46mondego>p.setInt(<doubleQuotes46>lastInsertedYesterday<doubleQuotes46>, lastOne);<newline46mondego>"
"4357splitHere46","1920071splitHere46","MAVEN_OPTS=<doubleQuotes46>-Xmx512m<doubleQuotes46><newline46mondego>"
"4358splitHere46","1920240splitHere46","TreeLayout.DEFAULT_DISTX"
"4359splitHere46","1920240splitHere46","TreeLayout.DEFAULT_DISTY"
"4360splitHere46","1920240splitHere46","TreeLayout"
"4361splitHere46","1920240splitHere46","BalloonLayout"
"4362splitHere46","1920240splitHere46","TreeLayout"
"4363splitHere46","1920273splitHere46","out.flush();<newline46mondego>"
"4364splitHere46","1920273splitHere46","socket.close();<newline46mondego>"
"4365splitHere46","1920312splitHere46","Class"
"4366splitHere46","1920312splitHere46","isInstance(Class)"
"4367splitHere46","1920312splitHere46","instanceof"
"4368splitHere46","1920312splitHere46","Class"
"4369splitHere46","1920348splitHere46","Properties props = new Properties();<newline46mondego>	props.put(<doubleQuotes46>mail.smtp.host<doubleQuotes46>, <doubleQuotes46>your.mailhost.com<doubleQuotes46>);<newline46mondego>	Session session = Session.getDefaultInstance(props, null);<newline46mondego>	session.setDebug(true);<newline46mondego>	Message msg = new MimeMessage(session);<newline46mondego>	msg.setFrom(new InternetAddress(<doubleQuotes46>mail@from.com<doubleQuotes46>));<newline46mondego>	msg.setRecipients(Message.RecipientType.TO, new InternetAddress[]{new InternetAddress(<doubleQuotes46>mail@to.com<doubleQuotes46>)});<newline46mondego>	msg.setSubject(<doubleQuotes46>Subject Line<doubleQuotes46>);<newline46mondego>	msg.setText(<doubleQuotes46>Text Body<doubleQuotes46>);<newline46mondego>	Transport.send(msg);<newline46mondego>"
"4370splitHere46","1920509splitHere46","ORDER BY date, PK"
"4371splitHere46","1920519splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import java.awt.geom.AffineTransform;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.File;<newline46mondego>import java.lang.reflect.InvocationTargetException;<newline46mondego><newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JDialog;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class OpenImageZooming {<newline46mondego><newline46mondego> private static final int NB_STEPS = 30;<newline46mondego><newline46mondego> private static final long OPENING_TOTAL_DURATION = 3000;<newline46mondego><newline46mondego> public static void main(String[] args) {<newline46mondego>  OpenImageZooming me = new OpenImageZooming();<newline46mondego>  me.openImage(args[0]);<newline46mondego> }<newline46mondego><newline46mondego> private JFrame frame;<newline46mondego> private JDialog dialog;<newline46mondego> private JPanelZooming panelZooming;<newline46mondego><newline46mondego> private void openImage(final String imagePath) {<newline46mondego>  SwingUtilities.invokeLater(new Runnable() {<newline46mondego>   public void run() {<newline46mondego>    frame = new JFrame();<newline46mondego>    frame.setTitle(<doubleQuotes46>Open image with zoom<doubleQuotes46>);<newline46mondego>    JPanel p = new JPanel(new BorderLayout());<newline46mondego>    p.add(new JLabel(<doubleQuotes46>click on button to display image<doubleQuotes46>), BorderLayout.CENTER);<newline46mondego>    JButton button = new JButton(<doubleQuotes46>Display!<doubleQuotes46>);<newline46mondego>    frame.setContentPane(p);<newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>     public void actionPerformed(ActionEvent e) {<newline46mondego>      Thread t = new Thread() {<newline46mondego><newline46mondego>       @Override<newline46mondego>       public void run() {<newline46mondego>        displayImaggeWithProgressiveZoom(imagePath);<newline46mondego>       }<newline46mondego><newline46mondego>      };<newline46mondego>      t.start();<newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego>    });<newline46mondego>    p.add(button, BorderLayout.SOUTH);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(300, 100);<newline46mondego>    frame.setLocationRelativeTo(null);<newline46mondego>    frame.setVisible(true);<newline46mondego>   }<newline46mondego>  });<newline46mondego> }<newline46mondego><newline46mondego> protected void displayImaggeWithProgressiveZoom(String imagePath) {<newline46mondego>  try {<newline46mondego>   final BufferedImage image = ImageIO.read(new File(imagePath));<newline46mondego><newline46mondego>   for (int i = 0; i < NB_STEPS; i++) {<newline46mondego>    displayDialog(i, NB_STEPS, image);<newline46mondego><newline46mondego>    Thread.sleep(OPENING_TOTAL_DURATION / NB_STEPS);<newline46mondego>   }<newline46mondego><newline46mondego>  } catch (Exception e) {<newline46mondego>   // TODO Auto-generated catch block<newline46mondego>   e.printStackTrace();<newline46mondego>  }<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego> private void displayDialog(final int i, final int nbSteps, final BufferedImage image) {<newline46mondego><newline46mondego>  try {<newline46mondego>   SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>     if (dialog == null) {<newline46mondego>      dialog = new JDialog(frame);<newline46mondego>      dialog.setUndecorated(true);<newline46mondego>      dialog.setModal(false);<newline46mondego>      panelZooming = new JPanelZooming(image);<newline46mondego>      dialog.setContentPane(panelZooming);<newline46mondego>      dialog.setSize(0, 0);<newline46mondego>      dialog.setLocationRelativeTo(frame);<newline46mondego>      dialog.setVisible(true);<newline46mondego><newline46mondego>     }<newline46mondego>     int w = (i + 1) * image.getWidth() / nbSteps;<newline46mondego>     int h = (i + 1) * image.getHeight() / nbSteps;<newline46mondego><newline46mondego>     panelZooming.setScale((double) (i + 1) / nbSteps);<newline46mondego>     dialog.setSize(w, h);<newline46mondego>     dialog.setLocationRelativeTo(null);<newline46mondego>    }<newline46mondego>   });<newline46mondego>  } catch (InterruptedException e) {<newline46mondego>   // TODO Auto-generated catch block<newline46mondego>   e.printStackTrace();<newline46mondego>  } catch (InvocationTargetException e) {<newline46mondego>   // TODO Auto-generated catch block<newline46mondego>   e.printStackTrace();<newline46mondego>  }<newline46mondego><newline46mondego> }<newline46mondego><newline46mondego> @SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego> public static class JPanelZooming extends JPanel {<newline46mondego><newline46mondego>  private BufferedImage image;<newline46mondego><newline46mondego>  private double scale = 1.0d;<newline46mondego><newline46mondego>  public JPanelZooming(BufferedImage image) {<newline46mondego>   this.image = image;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  protected void paintComponent(Graphics g) {<newline46mondego>   super.paintComponent(g);<newline46mondego>   Graphics2D g2 = (Graphics2D) g;<newline46mondego>   AffineTransform at = g2.getTransform();<newline46mondego>   AffineTransform oldTransform = (AffineTransform) at.clone();<newline46mondego>   at.scale(scale, scale);<newline46mondego>   g2.setTransform(at);<newline46mondego>   g2.drawImage(image, 0, 0, image.getWidth(), image.getHeight(), null);<newline46mondego>   g2.setTransform(oldTransform);<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  public void setScale(double scale) {<newline46mondego>   this.scale = scale;<newline46mondego>  }<newline46mondego><newline46mondego> }<newline46mondego>}<newline46mondego>"
"4372splitHere46","1920795splitHere46","show()"
"4373splitHere46","1920901splitHere46","struct"
"4374splitHere46","1920901splitHere46","public"
"4375splitHere46","1920901splitHere46","class"
"4376splitHere46","1920901splitHere46","private"
"4377splitHere46","1920901splitHere46","struct"
"4378splitHere46","1920901splitHere46","struct"
"4379splitHere46","1920901splitHere46","class"
"4380splitHere46","1920901splitHere46","struct"
"4381splitHere46","1920901splitHere46","struct"
"4382splitHere46","1920901splitHere46","class"
"4383splitHere46","1920901splitHere46","struct"
"4384splitHere46","1920901splitHere46","class"
"4385splitHere46","1920901splitHere46","struct"
"4386splitHere46","1921006splitHere46","System.arraycopy(...)"
"4387splitHere46","1921006splitHere46","Collection.addAll()"
"4388splitHere46","1921006splitHere46","System.arraycopy(...)"
"4389splitHere46","1921006splitHere46","System.arraycopy(...)"
"4390splitHere46","1921115splitHere46","for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {<newline46mondego>    String fruit = iterator.next();<newline46mondego>    if (<doubleQuotes46>banane<doubleQuotes46>.equals(fruit)) {<newline46mondego>        iterator.remove();<newline46mondego>    }<newline46mondego>    System.out.println(fruit);<newline46mondego>}<newline46mondego>"
"4391splitHere46","1921188splitHere46","private List<List<String>> addresses = new ArrayList<List<String>>();"
"4392splitHere46","1921188splitHere46","ArrayList<String> singleAddress = new ArrayList<String>();<newline46mondego>singleAddress.add(<doubleQuotes46>17 Fake Street<doubleQuotes46>);<newline46mondego>singleAddress.add(<doubleQuotes46>Phoney town<doubleQuotes46>);<newline46mondego>singleAddress.add(<doubleQuotes46>Makebelieveland<doubleQuotes46>);<newline46mondego><newline46mondego>addresses.add(singleAddress);<newline46mondego>"
"4393splitHere46","1921188splitHere46","private ArrayList<String[]> addresses = new ArrayList<String[3]>();<newline46mondego>"
"4394splitHere46","1921188splitHere46","private ArrayList<String[]> addresses = new ArrayList<String[]>();<newline46mondego>"
"4395splitHere46","1921255splitHere46","Map<String, UUID>"
"4396splitHere46","1921255splitHere46","Map<String, ?>"
"4397splitHere46","1921255splitHere46","Map<String, ? super String><newline46mondego>"
"4398splitHere46","1921327splitHere46","<a href=<doubleQuotes46>/login?from=${pageContext.request.requestURI}<doubleQuotes46>>Login</a><newline46mondego>"
"4399splitHere46","1921327splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>from<doubleQuotes46> value=<doubleQuotes46>${pageContext.request.requestURI}<doubleQuotes46>><newline46mondego>"
"4400splitHere46","1921327splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>from<doubleQuotes46> value=<doubleQuotes46>${param.from}<doubleQuotes46>><newline46mondego>"
"4401splitHere46","1921327splitHere46","User user = userDAO.find(username, password);<newline46mondego>if (user != null) {<newline46mondego>    request.getSession().setAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>    response.sendRedirect(request.getParameter(<doubleQuotes46>from<doubleQuotes46>));<newline46mondego>} else {<newline46mondego>    // Show error.<newline46mondego>}<newline46mondego>"
"4402splitHere46","1921327splitHere46","request.getHeader(<doubleQuotes46>referer<doubleQuotes46>)"
"4403splitHere46","1921327splitHere46","request.getRequestURI()"
"4404splitHere46","1921443splitHere46","String"
"4405splitHere46","1921443splitHere46","Number"
"4406splitHere46","1921443splitHere46","Boolean"
"4407splitHere46","1921443splitHere46","Strings"
"4408splitHere46","1921443splitHere46","Number"
"4409splitHere46","1921443splitHere46","Boolean"
"4410splitHere46","1921443splitHere46","javax.faces.convert.Converter"
"4411splitHere46","1921443splitHere46","String"
"4412splitHere46","1921443splitHere46","Number"
"4413splitHere46","1921443splitHere46","Long id"
"4414splitHere46","1921443splitHere46","getAsString()"
"4415splitHere46","1921443splitHere46","getAsObject()"
"4416splitHere46","1921443splitHere46","id"
"4417splitHere46","1921443splitHere46","Converter"
"4418splitHere46","1921443splitHere46","h:selectOneMenu"
"4419splitHere46","1921477splitHere46","frame.dispose()"
"4420splitHere46","1921477splitHere46","frame.setVisible(false)"
"4421splitHere46","1921477splitHere46","this.dispose"
"4422splitHere46","1921477splitHere46","this.setVisible(false)"
"4423splitHere46","1921529splitHere46","JLabel"
"4424splitHere46","1921529splitHere46","JLabel label = new JLabel(<doubleQuotes46>Text that'll wrap if necessary<doubleQuotes46>);<newline46mondego>label.setUI(MultiLineLabelUI.labelUI);"
"4425splitHere46","1921529splitHere46","MultiLineLabel"
"4426splitHere46","1921530splitHere46","conn.setRequestProperty(<doubleQuotes46>Connection<doubleQuotes46>, <doubleQuotes46>close<doubleQuotes46>);<newline46mondego>"
"4427splitHere46","1921530splitHere46","System.setProperty(<doubleQuotes46>http.keepAlive<doubleQuotes46>, <doubleQuotes46>false<doubleQuotes46>);<newline46mondego>"
"4428splitHere46","1921767splitHere46","var sendVar=new LoadVars();<newline46mondego>var xml=new XML(<doubleQuotes46><r>test</r><doubleQuotes46>);<newline46mondego>sendVar.xml=xml;<newline46mondego>sendVar.svc=<doubleQuotes46>setPayCheckInfo<doubleQuotes46>;<newline46mondego><newline46mondego>var receiveXML=new XML();<newline46mondego>function onLoad(success) {<newline46mondego>    if (success) {<newline46mondego>    	trace(<doubleQuotes46>receive:<doubleQuotes46>+receiveXML);<newline46mondego>    } else {<newline46mondego>    	trace('error');<newline46mondego>    }<newline46mondego>}<newline46mondego>receiveXML.onLoad=onLoad;<newline46mondego>sendVar.sendAndLoad(<doubleQuotes46>http://mywebserver<doubleQuotes46>, receiveXML, <doubleQuotes46>POST<doubleQuotes46>);<newline46mondego>"
"4429splitHere46","1921844splitHere46","public class A {<newline46mondego>   public static String foo() {<newline46mondego>     return <doubleQuotes46>hello world<doubleQuotes46>;<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>public class B extends A {<newline46mondego>   public void bar() {<newline46mondego>      System.out.println(foo());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4430splitHere46","1922184splitHere46","return"
"4431splitHere46","1922184splitHere46","include()"
"4432splitHere46","1922184splitHere46","forward()"
"4433splitHere46","1922184splitHere46","sendRedirect()"
"4434splitHere46","1922184splitHere46","System#exit()"
"4435splitHere46","1922184splitHere46","return"
"4436splitHere46","1922184splitHere46","ExternalContext#dispatch()"
"4437splitHere46","1922184splitHere46","ExternalContext#redirect()"
"4438splitHere46","1922184splitHere46","FacesContext#responseComplete()"
"4439splitHere46","1922184splitHere46","IllegalStateException"
"4440splitHere46","1922184splitHere46","public void submitUserResponse(){<newline46mondego>    String uri = <doubleQuotes46>foo.jsf<doubleQuotes46>;<newline46mondego>    FacesContext.getCurrentInstance().getExternalContext().dispatch(uri);<newline46mondego>}<newline46mondego>"
"4441splitHere46","1922184splitHere46","void"
"4442splitHere46","1922184splitHere46","String"
"4443splitHere46","1922184splitHere46","return null;"
"4444splitHere46","1922305splitHere46","jconsole <process-id>"
"4445splitHere46","1922368splitHere46","@Override<newline46mondego>public void clearTable() {<newline46mondego>    try {<newline46mondego>        /**<newline46mondego>         * All nodes are linked except the root. So we need to start deleting the leaves first.<newline46mondego>         */<newline46mondego>        while (new XincoCoreNodeJpaController().findXincoCoreNodeEntities().size() > 0) {<newline46mondego>            for (com.bluecubs.xinco.core.server.persistence.XincoCoreNode xcn : getLeaves()) {<newline46mondego>                new XincoCoreNodeJpaController().destroy(xcn.getId());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    } catch (XincoException ex) {<newline46mondego>        Logger.getLogger(XincoCoreNodeServer.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private Vector<com.bluecubs.xinco.core.server.persistence.XincoCoreNode> getLeaves() throws XincoException {<newline46mondego>    Vector<com.bluecubs.xinco.core.server.persistence.XincoCoreNode> leaves =<newline46mondego>            new Vector<com.bluecubs.xinco.core.server.persistence.XincoCoreNode>();<newline46mondego>    result = XincoDBManager.protectedCreatedQuery(<doubleQuotes46>select x from XincoCoreNode x <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>where x.id not in (select y.xincoCoreNodeId.id from XincoCoreNode y <doubleQuotes46> +<newline46mondego>            <doubleQuotes46>where y.xincoCoreNodeId is not null)<doubleQuotes46>,null,true);<newline46mondego>    if (result.size() == 0) {<newline46mondego>        //Check if the root is there<newline46mondego>        for (Object o : new XincoCoreNodeJpaController().findXincoCoreNodeEntities()) {<newline46mondego>            leaves.add((com.bluecubs.xinco.core.server.persistence.XincoCoreNode) o);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    for (Object o : result) {<newline46mondego>        leaves.add((com.bluecubs.xinco.core.server.persistence.XincoCoreNode) o);<newline46mondego>    }<newline46mondego>    return leaves;<newline46mondego>}<newline46mondego>"
"4446splitHere46","1922589splitHere46","hibernate-entitymanager"
"4447splitHere46","1922589splitHere46","3.3.1.ga"
"4448splitHere46","1922589splitHere46","3.4.0.GA"
"4449splitHere46","1922685splitHere46","boll[0] = new ResultList();<newline46mondego>"
"4450splitHere46","1922956splitHere46","getScaledInstance()"
"4451splitHere46","1922956splitHere46","Image"
"4452splitHere46","1922974splitHere46","strictfp"
"4453splitHere46","1923174splitHere46","UIManager.put(<doubleQuotes46>PopupMenu.consumeEventOnClose<doubleQuotes46>, Boolean.TRUE);<newline46mondego>"
"4454splitHere46","1923230splitHere46","SELECT c.col1, c.col2 <newline46mondego>FROM Client c <newline46mondego>JOIN c.jobs j <newline46mondego>WHERE j.user = ?1 <newline46mondego>Group by c.col1, c.col2<newline46mondego>ORDER BY MIN(j.created) DESC<newline46mondego>"
"4455splitHere46","1923738splitHere46","@Id"
"4456splitHere46","1923738splitHere46","@IdClass"
"4457splitHere46","1923738splitHere46","@EmbeddedId"
"4458splitHere46","1923920splitHere46","zip"
"4459splitHere46","1923920splitHere46","tar.gz"
"4460splitHere46","1923920splitHere46","single"
"4461splitHere46","1923920splitHere46","single-directory"
"4462splitHere46","1923988splitHere46","org.apache.http.impl.cookie.PublicSuffixFilter<newline46mondego>org.apache.http.impl.cookie.PublicSuffixListParser<newline46mondego>"
"4463splitHere46","1923994splitHere46","@Component"
"4464splitHere46","1923994splitHere46","@Component"
"4465splitHere46","1924013splitHere46","<activeByDefault>"
"4466splitHere46","1924013splitHere46","<activeProfiles>"
"4467splitHere46","1924013splitHere46","mvn tomcat:run -Denv=test"
"4468splitHere46","1924013splitHere46","mvn package -P !profile-1"
"4469splitHere46","1924013splitHere46","<resources>"
"4470splitHere46","1924013splitHere46","src/main/resources/${env}"
"4471splitHere46","1924269splitHere46","if( method.getReturnType().equals(Void.TYPE)){<newline46mondego>    out.println(<doubleQuotes46>It does<doubleQuotes46>);<newline46mondego> }<newline46mondego>"
"4472splitHere46","1924269splitHere46","$cat X.java  <newline46mondego><newline46mondego>import java.lang.reflect.Method;<newline46mondego><newline46mondego><newline46mondego>public class X {<newline46mondego>    public static void main( String [] args ) {<newline46mondego>        for( Method m : X.class.getMethods() ) {<newline46mondego>            if( m.getReturnType().equals(Void.TYPE)){<newline46mondego>                System.out.println( m.getName()  + <doubleQuotes46> returns void <doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void hello(){}<newline46mondego>}<newline46mondego>$java X<newline46mondego>hello returns void <newline46mondego>main returns void <newline46mondego>wait returns void <newline46mondego>wait returns void <newline46mondego>wait returns void <newline46mondego>notify returns void <newline46mondego>notifyAll returns void<newline46mondego>"
"4473splitHere46","1924270splitHere46","HttpServletResponse"
"4474splitHere46","1924270splitHere46","contesationContext"
"4475splitHere46","1924270splitHere46","Filter"
"4476splitHere46","1924270splitHere46","Filter"
"4477splitHere46","1924270splitHere46","Filter"
"4478splitHere46","1924270splitHere46","Filter"
"4479splitHere46","1924270splitHere46","conversationContext"
"4480splitHere46","1924270splitHere46","httpRequest.setAttribute(<newline46mondego>                RequestParameterServletFilter.REQUEST_PARAM_FILTER_CALLED,<newline46mondego>                Boolean.TRUE);<newline46mondego>"
"4481splitHere46","1924371splitHere46","public class MyTests1 { <newline46mondego>    @BeforeClass<newline46mondego>    public static void beforeClass() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests1.beforeClass<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void before() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests1.before<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @AfterClass<newline46mondego>    public static void afterClass() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests1.AfterClass<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @After<newline46mondego>    public void after() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests1.after<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test1() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests1.test1<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test2() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests1.test2<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public class MyTests2 { <newline46mondego>    @BeforeClass<newline46mondego>    public static void beforeClass() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests2.beforeClass<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void before() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests2.before<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @AfterClass<newline46mondego>    public static void afterClass() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests2.AfterClass<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @After<newline46mondego>    public void after() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests2.after<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test1() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests2.test1<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test2() {<newline46mondego>    	System.out.println(<doubleQuotes46>MyTests2.test2<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>@RunWith(Suite.class)<newline46mondego>@Suite.SuiteClasses( { MyTests1.class, MyTests2.class })<newline46mondego>public class AllTests {<newline46mondego><newline46mondego>    @BeforeClass<newline46mondego>    public static void beforeClass() {<newline46mondego>    	System.out.println(<doubleQuotes46>AllTests.beforeClass<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void before() {<newline46mondego>    	System.out.println(<doubleQuotes46>AllTests.before<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @AfterClass<newline46mondego>    public static void afterClass() {<newline46mondego>    	System.out.println(<doubleQuotes46>AllTests.AfterClass<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @After<newline46mondego>    public void after() {<newline46mondego>    	System.out.println(<doubleQuotes46>AllTests.after<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test1() {<newline46mondego>    	System.out.println(<doubleQuotes46>AllTests.test1<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test2() {<newline46mondego>    	System.out.println(<doubleQuotes46>AllTests.test2<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4482splitHere46","1924371splitHere46","AllTests.beforeClass<newline46mondego>MyTests1.beforeClass<newline46mondego>MyTests1.before<newline46mondego>MyTests1.test1<newline46mondego>MyTests1.after<newline46mondego>MyTests1.before<newline46mondego>MyTests1.test2<newline46mondego>MyTests1.after<newline46mondego>MyTests1.AfterClass<newline46mondego>MyTests2.beforeClass<newline46mondego>MyTests2.before<newline46mondego>MyTests2.test1<newline46mondego>MyTests2.after<newline46mondego>MyTests2.before<newline46mondego>MyTests2.test2<newline46mondego>MyTests2.after<newline46mondego>MyTests2.AfterClass<newline46mondego>AllTests.AfterClass<newline46mondego>"
"4483splitHere46","1924480splitHere46","ctime"
"4484splitHere46","1924576splitHere46","get_temp_directory()"
"4485splitHere46","1924576splitHere46","GetTempPath()"
"4486splitHere46","1924576splitHere46","TMP"
"4487splitHere46","1924576splitHere46","get_temp_directory()"
"4488splitHere46","1924779splitHere46","class Player implements Comparable {<newline46mondego>    [...]<newline46mondego>    public int compareTo(Object o) {<newline46mondego>"
"4489splitHere46","1924779splitHere46","class Player implements Comparable<Player> {<newline46mondego>    [...]<newline46mondego>    public int compareTo(Player o) {<newline46mondego>"
"4490splitHere46","1924976splitHere46","javax.faces.convert.Converter"
"4491splitHere46","1924976splitHere46","getAsString()"
"4492splitHere46","1924976splitHere46","String"
"4493splitHere46","1924976splitHere46","Object"
"4494splitHere46","1924976splitHere46","userId"
"4495splitHere46","1924976splitHere46","Object"
"4496splitHere46","1924976splitHere46","getAsObject()"
"4497splitHere46","1924976splitHere46","Object"
"4498splitHere46","1924976splitHere46","String"
"4499splitHere46","1924976splitHere46","public class UserConverter implements Converter {<newline46mondego><newline46mondego>    private UserDAO userDAO = SomeDAOManager.getUserDAO();<newline46mondego><newline46mondego>    public String getAsString(FacesContext context, UIComponent component, Object value) {<newline46mondego>        return String.valueOf(((User) value).getId());<newline46mondego>    }<newline46mondego><newline46mondego>    public Object getAsObject(FacesContext context, UIComponent component, String value) {<newline46mondego>        return userDAO.find(Long.valueOf(value));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4500splitHere46","1924976splitHere46","faces-config.xml"
"4501splitHere46","1924976splitHere46","<converter><newline46mondego>    <converter-for-class>com.example.model.User</converter-for-class><newline46mondego>    <converter-class>com.example.converter.UserConverter</converter-class><newline46mondego></converter><newline46mondego>"
"4502splitHere46","1925022splitHere46","start"
"4503splitHere46","1925637splitHere46","client.getHttpConnectionManager().<newline46mondego>        getParams().setConnectionTimeout(5000);<newline46mondego>  client.getHttpConnectionManager().<newline46mondego>        getParams().setSoTimeout(5000);<newline46mondego>"
"4504splitHere46","1925650splitHere46","/* Returns true if the given year is a leap year */<newline46mondego>static bool IsLeapYear(int year)<newline46mondego>{<newline46mondego>	if ((year % 400) == 0)<newline46mondego>		return true;<newline46mondego>	if ((year % 100) == 0)<newline46mondego>		return false;<newline46mondego>	if ((year % 4) == 0)<newline46mondego>		return true;<newline46mondego>	return false;<newline46mondego>}<newline46mondego>"
"4505splitHere46","1925730splitHere46","SwingWorker"
"4506splitHere46","1925730splitHere46","import javax.swing.*;<newline46mondego><newline46mondego>public class Unions {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        java.awt.EventQueue.invokeLater(new Runnable() { public void run() {<newline46mondego>            runEDT();<newline46mondego>        }});<newline46mondego>    }<newline46mondego>    private static void runEDT() {<newline46mondego>        final JDialog dialog = new JDialog((JFrame)null, true);<newline46mondego>        new SwingWorker<Void,Void>() {<newline46mondego>            @Override protected Void doInBackground() throws Exception {<newline46mondego>                // But this is working.<newline46mondego>                Thread.sleep(3000);<newline46mondego>                return null;<newline46mondego>            }<newline46mondego>            @Override protected void done() {<newline46mondego>                dialog.setVisible(false);<newline46mondego>            }<newline46mondego>        }.execute();<newline46mondego>        dialog.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4507splitHere46","1925953splitHere46","transaction.begin(); //start the global tx before calling getConnection()<newline46mondego>conn = dataSource.getConnection(); <newline46mondego>...<newline46mondego>transaction.commit();<newline46mondego>"
"4508splitHere46","1926627splitHere46","javaee.jar"
"4509splitHere46","1926627splitHere46","WEB-INF/lib"
"4510splitHere46","1926654splitHere46","DetachedCriteria criteria=DetachedCriteria.forClass(UserProfile.class);         <newline46mondego>criteria.createAlias(<doubleQuotes46>principal<doubleQuotes46>, <doubleQuotes46>p<doubleQuotes46>);<newline46mondego>criteria.addOrder(Order.asc(<doubleQuotes46>p.name<doubleQuotes46>));<newline46mondego>"
"4511splitHere46","1926661splitHere46","serialVersionUID"
"4512splitHere46","1926661splitHere46","ArrayList"
"4513splitHere46","1926661splitHere46","ArrayList"
"4514splitHere46","1926661splitHere46","serialVersionUID"
"4515splitHere46","1926761splitHere46","smtpPort"
"4516splitHere46","1926761splitHere46","getSmtpPort"
"4517splitHere46","1926761splitHere46","String"
"4518splitHere46","1926761splitHere46","setSmtpPort"
"4519splitHere46","1926761splitHere46","int"
"4520splitHere46","1926761splitHere46","HtmlEmail"
"4521splitHere46","1926761splitHere46","HtmlEmail"
"4522splitHere46","1926761splitHere46","HtmlEmail"
"4523splitHere46","1926761splitHere46","setSmtpPort"
"4524splitHere46","1926761splitHere46","FactoryBean"
"4525splitHere46","1926761splitHere46","HtmlEmail"
"4526splitHere46","1926770splitHere46","serialVersionUID"
"4527splitHere46","1926792splitHere46","all what thread does is adding elements to vector <newline46mondego>(only if num of elements in vector = 0) & <newline46mondego>removing elements from vector. (if vector size > 0)<newline46mondego>"
"4528splitHere46","1927112splitHere46","class MyClass<newline46mondego>{<newline46mondego>    private static final int PROTEINS = 0;<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    MyArray[] foo = new MyArray[PROTEINS];<newline46mondego><newline46mondego>}<newline46mondego>"
"4529splitHere46","1927112splitHere46","PROTEINS"
"4530splitHere46","1927112splitHere46","public"
"4531splitHere46","1927112splitHere46","protected"
"4532splitHere46","1927141splitHere46","length"
"4533splitHere46","1927141splitHere46","int"
"4534splitHere46","1927141splitHere46","int"
"4535splitHere46","1927141splitHere46","2**31"
"4536splitHere46","1927141splitHere46","char"
"4537splitHere46","1927141splitHere46","0"
"4538splitHere46","1927141splitHere46","65535"
"4539splitHere46","1927141splitHere46","2**32"
"4540splitHere46","1927141splitHere46","2**32"
"4541splitHere46","1927141splitHere46","MappedByteBuffer"
"4542splitHere46","1927141splitHere46","2**31"
"4543splitHere46","1927141splitHere46","2**32"
"4544splitHere46","1927141splitHere46","2**29"
"4545splitHere46","1927141splitHere46","2**30"
"4546splitHere46","1927141splitHere46","2**31"
"4547splitHere46","1927141splitHere46","2**63"
"4548splitHere46","1927141splitHere46","2**61"
"4549splitHere46","1927516splitHere46","<a4j:push>"
"4550splitHere46","1927608splitHere46","javac -target 1.5<newline46mondego>"
"4551splitHere46","1927622splitHere46","var str1 = $(<doubleQuotes46>form1<doubleQuotes46>).serialize();<newline46mondego>var str2 = $(<doubleQuotes46>form2<doubleQuotes46>).serialize();<newline46mondego>$.post(url, str1 + <doubleQuotes46>&<doubleQuotes46> + str2);<newline46mondego>"
"4552splitHere46","1927677splitHere46","clip.drain()"
"4553splitHere46","1927702splitHere46","SimpleDateFormat myFormat = new SimpleDateFormat(<doubleQuotes46>MMMM_yyyy<doubleQuotes46>);<newline46mondego>Date aDate;<newline46mondego>try <newline46mondego>{<newline46mondego>    aDate = myFormat.parse(<doubleQuotes46>January_2009<doubleQuotes46>);<newline46mondego>} <newline46mondego>catch (ParseException e) <newline46mondego>{<newline46mondego>    // Error handling<newline46mondego>}<newline46mondego>"
"4554splitHere46","1927702splitHere46","aDate"
"4555splitHere46","1927702splitHere46","SimpleDateFormat sqlFormat = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd hh:dd:ss<doubleQuotes46>);<newline46mondego>String sqlDateString = aDate.format(sqlFormat);<newline46mondego>"
"4556splitHere46","1927816splitHere46","@Path(<doubleQuotes46>/action/{search:.*}<doubleQuotes46>)<newline46mondego><newline46mondego>doStuff(@PathParam(<doubleQuotes46>search<doubleQuotes46>) List<PathSegment> list)<newline46mondego>"
"4557splitHere46","1927816splitHere46","@Path(<doubleQuotes46>/{search:.*}/action<doubleQuotes46>)<newline46mondego>findStuff(@PathParam(<doubleQuotes46>search<doubleQuotes46>) List<PathSegment> list)<newline46mondego>"
"4558splitHere46","1927840splitHere46","public class Foo<T> {<newline46mondego><newline46mondego>    private T t;<newline46mondego><newline46mondego>    public Foo() {<newline46mondego>        this.t = new T(); // Help?<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4559splitHere46","1927840splitHere46","T"
"4560splitHere46","1927840splitHere46","typeof(T)"
"4561splitHere46","1927840splitHere46","Type.GetConstructor()"
"4562splitHere46","1927840splitHere46","Class<T>"
"4563splitHere46","1927840splitHere46","public class Foo<T> {<newline46mondego><newline46mondego>    private T t;<newline46mondego><newline46mondego>    public Foo(Class<T> cls) throws Exception {<newline46mondego>        this.t = cls.newInstance();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4564splitHere46","1927840splitHere46","try-catch"
"4565splitHere46","1928173splitHere46","rf1"
"4566splitHere46","1928173splitHere46","RefName rf1 = new RefName();<newline46mondego>RefName rf2 = rf1;<newline46mondego>"
"4567splitHere46","1928173splitHere46","rf1.outRefName()"
"4568splitHere46","1928173splitHere46","Name"
"4569splitHere46","1928173splitHere46","RefName rf1 = new RefName(<doubleQuotes46>myname<doubleQuotes46>);<newline46mondego>"
"4570splitHere46","1928173splitHere46","rf1"
"4571splitHere46","1928397splitHere46","web.xml"
"4572splitHere46","1928397splitHere46","url-pattern"
"4573splitHere46","1928397splitHere46","xyz.html"
"4574splitHere46","1928397splitHere46","url-pattern"
"4575splitHere46","1928397splitHere46","url-pattern"
"4576splitHere46","1928473splitHere46","tools.jar"
"4577splitHere46","1928473splitHere46","import java.io.IOException;<newline46mondego>import javax.tools.DiagnosticCollector;<newline46mondego>import javax.tools.JavaCompiler;<newline46mondego>import javax.tools.JavaFileObject;<newline46mondego>import javax.tools.StandardJavaFileManager;<newline46mondego>import javax.tools.ToolProvider;<newline46mondego>import javax.tools.JavaCompiler.CompilationTask;<newline46mondego>import com.sun.source.tree.CompilationUnitTree;<newline46mondego>import com.sun.source.tree.LineMap;<newline46mondego>import com.sun.source.tree.MethodTree;<newline46mondego>import com.sun.source.util.JavacTask;<newline46mondego>import com.sun.source.util.SourcePositions;<newline46mondego>import com.sun.source.util.TreeScanner;<newline46mondego>import com.sun.source.util.Trees;<newline46mondego><newline46mondego>public class MethodFinder {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>    	JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();<newline46mondego>    	DiagnosticCollector<JavaFileObject> diagnosticsCollector = new DiagnosticCollector<JavaFileObject>();<newline46mondego>    	StandardJavaFileManager fileManager = compiler.getStandardFileManager(diagnosticsCollector, null, null);<newline46mondego>    	Iterable<? extends JavaFileObject> fileObjects = fileManager.getJavaFileObjects(<doubleQuotes46>path/to/Source.java<doubleQuotes46>);<newline46mondego>    	CompilationTask task = compiler.getTask(null, fileManager, diagnosticsCollector, null, null, fileObjects);<newline46mondego><newline46mondego>    	// Here we switch to Sun-specific APIs<newline46mondego>    	JavacTask javacTask = (JavacTask) task;<newline46mondego>    	SourcePositions sourcePositions = Trees.instance(javacTask).getSourcePositions();<newline46mondego>    	Iterable<? extends CompilationUnitTree> parseResult = null;<newline46mondego>    	try {<newline46mondego>    		parseResult = javacTask.parse();<newline46mondego>    	} catch (IOException e) {<newline46mondego><newline46mondego>    		// Parsing failed<newline46mondego>    		e.printStackTrace();<newline46mondego>    		System.exit(0);<newline46mondego>    	}<newline46mondego>    	for (CompilationUnitTree compilationUnitTree : parseResult) {<newline46mondego>    		compilationUnitTree.accept(new MethodLineLogger(compilationUnitTree, sourcePositions), null);<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    private static class MethodLineLogger extends TreeScanner<Void, Void> {<newline46mondego>    	private final CompilationUnitTree compilationUnitTree;<newline46mondego>    	private final SourcePositions sourcePositions;<newline46mondego>    	private final LineMap lineMap;<newline46mondego><newline46mondego>    	private MethodLineLogger(CompilationUnitTree compilationUnitTree, SourcePositions sourcePositions) {<newline46mondego>    		this.compilationUnitTree = compilationUnitTree;<newline46mondego>    		this.sourcePositions = sourcePositions;<newline46mondego>    		this.lineMap = compilationUnitTree.getLineMap();<newline46mondego>    	}<newline46mondego><newline46mondego>    	@Override<newline46mondego>    	public Void visitMethod(MethodTree arg0, Void arg1) {<newline46mondego>    		long startPosition = sourcePositions.getStartPosition(compilationUnitTree, arg0);<newline46mondego>    		long startLine = lineMap.getLineNumber(startPosition);<newline46mondego>    		long endPosition = sourcePositions.getEndPosition(compilationUnitTree, arg0);<newline46mondego>    		long endLine = lineMap.getLineNumber(endPosition);<newline46mondego><newline46mondego>    		// Voila!<newline46mondego>    		System.out.println(<doubleQuotes46>Found method <doubleQuotes46> + arg0.getName() + <doubleQuotes46> from line <doubleQuotes46> + startLine + <doubleQuotes46> to line <doubleQuotes46>  + endLine + <doubleQuotes46>.<doubleQuotes46>);<newline46mondego><newline46mondego>    		return super.visitMethod(arg0, arg1);<newline46mondego>    	}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4578splitHere46","1928707splitHere46","<input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>cars<doubleQuotes46> value=<doubleQuotes46>audi<doubleQuotes46> /> Audi<newline46mondego><input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>cars<doubleQuotes46> value=<doubleQuotes46>ford<doubleQuotes46> /> Ford<newline46mondego><input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>cars<doubleQuotes46> value=<doubleQuotes46>opel<doubleQuotes46> /> Opel<newline46mondego>"
"4579splitHere46","1928707splitHere46","<select name=<doubleQuotes46>cars<doubleQuotes46> multiple><newline46mondego>    <option value=<doubleQuotes46>audi<doubleQuotes46>>Audi</option><newline46mondego>    <option value=<doubleQuotes46>ford<doubleQuotes46>>Ford</option><newline46mondego>    <option value=<doubleQuotes46>opel<doubleQuotes46>>Opel</option><newline46mondego></select><newline46mondego>"
"4580splitHere46","1928707splitHere46","String[] cars = request.getParameterValues(<doubleQuotes46>cars<doubleQuotes46>);<newline46mondego>"
"4581splitHere46","1928707splitHere46","<table><newline46mondego>    <tr><newline46mondego>        <th>Delete?</th><newline46mondego>        <th>Foo</th><newline46mondego>    </tr><newline46mondego>    <c:forEach items=<doubleQuotes46>${list}<doubleQuotes46> var=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>        <tr><newline46mondego>            <td><input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>delete<doubleQuotes46> value=<doubleQuotes46>${item.id}<doubleQuotes46>></td><newline46mondego>            <td>${item.foo}</td><newline46mondego>        </tr><newline46mondego>    </c:forEach><newline46mondego></table><newline46mondego>"
"4582splitHere46","1928707splitHere46","itemDAO.delete(request.getParameterValues(<doubleQuotes46>delete<doubleQuotes46>));<newline46mondego>"
"4583splitHere46","1928748splitHere46","public static void main1(String[] args) {<newline46mondego><newline46mondego>    if (args != null<newline46mondego>        && args.length == 2<newline46mondego>        && !args[0].equals(args[1])<newline46mondego>        ) {<newline46mondego>            System.out.println(<doubleQuotes46>Args are ok<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4584splitHere46","1928748splitHere46","public static void main1(String[] args) {<newline46mondego><newline46mondego>    if (args != null                // Must have args<newline46mondego>        && args.length == 2         // Two of them, to be precise<newline46mondego>        && !args[0].equals(args[1]) // And they can't be the same<newline46mondego>        ) {<newline46mondego>            System.out.println(<doubleQuotes46>Args are ok<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4585splitHere46","1928748splitHere46","if"
"4586splitHere46","1928748splitHere46","public static void main1(String[] args) {<newline46mondego><newline46mondego>    if (args != null) {<newline46mondego>        if (args.length == 2) {<newline46mondego>            if (!args[0].equals(args[1])) {<newline46mondego>                System.out.println(<doubleQuotes46>Args are ok<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4587splitHere46","1928830splitHere46","CoTaskMemFree"
"4588splitHere46","1928830splitHere46","Ole32.dll"
"4589splitHere46","1928830splitHere46","SetCurrentProcessExplicitAppUserModelID()"
"4590splitHere46","1928830splitHere46","package com.stackoverflow.AppIdTest;<newline46mondego><newline46mondego>import com.sun.jna.Native;<newline46mondego>import com.sun.jna.NativeLong;<newline46mondego>import com.sun.jna.Pointer;<newline46mondego>import com.sun.jna.WString;<newline46mondego>import com.sun.jna.ptr.PointerByReference;<newline46mondego><newline46mondego>public class AppIdTest<newline46mondego>{<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception<newline46mondego>  {<newline46mondego>    setCurrentProcessExplicitAppUserModelID(AppIdTest.class.getName());<newline46mondego><newline46mondego>    System.out.println(getCurrentProcessExplicitAppUserModelID());<newline46mondego>  }<newline46mondego><newline46mondego>  // DO NOT DO THIS, IT'S JUST FOR TESTING PURPOSE AS I'M NOT FREEING THE MEMORY<newline46mondego>  // AS REQUESTED BY THE DOCUMENTATION:<newline46mondego>  //<newline46mondego>  // http://msdn.microsoft.com/en-us/library/dd378419%28VS.85%29.aspx<newline46mondego>  //<newline46mondego>  // <doubleQuotes46>The caller is responsible for freeing this string with CoTaskMemFree when<newline46mondego>  // it is no longer needed<doubleQuotes46><newline46mondego>  public static String getCurrentProcessExplicitAppUserModelID()<newline46mondego>  {<newline46mondego>    final PointerByReference r = new PointerByReference();<newline46mondego><newline46mondego>    if (GetCurrentProcessExplicitAppUserModelID(r).longValue() == 0)<newline46mondego>    {<newline46mondego>      final Pointer p = r.getValue();<newline46mondego><newline46mondego><newline46mondego>      return p.getString(0, true); // here we leak native memory by lazyness<newline46mondego>    }      <newline46mondego>    return <doubleQuotes46>N/A<doubleQuotes46>;<newline46mondego>  }<newline46mondego><newline46mondego>  public static void setCurrentProcessExplicitAppUserModelID(final String appID)<newline46mondego>  {<newline46mondego>    if (SetCurrentProcessExplicitAppUserModelID(new WString(appID)).longValue() != 0)<newline46mondego>      throw new RuntimeException(<doubleQuotes46>unable to set current process explicit AppUserModelID to: <doubleQuotes46> + appID);<newline46mondego>  }<newline46mondego><newline46mondego>  private static native NativeLong GetCurrentProcessExplicitAppUserModelID(PointerByReference appID);<newline46mondego>  private static native NativeLong SetCurrentProcessExplicitAppUserModelID(WString appID);<newline46mondego><newline46mondego><newline46mondego>  static<newline46mondego>  {<newline46mondego>    Native.register(<doubleQuotes46>shell32<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4591splitHere46","1928830splitHere46","com.stackoverflow.AppIdTest.AppIdTest"
"4592splitHere46","1929177splitHere46","writeObject"
"4593splitHere46","1929177splitHere46","readObject"
"4594splitHere46","1929500splitHere46","Order"
"4595splitHere46","1929500splitHere46","SELECT"
"4596splitHere46","1929500splitHere46","Projections.sqlProjection()"
"4597splitHere46","1929500splitHere46","Order"
"4598splitHere46","1929500splitHere46","toSqlString()"
"4599splitHere46","1929500splitHere46","ORDER BY expression"
"4600splitHere46","1929870splitHere46","NSArray"
"4601splitHere46","1929870splitHere46","+array"
"4602splitHere46","1929870splitHere46","NSMutableArray"
"4603splitHere46","1929870splitHere46","NSArray"
"4604splitHere46","1929870splitHere46","+array"
"4605splitHere46","1929870splitHere46","java.lang.Class"
"4606splitHere46","1929870splitHere46","java.lang.Class"
"4607splitHere46","1930199splitHere46","String dateString = <doubleQuotes46>Wed, 09 Apr 2008 23:55:38 GMT<doubleQuotes46>;<newline46mondego>SimpleDateFormat format = new SimpleDateFormat(<doubleQuotes46>EEE, dd MMM yyyy HH:mm:ss zzz<doubleQuotes46>);<newline46mondego>Date d = format.parse(dateString);<newline46mondego>"
"4608splitHere46","1930443splitHere46","public <T extends Iterable<V>,V> ArrayList<V> mySelect(T what, ITest<V> x) {<newline46mondego>"
"4609splitHere46","1930443splitHere46","T"
"4610splitHere46","1930443splitHere46","Iterable"
"4611splitHere46","1930443splitHere46","Iterable"
"4612splitHere46","1930443splitHere46","V"
"4613splitHere46","1930457splitHere46","WWW::Mechanize"
"4614splitHere46","1930457splitHere46","pQuery"
"4615splitHere46","1930457splitHere46","Web::Scraper"
"4616splitHere46","1930457splitHere46","use URI;<newline46mondego>use Web::Scraper;<newline46mondego><newline46mondego>my $tweets = scraper {<newline46mondego>    process <doubleQuotes46>li.status<doubleQuotes46>, <doubleQuotes46>tweets[]<doubleQuotes46> => scraper {<newline46mondego>        process <doubleQuotes46>.entry-content<doubleQuotes46>,    body => 'TEXT';<newline46mondego>        process <doubleQuotes46>.entry-date<doubleQuotes46>,       when => 'TEXT';<newline46mondego>        process 'a[rel=<doubleQuotes46>bookmark<doubleQuotes46>]', link => '@href';<newline46mondego>    };<newline46mondego>};<newline46mondego><newline46mondego>my $res = $tweets->scrape( URI->new(<doubleQuotes46>http://twitter.com/miyagawa<doubleQuotes46>) );<newline46mondego><newline46mondego>for my $tweet (@{$res->{tweets}}) {<newline46mondego>    print <doubleQuotes46>$tweet->{body} $tweet->{when} (link: $tweet->{link})\n<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"4617splitHere46","1930644splitHere46","final MutablePicoContainer container = new PicoBuilder()<newline46mondego>    .withBehaviors(new JobEnabledDecorating())<newline46mondego>    .build();<newline46mondego>"
"4618splitHere46","1930644splitHere46","Job"
"4619splitHere46","1930644splitHere46","JobEnabledDecorating"
"4620splitHere46","1930644splitHere46","public class JobEnabledDecorating extends AbstractBehaviorFactory {<newline46mondego>    @Override<newline46mondego>    public ComponentAdapter createComponentAdapter(<newline46mondego>        final ComponentMonitor componentMonitor, final LifecycleStrategy lifecycleStrategy,<newline46mondego>        final Properties componentProperties, final Object componentKey,<newline46mondego>        final Class componentImplementation, final Parameter... parameters) throws PicoCompositionException <newline46mondego>    {<newline46mondego>        return componentMonitor.newBehavior(<newline46mondego>            new JobEnabledDecorated(<newline46mondego>                super.createComponentAdapter(<newline46mondego>                    componentMonitor, lifecycleStrategy, componentProperties, <newline46mondego>                    componentKey, componentImplementation, parameters<newline46mondego>                )<newline46mondego>            )<newline46mondego>        );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4621splitHere46","1930644splitHere46","JobEnabledDecorated"
"4622splitHere46","1930644splitHere46","public class JobEnabledDecorated extends AbstractBehavior<Job> {<newline46mondego>    public JobEnabledDecorated(final ComponentAdapter<Job> delegate) {<newline46mondego>        super(delegate);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Job getComponentInstance(final PicoContainer container, final Type into)<newline46mondego>            throws PicoCompositionException {<newline46mondego>        final Job instance = super.getComponentInstance(container, into);<newline46mondego>        return new JobEnabledDecorator(instance);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getDescriptor() {<newline46mondego>        return <doubleQuotes46>JobEnabledDecorator-<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4623splitHere46","1930644splitHere46","getComponentInstance"
"4624splitHere46","1930644splitHere46","public interface Job {<newline46mondego>    void execute();<newline46mondego>}<newline46mondego><newline46mondego>public class JobEnabledDecorator implements Job {<newline46mondego>    private Job delegate;<newline46mondego><newline46mondego>    public JobEnabledDecorator(final Job delegate) {<newline46mondego>        this.delegate = delegate;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void execute() {<newline46mondego>        System.out.println(<doubleQuotes46>before<doubleQuotes46>);<newline46mondego>        delegate.execute();<newline46mondego>        System.out.println(<doubleQuotes46>after<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class MyJob implements Job {<newline46mondego>    @Override<newline46mondego>    public void execute() {<newline46mondego>        System.out.println(<doubleQuotes46>execute<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4625splitHere46","1930644splitHere46","final MutablePicoContainer container = new PicoBuilder()<newline46mondego>        .withBehaviors(new JobEnabledDecorating())<newline46mondego>        .build();<newline46mondego><newline46mondego>    container.addComponent(Job.class, MyJob.class);<newline46mondego><newline46mondego>    final Job job = container.getComponent(Job.class);<newline46mondego>    job.execute();<newline46mondego>"
"4626splitHere46","1930644splitHere46","before<newline46mondego>execute<newline46mondego>after<newline46mondego>"
"4627splitHere46","1930644splitHere46","JobEnabledDecorator(MyJob)"
"4628splitHere46","1930646splitHere46","wsdl:import"
"4629splitHere46","1930646splitHere46","xs:import"
"4630splitHere46","1930646splitHere46","xsd:import"
"4631splitHere46","1930646splitHere46","xmlns:ns=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/DicAcordQuoteRq.xsd<doubleQuotes46><newline46mondego>xmlns:na=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/DicAcordQuoteRs.xsd<doubleQuotes46><newline46mondego>xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>"
"4632splitHere46","1930646splitHere46","xmlns:rq=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/request/<doubleQuotes46> <newline46mondego>xmlns:rs=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/response/<doubleQuotes46><newline46mondego>"
"4633splitHere46","1930646splitHere46","<wsdl:import namespace=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/<doubleQuotes46>  location=<doubleQuotes46>DicAcordQuoteRq.xsd<doubleQuotes46>/><newline46mondego><wsdl:import namespace=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/<doubleQuotes46> location=<doubleQuotes46>DicAcordQuoteRs.xsd<doubleQuotes46>/><newline46mondego>"
"4634splitHere46","1930646splitHere46","<xs:import namespace=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/request/<doubleQuotes46> schemaLocation=<doubleQuotes46>DicAcordQuoteRq.xsd<doubleQuotes46>/><newline46mondego><xs:import namespace=<doubleQuotes46>http://discoveryinsurance.com/DicQuoteSvc/schemas/response/<doubleQuotes46> schemaLocation=<doubleQuotes46>DicAcordQuoteRs.xsd<doubleQuotes46>/><newline46mondego>"
"4635splitHere46","1930714splitHere46","Double"
"4636splitHere46","1930714splitHere46","Double"
"4637splitHere46","1930714splitHere46","A[0]   A[1]   A[2]   A[3]          A[N-1]   A[N]<newline46mondego>---- + ---- + ---- + ---- + .... + ------ + ----<newline46mondego> N      N      N      N               N       N<newline46mondego>"
"4638splitHere46","1930714splitHere46","/ A[0]   A[1]   A[2] \   / A[3]   A[4]   A[5] \   //      A[N-1]   A[N] \<newline46mondego>| ---- + ---- + ---- |   | ---- + ---- + ---- |   \\    + ------ + ---- |<newline46mondego>\  3      3      3   /   \  3      3      3   /   //        3       3   /<newline46mondego> --------------------- +  --------------------  + \\      --------------<newline46mondego>          N                        N                        N<newline46mondego>         ---                      ---                      ---<newline46mondego>          3                        3                        3<newline46mondego>"
"4639splitHere46","1930714splitHere46","/ 1   2   3 \   / 4   5   6 \   / 7 \ <newline46mondego>| - + - + - | + | - + - + - | + | - |<newline46mondego>\ 3   3   3 /   \ 3   3   3 /   \ 3 /<newline46mondego> -----------     -----------     ---<newline46mondego>      y               y           y<newline46mondego>"
"4640splitHere46","1930714splitHere46","2   5   7/3<newline46mondego>     - + - + ---<newline46mondego>     y   y    y<newline46mondego>"
"4641splitHere46","1930714splitHere46","2   5   7/3<newline46mondego>     - + - + ---<newline46mondego>     3   3    3<newline46mondego>"
"4642splitHere46","1930714splitHere46","2*3   5*3    7<newline46mondego>--- + --- + ---<newline46mondego> 9     9     9<newline46mondego>"
"4643splitHere46","1930714splitHere46","6   15   7<newline46mondego>- + -- + -<newline46mondego>9    9   9<newline46mondego>"
"4644splitHere46","1930714splitHere46","28<newline46mondego>-- ~ 3,1111111111111111111111.........1111111.........<newline46mondego> 9<newline46mondego>"
"4645splitHere46","1930714splitHere46","Double"
"4646splitHere46","1931016splitHere46","java.util.Calendar"
"4647splitHere46","1931016splitHere46","Converter"
"4648splitHere46","1931016splitHere46","rich:calendar"
"4649splitHere46","1931016splitHere46","page.jsp"
"4650splitHere46","1931016splitHere46","<h:form><newline46mondego>    <h:selectOneMenu value=<doubleQuotes46>#{myBean.date}<doubleQuotes46>><newline46mondego>        <f:converter converterId=<doubleQuotes46>datePartConverter<doubleQuotes46> /><newline46mondego>        <f:attribute name=<doubleQuotes46>part<doubleQuotes46> value=<doubleQuotes46>day<doubleQuotes46> /><newline46mondego>        <f:selectItems value=<doubleQuotes46>#{myBean.days}<doubleQuotes46> /><newline46mondego>    </h:selectOneMenu><newline46mondego>    <h:selectOneMenu value=<doubleQuotes46>#{myBean.date}<doubleQuotes46>><newline46mondego>        <f:converter converterId=<doubleQuotes46>datePartConverter<doubleQuotes46> /><newline46mondego>        <f:attribute name=<doubleQuotes46>part<doubleQuotes46> value=<doubleQuotes46>month<doubleQuotes46> /><newline46mondego>        <f:selectItems value=<doubleQuotes46>#{myBean.months}<doubleQuotes46> /><newline46mondego>    </h:selectOneMenu><newline46mondego>    <h:selectOneMenu value=<doubleQuotes46>#{myBean.date}<doubleQuotes46>><newline46mondego>        <f:converter converterId=<doubleQuotes46>datePartConverter<doubleQuotes46> /><newline46mondego>        <f:attribute name=<doubleQuotes46>part<doubleQuotes46> value=<doubleQuotes46>year<doubleQuotes46> /><newline46mondego>        <f:selectItems value=<doubleQuotes46>#{myBean.years}<doubleQuotes46> /><newline46mondego>    </h:selectOneMenu><newline46mondego><newline46mondego>    <h:commandButton value=<doubleQuotes46>submit<doubleQuotes46> action=<doubleQuotes46>#{myBean.submit}<doubleQuotes46>/><newline46mondego>    <h:messages /><newline46mondego></h:form><newline46mondego>"
"4651splitHere46","1931016splitHere46","mypackage.MyBean"
"4652splitHere46","1931016splitHere46","package mypackage;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import javax.faces.model.SelectItem;<newline46mondego><newline46mondego>public class MyBean {<newline46mondego><newline46mondego>    private static List<SelectItem> days = new ArrayList<SelectItem>();<newline46mondego>    private static List<SelectItem> months = new ArrayList<SelectItem>();<newline46mondego>    private static List<SelectItem> years = new ArrayList<SelectItem>();<newline46mondego><newline46mondego>    static {<newline46mondego>        // Just do your thing to fill them. Only ensure that those are Strings,<newline46mondego>        // else you'll need to change the type in Converter accordingly.<newline46mondego>        for (int i = 1; i <= 31; i++) days.add(new SelectItem(String.valueOf(i)));<newline46mondego>        for (int i = 1; i <= 12; i++) months.add(new SelectItem(String.valueOf(i)));<newline46mondego>        for (int i = 2000; i <= 2020; i++) years.add(new SelectItem(String.valueOf(i)));<newline46mondego>    }<newline46mondego><newline46mondego>    private Date date;<newline46mondego><newline46mondego>    public void submit() {<newline46mondego>        // Print submitted date to stdout.<newline46mondego>        System.out.println(<doubleQuotes46>Submitted date: <doubleQuotes46> + date);<newline46mondego>    }<newline46mondego><newline46mondego>    public List<SelectItem> getDays() {<newline46mondego>        return days;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<SelectItem> getMonths() {<newline46mondego>        return months;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<SelectItem> getYears() {<newline46mondego>        return years;<newline46mondego>    }<newline46mondego><newline46mondego>    public Date getDate() {<newline46mondego>        return date;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setDate(Date date) {<newline46mondego>        this.date = date;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4653splitHere46","1931016splitHere46","mypackage.DatePartConverter"
"4654splitHere46","1931016splitHere46","package mypackage;<newline46mondego><newline46mondego>import java.text.ParseException;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import javax.faces.application.FacesMessage;<newline46mondego>import javax.faces.component.UIComponent;<newline46mondego>import javax.faces.component.UIInput;<newline46mondego>import javax.faces.context.FacesContext;<newline46mondego>import javax.faces.convert.Converter;<newline46mondego>import javax.faces.convert.ConverterException;<newline46mondego><newline46mondego>public class DatePartConverter implements Converter {<newline46mondego><newline46mondego>    public Object getAsObject(FacesContext context, UIComponent component, String value) {<newline46mondego>        String part = (String) component.getAttributes().get(<doubleQuotes46>part<doubleQuotes46>);<newline46mondego>        Date date = null;<newline46mondego><newline46mondego>        if (context.getRenderResponse()) {<newline46mondego>            // Convert any default/selected date for display.<newline46mondego>            Date selectedDate = (Date) ((UIInput) component).getValue();<newline46mondego>            if (selectedDate != null) {<newline46mondego>                if ((<doubleQuotes46>day<doubleQuotes46>.equals(part) && new SimpleDateFormat(<doubleQuotes46>d<doubleQuotes46>).format(selectedDate).equals(value))<newline46mondego>                    || (<doubleQuotes46>month<doubleQuotes46>.equals(part) && new SimpleDateFormat(<doubleQuotes46>M<doubleQuotes46>).format(selectedDate).equals(value))<newline46mondego>                    || (<doubleQuotes46>year<doubleQuotes46>.equals(part) && new SimpleDateFormat(<doubleQuotes46>yyyy<doubleQuotes46>).format(selectedDate).equals(value)))<newline46mondego>                {<newline46mondego>                    date = selectedDate;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            // Convert submitted date after submit.<newline46mondego>            Map<String, Object> map = context.getExternalContext().getRequestMap();<newline46mondego>            if (<doubleQuotes46>day<doubleQuotes46>.equals(part)) {<newline46mondego>                map.put(<doubleQuotes46>DatePartConverter.day<doubleQuotes46>, value); // Save until we have all parts.<newline46mondego>            } else if (<doubleQuotes46>month<doubleQuotes46>.equals(part)) {<newline46mondego>                map.put(<doubleQuotes46>DatePartConverter.month<doubleQuotes46>, value); // Save until we have all parts.<newline46mondego>            } else if (<doubleQuotes46>year<doubleQuotes46>.equals(part)) {<newline46mondego>                String day = (String) map.get(<doubleQuotes46>DatePartConverter.day<doubleQuotes46>);<newline46mondego>                String month = (String) map.get(<doubleQuotes46>DatePartConverter.month<doubleQuotes46>);<newline46mondego>                String dateString = String.format(<doubleQuotes46>%s-%s-%s<doubleQuotes46>, day, month, value);<newline46mondego><newline46mondego>                try {<newline46mondego>                    date = new SimpleDateFormat(<doubleQuotes46>d-M-yyyy<doubleQuotes46>).parse(dateString);<newline46mondego>                } catch (ParseException e) {<newline46mondego>                    throw new ConverterException(new FacesMessage(e.getMessage()), e);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return date;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>    public String getAsString(FacesContext context, UIComponent component, Object value) {<newline46mondego>        // Not relevant here. Just return SelectItem's value.<newline46mondego>        return (String) value;<newline46mondego>    }<newline46mondego>"
"4655splitHere46","1931016splitHere46","faces-config.xml"
"4656splitHere46","1931016splitHere46","<converter><newline46mondego>    <converter-id>datePartConverter</converter-id><newline46mondego>    <converter-class>mypackage.DatePartConverter</converter-class><newline46mondego></converter><newline46mondego><newline46mondego><managed-bean><newline46mondego>    <managed-bean-name>myBean</managed-bean-name><newline46mondego>    <managed-bean-class>mypackage.MyBean</managed-bean-class><newline46mondego>    <managed-bean-scope>request</managed-bean-scope><newline46mondego></managed-bean><newline46mondego>"
"4657splitHere46","1931016splitHere46","Validator"
"4658splitHere46","1931016splitHere46","SimpleDateFormat"
"4659splitHere46","1931016splitHere46","lenient"
"4660splitHere46","1931016splitHere46","DatePartValidator"
"4661splitHere46","1931074splitHere46","AbstractRunMojo.java"
"4662splitHere46","1931074splitHere46","private void copyFile( String fromPath, File toFile )<newline46mondego>    throws IOException<newline46mondego>{<newline46mondego><newline46mondego>    URL fromURL = getClass().getResource( fromPath );<newline46mondego><newline46mondego>    if ( fromURL == null )<newline46mondego>    {<newline46mondego>        throw new FileNotFoundException( fromPath );<newline46mondego>    }<newline46mondego><newline46mondego>    FileUtils.copyURLToFile( fromURL, toFile );<newline46mondego>}<newline46mondego>"
"4663splitHere46","1931074splitHere46","getClass().getResource( fromPath )"
"4664splitHere46","1931074splitHere46","null"
"4665splitHere46","1931074splitHere46","pom.xml"
"4666splitHere46","1931074splitHere46","<pluginRepositories><newline46mondego>    <pluginRepository><newline46mondego>      <id>Codehaus Snapshots</id><newline46mondego>      <url>http://snapshots.repository.codehaus.org/</url><newline46mondego>      <snapshots><newline46mondego>        <enabled>true</enabled><newline46mondego>      </snapshots><newline46mondego>      <releases><newline46mondego>        <enabled>true</enabled>  <!-- Workaround for MNG-2974, see note below --><newline46mondego>      </releases><newline46mondego>    </pluginRepository><newline46mondego>  </pluginRepositories><newline46mondego>"
"4667splitHere46","1931074splitHere46","1.0-SNAPSHOT"
"4668splitHere46","1931239splitHere46","private Map<Integer, Map<Long, WebData>> cache =<newline46mondego>    new HashMap<Integer, Map<Long, WebData>>();<newline46mondego>"
"4669splitHere46","1931239splitHere46","private Map<Integer, Map<Long, WebData>> cache =<newline46mondego>    new ConcurrentHashMap<Integer, Map<Long, WebData>>();<newline46mondego>"
"4670splitHere46","1931415splitHere46","<jsp:include>"
"4671splitHere46","1931415splitHere46","page"
"4672splitHere46","1931415splitHere46","/WEB-INF/main.jsp"
"4673splitHere46","1931415splitHere46","<!doctype html><newline46mondego><html lang=<doubleQuotes46>en<doubleQuotes46>><newline46mondego>    <head><newline46mondego>        <title>Title</title><newline46mondego>    </head><newline46mondego>    <body><newline46mondego>        <jsp:include page=<doubleQuotes46>${page}<doubleQuotes46> /><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"4674splitHere46","1931415splitHere46","${page}"
"4675splitHere46","1931415splitHere46","public class PageController extends HttpServlet {<newline46mondego><newline46mondego>    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>        request.setAttribute(<doubleQuotes46>page<doubleQuotes46>, <doubleQuotes46>/WEB-INF<doubleQuotes46> + request.getPathInfo());<newline46mondego>        request.getRequestDispatcher(<doubleQuotes46>/WEB-INF/main.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4676splitHere46","1931415splitHere46","web.xml"
"4677splitHere46","1931415splitHere46","<servlet><newline46mondego>    <servlet-name>pageController</servlet-name><newline46mondego>    <servlet-class>com.example.PageController</servlet-class><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>pageController</servlet-name><newline46mondego>    <url-pattern>/page/*</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"4678splitHere46","1931415splitHere46","http://example.com/context/page/foo.jsp"
"4679splitHere46","1931415splitHere46","/foo.jsp"
"4680splitHere46","1931415splitHere46","page"
"4681splitHere46","1931415splitHere46","/WEB-INF/foo.jsp"
"4682splitHere46","1931415splitHere46","${page}"
"4683splitHere46","1931415splitHere46","jsp:include"
"4684splitHere46","1931415splitHere46","/WEB-INF/foo.jsp"
"4685splitHere46","1931415splitHere46","<body>"
"4686splitHere46","1931415splitHere46","/WEB-INF"
"4687splitHere46","1931415splitHere46","http://example.com/context/foo.jsp"
"4688splitHere46","1931455splitHere46","package com.mycompany.samples.dozer;<newline46mondego><newline46mondego>import java.util.Collection;<newline46mondego><newline46mondego>import org.dozer.DozerConverter;<newline46mondego><newline46mondego>public class TestCustomFieldConverter extends <newline46mondego>        DozerConverter<Collection, Integer> {<newline46mondego><newline46mondego>    public TestCustomFieldConverter() {<newline46mondego>        super(Collection.class, Integer.class);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Integer convertTo(Collection source, Integer destination) {<newline46mondego>        if (source != null) {<newline46mondego>            return source.size();<newline46mondego>        } else {<newline46mondego>            return 0;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Collection convertFrom(Integer source, Collection destination) {<newline46mondego>        throw new IllegalStateException(<doubleQuotes46>Unknown value!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4689splitHere46","1931455splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><mappings xmlns=<doubleQuotes46>http://dozer.sourceforge.net<doubleQuotes46><newline46mondego>          xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>          xsi:schemaLocation=<doubleQuotes46>http://dozer.sourceforge.net<newline46mondego>          http://dozer.sourceforge.net/schema/beanmapping.xsd<doubleQuotes46>><newline46mondego>  <mapping><newline46mondego>    <class-a>com.mycompany.samples.dozer.Source</class-a><newline46mondego>    <class-b>com.mycompany.samples.dozer.Destination</class-b><newline46mondego>    <field custom-converter=<doubleQuotes46>com.mycompany.samples.dozer.TestCustomFieldConverter<doubleQuotes46>><newline46mondego>      <a>images</a><newline46mondego>      <b>numOfImages</b><newline46mondego>    </field><newline46mondego>  </mapping>        <newline46mondego></mappings><newline46mondego>"
"4690splitHere46","1931455splitHere46","@Test<newline46mondego>public void testCollectionToIntMapping() {<newline46mondego>    List<String> mappingFiles = new ArrayList<String>();<newline46mondego>    mappingFiles.add(<doubleQuotes46>com/mycompany/samples/dozer/somedozermapping.xml<doubleQuotes46>);<newline46mondego>    Mapper mapper = new DozerBeanMapper(mappingFiles);<newline46mondego><newline46mondego>    Source sourceObject = new Source();<newline46mondego>    sourceObject.setImages(Arrays.asList( <doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46> ));<newline46mondego><newline46mondego>    Destination destObject = mapper.map(sourceObject, Destination.class);<newline46mondego><newline46mondego>    assertEquals(3, destObject.getNumOfImages());<newline46mondego>}<newline46mondego>"
"4691splitHere46","1931529splitHere46","CustomObject objectToSend=new CustomObject();<newline46mondego>Socket s = new Socket(<doubleQuotes46>yourhostname<doubleQuotes46>, 1234);<newline46mondego>ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());<newline46mondego>out.writeObject(objectToSend);<newline46mondego>out.flush();<newline46mondego>"
"4692splitHere46","1931529splitHere46","ServerSocket server = new ServerSocket(1234);<newline46mondego>Socket s = server.accept();<newline46mondego>ObjectInputStream in = new ObjectInputStream(s.getInputStream());<newline46mondego>CustomObject objectReceived = (CustomObject) in.readObject();<newline46mondego>"
"4693splitHere46","1931579splitHere46","set"
"4694splitHere46","1931579splitHere46","id"
"4695splitHere46","1931579splitHere46","set"
"4696splitHere46","1931579splitHere46","populateMap"
"4697splitHere46","1931579splitHere46","id"
"4698splitHere46","1931579splitHere46","subtasks"
"4699splitHere46","1931579splitHere46","permission"
"4700splitHere46","1931579splitHere46","subtasks"
"4701splitHere46","1931579splitHere46","subtasks.get(id)"
"4702splitHere46","1931579splitHere46","set(result)"
"4703splitHere46","1931579splitHere46","get()"
"4704splitHere46","1931579splitHere46","check()"
"4705splitHere46","1931579splitHere46","Semaphore"
"4706splitHere46","1931579splitHere46","AtomicInteger"
"4707splitHere46","1931579splitHere46","decrementAndGet"
"4708splitHere46","1931579splitHere46","subtasks"
"4709splitHere46","1931579splitHere46","check"
"4710splitHere46","1931579splitHere46","set"
"4711splitHere46","1931579splitHere46","decrementAndGet"
"4712splitHere46","1931667splitHere46","for(int i = 0; i < myArray.length - 1; i += 2) {<newline46mondego>    hashMap.add(myArray[i], myArray[i+1]);<newline46mondego>}<newline46mondego>"
"4713splitHere46","1932010splitHere46","public class EventTable {<newline46mondego>  public void setEvent(Event e) {<newline46mondego>    int x = 0;<newline46mondego>    columns = e.getFields();<newline46mondego>    Event[] savedEvents = e.getSavedEvents();<newline46mondego>    for(Event ev : savedEvents) {<newline46mondego>      tempdata[x] = ev.getTempData();<newline46mondego>      x++;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4714splitHere46","1932010splitHere46","public abstract class Event {<newline46mondego>  public Date getDate() { return(_date); }<newline46mondego>  public abstract Event[] getSavedEvents();<newline46mondego>  public abstract int[] getTempData();<newline46mondego>  public int[] getFormattedDate() {<newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego>"
"4715splitHere46","1932010splitHere46","public class WeightEvent extends Event {<newline46mondego>  public int getWeight() { return(_weight); }<newline46mondego>  public int getReps() { return(_reps); }<newline46mondego>  public int[] getTempData() {<newline46mondego>    return new int[]{<newline46mondego>      getFormattedDate()[0],<newline46mondego>      getWeight(),<newline46mondego>      getReps()<newline46mondego>    };<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class TimedEvent extends Event {<newline46mondego>  public String getTimeInHMS() { return(_timeString); }<newline46mondego>  public int[] getTempData() {<newline46mondego>    return new int[]{<newline46mondego>      getFormattedDate()[0],<newline46mondego>      getTimeInHMS()<newline46mondego>    };<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class RepEvent extends Event {<newline46mondego>  public int getReps() { return(_reps); }<newline46mondego>  public int[] getTempData() {<newline46mondego>    return new int[]{<newline46mondego>      getFormattedDate()[0],<newline46mondego>      getReps()<newline46mondego>    };<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4716splitHere46","1932408splitHere46","static"
"4717splitHere46","1932408splitHere46","final"
"4718splitHere46","1932408splitHere46","final"
"4719splitHere46","1932408splitHere46","final"
"4720splitHere46","1932408splitHere46","Foo"
"4721splitHere46","1932408splitHere46","Bar"
"4722splitHere46","1932408splitHere46","static"
"4723splitHere46","1932408splitHere46","class Foo<newline46mondego>{<newline46mondego>  private static final void foo()<newline46mondego>  {<newline46mondego>    System.out.println(<doubleQuotes46>hollywood!<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public Foo()<newline46mondego>  {<newline46mondego>    foo();      // both compile<newline46mondego>    Foo.foo();  // but I prefer this one<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4724splitHere46","1932438splitHere46","public class Settings {<newline46mondego><newline46mondego>    private static Settings instance;<newline46mondego><newline46mondego>    public static Settings initialise(Properties settings) {<newline46mondego>    	instance = new Settings(settings);<newline46mondego>    	return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    public static Settings get() {<newline46mondego>    	return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    private final Properties settings;<newline46mondego><newline46mondego>    private Settings(Properties settings) {<newline46mondego>    	this.settings = settings;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getProperty(String key) {<newline46mondego>    	return settings.getProperty(key);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4725splitHere46","1932438splitHere46","factory-method=<doubleQuotes46>initialise<doubleQuotes46>"
"4726splitHere46","1932438splitHere46","get()"
"4727splitHere46","1932438splitHere46","Properties"
"4728splitHere46","1932483splitHere46","Socket so = s.accept();"
"4729splitHere46","1932483splitHere46","while"
"4730splitHere46","1932537splitHere46","byte[] buf = new byte[ 1 ];;<newline46mondego>    AudioFormat af = new AudioFormat( (float )44100, 8, 1, true, false );<newline46mondego>    SourceDataLine sdl = AudioSystem.getSourceDataLine( af );<newline46mondego>    sdl = AudioSystem.getSourceDataLine( af );<newline46mondego>    sdl.open( af );<newline46mondego>    sdl.start();<newline46mondego>    for( int i = 0; i < 1000 * (float )44100 / 1000; i++ ) {<newline46mondego>        double angle = i / ( (float )44100 / 440 ) * 2.0 * Math.PI;<newline46mondego>        buf[ 0 ] = (byte )( Math.sin( angle ) * 100 );<newline46mondego>        sdl.write( buf, 0, 1 );<newline46mondego>    }<newline46mondego>    sdl.drain();<newline46mondego>    sdl.stop();<newline46mondego>    sdl.close();<newline46mondego>"
"4731splitHere46","1933222splitHere46","minimumSize"
"4732splitHere46","1933222splitHere46","preferredSize"
"4733splitHere46","1933222splitHere46","Window.pack()"
"4734splitHere46","1933222splitHere46","Component.setSize()"
"4735splitHere46","1933533splitHere46","Timer"
"4736splitHere46","1933533splitHere46","Timer"
"4737splitHere46","1933533splitHere46","ScheduledExecutorService"
"4738splitHere46","1933533splitHere46","Timer"
"4739splitHere46","1933533splitHere46","ScheduledExecutorService"
"4740splitHere46","1933533splitHere46","TimerTask"
"4741splitHere46","1933533splitHere46","Runnable"
"4742splitHere46","1933533splitHere46","ScheduledExecutorService"
"4743splitHere46","1933533splitHere46","// initialise the executor<newline46mondego>	ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();<newline46mondego><newline46mondego>	while (tasksRemaining) {<newline46mondego>		// create your task<newline46mondego>		Runnable task = ....;<newline46mondego>		// submit it to the executor, using one of the various scheduleXYZ methods<newline46mondego>		executor.schedule(task, delay, unit);<newline46mondego>	}<newline46mondego><newline46mondego>	// when everything is finished, shutdown the executor<newline46mondego>	executor.shutdown();<newline46mondego>"
"4744splitHere46","1933831splitHere46","userBean.user"
"4745splitHere46","1933831splitHere46","userBean"
"4746splitHere46","1933831splitHere46","user"
"4747splitHere46","1933831splitHere46","<t:saveState>"
"4748splitHere46","1933831splitHere46","<t:saveState value=<doubleQuotes46>#{userBean.user}<doubleQuotes46> /><newline46mondego>"
"4749splitHere46","1934422splitHere46","int foo(String s){  <newline46mondego>    int total = 0;<newline46mondego>    String currentNum = <doubleQuotes46><doubleQuotes46>  <newline46mondego>    for(int i =0;i<s.length;i++){   <newline46mondego>        if(s[i] ==<doubleQuotes46>+<doubleQuotes46>){   <newline46mondego>           total += Integer.parseInt(currentNum);   <newline46mondego>           currentNum = <doubleQuotes46><doubleQuotes46>   <newline46mondego>        }else if(s[i] ==<doubleQuotes46>-<doubleQuotes46>){  <newline46mondego>           total -= Integer.parseInt(currentNum);  <newline46mondego>           currentNum = <doubleQuotes46><doubleQuotes46>  <newline46mondego>        }else{   <newline46mondego>           currentNum += s[i]   <newline46mondego>        }   <newline46mondego>     }     <newline46mondego>     return total;<newline46mondego>}<newline46mondego>"
"4750splitHere46","1934814splitHere46","protected void setCrosshairLocation(double x, Double y) {<newline46mondego>    Crosshair domainCrosshair;<newline46mondego>    List domainCrosshairs = crosshairOverlay.getDomainCrosshairs();<newline46mondego>    if (domainCrosshairs.isEmpty()) {<newline46mondego>        domainCrosshair = new Crosshair();<newline46mondego>        domainCrosshair.setPaint(BlueStripeColors.LIGHT_GRAY_C0);<newline46mondego>        crosshairOverlay.addDomainCrosshair(domainCrosshair);<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        // We only have one at a time<newline46mondego>        domainCrosshair = (Crosshair) domainCrosshairs.get(0);<newline46mondego>    }<newline46mondego>    domainCrosshair.setValue(x);<newline46mondego><newline46mondego>    if (y != null) {<newline46mondego>        Crosshair rangeCrosshair;<newline46mondego>        List rangeCrosshairs = crosshairOverlay.getRangeCrosshairs();<newline46mondego>        if (rangeCrosshairs.isEmpty()) {<newline46mondego>            rangeCrosshair = new Crosshair();<newline46mondego>            rangeCrosshair.setPaint(BlueStripeColors.LIGHT_GRAY_C0);<newline46mondego>            crosshairOverlay.addRangeCrosshair(rangeCrosshair);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            // We only have one at a time<newline46mondego>            rangeCrosshair = (Crosshair) rangeCrosshairs.get(0);<newline46mondego>        }<newline46mondego><newline46mondego>        rangeCrosshair.setValue(y);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4751splitHere46","1934860splitHere46","Integer.parseInt(<doubleQuotes46>0061<doubleQuotes46>, 16)"
"4752splitHere46","1934860splitHere46","int"
"4753splitHere46","1934860splitHere46","char"
"4754splitHere46","1934988splitHere46","public class B { <newline46mondego>    public static A getA(){ return null; }<newline46mondego>}<newline46mondego><newline46mondego>B.getA().blah(); //works!<newline46mondego>"
"4755splitHere46","1934988splitHere46","A a = B.getA();<newline46mondego>a.blah();<newline46mondego>"
"4756splitHere46","1934988splitHere46","A"
"4757splitHere46","1934988splitHere46","A.blah()"
"4758splitHere46","1934988splitHere46","B.getA();<newline46mondego>A.blah();<newline46mondego>"
"4759splitHere46","1934988splitHere46","getA()"
"4760splitHere46","1934988splitHere46","A.blah();<newline46mondego>"
"4761splitHere46","1934988splitHere46","public class A {<newline46mondego>   public static void blah() { System.err.println(<doubleQuotes46>I'm an A<doubleQuotes46>); }<newline46mondego>}<newline46mondego><newline46mondego>public class SubA extends A {<newline46mondego>   public static void blah() { System.err.println(<doubleQuotes46>I'm a SubA<doubleQuotes46>); }<newline46mondego>}<newline46mondego><newline46mondego>public class B { <newline46mondego>   public static A getA(){ return new SubA(); }<newline46mondego>}<newline46mondego><newline46mondego>B.getA().blah(); //prints <doubleQuotes46>I'm an A<doubleQuotes46>.<newline46mondego>"
"4762splitHere46","1935531splitHere46","AccessController.doPrivileged"
"4763splitHere46","1935531splitHere46","try"
"4764splitHere46","1935531splitHere46","finally"
"4765splitHere46","1935655splitHere46","class Stack<E> {<newline46mondego>    void pushAll( Collection<? extends E> src );<newline46mondego>    void popAll( Collection<? super E> dest );<newline46mondego>}<newline46mondego>"
"4766splitHere46","1935655splitHere46","super"
"4767splitHere46","1935655splitHere46","extends"
"4768splitHere46","1935655splitHere46","pushAll"
"4769splitHere46","1935655splitHere46","Stack<Number>"
"4770splitHere46","1935655splitHere46","src"
"4771splitHere46","1935655splitHere46","Stack"
"4772splitHere46","1935655splitHere46","src"
"4773splitHere46","1935655splitHere46","Collection<Integer>"
"4774splitHere46","1935655splitHere46","? extends E"
"4775splitHere46","1935655splitHere46","popAll"
"4776splitHere46","1935655splitHere46","Stack<Integer>"
"4777splitHere46","1935655splitHere46","Stack"
"4778splitHere46","1935655splitHere46","dest"
"4779splitHere46","1935655splitHere46","dest"
"4780splitHere46","1935655splitHere46","Collection<Number>"
"4781splitHere46","1935655splitHere46","? super E"
"4782splitHere46","1935690splitHere46","$ telnet myshoutcastserver.com 8000<newline46mondego>GET / HTTP 1.1<newline46mondego><newline46mondego>..............a lot of streaming stuff........<newline46mondego>"
"4783splitHere46","1935721splitHere46","int"
"4784splitHere46","1935721splitHere46","0xffffffff"
"4785splitHere46","1935721splitHere46","2^32 -1"
"4786splitHere46","1935721splitHere46","-1"
"4787splitHere46","1935721splitHere46","int"
"4788splitHere46","1935721splitHere46","0xffffffff"
"4789splitHere46","1935721splitHere46","int"
"4790splitHere46","1935721splitHere46","byte"
"4791splitHere46","1935729splitHere46","static"
"4792splitHere46","1935729splitHere46","ThisIsAJFrameExtendingClass.<method name>"
"4793splitHere46","1935729splitHere46","new ThisIsAJFrameExtendingClass()"
"4794splitHere46","1935729splitHere46","JFrame"
"4795splitHere46","1935729splitHere46","utilMethod()"
"4796splitHere46","1935729splitHere46","JFrame"
"4797splitHere46","1935729splitHere46","ArrayList"
"4798splitHere46","1935729splitHere46","List<String>"
"4799splitHere46","1935729splitHere46","Collection<String>"
"4800splitHere46","1935923splitHere46","curl -d"
"4801splitHere46","1935966splitHere46","if (aObj instanceof B.class) {<newline46mondego>  B bObj = (B) aObj;<newline46mondego>  bObj.method1(); //OK<newline46mondego>} else {<newline46mondego>  log.debug(<doubleQuotes46>This is an A, but not a B<doubleQuotes46>);<newline46mondego>}<newline46mondego>aObj.show();<newline46mondego>"
"4802splitHere46","1936131splitHere46","@echo off<newline46mondego>javadoc -locale en_US -version -author %*<newline46mondego>"
"4803splitHere46","1936131splitHere46","javadoc"
"4804splitHere46","1936131splitHere46","%*"
"4805splitHere46","1936166splitHere46","remove(Object index)"
"4806splitHere46","1936166splitHere46","List"
"4807splitHere46","1936166splitHere46","ArrayList"
"4808splitHere46","1936166splitHere46","List"
"4809splitHere46","1936166splitHere46","int"
"4810splitHere46","1936166splitHere46","Object"
"4811splitHere46","1936166splitHere46","size()"
"4812splitHere46","1936166splitHere46","if (index >= 0 && index < list.size()) {<newline46mondego>    // An entry exists; hey, let's remove it<newline46mondego>    list.remove(index);<newline46mondego>}<newline46mondego>"
"4813splitHere46","1936247splitHere46","<passFile>"
"4814splitHere46","1936247splitHere46","<passwordFile>"
"4815splitHere46","1936247splitHere46","<plugin><newline46mondego>  <groupId>org.glassfish.maven.plugin</groupId><newline46mondego>  <artifactId>maven-glassfish-plugin</artifactId><newline46mondego>  <version>2.2-SNAPSHOT</version><newline46mondego>  <configuration><newline46mondego>    <glassfishDirectory>${glassfish.directory}</glassfishDirectory><newline46mondego>    <user>${glassfish.user}</user><newline46mondego>    <passwordFile>${glassfish.directory}/domains/${project.artifactId}/config/domain-passwords</passwordFile><newline46mondego>    <domain><newline46mondego>      <name>${project.artifactId}</name><newline46mondego>    </domain><newline46mondego>    <components><newline46mondego>      <component><newline46mondego>        <name>${project.artifactId}</name><newline46mondego>        <artifact>${project.build.directory}/artifacts/${project.artifactId}.war</artifact><newline46mondego>      </component><newline46mondego>    </components><newline46mondego>  </configuration><newline46mondego></plugin><newline46mondego>"
"4816splitHere46","1936247splitHere46","<glassfish_home>/bin"
"4817splitHere46","1936247splitHere46","$ ./asadmin create-domain  --savemasterpassword=true maven-glassfish-testcase<newline46mondego>"
"4818splitHere46","1936247splitHere46","$ mvn archetype:create -DgroupId=com.mycompany.app \<newline46mondego>      -DartifactId=maven-glassfish-testcase \<newline46mondego>      -DarchetypeArtifactId=maven-archetype-webapp<newline46mondego>"
"4819splitHere46","1936247splitHere46","pom.xml"
"4820splitHere46","1936247splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>  xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<doubleQuotes46>><newline46mondego>  <modelVersion>4.0.0</modelVersion><newline46mondego>  <groupId>com.mycompany.app</groupId><newline46mondego>  <artifactId>maven-glassfish-testcase</artifactId><newline46mondego>  <packaging>war</packaging><newline46mondego>  <version>1.0-SNAPSHOT</version><newline46mondego>  <name>maven-glassfish-testcase Maven Webapp</name><newline46mondego>  <url>http://maven.apache.org</url><newline46mondego>  <properties><newline46mondego>    <glassfish.home>/home/pascal/opt/glassfishv3/glassfish</glassfish.home><newline46mondego>    <domain.username>admin</domain.username><newline46mondego>  </properties><newline46mondego>  <pluginRepositories><newline46mondego>    <pluginRepository><newline46mondego>      <id>ocean</id><newline46mondego>      <url>http://maven.ocean.net.au/snapshot</url><newline46mondego>      <releases><newline46mondego>        <enabled>false</enabled><newline46mondego>        <updatePolicy>never</updatePolicy><newline46mondego>      </releases><newline46mondego>      <snapshots><newline46mondego>        <enabled>true</enabled><newline46mondego>        <updatePolicy>always</updatePolicy><newline46mondego>      </snapshots><newline46mondego>    </pluginRepository><newline46mondego>  </pluginRepositories><newline46mondego>  <dependencies><newline46mondego>    <dependency><newline46mondego>      <groupId>junit</groupId><newline46mondego>      <artifactId>junit</artifactId><newline46mondego>      <version>3.8.1</version><newline46mondego>      <scope>test</scope><newline46mondego>    </dependency><newline46mondego>  </dependencies><newline46mondego>  <build><newline46mondego>    <finalName>maven-glassfish-testcase</finalName><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.glassfish.maven.plugin</groupId><newline46mondego>        <artifactId>maven-glassfish-plugin</artifactId><newline46mondego>        <version>2.2-SNAPSHOT</version><newline46mondego>        <configuration><newline46mondego>          <glassfishDirectory>${glassfish.home}</glassfishDirectory><newline46mondego>          <user>${domain.username}</user><newline46mondego>          <passwordFile>${glassfish.home}/domains/${project.artifactId}/master-password</passwordFile><newline46mondego>          <debug>true</debug><newline46mondego>          <echo>true</echo><newline46mondego>          <domain><newline46mondego>            <name>${project.artifactId}</name><newline46mondego>            <adminPort>4848</adminPort> <!-- mandatory for mvn glassfish:deploy --><newline46mondego>          </domain><newline46mondego>          <components><newline46mondego>            <component><newline46mondego>              <name>${project.artifactId}</name><newline46mondego>              <artifact>${project.build.directory}/${project.build.finalName}.war</artifact><newline46mondego>            </component><newline46mondego>          </components><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego></project><newline46mondego>"
"4821splitHere46","1936247splitHere46","mvn glassfish:start-domain"
"4822splitHere46","1936247splitHere46","--passwordfile"
"4823splitHere46","1936421splitHere46","PHP_Codesniffer"
"4824splitHere46","1936421splitHere46","--------------------------------------------------------------------------------<newline46mondego>FOUND 5 ERROR(S) AND 1 WARNING(S) AFFECTING 5 LINE(S)<newline46mondego>--------------------------------------------------------------------------------<newline46mondego>  2 | ERROR   | Missing file doc comment<newline46mondego> 20 | ERROR   | PHP keywords must be lowercase; expected <doubleQuotes46>false<doubleQuotes46> but found<newline46mondego>    |         | <doubleQuotes46>FALSE<doubleQuotes46><newline46mondego> 47 | ERROR   | Line not indented correctly; expected 4 spaces but found 1<newline46mondego> 47 | WARNING | Equals sign not aligned with surrounding assignments<newline46mondego> 51 | ERROR   | Missing function doc comment<newline46mondego> 88 | ERROR   | Line not indented correctly; expected 9 spaces but found 6<newline46mondego>--------------------------------------------------------------------------------<newline46mondego>"
"4825splitHere46","1936421splitHere46","--undocumentedelements"
"4826splitHere46","1936421splitHere46","phpdoc --filename MyClass.php --target doc --undocumentedelements<newline46mondego>"
"4827splitHere46","1936421splitHere46","Reading file /home/squale/developpement/tests/temp/test-phpdoc/MyClass.php -- Parsing file<newline46mondego>WARNING in MyClass.php on line 2: Class <doubleQuotes46>MyClass<doubleQuotes46> has no Class-level DocBlock.<newline46mondego>WARNING in MyClass.php on line 2: no @package tag was used in a DocBlock for class MyClass<newline46mondego>WARNING in MyClass.php on line 5: Method <doubleQuotes46>__construct<doubleQuotes46> has no method-level DocBlock.<newline46mondego>WARNING in MyClass.php on line 16: File <doubleQuotes46>/home/squale/developpement/tests/temp/test-phpdoc/MyClass.php<doubleQuotes46> has no page-level DocBlock, use @package in the first DocBlock to create one<newline46mondego>done<newline46mondego>"
"4828splitHere46","1936421splitHere46","token_get_all"
"4829splitHere46","1936421splitHere46","PHP_Beautifier"
"4830splitHere46","1936421splitHere46","PHP_Beautifier_Filter"
"4831splitHere46","1936421splitHere46","T_CLASS"
"4832splitHere46","1936421splitHere46","T_FUNCTION"
"4833splitHere46","1936421splitHere46","T_INTERFACE"
"4834splitHere46","1936421splitHere46","MyClass.php"
"4835splitHere46","1936421splitHere46","PHP_Beautifier"
"4836splitHere46","1936421splitHere46","pear install --alldeps Php_Beautifier-beta<newline46mondego>"
"4837splitHere46","1936421splitHere46","wget http://fxnion.free.fr/downloads/phpDoc.filter.phpcs<newline46mondego>cp phpDoc.filter.phpcs phpDoc.filter.php<newline46mondego>"
"4838splitHere46","1936421splitHere46","beautifier-1.php"
"4839splitHere46","1936421splitHere46","MyClass.php"
"4840splitHere46","1936421splitHere46","PHP_Beautifier"
"4841splitHere46","1936421splitHere46","phpDoc"
"4842splitHere46","1936421splitHere46","beautifier-1.php"
"4843splitHere46","1936421splitHere46","require_once 'PHP/Beautifier.php';<newline46mondego><newline46mondego>// Load the content of my source-file, with missing docblocks<newline46mondego>$sourcecode = file_get_contents('MyClass.php');<newline46mondego><newline46mondego>$oToken = new PHP_Beautifier(); <newline46mondego><newline46mondego>// The phpDoc.filter.php file is not in the default directory,<newline46mondego>// but in the <doubleQuotes46>current<doubleQuotes46> one => we need to add it to the list of<newline46mondego>// directories that PHP_Beautifier will search in for filters<newline46mondego>$oToken->addFilterDirectory(dirname(__FILE__));<newline46mondego><newline46mondego>// Adding some nice filters, to format the code<newline46mondego>$oToken->addFilter('ArrayNested');  <newline46mondego>$oToken->addFilter('Lowercase');        <newline46mondego>$oToken->addFilter('IndentStyles', array('style'=>'k&r'));<newline46mondego><newline46mondego>// Adding the phpDoc filter, asking it to add a license<newline46mondego>// at the beginning of the file<newline46mondego>$oToken->addFilter('phpDoc', array('license'=>'php'));<newline46mondego><newline46mondego>// The code is in $sourceCode<newline46mondego>// We could also have used the setInputFile method,<newline46mondego>// instead of having the code in a variable<newline46mondego>$oToken->setInputString($sourcecode);        <newline46mondego>$oToken->process();<newline46mondego><newline46mondego>// And here we get the result, all clean !              <newline46mondego>echo $oToken->get();<newline46mondego>"
"4844splitHere46","1936421splitHere46","phpDoc.filter.php"
"4845splitHere46","1936421splitHere46","beautifier-1.php"
"4846splitHere46","1936421splitHere46","$ php ./beautifier-1.php<newline46mondego>"
"4847splitHere46","1936421splitHere46","MyClass.php"
"4848splitHere46","1936421splitHere46","class MyClass {<newline46mondego>    public function __construct($myString, $myInt) {<newline46mondego>        // <newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Method with some comment<newline46mondego>     * @param array $params blah blah<newline46mondego>     */<newline46mondego>    public function doSomething(array $params = array()) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    protected $_myVar;<newline46mondego>}<newline46mondego>"
"4849splitHere46","1936421splitHere46","<?php<newline46mondego>/**<newline46mondego> *<newline46mondego> * PHP version 5<newline46mondego> *<newline46mondego> * LICENSE: This source file is subject to version 3.0 of the PHP license<newline46mondego> * that is available through the world-wide-web at the following URI:<newline46mondego> * http://www.php.net/license/3_0.txt.  If you did not receive a copy of<newline46mondego> * the PHP License and are unable to obtain it through the web, please<newline46mondego> * send a note to license@php.net so we can mail you a copy immediately.<newline46mondego> * @category   PHP<newline46mondego> * @package<newline46mondego> * @subpackage Filter<newline46mondego> * @author FirstName LastName <mail><newline46mondego> * @copyright 2009 FirstName LastName<newline46mondego> * @link<newline46mondego> * @license     http://www.php.net/license/3_0.txt  PHP License 3.0<newline46mondego> * @version    CVS: $Id:$<newline46mondego> */<newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * @todo Description of class MyClass<newline46mondego> * @author <newline46mondego> * @version <newline46mondego> * @package <newline46mondego> * @subpackage <newline46mondego> * @category <newline46mondego> * @link <newline46mondego> */<newline46mondego>class MyClass {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @todo Description of function __construct<newline46mondego>     * @param  $myString <newline46mondego>     * @param  $myInt<newline46mondego>     * @return <newline46mondego>     */<newline46mondego>    public function __construct($myString, $myInt) {<newline46mondego>        //<newline46mondego><newline46mondego>    }<newline46mondego>    /**<newline46mondego>     * Method with some comment<newline46mondego>     * @param array $params blah blah<newline46mondego>     */<newline46mondego>    public function doSomething(array $params = array()) {<newline46mondego>        // ...<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    protected $_myVar;<newline46mondego>}<newline46mondego>"
"4850splitHere46","1936421splitHere46","MyClass"
"4851splitHere46","1936421splitHere46","__construct"
"4852splitHere46","1936421splitHere46","doSomething"
"4853splitHere46","1936421splitHere46","@todo"
"4854splitHere46","1936421splitHere46","protected $_myVar"
"4855splitHere46","1936472splitHere46","LinkedHashMap"
"4856splitHere46","1936472splitHere46","LinkedList"
"4857splitHere46","1936472splitHere46","entrySet().iterator().next()"
"4858splitHere46","1936472splitHere46","LinkedMap"
"4859splitHere46","1936472splitHere46","firstKey"
"4860splitHere46","1936472splitHere46","lastKey"
"4861splitHere46","1936519splitHere46","Component[] components = parentComponent.getComponents();<newline46mondego><newline46mondego>for(int i = 0; i < components.length; i++) {<newline46mondego>    if(components.getName().equals(index)) {<newline46mondego>        cardLayout.removeLayoutComponent(components[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4862splitHere46","1936715splitHere46","CallableStatement"
"4863splitHere46","1936775splitHere46","portupgrade"
"4864splitHere46","1936810splitHere46","ServletOutputStream"
"4865splitHere46","1936810splitHere46","JspWriter"
"4866splitHere46","1936865splitHere46","ByteBuffer b = ByteBuffer.allocate(4);<newline46mondego>//b.order(ByteOrder.BIG_ENDIAN); // optional, the initial order of a byte buffer is always BIG_ENDIAN.<newline46mondego>b.putInt(0xAABBCCDD);<newline46mondego><newline46mondego>byte[] result = b.array();<newline46mondego>"
"4867splitHere46","1936865splitHere46","result[0] == 0xAA"
"4868splitHere46","1936865splitHere46","result[1] == 0xBB"
"4869splitHere46","1936865splitHere46","result[2] == 0xCC"
"4870splitHere46","1936865splitHere46","result[3] == 0xDD"
"4871splitHere46","1936865splitHere46","byte[] toBytes(int i)<newline46mondego>{<newline46mondego>  byte[] result = new byte[4];<newline46mondego><newline46mondego>  result[0] = (byte) (i >> 24);<newline46mondego>  result[1] = (byte) (i >> 16);<newline46mondego>  result[2] = (byte) (i >> 8);<newline46mondego>  result[3] = (byte) (i /*>> 0*/);<newline46mondego><newline46mondego>  return result;<newline46mondego>}<newline46mondego>"
"4872splitHere46","1936865splitHere46","ByteBuffer"
"4873splitHere46","1936865splitHere46","java.nio.Bits"
"4874splitHere46","1936865splitHere46","ByteBuffer.putInt()"
"4875splitHere46","1936865splitHere46","private static byte int3(int x) { return (byte)(x >> 24); }<newline46mondego>private static byte int2(int x) { return (byte)(x >> 16); }<newline46mondego>private static byte int1(int x) { return (byte)(x >>  8); }<newline46mondego>private static byte int0(int x) { return (byte)(x >>  0); }<newline46mondego>"
"4876splitHere46","1936904splitHere46","JFrame.addMouseListener( new MouseAdapter() {<newline46mondego>    public void mouseEntered( MouseEvent e ) {<newline46mondego>        // your code here<newline46mondego>    }<newline46mondego>} );<newline46mondego>"
"4877splitHere46","1937023splitHere46","msdata"
"4878splitHere46","1937023splitHere46","<xs:schema targetNamespace=<doubleQuotes46>http://maps.trimet.org/maps/model/xml<doubleQuotes46> <newline46mondego>    xmlns=<doubleQuotes46>http://maps.trimet.org/maps/model/xml<doubleQuotes46><newline46mondego>    ....<newline46mondego>    xmlns:msdata=<doubleQuotes46>http://yournamespace.com/foo<doubleQuotes46>><newline46mondego>"
"4879splitHere46","1937083splitHere46","Map"
"4880splitHere46","1937083splitHere46","String[] words = string.toLowerCase().split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>Map<String, Integer> wordCounts = new HashMap<String, Integer>();<newline46mondego><newline46mondego>for (String word : words) {<newline46mondego>    Integer count = wordCounts.get(word);<newline46mondego>    if (count == null) {<newline46mondego>        count = 0;<newline46mondego>    }<newline46mondego>    wordCounts.put(word, count + 1);<newline46mondego>}<newline46mondego>"
"4881splitHere46","1937083splitHere46","toLowerCase()"
"4882splitHere46","1937083splitHere46","split()"
"4883splitHere46","1937096splitHere46","Intents"
"4884splitHere46","1937096splitHere46","ContentProvider"
"4885splitHere46","1937152splitHere46","public class TransparentFrame {<newline46mondego>  private static final float OPAQUE = 1.0f;<newline46mondego>  private static final float TRANSLUCENT = 0.1f;<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    final JFrame frame = new JFrame();<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(600, 400);<newline46mondego>    frame.addMouseListener(new MouseAdapter() {<newline46mondego>      @Override<newline46mondego>      public void mouseEntered(MouseEvent e) {<newline46mondego>        com.sun.awt.AWTUtilities.setWindowOpacity(frame, OPAQUE);<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void mouseExited(MouseEvent e) {<newline46mondego>        com.sun.awt.AWTUtilities.setWindowOpacity(frame, TRANSLUCENT);<newline46mondego>      }<newline46mondego>    });<newline46mondego>    frame.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4886splitHere46","1937152splitHere46","com.sun"
"4887splitHere46","1937314splitHere46","Age"
"4888splitHere46","1937314splitHere46","Person.getAge"
"4889splitHere46","1937314splitHere46","Age"
"4890splitHere46","1937314splitHere46","int"
"4891splitHere46","1937314splitHere46","int"
"4892splitHere46","1937314splitHere46","Person"
"4893splitHere46","1937314splitHere46","Age"
"4894splitHere46","1937700splitHere46","StreamResult"
"4895splitHere46","1937700splitHere46","StreamResult sr = new StreamResult(new File(<doubleQuotes46>/my/file.xml<doubleQuotes46>));<newline46mondego>"
"4896splitHere46","1937700splitHere46","Transformer"
"4897splitHere46","1937700splitHere46","StreamResult"
"4898splitHere46","1937860splitHere46","WEB-INF/lib"
"4899splitHere46","1937860splitHere46","WEB-INF/lib/spring/org.springframework.aop-3.0.0.RELEASE.jar"
"4900splitHere46","1937860splitHere46","WEB-INF/lib/org.springframework.aop-3.0.0.RELEASE.jar"
"4901splitHere46","1937925splitHere46","<script>"
"4902splitHere46","1937925splitHere46","import com.opensymphony.module.sitemesh.parser.HTMLPageParser;<newline46mondego><newline46mondego>public CustomPageParser extends HTMLPageParser {<newline46mondego><newline46mondego>    protected void addUserDefinedRules(State html, PageBuilder page) {<newline46mondego>        super.addUserDefinedRules(html, page);<newline46mondego><newline46mondego>        html.addRule(new ScriptExtractingRule(page));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4903splitHere46","1937925splitHere46","<content>"
"4904splitHere46","1938075splitHere46","PeriodFormatter yearsAndMonths = new PeriodFormatterBuilder()<newline46mondego> .printZeroAlways()<newline46mondego> .appendYears()<newline46mondego> .appendSuffix(<doubleQuotes46> year<doubleQuotes46>, <doubleQuotes46> years<doubleQuotes46>)<newline46mondego> .appendSeparator(<doubleQuotes46> and <doubleQuotes46>)<newline46mondego> .printZeroRarely()<newline46mondego> .appendMonths()<newline46mondego> .appendSuffix(<doubleQuotes46> month<doubleQuotes46>, <doubleQuotes46> months<doubleQuotes46>)<newline46mondego> .toFormatter();<newline46mondego>"
"4905splitHere46","1938117splitHere46","data[10] = {10,20,30,40,50,60,71,80,90,91};<newline46mondego>"
"4906splitHere46","1938117splitHere46","int data[] = new int[] {10,20,30,40,50,60,71,80,90,91 };<newline46mondego><newline46mondego>or<newline46mondego><newline46mondego>int data[];<newline46mondego>data=new int[] {10,20,30,40,50,60,71,80,90,91 };<newline46mondego>"
"4907splitHere46","1938226splitHere46","int width = 0;<newline46mondego>int height = 0;<newline46mondego>GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>GraphicsDevice[] gs = ge.getScreenDevices();<newline46mondego>for (GraphicsDevice curGs : gs)<newline46mondego>{<newline46mondego>  DisplayMode mode = curGs.getDisplayMode();<newline46mondego>  width += mode.getWidth();<newline46mondego>  height = mode.getHeight();<newline46mondego>}<newline46mondego>"
"4908splitHere46","1938226splitHere46","f.setSize(width, height);"
"4909splitHere46","1938405splitHere46","Integer.parseInt(String);"
"4910splitHere46","1938405splitHere46","int[] array = new int[size];<newline46mondego>    try {<newline46mondego>        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));<newline46mondego>        for (int j = 0; j < array.length ; j++) {<newline46mondego>                int k = Integer.parseInt(br.readLine());<newline46mondego>                array[j] = k;<newline46mondego>        }<newline46mondego>     }<newline46mondego><newline46mondego>    catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>     }<newline46mondego>"
"4911splitHere46","1938405splitHere46","int[] array = new int[size];<newline46mondego>    try {<newline46mondego>        Scanner in = new Scanner(System.in); //Import java.util.Scanner for it<newline46mondego>        for (int j = 0; j < array.length ; j++) {<newline46mondego>                int k = in.nextInt();<newline46mondego>                array[j] = k;<newline46mondego>        }<newline46mondego>     }<newline46mondego>     catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>     }<newline46mondego>"
"4912splitHere46","1938501splitHere46","class Spam {<newline46mondego>  public static void main(String[] args) {<newline46mondego><newline46mondego>    int n = Integer.valueOf(args[0]);<newline46mondego><newline46mondego>    // Declare an array:<newline46mondego>    Foo[] myArray;<newline46mondego><newline46mondego>    // Create an array:<newline46mondego>    myArray = new Foo[n];<newline46mondego><newline46mondego>    // Foo[0] through Foo[n - 1] are now references to Foo objects, initially null.<newline46mondego><newline46mondego>    // Populate the array:<newline46mondego>    for (int i = 0; i < n; i++) {<newline46mondego>      myArray[i] = new Foo();<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4913splitHere46","1938619splitHere46","public static String callWebServiceMethod(String email){<newline46mondego>HttpClient httpClient = new DefaultHttpClient();<newline46mondego>HttpPost httpPost = new HttpPost(<doubleQuotes46>http://www.example.com/example.asmx<doubleQuotes46>);<newline46mondego>String  webServiceXml = <doubleQuotes46><doubleQuotes46>;<newline46mondego>String  response = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>	webServiceXml += <doubleQuotes46><?xml version=\<doubleQuotes46>1.0\<doubleQuotes46> encoding=\<doubleQuotes46>utf-8\<doubleQuotes46>?><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46><soap:Envelope xmlns:xsi=\<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance\<doubleQuotes46> xmlns:xsd=\<doubleQuotes46>http://www.w3.org/2001/XMLSchema\<doubleQuotes46> xmlns:soap=\<doubleQuotes46>http://schemas.xmlsoap.org/soap/envelope/\<doubleQuotes46>><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46><soap:Header><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46><AuthHeader xmlns=\<doubleQuotes46>http://www.example.com/\<doubleQuotes46>><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46></AuthHeader><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46></soap:Header><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46><soap:Body><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46><WebServiceMethod1 xmlns=\<doubleQuotes46>http://www.example.com/\<doubleQuotes46>><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46><emailId><doubleQuotes46> + email + <doubleQuotes46></emailId><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46></WebServiceMethod1><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46></soap:Body><doubleQuotes46>;<newline46mondego>	webServiceXml += <doubleQuotes46></soap:Envelope><doubleQuotes46>;<newline46mondego><newline46mondego>	httpPost.setHeader(<doubleQuotes46>content-type<doubleQuotes46>,<doubleQuotes46>text/xml; charset=utf-8<doubleQuotes46>);<newline46mondego>	httpPost.setHeader(<doubleQuotes46>SOAPAction<doubleQuotes46>,<doubleQuotes46>http://www.example.com/WebServiceMethod1<doubleQuotes46>);<newline46mondego><newline46mondego>	httpPost.setEntity(new StringEntity(webServiceXml));<newline46mondego><newline46mondego>	HttpResponse httpResponse = httpClient.execute(httpPost);<newline46mondego><newline46mondego>	response = EntityUtils.toString(httpResponse.getEntity());<newline46mondego>}<newline46mondego>catch(Exception ex)<newline46mondego>{<newline46mondego>	Log.i(<doubleQuotes46>error<doubleQuotes46>, ex.getMessage());<newline46mondego>}<newline46mondego><newline46mondego>return response;<newline46mondego>"
"4914splitHere46","1938670splitHere46","http://listen.grooveshark.com/#/search/songs/?query=ween<newline46mondego>"
"4915splitHere46","1938670splitHere46","http://listen.grooveshark.com/#/search/songs/?query=bungle<newline46mondego>"
"4916splitHere46","1938723splitHere46","prefer-web-inf-classes"
"4917splitHere46","1938723splitHere46","weblogic-application.xml"
"4918splitHere46","1938723splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><weblogic-application xmlns=<doubleQuotes46>http://www.bea.com/ns/weblogic/90<doubleQuotes46>><newline46mondego>    <application-param><newline46mondego>    	<param-name>webapp.encoding.default</param-name><newline46mondego>    	<param-value>UTF-8</param-value><newline46mondego>    </application-param><newline46mondego>    <prefer-application-packages><newline46mondego>    	<package-name>javax.jws.*</package-name><newline46mondego>    </prefer-application-packages><newline46mondego></weblogic-application><newline46mondego>"
"4919splitHere46","1938778splitHere46","Connection con = getMyConnection();<newline46mondego>	try {<newline46mondego>		PreparedStatement ps = con.prepareStatement(<doubleQuotes46>select * from TableA where num = ?<doubleQuotes46>);<newline46mondego>		try {<newline46mondego>			ps.setLong(1, number);<newline46mondego>			ResultSet rs = ps.executeQuery();<newline46mondego>			while(rs.next()) {<newline46mondego>				//TODO<newline46mondego>			}<newline46mondego>		} finally {<newline46mondego>			ps.close();<newline46mondego>		}<newline46mondego>	} finally {<newline46mondego>		con.close();<newline46mondego>	}<newline46mondego>"
"4920splitHere46","1938858splitHere46","long"
"4921splitHere46","1938858splitHere46","java.lang.Long"
"4922splitHere46","1938858splitHere46","java.math.BigInteger"
"4923splitHere46","1938858splitHere46","java.math.BigDecimal"
"4924splitHere46","1938877splitHere46","scheduleWithFixedDelay"
"4925splitHere46","1938877splitHere46","scheduleAtFixedRate"
"4926splitHere46","1938877splitHere46","scheduleWithFixedDelay"
"4927splitHere46","1938877splitHere46","scheduleAtFixedRate"
"4928splitHere46","1938877splitHere46","java.util.concurrent.RejectedExecutionHandler"
"4929splitHere46","1938877splitHere46","DiscardPolicy"
"4930splitHere46","1938877splitHere46","ScheduledThreadPoolExecutor"
"4931splitHere46","1938877splitHere46","Executors"
"4932splitHere46","1938878splitHere46","EntityManager"
"4933splitHere46","1938878splitHere46","EntityManager"
"4934splitHere46","1938878splitHere46","@PersistenceContext"
"4935splitHere46","1938878splitHere46","EntityManager"
"4936splitHere46","1938878splitHere46","Persistence.create.."
"4937splitHere46","1938917splitHere46","Connection con = null;<newline46mondego>PreparedStatement pStmt = null;<newline46mondego>ResultSet rs = null;<newline46mondego>try<newline46mondego>{<newline46mondego>    con = ds.getConnection();<newline46mondego>    pStmt = con.prepareStatement(<doubleQuotes46>SELECT ....<doubleQuotes46>);<newline46mondego>    rs = pStmt.executeQuery();<newline46mondego>    while (rs.next()) {<newline46mondego>        Item item = new Item();<newline46mondego><newline46mondego>        item.setItemNo(rs.getString(<doubleQuotes46>item_id<doubleQuotes46>));<newline46mondego>        ...<newline46mondego><newline46mondego>        items.add(item);<newline46mondego>    }<newline46mondego>}<newline46mondego>finally {<newline46mondego>    rs = DBUtil.close (rs);<newline46mondego>    pStmt = DBUtil.close (rs);<newline46mondego>    con = DBUtil.close (rs);<newline46mondego>}<newline46mondego>"
"4938splitHere46","1938917splitHere46","close()"
"4939splitHere46","1938917splitHere46","public static ResultSet close (ResultSet rs) {<newline46mondego>    try {<newline46mondego>        if (rs != null)<newline46mondego>            rs.close ();<newline46mondego>    } catch (SQLException e) {<newline46mondego>        e.printStackTrace (); <newline46mondego>        // Or use your favorite logging framework.<newline46mondego>        // DO NOT THROW THIS EXCEPTION OR IT WILL<newline46mondego>        // HIDE EXCEPTIONS IN THE CALLING METHOD!!<newline46mondego>    }<newline46mondego>    return null; // Make sure no one uses this anymore<newline46mondego>}<newline46mondego>"
"4940splitHere46","1938917splitHere46","DBOp"
"4941splitHere46","1938917splitHere46","processRow(ResultSet row)"
"4942splitHere46","1938917splitHere46","DBOp"
"4943splitHere46","1938917splitHere46","public DBOp (Logger log, DataSource ds, String sql, Object... param)<newline46mondego>"
"4944splitHere46","1939170splitHere46","import java.io.File;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.sql.Connection;<newline46mondego>import java.sql.DriverManager;<newline46mondego>import java.sql.PreparedStatement;<newline46mondego>import java.sql.SQLException;<newline46mondego><newline46mondego>public class InsertPictureToMySql {<newline46mondego>  public static void main(String[] args) throws Exception, IOException, SQLException {<newline46mondego>    Class.forName(<doubleQuotes46>org.gjt.mm.mysql.Driver<doubleQuotes46>);<newline46mondego>    Connection conn = DriverManager.getConnection(<doubleQuotes46>jdbc:mysql://localhost/databaseName<doubleQuotes46>, <doubleQuotes46>root<doubleQuotes46>, <doubleQuotes46>root<doubleQuotes46>);<newline46mondego>    String INSERT_PICTURE = <doubleQuotes46>INSERT INTO MyPictures (photo) VALUES (?)<doubleQuotes46>;<newline46mondego><newline46mondego>    FileInputStream fis = null;<newline46mondego>    PreparedStatement ps = null;<newline46mondego>    try {<newline46mondego>      conn.setAutoCommit(false);<newline46mondego>      File file = new File(<doubleQuotes46>/tmp/photo.png<doubleQuotes46>);<newline46mondego>      fis = new FileInputStream(file);<newline46mondego>      ps = conn.prepareStatement(INSERT_PICTURE);<newline46mondego>      ps.setBinaryStream(1, fis, (int) file.length());<newline46mondego>      ps.executeUpdate();<newline46mondego>      conn.commit();<newline46mondego>    } finally {<newline46mondego>      ps.close();<newline46mondego>      fis.close();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4945splitHere46","1939170splitHere46","CREATE TABLE MyPictures (<newline46mondego>   photo  BLOB<newline46mondego>);<newline46mondego>"
"4946splitHere46","1939170splitHere46","LOAD_FILE()"
"4947splitHere46","1939170splitHere46","INSERT INTO MyPictures (photo) VALUES(LOAD_FILE('/tmp/photo.png'));<newline46mondego>"
"4948splitHere46","1939246splitHere46","Runnable"
"4949splitHere46","1939246splitHere46","SimpleAsyncTaskExecutor"
"4950splitHere46","1939262splitHere46","int[] longArray = { 1, 3, 2 };<newline46mondego>    int[] shortArray = { 1, 2 };<newline46mondego><newline46mondego>    //Check which array is longer, if b longer than a then swap<newline46mondego><newline46mondego>	for (int x:longArray){<newline46mondego>        set.add(x);<newline46mondego>	}<newline46mondego>	for (int x:shortArray){<newline46mondego>	    if (set.contains(x))<newline46mondego>	       set.remove(x);<newline46mondego>	}<newline46mondego>	//odd numbers<newline46mondego>	for (Object i:set.toArray())<newline46mondego>		System.out.println(i+<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"4951splitHere46","1939672splitHere46","C:\Program Files (x86)\Java\jdk1.6.0_17\bin"
"4952splitHere46","1939672splitHere46","C:\Program Files (x86)\Java\jdk1.6.0_17\bin"
"4953splitHere46","1939672splitHere46","PATH"
"4954splitHere46","1939672splitHere46","JAVA_PATH"
"4955splitHere46","1939672splitHere46","C:\Program Files (x86)\Java\jdk1.6.0_17"
"4956splitHere46","1939672splitHere46","set JAVA_PATH=<doubleQuotes46>C:\Program Files (x86)\Java\jdk1.6.0_17<doubleQuotes46><newline46mondego>set PATH=%PATH%;<doubleQuotes46>C:\Program Files (x86)\Java\jdk1.6.0_17\bin<doubleQuotes46><newline46mondego>"
"4957splitHere46","1939672splitHere46","javac"
"4958splitHere46","1939695splitHere46","ClassA.class.getResourceAsStream(<doubleQuotes46>/packageB/yourfile.ext<doubleQuotes46>);<newline46mondego>"
"4959splitHere46","1939709splitHere46","String"
"4960splitHere46","1939709splitHere46","Cast2(List<?>)"
"4961splitHere46","1939709splitHere46","static int dimension2(Object object) {<newline46mondego><newline46mondego>    int result = 0;<newline46mondego>    if (object instanceof List<?>) {<newline46mondego><newline46mondego>        result++;<newline46mondego>        List<?> list = (List<?>) object;<newline46mondego>        for (Object element : list) {<newline46mondego>            if (element != null) {<newline46mondego>                result += dimension2(element);<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>static Object cast2(List<?> l) {<newline46mondego><newline46mondego>    int dim = dimension2(l);<newline46mondego>    if (dim == 1) {<newline46mondego>        return l.toArray(new String[0]);<newline46mondego>    }<newline46mondego><newline46mondego>    int[] dims = new int[dimension2(l)];<newline46mondego>    dims[0] = l.size();<newline46mondego>    Object a = Array.newInstance(String.class, dims);<newline46mondego>    for (int i = 0; i < l.size(); i++) {<newline46mondego><newline46mondego>        List<?> e = (List<?>) l.get(i);<newline46mondego>        if (e == null) {<newline46mondego>            Array.set(a, i, null);<newline46mondego>        } else if (dimension2(e) > 1) {<newline46mondego>            Array.set(a, i, cast2(e));<newline46mondego>        } else {<newline46mondego>            Array.set(a, i, e.toArray(new String[0]));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return a;<newline46mondego>}<newline46mondego>"
"4962splitHere46","1939727splitHere46","genrecode=new String[entries];"
"4963splitHere46","1939727splitHere46","genrename=new String[entries];"
"4964splitHere46","1939727splitHere46","genrecode=new String[entries];<newline46mondego>genrename=new String[entries];<newline46mondego>for(int i = 0; i < entries; i++) {<newline46mondego>    JSONObject jo_genre = (JSONObject) ja_genres.get(i);<newline46mondego>    JSONArray ja_genre=jo_genre.getJSONArray(<doubleQuotes46>genre<doubleQuotes46>);<newline46mondego>    JSONObject genreinfo = (JSONObject) ja_genre.get(0);<newline46mondego>    genrecode[i]= genreinfo.getString(<doubleQuotes46>code<doubleQuotes46>);<newline46mondego>    genrename[i] = genreinfo.getString(<doubleQuotes46>name<doubleQuotes46>);<newline46mondego>    System.out.println(genrecode[i]);<newline46mondego>    System.out.println(genrename[i]);<newline46mondego>}<newline46mondego>"
"4965splitHere46","1939727splitHere46","i"
"4966splitHere46","1939787splitHere46","java VendingMachine<newline46mondego>"
"4967splitHere46","1939908splitHere46","//List<SomeBean> are ok in both lists<newline46mondego>	fromMap.put(<doubleQuotes46>key<doubleQuotes46>, new ArrayList<SomeBean>());<newline46mondego>	toMap.put(<doubleQuotes46>key<doubleQuotes46>, new ArrayList<SomeBean>());<newline46mondego><newline46mondego>	//List<String> are ok in Map<String,List<?>>, not in Map<String, List<SomeBean>><newline46mondego>	fromMap.put(<doubleQuotes46>key<doubleQuotes46>, new ArrayList<String>()); //DOES NOT COMPILE<newline46mondego>	toMap.put(<doubleQuotes46>key<doubleQuotes46>, new ArrayList<String>());<newline46mondego>"
"4968splitHere46","1939908splitHere46","Map<String, List<SomeBean>> fromMap = new LinkedHashMap<String, List<SomeBean>>();<newline46mondego>	Map<String,List<?>> toMap = new LinkedHashMap<String, List<?>>(fromMap);<newline46mondego>"
"4969splitHere46","1940004splitHere46","UINamingContainer"
"4970splitHere46","1940004splitHere46","h:form"
"4971splitHere46","1940004splitHere46","h:dataTable"
"4972splitHere46","1940004splitHere46","f:subview"
"4973splitHere46","1940004splitHere46","id"
"4974splitHere46","1940004splitHere46","name"
"4975splitHere46","1940004splitHere46","id"
"4976splitHere46","1940004splitHere46",":"
"4977splitHere46","1940004splitHere46","param['foo:bar']"
"4978splitHere46","1940004splitHere46","<f:view><newline46mondego>    <h:form id=<doubleQuotes46>account<doubleQuotes46>><newline46mondego>        <div><newline46mondego>            <label>Id</label><newline46mondego>            <h:inputText id=<doubleQuotes46>id<doubleQuotes46> /><newline46mondego>        </div><newline46mondego>        <div><newline46mondego>            <label>Amount</label><newline46mondego>            <h:inputText id=<doubleQuotes46>amount<doubleQuotes46> /><newline46mondego>        </div><newline46mondego>        <h:commandButton value=<doubleQuotes46>Withdraw<doubleQuotes46> <newline46mondego>            action=<doubleQuotes46>#{accountService.withdraw(param['account:id'], param['account:amount'])}<doubleQuotes46>/><newline46mondego>    </h:form><newline46mondego></f:view><newline46mondego>"
"4979splitHere46","1940004splitHere46","public void withDraw() {<newline46mondego>    Map<String, String> map = FacesContext.getCurrentInstance().getRequestParameterMap();<newline46mondego>    String id = map.get(<doubleQuotes46>account:id<doubleQuotes46>);<newline46mondego>    String amount = map.get(<doubleQuotes46>account:amount<doubleQuotes46>);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4980splitHere46","1940004splitHere46","<h:inputText"
"4981splitHere46","1940004splitHere46","formId:inputId"
"4982splitHere46","1940004splitHere46","formId"
"4983splitHere46","1940004splitHere46","id"
"4984splitHere46","1940004splitHere46","UIForm"
"4985splitHere46","1940004splitHere46","inputId"
"4986splitHere46","1940004splitHere46","id"
"4987splitHere46","1940004splitHere46","UIInput"
"4988splitHere46","1940004splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46>>"
"4989splitHere46","1940004splitHere46","['name']"
"4990splitHere46","1940004splitHere46",":"
"4991splitHere46","1940004splitHere46","${param.formId:inputId}"
"4992splitHere46","1940004splitHere46","#{param['formId:inputId']}<newline46mondego>"
"4993splitHere46","1940292splitHere46","java -cp {name_of_jar} {name_of_class} {name_of_csv}<newline46mondego>"
"4994splitHere46","1940292splitHere46","args[0]"
"4995splitHere46","1940292splitHere46","java -jar {name_of_jar} {name_of_csv}<newline46mondego>"
"4996splitHere46","1940292splitHere46","args[]"
"4997splitHere46","1940608splitHere46","ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(data));<newline46mondego>Message message = (Message) in.readObject();<newline46mondego>in.close();<newline46mondego>"
"4998splitHere46","1941516splitHere46","(let [c <doubleQuotes46>CONSTANT_FIELD<doubleQuotes46>]<newline46mondego>  (.get (.getField ClassName c) nil))<newline46mondego>"
"4999splitHere46","1941696splitHere46","0xD835 0xDD0A"
"5000splitHere46","1941696splitHere46","<doubleQuotes46>\uD835\uDD0A<doubleQuotes46>"
"5001splitHere46","1941696splitHere46","// Unicode code point to char array<newline46mondego>char[] math_fraktur_cap_g = Character.toChars(0x1D50A);<newline46mondego>"
"5002splitHere46","1941857splitHere46","<form:checkboxes items=<doubleQuotes46>${faxStatusList}<doubleQuotes46> path=<doubleQuotes46>faxStatusList<doubleQuotes46> itemLabel=<doubleQuotes46>name<doubleQuotes46> itemValue=<doubleQuotes46>id<doubleQuotes46> delimiter=<doubleQuotes46><br/><doubleQuotes46> onclick=<doubleQuotes46>yourOnClickMethodIfYouNeed(this);<doubleQuotes46>/><newline46mondego>"
"5003splitHere46","1942477splitHere46","JFrame.setDefaultLookAndFeelDecorated(true);<newline46mondego>JFrame frame = new JFrame();<newline46mondego>"
"5004splitHere46","1942680splitHere46","package test;<newline46mondego><newline46mondego>import java.lang.reflect.Field;<newline46mondego>import java.lang.reflect.ParameterizedType;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    List<String> stringList = new ArrayList<String>();<newline46mondego>    List<Integer> integerList = new ArrayList<Integer>();<newline46mondego><newline46mondego>    public static void main(String... args) throws Exception {<newline46mondego>        Field stringListField = Test.class.getDeclaredField(<doubleQuotes46>stringList<doubleQuotes46>);<newline46mondego>        ParameterizedType stringListType = (ParameterizedType) stringListField.getGenericType();<newline46mondego>        Class<?> stringListClass = (Class<?>) stringListType.getActualTypeArguments()[0];<newline46mondego>        System.out.println(stringListClass); // class java.lang.String.<newline46mondego><newline46mondego>        Field integerListField = Test.class.getDeclaredField(<doubleQuotes46>integerList<doubleQuotes46>);<newline46mondego>        ParameterizedType integerListType = (ParameterizedType) integerListField.getGenericType();<newline46mondego>        Class<?> integerListClass = (Class<?>) integerListType.getActualTypeArguments()[0];<newline46mondego>        System.out.println(integerListClass); // class java.lang.Integer.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5005splitHere46","1942711splitHere46","<address-settings><newline46mondego>      <!--default for catch all--><newline46mondego>      <address-setting match=<doubleQuotes46>#<doubleQuotes46>><newline46mondego>         <dead-letter-address>jms.queue.DLQ</dead-letter-address><newline46mondego>         <expiry-address>jms.queue.ExpiryQueue</expiry-address><newline46mondego>         <redelivery-delay>0</redelivery-delay><newline46mondego>         <page-size-bytes>10485760</page-size-bytes><newline46mondego>         <message-counter-history-day-limit>10</message-counter-history-day-limit><newline46mondego><newline46mondego>         <!-- Add these 2 lines --><newline46mondego>         <max-size-bytes>104857600</max-size-bytes><newline46mondego>         <address-full-policy>PAGE</address-full-policy><newline46mondego><newline46mondego>      </address-setting><newline46mondego>   </address-settings><newline46mondego>"
"5006splitHere46","1942740splitHere46","<newline46mondego>void addIfNotOverLimit (AmIThreadSafe set, Object o, int limit) {<newline46mondego>   if (set.size() < limit)      // ## thread-safe call 1<newline46mondego>      set.add(o);               // ## thread-safe call 2<newline46mondego>}<newline46mondego>"
"5007splitHere46","1942818splitHere46","javac -encoding UTF-8 Foo.java<newline46mondego>"
"5008splitHere46","1942818splitHere46","public class Foo {<newline46mondego>  char [] a = {'à', 'á', 'â', 'ä' };  <newline46mondego>}<newline46mondego>"
"5009splitHere46","1942818splitHere46","70 75 62 6C 69 63 20 63 6C 61 73 73 20 46 6F 6F         public class Foo<newline46mondego>20 7B 0D 0A 20 20 63 68 61 72 20 5B 5D 20 61 20          {__  char [] a<newline46mondego>3D 20 7B 27 C3 A0 27 2C 20 27 C3 A1 27 2C 20 27         = {'__', '__', '<newline46mondego>C3 A2 27 2C 20 27 C3 A4 27 20 7D 3B 20 20 0D 0A         __', '__' };  __<newline46mondego>7D 0D 0A 0D 0A                                          }____<newline46mondego>"
"5010splitHere46","1942818splitHere46","C3 A0"
"5011splitHere46","1942818splitHere46","javac -encoding UTF-8 Foo.java<newline46mondego>"
"5012splitHere46","1942818splitHere46","char"
"5013splitHere46","1942818splitHere46","System.out.format(<doubleQuotes46>%04x<doubleQuotes46>, (int) c);"
"5014splitHere46","1943176splitHere46","public class ApplicationListener {<newline46mondego><newline46mondego>    private static Class<?> nativeClass;<newline46mondego><newline46mondego>    static Class<?> getNativeClass() {<newline46mondego>        try {<newline46mondego>            if (ApplicationListener.nativeClass == null) {<newline46mondego>                ApplicationListener.nativeClass = Class.forName(<doubleQuotes46>com.apple.eawt.ApplicationListener<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>            return ApplicationListener.nativeClass;<newline46mondego>        } catch (ClassNotFoundException ex) {<newline46mondego>            throw new RuntimeException(<doubleQuotes46>This system does not support the Apple EAWT!<doubleQuotes46>, ex);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private Object nativeObject;<newline46mondego><newline46mondego>    public ApplicationListener() {<newline46mondego>        Class<?> nativeClass = ApplicationListener.getNativeClass();<newline46mondego><newline46mondego>        this.nativeObject = Proxy.newProxyInstance(nativeClass.getClassLoader(), new Class<?>[] {<newline46mondego>            nativeClass<newline46mondego>        }, new InvocationHandler() {<newline46mondego><newline46mondego>            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {<newline46mondego>                String methodName = method.getName();<newline46mondego><newline46mondego>                ApplicationEvent event = new ApplicationEvent(args[0]);<newline46mondego><newline46mondego>                if (methodName.equals(<doubleQuotes46>handleReOpenApplication<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handleReOpenApplication(event);<newline46mondego>                } else if (methodName.equals(<doubleQuotes46>handleQuit<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handleQuit(event);<newline46mondego>                } else if (methodName.equals(<doubleQuotes46>handlePrintFile<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handlePrintFile(event);<newline46mondego>                } else if (methodName.equals(<doubleQuotes46>handlePreferences<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handlePreferences(event);<newline46mondego>                } else if (methodName.equals(<doubleQuotes46>handleOpenFile<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handleOpenFile(event);<newline46mondego>                } else if (methodName.equals(<doubleQuotes46>handleOpenApplication<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handleOpenApplication(event);<newline46mondego>                } else if (methodName.equals(<doubleQuotes46>handleAbout<doubleQuotes46>)) {<newline46mondego>                    ApplicationListener.this.handleAbout(event);<newline46mondego>                }<newline46mondego><newline46mondego>                return null;<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    Object getNativeObject() {<newline46mondego>        return this.nativeObject;<newline46mondego>    }<newline46mondego><newline46mondego>    // followed by abstract definitions of all handle...(ApplicationEvent) methods<newline46mondego><newline46mondego>}<newline46mondego>"
"5015splitHere46","1943176splitHere46","public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {<newline46mondego>    String methodName = method.getName();<newline46mondego>    ApplicationEvent event = new ApplicationEvent(args[0]);<newline46mondego>    Method method = ApplicationListener.class.getMethod(methodName, ApplicationEvent.class);<newline46mondego>    return method.invoke(ApplicationListener.this, event);<newline46mondego>}<newline46mondego>"
"5016splitHere46","1943255splitHere46","EnumVariant enumVariant = new EnumVariant( mActiveXWMI.invoke(<doubleQuotes46>ExecQuery<doubleQuotes46>, new Variant(query)).toDispatch() );"
"5017splitHere46","1943384splitHere46","JMenuBar"
"5018splitHere46","1943384splitHere46","JFrame"
"5019splitHere46","1943384splitHere46","System.setProperty(<doubleQuotes46>apple.laf.useScreenMenuBar<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>"
"5020splitHere46","1943384splitHere46","JDialog"
"5021splitHere46","1943384splitHere46","JFrame"
"5022splitHere46","1943491splitHere46","void client(const char* server_address, short server_port)<newline46mondego>{<newline46mondego>     int     sockfd;<newline46mondego>     struct sockaddr_in servaddr;<newline46mondego><newline46mondego>     sockfd = socket(AF_INET, SOCK_STREAM, 0);<newline46mondego><newline46mondego>     memset(&servaddr, 0x00, sizeof(servaddr));<newline46mondego>     servaddr.sin_family = AF_INET;<newline46mondego>     servaddr.sin_port = htons(server_port);<newline46mondego>     inet_pton(AF_INET, server_address, &servaddr.sin_addr);<newline46mondego><newline46mondego>     connect(sockfd, (struct sockaddr *) &servaddr, sizeof(servaddr));<newline46mondego><newline46mondego>     //from this point you can start write to the server and wait for its respose<newline46mondego><newline46mondego>     std::string buffer = <doubleQuotes46>testquery<doubleQuotes46>;<newline46mondego>     writen(sockfd, buffer.c_str(), buffer.length());<newline46mondego><newline46mondego>     char *ReadBuffer[512];<newline46mondego>     while(1)<newline46mondego>     {<newline46mondego>         memset(ReadBuffer, 0x00, sizeof(ReadBuffer));<newline46mondego>         int n = readn(sockfd, ReadBuffer, sizeof(ReadBuffer));<newline46mondego>         if(n <= 0)<newline46mondego>         {<newline46mondego>             //or you dont have anything to read, or you have a problem<newline46mondego>             break;<newline46mondego>         }<newline46mondego>         //this function does the hard job of knowing what to do with all these data<newline46mondego>         processBuffer(ReadBuffer, n);<newline46mondego>     }<newline46mondego><newline46mondego> close(sockfd);<newline46mondego><newline46mondego> }<newline46mondego>"
"5023splitHere46","1943699splitHere46","AliasesInterface"
"5024splitHere46","1943699splitHere46","@OneToMany(targetEntity=AliasInterface.class)<newline46mondego>@MapKeyManyToMany(targetEntity=MetricSourceInterface.class,  joinColumns=@JoinColumn(name=<doubleQuotes46>metric_source_id<doubleQuotes46>))<newline46mondego>private Map<MetricSourceInterface, AliasesInterface> myMap;<newline46mondego>"
"5025splitHere46","1943699splitHere46","AliasInterface"
"5026splitHere46","1943699splitHere46","MetricSourceInterface"
"5027splitHere46","1943699splitHere46","@MapKeyManyToMany"
"5028splitHere46","1943699splitHere46","<map name=<doubleQuotes46>myMap<doubleQuotes46>><newline46mondego>  <key column=<doubleQuotes46>owner_id<doubleQuotes46>/> <!-- FK to owner entity table --><newline46mondego>  <map-key-many-to-many column=<doubleQuotes46>metric_source_id<doubleQuotes46> class=<doubleQuotes46>MetricSourceInterface<doubleQuotes46>/><newline46mondego>  <one-to-many class=<doubleQuotes46>AliasesInterface<doubleQuotes46>/><newline46mondego></map><newline46mondego>"
"5029splitHere46","1943844splitHere46","this.fooBar = doc.get(<doubleQuotes46>fooBar<doubleQuotes46>);<newline46mondego>this.bazQux = doc.get(<doubleQuotes46>bazQux<doubleQuotes46>);<newline46mondego>// ... etc.<newline46mondego>"
"5030splitHere46","1943844splitHere46","sysBiz"
"5031splitHere46","1943844splitHere46","sysBiz"
"5032splitHere46","1943844splitHere46","sysBiz"
"5033splitHere46","1943844splitHere46","zigBlog"
"5034splitHere46","1943844splitHere46","object.setField(key, val)"
"5035splitHere46","1943844splitHere46","zigBlog"
"5036splitHere46","1944474splitHere46","setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);"
"5037splitHere46","1944474splitHere46","setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);"
"5038splitHere46","1944474splitHere46","DISPOSE_ON_CLOSE"
"5039splitHere46","1944474splitHere46","EXIT_ON_CLOSE"
"5040splitHere46","1944474splitHere46","HIDE_ON_CLOSE"
"5041splitHere46","1944474splitHere46","setVisible(false)"
"5042splitHere46","1944474splitHere46","JFrame"
"5043splitHere46","1944474splitHere46","dispose()"
"5044splitHere46","1944479splitHere46","public class JavaVersion {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    System.out.println(System.getProperty(<doubleQuotes46>java.runtime.version<doubleQuotes46>));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5045splitHere46","1944949splitHere46","List<FAQ> l = new ArrayList<FAQ>();<newline46mondego>FAQ faq1 = initFAQ(new FAQ(), 5, 1L);<newline46mondego>l.add(faq1);<newline46mondego>FAQ faq2 = initFAQ(new FAQ(), 3, 2L);<newline46mondego>l.add(faq2);<newline46mondego>FAQ faq3 = initFAQ(new FAQ(), 11, 3L);<newline46mondego>l.add(faq3);<newline46mondego><newline46mondego>EasyMock.expect(faqDao.getAllOrderedDescByRating()).andReturn(l);<newline46mondego>"
"5046splitHere46","1945227splitHere46","class Graph {<newline46mondego><newline46mondego>  PriorityQueue<Node> vertexes;<newline46mondego><newline46mondego>  public Graph() {<newline46mondego>    vertexes = new PriorityQueue<Vertex>(10,new Vertex());<newline46mondego>  }<newline46mondego><newline46mondego>  public Vertex maxDegreeVertex() {<newline46mondego>    return vertexes.peek();<newline46mondego>  }<newline46mondego><newline46mondego>  ...<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Vertex implements Comparator<Vertex> {<newline46mondego>  HashSet<Vertex> edges;<newline46mondego><newline46mondego>  public Vertex() {<newline46mondego>    edges = new HashSet<Vertex>();<newline46mondego>  }<newline46mondego><newline46mondego>  public compare(Vertex v1, Vertex v2) {<newline46mondego>    v2.edges.size().compareTo(v1.edges.size());<newline46mondego>  }<newline46mondego><newline46mondego>  ...<newline46mondego><newline46mondego>}<newline46mondego>"
"5047splitHere46","1945402splitHere46","GregorianCalendar"
"5048splitHere46","1945402splitHere46","SimpleDateFormat"
"5049splitHere46","1945402splitHere46","setTime"
"5050splitHere46","1945402splitHere46","GregorianCalendar expected = new GregorianCalendar();<newline46mondego>expected.setTime(new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm<doubleQuotes46>).parse(<doubleQuotes46>2007-08-01 14:40<doubleQuotes46>));<newline46mondego><newline46mondego>SystemUnderTest subject = SystemUnderTest();<newline46mondego><newline46mondego>assertEquals(expected, subject.method());<newline46mondego>"
"5051splitHere46","1945432splitHere46","private Point2D.Float calculateDeflection(float x, float y) {<newline46mondego>	Point2D.Float center = new Point2D.Float(0, 0);<newline46mondego>	Point2D.Float joyPoint = new Point2D.Float(x, y);<newline46mondego>	Double angleRad = Math.atan2(y, x);<newline46mondego><newline46mondego>	float maxDist = getMaxDist(joyPoint);<newline46mondego><newline46mondego>	float factor = (maxDist - deadzone) / maxDist;<newline46mondego><newline46mondego>	Point2D.Float factoredPoint = new Point2D.Float(x * factor, y * factor);<newline46mondego><newline46mondego>	float factoredDist = (float) center.distance(factoredPoint);<newline46mondego><newline46mondego>	float finalDist = factoredDist + deadzone;<newline46mondego><newline46mondego>	float finalX = finalDist * (float) Math.cos(angleRad);<newline46mondego>	float finalY = finalDist * (float) Math.sin(angleRad);<newline46mondego><newline46mondego>	Point2D.Float finalPoint = new Point2D.Float(finalX, finalY);<newline46mondego><newline46mondego>	return finalPoint;<newline46mondego>}<newline46mondego>"
"5052splitHere46","1945432splitHere46","private float getMaxDist(Point2D.Float point) {<newline46mondego>	float xMax;<newline46mondego>	float yMax;<newline46mondego>	if (Math.abs(point.x) > Math.abs(point.y)) {<newline46mondego>		xMax = Math.signum(point.x);<newline46mondego>		yMax = point.y * point.x / xMax;<newline46mondego>	} else {<newline46mondego>		yMax = Math.signum(point.y);<newline46mondego>		xMax = point.x * point.y / yMax;<newline46mondego>	}<newline46mondego>	Point2D.Float maxPoint = new Point2D.Float(xMax, yMax);<newline46mondego>	Point2D.Float center = new Point2D.Float(0, 0);<newline46mondego>	return (float) center.distance(maxPoint);<newline46mondego>}<newline46mondego>"
"5053splitHere46","1945484splitHere46","@CollectionOfElements<newline46mondego>public List<String> getNickNames() {<newline46mondego>   return nickNames;<newline46mondego>}<newline46mondego>"
"5054splitHere46","1945696splitHere46","private Environment env;  // a field does not have to be final<newline46mondego><newline46mondego>public void init() {<newline46mondego>    Runtime.getRuntime().addShutdownHook(new Thread() {<newline46mondego>        public void run() {<newline46mondego>             env.close();<newline46mondego>        }<newline46mondego>     });<newline46mondego>}<newline46mondego>"
"5055splitHere46","1945738splitHere46","exec()"
"5056splitHere46","1945738splitHere46",".CMD"
"5057splitHere46","1945738splitHere46",".BAT"
"5058splitHere46","1945738splitHere46","PATH"
"5059splitHere46","1945738splitHere46","exec()"
"5060splitHere46","1945738splitHere46","exec()"
"5061splitHere46","1945738splitHere46","exec(cmd, envp)"
"5062splitHere46","1945738splitHere46","envp"
"5063splitHere46","1945738splitHere46","PATH"
"5064splitHere46","1945738splitHere46","ClassLoader"
"5065splitHere46","1945738splitHere46","exec"
"5066splitHere46","1946005splitHere46",":Java"
"5067splitHere46","1946075splitHere46","private Session createSmtpSession() {<newline46mondego>  final Properties props = new Properties();<newline46mondego>  props.setProperty(<doubleQuotes46>mail.smtp.host<doubleQuotes46>, <doubleQuotes46>smtp.gmail.com<doubleQuotes46>);<newline46mondego>  props.setProperty(<doubleQuotes46>mail.smtp.auth<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>  props.setProperty(<doubleQuotes46>mail.smtp.port<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> + 587);<newline46mondego>  props.setProperty(<doubleQuotes46>mail.smtp.starttls.enable<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>  // props.setProperty(<doubleQuotes46>mail.debug<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego><newline46mondego>  return Session.getDefaultInstance(props, new javax.mail.Authenticator() {<newline46mondego><newline46mondego>    protected PasswordAuthentication getPasswordAuthentication() {<newline46mondego>      return new PasswordAuthentication(<doubleQuotes46>john.doe@gmail.com<doubleQuotes46>, <doubleQuotes46>mypassword<doubleQuotes46>);<newline46mondego>    }<newline46mondego>  });<newline46mondego>}<newline46mondego>"
"5068splitHere46","1946210splitHere46","addAll"
"5069splitHere46","1946210splitHere46","add"
"5070splitHere46","1946210splitHere46","remove"
"5071splitHere46","1946241splitHere46","HashMap"
"5072splitHere46","1946311splitHere46","public final static int BUF_SIZE = 1024; //can be much bigger, see comment below<newline46mondego><newline46mondego><newline46mondego>public static void copyFile(File in, File out) throws Exception {<newline46mondego>  FileInputStream fis  = new FileInputStream(in);<newline46mondego>  FileOutputStream fos = new FileOutputStream(out);<newline46mondego>  try {<newline46mondego>    byte[] buf = new byte[BUF_SIZE];<newline46mondego>    int i = 0;<newline46mondego>    while ((i = fis.read(buf)) != -1) {<newline46mondego>        fos.write(buf, 0, i);<newline46mondego>    }<newline46mondego>  } <newline46mondego>  catch (Exception e) {<newline46mondego>    throw e;<newline46mondego>  }<newline46mondego>  finally {<newline46mondego>    if (fis != null) fis.close();<newline46mondego>    if (fos != null) fos.close();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5073splitHere46","1946321splitHere46","char[] text = new char[] {'\u0627', '\u0644', '\u0639', <newline46mondego>    '\u0631', '\u0628', '\u064A', '\u0629'};<newline46mondego>add(new LabelField(text));<newline46mondego>"
"5074splitHere46","1946321splitHere46","private char[] getUnicodeChars(String string) {<newline46mondego>    char[] result = new char[] {};<newline46mondego>    String[] charCodes = split(string, <doubleQuotes46>\\<doubleQuotes46>);<newline46mondego>    result = new char[charCodes.length];<newline46mondego>    for (int i = 0; i < charCodes.length; i++) {<newline46mondego>        result[i] = (char) Integer.parseInt(charCodes[i].substring(1), 16);<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"5075splitHere46","1946321splitHere46","String txt = <doubleQuotes46>\u0627\u0644\u0639\u0631\u0628\u064A\u0629<doubleQuotes46>;<newline46mondego>add(new LabelField(getUnicodeChars(txt)));<newline46mondego>"
"5076splitHere46","1946340splitHere46","lstFiles.setDropTarget(new DropTarget()<newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public synchronized void drop(DropTargetDropEvent dtde) <newline46mondego>    {<newline46mondego>    	this.changeToNormal();<newline46mondego>    	//handle the drop... [...]<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public synchronized void dragEnter(DropTargetDragEvent dtde) <newline46mondego>    {<newline46mondego>    	//Change cursor...<newline46mondego>    	Cursor cursor = new Cursor(Cursor.HAND_CURSOR);<newline46mondego>    	setCursor(cursor);<newline46mondego><newline46mondego>    	//Change JList background...<newline46mondego>    	lstFiles.setBackground(Color.LIGHT_GRAY);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public synchronized void dragExit(DropTargetEvent dtde) <newline46mondego>    {<newline46mondego>    	this.changeToNormal();<newline46mondego>    }<newline46mondego><newline46mondego>    private void changeToNormal()<newline46mondego>    {<newline46mondego>    	//Set cursor to default.<newline46mondego>    	Cursor cursor = new Cursor(Cursor.DEFAULT_CURSOR);<newline46mondego>    	setCursor(cursor);<newline46mondego><newline46mondego>    	//Set background to normal...<newline46mondego>    	lstFiles.setBackground(Color.WHITE);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"5077splitHere46","1946343splitHere46","data"
"5078splitHere46","1946343splitHere46","u_tex1"
"5079splitHere46","1946343splitHere46","GL_CLAMP_TO_EDGE"
"5080splitHere46","1946343splitHere46","GL_REPEAT"
"5081splitHere46","1946573splitHere46","System.Collections.Concurrent"
"5082splitHere46","1946626splitHere46","private static String changeStringAndReturn(String s) {<newline46mondego>    return new String(<doubleQuotes46>new string<doubleQuotes46>);<newline46mondego>}<newline46mondego>private static void changeStringInArray(String[] s) {<newline46mondego>    if (null != s && 0 < s.length) {<newline46mondego>        s[0] = new String(<doubleQuotes46>new string<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5083splitHere46","1946627splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><jnlp spec=<doubleQuotes46>1.0+<doubleQuotes46> codebase=<doubleQuotes46>http://www.ericonjava.com/<doubleQuotes46> href=<doubleQuotes46>bubblebreaker/bubblebreaker.jnlp<doubleQuotes46>><newline46mondego><information><newline46mondego>    <title>Bubble Breaker</title><newline46mondego>    <vendor>www.ericonjava.com</vendor><newline46mondego>    <homepage href=<doubleQuotes46>http://www.ericonjava.com<doubleQuotes46>/><newline46mondego>    <description>Bubble Breaker</description><newline46mondego>    <offline-allowed/><newline46mondego></information><newline46mondego>    <j2se href=<doubleQuotes46>http://java.sun.com/products/autodl/j2se<doubleQuotes46> version=<doubleQuotes46>1.6+<doubleQuotes46>/><newline46mondego><property name=<doubleQuotes46>jnlp.packEnabled<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    <extension name=<doubleQuotes46>JavaFX Runtime<doubleQuotes46> href=<doubleQuotes46>http://dl.javafx.com/1.1/javafx-rt.jnlp<doubleQuotes46>/><newline46mondego>      <jar href=<doubleQuotes46>bubblebreaker/BubbleBreaker.jar<doubleQuotes46> main=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego></resources><newline46mondego><application-desc main-class=<doubleQuotes46>bubblebreaker.Test<doubleQuotes46>/><newline46mondego>"
"5084splitHere46","1946763splitHere46","scroll.getVerticalScrollBar().setPreferredSize(new Dimension(30, 30));<newline46mondego>scroll.getHorizontalScrollBar().setPreferredSize(new Dimension(30, 30));<newline46mondego>"
"5085splitHere46","1946901splitHere46","import javax.persistence.Column;<newline46mondego>import javax.persistence.Entity;<newline46mondego><newline46mondego>@Entity<newline46mondego>public class Person {<newline46mondego><newline46mondego>   @Column(length=30)<newline46mondego>   private String firstName;<newline46mondego><newline46mondego>   public static void main(String[] args) throws SecurityException, NoSuchFieldException {<newline46mondego>      Object person = new Person();<newline46mondego>      //find out length    <newline46mondego>      System.out.println(person.getClass().getDeclaredField(<doubleQuotes46>firstName<doubleQuotes46>).getAnnotation(Column.class).length());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5086splitHere46","1946928splitHere46","doc.output(stream)"
"5087splitHere46","1947151splitHere46","| <Y:<doubleQuotes46>${<doubleQuotes46>(<NAME)+ <doubleQuotes46>}<doubleQuotes46> ><newline46mondego>    	{<newline46mondego>    	String oldValue=image.toString();<newline46mondego>    	image.setLength(0);<newline46mondego>    	image.append(my_dict.get(oldValue));<newline46mondego>    	}<newline46mondego>"
"5088splitHere46","1947200splitHere46","instances"
"5089splitHere46","1947200splitHere46","org.eclipse.jdi.internal.ReferenceTypeImpl"
"5090splitHere46","1947200splitHere46","ReferenceType.instances"
"5091splitHere46","1947200splitHere46","ReferenceType"
"5092splitHere46","1947450splitHere46","List<String> colors = ....;<newline46mondego>String query = <doubleQuotes46>select * from Cars where Cars.color NOT IN (:color_params)<doubleQuotes46>;<newline46mondego>Map<String, Object> params = new HashMap<String, Object>();<newline46mondego>params.put(<doubleQuotes46>color_params<doubleQuotes46>, colors);<newline46mondego>// ... execute the query with the param.<newline46mondego>"
"5093splitHere46","1947450splitHere46","query.setParameter(<doubleQuotes46>color_params<doubleQuotes46>, colors);<newline46mondego>"
"5094splitHere46","1947470splitHere46","<context:component-scan base-package=<doubleQuotes46>some.package.to.start.from<doubleQuotes46>/><newline46mondego>"
"5095splitHere46","1947516splitHere46","lib"
"5096splitHere46","1947516splitHere46","try {<newline46mondego>  final WebClient webClient = new WebClient();<newline46mondego>  final HtmlPage page = webClient.getPage(<doubleQuotes46>http://htmlunit.sourceforge.net<doubleQuotes46>);<newline46mondego>  assertEquals(<doubleQuotes46>HtmlUnit - Welcome to HtmlUnit<doubleQuotes46>, page.getTitleText());<newline46mondego>}<newline46mondego>catch (Exception e) {<newline46mondego>  e.printStackTrace();<newline46mondego>}<newline46mondego>"
"5097splitHere46","1947733splitHere46","X509Certificate[] certificates = (X509Certificate[])<newline46mondego>    request.getAttribute(<doubleQuotes46>javax.servlet.request.X509Certificate<doubleQuotes46>);<newline46mondego>"
"5098splitHere46","1947808splitHere46","override"
"5099splitHere46","1947808splitHere46","DerivedClass"
"5100splitHere46","1947808splitHere46","filed"
"5101splitHere46","1947808splitHere46","BaseClass"
"5102splitHere46","1947808splitHere46","DerivedClass"
"5103splitHere46","1947808splitHere46","filed"
"5104splitHere46","1947975splitHere46","Referer"
"5105splitHere46","1947975splitHere46","<security-constraint>"
"5106splitHere46","1947975splitHere46","WEB-INF/web.xml"
"5107splitHere46","1948518splitHere46","CallableStatement proc = connection.prepareCall(<doubleQuotes46>{ ? = call dbo.mySproc() }<doubleQuotes46>);<newline46mondego>proc.registerOutParameter(1, Types.INTEGER);<newline46mondego>proc.execute();<newline46mondego>int returnValue = proc.getInt(1);<newline46mondego>"
"5108splitHere46","1948518splitHere46","prepareCall"
"5109splitHere46","1948518splitHere46","registerOutputParameter"
"5110splitHere46","1948518splitHere46","getInt"
"5111splitHere46","1948694splitHere46","FileConnection filecon = (FileConnection)<newline46mondego>                 Connector.open(<doubleQuotes46>file:///E:/imagefile.jpg<doubleQuotes46>);<newline46mondego>        if (!filecon.exists())<newline46mondego>            filecon.create(); // create the file if it doesn't exist<newline46mondego>        DataOutputStream os = filecon.openDataOutputStream();<newline46mondego>        os.write(raw);  // Raw image<newline46mondego>"
"5112splitHere46","1948817splitHere46","^[\d\w\.]+ [^\n]+$<newline46mondego>"
"5113splitHere46","1948833splitHere46","@Inherited"
"5114splitHere46","1948856splitHere46","BufferedImage img = ImageIO.read(new File(<doubleQuotes46>my.png<doubleQuotes46>));<newline46mondego>int color = img.getRGB(23,12);<newline46mondego>"
"5115splitHere46","1948989splitHere46","org.eclipse.ui.keys.IBindingService"
"5116splitHere46","1948989splitHere46","org.eclipse.ui.PlatformUI"
"5117splitHere46","1948989splitHere46","IBindingService bindingService = (IBindingService) PlatformUI.getWorkbench().getAdapter(IBindingService.class);<newline46mondego>bindingService.getBestActiveBindingFormattedFor(CMDID);<newline46mondego>"
"5118splitHere46","1948989splitHere46","CMDID"
"5119splitHere46","1949138splitHere46","Public Stone(...) {<newline46mondego>    // ...<newline46mondego><newline46mondego>    KeyboardFocusManager fm = KeyboardFocusManager.getCurrentKeyboardFocusManager();<newline46mondego>    fm.addKeyEventDispatcher(<newline46mondego>        new KeyEventDispatcher() {<newline46mondego>            public boolean dispatchKeyEvent(KeyEvent e) {<newline46mondego>                System.out.println(<doubleQuotes46>Key Press: <doubleQuotes46> + e.getKeyChar());<newline46mondego>                return false;<newline46mondego>            }            <newline46mondego>        } <newline46mondego>    );<newline46mondego><newline46mondego>   // ... <newline46mondego>}<newline46mondego>"
"5120splitHere46","1949202splitHere46","[\<doubleQuotes46>"
"5121splitHere46","1949202splitHere46","\<doubleQuotes46>]"
"5122splitHere46","1949202splitHere46","String test = <doubleQuotes46>String 1\<doubleQuotes46>,\<doubleQuotes46>String, two<doubleQuotes46>;<newline46mondego>"
"5123splitHere46","1949202splitHere46","test.split(<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"5124splitHere46","1949502splitHere46","factorial(3)<newline46mondego>"
"5125splitHere46","1949502splitHere46","factorial(2)<newline46mondego>"
"5126splitHere46","1949502splitHere46","factorial(1)<newline46mondego>"
"5127splitHere46","1949788splitHere46","java"
"5128splitHere46","1949788splitHere46","."
"5129splitHere46","1949788splitHere46","java"
"5130splitHere46","1949788splitHere46","."
"5131splitHere46","1949788splitHere46","activemq-all-5.1-SNAPSHOT.jar"
"5132splitHere46","1949788splitHere46","java -classpath ./geronimo-jms_1.1_spec-1.1.1.jar:./activemq-core-5.3.0.jar:./activemq-all-5.1-SNAPSHOT.jar:. NDriver<newline46mondego>"
"5133splitHere46","1949849splitHere46","log_encrypt_algorithm_version=1<newline46mondego>encryptionAlgorithm=DESede/CBC/NoPadding<newline46mondego>dataEncryption=true<newline46mondego>derby.encryptionBlockSize=8<newline46mondego>encryptionKeyLength=168-24<newline46mondego>encryptedBootPassword=472b7cc5600605333392dd10a46067d2e2935fd4c350d533-43435<newline46mondego>data_encrypt_algorithm_version=1<newline46mondego>"
"5134splitHere46","1949849splitHere46","$ ../bin/ij<newline46mondego>ij version 10.4<newline46mondego>ij> connect 'jdbc:derby:testdb;create=true;dataEncryption=true;encryptionAlgorithm=Blowfish/ECB/NoPadding;bootPassword=$ecureC@deCanBr@kE0074242';<newline46mondego>ij> quit;<newline46mondego>$ sed -i .o 's/Blowfish/DES/' testdb/service.properties <newline46mondego>$ ../bin/ij<newline46mondego>ij version 10.4<newline46mondego>ij> connect 'jdbc:derby:testdb;bootPassword=$ecureC@deCanBr@kE0074242';<newline46mondego>ERROR XJ040: Failed to start database 'testdb', see the next exception for details.<newline46mondego>ERROR XBM06: Startup failed. An encrypted database cannot be accessed without the correct boot password.  <newline46mondego>ij> quit;<newline46mondego>$ sed -i .o 's/DES/Blowfish/' testdb/service.properties <newline46mondego>$ ../bin/ij<newline46mondego>ij version 10.4<newline46mondego>ij> connect 'jdbc:derby:testdb;bootPassword=$ecureC@deCanBr@kE0074242';<newline46mondego>ij> quit;<newline46mondego>$<newline46mondego>"
"5135splitHere46","1949876splitHere46","encode()"
"5136splitHere46","1949876splitHere46","OldEncoder.encode()"
"5137splitHere46","1949876splitHere46","NewEncoder.encode()"
"5138splitHere46","1949876splitHere46","OldEncoder.encode()"
"5139splitHere46","1949876splitHere46","NewEncoder.encode()"
"5140splitHere46","1949876splitHere46","decode()"
"5141splitHere46","1949876splitHere46","PREFIX_CHAR"
"5142splitHere46","1949876splitHere46","package tequilaguy;<newline46mondego><newline46mondego><newline46mondego>public class NewConverter {<newline46mondego><newline46mondego>   private static final String[] b2s = new String[0x10000];<newline46mondego>   private static final int[] s2b = new int[0x10000];<newline46mondego>   static { <newline46mondego>      createb2s();<newline46mondego>      creates2b();<newline46mondego>   }<newline46mondego><newline46mondego>   /**<newline46mondego>    * Create the <doubleQuotes46>byte to string<doubleQuotes46> conversion table.<newline46mondego>    */<newline46mondego>   private static void createb2s() {<newline46mondego>      // Fill 17576 elements of the array with b -> s equivalents.<newline46mondego>      // index is the combined byte value of the old encode fn; <newline46mondego>      // value is the String (3 chars). <newline46mondego>      for (char a='A'; a<='Z'; a++) {<newline46mondego>         for (char b='A'; b<='Z'; b++) {<newline46mondego>            for (char c='A'; c<='Z'; c++) {<newline46mondego>               String str = new String(new char[] { a, b, c});<newline46mondego>               byte[] enc = OldConverter.encode(str);<newline46mondego>               int index = ((enc[0] & 0xFF) << 8) | (enc[1] & 0xFF);<newline46mondego>               b2s[index] = str;<newline46mondego>               // int value = 676 * a + 26 * b + c - ((676 + 26 + 1) * 'A'); // 45695;<newline46mondego>               // System.out.format(<doubleQuotes46>%s : %02X%02X = %04x / %04x %n<doubleQuotes46>, str, enc[0], enc[1], index, value);<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }<newline46mondego>      // Fill 17576 elements of the array with b -> @s equivalents.<newline46mondego>      // index is the next free (= not null) array index;<newline46mondego>      // value = the String (@ + 3 chars)<newline46mondego>      int freep = 0;<newline46mondego>      for (char a='A'; a<='Z'; a++) {<newline46mondego>         for (char b='A'; b<='Z'; b++) {<newline46mondego>            for (char c='A'; c<='Z'; c++) {<newline46mondego>               String str = <doubleQuotes46>@<doubleQuotes46> + new String(new char[] { a, b, c});<newline46mondego>               while (b2s[freep] != null) freep++;<newline46mondego>               b2s[freep] = str;<newline46mondego>               // int value = 676 * a + 26 * b + c - ((676 + 26 + 1) * 'A') + (26 * 26 * 26);<newline46mondego>               // System.out.format(<doubleQuotes46>%s : %02X%02X = %04x / %04x %n<doubleQuotes46>, str, 0, 0, freep, value);<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   /**<newline46mondego>    * Create the <doubleQuotes46>string to byte<doubleQuotes46> conversion table.<newline46mondego>    * Done by inverting the <doubleQuotes46>byte to string<doubleQuotes46> table.<newline46mondego>    */<newline46mondego>   private static void creates2b() {<newline46mondego>      for (int b=0; b<0x10000; b++) {<newline46mondego>         String s = b2s[b];<newline46mondego>         if (s != null) {<newline46mondego>            int sval;<newline46mondego>            if (s.length() == 3) {<newline46mondego>               sval = 676 * s.charAt(0) + 26 * s.charAt(1) + s.charAt(2) - ((676 + 26 + 1) * 'A');<newline46mondego>            } else {<newline46mondego>               sval = 676 * s.charAt(1) + 26 * s.charAt(2) + s.charAt(3) - ((676 + 26 + 1) * 'A') + (26 * 26 * 26);<newline46mondego>            }<newline46mondego>            s2b[sval] = b;<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   public static byte[] encode(String str) {<newline46mondego>      int sval;<newline46mondego>      if (str.length() == 3) {<newline46mondego>         sval = 676 * str.charAt(0) + 26 * str.charAt(1) + str.charAt(2) - ((676 + 26 + 1) * 'A');<newline46mondego>      } else {<newline46mondego>         sval = 676 * str.charAt(1) + 26 * str.charAt(2) + str.charAt(3) - ((676 + 26 + 1) * 'A') + (26 * 26 * 26);<newline46mondego>      }<newline46mondego>      int bval = s2b[sval];<newline46mondego>      return new byte[] { (byte) (bval >> 8), (byte) (bval & 0xFF) };<newline46mondego>   }<newline46mondego><newline46mondego>   public static String decode(byte[] b) {<newline46mondego>      int bval = ((b[0] & 0xFF) << 8) | (b[1] & 0xFF);<newline46mondego>      return b2s[bval];<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"5143splitHere46","1949876splitHere46","package tequilaguy;<newline46mondego><newline46mondego>public class ConverterHarness {<newline46mondego><newline46mondego>//   private static void runOldEncoder() {<newline46mondego>//      for (char a='A'; a<='Z'; a++) {<newline46mondego>//         for (char b='A'; b<='Z'; b++) {<newline46mondego>//            for (char c='A'; c<='Z'; c++) {<newline46mondego>//               String str = new String(new char[] { a, b, c});<newline46mondego>//               byte[] enc = OldConverter.encode(str);<newline46mondego>//               System.out.format(<doubleQuotes46>%s : %02X%02X%n<doubleQuotes46>, str, enc[0], enc[1]);<newline46mondego>//            }<newline46mondego>//         }<newline46mondego>//      }<newline46mondego>//   }<newline46mondego><newline46mondego>   private static void testNewConverter() {<newline46mondego>      for (char a='A'; a<='Z'; a++) {<newline46mondego>         for (char b='A'; b<='Z'; b++) {<newline46mondego>            for (char c='A'; c<='Z'; c++) {<newline46mondego>               String str = new String(new char[] { a, b, c});<newline46mondego>               byte[] oldEnc = OldConverter.encode(str);<newline46mondego>               byte[] newEnc = NewConverter.encode(str);<newline46mondego>               byte[] newEnc2 = NewConverter.encode(<doubleQuotes46>@<doubleQuotes46> + str);<newline46mondego>               System.out.format(<doubleQuotes46>%s : %02X%02X %02X%02X %02X%02X %s %s %n<doubleQuotes46>, <newline46mondego>                     str, oldEnc[0], oldEnc[1], newEnc[0], newEnc[1], newEnc2[0], newEnc2[1],<newline46mondego>                     NewConverter.decode(newEnc), NewConverter.decode(newEnc2));<newline46mondego>            }<newline46mondego>         }<newline46mondego>      }<newline46mondego>   }<newline46mondego>   public static void main(String[] args) {<newline46mondego>      testNewConverter();<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"5144splitHere46","1949889splitHere46","class BulkCalc3<newline46mondego>{<newline46mondego>    final Calc calc;<newline46mondego><newline46mondego>    public BulkCalc3(Calc calc)<newline46mondego>    {<newline46mondego>        this.calc = calc;<newline46mondego>    }<newline46mondego><newline46mondego>    public TreeMap<Integer, Double> calc(Iterator<BigThing> in)<newline46mondego>    {<newline46mondego>        final ConcurrentMap<Integer, Double> resultMap = new MapMaker().makeMap();<newline46mondego>        ThreadedIteratorProcessor<BigThing> processor = new ThreadedIteratorProcessor<BigThing>();<newline46mondego>        processor.processIterator(in, new ThreadedIteratorProcessor.ElementProcessor<BigThing>()<newline46mondego>        {<newline46mondego>            @Override<newline46mondego>            public void processElement(BigThing o)<newline46mondego>            {<newline46mondego>                resultMap.put(o.getId(), calc.calc(o));<newline46mondego>            }<newline46mondego>        });<newline46mondego>        return new TreeMap<Integer, Double>(resultMap);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5145splitHere46","1949889splitHere46","import com.google.common.collect.Lists;<newline46mondego>import com.google.common.util.concurrent.MoreExecutors;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.List;<newline46mondego>import java.util.concurrent.ExecutionException;<newline46mondego>import java.util.concurrent.ExecutorService;<newline46mondego>import java.util.concurrent.Executors;<newline46mondego>import java.util.concurrent.Future;<newline46mondego><newline46mondego>/**<newline46mondego> * A utility class to process each element in an iterator in an efficient manner.<newline46mondego> */<newline46mondego>public class ThreadedIteratorProcessor<T><newline46mondego>{<newline46mondego>    public static interface ElementProcessor<T><newline46mondego>    {<newline46mondego>        /**<newline46mondego>         * Process an element.<newline46mondego>         * @param element The element to process.<newline46mondego>         */<newline46mondego>        public void processElement(T element);<newline46mondego>    }<newline46mondego>    private final int numThreads;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Create an instance which uses a specified number of threads.<newline46mondego>     * @param numThreads The number of processing threads.<newline46mondego>     */<newline46mondego>    public ThreadedIteratorProcessor(int numThreads)<newline46mondego>    {<newline46mondego>        this.numThreads = numThreads;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Create an instance which uses a number of threads equal to the number of system processors.<newline46mondego>     */<newline46mondego>    public ThreadedIteratorProcessor()<newline46mondego>    {<newline46mondego>        this(Runtime.getRuntime().availableProcessors());<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Process each element in an iterator in parallel.  The number of worker threads depends on how this object was<newline46mondego>     * constructed.  This method will re-throw any exception thrown in the supplied ElementProcessor.  An element will<newline46mondego>     * not be requested from the iterator any earlier than is absolutely necessary.  In other words, the last element in<newline46mondego>     * the iterator will not be consumed until all of the other elements are completely processed, excluding elements<newline46mondego>     * currently being processed by the worker threads.<newline46mondego>     * @param iterator The iterator from which to get elements.  This iterator need not be thread-safe.<newline46mondego>     * @param elementProcessor The element processor.<newline46mondego>     */<newline46mondego>    public void processIterator(Iterator<T> iterator, ElementProcessor<T> elementProcessor)<newline46mondego>    {<newline46mondego>        // Use an ExecutorService for proper exception handling.<newline46mondego>        ExecutorService e = Executors.newFixedThreadPool(numThreads, MoreExecutors.daemonThreadFactory());<newline46mondego>        List<Future<?>> futures = Lists.newLinkedList();<newline46mondego><newline46mondego>        // Get a thread-safe iterator<newline46mondego>        final SafeIterator<T> safeIterator = new SafeIterator<T>(iterator);<newline46mondego><newline46mondego>        // Submit numThreads new worker threads to pull work from the iterator.<newline46mondego>        for (int i = 0; i < numThreads; i++)<newline46mondego>        {<newline46mondego>            futures.add(e.submit(new Consumer<T>(safeIterator, elementProcessor)));<newline46mondego>        }<newline46mondego><newline46mondego>        e.shutdown();<newline46mondego><newline46mondego>        // Calling .get() on the futures accomplishes two things:<newline46mondego>        // 1. awaiting completion of the work<newline46mondego>        // 2. discovering an exception during calculation, and rethrowing to the client in this thread.<newline46mondego>        for (Future<?> future : futures)<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {<newline46mondego>                future.get();<newline46mondego>            }<newline46mondego>            catch (InterruptedException ex)<newline46mondego>            {<newline46mondego>                // swallowing is OK<newline46mondego>            }<newline46mondego>            catch (ExecutionException ex)<newline46mondego>            {<newline46mondego>                // Re-throw the underlying exception to the client.<newline46mondego>                throw Throwables.propagate(ex.getCause());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // A runnable that sits in a loop consuming and processing elements from an iterator.<newline46mondego>    private static class Consumer<T> implements Runnable<newline46mondego>    {<newline46mondego>        private final SafeIterator<T> it;<newline46mondego>        private final ElementProcessor<T> elementProcessor;<newline46mondego><newline46mondego>        public Consumer(SafeIterator<T> it, ElementProcessor<T> elementProcessor)<newline46mondego>        {<newline46mondego>            this.it = it;<newline46mondego>            this.elementProcessor = elementProcessor;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run()<newline46mondego>        {<newline46mondego>            while (true)<newline46mondego>            {<newline46mondego>                T o = it.nextOrNull();<newline46mondego>                if (o == null)<newline46mondego>                {<newline46mondego>                    return;<newline46mondego>                }<newline46mondego>                elementProcessor.processElement(o);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // a thread-safe iterator-like object.<newline46mondego>    private static class SafeIterator<T><newline46mondego>    {<newline46mondego>        private final Iterator<T> in;<newline46mondego><newline46mondego>        SafeIterator(Iterator<T> in)<newline46mondego>        {<newline46mondego>            this.in = in;<newline46mondego>        }<newline46mondego><newline46mondego>        synchronized T nextOrNull()<newline46mondego>        {<newline46mondego>            if (in.hasNext())<newline46mondego>            {<newline46mondego>                return in.next();<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5146splitHere46","1949899splitHere46","mail.smtp.starttls.enable=true"
"5147splitHere46","1949969splitHere46","tabindex"
"5148splitHere46","1949969splitHere46","af:selectOneChoice"
"5149splitHere46","1949969splitHere46","tabindexes"
"5150splitHere46","1949969splitHere46","extends"
"5151splitHere46","1949969splitHere46","renderOption()"
"5152splitHere46","1949969splitHere46","com.sun.faces.renderkit.html_basic.RadioRenderer"
"5153splitHere46","1949969splitHere46","String tabindexes = (String) component.getAttributes().get(<doubleQuotes46>tabindexes<doubleQuotes46>);<newline46mondego>if (tabindexes != null) {<newline46mondego>    String[] tabindexItems = tabindexes.split(<doubleQuotes46>\\s*,\\s*<doubleQuotes46>);<newline46mondego>    String indexKey = component.getClientId(context) + <doubleQuotes46>_currentTabIndex<doubleQuotes46>;<newline46mondego>    Integer index = (Integer) component.getAttributes().get(indexKey);<newline46mondego>    if (index == null || index == tabindexItems.length) {<newline46mondego>        index = 0; // Note this thus restarts at 0 if there are more selectitems than tabindexes. Just to be on the safe side.<newline46mondego>    }<newline46mondego>    String tabindex = tabindexItems[index];<newline46mondego>    component.getAttributes().put(indexKey, ++index); // We need to save it for the next generated input element.<newline46mondego>    writer.writeAttribute(<doubleQuotes46>tabindex<doubleQuotes46>, tabindex, <doubleQuotes46>tabindex<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5154splitHere46","1949969splitHere46","faces-config.xml"
"5155splitHere46","1949969splitHere46","<render-kit><newline46mondego>    <renderer><newline46mondego>        <component-family>put here the component family of af:selectOneChoice</component-family><newline46mondego>        <renderer-type>put here the renderer type of af:selectOneChoice</renderer-type><newline46mondego>        <renderer-class>com.example.YourCustomRadioRenderer</renderer-class><newline46mondego>    </renderer><newline46mondego></render-kit><newline46mondego>"
"5156splitHere46","1949969splitHere46","tabindexes"
"5157splitHere46","1949969splitHere46","<af:selectOneChoice .... ><newline46mondego>    <f:attribute name=<doubleQuotes46>tabindexes<doubleQuotes46> value=<doubleQuotes46>1,3,5,7,2,4,6,8<doubleQuotes46> /><newline46mondego>"
"5158splitHere46","1949969splitHere46","<af:selectOneChoice .... ><newline46mondego>    <f:attribute name=<doubleQuotes46>tabindexes<doubleQuotes46> value=<doubleQuotes46>#{bean.tabindexes}<doubleQuotes46> /><newline46mondego>"
"5159splitHere46","1950004splitHere46","String input = <doubleQuotes46>FOO some other random stuff BAR BAZ<doubleQuotes46>;<newline46mondego>String output = input.replaceAll(<doubleQuotes46>FOO|BAR|BAZ<doubleQuotes46>, <doubleQuotes46>'$0'<doubleQuotes46>);<newline46mondego>"
"5160splitHere46","1950379splitHere46","weblogic.xml"
"5161splitHere46","1950623splitHere46","DataSourceTransactionManager"
"5162splitHere46","1950623splitHere46","JtaTransactionManager"
"5163splitHere46","1950623splitHere46","HibernateTransactionManager"
"5164splitHere46","1950623splitHere46","synchronized"
"5165splitHere46","1950822splitHere46","class Main$1<T><newline46mondego>    extends ArrayList<T><newline46mondego>{<newline46mondego>    private final List<T> list;<newline46mondego><newline46mondego>    Main$1(final List<T> a)<newline46mondego>    {<newline46mondego>        list = a;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean add(T element)<newline46mondego>    {<newline46mondego>        super.add(element);<newline46mondego>        return list.add(element);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5166splitHere46","1950822splitHere46","class Main{<newline46mondego>     public static <T> List<T> modifiedList(final List<T> list)<newline46mondego>     {<newline46mondego>         return new Main$1<T>(list);<newline46mondego>     }<newline46mondego><newline46mondego>     public static void main(String[] args) <newline46mondego>     {<newline46mondego>         List<String> originalList=new ArrayList<String>();<newline46mondego>         List<String> duplicateList=modifiedList(originalList);<newline46mondego>         originalList.add(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>         originalList.add(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>         originalList.add(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego>         System.out.println(originalList+<doubleQuotes46> <doubleQuotes46>+duplicateList);<newline46mondego>         duplicateList.add(<doubleQuotes46>4<doubleQuotes46>);<newline46mondego>         duplicateList.add(<doubleQuotes46>5<doubleQuotes46>);<newline46mondego>         duplicateList.add(<doubleQuotes46>6<doubleQuotes46>);<newline46mondego>         System.out.println(originalList+<doubleQuotes46> <doubleQuotes46>+duplicateList);<newline46mondego>     }<newline46mondego>"
"5167splitHere46","1950953splitHere46","y - other.y"
"5168splitHere46","1950953splitHere46","System.out.println(<doubleQuotes46>D = <doubleQuotes46> + Math.sqrt(Math.pow(x - other.x, 2) + Math.pow(y - other.y, 2)));<newline46mondego>//                                                            ^^^<newline46mondego>"
"5169splitHere46","1950955splitHere46","public static void main(String[] args) {<newline46mondego>    String record1 = <doubleQuotes46>12/18/2009 02:08:26 Admitted Doe, John (Card #111) at South Lobby [In]<doubleQuotes46>;<newline46mondego>    String record2 = <doubleQuotes46>12/18/2009 02:08:26 Admitted Van Halen, Eddie (Card #222) at South Lobby [In]<doubleQuotes46>;<newline46mondego>    String record3 = <doubleQuotes46>12/18/2009 02:08:26 Admitted Thoreau, Henry David (Card #333) at South Lobby [In]<doubleQuotes46>;<newline46mondego><newline46mondego>    summary(record1);<newline46mondego>    summary(record2);<newline46mondego>    summary(record3);<newline46mondego>}<newline46mondego><newline46mondego>public static void summary(String record) {<newline46mondego>    String[] tokens = record.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>    String date = tokens[0];<newline46mondego>    String time = tokens[1];<newline46mondego><newline46mondego>    String regEx = <doubleQuotes46>Admitted (.*), (.*) \\(Card #(.*)\\)<doubleQuotes46>;<newline46mondego>    Pattern pattern = Pattern.compile(regEx);<newline46mondego>    Matcher matcher = pattern.matcher(record);<newline46mondego>    matcher.find();<newline46mondego><newline46mondego>    String lastName = matcher.group(1);<newline46mondego>    String firstName = matcher.group(2);<newline46mondego>    String cardNumber = matcher.group(3);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>\nDate: <doubleQuotes46> + date);<newline46mondego>    System.out.println(<doubleQuotes46>Time: <doubleQuotes46> + time);<newline46mondego>    System.out.println(<doubleQuotes46>First Name: <doubleQuotes46> + firstName);<newline46mondego>    System.out.println(<doubleQuotes46>Last Name: <doubleQuotes46> + lastName);<newline46mondego>    System.out.println(<doubleQuotes46>Card Number: <doubleQuotes46> + cardNumber);<newline46mondego>}<newline46mondego>"
"5170splitHere46","1950955splitHere46","<doubleQuotes46>Admitted (.*), (.*) \\(Card #(.*)\\)<doubleQuotes46>"
"5171splitHere46","1950955splitHere46","Date: 12/18/2009<newline46mondego>Time: 02:08:26<newline46mondego>First Name: John<newline46mondego>Last Name: Doe<newline46mondego>Card Number: 111<newline46mondego><newline46mondego>Date: 12/18/2009<newline46mondego>Time: 02:08:26<newline46mondego>First Name: Eddie<newline46mondego>Last Name: Van Halen<newline46mondego>Card Number: 222<newline46mondego><newline46mondego>Date: 12/18/2009<newline46mondego>Time: 02:08:26<newline46mondego>First Name: Henry David<newline46mondego>Last Name: Thoreau<newline46mondego>Card Number: 333<newline46mondego>"
"5172splitHere46","1951085splitHere46","hibernateConfiguration.setProperty(Environment.GENERATE_STATISTICS, <doubleQuotes46>true<doubleQuotes46>)"
"5173splitHere46","1951085splitHere46","SessionFactory.getStatistics()"
"5174splitHere46","1951156splitHere46","Component[] components = frame.getContentPane().getComponents();<newline46mondego>for (Component component : components) {<newline46mondego>   if (component instanceof JComponent) {<newline46mondego>       ((JComponent) component).setBorder(null);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5175splitHere46","1951156splitHere46","JLabel"
"5176splitHere46","1951156splitHere46","instanceof"
"5177splitHere46","1951156splitHere46","JLabel"
"5178splitHere46","1951156splitHere46","JLabel"
"5179splitHere46","1951184splitHere46","class BaseClass {<newline46mondego>  private void f() { }<newline46mondego>}<newline46mondego><newline46mondego>class DerivedClass {<newline46mondego>  public void f() { }<newline46mondego>}<newline46mondego><newline46mondego>class Bystander {<newline46mondego>  public static void main() {<newline46mondego>    BaseClass inst = new DerivedClass();<newline46mondego>    inst.f();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5180splitHere46","1951630splitHere46","File f = new File(<doubleQuotes46>C:\\temp\\newfile.txt<doubleQuotes46>);<newline46mondego>//new file does not exist on disk yet<newline46mondego>f.createNewFile();<newline46mondego>//f should be created on disk now<newline46mondego>"
"5181splitHere46","1951694splitHere46","clojure-project"
"5182splitHere46","1951694splitHere46","swank-clojure-jar-path"
"5183splitHere46","1951694splitHere46","clojure.jar"
"5184splitHere46","1951694splitHere46","(expand-file-name <doubleQuotes46>~/.clojure/clojure.jar<doubleQuotes46>)"
"5185splitHere46","1951875splitHere46","DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, yourLocale);<newline46mondego>String formattedDate = df.format(yourDate);<newline46mondego>"
"5186splitHere46","1951875splitHere46","SHORT"
"5187splitHere46","1951875splitHere46","MEDIUM"
"5188splitHere46","1952314splitHere46","com<newline46mondego>   .company<newline46mondego>           .product<newline46mondego>                   .module1<newline46mondego>                           .server<newline46mondego>                                  .function1<newline46mondego>                                            .impl<newline46mondego>                           .client<newline46mondego>                                  .function1<newline46mondego>                           .common<newline46mondego>                                  .function1<newline46mondego>                                            .impl<newline46mondego>"
"5189splitHere46","1952375splitHere46","factory-bean"
"5190splitHere46","1952375splitHere46","currentUser"
"5191splitHere46","1952375splitHere46","factory-method"
"5192splitHere46","1952375splitHere46","factory-method"
"5193splitHere46","1952375splitHere46","currentUser"
"5194splitHere46","1952375splitHere46","userProviderFactoryBean"
"5195splitHere46","1952375splitHere46","User"
"5196splitHere46","1952375splitHere46","currentUser"
"5197splitHere46","1952375splitHere46","FactoryBean"
"5198splitHere46","1952375splitHere46","factory-bean"
"5199splitHere46","1952375splitHere46","<bean id=<doubleQuotes46>userProviderFactoryBean<doubleQuotes46> class=<doubleQuotes46>com.xxxxx.UserProvider<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>userDao<doubleQuotes46> ref=<doubleQuotes46>userDao<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>currentUser<doubleQuotes46> factory-bean=<doubleQuotes46>userProviderFactoryBean<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46>><newline46mondego>    <aop:scoped-proxy/><newline46mondego></bean><newline46mondego>"
"5200splitHere46","1952375splitHere46","<bean id=<doubleQuotes46>currentUser<doubleQuotes46> class=<doubleQuotes46>com.xxxxx.UserProvider<doubleQuotes46> scope=<doubleQuotes46>session<doubleQuotes46>><newline46mondego>    <aop:scoped-proxy/><newline46mondego>    <property name=<doubleQuotes46>userDao<doubleQuotes46> ref=<doubleQuotes46>userDao<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"5201splitHere46","1952375splitHere46","UserProvider"
"5202splitHere46","1952375splitHere46","FactoryBean"
"5203splitHere46","1952375splitHere46","currentUser"
"5204splitHere46","1952375splitHere46","UserProvider"
"5205splitHere46","1952375splitHere46","UserProvider"
"5206splitHere46","1952375splitHere46","factory-bean"
"5207splitHere46","1952375splitHere46","FactoryBean"
"5208splitHere46","1952375splitHere46","FactoryBean"
"5209splitHere46","1952401splitHere46","Connection conn = ...<newline46mondego>conn.setAutoCommit(false);<newline46mondego>try {<newline46mondego>   doAction1(connection);<newline46mondego>   doAction2(connection);<newline46mondego>   doAction3(connection);<newline46mondego>   doAction4(connection);<newline46mondego><newline46mondego>   connection.commit();<newline46mondego>} catch (Exception ex) {<newline46mondego>   connection.rollback();<newline46mondego>}<newline46mondego>"
"5210splitHere46","1952604splitHere46","VARCHAR2"
"5211splitHere46","1952604splitHere46","filename"
"5212splitHere46","1952859splitHere46","IProgressMonitor"
"5213splitHere46","1952859splitHere46","IProgressMonitor"
"5214splitHere46","1953180splitHere46","<input id=<doubleQuotes46>foo<doubleQuotes46>><newline46mondego><input id=<doubleQuotes46>bar<doubleQuotes46>><newline46mondego>"
"5215splitHere46","1953180splitHere46","<input name=<doubleQuotes46>foo<doubleQuotes46>><newline46mondego><input name=<doubleQuotes46>bar<doubleQuotes46>><newline46mondego>"
"5216splitHere46","1953180splitHere46","name"
"5217splitHere46","1953180splitHere46","value"
"5218splitHere46","1953180splitHere46","PreparedStatement"
"5219splitHere46","1953279splitHere46","getString()"
"5220splitHere46","1953279splitHere46","Context"
"5221splitHere46","1953279splitHere46","getResources()"
"5222splitHere46","1953279splitHere46","buttons[0]"
"5223splitHere46","1953279splitHere46","<doubleQuotes46>@string/my_string<doubleQuotes46>"
"5224splitHere46","1953279splitHere46","setText()"
"5225splitHere46","1953279splitHere46","buttons[0].setText(<doubleQuotes46>StackOverflow!<doubleQuotes46>);"
"5226splitHere46","1953593splitHere46","JMXConnector jmxc = getJMXConnector();  // Takes care of our connection<newline46mondego>MBeanServerConnection mbsc = jmxc.getMBeanServerConnection();<newline46mondego><newline46mondego>ObjectName mbeanName = new ObjectName(<doubleQuotes46>com.xyz.prodname:type=LogManager<doubleQuotes46>);<newline46mondego><newline46mondego>// This change demonstrates what must be done<newline46mondego>Object result = mbsc.getAttribute(mbeanName, <doubleQuotes46>AttributeNameAsItAppearsInJConsole<doubleQuotes46>);<newline46mondego>"
"5227splitHere46","1953871splitHere46","return new String(buffer);<newline46mondego>"
"5228splitHere46","1953871splitHere46","java.lang.String"
"5229splitHere46","1953871splitHere46","String(byte[],<encoding>)"
"5230splitHere46","1953893splitHere46","src"
"5231splitHere46","1953893splitHere46","com"
"5232splitHere46","1953893splitHere46","src"
"5233splitHere46","1953893splitHere46","CD"
"5234splitHere46","1953893splitHere46","src"
"5235splitHere46","1953893splitHere46","javac"
"5236splitHere46","1953893splitHere46",".class"
"5237splitHere46","1953893splitHere46",".java"
"5238splitHere46","1953893splitHere46","bin"
"5239splitHere46","1953893splitHere46","classes"
"5240splitHere46","1953893splitHere46","src"
"5241splitHere46","1953893splitHere46","src"
"5242splitHere46","1953893splitHere46",".jar"
"5243splitHere46","1953893splitHere46","lib"
"5244splitHere46","1953893splitHere46","src"
"5245splitHere46","1953893splitHere46","bin"
"5246splitHere46","1953893splitHere46","lib"
"5247splitHere46","1953893splitHere46","doc"
"5248splitHere46","1953893splitHere46","resources"
"5249splitHere46","1953893splitHere46","data"
"5250splitHere46","1953893splitHere46","conf"
"5251splitHere46","1953893splitHere46","Maven"
"5252splitHere46","1953893splitHere46","ant"
"5253splitHere46","1953893splitHere46","nmake"
"5254splitHere46","1954680splitHere46","MyLabel"
"5255splitHere46","1954680splitHere46","control"
"5256splitHere46","1954680splitHere46","this"
"5257splitHere46","1954680splitHere46","MouseListener"
"5258splitHere46","1954680splitHere46","control"
"5259splitHere46","1954680splitHere46","this"
"5260splitHere46","1954691splitHere46","setMargin"
"5261splitHere46","1954691splitHere46","myButton.setMargin(new Insets(0, 0, 0, 0));<newline46mondego>"
"5262splitHere46","1954775splitHere46","orm.xml"
"5263splitHere46","1954775splitHere46","schema.xml"
"5264splitHere46","1954775splitHere46","org.apache.openjpa.jdbc.ant.ReverseMappingToolTask"
"5265splitHere46","1954775splitHere46","org.apache.openjpa.jdbc.ant.SchemaToolTask"
"5266splitHere46","1954777splitHere46","ContentHandler.startElement"
"5267splitHere46","1954777splitHere46","true"
"5268splitHere46","1954983splitHere46","try {<newline46mondego>    interfaceClass.getMethod(method.getName(), method.getParameterTypes());<newline46mondego>    return true;<newline46mondego>} catch (NoSuchMethodException e) {<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"5269splitHere46","1955253splitHere46","IIterator"
"5270splitHere46","1955253splitHere46","typedef"
"5271splitHere46","1955483splitHere46","Runtime rt = Runtime.getRuntime();<newline46mondego>Process pr = rt.exec(<doubleQuotes46>mysql -p -h ServerName DbName < dump.sql<doubleQuotes46>);<newline46mondego>"
"5272splitHere46","1955633splitHere46","this"
"5273splitHere46","1955852splitHere46","sun.security.provider.KeyProtector<newline46mondego>"
"5274splitHere46","1956173splitHere46","alloc"
"5275splitHere46","1956173splitHere46","dispose"
"5276splitHere46","1956173splitHere46","setBufferPool"
"5277splitHere46","1956398splitHere46","java Convert -classpath `echo ../lib/* ../../lib/* | sed 's/ /:/g'`<newline46mondego>"
"5278splitHere46","1956398splitHere46","java  -classpath `echo ../lib/* ../../lib/* | sed 's/ /:/g'` Convert<newline46mondego>"
"5279splitHere46","1956398splitHere46","javac [ <options for the JVM> ... ] <classname> [ <application args> ... ]<newline46mondego>"
"5280splitHere46","1956406splitHere46","new MaxentTagger(<doubleQuotes46>models/left3words-wsj-0-18.tagger<doubleQuotes46>);<newline46mondego>"
"5281splitHere46","1956406splitHere46","MaxentTagger.tagStringTokenized(<doubleQuotes46>here is a string to tag<doubleQuotes46>);<newline46mondego>"
"5282splitHere46","1956406splitHere46","-Xmx256m"
"5283splitHere46","1956434splitHere46","String str = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>str += <doubleQuotes46> World!<doubleQuotes46>;<newline46mondego>"
"5284splitHere46","1956434splitHere46","int num = 5;<newline46mondego>num += 2;<newline46mondego>"
"5285splitHere46","1956548splitHere46","boolean shutdown = false;<newline46mondego>while (!shutdown) {<newline46mondego>    try {<newline46mondego>        WorkItem w = inQueue.take();<newline46mondego>        if (w == QUEUE_IS_DEAD)<newline46mondego>          shutdown = true;<newline46mondego>        else<newline46mondego>          w.consume();<newline46mondego>    } catch (InterruptedException e) { <newline46mondego>        // possibly submit QUEUE_IS_DEAD to the queue<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5286splitHere46","1956601splitHere46","Superclass x = new Subclass();<newline46mondego>"
"5287splitHere46","1956601splitHere46","List<String> stringList = new ArrayList<String>();<newline46mondego>"
"5288splitHere46","1956784splitHere46","java.awt.MouseInfo.getPointerInfo().getLocation()<newline46mondego>"
"5289splitHere46","1956920splitHere46","List<String> list = new ArrayList<String>();<newline46mondego>"
"5290splitHere46","1956920splitHere46","List list = new ArrayList<String>();<newline46mondego>list.add(<doubleQuotes46>boo<doubleQuotes46>);<newline46mondego>"
"5291splitHere46","1956981splitHere46","if (str[i] == null || str[i].trim().equals(<doubleQuotes46><doubleQuotes46>)){<newline46mondego>// your code<newline46mondego>}<newline46mondego>"
"5292splitHere46","1957117splitHere46","public void paint(Graphics g)<newline46mondego>"
"5293splitHere46","1957117splitHere46","repaint();<newline46mondego>"
"5294splitHere46","1957117splitHere46","public class MainFrame extends JFrame {<newline46mondego><newline46mondego>    int x = -1;<newline46mondego>    int inc;<newline46mondego><newline46mondego>    public MainFrame() {<newline46mondego>        Timer timer = new Timer(10, new ActionListener() {<newline46mondego>            public void actionPerformed(ActionEvent arg0) {<newline46mondego>                MainFrame.this.repaint();<newline46mondego>            }<newline46mondego>        });<newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint(Graphics g) {<newline46mondego>        // don't call super.paint(g), we do all the painting<newline46mondego><newline46mondego>        if(x > getWidth()) inc = -5;<newline46mondego>        if(x < 0) inc = 5;<newline46mondego><newline46mondego>        x += inc;<newline46mondego><newline46mondego>        // here we clear everything<newline46mondego>        g.setColor(Color.BLACK);<newline46mondego>        g.fillRect(0, 0, getWidth(), getHeight());<newline46mondego><newline46mondego>        g.setColor(Color.BLUE);<newline46mondego>        g.drawLine(x, 0, getWidth()-x, getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        MainFrame mainFrame = new MainFrame();<newline46mondego>        mainFrame.setSize(800, 600);<newline46mondego>        mainFrame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5295splitHere46","1957499splitHere46","fieldname TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP"
"5296splitHere46","1957559splitHere46","StringReader reader = new StringReader( s );<newline46mondego>InputSource inputSource = new InputSource( reader );<newline46mondego>Document doc = builder.parse( inputSource );<newline46mondego>reader.close();<newline46mondego>"
"5297splitHere46","1957609splitHere46","<bean id=<doubleQuotes46>referenceSessionFactory<doubleQuotes46> class=<doubleQuotes46>org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>dataSource<doubleQuotes46> ref=<doubleQuotes46>dataSource<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>packagesToScan<doubleQuotes46>><newline46mondego>      <array><newline46mondego>        <value>com.xxx.hibernate.objects</value><newline46mondego>      </array><newline46mondego>    </property><newline46mondego>  </bean><newline46mondego>"
"5298splitHere46","1957609splitHere46","AnnotationSessionFactoryBean sfb = new AnnotationSessionFactoryBean();<newline46mondego>sfb.setDataSource( ds );<newline46mondego>sfb.setHibernateProperties( hibProps);<newline46mondego>sfb.setPackagesToScan( ... );<newline46mondego>sfb.initialise();<newline46mondego>SessionFactory sf = sfb.getObject();<newline46mondego>"
"5299splitHere46","1957662splitHere46","if(group != null)"
"5300splitHere46","1957670splitHere46","int ipAddress = ....<newline46mondego>byte[] bytes = BigInteger.valueOf(ipAddress).toByteArray();<newline46mondego>InetAddress address = InetAddress.getByAddress(bytes);<newline46mondego>"
"5301splitHere46","1957777splitHere46","Endpoint ep = Endpoint.publish(<doubleQuotes46>http://my.server.com/mywebservice/<doubleQuotes46>, new WebserviceImpl());<newline46mondego>ep.getBinding().getHandlerChain().add(new SOAPLoggingHandler());<newline46mondego>"
"5302splitHere46","1957777splitHere46","package com.myfirm.util.logging.ws;<newline46mondego><newline46mondego>import java.io.PrintStream;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Set;<newline46mondego><newline46mondego>import javax.xml.namespace.QName;<newline46mondego>import javax.xml.soap.SOAPMessage;<newline46mondego>import javax.xml.ws.handler.MessageContext;<newline46mondego>import javax.xml.ws.handler.soap.SOAPHandler;<newline46mondego>import javax.xml.ws.handler.soap.SOAPMessageContext;<newline46mondego><newline46mondego>/*<newline46mondego> * This simple SOAPHandler will output the contents of incoming<newline46mondego> * and outgoing messages.<newline46mondego> */<newline46mondego>public class SOAPLoggingHandler implements SOAPHandler<SOAPMessageContext> {<newline46mondego><newline46mondego>    // change this to redirect output if desired<newline46mondego>    private static PrintStream out = System.out;<newline46mondego><newline46mondego>    public Set<QName> getHeaders() {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean handleMessage(SOAPMessageContext smc) {<newline46mondego>        logToSystemOut(smc);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean handleFault(SOAPMessageContext smc) {<newline46mondego>        logToSystemOut(smc);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    // nothing to clean up<newline46mondego>    public void close(MessageContext messageContext) {<newline46mondego>    }<newline46mondego><newline46mondego>    /*<newline46mondego>     * Check the MESSAGE_OUTBOUND_PROPERTY in the context<newline46mondego>     * to see if this is an outgoing or incoming message.<newline46mondego>     * Write a brief message to the print stream and<newline46mondego>     * output the message. The writeTo() method can throw<newline46mondego>     * SOAPException or IOException<newline46mondego>     */<newline46mondego>    private void logToSystemOut(SOAPMessageContext smc) {<newline46mondego>        Boolean outboundProperty = (Boolean)<newline46mondego>            smc.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY);<newline46mondego><newline46mondego>        if (outboundProperty.booleanValue()) {<newline46mondego>            out.println(<doubleQuotes46>\nOutbound message:<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            out.println(<doubleQuotes46>\nInbound message:<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        SOAPMessage message = smc.getMessage();<newline46mondego>        try {<newline46mondego>            message.writeTo(out);<newline46mondego>            out.println(<doubleQuotes46><doubleQuotes46>);   // just to add a newline<newline46mondego>        } catch (Exception e) {<newline46mondego>            out.println(<doubleQuotes46>Exception in handler: <doubleQuotes46> + e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5303splitHere46","1958037splitHere46","singleton"
"5304splitHere46","1958037splitHere46","application"
"5305splitHere46","1958037splitHere46","WebApplicationContext"
"5306splitHere46","1958037splitHere46","ServletContext"
"5307splitHere46","1958037splitHere46","singleton"
"5308splitHere46","1958037splitHere46","request"
"5309splitHere46","1958037splitHere46","session"
"5310splitHere46","1958037splitHere46","singleton"
"5311splitHere46","1958037splitHere46","singleton"
"5312splitHere46","1958187splitHere46","ClassLoader#getResources()"
"5313splitHere46","1958187splitHere46","java.io.File"
"5314splitHere46","1958187splitHere46","Class#forName()"
"5315splitHere46","1958187splitHere46","Class#getMethod()"
"5316splitHere46","1958187splitHere46","static"
"5317splitHere46","1958187splitHere46","annotations"
"5318splitHere46","1958614splitHere46","IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();<newline46mondego>IWorkbenchPage activePage = window.getActivePage(); // null check omitted<newline46mondego>IEditorPart editorPart = activePage.getActiveEditor(); // null check omitted<newline46mondego>ITextEditor textEditor = (ITextEditor) editorPart; // casting check omitted<newline46mondego>IDocument currentDocument = textEditor.getDocumentProvider().getDocument(textEditor.getEditorInput());<newline46mondego>"
"5319splitHere46","1958614splitHere46","org.eclipse.jface.text.IDocument"
"5320splitHere46","1958841splitHere46","static_races[player.race_id]"
"5321splitHere46","1958841splitHere46","function Race Player::GetRace() {<newline46mondego>    return static_races[this.race_id];<newline46mondego>}<newline46mondego>"
"5322splitHere46","1958854splitHere46","javax.faces.jar"
"5323splitHere46","1958854splitHere46","/WEB-INF/lib"
"5324splitHere46","1958961splitHere46","this"
"5325splitHere46","1958988splitHere46","/A/@b"
"5326splitHere46","1958988splitHere46","b"
"5327splitHere46","1959142splitHere46","Type"
"5328splitHere46","1959142splitHere46","TypeToken"
"5329splitHere46","1959142splitHere46","List<Person> persons = new Gson().fromJson(json, new TypeToken<List<Person>>() {}.getType());<newline46mondego>"
"5330splitHere46","1959142splitHere46","getResultData()"
"5331splitHere46","1959142splitHere46","Type"
"5332splitHere46","1959285splitHere46","netstat -a"
"5333splitHere46","1959344splitHere46","public class A implements I { /* ... */ }<newline46mondego><newline46mondego>public class B extends A { /* ... */ }<newline46mondego>"
"5334splitHere46","1959344splitHere46","B"
"5335splitHere46","1959344splitHere46","I"
"5336splitHere46","1959481splitHere46","\D"
"5337splitHere46","1959481splitHere46","\D*"
"5338splitHere46","1959481splitHere46","\D*"
"5339splitHere46","1959535splitHere46","Class.isInstance()"
"5340splitHere46","1959535splitHere46","Class.cast()"
"5341splitHere46","1959535splitHere46","static <T> T findInList(List<?> list, Class<T> clazz) {<newline46mondego>  for (Object o : list) {<newline46mondego>    if (clazz.isInstance(o)) {<newline46mondego>      return clazz.cast(o);<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return null;<newline46mondego>}<newline46mondego>"
"5342splitHere46","1959535splitHere46","Collection"
"5343splitHere46","1959535splitHere46","Transaction"
"5344splitHere46","1959539splitHere46","DEBIAN_FRONTEND=noninteractive apt-get install -y java5-sun-jre || :<newline46mondego>debconf 'echo SET shared/accepted-sun-dlj-v1-1 true; echo $(read) >&2'<newline46mondego>apt-get install -y java5-sun-jre<newline46mondego>"
"5345splitHere46","1959781splitHere46","Double d1 = 1.0;<newline46mondego>Double d2 = Double.POSITIVE_INFINITY;<newline46mondego><newline46mondego>int hash1 = d1.hashCode();<newline46mondego>int hash2 = d2.hashCode();<newline46mondego><newline46mondego>// These both print -1092616192<newline46mondego>// This was me using the wrong hash combinator *and*<newline46mondego>// the wrong tuples... but it's interesting<newline46mondego>System.out.println(hash1 * 17 + hash2);<newline46mondego>System.out.println(hash2 * 17 + hash1);<newline46mondego><newline46mondego>// These both print -33554432<newline46mondego>System.out.println(hash1 * 31 + hash1);<newline46mondego>System.out.println(hash2 * 31 + hash2);<newline46mondego>"
"5346splitHere46","1959785splitHere46","class DizzyDean {<newline46mondego>  int pitch() { throw new RuntimeException(<doubleQuotes46>90 mph?!<doubleQuotes46>); }<newline46mondego>}<newline46mondego>"
"5347splitHere46","1959955splitHere46","Object"
"5348splitHere46","1959955splitHere46","Collection"
"5349splitHere46","1960056splitHere46","ServiceLoader"
"5350splitHere46","1960056splitHere46","ServiceLoader"
"5351splitHere46","1960056splitHere46","CharsetDecoder"
"5352splitHere46","1960056splitHere46","ServiceLoader"
"5353splitHere46","1960056splitHere46","ServiceLoader"
"5354splitHere46","1960112splitHere46","A x = new B();<newline46mondego>C y = new C(); <newline46mondego>A z = new C();<newline46mondego><newline46mondego>A. x.a2(); // Method is overriden.<newline46mondego>B. z.a2(); // Method is inherited.<newline46mondego>C. z.c1(); // Won't compile. Method isn't defined in A.<newline46mondego>D. z.a1(); // Method is implemented.<newline46mondego>E. y.c1(); // Not polymorphic. Method is defined in declared class C.<newline46mondego>F. x.a1(); // Method is implemented.<newline46mondego>"
"5355splitHere46","1960252splitHere46","private static void handleClient() {<newline46mondego>  new Thread() {<newline46mondego>    public void run() {<newline46mondego>      Socket link = null;<newline46mondego>      ...<newline46mondego>        } catch(IOException ioEx) {<newline46mondego>           System.out.println(<doubleQuotes46>Diskonekcija nije moguca! \nRazlog: <doubleQuotes46> + ioEx.getMessage());<newline46mondego>           System.exit(1);<newline46mondego>       }    <newline46mondego>    } // end outer try<newline46mondego>  }.start() // end thread<newline46mondego>}<newline46mondego>"
"5356splitHere46","1960252splitHere46","Executors.newFixedThreadPool()"
"5357splitHere46","1960335splitHere46","D=sqrt((x2-x1)^2+(y2-y1)^2+...+(n2-n1)^2)<newline46mondego>"
"5358splitHere46","1960335splitHere46","new BufferedReader(new FileReader(filename))"
"5359splitHere46","1960335splitHere46","BufferedReader.readLine()"
"5360splitHere46","1960335splitHere46","line.split(<doubleQuotes46>\\s<doubleQuotes46>)"
"5361splitHere46","1960335splitHere46","HashMap"
"5362splitHere46","1960824splitHere46","Class.forName(String)"
"5363splitHere46","1960824splitHere46","Class"
"5364splitHere46","1960824splitHere46","Class.forName(className, true, currentLoader)<newline46mondego>"
"5365splitHere46","1960824splitHere46","currentLoader"
"5366splitHere46","1960824splitHere46","Class"
"5367splitHere46","1960824splitHere46","java.lang.Thread"
"5368splitHere46","1960824splitHere46","Class t = Class.forName(<doubleQuotes46>java.lang.Thread<doubleQuotes46>)<newline46mondego>"
"5369splitHere46","1960824splitHere46","forName(<doubleQuotes46>X<doubleQuotes46>)"
"5370splitHere46","1960824splitHere46","Class#newInstance()"
"5371splitHere46","1960824splitHere46","Class"
"5372splitHere46","1960824splitHere46","Class"
"5373splitHere46","1960824splitHere46","new"
"5374splitHere46","1960835splitHere46","Executor"
"5375splitHere46","1960835splitHere46","Thread"
"5376splitHere46","1961024splitHere46","List"
"5377splitHere46","1961024splitHere46","Collection"
"5378splitHere46","1961072splitHere46","Junit"
"5379splitHere46","1961072splitHere46","RemoteTestRunner"
"5380splitHere46","1961079splitHere46","sun.misc.BASE64Decoder"
"5381splitHere46","1961130splitHere46","Constant.toPath = <doubleQuotes46>F\\123\\test<doubleQuotes46>;"
"5382splitHere46","1961130splitHere46","Constant.toPath = <doubleQuotes46>F:\\123\\test<doubleQuotes46>;"
"5383splitHere46","1961314splitHere46","((UserDetails)SecurityContextHolder.getPrincipal()).getAuthorities();<newline46mondego>"
"5384splitHere46","1961434splitHere46","<tx:annotation-driven transaction-manager=<doubleQuotes46>transactionManager<doubleQuotes46> /><newline46mondego>"
"5385splitHere46","1961434splitHere46","<bean id = <doubleQuotes46>transactionManager<doubleQuotes46> class = <doubleQuotes46>org.springframework.jdbc.datasource.DataSourceTransactionManager<doubleQuotes46>><newline46mondego>	<property name = <doubleQuotes46>dataSource<doubleQuotes46> ref = <doubleQuotes46>dataSource<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"5386splitHere46","1961434splitHere46","<bean class=<doubleQuotes46>org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor<doubleQuotes46> /><newline46mondego>"
"5387splitHere46","1961434splitHere46","<context:annotation-config />"
"5388splitHere46","1961434splitHere46","<context:annotation-config />"
"5389splitHere46","1961463splitHere46","AbsractReadOnlyDaoImpl"
"5390splitHere46","1961463splitHere46","ReadOnlyDao"
"5391splitHere46","1961472splitHere46","@Transactional"
"5392splitHere46","1961472splitHere46","value"
"5393splitHere46","1961472splitHere46","@Transactional(<doubleQuotes46>txManager1<doubleQuotes46>);<newline46mondego>"
"5394splitHere46","1961472splitHere46","TransactionProxyFactoryBean"
"5395splitHere46","1961472splitHere46","JpaTransactionManager"
"5396splitHere46","1961472splitHere46","DataSourceTransactionmanagers"
"5397splitHere46","1961533splitHere46","com.sun.tools.javac.api.JavacTool"
"5398splitHere46","1961657splitHere46","== used instead of equals()"
"5399splitHere46","1961697splitHere46","URLClassLoader"
"5400splitHere46","1961697splitHere46","URLClassLoader"
"5401splitHere46","1961697splitHere46","File classFile = new File(<doubleQuotes46>/eraseme<doubleQuotes46>);<newline46mondego>URL url = classFile.toURL();<newline46mondego>URL[] urls = new URL[] { url };<newline46mondego>ClassLoader cl = new URLClassLoader(urls);      <newline46mondego>Class cls = cl.loadClass(<doubleQuotes46>Eraseme<doubleQuotes46>);  // will try to load /eraseme/Eraseme.class<newline46mondego>TestApi test = (TestApi) cls.newInstance();<newline46mondego>System.out.println(test.getVersion());<newline46mondego>"
"5402splitHere46","1961697splitHere46","com.mycompany.erasestuff.EraseMe"
"5403splitHere46","1961697splitHere46","/eraseme/com/mycompany/erasestuff/EraseMe.class"
"5404splitHere46","1961697splitHere46","EraseMe"
"5405splitHere46","1961697splitHere46","URLClassloader"
"5406splitHere46","1961853splitHere46","JtaTransactionManager"
"5407splitHere46","1961853splitHere46","JtaTransactionManager"
"5408splitHere46","1961894splitHere46","src"
"5409splitHere46","1961894splitHere46","test"
"5410splitHere46","1961894splitHere46","spikes"
"5411splitHere46","1961974splitHere46","MessageContext"
"5412splitHere46","1961974splitHere46","@Resource<newline46mondego>private WebServiceContext wsCtx;<newline46mondego>"
"5413splitHere46","1961974splitHere46","MessageContext messageContext = wsCtx.getMessageContext()<newline46mondego><newline46mondego>ServletContext ctx = (ServletContext) <newline46mondego>           messageContext.getProperty(MessageContext.SERVLET_CONTEXT);<newline46mondego>"
"5414splitHere46","1961974splitHere46","HttpServlet servlet = (HttpServlet) <newline46mondego>    MessageContext.getCurrentContext().getProperty(HTTPConstants.MC_HTTP_SERVLET);<newline46mondego>ServletContext ctx = servlet.getServletContext();<newline46mondego>"
"5415splitHere46","1961974splitHere46","import org.apache.axis2.context.MessageContext;<newline46mondego>import org.apache.axis2.transport.http.HTTPConstants;<newline46mondego>"
"5416splitHere46","1962195splitHere46","String str = <doubleQuotes46>whatever<doubleQuotes46>;<newline46mondego>str = str.replaceAll('(,)?(.)?(,)?', '');<newline46mondego>"
"5417splitHere46","1962195splitHere46","(,)?(.)?(,)?<newline46mondego>"
"5418splitHere46","1962584splitHere46","JtaTransactionManager"
"5419splitHere46","1962584splitHere46","<tx:jta-transaction-manager/>"
"5420splitHere46","1962584splitHere46","JtaTransactionManager"
"5421splitHere46","1962584splitHere46","JtaTransactionManager"
"5422splitHere46","1962584splitHere46","HibernateTransactionManager"
"5423splitHere46","1962584splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><beans xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46><newline46mondego>       xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>       xmlns:tx=<doubleQuotes46>http://www.springframework.org/schema/tx<doubleQuotes46>       <newline46mondego>       xsi:schemaLocation=<doubleQuotes46><newline46mondego>       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd<newline46mondego>       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd<doubleQuotes46>><newline46mondego><newline46mondego>    <tx:jta-transaction-manager /><newline46mondego><newline46mondego>    <!-- <newline46mondego>    <bean id=<doubleQuotes46>transactionManager<doubleQuotes46> class=<doubleQuotes46>org.springframework.orm.hibernate3.HibernateTransactionManager<doubleQuotes46>><newline46mondego>    	<property name=<doubleQuotes46>sessionFactory<doubleQuotes46>><newline46mondego>    		//my HRappsdao using same<newline46mondego>    		<ref local=<doubleQuotes46>sessionFactory<doubleQuotes46> /><newline46mondego>    	</property><newline46mondego>    </bean><newline46mondego>    --><newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego></beans><newline46mondego>"
"5424splitHere46","1962838splitHere46","enum EVENTTYPES = {PEEL=0, WORK=1};<newline46mondego> struct Event = {<newline46mondego>     int eventType;<newline46mondego>     int* data;<newline46mondego> }<newline46mondego><newline46mondego> filoQueue eventQueue;<newline46mondego><newline46mondego> array sQuidPlayers = [new Squid(), new Squid(), new Squid()];<newline46mondego> void eventLoop () {<newline46mondego>      int player;<newline46mondego>      for each player in sQuidPlayers {<newline46mondego>          eventQueue.push(new Event(EVENTTYPES.WORK, player.id));<newline46mondego>      }<newline46mondego><newline46mondego>      for each event in eventQueue {<newline46mondego>           game.doEvent(event)<newline46mondego>      }<newline46mondego><newline46mondego> }<newline46mondego>"
"5425splitHere46","1962917splitHere46","public class ImagePanel extends JPanel {<newline46mondego><newline46mondego>  private Image img;<newline46mondego><newline46mondego>  public void setImage(String img) {<newline46mondego>    setImage(new ImageIcon(img).getImage());<newline46mondego>  }<newline46mondego><newline46mondego>  public void setImage(Image img) {<newline46mondego>    int width = this.getWidth();<newline46mondego>    int height = (int) (((double) img.getHeight(null) / img.getWidth(null)) * width);<newline46mondego>    this.img = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void paintComponent(Graphics g) {<newline46mondego>    g.drawImage(img, 0, 0, this);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5426splitHere46","1962917splitHere46","img"
"5427splitHere46","1962917splitHere46","setImage()"
"5428splitHere46","1962917splitHere46","repaint()"
"5429splitHere46","1962917splitHere46","paintComponent"
"5430splitHere46","1962917splitHere46","JPanel"
"5431splitHere46","1962917splitHere46","ImagePanel"
"5432splitHere46","1962981splitHere46","import netscape.javascript.JSObject;<newline46mondego><newline46mondego>String data = <doubleQuotes46><doubleQuotes46>;<newline46mondego>String cookiename = <doubleQuotes46>fooCookie<doubleQuotes46>;<newline46mondego>JSObject myBrowser = JSObject.getWindow(this);<newline46mondego>JSObject myDocument = (JSObject) myBrowser.getMember(<doubleQuotes46>document<doubleQuotes46>);<newline46mondego><newline46mondego>String myCookie = (String) myDocument.getMember(<doubleQuotes46>cookie<doubleQuotes46>);<newline46mondego>if (myCookie.length() > 0) {<newline46mondego>    String[] cookies = myCookie.split(<doubleQuotes46>;<doubleQuotes46>);<newline46mondego>    for (String cookie : cookies) {<newline46mondego>    	int pos = cookie.indexOf(<doubleQuotes46>=<doubleQuotes46>);<newline46mondego>    	if (cookie.substring(0, pos).trim().equals(cookiename)) {<newline46mondego>    		data = cookie.substring(pos + 1);<newline46mondego>    		break;<newline46mondego>    	}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5433splitHere46","1962981splitHere46","String data = <doubleQuotes46>test<doubleQuotes46>;<newline46mondego>String cookiename = <doubleQuotes46>fooCookie<doubleQuotes46>;<newline46mondego>JSObject win = JSObject.getWindow(this);<newline46mondego>JSObject doc = (JSObject) win.getMember(<doubleQuotes46>document<doubleQuotes46>);<newline46mondego>String data = cookiename + <doubleQuotes46>=<doubleQuotes46> + data + <doubleQuotes46>; path=/; expires=Thu, 31-Dec-2019 12:00:00 GMT<doubleQuotes46>;<newline46mondego>doc.setMember(<doubleQuotes46>cookie<doubleQuotes46>, data);<newline46mondego>"
"5434splitHere46","1963012splitHere46","RESOURCE_LOCAL"
"5435splitHere46","1963571splitHere46","GET"
"5436splitHere46","1963571splitHere46","java.net.URL"
"5437splitHere46","1963571splitHere46","InputStream input = new URL(<doubleQuotes46>http://localhost/context/page.jsp<doubleQuotes46>).openStream();<newline46mondego>"
"5438splitHere46","1963571splitHere46","POST"
"5439splitHere46","1963571splitHere46","Filter"
"5440splitHere46","1963571splitHere46","ServletResponse"
"5441splitHere46","1963571splitHere46","PrintWriter"
"5442splitHere46","1963571splitHere46","write()"
"5443splitHere46","1963571splitHere46","package mypackage;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.io.OutputStreamWriter;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.io.Writer;<newline46mondego><newline46mondego>import javax.servlet.Filter;<newline46mondego>import javax.servlet.FilterChain;<newline46mondego>import javax.servlet.FilterConfig;<newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.ServletRequest;<newline46mondego>import javax.servlet.ServletResponse;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego>import javax.servlet.http.HttpServletResponseWrapper;<newline46mondego><newline46mondego>public class CopyResponseFilter implements Filter {<newline46mondego><newline46mondego>    public void init(FilterConfig config) throws ServletException {<newline46mondego>        // NOOP.<newline46mondego>    }<newline46mondego><newline46mondego>    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) <newline46mondego>        throws IOException, ServletException<newline46mondego>    {<newline46mondego>        // Set character encoding for better world domination.<newline46mondego>        response.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego><newline46mondego>        // Create copy writer.<newline46mondego>        HttpServletResponse httpResponse = (HttpServletResponse) response;<newline46mondego>        CopyWriter copyWriter = new CopyWriter(new OutputStreamWriter(<newline46mondego>            httpResponse.getOutputStream(), httpResponse.getCharacterEncoding()));<newline46mondego><newline46mondego>        // Filter request with response which is wrapped with new writer.<newline46mondego>        chain.doFilter(request, wrapResponse(httpResponse, copyWriter));<newline46mondego><newline46mondego>        // Store the copy writer afterwards in session so that it's available in next request.<newline46mondego>        HttpServletRequest httpRequest = (HttpServletRequest) request;<newline46mondego>        httpRequest.getSession().setAttribute(<doubleQuotes46>copyWriter<doubleQuotes46>, copyWriter);<newline46mondego>    }<newline46mondego><newline46mondego>    public void destroy() {<newline46mondego>        // NOOP.<newline46mondego>    }<newline46mondego><newline46mondego>    private static HttpServletResponse wrapResponse<newline46mondego>        (final HttpServletResponse response, final PrintWriter writer)<newline46mondego>    {<newline46mondego>        return new HttpServletResponseWrapper(response) {<newline46mondego>            public PrintWriter getWriter() throws IOException {<newline46mondego>                return writer;<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class CopyWriter extends PrintWriter {<newline46mondego><newline46mondego>    StringBuilder copy = new StringBuilder();<newline46mondego><newline46mondego>    public CopyWriter(Writer out) {<newline46mondego>        super(out);<newline46mondego>    }<newline46mondego><newline46mondego>    public void write(int c) {<newline46mondego>        copy.append((char) c); // It is actually a char, not an int.<newline46mondego>        super.write(c);<newline46mondego>        super.flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public void write(char[] chars) {<newline46mondego>        copy.append(chars);<newline46mondego>        super.write(chars);<newline46mondego>        super.flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public void write(char[] chars, int offset, int length) {<newline46mondego>        copy.append(chars, offset, length);<newline46mondego>        super.write(chars, offset, length);<newline46mondego>        super.flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public void write(String string) {<newline46mondego>        copy.append(string);<newline46mondego>        super.write(string);<newline46mondego>        super.flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public void write(String string, int offset, int length) {<newline46mondego>        copy.append(string, offset, length);<newline46mondego>        super.write(string, offset, length);<newline46mondego>        super.flush();<newline46mondego>    }<newline46mondego><newline46mondego>    public String getCopy() {<newline46mondego>        return copy.toString();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5444splitHere46","1963571splitHere46","CopyWriter"
"5445splitHere46","1963571splitHere46","CopyWriter copyWriter = (CopyWriter) request.getSession().getAttribute(<doubleQuotes46>copyWriter<doubleQuotes46>);<newline46mondego>String outputOfPreviousRequest = copyWriter.getCopy();<newline46mondego>"
"5446splitHere46","1963571splitHere46","url-pattern"
"5447splitHere46","1963571splitHere46","/*"
"5448splitHere46","1963571splitHere46","url-pattern"
"5449splitHere46","1963571splitHere46","Map<URL, CopyWriter>"
"5450splitHere46","1963590splitHere46","org.apache.log4j.xml.DOMConfigurator"
"5451splitHere46","1963590splitHere46","InputSource"
"5452splitHere46","1963590splitHere46","XPathExpression"
"5453splitHere46","1963590splitHere46","InputSource"
"5454splitHere46","1963590splitHere46","InputStream"
"5455splitHere46","1963607splitHere46","@FacesComponent"
"5456splitHere46","1963607splitHere46","@MultipartConfig"
"5457splitHere46","1963607splitHere46","Servlet"
"5458splitHere46","1963607splitHere46","Filter"
"5459splitHere46","1963607splitHere46","FacesServlet"
"5460splitHere46","1963607splitHere46","final"
"5461splitHere46","1963607splitHere46","Servlet"
"5462splitHere46","1963607splitHere46","FacesServlet"
"5463splitHere46","1963607splitHere46","Part#getInputStream()"
"5464splitHere46","1963607splitHere46","Part#write()"
"5465splitHere46","1963640splitHere46","parameters"
"5466splitHere46","1963684splitHere46","import java.awt.Canvas;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.GraphicsConfiguration;<newline46mondego>import java.awt.GraphicsEnvironment;<newline46mondego>import java.awt.Toolkit;<newline46mondego>import java.awt.Transparency;<newline46mondego>import java.awt.event.WindowAdapter;<newline46mondego>import java.awt.event.WindowEvent;<newline46mondego>import java.awt.image.BufferStrategy;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.WindowConstants;<newline46mondego><newline46mondego>public class Test extends Thread {<newline46mondego>    private boolean isRunning = true;<newline46mondego>    private Canvas canvas;<newline46mondego>    private BufferStrategy strategy;<newline46mondego>    private BufferedImage background;<newline46mondego>    private Graphics2D backgroundGraphics;<newline46mondego>    private Graphics2D graphics;<newline46mondego>    private JFrame frame;<newline46mondego>    private int width = 320;<newline46mondego>    private int height = 240;<newline46mondego>    private int scale = 1;<newline46mondego>    private GraphicsConfiguration config =<newline46mondego>    		GraphicsEnvironment.getLocalGraphicsEnvironment()<newline46mondego>    			.getDefaultScreenDevice()<newline46mondego>    			.getDefaultConfiguration();<newline46mondego><newline46mondego>    // create a hardware accelerated image<newline46mondego>    public final BufferedImage create(final int width, final int height,<newline46mondego>    		final boolean alpha) {<newline46mondego>    	return config.createCompatibleImage(width, height, alpha<newline46mondego>    			? Transparency.TRANSLUCENT : Transparency.OPAQUE);<newline46mondego>    }<newline46mondego><newline46mondego>    // Setup<newline46mondego>    public Test() {<newline46mondego>    	// JFrame<newline46mondego>    	frame = new JFrame();<newline46mondego>    	frame.addWindowListener(new FrameClose());<newline46mondego>    	frame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);<newline46mondego>    	frame.setSize(width * scale, height * scale);<newline46mondego>    	frame.setVisible(true);<newline46mondego><newline46mondego>    	// Canvas<newline46mondego>    	canvas = new Canvas(config);<newline46mondego>    	canvas.setSize(width * scale, height * scale);<newline46mondego>    	frame.add(canvas, 0);<newline46mondego><newline46mondego>    	// Background & Buffer<newline46mondego>    	background = create(width, height, false);<newline46mondego>    	canvas.createBufferStrategy(2);<newline46mondego>    	do {<newline46mondego>    		strategy = canvas.getBufferStrategy();<newline46mondego>    	} while (strategy == null);<newline46mondego>    	start();<newline46mondego>    }<newline46mondego><newline46mondego>    private class FrameClose extends WindowAdapter {<newline46mondego>    	@Override<newline46mondego>    	public void windowClosing(final WindowEvent e) {<newline46mondego>    		isRunning = false;<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    // Screen and buffer stuff<newline46mondego>    private Graphics2D getBuffer() {<newline46mondego>    	if (graphics == null) {<newline46mondego>    		try {<newline46mondego>    			graphics = (Graphics2D) strategy.getDrawGraphics();<newline46mondego>    		} catch (IllegalStateException e) {<newline46mondego>    			return null;<newline46mondego>    		}<newline46mondego>    	}<newline46mondego>    	return graphics;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean updateScreen() {<newline46mondego>    	graphics.dispose();<newline46mondego>    	graphics = null;<newline46mondego>    	try {<newline46mondego>    		strategy.show();<newline46mondego>    		Toolkit.getDefaultToolkit().sync();<newline46mondego>    		return (!strategy.contentsLost());<newline46mondego><newline46mondego>    	} catch (NullPointerException e) {<newline46mondego>    		return true;<newline46mondego><newline46mondego>    	} catch (IllegalStateException e) {<newline46mondego>    		return true;<newline46mondego>    	}<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>    	backgroundGraphics = (Graphics2D) background.getGraphics();<newline46mondego>    	long fpsWait = (long) (1.0 / 30 * 1000);<newline46mondego>    	main: while (isRunning) {<newline46mondego>    		long renderStart = System.nanoTime();<newline46mondego>    		updateGame();<newline46mondego><newline46mondego>    		// Update Graphics<newline46mondego>    		do {<newline46mondego>    			Graphics2D bg = getBuffer();<newline46mondego>    			if (!isRunning) {<newline46mondego>    				break main;<newline46mondego>    			}<newline46mondego>    			renderGame(backgroundGraphics); // this calls your draw method<newline46mondego>    			// thingy<newline46mondego>    			if (scale != 1) {<newline46mondego>    				bg.drawImage(background, 0, 0, width * scale, height<newline46mondego>    						* scale, 0, 0, width, height, null);<newline46mondego>    			} else {<newline46mondego>    				bg.drawImage(background, 0, 0, null);<newline46mondego>    			}<newline46mondego>    			bg.dispose();<newline46mondego>    		} while (!updateScreen());<newline46mondego><newline46mondego>    		// Better do some FPS limiting here<newline46mondego>    		long renderTime = (System.nanoTime() - renderStart) / 1000000;<newline46mondego>    		try {<newline46mondego>    			Thread.sleep(Math.max(0, fpsWait - renderTime));<newline46mondego>    		} catch (InterruptedException e) {<newline46mondego>    			Thread.interrupted();<newline46mondego>    			break;<newline46mondego>    		}<newline46mondego>    		renderTime = (System.nanoTime() - renderStart) / 1000000;<newline46mondego><newline46mondego>    	}<newline46mondego>    	frame.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    public void updateGame() {<newline46mondego>    	// update game logic here<newline46mondego>    }<newline46mondego><newline46mondego>    public void renderGame(Graphics2D g) {<newline46mondego>    	g.setColor(Color.BLACK);<newline46mondego>    	g.fillRect(0, 0, width, height);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(final String args[]) {<newline46mondego>    	new Test();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5467splitHere46","1963956splitHere46","public String removeAccents(String text) {<newline46mondego>    return NNormalizer.normalize(text, Normalizer.Form.NFD)<newline46mondego>                     .replaceAll(<doubleQuotes46>\\p{InCombiningDiacriticalMarks}+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5468splitHere46","1964006splitHere46","// Example1.java<newline46mondego>public class Example1 {<newline46mondego>  public static void example1() {<newline46mondego>    System.out.println(<doubleQuotes46>Example1<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// Example2.java<newline46mondego>import static Example1.*; // THIS IMPORT FAILS<newline46mondego>public class Example2 {<newline46mondego>  public static void main(String... args) {<newline46mondego>    example1();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5469splitHere46","1964093splitHere46","GUIEvent"
"5470splitHere46","1964093splitHere46","delegateEvent(EventListener el)<newline46mondego>"
"5471splitHere46","1964093splitHere46","EventListener"
"5472splitHere46","1964093splitHere46","GUIEvent"
"5473splitHere46","1964093splitHere46","EventListener"
"5474splitHere46","1964093splitHere46","switch"
"5475splitHere46","1964093splitHere46","EventReceiver"
"5476splitHere46","1964093splitHere46","GUIEvent"
"5477splitHere46","1964093splitHere46","delegateEvent(EventReceiver er)<newline46mondego>"
"5478splitHere46","1964093splitHere46","EventReceiver"
"5479splitHere46","1964093splitHere46","GUIEvent"
"5480splitHere46","1964698splitHere46","-b"
"5481splitHere46","1964698splitHere46","jboss.bind.address"
"5482splitHere46","1964698splitHere46","java.rmi.server.hostname"
"5483splitHere46","1964698splitHere46","strace"
"5484splitHere46","1964701splitHere46","tx:jta-transaction-manager"
"5485splitHere46","1964701splitHere46","<tx:jta-transaction-manager>"
"5486splitHere46","1964701splitHere46","transactionManager"
"5487splitHere46","1964701splitHere46","tx:jta-transaction-manager"
"5488splitHere46","1964720splitHere46","em_child.setAttribute(<doubleQuotes46>id<doubleQuotes46>, serverId+<doubleQuotes46>.<doubleQuotes46>+clientId);"
"5489splitHere46","1964840splitHere46","invoke"
"5490splitHere46","1964840splitHere46","checkEvents.invoke(g, p, gm)<newline46mondego>"
"5491splitHere46","1964840splitHere46","static"
"5492splitHere46","1964840splitHere46","null"
"5493splitHere46","1964840splitHere46","g"
"5494splitHere46","1964910splitHere46","Intent intent = new Intent(Intent.ACTION_VIEW); <newline46mondego>intent.setData(Uri.parse(<doubleQuotes46>market://search?q=pname:MyApp<doubleQuotes46>)); <newline46mondego>startActivity(intent);<newline46mondego>"
"5495splitHere46","1965061splitHere46","<arg>"
"5496splitHere46","1965061splitHere46","<java>"
"5497splitHere46","1965061splitHere46","<target name=<doubleQuotes46>run<doubleQuotes46>><newline46mondego>    <java jar=<doubleQuotes46>build/jar/ShoutGen.jar<doubleQuotes46> fork=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <arg line=<doubleQuotes46>/home/munderwo/workspace/ShoutGen-Java/ShoutGen.conf<doubleQuotes46>/><newline46mondego>    </java><newline46mondego></target><newline46mondego>"
"5498splitHere46","1965061splitHere46","<arg>"
"5499splitHere46","1965061splitHere46","<java>"
"5500splitHere46","1965061splitHere46","java"
"5501splitHere46","1965214splitHere46","extends"
"5502splitHere46","1965214splitHere46",":"
"5503splitHere46","1965214splitHere46","foreach"
"5504splitHere46","1965344splitHere46","class Planet {  <newline46mondego>  public: <newline46mondego>    // Enum value DECLARATIONS - they are defined later <newline46mondego>    static const Planet MERCURY;  <newline46mondego>    static const Planet VENUS;  <newline46mondego>    // ... <newline46mondego><newline46mondego>  private: <newline46mondego>    double mass;   // in kilograms  <newline46mondego>    double radius; // in meters  <newline46mondego><newline46mondego>  private: <newline46mondego>    Planet(double mass, double radius) {  <newline46mondego>        this->mass = mass;  <newline46mondego>        this->radius = radius;  <newline46mondego>    } <newline46mondego><newline46mondego>  public: <newline46mondego>    // Properties and methods go here <newline46mondego>}; <newline46mondego><newline46mondego>// Enum value DEFINITIONS <newline46mondego>// The initialization occurs in the scope of the class,  <newline46mondego>// so the private Planet constructor can be used. <newline46mondego>const Planet Planet::MERCURY = Planet(3.303e+23, 2.4397e6);  <newline46mondego>const Planet Planet::VENUS = Planet(4.869e+24, 6.0518e6);  <newline46mondego>// ... <newline46mondego>"
"5505splitHere46","1965344splitHere46","double gravityOnMercury = Planet::MERCURY.SurfaceGravity();<newline46mondego>"
"5506splitHere46","1965576splitHere46","log4j.properties"
"5507splitHere46","1965576splitHere46","JpaTransactionManager"
"5508splitHere46","1965576splitHere46","log4j.logger.org.springframework.orm.jpa=INFO<newline46mondego>"
"5509splitHere46","1965576splitHere46","log4j.logger.org.springframework.transaction=INFO<newline46mondego>"
"5510splitHere46","1965576splitHere46","INFO"
"5511splitHere46","1965576splitHere46","DEBUG"
"5512splitHere46","1965614splitHere46","<PARAM NAME=<doubleQuotes46>archive<doubleQuotes46> VALUE='applet.jar, external1.jar, external2.jar'>"
"5513splitHere46","1965614splitHere46","Class-Path"
"5514splitHere46","1965614splitHere46","MANIFEST.MF"
"5515splitHere46","1965614splitHere46","Main-Class"
"5516splitHere46","1965614splitHere46","MANIFEST.MF"
"5517splitHere46","1965734splitHere46","RESOURCE_LOCAL"
"5518splitHere46","1965734splitHere46","EntityManager"
"5519splitHere46","1965734splitHere46","SessionFactory"
"5520splitHere46","1965734splitHere46","HibernateTransactionManager"
"5521splitHere46","1965734splitHere46","JtaTransactionManager"
"5522splitHere46","1965734splitHere46","SessionFactory"
"5523splitHere46","1965763splitHere46","Graphics g1;<newline46mondego>    a.paint(g1);<newline46mondego>"
"5524splitHere46","1965763splitHere46","Graphics g1 = null;<newline46mondego>    a.paint(g1);<newline46mondego>"
"5525splitHere46","1965763splitHere46","anim1 a=new anim1();<newline46mondego>    Graphics g1 = anim1.getGraphics();<newline46mondego>    a.paint(g1);<newline46mondego>"
"5526splitHere46","1965763splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>import java.applet.*;<newline46mondego><newline46mondego>public class So1 extends Applet{<newline46mondego><newline46mondego>    public void paint (Graphics g)<newline46mondego>    {<newline46mondego>        g.drawString(<doubleQuotes46>hello<doubleQuotes46>,40,30);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String ad[])<newline46mondego>    {<newline46mondego><newline46mondego>        JFrame jp1 = new JFrame();<newline46mondego>        So1 a=new So1 ();<newline46mondego>        jp1.getContentPane().add(a, BorderLayout.CENTER);<newline46mondego>        jp1.setSize(new Dimension(500,500));<newline46mondego>        jp1.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5527splitHere46","1965957splitHere46","Alpha al = head.getAlpha();<newline46mondego><newline46mondego>  if (al.finished())<newline46mondego>  {<newline46mondego>//code <newline46mondego>  }<newline46mondego>"
"5528splitHere46","1966307splitHere46","UIManager"
"5529splitHere46","1966307splitHere46","import java.awt.FlowLayout;<newline46mondego>import java.awt.Font;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>public class LabelFont {<newline46mondego><newline46mondego>   public static void main(String[] args) {<newline46mondego>      Font oldLabelFont = UIManager.getFont(<doubleQuotes46>Label.font<doubleQuotes46>);<newline46mondego>      UIManager.put(<doubleQuotes46>Label.font<doubleQuotes46>, oldLabelFont.deriveFont(Font.PLAIN));<newline46mondego><newline46mondego>      JFrame f = new JFrame(<doubleQuotes46>LabelFont Test<doubleQuotes46>);<newline46mondego>      f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>      f.getContentPane().setLayout(new FlowLayout());<newline46mondego><newline46mondego>      JLabel df = new JLabel(<doubleQuotes46>Default JLabel font<doubleQuotes46>);<newline46mondego>      f.getContentPane().add(df);<newline46mondego><newline46mondego>      JLabel ef = new JLabel(<doubleQuotes46>Font explicitly set<doubleQuotes46>);<newline46mondego>      ef.setFont(oldLabelFont);<newline46mondego>      f.getContentPane().add(ef);<newline46mondego><newline46mondego>      f.pack();<newline46mondego>      f.setVisible(true);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5530splitHere46","1966403splitHere46","People"
"5531splitHere46","1966403splitHere46","Person"
"5532splitHere46","1966403splitHere46","Pet"
"5533splitHere46","1966403splitHere46","People"
"5534splitHere46","1966403splitHere46","Pets"
"5535splitHere46","1966403splitHere46","neuter"
"5536splitHere46","1966403splitHere46","changePetNames(Person person, Pets[] pets, String[] names) {<newline46mondego>    synchronized(person) {<newline46mondego>        // make updates<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>neuter(Pets[] pets) {<newline46mondego>    for (Pets pet: pets) {<newline46mondego>        // make sure pets owner exists<newline46mondego>        synchronized(pet.getOwner()) {<newline46mondego>            // make updates<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5537splitHere46","1966403splitHere46","changePetNames(Person person, Pets[] pets, String[] names) {<newline46mondego>    // sort Person ID's<newline46mondego>    // get Person lock in ID sequence<newline46mondego>    // sort Pet ID's<newline46mondego>    // get Pet locks in ID sequence<newline46mondego>    // make updates<newline46mondego>    // release locks<newline46mondego>}<newline46mondego>"
"5538splitHere46","1966710splitHere46","Graphics2D g;                    // Assume this is already initialized<newline46mondego>g.drawLine(100, 100, 200, 200);  // Draw in the default coordinate system<newline46mondego>g.translate(100.0, 100.0);       // Move the origin down and to the right<newline46mondego>g.drawLine(0, 0, 100, 100);      // Draw the same line relative to new origin<newline46mondego>"
"5539splitHere46","1966724splitHere46","CronTrigger"
"5540splitHere46","1966724splitHere46","nextFireTime"
"5541splitHere46","1966724splitHere46","nextFireTime"
"5542splitHere46","1966724splitHere46","nextFireTime"
"5543splitHere46","1966724splitHere46","nextFireTime"
"5544splitHere46","1966724splitHere46","updateAfterMisfire()"
"5545splitHere46","1966724splitHere46","nextFireTime"
"5546splitHere46","1966724splitHere46","nextFireTime"
"5547splitHere46","1966724splitHere46","CronTrigger"
"5548splitHere46","1966724splitHere46","public class PauseAwareCronTrigger extends CronTrigger {<newline46mondego>    // constructors you need go here<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Date getNextFireTime() {<newline46mondego>        Date nextFireTime = super.getNextFireTime();<newline46mondego>        if (nextFireTime.getTime() < System.currentTimeMillis()) {<newline46mondego>            // next fire time after now<newline46mondego>            nextFireTime = super.getFireTimeAfter(null);<newline46mondego>            super.setNextFireTime(nextFireTime);<newline46mondego>        }<newline46mondego>        return nextFireTime;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5549splitHere46","1966870splitHere46","List ll = new LinkedList();<newline46mondego>ResultSet rs = stmt.executeQuery(<doubleQuotes46>SELECT userid, username FROM USER<doubleQuotes46>);<newline46mondego><newline46mondego>// Fetch each row from the result set<newline46mondego>while (rs.next()) {<newline46mondego>  int i = rs.getInt(<doubleQuotes46>userid<doubleQuotes46>);<newline46mondego>  String str = rs.getString(<doubleQuotes46>username<doubleQuotes46>);<newline46mondego><newline46mondego>  //Assuming you have a user object<newline46mondego>  User user = new User(i, str);<newline46mondego><newline46mondego>  ll.add(user);<newline46mondego>}<newline46mondego>"
"5550splitHere46","1966957splitHere46","@OneToMany(mappedBy=<doubleQuotes46>user<doubleQuotes46>) <newline46mondego>private Collection<Course> courses; <newline46mondego>"
"5551splitHere46","1967029splitHere46","String"
"5552splitHere46","1967029splitHere46","intern()"
"5553splitHere46","1967029splitHere46","public Locale(String language, String country, String variant) {<newline46mondego>    this.language = convertOldISOCodes(language);<newline46mondego>    this.country = toUpperCase(country).intern();<newline46mondego>    this.variant = variant.intern();<newline46mondego>}<newline46mondego>"
"5554splitHere46","1967029splitHere46","private String convertOldISOCodes(String language) { <newline46mondego>    // we accept both the old and the new ISO codes for the languages whose ISO <newline46mondego>    // codes have changed, but we always store the OLD code, for backward compatibility <newline46mondego>    language = toLowerCase(language).intern(); <newline46mondego>"
"5555splitHere46","1967366splitHere46","Usage: java [-options] class [args...]<newline46mondego>           (to execute a class)<newline46mondego>   or  java [-options] -jar jarfile [args...]<newline46mondego>           (to execute a jar file)<newline46mondego><newline46mondego>where options include:<newline46mondego>    -client       to select the <doubleQuotes46>client<doubleQuotes46> VM<newline46mondego>    -server       to select the <doubleQuotes46>server<doubleQuotes46> VM<newline46mondego>    -hotspot      is a synonym for the <doubleQuotes46>client<doubleQuotes46> VM  [deprecated]<newline46mondego>                  The default VM is client.<newline46mondego><newline46mondego>    -cp <class search path of directories and zip/jar files><newline46mondego>    -classpath <class search path of directories and zip/jar files><newline46mondego>                  A ; separated list of directories, JAR archives,<newline46mondego>                  and ZIP archives to search for class files.<newline46mondego>"
"5556splitHere46","1967366splitHere46","java -cp bin myClass<newline46mondego>"
"5557splitHere46","1967366splitHere46","java -cp bin demo.rmi.librarymanager.server.LibraryManagerServer<newline46mondego>"
"5558splitHere46","1967366splitHere46","bin"
"5559splitHere46","1967366splitHere46","classes"
"5560splitHere46","1967366splitHere46","target/classes"
"5561splitHere46","1967600splitHere46","public class MyObject {<newline46mondego>  private String text;<newline46mondego>  private int[11] numbers = new int[11];<newline46mondego><newline46mondego>  public String getText() { return text; }<newline46mondego>  public void setText(String text) { this.text = text; }<newline46mondego>  public int getNumber(int index) { return numbers[index]; }<newline46mondego>  public void setNumber(int index, int value) { numbers[index] = value; }<newline46mondego>}<newline46mondego>"
"5562splitHere46","1967600splitHere46","MyObject ob = new MyObject();<newline46mondego>ob.setText(<doubleQuotes46>Hello world<doubleQuotes46>);<newline46mondego>ob.setNumber(7, 123);<newline46mondego>ob.setNumber(3, 456);<newline46mondego>System.out.println(<doubleQuotes46>Text is <doubleQuotes46> + ob.getText() + <doubleQuotes46> and number 3 is <doubleQuotes46> + ob.getNumber(3));<newline46mondego>"
"5563splitHere46","1967658splitHere46","java.lang.reflect.Proxy"
"5564splitHere46","1967658splitHere46","this"
"5565splitHere46","1967947splitHere46","/xDiagram/children/properties/properties<newline46mondego>"
"5566splitHere46","1968078splitHere46","// populate map with data mapping key+name to price<newline46mondego>Map map = new HashMap();<newline46mondego>MultiKey multiKey = new MultiKey(key, name);<newline46mondego>map.put(multiKey, price);<newline46mondego><newline46mondego>// later retireve the price<newline46mondego>MultiKey multiKey = new MultiKey(key, name);<newline46mondego><Number> price = (String) map.get(price);<newline46mondego>"
"5567splitHere46","1968105splitHere46","ArrayList<MyNode> myNodeList = new ArrayList<MyNode>(this.getVertices());<newline46mondego>"
"5568splitHere46","1968105splitHere46","public V getNode(int nodeId){<newline46mondego>        ArrayList<V> myNodeList = new ArrayList<V>(this.getVertices());<newline46mondego>        return myNodeList(nodeId);<newline46mondego>}<newline46mondego>"
"5569splitHere46","1968446splitHere46","ssh -L 1234:localhost:3306 mysql.server.remote<newline46mondego>"
"5570splitHere46","1968446splitHere46","PortForwardingL.java"
"5571splitHere46","1968446splitHere46","jdbc:mysql://localhost:1234/[database]"
"5572splitHere46","1968533splitHere46","/**<newline46mondego>* Imports the given path into the workspace as a project. Returns true if the<newline46mondego>* operation succeeded, false if it failed to import due to an overlap.<newline46mondego>*<newline46mondego>* @param projectPath<newline46mondego>* @return<newline46mondego>* @throws CoreException if operation fails catastrophically<newline46mondego>*/<newline46mondego>private boolean importExisitingProject(IPath projectPath) throws CoreException {<newline46mondego>    // Load the project description file<newline46mondego>    final IProjectDescription description = workspace.loadProjectDescription(<newline46mondego>    projectPath.append(IPath.SEPARATOR + IProjectDescription.DESCRIPTION_FILE_NAME));<newline46mondego>    final IProject project = workspace.getRoot().getProject(description.getName());<newline46mondego><newline46mondego>    // Only import the project if it doesn't appear to already exist. If it looks like it<newline46mondego>    // exists, tell the user about it.<newline46mondego>    if (project.exists()) {<newline46mondego>        System.err.println(SKTBuildPlugin.getFormattedMessage(<newline46mondego>        <doubleQuotes46>Build.commandLine.projectExists<doubleQuotes46>,  //$NON-NLS-1$<newline46mondego>        project.getName()));<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    IWorkspaceRunnable runnable = new IWorkspaceRunnable() {<newline46mondego>        public void run(IProgressMonitor monitor) throws CoreException {<newline46mondego>            project.create(description, monitor);<newline46mondego>            project.open(IResource.NONE, monitor);<newline46mondego>        }<newline46mondego>    };<newline46mondego>    workspace.run(runnable,<newline46mondego>    workspace.getRuleFactory().modifyRule(workspace.getRoot()),<newline46mondego>    IResource.NONE, null);<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"5573splitHere46","1968533splitHere46","org.eclipse.ui.internal.wizards.datatransfer.WizardProjectsImportPage.java"
"5574splitHere46","1968594splitHere46","request.getParameterValues(<doubleQuotes46>op<doubleQuotes46>)"
"5575splitHere46","1968594splitHere46","<input type=<doubleQuotes46>hidden<doubleQuotes46> value=<doubleQuotes46>..<doubleQuotes46> />"
"5576splitHere46","1968868splitHere46","public class MyImage {    // or SubImage?<newline46mondego>    private Image image;<newline46mondego>    private int x;<newline46mondego>    private int y;<newline46mondego><newline46mondego>    public MyImage(Image image, int x, int y) {<newline46mondego>        this.image = image;<newline46mondego>        this.x = x;<newline46mondego>        this.y = y;<newline46mondego>    }<newline46mondego><newline46mondego>    public void paint(Graphics g, ImageObserver obs) {<newline46mondego>        g.drawImage(image, x, y, obs);<newline46mondego>    }<newline46mondego><newline46mondego>    // getters and setters<newline46mondego>} <newline46mondego>"
"5577splitHere46","1968868splitHere46","public class ImagePanel extends JPanel {<newline46mondego><newline46mondego>    private Image img;<newline46mondego>    private final List<MyImage> images = new ArrayList<MyImage>();<newline46mondego><newline46mondego>    // setImage methods<newline46mondego><newline46mondego>    public void addMyImage(MyImage image) {<newline46mondego>        images.add(image);<newline46mondego>    }<newline46mondego>    // or/and<newline46mondego>    public void addMyImage(Image image, int x, int y) {<newline46mondego>        images.add(new MyImage(image, x, y));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        g.drawImage(img, 0, 0, this);    // check if img is null?<newline46mondego>        for (MyImage image : images) {<newline46mondego>            image.paint(g, this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5578splitHere46","1969077splitHere46","System.load()"
"5579splitHere46","1969077splitHere46","com.wapmx.nativeutils.jniloader.NativeLoader.loadLibrary(libname)"
"5580splitHere46","1969077splitHere46","NativeLoader"
"5581splitHere46","1969077splitHere46","public class Sqrt {<newline46mondego>    static {<newline46mondego>        try {<newline46mondego>            NativeLoader.loadLibrary(<doubleQuotes46>sqrt<doubleQuotes46>);<newline46mondego>        } catch (Throwable e) {<newline46mondego>            e.printStackTrace();<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    /* ... class body ... */<newline46mondego>}<newline46mondego>"
"5582splitHere46","1969077splitHere46","mvn install:install-file"
"5583splitHere46","1969077splitHere46","mvn deploy:deploy-file"
"5584splitHere46","1969077splitHere46","<project><newline46mondego>  ...<newline46mondego>  <dependencies> <newline46mondego>    <dependency><newline46mondego>      <groupId>net.java.dev.jogl</groupId><newline46mondego>      <artifactId>jogl</artifactId><newline46mondego>      <version>2.0-beta10</version><newline46mondego>    </dependency><newline46mondego>    ...<newline46mondego>  </dependencies><newline46mondego>  ...<newline46mondego>  <profiles><newline46mondego>    <profile><newline46mondego>      <id>linux-i586</id><newline46mondego>      <activation><newline46mondego>        <os><newline46mondego>          <arch>i386</arch><newline46mondego>          <family>unix</family><newline46mondego>          <name>linux</name><newline46mondego>        </os><newline46mondego>      </activation><newline46mondego>      <dependencies><newline46mondego>        <dependency><newline46mondego>          <groupId>net.java.dev.jogl.jogl-linux-i586</groupId><newline46mondego>          <artifactId>jogl-linux-i586</artifactId><newline46mondego>          <version>2.0-beta10</version><newline46mondego>        </dependency><newline46mondego>      </dependencies><newline46mondego>    </profile><newline46mondego>    ...<newline46mondego>  </profiles><newline46mondego>  ...<newline46mondego></project><newline46mondego>"
"5585splitHere46","1969077splitHere46","<project><newline46mondego>  <repositories><newline46mondego>    <repository><newline46mondego>      <id>opensource.mxtelecom.com</id><newline46mondego>      <url>http://opensource.mxtelecom.com/maven/repo</url><newline46mondego>    </repository><newline46mondego>    ...<newline46mondego>  <repositories><newline46mondego>  ...<newline46mondego>  <dependencies> <newline46mondego>    <dependency><newline46mondego>      <groupId>com.wapmx.native</groupId><newline46mondego>      <artifactId>mx-native-loader</artifactId><newline46mondego>      <version>1.2</version><newline46mondego>    </dependency><newline46mondego>    ...<newline46mondego>  </dependencies><newline46mondego>  ...<newline46mondego></project><newline46mondego>"
"5586splitHere46","1969168splitHere46","System"
"5587splitHere46","1969168splitHere46","out"
"5588splitHere46","1969168splitHere46","println()"
"5589splitHere46","1969168splitHere46","PrintStream"
"5590splitHere46","1969168splitHere46","String s = <doubleQuotes46>Long String <doubleQuotes46>.toUpperCase().substring(4).trim()<newline46mondego>"
"5591splitHere46","1969194splitHere46","EntityManager"
"5592splitHere46","1969225splitHere46","GameMaster#canTakeDump()"
"5593splitHere46","1969225splitHere46","true"
"5594splitHere46","1969225splitHere46","if"
"5595splitHere46","1969315splitHere46","keyCode"
"5596splitHere46","1969315splitHere46","protected void keyPressed(int keyCode)<newline46mondego>{<newline46mondego>    //try catch  getGameAction as can legally throw an exception<newline46mondego>    int gameAction = getGameAction(keyCode);<newline46mondego><newline46mondego>    switch(gameAction)<newline46mondego>    {<newline46mondego>        case UP:<newline46mondego>            break;<newline46mondego>        case DOWN:<newline46mondego>            break;<newline46mondego>        case LEFT:<newline46mondego>            break;<newline46mondego>    }<newline46mondego><newline46mondego>    switch(keyCode)<newline46mondego>    {<newline46mondego>        case KEY_NUM1:<newline46mondego>            break;<newline46mondego>        case KEY_NUM2:<newline46mondego>            break;<newline46mondego>        case KEY_NUM3;<newline46mondego>            break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5597splitHere46","1969323splitHere46","<%<newline46mondego>  ResultBean resultBean = (ResultBean) pageContext.getAttribute(<doubleQuotes46>resultBean<doubleQuotes46>);<newline46mondego>  out.write( StringUtils.mask( resultBean.getCardNum() ) );<newline46mondego>%><newline46mondego>"
"5598splitHere46","1969323splitHere46","${resultBean.maskedCardNum}"
"5599splitHere46","1969327splitHere46","Query q = session.createQuery(<newline46mondego>    <doubleQuotes46>SELECT s from Student s WHERE s.appUser.firstName=:firstName AND s.appUser.lastName=:lastName<doubleQuotes46>);<newline46mondego>q.setParameter(<doubleQuotes46>firstName<doubleQuotes46>, <doubleQuotes46>John<doubleQuotes46>);<newline46mondego>q.setParameter(<doubleQuotes46>lastName<doubleQuotes46>, <doubleQuotes46>Doe<doubleQuotes46>);<newline46mondego>"
"5600splitHere46","1969514splitHere46","Map<String, List<String>> data = new HashMap<String, List<String>>();<newline46mondego><newline46mondego>void addValue(String key, String value) {<newline46mondego>  if (!data.contains(key)) {<newline46mondego>    data.put(key, new LinkedList());<newline46mondego>  }<newline46mondego>  data.get(key).add(value);<newline46mondego>}<newline46mondego>"
"5601splitHere46","1969514splitHere46","LinkedList"
"5602splitHere46","1969651splitHere46","Date"
"5603splitHere46","1969651splitHere46","null"
"5604splitHere46","1969651splitHere46","Calendar"
"5605splitHere46","1969651splitHere46","Date"
"5606splitHere46","1969651splitHere46","DateTime"
"5607splitHere46","1969651splitHere46","java.sql.Date"
"5608splitHere46","1969651splitHere46","TimeZone"
"5609splitHere46","1969651splitHere46","Date"
"5610splitHere46","1969790splitHere46","/WEB-INF"
"5611splitHere46","1969790splitHere46","Servlet"
"5612splitHere46","1969790splitHere46","ServletContext#getResource()"
"5613splitHere46","1969790splitHere46","#getRealPath()"
"5614splitHere46","1969790splitHere46","File#createTempFile()"
"5615splitHere46","1969790splitHere46","System.getProperty(<doubleQuotes46>java.io.tmpdir<doubleQuotes46>)"
"5616splitHere46","1969853splitHere46","Owner"
"5617splitHere46","1969853splitHere46","cascade-delete"
"5618splitHere46","1969853splitHere46","Dependent"
