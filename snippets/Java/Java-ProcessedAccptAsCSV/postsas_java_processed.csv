"1splitHere46","4308085splitHere46","msg.setRecipients()"
"2splitHere46","4308318splitHere46","BufferedInputStream origin = null;<newline46mondego>     FileOutputStream dest = new <newline46mondego>       FileOutputStream(<doubleQuotes46>c:\\zip\\myfigs.zip<doubleQuotes46>);<newline46mondego>     ZipOutputStream out = new ZipOutputStream(new <newline46mondego>       BufferedOutputStream(dest));<newline46mondego>     //out.setMethod(ZipOutputStream.DEFLATED);<newline46mondego>     byte data[] = new byte[BUFFER];<newline46mondego>     // get a list of files from current directory<newline46mondego>     File f = new File(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>     String files[] = f.list();<newline46mondego><newline46mondego>     for (int i=0; i<files.length; i++) {<newline46mondego>        System.out.println(<doubleQuotes46>Adding: <doubleQuotes46>+files[i]);<newline46mondego>        FileInputStream fi = new <newline46mondego>          FileInputStream(files[i]);<newline46mondego>        origin = new <newline46mondego>          BufferedInputStream(fi, BUFFER);<newline46mondego>        ZipEntry entry = new ZipEntry(files[i]);<newline46mondego>        out.putNextEntry(entry);<newline46mondego>        int count;<newline46mondego>        while((count = origin.read(data, 0, <newline46mondego>          BUFFER)) != -1) {<newline46mondego>           out.write(data, 0, count);<newline46mondego>        }<newline46mondego>        origin.close();<newline46mondego>     }<newline46mondego>     out.close();<newline46mondego>"
"3splitHere46","4308335splitHere46","java.lang.Object"
"4splitHere46","4308414splitHere46","startup.bat"
"5splitHere46","4308414splitHere46","startup.bat"
"6splitHere46","4308414splitHere46","set JAVA_OPTS=-Xms512m -Xmx512m<newline46mondego>"
"7splitHere46","4308449splitHere46","for"
"8splitHere46","4308449splitHere46","for (Object o : list)"
"9splitHere46","4308449splitHere46","for index, val in enumerate(someList):<newline46mondego>    # ....<newline46mondego>"
"10splitHere46","4308675splitHere46","JPanel displayPanel = new JPanel();<newline46mondego>    // JPanel displayPanel = new JPanel( new GridLayout( 4, 2 ) );<newline46mondego>    // JPanel displayPanel = new JPanel( new BorderLayout() );<newline46mondego>    // JPanel displayPanel = new JPanel( new GridBagLayout() );<newline46mondego><newline46mondego>    JTextField titleText = new JTextField( <doubleQuotes46>title<doubleQuotes46> );<newline46mondego><newline46mondego>    titleText.setPreferredSize( new Dimension( 200, 24 ) );<newline46mondego><newline46mondego>    // For FlowLayout and GridLayout, uncomment:<newline46mondego>    displayPanel.add( titleText );<newline46mondego><newline46mondego>    // For BorderLayout, uncomment:<newline46mondego>    // displayPanel.add( titleText, BorderLayout.NORTH );<newline46mondego><newline46mondego>    // For GridBagLayout, uncomment:<newline46mondego>    // displayPanel.add( titleText, new GridBagConstraints( 0, 0, 1, 1, 1.0,<newline46mondego>    // 1.0, GridBagConstraints.CENTER, GridBagConstraints.NONE,<newline46mondego>    // new Insets( 0, 0, 0, 0 ), 0, 0 ) );<newline46mondego>"
"11splitHere46","4308757splitHere46","class Node { ... }<newline46mondego><newline46mondego>class StringLiteral extends Node {<newline46mondego>  public String getValue() { ... }<newline46mondego>}<newline46mondego><newline46mondego>class Term extends Node {<newline46mondego>  public String getName() { ... }<newline46mondego>  public int getArity() { ... }<newline46mondego>  public Node getArgument(int index) { ... }<newline46mondego>}<newline46mondego>"
"12splitHere46","4308942splitHere46","listOfPrimeNumbers"
"13splitHere46","4308942splitHere46","Primes"
"14splitHere46","4308942splitHere46","listOfPrimeNumbers"
"15splitHere46","4308942splitHere46","print"
"16splitHere46","4308942splitHere46","Primes"
"17splitHere46","4308942splitHere46","listOfPrimeNumbers"
"18splitHere46","4308942splitHere46","listOfPrimeNumbers"
"19splitHere46","4308942splitHere46","print"
"20splitHere46","4309162splitHere46","BufferedOutputStream"
"21splitHere46","4309162splitHere46","ObjectOutputStream"
"22splitHere46","4309162splitHere46","BufferedOutputStream"
"23splitHere46","4309162splitHere46","BufferedOutputStream"
"24splitHere46","4309162splitHere46","flush()"
"25splitHere46","4309162splitHere46","flush()"
"26splitHere46","4309162splitHere46","ObjectOutputStream"
"27splitHere46","4309162splitHere46","flush()"
"28splitHere46","4309162splitHere46","BufferedOutputStream"
"29splitHere46","4309162splitHere46","BufferedOuputStream"
"30splitHere46","4309250splitHere46","Car car = new MazdaRX8();        <newline46mondego>FordGalaxy galaxy = car.<FordGalaxy>getCar();<newline46mondego>"
"31splitHere46","4309250splitHere46","MazdaRX8"
"32splitHere46","4309250splitHere46","Car<MazdaRX8>"
"33splitHere46","4309250splitHere46","interface Car<T extends Car> {<newline46mondego>    T getCar();<newline46mondego>}<newline46mondego><newline46mondego>class MazdaRX8 implements Car<MazdaRX8 > {<newline46mondego>    public MazdaRX8 getCar() {<newline46mondego>        return this;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"34splitHere46","4309432splitHere46","Class"
"35splitHere46","4309432splitHere46","Main"
"36splitHere46","4309432splitHere46","package"
"37splitHere46","4309432splitHere46","javaapplication1"
"38splitHere46","4309432splitHere46",".java"
"39splitHere46","4309432splitHere46","HelloWorldApp.java"
"40splitHere46","4309432splitHere46","default"
"41splitHere46","4309432splitHere46","Main.java"
"42splitHere46","4309432splitHere46","package"
"43splitHere46","4309432splitHere46","javaaplication1"
"44splitHere46","4309666splitHere46","System.out.println(<doubleQuotes46>symbol for greater or equal then is \u2265<doubleQuotes46>);<newline46mondego>"
"45splitHere46","4309666splitHere46","'â‰¥'.charCodeAt(0).toString(16)<newline46mondego>"
"46splitHere46","4309666splitHere46","\u"
"47splitHere46","4309693splitHere46","binding"
"48splitHere46","4309693splitHere46","UIComponent"
"49splitHere46","4309693splitHere46","Date"
"50splitHere46","4309693splitHere46","c:forEach"
"51splitHere46","4309693splitHere46","<rich:calendar value=<doubleQuotes46>#{oc.overtimeDate}<doubleQuotes46> <newline46mondego>    requiredMessage=<doubleQuotes46>Date 1 is required.<doubleQuotes46><newline46mondego>    id=<doubleQuotes46>#{oc.overtimeDateId}<doubleQuotes46> <newline46mondego>    binding=<doubleQuotes46>#{calendarComponent}<doubleQuotes46> <newline46mondego>    required=<doubleQuotes46>#{oc.id == 1 ? true : false}<doubleQuotes46>><newline46mondego></rich:calendar><newline46mondego><h:inputText value=<doubleQuotes46>#{oc.overtimeHours}<doubleQuotes46> <newline46mondego>    id=<doubleQuotes46>#{oc.overtimeHoursId}<doubleQuotes46><newline46mondego>    requiredMessage=<doubleQuotes46>Hours is required.<doubleQuotes46> <newline46mondego>    required=<doubleQuotes46>#{not empty calendarComponent.value}<doubleQuotes46> ><newline46mondego></h:inputText><newline46mondego>"
"52splitHere46","4309693splitHere46","#{calendarComponent}"
"53splitHere46","4309693splitHere46","c:forEach"
"54splitHere46","4309693splitHere46","ui:repeat"
"55splitHere46","4309693splitHere46","ui:repeat"
"56splitHere46","4309693splitHere46","UIComponent"
"57splitHere46","4309693splitHere46","UIInput"
"58splitHere46","4309693splitHere46","oc"
"59splitHere46","4309693splitHere46","public class OvertimeComponent {<newline46mondego>    private UIInput calendarComponent;<newline46mondego>    // ...<newline46mondego>"
"60splitHere46","4309693splitHere46","<rich:calendar value=<doubleQuotes46>#{oc.overtimeDate}<doubleQuotes46> <newline46mondego>    requiredMessage=<doubleQuotes46>Date 1 is required.<doubleQuotes46><newline46mondego>    id=<doubleQuotes46>#{oc.overtimeDateId}<doubleQuotes46> <newline46mondego>    binding=<doubleQuotes46>#{oc.calendarComponent}<doubleQuotes46> <newline46mondego>    required=<doubleQuotes46>#{oc.id == 1}<doubleQuotes46>><newline46mondego></rich:calendar><newline46mondego><h:inputText value=<doubleQuotes46>#{oc.overtimeHours}<doubleQuotes46> <newline46mondego>    id=<doubleQuotes46>#{oc.overtimeHoursId}<doubleQuotes46><newline46mondego>    requiredMessage=<doubleQuotes46>Hours is required.<doubleQuotes46> <newline46mondego>    required=<doubleQuotes46>#{not empty oc.calendarComponent.value}<doubleQuotes46> ><newline46mondego></h:inputText><newline46mondego>"
"61splitHere46","4309693splitHere46","required"
"62splitHere46","4309693splitHere46","rich:calendar"
"63splitHere46","4309693splitHere46","boolean"
"64splitHere46","4309708splitHere46","super"
"65splitHere46","4309708splitHere46","Foo"
"66splitHere46","4309708splitHere46","@Inject public ChildClass(Foo foo, Bar bar) {<newline46mondego>  super(foo);<newline46mondego>  this.bar = bar;<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"67splitHere46","4309886splitHere46","A.class <newline46mondego>B.class<newline46mondego>"
"68splitHere46","4309886splitHere46","jar cvf AB.jar A.class B.class<newline46mondego>"
"69splitHere46","4309886splitHere46","java -classpath AB.jar A<newline46mondego>java -classpath AB.jar B<newline46mondego>"
"70splitHere46","4310028splitHere46","Comparator"
"71splitHere46","4310028splitHere46","Collections.sort(List, Comparator)"
"72splitHere46","4310028splitHere46","public class FooComparator implements Comparator<Foo> {<newline46mondego>    public int compare(Foo a, Foo b) {<newline46mondego>        int dateComparison = a.date.compareTo(b.date);<newline46mondego>        return dateComparison == 0 ? a.value.compareTo(b.value) : dateComparison;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>Collections.sort(foos, new FooComparator());<newline46mondego>"
"73splitHere46","4310051splitHere46","WEB-INF/lib"
"74splitHere46","4310061splitHere46","JPanel containerPanel = new JPanel();<newline46mondego>containerPanel.setLayout(new BoxLayout(containerPanel, BoxLayout.PAGE_AXIS));<newline46mondego>containerPanel.add(panel1);<newline46mondego>containerPanel.add(panel2);<newline46mondego>pane.add(containerPanel);<newline46mondego>"
"75splitHere46","4310131splitHere46","pw.getText().toString().equals(<doubleQuotes46>mypassword<doubleQuotes46>)<newline46mondego>"
"76splitHere46","4310383splitHere46","array2[index] = input.charAt(0);<newline46mondego>"
"77splitHere46","4310583splitHere46","private"
"78splitHere46","4310777splitHere46","<ScrollView>"
"79splitHere46","4310777splitHere46","<ScrollView><newline46mondego>    <LinearLayout><newline46mondego>    // your layout here<newline46mondego>    </LinearLayout><newline46mondego></ScrollView><newline46mondego>"
"80splitHere46","4310838splitHere46","LoanInfoSearch_dto"
"81splitHere46","4310838splitHere46","loanInfoSearch_dto"
"82splitHere46","4310838splitHere46","branchCode"
"83splitHere46","4310838splitHere46","public T getBranchCode() {<newline46mondego>   return branchCode;<newline46mondego>}<newline46mondego>"
"84splitHere46","4310838splitHere46","T"
"85splitHere46","4310838splitHere46","branchCode"
"86splitHere46","4310838splitHere46","int"
"87splitHere46","4310972splitHere46","if(obj.hasErrors() && !obj.save(flush:true)){<newline46mondego>"
"88splitHere46","4310972splitHere46","&&"
"89splitHere46","4310972splitHere46","false"
"90splitHere46","4310972splitHere46","false && true"
"91splitHere46","4310972splitHere46","false"
"92splitHere46","4310972splitHere46","obj.save(..)"
"93splitHere46","4311111splitHere46","{@inheritDoc}"
"94splitHere46","4311178splitHere46","slf4j simple"
"95splitHere46","4311178splitHere46","jar"
"96splitHere46","4311178splitHere46","slf4j"
"97splitHere46","4311178splitHere46","log4j"
"98splitHere46","4311178splitHere46","jar"
"99splitHere46","4311178splitHere46","slf4j simple"
"100splitHere46","4311178splitHere46","INFO"
"101splitHere46","4311178splitHere46","log4j"
"102splitHere46","4311303splitHere46","Dog"
"103splitHere46","4311303splitHere46","Cat"
"104splitHere46","4311303splitHere46","Animal"
"105splitHere46","4311303splitHere46","Animal"
"106splitHere46","4311303splitHere46","Animal"
"107splitHere46","4311303splitHere46","Animal"
"108splitHere46","4311303splitHere46","LinkedHashSet"
"109splitHere46","4311303splitHere46","HashSet"
"110splitHere46","4311303splitHere46","HashSet"
"111splitHere46","4311350splitHere46","Project properties -> Libraries -> Add JAR/Folder -> Browser JAR"
"112splitHere46","4311350splitHere46","Edit"
"113splitHere46","4311350splitHere46","tab"
"114splitHere46","4311350splitHere46","zip"
"115splitHere46","4311495splitHere46","for(int j=0; j<2; j++){<newline46mondego>f[0] = i;<newline46mondego>"
"116splitHere46","4311495splitHere46","for(int j=0; j<2; j++){<newline46mondego>f = new int [2];<newline46mondego>f[0] = i;<newline46mondego>"
"117splitHere46","4311495splitHere46","if(!(G.contains(f))){<newline46mondego>"
"118splitHere46","4312016splitHere46","D:<newline46mondego>"
"119splitHere46","4312016splitHere46","D:\<newline46mondego>"
"120splitHere46","4312016splitHere46","File.separator"
"121splitHere46","4312282splitHere46","java.text.SimpleDateFormat"
"122splitHere46","4312282splitHere46","yyyy-MM-dd HH:mm:ssZ"
"123splitHere46","4312282splitHere46","String dateStr = <doubleQuotes46>2010-06-14 02:21:49-0400<doubleQuotes46>;<newline46mondego>String pattern = <doubleQuotes46>yyyy-MM-dd HH:mm:ssZ<doubleQuotes46>;<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(pattern);<newline46mondego>Date date = sdf.parse(dateStr);<newline46mondego>"
"124splitHere46","4312282splitHere46","TimeZone.getDefault()"
"125splitHere46","4312282splitHere46","SimpleDateFormat sdf = new SimpleDateFormat(pattern);<newline46mondego>sdf.setTimeZone(TimeZone.getDefault());<newline46mondego>Date date = sdf.parse(dateStr);<newline46mondego>"
"126splitHere46","4312332splitHere46","@Around(<doubleQuotes46>execution(* de.foo.entity.*.set*(..)) && args(java.lang.String)<doubleQuotes46>)<newline46mondego>public void checkAroundSetter(final ProceedingJoinPoint pjp)<newline46mondego>    throws Throwable {<newline46mondego>    LOGGER.debug(pjp.getSignature().toLongString());<newline46mondego>    Object[] args = pjp.getArgs();<newline46mondego>    for (int i = 0; i < args.length; i++) {<newline46mondego>        if (args[i] instanceof String && ((String) args[i]).isEmpty()) {<newline46mondego>            args[i] = null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    pjp.proceed(args);<newline46mondego>}<newline46mondego>"
"127splitHere46","4312460splitHere46","JSR 432"
"128splitHere46","4312522splitHere46","--permitReservedWords"
"129splitHere46","4312744splitHere46","default"
"130splitHere46","4312997splitHere46","System.out.println(<doubleQuotes46>Comparing, <doubleQuotes46>+this+<doubleQuotes46> to <doubleQuotes46>+c);<newline46mondego>"
"131splitHere46","4312997splitHere46","Comparing, C9 to C1<newline46mondego>Comparing, C9 to C5<newline46mondego>Comparing, C9 to C7<newline46mondego>"
"132splitHere46","4313049splitHere46","String dateStr = <doubleQuotes46>2010-06-14 02:21:49-0400<doubleQuotes46>;<newline46mondego>SimpleDateFormat sdf =  new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ssZ<doubleQuotes46>);<newline46mondego>TimeZone tz = TimeZone.getDefault();<newline46mondego>sdf.setTimeZone(tz);<newline46mondego>Date date = sdf.parse(dateStr);<newline46mondego><newline46mondego>sdf = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss a<doubleQuotes46>);<newline46mondego>String newDateStr = sdf.format(date);<newline46mondego><newline46mondego>System.out.println(newDateStr);<newline46mondego>"
"133splitHere46","4313049splitHere46","newDateStr"
"134splitHere46","4313049splitHere46","/**<newline46mondego> * <newline46mondego> */<newline46mondego>package testcases;<newline46mondego><newline46mondego>import java.text.ParseException;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.TimeZone;<newline46mondego><newline46mondego>/**<newline46mondego> * @author The Elite Gentleman<newline46mondego> *<newline46mondego> */<newline46mondego>public class Test {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        try {<newline46mondego>            String dateStr = <doubleQuotes46>2010-06-14 02:21:49-0400<doubleQuotes46>;<newline46mondego>            SimpleDateFormat sdf =  new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ssZ<doubleQuotes46>);<newline46mondego>            TimeZone tz = TimeZone.getDefault();<newline46mondego>            sdf.setTimeZone(tz);<newline46mondego>            Date date = sdf.parse(dateStr);<newline46mondego><newline46mondego>            sdf = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss a<doubleQuotes46>);<newline46mondego>            String newDateStr = sdf.format(date);<newline46mondego><newline46mondego>            System.out.println(newDateStr);<newline46mondego>        } catch (ParseException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"135splitHere46","4313049splitHere46","2010-06-14 08:21:49 AM"
"136splitHere46","4313064splitHere46","int resourceId = Activity.getResources().getIdentifier(<doubleQuotes46>testimage<doubleQuotes46>, <doubleQuotes46>drawable<doubleQuotes46>, <doubleQuotes46>your.package.name<doubleQuotes46>);<newline46mondego>"
"137splitHere46","4313217splitHere46","org.hibernate.cfg.NamingStrategy"
"138splitHere46","4313217splitHere46","<property name=<doubleQuotes46>hibernate.ejb.naming_strategy<doubleQuotes46><newline46mondego>          value=<doubleQuotes46>com.example.MyNamingStrategy<doubleQuotes46> /><newline46mondego>"
"139splitHere46","4313331splitHere46","<error-page><newline46mondego><exception-type>javax.faces.application.ViewExpiredException</exception-type><newline46mondego><location>viewexpired.jsp</location><newline46mondego></error-page><newline46mondego>"
"140splitHere46","4313331splitHere46","<managed-bean-scope>application</managed-bean-scope>Â <newline46mondego>"
"141splitHere46","4313522splitHere46","add()"
"142splitHere46","4313522splitHere46","List<String> alist = new ArrayList<String>();<newline46mondego>alist.add(<doubleQuotes46>apple<doubleQuotes46>);<newline46mondego>alist.add(<doubleQuotes46>banana<doubleQuotes46>);<newline46mondego>alist.add(<doubleQuotes46>orange<doubleQuotes46>);<newline46mondego><newline46mondego>String value = alist.get(1); //returns the 2nd item from list, in this case <doubleQuotes46>banana<doubleQuotes46><newline46mondego>"
"143splitHere46","4313522splitHere46","0"
"144splitHere46","4313522splitHere46","N-1"
"145splitHere46","4313522splitHere46","N"
"146splitHere46","4313522splitHere46","size()"
"147splitHere46","4313548splitHere46","NullPointerException"
"148splitHere46","4313548splitHere46","null"
"149splitHere46","4313548splitHere46","null"
"150splitHere46","4313548splitHere46","null"
"151splitHere46","4313644splitHere46","cout"
"152splitHere46","4313644splitHere46","<CRLF>"
"153splitHere46","4313644splitHere46","cout"
"154splitHere46","4313695splitHere46","LatLng latLng = new OSRef(394251,806376).toLatLng();<newline46mondego>"
"155splitHere46","4313695splitHere46","LatLng latLng = new OSRef(394251,806376).toLatLng();<newline46mondego>latLng.toWGS84();<newline46mondego>"
"156splitHere46","4313695splitHere46","OsRef.toLatLng()"
"157splitHere46","4313762splitHere46","replaceAll"
"158splitHere46","4313762splitHere46","input = input.replaceAll(<doubleQuotes46>[^=,\\da-zA-Z\\s]|(?<!,)\\s<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"159splitHere46","4313762splitHere46","[^=,\\da-zA-Z\\s]|(?<!,)\\s"
"160splitHere46","4313762splitHere46","="
"161splitHere46","4313762splitHere46",","
"162splitHere46","4313762splitHere46","<doubleQuotes46><doubleQuotes46>"
"163splitHere46","4313762splitHere46",","
"164splitHere46","4313836splitHere46","java.util.Collection"
"165splitHere46","4313836splitHere46","ArrayList"
"166splitHere46","4313836splitHere46","HashSet"
"167splitHere46","4313836splitHere46","LinkedList"
"168splitHere46","4313836splitHere46","java.util.Collection"
"169splitHere46","4313836splitHere46","user=> (java.util.ArrayList. [1 2 3])<newline46mondego>#<ArrayList [1, 2, 3]><newline46mondego>user=> (.get (java.util.ArrayList. [1 2 3]) 0)<newline46mondego>1<newline46mondego>"
"170splitHere46","4313836splitHere46","java.util.Map"
"171splitHere46","4313836splitHere46","HashMap"
"172splitHere46","4313836splitHere46","java.util.Map"
"173splitHere46","4313836splitHere46","user=> (java.util.HashMap. {<doubleQuotes46>a<doubleQuotes46> 1 <doubleQuotes46>b<doubleQuotes46> 2})<newline46mondego>#<HashMap {b=2, a=1}><newline46mondego>user=> (.get (java.util.HashMap. {<doubleQuotes46>a<doubleQuotes46> 1 <doubleQuotes46>b<doubleQuotes46> 2}) <doubleQuotes46>a<doubleQuotes46>)<newline46mondego>1<newline46mondego>"
"174splitHere46","4313836splitHere46","ser=> (into [] (java.util.ArrayList. [1 2 3]))<newline46mondego>[1 2 3]<newline46mondego>user=> (into #{} (java.util.HashSet. #{1 2 3}))<newline46mondego>#{1 2 3}<newline46mondego>user=> (into '() (java.util.LinkedList. '(1 2 3)))<newline46mondego>(3 2 1)<newline46mondego>user=> (into {} (java.util.HashMap. {:a 1 :b 2}))<newline46mondego>{:b 2, :a 1}<newline46mondego>"
"175splitHere46","4314216splitHere46","xsi:schemaLocation"
"176splitHere46","4314341splitHere46","byte[] buffer = new byte[1024];<newline46mondego>StringBuffer sb = new StringBuffer();<newline46mondego>int readIn = 0;<newline46mondego>while((readIn = inputStream.read(buffer)) > 0)<newline46mondego>{<newline46mondego>     String temp = new String(buffer, 0, readIn);<newline46mondego>     sb.append(temp);  <newline46mondego>}<newline46mondego>String result = sb.toString();<newline46mondego>"
"177splitHere46","4314632splitHere46","<plugin><newline46mondego><groupId>org.apache.maven.plugins</groupId><newline46mondego><artifactId>maven-dependency-plugin</artifactId><newline46mondego><version>2.1</version><newline46mondego><executions><newline46mondego>    <execution><newline46mondego>        <id>copy-dependencies</id><newline46mondego>        <phase>package</phase><newline46mondego>        <goals><newline46mondego>            <goal>copy-dependencies</goal><newline46mondego>        </goals><newline46mondego>        <configuration><newline46mondego>            <outputDirectory>${project.build.directory}/lib</outputDirectory><newline46mondego>            <overWriteReleases>false</overWriteReleases><newline46mondego>            <overWriteSnapshots>false</overWriteSnapshots><newline46mondego>            <overWriteIfNewer>true</overWriteIfNewer><newline46mondego>            <includeScope>runtime</includeScope><newline46mondego>        </configuration><newline46mondego>    </execution><newline46mondego>    <execution><newline46mondego>        <id>copy-model</id><newline46mondego>        <phase>package</phase><newline46mondego>        <goals><newline46mondego>            <goal>copy</goal><newline46mondego>        </goals><newline46mondego>        <configuration><newline46mondego>            <artifactItems><newline46mondego>                <artifactItem><newline46mondego>                    <groupId>my.test.pkg</groupId><newline46mondego>                    <artifactId>my-model</artifactId><newline46mondego>                    <classifier>server</classifier><newline46mondego>                    <version>1.0.3</version><newline46mondego>                    <type>jar</type><newline46mondego>                </artifactItem><newline46mondego>                <artifactItem><newline46mondego>                    <groupId>my.test.pkg</groupId><newline46mondego>                    <artifactId>my-model</artifactId><newline46mondego>                    <classifier>server</classifier><newline46mondego>                    <version>1.1.0</version><newline46mondego>                    <type>jar</type><newline46mondego>                </artifactItem><newline46mondego>            </artifactItems><newline46mondego>            <outputDirectory>${project.build.directory}/lib</outputDirectory><newline46mondego>        </configuration><newline46mondego>    </execution><newline46mondego></executions><newline46mondego>"
"178splitHere46","4314632splitHere46","<fileSet><newline46mondego>        <directory>${project.build.directory}/lib</directory><newline46mondego>        <outputDirectory>/lib</outputDirectory><newline46mondego>        <filtered>false</filtered><newline46mondego>        <includes><newline46mondego>            <include>*.jar</include><newline46mondego>        </includes><newline46mondego>        <fileMode>0600</fileMode><newline46mondego>    </fileSet><newline46mondego>"
"179splitHere46","4314817splitHere46","send"
"180splitHere46","4314817splitHere46","SendFailedException"
"181splitHere46","4314817splitHere46","MessagingException"
"182splitHere46","4314898splitHere46","Log mylog = Logging.getLogger(MyClass.class);<newline46mondego>"
"183splitHere46","4314979splitHere46","rendered"
"184splitHere46","4314979splitHere46","user"
"185splitHere46","4314979splitHere46","java.io.Serializable"
"186splitHere46","4314979splitHere46","public class ProfileSelector implements Serializable {}<newline46mondego>"
"187splitHere46","4314979splitHere46","user"
"188splitHere46","4314979splitHere46","articles"
"189splitHere46","4314979splitHere46","@ManagedBean<newline46mondego>@RequestScoped<newline46mondego>public class Articles {<newline46mondego><newline46mondego>    @ManagedProperty(value=<doubleQuotes46>#{user}<doubleQuotes46>)<newline46mondego>    private UserManager user;<newline46mondego><newline46mondego>    public UserManager getUser() {<newline46mondego>        return user;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setUser(UserManager user) {<newline46mondego>        this.user = user;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"190splitHere46","4315003splitHere46","jar"
"191splitHere46","4315018splitHere46","final Timer t = new Timer(1000, new ActionListener() {<newline46mondego>    private long time = 10 * 1000; //10 seconds, for example<newline46mondego><newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        if (time >= 0) {<newline46mondego>            long s = ((time / 1000) % 60);<newline46mondego>            long m = (((time / 1000) / 60) % 60);<newline46mondego>            long h = ((((time / 1000) / 60) / 60) % 60);<newline46mondego>            timing.setText(h + <doubleQuotes46> hours, <doubleQuotes46> + m + <doubleQuotes46> minutes <doubleQuotes46> + s + <doubleQuotes46> seconds<doubleQuotes46>);<newline46mondego>            time -= 1000;<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>t.start();<newline46mondego>"
"192splitHere46","4315129splitHere46","// These go up to eleven. After that, you just get the varargs form, and<newline46mondego>// whatever warnings might come along with it. :(<newline46mondego>"
"193splitHere46","4315264splitHere46","quit"
"194splitHere46","4315264splitHere46","echo <doubleQuotes46>Some text<doubleQuotes46> | nc localhost 7500<newline46mondego>"
"195splitHere46","4315272splitHere46","Manifest-Version: 1.0<newline46mondego>Class-Path: itext.jar jxl.jar jai.jar<newline46mondego>Main-Class: com.xxx.yyy.Main<newline46mondego>"
"196splitHere46","4315278splitHere46","Scanner"
"197splitHere46","4315278splitHere46","final Scanner s = new Scanner(yourFile);<newline46mondego>while(s.hasNextLine()) {<newline46mondego>    final String line = s.nextLine();<newline46mondego>    YourClass.processLine(line);<newline46mondego>}<newline46mondego>"
"198splitHere46","4315401splitHere46","String result = String.format(<doubleQuotes46>Voter: %-10d Candidate: %-10d Booth: %-10d<doubleQuotes46>, e.voteNo, vote, boothId);<newline46mondego>System.out.println(result);<newline46mondego>"
"199splitHere46","4315401splitHere46","String.format"
"200splitHere46","4315401splitHere46","PrintStream.format"
"201splitHere46","4315401splitHere46","System.out.format(<doubleQuotes46>Voter: %-10d Candidate: %-10d Booth: %-10d<doubleQuotes46>, e.voteNo, vote, boothId);<newline46mondego>"
"202splitHere46","4315552splitHere46","ln -s /Volumes/Elements/database /etc/mysql/data"
"203splitHere46","4315553splitHere46","$ echo -e <doubleQuotes46>foo\nbar<doubleQuotes46> | java -jar Test.jar <newline46mondego>foo<newline46mondego>bar<newline46mondego>$<newline46mondego>"
"204splitHere46","4315765splitHere46","NullPointerException"
"205splitHere46","4315765splitHere46","getParameter"
"206splitHere46","4315765splitHere46","agent"
"207splitHere46","4315765splitHere46","private Agent agent;<newline46mondego>private Thread controller = new Thread() {<newline46mondego>    agent = new Agent();<newline46mondego>    // ...<newline46mondego>    agent.getParameter(); // should not throw a NullPointerException<newline46mondego>}<newline46mondego>"
"208splitHere46","4315765splitHere46","agent"
"209splitHere46","4315765splitHere46","private Agent agent;<newline46mondego>"
"210splitHere46","4315765splitHere46","run()"
"211splitHere46","4315765splitHere46","Agent agent = new Agent();<newline46mondego>"
"212splitHere46","4315765splitHere46","getParameter()"
"213splitHere46","4315765splitHere46","agent"
"214splitHere46","4315765splitHere46","run()"
"215splitHere46","4315765splitHere46","agent"
"216splitHere46","4315765splitHere46","agent"
"217splitHere46","4315765splitHere46","public void run() {<newline46mondego>       ...<newline46mondego>       // Agent agent = new Agent();<newline46mondego>       agent = new Agent(); // works fine: you are initiliazing the class member<newline46mondego>       ...<newline46mondego>       parameter = getParameter();<newline46mondego> }<newline46mondego>"
"218splitHere46","4315765splitHere46","NullPointerException"
"219splitHere46","4315765splitHere46","getParameter()"
"220splitHere46","4315765splitHere46","private Something getParameter() {<newline46mondego>    agent.someMethod(); // exception thrown here<newline46mondego>}<newline46mondego>"
"221splitHere46","4315765splitHere46","agent"
"222splitHere46","4315765splitHere46","getParameter()"
"223splitHere46","4315820splitHere46","if dstY == srcY: dy = 0<newline46mondego>else: dy = (dstY - srcY) / abs(dstY - srcY)<newline46mondego>if dstX == srcX: dx = 0<newline46mondego>else: dx = (dstX - srcX) / abs(dstX - srcX)<newline46mondego>"
"224splitHere46","4315820splitHere46","int dx, dy;<newline46mondego>if (dstY == srcY) dy = 0;<newline46mondego>else dy = (dstY - srcY) / Math.abs(dstY - srcY);<newline46mondego>if (dstX == srcX) dx = 0;<newline46mondego>else dx = (dstX - srcX) / Math.abs(dstX - srcX);<newline46mondego><newline46mondego>while (srcX != dstX || srcY != dstY) {<newline46mondego>  srcX += dx; srcY += dy;<newline46mondego>  if (isPiece(srcX, srcY))<newline46mondego>    return true;<newline46mondego>}<newline46mondego>return false;<newline46mondego>"
"225splitHere46","4315881splitHere46","tableA<newline46mondego>- id<newline46mondego>- fromCompanyId (references tableB.id)<newline46mondego>- toCompanyId (references tableB.id)<newline46mondego>- viaCompanyId (references tableB.id)<newline46mondego><newline46mondego>tableB<newline46mondego>- id<newline46mondego>- description<newline46mondego>"
"226splitHere46","4315904splitHere46","ByteArrayInputStream"
"227splitHere46","4315904splitHere46","protected"
"228splitHere46","4315939splitHere46","BuildUtils.jar"
"229splitHere46","4315939splitHere46","BuildUtils.jar"
"230splitHere46","4315939splitHere46","poi-3.6-20091214.jar"
"231splitHere46","4315951splitHere46","PDFToImage"
"232splitHere46","4315951splitHere46","org.apache.pdfbox.ExtractImages"
"233splitHere46","4316006splitHere46","net/sf/json/JSONArray.class"
"234splitHere46","4316264splitHere46","getFooFrobnicator()"
"235splitHere46","4316264splitHere46","getBarFrobnicator()"
"236splitHere46","4316264splitHere46","Frobnicator"
"237splitHere46","4316264splitHere46","FrobnicatorHolder"
"238splitHere46","4316264splitHere46","Frobnicator"
"239splitHere46","4316264splitHere46","public interface Frobnicator{<newline46mondego>   public void frobnicate();<newline46mondego>}<newline46mondego><newline46mondego>public interface FooFrobnicator{<newline46mondego>   public void doFoo();<newline46mondego>}<newline46mondego><newline46mondego>public interface BarFrobnicator{<newline46mondego>   public void doBar();<newline46mondego>}<newline46mondego>"
"240splitHere46","4316264splitHere46","if (frobnicator instanceof FooFrobnicator) { ((FooFrobnicator) frobnicator).doFoo() }"
"241splitHere46","4316283splitHere46","package example;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego><newline46mondego>@XmlRootElement(name=<doubleQuotes46>report<doubleQuotes46>,namespace=<doubleQuotes46>urn:report<doubleQuotes46>)<newline46mondego>public class Root {<newline46mondego><newline46mondego>    private String id;<newline46mondego><newline46mondego>    public String getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(String id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"242splitHere46","4316283splitHere46","<ns2:report xmlns:ns2=<doubleQuotes46>urn:report<doubleQuotes46>><newline46mondego>    <id>123</id><newline46mondego></ns2:report><newline46mondego>"
"243splitHere46","4316283splitHere46","@XmlSchema(<newline46mondego>        namespace = <doubleQuotes46>urn:report<doubleQuotes46>,<newline46mondego>        elementFormDefault = XmlNsForm.QUALIFIED)<newline46mondego>package example;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlNsForm;<newline46mondego>import javax.xml.bind.annotation.XmlSchema;<newline46mondego>"
"244splitHere46","4316283splitHere46","<report xmlns=<doubleQuotes46>urn:report<doubleQuotes46>><newline46mondego>    <id>123</id><newline46mondego></report><newline46mondego>"
"245splitHere46","4316285splitHere46","getValueAt(...)"
"246splitHere46","4316285splitHere46","@Override<newline46mondego>public Object getValueAt(int row, int column) {<newline46mondego>    DataHolder data = dataVector_.get(row);<newline46mondego>    switch(column) {<newline46mondego>        case 0: return data.month;<newline46mondego>        case 1: return data.day;<newline46mondego>        case 2: return data.year;<newline46mondego>        default: return null;<newline46mondego>    }<newline46mondego>"
"247splitHere46","4316403splitHere46","if(isFired){<newline46mondego>g2d.drawImage(imgBall, 0, 0, null);<newline46mondego>}<newline46mondego>"
"248splitHere46","4316403splitHere46","g2d.rotate(0 - dAngle, rectCannon.getX(), rectCannon.getY() + 5);<newline46mondego>"
"249splitHere46","4316403splitHere46","Graphics2D"
"250splitHere46","4316516splitHere46","StringEscapeUtils.unescapeHtml(<doubleQuotes46>&pound;679.00<doubleQuotes46>);<newline46mondego>"
"251splitHere46","4316516splitHere46","Â£679.00"
"252splitHere46","4316661splitHere46","BigInteger bigInt = new BigInteger(hexString, 16);<newline46mondego>"
"253splitHere46","4316661splitHere46","import java.math.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        String hexStr = <doubleQuotes46>1b0ee1e3<doubleQuotes46>;<newline46mondego>        BigInteger bigInt = new BigInteger(hexStr, 16);<newline46mondego>        System.out.println(bigInt); // Prints 453960163<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"254splitHere46","4316725splitHere46","String.replace(CharSequence,CharSequence)"
"255splitHere46","4316725splitHere46","replaceAll"
"256splitHere46","4316942splitHere46","-Xloggc:log.out -XX:+PrintGCDetails -XX:+PrintGCTimeStamps<newline46mondego>"
"257splitHere46","4316942splitHere46","log.out"
"258splitHere46","4316986splitHere46","TableModel#getColumnClass"
"259splitHere46","4316986splitHere46","Boolean.class"
"260splitHere46","4317011splitHere46","<mvc:view-controller>"
"261splitHere46","4317011splitHere46","@RequestMapping(<doubleQuotes46>/folder/{name}.jsp<doubleQuotes46>)<newline46mondego>public ModelAndView catchAll(@PathVariable String viewName) {<newline46mondego>    return new ModelAndView(<doubleQuotes46>legacy/<doubleQuotes46> + viewName);<newline46mondego>}<newline46mondego>"
"262splitHere46","4317281splitHere46","openFileOutput()"
"263splitHere46","4317281splitHere46","Context"
"264splitHere46","4317281splitHere46","Context"
"265splitHere46","4317356splitHere46","public class IndexedMap<V> extends HashMap<Long, V> {<newline46mondego>    private AtomicLong index = new AtomicLong();<newline46mondego><newline46mondego>    public void put(V value) {<newline46mondego>        put(index.getAndIncrement(), value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"266splitHere46","4317356splitHere46","IndexedMap<Object> objects = new IndexedMap<Object>();<newline46mondego>objects.put(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>objects.put(<doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>// ...<newline46mondego>"
"267splitHere46","4317356splitHere46","ArrayList"
"268splitHere46","4317560splitHere46","JFileChooser#showSaveDialog()"
"269splitHere46","4317560splitHere46","File"
"270splitHere46","4317560splitHere46","JFileChooser fileChooser = new JFileChooser();<newline46mondego>if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {<newline46mondego>    File file = fileChooser.getSelectedFile();<newline46mondego>    // ...<newline46mondego>} else {<newline46mondego>    // User pressed cancel.<newline46mondego>}<newline46mondego>"
"271splitHere46","4317595splitHere46","new Thread(new Runnable(){<newline46mondego> GoogleMaps cMz=new GoogleMaps(<doubleQuotes46>ABQIAAAADEQoVqbqS5pT4ahHSLALyBT8PMUw5z7_OLJoE1lh2VQyfb-WOxTwS9t9mrSq_flhdPeVGOQrxXuCFQ<doubleQuotes46>,10, 10, 10, 10, 1, <doubleQuotes46>roadmap<doubleQuotes46>, imageItem);<newline46mondego><newline46mondego><newline46mondego>//put here action<newline46mondego><newline46mondego>}<newline46mondego>).start();<newline46mondego>"
"272splitHere46","4317693splitHere46","Function2"
"273splitHere46","4317693splitHere46","Function1"
"274splitHere46","4317693splitHere46","throws"
"275splitHere46","4317693splitHere46","Function1"
"276splitHere46","4317693splitHere46","myException"
"277splitHere46","4317693splitHere46","RuntimeException"
"278splitHere46","4317724splitHere46","List<String> lst = new ArrayList<String>();<newline46mondego>lst.add(<doubleQuotes46>a<doubleQuotes46>);<newline46mondego>lst.add(<doubleQuotes46>b<doubleQuotes46>);<newline46mondego>lst.add(<doubleQuotes46>c<doubleQuotes46>);<newline46mondego><newline46mondego>//now modifying contents<newline46mondego>lst.set(1, <doubleQuotes46>z<doubleQuotes46>);<newline46mondego>"
"279splitHere46","4317860splitHere46","itemChanged"
"280splitHere46","4317860splitHere46","jTable.addMouseListener(new java.awt.event.MouseAdapter() {<newline46mondego>     public void mouseClicked(java.awt.event.MouseEvent evt) {<newline46mondego>         Point p = new Point(evt.getX(), evt.getY());<newline46mondego>         int col = jTable.columnAtPoint(p);<newline46mondego>         int row = jTable.rowAtPoint(p);<newline46mondego>         if (evt.getButton() == MouseEvent.BUTTON1)<newline46mondego>         {<newline46mondego>            if (evt.getClickCount() >= 2)<newline46mondego>            {<newline46mondego>               ...<newline46mondego>               ...<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"281splitHere46","4317860splitHere46","TableRowSorter<YourJTableModel> sorter =<newline46mondego>        new TableRowSorter<YourJTableModel>(yourJTableModel);<newline46mondego>   jTable.setRowSorter(sorter);<newline46mondego>"
"282splitHere46","4318029splitHere46","Calendar"
"283splitHere46","4318029splitHere46","Date"
"284splitHere46","4318029splitHere46","setLienient(false)"
"285splitHere46","4318029splitHere46","c.set(Calendar.DAY_OF_MONTH, 28);<newline46mondego>c.set(Calendar.MONTH, Calendar.FEBRUARY);<newline46mondego>c.set(Calendar.YEAR, 2010);<newline46mondego>"
"286splitHere46","4318029splitHere46","c.setLenient(false);"
"287splitHere46","4318029splitHere46","public void setLenient(boolean lenient)"
"288splitHere46","4318051splitHere46","ReentrantLock lock = new ReentrantLock();<newline46mondego><newline46mondego>    void method1()<newline46mondego>    {<newline46mondego>        if(lock.tryLock())<newline46mondego>        {<newline46mondego>           try {<newline46mondego>             if (!(lock.getHoldCount() > 1)) {<newline46mondego>               //do Some Stuff<newline46mondego>             }<newline46mondego>          } finally {<newline46mondego>            lock.unlock();<newline46mondego>          }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"289splitHere46","4318068splitHere46","URL url = new URL(urlString);<newline46mondego>HttpURLConnection cnx = (HttpURLConnection)url.openConnection();<newline46mondego>cnx.setRequestMethod(<doubleQuotes46>PUT<doubleQuotes46>);<newline46mondego>cnx.setRequestProperty(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/octet-stream<doubleQuotes46>);<newline46mondego>// optional request property<newline46mondego>cnx.setRequestProperty(<doubleQuotes46>filename<doubleQuotes46>, filename);<newline46mondego>cnx.setDoOutput(true);<newline46mondego>cnx.connect();<newline46mondego>BufferedInputStream fileIn = <newline46mondego>       new BufferedInputStream(new FileInputStream(fileName), BUFFER_SIZE);<newline46mondego>BufferedOutputStream out = <newline46mondego>       new BufferedOutputStream(cnx.getOutputStream(), BUFFER_SIZE);<newline46mondego>byte[] bytes = new byte[BUFFER_SIZE];<newline46mondego>int bytesRead;<newline46mondego>while((bytesRead = fileIn.read(bytes)) != -1){<newline46mondego>   out.write(bytes, 0, bytesRead);<newline46mondego>}<newline46mondego>"
"290splitHere46","4318068splitHere46","public void doPut(HttpServletRequest request, HttpServletResponse response){<newline46mondego>    String filename = (String)request.getHeader(<doubleQuotes46>filename<doubleQuotes46>);<newline46mondego>    StringBuilder fullPath = new StringBuilder(100);<newline46mondego>    ServletContext ctxt = getServletContext();<newline46mondego>    fullPath.append(ctxt.getRealPath(<doubleQuotes46><doubleQuotes46>))<newline46mondego>      .append(<doubleQuotes46>uploads\\<doubleQuotes46>).append(filename);<newline46mondego>    File f = new File(fullPath.toString());<newline46mondego>    f.createNewFile();<newline46mondego>    InputStream in = request.getInputStream();<newline46mondego>    BufferedOutputStream fileOut = <newline46mondego>        new BufferedOutputStream(new FileOutputStream(f));<newline46mondego>    byte[] bytes = new byte[BUFFER_SIZE];<newline46mondego>    int bytesRead;<newline46mondego>    while((bytesRead = in.read(bytes)) != -1){<newline46mondego>       fileOut.write(bytes, 0, bytesRead);<newline46mondego>    }<newline46mondego>    fileOut.flush();<newline46mondego>    fileOut.close();<newline46mondego>    response.setStatus(HttpServletResponse.SC_CREATED);   <newline46mondego>}<newline46mondego>"
"291splitHere46","4318275splitHere46","String str = <doubleQuotes46>my pass<doubleQuotes46>;<newline46mondego><newline46mondego>if (str.length() < 6 || str.contains(<doubleQuotes46> <doubleQuotes46>)){<newline46mondego><newline46mondego>fail();<newline46mondego>}<newline46mondego>"
"292splitHere46","4318565splitHere46","localdevelopment_Company.properties"
"293splitHere46","4318565splitHere46","<value>classpath:localdevelopment_Company.properties</value><newline46mondego>"
"294splitHere46","4318687splitHere46","TreeSet<MonthMeeting>"
"295splitHere46","4318687splitHere46","TreeSet<MonthMeeting> sorted = new TreeSet<MonthMeeting>(new MyComparator());<newline46mondego>sorted.addAll(monthMeetingMap.values());<newline46mondego>"
"296splitHere46","4318687splitHere46","MyComparator"
"297splitHere46","4318687splitHere46","public class MyComparator implements Comparator<MonthMeeting>() {<newline46mondego>...<newline46mondego>}<newline46mondego>"
"298splitHere46","4318722splitHere46","List<Video> videos = gson.fromJson(json, new TypeToken<List<Video>>(){}.getType());<newline46mondego>"
"299splitHere46","4318722splitHere46","Video"
"300splitHere46","4318738splitHere46","s/printscreen.bmp/<doubleQuotes46>printscreen.bmp<doubleQuotes46><newline46mondego>"
"301splitHere46","4318866splitHere46","String values = <doubleQuotes46>17 23 4 54 6 343 4<doubleQuotes46>;<newline46mondego>String[] variables = values.split(<doubleQuotes46>\\s<doubleQuotes46>);<newline46mondego>"
"302splitHere46","4318866splitHere46","variables"
"303splitHere46","4318866splitHere46","variables[0]"
"304splitHere46","4318866splitHere46","variables[1]"
"305splitHere46","4318928splitHere46","XMLElement(<doubleQuotes46>name<doubleQuotes46>).getClobVal()"
"306splitHere46","4319257splitHere46","/**<newline46mondego>* Gets the state of Airplane Mode.<newline46mondego>* <newline46mondego>* @param context<newline46mondego>* @return true if enabled.<newline46mondego>*/<newline46mondego>private static boolean isAirplaneModeOn(Context context) {<newline46mondego><newline46mondego>   return Settings.System.getInt(context.getContentResolver(),<newline46mondego>           Settings.System.AIRPLANE_MODE_ON, 0) != 0;<newline46mondego><newline46mondego>}<newline46mondego>"
"307splitHere46","4319303splitHere46","GLWindow"
"308splitHere46","4319303splitHere46","GLCanvas"
"309splitHere46","4319303splitHere46","Frame"
"310splitHere46","4319303splitHere46","JFrame"
"311splitHere46","4319303splitHere46","public static void main(String... args) {<newline46mondego><newline46mondego>    // create the cursor<newline46mondego>    Toolkit t = Toolkit.getDefaultToolkit();<newline46mondego>    Image i = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB);<newline46mondego>    Cursor noCursor = t.createCustomCursor(i, new Point(0, 0), <doubleQuotes46>none<doubleQuotes46>); <newline46mondego><newline46mondego>    // try it with a normal frame<newline46mondego>    Frame f = new Frame();<newline46mondego><newline46mondego>    // create the GLCanvas and add it to the frame<newline46mondego>    GLCanvas canvas = new GLCanvas();<newline46mondego>    frame.add(canvas);<newline46mondego><newline46mondego>    f.setCursor(noCursor);<newline46mondego>    f.setSize(400, 200);<newline46mondego>    f.setVisible(true);<newline46mondego>}<newline46mondego>"
"312splitHere46","4319564splitHere46","javax.crypto.Cipher"
"313splitHere46","4319564splitHere46","update"
"314splitHere46","4319564splitHere46","doFinal"
"315splitHere46","4319564splitHere46","import java.security.*;<newline46mondego>import javax.crypto.*;<newline46mondego><newline46mondego>Cipher aes = Cipher.getInstance(<doubleQuotes46>AES/ECB/PKCS5Padding<doubleQuotes46>);<newline46mondego>aes.init(Cipher.ENCRYPT_MODE, key);<newline46mondego>byte[] ciphertext = aes.doFinal(<doubleQuotes46>my cleartext<doubleQuotes46>.getBytes());<newline46mondego><newline46mondego>aes.init(Cipher.DECRYPT_MODE, key);<newline46mondego>String cleartext = new String(aes.doFinal(ciphertext));<newline46mondego>"
"316splitHere46","4319564splitHere46","javax.crypto.spec.SecretKeySpec"
"317splitHere46","4319564splitHere46","java.security.MessageDigest"
"318splitHere46","4319564splitHere46","import java.security.*;<newline46mondego>import javax.crypto.spec.*;<newline46mondego><newline46mondego>String passphrase = <doubleQuotes46>correct horse battery staple<doubleQuotes46>;<newline46mondego>MessageDigest digest = MessageDigest.getInstance(<doubleQuotes46>SHA<doubleQuotes46>);<newline46mondego>digest.update(passphrase.getBytes());<newline46mondego>SecretKeySpec key = new SecretKeySpec(digest.digest(), 0, 16, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"319splitHere46","4319564splitHere46","byte[] salt = <doubleQuotes46>choose a better salt<doubleQuotes46>.getBytes();<newline46mondego>int iterations = 10000;<newline46mondego>SecretKeyFactory factory = SecretKeyFactory.getInstance(<doubleQuotes46>PBKDF2WithHmacSHA1<doubleQuotes46>);<newline46mondego>SecretKey tmp = factory.generateSecret(new PBEKeySpec(passphrase.toCharArray(), salt, iterations, 128));<newline46mondego>SecretKeySpec key = new SecretKeySpec(tmp.getEncoded(), <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>"
"320splitHere46","4319564splitHere46","Cipher aes = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>aes.init(Cipher.ENCRYPT_MODE, key);<newline46mondego>byte[] ciphertext = aes.doFinal(<doubleQuotes46>my cleartext<doubleQuotes46>.getBytes());<newline46mondego>byte[] iv = aes.getIV();<newline46mondego>"
"321splitHere46","4319564splitHere46","Cipher.init()"
"322splitHere46","4319564splitHere46","Cipher aes = Cipher.getInstance(<doubleQuotes46>AES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>aes.init(Cipher.DECRYPT_MODE, key, new IvParameterSpec(iv));<newline46mondego>String cleartext = new String(aes.doFinal(ciphertext));<newline46mondego>"
"323splitHere46","4319564splitHere46","javax.crypto.Cipher"
"324splitHere46","4319564splitHere46","import java.security.*;<newline46mondego><newline46mondego>Cipher rsa = Cipher.getInstance(<doubleQuotes46>RSA/ECB/PKCS1Padding<doubleQuotes46>);<newline46mondego>rsa.init(Cipher.ENCRYPT_MODE, publicKey);<newline46mondego>byte[] ciphertext = rsa.doFinal(<doubleQuotes46>my cleartext<doubleQuotes46>.getBytes());<newline46mondego><newline46mondego>rsa.init(Cipher.DECRYPT_MODE, privateKey);<newline46mondego>String cleartext = new String(rsa.doFinal(ciphertext));<newline46mondego>"
"325splitHere46","4319564splitHere46","java.security.PublicKey"
"326splitHere46","4319564splitHere46","java.security.PrivateKey"
"327splitHere46","4319564splitHere46","import java.security.*;<newline46mondego><newline46mondego>KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(<doubleQuotes46>RSA<doubleQuotes46>);<newline46mondego>KeyPair keyPair = keyPairGenerator.generateKeyPair();<newline46mondego>PublicKey publicKey = keyPair.getPublic();<newline46mondego>PrivateKey privateKey = keyPair.getPrivate();<newline46mondego>"
"328splitHere46","4319564splitHere46","import java.security.*;<newline46mondego>import java.security.spec.*;<newline46mondego><newline46mondego>KeyFactory keyFactory = KeyFactory.getInstance(<doubleQuotes46>RSA<doubleQuotes46>);<newline46mondego>byte[] publicKeyBytes = publicKey.getEncoded();<newline46mondego>KeySpec keySpec = new X509EncodedKeySpec(publicKeyBytes);<newline46mondego>PublicKey keyFromBytes = keyFactory.generatePublic(keySpec);<newline46mondego>"
"329splitHere46","4319581splitHere46","public class IntRef { public int value; }<newline46mondego>"
"330splitHere46","4319582splitHere46","setMessageCheckerList(List)"
"331splitHere46","4319582splitHere46","messageHandler"
"332splitHere46","4319582splitHere46","System.out..."
"333splitHere46","4319582splitHere46","messageHandler"
"334splitHere46","4319582splitHere46","setMessageCheckerList(List)"
"335splitHere46","4319582splitHere46","null"
"336splitHere46","4319582splitHere46","getMessageCheckerList"
"337splitHere46","4319582splitHere46","messageHandler"
"338splitHere46","4319582splitHere46","MessageHandlerImpl"
"339splitHere46","4319582splitHere46","get..."
"340splitHere46","4319715splitHere46","Writer"
"341splitHere46","4319715splitHere46","PrintWriter"
"342splitHere46","4319715splitHere46","File file = fileChooser.getSelectedFile();<newline46mondego>PrintWriter writer = new PrintWriter(file);<newline46mondego>try {<newline46mondego>    writer.println(txtField1.getText().trim());<newline46mondego>    writer.flush();<newline46mondego>} finally {<newline46mondego>    writer.close();<newline46mondego>}<newline46mondego>"
"343splitHere46","4319715splitHere46","new File()"
"344splitHere46","4319715splitHere46","File#createFile()"
"345splitHere46","4319715splitHere46","package com.example;<newline46mondego><newline46mondego>import java.awt.Desktop;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego><newline46mondego>import javax.swing.JFileChooser;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        JFileChooser fileChooser = new JFileChooser();<newline46mondego>        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {<newline46mondego>            File file = fileChooser.getSelectedFile();<newline46mondego>            PrintWriter writer = new PrintWriter(file);<newline46mondego>            try {<newline46mondego>                writer.println(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>                writer.flush();<newline46mondego>            } finally {<newline46mondego>                writer.close();<newline46mondego>            }<newline46mondego>            Desktop.getDesktop().open(file);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"346splitHere46","4319988splitHere46","System.out"
"347splitHere46","4319988splitHere46","System.setOut(new PrintStream(path_to_a_file));<newline46mondego>"
"348splitHere46","4320216splitHere46","mInitializedLatch"
"349splitHere46","4320219splitHere46","jdbc:hsqldb:file:/some/path/myDatabase"
"350splitHere46","4320219splitHere46","[Server@83cc67]: Initiating startup sequence...<newline46mondego>[Server@83cc67]: Server socket opened successfully in 31 ms.<newline46mondego>[Server@83cc67]: Database [index=0, id=0, db=file:test, alias=] opened sucessfully in 250 ms.<newline46mondego>"
"351splitHere46","4320219splitHere46","Connection c = DriverManager.getConnection(<doubleQuotes46>jdbc:hsqldb:hsql://localhost/<doubleQuotes46>, <doubleQuotes46>sa<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"352splitHere46","4320728splitHere46","FooService"
"353splitHere46","4320728splitHere46","FooServiceImpl"
"354splitHere46","4321119splitHere46","if (localName.equalsIgnoreCase(<doubleQuotes46>Set<doubleQuotes46>)<newline46mondego>        && attributes.getValue(<doubleQuotes46>name<doubleQuotes46>).equalsIgnoreCase(<newline46mondego>                <doubleQuotes46>BUSINESS<doubleQuotes46>)) {<newline46mondego>    curElement = 1;<newline46mondego>} else if (localName.equalsIgnoreCase(<doubleQuotes46>Set<doubleQuotes46>)<newline46mondego>        && attributes.getValue(<doubleQuotes46>name<doubleQuotes46>).equalsIgnoreCase(<newline46mondego>                <doubleQuotes46>LASTCOLLECTION<doubleQuotes46>)) {<newline46mondego>    curElement = 2;<newline46mondego>}<newline46mondego>"
"355splitHere46","4321119splitHere46","if (curElement == 1) {<newline46mondego><newline46mondego>    ....<newline46mondego>    //Remove inBusiness= false;<newline46mondego>} else if (curElement == 2) {<newline46mondego>    ...<newline46mondego>    //Remove inLastCollection = false;<newline46mondego>}<newline46mondego>"
"356splitHere46","4321146splitHere46","\b"
"357splitHere46","4321146splitHere46","\w"
"358splitHere46","4321213splitHere46","request.setAttribute()"
"359splitHere46","4321213splitHere46","RequestDispatcher.forward()"
"360splitHere46","4321213splitHere46","request.getAttribute()"
"361splitHere46","4321498splitHere46","Directory.copy()"
"362splitHere46","4321498splitHere46","IndexWriter.addIndexes()"
"363splitHere46","4321498splitHere46","IndexWriter"
"364splitHere46","4321498splitHere46","Directory.copy()"
"365splitHere46","4321498splitHere46","ramDir"
"366splitHere46","4321498splitHere46","indexDir"
"367splitHere46","4321498splitHere46",".addIndexes"
"368splitHere46","4321498splitHere46","indexDir"
"369splitHere46","4321498splitHere46","ramDir"
"370splitHere46","4321498splitHere46",".addIndexesNoOptimize"
"371splitHere46","4321498splitHere46","ramDir"
"372splitHere46","4321498splitHere46","indexDir"
"373splitHere46","4321498splitHere46","private int index(File indexDir, File dataDir, String suffix) throws Exception {<newline46mondego>    RAMDirectory ramDir = new RAMDirectory();<newline46mondego>    IndexWriter indexWriter = new IndexWriter(ramDir,<newline46mondego>        new StandardAnalyzer(Version.LUCENE_CURRENT), true,  <newline46mondego>        IndexWriter.MaxFieldLength.UNLIMITED);<newline46mondego>    indexWriter.setUseCompoundFile(false);<newline46mondego>    indexDirectory(indexWriter, dataDir, suffix);<newline46mondego>    int numIndexed = indexWriter.maxDoc();<newline46mondego>    indexWriter.optimize();<newline46mondego>    indexWriter.close();<newline46mondego><newline46mondego><newline46mondego>    IndexWriter index = new IndexWriter(FSDirectory.open(indexDir),<newline46mondego>        new StandardAnalyzer(Version.LUCENE_CURRENT), true,  <newline46mondego>        IndexWriter.MaxFieldLength.UNLIMITED);<newline46mondego>    index.addIndexesNoOptimize(ramDir);<newline46mondego>    index.optimize();<newline46mondego>    index.close();<newline46mondego><newline46mondego>    return numIndexed;<newline46mondego>}<newline46mondego>"
"374splitHere46","4321498splitHere46","private int index(File indexDir, File dataDir, String suffix) throws Exception {<newline46mondego><newline46mondego>    IndexWriter index = new IndexWriter(FSDirectory.open(indexDir),<newline46mondego>        new StandardAnalyzer(Version.LUCENE_CURRENT), true,  <newline46mondego>        IndexWriter.MaxFieldLength.UNLIMITED);<newline46mondego><newline46mondego>    // tweak the settings for your hardware<newline46mondego>    index.setUseCompoundFile(false);<newline46mondego>    index.setRAMBufferSizeMB(256);<newline46mondego>    index.setMergeFactor(30);<newline46mondego><newline46mondego>    indexDirectory(index, dataDir, suffix);<newline46mondego><newline46mondego>    index.optimize();<newline46mondego>    int numIndexed = index.maxDoc();<newline46mondego>    index.close();<newline46mondego><newline46mondego>    // you'll need to update indexDirectory() to keep track of indexed files<newline46mondego>    return numIndexed;<newline46mondego>}<newline46mondego>"
"375splitHere46","4321736splitHere46","customerGroup"
"376splitHere46","4321736splitHere46","<s:property value=<doubleQuotes46>customerGroup<doubleQuotes46>/><newline46mondego>"
"377splitHere46","4321736splitHere46","<s:property value=<doubleQuotes46>customerGroup.groupName<doubleQuotes46>/><newline46mondego>"
"378splitHere46","4321789splitHere46","/**"
"379splitHere46","4321805splitHere46","ModelAndView"
"380splitHere46","4321805splitHere46","ModelAndView model = new ModelAndView(new RedirectView(<doubleQuotes46>contact<doubleQuotes46>));<newline46mondego>"
"381splitHere46","4321818splitHere46","Refactor -> Rename"
"382splitHere46","4321851splitHere46","importEmployees"
"383splitHere46","4322158splitHere46","newInstance()"
"384splitHere46","4322158splitHere46","finalize()"
"385splitHere46","4322172splitHere46","public void onModuleLoad() {<newline46mondego>    RootPanel.get().add(new GoogleMaps());<newline46mondego>}<newline46mondego><newline46mondego>private class GoogleMaps extends Composite {<newline46mondego><newline46mondego>    private MapWidget fMap;<newline46mondego>    private Geocoder fCoder;<newline46mondego>    private Marker fMarker;<newline46mondego><newline46mondego>    public GoogleMaps() {<newline46mondego>        fMap = new MapWidget(LatLng.newInstance(47.0559084, 8.3114878), 6);<newline46mondego>        fMap.setSize(<doubleQuotes46>300px<doubleQuotes46>, <doubleQuotes46>300px<doubleQuotes46>);<newline46mondego>        fCoder = new Geocoder();<newline46mondego>        MarkerOptions options = MarkerOptions.newInstance();<newline46mondego>        options.setDraggable(true);<newline46mondego>        fMarker = new Marker(LatLng.newInstance(47.0559084, 8.3114878), options);<newline46mondego>        fMap.addOverlay(fMarker);<newline46mondego>        fMarker.setVisible(false);<newline46mondego>        addHandlers();<newline46mondego>        initWidget(fMap);<newline46mondego>    }<newline46mondego><newline46mondego>    private void addHandlers() {<newline46mondego>        fMap.addMapDoubleClickHandler(new MapDoubleClickHandler() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onDoubleClick(MapDoubleClickEvent event) {<newline46mondego>                if (event.getLatLng() != null) {<newline46mondego>                    performReverseLookup(event.getLatLng());<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego><newline46mondego>        fMarker.addMarkerDragEndHandler(new MarkerDragEndHandler() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onDragEnd(MarkerDragEndEvent event) {<newline46mondego>                LatLng point = event.getSender().getLatLng();<newline46mondego>                if (point != null) {<newline46mondego>                    performReverseLookup(point);<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private void performReverseLookup(final LatLng point) {<newline46mondego>        fCoder.getLocations(point, new LocationCallback() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onSuccess(JsArray<Placemark> locations) {<newline46mondego>                if (locations.length() > 0) {<newline46mondego>                    LatLng point = locations.get(0).getPoint();<newline46mondego>                    fMarker.setLatLng(point);<newline46mondego>                    fMarker.setVisible(true);<newline46mondego>                    fMap.getInfoWindow().open(point, new InfoWindowContent(locations.get(0).getAddress()));<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onFailure(int statusCode) {}<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"386splitHere46","4322172splitHere46","Marker"
"387splitHere46","4322172splitHere46","LatLng"
"388splitHere46","4322172splitHere46","performReverseLookup()"
"389splitHere46","4322172splitHere46","Placemark"
"390splitHere46","4322172splitHere46","locations"
"391splitHere46","4322202splitHere46","android.util.Base64"
"392splitHere46","4322202splitHere46","android/util/Base64.java"
"393splitHere46","4322213splitHere46","private Socket socket;<newline46mondego>private SSLServerSocket ssocket; <newline46mondego>private int port=6666;<newline46mondego><newline46mondego>while(true) {<newline46mondego>//here I have code need to create a serversocket<newline46mondego>try {<newline46mondego>    connectToServerSocket();<newline46mondego>}  catch (IOException) {<newline46mondego>    // log the exception<newline46mondego>    continue;<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>while (listen) {<newline46mondego>             //wait for client to connect//  <newline46mondego>   try{<newline46mondego>        socket = ssocket.accept();<newline46mondego>   } catch (IOException ioe) {<newline46mondego>       ioe.printStackTrace();<newline46mondego>   }      <newline46mondego>}<newline46mondego>}<newline46mondego>"
"394splitHere46","4322462splitHere46","<device supportsPolishGui=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <identifier>Nokia/Midp2CCLDC11</identifier><newline46mondego>    <groups> Series60,Series40</groups><newline46mondego>    <capability name=<doubleQuotes46>ScreenSize<doubleQuotes46> value=<doubleQuotes46>240x320<doubleQuotes46>/><newline46mondego>    <capability name=<doubleQuotes46>FullCanvasSize<doubleQuotes46> value=<doubleQuotes46>240x320<doubleQuotes46>/><newline46mondego>    <capability name=<doubleQuotes46>CanvasSize<doubleQuotes46> value=<doubleQuotes46>240x320<doubleQuotes46>/><newline46mondego>    <capability name=<doubleQuotes46>BitsPerPixel<doubleQuotes46> value=<doubleQuotes46>16<doubleQuotes46>/><newline46mondego>    <capability name=<doubleQuotes46>JavaPackage<doubleQuotes46> value=<doubleQuotes46>mmapi1.1, wmapi, wmapi2.0,m3g, pdaapi, nfc<doubleQuotes46> /><newline46mondego>    <capability name=<doubleQuotes46>JavaPlatform<doubleQuotes46> value=<doubleQuotes46>MIDP/2.0<doubleQuotes46> /><newline46mondego>    <capability name=<doubleQuotes46>JavaConfiguration<doubleQuotes46> value=<doubleQuotes46>CLDC/1.1<doubleQuotes46> /><newline46mondego>    <capability name=<doubleQuotes46>JavaProtocol<doubleQuotes46> value=<doubleQuotes46>http, https, ssl, tls, tcp, udp<doubleQuotes46> /><newline46mondego>    <capability name=<doubleQuotes46>HeapSize<doubleQuotes46> value=<doubleQuotes46>10 MB<doubleQuotes46> /><newline46mondego><newline46mondego></device><newline46mondego>"
"395splitHere46","4322745splitHere46","java.io.File"
"396splitHere46","4322805splitHere46","shell.setSize(shell.computeSize(SWT.DEFAULT, SWT.DEFAULT));<newline46mondego>"
"397splitHere46","4322830splitHere46","String xmlSource = <doubleQuotes46>your xml<doubleQuotes46>;<newline46mondego>String xpathExpression = <doubleQuotes46>//element[@scoCode='C1']/@foo | //element[@scoCode='C1']/@bar<doubleQuotes46>;<newline46mondego><newline46mondego>XPath xpath = XPathFactory.newInstance().newXPath();<newline46mondego>StringReader reportConfigurationXML = new StringReader(xmlSource);<newline46mondego>InputSource inputSource = new InputSource(reportConfigurationXML);<newline46mondego><newline46mondego>String result = (String) xpath.evaluate(xpathExpression, inputSource, XPathConstants.STRING);<newline46mondego>"
"398splitHere46","4322859splitHere46","SELECT * FROM dbtest.T_AJPES_TR_LOG WHERE file_import='MyFileName.xml';<newline46mondego>"
"399splitHere46","4322859splitHere46","String query = String.format(<newline46mondego>    <doubleQuotes46>SELECT * FROM dbtest.T_AJPES_TR_LOG WHERE File_import='%s'<doubleQuotes46>, name);<newline46mondego>uprs1 = stmt1.executeQuery(query);<newline46mondego>"
"400splitHere46","4323104splitHere46","import org.hibernate.annotations.Entity;<newline46mondego>"
"401splitHere46","4323104splitHere46","@Entity"
"402splitHere46","4323104splitHere46","javax.persistence.Entity"
"403splitHere46","4323132splitHere46","+"
"404splitHere46","4323132splitHere46","+="
"405splitHere46","4323132splitHere46","concat(String)"
"406splitHere46","4323132splitHere46","System.out.println(<doubleQuotes46>x:<doubleQuotes46>+x+<doubleQuotes46> y:<doubleQuotes46>+y);<newline46mondego>"
"407splitHere46","4323132splitHere46","System.out.println((new StringBuilder()).append(<doubleQuotes46>x:<doubleQuotes46>).append(x).append(<doubleQuotes46> y:<doubleQuotes46>).append(y).toString());<newline46mondego>"
"408splitHere46","4323169splitHere46","ArrayList<String> copyList = new ArrayList<String>(userList);<newline46mondego>"
"409splitHere46","4323169splitHere46","ArrayList<String> wordsToRemove = new ArrayList<String>();<newline46mondego>Set<String> seenWords = new HashSet<String>();<newline46mondego><newline46mondego>for (String word : userList)<newline46mondego>{<newline46mondego>    if (!seenWords.add(word))<newline46mondego>    {<newline46mondego>        wordsToRemove.add(word);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>for (String word : wordsToRemove)<newline46mondego>{<newline46mondego>    // Keep removing it until it doesn't exist any more<newline46mondego>    while (userList.remove(word)) {}<newline46mondego>}<newline46mondego>"
"410splitHere46","4323169splitHere46","Set<String> wordsToRemove = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);<newline46mondego>Set<String> seenWords = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);<newline46mondego><newline46mondego>for (String word : userList)<newline46mondego>{<newline46mondego>    if (!seenWords.add(word))<newline46mondego>    {<newline46mondego>        wordsToRemove.add(word);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// Now we know the words we don't want, step through the list again and<newline46mondego>// remove them (case-insensitively, as wordsToRemove is case-insensitive)<newline46mondego>for (Iterator<String> iterator = userList.iterator(); it.hasNext() ;)<newline46mondego>{<newline46mondego>    if (wordsToRemove.contains(word))<newline46mondego>    {<newline46mondego>        iterator.remove();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"411splitHere46","4323173splitHere46","import java.lang.reflect.Type;<newline46mondego>import java.text.ParseException;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Date;<newline46mondego><newline46mondego>import com.google.gson.Gson;<newline46mondego>import com.google.gson.GsonBuilder;<newline46mondego>import com.google.gson.JsonDeserializationContext;<newline46mondego>import com.google.gson.JsonDeserializer;<newline46mondego>import com.google.gson.JsonElement;<newline46mondego>import com.google.gson.JsonParseException;<newline46mondego><newline46mondego><newline46mondego>public class Dummy {<newline46mondego>    private Date date;<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param date the date to set<newline46mondego>     */<newline46mondego>    public void setDate(Date date) {<newline46mondego>        this.date = date;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @return the date<newline46mondego>     */<newline46mondego>    public Date getDate() {<newline46mondego>        return date;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        GsonBuilder builder = new GsonBuilder();<newline46mondego>        builder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)<newline46mondego>                    throws JsonParseException {<newline46mondego><newline46mondego>                SimpleDateFormat format = new SimpleDateFormat(<doubleQuotes46>dd-MM-yyyy HH:mm:ss<doubleQuotes46>);<newline46mondego>                String date = json.getAsJsonPrimitive().getAsString();<newline46mondego>                try {<newline46mondego>                    return format.parse(date);<newline46mondego>                } catch (ParseException e) {<newline46mondego>                    throw new RuntimeException(e);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        Gson gson = builder.create();<newline46mondego>        String s = <doubleQuotes46>{\<doubleQuotes46>date\<doubleQuotes46>:\<doubleQuotes46>23-11-2010 10:00:00\<doubleQuotes46>}<doubleQuotes46>;<newline46mondego>        Dummy d = gson.fromJson(s, Dummy.class);<newline46mondego>        System.out.println(d.getDate());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"412splitHere46","4323260splitHere46","runtime('com.amazonaws:aws-java-sdk:1.1.0'){<newline46mondego>    excludes <doubleQuotes46>stax-api<doubleQuotes46><newline46mondego>}<newline46mondego>runtime('stax:stax:1.2.0'){<newline46mondego>    excludes <doubleQuotes46>stax-api<doubleQuotes46><newline46mondego>}<newline46mondego>"
"413splitHere46","4323283splitHere46","equals()"
"414splitHere46","4323283splitHere46","equals()"
"415splitHere46","4323283splitHere46","hashcode()"
"416splitHere46","4323324splitHere46","List<YourClass> list = new ArrayList<YourClass>();<newline46mondego>list.add(obj1);<newline46mondego>list.add(obj2);<newline46mondego>list.add(obj3);<newline46mondego>.<newline46mondego>. <newline46mondego>.<newline46mondego>"
"417splitHere46","4323496splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><project basedir=<doubleQuotes46>.<doubleQuotes46> name=<doubleQuotes46>Example<doubleQuotes46> default=<doubleQuotes46>run_build<doubleQuotes46>><newline46mondego><newline46mondego>    <property name=<doubleQuotes46>guiJar<doubleQuotes46> value=<doubleQuotes46>../../Library/<jar-name>.jar<doubleQuotes46>></property><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>run_build<doubleQuotes46> depends=<doubleQuotes46>delete_old_jar,create_dirs,create_manifest,copy_all_class_files,create_jar,delete_temp_dirs<doubleQuotes46>><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>delete_old_jar<doubleQuotes46>><newline46mondego>        <delete file=<doubleQuotes46>${guiJar}<doubleQuotes46>><newline46mondego>        </delete><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>create_dirs<doubleQuotes46>><newline46mondego>        <mkdir dir=<doubleQuotes46>jar_temp<doubleQuotes46> /><newline46mondego>        <mkdir dir=<doubleQuotes46>jar_temp/META-INF<doubleQuotes46> /><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>delete_temp_dirs<doubleQuotes46>><newline46mondego>        <delete dir=<doubleQuotes46>jar_temp<doubleQuotes46>><newline46mondego>        </delete><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>create_manifest<doubleQuotes46>><newline46mondego>        <manifest file=<doubleQuotes46>jar_temp/META-INF/MANIFEST.MF<doubleQuotes46>><newline46mondego>            <attribute name=<doubleQuotes46>Manifest-Version<doubleQuotes46> value=<doubleQuotes46>1.0<doubleQuotes46> /><newline46mondego>            <attribute name=<doubleQuotes46>Version<doubleQuotes46> value=<doubleQuotes46>1.0.0<doubleQuotes46> /><newline46mondego>            <attribute name=<doubleQuotes46>Company<doubleQuotes46> value=<doubleQuotes46>Value<doubleQuotes46> /><newline46mondego>            <attribute name=<doubleQuotes46>Project<doubleQuotes46> value=<doubleQuotes46>Value<doubleQuotes46> /><newline46mondego>            <attribute name=<doubleQuotes46>Java-Version<doubleQuotes46> value=<doubleQuotes46>${java.version}<doubleQuotes46> /><newline46mondego>            <attribute name=<doubleQuotes46>Class-Path<doubleQuotes46> value=<doubleQuotes46>test.jar<doubleQuotes46> /><newline46mondego>                    <attribute name=<doubleQuotes46>Main-Class<doubleQuotes46> value=<doubleQuotes46>com.Main<doubleQuotes46> /><newline46mondego>        </manifest><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>create_jar<doubleQuotes46>><newline46mondego>        <jar destfile=<doubleQuotes46>${guiJar}<doubleQuotes46> manifest=<doubleQuotes46>jar_temp/META-INF/MANIFEST.MF<doubleQuotes46> basedir=<doubleQuotes46>jar_temp<doubleQuotes46>><newline46mondego>        </jar><newline46mondego>    </target><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>copy_all_class_files<doubleQuotes46>><newline46mondego>        <copy todir=<doubleQuotes46>jar_temp<doubleQuotes46>><newline46mondego>            <fileset dir=<doubleQuotes46>classes<doubleQuotes46>><newline46mondego>                <include name=<doubleQuotes46>*/**<doubleQuotes46> /><newline46mondego>            </fileset><newline46mondego>        </copy><newline46mondego>    </target><newline46mondego></project><newline46mondego>"
"418splitHere46","4323628splitHere46","NumberFormat format = NumberFormat.getInstance(Locale.FRANCE);<newline46mondego>    Number number = format.parse(<doubleQuotes46>1,234<doubleQuotes46>);<newline46mondego>    double d = number.doubleValue();<newline46mondego>"
"419splitHere46","4323838splitHere46","java.awt.TextField"
"420splitHere46","4323838splitHere46","MouseListener"
"421splitHere46","4323838splitHere46","TextField field = new TextField();<newline46mondego>field.addMouseListener(new MouseListener() {<newline46mondego><newline46mondego>    public void mouseClicked(MouseEvent e) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void mousePressed(MouseEvent e) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void mouseReleased(MouseEvent e) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void mouseEntered(MouseEvent e) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public void mouseExited(MouseEvent e) {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>});<newline46mondego>"
"422splitHere46","4323838splitHere46","java.awt.TextField"
"423splitHere46","4323838splitHere46","java.awt.TextComponent"
"424splitHere46","4323838splitHere46","java.awt.Component"
"425splitHere46","4323838splitHere46","Component"
"426splitHere46","4323838splitHere46","addMouseListener()"
"427splitHere46","4323838splitHere46","MouseListener"
"428splitHere46","4323838splitHere46","java.awt.event.MouseAdapter"
"429splitHere46","4323838splitHere46","MouseListener"
"430splitHere46","4323838splitHere46","MouseWheelListener"
"431splitHere46","4323838splitHere46","MouseMotionListener"
"432splitHere46","4323838splitHere46","MouseAdapter"
"433splitHere46","4323870splitHere46","for (Item i : theList) {<newline46mondego> if (i.num == 123) {<newline46mondego>  theI = i;<newline46mondego>  break;<newline46mondego> }<newline46mondego>}<newline46mondego>foo(theI);  // foo modifies theList<newline46mondego>"
"434splitHere46","4323870splitHere46","next"
"435splitHere46","4323915splitHere46","<target name=<doubleQuotes46>moveDirs<doubleQuotes46>><newline46mondego>  <mkdir dir=<doubleQuotes46>my/directory/root/merged<doubleQuotes46> failonerror=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>  <move todir=<doubleQuotes46>my/directory/root/merged<doubleQuotes46>><newline46mondego>    <fileset dir=<doubleQuotes46>my/directory/root<doubleQuotes46>><newline46mondego>      <include name=<doubleQuotes46>dir*/*<doubleQuotes46>/><newline46mondego>    </fileset><newline46mondego>    <mapper><newline46mondego>        <regexpmapper from=<doubleQuotes46>^(.*?)dir[0-9]+.(.*)$<doubleQuotes46> to=<doubleQuotes46>\1\2<doubleQuotes46>/><newline46mondego>    </mapper><newline46mondego>  </move><newline46mondego></target><newline46mondego>"
"436splitHere46","4323915splitHere46","<move>"
"437splitHere46","4323941splitHere46","str = str.replaceAll(<doubleQuotes46>World<doubleQuotes46>, <doubleQuotes46>\\\\_\\\\_\\\\_\\\\_\\\\_<doubleQuotes46>);<newline46mondego>"
"438splitHere46","4323941splitHere46","\"
"439splitHere46","4323941splitHere46","\"
"440splitHere46","4323941splitHere46","\"
"441splitHere46","4323941splitHere46","\\"
"442splitHere46","4323941splitHere46","\"
"443splitHere46","4323941splitHere46","\\"
"444splitHere46","4323941splitHere46","\"
"445splitHere46","4323941splitHere46","\\"
"446splitHere46","4323941splitHere46","\\\\"
"447splitHere46","4323941splitHere46","replace"
"448splitHere46","4323941splitHere46","String"
"449splitHere46","4323941splitHere46","input = input.replace(<doubleQuotes46>World<doubleQuotes46>, <doubleQuotes46>\\_\\_\\_\\_\\_<doubleQuotes46>);<newline46mondego>"
"450splitHere46","4324012splitHere46","System.clearProperty(<doubleQuotes46>workingDir<doubleQuotes46>);<newline46mondego>"
"451splitHere46","4324124splitHere46","<dependency><newline46mondego>        <groupId>org.hibernate</groupId><newline46mondego>        <artifactId>hibernate-core</artifactId><newline46mondego>        <version>3.3.2.GA</version><newline46mondego>        <!--<version>3.6.0.Final</version>--><newline46mondego>    </dependency>               <newline46mondego>    <dependency><newline46mondego>        <groupId>org.hibernate</groupId><newline46mondego>        <artifactId>hibernate-annotations</artifactId><newline46mondego>        <version>3.4.0.GA</version><newline46mondego>    </dependency><newline46mondego>    <dependency><newline46mondego>        <groupId>org.hibernate</groupId><newline46mondego>        <artifactId>hibernate-validator</artifactId><newline46mondego>        <version>3.1.0.GA</version><newline46mondego>    </dependency><newline46mondego><newline46mondego>....<newline46mondego><newline46mondego><dependency><newline46mondego>    <groupId>hibernate</groupId><newline46mondego>    <artifactId>hibernate3</artifactId><newline46mondego>    <version>3.2.3.GA</version><newline46mondego></dependency><newline46mondego><newline46mondego><!-- Hibernate annotation --><newline46mondego><dependency><newline46mondego>    <groupId>hibernate-annotations</groupId><newline46mondego>    <artifactId>hibernate-annotations</artifactId><newline46mondego>    <version>3.3.0.GA</version><newline46mondego></dependency><newline46mondego><newline46mondego><dependency><newline46mondego>    <groupId>hibernate-commons-annotations</groupId><newline46mondego>    <artifactId>hibernate-commons-annotations</artifactId><newline46mondego>    <version>3.0.0.GA</version><newline46mondego></dependency><newline46mondego>"
"452splitHere46","4324147splitHere46","getSharedPreferences"
"453splitHere46","4324147splitHere46","Context"
"454splitHere46","4324147splitHere46","public static final String PREF_FILE_NAME = <doubleQuotes46>PrefFile<doubleQuotes46>;<newline46mondego>   SharedPreferences preferences = getSharedPreferences(PREF_FILE_NAME, MODE_PRIVATE);<newline46mondego>"
"455splitHere46","4324147splitHere46","MODE_PRIVATE"
"456splitHere46","4324147splitHere46","MODE_WORLD_READABLE"
"457splitHere46","4324147splitHere46","MODE_WORLD_WRITEABLE"
"458splitHere46","4324147splitHere46","MODE_WORLD_READABLE"
"459splitHere46","4324147splitHere46","MODE_WORLD_WRITEABLE"
"460splitHere46","4324147splitHere46","SharedPreferences preferences = PreferencesManager.getDefaultSharedPreferences(context);<newline46mondego>"
"461splitHere46","4324147splitHere46","int storedPreference = preferences.getInt(<doubleQuotes46>storedInt<doubleQuotes46>, 0);<newline46mondego>"
"462splitHere46","4324147splitHere46","SharedPreference.Editor"
"463splitHere46","4324147splitHere46","Editor"
"464splitHere46","4324147splitHere46","SharedPreference"
"465splitHere46","4324147splitHere46","SharedPreferences.Editor editor = preferences.edit();<newline46mondego>editor.putInt(<doubleQuotes46>storedInt<doubleQuotes46>, storedPreference); // value to store<newline46mondego>editor.commit();<newline46mondego>"
"466splitHere46","4324147splitHere46","remove()"
"467splitHere46","4324147splitHere46","clear()"
"468splitHere46","4324147splitHere46","getPreferences()"
"469splitHere46","4324147splitHere46","getPreference"
"470splitHere46","4324147splitHere46","getSharedPreferences()"
"471splitHere46","4324147splitHere46","SharedPreferences preferences = getPreferences(MODE_PRIVATE);<newline46mondego>int storedPreference = preferences.getInt(<doubleQuotes46>storedInt<doubleQuotes46>, 0);<newline46mondego>"
"472splitHere46","4324147splitHere46","SharedPreferences preferences = getPreference(MODE_PRIVATE);<newline46mondego>SharedPreferences.Editor editor = preferences.edit();<newline46mondego>editor.putInt(<doubleQuotes46>storedInt<doubleQuotes46>, storedPreference); // value to store<newline46mondego>editor.commit();<newline46mondego>"
"473splitHere46","4324147splitHere46","android.preference"
"474splitHere46","4324150splitHere46","public class NameFare {<newline46mondego>    private String name;<newline46mondego>    private int fare;<newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego>    public int getFare() {<newline46mondego>        return fare;<newline46mondego>    }<newline46mondego>    @Override public void equals(Object o) {<newline46mondego>        if (o == this) {<newline46mondego>            return true;<newline46mondego>        } else if (o != null) {<newline46mondego>            if (getName() != null) {<newline46mondego>                return getName().equals(o.getName());<newline46mondego>            } else {<newline46mondego>                return o.getName() == null;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>....<newline46mondego>public Collection<NameFare> sortAndMerge(Collection<NameFare> toSort) {<newline46mondego>    ArrayList<NameFare> sorted = new ArrayList<NameFare>(toSort.size());<newline46mondego>    for (NameFare nf : toSort) {<newline46mondego>        int idx = sorted.getIndexOf(nf); <newline46mondego>        if (idx != -1) {<newline46mondego>            NameFare old = sorted.get(idx);<newline46mondego>            if (nf.getFare() < old.getFare()) {<newline46mondego>                sorted.remove(idx);<newline46mondego>                sorted.add(nf);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    Collections.sort(sorted, new Comparator<NameFare>() {<newline46mondego>        public int compare(NameFare o1, NameFare o2) {<newline46mondego>            if (o1 == o2) {<newline46mondego>                return 0;<newline46mondego>            } else {<newline46mondego>                if (o1.getName() != null) {<newline46mondego>                    return o1.getName().compareTo(o2.getName()); <newline46mondego>                } else if (o2.getName() != null) {<newline46mondego>                    return o2.getName().compareTo(o1.getName()); <newline46mondego>                } else {<newline46mondego>                    return 0;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"475splitHere46","4324259splitHere46","(let [url-connection<newline46mondego>        (doto (java.net.HttpURLConnection.)<newline46mondego>          (.setDoInput true)<newline46mondego>          ; more initialization<newline46mondego>          ))]<newline46mondego>  ; use the url-connection<newline46mondego>  )<newline46mondego>"
"476splitHere46","4324437splitHere46","Filter"
"477splitHere46","4324437splitHere46","sendError()"
"478splitHere46","4324437splitHere46","setStatus()"
"479splitHere46","4324437splitHere46","chain.doFilter(req, wrapper)"
"480splitHere46","4324437splitHere46","sendError()"
"481splitHere46","4324437splitHere46","getOutputStream()"
"482splitHere46","4324437splitHere46","getWriter()"
"483splitHere46","4324453splitHere46","Future"
"484splitHere46","4324453splitHere46","@Async<newline46mondego>public Future<Void> executeBla() {<newline46mondego>    System.out.println(<doubleQuotes46>Bla!<doubleQuotes46>);<newline46mondego>    return new AsyncResult<Void>(null);<newline46mondego>}<newline46mondego>"
"485splitHere46","4324453splitHere46","public void executeBlaALotOfTimes() {<newline46mondego>    long before = System.currentTimeMillis();<newline46mondego><newline46mondego>    Collection<Future<Void>> futures = new ArrayList<Future<Void>>();<newline46mondego><newline46mondego>    for (int i = 0; i<40000; i++) {<newline46mondego>        futures.add(executeBla());<newline46mondego>    }<newline46mondego><newline46mondego>    for (Future<Void> future : futures) {<newline46mondego>        future.get();<newline46mondego>    }<newline46mondego><newline46mondego>    long after = System.currentTimeMillis(); <newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Time it took for a lot of bla to execute: <doubleQuotes46> + (after - before) / 1000.0 + <doubleQuotes46> seconds.<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"486splitHere46","4324470splitHere46","${requestScope['javax.servlet.forward.request_uri']}"
"487splitHere46","4324470splitHere46","${requestScope['javax.servlet.forward.query_string']}"
"488splitHere46","4324650splitHere46","Arrays.asList(array)"
"489splitHere46","4324650splitHere46","int[]"
"490splitHere46","4324650splitHere46","int[]"
"491splitHere46","4324650splitHere46","Integer[]"
"492splitHere46","4324665splitHere46","@WebResult(name=<doubleQuotes46>basicGroup<doubleQuotes46>)"
"493splitHere46","4324665splitHere46","XmlTransient"
"494splitHere46","4324665splitHere46","@XmlTransient<newline46mondego>private BasicGroup basicGroup;<newline46mondego>"
"495splitHere46","4324830splitHere46","// It's not clear where newExchange is actually populated<newline46mondego>Integer[] newExchange = new Integer[nColors];<newline46mondego>while (true) {<newline46mondego>    Integer[] lastExchange = new Integer[nColors];<newline46mondego>    ...<newline46mondego>    for (int i=0; i<nColors; i++) {<newline46mondego>       lastExchange[i] = newExchange[i];<newline46mondego>    }<newline46mondego>    ...<newline46mondego>    exchanges.add(lastExchange);<newline46mondego>    output.log.fine(<doubleQuotes46>Exchange:<doubleQuotes46> + lastExchange[0] + <doubleQuotes46>,<doubleQuotes46> + lastExchange[1]);<newline46mondego>}<newline46mondego>"
"496splitHere46","4324830splitHere46","Integer[] newExchange = new Integer[nColors];<newline46mondego>while (true) {<newline46mondego>    Integer[] lastExchange = newExchange.clone();<newline46mondego>    ...<newline46mondego>    exchanges.add(lastExchange);<newline46mondego>    output.log.fine(<doubleQuotes46>Exchange:<doubleQuotes46> + lastExchange[0] + <doubleQuotes46>,<doubleQuotes46> + lastExchange[1]);<newline46mondego>}<newline46mondego>"
"497splitHere46","4324851splitHere46","public native double[] doData(double [] value1, double [] value2, int count);<newline46mondego>"
"498splitHere46","4324851splitHere46","JNIEXPORT jdoubleArray JNICALL Java_package_className_doData(JNIEnv * , jobject, jdoubleArray , jdoubleArray, jint);<newline46mondego>"
"499splitHere46","4324858splitHere46","UIComponent#getAttributes()"
"500splitHere46","4324858splitHere46","Object tabindex = component.getAttributes().get(<doubleQuotes46>tabindex<doubleQuotes46>);<newline46mondego>if (tabindex != null) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"501splitHere46","4324936splitHere46","<list name=<doubleQuotes46>myArrayListProperty<doubleQuotes46> cascade=<doubleQuotes46>all<doubleQuotes46>><newline46mondego>        <key column=<doubleQuotes46>parent_id<doubleQuotes46>/><newline46mondego>        <index column=<doubleQuotes46>idx<doubleQuotes46>/><newline46mondego>        <one-to-many class=<doubleQuotes46>WhatIsInTheList<doubleQuotes46>/><newline46mondego>    </list><newline46mondego>"
"502splitHere46","4324985splitHere46","/test/java/com/testutil"
"503splitHere46","4324985splitHere46","classpath"
"504splitHere46","4325030splitHere46","pack"
"505splitHere46","4325050splitHere46","NumberFormat.parse"
"506splitHere46","4325050splitHere46","import java.text.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.out.println(parseCompleteString(<doubleQuotes46>12<doubleQuotes46>));<newline46mondego>        System.out.println(parseCompleteString(<doubleQuotes46>12abc<doubleQuotes46>));<newline46mondego>        System.out.println(parseCompleteString(<doubleQuotes46>abc12<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    public static Number parseCompleteString(String input) {<newline46mondego>        ParsePosition pp = new ParsePosition(0);<newline46mondego>        NumberFormat numberFormat = new DecimalFormat();<newline46mondego>        Number result = numberFormat.parse(input, pp);<newline46mondego>        return pp.getIndex() == input.length() ? result : null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"507splitHere46","4325050splitHere46","12<newline46mondego>null<newline46mondego>null<newline46mondego>"
"508splitHere46","4325051splitHere46","dOut.write(<doubleQuotes46>GET /index.php HTTP/1.0\r\n\r\n<doubleQuotes46>.getBytes());<newline46mondego>"
"509splitHere46","4325051splitHere46","dOut.flush();<newline46mondego>dOut.close();<newline46mondego>"
"510splitHere46","4325158splitHere46","<rtexp<b>r</b>value>"
"511splitHere46","4325191splitHere46","input"
"512splitHere46","4325191splitHere46","UIInput"
"513splitHere46","4325191splitHere46","request"
"514splitHere46","4325191splitHere46","HttpServletRequest"
"515splitHere46","4325191splitHere46","if (input.isRendered()) {<newline46mondego>    String value = request.getParameter(input.getClientId());<newline46mondego>    if (value != null) {<newline46mondego>        input.setSubmittedValue(value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"516splitHere46","4325191splitHere46","null"
"517splitHere46","4325191splitHere46","command"
"518splitHere46","4325191splitHere46","UICommand"
"519splitHere46","4325191splitHere46","request"
"520splitHere46","4325191splitHere46","HttpServletRequest"
"521splitHere46","4325191splitHere46","ActionEvent"
"522splitHere46","4325191splitHere46","ActionEvent"
"523splitHere46","4325191splitHere46","if (command.isRendered()) {<newline46mondego>    String value = request.getParameter(command.getClientId());<newline46mondego>    if (value != null) {<newline46mondego>        command.queueEvent(new ActionEvent(command)); // Queue for INVOKE_ACTION.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"524splitHere46","4325191splitHere46","Renderer"
"525splitHere46","4325191splitHere46","facesContext.getViewRoot().encodeAll();<newline46mondego>"
"526splitHere46","4325198splitHere46","ResourceBundle.clearCache();     <newline46mondego>"
"527splitHere46","4325198splitHere46","Messages_en .clearCache();<newline46mondego>"
"528splitHere46","4325344splitHere46","public static <E extends Enum<E>> EnumSet<E> of(E e)<newline46mondego>"
"529splitHere46","4325344splitHere46","<E extends Enum<E>>"
"530splitHere46","4325344splitHere46","Bar"
"531splitHere46","4325344splitHere46","public class Bar<E extends Enum<E>> {<newline46mondego><newline46mondego>    private final E item;<newline46mondego><newline46mondego>    public E getItem(){<newline46mondego>        return item;<newline46mondego>    }<newline46mondego><newline46mondego>    public Bar(final E item){<newline46mondego>        this.item = item;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"532splitHere46","4325344splitHere46","from"
"533splitHere46","4325344splitHere46","with"
"534splitHere46","4325344splitHere46","public static <E2 extends Enum<E2>> Bar<E2> with(E2 item){<newline46mondego>    return new Bar<E2>(item);<newline46mondego>}<newline46mondego>"
"535splitHere46","4325344splitHere46","// e.g. this simple version<newline46mondego>Bar<MyEnum> bar = Bar.with(MyEnum.SOME_INSTANCE);<newline46mondego>// instead of the more verbose version:<newline46mondego>Bar<MyEnum> bar = new Bar<MyEnum>(MyEnum.SOME_INSTANCE);<newline46mondego>"
"536splitHere46","4325540splitHere46",".equals()"
"537splitHere46","4325540splitHere46","=="
"538splitHere46","4325540splitHere46","String"
"539splitHere46","4325540splitHere46","if ((s.getDeparturePort()).equals(hamburg)) {<newline46mondego>    System.out.println(s.toStringAdjusted());<newline46mondego>}<newline46mondego>"
"540splitHere46","4325540splitHere46","=="
"541splitHere46","4325540splitHere46",".equals()"
"542splitHere46","4325540splitHere46",".equals()"
"543splitHere46","4325540splitHere46","Object"
"544splitHere46","4325540splitHere46","int"
"545splitHere46","4325540splitHere46","double"
"546splitHere46","4325540splitHere46","char"
"547splitHere46","4325540splitHere46","=="
"548splitHere46","4325540splitHere46","hamburg.equals(s.getDeparturePort())"
"549splitHere46","4325866splitHere46","public class MyDecoratorClass {<newline46mondego>    private MyInterfaceWithManyMethods myInterface;<newline46mondego>}<newline46mondego>"
"550splitHere46","4325866splitHere46","public interface MyInterfaceWithManyMethods {<newline46mondego>    void method1();<newline46mondego>    void method2();<newline46mondego>    void method3();<newline46mondego>}<newline46mondego>"
"551splitHere46","4325866splitHere46","public class MyDecorator implements MyInterfaceWithManyMethods {<newline46mondego>    public void method1() {<newline46mondego>    }<newline46mondego>    public void method2() {<newline46mondego>    }<newline46mondego>    public void method3() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"552splitHere46","4325866splitHere46","public class MyDecorator {<newline46mondego><newline46mondego>    private final MyObject object = new MyObject();<newline46mondego><newline46mondego>    public void method1() {<newline46mondego>        object.method1();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method2() {<newline46mondego>        object.method2();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method3() {<newline46mondego>        object.method3();<newline46mondego>    }<newline46mondego><newline46mondego>    private class MyObject implements MyInterfaceWithManyMethods {<newline46mondego>        public void method1() {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public void method2() {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        public void method3() {<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"553splitHere46","4325866splitHere46","public class MyDecorator {<newline46mondego><newline46mondego><newline46mondego>    public void method1() {<newline46mondego>        object.method1();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method2() {<newline46mondego>        object.method2();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method3() {<newline46mondego>        object.method3();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"554splitHere46","4325866splitHere46","public class MyDecorator {<newline46mondego><newline46mondego><newline46mondego>    private MyInterfaceWithManyMethods object;<newline46mondego><newline46mondego>    public void method1() {<newline46mondego>        object.method1();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method2() {<newline46mondego>        object.method2();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method3() {<newline46mondego>        object.method3();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"555splitHere46","4325866splitHere46","public class MyDecorator {<newline46mondego><newline46mondego><newline46mondego>    private MyInterfaceWithManyMethods object;<newline46mondego><newline46mondego>    public MyDecorator(MyInterfaceWithManyMethods object) {<newline46mondego>        this.object = object;<newline46mondego>    }<newline46mondego><newline46mondego>    public void method1() {<newline46mondego>        object.method1();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method2() {<newline46mondego>        object.method2();<newline46mondego>    }<newline46mondego><newline46mondego>    public void method3() {<newline46mondego>        object.method3();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"556splitHere46","4325996splitHere46","javac"
"557splitHere46","4325996splitHere46","javac -encoding utf8 MyCode.java<newline46mondego>"
"558splitHere46","4325996splitHere46","<project><newline46mondego>  ...<newline46mondego>  <properties><newline46mondego>    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><newline46mondego>  </properties><newline46mondego>  ...<newline46mondego></project><newline46mondego>"
"559splitHere46","4325996splitHere46","Ã©"
"560splitHere46","4325996splitHere46","\u00e9"
"561splitHere46","4326029splitHere46","<property file=<doubleQuotes46>general.properties<doubleQuotes46> /><newline46mondego>"
"562splitHere46","4326029splitHere46","svnant.version=1.0.0<newline46mondego>lib.dir=${ant.home}/lib<newline46mondego>"
"563splitHere46","4326029splitHere46","<property file=<doubleQuotes46>c:\\fileToRead<doubleQuotes46> /><newline46mondego>"
"564splitHere46","4326029splitHere46","device=test<newline46mondego>"
"565splitHere46","4326066splitHere46","public class AddressHandler implements Handles<Event>{<newline46mondego>    public void handle(Event e){<newline46mondego>      if(e instanceof AddressDiscarded){<newline46mondego>         handleDiscarded(e);<newline46mondego>      } else if(e instanceof AddressChanged){<newline46mondego>         handleChanged(e);<newline46mondego>      }<newline46mondego>    }<newline46mondego>    public void handleDiscarded(AddressDiscarded e){}<newline46mondego>    public void handleChanged(AddressChanged e){}<newline46mondego>}<newline46mondego>"
"566splitHere46","4326505splitHere46","<validation-mode>CALLBACK</validation-mode><newline46mondego>"
"567splitHere46","4326505splitHere46","persistence.xml"
"568splitHere46","4326542splitHere46","@XmlType(name = <doubleQuotes46>SequenceType<doubleQuotes46>)<newline46mondego>public class Sequence {<newline46mondego><newline46mondego>    private String md5;<newline46mondego>    private String sequence;<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    public String getMd5() {<newline46mondego>        return md5;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlValue<newline46mondego>    public String getSequence() {<newline46mondego>        return sequence;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"569splitHere46","4326762splitHere46","Node<newline46mondego>   id<newline46mondego>   position<newline46mondego>   foodTax<newline46mondego>   hasTreasureMap<newline46mondego>   currentPlayerID /*Refers to Player table*/<newline46mondego><newline46mondego>Treasure<newline46mondego>   id<newline46mondego>   nodeID /* refers to Node table*/<newline46mondego>   value<newline46mondego><newline46mondego>Player<newline46mondego>   id<newline46mondego>   /*unrelated fields such as wealth, strength, start*/<newline46mondego>   position /*refers to ID in Node*/<newline46mondego>   currentGoal /*refers to ID in Node*/<newline46mondego><newline46mondego>PlayerTreasures<newline46mondego>   playerID /* refers to Player table*/<newline46mondego>   treasureID /* refers to Treasure table*/<newline46mondego><newline46mondego>Paths<newline46mondego>   nodeID /*refers to NodeID - I assume that a path is made of Nodes*/<newline46mondego>   sequenceInPath /*I assume that the ordering in a path matters*/<newline46mondego>   playerID /*refers to the player who owns this path*/<newline46mondego>"
"570splitHere46","4326762splitHere46","Telescope"
"571splitHere46","4327064splitHere46","Filter"
"572splitHere46","4327064splitHere46","Filter"
"573splitHere46","4327064splitHere46","PhaseListener"
"574splitHere46","4327312splitHere46","while"
"575splitHere46","4327312splitHere46","for"
"576splitHere46","4327312splitHere46","for each line in the file:<newline46mondego>    initialize an empty Map<String, Integer><newline46mondego>    for each character in the line:<newline46mondego>        if the map contains the character:<newline46mondego>            increment the count for that char in the map<newline46mondego>        else:<newline46mondego>            add the character to the map with a count of 1<newline46mondego>    iterate through the map and find the highest values, and print their keys<newline46mondego>"
"577splitHere46","4327312splitHere46","for"
"578splitHere46","4327312splitHere46","lettercount = new HashMap<Character, Integer>();<newline46mondego>for (int i = 0; i < str.length(); i++) {<newline46mondego>    char c = str.charAt(i);                 <newline46mondego>    if (Character.isLetter(c)){<newline46mondego>        if(lettercount.containsKey(c)){       <newline46mondego>            lettercount.get(c)++;                         <newline46mondego>        }else<newline46mondego>            lettercount.put(c,1);                            <newline46mondego>    }                          <newline46mondego>}<newline46mondego>// here we find the max occurances<newline46mondego>int maxCount = 0;<newline46mondego>for(Integer count: lettercount.values())<newline46mondego>    if (count > maxCount) maxCount = count;<newline46mondego>// now we find the entries that had that many occurances<newline46mondego>String characters = <doubleQuotes46><doubleQuotes46>;<newline46mondego>for (Entry<Character, Integer> entry: lettercount.entrySet()) {<newline46mondego>    if (entry.getValue().equals(maxCount))<newline46mondego>        characters += entry.getKey();<newline46mondego>}<newline46mondego>"
"579splitHere46","4327312splitHere46","characters"
"580splitHere46","4327312splitHere46","maxCount"
"581splitHere46","4327490splitHere46","config"
"582splitHere46","4327490splitHere46","getClass().getResourceAsStream(<doubleQuotes46>/Configuration.xml<doubleQuotes46>)"
"583splitHere46","4327651splitHere46","new File(parent, child)<newline46mondego>"
"584splitHere46","4327651splitHere46","string..."
"585splitHere46","4327704splitHere46","@Value"
"586splitHere46","4327704splitHere46","@Value"
"587splitHere46","4327704splitHere46","public abstract class AbstractController { <newline46mondego>    protected String portletBaseViewName = <doubleQuotes46><doubleQuotes46>;      <newline46mondego><newline46mondego>    public void setPortletBaseViewName(String portletBaseViewName) { <newline46mondego>        this.portletBaseViewName = portletBaseViewName; <newline46mondego>    } <newline46mondego>} <newline46mondego><newline46mondego>@Controller  <newline46mondego>@RequestMapping(<doubleQuotes46>VIEW<doubleQuotes46>)  <newline46mondego>public class ReservationOfBooksViewController extends AbstractController{  <newline46mondego>    public ReservationOfBooksViewController() {<newline46mondego>        this.portletBaseViewName = <doubleQuotes46>reservationOfBooks<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"588splitHere46","4327793splitHere46","[^=,\\da-zA-Z\\s]<newline46mondego>"
"589splitHere46","4327793splitHere46","="
"590splitHere46","4327793splitHere46",","
"591splitHere46","4327793splitHere46","argsToBeFiltered.replaceAll(<doubleQuotes46>[^=,\\da-zA-Z]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"592splitHere46","4327838splitHere46","return getHashMap((HashMap<String, Object>) entry.getValue(), key);<newline46mondego>"
"593splitHere46","4327838splitHere46","null"
"594splitHere46","4327838splitHere46","HashMap<String, Object> result = getHashMap((HashMap<String, Object>) entry.getValue(), key);<newline46mondego>if (result != null)<newline46mondego>  return result;<newline46mondego>"
"595splitHere46","4328165splitHere46","Collection"
"596splitHere46","4328165splitHere46","List<String> keyList = new ArrayList<String>(map.keySet());<newline46mondego>List<String> valueList = new ArrayList<String>(map.values());<newline46mondego>"
"597splitHere46","4328193splitHere46","ctrl + break"
"598splitHere46","4328193splitHere46","kill -3 <pid>"
"599splitHere46","4328557splitHere46","int a, b, c, d, e = 4;<newline46mondego>"
"600splitHere46","4328557splitHere46","int[] a, b, c, d, e = new int[4];<newline46mondego>"
"601splitHere46","4328557splitHere46","int[] a=new int[4], b=new int[4], etc...<newline46mondego>"
"602splitHere46","4328584splitHere46","<bean>"
"603splitHere46","4328584splitHere46","@Controller <newline46mondego>@RequestMapping(value=<doubleQuotes46>/test<doubleQuotes46>) <newline46mondego>public class TestController { <newline46mondego>    private String viewName = <doubleQuotes46>newtest<doubleQuotes46>;<newline46mondego><newline46mondego>    public void setViewName(String viewName) {<newline46mondego>        this.viewName = viewName;<newline46mondego>    }<newline46mondego><newline46mondego>    @RequestMapping(method=RequestMethod.GET) <newline46mondego>    public String getCreateForm(Model model) { <newline46mondego>        model.addAttribute(new AccountBean()); <newline46mondego>        return viewName; <newline46mondego>    } <newline46mondego>}<newline46mondego>"
"604splitHere46","4328584splitHere46","<bean id = <doubleQuotes46>testController<doubleQuotes46> class = <doubleQuotes46>TestController<doubleQuotes46>><newline46mondego>    <property name = <doubleQuotes46>viewName<doubleQuotes46> value = <doubleQuotes46>oldtest<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"605splitHere46","4328584splitHere46","@Value"
"606splitHere46","4328584splitHere46","@Value(<doubleQuotes46>#{testViewName}<doubleQuotes46>) private String viewName;<newline46mondego>"
"607splitHere46","4328584splitHere46","<bean id = <doubleQuotes46>testViewName<doubleQuotes46> class = <doubleQuotes46>java.lang.String<doubleQuotes46>><newline46mondego>    <constructor-arg value = <doubleQuotes46>oldtest<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"608splitHere46","4328584splitHere46","@Value(<doubleQuotes46>${testViewName}<doubleQuotes46>) private String viewName;<newline46mondego>"
"609splitHere46","4328584splitHere46","<context:property-placeholder location = <doubleQuotes46>viewnames<doubleQuotes46> /><newline46mondego>"
"610splitHere46","4328584splitHere46","viewnames.properties"
"611splitHere46","4328584splitHere46","testViewName=oldtest<newline46mondego>"
"612splitHere46","4328788splitHere46","@ElementCollection"
"613splitHere46","4328788splitHere46","@ElementCollection<newline46mondego>@CollectionTable(name = <doubleQuotes46>Recipes<doubleQuotes46>, <newline46mondego>    joinColumns = @JoinColumn(name = <doubleQuotes46>product_id<doubleQuotes46>))<newline46mondego>@MapKeyJoinColumn(name = <doubleQuotes46>material_id<doubleQuotes46>)<newline46mondego>@Column(name = <doubleQuotes46>count<doubleQuotes46>)<newline46mondego>private Map<Material, Integer> recipe;<newline46mondego>"
"614splitHere46","4328788splitHere46","Integer"
"615splitHere46","4328890splitHere46","public class Test {<newline46mondego><newline46mondego>    enum Direction {<newline46mondego>        Right,<newline46mondego>        Up,<newline46mondego>        Left,<newline46mondego>        Down<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String... args) throws IOException {<newline46mondego><newline46mondego>        BufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);<newline46mondego><newline46mondego>        int rgb = Color.BLACK.getRGB();<newline46mondego><newline46mondego>        Point p = new Point(50, 50);<newline46mondego>        Direction d = Direction.Right;<newline46mondego>        int currentSegmentLength = 1;<newline46mondego><newline46mondego><newline46mondego>        for (int i = 0; i < 100; i += 2) {<newline46mondego><newline46mondego>            paintSegment(image, rgb, p, d, currentSegmentLength);<newline46mondego>            d = nextSegmentDirection(d);<newline46mondego><newline46mondego>            paintSegment(image, rgb, p, d, currentSegmentLength);<newline46mondego>            d = nextSegmentDirection(d);<newline46mondego><newline46mondego>            currentSegmentLength++;<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        ImageIO.write(image, <doubleQuotes46>png<doubleQuotes46>, new File(<doubleQuotes46>test.png<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    private static void paintSegment(BufferedImage image, int rgb, Point p,<newline46mondego>            Direction d, int currentSegmentLength) {<newline46mondego><newline46mondego>        for (int s = 0; s < currentSegmentLength; s++) {<newline46mondego>            image.setRGB(p.x, p.y, rgb);<newline46mondego><newline46mondego>            switch (d) {<newline46mondego>            case Right: p.x++; break;<newline46mondego>            case Up:    p.y--; break;<newline46mondego>            case Left:  p.x--; break;<newline46mondego>            case Down:  p.y++; break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static Direction nextSegmentDirection(Direction d) {<newline46mondego>        switch (d) {<newline46mondego>        case Right: return Direction.Up;<newline46mondego>        case Up:    return Direction.Left;<newline46mondego>        case Left:  return Direction.Down;<newline46mondego>        case Down:  return Direction.Right;<newline46mondego><newline46mondego>        default: throw new RuntimeException(<doubleQuotes46>never here<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"616splitHere46","4328969splitHere46","c:set"
"617splitHere46","4328969splitHere46","<html xmlns:c=<doubleQuotes46>http://java.sun.com/jsp/jstl<doubleQuotes46> ...><newline46mondego>...<newline46mondego><c:set var=<doubleQuotes46>pageTitle<doubleQuotes46> value=<doubleQuotes46>#{rushmore.president}PageTitle<doubleQuotes46> /><newline46mondego><span class=<doubleQuotes46>presidentPageTitle<doubleQuotes46>>#{msgs[pageTitle]}</span><newline46mondego>"
"618splitHere46","4329039splitHere46","@ValidCollection"
"619splitHere46","4329039splitHere46","ValidCollectionValidator"
"620splitHere46","4329039splitHere46","Validator"
"621splitHere46","4329039splitHere46","ValidCollectionValidator"
"622splitHere46","4329039splitHere46","ConstraintValidatorFactory"
"623splitHere46","4329039splitHere46","public @interface ValidCollection {<newline46mondego><newline46mondego>    Class<?> elementType();<newline46mondego><newline46mondego>    /* Specify constraints when collection element type is NOT constrained <newline46mondego>     * validator.getConstraintsForClass(elementType).isBeanConstrained(); */<newline46mondego>    Class<?>[] constraints() default {};<newline46mondego><newline46mondego>    boolean allViolationMessages() default true;<newline46mondego><newline46mondego>    String message() default <doubleQuotes46>{ValidCollection.message}<doubleQuotes46>;<newline46mondego><newline46mondego>    Class<?>[] groups() default {};<newline46mondego><newline46mondego>    Class<? extends Payload>[] payload() default {};<newline46mondego><newline46mondego>}<newline46mondego>"
"624splitHere46","4329039splitHere46","public class ValidCollectionValidator implements ConstraintValidator<ValidCollection, Collection>, ValidatorContextAwareConstraintValidator {<newline46mondego><newline46mondego>    private static final Logger logger = LoggerFactory.getLogger(ValidCollectionValidator.class);<newline46mondego><newline46mondego>    private ValidatorContext validatorContext;<newline46mondego><newline46mondego>    private Class<?> elementType;<newline46mondego>    private Class<?>[] constraints;<newline46mondego>    private boolean allViolationMessages;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setValidatorContext(ValidatorContext validatorContext) {<newline46mondego>        this.validatorContext = validatorContext;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void initialize(ValidCollection constraintAnnotation) {<newline46mondego>        elementType = constraintAnnotation.elementType();<newline46mondego>        constraints = constraintAnnotation.constraints();<newline46mondego>        allViolationMessages = constraintAnnotation.allViolationMessages();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean isValid(Collection collection, ConstraintValidatorContext context) {<newline46mondego>        boolean valid = true;<newline46mondego><newline46mondego>        if(collection == null) {<newline46mondego>            //null collection cannot be validated<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>        Validator validator = validatorContext.getValidator();<newline46mondego><newline46mondego>        boolean beanConstrained = validator.getConstraintsForClass(elementType).isBeanConstrained();<newline46mondego><newline46mondego>        for(Object element : collection) {<newline46mondego>            Set<ConstraintViolation<?>> violations = new HashSet<ConstraintViolation<?>> ();<newline46mondego><newline46mondego>            if(beanConstrained) {<newline46mondego>                boolean hasValidCollectionConstraint = hasValidCollectionConstraint(elementType);<newline46mondego>                if(hasValidCollectionConstraint) {<newline46mondego>                    // elementType has @ValidCollection constraint<newline46mondego>                    violations.addAll(validator.validate(element));<newline46mondego>                } else {<newline46mondego>                    violations.addAll(validator.validate(element));<newline46mondego>                }<newline46mondego>            } else {<newline46mondego>                for(Class<?> constraint : constraints) {<newline46mondego>                    String propertyName = constraint.getSimpleName();<newline46mondego>                    propertyName = Introspector.decapitalize(propertyName);<newline46mondego>                    violations.addAll(validator.validateValue(CollectionElementBean.class, propertyName, element));<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            if(!violations.isEmpty()) {<newline46mondego>                valid = false;<newline46mondego>            }<newline46mondego><newline46mondego>            if(allViolationMessages) { //TODO improve<newline46mondego>                for(ConstraintViolation<?> violation : violations) {<newline46mondego>                    logger.debug(violation.getMessage());<newline46mondego>                    ConstraintViolationBuilder violationBuilder = context.buildConstraintViolationWithTemplate(violation.getMessage());<newline46mondego>                    violationBuilder.addConstraintViolation();<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return valid;<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean hasValidCollectionConstraint(Class<?> beanType) {<newline46mondego>        BeanDescriptor beanDescriptor = validatorContext.getValidator().getConstraintsForClass(beanType);<newline46mondego>        boolean isBeanConstrained = beanDescriptor.isBeanConstrained();<newline46mondego>        if(!isBeanConstrained) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        Set<ConstraintDescriptor<?>> constraintDescriptors = beanDescriptor.getConstraintDescriptors(); <newline46mondego>        for(ConstraintDescriptor<?> constraintDescriptor : constraintDescriptors) {<newline46mondego>            if(constraintDescriptor.getAnnotation().annotationType().getName().equals(ValidCollection.class.getName())) {<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        Set<PropertyDescriptor> propertyDescriptors = beanDescriptor.getConstrainedProperties();<newline46mondego>        for(PropertyDescriptor propertyDescriptor : propertyDescriptors) {<newline46mondego>            constraintDescriptors = propertyDescriptor.getConstraintDescriptors();<newline46mondego>            for(ConstraintDescriptor<?> constraintDescriptor : constraintDescriptors) {<newline46mondego>                if(constraintDescriptor.getAnnotation().annotationType().getName().equals(ValidCollection.class.getName())) {<newline46mondego>                    return true;<newline46mondego>                }<newline46mondego>            }    <newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"625splitHere46","4329039splitHere46","public interface ValidatorContextAwareConstraintValidator {<newline46mondego><newline46mondego>    void setValidatorContext(ValidatorContext validatorContext);<newline46mondego><newline46mondego>}<newline46mondego>"
"626splitHere46","4329039splitHere46","public class CollectionElementBean {<newline46mondego><newline46mondego>    /* add more properties on-demand */<newline46mondego>    private Object notNull;<newline46mondego>    private String notBlank;<newline46mondego>    private String email;<newline46mondego><newline46mondego>    protected CollectionElementBean() {<newline46mondego>    }<newline46mondego><newline46mondego>    @NotNull<newline46mondego>    public Object getNotNull() { return notNull; }<newline46mondego>    public void setNotNull(Object notNull) { this.notNull = notNull; }<newline46mondego><newline46mondego>    @NotBlank<newline46mondego>    public String getNotBlank() { return notBlank; }<newline46mondego>    public void setNotBlank(String notBlank) { this.notBlank = notBlank; }<newline46mondego><newline46mondego>    @Email<newline46mondego>    public String getEmail() { return email; }<newline46mondego>    public void setEmail(String email) { this.email = email; }<newline46mondego><newline46mondego>}<newline46mondego>"
"627splitHere46","4329039splitHere46","public class ConstraintValidatorFactoryImpl implements ConstraintValidatorFactory {<newline46mondego><newline46mondego>    private ValidatorContext validatorContext;<newline46mondego><newline46mondego>    public ConstraintValidatorFactoryImpl(ValidatorContext nativeValidator) {<newline46mondego>        this.validatorContext = nativeValidator;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public <T extends ConstraintValidator<?, ?>> T getInstance(Class<T> key) {<newline46mondego>        T instance = null;<newline46mondego><newline46mondego>        try {<newline46mondego>            instance = key.newInstance();<newline46mondego>        } catch (Exception e) { <newline46mondego>            // could not instantiate class<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>        if(ValidatorContextAwareConstraintValidator.class.isAssignableFrom(key)) {<newline46mondego>            ValidatorContextAwareConstraintValidator validator = (ValidatorContextAwareConstraintValidator) instance;<newline46mondego>            validator.setValidatorContext(validatorContext);<newline46mondego>        }<newline46mondego><newline46mondego>        return instance;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"628splitHere46","4329039splitHere46","public class Employee {<newline46mondego><newline46mondego>    private String firstName;<newline46mondego>    private String lastName;<newline46mondego>    private List<String> emailAddresses;<newline46mondego><newline46mondego>    @NotNull<newline46mondego>    public String getFirstName() { return firstName; }<newline46mondego>    public void setFirstName(String firstName) { this.firstName = firstName; }<newline46mondego><newline46mondego>    public String getLastName() { return lastName; }<newline46mondego>    public void setLastName(String lastName) { this.lastName = lastName; }<newline46mondego><newline46mondego>    @ValidCollection(elementType=String.class, constraints={Email.class})<newline46mondego>    public List<String> getEmailAddresses() { return emailAddresses; }<newline46mondego>    public void setEmailAddresses(List<String> emailAddresses) { this.emailAddresses = emailAddresses; }<newline46mondego><newline46mondego>}<newline46mondego>"
"629splitHere46","4329039splitHere46","public class Team {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private Set<Employee> members;<newline46mondego><newline46mondego>    public String getName() { return name; }<newline46mondego>    public void setName(String name) { this.name = name; }<newline46mondego><newline46mondego>    @ValidCollection(elementType=Employee.class)<newline46mondego>    public Set<Employee> getMembers() { return members; }<newline46mondego>    public void setMembers(Set<Employee> members) { this.members = members; }<newline46mondego><newline46mondego>}<newline46mondego>"
"630splitHere46","4329039splitHere46","public class ShoppingCart {<newline46mondego><newline46mondego>    private List<String> items;<newline46mondego><newline46mondego>    @ValidCollection(elementType=String.class, constraints={NotBlank.class})<newline46mondego>    public List<String> getItems() { return items; }<newline46mondego>    public void setItems(List<String> items) { this.items = items; }<newline46mondego><newline46mondego>}<newline46mondego>"
"631splitHere46","4329039splitHere46","public class ValidCollectionTest {<newline46mondego><newline46mondego>    private static final Logger logger = LoggerFactory.getLogger(ValidCollectionTest.class);<newline46mondego><newline46mondego>    private ValidatorFactory validatorFactory;<newline46mondego><newline46mondego>    @BeforeClass<newline46mondego>    public void createValidatorFactory() {<newline46mondego>        validatorFactory = Validation.buildDefaultValidatorFactory();<newline46mondego>    }<newline46mondego><newline46mondego>    private Validator getValidator() {<newline46mondego>        ValidatorContext validatorContext = validatorFactory.usingContext();<newline46mondego>        validatorContext.constraintValidatorFactory(new ConstraintValidatorFactoryImpl(validatorContext));<newline46mondego>        Validator validator = validatorContext.getValidator();<newline46mondego>        return validator;<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void beanConstrained() {<newline46mondego>        Employee se = new Employee();<newline46mondego>        se.setFirstName(<doubleQuotes46>Santiago<doubleQuotes46>);<newline46mondego>        se.setLastName(<doubleQuotes46>Ennis<doubleQuotes46>);<newline46mondego>        se.setEmailAddresses(new ArrayList<String> ());<newline46mondego>        se.getEmailAddresses().add(<doubleQuotes46>segmail.com<doubleQuotes46>);<newline46mondego>        Employee me = new Employee();<newline46mondego>        me.setEmailAddresses(new ArrayList<String> ());<newline46mondego>        me.getEmailAddresses().add(<doubleQuotes46>me@gmail.com<doubleQuotes46>);<newline46mondego><newline46mondego>        Team team = new Team();<newline46mondego>        team.setMembers(new HashSet<Employee>());<newline46mondego>        team.getMembers().add(se);<newline46mondego>        team.getMembers().add(me);<newline46mondego><newline46mondego>        Validator validator = getValidator();<newline46mondego><newline46mondego>        Set<ConstraintViolation<Team>> violations = validator.validate(team);<newline46mondego>        for(ConstraintViolation<Team> violation : violations) {<newline46mondego>            logger.info(violation.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void beanNotConstrained() {<newline46mondego>        ShoppingCart cart = new ShoppingCart();<newline46mondego>        cart.setItems(new ArrayList<String> ());<newline46mondego>        cart.getItems().add(<doubleQuotes46>JSR-303 Book<doubleQuotes46>);<newline46mondego>        cart.getItems().add(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>        Validator validator = getValidator();<newline46mondego><newline46mondego>        Set<ConstraintViolation<ShoppingCart>> violations = validator.validate(cart, Default.class);<newline46mondego>        for(ConstraintViolation<ShoppingCart> violation : violations) {<newline46mondego>            logger.info(violation.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"632splitHere46","4329039splitHere46","02:16:37,581  INFO main validation.ValidCollectionTest:66 - {ValidCollection.message}<newline46mondego>02:16:38,303  INFO main validation.ValidCollectionTest:66 - may not be null<newline46mondego>02:16:39,092  INFO main validation.ValidCollectionTest:66 - not a well-formed email address<newline46mondego><newline46mondego>02:17:46,460  INFO main validation.ValidCollectionTest:81 - may not be empty<newline46mondego>02:17:47,064  INFO main validation.ValidCollectionTest:81 - {ValidCollection.message}<newline46mondego>"
"633splitHere46","4329039splitHere46","constraints"
"634splitHere46","4329039splitHere46","@ValidCollection"
"635splitHere46","4329039splitHere46","constraints"
"636splitHere46","4329323splitHere46","char"
"637splitHere46","4329323splitHere46","char"
"638splitHere46","4329323splitHere46","int"
"639splitHere46","4329323splitHere46","Character.getNumericValue()"
"640splitHere46","4329637splitHere46","//Math.sqrt((x1-x2)*(x1-x2)-(y1-y2)*(y1-y2)), go back and read chapter 7<newline46mondego>"
"641splitHere46","4329637splitHere46","Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))<newline46mondego>"
"642splitHere46","4329637splitHere46","i == j"
"643splitHere46","4330002splitHere46","DataInputStream.readChar()"
"644splitHere46","4330002splitHere46","InputStreamReader"
"645splitHere46","4330088splitHere46","public class ThrowyWebAppContext extends WebAppContext {<newline46mondego>    @Override<newline46mondego>    protected void doStart() throws Exception {<newline46mondego>        super.doStart();<newline46mondego>        if (getUnavailableException() != null) {<newline46mondego>            throw (Exception) getUnavailableException();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"646splitHere46","4330091splitHere46","<plugin><newline46mondego>    <groupId>org.codehaus.mojo</groupId><newline46mondego>    <artifactId>buildnumber-maven-plugin</artifactId><newline46mondego>    <version>1.0-beta-4</version><newline46mondego>    <executions><newline46mondego>        <execution><newline46mondego>            <id>generate-buildnumber</id><newline46mondego>                <phase>validate</phase><newline46mondego>            <goals><newline46mondego>                <goal>create</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>                <useLastCommittedRevision>true</useLastCommittedRevision><newline46mondego>                <buildNumberPropertyName>buildRevision</buildNumberPropertyName><newline46mondego>            </configuration><newline46mondego>        </execution><newline46mondego>        <execution><newline46mondego>            <id>generate-timestamp</id><newline46mondego>            <phase>validate</phase><newline46mondego>            <goals><newline46mondego>                <goal>create</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>                <format>{0,date,yyyy-MM-dd HH:mm:ss}</format><newline46mondego>                <items><newline46mondego>                    <item>timestamp</item><newline46mondego>                </items><newline46mondego>                <buildNumberPropertyName>buildDateTime</buildNumberPropertyName><newline46mondego>            </configuration><newline46mondego>        </execution><newline46mondego>    </executions><newline46mondego></plugin><newline46mondego>"
"647splitHere46","4330113splitHere46","AccountImpl"
"648splitHere46","4330113splitHere46","AccountServant"
"649splitHere46","4330113splitHere46","AccountServant as = new AccountServant(accNr);"
"650splitHere46","4330113splitHere46","org.omg.CORBA.Object o = rootPOA.servant_to_reference( as );"
"651splitHere46","4330113splitHere46","Account"
"652splitHere46","4330113splitHere46","AccountHelper"
"653splitHere46","4330113splitHere46","Account acc = AccountHelper.narrow(o);"
"654splitHere46","4330113splitHere46","return acc;"
"655splitHere46","4330113splitHere46","AccountServant"
"656splitHere46","4330113splitHere46","BankServant"
"657splitHere46","4330113splitHere46","Account"
"658splitHere46","4330292splitHere46","day"
"659splitHere46","4330412splitHere46","Assert.assertTrue(driver.getTitle().matches(<doubleQuotes46>*TST-*[0-9]{5}<doubleQuotes46>));<newline46mondego>"
"660splitHere46","4330412splitHere46","Assert.assertTrue(driver.getTitle().matches(<doubleQuotes46>.*TST-\\d{5}.*<doubleQuotes46>));<newline46mondego>"
"661splitHere46","4330434splitHere46","if (rCode[position] == code)<newline46mondego>"
"662splitHere46","4330434splitHere46","if (rCode[position].equals(code))<newline46mondego>"
"663splitHere46","4330511splitHere46","Xlint:overrides"
"664splitHere46","4330511splitHere46","@Override"
"665splitHere46","4330511splitHere46","@Override"
"666splitHere46","4330511splitHere46","Xlint"
"667splitHere46","4330615splitHere46","public interface TheInterfaceIWant {<newline46mondego>  int length();<newline46mondego>  void quack();<newline46mondego>}<newline46mondego>"
"668splitHere46","4330615splitHere46","final Object aDuck = ...;<newline46mondego>TheInterfaceIWant aDuckWrapper = (TheInterfaceIWant) Proxy.newProxyInstance(<newline46mondego>    TheInterfaceIWant.class.getClassLoader(),<newline46mondego>    new Class[] { TheInterfaceIWant.class },<newline46mondego>    new InvocationHandler() {<newline46mondego>      public Object invoke(<newline46mondego>          Object proxy, Method method, Object[] args)<newline46mondego>          throws Throwable {<newline46mondego>        return aDuck.getClass().getMethod(<newline46mondego>            method.getName(), method.getParameterTypes()).invoke(aDuck, args);<newline46mondego>      }<newline46mondego>    });<newline46mondego>"
"669splitHere46","4330615splitHere46","if (aDuckWrapper.length() > 0) {<newline46mondego>  aDuckWrapper.quack();<newline46mondego>}<newline46mondego>"
"670splitHere46","4330615splitHere46","import java.lang.reflect.*;<newline46mondego><newline46mondego>public class Duck {<newline46mondego><newline46mondego>  // The interface we use to access the duck typed object.<newline46mondego>  public interface TheInterfaceIWant {<newline46mondego>    int length();<newline46mondego>    void quack();<newline46mondego>  }<newline46mondego><newline46mondego>  // The underlying instance that does not implement TheInterfaceIWant!<newline46mondego>  static final class Foo {<newline46mondego>    public int length() { return 4; }<newline46mondego>    public void quack() { System.out.println(<doubleQuotes46>Quack<doubleQuotes46>); }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    // Create an instance but cast away all useful type info.<newline46mondego>    final Object aDuck = new Foo();<newline46mondego><newline46mondego>    TheInterfaceIWant aDuckWrapper = (TheInterfaceIWant) Proxy.newProxyInstance(<newline46mondego>        TheInterfaceIWant.class.getClassLoader(),<newline46mondego>        new Class[] { TheInterfaceIWant.class },<newline46mondego>        new InvocationHandler() {<newline46mondego>          public Object invoke(<newline46mondego>              Object proxy, Method method, Object[] args)<newline46mondego>              throws Throwable {<newline46mondego>            return aDuck.getClass().getMethod(<newline46mondego>                method.getName(), method.getParameterTypes()).invoke(aDuck, args);<newline46mondego>          }<newline46mondego>        });<newline46mondego><newline46mondego>    for (int n = aDuckWrapper.length(); --n >= 0;) {<newline46mondego>      // Calling aDuck.quack() here would be invalid since its an Object.<newline46mondego>      aDuckWrapper.quack();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"671splitHere46","4330811splitHere46","<doubleQuotes46>xmlns:xs=\<doubleQuotes46>http://www.w3.org/2001/XMLSchema\<doubleQuotes46><doubleQuotes46> +<newline46mondego> <doubleQuotes46>xmlns:mime=\<doubleQuotes46>http://schemas.xmlsoap.org/wsdl/mime/\<doubleQuotes46>  <doubleQuotes46> +<newline46mondego>"
"672splitHere46","4330925splitHere46","@Entity<newline46mondego>@Table(name=<doubleQuotes46>PERSON<doubleQuotes46>)<newline46mondego>@Inheritance(strategy=InheritanceType.SINGLE_TABLE)<newline46mondego>@DiscriminatorColumn(name=<doubleQuotes46>GENDER<doubleQuotes46>, discriminatorType=DiscriminatorType.STRING, length=6)<newline46mondego>public abstract class Person implements Serializable {<newline46mondego>    private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>    @Id<newline46mondego>    @SequenceGenerator(name=<doubleQuotes46>PERSON_PERSONID_GENERATOR<doubleQuotes46>, sequenceName=<doubleQuotes46>PERSON_ID_SEQ<doubleQuotes46>)<newline46mondego>    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=<doubleQuotes46>PERSON_PERSONID_GENERATOR<doubleQuotes46>)<newline46mondego>    @Column(name=<doubleQuotes46>PERSON_ID<doubleQuotes46>, updatable=false, unique=true, nullable=false, precision=22)<newline46mondego>    private long personId;<newline46mondego><newline46mondego>    @Column(nullable=false, length=32)<newline46mondego>    private String surname;<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>GIVEN_NAME<doubleQuotes46>, nullable=false, length=32)<newline46mondego>    private String givenName;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>FEMALE<doubleQuotes46>)<newline46mondego>public class Daughter extends Person implements Serializable {<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>NUMBER_OF_DOLLS<doubleQuotes46>, precision=22)<newline46mondego>    private int numberOfDolls;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>MALE<doubleQuotes46>)<newline46mondego>public class Son extends Person implements Serializable {<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>NUMBER_OF_TOY_CARS<doubleQuotes46>, precision=22)<newline46mondego>    private Integer numberOfToyCars;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// JUnit test method<newline46mondego>public void testInheritance() {<newline46mondego>    EntityManager em = createNewEntityManagerInstance();<newline46mondego><newline46mondego>    EntityTransaction tx = em.getTransaction();<newline46mondego>    tx.begin();<newline46mondego>    Daughter d = new Daughter();<newline46mondego>    d.setGivenName(<doubleQuotes46>Sue<doubleQuotes46>);<newline46mondego>    d.setSurname(<doubleQuotes46>Smith<doubleQuotes46>);<newline46mondego>    d.setNumberOfDolls(5);<newline46mondego>    em.persist(d);<newline46mondego>    Son s = new Son();<newline46mondego>    s.setGivenName(<doubleQuotes46>Joe<doubleQuotes46>);<newline46mondego>    s.setSurname(<doubleQuotes46>Smith<doubleQuotes46>);<newline46mondego>    s.setNumberOfToyCars(8);<newline46mondego>    em.persist(s);<newline46mondego>    tx.commit();<newline46mondego><newline46mondego>    Query q;<newline46mondego>    List<?> personList;<newline46mondego>    Person p;<newline46mondego><newline46mondego>    q = em.createQuery(<doubleQuotes46>SELECT p FROM Person p WHERE TYPE(p) = Daughter<doubleQuotes46>);<newline46mondego>    personList = q.getResultList();<newline46mondego>    assertEquals(1, personList.size());<newline46mondego>    p = (Person)personList.get(0);<newline46mondego>    System.out.println(<newline46mondego>        <doubleQuotes46>This Daughter is: <doubleQuotes46> + p.getGivenName() + <doubleQuotes46> <doubleQuotes46> + p.getSurname());<newline46mondego>    q = em.createQuery(<doubleQuotes46>SELECT p FROM Person p WHERE TYPE(p) = Son<doubleQuotes46>);<newline46mondego>    personList = q.getResultList();<newline46mondego>    assertEquals(1, personList.size());<newline46mondego>    p = (Person)personList.get(0);<newline46mondego>    System.out.println(<newline46mondego>        <doubleQuotes46>This Son is: <doubleQuotes46> + p.getGivenName() + <doubleQuotes46> <doubleQuotes46> + p.getSurname());<newline46mondego>    q = em.createQuery(<doubleQuotes46>SELECT p FROM Person p<doubleQuotes46>);<newline46mondego>    personList = q.getResultList();<newline46mondego>    assertEquals(2, personList.size());<newline46mondego>    for (Object o : personList) {<newline46mondego>        assertTrue(o instanceof Person);<newline46mondego>        p = (Person)o;<newline46mondego>        System.out.println(<newline46mondego>            <doubleQuotes46>This person is: <doubleQuotes46> + p.getGivenName() + <doubleQuotes46> <doubleQuotes46> + p.getSurname());<newline46mondego>    }<newline46mondego>    em.close();<newline46mondego>}<newline46mondego>"
"673splitHere46","4331135splitHere46","protected"
"674splitHere46","4331135splitHere46","MutableTree"
"675splitHere46","4331135splitHere46","Tree"
"676splitHere46","4331147splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class TextAreaPreferredHeight2<newline46mondego>{<newline46mondego> public static void main(String[] args)<newline46mondego> {<newline46mondego>  String text = <doubleQuotes46>one two three four five six seven eight nine ten <doubleQuotes46>;<newline46mondego>  JTextArea textArea = new JTextArea(text);<newline46mondego>  textArea.setColumns(30);<newline46mondego>  textArea.setLineWrap( true );<newline46mondego>  textArea.setWrapStyleWord( true );<newline46mondego>  textArea.append(text);<newline46mondego>  textArea.append(text);<newline46mondego>  textArea.append(text);<newline46mondego>  textArea.append(text);<newline46mondego>  textArea.append(text);<newline46mondego>  textArea.setSize(textArea.getPreferredSize().width, 1);<newline46mondego>  JOptionPane.showMessageDialog(<newline46mondego>   null, textArea, <doubleQuotes46>Not Truncated!<doubleQuotes46>, JOptionPane.WARNING_MESSAGE);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"677splitHere46","4331191splitHere46","String str = <doubleQuotes46>blah .... <ns:return>72.5</ns:return><doubleQuotes46>;<newline46mondego>String searchBegin = <doubleQuotes46><ns:return><doubleQuotes46>;<newline46mondego>String searchEnd = <doubleQuotes46></ns:return><doubleQuotes46>;<newline46mondego>String subStr = str.substring(str.indexOf(searchBegin) + searchBegin.length(), str.indexOf(searchEnd));<newline46mondego>"
"678splitHere46","4331212splitHere46","void foo(int x);<newline46mondego>void foo(float x);<newline46mondego>void foo(double x);<newline46mondego>"
"679splitHere46","4331212splitHere46","foo(5)<newline46mondego>"
"680splitHere46","4331212splitHere46","5"
"681splitHere46","4331212splitHere46","5f"
"682splitHere46","4331212splitHere46","5.0"
"683splitHere46","4331239splitHere46","PropertyModel"
"684splitHere46","4331239splitHere46","backingObject.setHeadline(<doubleQuotes46>[desired initial text]<doubleQuotes46>);<newline46mondego>"
"685splitHere46","4331239splitHere46","TextField"
"686splitHere46","4331239splitHere46","backingObject"
"687splitHere46","4331726splitHere46","EntityManager.persist(java.lang.Object entity)"
"688splitHere46","4331734splitHere46","g"
"689splitHere46","4331734splitHere46","k"
"690splitHere46","4331734splitHere46","x"
"691splitHere46","4331734splitHere46","y"
"692splitHere46","4331734splitHere46","s"
"693splitHere46","4331734splitHere46","t"
"694splitHere46","4331734splitHere46","k"
"695splitHere46","4331734splitHere46","x"
"696splitHere46","4331734splitHere46","y"
"697splitHere46","4331734splitHere46","s"
"698splitHere46","4331734splitHere46","t"
"699splitHere46","4331736splitHere46","new Figure()"
"700splitHere46","4331736splitHere46","Figure"
"701splitHere46","4331736splitHere46","public class Terrain {<newline46mondego><newline46mondego>    Figure fig<newline46mondego><newline46mondego>    public void setFigure(Figure fig) {<newline46mondego>       this.fig = fig;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class Figure {<newline46mondego><newline46mondego>    Terrain ter<newline46mondego><newline46mondego>    public void setTerrain(Terrain ter) {<newline46mondego>       this.ter = ter;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"702splitHere46","4331736splitHere46","public void init() {<newline46mondego><newline46mondego>   Terrain ter = new Terrain();   // create object of class Terrain<newline46mondego>   Figure fig = new Figure();     // create object of class Figure<newline46mondego><newline46mondego>   ter.setFigure(fig);<newline46mondego>   fig.setTerrain(ter);<newline46mondego><newline46mondego>}<newline46mondego>"
"703splitHere46","4331736splitHere46","public class Figure {<newline46mondego><newline46mondego>    Terrain ter<newline46mondego><newline46mondego>    // constructor requires an instance of Terrain, <newline46mondego>    // since the figure must always be placed in a terrain<newline46mondego>    public Figure(Terrain ter) {<newline46mondego><newline46mondego>       this.ter = ter;<newline46mondego><newline46mondego>       // let terrain know this is the main figure.<newline46mondego>       ter.setFigure(this);          <newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"704splitHere46","4331736splitHere46","public void init() {<newline46mondego><newline46mondego>   Terrain ter = new Terrain();   // create object of class Terrain<newline46mondego>   Figure fig = new Figure(ter);  // create object of class Figure in the terrain<newline46mondego><newline46mondego>   // no setters needed, since figure constructor sets up<newline46mondego>   // the relationship.<newline46mondego><newline46mondego>}<newline46mondego>"
"705splitHere46","4331758splitHere46","URL url = new URL(<doubleQuotes46>http://farm5.static.flickr.com/4132/5168797476_7a85deb2be_b.jpg<doubleQuotes46>);<newline46mondego>            URLConnection con = url.openConnection();<newline46mondego>            con.connect();<newline46mondego>            int fileLength = con.getContentLength();<newline46mondego>            InputStream is = con.getInputStream();<newline46mondego>            byte[] bytes = new byte[fileLength];<newline46mondego>            for(int i=0;i<fileLength;i++) {<newline46mondego>                bytes[i] = (byte)is.read();<newline46mondego>            }<newline46mondego>            sourceBitmap = BitmapFactory.decodeByteArray(bytes, 0, fileLength);<newline46mondego>"
"706splitHere46","4331875splitHere46","="
"707splitHere46","4331875splitHere46","(?<=\\=)([\\s\\w\\-.]*)$<newline46mondego>"
"708splitHere46","4331875splitHere46","*"
"709splitHere46","4331875splitHere46","*"
"710splitHere46","4331875splitHere46","$"
"711splitHere46","4331875splitHere46","(?=\\n|$)"
"712splitHere46","4332022splitHere46","Thread.getContextClassLoader()"
"713splitHere46","4332022splitHere46","Bootstrap<newline46mondego>          |<newline46mondego>       System<newline46mondego>          |<newline46mondego>       Common<newline46mondego>       /     \<newline46mondego>  Webapp1   Webapp2 ... <newline46mondego>"
"714splitHere46","4332022splitHere46","Common"
"715splitHere46","4332022splitHere46","Webapp1"
"716splitHere46","4332022splitHere46","getClass().getResource('/some/resource/in/webapp1'); // fail<newline46mondego>"
"717splitHere46","4332022splitHere46","Thread.currentThread().getContextClassLoader().getResource('/some/resource/in/webapp1');<newline46mondego>"
"718splitHere46","4332022splitHere46","Webapp1"
"719splitHere46","4332022splitHere46","Webapp1"
"720splitHere46","4332022splitHere46","Webapp1"
"721splitHere46","4332022splitHere46","Webapp1"
"722splitHere46","4332075splitHere46","WEB-INF/classes"
"723splitHere46","4332263splitHere46","loanPurposeCodeInfoDTO.agriculture"
"724splitHere46","4332263splitHere46","boolean"
"725splitHere46","4332263splitHere46","true"
"726splitHere46","4332263splitHere46","false"
"727splitHere46","4332314splitHere46","<%<newline46mondego>     Cookie killMyCookie = new Cookie(<doubleQuotes46>mycookie<doubleQuotes46>, null);<newline46mondego>     killMyCookie.setMaxAge(0);<newline46mondego>     killMyCookie.setPath(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>     response.addCookie(killMyCookie);<newline46mondego>%><newline46mondego>"
"728splitHere46","4332314splitHere46","setMaxAge(0)"
"729splitHere46","4332353splitHere46","-Dmaven.test.skip=true"
"730splitHere46","4332388splitHere46","schiffe_loop:<newline46mondego>for(int i = 0; i < schiffe.length-1; i++){<newline46mondego>    some_stuff();<newline46mondego>    for(int k = 0; k < stationen.length-1; k++){<newline46mondego>        if (something_really_bad_happened()) {<newline46mondego>            break schiffe_loop;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"731splitHere46","4332402splitHere46","double"
"732splitHere46","4332402splitHere46","double"
"733splitHere46","4332470splitHere46","memoryinitialsize=<doubleQuotes46>256m<doubleQuotes46><newline46mondego>memorymaximumsize=<doubleQuotes46>1024m<doubleQuotes46><newline46mondego>"
"734splitHere46","4332748splitHere46","FacesContext.getCurrentInstance().getExternalContext().getRequestLocale();<newline46mondego>"
"735splitHere46","4332783splitHere46","e.getActionCommand()"
"736splitHere46","4332783splitHere46","ActionEvent"
"737splitHere46","4332783splitHere46","actionPerformed"
"738splitHere46","4332783splitHere46","if"
"739splitHere46","4332785splitHere46","byte[]"
"740splitHere46","4332785splitHere46","byte[] data = hexStringToByteArray(hexData);<newline46mondego>MessageDigest md = MessageDigest.getInstance(<doubleQuotes46>SHA-1<doubleQuotes46>);<newline46mondego>md.update(data, 0, data.length);<newline46mondego>byte[] sha1hash = md.digest();<newline46mondego>"
"741splitHere46","4332793splitHere46","LocalDate"
"742splitHere46","4332793splitHere46","java.util.Calendar"
"743splitHere46","4332793splitHere46","Calendar"
"744splitHere46","4332793splitHere46","SimpleDateFormat"
"745splitHere46","4332793splitHere46","import java.util.*;<newline46mondego>import java.text.*;<newline46mondego><newline46mondego>public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Calendar calendar = Calendar.getInstance();<newline46mondego>        SimpleDateFormat format = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>);<newline46mondego>        System.out.println(format.format(calendar.getTime()));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"746splitHere46","4332793splitHere46","import org.joda.time.*;<newline46mondego>import org.joda.time.format.*;<newline46mondego><newline46mondego>public class Test<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        LocalDate today = new LocalDate();<newline46mondego>        // Alternatively, use DateTimeFormat.mediumDate etc<newline46mondego>        DateTimeFormatter formatter = DateTimeFormat.forPattern(<doubleQuotes46>dd/MM/yyyy<doubleQuotes46>);<newline46mondego>        System.out.println(formatter.print(today));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"747splitHere46","4332854splitHere46","public class MyClass{<newline46mondego>private Long id;<newline46mondego>private String name;<newline46mondego>private List<Integer> values;<newline46mondego><newline46mondego>@Id<newline46mondego>@GeneratedValue(strategy=GenerationType.AUTO) // this is only if your id is really auto generated<newline46mondego>public Long getId() {<newline46mondego>return id;<newline46mondego>}<newline46mondego><newline46mondego>@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)<newline46mondego>public List<Integer> getValues() {<newline46mondego>    return values;<newline46mondego>}   <newline46mondego>"
"748splitHere46","4333117splitHere46","HttpConnection connection = Connector.open(url);<newline46mondego>DataInputStream stream = connection.openDataInputStream();<newline46mondego>while(stream.read() != -1) {<newline46mondego>    //your stuff if anything there<newline46mondego>}<newline46mondego>"
"749splitHere46","4333133splitHere46","PreparedStatement"
"750splitHere46","4333133splitHere46","preparedStatement = <doubleQuotes46>SELECT * FROM users WHERE name = '<doubleQuotes46> + userName + <doubleQuotes46>';<doubleQuotes46>;<newline46mondego>"
"751splitHere46","4333133splitHere46","' or '1'='1<newline46mondego>"
"752splitHere46","4333133splitHere46","userName"
"753splitHere46","4333133splitHere46","PreparedStatement"
"754splitHere46","4333133splitHere46","SELECT * FROM users WHERE name = '' OR '1'='1';<newline46mondego>"
"755splitHere46","4333133splitHere46","preparedStatement = <doubleQuotes46>SELECT * FROM users WHERE name = ?<doubleQuotes46>;<newline46mondego>preparedStatement.setString(1, userName);<newline46mondego>"
"756splitHere46","4333174splitHere46","SocketConnection"
"757splitHere46","4333174splitHere46","SocketConnection connection = (SocketConnection)Connector.open(<doubleQuotes46>socket://your.smtp.server:25<doubleQuotes46>);<newline46mondego>DataInputStream is  = sc.openDataInputStream();<newline46mondego>DataOutputStream os = sc.openDataOutputStream();<newline46mondego>//now the SMTP chat with server<newline46mondego>"
"758splitHere46","4333279splitHere46","LinkedHashMap"
"759splitHere46","4333279splitHere46","k"
"760splitHere46","4333279splitHere46","m"
"761splitHere46","4333279splitHere46","m.put(k, v)"
"762splitHere46","4333279splitHere46","m.containsKey(k)"
"763splitHere46","4333279splitHere46","HashMap"
"764splitHere46","4333279splitHere46","Hashtable"
"765splitHere46","4333279splitHere46","TreeMap"
"766splitHere46","4333279splitHere46","HashMap"
"767splitHere46","4333279splitHere46","Hashtable"
"768splitHere46","4333279splitHere46","Hashtable"
"769splitHere46","4333279splitHere46","ArrayList"
"770splitHere46","4333279splitHere46","Vector"
"771splitHere46","4333279splitHere46","TreeMap"
"772splitHere46","4333301splitHere46","public static List<Employee> getEmployees()<newline46mondego>{ <newline46mondego>    List<Employee> col = new ArrayList<Employee>();<newline46mondego>    Calenader cal1 = Calendar.getInstance();<newline46mondego>    cal1.set(1986, 6, 12);<newline46mondego>    Calenader cal2 = Calendar.getInstance();<newline46mondego>    cal2.set(1986, 6, 12);<newline46mondego>    col.add(new Employee(5, <doubleQuotes46>xyz<doubleQuotes46>,<doubleQuotes46>abc<doubleQuotes46>, cal1, cal2));<newline46mondego>    return col;<newline46mondego>}<newline46mondego>"
"773splitHere46","4333382splitHere46","Document doc = new Document();<newline46mondego>doc.add(new Field(<doubleQuotes46>modified<doubleQuotes46>,<newline46mondego>        DateTools.timeToString(f.lastModified(), DateTools.Resolution.MINUTE),<newline46mondego>        Field.Store.YES, Field.Index.NOT_ANALYZED));<newline46mondego>"
"774splitHere46","4333382splitHere46","Field.Index NOT_ANALYZED"
"775splitHere46","4333382splitHere46","Field.Index NOT_ANALYZED"
"776splitHere46","4333382splitHere46","IndexWriter"
"777splitHere46","4333457splitHere46","emptySessionPath"
"778splitHere46","4333457splitHere46","/"
"779splitHere46","4333457splitHere46","emptySessionPath=true"
"780splitHere46","4333457splitHere46","emptySessionPath"
"781splitHere46","4333457splitHere46","JSESSIONID"
"782splitHere46","4333457splitHere46","emptySessionPath"
"783splitHere46","4333457splitHere46","JSESSIONID"
"784splitHere46","4333506splitHere46","Milk"
"785splitHere46","4333506splitHere46","CoffeeDecorator"
"786splitHere46","4333506splitHere46","CoffeeDecorator"
"787splitHere46","4333506splitHere46","virtual"
"788splitHere46","4333506splitHere46","Milk"
"789splitHere46","4333506splitHere46","override"
"790splitHere46","4333506splitHere46","// In CoffeeDecorator<newline46mondego>public virtual double getCost()<newline46mondego>{<newline46mondego>    return decoratedCoffee.getCost();<newline46mondego>}<newline46mondego><newline46mondego>// In Milk<newline46mondego>public override double getCost()<newline46mondego>{<newline46mondego>    return base.getCost() + cost;<newline46mondego>}<newline46mondego>"
"791splitHere46","4333566splitHere46","YourApplication.main()"
"792splitHere46","4333566splitHere46","start()"
"793splitHere46","4333767splitHere46","model.put(<doubleQuotes46>messagesource<doubleQuotes46>, this.messagesource);<newline46mondego>// adding this e.g. should do the trick<newline46mondego>model.put(<doubleQuotes46>keyHelloCustomer<doubleQuotes46>, <doubleQuotes46>the_key_you_use_in_your_properties_file<doubleQuotes46>);<newline46mondego>model.put(<doubleQuotes46>noArgs<doubleQuotes46>, new Object[]{});<newline46mondego>model.put(<doubleQuotes46>locale<doubleQuotes46>, yourOwnPrivateMethodToDetermineWhichLocaleToUse()); <newline46mondego>"
"794splitHere46","4333767splitHere46","${messageSource.getMessage($keyHelloCustomer, $noArgs, $locale)}<newline46mondego>"
"795splitHere46","4333828splitHere46","Calendar"
"796splitHere46","4334010splitHere46","any_instance"
"797splitHere46","4334034splitHere46","protected Map<String, Alarmdiensten> getAlarmdiensten()<newline46mondego>{<newline46mondego>  Map<String, Alarmdiensten> alarmNumbersForCountries <newline46mondego>                                             = new HashMap<String, Alarmdiensten>();<newline46mondego><newline46mondego>  try<newline46mondego>  {<newline46mondego>    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();<newline46mondego>    Document doc = builder.parse(getAssets().open(<doubleQuotes46>alarmdiensten.xml<doubleQuotes46>));<newline46mondego>    NodeList nl = doc.getElementsByTagName(<doubleQuotes46>land<doubleQuotes46>);<newline46mondego>    for (int i = 0; i < nl.getLength(); i++)<newline46mondego>    {<newline46mondego>      Node node = nl.item(i);<newline46mondego>      Alarmdiensten land = new Alarmdiensten();<newline46mondego><newline46mondego>      land.setLand(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>naam<doubleQuotes46>)));<newline46mondego>      land.setLandcode(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>code<doubleQuotes46>)));<newline46mondego>      land.setPolitie(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>politie<doubleQuotes46>)));<newline46mondego>      land.setAmbulance(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>ambulance<doubleQuotes46>)));<newline46mondego>      land.setBrandweer(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>brandweer<doubleQuotes46>)));<newline46mondego>      land.setTelamba(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>telamba<doubleQuotes46>)));<newline46mondego>      land.setAdresamba(Xml.innerHtml(Xml.getChildByTagName(node, <doubleQuotes46>adresamba<doubleQuotes46>)));<newline46mondego><newline46mondego>      alarmNumbersForCountries.put(land.getLandCode(), land);<newline46mondego>    }<newline46mondego>  } <newline46mondego>  catch (Exception e)<newline46mondego>  {<newline46mondego>    // Handle Exception<newline46mondego>  } <newline46mondego>  return alarmNumbersForCountries;<newline46mondego>}<newline46mondego>"
"798splitHere46","4334034splitHere46","Alarmdiensten land = alarmNumbersForCountries.get(landcode);<newline46mondego>"
"799splitHere46","4334163splitHere46","<doubleQuotes46><doubleQuotes46>"
"800splitHere46","4334163splitHere46","String sub = <doubleQuotes46>0110000<doubleQuotes46>;<newline46mondego>String a[] = sub.split(<doubleQuotes46>(?<=.)<doubleQuotes46>);<newline46mondego>System.out.println(Arrays.toString(a));<newline46mondego>"
"801splitHere46","4334163splitHere46","[0, 1, 1, 0, 0, 0, 0]<newline46mondego>"
"802splitHere46","4334163splitHere46","(?<=.)"
"803splitHere46","4334163splitHere46","."
"804splitHere46","4334299splitHere46","<c:when test=<doubleQuotes46>${not empty bean.property}<doubleQuotes46>><newline46mondego>"
"805splitHere46","4334299splitHere46","<c:when test=<doubleQuotes46>${not empty map.key}<doubleQuotes46>><newline46mondego>"
"806splitHere46","4334396splitHere46","<properties><newline46mondego>    <spring.version>3.0.0.RELEASE</spring.version><newline46mondego>    <wicket.version>1.4.10</wicket.version><newline46mondego></properties><newline46mondego><newline46mondego><dependencyManagement><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>org.springframework.context</artifactId><newline46mondego>    <version>${spring.version}</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>org.springframework.orm</artifactId><newline46mondego>    <version>${spring.version}</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.apache.commons</groupId><newline46mondego>    <artifactId>com.springsource.org.apache.commons.dbcp</artifactId><newline46mondego>    <version>1.2.2.osgi</version><newline46mondego>    <scope>runtime</scope><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.apache.commons</groupId><newline46mondego>    <artifactId>com.springsource.org.apache.commons.pool</artifactId><newline46mondego>    <version>1.5.3</version><newline46mondego>    <scope>runtime</scope><newline46mondego></dependency><newline46mondego><dependency><newline46mondego><groupId>com.mysql.jdbc</groupId><newline46mondego>    <artifactId>com.springsource.com.mysql.jdbc</artifactId><newline46mondego>    <version>5.1.6</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.hibernate</groupId><newline46mondego>    <artifactId>com.springsource.org.hibernate</artifactId><newline46mondego>    <version>3.3.2.GA</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>javax.persistence</groupId><newline46mondego>    <artifactId>com.springsource.javax.persistence</artifactId><newline46mondego>    <version>1.0.0</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.hibernate</groupId><newline46mondego>    <artifactId>com.springsource.org.hibernate.annotations</artifactId><newline46mondego>    <version>3.4.0.GA</version><newline46mondego>    <exclusions><newline46mondego>        <exclusion><newline46mondego>        <groupId>org.apache.commons</groupId><newline46mondego>        <artifactId>com.springsource.org.apache.commons.logging</artifactId><newline46mondego>    </exclusion><newline46mondego>    </exclusions><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.apache.wicket</groupId><newline46mondego>    <artifactId>wicket</artifactId><newline46mondego>    <version>${wicket.version}</version><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.apache.wicket</groupId><newline46mondego>    <artifactId>wicket-spring</artifactId><newline46mondego>    <version>${wicket.version}</version><newline46mondego>    <exclusions><newline46mondego>        <exclusion><newline46mondego>        <artifactId>spring</artifactId><newline46mondego>        <groupId>org.springframework</groupId><newline46mondego>    </exclusion><newline46mondego>    </exclusions><newline46mondego></dependency><newline46mondego><dependency><newline46mondego>    <groupId>org.apache.wicket</groupId><newline46mondego>    <artifactId>wicket-extensions</artifactId><newline46mondego>    <version>${wicket.version}</version><newline46mondego></dependency><newline46mondego>"
"807splitHere46","4334396splitHere46","@Entity(name = <doubleQuotes46>User<doubleQuotes46>)<newline46mondego>@Table(name = <doubleQuotes46>users<doubleQuotes46>, uniqueConstraints = { @UniqueConstraint(columnNames = { <doubleQuotes46>email<doubleQuotes46> }) })<newline46mondego>@SecondaryTable(name = <doubleQuotes46>user_picture<doubleQuotes46>)<newline46mondego>public class User implements Serializable {<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue(strategy = GenerationType.AUTO)<newline46mondego>    private Long id;<newline46mondego>    private String email;<newline46mondego>    private String name;<newline46mondego>    private String password;<newline46mondego>    @Lob<newline46mondego>    @Column(table = <doubleQuotes46>users_picture<doubleQuotes46>, length = 524288)<newline46mondego>    private byte[] picture;<newline46mondego>    private Date birthDate;<newline46mondego>    private String phonenumber;<newline46mondego>    @ManyToOne(fetch = FetchType.EAGER)<newline46mondego>    private Address homeAddress;<newline46mondego>    @Enumerated(EnumType.STRING)<newline46mondego>    private Gender gender;  <newline46mondego>    @CollectionOfElements(fetch = FetchType.EAGER)<newline46mondego>    @Enumerated(EnumType.STRING)<newline46mondego>    private Set<Weekday> workdays = new HashSet<Weekday>();<newline46mondego>"
"808splitHere46","4334396splitHere46","<build><newline46mondego><plugins><newline46mondego><plugin><newline46mondego>    <groupId>org.codehaus.mojo</groupId><newline46mondego>    <artifactId>hibernate3-maven-plugin</artifactId><newline46mondego>    <version>2.0-alpha-1</version><newline46mondego>    <configuration><newline46mondego>        <components><newline46mondego>            <component><newline46mondego>            <name>hbm2ddl</name><newline46mondego>            <implementation><newline46mondego>                annotationconfiguration<newline46mondego>                </implementation><newline46mondego>        </component><newline46mondego>        </components><newline46mondego>        <componentProperties><newline46mondego>            <drop>true</drop><newline46mondego>        <jdk5>true</jdk5><newline46mondego>        <propertyfile><newline46mondego>            target/classes/jdbc.properties<newline46mondego>            </propertyfile><newline46mondego>        <skip>${maven.test.skip}</skip><newline46mondego>        </componentProperties><newline46mondego>        </configuration><newline46mondego>        <executions><newline46mondego>            <execution><newline46mondego>            <phase>process-test-resources</phase><newline46mondego>                <goals><newline46mondego>                <goal>hbm2ddl</goal><newline46mondego>            </goals><newline46mondego>            </execution><newline46mondego>         </executions><newline46mondego>         <dependencies><newline46mondego>             <dependency><newline46mondego>             <groupId>mysql</groupId><newline46mondego>                 <artifactId>mysql-connector-java</artifactId><newline46mondego>                 <version>5.0.5</version><newline46mondego>         </dependency><newline46mondego>         </dependencies><newline46mondego>    </plugin><newline46mondego></plugins><newline46mondego>"
"809splitHere46","4334396splitHere46","+--------------------------------+--------------+------+-----+---------+----------------+<newline46mondego>| Field                          | Type         | Null | Key | Default | Extra          |<newline46mondego>+--------------------------------+--------------+------+-----+---------+----------------+<newline46mondego>| id                             | bigint(20)   | NO   | PRI | NULL    | auto_increment |<newline46mondego>| email                          | varchar(255) | YES  | UNI | NULL    |                |<newline46mondego>| name                           | varchar(255) | YES  |     | NULL    |                |<newline46mondego>| password                       | varchar(255) | YES  |     | NULL    |                |<newline46mondego>| birthDate                      | datetime     | YES  |     | NULL    |                |<newline46mondego>| phonenumber                    | varchar(255) | YES  |     | NULL    |                |<newline46mondego>| gender                         | varchar(255) | YES  |     | NULL    |                |<newline46mondego>| address                        | bigint(20)   | YES  | MUL | NULL    |                |<newline46mondego>+--------------------------------+--------------+------+-----+---------+----------------+<newline46mondego>"
"810splitHere46","4334675splitHere46","public enum FruitType{<newline46mondego>  APPLE, BANANA<newline46mondego>}<newline46mondego>"
"811splitHere46","4334675splitHere46","public FruitFetcher { <newline46mondego>   public static Fruit fetch(FruitType type) {<newline46mondego>     switch(type) {<newline46mondego>       case APPLE:  return new Apple();<newline46mondego>       case BANANA: return new Banana();<newline46mondego>     }<newline46mondego>   }<newline46mondego>   return null;<newline46mondego>}<newline46mondego>"
"812splitHere46","4334675splitHere46","Request"
"813splitHere46","4334675splitHere46","Response"
"814splitHere46","4334675splitHere46","public Response getResponse(Request request){<newline46mondego>    Response aResponse = null;<newline46mondego><newline46mondego>    if(request instanceof SetPinResponse) {<newline46mondego>        aResponse = new SetPinResponse((SetPinRequest) request);<newline46mondego>    } else if (request instanceof MakePaymentResposne) {<newline46mondego>        aResponse =  new MakePaymentResposne((MakePaymentRequest) request);<newline46mondego>    }<newline46mondego><newline46mondego>    return aResponse;<newline46mondego>}<newline46mondego>"
"815splitHere46","4334936splitHere46","input"
"816splitHere46","4334936splitHere46","input"
"817splitHere46","4334936splitHere46","//input[@type='submit' and @value='Save as XML']<newline46mondego>"
"818splitHere46","4334936splitHere46","/html/body//form//input[@type='submit' and @value='Save as XML']<newline46mondego>"
"819splitHere46","4334936splitHere46","client = new WebClient(BrowserVersion.FIREFOX_3)<newline46mondego>client.javaScriptEnabled = false<newline46mondego><newline46mondego>page = client.getPage(url)<newline46mondego><newline46mondego>submitButton = page.getByXPath(<doubleQuotes46>/html/body//form//input[@type='submit' and @value='Save as XML']<doubleQuotes46>)<newline46mondego>"
"820splitHere46","4334939splitHere46","codebase='myapplet.jar'"
"821splitHere46","4334996splitHere46","Arrays.asList()"
"822splitHere46","4334996splitHere46","add()"
"823splitHere46","4334996splitHere46","remove()"
"824splitHere46","4334996splitHere46","ArrayList"
"825splitHere46","4334996splitHere46","java.util.ArrayList"
"826splitHere46","4334996splitHere46","System.out.println(<newline46mondego>    Arrays.asList(<doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>2<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>)<newline46mondego>    .getClass().getName()<newline46mondego>);<newline46mondego>// Output: java.util.Arrays$ArrayList<newline46mondego>"
"827splitHere46","4335172splitHere46","if(!m.group().equals(part))<newline46mondego>{<newline46mondego>    str=m.replaceFirst(part);<newline46mondego>}<newline46mondego>"
"828splitHere46","4335172splitHere46","str"
"829splitHere46","4335172splitHere46","str"
"830splitHere46","4335172splitHere46","Pattern.compile(<doubleQuotes46>ACCEPT .*?\\.<doubleQuotes46>,Pattern.DOTALL);"
"831splitHere46","4335172splitHere46","String test =<newline46mondego>    <doubleQuotes46>ACCEPT pasta <doubleQuotes46><newline46mondego>       + <doubleQuotes46>WITH tomatoes, parmesan cheese, olives <doubleQuotes46><newline46mondego>       + <doubleQuotes46>WITH anchovies WITH tuna WITH more olives.<doubleQuotes46>;<newline46mondego><newline46mondego>System.out.println(<newline46mondego>    test.replaceAll(<newline46mondego>        <doubleQuotes46>(ACCEPT.*?WITH.*?)(?:\\s*WITH.*)(\\.)<doubleQuotes46>, <doubleQuotes46>$1$2<doubleQuotes46><newline46mondego>    )<newline46mondego>);<newline46mondego>"
"832splitHere46","4335172splitHere46","(       // start a capturing group<newline46mondego>ACCEPT  // search for the literal ACCEPT<newline46mondego>.*?     // search for the shortest possible matching String<newline46mondego>        // (so no other WITH can sneak in)<newline46mondego>WITH    // search for the literal WITH<newline46mondego>.*?     // search for the shortest possible matching String<newline46mondego>        // (so no other WITH can sneak in)<newline46mondego>)       // close the capturing group, we'll refer to this<newline46mondego>        // group as $1 or matcher.group(1)<newline46mondego>(?:     // start a non-capturing group<newline46mondego>\\s*    // search for optional whitespace<newline46mondego>WITH    // search for the literal WITH<newline46mondego>.*      // search for anything, greedily<newline46mondego>)       // close the group, we'll discard this one<newline46mondego>(       // open another capturing group<newline46mondego>\\.     // search for a single period<newline46mondego>)       // close the group, the period is now accessible as $2<newline46mondego>"
"833splitHere46","4335172splitHere46","final Matcher matcher =<newline46mondego>    Pattern.compile(<doubleQuotes46>WITH\\s*<doubleQuotes46>, Pattern.DOTALL).matcher(test);<newline46mondego>final StringBuffer sb = new StringBuffer();<newline46mondego>while(matcher.find()){<newline46mondego>    matcher.appendReplacement(sb, sb.length() == 0<newline46mondego>        ? matcher.group()<newline46mondego>        : <doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>matcher.appendTail(sb);<newline46mondego>System.out.println(sb.toString());<newline46mondego>"
"834splitHere46","4335195splitHere46","AUTO_INCREMENT"
"835splitHere46","4335195splitHere46","ALTER TABLE tbl AUTO_INCREMENT = 100;<newline46mondego>"
"836splitHere46","4335250splitHere46","equals"
"837splitHere46","4335250splitHere46","equals"
"838splitHere46","4335367splitHere46","EntityManager"
"839splitHere46","4335367splitHere46","@PersistenceContext(unitName = <doubleQuotes46>DataAccess-ejb<doubleQuotes46>) <newline46mondego>protected EntityManager entityManager; <newline46mondego>"
"840splitHere46","4335367splitHere46","EntityManager"
"841splitHere46","4335367splitHere46","getLocationGroupList()"
"842splitHere46","4335367splitHere46","EntityManager"
"843splitHere46","4335367splitHere46","EntityManager"
"844splitHere46","4335367splitHere46","EntityManager"
"845splitHere46","4335367splitHere46","@PersistenceContext"
"846splitHere46","4335367splitHere46","scope = EXTENDED"
"847splitHere46","4335367splitHere46","EntityManager"
"848splitHere46","4335367splitHere46","EntityManager"
"849splitHere46","4335424splitHere46","284.94 ms   1   FooBean.getRandomDroplets()<newline46mondego>  284.56 ms   1   GahBean.getRandomDroplets()<newline46mondego>  201.60 ms   2   SohBean.searchRatedDoodlesWithinHead()<newline46mondego>  185.94 ms   1   FroBean.doSearchPopular()<newline46mondego>  157.63 ms   1   FroBean.doSearchRecent()<newline46mondego>  42.34 ms   1   FooBean.fetchMostRecentYodel()<newline46mondego>  41.94 ms   1   GahBean.getMostRecentYodel()<newline46mondego>  15.89 ms   1   FooBean.getNoOfYodels()<newline46mondego>  15.00 ms   1   GahBean.getNoOfYodels()<newline46mondego>  9.14 ms   1   SohBean.mainYodels()<newline46mondego>  1.11 ms   2   SohBean.trackHoorayEvent()<newline46mondego>  0.32 ms   1   FroBean.reset()<newline46mondego>  0.22 ms  43   NohBean.thumbPicture()<newline46mondego>  0.03 ms  18   FooBean.getMostRecentYodels()<newline46mondego>  0.01 ms   1   NohBean.profilePicture()<newline46mondego>  0.01 ms   1   FroBean.setToDefault()<newline46mondego>  0.01 ms   1   FroBean.getRecentMarker() <newline46mondego>"
"850splitHere46","4335461splitHere46","com.sun.management.OperatingSystemMXBean bean =<newline46mondego>  (com.sun.management.OperatingSystemMXBean)<newline46mondego>    java.lang.management.ManagementFactory.getOperatingSystemMXBean();<newline46mondego>long max = bean.getTotalPhysicalMemorySize();<newline46mondego>"
"851splitHere46","4335494splitHere46","Border"
"852splitHere46","4335494splitHere46","drawRoundRect()"
"853splitHere46","4335494splitHere46","drawOval()"
"854splitHere46","4335494splitHere46","paintBorder()"
"855splitHere46","4335495splitHere46","PrintStream"
"856splitHere46","4335495splitHere46","FilterPrintStream"
"857splitHere46","4335495splitHere46","class LoggedPrintStream extends PrintStream {<newline46mondego><newline46mondego>    final StringBuilder buf;<newline46mondego>    final PrintStream underlying;<newline46mondego><newline46mondego>    LoggedPrintStream(StringBuilder sb, OutputStream os, PrintStream ul) {<newline46mondego>        super(os);<newline46mondego>        this.buf = sb;<newline46mondego>        this.underlying = ul;<newline46mondego>    }<newline46mondego><newline46mondego>    public static LoggedPrintStream create(PrintStream toLog) {<newline46mondego>        try {<newline46mondego>            final StringBuilder sb = new StringBuilder();<newline46mondego>            Field f = FilterOutputStream.class.getDeclaredField(<doubleQuotes46>out<doubleQuotes46>);<newline46mondego>            f.setAccessible(true);<newline46mondego>            OutputStream psout = (OutputStream) f.get(toLog);<newline46mondego>            return new LoggedPrintStream(sb, new FilterOutputStream(psout) {<newline46mondego>                public void write(int b) throws IOException {<newline46mondego>                    super.write(b);<newline46mondego>                    sb.append((char) b);<newline46mondego>                }<newline46mondego>            }, toLog);<newline46mondego>        } catch (NoSuchFieldException shouldNotHappen) {<newline46mondego>        } catch (IllegalArgumentException shouldNotHappen) {<newline46mondego>        } catch (IllegalAccessException shouldNotHappen) {<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"858splitHere46","4335495splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        // Create logged PrintStreams<newline46mondego>        LoggedPrintStream lpsOut = LoggedPrintStream.create(System.out);<newline46mondego>        LoggedPrintStream lpsErr = LoggedPrintStream.create(System.err);<newline46mondego><newline46mondego>        // Set them to stdout / stderr<newline46mondego>        System.setOut(lpsOut);<newline46mondego>        System.setErr(lpsErr);<newline46mondego><newline46mondego>        // Print some stuff<newline46mondego>        System.out.print(<doubleQuotes46>hello <doubleQuotes46>);<newline46mondego>        System.out.println(5);<newline46mondego>        System.out.flush();<newline46mondego><newline46mondego>        System.err.println(<doubleQuotes46>Some error<doubleQuotes46>);<newline46mondego>        System.err.flush();<newline46mondego><newline46mondego>        // Restore System.out / System.err<newline46mondego>        System.setOut(lpsOut.underlying);<newline46mondego>        System.setErr(lpsErr.underlying);<newline46mondego><newline46mondego>        // Print the logged output<newline46mondego>        System.out.println(<doubleQuotes46>----- Log for System.out: -----\n<doubleQuotes46> + lpsOut.buf);<newline46mondego>        System.out.println(<doubleQuotes46>----- Log for System.err: -----\n<doubleQuotes46> + lpsErr.buf);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"859splitHere46","4335495splitHere46","hello 5<newline46mondego>Some error<newline46mondego>----- Log for System.out: -----<newline46mondego>hello 5<newline46mondego><newline46mondego>----- Log for System.err: -----<newline46mondego>Some error<newline46mondego>"
"860splitHere46","4335495splitHere46","out"
"861splitHere46","4335495splitHere46","FilterOutputStream"
"862splitHere46","4335514splitHere46","@LazyCollection(LazyCollectionOption.FALSE)<newline46mondego>"
"863splitHere46","4335514splitHere46","fetchType"
"864splitHere46","4335514splitHere46","@*ToMany"
"865splitHere46","4335514splitHere46","Set<Child>"
"866splitHere46","4335514splitHere46","List<Child>"
"867splitHere46","4335514splitHere46","List"
"868splitHere46","4335514splitHere46","Set"
"869splitHere46","4335572splitHere46","@ModelAttribute"
"870splitHere46","4335704splitHere46","_player"
"871splitHere46","4335704splitHere46","_players += name + <doubleQuotes46>,<doubleQuotes46>;"
"872splitHere46","4335704splitHere46","_players"
"873splitHere46","4335704splitHere46","volatile"
"874splitHere46","4335718splitHere46","HibernateEntityManager hem = em.unwrap(HibernateEntityManager.class);<newline46mondego>Session session = hem.getSession();<newline46mondego>"
"875splitHere46","4335880splitHere46","a4j:commandButton"
"876splitHere46","4335880splitHere46","h:commandButton"
"877splitHere46","4335880splitHere46","UIData"
"878splitHere46","4335880splitHere46","<h:dataTable>"
"879splitHere46","4335880splitHere46","<rich:dataTable>"
"880splitHere46","4335880splitHere46","value"
"881splitHere46","4335880splitHere46","UIData"
"882splitHere46","4335880splitHere46","<a4j:keepAlive>"
"883splitHere46","4336132splitHere46","import java.io.StringReader;<newline46mondego>import javax.xml.xpath.XPath;<newline46mondego>import javax.xml.xpath.XPathConstants;<newline46mondego>import javax.xml.xpath.XPathFactory;<newline46mondego>import org.xml.sax.InputSource;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        String docroot = <doubleQuotes46><div><i>items <b>sold</b></i></div><doubleQuotes46>;<newline46mondego>        XPath xxpath = XPathFactory.newInstance().newXPath();<newline46mondego>        InputSource inputSource = new InputSource(new StringReader(docroot)); <newline46mondego>        String result = (String) xxpath.evaluate(<doubleQuotes46>//b<doubleQuotes46>, inputSource, XPathConstants.STRING);<newline46mondego>        System.out.println(result);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"884splitHere46","4336530splitHere46","private static double[][] RandomArray(int n) {<newline46mondego>        double[][] randomMatrix = new double [n][n];<newline46mondego>        double[] randomArray = new double [n];<newline46mondego>         Random rand = new Random(); <newline46mondego>            rand.setSeed(System.currentTimeMillis()); <newline46mondego><newline46mondego>        for (int i = 0; i < n; i++) {   <newline46mondego><newline46mondego>            for (int j = 0; j < n; j++) {<newline46mondego>                Integer r = rand.nextInt()% 100; <newline46mondego>                randomMatrix[i][j] = Math.abs(r);<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return randomMatrix;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>public static void main(String[] args){<newline46mondego><newline46mondego>        //PrintRandomGraph(RandomArray(5));<newline46mondego>    System.out.println(Arrays.deepToString(RandomArray(5)));<newline46mondego>}<newline46mondego>"
"885splitHere46","4336562splitHere46","Point point = MouseInfo.getPointerInfo().getLocation();<newline46mondego>double x = point.getX();<newline46mondego>double y = point.getY();<newline46mondego>"
"886splitHere46","4336761splitHere46","Process"
"887splitHere46","4336761splitHere46","exec()"
"888splitHere46","4336761splitHere46","destroy()"
"889splitHere46","4336761splitHere46","taskkill /IM word.exe<newline46mondego>"
"890splitHere46","4336761splitHere46","defaultRuntime.exec(...)"
"891splitHere46","4336761splitHere46","taskkill /PID XXXX"
"892splitHere46","4336792splitHere46","List l = page.getByXPath( <doubleQuotes46>//input[@type='submit' and @value='Save as XML']<doubleQuotes46> );<newline46mondego>XmlPage result = ((HtmlSubmitInput)l.get(0)).click();<newline46mondego>String xml = result.getContent();<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>    Document doc = db.parse( new java.io.ByteArrayInputStream( xml.getBytes( <doubleQuotes46>UTF-8<doubleQuotes46> ) ) );<newline46mondego>    doc.getDocumentElement().normalize();<newline46mondego>    //actual work going here<newline46mondego>}<newline46mondego>catch (Exception e)<newline46mondego>{<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"893splitHere46","4337279splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>public <T> T[] ConvertToArray(List<T> list)<newline46mondego>{      <newline46mondego>   Object[] result = new Object[list.size()];<newline46mondego>   result = list.toArray(result);<newline46mondego>   return (T[])result;<newline46mondego>}<newline46mondego>"
"894splitHere46","4337279splitHere46","new T[]"
"895splitHere46","4337279splitHere46","T[] result"
"896splitHere46","4337279splitHere46","list.toArray(result);"
"897splitHere46","4337279splitHere46","new T[]"
"898splitHere46","4337279splitHere46","Array.newInstance(T.class, list.size());"
"899splitHere46","4337279splitHere46","public static <T> T[] convertToArray(List<?> list, Class<T> c) {<newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    T[] result = (T[]) Array.newInstance(c, list.size());<newline46mondego>    result = list.toArray(result);<newline46mondego>    return (T[]) result;<newline46mondego>}<newline46mondego>"
"900splitHere46","4337279splitHere46","Integer[] arrayOfIntegers = convertToArray(listOfIntegers, Integer.class);<newline46mondego>"
"901splitHere46","4337289splitHere46","ObjectInputStream"
"902splitHere46","4337289splitHere46","InputStream"
"903splitHere46","4337392splitHere46","f:ajax"
"904splitHere46","4337392splitHere46","event=<doubleQuotes46>action<doubleQuotes46>"
"905splitHere46","4337392splitHere46","event=<doubleQuotes46>click<doubleQuotes46>"
"906splitHere46","4337392splitHere46","click"
"907splitHere46","4337462splitHere46","Class<?>"
"908splitHere46","4337462splitHere46","Class"
"909splitHere46","4337462splitHere46","Class"
"910splitHere46","4337462splitHere46","public void foo(Class<String> c) { System.out.println(c); }<newline46mondego>"
"911splitHere46","4337462splitHere46","Class r = Integer.class<newline46mondego>foo(r); //THIS IS OK (BUT SHOULDN'T BE)<newline46mondego>"
"912splitHere46","4337462splitHere46","Class<?> w = Integer.class<newline46mondego>foo(w); //WILL NOT COMPILE (RIGHTLY SO!)<newline46mondego>"
"913splitHere46","4337462splitHere46","?"
"914splitHere46","4337462splitHere46","?"
"915splitHere46","4337462splitHere46","public interface FooService<newline46mondego>"
"916splitHere46","4337462splitHere46","Class<?> c = Class.forName(System.getProperty(<doubleQuotes46>foo.service<doubleQuotes46>));<newline46mondego>"
"917splitHere46","4337462splitHere46","//next line throws ClassCastException if c is not of a compatible type<newline46mondego>Class<? extends FooService> f = c.asSubclass(FooService.class); <newline46mondego>"
"918splitHere46","4337462splitHere46","FooService"
"919splitHere46","4337462splitHere46","FooService s = f.newInstance(); //no cast<newline46mondego>"
"920splitHere46","4337591splitHere46","Is a <doubleQuotes46>GlobalReference<doubleQuotes46> on an object just a reference count to the object<newline46mondego>"
"921splitHere46","4337634splitHere46","new MyThread().start();<newline46mondego>"
"922splitHere46","4338016splitHere46","boolean"
"923splitHere46","4338297splitHere46","addActionListener"
"924splitHere46","4338297splitHere46","implements ActionListener"
"925splitHere46","4338297splitHere46","ActionListener"
"926splitHere46","4338297splitHere46","actionPerformed"
"927splitHere46","4338297splitHere46","ActionListener"
"928splitHere46","4338297splitHere46","addActionListener"
"929splitHere46","4338439splitHere46","getResouces"
"930splitHere46","4338439splitHere46","getResources"
"931splitHere46","4338439splitHere46","public DbAdapter(Context context) {<newline46mondego>     Resources res = context.getResources();//error: The method getResources() is undefined for the type DbAdapter<newline46mondego>            //also tied context.getResources()<newline46mondego>}<newline46mondego>"
"932splitHere46","4338460splitHere46","setx"
"933splitHere46","4338460splitHere46","setx /M JAVA_HOME <doubleQuotes46>C:\Program Files (x86)\Java\jdk1.6.0_17<doubleQuotes46><newline46mondego>"
"934splitHere46","4338535splitHere46","Set<Set<String>> var = new HashSet<HashSet<String>>();<newline46mondego><newline46mondego>var.add(new TreeSet<String>());<newline46mondego>"
"935splitHere46","4338535splitHere46","Set<Set<String>> var = new HashSet<Set<String>>();<newline46mondego>"
"936splitHere46","4338535splitHere46","// Arrays are covariant, assignment is permitted.<newline46mondego>Object[] array = new String[] {<doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>bar<doubleQuotes46>};<newline46mondego><newline46mondego>// Runtime exception, can't convert Integer to String.<newline46mondego>array[0] = new Integer(5);<newline46mondego>"
"937splitHere46","4338968splitHere46","public static void main(String... args) throws IOException {<newline46mondego><newline46mondego>    ArrayList<ArrayList<String>> rows = getRandomData();<newline46mondego><newline46mondego>    if (rows.size() == 0)<newline46mondego>        throw new RuntimeException(<doubleQuotes46>No rows<doubleQuotes46>);<newline46mondego><newline46mondego>    // normalize data<newline46mondego>    int longest = 0;<newline46mondego>    for (List<String> row : rows)<newline46mondego>        if (row.size() > longest)<newline46mondego>            longest = row.size();<newline46mondego><newline46mondego>    for (List<String> row : rows)<newline46mondego>        while (row.size() < longest)<newline46mondego>            row.add(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    if (longest == 0)<newline46mondego>        throw new RuntimeException(<doubleQuotes46>No colums<doubleQuotes46>);<newline46mondego><newline46mondego>    // fix special characters<newline46mondego>    for (int i = 0; i < rows.size(); i++)<newline46mondego>        for (int j = 0; j < rows.get(i).size(); j++)<newline46mondego>            rows.get(i).set(j, fixSpecial(rows.get(i).get(j)));<newline46mondego><newline46mondego>    // get the maximum size of one column<newline46mondego>    int[] maxColumn = new int[rows.get(0).size()];<newline46mondego><newline46mondego>    for (int i = 0; i < rows.size(); i++)<newline46mondego>        for (int j = 0; j < rows.get(i).size(); j++)<newline46mondego>            if (maxColumn[j] < rows.get(i).get(j).length())<newline46mondego>                maxColumn[j] = rows.get(i).get(j).length();<newline46mondego><newline46mondego>    // create the format string<newline46mondego>    String outFormat = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    for (int max : maxColumn)<newline46mondego>        outFormat += <doubleQuotes46>%-<doubleQuotes46> + (max + 1) + <doubleQuotes46>s, <doubleQuotes46>;<newline46mondego>    outFormat = outFormat.substring(0, outFormat.length() - 2) + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego><newline46mondego>    // print the data<newline46mondego>    for (List<String> row : rows)<newline46mondego>        System.out.printf(outFormat, row.toArray());<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>private static String fixSpecial(String s) {<newline46mondego><newline46mondego>    s = s.replaceAll(<doubleQuotes46>(\<doubleQuotes46>)<doubleQuotes46>, <doubleQuotes46>$1$1<doubleQuotes46>);<newline46mondego><newline46mondego>    if (s.contains(<doubleQuotes46>\n<doubleQuotes46>) || s.contains(<doubleQuotes46>,<doubleQuotes46>) || s.contains(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>) || <newline46mondego>            s.trim().length() < s.length()) {<newline46mondego>        s = <doubleQuotes46>\<doubleQuotes46><doubleQuotes46> + s + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    return s;<newline46mondego>}<newline46mondego><newline46mondego>private static ArrayList<ArrayList<String>> getRandomData() {<newline46mondego><newline46mondego>    ArrayList<ArrayList<String>> data = new ArrayList<ArrayList<String>>();<newline46mondego><newline46mondego>    String[] rand = { <doubleQuotes46>Do<doubleQuotes46>, <doubleQuotes46>Re<doubleQuotes46>, <doubleQuotes46>Song<doubleQuotes46>, <doubleQuotes46>David<doubleQuotes46>, <doubleQuotes46>Test<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>, <doubleQuotes46>Hohjoh<doubleQuotes46>, <doubleQuotes46>a \<doubleQuotes46>h\<doubleQuotes46> o<doubleQuotes46>, <doubleQuotes46>tjo,ad<doubleQuotes46> };<newline46mondego>    Random r = new Random(5);<newline46mondego><newline46mondego>    for (int i = 0; i < 10; i++) {<newline46mondego><newline46mondego>        ArrayList<String> row = new ArrayList<String>();<newline46mondego><newline46mondego>        for (int j = 0; j < r.nextInt(10); j++)<newline46mondego>            row.add(rand[r.nextInt(rand.length)]);<newline46mondego><newline46mondego>        data.add(row);<newline46mondego>    }<newline46mondego><newline46mondego>    return data;<newline46mondego>}<newline46mondego>"
"938splitHere46","4338968splitHere46","Re       , 4           , <doubleQuotes46>tjo,ad<doubleQuotes46> , <doubleQuotes46>tjo,ad<doubleQuotes46> ,    <newline46mondego><doubleQuotes46>tjo,ad<doubleQuotes46> , <doubleQuotes46>a <doubleQuotes46><doubleQuotes46>h<doubleQuotes46><doubleQuotes46> o<doubleQuotes46> ,          ,          ,    <newline46mondego>Re       , <doubleQuotes46>a <doubleQuotes46><doubleQuotes46>h<doubleQuotes46><doubleQuotes46> o<doubleQuotes46> , Hohjoh   , <doubleQuotes46>tjo,ad<doubleQuotes46> , 4  <newline46mondego>4        , David       ,          ,          ,    <newline46mondego>4        , Test        , <doubleQuotes46>tjo,ad<doubleQuotes46> , Hohjoh   , Re <newline46mondego>Do       , Hohjoh      , Test     ,          ,    <newline46mondego>Hohjoh   , Song        ,          ,          ,    <newline46mondego>4        , Song        ,          ,          ,    <newline46mondego>4        , Do          , Song     , Do       ,    <newline46mondego>Song     , Test        , Test     ,          ,    <newline46mondego>"
"939splitHere46","4339031splitHere46","height - 100"
"940splitHere46","4339031splitHere46","distanceBetweenTurles"
"941splitHere46","4339031splitHere46","int nrTurtles = Keyboard.nextInt(<doubleQuotes46>Set amount of turtles: <doubleQuotes46>);<newline46mondego><newline46mondego>int height = 300;<newline46mondego>w = new GraphicsWindow(500, height);<newline46mondego><newline46mondego>drawLinez();<newline46mondego><newline46mondego>double distanceBetweenTurles = (height - 100.0) / nrTurtles;<newline46mondego><newline46mondego>for (int k = 1; k <= nrTurtles; k++) {<newline46mondego>    Turtle t = new Turtle(w, 50, 50 + (int) (k * distanceBetweenTurtles));<newline46mondego>    t.right(90);<newline46mondego>    t.setSpeed(100);<newline46mondego>    t.penDown();<newline46mondego>    turtles.add(t);<newline46mondego>}<newline46mondego>"
"942splitHere46","4339034splitHere46","DefaultListModel"
"943splitHere46","4339034splitHere46","JList"
"944splitHere46","4339034splitHere46","JList"
"945splitHere46","4339034splitHere46","JList"
"946splitHere46","4339034splitHere46","class TestModel {<newline46mondego><newline46mondego>private DefaultListModel lm_;<newline46mondego><newline46mondego>  public TestModel() {<newline46mondego>    lm_ = new DefaultListModel();<newline46mondego><newline46mondego>    String[] testList = new String[] {<doubleQuotes46>user1<doubleQuotes46>, <doubleQuotes46>user2<doubleQuotes46>};<newline46mondego><newline46mondego>    for(int i=0; i < testList.length; i++) {<newline46mondego>      lm_.add(i, testList[i]);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public ListModel getListModel() {<newline46mondego>    return lm_;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>  public Test() {<newline46mondego><newline46mondego>    TestModel tm = new TestModel();<newline46mondego><newline46mondego>    JList list = new JList(tm.getListModel());<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"947splitHere46","4339065splitHere46","%WINDIR%\system32"
"948splitHere46","4339065splitHere46","String sysdir = System.getenv(<doubleQuotes46>WINDIR<doubleQuotes46>) + <doubleQuotes46>\\system32<doubleQuotes46>;<newline46mondego>"
"949splitHere46","4339065splitHere46","SYSTEMROOT"
"950splitHere46","4339065splitHere46","WINDIR"
"951splitHere46","4339065splitHere46","WINDIR"
"952splitHere46","4339177splitHere46","@RooEntity.identifierColumn"
"953splitHere46","4339368splitHere46","List<ScoresInterface>"
"954splitHere46","4339550splitHere46","SoapBindingStub binding = (SoapBindingStub) new SforceServiceLocator().getSoap();<newline46mondego>binding._setProperty(SoapBindingStub.ENDPOINT_ADDRESS_PROPERTY, <newline46mondego>                <doubleQuotes46>https://test.salesforce.com/services/Soap/u/20.0<doubleQuotes46>);<newline46mondego>"
"955splitHere46","4339667splitHere46","equals()"
"956splitHere46","4339667splitHere46","hashCode()"
"957splitHere46","4339667splitHere46","BookAuthor"
"958splitHere46","4339667splitHere46","BookAuthor"
"959splitHere46","4339667splitHere46","Author"
"960splitHere46","4339667splitHere46","Book"
"961splitHere46","4339732splitHere46","(-Xmx)"
"962splitHere46","4340107splitHere46","File here = new File(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>System.out.println(here.getAbsolutePath());<newline46mondego>"
"963splitHere46","4340156splitHere46","public class Fish {<newline46mondego><newline46mondego>    private int i = 1;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Reptile{<newline46mondego>  public static void main(String[] args) {<newline46mondego>         Fish k = new Fish();<newline46mondego><newline46mondego>         k.i = 2; // Compiler error.<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"964splitHere46","4340166splitHere46","mWebView.getSettings().setJavaScriptEnabled(true);"
"965splitHere46","4340237splitHere46","long start = 0;<newline46mondego>for(int r = -warmup; r < runs; r++) {<newline46mondego>    if (r == 0) start = System.nanoTime();<newline46mondego>    // do test<newline46mondego>}<newline46mondego>long avg = (System.nanoTime() - start)/runs;<newline46mondego>"
"966splitHere46","4340255splitHere46","preg_replace_callback"
"967splitHere46","4340255splitHere46","/e"
"968splitHere46","4340255splitHere46","/ee"
"969splitHere46","4340255splitHere46","import java.util.*;<newline46mondego>import java.util.regex.*;<newline46mondego><newline46mondego>public class Test<newline46mondego>{<newline46mondego>  public static void main(String[] args) throws Exception<newline46mondego>  {<newline46mondego>    String s = <doubleQuotes46>Lorem ipsum {foo} impedit civibus ei pri, legimus\n<doubleQuotes46> +<newline46mondego>        <doubleQuotes46>antiopam no {marco}, quo id everti forensibus maiestatis.<doubleQuotes46>;<newline46mondego>    Map<String,Object> p = new HashMap<String,Object>()<newline46mondego>    {{<newline46mondego>      put(<doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>BAR<doubleQuotes46>);<newline46mondego>      put(<doubleQuotes46>marco<doubleQuotes46>, <doubleQuotes46>POLO!<doubleQuotes46>);<newline46mondego>    }};<newline46mondego>    System.out.printf(<doubleQuotes46>%s%n%n%s%n<doubleQuotes46>, s, supplant(s, p));<newline46mondego>  }<newline46mondego><newline46mondego>  public static CharSequence supplant(CharSequence message, Map<String,Object> params)<newline46mondego>  {<newline46mondego>    Matcher m = Pattern.compile(<doubleQuotes46>\\{(\\w+)\\}<doubleQuotes46>).matcher(message);<newline46mondego>    StringBuffer sb = new StringBuffer();<newline46mondego>    while (m.find())<newline46mondego>    {<newline46mondego>      m.appendReplacement(sb, <doubleQuotes46><doubleQuotes46>);<newline46mondego>      String key = m.group(1);<newline46mondego>      sb.append(params.get(key).toString());<newline46mondego>    }<newline46mondego>    m.appendTail(sb);<newline46mondego>    return sb.toString();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"970splitHere46","4340255splitHere46","group(1)"
"971splitHere46","4340255splitHere46","appendReplacement(sb, <doubleQuotes46><doubleQuotes46>)"
"972splitHere46","4340255splitHere46","append()"
"973splitHere46","4340255splitHere46","appendReplacement()"
"974splitHere46","4340255splitHere46","appendTail(sb)"
"975splitHere46","4340302splitHere46","<?php<newline46mondego>import com.google.appengine.api.datastore;<newline46mondego>import com.google.appengine.api.datastore.Entity;<newline46mondego>import com.google.appengine.api.datastore.DatastoreServiceFactory;<newline46mondego>import com.google.appengine.api.datastore.Text;<newline46mondego><newline46mondego><newline46mondego>$entity = new Entity(<doubleQuotes46>test<doubleQuotes46>); <newline46mondego>$TextValue = new Text(' --- more than 500 char ---');<newline46mondego>$entity->setProperty('story',$TextValue);<newline46mondego>$dataService = DatastoreServiceFactory::getDatastoreService();<newline46mondego>$dataService->put($entity);<newline46mondego>?><newline46mondego>"
"976splitHere46","4340479splitHere46","SCAN_MODE"
"977splitHere46","4340497splitHere46","\s*\p{Alnum}[\p{Alnum}\s]*<newline46mondego>"
"978splitHere46","4340497splitHere46","[A-Za-z0-9]+[ \t\r\n]*"
"979splitHere46","4340497splitHere46","\s*"
"980splitHere46","4340497splitHere46","xyz"
"981splitHere46","4340497splitHere46","abc xyz"
"982splitHere46","4340497splitHere46","\s*"
"983splitHere46","4340497splitHere46","[\p{Alnum}\s]*"
"984splitHere46","4340497splitHere46","\p{Alnum}"
"985splitHere46","4340497splitHere46","[A-Za-z0-9]"
"986splitHere46","4340497splitHere46","\p{Alnum}"
"987splitHere46","4340497splitHere46","[A-z]"
"988splitHere46","4340497splitHere46","+"
"989splitHere46","4340497splitHere46","\p{Alnum}"
"990splitHere46","4340497splitHere46","\p{Alnum}+"
"991splitHere46","4340497splitHere46","[\p{Alnum}\s]*"
"992splitHere46","4340497splitHere46","\s*"
"993splitHere46","4340497splitHere46","\s"
"994splitHere46","4340497splitHere46","\p{Alnum}"
"995splitHere46","4340515splitHere46","long start = System.currentTimeMillis();<newline46mondego><newline46mondego>        //Execute your code here<newline46mondego><newline46mondego>        long runtime = System.currentTimeMillis() - start;<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Runtime was <doubleQuotes46>+runtime+<doubleQuotes46> ms<doubleQuotes46>);<newline46mondego>"
"996splitHere46","4340515splitHere46","System.currentTimeMillis()"
"997splitHere46","4340911splitHere46","public void send(String fromAddress, String fromName,<newline46mondego>    String toAddress, String subject,<newline46mondego>    String template, Map<String, Object> model) {<newline46mondego>  MimeMessagePreparator preparator = new MimeMessagePreparator() {<newline46mondego>    public void prepare(MimeMessage mimeMessage) throws Exception {<newline46mondego>      MimeMessageHelper message = new MimeMessageHelper(<newline46mondego>          mimeMessage, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>      message.setTo(toAddress);<newline46mondego>      message.setFrom(new InternetAddress(fromAddress, fromName));<newline46mondego>      message.setSubject(subject);<newline46mondego>      message.setText(VelocityEngineUtils<newline46mondego>          .mergeTemplateIntoString(velocityEngine, template, <doubleQuotes46>UTF-8<doubleQuotes46>, <newline46mondego>              model));<newline46mondego>    }<newline46mondego>  };<newline46mondego>  mailSender.send(preparator);<newline46mondego>}<newline46mondego>"
"998splitHere46","4341049splitHere46","while (m < p.length){<newline46mondego>    if (!check(B, p[m])) {<newline46mondego>         B = parenthesis(p, m);<newline46mondego>         printParenthesis(B);<newline46mondego>    }<newline46mondego>    m++;<newline46mondego>}<newline46mondego>"
"999splitHere46","4341049splitHere46","static boolean check(int B[], int m) {<newline46mondego>    int i = 0;<newline46mondego>    while (i < B.length) {<newline46mondego>        if (m == B[i]) {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        i++;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"1000splitHere46","4341136splitHere46","<data>"
"1001splitHere46","4341136splitHere46","<intent-filter>"
"1002splitHere46","4341136splitHere46","VIEW"
"1003splitHere46","4341136splitHere46","text/html"
"1004splitHere46","4341203splitHere46","mHandler"
"1005splitHere46","4341203splitHere46","RecordThread"
"1006splitHere46","4341203splitHere46","mHandler.obtainMessage( ... ).sendToTarget()"
"1007splitHere46","4341203splitHere46","RecordActivity"
"1008splitHere46","4341203splitHere46","private final Handler mHandler = new Handler() {<newline46mondego>    @Override<newline46mondego>    public void handleMessage(Message msg) {<newline46mondego>    }<newline46mondego>"
"1009splitHere46","4341203splitHere46","obtainMessage(int what, int arg1, int arg2)"
"1010splitHere46","4341203splitHere46","msg.what"
"1011splitHere46","4341203splitHere46","msg.arg1"
"1012splitHere46","4341203splitHere46","msg.arg2"
"1013splitHere46","4341217splitHere46","protected void perfromCall(Class<?> expectedException) throws Exception {<newline46mondego>    try {<newline46mondego>        response = call.call(request);<newline46mondego>    } catch (Exception e) {<newline46mondego>        if (!expectedException.isInstance(e)) {<newline46mondego>            throw e;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1014splitHere46","4341383splitHere46","read(byte[])"
"1015splitHere46","4341383splitHere46","EntityUtils.toByteArray()"
"1016splitHere46","4341383splitHere46","public byte[] fetchURL(String url) throws IOException, ClientProtocolException {<newline46mondego>      HttpClient httpclient = new DefaultHttpClient();<newline46mondego>      HttpGet httpget = new HttpGet(url);<newline46mondego>      HttpResponse response = httpclient.execute(httpget);<newline46mondego>      HttpEntity entity = response.getEntity();<newline46mondego>      return EntityUtils.toByteArray(entity);<newline46mondego>}<newline46mondego>"
"1017splitHere46","4341414splitHere46","listBox.setModel(this.lm2);"
"1018splitHere46","4341414splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>  frmMain form = new frmMain();<newline46mondego>  form.setVisible(true);<newline46mondego>  form.log(<doubleQuotes46>Hallo<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1019splitHere46","4341414splitHere46","ProcessReturnedInfo"
"1020splitHere46","4341414splitHere46","frmMain"
"1021splitHere46","4341414splitHere46","private static frmMain instance = null;<newline46mondego><newline46mondego>public static frmMain getInstance() {<newline46mondego>  if (instance == null) {<newline46mondego>    instance = new frmMain();<newline46mondego>  }<newline46mondego>  return instance;<newline46mondego>}<newline46mondego>"
"1022splitHere46","4341414splitHere46","new frmMain()"
"1023splitHere46","4341414splitHere46","frmMain.getInstance()"
"1024splitHere46","4341414splitHere46","RequestInfo"
"1025splitHere46","4341414splitHere46","RS232Example"
"1026splitHere46","4341443splitHere46","harvest()"
"1027splitHere46","4341443splitHere46","harvset()"
"1028splitHere46","4341443splitHere46","@Override"
"1029splitHere46","4341443splitHere46","harvest()"
"1030splitHere46","4341443splitHere46","@Override"
"1031splitHere46","4341664splitHere46","import junit.framework.TestCase;<newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class FooBarBazTests extends TestCase {<newline46mondego><newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testMyTemplateMethod() {<newline46mondego>        List tracker = new ArrayList();<newline46mondego>        SimpleFooBarBaz toTest = new SimpleFooBarBaz(tracker);<newline46mondego><newline46mondego>        toTest.myTemplateMethod();<newline46mondego><newline46mondego><newline46mondego>        assertEquals(<doubleQuotes46>foo<doubleQuotes46>, tracker.get(0));<newline46mondego><newline46mondego>        // more assertions<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testMyTemplateMethodWithMockito() {<newline46mondego>        FooBarBaz mocked = mock(FooBarBaz.class);<newline46mondego><newline46mondego>        mocked.myTemplateMethod();<newline46mondego><newline46mondego>        // times(1) is unnecessary, but explicit<newline46mondego>        verify(mocked, times(1)).foo();<newline46mondego>        verify(mocked, times(1)).bar();<newline46mondego>        verify(mocked, times(1)).baz();<newline46mondego>    }<newline46mondego><newline46mondego>    class SimpleFooBarBaz extends FooBarBaz {<newline46mondego><newline46mondego><newline46mondego>        List tracker;<newline46mondego><newline46mondego>        SimpleFooBarBaz(List tracker) {<newline46mondego>            this.tracker = tracker;<newline46mondego>        }<newline46mondego><newline46mondego>        public void foo() {<newline46mondego>            tracker.add(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void bar() {<newline46mondego>            //To change body of implemented methods use File | Settings | File Templates.<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void baz() {<newline46mondego>            //To change body of implemented methods use File | Settings | File Templates.<newline46mondego>        }<newline46mondego><newline46mondego>        // others there<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1032splitHere46","4341952splitHere46","int[]"
"1033splitHere46","4341952splitHere46","ArrayList<Integer>"
"1034splitHere46","4341952splitHere46","ArrayList<Integer> numbers;"
"1035splitHere46","4341952splitHere46","int readNumber()"
"1036splitHere46","4341952splitHere46","readNumber"
"1037splitHere46","4341952splitHere46","numbers"
"1038splitHere46","4341952splitHere46","numbers"
"1039splitHere46","4341952splitHere46","int readPowerballNumber()"
"1040splitHere46","4341952splitHere46","readInput()"
"1041splitHere46","4341952splitHere46","numbers"
"1042splitHere46","4341952splitHere46","set numbers = an empty list<newline46mondego><newline46mondego>while have less than 5 numbers:<newline46mondego>  number = readNumber()<newline46mondego>  if number is not -1:<newline46mondego>    append number to numbers     <newline46mondego><newline46mondego>while have less than 6 numbers:<newline46mondego>  number = readPowerballNumber()<newline46mondego>  if number is not -1:<newline46mondego>    append number to numbers<newline46mondego><newline46mondego>// at this point, all 6 numbers are valid and loaded<newline46mondego>// you may then call `writeOutput()` to write all the numbers<newline46mondego>"
"1043splitHere46","4341952splitHere46","readInput()"
"1044splitHere46","4341952splitHere46","writeOutput()"
"1045splitHere46","4341952splitHere46","ArrayList<Integer>"
"1046splitHere46","4341972splitHere46","hibernate-2"
"1047splitHere46","4342081splitHere46","class"
"1048splitHere46","4342081splitHere46","methods_count"
"1049splitHere46","4342081splitHere46","ClassFile"
"1050splitHere46","4342081splitHere46","methods_count"
"1051splitHere46","4342081splitHere46","ClassFile"
"1052splitHere46","4342095splitHere46","ServletContext context = getContext();<newline46mondego>String fullPath = context.getRealPath(<doubleQuotes46>/WEB-INF/test/foo.txt<doubleQuotes46>);<newline46mondego>"
"1053splitHere46","4342095splitHere46","getResource"
"1054splitHere46","4342095splitHere46","ServletContext context = getContext();<newline46mondego>URL resourceUrl = context.getResource(<doubleQuotes46>/WEB-INF/test/foo.txt<doubleQuotes46>);<newline46mondego>"
"1055splitHere46","4342095splitHere46","InputStream resourceContent = context.getResourceAsStream(<doubleQuotes46>/WEB-INF/test/foo.txt<doubleQuotes46>);<newline46mondego>"
"1056splitHere46","4342095splitHere46","context"
"1057splitHere46","4342095splitHere46","ServletConfig"
"1058splitHere46","4342095splitHere46","init()"
"1059splitHere46","4342497splitHere46","instanceof"
"1060splitHere46","4342497splitHere46","int[]"
"1061splitHere46","4342497splitHere46","if (e instanceof int[]) {<newline46mondego>   // ...<newline46mondego>}<newline46mondego>"
"1062splitHere46","4342497splitHere46","Object"
"1063splitHere46","4342497splitHere46","String[]"
"1064splitHere46","4342497splitHere46","if (e instanceof Object[]){<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"1065splitHere46","4342497splitHere46","List"
"1066splitHere46","4342497splitHere46","Arrays.asList()"
"1067splitHere46","4342497splitHere46","List<List>"
"1068splitHere46","4342497splitHere46","List<?>"
"1069splitHere46","4342497splitHere46","instanceof"
"1070splitHere46","4342497splitHere46","List<List> list1; <newline46mondego>list1.add(Arrays.asList(new int[2])); <newline46mondego>list1.add(Arrays.asList(new String[3])); <newline46mondego>list1.add(new ArrayList());<newline46mondego>for (List e : list1){<newline46mondego>    // no need to check instanceof Iterable because we guarantee it's a List<newline46mondego>    for (Object object : e) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1071splitHere46","4342497splitHere46","instanceof"
"1072splitHere46","4342506splitHere46","Class.forName(...)"
"1073splitHere46","4342793splitHere46","<SeekBar<newline46mondego>       android:id=<doubleQuotes46>@+id/seekbar_font<doubleQuotes46><newline46mondego>       android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>       android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>       android:layout_margin=<doubleQuotes46>10px<doubleQuotes46><newline46mondego>       android:layout_below=<doubleQuotes46>@id/color_font_text<doubleQuotes46><newline46mondego>       android:max=<doubleQuotes46>100<doubleQuotes46><newline46mondego>       android:progress=<doubleQuotes46>50<doubleQuotes46>></SeekBar><newline46mondego>"
"1074splitHere46","4342793splitHere46","LinearGradient test = new LinearGradient(0.f, 0.f, 300.f, 0.0f,  <newline46mondego>      16711680  16711935  16,776,960  4,294,967,295<newline46mondego>      new int[] { 0xFF000000, 0xFF0000FF, 0xFF00FF00, 0xFF00FFFF,<newline46mondego>      0xFFFF0000, 0xFFFF00FF, 0xFFFFFF00, 0xFFFFFFFF}, <newline46mondego>      null, TileMode.CLAMP);<newline46mondego>ShapeDrawable shape = new ShapeDrawable(new RectShape());<newline46mondego>shape.getPaint().setShader(test);<newline46mondego><newline46mondego>SeekBar seekBarFont = (SeekBar)findViewById(R.id.seekbar_font);<newline46mondego>seekBarFont.setProgressDrawable( (Drawable)shape );<newline46mondego>"
"1075splitHere46","4342866splitHere46","<error-page><newline46mondego>    <error-code>404</error-code><newline46mondego>    <location>/ErrorPage.jsp</location><newline46mondego></error-page><newline46mondego>"
"1076splitHere46","4342946splitHere46","panel.remove(0);<newline46mondego>panel.add(theNewLabel, 0);<newline46mondego>panel.revalidate();<newline46mondego>panel.repaint();<newline46mondego>"
"1077splitHere46","4343152splitHere46","public class GenericOrder<T> {<newline46mondego>    private static int ID = 0;<newline46mondego>    private String serial;<newline46mondego>    List<T> products;<newline46mondego><newline46mondego>    public GenericOrder() {<newline46mondego>        serial = <doubleQuotes46>CONTAINER_<doubleQuotes46> + ID++;<newline46mondego>        products = new ArrayList<T>();<newline46mondego>    }<newline46mondego><newline46mondego>    public String getUniqueSerial() {<newline46mondego>        return serial;<newline46mondego>    }<newline46mondego><newline46mondego>    public void addProduct(T newProduct) {<newline46mondego>        products.add(newProduct);<newline46mondego>    }<newline46mondego><newline46mondego>    public int getNumberOfProducts() {<newline46mondego>        return products.size();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1078splitHere46","4343256splitHere46","String sign = <doubleQuotes46>c<doubleQuotes46>;<newline46mondego>if (value < 0) {<newline46mondego>    sign = <doubleQuotes46>d<doubleQuotes46>;<newline46mondego>    value = -1 * value;<newline46mondego>}<newline46mondego>String val = value + <doubleQuotes46>d<doubleQuotes46><newline46mondego><newline46mondego>byte[] comp3Bytes = new BigInteger(val, 16).toByteArray();<newline46mondego>"
"1079splitHere46","4343258splitHere46","temp"
"1080splitHere46","4343258splitHere46","Reader.read()"
"1081splitHere46","4343258splitHere46","temp"
"1082splitHere46","4343258splitHere46","65535"
"1083splitHere46","4343258splitHere46","temp"
"1084splitHere46","4343258splitHere46","PrintStream.print(char)"
"1085splitHere46","4343258splitHere46","65535"
"1086splitHere46","4343280splitHere46","int"
"1087splitHere46","4343280splitHere46","char"
"1088splitHere46","4343280splitHere46","bw.write((char)i);<newline46mondego>"
"1089splitHere46","4343280splitHere46","bw.write(String.valueOf(i));<newline46mondego>"
"1090splitHere46","4343343splitHere46","maven-failsafe-plugin"
"1091splitHere46","4343395splitHere46","appengine-web.xml"
"1092splitHere46","4343395splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><appengine-web-app xmlns=<doubleQuotes46>http://appengine.google.com/ns/1.0<doubleQuotes46>><newline46mondego>  ...<newline46mondego>  <sessions-enabled>true</sessions-enabled><newline46mondego></appengine-web-app><newline46mondego>"
"1093splitHere46","4343445splitHere46","Restrictions.lt(String propertyName, Object value)"
"1094splitHere46","4343445splitHere46","Restrictions.ltProperty(String propertyName, String otherPropertyName)"
"1095splitHere46","4343445splitHere46","Restrictions.lt(String propertyName, Object value)"
"1096splitHere46","4343445splitHere46","Restrictions.ltProperty(String propertyName, String otherPropertyName)"
"1097splitHere46","4343445splitHere46","Restrictions.lt(<doubleQuotes46>Y<doubleQuotes46>, <doubleQuotes46>X<doubleQuotes46>)"
"1098splitHere46","4343455splitHere46","CREATE TABLE"
"1099splitHere46","4343455splitHere46","ALTER TABLE"
"1100splitHere46","4343455splitHere46","CREATE INDEX"
"1101splitHere46","4343455splitHere46","DROP ..."
"1102splitHere46","4343547splitHere46","List<? extends Number> foo3"
"1103splitHere46","4343547splitHere46","List<? extends Number> foo3 = new ArrayList<Number>();  // Number <doubleQuotes46>extends<doubleQuotes46> Number (in this context)<newline46mondego>List<? extends Number> foo3 = new ArrayList<Integer>(); // Integer extends Number<newline46mondego>List<? extends Number> foo3 = new ArrayList<Double>();  // Double extends Number<newline46mondego>"
"1104splitHere46","4343547splitHere46","List foo3"
"1105splitHere46","4343547splitHere46","Number"
"1106splitHere46","4343547splitHere46","foo3"
"1107splitHere46","4343547splitHere46","Number"
"1108splitHere46","4343547splitHere46","Number"
"1109splitHere46","4343547splitHere46","Integer"
"1110splitHere46","4343547splitHere46","foo3"
"1111splitHere46","4343547splitHere46","List<Double>"
"1112splitHere46","4343547splitHere46","Double"
"1113splitHere46","4343547splitHere46","foo3"
"1114splitHere46","4343547splitHere46","List<Integer>"
"1115splitHere46","4343547splitHere46","List foo3"
"1116splitHere46","4343547splitHere46","ArrayList"
"1117splitHere46","4343547splitHere46","Integer"
"1118splitHere46","4343547splitHere46","foo3"
"1119splitHere46","4343547splitHere46","List<Double>"
"1120splitHere46","4343547splitHere46","Double"
"1121splitHere46","4343547splitHere46","foo3"
"1122splitHere46","4343547splitHere46","List<Integer>"
"1123splitHere46","4343547splitHere46","Number"
"1124splitHere46","4343547splitHere46","foo3"
"1125splitHere46","4343547splitHere46","List<Integer>"
"1126splitHere46","4343547splitHere46","List<? extends T>"
"1127splitHere46","4343547splitHere46","List"
"1128splitHere46","4343547splitHere46","List"
"1129splitHere46","4343547splitHere46","T"
"1130splitHere46","4343547splitHere46","T"
"1131splitHere46","4343547splitHere46","List < ? super T >"
"1132splitHere46","4343547splitHere46","List<? super Integer> foo3"
"1133splitHere46","4343547splitHere46","List<? super Integer> foo3 = new ArrayList<Integer>();  // Integer is a <doubleQuotes46>superclass<doubleQuotes46> of Integer (in this context)<newline46mondego>List<? super Integer> foo3 = new ArrayList<Number>();   // Number is a superclass of Integer<newline46mondego>List<? super Integer> foo3 = new ArrayList<Object>();   // Object is a superclass of Integer<newline46mondego>"
"1134splitHere46","4343547splitHere46","List foo3"
"1135splitHere46","4343547splitHere46","Integer"
"1136splitHere46","4343547splitHere46","foo3"
"1137splitHere46","4343547splitHere46","List<Number>"
"1138splitHere46","4343547splitHere46","List<Object>"
"1139splitHere46","4343547splitHere46","Number"
"1140splitHere46","4343547splitHere46","foo3"
"1141splitHere46","4343547splitHere46","List<Object>"
"1142splitHere46","4343547splitHere46","Object"
"1143splitHere46","4343547splitHere46","Object"
"1144splitHere46","4343547splitHere46","List foo3"
"1145splitHere46","4343547splitHere46","ArrayList"
"1146splitHere46","4343547splitHere46","Integer"
"1147splitHere46","4343547splitHere46","Integer"
"1148splitHere46","4343547splitHere46","Integer"
"1149splitHere46","4343547splitHere46","Integer"
"1150splitHere46","4343547splitHere46","Double"
"1151splitHere46","4343547splitHere46","foo3"
"1152splitHere46","4343547splitHere46","ArrayList<Integer>"
"1153splitHere46","4343547splitHere46","Number"
"1154splitHere46","4343547splitHere46","foo3"
"1155splitHere46","4343547splitHere46","ArrayList<Integer>"
"1156splitHere46","4343547splitHere46","Object"
"1157splitHere46","4343547splitHere46","foo3"
"1158splitHere46","4343547splitHere46","ArrayList<Integer>"
"1159splitHere46","4343547splitHere46","List"
"1160splitHere46","4343547splitHere46","T"
"1161splitHere46","4343547splitHere46","T"
"1162splitHere46","4343547splitHere46","? extends T"
"1163splitHere46","4343547splitHere46","List<? extends Integer>"
"1164splitHere46","4343547splitHere46","List"
"1165splitHere46","4343547splitHere46","T"
"1166splitHere46","4343547splitHere46","T"
"1167splitHere46","4343547splitHere46","? super T"
"1168splitHere46","4343547splitHere46","List<? super Integer>"
"1169splitHere46","4343547splitHere46","List<Integer>"
"1170splitHere46","4343547splitHere46","src"
"1171splitHere46","4343547splitHere46","extends"
"1172splitHere46","4343547splitHere46","dest"
"1173splitHere46","4343547splitHere46","super"
"1174splitHere46","4343547splitHere46","public class Collections { <newline46mondego>  public static <T> void copy  <newline46mondego>  ( List<? super T> dest, List<? extends T> src) {<newline46mondego>      for (int i=0; i<src.size(); i++) <newline46mondego>        dest.set(i,src.get(i)); <newline46mondego>  } <newline46mondego>}<newline46mondego>"
"1175splitHere46","4343548splitHere46","equals"
"1176splitHere46","4343548splitHere46","hashCode"
"1177splitHere46","4343548splitHere46","Comparable<T>"
"1178splitHere46","4343548splitHere46","Comparator<T>"
"1179splitHere46","4343618splitHere46","XMLSignature signature = fac.unmarshalXMLSignature(valContext);<newline46mondego>KeyInfo keyInfo = signature.getKeyInfo();<newline46mondego><newline46mondego>Iterator iter = keyInfo.getContent().iterator();<newline46mondego>X509CertImpl certImpl = null;<newline46mondego>while (iter.hasNext()) {<newline46mondego>    XMLStructure kiType = (XMLStructure) iter.next();<newline46mondego>    if (kiType instanceof X509Data) {<newline46mondego>        X509Data xd = (X509Data) kiType;<newline46mondego>        Object[] entries = xd.getContent().toArray();<newline46mondego>        X509CRL crl = null;<newline46mondego>        for (int i = 0; ( i < entries.length); i++) {<newline46mondego>            if (entries[i] instanceof X509CRL) {<newline46mondego>                crl = (X509CRL) entries[i];<newline46mondego>            }<newline46mondego>            if (entries[i] instanceof X509CertImpl) {<newline46mondego>                certImpl = (X509CertImpl) entries[i];<newline46mondego>                try {<newline46mondego>                    certImpl.checkValidity(signDate);<newline46mondego>                } catch (CertificateExpiredException expiredEx) {<newline46mondego>                    System.out.println(<doubleQuotes46>CERTIFICATE EXPIRED!<doubleQuotes46>);<newline46mondego>                    return 1;<newline46mondego>                } catch (CertificateNotYetValidException notYetValidEx) {<newline46mondego>                    System.out.println(<doubleQuotes46>CERTIFICATE NOT VALID YET!<doubleQuotes46>);<newline46mondego>                    return 0;<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46>CERTIFICATE IS VALID!<doubleQuotes46>);                        <newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1180splitHere46","4343704splitHere46","new XMLOutputter().outputString(doc);<newline46mondego>"
"1181splitHere46","4343733splitHere46","build.xml"
"1182splitHere46","4343733splitHere46","ant jar"
"1183splitHere46","4343879splitHere46","MessageFactory messageFactory = MessageFactory.newInstance();<newline46mondego><newline46mondego>public SOAPMessage toMessage(Document jdomDocument) throws IOException, SOAPException {<newline46mondego>   String xml = new XMLOutputter().outputString(jdomDocument);<newline46mondego>   InputStream inputStream = new StringBufferInputStream(xml);<newline46mondego>   return messageFactory.createMessage(null, inputStream);<newline46mondego>}<newline46mondego>"
"1184splitHere46","4343930splitHere46","#{set 'anyBlock'}<newline46mondego>     <h1>Main title</h1><newline46mondego>#{/set}<newline46mondego>"
"1185splitHere46","4343930splitHere46","#{get 'anyBlock' /}<newline46mondego>"
"1186splitHere46","4343932splitHere46","StringBuilder sb = new StringBuilder();<newline46mondego><newline46mondego>sb.append(<doubleQuotes46><ArrayOfString><doubleQuotes46>);<newline46mondego>sb.append(<doubleQuotes46><string><doubleQuotes46>).sb.append(<doubleQuotes46>the_command<doubleQuotes46>).sb.append(<doubleQuotes46></string><doubleQuotes46>);<newline46mondego>sb.append(<doubleQuotes46></ArrayOfString><doubleQuotes46>);<newline46mondego><newline46mondego>StringEntity entity = new StringEntity(sb.toString(), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>httppost.setEntity(entity);  <newline46mondego>httppost.addHeader(<doubleQuotes46>Accept<doubleQuotes46>, <doubleQuotes46>application/xml<doubleQuotes46>);<newline46mondego>httppost.addHeader(<doubleQuotes46>Content-Type<doubleQuotes46>, <doubleQuotes46>application/xml<doubleQuotes46>);<newline46mondego><newline46mondego>HttpResponse response = httpclient.execute(httppost); <newline46mondego>"
"1187splitHere46","4344035splitHere46","com.google.common.collect"
"1188splitHere46","4344035splitHere46","AbstractSortedSetMultimap"
"1189splitHere46","4344035splitHere46","enum"
"1190splitHere46","4344035splitHere46","public enum Color{<newline46mondego>    RED, BLUE, GREEN<newline46mondego>};<newline46mondego>"
"1191splitHere46","4344035splitHere46","HashMap"
"1192splitHere46","4344035splitHere46","SortedSetMultimap<Color,String> simple = <newline46mondego>    new EnumValueSortMultiMap<Color, String>();<newline46mondego>"
"1193splitHere46","4344035splitHere46","Comparator(V)"
"1194splitHere46","4344035splitHere46","HashMap<K,SortedSet<V>>"
"1195splitHere46","4344035splitHere46","SortedSetMultimap<Color,String> inreverse =<newline46mondego>    new EnumValueSortMultiMap<Color, String>(<newline46mondego>        Ordering.natural().reverse()<newline46mondego>    );<newline46mondego>"
"1196splitHere46","4344035splitHere46","Map<K,SortedSet<V>>"
"1197splitHere46","4344035splitHere46","SortedMap"
"1198splitHere46","4344035splitHere46","SortedSetMultimap<Color,String> withSortedKeys = <newline46mondego>    new EnumValueSortMultiMap<Color, String>(<newline46mondego>        new TreeMap<Color, Collection<String>>()<newline46mondego>    );<newline46mondego>"
"1199splitHere46","4344035splitHere46","Map<K,SortedSet<V>>"
"1200splitHere46","4344035splitHere46","Comparator<V>"
"1201splitHere46","4344035splitHere46","SortedSetMultimap<Color,String> reverseWithSortedKeys = <newline46mondego>    new EnumValueSortMultiMap<Color, String>(<newline46mondego>        new TreeMap<Color, Collection<String>>(),<newline46mondego>        Ordering.natural().reverse()<newline46mondego>    );<newline46mondego>"
"1202splitHere46","4344035splitHere46","Class<K extends Enum<K>>"
"1203splitHere46","4344035splitHere46","EnumMap"
"1204splitHere46","4344035splitHere46","SortedSetMultimap<Color,String> withEnumMap =<newline46mondego>    new EnumValueSortMultiMap<Color, String>(<newline46mondego>        Color.class<newline46mondego>    );<newline46mondego>"
"1205splitHere46","4344035splitHere46","Class<K extends Enum<K>>"
"1206splitHere46","4344035splitHere46","Comparator<V>"
"1207splitHere46","4344035splitHere46","SortedSetMultimap<Color,String> reverseWithEnumMap =<newline46mondego>    new EnumValueSortMultiMap<Color, String>(<newline46mondego>        Color.class, Ordering.natural().reverse()<newline46mondego>    );<newline46mondego>"
"1208splitHere46","4344035splitHere46","package com.google.common.collect;<newline46mondego><newline46mondego>import java.util.Collection;<newline46mondego>import java.util.Comparator;<newline46mondego>import java.util.EnumMap;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.SortedSet;<newline46mondego>import java.util.TreeSet;<newline46mondego><newline46mondego>public class EnumValueSortMultiMap<K extends Enum<K>,<newline46mondego>    V extends Comparable<? super V>><newline46mondego>    extends AbstractSortedSetMultimap<K, V>{<newline46mondego><newline46mondego>    private static final long serialVersionUID = 5359491222446743952L;<newline46mondego><newline46mondego>    private Comparator<? super V> comparator;<newline46mondego>    private Class<K> enumType;<newline46mondego><newline46mondego>    public EnumValueSortMultiMap(){<newline46mondego>        this(new HashMap<K, Collection<V>>());<newline46mondego>    }<newline46mondego><newline46mondego>    public EnumValueSortMultiMap(final Comparator<? super V> comparator){<newline46mondego>        this(new HashMap<K, Collection<V>>(), comparator);<newline46mondego>    }<newline46mondego><newline46mondego>    public EnumValueSortMultiMap(final Map<K, Collection<V>> map){<newline46mondego>        this(map, Ordering.natural());<newline46mondego>    }<newline46mondego><newline46mondego>    public EnumValueSortMultiMap(final Map<K, Collection<V>> map,<newline46mondego>        final Comparator<? super V> comparator){<newline46mondego>        super(map);<newline46mondego>        this.comparator = comparator;<newline46mondego>    }<newline46mondego><newline46mondego>    public EnumValueSortMultiMap(final Class<K> enumClass,<newline46mondego>        final Comparator<? super V> comparator){<newline46mondego>        this(new EnumMap<K, Collection<V>>(enumClass), comparator);<newline46mondego>    }<newline46mondego><newline46mondego>    public EnumValueSortMultiMap(final Class<K> enumClass){<newline46mondego>        this(new EnumMap<K, Collection<V>>(enumClass));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    Map<K, Collection<V>> backingMap(){<newline46mondego>        return new EnumMap<K, Collection<V>>(enumType);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Comparator<? super V> valueComparator(){<newline46mondego>        return comparator;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    SortedSet<V> createCollection(){<newline46mondego>        return new TreeSet<V>(comparator);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1209splitHere46","4344035splitHere46","SortedArrayList"
"1210splitHere46","4344035splitHere46","public static <E extends Enum<E>, V> Multimap<E, V> getMap(<newline46mondego>    final Class<E> clz){<newline46mondego><newline46mondego>    return Multimaps.newListMultimap(<newline46mondego>        Maps.<E, Collection<V>> newEnumMap(clz),<newline46mondego>        new Supplier<List<V>>(){<newline46mondego>            @Override<newline46mondego>            public List<V> get(){<newline46mondego>                return new SortedArrayList<V>();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    );<newline46mondego>}<newline46mondego>"
"1211splitHere46","4344109splitHere46","String x = null;<newline46mondego>List<String> l = new ArrayList<String>();<newline46mondego>for (int i = 0; i < 10; i ++) {<newline46mondego>    x = String.valueOf(i);<newline46mondego>    l.add(x);<newline46mondego>}<newline46mondego><newline46mondego>System.out.println(l);<newline46mondego>"
"1212splitHere46","4344109splitHere46","add"
"1213splitHere46","4344109splitHere46","getValue()"
"1214splitHere46","4344109splitHere46","x"
"1215splitHere46","4344109splitHere46","while (true) {<newline46mondego>   Integer[] x = new x[n];<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"1216splitHere46","4344109splitHere46","x"
"1217splitHere46","4344203splitHere46","f := utl_file.fopen('my_dir','my_file','w');<newline46mondego>FOR r_items IN (SELECT * FROM items) LOOP<newline46mondego>  utl_file.put_line(f,r_items.name);<newline46mondego><newline46mondego>  FOR r_audit IN (SELECT * FROM audit WHERE item_id = r_items.id) LOOP<newline46mondego>    utl_file.put_line(f,r_audit.some_field);<newline46mondego>  END LOOP;<newline46mondego><newline46mondego>  FOR r_comments IN (SELECT * FROM comments WHERE item_id = r_items.id) LOOP<newline46mondego>    utl_file.put_line(f,r_comments.some_field);<newline46mondego>  END LOOP;<newline46mondego>END LOOP;<newline46mondego>"
"1218splitHere46","4344297splitHere46","frame.setVisible(false)"
"1219splitHere46","4344297splitHere46","frame.setVisible(true)"
"1220splitHere46","4344324splitHere46","Comparable"
"1221splitHere46","4344324splitHere46","equals()"
"1222splitHere46","4344324splitHere46","hashcode()"
"1223splitHere46","4344324splitHere46","compareTo()"
"1224splitHere46","4344324splitHere46","SortedSet"
"1225splitHere46","4344324splitHere46","MultiSet"
"1226splitHere46","4344324splitHere46","SortedList"
"1227splitHere46","4344324splitHere46","ArrayList"
"1228splitHere46","4344324splitHere46","Collections.binarySearch()"
"1229splitHere46","4344324splitHere46","add()"
"1230splitHere46","4344324splitHere46","UnsupportedOperationException"
"1231splitHere46","4344324splitHere46","List"
"1232splitHere46","4344324splitHere46","ListIterator"
"1233splitHere46","4344324splitHere46","ArrayList"
"1234splitHere46","4344324splitHere46","Comparator"
"1235splitHere46","4344324splitHere46","Comparable"
"1236splitHere46","4344324splitHere46","RuntimeException"
"1237splitHere46","4344324splitHere46","public class SortedArrayList<E> extends ForwardingList<E> implements<newline46mondego>    RandomAccess{<newline46mondego><newline46mondego>    private final class ListIteratorImpl extends ForwardingListIterator<E>{<newline46mondego>        private final int start;<newline46mondego>        public ListIteratorImpl(final int start){<newline46mondego>            this.start = start;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void set(E element){throw new UnsupportedOperationException();}<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void add(E element){throw new UnsupportedOperationException();}<newline46mondego><newline46mondego>        @Override<newline46mondego>        protected ListIterator<E> delegate(){return inner.listIterator(start);};<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private Comparator<? super E> comparator;<newline46mondego><newline46mondego>    private List<E> inner;<newline46mondego><newline46mondego>    public SortedArrayList(){this(null, null, null);}<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    private SortedArrayList(<newline46mondego>        final List<E> existing,<newline46mondego>        final Collection<? extends E> values,<newline46mondego>        final Comparator<? super E> comparator<newline46mondego>    ){<newline46mondego>        this.comparator =<newline46mondego>            (Comparator<? super E>)<newline46mondego>               (comparator == null<newline46mondego>                   ? Ordering.natural()<newline46mondego>                   : comparator   );<newline46mondego>        inner = (<newline46mondego>            existing == null<newline46mondego>                ? (values == null<newline46mondego>                      ? new ArrayList<E>(values)<newline46mondego>                      : new ArrayList<E>()<newline46mondego>                   )<newline46mondego>                : existing;<newline46mondego>    }<newline46mondego><newline46mondego>    public SortedArrayList(final Collection<? extends E> c){<newline46mondego>        this(null, c, null);<newline46mondego>    }<newline46mondego><newline46mondego>    public SortedArrayList(final Collection<? extends E> c,<newline46mondego>        final Comparator<? super E> comparator){<newline46mondego>        this(null, c, comparator);<newline46mondego>    }<newline46mondego><newline46mondego>    public SortedArrayList(final Comparator<? super E> comparator){<newline46mondego>        this(null, null, comparator);<newline46mondego>    }<newline46mondego><newline46mondego>    public SortedArrayList(final int initialCapacity){<newline46mondego>        this(new ArrayList<E>(initialCapacity), null, null);<newline46mondego>    }<newline46mondego><newline46mondego>    public SortedArrayList(final int initialCapacity,<newline46mondego>        final Comparator<? super E> comparator){<newline46mondego>        this(new ArrayList<E>(initialCapacity), null, comparator);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean add(final E e){<newline46mondego>        inner.add(<newline46mondego>            Math.abs(<newline46mondego>                Collections.binarySearch(inner, e, comparator)<newline46mondego>            ) + 1,<newline46mondego>            e<newline46mondego>        );<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void add(int i, E e){throw new UnsupportedOperationException();}<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean addAll(final Collection<? extends E> collection){<newline46mondego>        return standardAddAll(collection);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean addAll(int i,<newline46mondego>        Collection<? extends E> es){<newline46mondego>        throw new UnsupportedOperationException();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected List<E> delegate(){ return inner; }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public List<E> subList(final int fromIndex, final int toIndex){<newline46mondego>        return new SortedArrayList<E>(<newline46mondego>            inner.subList(fromIndex, toIndex),<newline46mondego>            null,<newline46mondego>            comparator<newline46mondego>        );<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ListIterator<E> listIterator(){ return new ListIteratorImpl(0); }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ListIterator<E> listIterator(final int index){<newline46mondego>        return new ListIteratorImpl(index);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public E set(int i, E e){ throw new UnsupportedOperationException(); }<newline46mondego><newline46mondego>}<newline46mondego>"
"1238splitHere46","4344548splitHere46","XHTML Mobile Profile 1.0"
"1239splitHere46","4344548splitHere46","XHTML-MP 1.0"
"1240splitHere46","4344593splitHere46","orphanRemoval"
"1241splitHere46","4344593splitHere46","@OneToMany"
"1242splitHere46","4344593splitHere46","@OneToOne"
"1243splitHere46","4344593splitHere46","@OneToMany(mappedBy=<doubleQuotes46>customer<doubleQuotes46>, orphanRemoval=true)<newline46mondego>public List<Order> orders;<newline46mondego>"
"1244splitHere46","4344604splitHere46","final"
"1245splitHere46","4344604splitHere46","final List<String> list = new ArrayList<String>();<newline46mondego>"
"1246splitHere46","4344604splitHere46","CallBack"
"1247splitHere46","4344604splitHere46","final"
"1248splitHere46","4344762splitHere46","String[] items = {<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>, <doubleQuotes46>D<doubleQuotes46>};<newline46mondego>JList list = new JList(items);<newline46mondego><newline46mondego>list.addMouseListener(new MouseAdapter() {<newline46mondego>    public void mouseClicked(MouseEvent evt) {<newline46mondego>        JList list = (JList)evt.getSource();<newline46mondego>        if (evt.getClickCount() == 2) {<newline46mondego>            int index = list.locationToIndex(evt.getPoint());<newline46mondego>        } else if (evt.getClickCount() == 3) {   // Triple-click<newline46mondego>            int index = list.locationToIndex(evt.getPoint());<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1249splitHere46","4344789splitHere46","wsimport"
"1250splitHere46","4344789splitHere46","wsimport"
"1251splitHere46","4344815splitHere46","DataOutputStream dos<newline46mondego>byte[] bytes;<newline46mondego><newline46mondego>dos.writeUTF(filename);<newline46mondego>dos.writeInt(bytes.length);<newline46mondego>dos.write(bytes);<newline46mondego>"
"1252splitHere46","4344815splitHere46","DataInputStream dis<newline46mondego>String filename = dis.readUTF();<newline46mondego>int length = dis.readInt();<newline46mondego>byte[] bytes = new byte[length];<newline46mondego>dis.readFully(bytes);<newline46mondego>"
"1253splitHere46","4344917splitHere46","newExchange"
"1254splitHere46","4344917splitHere46","Integer[] lastExchange = getValue();<newline46mondego>Integer[] exchangeToAdd = getValue();<newline46mondego>exchanges.add(exchangeToAdd);<newline46mondego><newline46mondego>while (true) {<newline46mondego>   Integer[] newExchange = getValue(lastExchange);<newline46mondego>   Integer[] exchangeToAddForLoop = new Integer[nColors];<newline46mondego>   for (int i=0; i<nColors; i++) {<newline46mondego>      lastExchange[i] = newExchange[i];<newline46mondego>      exchangeToAddForLoop[i] = newExchange[i];<newline46mondego>   }<newline46mondego>   exchanges.add(exchangeToAddForLoop);<newline46mondego>}<newline46mondego>"
"1255splitHere46","4344919splitHere46","<form action=<doubleQuotes46>upload-script-url<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>  <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>file<doubleQuotes46>><newline46mondego>  <input type=<doubleQuotes46>submit<doubleQuotes46>><newline46mondego></form><newline46mondego>"
"1256splitHere46","4344963splitHere46","object instanceof Type<newline46mondego>"
"1257splitHere46","4344963splitHere46","true"
"1258splitHere46","4344963splitHere46","Type"
"1259splitHere46","4344963splitHere46","Type"
"1260splitHere46","4344963splitHere46","object.getClass().equals(Type.class) <newline46mondego>"
"1261splitHere46","4344963splitHere46","true"
"1262splitHere46","4344963splitHere46","Type"
"1263splitHere46","4345064splitHere46","<If>"
"1264splitHere46","4345064splitHere46","<condition>"
"1265splitHere46","4345064splitHere46","<if><newline46mondego>   <or><newline46mondego>    <equals arg1=<doubleQuotes46>${var}<doubleQuotes46> arg2=<doubleQuotes46>one<doubleQuotes46>/><newline46mondego>    <equals arg1=<doubleQuotes46>${var}<doubleQuotes46> arg2=<doubleQuotes46>two<doubleQuotes46>/><newline46mondego>    <equals arg1=<doubleQuotes46>${var}<doubleQuotes46> arg2=<doubleQuotes46>three<doubleQuotes46>/><newline46mondego>    <equals arg1=<doubleQuotes46>${var}<doubleQuotes46> arg2=<doubleQuotes46>four<doubleQuotes46>/><newline46mondego>   </or><newline46mondego>   <then><newline46mondego>    <echo message=<doubleQuotes46>basic dir: ${var}<doubleQuotes46>/><newline46mondego>    <copy todir=<doubleQuotes46>../direct<doubleQuotes46> verbose=<doubleQuotes46>yes<doubleQuotes46> failonerror=<doubleQuotes46>no<doubleQuotes46> overwrite=<doubleQuotes46>yes<doubleQuotes46>><newline46mondego>        <fileset dir=<doubleQuotes46>${var}<doubleQuotes46>><newline46mondego>            <include name=<doubleQuotes46>**<doubleQuotes46>/><newline46mondego>        </fileset><newline46mondego>    </copy><newline46mondego>   </then><newline46mondego></if><newline46mondego>"
"1266splitHere46","4345248splitHere46","JDBCRealm"
"1267splitHere46","4345248splitHere46","META-INF/context.xml"
"1268splitHere46","4345363splitHere46","WebRequest req = WebRequest.Create(url); // note this is IDisposable so<newline46mondego>                                         // should be in a <doubleQuotes46>using<doubleQuotes46> block, or<newline46mondego>                                         // otherwise disposed.<newline46mondego>"
"1269splitHere46","4345363splitHere46","WebClient"
"1270splitHere46","4345363splitHere46","HttpWebRequest"
"1271splitHere46","4345363splitHere46","WebRequest"
"1272splitHere46","4345363splitHere46","string s;<newline46mondego>using(var client = new WebClient()) {<newline46mondego>    s = client.DownloadString(url);<newline46mondego>}<newline46mondego>"
"1273splitHere46","4345678splitHere46","."
"1274splitHere46","4345678splitHere46","Pattern.DOTALL"
"1275splitHere46","4345678splitHere46","\s*\S+<newline46mondego>"
"1276splitHere46","4345678splitHere46","\s*"
"1277splitHere46","4345678splitHere46","\S+"
"1278splitHere46","4345717splitHere46","\p{Alpha}"
"1279splitHere46","4345717splitHere46","alphabetics = <doubleQuotes46>[\\pL\\pM\\p{Nl]<doubleQuotes46>;<newline46mondego>"
"1280splitHere46","4345717splitHere46","ASCII_digits    = <doubleQuotes46>[0-9]<doubleQuotes46>;<newline46mondego>all_numbers     = <doubleQuotes46>\\pN<doubleQuotes46>;<newline46mondego>decimal_numbers = <doubleQuotes46>\\p{Nd}<doubleQuotes46><newline46mondego>"
"1281splitHere46","4345717splitHere46","numeric"
"1282splitHere46","4345717splitHere46","alphanumerics = <doubleQuotes46>[<doubleQuotes46> + alphabetics + numerics + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>"
"1283splitHere46","4345717splitHere46","\w"
"1284splitHere46","4345717splitHere46","identifier_chars = <doubleQuotes46>[\\pL\\pM\\p{Nd}\\p{Nl}\\p{Pc}[\\p{InEnclosedAlphanumerics}&&\\p{So}]]<doubleQuotes46>;<newline46mondego>"
"1285splitHere46","4345754splitHere46","File#createTempFile()"
"1286splitHere46","4345754splitHere46","File file = File.createTempFile(<doubleQuotes46>upload-<doubleQuotes46>, <doubleQuotes46>.bin<doubleQuotes46>, new File(<doubleQuotes46>/path/to/your/uploads<doubleQuotes46>));<newline46mondego>item.write(file);<newline46mondego>"
"1287splitHere46","4345754splitHere46","File#renameTo()"
"1288splitHere46","4345754splitHere46","File destination = new File(<doubleQuotes46>/path/to/your/uploads<doubleQuotes46>, file.getName());<newline46mondego>file.renameTo(destination);<newline46mondego>"
"1289splitHere46","4346098splitHere46","telnet [host] [port]"
"1290splitHere46","4346098splitHere46","-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y<newline46mondego>"
"1291splitHere46","4346185splitHere46","wait()"
"1292splitHere46","4346185splitHere46","barrier.wait()"
"1293splitHere46","4346185splitHere46","synchronized(barrier)"
"1294splitHere46","4346185splitHere46","await()"
"1295splitHere46","4346185splitHere46","wait()"
"1296splitHere46","4346193splitHere46","Intent intent = new Intent(Intent.ACTION_GET_CONTENT);  <newline46mondego>intent.setType(<doubleQuotes46>image/*<doubleQuotes46>);<newline46mondego>startActivityForResult(intent, 10);<newline46mondego>"
"1297splitHere46","4346193splitHere46","onActivityResult"
"1298splitHere46","4346354splitHere46","public class StringDoubleMapAdapter extends GenericMapAdapter<String, Double> {<newline46mondego>}<newline46mondego>"
"1299splitHere46","4346354splitHere46","@XmlJavaTypeAdapter(StringDoubleMapAdapter.class)//<newline46mondego>private final HashMap<String, Double> depWageSum = //<newline46mondego>new HashMap<String, Double>();<newline46mondego>"
"1300splitHere46","4346366splitHere46","a * b"
"1301splitHere46","4346366splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>\\(([^()]*)\\)<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(<doubleQuotes46>(((a * b) * ) + c) * d)<doubleQuotes46>);<newline46mondego>if (m.find())<newline46mondego>    System.out.println(m.group(1));   // prints <doubleQuotes46>a * b<doubleQuotes46><newline46mondego>"
"1302splitHere46","4346408splitHere46","test2"
"1303splitHere46","4346408splitHere46","test"
"1304splitHere46","4346408splitHere46","test2"
"1305splitHere46","4346408splitHere46","function a = test2(in)<newline46mondego>a = test(in);<newline46mondego>"
"1306splitHere46","4346408splitHere46","test2"
"1307splitHere46","4346553splitHere46","________          ____________<newline46mondego>|        |         \          /<newline46mondego>|        |  ==>     \        /<newline46mondego>|        |           \      /<newline46mondego>|________|            \____/<newline46mondego>"
"1308splitHere46","4346553splitHere46","ImagePlus"
"1309splitHere46","4346676splitHere46","public void onModuleLoad() {<newline46mondego>    final CellTable<Row> table = new CellTable<Row>();<newline46mondego><newline46mondego>    TextColumn<Row> firstColumn = new TextColumn<Starter.Row>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getValue(Row object) {<newline46mondego>            return object.firstColumn;<newline46mondego>        }<newline46mondego>    };<newline46mondego>    table.addColumn(firstColumn, <doubleQuotes46>header one<doubleQuotes46>);<newline46mondego><newline46mondego>    TextColumn<Row> secondColumn = new TextColumn<Starter.Row>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getValue(Row object) {<newline46mondego>            return object.secondColumn;<newline46mondego>        }<newline46mondego>    };<newline46mondego>    table.addColumn(secondColumn, <doubleQuotes46>header two<doubleQuotes46>);<newline46mondego><newline46mondego>    TextColumn<Row> thirdColumn = new TextColumn<Starter.Row>() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getValue(Row object) {<newline46mondego>            return object.thirdColumn;<newline46mondego>        }<newline46mondego>    };<newline46mondego>    table.addColumn(thirdColumn, <doubleQuotes46>header three<doubleQuotes46>);<newline46mondego><newline46mondego>    table.setRowCount(getList().size());<newline46mondego>    final ListDataProvider<Row> dataProvider = new ListDataProvider<Starter.Row>(getList());<newline46mondego>    dataProvider.addDataDisplay(table);<newline46mondego><newline46mondego>    final SingleSelectionModel<Row> selectionModel = new SingleSelectionModel<Starter.Row>();<newline46mondego>    table.setSelectionModel(selectionModel);<newline46mondego><newline46mondego>    Button btn = new Button(<doubleQuotes46>delete entry<doubleQuotes46>);<newline46mondego>    btn.addClickHandler(new ClickHandler() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(ClickEvent event) {<newline46mondego>            Row selected = selectionModel.getSelectedObject();<newline46mondego>            if (selected != null) {<newline46mondego>                dataProvider.getList().remove(selected);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    RootPanel.get().add(table);<newline46mondego>    RootPanel.get().add(btn);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>private class Row {<newline46mondego><newline46mondego>    private String firstColumn;<newline46mondego>    private String secondColumn;<newline46mondego>    private String thirdColumn;<newline46mondego><newline46mondego>    public Row(String firstColumn, String secondColumn, String thirdColumn) {<newline46mondego>        this.firstColumn = firstColumn;<newline46mondego>        this.secondColumn = secondColumn;<newline46mondego>        this.thirdColumn = thirdColumn;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>private LinkedList<Row> getList() {<newline46mondego>    LinkedList<Row> list = new LinkedList<Row>();<newline46mondego>    list.add(new Row(<doubleQuotes46>first<doubleQuotes46>, <doubleQuotes46>entry<doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>));<newline46mondego>    list.add(new Row(<doubleQuotes46>second<doubleQuotes46>, <doubleQuotes46>entry<doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>));<newline46mondego>    list.add(new Row(<doubleQuotes46>third<doubleQuotes46>, <doubleQuotes46>entry<doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>));<newline46mondego>    list.add(new Row(<doubleQuotes46>fourth<doubleQuotes46>, <doubleQuotes46>entry<doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>));<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"1310splitHere46","4346682splitHere46","Collection"
"1311splitHere46","4346682splitHere46","List"
"1312splitHere46","4346684splitHere46","<%<newline46mondego><newline46mondego>out.println(<doubleQuotes46><h1>application scope</h1><doubleQuotes46>);<newline46mondego>java.util.Enumeration e=application.getAttributeNames();<newline46mondego>out.println(<doubleQuotes46><table border='3' width='1000px'><doubleQuotes46>);<newline46mondego>while(e.hasMoreElements())<newline46mondego>    {<newline46mondego>        String name=(String)e.nextElement();<newline46mondego><newline46mondego>        Object value=application.getAttribute(name);<newline46mondego>        if(value==null)<newline46mondego>        {<newline46mondego>        value=<doubleQuotes46>NONE<doubleQuotes46>;<newline46mondego>        }<newline46mondego>        System.out.println(name+<doubleQuotes46>:<doubleQuotes46>+value);<newline46mondego>        if(!name.contains(<doubleQuotes46>ibm<doubleQuotes46>) && !name.contains(<doubleQuotes46>myfaces<doubleQuotes46>)       )<newline46mondego>        {<newline46mondego>            if(value!=null && value.getClass().toString().contains(<doubleQuotes46>versata<doubleQuotes46>))<newline46mondego>            {<newline46mondego>                out.println(<doubleQuotes46><tr style='font-weight:bold;color:red;'><doubleQuotes46>);        <newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                out.println(<doubleQuotes46><tr><doubleQuotes46>);    <newline46mondego>            }<newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Name: <doubleQuotes46>+name);<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Value: <doubleQuotes46>+value);<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                if(value!=null)<newline46mondego>                {<newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Class: <doubleQuotes46>+value.getClass());<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                }<newline46mondego>                out.println(<doubleQuotes46></tr><doubleQuotes46>);       <newline46mondego>        }<newline46mondego>    }<newline46mondego>out.println(<doubleQuotes46></table><doubleQuotes46>);<newline46mondego>out.println(<doubleQuotes46><h1>session scope</h1><doubleQuotes46>);<newline46mondego><newline46mondego>e=session.getAttributeNames();<newline46mondego>out.println(<doubleQuotes46><table border='3' width='1000px'><doubleQuotes46>);<newline46mondego>while(e.hasMoreElements())<newline46mondego>    {<newline46mondego>        String name=(String)e.nextElement();<newline46mondego><newline46mondego>        Object value=application.getAttribute(name);<newline46mondego>        if(value==null)<newline46mondego>        {<newline46mondego>        value=<doubleQuotes46>NONE<doubleQuotes46>;<newline46mondego>        }<newline46mondego>        System.out.println(name+<doubleQuotes46>:<doubleQuotes46>+value);<newline46mondego>        if(!name.contains(<doubleQuotes46>ibm<doubleQuotes46>) && !name.contains(<doubleQuotes46>myfaces<doubleQuotes46>)       )<newline46mondego>        {<newline46mondego>            if(value!=null && value.getClass().toString().contains(<doubleQuotes46>versata<doubleQuotes46>))<newline46mondego>            {<newline46mondego>                out.println(<doubleQuotes46><tr style='font-weight:bold;color:red;'><doubleQuotes46>);        <newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                out.println(<doubleQuotes46><tr><doubleQuotes46>);    <newline46mondego>            }<newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Name: <doubleQuotes46>+name);<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Value: <doubleQuotes46>+value);<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                if(value!=null)<newline46mondego>                {<newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Class: <doubleQuotes46>+value.getClass());<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                }<newline46mondego>                out.println(<doubleQuotes46></tr><doubleQuotes46>);       <newline46mondego>        }<newline46mondego>    }<newline46mondego>out.println(<doubleQuotes46></table><doubleQuotes46>);<newline46mondego><newline46mondego>out.println(<doubleQuotes46><h1>request scope</h1><doubleQuotes46>);<newline46mondego><newline46mondego>e=request.getAttributeNames();<newline46mondego>out.println(<doubleQuotes46><table border='3' width='1000px'><doubleQuotes46>);<newline46mondego>while(e.hasMoreElements())<newline46mondego>    {<newline46mondego>        String name=(String)e.nextElement();<newline46mondego><newline46mondego>        Object value=application.getAttribute(name);<newline46mondego>        if(value==null)<newline46mondego>        {<newline46mondego>        value=<doubleQuotes46>NONE<doubleQuotes46>;<newline46mondego>        }<newline46mondego>        System.out.println(name+<doubleQuotes46>:<doubleQuotes46>+value);<newline46mondego>        if(!name.contains(<doubleQuotes46>ibm<doubleQuotes46>) && !name.contains(<doubleQuotes46>myfaces<doubleQuotes46>)       )<newline46mondego>        {<newline46mondego>            if(value!=null && value.getClass().toString().contains(<doubleQuotes46>versata<doubleQuotes46>))<newline46mondego>            {<newline46mondego>                out.println(<doubleQuotes46><tr style='font-weight:bold;color:red;'><doubleQuotes46>);        <newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                out.println(<doubleQuotes46><tr><doubleQuotes46>);    <newline46mondego>            }<newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Name: <doubleQuotes46>+name);<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Value: <doubleQuotes46>+value);<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                if(value!=null)<newline46mondego>                {<newline46mondego>                out.println(<doubleQuotes46><td><doubleQuotes46>);        <newline46mondego>                out.println(<doubleQuotes46>Class: <doubleQuotes46>+value.getClass());<newline46mondego>                out.println(<doubleQuotes46></td><doubleQuotes46>);       <newline46mondego>                }<newline46mondego>                out.println(<doubleQuotes46></tr><doubleQuotes46>);       <newline46mondego>        }<newline46mondego>    }<newline46mondego>out.println(<doubleQuotes46></table><doubleQuotes46>);<newline46mondego><newline46mondego>%><newline46mondego>"
"1313splitHere46","4346809splitHere46","ByteArrayOutputStream buffer = new ByteArrayOutputStream();<newline46mondego>    ImageIO.write(image, <doubleQuotes46>png<doubleQuotes46>, buffer);<newline46mondego>    byte[] data = buffer.toByteArray();<newline46mondego>"
"1314splitHere46","4347031splitHere46","java 6 api String"
"1315splitHere46","4347148splitHere46","PreparedStatement"
"1316splitHere46","4347148splitHere46","PreparedStatement ps = nulll;<newline46mondego>try {<newline46mondego>    ps = connection.prepareStatement(<doubleQuotes46>INSERT INTO testtable1 (key1a, key1b , encoded1a,encoded1b) VALUES (? ,? ,?, ?)<doubleQuotes46>);<newline46mondego>    for (int i = 1; i <= k.length; i++) {<newline46mondego>        ps.setString(i, <doubleQuotes46><doubleQuotes46> + k[i]);<newline46mondego>    }<newline46mondego><newline46mondego>    ps.executeUpdate();<newline46mondego>} catch (SQLException) {<newline46mondego>    //Log exception<newline46mondego>} finally {<newline46mondego>    if (ps != null) {<newline46mondego>        try {<newline46mondego>            ps.close();<newline46mondego>            ps = null;<newline46mondego>        } catch (SQLException e) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1317splitHere46","4347148splitHere46","char[]k"
"1318splitHere46","4347357splitHere46","Rule"
"1319splitHere46","4347357splitHere46","FailedRule"
"1320splitHere46","4347357splitHere46","failed"
"1321splitHere46","4347357splitHere46","Rule"
"1322splitHere46","4347506splitHere46","Pattern dtPatt = Pattern.compile( <doubleQuotes46>(\\d\\d\\d\\d)[/\\-.](\\d\\d)[/\\-.](\\d\\d)[tT/\\-.](\\d\\d)[:.](\\d\\d)[:.](\\d\\d)<doubleQuotes46> );<newline46mondego>    Matcher m = dtPatt.matcher( str );<newline46mondego><newline46mondego>    if ( m.matches() )<newline46mondego>    {<newline46mondego>        StringBuffer sb = new StringBuffer();<newline46mondego>        m.appendReplacement( sb, <doubleQuotes46>$1/$2/$3-$4:$5:$6<doubleQuotes46> );<newline46mondego><newline46mondego>        String result = sb.toString();<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        System.out.println( <doubleQuotes46>Error!  Bad date/time entry.<doubleQuotes46> );<newline46mondego>    }<newline46mondego>"
"1323splitHere46","4347514splitHere46","frame.dispose();<newline46mondego>"
"1324splitHere46","4347526splitHere46","{call <<procedure name>>}<newline46mondego>"
"1325splitHere46","4347526splitHere46","{call <<procedure name>>}"
"1326splitHere46","4347544splitHere46","import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.events.VerifyEvent;<newline46mondego>import org.eclipse.swt.events.VerifyListener;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego>import org.eclipse.swt.widgets.Text;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Display display = new Display();<newline46mondego>        Shell shell = new Shell(display);<newline46mondego><newline46mondego>        final Text text = new Text(shell, SWT.BORDER);<newline46mondego>        text.addVerifyListener(new VerifyListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void verifyText(VerifyEvent e) {<newline46mondego>            e.doit = Character.isDigit(e.character)<newline46mondego>            || Character.isWhitespace(e.character)<newline46mondego>            || e.keyCode == SWT.ARROW_LEFT<newline46mondego>            || e.keyCode == SWT.ARROW_RIGHT<newline46mondego>            || e.keyCode == SWT.BS;<newline46mondego>        }<newline46mondego>        });<newline46mondego>        text.setSize(200, 20);<newline46mondego>        shell.pack();<newline46mondego>        shell.open();<newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>            if (!display.readAndDispatch())<newline46mondego>                display.sleep();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1327splitHere46","4347749splitHere46","Statement stmt0 = incomingData.createStatement(ardu, type, sensingDevice);<newline46mondego>"
"1328splitHere46","4347749splitHere46","Property type"
"1329splitHere46","4347749splitHere46","RDF.type"
"1330splitHere46","4347749splitHere46","incomingData.add(ard, RDF.type, sendingDevice);<newline46mondego>"
"1331splitHere46","4347810splitHere46","try {<newline46mondego>   ...<newline46mondego>} catch (Exception e) {<newline46mondego>    log.error( <doubleQuotes46>failed!<doubleQuotes46>, e );<newline46mondego>}<newline46mondego>"
"1332splitHere46","4348305splitHere46","ListMultimap"
"1333splitHere46","4348305splitHere46","SetMultimap"
"1334splitHere46","4348305splitHere46","SortedSetMultimap"
"1335splitHere46","4348305splitHere46","ArrayListMultimap"
"1336splitHere46","4348305splitHere46","HashMultimap"
"1337splitHere46","4348305splitHere46","Map<K, List<V>>"
"1338splitHere46","4348305splitHere46","Map<K, Set<V>>"
"1339splitHere46","4348305splitHere46","Multimap"
"1340splitHere46","4348305splitHere46","Map"
"1341splitHere46","4348305splitHere46","ListMultimap<Integer, String> m = ArrayListMultimap.create();<newline46mondego>m.put(4, <doubleQuotes46>Bob<doubleQuotes46>);<newline46mondego>m.put(5, <doubleQuotes46>Mary<doubleQuotes46>);<newline46mondego>m.put(5, <doubleQuotes46>Sue<doubleQuotes46>);<newline46mondego>...<newline46mondego><newline46mondego>for (String name : m.get(5)) { ... } // iterates [<doubleQuotes46>Mary<doubleQuotes46>, <doubleQuotes46>Sue<doubleQuotes46>]<newline46mondego>"
"1342splitHere46","4348305splitHere46","SetMultimap"
"1343splitHere46","4348305splitHere46","ListMultimap"
"1344splitHere46","4348305splitHere46","for (Integer key : m.keySet()) {<newline46mondego>  Collection<String> people = m.get(key);<newline46mondego>  Collection<String> peopleOneLower = m.get(key - 1); // empty if there are none<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"1345splitHere46","4348305splitHere46","TreeMultimap<Integer, String>"
"1346splitHere46","4348307splitHere46","private OnTouchListener onTouchListener = new OnTouchListener() {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean onTouch(View v, MotionEvent event) {<newline46mondego>        if (v.getId() == R.id.button) {<newline46mondego>            if (event.getAction() == MotionEvent.ACTION_DOWN) {<newline46mondego>                //start loop or background task<newline46mondego>            } else if (event.getAction() == MotionEvent.ACTION_UP) {<newline46mondego>                //do something different<newline46mondego>            }<newline46mondego>        } <newline46mondego>        return true;<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"1347splitHere46","4348307splitHere46","button.setOnTouchListener(onTouchListener);<newline46mondego>"
"1348splitHere46","4348307splitHere46","private OnTouchListener onTouchListener = new OnTouchListener() {<newline46mondego><newline46mondego>        private boolean flag = false;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean onTouch(View v, MotionEvent event) {<newline46mondego>            if (v.getId() == R.id.button) {<newline46mondego>                if (event.getAction() == MotionEvent.ACTION_DOWN) {<newline46mondego>                    flag = true;<newline46mondego>                    Thread thread = new Thread(new Runnable() {<newline46mondego><newline46mondego>                        @Override<newline46mondego>                        public void run() {<newline46mondego>                            while(flag) {<newline46mondego>                                //do something<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                    });<newline46mondego>                    thread.start();<newline46mondego>                } else if (event.getAction() == MotionEvent.ACTION_UP) {<newline46mondego>                    flag = false;<newline46mondego>                }<newline46mondego>            } <newline46mondego>            return true;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1349splitHere46","4348491splitHere46","rt"
"1350splitHere46","4348491splitHere46","Thread"
"1351splitHere46","4348491splitHere46","rt.isAlive()"
"1352splitHere46","4348491splitHere46","rt.isAlive()"
"1353splitHere46","4348529splitHere46","Error:<newline46mondego>   Public ID: null<newline46mondego>   System ID: file:///D:/herong/dictionary_invalid_xsd.xml<newline46mondego>   Line number: 7<newline46mondego>   Column number: 22<newline46mondego>   Message: cvc-datatype-valid.1.2.1: 'yes' is not a valid 'boolean' <newline46mondego>   value.<newline46mondego>"
"1354splitHere46","4348529splitHere46","/**<newline46mondego> * XMLReaderValidator.java<newline46mondego> * Copyright (c) 2002 by Dr. Herong Yang. All rights reserved.<newline46mondego> */<newline46mondego>import java.io.IOException;<newline46mondego>import org.xml.sax.XMLReader;<newline46mondego>import org.xml.sax.helpers.DefaultHandler;<newline46mondego>import org.xml.sax.helpers.XMLReaderFactory;<newline46mondego>import org.xml.sax.SAXException;<newline46mondego>import org.xml.sax.SAXParseException;<newline46mondego>class XMLReaderValidator {<newline46mondego>   public static void main(String[] args) {<newline46mondego>      String parserClass = <doubleQuotes46>org.apache.xerces.parsers.SAXParser<doubleQuotes46>;<newline46mondego>      String validationFeature <newline46mondego>         = <doubleQuotes46>http://xml.org/sax/features/validation<doubleQuotes46>;<newline46mondego>      String schemaFeature <newline46mondego>         = <doubleQuotes46>http://apache.org/xml/features/validation/schema<doubleQuotes46>;<newline46mondego>      try {<newline46mondego>         String x = args[0];<newline46mondego>         XMLReader r = XMLReaderFactory.createXMLReader(parserClass);<newline46mondego>         r.setFeature(validationFeature,true);<newline46mondego>         r.setFeature(schemaFeature,true);<newline46mondego>         r.setErrorHandler(new MyErrorHandler());<newline46mondego>         r.parse(x);<newline46mondego>      } catch (SAXException e) {<newline46mondego>         System.out.println(e.toString()); <newline46mondego>      } catch (IOException e) {<newline46mondego>         System.out.println(e.toString()); <newline46mondego>      }<newline46mondego>   }<newline46mondego>   private static class MyErrorHandler extends DefaultHandler {<newline46mondego>      public void warning(SAXParseException e) throws SAXException {<newline46mondego>         System.out.println(<doubleQuotes46>Warning: <doubleQuotes46>); <newline46mondego>         printInfo(e);<newline46mondego>      }<newline46mondego>      public void error(SAXParseException e) throws SAXException {<newline46mondego>         System.out.println(<doubleQuotes46>Error: <doubleQuotes46>); <newline46mondego>         printInfo(e);<newline46mondego>      }<newline46mondego>      public void fatalError(SAXParseException e) throws SAXException {<newline46mondego>         System.out.println(<doubleQuotes46>Fattal error: <doubleQuotes46>); <newline46mondego>         printInfo(e);<newline46mondego>      }<newline46mondego>      private void printInfo(SAXParseException e) {<newline46mondego>         System.out.println(<doubleQuotes46>   Public ID: <doubleQuotes46>+e.getPublicId());<newline46mondego>         System.out.println(<doubleQuotes46>   System ID: <doubleQuotes46>+e.getSystemId());<newline46mondego>         System.out.println(<doubleQuotes46>   Line number: <doubleQuotes46>+e.getLineNumber());<newline46mondego>         System.out.println(<doubleQuotes46>   Column number: <doubleQuotes46>+e.getColumnNumber());<newline46mondego>         System.out.println(<doubleQuotes46>   Message: <doubleQuotes46>+e.getMessage());<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1355splitHere46","4348542splitHere46","Date date = new Date(System.currentTimeMillis() - (4 * 60 * 60 * 1000));<newline46mondego>"
"1356splitHere46","4348542splitHere46","Calendar"
"1357splitHere46","4348542splitHere46","Calendar calendar = Calendar.getInstance();<newline46mondego>calendar.add(Calendar.HOUR_OF_DAY, -4);<newline46mondego>Date date = calendar.getTime();<newline46mondego>"
"1358splitHere46","4348542splitHere46","DateTime dateTime = new DateTime().minusHours(4);<newline46mondego>Date date = dateTime.toDate(); // If you ever need this...<newline46mondego>"
"1359splitHere46","4348701splitHere46","request.getParameter()"
"1360splitHere46","4348701splitHere46","request.getAttribute()"
"1361splitHere46","4348701splitHere46","forward()"
"1362splitHere46","4348708splitHere46","ConversionService"
"1363splitHere46","4348708splitHere46","Converter"
"1364splitHere46","4348708splitHere46","final class UserConverter implements Converter<String, User> {<newline46mondego>    ...<newline46mondego>    public User convert(String username) {<newline46mondego>        return userService.find(username);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1365splitHere46","4348708splitHere46","<bean id=<doubleQuotes46>conversionService<doubleQuotes46><newline46mondego>      class=<doubleQuotes46>org.springframework.context.support.ConversionServiceFactoryBean<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>converters<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <bean class=<doubleQuotes46>example.UserConverter<doubleQuotes46>/><newline46mondego>        </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"1366splitHere46","4348708splitHere46","<mvc:annotation-driven>"
"1367splitHere46","4348708splitHere46","conversion-service"
"1368splitHere46","4348951splitHere46","Set<MyClass> set = thing.getMyList();<newline46mondego>Set<MyDerivedClass> set = thing.getMyList();<newline46mondego>Set<?> set = thing.getMyList();<newline46mondego>Set<? extends MyClass> set = thing.getMyList();<newline46mondego>Set<? extends MyDerivedClass> set = thing.getMyList();<newline46mondego>"
"1369splitHere46","4348951splitHere46","Set<?> set = thing.getMyList();<newline46mondego>Set<? extends MyClass> set = thing.getMyList();<newline46mondego>"
"1370splitHere46","4349046splitHere46","<newline46mondego>if(conStatus.getActiveNetworkInfo().isConnected() && conStatus.getActiveNetworkInfo() != null)<newline46mondego>"
"1371splitHere46","4349146splitHere46","hashCode()"
"1372splitHere46","4349146splitHere46","equals()"
"1373splitHere46","4349146splitHere46","map.get()"
"1374splitHere46","4349146splitHere46","map.put()"
"1375splitHere46","4349146splitHere46","bag.put(tetragram)"
"1376splitHere46","4349146splitHere46","long"
"1377splitHere46","4349146splitHere46","long"
"1378splitHere46","4349146splitHere46","long"
"1379splitHere46","4349146splitHere46","LongIntHashMap"
"1380splitHere46","4349146splitHere46","LongIntHashMap"
"1381splitHere46","4349146splitHere46","LongHashBag"
"1382splitHere46","4349146splitHere46","equals"
"1383splitHere46","4349146splitHere46","hashCode"
"1384splitHere46","4349146splitHere46","LongIntHashMap"
"1385splitHere46","4349146splitHere46","LongHashBag"
"1386splitHere46","4349146splitHere46","private LongHashBag countTetragrams(String text) {<newline46mondego><newline46mondego>  // Homework assignment: find a good LongHashBag implementation, or<newline46mondego>  // grab the LongIntHashMap implementation from Trove, and tweak it<newline46mondego>  // to work as a Bag<newline46mondego>  LongHashBag bag = new LongHashBag(500);<newline46mondego><newline46mondego>  // There are no tetragrams in this string.<newline46mondego>  if (text.length() < 4) return bag;<newline46mondego><newline46mondego>  // Shortcut: if we calculate the first tetragram before entering<newline46mondego>  // the loop, then we can use bit-shifting logic within the loop<newline46mondego>  // to create all subsequent tetragram values.<newline46mondego>  char[] c = text.toCharArray();<newline46mondego>  long tetragram = ((long) c[0] << 48) |<newline46mondego>     (((long) c[1]) << 32) |<newline46mondego>     (((long) c[2]) << 16) |<newline46mondego>     ((long) c[3]);<newline46mondego><newline46mondego>  bag.add(tetragram);<newline46mondego><newline46mondego>  for (int i = 4, last = text.length(); i < last; i++) {<newline46mondego>     // During each loop iteration, the leftmost 2-bytes are shifted<newline46mondego>     // out of the tetragram, to make room for the 2-bytes from the<newline46mondego>     // current character.<newline46mondego>     tetragram = (tetragram << 16) | ((long) c[i]);<newline46mondego>     bag.add(tetragram);<newline46mondego>  }<newline46mondego><newline46mondego>  return bag;<newline46mondego>}<newline46mondego>"
"1387splitHere46","4349146splitHere46","LongHashBag"
"1388splitHere46","4349146splitHere46","HashMap"
"1389splitHere46","4349146splitHere46","private LongHashBag countTetragrams(String text) {<newline46mondego><newline46mondego>  // Creates a new HashBag on every invocation. Very wasteful.<newline46mondego>  LongHashBag bag = new LongHashBag(500);<newline46mondego><newline46mondego>  // ...blah blah blah...<newline46mondego><newline46mondego>  return bag;<newline46mondego>}<newline46mondego>"
"1390splitHere46","4349146splitHere46","private void countTetragrams(String text, LongHashBag bag) {<newline46mondego><newline46mondego>  // Return the object to a neutral state, and recycle it.<newline46mondego>  bag.clear()<newline46mondego><newline46mondego>  // ...blah blah blah...<newline46mondego>}<newline46mondego>"
"1391splitHere46","4349146splitHere46","private LongHashBag countTetragrams(String text) {<newline46mondego><newline46mondego>  // Return the object to a neutral state, and recycle it.<newline46mondego>  LongHashBag bag = retrieveLongHashBagFromObjectPool();<newline46mondego><newline46mondego>  // ...blah blah blah...<newline46mondego>  return bag;<newline46mondego>}<newline46mondego>"
"1392splitHere46","4349423splitHere46","List<Integer> original = Arrays.asList(12,16,17,19,101);<newline46mondego>List<Integer> selected = Arrays.asList(16,19,107,108,109);<newline46mondego><newline46mondego>ArrayList<Integer> add = new ArrayList<Integer>(selected);<newline46mondego>add.removeAll(original);<newline46mondego>System.out.println(<doubleQuotes46>Add: <doubleQuotes46> + add);<newline46mondego><newline46mondego>ArrayList<Integer> remove = new ArrayList<Integer>(original);<newline46mondego>remove.removeAll(selected);<newline46mondego>System.out.println(<doubleQuotes46>Remove: <doubleQuotes46> + remove);<newline46mondego>"
"1393splitHere46","4349423splitHere46","Add: [107, 108, 109]<newline46mondego>Remove: [12, 17, 101]<newline46mondego>"
"1394splitHere46","4349904splitHere46","URLConnection"
"1395splitHere46","4349904splitHere46","get"
"1396splitHere46","4349904splitHere46","InputStream response = servletConnection.getInputStream();<newline46mondego>"
"1397splitHere46","4349904splitHere46","java.net.URLConnection"
"1398splitHere46","4350109splitHere46","FileOutputStream fos = new FileOutputStream(<doubleQuotes46>pathname<doubleQuotes46>);<newline46mondego>fos.write(myByteArray);<newline46mondego>fos.close();<newline46mondego>"
"1399splitHere46","4350132splitHere46","BufferedImage bi = new BufferedImage(110, 110, BufferedImage.TYPE_INT_RGB);<newline46mondego>        Graphics2D g2 = bi.createGraphics();<newline46mondego>        AffineTransform saveTX = new AffineTransform();<newline46mondego>        saveTX.translate(translateX, translateY);<newline46mondego>        saveTX.scale(0.2, 0.2);<newline46mondego>        g2.setTransform(saveTX);<newline46mondego>        this.paint(g2);<newline46mondego><newline46mondego>        ImageInputStream bigInputStream = ImageIO.createImageInputStream(bi);<newline46mondego><newline46mondego>        ByteArrayOutputStream baos = new ByteArrayOutputStream();<newline46mondego>        ImageIO.write(bi, <doubleQuotes46>BMP<doubleQuotes46>, baos);<newline46mondego>        byte[] bytes = baos.toByteArray();<newline46mondego>        String dataImg = new Base64().encodeBase64String(bytes);<newline46mondego><newline46mondego>        PostMethod post = new PostMethod(<doubleQuotes46>http://localhost:3001/upload/file<doubleQuotes46>);<newline46mondego><newline46mondego>        post.addParameter(<doubleQuotes46>upload[test]<doubleQuotes46>, dataImg);<newline46mondego><newline46mondego>        HttpClient client = new HttpClient();<newline46mondego>        int status = client.executeMethod(post);<newline46mondego><newline46mondego>        g2.dispose();<newline46mondego>"
"1400splitHere46","4350132splitHere46","require <doubleQuotes46>base64<doubleQuotes46><newline46mondego> class UploadController < ApplicationController<newline46mondego><newline46mondego> #Token = nil<newline46mondego> skip_before_filter :verify_authenticity_token <newline46mondego><newline46mondego> def index<newline46mondego>    render :file => 'app\views\upload\uploadfile.html.erb'<newline46mondego> end<newline46mondego> def file<newline46mondego><newline46mondego>File.open('test.gif', 'wb') do|f|<newline46mondego>  f.write(Base64.decode64(params[:upload][:test]))<newline46mondego>end<newline46mondego><newline46mondego>    render :text => <doubleQuotes46>File has been uploaded successfully<doubleQuotes46><newline46mondego> end<newline46mondego>"
"1401splitHere46","4350359splitHere46","// Assume the ArrayList is named stringList<newline46mondego>StringBuilder buffer = new StringBuilder();<newline46mondego>for(String current : stringList) {<newline46mondego>    buffer.append(current).append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>BufferedReader br = new BufferedReader(new StringReader(buffer.toString()));<newline46mondego>"
"1402splitHere46","4350524splitHere46",".metadata"
"1403splitHere46","4350622splitHere46","DELETE * FROM pending ORDER BY time LIMIT 1<newline46mondego>"
"1404splitHere46","4350622splitHere46","*"
"1405splitHere46","4350622splitHere46","DELETE FROM pending ORDER BY time LIMIT 1<newline46mondego>"
"1406splitHere46","4350688splitHere46","public static boolean isAdmin() {<newline46mondego>    String groups[] = (new com.sun.security.auth.module.NTSystem()).getGroupIDs();<newline46mondego>    for (String group : groups) {<newline46mondego>        if (group.equals(<doubleQuotes46>S-1-5-32-544<doubleQuotes46>))<newline46mondego>            return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"1407splitHere46","4350839splitHere46","public void update(Observable o, Object arg) {<newline46mondego>  try{<newline46mondego>    Method update = getClass().getMethod(o.getClass(), Object.class);<newline46mondego>    update.invoke(this, o, arg);<newline46mondego>  } catch(Exception e) {<newline46mondego>    // log exception<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1408splitHere46","4350839splitHere46","public void update(A a, Object arg);<newline46mondego>public void update(B b, Object arg);<newline46mondego>public void update(C c, Object arg);<newline46mondego>"
"1409splitHere46","4351078splitHere46","Bar.add"
"1410splitHere46","4351078splitHere46","Bar"
"1411splitHere46","4351078splitHere46","// a class with a public static method that encapsulates a static list<newline46mondego>public class Bar<newline46mondego>{<newline46mondego>    static List<Foo> innerlist = new ArrayList<Foo>();<newline46mondego><newline46mondego>    public static void add( Foo o )<newline46mondego>    {<newline46mondego>        innerList.add(o);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1412splitHere46","4351078splitHere46","// a class with a static member<newline46mondego>public class OtherClass<newline46mondego>{<newline46mondego>     public static List<Foo> Bar = new ArrayList<Foo>();<newline46mondego>}<newline46mondego>"
"1413splitHere46","4351078splitHere46","OtherClass.Bar.add(o)"
"1414splitHere46","4351137splitHere46","super.getPaint().getTextBounds(text, 0, text.length(), mTextBounds);<newline46mondego>"
"1415splitHere46","4351137splitHere46","// draw everything<newline46mondego>canvas.drawText(text,<newline46mondego>    super.getWidth() * 0.5f, (super.getHeight() + mTextBounds.height()) * 0.5f,<newline46mondego>    mStrokePaint);<newline46mondego>"
"1416splitHere46","4351137splitHere46","public class OutlinedTextView extends TextView {<newline46mondego>    /* ===========================================================<newline46mondego>     * Constants<newline46mondego>     * =========================================================== */<newline46mondego>    private static final float OUTLINE_PROPORTION = 0.1f;<newline46mondego><newline46mondego>    /* ===========================================================<newline46mondego>     * Members<newline46mondego>     * =========================================================== */<newline46mondego>    private final Paint mStrokePaint = new Paint();<newline46mondego>    private final Rect mTextBounds = new Rect();<newline46mondego>    private int mOutlineColor = Color.TRANSPARENT;<newline46mondego><newline46mondego>    /* ===========================================================<newline46mondego>     * Constructors<newline46mondego>     * =========================================================== */<newline46mondego>    public OutlinedTextView(Context context) {<newline46mondego>        super(context);<newline46mondego>        this.setupPaint();<newline46mondego>    }<newline46mondego>    public OutlinedTextView(Context context, AttributeSet attrs) {<newline46mondego>        super(context, attrs);<newline46mondego>        this.setupPaint();<newline46mondego>        this.setupAttributes(context, attrs);<newline46mondego>    }<newline46mondego>    public OutlinedTextView(Context context, AttributeSet attrs, int defStyle) {<newline46mondego>        super(context, attrs, defStyle);<newline46mondego>        this.setupPaint();<newline46mondego>        this.setupAttributes(context, attrs);<newline46mondego>    }<newline46mondego><newline46mondego>    /* ===========================================================<newline46mondego>     * Overrides<newline46mondego>     * =========================================================== */<newline46mondego>    @Override<newline46mondego>    protected void onDraw(Canvas canvas) {<newline46mondego>        // Get the text to print<newline46mondego>        final float textSize = super.getTextSize();<newline46mondego>        final String text = super.getText().toString();<newline46mondego><newline46mondego>        // setup stroke<newline46mondego>        mStrokePaint.setColor(mOutlineColor);<newline46mondego>        mStrokePaint.setStrokeWidth(textSize * OUTLINE_PROPORTION);<newline46mondego>        mStrokePaint.setTextSize(textSize);<newline46mondego>        mStrokePaint.setFlags(super.getPaintFlags());<newline46mondego>        mStrokePaint.setTypeface(super.getTypeface());<newline46mondego><newline46mondego>        // Figure out the drawing coordinates<newline46mondego>        super.getPaint().getTextBounds(text, 0, text.length(), mTextBounds);<newline46mondego><newline46mondego>        // draw everything<newline46mondego>        canvas.drawText(text,<newline46mondego>                super.getWidth() * 0.5f, (super.getHeight() + mTextBounds.height()) * 0.5f,<newline46mondego>                mStrokePaint);<newline46mondego>        super.onDraw(canvas);<newline46mondego>    }<newline46mondego><newline46mondego>    /* ===========================================================<newline46mondego>     * Private/Protected Methods<newline46mondego>     * =========================================================== */<newline46mondego>    private final void setupPaint() {<newline46mondego>        mStrokePaint.setAntiAlias(true);<newline46mondego>        mStrokePaint.setStyle(Paint.Style.STROKE);<newline46mondego>        mStrokePaint.setTextAlign(Paint.Align.CENTER);<newline46mondego>    }<newline46mondego>    private final void setupAttributes(Context context, AttributeSet attrs) {<newline46mondego>        final TypedArray array = context.obtainStyledAttributes(attrs,<newline46mondego>                R.styleable.OutlinedTextView);<newline46mondego>        mOutlineColor = array.getColor(<newline46mondego>                R.styleable.OutlinedTextView_outlineColor, 0x00000000);<newline46mondego>        array.recycle(); <newline46mondego><newline46mondego>        // Force this text label to be centered<newline46mondego>        super.setGravity(Gravity.CENTER_HORIZONTAL);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1417splitHere46","4351694splitHere46","Creating project <doubleQuotes46>Test<doubleQuotes46><newline46mondego>Place Java source files in <doubleQuotes46>/export/home/frayser/j2mewtk/2.5.2/apps/Test/src<doubleQuotes46><newline46mondego>Place application resource files in <doubleQuotes46>/export/home/frayser/j2mewtk/2.5.2/apps/Test/res<doubleQuotes46><newline46mondego>Place application library files in <doubleQuotes46>/export/home/frayser/j2mewtk/2.5.2/apps/Test/lib<doubleQuotes46><newline46mondego>"
"1418splitHere46","4351941splitHere46","public static int NextBday(int Bdays, int days){<newline46mondego>int daysleft = 0;<newline46mondego>     if (days > Bdays) {<newline46mondego>        daysleft= (365+Bdays) - days;<newline46mondego>    }else if(Bdays > days){<newline46mondego>        daysleft= Bdays-days;            <newline46mondego>    }<newline46mondego><newline46mondego>    if (Bdays == days + 1) {<newline46mondego>        System.out.println(<doubleQuotes46>\nWow, your birthday is tomorrow!<doubleQuotes46>);<newline46mondego>    }else if (Bdays == days){<newline46mondego>        System.out.println(<doubleQuotes46>\nHappy birthday!<doubleQuotes46>);<newline46mondego>    } else<newline46mondego>       System.out.println(<doubleQuotes46>\nYour birthday is in <doubleQuotes46> +daysleft+ <doubleQuotes46> days<doubleQuotes46>);<newline46mondego>return daysleft;<newline46mondego>"
"1419splitHere46","4352246splitHere46","Hibernate.initialize(..)"
"1420splitHere46","4352246splitHere46","OpenSessionInViewFilter"
"1421splitHere46","4352466splitHere46","Filter"
"1422splitHere46","4352719splitHere46","println"
"1423splitHere46","4352719splitHere46","flush"
"1424splitHere46","4352719splitHere46","PrintWriter"
"1425splitHere46","4352719splitHere46","println"
"1426splitHere46","4352719splitHere46","close"
"1427splitHere46","4352719splitHere46","private enum Enumenum {<newline46mondego>    enum Dodge {<newline46mondego>        Ascending, Descending, Off<newline46mondego>    },<newline46mondego>    enum Damage {<newline46mondego>    Ascending, Descending, Off<newline46mondego>    },<newline46mondego>    enum DPS {<newline46mondego>        Ascending, Descending, Off<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1428splitHere46","4352719splitHere46","enum OneForAll {<newline46mondego>        Ascending, Descending, Off<newline46mondego>    }<newline46mondego>"
"1429splitHere46","4352901splitHere46","arrList.set(5,newValue);"
"1430splitHere46","4353087splitHere46","CountDownLatch"
"1431splitHere46","4353087splitHere46","await()"
"1432splitHere46","4353087splitHere46","countdown()"
"1433splitHere46","4353345splitHere46","PrintRequestAttributeSet"
"1434splitHere46","4353345splitHere46","PrintRequestAttributeSet attributes = new HashPrintRequestAttributeSet();<newline46mondego>"
"1435splitHere46","4353359splitHere46","Area"
"1436splitHere46","4353359splitHere46","Path2D"
"1437splitHere46","4353359splitHere46","!a1.intersect(a2).isEmpty()<newline46mondego>"
"1438splitHere46","4353408splitHere46","<hibernate-mapping><newline46mondego>    <class name=<doubleQuotes46>com.vaannila.student.Student<doubleQuotes46> table=<doubleQuotes46>STUDENT<doubleQuotes46>><newline46mondego>        <meta attribute=<doubleQuotes46>class-description<doubleQuotes46>>This class contains student details.</meta><newline46mondego>        <id name=<doubleQuotes46>studentId<doubleQuotes46> type=<doubleQuotes46>long<doubleQuotes46> column=<doubleQuotes46>STUDENT_ID<doubleQuotes46>><newline46mondego>            <generator class=<doubleQuotes46>native<doubleQuotes46> /><newline46mondego>        </id><newline46mondego>        <property name=<doubleQuotes46>studentName<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46> length=<doubleQuotes46>100<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46> column=<doubleQuotes46>STUDENT_NAME<doubleQuotes46> /><newline46mondego>        <set name=<doubleQuotes46>courses<doubleQuotes46> table=<doubleQuotes46>STUDENT_COURSE<doubleQuotes46> cascade=<doubleQuotes46>all<doubleQuotes46>><newline46mondego>            <key column=<doubleQuotes46>STUDENT_ID<doubleQuotes46> /><newline46mondego>            <many-to-many column=<doubleQuotes46>COURSE_ID<doubleQuotes46>  class=<doubleQuotes46>com.vaannila.student.Course<doubleQuotes46> /><newline46mondego>        </set><newline46mondego>    </class><newline46mondego></hibernate-mapping><newline46mondego><newline46mondego><hibernate-mapping><newline46mondego>    <class name=<doubleQuotes46>com.vaannila.student.Course<doubleQuotes46> table=<doubleQuotes46>COURSE<doubleQuotes46>><newline46mondego>        <meta attribute=<doubleQuotes46>class-description<doubleQuotes46>>This class contains course details.</meta><newline46mondego>        <id name=<doubleQuotes46>courseId<doubleQuotes46> type=<doubleQuotes46>long<doubleQuotes46> column=<doubleQuotes46>COURSE_ID<doubleQuotes46>><newline46mondego>            <generator class=<doubleQuotes46>native<doubleQuotes46>/><newline46mondego>        </id><newline46mondego>        <property name=<doubleQuotes46>courseName<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46> column=<doubleQuotes46>COURSE_NAME<doubleQuotes46>/><newline46mondego>        <set name=<doubleQuotes46>students<doubleQuotes46> table=<doubleQuotes46>STUDENT_COURSE<doubleQuotes46> cascade=<doubleQuotes46>all<doubleQuotes46>><newline46mondego>            <key column=<doubleQuotes46>COURSE_ID<doubleQuotes46> /><newline46mondego>            <many-to-many column=<doubleQuotes46>STUDENT_ID<doubleQuotes46>  class=<doubleQuotes46>com.vaannila.student.Student<doubleQuotes46> /><newline46mondego>        </set><newline46mondego>    </class><newline46mondego></hibernate-mapping><newline46mondego>"
"1439splitHere46","4353603splitHere46","List"
"1440splitHere46","4353603splitHere46","Collections.sort"
"1441splitHere46","4353603splitHere46","Comparator"
"1442splitHere46","4353603splitHere46","sort"
"1443splitHere46","4353603splitHere46","Score"
"1444splitHere46","4353603splitHere46","Comparable<Score>"
"1445splitHere46","4353603splitHere46","import java.util.*;<newline46mondego><newline46mondego>class Score implements Comparable<Score> {<newline46mondego>    int score;<newline46mondego>    String name;<newline46mondego><newline46mondego>    public Score(int score, String name) {<newline46mondego>        this.score = score;<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int compareTo(Score o) {<newline46mondego>        return score < o.score ? -1 : score > o.score ? 1 : 0;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args){<newline46mondego>        List<Score> scores = new ArrayList<Score>();<newline46mondego><newline46mondego>        scores.add(new Score(23, <doubleQuotes46>Peter<doubleQuotes46>));  <newline46mondego>        scores.add(new Score(11, <doubleQuotes46>Tony<doubleQuotes46>));  <newline46mondego>        scores.add(new Score(110, <doubleQuotes46>Claire<doubleQuotes46>));  <newline46mondego>        scores.add(new Score(13, <doubleQuotes46>ferca<doubleQuotes46>));  <newline46mondego>        scores.add(new Score(55, <doubleQuotes46>Julian<doubleQuotes46>));  <newline46mondego>        scores.add(new Score(13, <doubleQuotes46>Pedro<doubleQuotes46>));<newline46mondego><newline46mondego>        Collections.sort(scores);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1446splitHere46","4353682splitHere46","AffineTransform at = AffineTransform.getTranslateInstance(width, height); //Create the AffineTransform instance<newline46mondego>at.rotate(someRadianValue); // Apply the transforms you wish<newline46mondego>g2.draw(at.createTransformedShape(myShape)); // Draw the transformed shape<newline46mondego>"
"1447splitHere46","4353776splitHere46","DUP"
"1448splitHere46","4353776splitHere46","aaload"
"1449splitHere46","4353776splitHere46","iaload"
"1450splitHere46","4353776splitHere46","laload"
"1451splitHere46","4353776splitHere46","saload"
"1452splitHere46","4353776splitHere46","baload"
"1453splitHere46","4353776splitHere46","caload"
"1454splitHere46","4353776splitHere46","daload"
"1455splitHere46","4353776splitHere46","aastore"
"1456splitHere46","4353776splitHere46","iastore"
"1457splitHere46","4353776splitHere46","lastore"
"1458splitHere46","4353776splitHere46","sastore"
"1459splitHere46","4353776splitHere46","bastore"
"1460splitHere46","4353776splitHere46","castore"
"1461splitHere46","4353776splitHere46","dastore"
"1462splitHere46","4353900splitHere46","Employee"
"1463splitHere46","4353973splitHere46","System.class.getMethod(<doubleQuotes46>currentTimeMillis<doubleQuotes46>, long.class)<newline46mondego>"
"1464splitHere46","4353973splitHere46","System.class.getMethod(<doubleQuotes46>currentTimeMillis<doubleQuotes46>)<newline46mondego>"
"1465splitHere46","4354015splitHere46","array = Array.new(arrayOfString.size**strength)<newline46mondego>"
"1466splitHere46","4354015splitHere46","array = []<newline46mondego>"
"1467splitHere46","4354015splitHere46","for i in arrayOfString do<newline46mondego>"
"1468splitHere46","4354015splitHere46","arrayOfString.each_char do |i|<newline46mondego>"
"1469splitHere46","4354015splitHere46","#!/usr/bin/ruby1.8<newline46mondego><newline46mondego>def Variation (strength, arrayOfString)<newline46mondego>  array = []<newline46mondego>  if strength == 0<newline46mondego>    array << <doubleQuotes46><doubleQuotes46><newline46mondego>  else<newline46mondego>    a = Variation(strength - 1, arrayOfString)<newline46mondego>    arrayOfString.each_char do |i|<newline46mondego>      for j in a do<newline46mondego>        array << (i + j)<newline46mondego>      end<newline46mondego>    end<newline46mondego>  end<newline46mondego>  return array<newline46mondego>end<newline46mondego><newline46mondego>p Variation(2, '01')    # => [<doubleQuotes46>00<doubleQuotes46>, <doubleQuotes46>01<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>, <doubleQuotes46>11<doubleQuotes46>]<newline46mondego>"
"1470splitHere46","4354579splitHere46","printf"
"1471splitHere46","4354579splitHere46","%n"
"1472splitHere46","4354579splitHere46","%n"
"1473splitHere46","4354688splitHere46","public enum MyStrings{<newline46mondego><newline46mondego>        LIST1, LIST2<newline46mondego>    }<newline46mondego>"
"1474splitHere46","4354688splitHere46","switch(MyStrings.valueOf(option)){<newline46mondego><newline46mondego>         case LIST1: do something; break;<newline46mondego>         //etc.<newline46mondego>    }<newline46mondego>"
"1475splitHere46","4354732splitHere46","yield"
"1476splitHere46","4354732splitHere46","content_for"
"1477splitHere46","4354732splitHere46","<%@ tag body-content=<doubleQuotes46>scriptless<doubleQuotes46> %><newline46mondego><%@ attribute name=<doubleQuotes46>pageTitle<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46> type=<doubleQuotes46>java.lang.String<doubleQuotes46> %><newline46mondego><newline46mondego><html><newline46mondego><head><newline46mondego>    <title>${pageTitle}</title><newline46mondego></head><newline46mondego><body><newline46mondego>    <jsp:doBody/><newline46mondego></body><newline46mondego></html><newline46mondego>"
"1478splitHere46","4354732splitHere46","<%@ taglib prefix=<doubleQuotes46>z<doubleQuotes46> tagdir=<doubleQuotes46>/WEB-INF/tags<doubleQuotes46> %><newline46mondego><z:layout pageTitle=<doubleQuotes46>A simple page<doubleQuotes46>><newline46mondego>    <p>Hello, JSP!</p><newline46mondego></z:layout><newline46mondego>"
"1479splitHere46","4354773splitHere46","S2xEa3Ara0o5blVGYTB3WkRIeUZmZz09DQo=<newline46mondego>"
"1480splitHere46","4354773splitHere46","KlDkp+kJ9nUFa0wZDHyFfg==.<newline46mondego>"
"1481splitHere46","4354773splitHere46","KlDkp+kJ9nUFa0wZDHyFfg== <newline46mondego>"
"1482splitHere46","4354858splitHere46","Properties properties = System.getProperties();<newline46mondego>    properties.put(<doubleQuotes46>mail.smtp.host<doubleQuotes46>, server);<newline46mondego>    properties.put(<doubleQuotes46>mail.smtp.port<doubleQuotes46>, <doubleQuotes46><doubleQuotes46> + port);<newline46mondego><newline46mondego>    Session session = Session.getInstance(properties);<newline46mondego>    Transport transport = session.getTransport(<doubleQuotes46>smtp<doubleQuotes46>);<newline46mondego><newline46mondego>    transport.connect(server, username, password);<newline46mondego><newline46mondego>    for (int i = 0; i < count; i++) {<newline46mondego><newline46mondego>        Message message = new MimeMessage(session);<newline46mondego>        message.setFrom(new InternetAddress(from));<newline46mondego>        InternetAddress[] address = {new InternetAddress(to)};<newline46mondego>        message.setRecipients(Message.RecipientType.TO, address);<newline46mondego><newline46mondego>        message.setSubject(subject + <doubleQuotes46>JavaMail API<doubleQuotes46>);<newline46mondego>        message.setSentDate(new Date());<newline46mondego><newline46mondego>        setHTMLContent(message);<newline46mondego>        message.saveChanges();<newline46mondego>        transport.sendMessage(message, address);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    transport.close();<newline46mondego>"
"1483splitHere46","4354867splitHere46","number = randomnumber * 100000 + 28071"
"1484splitHere46","4354867splitHere46","while (!IsPrime(number))<newline46mondego>    number += 100000;<newline46mondego>"
"1485splitHere46","4355097splitHere46","PreparedStatement#addBatch()"
"1486splitHere46","4355097splitHere46","PreparedStatement#executeBatch()"
"1487splitHere46","4355097splitHere46","public void save(List<Entity> entities) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego>    try {<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(SQL_INSERT);<newline46mondego>        for (int i = 0; i < entities.size(); i++) {<newline46mondego>            Entity entity = entities.get(i);<newline46mondego>            statement.setString(1, entity.getSomeProperty());<newline46mondego>            // ...<newline46mondego>            statement.addBatch();<newline46mondego>            if ((i + 1) % 1000 == 0) {<newline46mondego>                statement.executeBatch(); // Execute every 1000 items.<newline46mondego>            }<newline46mondego>        }<newline46mondego>        statement.executeBatch();<newline46mondego>    } finally {<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1488splitHere46","4355099splitHere46","public void doSomethingToAll(List list)<newline46mondego>{<newline46mondego>    // Begin the recursion.<newline46mondego>    doSomethingToAll(list, 0);<newline46mondego>}<newline46mondego><newline46mondego>private void doSomethingToAll(List list, int index)<newline46mondego>{<newline46mondego>    // Break the recursion when we have processed the entire list.<newline46mondego>    if (index >= list.size()) return;<newline46mondego><newline46mondego>    // Do whatever you want with the list.<newline46mondego>    process(list.get(index));<newline46mondego><newline46mondego>    // Recursive step. Process the next element.<newline46mondego>    doSomethingToAll(list, index + 1);<newline46mondego>}<newline46mondego>"
"1489splitHere46","4355224splitHere46","-Xmxn"
"1490splitHere46","4355224splitHere46","java -Xmx100m foo"
"1491splitHere46","4355224splitHere46","foo"
"1492splitHere46","4355224splitHere46","System.out.println()"
"1493splitHere46","4355237splitHere46","Class.newInstance"
"1494splitHere46","4355237splitHere46","Class.asSubclass"
"1495splitHere46","4355237splitHere46","Class"
"1496splitHere46","4355237splitHere46","Class.getConstructor.newInstance"
"1497splitHere46","4355259splitHere46","String data = <doubleQuotes46><doubleQuotes46>;<newline46mondego>for line in file {<newline46mondego>    data += line;<newline46mondego>}<newline46mondego>"
"1498splitHere46","4355259splitHere46","StringBuilder data = new StringBuilder();<newline46mondego>for line in file {<newline46mondego>    data.append(line);<newline46mondego>}<newline46mondego>return data.toString();<newline46mondego>"
"1499splitHere46","4355259splitHere46","Map<String, String> entries = new HashMap<String,String>(1000);<newline46mondego>StringBuilder entryData = null;<newline46mondego>for line in file {<newline46mondego>  if line starts with <doubleQuotes46><docFileNo<doubleQuotes46> {<newline46mondego>     docFileNo = extract number from line;<newline46mondego>  } else if line starts with <doubleQuotes46><div=XXXpostag><doubleQuotes46> {<newline46mondego>     // Content of this entry starts here<newline46mondego>     entryData = new StringBuilder();<newline46mondego>  } else if line starts with <doubleQuotes46></html><doubleQuotes46> {<newline46mondego>     // content of this entry ends here<newline46mondego>     // so store content, and indicate that the entry is finished by <newline46mondego>     // setting data to null<newline46mondego>     entries.put(docFileNo, entryData.toString);<newline46mondego>     entryData = null;<newline46mondego>  } else if entryData is not null {<newline46mondego>     // we're in an entry as data is not null, so store the line<newline46mondego>     entryData.append(line);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1500splitHere46","4355259splitHere46","(</html>)"
"1501splitHere46","4355377splitHere46","response.sendError()"
"1502splitHere46","4355377splitHere46","response.setStatus()"
"1503splitHere46","4355377splitHere46","response.setStatus(HttpServletResponse.SC_NOT_FOUND)"
"1504splitHere46","4355395splitHere46","mvn tomcat:deploy"
"1505splitHere46","4355461splitHere46","<newline46mondego>package edu.mew.test.regexp;<newline46mondego><newline46mondego>import java.util.regex.Matcher;<newline46mondego>import java.util.regex.Pattern;<newline46mondego><newline46mondego>public class RegExpPatternTester {<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    String s1 = <doubleQuotes46>filename()[].txt<doubleQuotes46>;<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>.*\\(\\)\\[\\].*<doubleQuotes46>);<newline46mondego>    Matcher m1 = p.matcher(s1);<newline46mondego>    System.out.println(m1.matches());<newline46mondego>    String s2 = <doubleQuotes46>filename.txt<doubleQuotes46>;<newline46mondego>    Matcher m2 = p.matcher(s2);<newline46mondego>    System.out.println(m2.matches());<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>"
"1506splitHere46","4355540splitHere46","ArrayList"
"1507splitHere46","4355540splitHere46",".compareTo"
"1508splitHere46","4355644splitHere46","@+id/list"
"1509splitHere46","4355644splitHere46","R.id.list"
"1510splitHere46","4355644splitHere46","@android:id/list"
"1511splitHere46","4355644splitHere46","android.R.id.list"
"1512splitHere46","4355644splitHere46","@android:id/list"
"1513splitHere46","4355644splitHere46","+"
"1514splitHere46","4355745splitHere46","ffffffff"
"1515splitHere46","4355745splitHere46","Integer.parseInt(<doubleQuotes46><doubleQuotes46>+Long.MAX_VALUE);"
"1516splitHere46","4355745splitHere46","int i = 0xffffffff;"
"1517splitHere46","4355745splitHere46","i"
"1518splitHere46","4355745splitHere46","-1"
"1519splitHere46","4355745splitHere46","long l = 0xffffffff;"
"1520splitHere46","4355745splitHere46","l"
"1521splitHere46","4355745splitHere46","-1"
"1522splitHere46","4355745splitHere46","0xffffffff"
"1523splitHere46","4355745splitHere46","long l = 0xffffffffL;"
"1524splitHere46","4355772splitHere46","char[] hand = {'a','b','c','b','c'};<newline46mondego>/* sort the hand to ensure pairs are next to each other */<newline46mondego>for(int x=0;x<hand.length - 1;x++){<newline46mondego>    for(int y=(x+1);y<hand.length;y++){<newline46mondego>        if((int)hand[x] > (int)hand[y]){<newline46mondego>            char temp = hand[y];<newline46mondego>            hand[y] = hand[x];<newline46mondego>            hand[x] = temp;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>int score = 0;<newline46mondego>for(int x=0;x<hand.length - 1;x++){<newline46mondego>    if(hand[x] == hand[x + 1]){<newline46mondego>        score++;<newline46mondego>        /*if you want to make sure you only get pairs<newline46mondego>          add an <doubleQuotes46>x++;<doubleQuotes46> that way it'll skip over the <newline46mondego>          letter you just tested*/<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1525splitHere46","4355886splitHere46","inFile.next()"
"1526splitHere46","4355886splitHere46","keyboard.nextDouble()"
"1527splitHere46","4355933splitHere46","rule<newline46mondego>  :  r=(rule2 | rule3) {String txt = $r.text;}<newline46mondego>  ;<newline46mondego>"
"1528splitHere46","4356051splitHere46","public static String removeSpaces(String s) {<newline46mondego>    StringTokenizer st = new StringTokenizer(s,<doubleQuotes46> <doubleQuotes46>,false);<newline46mondego>    String t = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    int i=0;  // counter variable<newline46mondego><newline46mondego>    while(st.hasMoreElements()){<newline46mondego><newline46mondego>       switch(i)<newline46mondego>       {<newline46mondego>          case 2:<newline46mondego>          case 3:<newline46mondego>                 t =  t + <doubleQuotes46> <doubleQuotes46>;<newline46mondego>                 break;<newline46mondego>          case 5:<newline46mondego>                 t =  t + <doubleQuotes46>  <doubleQuotes46>;<newline46mondego>                break;<newline46mondego>          default:<newline46mondego>                 t =  t + <doubleQuotes46>;<doubleQuotes46>;<newline46mondego>                 break;<newline46mondego>       }<newline46mondego><newline46mondego>       t = t + st.nextElement();<newline46mondego>       ++i;<newline46mondego>    }<newline46mondego><newline46mondego>    t =  t + <doubleQuotes46>;<doubleQuotes46>;  // put the last semi-colon<newline46mondego><newline46mondego>    return t;<newline46mondego>}<newline46mondego>"
"1529splitHere46","4356244splitHere46","possible[i]"
"1530splitHere46","4356244splitHere46","possible[i+n]"
"1531splitHere46","4356244splitHere46","card_used"
"1532splitHere46","4356244splitHere46","card_used[i+n]"
"1533splitHere46","4356244splitHere46","i"
"1534splitHere46","4356244splitHere46","i+n"
"1535splitHere46","4356244splitHere46","possible[15]"
"1536splitHere46","4356244splitHere46","card_used"
"1537splitHere46","4356414splitHere46","String cipherString = new String(cipherBytes);<newline46mondego>"
"1538splitHere46","4356414splitHere46","cipherBytes"
"1539splitHere46","4356418splitHere46","p2.inf"
"1540splitHere46","4356418splitHere46","instructions.configure = setStartLevel(startLevel:4);<newline46mondego>markStarted(started: true);<newline46mondego>"
"1541splitHere46","4356418splitHere46","p2.inf"
"1542splitHere46","4356496splitHere46","// in the controller<newline46mondego>def updateSystemTimeTask = new TimerTask() {<newline46mondego>  @Override<newline46mondego>  void run() {<newline46mondego>    onSystemTimeUpdate System.currentTimeMillis()<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>def onSystemTimeUpdate(Long systemTime) {<newline46mondego>  if (model.working) {<newline46mondego>    view.systemTray.trayIcons[0].toolTip = <doubleQuotes46>Pracujesz juÅ¼ ${HourMin.since model.startedWorkingAt}<doubleQuotes46>.toString()<newline46mondego>  } else {<newline46mondego>    view.systemTray.trayIcons[0].toolTip = = <doubleQuotes46>Obecnie nie pracujesz.<doubleQuotes46><newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// ant this in the initialization method<newline46mondego>def myTimer = new Timer().schedule updateSystemTimeTask, initialDelay, minute<newline46mondego>"
"1543splitHere46","4356541splitHere46","toSearch.iterator().next()"
"1544splitHere46","4356541splitHere46","toArray"
"1545splitHere46","4356541splitHere46","toArray"
"1546splitHere46","4356555splitHere46","Toast.makeText(createaccount.getApplicationContext(), <doubleQuotes46>In Helper executing <newline46mondego>            onCreate1()<doubleQuotes46>, Toast.LENGTH_SHORT).show(); <newline46mondego>"
"1547splitHere46","4356555splitHere46","Toast.makeText(createaccount.getApplicationContext(), <doubleQuotes46>In Helper executing onCreate1()<doubleQuotes46>, Toast.LENGTH_SHORT).show(); <newline46mondego>"
"1548splitHere46","4356610splitHere46","it"
"1549splitHere46","4356610splitHere46",".size()"
"1550splitHere46","4356716splitHere46","ObjectOutputStreams"
"1551splitHere46","4356716splitHere46","ObjectOutputStreams"
"1552splitHere46","4356716splitHere46","if (req.getRequest().equals(Request.GET_CARS)) {<newline46mondego>    Response response = new Response();<newline46mondego>    response.setCars(manager.getAvailableCars());<newline46mondego>    out.writeObject(response);<newline46mondego>    continue;<newline46mondego>}<newline46mondego>"
"1553splitHere46","4356716splitHere46","manager.getAvailableCars()"
"1554splitHere46","4356716splitHere46","ObjectOutputStream"
"1555splitHere46","4356716splitHere46","ObjectInputStream"
"1556splitHere46","4356716splitHere46","ObjectOutputStream.reset()"
"1557splitHere46","4356923splitHere46","public static String[] words = {<doubleQuotes46>cat<doubleQuotes46>,<doubleQuotes46>dog<doubleQuotes46>,<doubleQuotes46>banana<doubleQuotes46>};<newline46mondego>public static int[] value = {3,4,5};<newline46mondego>public static void main(String[] args){<newline46mondego>    if(valOf(<doubleQuotes46>Cat<doubleQuotes46>) > valOf(<doubleQuotes46>Dog<doubleQuotes46>)){<newline46mondego>        System.out.print(<doubleQuotes46>Cat is greater than Dog<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    else{<newline46mondego>        System.out.print(<doubleQuotes46>Cat is not greater than Dog<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>public static int valOf(String str){<newline46mondego>    for(int x=0;x<words.length;x++){<newline46mondego>        if(str.equalsIgnoreCase(words[x])){<newline46mondego>            return value[x];<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return -1;<newline46mondego>}<newline46mondego>"
"1558splitHere46","4356970splitHere46","Criteria"
"1559splitHere46","4356970splitHere46","Session.createSQLQuery"
"1560splitHere46","4356970splitHere46","Query.list"
"1561splitHere46","4356970splitHere46","Query.executeUpdate"
"1562splitHere46","4356970splitHere46","Sesion sess = getSession();<newline46mondego>Query mySelect = sess.createSQLQuery(<doubleQuotes46>SELECT * from foo<doubleQuotes46>);<newline46mondego>List<Entity> results = mySelect.list();<newline46mondego><newline46mondego>Query myUpdate = sess.createSQLQuery(<doubleQuotes46>DELETE * from foo where bar = \<doubleQuotes46>boz\<doubleQuotes46><doubleQuotes46>);<newline46mondego>int updateCount = myUpdate.executeUpdate();<newline46mondego>"
"1563splitHere46","4357162splitHere46","int N = 100;<newline46mondego>double[] S = new double[N+1];<newline46mondego>double[] I = new double[N+1];<newline46mondego>double[] R = new double[N+1];<newline46mondego><newline46mondego>S[0] = /* initial value */<newline46mondego>I[0] = /* initial value */<newline46mondego>R[0] = /* initial value */<newline46mondego><newline46mondego>double dt = total_time / N;<newline46mondego><newline46mondego>for (int i = 0; i < 100; ++i)<newline46mondego>{<newline46mondego>   double t = i*dt;<newline46mondego>   double l = /* compute l here */<newline46mondego>   double g = /* compute g here */<newline46mondego><newline46mondego>   /* calculate derivatives */<newline46mondego>   double dSdt = - I[i] * S[i];<newline46mondego>   double dIdt = I[i] * S[i] - g * I[i];<newline46mondego>   double dRdt = g * I[i];<newline46mondego><newline46mondego>   /* now integrate using Euler */<newline46mondego>   S[i+1] = S[i] + dSdt * dt;<newline46mondego>   I[i+1] = I[i] + dIdt * dt;<newline46mondego>   R[i+1] = R[i] + dRdt * dt;<newline46mondego>}<newline46mondego>"
"1564splitHere46","4357269splitHere46","import"
"1565splitHere46","4357269splitHere46","import"
"1566splitHere46","4357269splitHere46","com.example.OtherClass otherClass = new com.example.OtherClass();<newline46mondego>"
"1567splitHere46","4357269splitHere46","java.lang"
"1568splitHere46","4357553splitHere46","if"
"1569splitHere46","4357553splitHere46","public MyClass getInstance() {<newline46mondego>    if (uniqueInstance == null) {<newline46mondego>        synchronized(MyClass.class) {<newline46mondego>            if (uniqueInstance == null) {<newline46mondego>                uniqueInstance = new MyClass();<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return uniqueInstance;<newline46mondego>}<newline46mondego>"
"1570splitHere46","4357645splitHere46","Alien"
"1571splitHere46","4357645splitHere46","public Alien(XYCoordination, int)<newline46mondego>"
"1572splitHere46","4357645splitHere46","super(currentLocation, energyCanister);<newline46mondego>"
"1573splitHere46","4357645splitHere46","currentLocation"
"1574splitHere46","4357645splitHere46","energyCanister"
"1575splitHere46","4357645splitHere46","Object"
"1576splitHere46","4357645splitHere46","AggresiveAlien.currentLocation()<newline46mondego>"
"1577splitHere46","4357645splitHere46","currentLocation()"
"1578splitHere46","4357645splitHere46","AggresiveAlien"
"1579splitHere46","4357645splitHere46","this.currentLocation()<newline46mondego>"
"1580splitHere46","4357645splitHere46","currentLocation()<newline46mondego>"
"1581splitHere46","4358222splitHere46","proc.waitFor();<newline46mondego>int exitCode = exitValue();<newline46mondego>if(exitCode == 0) { // success }<newline46mondego>else { // failed }<newline46mondego>"
"1582splitHere46","4358222splitHere46","Test"
"1583splitHere46","4358222splitHere46","Test"
"1584splitHere46","4358222splitHere46","proc.getInputStream()"
"1585splitHere46","4358222splitHere46","proc.getErrorStream()"
"1586splitHere46","4358222splitHere46","/dev/null"
"1587splitHere46","4358222splitHere46","Runtime.exec(<doubleQuotes46>java Test >/dev/null 2>&1<doubleQuotes46>);<newline46mondego>Runtime.exec(<doubleQuotes46>java Test >/dev/null 2>erroroutput<doubleQuotes46>);<newline46mondego>"
"1588splitHere46","4358406splitHere46","hudson.security.HudsonPrivateSecurityRealm"
"1589splitHere46","4358406splitHere46","PasswordEncoder"
"1590splitHere46","4358406splitHere46","mEDUyJ"
"1591splitHere46","4358406splitHere46","ShaPasswordEncoder"
"1592splitHere46","4358406splitHere46","String salt = generateSomeSixLetterSalt() // Fictional function<newline46mondego>String passwordHash = salt + <doubleQuotes46>:<doubleQuotes46> + new ShaPasswordEncoder(256).encodePassword(password, salt);<newline46mondego>"
"1593splitHere46","4358406splitHere46","ShaPasswordEncoder"
"1594splitHere46","4358406splitHere46","// Fictional functions ahead...<newline46mondego>String salt = generateSomeSixLetterSalt()<newline46mondego>String passwordHash = salt + <doubleQuotes46>:<doubleQuotes46> + hex_encode(sha256_hash(utf8_encode(password + <doubleQuotes46>{<doubleQuotes46> + salt + <doubleQuotes46>}<doubleQuotes46>)))<newline46mondego>"
"1595splitHere46","4358438splitHere46","msg2"
"1596splitHere46","4358438splitHere46","receive()"
"1597splitHere46","4358478splitHere46","<%@ taglib uri=<doubleQuotes46>http://java.sun.com/jstl/core<doubleQuotes46> prefix=<doubleQuotes46>c<doubleQuotes46> %><newline46mondego>"
"1598splitHere46","4358478splitHere46","<%@ taglib uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> prefix=<doubleQuotes46>c<doubleQuotes46> %><newline46mondego>"
"1599splitHere46","4358527splitHere46","g:include"
"1600splitHere46","4358527splitHere46","<g:include controller=<doubleQuotes46>myJasper<doubleQuotes46> action=<doubleQuotes46>showReport<doubleQuotes46> <newline46mondego>    params=<doubleQuotes46>[foo: 'bar', baz: 42]<doubleQuotes46> /><newline46mondego>"
"1601splitHere46","4358527splitHere46","import org.codehaus.groovy.grails.plugins.jasper.JasperExportFormat;<newline46mondego>import org.codehaus.groovy.grails.plugins.jasper.JasperReportDef;<newline46mondego><newline46mondego>class MyJasperController {<newline46mondego>    def jasperService<newline46mondego><newline46mondego>    def showReport = {<newline46mondego>        def reportDef = new JasperReportDef(<newline46mondego>            name: 'your_report.jasper', <newline46mondego>            parameters: params,<newline46mondego>            fileFormat: JasperExportFormat.HTML_FORMAT)<newline46mondego><newline46mondego>        def report = jasperService.generateReport(reportDef)<newline46mondego>            .toByteArray().toString(<doubleQuotes46>UTF-8<doubleQuotes46>)<newline46mondego><newline46mondego>        render report<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1602splitHere46","4358784splitHere46","Map<String, Map<String, Integer> >"
"1603splitHere46","4358784splitHere46",";"
"1604splitHere46","4358784splitHere46","Map<String, Integer>"
"1605splitHere46","4358784splitHere46","Map<String, Integer>"
"1606splitHere46","4358784splitHere46","Map<>"
"1607splitHere46","4358803splitHere46","value"
"1608splitHere46","4358803splitHere46","List"
"1609splitHere46","4358803splitHere46","f:selectItem(s)"
"1610splitHere46","4358803splitHere46","String"
"1611splitHere46","4358803splitHere46","Number"
"1612splitHere46","4358803splitHere46","Boolean"
"1613splitHere46","4358803splitHere46","Converter"
"1614splitHere46","4358803splitHere46","String"
"1615splitHere46","4358803splitHere46","<h:selectManyListbox value=<doubleQuotes46>#{bean.selectedItems}<doubleQuotes46>><newline46mondego>    <f:selectItems value=<doubleQuotes46>#{bean.selectItems}<doubleQuotes46> /><newline46mondego></h:selectManyListbox><newline46mondego><h:commandButton value=<doubleQuotes46>Submit<doubleQuotes46> action=<doubleQuotes46>#{bean.submit}<doubleQuotes46> /><newline46mondego>"
"1616splitHere46","4358803splitHere46","public class Bean {<newline46mondego>    private List<SelectItem> selectItems; // +getter<newline46mondego>    private List<String> selectedItems; // +getter +setter<newline46mondego><newline46mondego>    public Bean() {<newline46mondego>        selectItems = new ArrayList<SelectItem>();<newline46mondego>        selectItems.add(new SelectItem(<doubleQuotes46>value1<doubleQuotes46>, <doubleQuotes46>label1<doubleQuotes46>));<newline46mondego>        selectItems.add(new SelectItem(<doubleQuotes46>value2<doubleQuotes46>, <doubleQuotes46>label2<doubleQuotes46>));<newline46mondego>        selectItems.add(new SelectItem(<doubleQuotes46>value3<doubleQuotes46>, <doubleQuotes46>label3<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>    public void submit() {<newline46mondego>        System.out.println(selectedItems); // It's already set at that point.<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"1617splitHere46","4359087splitHere46","fetch=<doubleQuotes46>EAGER<doubleQuotes46>"
"1618splitHere46","4359087splitHere46","<many-to-one<newline46mondego>     name=<doubleQuotes46>author<doubleQuotes46><newline46mondego>     class=<doubleQuotes46>com.doolloop.objects.Author<doubleQuotes46><newline46mondego>     cascade=<doubleQuotes46>all<doubleQuotes46><newline46mondego>     column=<doubleQuotes46>authorid<doubleQuotes46><newline46mondego>     unique=<doubleQuotes46>false<doubleQuotes46><newline46mondego>     fetch=<doubleQuotes46>EAGER<doubleQuotes46><newline46mondego> />  <newline46mondego>"
"1619splitHere46","4359087splitHere46","<filter><newline46mondego>   <filter-name>openSessionInViewFilter</filter-name><newline46mondego>   <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class><newline46mondego>     <init-param><newline46mondego>        <param-name>sessionFactoryBeanName</param-name><newline46mondego>        <param-value>sessionFactory</param-value><newline46mondego>     </init-param><newline46mondego> </filter><newline46mondego>"
"1620splitHere46","4359087splitHere46","<tx:annotation-driven transaction-manager=<doubleQuotes46>transactionManager<doubleQuotes46>/><newline46mondego>"
"1621splitHere46","4359096splitHere46","int[][]"
"1622splitHere46","4359096splitHere46","getSubMatrix(x, y, rows, cols)"
"1623splitHere46","4359096splitHere46","static class Matrix {<newline46mondego>    int[][] data;<newline46mondego>    int x, y, columns, rows;<newline46mondego><newline46mondego>    public Matrix(int[][] data) {<newline46mondego>        this(data, 0, 0, data.length, data[0].length);<newline46mondego>    }<newline46mondego><newline46mondego>    private Matrix(int[][] data, int x, int y, int columns, int rows) {<newline46mondego>        this.data = data;<newline46mondego>        this.x = x;<newline46mondego>        this.y = y;<newline46mondego>        this.columns = columns;<newline46mondego>        this.rows = rows;<newline46mondego>    }<newline46mondego><newline46mondego>    public Matrix getSubMatrix(int x, int y, int columns, int rows) {<newline46mondego>        return new Matrix(data, this.x + x , this.y + y, columns, rows);<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString() {<newline46mondego><newline46mondego>        StringBuffer sb = new StringBuffer();<newline46mondego><newline46mondego>        for (int i = y; i < x + rows; i++) {<newline46mondego>            for (int j = x; j < x + columns; j++)<newline46mondego>                sb.append(data[i][j]).append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego><newline46mondego>            sb.append(<doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        sb.setLength(sb.length() - 1);<newline46mondego><newline46mondego>        return sb.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1624splitHere46","4359096splitHere46","public static void main(String[] args) throws IOException {<newline46mondego><newline46mondego>    int[][] testData = new int[10][10];<newline46mondego><newline46mondego>    for (int i = 0; i < testData.length; i++) <newline46mondego>        for (int j = 0; j < testData[i].length; j++)<newline46mondego>            testData[i][j] = 100 + i + j;<newline46mondego><newline46mondego>    Matrix full = new Matrix(testData);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Full test matrix:<doubleQuotes46>);<newline46mondego>    System.out.println(full);<newline46mondego><newline46mondego>    System.out.println();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Part of the matrix:<doubleQuotes46>);<newline46mondego>    System.out.println(full.getSubMatrix(3, 3, 3, 3));<newline46mondego><newline46mondego>}<newline46mondego>"
"1625splitHere46","4359096splitHere46","Full test matrix:<newline46mondego>100 101 102 103 104 105 106 107 108 109 <newline46mondego>101 102 103 104 105 106 107 108 109 110 <newline46mondego>102 103 104 105 106 107 108 109 110 111 <newline46mondego>103 104 105 106 107 108 109 110 111 112 <newline46mondego>104 105 106 107 108 109 110 111 112 113 <newline46mondego>105 106 107 108 109 110 111 112 113 114 <newline46mondego>106 107 108 109 110 111 112 113 114 115 <newline46mondego>107 108 109 110 111 112 113 114 115 116 <newline46mondego>108 109 110 111 112 113 114 115 116 117 <newline46mondego>109 110 111 112 113 114 115 116 117 118 <newline46mondego><newline46mondego>Part of the matrix:<newline46mondego>106 107 108 <newline46mondego>107 108 109 <newline46mondego>108 109 110 <newline46mondego>"
"1626splitHere46","4359220splitHere46","DataOutputStream"
"1627splitHere46","4359220splitHere46","ObjectOutputStream"
"1628splitHere46","4359220splitHere46","Serializable"
"1629splitHere46","4359220splitHere46","int[]"
"1630splitHere46","4359220splitHere46","FileChannel"
"1631splitHere46","4359220splitHere46","DataOutputStream wrote 1,000,000 ints in 3,159.716 ms<newline46mondego>ObjectOutputStream wrote 1,000,000 ints in 295.602 ms<newline46mondego>FileChannel wrote 1,000,000 ints in 110.094 ms<newline46mondego>"
"1632splitHere46","4359220splitHere46","ObjectOutputStream"
"1633splitHere46","4359220splitHere46","private static final int NUM_INTS = 1000000;<newline46mondego><newline46mondego>interface IntWriter {<newline46mondego>  void write(int[] ints);<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>  int[] ints = new int[NUM_INTS];<newline46mondego>  Random r = new Random();<newline46mondego>  for (int i=0; i<NUM_INTS; i++) {<newline46mondego>    ints[i] = r.nextInt();<newline46mondego>  }<newline46mondego>  time(<doubleQuotes46>DataOutputStream<doubleQuotes46>, new IntWriter() {<newline46mondego>    public void write(int[] ints) {<newline46mondego>      storeDO(ints);<newline46mondego>    }<newline46mondego>  }, ints);<newline46mondego>  time(<doubleQuotes46>ObjectOutputStream<doubleQuotes46>, new IntWriter() {<newline46mondego>    public void write(int[] ints) {<newline46mondego>      storeOO(ints);<newline46mondego>    }<newline46mondego>  }, ints);<newline46mondego>  time(<doubleQuotes46>FileChannel<doubleQuotes46>, new IntWriter() {<newline46mondego>    public void write(int[] ints) {<newline46mondego>      storeFC(ints);<newline46mondego>    }<newline46mondego>  }, ints);<newline46mondego>}<newline46mondego><newline46mondego>private static void time(String name, IntWriter writer, int[] ints) {<newline46mondego>  long start = System.nanoTime();<newline46mondego>  writer.write(ints);<newline46mondego>  long end = System.nanoTime();<newline46mondego>  double ms = (end - start) / 1000000d;<newline46mondego>  System.out.printf(<doubleQuotes46>%s wrote %,d ints in %,.3f ms%n<doubleQuotes46>, name, ints.length, ms);<newline46mondego>}<newline46mondego><newline46mondego>private static void storeOO(int[] ints) {<newline46mondego>  ObjectOutputStream out = null;<newline46mondego>  try {<newline46mondego>    out = new ObjectOutputStream(new FileOutputStream(<doubleQuotes46>object.out<doubleQuotes46>));<newline46mondego>    out.writeObject(ints);<newline46mondego>  } catch (IOException e) {<newline46mondego>    throw new RuntimeException(e);<newline46mondego>  } finally {<newline46mondego>    safeClose(out);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>private static void storeDO(int[] ints) {<newline46mondego>  DataOutputStream out = null;<newline46mondego>  try {<newline46mondego>    out = new DataOutputStream(new FileOutputStream(<doubleQuotes46>data.out<doubleQuotes46>));<newline46mondego>    for (int anInt : ints) {<newline46mondego>      out.write(anInt);<newline46mondego>    }<newline46mondego>  } catch (IOException e) {<newline46mondego>    throw new RuntimeException(e);<newline46mondego>  } finally {<newline46mondego>    safeClose(out);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>private static void storeFC(int[] ints) {<newline46mondego>  FileOutputStream out = null;<newline46mondego>  try {<newline46mondego>    out = new FileOutputStream(<doubleQuotes46>fc.out<doubleQuotes46>);<newline46mondego>    FileChannel file = out.getChannel();<newline46mondego>    ByteBuffer buf = file.map(FileChannel.MapMode.READ_WRITE, 0, 4 * ints.length);<newline46mondego>    for (int i : ints) {<newline46mondego>      buf.putInt(i);<newline46mondego>    }<newline46mondego>    file.close();<newline46mondego>  } catch (IOException e) {<newline46mondego>    throw new RuntimeException(e);<newline46mondego>  } finally {<newline46mondego>    safeClose(out);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>private static void safeClose(OutputStream out) {<newline46mondego>  try {<newline46mondego>    if (out != null) {<newline46mondego>      out.close();<newline46mondego>    }<newline46mondego>  } catch (IOException e) {<newline46mondego>    // do nothing<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1634splitHere46","4359355splitHere46","ByteArrayInputStream bai = new ByteArrayInputStream(pByte);<newline46mondego>        ContentHandler contenthandler = new BodyContentHandler();<newline46mondego>        Metadata metadata = new Metadata();<newline46mondego>        Parser parser = new AutoDetectParser();<newline46mondego>        try {<newline46mondego>              parser.parse(bai, contenthandler, metadata);<newline46mondego><newline46mondego>        } catch (IOException e) {<newline46mondego>              // TODO Auto-generated catch block<newline46mondego>              e.printStackTrace();<newline46mondego>        } catch (SAXException e) {<newline46mondego>              // TODO Auto-generated catch block<newline46mondego>              e.printStackTrace();<newline46mondego>        } catch (TikaException e) {<newline46mondego>              // TODO Auto-generated catch block<newline46mondego>              e.printStackTrace();<newline46mondego>        }           <newline46mondego>        System.out.println(<doubleQuotes46>Mime: <doubleQuotes46> + metadata.get(Metadata.CONTENT_TYPE));<newline46mondego>        return metadata.get(Metadata.CONTENT_TYPE);<newline46mondego>"
"1635splitHere46","4359405splitHere46","public static Long ipToInt(String addr) {<newline46mondego>        String[] addrArray = addr.split(<doubleQuotes46>\\.<doubleQuotes46>);<newline46mondego><newline46mondego>        long num = 0;<newline46mondego>        for (int i=0;i<addrArray.length;i++) {<newline46mondego>            int power = 3-i;<newline46mondego><newline46mondego>            num += ((Integer.parseInt(addrArray[i])%256 * Math.pow(256,power)));<newline46mondego>        }<newline46mondego>        return num;<newline46mondego>    }<newline46mondego>"
"1636splitHere46","4359425splitHere46","array_"
"1637splitHere46","4359425splitHere46","Object[] array = null;<newline46mondego>"
"1638splitHere46","4359425splitHere46","Object[] array_ = { null };<newline46mondego>"
"1639splitHere46","4359425splitHere46","Object[] array_ = { };<newline46mondego>"
"1640splitHere46","4359425splitHere46","array_"
"1641splitHere46","4359425splitHere46","invariant array_ != null;"
"1642splitHere46","4359425splitHere46","array_ != null"
"1643splitHere46","4359425splitHere46","non_null"
"1644splitHere46","4359425splitHere46","array_ != null"
"1645splitHere46","4359433splitHere46","HttpMessageConverter"
"1646splitHere46","4359433splitHere46","MappingJacksonHttpMessageConverter"
"1647splitHere46","4359433splitHere46","HttpMessageConverter"
"1648splitHere46","4359433splitHere46","protected void writeInternal(Object o,<newline46mondego>                         HttpOutputMessage outputMessage)<newline46mondego>                  throws IOException,<newline46mondego>                         HttpMessageNotWritableException<newline46mondego>"
"1649splitHere46","4359736splitHere46","iiiiiii.."
"1650splitHere46","4359736splitHere46","{int i = 10;}"
"1651splitHere46","4359736splitHere46","{}"
"1652splitHere46","4359779splitHere46","telnet host port<newline46mondego>"
"1653splitHere46","4359793splitHere46","if (TextUtils.isEmpty(mEditText.getText()) {<newline46mondego>    mEditText.startAnimation(shake);<newline46mondego>} else {<newline46mondego>    finish();<newline46mondego>}<newline46mondego>"
"1654splitHere46","4359955splitHere46","getListView().setVisibility(View.INVISIBLE);"
"1655splitHere46","4359955splitHere46","ListActivity"
"1656splitHere46","4359955splitHere46","public OnClickListener teamlisten = new OnClickListener() {<newline46mondego>   public void onClick(View v) {<newline46mondego>      getListView().setVisibility(View.INVISIBLE);<newline46mondego>   }<newline46mondego>};<newline46mondego>"
"1657splitHere46","4359961splitHere46","import java.util.*;<newline46mondego><newline46mondego>class Compare2DArray implements Comparator {<newline46mondego>  public int compare(Object a, Object b) {<newline46mondego>    int aa[] = (int[]) a;<newline46mondego>    int bb[] = (int[]) b;<newline46mondego>    for (int i = 0; i < aa.length && i < bb.length; i++)<newline46mondego>      if (aa[i] != bb[i])<newline46mondego>        return aa[i] - bb[i];<newline46mondego>    return aa.length - bb.length;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class sort2d {<newline46mondego>  public static void main(String args[]) {<newline46mondego>    int d2 [][] = {{1,43},{26,98},{44,398},{11,34},{17,32}};<newline46mondego>    Arrays.sort(d2, new Compare2DArray());<newline46mondego>    for (int i = 0; i < d2.length; i++) {<newline46mondego>      for (int j = 0; j < d2[i].length; j++)<newline46mondego>        System.out.print(d2[i][j] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>      System.out.println();<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1658splitHere46","4359961splitHere46","class Compare2DArray implements Comparator<int[]> {<newline46mondego>  public int compare(int a[], int b[]) {<newline46mondego>    for (int i = 0; i < a.length && i < b.length; i++)<newline46mondego>      if (a[i] != b[i])<newline46mondego>        return a[i] - b[i];<newline46mondego>    return a.length - b.length;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1659splitHere46","4360029splitHere46","StringBuilder sb = new StringBuilder(<doubleQuotes46>Mat<doubleQuotes46>);<newline46mondego>sb.append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>sb.append(<doubleQuotes46>Bank<doubleQuotes46>);<newline46mondego>// oops<newline46mondego>int i = sb.indexOf(<doubleQuotes46>k<doubleQuotes46>);<newline46mondego>sb.insert(i, 'i'); // character<newline46mondego>String mb = sb.toString();<newline46mondego>// result = <doubleQuotes46>Mat Banik<doubleQuotes46><newline46mondego>"
"1660splitHere46","4360112splitHere46","A.hashCode() == B.hashCode() // does not necessarily mean<newline46mondego>A.equals(B)<newline46mondego>"
"1661splitHere46","4360112splitHere46","A.equals(B) // means<newline46mondego>A.hashCode() == B.hashCode()<newline46mondego>"
"1662splitHere46","4360127splitHere46","*"
"1663splitHere46","4360238splitHere46","M"
"1664splitHere46","4360238splitHere46","milestone"
"1665splitHere46","4360238splitHere46","CR"
"1666splitHere46","4360238splitHere46","candidate release"
"1667splitHere46","4360238splitHere46","GA"
"1668splitHere46","4360256splitHere46","public class Parent {<newline46mondego><newline46mondego>    private Image image;<newline46mondego><newline46mondego>    public void setImage(Image image) {<newline46mondego>      if (<doubleQuotes46>medium<doubleQuotes46>.equals(image.getSize())) {<newline46mondego>        this.image = image;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  public class Image {<newline46mondego><newline46mondego>    private String size;<newline46mondego>    private String url;<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) throws IOException, SAXException {<newline46mondego>    String s = <doubleQuotes46><parent><doubleQuotes46> <newline46mondego>        + <doubleQuotes46><image size='small'>some url1</image><doubleQuotes46><newline46mondego>        + <doubleQuotes46><image size='medium'>some url2</image><doubleQuotes46><newline46mondego>        + <doubleQuotes46><image size='large'>some url3</image><doubleQuotes46><newline46mondego>        + <doubleQuotes46><image size='huge'>some url4</image><doubleQuotes46><newline46mondego>        + <doubleQuotes46></parent><doubleQuotes46>;<newline46mondego><newline46mondego>    Digester digester = new Digester();<newline46mondego><newline46mondego>    digester.addObjectCreate(<doubleQuotes46>parent<doubleQuotes46>, Parent.class);<newline46mondego>    digester.addFactoryCreate(<doubleQuotes46>parent/image<doubleQuotes46>, new ImageCreationFactory());<newline46mondego>    digester.addBeanPropertySetter(<doubleQuotes46>parent/image<doubleQuotes46>, <doubleQuotes46>url<doubleQuotes46>);<newline46mondego>    digester.addSetNext(<doubleQuotes46>parent/image<doubleQuotes46>, <doubleQuotes46>setImage<doubleQuotes46>);<newline46mondego>    Parent p = (Parent) digester.parse(new StringReader(s));<newline46mondego>  }<newline46mondego><newline46mondego>  public class ImageCreationFactory implements ObjectCreationFactory {<newline46mondego><newline46mondego>    public Object createObject(Attributes attributes) throws Exception {<newline46mondego>      Image i = new Image();<newline46mondego>      i.setSize(attributes.getValue(<doubleQuotes46>size<doubleQuotes46>));<newline46mondego>      return i;<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego>"
"1669splitHere46","4360417splitHere46","getCharacterAttributes"
"1670splitHere46","4360532splitHere46","program.settings.properties"
"1671splitHere46","4360532splitHere46","webapps/appname/WEB-INF/classes"
"1672splitHere46","4360532splitHere46","ProgrammSettings.class.getResourceAsStream(..)"
"1673splitHere46","4360705splitHere46","private void populateRandomPrimes()<newline46mondego>{<newline46mondego>    while (true){<newline46mondego>      onePrimeValue = RandomPrime.getValue();<newline46mondego><newline46mondego>      do<newline46mondego>      {<newline46mondego>          secondPrimeValue= RandomPrime.getValue();<newline46mondego>      }while(onePrimeValue == secondPrimeValue);<newline46mondego><newline46mondego>      BigInteger calcNum = new BigInteger(Integer.toString(onePrimeValue*secondPrimeValue));<newline46mondego><newline46mondego>      try<newline46mondego>      {<newline46mondego>          if (calcNum.isProbablePrime(20)){<newline46mondego>              populateMultiplicativeForPlayer();<newline46mondego>              return;<newline46mondego>          }<newline46mondego>      }<newline46mondego>      catch (Exception io)<newline46mondego>      {<newline46mondego>          io.printStackTrace();<newline46mondego>      }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1674splitHere46","4360946splitHere46","select distinct u from SystemUser u join u.groups g <newline46mondego>where 3 in elements(g.permissions)<newline46mondego>"
"1675splitHere46","4361164splitHere46","TextWatcher"
"1676splitHere46","4361164splitHere46","private class EfficientAdapter extends BaseAdapter {<newline46mondego>            private LayoutInflater mInflater;<newline46mondego>            private String[] attitude_names;<newline46mondego>            public String[] attitude_values;<newline46mondego>            private String name;<newline46mondego><newline46mondego>            public EfficientAdapter(Context context) {<newline46mondego>                mInflater = LayoutInflater.from(context);<newline46mondego>                attitude_names = context.getResources().getStringArray(R.array.COMP_ATTITUDE_NAME);<newline46mondego>                attitude_values = new String[attitude_names.length];<newline46mondego>            }<newline46mondego><newline46mondego>            public Object getItem(int position) {<newline46mondego>                return position;<newline46mondego>            }<newline46mondego><newline46mondego>            public long getItemId(int position) {<newline46mondego>                return position;<newline46mondego>            }<newline46mondego><newline46mondego>            public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>                final ViewHolder holder;<newline46mondego><newline46mondego>                if (convertView == null) {<newline46mondego>                    convertView = mInflater.inflate(R.layout.addcomp_attitude_row, null);<newline46mondego><newline46mondego>                    holder = new ViewHolder();<newline46mondego>                    holder.Attitude_Name = (TextView) convertView.findViewById(R.id.addcomp_att_name);<newline46mondego>                    holder.Attitude_Value = (EditText) convertView.findViewById(R.id.addcomp_att_value);<newline46mondego>                    holder.Attitude_Value.addTextChangedListener(new TextWatcher()<newline46mondego>                        {<newline46mondego>                            public void afterTextChanged(Editable edt) <newline46mondego>                            {<newline46mondego>                                attitude_values[holder.ref] = edt.toString();<newline46mondego>                            }<newline46mondego><newline46mondego>                            public void beforeTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}<newline46mondego><newline46mondego>                            public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {<newline46mondego>                                //attitude_values[ref] = Attitude_Value.getText().toString();<newline46mondego>                            }<newline46mondego>                        });<newline46mondego><newline46mondego>                    convertView.setTag(holder);<newline46mondego>                } else {<newline46mondego>                    holder = (ViewHolder) convertView.getTag();<newline46mondego>                }<newline46mondego><newline46mondego><newline46mondego>                holder.ref=position;<newline46mondego>                holder.Attitude_Name.setText(attitude_names[position]);<newline46mondego>                holder.Attitude_Value.setHint(attitude_names[position]);<newline46mondego>                holder.Attitude_Value.setText(attitude_values[position]);<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>                return convertView;<newline46mondego>            }<newline46mondego><newline46mondego>            class ViewHolder {<newline46mondego>                TextView Attitude_Name;<newline46mondego>                EditText Attitude_Value; <newline46mondego>                int ref;<newline46mondego><newline46mondego><newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public int getCount() {<newline46mondego>                return attitude_names.length;<newline46mondego>            }<newline46mondego>        }<newline46mondego>"
"1677splitHere46","4361207splitHere46","open"
"1678splitHere46","4361207splitHere46","open MyLineInInput.app"
"1679splitHere46","4361207splitHere46","Desktop.getDesktop().open(new File(<doubleQuotes46>MyLineInInput.app<doubleQuotes46>));"
"1680splitHere46","4361269splitHere46","super.collectCanister(...)"
"1681splitHere46","4361269splitHere46","Alien"
"1682splitHere46","4361269splitHere46","lifePoints"
"1683splitHere46","4361269splitHere46","name"
"1684splitHere46","4361269splitHere46","super.collectCanister"
"1685splitHere46","4361269splitHere46","public int collectCanister(NormalPlanet canister)<newline46mondego>{<newline46mondego>    super.collectCanister(canister);<newline46mondego>    return energyCanister;<newline46mondego>}<newline46mondego>"
"1686splitHere46","4361269splitHere46","public Alien(XYCoordination currentLocation, <newline46mondego>             int energyCanister, <newline46mondego>             int lifePoints, <newline46mondego>             String name) {<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"1687splitHere46","4361320splitHere46","java <myjar.jar> file{1..5}<newline46mondego>"
"1688splitHere46","4361331splitHere46","android:windowSoftInputMode"
"1689splitHere46","4361331splitHere46","<activity android:name=<doubleQuotes46>.Finalize<doubleQuotes46><newline46mondego>    android:windowSoftInputMode=<doubleQuotes46>stateAlwaysVisible<doubleQuotes46>><newline46mondego>    ...<newline46mondego></activity><newline46mondego>"
"1690splitHere46","4361331splitHere46","public class DialogActivity extends Activity {<newline46mondego>    /** Called when the activity is first created. */<newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego>        setContentView(R.layout.main);        <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1691splitHere46","4361331splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><LinearLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:orientation=<doubleQuotes46>vertical<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46>><newline46mondego>    <TextView <newline46mondego>      android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46> <newline46mondego>      android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> <newline46mondego>      android:text=<doubleQuotes46>@string/hello<doubleQuotes46>    /><newline46mondego>    <EditText android:id=<doubleQuotes46>@+id/edit_text_test<doubleQuotes46><newline46mondego>      android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>      android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46>/><newline46mondego></LinearLayout><newline46mondego>"
"1692splitHere46","4361331splitHere46","<activity android:name=<doubleQuotes46>.DialogActivity<doubleQuotes46><newline46mondego>              android:windowSoftInputMode=<doubleQuotes46>stateAlwaysVisible<doubleQuotes46><newline46mondego>              android:label=<doubleQuotes46>@string/app_name<doubleQuotes46><newline46mondego>              android:theme=<doubleQuotes46>@android:style/Theme.Dialog<doubleQuotes46>><newline46mondego>        <intent-filter><newline46mondego>            <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego>            <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>        </intent-filter><newline46mondego>    </activity><newline46mondego>"
"1693splitHere46","4361363splitHere46","InputStream in = <newline46mondego>   getClass().getResourceAsStream(<doubleQuotes46>/Utils/CEP/Ciades/<doubleQuotes46> + estado + <doubleQuotes46>.txt<doubleQuotes46>);<newline46mondego>Reader fr = new InputStreamReader(in, <doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego>"
"1694splitHere46","4361499splitHere46","android:layout_margin"
"1695splitHere46","4361499splitHere46","<Button<newline46mondego>    android:layout_marginLeft=<doubleQuotes46>-3dip<doubleQuotes46><newline46mondego>    android:layout_marginRight=<doubleQuotes46>-3dip<doubleQuotes46><newline46mondego>    ... /><newline46mondego>"
"1696splitHere46","4361627splitHere46","public String listAllModules()<newline46mondego>{<newline46mondego>    return modules.toString();<newline46mondego>}<newline46mondego>"
"1697splitHere46","4361637splitHere46","public static String getStringContent(String uri, String postData, <newline46mondego>        HashMap<String, String> headers) throws Exception {<newline46mondego><newline46mondego>        HttpClient client = new DefaultHttpClient();<newline46mondego>        HttpPost request = new HttpPost();<newline46mondego>        request.setURI(new URI(uri));<newline46mondego>        request.setEntity(new StringEntity(postData));<newline46mondego>        for(Entry<String, String> s : headers.entrySet())<newline46mondego>        {<newline46mondego>            request.setHeader(s.getKey(), s.getValue());<newline46mondego>        }<newline46mondego>        HttpResponse response = client.execute(request);<newline46mondego><newline46mondego>        InputStream ips  = response.getEntity().getContent();<newline46mondego>        BufferedReader buf = new BufferedReader(new InputStreamReader(ips,<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>        if(response.getStatusLine().getStatusCode()!=HttpStatus.SC_OK)<newline46mondego>        {<newline46mondego>            throw new Exception(response.getStatusLine().getReasonPhrase());<newline46mondego>        }<newline46mondego>        StringBuilder sb = new StringBuilder();<newline46mondego>        String s;<newline46mondego>        while(true )<newline46mondego>        {<newline46mondego>            s = buf.readLine();<newline46mondego>            if(s==null || s.length()==0)<newline46mondego>                break;<newline46mondego>            sb.append(s);<newline46mondego><newline46mondego>        }<newline46mondego>        buf.close();<newline46mondego>        ips.close();<newline46mondego>        return sb.toString();<newline46mondego><newline46mondego> } <newline46mondego>"
"1698splitHere46","4361727splitHere46","int n = p.length-1;<newline46mondego>"
"1699splitHere46","4361727splitHere46","while (f < n) {<newline46mondego>"
"1700splitHere46","4361929splitHere46","char[ ] baz = (char[ ])bar.get(new StringBuilder( ));<newline46mondego>"
"1701splitHere46","4361929splitHere46","foo"
"1702splitHere46","4361939splitHere46","//SubActivity onCreate<newline46mondego>@Override<newline46mondego>protected void onCreate(Bundle savedInstanceState) {<newline46mondego>    super.onCreate(savedInstanceState);<newline46mondego>    setContentView(R.layout.main);<newline46mondego>    Button btn = (Button) findViewById(R.id.Button01);<newline46mondego>    btn.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego>            SharedPreferences prefs = getSharedPreferences(TestPreferenceActivity.PREFS_FILE, MODE_WORLD_READABLE);<newline46mondego>            prefs.edit().putString(<doubleQuotes46>mykey<doubleQuotes46>, <doubleQuotes46>someValue<doubleQuotes46>).commit();<newline46mondego>            finish();<newline46mondego>        }});<newline46mondego>}<newline46mondego><newline46mondego>//PreferenceActivity onResume<newline46mondego>@Override<newline46mondego>protected void onResume() {<newline46mondego>    Log.d(TAG, <doubleQuotes46>Preferences Resumed<doubleQuotes46>);<newline46mondego>    //Check for new Preference Values<newline46mondego>    SharedPreferences prefs = getSharedPreferences(PREFS_FILE, MODE_WORLD_READABLE);<newline46mondego>    String value = prefs.getString(<doubleQuotes46>mykey<doubleQuotes46>, <doubleQuotes46>defValue<doubleQuotes46>);<newline46mondego>    Log.d(TAG, <doubleQuotes46>Current value is: <doubleQuotes46> + value);<newline46mondego>    super.onResume();<newline46mondego>}<newline46mondego>"
"1703splitHere46","4361992splitHere46","FileWriter(file, true)"
"1704splitHere46","4361992splitHere46","Writer"
"1705splitHere46","4361992splitHere46","CharacterFile = new PrintWriter(new FileWriter(new File(CurrentLine[3])));<newline46mondego>"
"1706splitHere46","4362163splitHere46","@JsonAutoDetect"
"1707splitHere46","4362163splitHere46","@JsonProperty"
"1708splitHere46","4362312splitHere46","i"
"1709splitHere46","4362312splitHere46","Alien alien[i]"
"1710splitHere46","4362312splitHere46","setInfo()"
"1711splitHere46","4362312splitHere46","type1"
"1712splitHere46","4362312splitHere46","type"
"1713splitHere46","4362314splitHere46","<% java.util.Enumeration names = request.getParameterNames();<newline46mondego>    while(names.hasMoreElements()){<newline46mondego>        out.println(names.nextElement() + <doubleQuotes46><newline46mondego><doubleQuotes46>);<newline46mondego>    }<newline46mondego>    %><newline46mondego>"
"1714splitHere46","4362323splitHere46","public ContainerRequest filter(ContainerRequest req);<newline46mondego>"
"1715splitHere46","4362323splitHere46","<init-param><newline46mondego>  <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name><newline46mondego>  <param-value>path.to.filtering.class</param-value><newline46mondego></init-param><newline46mondego>"
"1716splitHere46","4362490splitHere46","jar tvf ..."
"1717splitHere46","4362516splitHere46","SimpleDateFormat#setLenient()"
"1718splitHere46","4362516splitHere46","false"
"1719splitHere46","4362516splitHere46","SimpleDateFormat df = new SimpleDateFormat(<doubleQuotes46>dd:MM:yyyy<doubleQuotes46>); <newline46mondego>df.setLenient(false);<newline46mondego>Date date = df.parse(dateRelease);<newline46mondego>"
"1720splitHere46","4362516splitHere46","ParseException"
"1721splitHere46","4362539splitHere46","import java.io.FileWriter;<newline46mondego>  import java.io.IOException;  <newline46mondego>  public class TestClass {<newline46mondego>      public static String newLine = System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>);<newline46mondego>      public static void main(String[] a) {<newline46mondego>        FileWriter writer;<newline46mondego>        try {<newline46mondego>          writer = new FileWriter(<doubleQuotes46>test.txt<doubleQuotes46>);<newline46mondego>          for(int i=0;i<3;i++){<newline46mondego>            writer.write(row+i+newLine);<newline46mondego>          }<newline46mondego>          writer.close();<newline46mondego>        } catch (IOException e) {<newline46mondego>          e.printStackTrace();<newline46mondego>        }<newline46mondego><newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"1722splitHere46","4362617splitHere46","B.a.foo()"
"1723splitHere46","4362617splitHere46","A a = b.a;<newline46mondego>a.foo();<newline46mondego>"
"1724splitHere46","4362617splitHere46","public void fooA(A aToFoo) { aToFoo.foo(); }<newline46mondego><newline46mondego>public void whatever(B someB) { fooA(someB.a); }<newline46mondego>"
"1725splitHere46","4362669splitHere46","<t:saveState>"
"1726splitHere46","4362669splitHere46","<t:saveState value=<doubleQuotes46>#{bean}<doubleQuotes46> /><newline46mondego>"
"1727splitHere46","4362907splitHere46","new File(<doubleQuotes46>/path/to/folder<doubleQuotes46>).listFiles().length<newline46mondego>"
"1728splitHere46","4363063splitHere46","NullPointerException"
"1729splitHere46","4363063splitHere46","integers"
"1730splitHere46","4363063splitHere46","integers.clear()"
"1731splitHere46","4363063splitHere46","NullPointerException"
"1732splitHere46","4363063splitHere46","integers = new ArrayList<Integer>();<newline46mondego>"
"1733splitHere46","4363063splitHere46","integers.clear();"
"1734splitHere46","4363140splitHere46","//declare a map to hold your characters and their counters<newline46mondego> Map<String,Integer> charCounter = new HashMap<String,Integer>();<newline46mondego> //the following if else logic goes when you are looping through your tokens<newline46mondego>    if(charCounter.containsKey(<your character>)){<newline46mondego>           charCounter.put(<your character>,charCounter.get(<your character>)+1);<newline46mondego>    }else{<newline46mondego>          charCounter.put(<your character>,1);<newline46mondego>    }<newline46mondego>"
"1735splitHere46","4363140splitHere46","for(String key : charCounter.keySet()) {<newline46mondego>            System.out.println(key+<doubleQuotes46> <doubleQuotes46>+charCounter.get(key));<newline46mondego>}<newline46mondego>"
"1736splitHere46","4363200splitHere46","new File(<doubleQuotes46>/path/to/file<doubleQuotes46>).length()"
"1737splitHere46","4363212splitHere46","new File(<doubleQuotes46>/path/to/file<doubleQuotes46>).lastModified()"
"1738splitHere46","4363254splitHere46","public class Config {<newline46mondego><newline46mondego>    private static final Properties PROPERTIES = new Properties();<newline46mondego><newline46mondego>    static {<newline46mondego>        try {<newline46mondego>            PROPERTIES.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>config.properties<doubleQuotes46>));<newline46mondego>        } catch (IOException e) {<newline46mondego>            throw new ExceptionInInitializerError(<doubleQuotes46>Loading config file failed.<doubleQuotes46>, e);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static String getProperty(String key) {<newline46mondego>        return PROPERTIES.getProperty(key);<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"1739splitHere46","4363284splitHere46","FileSystemView.getSystemIcon( File );<newline46mondego>"
"1740splitHere46","4363296splitHere46","<shared-cache-mode>NONE</shared-cache-mode>"
"1741splitHere46","4363389splitHere46","foreach (Phone phone : student.getStudentPhoneNumbers()) {<newline46mondego>    phone.setStudent(student);<newline46mondego>}<newline46mondego>"
"1742splitHere46","4363389splitHere46","public void addPhoneNumber(Phone phone) {<newline46mondego>    phone.setStudent(this);<newline46mondego>    getStudentPhoneNumbers().add(phone);<newline46mondego>}<newline46mondego>public void addPhoneNumber(String type, String number) {<newline46mondego>    addPhoneNumber(new Phone(type, number));<newline46mondego>}<newline46mondego>"
"1743splitHere46","4363389splitHere46","student.addPhoneNumber(<doubleQuotes46>home<doubleQuotes46>, <doubleQuotes46>12354<doubleQuotes46>)"
"1744splitHere46","4363724splitHere46","ch = char_array[i]; <newline46mondego>if(charCounter.containsKey(ch)){<newline46mondego>     charCounter.put(ch, charCounter.get(ch)+1);<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    charCounter.put(ch, 1);<newline46mondego>}<newline46mondego>"
"1745splitHere46","4363779splitHere46","ListView myList = (ListView)findViewById(R.id.myListView)<newline46mondego>"
"1746splitHere46","4363779splitHere46","Class myListActivity extends Activity{<newline46mondego>... some code here...<newline46mondego>public void onCreate(Bundle savedInstanceState){<newline46mondego>.....<newline46mondego>myList.setAdapter(new myCustomAdapter());<newline46mondego>.....<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego>*Custom Adapter class for the ListView containing data<newline46mondego>*/<newline46mondego>class myCustomAdapter extends BaseAdapter{<newline46mondego><newline46mondego>TextView userName;<newline46mondego>/**<newline46mondego> * returns the count of elements in the Array that is used to draw the text in rows <newline46mondego>   * @see android.widget.Adapter#getCount()<newline46mondego> */<newline46mondego>@Override<newline46mondego>public int getCount() {<newline46mondego>    //return the length of the data array, so that the List View knows how much rows it has to draw   <newline46mondego>return DataArr.length;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * @param position The position of the row that was clicked (0-n)<newline46mondego> * @see android.widget.Adapter#getItem(int)<newline46mondego>                     */<newline46mondego>@Override<newline46mondego>public String getItem(int position) {<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * @param position The position of the row that was clicked (0-n)<newline46mondego> * @see android.widget.Adapter#getItemId(int)<newline46mondego> */<newline46mondego>@Override<newline46mondego>public long getItemId(int position) {<newline46mondego>    return position;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Returns the complete row that the System draws.<newline46mondego> * It is called every time the System needs to draw a new row;<newline46mondego> * You can control the appearance of each row inside this function.<newline46mondego> * @param position The position of the row that was clicked (0-n)<newline46mondego> * @param convertView The View object of the row that was last created. null if its the first row<newline46mondego> * @param parent The ViewGroup object of the parent view<newline46mondego> * @see android.widget.Adapter#getView(int, android.view.View, android.view.ViewGroup)<newline46mondego> */<newline46mondego>@Override<newline46mondego>public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>    View row = convertView;<newline46mondego>    final int pos = position;<newline46mondego>    if(row == null){<newline46mondego>                    //getting custom layout to the row<newline46mondego>        LayoutInflater inflater=getLayoutInflater();<newline46mondego>        row=inflater.inflate(R.layout.list_row, parent, false);<newline46mondego>    }<newline46mondego>            //get the reference to the textview of your row. find the item with row.findViewById()<newline46mondego>    userName= (TextView)row.findViewById(R.id.user_name);<newline46mondego>    userName.setText(DataArr[position]);<newline46mondego>return row; //the row that ListView draws<newline46mondego>}<newline46mondego>}<newline46mondego>}<newline46mondego>"
"1747splitHere46","4363903splitHere46","List list = list.getAList();<newline46mondego>list.add(whatever);<newline46mondego>"
"1748splitHere46","4363903splitHere46","getAList()"
"1749splitHere46","4363903splitHere46","List"
"1750splitHere46","4363903splitHere46","add()"
"1751splitHere46","4363903splitHere46","if"
"1752splitHere46","4363903splitHere46","else"
"1753splitHere46","4363903splitHere46","divide-by-zero"
"1754splitHere46","4363903splitHere46","n/m"
"1755splitHere46","4363903splitHere46","m"
"1756splitHere46","4363903splitHere46","0"
"1757splitHere46","4363903splitHere46","ArithmeticException"
"1758splitHere46","4363903splitHere46","m"
"1759splitHere46","4363987splitHere46","class School {<newline46mondego>   private List<Student> students;<newline46mondego>}<newline46mondego>"
"1760splitHere46","4363987splitHere46","public boolean hasStudents() {<newline46mondego>    return students.size() > 0;<newline46mondego>}<newline46mondego>"
"1761splitHere46","4364308splitHere46","abstract class Command {<newline46mondego>    final public void execute(){<newline46mondego>          run();<newline46mondego>          onComplete();<newline46mondego>    }<newline46mondego>    protected abstract void run();<newline46mondego>    protected abstract void onComplete();<newline46mondego>}<newline46mondego>//usage<newline46mondego>abstract class HiCommand extends Command {<newline46mondego>    protected void run(){<newline46mondego>        System.out.println(<doubleQuotes46>Hi, <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    protected abstract void onComplete();<newline46mondego>}<newline46mondego><newline46mondego>new HiCommand(){<newline46mondego>    @Override<newline46mondego>    protected void onComplete() {<newline46mondego>        System.out.println(<doubleQuotes46>world<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}.execute();<newline46mondego>"
"1762splitHere46","4364308splitHere46","interface WhenDone{<newline46mondego>    void onComplete();<newline46mondego>}<newline46mondego><newline46mondego>abstract class Command {<newline46mondego>    private final WhenDone callback;<newline46mondego>    protected Command(WhenDone callback){<newline46mondego>        this.callback = callback;<newline46mondego>    }<newline46mondego>    final public void execute(){<newline46mondego>          run();<newline46mondego>          callback.onComplete();<newline46mondego>    }<newline46mondego>    protected abstract void run();<newline46mondego>}<newline46mondego>//usage<newline46mondego>class PrintHi extends Command {<newline46mondego>    protected PrintHi(WhenDone callback){<newline46mondego>        super(callback);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void run(){<newline46mondego>        System.out.println(<doubleQuotes46>Hi, <doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class PrintWorld implements WhenDone {<newline46mondego>    public void onComplete(){<newline46mondego>        System.out.println(<doubleQuotes46>world!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>//somewhere<newline46mondego>new PrintHi(new PrintWorld()).execute();<newline46mondego>"
"1763splitHere46","4364308splitHere46","CommandManager"
"1764splitHere46","4364400splitHere46","return (2*zweiHochPositiv(exponent--));<newline46mondego>"
"1765splitHere46","4364400splitHere46","return (2*zweiHochPositiv(exponent - 1));<newline46mondego>"
"1766splitHere46","4364400splitHere46","exponent--"
"1767splitHere46","4364400splitHere46","exponent"
"1768splitHere46","4364400splitHere46","zweiHochPositiv(1)"
"1769splitHere46","4364400splitHere46","zweiHochPositiv(1)"
"1770splitHere46","4364473splitHere46","EventList list = (EventList)PIM.getInstance().openPIMList(PIM.EVENT_LIST, PIM.READ_WRITE);<newline46mondego>"
"1771splitHere46","4364473splitHere46","items(int searchType, long startDate, long endDate, boolean initialEventOnly)"
"1772splitHere46","4364473splitHere46","for(Enumeration e = list.items(EventList.STARTING, startDate, endDate, false); e.hasMoreElements; ) {<newline46mondego>    Event event = (Event)e.nextElement();<newline46mondego>    if (sholdBeChanged()) {<newline46mondego>        Event event2 = list.createEvent();<newline46mondego>        // initialize fields of event2. Probably copy them from event<newline46mondego>        list.removeEvent(event);<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1773splitHere46","4364683splitHere46","<mvc:annotation-driven/><newline46mondego><mvc:interceptors><newline46mondego>    <bean id=<doubleQuotes46>webContentInterceptor<doubleQuotes46> <newline46mondego>          class=<doubleQuotes46>org.springframework.web.servlet.mvc.WebContentInterceptor<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>cacheSeconds<doubleQuotes46> value=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>        <property name=<doubleQuotes46>useExpiresHeader<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <property name=<doubleQuotes46>useCacheControlHeader<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>        <property name=<doubleQuotes46>useCacheControlNoStore<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>    </bean><newline46mondego></mvc:interceptors><newline46mondego>"
"1774splitHere46","4364683splitHere46","@ResponseBody"
"1775splitHere46","4364683splitHere46","@ResponseStatus"
"1776splitHere46","4364684splitHere46","}else if(exponent < 0){<newline46mondego>         return ((1/(basis*hoch(basis, exponent+1))))<newline46mondego>"
"1777splitHere46","4364684splitHere46","}else if(exponent < 0){<newline46mondego>        return (1/hoch(basis, -exponent));<newline46mondego>"
"1778splitHere46","4364797splitHere46","//@ ensures size_ == null ==> \result == true;<newline46mondego>"
"1779splitHere46","4364797splitHere46","//@ ensures size_ == null ==> \result == true;<newline46mondego>public boolean sizeUndefined() {<newline46mondego>    if (size_ == null)<newline46mondego>        return true;<newline46mondego><newline46mondego>    return size_.length() > 0;<newline46mondego>}<newline46mondego>"
"1780splitHere46","4364797splitHere46","//@ ensures size_ == null ==> \result;<newline46mondego>"
"1781splitHere46","4364797splitHere46","\result"
"1782splitHere46","4364797splitHere46","\result"
"1783splitHere46","4364837splitHere46","FileInputStream"
"1784splitHere46","4364837splitHere46","NullPointerException"
"1785splitHere46","4364837splitHere46","File"
"1786splitHere46","4364837splitHere46","null"
"1787splitHere46","4365001splitHere46","public class AnnotationContextFactory implements FactoryBean<ApplicationContext> {<newline46mondego><newline46mondego>private String[] packages;<newline46mondego>private ApplicationContext parent;<newline46mondego><newline46mondego>@Override<newline46mondego>public ApplicationContext getObject() throws Exception {<newline46mondego>    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();<newline46mondego>    context.setParent(parent);<newline46mondego>    context.scan(packages);<newline46mondego>    context.refresh();<newline46mondego>    return context;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public Class<ApplicationContext> getObjectType() {<newline46mondego>    return ApplicationContext.class;<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public boolean isSingleton() {<newline46mondego>    return true;<newline46mondego>}<newline46mondego><newline46mondego>public void setPackages(String... args) {<newline46mondego>    this.packages = args;<newline46mondego>}<newline46mondego><newline46mondego>public void setParent(ApplicationContext parent) {<newline46mondego>    this.parent = parent;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1788splitHere46","4365001splitHere46","<bean id=<doubleQuotes46>moduleB_ApplicationContext<doubleQuotes46> class=<doubleQuotes46>za.co.test2.AnnotationContextFactory<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>parent<doubleQuotes46> ref=<doubleQuotes46>moduleA_ApplicationContext<doubleQuotes46> /><newline46mondego>    <property name=<doubleQuotes46>packages<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <value>za.co.test2</value><newline46mondego>        </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"1789splitHere46","4365006splitHere46","TEXT"
"1790splitHere46","4365006splitHere46","VARCHAR"
"1791splitHere46","4365006splitHere46","TEXT"
"1792splitHere46","4365039splitHere46","[+-]?(?:\d*\.\d+|\d+)<newline46mondego>"
"1793splitHere46","4365039splitHere46","[+-]?     # optional sign<newline46mondego>(?:       # either<newline46mondego> \d*\.\d+ # float with optional integer part<newline46mondego> |        # or<newline46mondego> \d+      # just integer<newline46mondego>)<newline46mondego>"
"1794splitHere46","4365039splitHere46","Pattern regex = Pattern.compile(<doubleQuotes46>[+-]?(?:\\d*\\.\\d+|\\d+)<doubleQuotes46>);<newline46mondego>Matcher regexMatcher = regex.matcher(subjectString);<newline46mondego>while (regexMatcher.find()) {<newline46mondego>    // matched text: regexMatcher.group()<newline46mondego>    // match start: regexMatcher.start()<newline46mondego>    // match end: regexMatcher.end()<newline46mondego>} <newline46mondego>"
"1795splitHere46","4365119splitHere46","JCheckBox b = new JCheckBox();<newline46mondego>    b.setPressedIcon(pressedIcon)<newline46mondego>    b.setIcon(defaultIcon);<newline46mondego>    b.setDisabledIcon(disabledIcon)<newline46mondego>"
"1796splitHere46","4365201splitHere46","split(<doubleQuotes46>\\s+<doubleQuotes46>)"
"1797splitHere46","4365216splitHere46","@Retention(RetentionPolicy.RUNTIME)<newline46mondego>  @Target(value = ElementType.TYPE)<newline46mondego>  public static @interface Line {<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  @Retention(RetentionPolicy.RUNTIME)<newline46mondego>  @Target(value = ElementType.FIELD)<newline46mondego>  public static @interface Cell {<newline46mondego><newline46mondego>  }<newline46mondego>"
"1798splitHere46","4365216splitHere46","isAnnotationPresent(annotationClass)"
"1799splitHere46","4365216splitHere46","java.lang.Class"
"1800splitHere46","4365216splitHere46","class.getDeclaredField(fieldName)"
"1801splitHere46","4365216splitHere46","3."
"1802splitHere46","4365216splitHere46","String name() default DEFAULT"
"1803splitHere46","4365216splitHere46","name()"
"1804splitHere46","4365216splitHere46","propertyName"
"1805splitHere46","4365300splitHere46","qemsg.obj = mySpanned;<newline46mondego>"
"1806splitHere46","4365407splitHere46","ActionEvent nev = new ActionEvent(fileTable, ActionEvent.ACTION_PERFORMED, <doubleQuotes46>copy<doubleQuotes46>);<newline46mondego>fileTable.selectAll();<newline46mondego>fileTable.getActionMap().get(nev.getActionCommand()).actionPerformed(nev);<newline46mondego>"
"1807splitHere46","4365407splitHere46","selectAll()"
"1808splitHere46","4365417splitHere46","try-finally"
"1809splitHere46","4365417splitHere46","finally"
"1810splitHere46","4365417splitHere46","IOUtils.closeConnection()"
"1811splitHere46","4365619splitHere46","android:configChanges=<doubleQuotes46>orientation|keyboardHidden<doubleQuotes46><newline46mondego>"
"1812splitHere46","4365619splitHere46","android:configChanges=<doubleQuotes46>orientation|keyboardHidden|screenSize<doubleQuotes46><newline46mondego>"
"1813splitHere46","4365619splitHere46","@Override<newline46mondego>public void onConfigurationChanged(Configuration newConfig) {<newline46mondego>    super.onConfigurationChanged(newConfig);<newline46mondego><newline46mondego>    // Checks the orientation of the screen<newline46mondego>    if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) {<newline46mondego>        Toast.makeText(this, <doubleQuotes46>landscape<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>    } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT){<newline46mondego>        Toast.makeText(this, <doubleQuotes46>portrait<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>    }<newline46mondego>    // Checks whether a hardware keyboard is available<newline46mondego>    if (newConfig.hardKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_NO) {<newline46mondego>        Toast.makeText(this, <doubleQuotes46>keyboard visible<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>    } else if (newConfig.hardKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_YES) {<newline46mondego>        Toast.makeText(this, <doubleQuotes46>keyboard hidden<doubleQuotes46>, Toast.LENGTH_SHORT).show();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1814splitHere46","4365648splitHere46","List<String> ls = new ArrayList<String>();<newline46mondego>ls.add(<doubleQuotes46>aaa<doubleQuotes46>);<newline46mondego>ls.add(<doubleQuotes46>bbbbb<doubleQuotes46>);<newline46mondego><newline46mondego>FileUtils.writeLines(new File(<doubleQuotes46>newfile.txt<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>, ls);   // same effect as with <doubleQuotes46>null<doubleQuotes46> as encoding<newline46mondego>"
"1815splitHere46","4365648splitHere46","newFile.txt"
"1816splitHere46","4365648splitHere46","od -a newfile.txt"
"1817splitHere46","4365648splitHere46","0000000   a   a   a  cr  nl   b   b   b   b   b  cr  nl<newline46mondego>0000014<newline46mondego>"
"1818splitHere46","4365668splitHere46","instanceof"
"1819splitHere46","4365848splitHere46","java -classpath <doubleQuotes46>xSocket.jar;.;ChatDemo.jar ChatDemo"
"1820splitHere46","4365848splitHere46",".jar"
"1821splitHere46","4365848splitHere46","gnu\getopt"
"1822splitHere46","4365870splitHere46","StringBuilder"
"1823splitHere46","4365987splitHere46","WIN32_FIND_DATA findData;<newline46mondego>HANDLE findFile;<newline46mondego>findFile = FindFirstFile (path, &findData);<newline46mondego>FindNextFile (findFile, &findData);<newline46mondego>"
"1824splitHere46","4365987splitHere46","wpath ourPath(pDirectory);<newline46mondego>wdirectory_iterator endIter;<newline46mondego>for (wdirectory_iterator iter(ourPath); iter != endIter; ++iter)<newline46mondego>{<newline46mondego> pContents.push_back(iter->leaf());<newline46mondego>}<newline46mondego>"
"1825splitHere46","4366076splitHere46","DPFPSamle.serialize()"
"1826splitHere46","4366076splitHere46","DPFPSamle"
"1827splitHere46","4366076splitHere46","writeObject(dPFPSample)"
"1828splitHere46","4366076splitHere46","DPFPSample"
"1829splitHere46","4366076splitHere46","java.io.Serializable"
"1830splitHere46","4366086splitHere46","javax.Servlet.ServletContextListener"
"1831splitHere46","4366086splitHere46","web.xml"
"1832splitHere46","4366086splitHere46","contextInitialized"
"1833splitHere46","4366086splitHere46","contextDestroyed"
"1834splitHere46","4366203splitHere46","<$n>"
"1835splitHere46","4366203splitHere46","{10,4}"
"1836splitHere46","4366394splitHere46","iterate(String)"
"1837splitHere46","4366394splitHere46","class PetStore {<newline46mondego>  <T extends Pet> PetIterator<T> iterate(Class<T> clazz);<newline46mondego>}<newline46mondego>"
"1838splitHere46","4366394splitHere46","PetIterator<Dog> dogs = petstore.iterate (Dog.class);<newline46mondego>// ...<newline46mondego>Dog dog = dogs.next();<newline46mondego>"
"1839splitHere46","4366411splitHere46","oauthParameters= new GoogleOAuthParameters ();<newline46mondego>  oauthParameters.setOAuthConsumerKey (CONSUMER_KEY);<newline46mondego>  oauthParameters.setOAuthConsumerSecret (CONSUMER_SECRET);<newline46mondego>  oauthParameters.setOAuthType (OAuthType.TWO_LEGGED_OAUTH);<newline46mondego>  oauthParameters.setScope (<doubleQuotes46>https://spreadsheets.google.com/feeds/<doubleQuotes46>);<newline46mondego><newline46mondego>  SpreadsheetService spreadsheetService= new SpreadsheetService (<doubleQuotes46>appname<doubleQuotes46>);<newline46mondego>  spreadsheetService.useSsl ();<newline46mondego>  spreadsheetService.setOAuthCredentials (oauthParameters,<newline46mondego>    new OAuthHmacSha1Signer ());<newline46mondego><newline46mondego>  URL feedUrl= new URL (<newline46mondego>    <doubleQuotes46>https://spreadsheets.google.com<doubleQuotes46><newline46mondego>      + <doubleQuotes46>/feeds/spreadsheets/private/full?title=Spreadsheetname&xoauth_requestor_id=<doubleQuotes46><newline46mondego>      + userEmail);<newline46mondego><newline46mondego>  SpreadsheetFeed resultFeed= spreadsheetService.getFeed (feedUrl,<newline46mondego>    SpreadsheetFeed.class);<newline46mondego><newline46mondego>  List <SpreadsheetEntry> spreadsheets= resultFeed.getEntries ();<newline46mondego>  SpreadsheetEntry spreadsheetEntry= spreadsheets.get (0);<newline46mondego><newline46mondego>  URL worksheetFeedUrl= spreadsheetEntry.getWorksheetFeedUrl ();<newline46mondego>  log.severe (worksheetFeedUrl.toString ());<newline46mondego>  WorksheetFeed worksheetFeed= spreadsheetService.getFeed (<newline46mondego>    worksheetFeedUrl, WorksheetFeed.class);<newline46mondego><newline46mondego>  List <WorksheetEntry> worksheetEntrys= worksheetFeed.getEntries ();<newline46mondego>  WorksheetEntry worksheetEntry= worksheetEntrys.get (0);<newline46mondego><newline46mondego>  // Write header line into Spreadsheet<newline46mondego>  URL cellFeedUrl= worksheetEntry.getCellFeedUrl ();<newline46mondego>  CellFeed cellFeed= spreadsheetService.getFeed (cellFeedUrl,<newline46mondego>    CellFeed.class);<newline46mondego><newline46mondego>  CellEntry cellEntry= new CellEntry (1, 1, <doubleQuotes46>headline1<doubleQuotes46>);<newline46mondego>  cellFeed.insert (cellEntry);<newline46mondego>  cellEntry= new CellEntry (1, 2, <doubleQuotes46>headline2<doubleQuotes46>);<newline46mondego>  cellFeed.insert (cellEntry);<newline46mondego>"
"1840splitHere46","4366460splitHere46","?"
"1841splitHere46","4366460splitHere46","\\d"
"1842splitHere46","4366872splitHere46","@Fetch(FetchMode.JOIN)"
"1843splitHere46","4366872splitHere46","select distinct pb from ProductBid pb left join fetch pb.rejection pbr where pbr is null and pb.product = :product order by pb.amount desc"
"1844splitHere46","4367107splitHere46","com.digitalpersona.onetouch.jni.FeatureExtractionLibrary"
"1845splitHere46","4367107splitHere46","otfxjni"
"1846splitHere46","4367107splitHere46","-Djava.library.path=<path to otfxjni file>"
"1847splitHere46","4367185splitHere46","sun.java2d.SunGraphics2D"
"1848splitHere46","4367185splitHere46","sourceGraphics2D"
"1849splitHere46","4367185splitHere46","Graphics2D"
"1850splitHere46","4367185splitHere46","Graphics2D"
"1851splitHere46","4367185splitHere46","BufferedImage"
"1852splitHere46","4367185splitHere46","paintComponent"
"1853splitHere46","4367185splitHere46","Graphics2D"
"1854splitHere46","4367185splitHere46","Graphics2D"
"1855splitHere46","4367356splitHere46","import java.util.Scanner;<newline46mondego>public class Palindromes<newline46mondego>{<newline46mondego><newline46mondego>    public static boolean isPal(String s)<newline46mondego>    {<newline46mondego>        if(s.length() == 0 || s.length() == 1)<newline46mondego>            // if length =0 OR 1 then it is<newline46mondego>            return true; <newline46mondego>        if(s.charAt(0) == s.charAt(s.length()-1))<newline46mondego>            // check for first and last char of String:<newline46mondego>            // if they are same then do the same thing for a substring<newline46mondego>            // with first and last char removed. and carry on this<newline46mondego>            // until you string completes or condition fails<newline46mondego>            return isPal(s.substring(1, s.length()-1));<newline46mondego><newline46mondego>        // if its not the case than string is not.<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[]args)<newline46mondego>    {<newline46mondego>        Scanner sc = new Scanner(System.in);<newline46mondego>        System.out.println(<doubleQuotes46>type a word to check if its a palindrome or not<doubleQuotes46>);<newline46mondego>        String x = sc.nextLine();<newline46mondego>        if(isPal(x))<newline46mondego>            System.out.println(x + <doubleQuotes46> is a palindrome<doubleQuotes46>);<newline46mondego>        else<newline46mondego>            System.out.println(x + <doubleQuotes46> is not a palindrome<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1856splitHere46","4367443splitHere46","write"
"1857splitHere46","4367445splitHere46","rtfWriter.importRtfDocument(new FileReader(<doubleQuotes46>testfile_in.rtf<doubleQuotes46>)); <newline46mondego>"
"1858splitHere46","4367445splitHere46","RtfWriter2 rtfWriter = RtfWriter2.getInstance(<newline46mondego>    document, new FileOutputStream(<doubleQuotes46>out_file.rtf<doubleQuotes46>)<newline46mondego>); <newline46mondego>document.open(); <newline46mondego>rtfWriter.importRtfDocument(new FileInputStream(<doubleQuotes46>in_file.rtf<doubleQuotes46>), null); <newline46mondego>document.close();<newline46mondego>"
"1859splitHere46","4367602splitHere46","HashMap(int initialCapacity, float loadFactor)"
"1860splitHere46","4367602splitHere46","Hashtable"
"1861splitHere46","4367602splitHere46","0.75"
"1862splitHere46","4367630splitHere46","Reader reader = new InputStreamReader(inputStream);<newline46mondego>"
"1863splitHere46","4367688splitHere46","import javax.swing.*;<newline46mondego>import javax.swing.text.html.parser.ParserDelegator;<newline46mondego><newline46mondego>public class HelloWorldApplet extends JApplet {<newline46mondego>    public void init() {<newline46mondego>       ParserDelegator workaround = new ParserDelegator();<newline46mondego>       applet.add(new JLabel(<doubleQuotes46>Hello Everybody (Text)<doubleQuotes46>), java.awt.BorderLayout.NORTH);<newline46mondego>       applet.add(new JLabel(<doubleQuotes46><html>Hello Everybody (HTML)</html><doubleQuotes46>),  java.awt.BorderLayout.SOUTH);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1864splitHere46","4368171splitHere46","import foo.bar.myClass;<newline46mondego><newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>myClass ob; // this  will refer to foo.bar.myClass <newline46mondego>foo.myClass ob1 ;//this  will refer to foo.myClass<newline46mondego>"
"1865splitHere46","4368291splitHere46","EditText ipIn = (EditText)findViewById(R.id.wifi_ip_in);<newline46mondego>"
"1866splitHere46","4368291splitHere46","EditText ipIn = (EditText)dialogLayout.findViewById(R.id.wifi_ip_in);<newline46mondego>"
"1867splitHere46","4368587splitHere46","server.xml"
"1868splitHere46","4368587splitHere46","web.xml"
"1869splitHere46","4368587splitHere46","<doubleQuotes46>bad version number<doubleQuotes46>"
"1870splitHere46","4368622splitHere46",".close()"
"1871splitHere46","4368672splitHere46","Map<Integer, Integer[]> map = createLRUMap(128);<newline46mondego><newline46mondego>public static <K, V> Map<K, V> createLRUMap(final int maxSize) {<newline46mondego>    return new LinkedHashMap<K,V>(maxSize, 1, true) {<newline46mondego>        @Override<newline46mondego>        protected boolean removeEldestEntry(Map.Entry<K,V> eldest) {<newline46mondego>            return size() > maxSize;<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"1872splitHere46","4369118splitHere46","getValueIsAdjusting()"
"1873splitHere46","4369118splitHere46","class AngleSlider implements ChangeListener {<newline46mondego>    public void stateChanged(ChangeEvent e) {<newline46mondego>        JSlider source = (JSlider) e.getSource();<newline46mondego><newline46mondego>        double dAngle = (double)source.getValue();<newline46mondego>        pnlCannon.dCannonAngle=Math.toRadians(dAngle);<newline46mondego>        pnlCannon.repaint();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1874splitHere46","4369118splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego><newline46mondego>    JSlider slider = new JSlider();<newline46mondego><newline46mondego>    slider.addChangeListener(new ChangeListener() {<newline46mondego>        @Override<newline46mondego>        public void stateChanged(ChangeEvent ce) {<newline46mondego>            System.out.println(((JSlider) ce.getSource()).getValue());<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    frame.add(slider);<newline46mondego><newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(400, 300);<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"1875splitHere46","4369158splitHere46","addTeacher()"
"1876splitHere46","4369158splitHere46","Teacher"
"1877splitHere46","4369158splitHere46","person"
"1878splitHere46","4369158splitHere46","Person"
"1879splitHere46","4369158splitHere46","teacherList"
"1880splitHere46","4369158splitHere46","Person"
"1881splitHere46","4369158splitHere46","em.find()"
"1882splitHere46","4369158splitHere46","Person"
"1883splitHere46","4369158splitHere46","teacherList"
"1884splitHere46","4369158splitHere46","Teacher"
"1885splitHere46","4369158splitHere46","Person.teacherList"
"1886splitHere46","4369158splitHere46","addTeacher()"
"1887splitHere46","4369240splitHere46","while ((line = reader.readLine()) != null) {<newline46mondego>    insert(line);<newline46mondego>}<newline46mondego>"
"1888splitHere46","4369240splitHere46","PreparedStatement#addBatch()"
"1889splitHere46","4369240splitHere46","#executeBatch()"
"1890splitHere46","4369477splitHere46","public enum MessageType {  <newline46mondego>"
"1891splitHere46","4369477splitHere46","NEW_USER(<doubleQuotes46>String 123<doubleQuotes46>, <doubleQuotes46>A new user was created<doubleQuotes46>);"
"1892splitHere46","4369477splitHere46","private String code, message;"
"1893splitHere46","4369477splitHere46","private MessageType(String code, String message) {"
"1894splitHere46","4369477splitHere46","this.code = code;<newline46mondego><newline46mondego>this.message = message"
"1895splitHere46","4369477splitHere46","}"
"1896splitHere46","4369583splitHere46","java.lang.NullPointerException"
"1897splitHere46","4369583splitHere46","package test;<newline46mondego><newline46mondego><newline46mondego>import org.eclipse.swt.SWT;<newline46mondego>import org.eclipse.swt.layout.GridData;<newline46mondego>import org.eclipse.swt.layout.GridLayout;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Label;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego><newline46mondego>public class GUIThread implements Runnable <newline46mondego>{<newline46mondego>    private Display display;<newline46mondego>    private Label label;<newline46mondego>    public Display getDisplay(){<newline46mondego>        return display;<newline46mondego>    }<newline46mondego>    public void run() <newline46mondego>    {<newline46mondego>        display = new Display();<newline46mondego>        Shell shell = new Shell(display);<newline46mondego>        shell.setLayout(new GridLayout());<newline46mondego>        shell.setLayoutData(new GridData(SWT.FILL,SWT.FILL,true,false));<newline46mondego>        label = new Label(shell,SWT.NONE);<newline46mondego>        label.setText(<doubleQuotes46> -- <doubleQuotes46>);<newline46mondego>        shell.open();<newline46mondego>        shell.pack();<newline46mondego><newline46mondego>        while (!shell.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch ()) display.sleep ();<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego><newline46mondego>    public synchronized void update(final int value)<newline46mondego>    {<newline46mondego>        if (display == null || display.isDisposed()) <newline46mondego>            return;<newline46mondego>        display.asyncExec(new Runnable() {<newline46mondego><newline46mondego>            public void run() {<newline46mondego>                label.setText(<doubleQuotes46><doubleQuotes46>+value);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1898splitHere46","4369583splitHere46","package test;<newline46mondego><newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego><newline46mondego>public class Main <newline46mondego>{<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception<newline46mondego>    {<newline46mondego>        final GUIThread gui = new GUIThread();<newline46mondego>        Thread t = new Thread(gui);<newline46mondego>        t.start();<newline46mondego><newline46mondego>        Thread.sleep(3000); // POINT OF FOCUS<newline46mondego>        Display d = gui.getDisplay();<newline46mondego><newline46mondego>        for(int i = 0; i<100; i++)<newline46mondego>        {           <newline46mondego>            System.out.println(i + <doubleQuotes46>  <doubleQuotes46> + d);<newline46mondego>            gui.update(i);  <newline46mondego>            Thread.sleep(500);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1899splitHere46","4369583splitHere46","POINT OF FOCUS"
"1900splitHere46","4369583splitHere46","NullPointerException"
"1901splitHere46","4369583splitHere46","NullPointerException"
"1902splitHere46","4369583splitHere46","wait"
"1903splitHere46","4369583splitHere46","yield"
"1904splitHere46","4369583splitHere46","port"
"1905splitHere46","4369583splitHere46","asynchronously"
"1906splitHere46","4369634splitHere46","private static int[][] matrix = new int[5][5];<newline46mondego><newline46mondego>//set index 1, 2 to 5<newline46mondego>matrix[1][2] = 5;<newline46mondego>"
"1907splitHere46","4369635splitHere46","<result name=<doubleQuotes46>resultName<doubleQuotes46>></result><newline46mondego>"
"1908splitHere46","4369635splitHere46","this.message = <doubleQuotes46>my message<doubleQuotes46>;<newline46mondego>"
"1909splitHere46","4369635splitHere46","$.ajax({<newline46mondego>    url: '/yourAjaxUrl',<newline46mondego>    success: function(data) {<newline46mondego>       var message = data.message;<newline46mondego>       alert('The message is '+message);<newline46mondego>       $('#my_result').html(message);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1910splitHere46","4369635splitHere46","<result-types><newline46mondego>    <result-type name=<doubleQuotes46>json<doubleQuotes46> class=<doubleQuotes46>com.googlecode.jsonplugin.JSONResult<doubleQuotes46>><newline46mondego>    ...<newline46mondego></result-types><newline46mondego>"
"1911splitHere46","4369706splitHere46","ojbc14"
"1912splitHere46","4369706splitHere46","ojbc14"
"1913splitHere46","4369706splitHere46","ojbc14"
"1914splitHere46","4369787splitHere46","final Uri uri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;<newline46mondego>        final String[] cursor_cols = {<newline46mondego>                MediaStore.Audio.Media._ID,<newline46mondego>                MediaStore.Audio.Media.ARTIST,<newline46mondego>                MediaStore.Audio.Media.ALBUM,<newline46mondego>                MediaStore.Audio.Media.TITLE,<newline46mondego>        };<newline46mondego>        final String where = MediaStore.Audio.Media.IS_MUSIC + <doubleQuotes46>=1<doubleQuotes46>;<newline46mondego>        final Cursor cursor = getContentResolver().query(uri, cursor_cols, where, null, null);<newline46mondego>        cursor.moveToNext();<newline46mondego>        final String artist = cursor.getString(_cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.ARTIST));<newline46mondego>        final String album = cursor.getString(_cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.ALBUM));<newline46mondego>        final String track = cursor.getString(_cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.TITLE));<newline46mondego>        doSomethingInteresting(artist, album, track);<newline46mondego>"
"1915splitHere46","4369840splitHere46","11. public static void test(String str) { <newline46mondego>12. if(str == null | str.length() == 0) { <newline46mondego>13. System.out.println(<doubleQuotes46>String is empty<doubleQuotes46>); <newline46mondego>14. } else { <newline46mondego>15. System.out.println(<doubleQuotes46>String is not empty<doubleQuotes46>); <newline46mondego>16. } <newline46mondego>17. }   <newline46mondego>"
"1916splitHere46","4369840splitHere46","31. test(null);   <newline46mondego>"
"1917splitHere46","4369840splitHere46","NullPointerException"
"1918splitHere46","4369840splitHere46","str"
"1919splitHere46","4369840splitHere46","null"
"1920splitHere46","4369840splitHere46","length()"
"1921splitHere46","4369840splitHere46","null"
"1922splitHere46","4369841splitHere46","ObjectMapper mapper = new ObjectMapper();<newline46mondego>  // to store:<newline46mondego>  byte[] data = mapper.writeValueAsBytes(myMap);<newline46mondego>  // and when retrieving back:<newline46mondego>  Map<String,Object> data = mapper.readValue(data, Map.class);<newline46mondego>"
"1923splitHere46","4370000splitHere46","X*(Y*(Z*v)))"
"1924splitHere46","4370000splitHere46","(X*Y*Z)*v"
"1925splitHere46","4370000splitHere46","R=X*Y*Z"
"1926splitHere46","4370008splitHere46","<web-app>"
"1927splitHere46","4370008splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46>?><newline46mondego><web-app xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>     xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46><newline46mondego>     xmlns:web=<doubleQuotes46>http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46><newline46mondego>     xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46><newline46mondego>     id=<doubleQuotes46>WebApp_ID<doubleQuotes46> version=<doubleQuotes46>2.5<doubleQuotes46>><newline46mondego>    <!-- The rest of your web.xml content --><newline46mondego></web-app><newline46mondego>"
"1928splitHere46","4370030splitHere46","session.flush()"
"1929splitHere46","4370111splitHere46","URL.openStream();"
"1930splitHere46","4370111splitHere46","System.out"
"1931splitHere46","4370111splitHere46","FileOutputStream fos = new FileOutputStreamm(new File(<doubleQuotes46>path_to_file.mp3<doubleQuotes46>);<newline46mondego>int byte;<newline46mondego><newline46mondego>while ((byte= in.readLine()) != -1)<newline46mondego>    fos.write(byte);<newline46mondego>"
"1932splitHere46","4370111splitHere46","Servlet"
"1933splitHere46","4370111splitHere46","WAR"
"1934splitHere46","4370130splitHere46","public class ArrayList<E><newline46mondego>extends AbstractList<E><newline46mondego>implements List<E>, RandomAccess, Cloneable, Serializable<newline46mondego>"
"1935splitHere46","4370130splitHere46","class ArrayList<E>"
"1936splitHere46","4370253splitHere46","12^12 = 8.91610045E12"
"1937splitHere46","4370253splitHere46","1,2,3,..,12"
"1938splitHere46","4370253splitHere46","12!= 479 001 600"
"1939splitHere46","4370253splitHere46","import java.util.Arrays;<newline46mondego><newline46mondego>public class Graph26 {<newline46mondego>    private static final int A = 0;<newline46mondego>    private static final int B = 1;<newline46mondego>    private static final int C = 2;<newline46mondego>    private static final int D = 3;<newline46mondego>    private static final int E = 4;<newline46mondego>    private static final int F = 5;<newline46mondego>    private static final int G = 6;<newline46mondego>    private static final int H = 7;<newline46mondego>    private static final int I = 8;<newline46mondego>    private static final int J = 9;<newline46mondego>    private static final int K = 10;<newline46mondego>    private static final int L = 11;<newline46mondego><newline46mondego>    private final static boolean rule1(final int[] n) {<newline46mondego>        return n[A] + n[C] + n[F] + n[H] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean rule2(final int[] n) {<newline46mondego>        return n[A] + n[D] + n[G] + n[K] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean rule3(final int[] n) {<newline46mondego>        return n[H] + n[I] + n[J] + n[K] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean rule4(final int[] n) {<newline46mondego>        return n[B] + n[C] + n[D] + n[E] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean rule5(final int[] n) {<newline46mondego>        return n[B] + n[F] + n[I] + n[L] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean rule6(final int[] n) {<newline46mondego>        return n[E] + n[G] + n[J] + n[L] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean rule7(final int[] n) {<newline46mondego>        return n[A] + n[B] + n[E] + n[H] + n[K] + n[L] == 26;<newline46mondego>    }<newline46mondego><newline46mondego>    private final static boolean isValid(final int[] nodes) {<newline46mondego>        return rule1(nodes) && rule2(nodes) && rule3(nodes) && rule4(nodes)<newline46mondego>                && rule5(nodes) && rule6(nodes) && rule7(nodes);<newline46mondego>    }<newline46mondego><newline46mondego>    class Permutation {<newline46mondego>        private final int[] o;<newline46mondego>        private boolean perms = true;<newline46mondego><newline46mondego>        public boolean hasPerms() {<newline46mondego>            return perms;<newline46mondego>        }<newline46mondego><newline46mondego>        Permutation(final int[] obj) {<newline46mondego>            o = obj.clone();<newline46mondego>        }<newline46mondego><newline46mondego>        private int[] nextPerm() {<newline46mondego>            int temp;<newline46mondego>            int j = o.length - 2;<newline46mondego>            while (o[j] > o[j + 1]) {<newline46mondego>            j--;<newline46mondego>            if (j < 0) {<newline46mondego>            perms = false;<newline46mondego>            break;<newline46mondego>            }<newline46mondego>            }<newline46mondego>            if (perms) {<newline46mondego>            int k = o.length - 1;<newline46mondego>            while (o[j] > o[k]) {<newline46mondego>            k--;<newline46mondego>            }<newline46mondego>            temp = o[k];<newline46mondego>            o[k] = o[j];<newline46mondego>            o[j] = temp;<newline46mondego>            int r = o.length - 1;<newline46mondego>            int s = j + 1;<newline46mondego>            while (r > s) {<newline46mondego>            temp = o[s];<newline46mondego>            o[s] = o[r];<newline46mondego>            o[r] = temp;<newline46mondego>            r--;<newline46mondego>            s++;<newline46mondego>            }<newline46mondego>            }<newline46mondego>            return o.clone();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(final String[] args) {<newline46mondego>        int[] nodes = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };<newline46mondego>        final Graph26 graph = new Graph26();<newline46mondego>        final Permutation p = graph.new Permutation(nodes);<newline46mondego>        int i = 0;<newline46mondego>        while (p.hasPerms()) {<newline46mondego>        if (isValid(nodes)) {<newline46mondego>        System.out.println(Arrays.toString(nodes));<newline46mondego>        }<newline46mondego>        i++;<newline46mondego>        nodes = p.nextPerm();<newline46mondego>        }<newline46mondego>        System.out.println(i);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1940splitHere46","4370299splitHere46","setPreferredSize()"
"1941splitHere46","4370299splitHere46","getPreferredSize()"
"1942splitHere46","4370299splitHere46","main()"
"1943splitHere46","4370299splitHere46","JFrame"
"1944splitHere46","4370299splitHere46","BorderLayout"
"1945splitHere46","4370299splitHere46","public class WelcomeWindow extends JFrame {<newline46mondego><newline46mondego>    private ToolPanel top = new ToolPanel(<doubleQuotes46>/guiresources/BgTop.png<doubleQuotes46>);<newline46mondego>    private PaperPanel middle = new PaperPanel(<doubleQuotes46>/guiresources/BgPaper.png<doubleQuotes46>);<newline46mondego>    private ToolPanel bottom = new ToolPanel(<doubleQuotes46>/guiresources/BgBottom.png<doubleQuotes46>);<newline46mondego><newline46mondego>    public WelcomeWindow() throws IOException {<newline46mondego>        initComponents();<newline46mondego>    }<newline46mondego><newline46mondego>    private void initComponents() throws IOException {<newline46mondego>        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        this.setUndecorated(true);<newline46mondego><newline46mondego>        middle.setPreferredSize(new Dimension(640, 480));<newline46mondego>        this.add(top, BorderLayout.NORTH);<newline46mondego>        this.add(middle, BorderLayout.CENTER);<newline46mondego>        this.add(bottom, BorderLayout.SOUTH);<newline46mondego><newline46mondego>        MouseHandler mouseHandler = new MouseHandler();<newline46mondego>        top.addMouseListener(mouseHandler);<newline46mondego>        top.addMouseMotionListener(mouseHandler);<newline46mondego>        bottom.addMouseListener(mouseHandler);<newline46mondego>        bottom.addMouseMotionListener(mouseHandler);<newline46mondego><newline46mondego>        this.pack();<newline46mondego>        this.setLocationRelativeTo(null);<newline46mondego>    }<newline46mondego><newline46mondego>    private class MouseHandler extends MouseAdapter {<newline46mondego><newline46mondego>        private Point point = new Point();<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void mousePressed(MouseEvent e) {<newline46mondego>            point.x = e.getX();<newline46mondego>            point.y = e.getY();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void mouseDragged(MouseEvent e) {<newline46mondego>            Point p = getLocation();<newline46mondego>            setLocation(p.x + e.getX() - point.x, p.y + e.getY() - point.y);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class PaperPanel extends JPanel {<newline46mondego><newline46mondego>    protected Image image;<newline46mondego><newline46mondego>    PaperPanel(String name) {<newline46mondego>        try {<newline46mondego>            image = ImageIO.read(getClass().getResource(name));<newline46mondego>        } catch (IOException ex) {<newline46mondego>            ex.printStackTrace(System.err);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        g.drawImage(image, 0, 0, getWidth(), getHeight(), null);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ToolPanel extends PaperPanel {<newline46mondego><newline46mondego>    ToolPanel(String name) {<newline46mondego>        super(name);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return new Dimension(image.getWidth(null), image.getHeight(null));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1946splitHere46","4370362splitHere46","int[] codeWord = new int[size];<newline46mondego>"
"1947splitHere46","4370583splitHere46","Shell"
"1948splitHere46","4370583splitHere46","SWT.APPLICATION_MODAL"
"1949splitHere46","4370583splitHere46","Display display = Display.getDefault();<newline46mondego>Shell dialogShell = new Shell(display, SWT.APPLICATION_MODAL);<newline46mondego>// populate dialogShell<newline46mondego>dialogShell.open();<newline46mondego>while (!dialogShell.isDisposed()) {<newline46mondego>    if (!display.readAndDispatch()) {<newline46mondego>        display.sleep();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1950splitHere46","4370583splitHere46","SWT.PRIMARY_MODAL"
"1951splitHere46","4370583splitHere46","SWT.SYSTEM_MODAL"
"1952splitHere46","4370583splitHere46","DisposeListener"
"1953splitHere46","4370583splitHere46","void run() {<newline46mondego>    Display display = new Display();<newline46mondego>    Shell shell1 = openDocumentShell(display);<newline46mondego>    Shell shell2 = openDocumentShell(display);<newline46mondego><newline46mondego>    // close both shells to exit<newline46mondego>    while (!shell1.isDisposed() || !shell2.isDisposed()) {<newline46mondego>        if (!display.readAndDispatch()) {<newline46mondego>            display.sleep();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    display.dispose();<newline46mondego>}<newline46mondego><newline46mondego>Shell openDocumentShell(final Display display) {<newline46mondego>    final Shell shell = new Shell(display, SWT.SHELL_TRIM);<newline46mondego>    shell.setLayout(new FillLayout());<newline46mondego>    Button button = new Button(shell, SWT.PUSH);<newline46mondego>    button.setText(<doubleQuotes46>Open Modal Dialog<doubleQuotes46>);<newline46mondego>    button.addSelectionListener(new SelectionAdapter() {<newline46mondego>        @Override<newline46mondego>        public void widgetSelected(SelectionEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>Button pressed, about to open modal dialog<doubleQuotes46>);<newline46mondego>            final Shell dialogShell = new Shell(shell, SWT.PRIMARY_MODAL | SWT.SHEET);<newline46mondego>            dialogShell.setLayout(new FillLayout());<newline46mondego>            Button closeButton = new Button(dialogShell, SWT.PUSH);<newline46mondego>            closeButton.setText(<doubleQuotes46>Close<doubleQuotes46>);<newline46mondego>            closeButton.addSelectionListener(new SelectionAdapter() {<newline46mondego>                @Override<newline46mondego>                public void widgetSelected(SelectionEvent e) {<newline46mondego>                    dialogShell.dispose();<newline46mondego>                }<newline46mondego>            });<newline46mondego>            dialogShell.setDefaultButton(closeButton);<newline46mondego>            dialogShell.addDisposeListener(new DisposeListener() {<newline46mondego>                @Override<newline46mondego>                public void widgetDisposed(DisposeEvent e) {<newline46mondego>                    System.out.println(<doubleQuotes46>Modal dialog closed<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            });<newline46mondego>            dialogShell.pack();<newline46mondego>            dialogShell.open();<newline46mondego>        }<newline46mondego>    });<newline46mondego>    shell.pack();<newline46mondego>    shell.open();<newline46mondego>    return shell;<newline46mondego>}<newline46mondego>"
"1954splitHere46","4370605splitHere46","// the singletons tokenization/POS-tagging pipeline <newline46mondego>String[] tokens;<newline46mondego>synchronized(tokenizer) { <newline46mondego>   tokens = tokenizer.tokenize(text);<newline46mondego>}<newline46mondego>String[] tags;<newline46mondego>synchronized(posTagger) { <newline46mondego>   tags = posTagger.tag(tokens);<newline46mondego>}<newline46mondego>"
"1955splitHere46","4370639splitHere46","[X] Auto Popup on Typing Any Java Identifier Part<newline46mondego>"
"1956splitHere46","4370639splitHere46","[.,;:([+-=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXYZ]<newline46mondego>"
"1957splitHere46","4370767splitHere46","<filter-mapping>"
"1958splitHere46","4370767splitHere46","web.xml"
"1959splitHere46","4370844splitHere46","convert()"
"1960splitHere46","4370844splitHere46","ConversionService"
"1961splitHere46","4370946splitHere46","HTTP 500"
"1962splitHere46","4371222splitHere46","192.168.1.150"
"1963splitHere46","4371222splitHere46","ftp://192.168.1.150"
"1964splitHere46","4371578splitHere46","InterruptedException"
"1965splitHere46","4371578splitHere46","ThreadInterruptedException"
"1966splitHere46","4371645splitHere46","public class FooFrame extends JFrame {<newline46mondego><newline46mondego>    public FooFrame() {<newline46mondego><newline46mondego>        // your code, copy/pasted<newline46mondego>        setBackground(Color.white);<newline46mondego>        JPanel bottom = new JPanel();<newline46mondego>        bottom.setBackground(Color.BLACK);<newline46mondego>        JButton b1 = new JButton(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego>        bottom.add(b1);<newline46mondego>        add(bottom, BorderLayout.CENTER);<newline46mondego><newline46mondego>        // set size & pack<newline46mondego>        Dimension size = new Dimension(400, 400);<newline46mondego>        setPreferredSize(size);<newline46mondego>        setMinimumSize(size);<newline46mondego>        pack();<newline46mondego>        setLocationRelativeTo(null);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                new FooFrame().setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1967splitHere46","4371685splitHere46","Tuplizer"
"1968splitHere46","4371685splitHere46","PojoEntityTuplizer"
"1969splitHere46","4371685splitHere46","buildInstantiator(PersistentClass persistentClass)"
"1970splitHere46","4371685splitHere46","Instantiator"
"1971splitHere46","4371737splitHere46","TextField(java.lang.String label, java.lang.String text, int maxSize, int constraints) <newline46mondego>"
"1972splitHere46","4371737splitHere46","txtFld4= new TextField (<doubleQuotes46>TOTAL MILES PER GALLON:<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>+mpg, 20, SOME_CONSTANT_FOR_TEXTFIELD_HERE);<newline46mondego>"
"1973splitHere46","4371810splitHere46","MyFrame"
"1974splitHere46","4371810splitHere46","MyKeyEventHandler"
"1975splitHere46","4371810splitHere46","KeyEventDispatcher"
"1976splitHere46","4371810splitHere46","dispatchKeyEvent(KeyEvent e)"
"1977splitHere46","4371810splitHere46","myTextArea"
"1978splitHere46","4371810splitHere46","myTextArea"
"1979splitHere46","4371821splitHere46","reloadable"
"1980splitHere46","4371821splitHere46","<Context>"
"1981splitHere46","4371821splitHere46","context.xml"
"1982splitHere46","4371821splitHere46","true"
"1983splitHere46","4371821splitHere46","<Context reloadable=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>"
"1984splitHere46","4371821splitHere46","/WEB-INF/classes"
"1985splitHere46","4371821splitHere46","/WEB-INF/lib"
"1986splitHere46","4371998splitHere46","Thread Dump"
"1987splitHere46","4372127splitHere46","/System/Library/Frameworks/JavaVM.framework/Home"
"1988splitHere46","4372219splitHere46","HttpServletRequest#getQueryString()"
"1989splitHere46","4372219splitHere46","<c:url value=<doubleQuotes46>/Top.jsp?sortBy=downloads&sortOrder=desc&${pageContext.request.queryString}<doubleQuotes46> /><newline46mondego>"
"1990splitHere46","4372296splitHere46","Handler"
"1991splitHere46","4372296splitHere46","UpdateDisplay()"
"1992splitHere46","4372296splitHere46","ProgressDialog"
"1993splitHere46","4372296splitHere46","UIThread"
"1994splitHere46","4372296splitHere46","public final String RSSFEEDOFCHOICE = <doubleQuotes46>http://www.deals2buy.com/rssgen/tech.xml<doubleQuotes46>;<newline46mondego>public final String tag = <doubleQuotes46>RSSReader<doubleQuotes46>;<newline46mondego>private RSSFeed feed = null;<newline46mondego>private Handler handler = new Handler();<newline46mondego>private ProgressDialog dialog;<newline46mondego><newline46mondego>/** Called when the activity is first created. */<newline46mondego><newline46mondego>public void onCreate(Bundle icicle) {<newline46mondego>    super.onCreate(icicle);<newline46mondego>    setContentView(R.layout.main);<newline46mondego>    dialog = ProgressDialog.show(RSSReader.this, <doubleQuotes46>Loading<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>Loading, please wait..<doubleQuotes46>);<newline46mondego>    Thread t = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            feed = getFeed(RSSFEEDOFCHOICE);<newline46mondego>            handler.post(new Runnable() {<newline46mondego>                public void run() {<newline46mondego>                    dialog.dismiss();<newline46mondego>                    UpdateDisplay();<newline46mondego>                };<newline46mondego>            });<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    t.start();<newline46mondego>}<newline46mondego>"
"1995splitHere46","4372466splitHere46","List<T>.toArray(T[])"
"1996splitHere46","4372466splitHere46","List<String[]> list = ...<newline46mondego>String[][] res = new String[list.size()][];<newline46mondego>list.toArray(res);<newline46mondego>"
"1997splitHere46","4372466splitHere46","List<String[]> list = ...<newline46mondego>Object[][] res = new Object[list.size()][];<newline46mondego>list.toArray(res);<newline46mondego>"
"1998splitHere46","4372466splitHere46","List<T>.toArray()"
"1999splitHere46","4372466splitHere46","List<T>.toArray()"
"2000splitHere46","4372466splitHere46","Object[]"
"2001splitHere46","4372522splitHere46","glEnable(GL_NORMALIZE)<newline46mondego>"
"2002splitHere46","4372616splitHere46","Java_com_mycompany_myproduct_Foo_do_1foo()"
"2003splitHere46","4372616splitHere46","fooInstance.do_foo()"
"2004splitHere46","4372616splitHere46","libexternal.so"
"2005splitHere46","4372616splitHere46","loadLibrary()"
"2006splitHere46","4372616splitHere46","Java_com_mycompany_myproduct_Foo_do_1foo()"
"2007splitHere46","4372616splitHere46","ctinative.o"
"2008splitHere46","4372616splitHere46","libexternal.so"
"2009splitHere46","4372616splitHere46","objdump --dynamic-reloc libexternal.so"
"2010splitHere46","4372616splitHere46","Java_com_mycompany_myproduct_Foo_do_1foo()"
"2011splitHere46","4372616splitHere46","libexternal.so"
"2012splitHere46","4372616splitHere46","ctinative.o"
"2013splitHere46","4372616splitHere46","libctinative.so"
"2014splitHere46","4372616splitHere46","loadLibrary()"
"2015splitHere46","4372616splitHere46",".so"
"2016splitHere46","4372616splitHere46","Java_com_mycompany_myproduct_Foo_do_1foo()"
"2017splitHere46","4372616splitHere46","libctinative.so"
"2018splitHere46","4372616splitHere46","libctinative.so"
"2019splitHere46","4372616splitHere46","libexternal.so"
"2020splitHere46","4372616splitHere46","libctinative.so"
"2021splitHere46","4373015splitHere46","Matcher.matches()"
"2022splitHere46","4373015splitHere46","Matcher.lookingat()"
"2023splitHere46","4373015splitHere46","Matcher.find()"
"2024splitHere46","4373015splitHere46","\G"
"2025splitHere46","4373015splitHere46","find(N)"
"2026splitHere46","4373015splitHere46","lookingat()"
"2027splitHere46","4373015splitHere46","start()"
"2028splitHere46","4373015splitHere46","\G"
"2029splitHere46","4373143splitHere46","hibernate.show_sql=true <newline46mondego>"
"2030splitHere46","4373250splitHere46","new XStream();<newline46mondego>"
"2031splitHere46","4373250splitHere46","new XStream(new JettisonMappedXmlDriver());<newline46mondego>/**************** or ****************/<newline46mondego>new XStream(new JsonHierarchicalStreamDriver());<newline46mondego>"
"2032splitHere46","4373426splitHere46","Apache Commons File Uplaod API"
"2033splitHere46","4373426splitHere46","JSTL"
"2034splitHere46","4373426splitHere46","FFMpeg"
"2035splitHere46","4373426splitHere46","<embed height=<doubleQuotes46>385<doubleQuotes46> width=<doubleQuotes46>640<doubleQuotes46> type=<doubleQuotes46>application/x-shockwave-flash<doubleQuotes46> src=<doubleQuotes46>http://s.ytimg.com/yt/swf/watch_as3-vflofTU0v.swf<doubleQuotes46> id=<doubleQuotes46>movie_player<doubleQuotes46> flashvars=<doubleQuotes46>rv.7.length_seconds=107&amp;rv.2.thumbnailUrl=http%3A%2F%2Fi4.....<doubleQuotes46> allowscriptaccess=<doubleQuotes46>always<doubleQuotes46> allowfullscreen=<doubleQuotes46>true<doubleQuotes46> bgcolor=<doubleQuotes46>#000000<doubleQuotes46>><newline46mondego>"
"2036splitHere46","4373467splitHere46","<sqlMap namespace=<doubleQuotes46>Arrival<doubleQuotes46>><newline46mondego><resultMap id=<doubleQuotes46>Arrival<doubleQuotes46> class=<doubleQuotes46>com.flight.vo.Arrival<doubleQuotes46>><newline46mondego>    <result property=<doubleQuotes46>airport<doubleQuotes46> column=<doubleQuotes46>Airport<doubleQuotes46> /><newline46mondego>    <result property=<doubleQuotes46>terminal<doubleQuotes46> column=<doubleQuotes46>Terminal<doubleQuotes46> /><newline46mondego>    <result property=<doubleQuotes46>airline<doubleQuotes46> column=<doubleQuotes46>airline<doubleQuotes46>/><newline46mondego></resultMap><newline46mondego><newline46mondego><select id=<doubleQuotes46>retrieveAllArrivals<doubleQuotes46> resultMap=<doubleQuotes46>Arrival.Arrival<doubleQuotes46> ><newline46mondego>    select airport.name as Airport, terminals.name as Terminal, flights.airline<newline46mondego>    FROM airport, terminals, flights <newline46mondego>    WHERE airport.terminal_id = terminals.id <newline46mondego>    AND terminals.flight_id = flights.id<newline46mondego></select><newline46mondego></sqlMap><newline46mondego>"
"2037splitHere46","4373625splitHere46","javax.swing.Timer"
"2038splitHere46","4373625splitHere46","60 * 60 * 1000"
"2039splitHere46","4373625splitHere46","actionPerformed()"
"2040splitHere46","4373625splitHere46","start()"
"2041splitHere46","4373625splitHere46","import java.awt.EventQueue;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import java.awt.event.ActionListener;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.Timer;<newline46mondego><newline46mondego>/** @see http://stackoverflow.com/questions/4373493 */<newline46mondego>public class TimerFrame extends JFrame {<newline46mondego><newline46mondego>    private void display() {<newline46mondego>        this.setTitle(<doubleQuotes46>TimerFrame<doubleQuotes46>);<newline46mondego>        this.setLayout(new GridLayout(0, 1));<newline46mondego>        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        this.add(new TimerButton(<doubleQuotes46>Back in a second<doubleQuotes46>, 1000));<newline46mondego>        this.add(new TimerButton(<doubleQuotes46>Back in a minute<doubleQuotes46>, 60 * 1000));<newline46mondego>        this.add(new TimerButton(<doubleQuotes46>Back in an hour<doubleQuotes46>, 60 * 60 * 1000));<newline46mondego>        this.pack();<newline46mondego>        this.setLocationRelativeTo(null);<newline46mondego>        this.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    /** A button that hides it's enclosing Window for delay ms. */<newline46mondego>    private class TimerButton extends JButton {<newline46mondego><newline46mondego>        private final Timer timer;<newline46mondego><newline46mondego>        public TimerButton(String text, int delay) {<newline46mondego>            super(text);<newline46mondego>            this.addActionListener(new StartListener());<newline46mondego>            timer = new Timer(delay, new StopListener());<newline46mondego>        }<newline46mondego><newline46mondego>        private class StartListener implements ActionListener {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                TimerFrame.this.setVisible(false);<newline46mondego>                timer.start();<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        private class StopListener implements ActionListener {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed(ActionEvent e) {<newline46mondego>                timer.stop();<newline46mondego>                TimerFrame.this.setVisible(true);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                new TimerFrame().display();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2042splitHere46","4374084splitHere46","public abstract class Protocol<T extends ProtocolConfiguration> {<newline46mondego><newline46mondego>    private Class<T> configClass;<newline46mondego><newline46mondego>    public void open() {<newline46mondego>        T newConfig = HighAvailabilityConfiguration.create(configClass, this.getProtocolName());<newline46mondego>        config = this.preprocessConfig(newConfig);<newline46mondego>    }<newline46mondego><newline46mondego>    protected abstract T preprocessConfig(T protocolConfig);<newline46mondego>}<newline46mondego>"
"2043splitHere46","4374084splitHere46","public class InteractionProtocol extends Protocol<InteractionProtocolConfiguration> {<newline46mondego><newline46mondego>    // Implementation of generic abstract method.<newline46mondego>    protected InteractionProtocolConfiguration preprocessConfig(InteractionProtocolConfiguration protocolConfig) {<newline46mondego>        protocolConfig.setClientName(ClientName); // does not exist on base class<newline46mondego>        return protocolConfig;<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"2044splitHere46","4374133splitHere46","Writer"
"2045splitHere46","4374133splitHere46","Reader"
"2046splitHere46","4374133splitHere46","BufferedReader"
"2047splitHere46","4374133splitHere46","readLine()"
"2048splitHere46","4374133splitHere46","InputStream"
"2049splitHere46","4374133splitHere46","OutputStream"
"2050splitHere46","4374133splitHere46","BufferedInputStream"
"2051splitHere46","4374133splitHere46","readLine()"
"2052splitHere46","4374133splitHere46","DataInputStream"
"2053splitHere46","4374133splitHere46","readLine()"
"2054splitHere46","4374133splitHere46","DataOutputStream"
"2055splitHere46","4374350splitHere46","stmt.execute(query);<newline46mondego>"
"2056splitHere46","4374350splitHere46","stmt.executeUpdate(query);<newline46mondego>"
"2057splitHere46","4374404splitHere46","ShutdownHook"
"2058splitHere46","4374661splitHere46","POST"
"2059splitHere46","4374661splitHere46","doPost()"
"2060splitHere46","4374670splitHere46","List<Integer>"
"2061splitHere46","4374670splitHere46","double[]"
"2062splitHere46","4374670splitHere46","public static double[] integersToDoubles(List<Integer> integers) {<newline46mondego>    double[] ret = new double[integers.size()];<newline46mondego>    for (int i = 0; i < ret.length; i++) {<newline46mondego>        ret[i] = integers.get(i).doubleValue();<newline46mondego>    }<newline46mondego>    return ret;<newline46mondego>}<newline46mondego>"
"2063splitHere46","4374689splitHere46","form.deleteAll();<newline46mondego>form = new Form(<doubleQuotes46>Bradford Gas Mileage Calculator<doubleQuotes46>);<newline46mondego>"
"2064splitHere46","4374774splitHere46","SELECT COUNT"
"2065splitHere46","4374774splitHere46","getSingleResult()"
"2066splitHere46","4374774splitHere46","getResultList()"
"2067splitHere46","4374774splitHere46","public boolean objExists(...) {<newline46mondego>    return getResultList(...).size() == 1;<newline46mondego>}<newline46mondego>"
"2068splitHere46","4374809splitHere46","TimeZone"
"2069splitHere46","4374809splitHere46","TimeZone"
"2070splitHere46","4374809splitHere46","user.timezone"
"2071splitHere46","4374809splitHere46","null"
"2072splitHere46","4374809splitHere46","TimeZone"
"2073splitHere46","4374809splitHere46","UTC"
"2074splitHere46","4374809splitHere46","user.timezone"
"2075splitHere46","4374809splitHere46","user.timezone"
"2076splitHere46","4374809splitHere46","user.country"
"2077splitHere46","4374809splitHere46","GMT"
"2078splitHere46","4374809splitHere46","java.util.TimeZone.getDefault()"
"2079splitHere46","4374809splitHere46","TimeZone.setDefault()"
"2080splitHere46","4374836splitHere46","http://s3.amazonaws.com/maven.springframework.org/milestone"
"2081splitHere46","4374836splitHere46","1.5.0.M1"
"2082splitHere46","4374884splitHere46","Charset.availableCharsets().values();"
"2083splitHere46","4374977splitHere46","BigInteger(byte[] val)"
"2084splitHere46","4374977splitHere46","BigInteger#toByteArray()"
"2085splitHere46","4375139splitHere46","Map"
"2086splitHere46","4375153splitHere46","DB2T    { <doubleQuotes46>DB2T url<doubleQuotes46>    },  <newline46mondego>DB2Q    { <doubleQuotes46>DB2Q url<doubleQuotes46>    };<newline46mondego>"
"2087splitHere46","4375153splitHere46","DB2T(<doubleQuotes46>DB2T url<doubleQuotes46>),  <newline46mondego>DB2Q(<doubleQuotes46>DB2Q url<doubleQuotes46>);<newline46mondego>"
"2088splitHere46","4375318splitHere46","lvmid"
"2089splitHere46","4375470splitHere46","NumberFormat nf_us = NumberFormat.getInstance(Locale.US);<newline46mondego>String number_us = nf_us.format(1000000);<newline46mondego>"
"2090splitHere46","4375470splitHere46","NumberFormat nf_ge = NumberFormat.getInstance(Locale.GERMAN);<newline46mondego>String number_ge = nf_ge.format(1000000);<newline46mondego>"
"2091splitHere46","4375493splitHere46","BufferedInputStream"
"2092splitHere46","4375631splitHere46","new RuntimeException(jdbce)"
"2093splitHere46","4375745splitHere46","boolean isEclipse() {<newline46mondego>    return System.getProperty(<doubleQuotes46>java.class.path<doubleQuotes46>).contains(<doubleQuotes46>eclipse<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2094splitHere46","4375745splitHere46","boolean isEclipse() {<newline46mondego>    Throwable t = new Throwable();<newline46mondego>    StackTraceElement[] trace = t.getStackTrace();<newline46mondego>    return trace[trace.length - 1].getClassName().startsWith(<doubleQuotes46>org.eclipse<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"2095splitHere46","4375805splitHere46","java.security.KeyStore ks = java.security.KeyStore.getInstance(<doubleQuotes46>PKCS12<doubleQuotes46>);<newline46mondego>ks.load(new java.io.FileInputStream(<doubleQuotes46>yourStore.p12<doubleQuotes46>), <doubleQuotes46>yourPassword<doubleQuotes46>.toCharArray());<newline46mondego>"
"2096splitHere46","4375805splitHere46","for(Enumeration enum = ks.aliases(); enum.hasMoreElements(); ) {<newline46mondego>    String alias = (String) enum.nextElement();<newline46mondego>    System.out.println(<doubleQuotes46>@:<doubleQuotes46> + alias);<newline46mondego>    if (ks.isKeyEntry(alias)) {<newline46mondego>        System.out.println(<doubleQuotes46>return PrivateKey<doubleQuotes46>);<newline46mondego>        PrivateKey pk = (PrivateKey) ks.getKey(alias, password);<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2097splitHere46","4376090splitHere46","class Test< V > implements Map< String, V >"
"2098splitHere46","4376199splitHere46","<set name=<doubleQuotes46>pI<doubleQuotes46> table=<doubleQuotes46>P12<doubleQuotes46> lazy=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>    <key column=<doubleQuotes46>awcompno<doubleQuotes46> update=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>    <one-to-many class=<doubleQuotes46>org.gee.hibernate.P12<doubleQuotes46> not-found=<doubleQuotes46>ignore<doubleQuotes46>/><newline46mondego></set><newline46mondego>"
"2099splitHere46","4376277splitHere46","1. Check that the authorize(...) method is called.<newline46mondego>2. Try making the authorize(...) method public instead of private.<newline46mondego>3. Check that the EJB has an annotation like this:<newline46mondego>      @Interceptors(AuthorizationInterceptor.class)<newline46mondego>"
"2100splitHere46","4376308splitHere46","if (this.updateEntity((XEntity) entity) == 0) {<newline46mondego>    this.insertEntity((XEntity) entity);<newline46mondego>}<newline46mondego>"
"2101splitHere46","4376320splitHere46","getAppletContext().showDocument(new URL(<doubleQuotes46>http://www.google.com<doubleQuotes46>));<newline46mondego>"
"2102splitHere46","4376361splitHere46","null"
"2103splitHere46","4376361splitHere46","synchronized"
"2104splitHere46","4376361splitHere46","volatile"
"2105splitHere46","4376404splitHere46","List<Thread>"
"2106splitHere46","4376404splitHere46","threads.add(new Thread())"
"2107splitHere46","4376404splitHere46","Runnable"
"2108splitHere46","4376528splitHere46","public @ResponseBody Set<Person> getSomething() {<newline46mondego>    Set<Person> persons = new IPersonServiceImpl().getAllPersons();<newline46mondego>    return persons;<newline46mondego>}<newline46mondego>"
"2109splitHere46","4376528splitHere46","IPersonService.getAllPersons()"
"2110splitHere46","4376528splitHere46","getAllPersons()"
"2111splitHere46","4376528splitHere46","IPersonService"
"2112splitHere46","4376528splitHere46","public class IPersonServiceImpl implements IPersonService{<newline46mondego>    public Set<Person> getAllPersons(){<newline46mondego>     -- Your Business Logic<newline46mondego>    }<newline46mondego>    public Person addPerson(Person p){<newline46mondego>     -- Your Business Logic<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2113splitHere46","4376557splitHere46","-Duser.timezone=<doubleQuotes46>America/New_York<doubleQuotes46>"
"2114splitHere46","4376557splitHere46","CallableStatement statement = null;<newline46mondego>Connection conn = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        conn = getYourConnection();<newline46mondego>        Calendar dbCal = new GregorianCalendar(YOUR_DATABASE_TIMEZONE);<newline46mondego><newline46mondego>        String sql = <doubleQuotes46>begin schema_name.package_name.stored_proc(var1=>?, <doubleQuotes46> +<newline46mondego>                <doubleQuotes46>var2=>?); end;<doubleQuotes46>;<newline46mondego><newline46mondego>        statement = conn.prepareCall(sql);<newline46mondego>        statement.setInt(1, something);<newline46mondego>        statement.setTimestamp(2, yourDate.getTime(), dbCal);<newline46mondego><newline46mondego>        statement.execute();<newline46mondego><newline46mondego>        conn.commit();<newline46mondego><newline46mondego>    } finally {<newline46mondego>        if (statement!=null) statement.close();<newline46mondego>        if (conn!=null) conn.close();<newline46mondego>    }<newline46mondego>"
"2115splitHere46","4376659splitHere46","showoutput=<doubleQuotes46>false<doubleQuotes46>"
"2116splitHere46","4376659splitHere46","<junit printsummary=<doubleQuotes46>on<doubleQuotes46><newline46mondego>    fork=<doubleQuotes46>false<doubleQuotes46><newline46mondego>    haltonfailure=<doubleQuotes46>false<doubleQuotes46><newline46mondego>    failureproperty=<doubleQuotes46>tests.failed<doubleQuotes46><newline46mondego>    showoutput=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <classpath refid=<doubleQuotes46>master-classpath<doubleQuotes46>/><newline46mondego>    <formatter type=<doubleQuotes46>brief<doubleQuotes46> usefile=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><newline46mondego>    <batchtest><newline46mondego>        <fileset dir=<doubleQuotes46>${build.dir}<doubleQuotes46>><newline46mondego>            <include name=<doubleQuotes46>**/*Tests.*<doubleQuotes46>/><newline46mondego>        </fileset><newline46mondego>    </batchtest><newline46mondego><newline46mondego></junit><newline46mondego>"
"2117splitHere46","4376679splitHere46","public static void main(String[] args) throws Exception {<newline46mondego><newline46mondego>  URL url = new URL(<doubleQuotes46>http://www.targetdomain.com/api?key1=value1&key2=value2...<doubleQuotes46>);<newline46mondego><newline46mondego>  HttpURLConnection conn = (HttpURLConnection) url.openConnection();<newline46mondego>  conn.setConnectTimeout(5000);    // 5 seconds<newline46mondego>  conn.setRequestMethod(<doubleQuotes46>GET<doubleQuotes46>);       <newline46mondego>  conn.connect();<newline46mondego>  BufferedReader rd  = new BufferedReader(new InputStreamReader(conn.getInputStream()));<newline46mondego><newline46mondego>  String line;<newline46mondego>  StringBuffer bf = new StringBuffer();<newline46mondego>  while ((line = rd.readLine()) != null) {<newline46mondego>      bf.append(line);<newline46mondego>  }<newline46mondego>  conn.disconnect(); <newline46mondego><newline46mondego>  //... pass bf to an XML parser and do your processing...<newline46mondego>}<newline46mondego>"
"2118splitHere46","4376694splitHere46","HttpServletRequest"
"2119splitHere46","4376694splitHere46","HttpServletResponse"
"2120splitHere46","4376694splitHere46","java.net.URLConnection"
"2121splitHere46","4376694splitHere46","URLConnection connection = new URL(<doubleQuotes46>http://example.com<doubleQuotes46>).openConnection();<newline46mondego>InputStream input = connection.getInputStream(); // This contains the response. You need to convert this to String or some bean and then display in JSP.<newline46mondego>"
"2122splitHere46","4376694splitHere46","java.net.URLConnection"
"2123splitHere46","4376722splitHere46","document.parse(xmlParser)"
"2124splitHere46","4376722splitHere46","null"
"2125splitHere46","4376851splitHere46","/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar"
"2126splitHere46","4376916splitHere46","SwingUtilities.invokeAndWait"
"2127splitHere46","4376916splitHere46","SwingUtilities.invokeLater"
"2128splitHere46","4377093splitHere46","sid"
"2129splitHere46","4377130splitHere46","import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>public class Customer {<newline46mondego><newline46mondego>    private int id;<newline46mondego>    private String name;<newline46mondego>    private Address address;<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    public int getId() {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(int id) {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public Address getAddress() {<newline46mondego>        return address;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAddress(Address address) {<newline46mondego>        this.address = address;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class Address {<newline46mondego><newline46mondego>    private String street;<newline46mondego><newline46mondego>    public String getStreet() {<newline46mondego>        return street;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setStreet(String street) {<newline46mondego>        this.street = street;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2130splitHere46","4377130splitHere46","import java.io.FileInputStream;<newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.Marshaller;<newline46mondego>import javax.xml.bind.Unmarshaller;<newline46mondego>import javax.xml.stream.XMLInputFactory;<newline46mondego>import javax.xml.stream.XMLStreamReader;<newline46mondego>import javax.xml.stream.util.StreamReaderDelegate;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Customer.class);<newline46mondego><newline46mondego>        XMLInputFactory xif = XMLInputFactory.newInstance();<newline46mondego>        XMLStreamReader xsr = xif.createXMLStreamReader(new FileInputStream(<doubleQuotes46>input.xml<doubleQuotes46>));<newline46mondego>        xsr = new MyStreamReaderDelegate(xsr);<newline46mondego><newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        Customer customer = (Customer) unmarshaller.unmarshal(xsr);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(customer, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class MyStreamReaderDelegate extends StreamReaderDelegate {<newline46mondego><newline46mondego>        public MyStreamReaderDelegate(XMLStreamReader xsr) {<newline46mondego>            super(xsr);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getAttributeLocalName(int index) {<newline46mondego>            return super.getAttributeLocalName(index).toLowerCase();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getLocalName() {<newline46mondego>            return super.getLocalName().toLowerCase();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2131splitHere46","4377130splitHere46","<CUSTOMER ID=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>    <NAME>Jane Doe</NAME><newline46mondego>    <ADDRESS><newline46mondego>        <STREET>123 A Street</STREET><newline46mondego>    </ADDRESS><newline46mondego></CUSTOMER><newline46mondego><newline46mondego><CuSToMeR Id=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>    <NaMe>Jane Doe</NAME><newline46mondego>    <AdDrEsS><newline46mondego>        <STREET>123 A Street</STREET><newline46mondego>    </AdDRrEsS><newline46mondego></CuSToMeR><newline46mondego>"
"2132splitHere46","4377130splitHere46","<customer id=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>   <address><newline46mondego>      <street>123 A Street</street><newline46mondego>   </address><newline46mondego>   <name>Jane Doe</name><newline46mondego></customer><newline46mondego>"
"2133splitHere46","4377130splitHere46","import java.io.FileInputStream;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.Unmarshaller;<newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.stream.XMLInputFactory;<newline46mondego>import javax.xml.stream.XMLStreamReader;<newline46mondego>import javax.xml.stream.util.StreamReaderDelegate;<newline46mondego><newline46mondego>public class Example {<newline46mondego><newline46mondego>    private static class ToLowerCaseNamesStreamReaderDelegate extends StreamReaderDelegate {<newline46mondego><newline46mondego>        public ToLowerCaseNamesStreamReaderDelegate(XMLStreamReader xsr) {<newline46mondego>            super(xsr);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getAttributeLocalName(int index) {<newline46mondego>            return super.getAttributeLocalName(index).toLowerCase();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getLocalName() {<newline46mondego>            return super.getLocalName().toLowerCase();<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @XmlRootElement(name=<doubleQuotes46>doc<doubleQuotes46>)<newline46mondego>    static class Doc {<newline46mondego>        @XmlElement(name=<doubleQuotes46>element<doubleQuotes46>)<newline46mondego>        List<Element> elements;<newline46mondego>    }<newline46mondego><newline46mondego>    static class Element {<newline46mondego>        @XmlAttribute(name = <doubleQuotes46>abc<doubleQuotes46>)<newline46mondego>        String abc;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        XMLInputFactory xif = XMLInputFactory.newInstance();<newline46mondego>        XMLStreamReader xsr = xif.createXMLStreamReader(new FileInputStream(<doubleQuotes46>LowerCaseElementNamesFilterTest.xml<doubleQuotes46>));<newline46mondego><newline46mondego>        Unmarshaller u = JAXBContext.newInstance(Doc.class).createUnmarshaller();<newline46mondego><newline46mondego>        //Do unmarshalling<newline46mondego>        Doc doc = (Doc) u.unmarshal(new ToLowerCaseNamesStreamReaderDelegate(xsr));<newline46mondego><newline46mondego>        System.out.println(doc.elements.get(0).abc);<newline46mondego>        System.out.println(doc.elements.get(1).abc);<newline46mondego>        System.out.println(doc.elements.get(2).abc);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2134splitHere46","4377130splitHere46","1<newline46mondego>1<newline46mondego>2<newline46mondego>"
"2135splitHere46","4377130splitHere46","@Override<newline46mondego>public String getAttributeLocalName(int index) {<newline46mondego>    return super.getAttributeLocalName(index).toLowerCase().intern();<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public String getLocalName() {<newline46mondego>    return super.getLocalName().toLowerCase().intern();<newline46mondego>}<newline46mondego>"
"2136splitHere46","4377135splitHere46","private Point find2DIndex(Object[][] array, Object search) {<newline46mondego><newline46mondego>    if (search == null || array == null) return null;<newline46mondego><newline46mondego>    for (int rowIndex = 0; rowIndex < array.length; rowIndex++ ) {<newline46mondego>       Object[] row = array[rowIndex];<newline46mondego>       if (row != null) {<newline46mondego>          for (int columnIndex = 0; columnIndex < row.length; columnIndex++) {<newline46mondego>             if (search.equals(row[columnIndex])) {<newline46mondego>                 return new Point(rowIndex, columnIndex);<newline46mondego>             }<newline46mondego>          }<newline46mondego>       }<newline46mondego>    }<newline46mondego>    return null; // value not found in array<newline46mondego> }<newline46mondego>"
"2137splitHere46","4377135splitHere46","private void doSomething() {<newline46mondego>  String[][] array = {{<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>},{<doubleQuotes46>two<doubleQuotes46>,<doubleQuotes46>2<doubleQuotes46>}, {<doubleQuotes46>three<doubleQuotes46>,<doubleQuotes46>3<doubleQuotes46>}};<newline46mondego>  Point index = find2DIndex(array, <doubleQuotes46>two<doubleQuotes46>);<newline46mondego><newline46mondego>  // change one value at index<newline46mondego>  if (index != null)<newline46mondego>     array[index.x][index.y] = <doubleQuotes46>TWO<doubleQuotes46>;<newline46mondego><newline46mondego>  // change everything in the whole row<newline46mondego>  if (index != null) {<newline46mondego>     String[] row = array[index.x];<newline46mondego>     // change the values in that row<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"2138splitHere46","4377150splitHere46","public class PasswordStrengthWidget extends Composite {<newline46mondego><newline46mondego>    private static class PasswordStrength extends JavaScriptObject {<newline46mondego><newline46mondego>        protected PasswordStrength() {}<newline46mondego><newline46mondego>        public final native String getRating() /*-{<newline46mondego>            return this.rating;<newline46mondego>        }-*/;<newline46mondego>    }<newline46mondego><newline46mondego>    private static final String RATING_URL = URL.encode(<doubleQuotes46>https://www.google.com/accounts/RatePassword?Passwd=<doubleQuotes46>);<newline46mondego>    private static final String[] STRENGTH = {<doubleQuotes46>very weak<doubleQuotes46>, <doubleQuotes46>weak<doubleQuotes46>, <doubleQuotes46>medium<doubleQuotes46>, <doubleQuotes46>strong<doubleQuotes46>};<newline46mondego>    @UiField<newline46mondego>    Label indicator;<newline46mondego>    private PasswordTextBox fPassword;<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    private void updateStrengthIndicator() {<newline46mondego>        JsonpRequestBuilder request = new JsonpRequestBuilder();<newline46mondego>        request.requestObject(RATING_URL + fPassword.getText(), new AsyncCallback<PasswordStrength>() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onSuccess(PasswordStrength result) {<newline46mondego>                indicator.setText(STRENGTH[Integer.parseInt(result.getRating()) - 1] + result.getRating());<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void onFailure(Throwable caught) {<newline46mondego>                indicator.setText(<doubleQuotes46>error calculating strength<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2139splitHere46","4377150splitHere46","<inherits name='com.google.gwt.jsonp.Jsonp' /><newline46mondego>"
"2140splitHere46","4377192splitHere46","EnumConverter"
"2141splitHere46","4377192splitHere46","List"
"2142splitHere46","4377192splitHere46","f:selectItems"
"2143splitHere46","4377192splitHere46","var"
"2144splitHere46","4377192splitHere46","List<SelectItem>"
"2145splitHere46","4377192splitHere46","public class Bean {<newline46mondego>    private OrderStatus orderStatus;<newline46mondego>    private OrderStatus[] orderStatuses = OrderStatus.values();<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2146splitHere46","4377192splitHere46","msg"
"2147splitHere46","4377192splitHere46","<var>"
"2148splitHere46","4377192splitHere46","<resource-bundle>"
"2149splitHere46","4377192splitHere46","faces-config.xml"
"2150splitHere46","4377192splitHere46","<h:selectOneMenu value=<doubleQuotes46>#{bean.orderStatus}<doubleQuotes46>><newline46mondego>    <f:selectItems value=<doubleQuotes46>#{bean.orderStatuses}<doubleQuotes46> var=<doubleQuotes46>orderStatus<doubleQuotes46> <newline46mondego>        itemValue=<doubleQuotes46>#{orderStatus}<doubleQuotes46> itemLabel=<doubleQuotes46>#{msg[orderStatus.name]}<doubleQuotes46> /><newline46mondego></h:selectOneMenu><newline46mondego>"
"2151splitHere46","4377192splitHere46","PENDING(<doubleQuotes46>enum.orderstatus.pending<doubleQuotes46>),<newline46mondego>CANCELLED(<doubleQuotes46>enum.orderstatus.cancelled<doubleQuotes46>);<newline46mondego>"
"2152splitHere46","4377215splitHere46","string = sc.next();"
"2153splitHere46","4377251splitHere46","@GET<newline46mondego>    @Path (<doubleQuotes46>userlist<doubleQuotes46>)<newline46mondego>    public Response getUserList() {<newline46mondego>        new UserManager();<newline46mondego>            com.opensymphony.user.UserManager u = UserManager.getInstance();<newline46mondego>        EventPublisher e = null;<newline46mondego>        DefaultUserManager users = new DefaultUserManager(u, e);<newline46mondego>        Collection<User> listOfUsers = users.getAllUsers();<newline46mondego>        return Response.ok(createJSON(listOfUsers).toString()).cacheControl(NO_CACHE).build();<newline46mondego>    }<newline46mondego>"
"2154splitHere46","4377299splitHere46","OAuthServlet"
"2155splitHere46","4377299splitHere46","OAuthServlet"
"2156splitHere46","4377299splitHere46","<servlet>"
"2157splitHere46","4377299splitHere46","web.xml"
"2158splitHere46","4377299splitHere46","<servlet><newline46mondego>  <description>An OAuth Servlet Controller</description><newline46mondego>  <display-name>OAuthServlet</display-name><newline46mondego>  <servlet-name>OAuthServlet</servlet-name><newline46mondego>  <servlet-class>com.neurologic.oauth.servlet.OAuthServlet</servlet-class><newline46mondego>  <init-param><newline46mondego>   <param-name>config</param-name><newline46mondego>   <param-value>/WEB-INF/oauth-config.xml</param-value><newline46mondego>  </init-param><newline46mondego>  <load-on-startup>3</load-on-startup><newline46mondego> </servlet><newline46mondego>"
"2159splitHere46","4377299splitHere46","<servlet-mapping><newline46mondego>  <servlet-name>OAuthServlet</servlet-name><newline46mondego>  <url-pattern>/oauth/*</url-pattern><newline46mondego> </servlet-mapping><newline46mondego>"
"2160splitHere46","4377299splitHere46","<load-on-startup>"
"2161splitHere46","4377299splitHere46","/WEB-INF/oauth-config.xml"
"2162splitHere46","4377299splitHere46","<init-param>"
"2163splitHere46","4377299splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><oauth-config><newline46mondego> <!-- Twitter OAuth Config --><newline46mondego> <oauth name=<doubleQuotes46>twitter<doubleQuotes46> version=<doubleQuotes46>1<doubleQuotes46>><newline46mondego>  <consumer key=<doubleQuotes46>TWITTER_KEY<doubleQuotes46> secret=<doubleQuotes46>TWITTER_SECRET<doubleQuotes46> /><newline46mondego>  <provider requestTokenUrl=<doubleQuotes46>https://api.twitter.com/oauth/request_token<doubleQuotes46> authorizationUrl=<doubleQuotes46>https://api.twitter.com/oauth/authorize<doubleQuotes46> accessTokenUrl=<doubleQuotes46>https://api.twitter.com/oauth/access_token<doubleQuotes46> /><newline46mondego> </oauth><newline46mondego><newline46mondego> <!-- Facebook OAuth --><newline46mondego> <oauth name=<doubleQuotes46>facebook<doubleQuotes46> version=<doubleQuotes46>2<doubleQuotes46>><newline46mondego>  <consumer key=<doubleQuotes46>APP_ID<doubleQuotes46> secret=<doubleQuotes46>APP_SECRET<doubleQuotes46> /><newline46mondego>  <provider authorizationUrl=<doubleQuotes46>https://graph.facebook.com/oauth/authorize<doubleQuotes46> accessTokenUrl=<doubleQuotes46>https://graph.facebook.com/oauth/access_token<doubleQuotes46> /><newline46mondego> </oauth><newline46mondego><newline46mondego> <service path=<doubleQuotes46>/request_token_ready<doubleQuotes46> class=<doubleQuotes46>com.neurologic.music4point0.oauth.TwitterOAuthService<doubleQuotes46> oauth=<doubleQuotes46>twitter<doubleQuotes46>><newline46mondego>  <success path=<doubleQuotes46>/start.htm<doubleQuotes46> /><newline46mondego> </service><newline46mondego><newline46mondego> <service path=<doubleQuotes46>/oauth_redirect<doubleQuotes46> class=<doubleQuotes46>com.neurologic.music4point0.oauth.FacebookOAuthService<doubleQuotes46> oauth=<doubleQuotes46>facebook<doubleQuotes46>><newline46mondego>  <success path=<doubleQuotes46>/start.htm<doubleQuotes46> /><newline46mondego> </service><newline46mondego></oauth-config><newline46mondego>"
"2164splitHere46","4377299splitHere46","<oauth>"
"2165splitHere46","4377299splitHere46","version"
"2166splitHere46","4377299splitHere46","1"
"2167splitHere46","4377299splitHere46","2"
"2168splitHere46","4377299splitHere46","<consumer>"
"2169splitHere46","4377299splitHere46","requestTokenUrl"
"2170splitHere46","4377299splitHere46","OAuthService"
"2171splitHere46","4377299splitHere46","execute()"
"2172splitHere46","4377299splitHere46","OAuthService"
"2173splitHere46","4377299splitHere46","com.neurologic.oauth.service.impl.OAuth1Service"
"2174splitHere46","4377299splitHere46","com.neurologic.oauth.service.impl.OAuth2Service"
"2175splitHere46","4377299splitHere46","OAuth2Service"
"2176splitHere46","4377299splitHere46","<service>"
"2177splitHere46","4377299splitHere46","name"
"2178splitHere46","4377299splitHere46","<oauth>"
"2179splitHere46","4377299splitHere46","name"
"2180splitHere46","4377299splitHere46","OAuth1Service"
"2181splitHere46","4377299splitHere46","OAuth2Service"
"2182splitHere46","4377299splitHere46","execute(HttpServletRequest, HttpServletResponse)"
"2183splitHere46","4377299splitHere46","com.neurologic.music4point0.oauth.FacebookOAuthService"
"2184splitHere46","4377299splitHere46","import java.util.Map;<newline46mondego><newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego><newline46mondego>import net.oauth.enums.GrantType;<newline46mondego>import net.oauth.exception.OAuthException;<newline46mondego>import net.oauth.parameters.OAuth2Parameters;<newline46mondego><newline46mondego>import com.neurologic.oauth.service.impl.OAuth2Service;<newline46mondego>import com.neurologic.oauth.util.Globals;<newline46mondego><newline46mondego>/**<newline46mondego> * @author The Elite Gentleman<newline46mondego> * @since 05 December 2010<newline46mondego> *<newline46mondego> */<newline46mondego>public class FacebookOAuthService extends OAuth2Service {<newline46mondego><newline46mondego> private static final String REDIRECT_URL = <doubleQuotes46>http://localhost:8080/Music4Point0/oauth/oauth_redirect<doubleQuotes46>;<newline46mondego><newline46mondego> /* (non-Javadoc)<newline46mondego>  * @see com.neurologic.oauth.service.impl.OAuth2Service#processReceivedAuthorization(javax.servlet.http.HttpServletRequest, java.lang.String, java.util.Map)<newline46mondego>  */<newline46mondego> @Override<newline46mondego> protected String processReceivedAuthorization(HttpServletRequest request, String code, Map<String, String> additionalParameters) throws OAuthException {<newline46mondego>  // TODO Auto-generated method stub<newline46mondego>  OAuth2Parameters parameters = new OAuth2Parameters();<newline46mondego>  parameters.setCode(code);<newline46mondego>  parameters.setRedirectUri(REDIRECT_URL);<newline46mondego><newline46mondego>  Map<String, String> responseMap = getConsumer().requestAcessToken(GrantType.AUTHORIZATION_CODE, parameters, null, (String[])null);<newline46mondego>  if (responseMap == null) {<newline46mondego>   //This usually should never been thrown, but we just do anyway....<newline46mondego>   throw new OAuthException(<doubleQuotes46>No OAuth response retrieved.<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  if (responseMap.containsKey(<doubleQuotes46>error<doubleQuotes46>)) {<newline46mondego>   throwOAuthErrorException(responseMap);<newline46mondego>  }<newline46mondego><newline46mondego>  if (responseMap.containsKey(OAuth2Parameters.ACCESS_TOKEN)) {<newline46mondego>   String accessToken = responseMap.remove(OAuth2Parameters.ACCESS_TOKEN);<newline46mondego>   request.getSession().setAttribute(Globals.SESSION_OAUTH2_ACCESS_TOKEN, accessToken);<newline46mondego>   processAdditionalReceivedAccessTokenParameters(request, responseMap);<newline46mondego>  }<newline46mondego><newline46mondego>  return null;<newline46mondego> }<newline46mondego><newline46mondego> /* (non-Javadoc)<newline46mondego>  * @see com.neurologic.oauth.service.impl.OAuth2Service#processAdditionalReceivedAccessTokenParameters(javax.servlet.http.HttpServletRequest, java.util.Map)<newline46mondego>  */<newline46mondego> @Override<newline46mondego> protected void processAdditionalReceivedAccessTokenParameters(HttpServletRequest request, Map<String, String> additionalParameters) throws OAuthException {<newline46mondego>  // TODO Auto-generated method stub<newline46mondego><newline46mondego> }<newline46mondego>}<newline46mondego>"
"2185splitHere46","4377299splitHere46","processReceivedAuthorization()"
"2186splitHere46","4377299splitHere46","processReceivedAuthorization()"
"2187splitHere46","4377299splitHere46","code"
"2188splitHere46","4377299splitHere46","String"
"2189splitHere46","4377299splitHere46","null"
"2190splitHere46","4377299splitHere46","<success>"
"2191splitHere46","4377299splitHere46","RequestDispatcher"
"2192splitHere46","4377299splitHere46","AccessToken accessToken = (AccessToken)request.getSession().getAttribute(Globals.SESSION_OAUTH1_ACCESS_TOKEN); //For OAuth 1 access token<newline46mondego>String accessToken = (String)request.getSession().getAttribute(Globals.SESSION_OAUTH2_ACCESS_TOKEN); //For OAuth 2 access token.<newline46mondego>"
"2193splitHere46","4377299splitHere46","community wiki"
"2194splitHere46","4377299splitHere46","TwitterOAuthService"
"2195splitHere46","4377299splitHere46","import javax.servlet.http.HttpServletRequest;<newline46mondego><newline46mondego>import net.oauth.exception.OAuthException;<newline46mondego>import net.oauth.signature.impl.OAuthHmacSha1Signature;<newline46mondego>import net.oauth.token.AccessToken;<newline46mondego>import net.oauth.token.AuthorizedToken;<newline46mondego>import net.oauth.token.RequestToken;<newline46mondego><newline46mondego>import com.neurologic.oauth.service.impl.OAuth1Service;<newline46mondego><newline46mondego>/**<newline46mondego> * @author The Elite Gentleman<newline46mondego> * @since 05 December 2010<newline46mondego> *<newline46mondego> */<newline46mondego>public class TwitterOAuthService extends OAuth1Service {<newline46mondego><newline46mondego>    public static final String REQUEST_TOKEN_SESSION = <doubleQuotes46>TWITTER_REQUEST_TOKEN_SESSION<doubleQuotes46>;<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see com.neurologic.oauth.service.impl.OAuth1Service#processReceivedAuthorizedToken(javax.servlet.http.HttpServletRequest, net.oauth.token.AuthorizedToken)<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    protected AccessToken processReceivedAuthorizedToken(HttpServletRequest request, AuthorizedToken authorizedToken) throws OAuthException {<newline46mondego>        // TODO Auto-generated method stub<newline46mondego>        String requestTokenSecret = null;<newline46mondego>        RequestToken requestToken = (RequestToken) request.getSession().getAttribute(REQUEST_TOKEN_SESSION);<newline46mondego><newline46mondego>        if (requestToken != null) {<newline46mondego>            requestTokenSecret = requestToken.getTokenSecret();<newline46mondego>        }<newline46mondego><newline46mondego>        return getConsumer().requestAccessToken(null, authorizedToken, requestTokenSecret, new OAuthHmacSha1Signature());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2196splitHere46","4377310splitHere46","Calendar.getTime()"
"2197splitHere46","4377310splitHere46","java.util.Date"
"2198splitHere46","4377310splitHere46","Timestamp"
"2199splitHere46","4377310splitHere46","toString()"
"2200splitHere46","4377337splitHere46","int i = 3;<newline46mondego>String s = String.format(<doubleQuotes46>%03d<doubleQuotes46>, i);<newline46mondego>System.out.println(s);<newline46mondego>"
"2201splitHere46","4377337splitHere46","003<newline46mondego>"
"2202splitHere46","4377382splitHere46",".setResultTransformer(CriteriaSpecification.DISTINCT_ROOT_ENTITY)"
"2203splitHere46","4377382splitHere46","List ordersAndProducts = session.createCriteria(Order.class)<newline46mondego>    .setResultTransformer(CriteriaSpecification.DISTINCT_ROOT_ENTITY)<newline46mondego>    .setFetchMode(â€œproductsâ€?,FetchMode.JOIN)<newline46mondego>    .add(Restrictions.eq(â€œidâ€?,â€?1234â€?))<newline46mondego>    .list();<newline46mondego>"
"2204splitHere46","4377426splitHere46","File f = new File();<newline46mondego>f.canRead();  // checks the permissions to read<newline46mondego>f.canWrite(); // writpermission<newline46mondego>"
"2205splitHere46","4377497splitHere46","Service"
"2206splitHere46","4377497splitHere46","Application"
"2207splitHere46","4377497splitHere46","Thread"
"2208splitHere46","4377497splitHere46","HandlerThread"
"2209splitHere46","4377555splitHere46","Converter"
"2210splitHere46","4377555splitHere46","Validator"
"2211splitHere46","4377555splitHere46","public void EnterpriseNumberConverter implements Converter {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Object getAsObject(FacesContext context, UIComponent component, String value) {<newline46mondego>        if (value.length() == 9) {<newline46mondego>            value = <doubleQuotes46>0<doubleQuotes46> + value;<newline46mondego>        }<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getAsString(FacesContext context, UIComponent component, Object value) {<newline46mondego>        return (String) value;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2212splitHere46","4377555splitHere46","input"
"2213splitHere46","4377555splitHere46","UIInput"
"2214splitHere46","4377555splitHere46","request"
"2215splitHere46","4377555splitHere46","HttpServletRequest"
"2216splitHere46","4377555splitHere46","input.setSubmittedValue(request.getParameter(input.getClientId()));<newline46mondego>"
"2217splitHere46","4377555splitHere46","Object value = input.getSubmittedValue();<newline46mondego>try {<newline46mondego>    value = input.getConvertedValue(facesContext, value);<newline46mondego>} catch (ConverterException e) {<newline46mondego>    // ...<newline46mondego>    return;<newline46mondego>}<newline46mondego>try {<newline46mondego>    for (Validator validator : input.getValidators())<newline46mondego>        validator.validate(facesContext, input, value);<newline46mondego>    }<newline46mondego>    input.setSubmittedValue(null);<newline46mondego>    input.setValue(value); // You see?<newline46mondego>} catch (ValidatorException e) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2218splitHere46","4377555splitHere46","bean.setProperty(input.getValue());<newline46mondego>"
"2219splitHere46","4377598splitHere46","http.+?mp3"
"2220splitHere46","4377606splitHere46","<url-pattern>"
"2221splitHere46","4377606splitHere46","<url-pattern>/HelloWorld/*</url-pattern><newline46mondego>"
"2222splitHere46","4377606splitHere46","HttpServletRequest.getPathInfo()"
"2223splitHere46","4377606splitHere46","http://localhost:<port>/MyApp/HelloWorld/one/"
"2224splitHere46","4377606splitHere46","/one/<newline46mondego>"
"2225splitHere46","4377731splitHere46","if ( log.isDebugEnabled() ) <newline46mondego>{<newline46mondego>    // Debug log statements<newline46mondego>}<newline46mondego>"
"2226splitHere46","4377772splitHere46","Object"
"2227splitHere46","4377772splitHere46","Object"
"2228splitHere46","4377772splitHere46","Object"
"2229splitHere46","4377772splitHere46","private Object[] obj; <newline46mondego>"
"2230splitHere46","4377772splitHere46","obj"
"2231splitHere46","4377772splitHere46","Object"
"2232splitHere46","4377772splitHere46","private"
"2233splitHere46","4377840splitHere46","webapp"
"2234splitHere46","4377840splitHere46","webapp"
"2235splitHere46","4377840splitHere46","src/main/resources"
"2236splitHere46","4377840splitHere46","classpath:"
"2237splitHere46","4377840splitHere46","contextConfigLocation"
"2238splitHere46","4377856splitHere46","float z = (float) x / y;<newline46mondego>"
"2239splitHere46","4377856splitHere46","float z = x / (float) y;<newline46mondego>"
"2240splitHere46","4377856splitHere46","float z = (float) x / (float) y;<newline46mondego>"
"2241splitHere46","4378016splitHere46","java -cp ... Share.class<newline46mondego>"
"2242splitHere46","4378016splitHere46","java -cp ... Share<newline46mondego>"
"2243splitHere46","4378016splitHere46","java -cp ... path.to.Share<newline46mondego>"
"2244splitHere46","4378016splitHere46","java -cp . Share<newline46mondego>"
"2245splitHere46","4378016splitHere46","java Share<newline46mondego>"
"2246splitHere46","4378016splitHere46","java"
"2247splitHere46","4378128splitHere46","A"
"2248splitHere46","4378128splitHere46","B"
"2249splitHere46","4378128splitHere46","B"
"2250splitHere46","4378128splitHere46","A"
"2251splitHere46","4378128splitHere46","A"
"2252splitHere46","4378128splitHere46","HashMap"
"2253splitHere46","4378235splitHere46","<jar destfile=<doubleQuotes46>/Volumes/resi/talosBase.jar<doubleQuotes46> filesetmanifest=<doubleQuotes46>mergewithoutmain<doubleQuotes46>><newline46mondego>"
"2254splitHere46","4378235splitHere46","<jar destfile=<doubleQuotes46>/Volumes/resi/talosBase.jar<doubleQuotes46> filesetmanifest=<doubleQuotes46>mergewithoutmain<doubleQuotes46> duplicate=<doubleQuotes46>preserve<doubleQuotes46>><newline46mondego>"
"2255splitHere46","4378247splitHere46","String pattern = <doubleQuotes46>MM/dd/yyyy<doubleQuotes46>; <newline46mondego>  SimpleDateFormat format = new SimpleDateFormat(pattern); <newline46mondego>  try { <newline46mondego>    Date date = format.parse(<doubleQuotes46>12/31/2006<doubleQuotes46>); <newline46mondego>    System.out.println(format.format(date)); <newline46mondego>  } catch (ParseException e) { <newline46mondego>    e.printStackTrace(); <newline46mondego>  }<newline46mondego>"
"2256splitHere46","4378351splitHere46","Ticket"
"2257splitHere46","4378351splitHere46","WHERE c.ticket.id = 751"
"2258splitHere46","4378731splitHere46","javap"
"2259splitHere46","4378731splitHere46","javap -c test<newline46mondego>Compiled from <doubleQuotes46>test.java<doubleQuotes46><newline46mondego>public class test extends java.lang.Object{<newline46mondego>public test();<newline46mondego>  Code:<newline46mondego>   0:   aload_0<newline46mondego>   1:   invokespecial   #1; //Method java/lang/Object.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   4:   return<newline46mondego><newline46mondego>public static void main(java.lang.String[])   throws java.lang.Exception;<newline46mondego>  Code:<newline46mondego>   0:   ldc #2; //String CR_ABC_DEF_GHI<newline46mondego>   2:   astore_1<newline46mondego>   3:   ldc #3; //String TYPE=Eligibility Only|CLIENT_ID=62|EMPLOYER_ID=0|LOCATION_ID=0|PLAN_ID=all|FREQUENCY=52|FILE=null|FILETYPE=C|PROCESSTOLAUNCH=10|PROCESSTOLAUNCHSTATUS=100|SCHEDULE_ID=29837d692f4c43e786f1097fab7c360c<newline46mondego>   5:   astore_2<newline46mondego>   6:   ldc #4; //String \|<newline46mondego>   8:   astore_3<newline46mondego>   9:   ldc #5; //String FILE_NAME_TEMPLATE<newline46mondego>   11:  astore  4<newline46mondego>   13:  ldc #6; //String FILE<newline46mondego>   15:  astore  5<newline46mondego>   17:  new #7; //class java/lang/StringBuilder<newline46mondego>   20:  dup<newline46mondego>   21:  invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   24:  aload_3<newline46mondego>   25:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   28:  aload   4<newline46mondego>   30:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   33:  ldc #10; //String =<newline46mondego>   35:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   38:  ldc #11; //String [^<newline46mondego>   40:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   43:  aload_3<newline46mondego>   44:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   47:  ldc #12; //String ]*<newline46mondego>   49:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   52:  aload_3<newline46mondego>   53:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   56:  invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   59:  astore  6<newline46mondego>   61:  new #7; //class java/lang/StringBuilder<newline46mondego>   64:  dup<newline46mondego>   65:  invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   68:  aload_3<newline46mondego>   69:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   72:  aload   5<newline46mondego>   74:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   77:  ldc #10; //String =<newline46mondego>   79:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   82:  ldc #11; //String [^<newline46mondego>   84:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   87:  aload_3<newline46mondego>   88:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   91:  ldc #12; //String ]*<newline46mondego>   93:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   96:  aload_3<newline46mondego>   97:  invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   100: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   103: astore  7<newline46mondego>   105: new #7; //class java/lang/StringBuilder<newline46mondego>   108: dup<newline46mondego>   109: invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   112: aload_3<newline46mondego>   113: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   116: aload   4<newline46mondego>   118: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   121: ldc #10; //String =<newline46mondego>   123: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   126: aload_1<newline46mondego>   127: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   130: aload_3<newline46mondego>   131: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   134: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   137: astore  8<newline46mondego>   139: aload_2<newline46mondego>   140: aload   6<newline46mondego>   142: aload   8<newline46mondego>   144: invokevirtual   #14; //Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<newline46mondego>   147: aload   7<newline46mondego>   149: aload   8<newline46mondego>   151: invokevirtual   #14; //Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<newline46mondego>   154: astore  9<newline46mondego>   156: getstatic   #15; //Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>   159: new #7; //class java/lang/StringBuilder<newline46mondego>   162: dup<newline46mondego>   163: invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   166: ldc #16; //String before = <newline46mondego>   168: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   171: aload_2<newline46mondego>   172: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   175: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   178: invokevirtual   #17; //Method java/io/PrintStream.println:(Ljava/lang/String;)V<newline46mondego>   181: getstatic   #15; //Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>   184: new #7; //class java/lang/StringBuilder<newline46mondego>   187: dup<newline46mondego>   188: invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   191: ldc #18; //String pattern1 = <newline46mondego>   193: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   196: aload   6<newline46mondego>   198: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   201: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   204: invokevirtual   #17; //Method java/io/PrintStream.println:(Ljava/lang/String;)V<newline46mondego>   207: getstatic   #15; //Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>   210: new #7; //class java/lang/StringBuilder<newline46mondego>   213: dup<newline46mondego>   214: invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   217: ldc #19; //String pattern2 = <newline46mondego>   219: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   222: aload   7<newline46mondego>   224: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   227: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   230: invokevirtual   #17; //Method java/io/PrintStream.println:(Ljava/lang/String;)V<newline46mondego>   233: getstatic   #15; //Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>   236: new #7; //class java/lang/StringBuilder<newline46mondego>   239: dup<newline46mondego>   240: invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   243: ldc #20; //String replace = <newline46mondego>   245: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   248: aload   8<newline46mondego>   250: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   253: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   256: invokevirtual   #17; //Method java/io/PrintStream.println:(Ljava/lang/String;)V<newline46mondego>   259: getstatic   #15; //Field java/lang/System.out:Ljava/io/PrintStream;<newline46mondego>   262: new #7; //class java/lang/StringBuilder<newline46mondego>   265: dup<newline46mondego>   266: invokespecial   #8; //Method java/lang/StringBuilder.<doubleQuotes46><init><doubleQuotes46>:()V<newline46mondego>   269: ldc #21; //String after = <newline46mondego>   271: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   274: aload   9<newline46mondego>   276: invokevirtual   #9; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;<newline46mondego>   279: invokevirtual   #13; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;<newline46mondego>   282: invokevirtual   #17; //Method java/io/PrintStream.println:(Ljava/lang/String;)V<newline46mondego>   285: return<newline46mondego><newline46mondego>}<newline46mondego>"
"2260splitHere46","4378748splitHere46","#{item}"
"2261splitHere46","4378772splitHere46","put(File, URL)"
"2262splitHere46","4378772splitHere46","IOException"
"2263splitHere46","4378772splitHere46","FileNotFoundException"
"2264splitHere46","4378903splitHere46","*.xhtml"
"2265splitHere46","4378903splitHere46","login.xhtml"
"2266splitHere46","4378903splitHere46","faces-config.xml"
"2267splitHere46","4378903splitHere46","web.xml"
"2268splitHere46","4378903splitHere46","url-pattern"
"2269splitHere46","4378903splitHere46","*.xhtml"
"2270splitHere46","4378903splitHere46","/secured/*"
"2271splitHere46","4378903splitHere46","login.xhtml"
"2272splitHere46","4378903splitHere46","Filter"
"2273splitHere46","4378903splitHere46","url-pattern"
"2274splitHere46","4378903splitHere46","doFilter()"
"2275splitHere46","4378903splitHere46","HttpServletResponse hsr = (HttpServletResponse) response;<newline46mondego>hsr.setHeader(<doubleQuotes46>Cache-Control<doubleQuotes46>, <doubleQuotes46>no-cache, no-store, must-revalidate<doubleQuotes46>); // HTTP 1.1.<newline46mondego>hsr.setHeader(<doubleQuotes46>Pragma<doubleQuotes46>, <doubleQuotes46>no-cache<doubleQuotes46>); // HTTP 1.0.<newline46mondego>hsr.setDateHeader(<doubleQuotes46>Expires<doubleQuotes46>, 0); // Proxies.<newline46mondego>chain.doFilter(request, response);<newline46mondego>"
"2276splitHere46","4379030splitHere46","getRealPath(<doubleQuotes46>/<doubleQuotes46>)"
"2277splitHere46","4379030splitHere46","System.out.println(file.getAbsolutePath());<newline46mondego>"
"2278splitHere46","4379152splitHere46","Build/Targets/arm-android-linux/Config.scons"
"2279splitHere46","4379152splitHere46","android-ndk-r4b/out/host/config.mk"
"2280splitHere46","4379152splitHere46","HOST_TAG := linux-x86<newline46mondego>"
"2281splitHere46","4379152splitHere46","android-ndk-r4b/build/prebuilt/"
"2282splitHere46","4379386splitHere46","javax.ws.rs.core.Application"
"2283splitHere46","4379386splitHere46","import java.util.Collections;<newline46mondego>import java.util.Set;<newline46mondego>import javax.ws.rs.core.Application;<newline46mondego><newline46mondego>public class ClientApplication extends Application {<newline46mondego><newline46mondego>    private Set<Object> singletons = Collections.emptySet();<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Set<Object> getSingletons() {<newline46mondego>        return singletons;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSingletons(final Set<Object> singletons) {<newline46mondego>        this.singletons = singletons;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2284splitHere46","4379386splitHere46","org.apache.wink.client.ClientConfig"
"2285splitHere46","4379386splitHere46","org.apache.wink.client.RestClient"
"2286splitHere46","4379386splitHere46","org.codehaus.jackson.jaxrs.JacksonJsonProvider"
"2287splitHere46","4379386splitHere46","ClientApplication clientApplication = new ClientApplication();<newline46mondego>Set<Object> s = new HashSet<Object>();<newline46mondego>s.add(new JacksonJsonProvider());<newline46mondego>clientApplication.setSingletons(s);<newline46mondego>ClientConfig clientConfig = new ClientConfig().applications(clientApplication);<newline46mondego>RestClient restClient = new RestClient(clientConfig);<newline46mondego>"
"2288splitHere46","4379386splitHere46","org.apache.wink.client.Resource"
"2289splitHere46","4379386splitHere46","get(Class<T> responseEntity)"
"2290splitHere46","4379386splitHere46","Resource resource = client.resource(<doubleQuotes46>http://localhost:8081/helloworld<doubleQuotes46>);<newline46mondego>User user = resource.accept(MediaType.APPLICATION_JSON).get(User.class);<newline46mondego>"
"2291splitHere46","4379386splitHere46","ClientConfig"
"2292splitHere46","4379386splitHere46","new RestClient(clientConfig)"
"2293splitHere46","4379411splitHere46","YourObject object = (YourObject) y.load(input);<newline46mondego>"
"2294splitHere46","4379411splitHere46","this"
"2295splitHere46","4379411splitHere46","BeanUtils.copyProperties(object, yamlObject)"
"2296splitHere46","4379411splitHere46","Class<T>"
"2297splitHere46","4379411splitHere46","T"
"2298splitHere46","4379411splitHere46","clazz.cast(..)"
"2299splitHere46","4379649splitHere46","properties"
"2300splitHere46","4379688splitHere46","public static Date fromDotNetTicks(long ticks)<newline46mondego>{<newline46mondego>    // Rebase to Jan 1st 1970, the Unix epoc<newline46mondego>    ticks -= 621355968000000000;<newline46mondego>    long millis = ticks / 10000;<newline46mondego>    return new Date(millis);<newline46mondego>}<newline46mondego>"
"2301splitHere46","4379748splitHere46","MMMMM d, yyyy hh:mm:ss a z"
"2302splitHere46","4379748splitHere46","GMT+xxxx"
"2303splitHere46","4379748splitHere46","EST"
"2304splitHere46","4379748splitHere46","EST"
"2305splitHere46","4379748splitHere46","TimeZone.getTimeZone(<doubleQuotes46>EST<doubleQuotes46>)"
"2306splitHere46","4379753splitHere46","CLASSPATH"
"2307splitHere46","4379753splitHere46","CLASSPATH"
"2308splitHere46","4380224splitHere46","txtAnswer.setText(String.valueOf(result));<newline46mondego>"
"2309splitHere46","4380224splitHere46","txtAnswer.setText(<doubleQuotes46>result is : <doubleQuotes46>+result);<newline46mondego>"
"2310splitHere46","4380322splitHere46","isCellEditable()"
"2311splitHere46","4380322splitHere46","false"
"2312splitHere46","4380322splitHere46","getColumnName()"
"2313splitHere46","4380463splitHere46","ehcache"
"2314splitHere46","4380463splitHere46","pom"
"2315splitHere46","4380463splitHere46","<dependency><newline46mondego>  <groupId>net.sf.ehcache</groupId><newline46mondego>  <artifactId>ehcache</artifactId><newline46mondego>  <version>2.1.0</version><newline46mondego>  <type>pom</type><newline46mondego></dependency><newline46mondego>"
"2316splitHere46","4380463splitHere46","ehcache-core"
"2317splitHere46","4380472splitHere46","ContentValues cv = new ContentValues();<newline46mondego>cv.put(smsDbSchema.CustomerSchema.COLUMN_NAME, <doubleQuotes46>Charles Keith Gilliam<doubleQuotes46>);<newline46mondego>..<newline46mondego>..<newline46mondego>..<newline46mondego>"
"2318splitHere46","4380472splitHere46","cv.put(smsDbSchema.CustomerSchema.COLUMN_NAME, <doubleQuotes46>Charles Keith Gilliam<doubleQuotes46>);<newline46mondego>cv.put(smsDbSchema.CustomerSchema._ID, <doubleQuotes46>7585684317298<doubleQuotes46>);<newline46mondego>mDb.insert(smsDbSchema.CustomerSchema.TABLE_NAME, null, cv);<newline46mondego><newline46mondego>cv.put(smsDbSchema.CustomerSchema.COLUMN_NAME, <doubleQuotes46>Jarrod Martin<doubleQuotes46>);<newline46mondego>cv.put(smsDbSchema.CustomerSchema._ID, <doubleQuotes46>0298437598745<doubleQuotes46>);<newline46mondego>mDb.insert(smsDbSchema.CustomerSchema.TABLE_NAME, null, cv);<newline46mondego>"
"2319splitHere46","4380559splitHere46","<% %>"
"2320splitHere46","4380559splitHere46","<%! %>"
"2321splitHere46","4380656splitHere46","java -verbose:class  x.y.Z<newline46mondego>"
"2322splitHere46","4380661splitHere46","cache.isLoaded()"
"2323splitHere46","4380661splitHere46","cache.get()"
"2324splitHere46","4380661splitHere46","cache.isLoaded()"
"2325splitHere46","4380661splitHere46","true"
"2326splitHere46","4380661splitHere46","cache.get()"
"2327splitHere46","4380661splitHere46","get"
"2328splitHere46","4380661splitHere46","isLoaded"
"2329splitHere46","4380661splitHere46","CacheStaleException"
"2330splitHere46","4380790splitHere46","import java.awt.*;<newline46mondego>import java.awt.image.*;<newline46mondego><newline46mondego>public class Transparency {<newline46mondego>  public static Image makeColorTransparent<newline46mondego>    (Image im, final Color color) {<newline46mondego>    ImageFilter filter = new RGBImageFilter() {<newline46mondego>      // the color we are looking for... Alpha bits are set to opaque<newline46mondego>      public int markerRGB = color.getRGB() | 0xFF000000;<newline46mondego><newline46mondego>      public final int filterRGB(int x, int y, int rgb) {<newline46mondego>        if ( ( rgb | 0xFF000000 ) == markerRGB ) {<newline46mondego>          // Mark the alpha bits as zero - transparent<newline46mondego>          return 0x00FFFFFF & rgb;<newline46mondego>          }<newline46mondego>        else {<newline46mondego>          // nothing to do<newline46mondego>          return rgb;<newline46mondego>          }<newline46mondego>        }<newline46mondego>      }; <newline46mondego><newline46mondego>    ImageProducer ip = new FilteredImageSource(im.getSource(), filter);<newline46mondego>    return Toolkit.getDefaultToolkit().createImage(ip);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2331splitHere46","4380808splitHere46","abstract"
"2332splitHere46","4381481splitHere46","f:"
"2333splitHere46","4381481splitHere46","#{item}"
"2334splitHere46","4381481splitHere46","Field"
"2335splitHere46","4381481splitHere46","#{item}"
"2336splitHere46","4381481splitHere46","Converter"
"2337splitHere46","4381481splitHere46","Validator"
"2338splitHere46","4381481splitHere46","Field"
"2339splitHere46","4381481splitHere46","public class Field {<newline46mondego>    private Converter converter;<newline46mondego>    private Validator validator;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2340splitHere46","4381481splitHere46","DataModel"
"2341splitHere46","4381481splitHere46","DataModel"
"2342splitHere46","4381481splitHere46","DataModel#getRowData()"
"2343splitHere46","4381481splitHere46","public class Bean {<newline46mondego>    private List<Field> fields;<newline46mondego>    private DataModel<Field> fieldModel;<newline46mondego><newline46mondego>    public Bean() {<newline46mondego>        fields = loadItSomehow();<newline46mondego>        fieldModel = new ListDataModel<Field>(fields);<newline46mondego>    }<newline46mondego><newline46mondego>    public Converter getFieldConverter() {<newline46mondego>        return fieldModel.getRowData().getConverter();<newline46mondego>    }<newline46mondego><newline46mondego>    public void validateField(FacesContext context, UIComponent component, Object value) throws ValidatorException {<newline46mondego>        fieldModel.getRowData().getValidator().validate(context, component, value);<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2344splitHere46","4381481splitHere46","h:dataTable"
"2345splitHere46","4381481splitHere46","DataModel"
"2346splitHere46","4381481splitHere46","<h:dataTable value=<doubleQuotes46>#{bean.fieldModel}<doubleQuotes46> var=<doubleQuotes46>field<doubleQuotes46>><newline46mondego>    <h:column><newline46mondego>        <h:inputText value=<doubleQuotes46>#{field.value}<doubleQuotes46> converter=<doubleQuotes46>#{bean.fieldConverter}<doubleQuotes46> validator=<doubleQuotes46>#{bean.validateField}<doubleQuotes46> /><newline46mondego>        ...<newline46mondego>"
"2347splitHere46","4381481splitHere46","h:dataTable"
"2348splitHere46","4381653splitHere46","src/test/resources"
"2349splitHere46","4381653splitHere46","src/test/resources/xmlfiles"
"2350splitHere46","4381653splitHere46","target/test-classes"
"2351splitHere46","4381653splitHere46","URL path = this.getClass().getResource(<doubleQuotes46>/xmlfiles<doubleQuotes46>);<newline46mondego>File xmlfileDir = new File(url.getFile());<newline46mondego>for (File f : xmlfileDir.listFiles(new ...Filter())) {<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"2352splitHere46","4381683splitHere46","public AbstractWorker caramba(final AbstractWorkerFactory<? extends Config> factory, final Config configuration) {<newline46mondego>"
"2353splitHere46","4381683splitHere46","caramba(new AbstractWorkerFactory<FooConfiguration>() { ... }, new BarConfig());<newline46mondego>"
"2354splitHere46","4381683splitHere46","public <C extends Config> AbstractWorker caramba(final AbstractWorkerFactory<C> factory, final C configuration)<newline46mondego>"
"2355splitHere46","4381709splitHere46","<task:"
"2356splitHere46","4381709splitHere46","<task:scheduled-tasks scheduler=<doubleQuotes46>myScheduler<doubleQuotes46>><newline46mondego>    <task:scheduled ref=<doubleQuotes46>someObject<doubleQuotes46> method=<doubleQuotes46>someMethod<doubleQuotes46> <newline46mondego>         fixed-delay=<doubleQuotes46>${configuredDelay}<doubleQuotes46>/><newline46mondego></task:scheduled-tasks><newline46mondego>"
"2357splitHere46","4381758splitHere46","/app/*"
"2358splitHere46","4381758splitHere46","/*"
"2359splitHere46","4381758splitHere46","/app"
"2360splitHere46","4381758splitHere46","web.xml"
"2361splitHere46","4381758splitHere46","<filter><newline46mondego>    <filter-name>urlRewriteFilter</filter-name><newline46mondego>    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class><newline46mondego></filter><newline46mondego><newline46mondego><filter-mapping><newline46mondego>    <filter-name>urlRewriteFilter</filter-name><newline46mondego>    <url-pattern>/*</url-pattern><newline46mondego></filter-mapping><newline46mondego>"
"2362splitHere46","4381758splitHere46","urlrewrite.xml"
"2363splitHere46","4381758splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><!DOCTYPE urlrewrite PUBLIC <doubleQuotes46>-//tuckey.org//DTD UrlRewrite 3.0//EN<doubleQuotes46><newline46mondego>        <doubleQuotes46>http://tuckey.org/res/dtds/urlrewrite3.0.dtd<doubleQuotes46>><newline46mondego><urlrewrite default-match-type=<doubleQuotes46>wildcard<doubleQuotes46>><newline46mondego>    <rule><newline46mondego>        <from>/</from><newline46mondego>        <to>/app/</to><newline46mondego>    </rule><newline46mondego>    <rule><newline46mondego>        <from>/_ah/**</from><newline46mondego>        <to>/_ah/$1</to><newline46mondego>    </rule><newline46mondego>    <rule><newline46mondego>        <from>/**</from><newline46mondego>        <to>/app/$1</to><newline46mondego>    </rule><newline46mondego>    <outbound-rule><newline46mondego>        <from>/_ah/**</from><newline46mondego>        <to>/_ah/$1</to><newline46mondego>    </outbound-rule><newline46mondego>    <outbound-rule><newline46mondego>        <from>/app/**</from><newline46mondego>        <to>/$1</to><newline46mondego>    </outbound-rule><newline46mondego></urlrewrite><newline46mondego>"
"2364splitHere46","4382010splitHere46","@PersistenceUnit"
"2365splitHere46","4382010splitHere46","@PersistenceContext"
"2366splitHere46","4382023splitHere46","FileSystemView.getFileSystemView().getSystemDisplayName(...)<newline46mondego>"
"2367splitHere46","4382033splitHere46","ant -Dbasedir=somedir<newline46mondego>"
"2368splitHere46","4382033splitHere46","<antcall target=<doubleQuotes46>junit<doubleQuotes46>><newline46mondego>  <param name=<doubleQuotes46>basedir<doubleQuotes46> value=<doubleQuotes46>${plugins.dir}/${name}<doubleQuotes46>/><newline46mondego></antcall><newline46mondego><newline46mondego><ant dir=<doubleQuotes46>${plugins.dir}/${name}<doubleQuotes46> target=<doubleQuotes46>junit<doubleQuotes46> /><newline46mondego>"
"2369splitHere46","4382074splitHere46","ServletRequestAttributes"
"2370splitHere46","4382076splitHere46","final"
"2371splitHere46","4382076splitHere46","String message"
"2372splitHere46","4382076splitHere46","public static void createDialog(Button b, final String message) {<newline46mondego>    //                                    ^^^^^<newline46mondego>    MouseListener mouseListener = new MouseAdapter() {<newline46mondego>        public void mousePressed(MouseEvent mouseEvent) {<newline46mondego>            if (SwingUtilities.isLeftMouseButton(mouseEvent)) {<newline46mondego>                JOptionPane.showConfirmDialog(null,<newline46mondego>                        message, message, JOptionPane.YES_NO_OPTION);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"2373splitHere46","4382199splitHere46","ListView"
"2374splitHere46","4382199splitHere46","Adapter"
"2375splitHere46","4382199splitHere46","Views"
"2376splitHere46","4382199splitHere46","ListView"
"2377splitHere46","4382199splitHere46","getView()"
"2378splitHere46","4382199splitHere46","ListView"
"2379splitHere46","4382199splitHere46","Adapter"
"2380splitHere46","4382199splitHere46","convertView"
"2381splitHere46","4382299splitHere46","clean deploy -U<newline46mondego>"
"2382splitHere46","4382356splitHere46","<doubleQuotes46>//class<doubleQuotes46>"
"2383splitHere46","4382356splitHere46","<doubleQuotes46>//*[local-name() = 'class']<doubleQuotes46>"
"2384splitHere46","4382356splitHere46","<doubleQuotes46>//foo:class<doubleQuotes46>"
"2385splitHere46","4382580splitHere46","remove(..)"
"2386splitHere46","4382580splitHere46","equals(..)"
"2387splitHere46","4382580splitHere46","Long.equals(..)"
"2388splitHere46","4382580splitHere46","false"
"2389splitHere46","4382580splitHere46","instanceof Long"
"2390splitHere46","4382580splitHere46","byte"
"2391splitHere46","4383089splitHere46","a"
"2392splitHere46","4383089splitHere46","x"
"2393splitHere46","4383089splitHere46","mod n"
"2394splitHere46","4383089splitHere46","gcd(a,n) = 1"
"2395splitHere46","4383089splitHere46","a"
"2396splitHere46","4383089splitHere46","mod n"
"2397splitHere46","4383089splitHere46","a"
"2398splitHere46","4383089splitHere46","-1"
"2399splitHere46","4383089splitHere46","-x"
"2400splitHere46","4383089splitHere46","mod n"
"2401splitHere46","4383089splitHere46","x"
"2402splitHere46","4383089splitHere46","a"
"2403splitHere46","4383089splitHere46","-x"
"2404splitHere46","4383089splitHere46","mod n"
"2405splitHere46","4383090splitHere46","Number"
"2406splitHere46","4383090splitHere46","Number n1 = (int)1;<newline46mondego>Number n2 = (double)123.456;<newline46mondego><newline46mondego>Float f1 = n1.floatValue();<newline46mondego>Float f2 = n2.floatValue();<newline46mondego>"
"2407splitHere46","4383147splitHere46","ArrayList"
"2408splitHere46","4383147splitHere46","iterator()"
"2409splitHere46","4383147splitHere46","initialCapacity"
"2410splitHere46","4383147splitHere46","log2(N)"
"2411splitHere46","4383147splitHere46","initialCapacity"
"2412splitHere46","4383147splitHere46","toArray"
"2413splitHere46","4383147splitHere46","iterator()"
"2414splitHere46","4383147splitHere46","List.size()"
"2415splitHere46","4383147splitHere46","List.get(int)"
"2416splitHere46","4383147splitHere46","for (E e : someList) { ... }"
"2417splitHere46","4383147splitHere46","List.iterator()"
"2418splitHere46","4383147splitHere46","Collections.sort"
"2419splitHere46","4383147splitHere46","FixedSizedArray"
"2420splitHere46","4383147splitHere46","ArrayList"
"2421splitHere46","4383274splitHere46","for(Item item: lst)<newline46mondego>{<newline46mondego>  op(item);<newline46mondego>}<newline46mondego>"
"2422splitHere46","4383421splitHere46","instanceof"
"2423splitHere46","4383421splitHere46","getClass()"
"2424splitHere46","4383520splitHere46","InputStreamReader"
"2425splitHere46","4383520splitHere46","Charset"
"2426splitHere46","4383520splitHere46","// â†“ whatever the input's encoding is<newline46mondego>Charset inputCharset = Charset.forName(<doubleQuotes46>ISO-8859-1<doubleQuotes46>);<newline46mondego>InputStreamReader isr = new InputStreamReader(fis, inputCharset));<newline46mondego>"
"2427splitHere46","4383520splitHere46","InputStreamReader isr = new InputStreamReader(fis, <doubleQuotes46>ISO-8859-1<doubleQuotes46>));<newline46mondego>"
"2428splitHere46","4383520splitHere46","InputStreamReader(InputStream in, Charset cs)"
"2429splitHere46","4383520splitHere46","Charset.forName(String charsetName)"
"2430splitHere46","4383520splitHere46","Charset.defaultCharset()"
"2431splitHere46","4383633splitHere46","doThrow(new RuntimeException(<doubleQuotes46>dummy exception<doubleQuotes46>)).when(mockObj).someMethod(isA(Foo.class));<newline46mondego>"
"2432splitHere46","4384167splitHere46","e"
"2433splitHere46","4384167splitHere46","throws IOException"
"2434splitHere46","4384167splitHere46","public void foo() throws IOException {<newline46mondego>    Document document = Jsoup.connect(url).get();<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2435splitHere46","4384413splitHere46","CallableStatement"
"2436splitHere46","4384577splitHere46","while"
"2437splitHere46","4384577splitHere46","notify"
"2438splitHere46","4384577splitHere46","notify"
"2439splitHere46","4384577splitHere46","wait"
"2440splitHere46","4384683splitHere46","public static List<Integer> weirdFunction(List<Integer> criteria, List<Integer> candidateNumbers) {<newline46mondego>    List<Integer> results = new ArrayList<Integer>();    <newline46mondego>    for (int occurrenceCount = 0; occurrenceCount < criteria.size(); occurrenceCount++) {<newline46mondego>        int thisMany = criteria.get(occurrenceCount);<newline46mondego>        for (int i=0; i < thisMany; i++) {<newline46mondego>            Integer theChoice = candidateNumbers.get(new Random().nextInt(candidateNumbers.size()));<newline46mondego>            for (int ct=0; ct < occurrenceCount; ct++) {<newline46mondego>                results.add(theChoice);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    Collections.shuffle(results);<newline46mondego>    return results;<newline46mondego>}<newline46mondego>"
"2441splitHere46","4384683splitHere46","criteria"
"2442splitHere46","4384683splitHere46","candidateNumbers"
"2443splitHere46","4384683splitHere46","criteria"
"2444splitHere46","4384683splitHere46","{1, 1, 1}"
"2445splitHere46","4384770splitHere46","activation.jar"
"2446splitHere46","4384795splitHere46","EEE MMM dd HH:mm:ss zzz yyyy<newline46mondego>"
"2447splitHere46","4385071splitHere46","ProcessBuilder"
"2448splitHere46","4385071splitHere46","public Process exec(        <newline46mondego>        String programName,<newline46mondego>        Integer maxSize,<newline46mondego>        Integer maxSizeO,<newline46mondego>        String[] inFiles,<newline46mondego>        String outFile) throws IOException {<newline46mondego><newline46mondego><newline46mondego>    ProcessBuilder pb = new ProcessBuilder();<newline46mondego><newline46mondego>    List<String> cmd = new ArrayList<String>();<newline46mondego>    cmd.add(programName);<newline46mondego>    if (maxSize != null) {<newline46mondego>        cmd.add(<doubleQuotes46>-a<doubleQuotes46>);<newline46mondego>        cmd.add(<doubleQuotes46><doubleQuotes46> + maxSize);<newline46mondego>    }<newline46mondego>    if (maxSizeO != null) {<newline46mondego>        cmd.add(<doubleQuotes46>-o<doubleQuotes46>);<newline46mondego>        cmd.add(<doubleQuotes46><doubleQuotes46> + maxSizeO);<newline46mondego>    }<newline46mondego>    if (inFiles != null) {<newline46mondego>        cmd.addAll(Arrays.asList(inFiles));<newline46mondego>    }<newline46mondego>    if (outFile != null) {<newline46mondego>        cmd.add(outFile);<newline46mondego>    }<newline46mondego><newline46mondego>    Process p = pb.start();<newline46mondego><newline46mondego>    return p;<newline46mondego>}<newline46mondego>"
"2449splitHere46","4385150splitHere46","byte"
"2450splitHere46","4385150splitHere46","int"
"2451splitHere46","4385150splitHere46","long"
"2452splitHere46","4385150splitHere46","int"
"2453splitHere46","4385150splitHere46","long"
"2454splitHere46","4385150splitHere46","Long"
"2455splitHere46","4385150splitHere46","test"
"2456splitHere46","4385150splitHere46","public static void test(Object a)<newline46mondego>{<newline46mondego>    System.out.println(a.getClass());<newline46mondego>}<newline46mondego>"
"2457splitHere46","4385150splitHere46","class java.lang.Long"
"2458splitHere46","4385269splitHere46","DecoratedStackPanel"
"2459splitHere46","4385269splitHere46","@external"
"2460splitHere46","4385304splitHere46","if (i == 1) {<newline46mondego>"
"2461splitHere46","4385304splitHere46","if (i == -1) {<newline46mondego>"
"2462splitHere46","4385304splitHere46","if (i <= 0) {<newline46mondego>"
"2463splitHere46","4385304splitHere46","os.write(mybytearray, 0, mybytearray.length);<newline46mondego>"
"2464splitHere46","4385304splitHere46","os.write(mybytearray, 0, i);<newline46mondego>"
"2465splitHere46","4385304splitHere46","os.flush();"
"2466splitHere46","4385304splitHere46","while"
"2467splitHere46","4385360splitHere46","var markerOptions = {... put your image, variables and google.maps.Map object here };<newline46mondego>var marker = new google.maps.Marker(markerOptions);<newline46mondego>"
"2468splitHere46","4385419splitHere46","try<newline46mondego>{<newline46mondego>  // create a java mysql database connection<newline46mondego>  String myDriver = <doubleQuotes46>org.gjt.mm.mysql.Driver<doubleQuotes46>;<newline46mondego>  String myUrl = <doubleQuotes46>jdbc:mysql://localhost/test<doubleQuotes46>;<newline46mondego>  Class.forName(myDriver);<newline46mondego>  Connection conn = DriverManager.getConnection(myUrl, <doubleQuotes46>root<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>  // your prepstatements goes here...<newline46mondego><newline46mondego>  conn.close();<newline46mondego>}<newline46mondego>catch (Exception e)<newline46mondego>{<newline46mondego>  System.err.println(<doubleQuotes46>Got an exception! <doubleQuotes46>);<newline46mondego>  System.err.println(e.getMessage());<newline46mondego>}<newline46mondego>"
"2469splitHere46","4385438splitHere46","Double"
"2470splitHere46","4385438splitHere46","copy.get( 0 ) .get( 0 ) = -1.0; <newline46mondego><newline46mondego>// original at ( 0,0 ) remains the same ... <newline46mondego>"
"2471splitHere46","4385438splitHere46","import java.util.Arrays;<newline46mondego>import java.util.List;<newline46mondego>import java.util.ArrayList;<newline46mondego><newline46mondego>public class CopyMatrix { <newline46mondego>    public static void main( String [] args ) { <newline46mondego><newline46mondego>        Matrix m = new Matrix();<newline46mondego>        m.add( Arrays.asList(0.0, 1.0, 2.0 ));<newline46mondego>        m.add( Arrays.asList(3.0, 4.0, 5.0 ));<newline46mondego>        m.add( Arrays.asList(6.0, 7.0, 8.0 ));<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>m = \n<doubleQuotes46> +  m );<newline46mondego><newline46mondego>        Matrix m1 = m.copy() ;<newline46mondego><newline46mondego>        m1.get( 0 ).set( 0 , 100.0 );<newline46mondego>        m1.get( 2 ).set( 2 , -400.0 );<newline46mondego><newline46mondego><newline46mondego>        System.out.printf( <doubleQuotes46>After m = %n %s %n m1 = %n %s %n<doubleQuotes46>, m, m1);<newline46mondego>    }<newline46mondego>}<newline46mondego>class Matrix extends ArrayList<List<Double>> {<newline46mondego>    public Matrix copy() {<newline46mondego>        Matrix copy = new Matrix();<newline46mondego>        for( List<Double> each : this ) { <newline46mondego>            copy.add( new ArrayList<Double>( each ) );<newline46mondego>        }<newline46mondego>        return copy;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2472splitHere46","4385438splitHere46","java CopyMatrix <newline46mondego>m = <newline46mondego>[[0.0, 1.0, 2.0], [3.0, 4.0, 5.0], [6.0, 7.0, 8.0]]<newline46mondego>After m = <newline46mondego> [[0.0, 1.0, 2.0], [3.0, 4.0, 5.0], [6.0, 7.0, 8.0]] <newline46mondego> m1 = <newline46mondego> [[100.0, 1.0, 2.0], [3.0, 4.0, 5.0], [6.0, 7.0, -400.0]] <newline46mondego>"
"2473splitHere46","4385443splitHere46","http:"
"2474splitHere46","4385443splitHere46","//www.google.com"
"2475splitHere46","4385443splitHere46","//"
"2476splitHere46","4385767splitHere46","import org.eclipse.swt.events.ControlAdapter;<newline46mondego>import org.eclipse.swt.events.ControlEvent;<newline46mondego>import org.eclipse.swt.graphics.Rectangle;<newline46mondego>import org.eclipse.swt.widgets.Display;<newline46mondego>import org.eclipse.swt.widgets.Shell;<newline46mondego><newline46mondego>public class TestWindow {<newline46mondego><newline46mondego>    private static int CONST_WIDTH = 200;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Display display = new Display();<newline46mondego>        final Shell shell = new Shell(display);<newline46mondego>        shell.setBounds(shell.getBounds().x, shell.getBounds().y, CONST_WIDTH, shell.getBounds().height);<newline46mondego>        shell.setText(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego><newline46mondego>        shell.addControlListener(new ControlAdapter() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void controlResized(ControlEvent e) {<newline46mondego>                Rectangle rect = shell.getBounds();<newline46mondego>                if(rect.width != CONST_WIDTH) {<newline46mondego>                    shell.setBounds(rect.x, rect.y, CONST_WIDTH, rect.height);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        shell.open();<newline46mondego>        while(!shell.isDisposed()) {<newline46mondego>            if(!display.readAndDispatch()) {<newline46mondego>                display.sleep();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        display.dispose();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2477splitHere46","4385829splitHere46","Hello.UnderHello"
"2478splitHere46","4385829splitHere46","Hello.UnderHello x = new Hello.UnderHello(); // this will not work <newline46mondego>                   // at least not from everywhere <newline46mondego>"
"2479splitHere46","4385829splitHere46","UnderHello"
"2480splitHere46","4385829splitHere46","static"
"2481splitHere46","4385871splitHere46","for (Map.Entry<String, String> entry : p2p.entrySet()) {<newline46mondego>    String key = entry.getKey();<newline46mondego>    String value = entry.getValue();<newline46mondego>}<newline46mondego>"
"2482splitHere46","4386222splitHere46","null"
"2483splitHere46","4386283splitHere46","Field fieldlist[] = this.getClass().getDeclaredFields();<newline46mondego>"
"2484splitHere46","4386457splitHere46","Text text = new Text(shell, SWT.BORDER);<newline46mondego>    text.addModifyListener(new ModifyListener() {<newline46mondego>        @Override<newline46mondego>        public void modifyText(ModifyEvent e) {<newline46mondego>            if(timer != null){<newline46mondego>                timer.cancel();<newline46mondego>            }<newline46mondego>            timer = new Timer();                <newline46mondego>            timer.schedule(new TimerTask() {<newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego>                    //handler<newline46mondego>                    System.out<newline46mondego>                        .println(<doubleQuotes46>MainClass.main(...).new SelectionAdapter() {...}.widgetSelected(...).new TimerTask() {...}.run()<doubleQuotes46>);<newline46mondego>                    timer.cancel();<newline46mondego>                }<newline46mondego>            }, 1000);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"2485splitHere46","4386462splitHere46","<target name=<doubleQuotes46>unexplode<doubleQuotes46> description=<doubleQuotes46>Undeploy the exploded archive<doubleQuotes46>><newline46mondego>        <delete failonerror=<doubleQuotes46>no<doubleQuotes46>><newline46mondego>            <fileset dir=<doubleQuotes46>${ear.deploy.dir}<doubleQuotes46>><newline46mondego>                <exclude name=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego>            </fileset><newline46mondego>        </delete><newline46mondego>        <delete file=<doubleQuotes46>${deploy.dir}/${project.name}-ds.xml<doubleQuotes46> failonerror=<doubleQuotes46>no<doubleQuotes46>/><newline46mondego>        <delete dir=<doubleQuotes46>${ear.deploy.dir}<doubleQuotes46> failonerror=<doubleQuotes46>no<doubleQuotes46>/><newline46mondego></target><newline46mondego>"
"2486splitHere46","4386462splitHere46","<target name=<doubleQuotes46>restart-exploded<doubleQuotes46>><newline46mondego>    <antcall target=<doubleQuotes46>explode<doubleQuotes46>/><newline46mondego>    <touch file=<doubleQuotes46>${ear.deploy.dir}/META-INF/application.xml<doubleQuotes46>/><newline46mondego></target><newline46mondego>"
"2487splitHere46","4386657splitHere46","$SMX_HOME/etc/my.config.cfg"
"2488splitHere46","4386657splitHere46","<!-- get properties as bean from OSGi Configuration Admin Service --><newline46mondego><osgix:cm-properties id=<doubleQuotes46>myConfig<doubleQuotes46> persistent-id=<doubleQuotes46>my.config<doubleQuotes46> /><newline46mondego><newline46mondego><!-- activate ${...} placeholder --><newline46mondego><ctx:property-placeholder properties-ref=<doubleQuotes46>myConfig<doubleQuotes46> /><newline46mondego>"
"2489splitHere46","4386788splitHere46","computeSize(SWT.DEFAULT, SWT.DEFAULT)"
"2490splitHere46","4386788splitHere46","SWT.DEFAULT"
"2491splitHere46","4386788splitHere46","computeSize"
"2492splitHere46","4386788splitHere46","setSize"
"2493splitHere46","4386827splitHere46","SWT"
"2494splitHere46","4386827splitHere46","Display.getDefault().getSystemColor(SWT.COLOR_TITLE_INACTIVE_FOREGROUND)<newline46mondego>"
"2495splitHere46","4386827splitHere46","Display.getDefault().getSystemColor(SWT.COLOR_TITLE_FOREGROUND)<newline46mondego>"
"2496splitHere46","4386901splitHere46","Class.getConstructor(paramsTypes...)"
"2497splitHere46","4386901splitHere46","newInstance(..)"
"2498splitHere46","4386901splitHere46","Compressor.class.getConstructor(Class.class).newInstance(Some.class);<newline46mondego>"
"2499splitHere46","4386912splitHere46","searchCombo.getSelectedItem().getValue().toString();<newline46mondego>"
"2500splitHere46","4387218splitHere46","Settings -> Code Style -> Imports"
"2501splitHere46","4387414splitHere46","<copy todir=<doubleQuotes46>${deployed_jre_dir}<doubleQuotes46>><newline46mondego>  <fileset dir=<doubleQuotes46>${system_jre_dir}<doubleQuotes46> excludesfile=<doubleQuotes46>jre_excludes.properties<doubleQuotes46> <newline46mondego></copy><newline46mondego>"
"2502splitHere46","4387414splitHere46","# per the README from the JRE, these files are for the browser plugin and are not needed otherwise<newline46mondego>#bin/javaw.exe<newline46mondego>bin/javaws.exe<newline46mondego>bin/javacpl.exe<newline46mondego>bin/jucheck.exe<newline46mondego>bin/jusched.exe<newline46mondego>bin/wsdetect.dll<newline46mondego>bin/NPJPI*.dll<newline46mondego>bin/NPJava*<newline46mondego>bin/NPOJI610.dll<newline46mondego>bin/RegUtils.dll<newline46mondego>bin/axbridge.dll<newline46mondego>bin/deploy.dll<newline46mondego>bin/jpicom.dll<newline46mondego>bin/javacpl.cpl<newline46mondego>bin/jpiexp.dll<newline46mondego>bin/jpinscp.dll<newline46mondego>bin/jpioji.dll<newline46mondego>bin/jpishare.dll<newline46mondego>lib/deploy.jar<newline46mondego>lib/plugin.jar<newline46mondego>lib/javaws.jar<newline46mondego>lib/javaws/messages*<newline46mondego>lib/javaws/miniSplash.jpg<newline46mondego>bin/new_plugin**<newline46mondego>bin/jureg*<newline46mondego>bin/ssv*<newline46mondego>bin/jqs*<newline46mondego>bin/jp2*<newline46mondego>lib/deploy/**/*<newline46mondego><newline46mondego># if you do not need any RMI stuff<newline46mondego># wildcard to catch .exe files on Windows<newline46mondego># note rmi.dll is not excluded, which is needed by jconsole; add rmi.dll if you do not need jsonsole<newline46mondego>bin/jbroker*<newline46mondego>bin/java-rmi*<newline46mondego>bin/rmid*<newline46mondego>bin/rmiregistry*<newline46mondego>bin/tnameserv*<newline46mondego>bin/orbd*<newline46mondego>bin/servertool*<newline46mondego><newline46mondego># do not include QuickTime<newline46mondego># this will be in the jre dir for machines that have QT installed<newline46mondego>lib/ext/QTJava.zip<newline46mondego>"
"2503splitHere46","4387420splitHere46","XStream.useAttributeFor(...)"
"2504splitHere46","4387445splitHere46","List"
"2505splitHere46","4387445splitHere46","ArrayList"
"2506splitHere46","4387445splitHere46","List"
"2507splitHere46","4387445splitHere46","AbstractList"
"2508splitHere46","4387445splitHere46","List"
"2509splitHere46","4387458splitHere46","// sourceCode is a string containing all the source file's text<newline46mondego>var sourceCode = <doubleQuotes46>...<doubleQuotes46>;<newline46mondego><newline46mondego>// startIndex is the index of the char AFTER the opening brace<newline46mondego>// for the method we are interested in<newline46mondego>var methodStartIndex = 42;<newline46mondego><newline46mondego>var openBraces = 1;<newline46mondego>var insideLiteralString = false;<newline46mondego>var insideVerbatimString = false;<newline46mondego>var insideBlockComment = false;<newline46mondego>var lastChar = ' '; // White space is ignored by the C# parser,<newline46mondego>                    // so a space is a good <doubleQuotes46>neutral<doubleQuotes46> character<newline46mondego><newline46mondego>for (var i = methodStartIndex; openBraces > 0; ++i) {<newline46mondego>    var ch = sourceCode[i];<newline46mondego><newline46mondego>    switch (ch) {<newline46mondego>        case '{':<newline46mondego>            if (!insideBlockComment && !insideLiteralString && !insideVerbatimString) {<newline46mondego>                ++openBraces;<newline46mondego>            }<newline46mondego>            break;<newline46mondego>        case '}':<newline46mondego>            if (!insideBlockComment && !insideLiteralString && !insideVerbatimString) {<newline46mondego>                --openBraces;<newline46mondego>            }<newline46mondego>            break;<newline46mondego>        case '<doubleQuotes46>':<newline46mondego>            if (insideBlockComment) {<newline46mondego>                continue;<newline46mondego>            }<newline46mondego>            if (insideLiteralString) {<newline46mondego>                // <doubleQuotes46>Step out<doubleQuotes46> of the string if this is the closing quote<newline46mondego>                insideLiteralString = lastChar != '\';<newline46mondego>            }<newline46mondego>            else if (insideVerbatimString) {<newline46mondego>                // If this quote is part of a two-quote pair, do NOT step out<newline46mondego>                // (it means the string contains a literal quote)<newline46mondego><newline46mondego>                // This can throw, but only for source files with syntax errors<newline46mondego>                // I 'm ignoring this possibility here...<newline46mondego>                var nextCh = sourceCode[i + 1]; <newline46mondego><newline46mondego>                if (nextCh == '<doubleQuotes46>') {<newline46mondego>                    ++i; // skip that next quote<newline46mondego>                }<newline46mondego>                else {<newline46mondego>                    insideVerbatimString = false;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            else {<newline46mondego>                if (lastChar == '@') {<newline46mondego>                    insideVerbatimString = true;<newline46mondego>                }<newline46mondego>                else {<newline46mondego>                    insideLiteralString = true;<newline46mondego>                }<newline46mondego>            }<newline46mondego>            break;<newline46mondego>        case '/':<newline46mondego>            if (insideLiteralString || insideVerbatimString) {<newline46mondego>                continue;<newline46mondego>            }<newline46mondego><newline46mondego>            // TODO: parse this<newline46mondego>            // It can start a line comment, if followed by /<newline46mondego>            // It can start a block comment, if followed by *<newline46mondego>            // It can end a block comment, if preceded by *<newline46mondego><newline46mondego>            // Line comments are intended to be handled by just incrementing i<newline46mondego>            // until you see a CR and/or LF, hence no insideLineComment flag.<newline46mondego>            break;<newline46mondego>    }<newline46mondego><newline46mondego>    lastChar = ch;<newline46mondego>}<newline46mondego><newline46mondego>// From the values of methodStartIndex and i we can now do sourceCode.Substring and get the method source<newline46mondego>"
"2510splitHere46","4387534splitHere46","package blog.immutable;<newline46mondego><newline46mondego>public class Customer {<newline46mondego><newline46mondego>    private final String name;<newline46mondego>    private final Address address;<newline46mondego><newline46mondego>    public Customer(String name, Address address) {<newline46mondego>        this.name = name;<newline46mondego>        this.address = address;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public Address getAddress() {<newline46mondego>        return address;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2511splitHere46","4387534splitHere46","package blog.immutable.adpater;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlAttribute;<newline46mondego>import blog.immutable.Address;<newline46mondego><newline46mondego>public class AdaptedCustomer {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private Address address;<newline46mondego><newline46mondego>    @XmlAttribute<newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public Address getAddress() {<newline46mondego>        return address;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAddress(Address address) {<newline46mondego>        this.address = address;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2512splitHere46","4387534splitHere46","package blog.immutable.adpater;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.adapters.XmlAdapter;<newline46mondego>import blog.immutable.Customer;<newline46mondego><newline46mondego>public class CustomerAdapter extends XmlAdapter<AdaptedCustomer, Customer> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Customer unmarshal(AdaptedCustomer adaptedCustomer) throws Exception {<newline46mondego>        return new Customer(adaptedCustomer.getName(), adaptedCustomer.getAddress());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public AdaptedCustomer marshal(Customer customer) throws Exception {<newline46mondego>        AdaptedCustomer adaptedCustomer = new AdaptedCustomer();<newline46mondego>        adaptedCustomer.setName(customer.getName());<newline46mondego>        adaptedCustomer.setAddress(customer.getAddress());<newline46mondego>        return adaptedCustomer;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2513splitHere46","4387534splitHere46","package blog.immutable;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;<newline46mondego>import blog.immutable.adpater.CustomerAdapter;<newline46mondego><newline46mondego>@XmlRootElement(name=<doubleQuotes46>purchase-order<doubleQuotes46>)<newline46mondego>public class PurchaseOrder {<newline46mondego><newline46mondego>    private Customer customer;<newline46mondego><newline46mondego>    @XmlJavaTypeAdapter(CustomerAdapter.class)<newline46mondego>    public Customer getCustomer() {<newline46mondego>        return customer;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setCustomer(Customer customer) {<newline46mondego>        this.customer = customer;<newline46mondego>    }<newline46mondego><newline46mondego>} <newline46mondego>"
"2514splitHere46","4387669splitHere46","1285716600"
"2515splitHere46","4387739splitHere46","persist()"
"2516splitHere46","4387739splitHere46","persist()"
"2517splitHere46","4387739splitHere46","public interface FooDao {<newline46mondego>    void persist(Foo foo);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2518splitHere46","4387739splitHere46","public class FooDaoImpl implements FooDao {<newline46mondego>    @PersistenceContext<newline46mondego>    private EntityManager entityManager;<newline46mondego><newline46mondego>    @Transactional<newline46mondego>    public void persist(Foo foo) {<newline46mondego>        entityManager.persist(foo);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2519splitHere46","4387739splitHere46","@RunWith(SpringJunit4ClassRunner.class)<newline46mondego>@ContextConfiguration(...)<newline46mondego>public class FooDaoTest {<newline46mondego>    @Autowired<newline46mondego>    private FooDao fooDao;<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testPersist() {<newline46mondego>        // do some testing<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2520splitHere46","4387749splitHere46","((?:[^_./]+/[^_./]+)|(?:[^_./]+\.[^_./]+)|(?:[^_./]+(?:_[^_./]+)+\.[^_./]+))<newline46mondego>"
"2521splitHere46","4387749splitHere46","#!/usr/bin/perl<newline46mondego>use 5.10.1;<newline46mondego>use strict;<newline46mondego>use warnings;<newline46mondego><newline46mondego>my $str = q!ABC/DEF_abc.def_PQR/STU_ghi_jkl.mno_a_b_c.z_a_b_c_d.z_a_b_c_d_e.z!;<newline46mondego>my $re = qr!((?:[^_./]+/[^_./]+)|(?:[^_./]+\.[^_./]+)|(?:[^_./]+(?:_[^_./]+)+\.[^_./]+))!;<newline46mondego>while($str=~/$re/g) {<newline46mondego>    say $1;<newline46mondego>}<newline46mondego>"
"2522splitHere46","4387749splitHere46","ABC/DEF<newline46mondego>abc.def<newline46mondego>PQR/STU<newline46mondego>ghi_jkl.mno<newline46mondego>a_b_c.z<newline46mondego>a_b_c_d.z<newline46mondego>a_b_c_d_e.z<newline46mondego>"
"2523splitHere46","4387864splitHere46","<intent-filter>"
"2524splitHere46","4387864splitHere46","<activity <newline46mondego>        android:name=<doubleQuotes46>.OAuthForTwitter<doubleQuotes46><newline46mondego>        android:label=<doubleQuotes46>@string/app_name<doubleQuotes46><newline46mondego>        android:configChanges=<doubleQuotes46>orientation|keyboardHidden<doubleQuotes46><newline46mondego>        android:launchMode=<doubleQuotes46>singleInstance<doubleQuotes46>><newline46mondego>        <intent-filter>  <newline46mondego>            <action android:name=<doubleQuotes46>android.intent.action.VIEW<doubleQuotes46>></action>  <newline46mondego>            <category android:name=<doubleQuotes46>android.intent.category.DEFAULT<doubleQuotes46>></category>  <newline46mondego>            <category android:name=<doubleQuotes46>android.intent.category.BROWSABLE<doubleQuotes46>></category>  <newline46mondego>            <data android:scheme=<doubleQuotes46>sosInternational<doubleQuotes46> android:host=<doubleQuotes46>OAuthForTwitter<doubleQuotes46>></data>  <newline46mondego>        </intent-filter><newline46mondego>    </activity><newline46mondego>"
"2525splitHere46","4387950splitHere46","$USER/.netbeans/var/cache/index/s*/java/*/classes"
"2526splitHere46","4387950splitHere46","$USER/.netbeans/var/cache/index"
"2527splitHere46","4387950splitHere46","c:\Users\username"
"2528splitHere46","4387950splitHere46","~username"
"2529splitHere46","4387974splitHere46","return Iterables.size(Iterables.filter(iterable, predicate));<newline46mondego>"
"2530splitHere46","4388011splitHere46","public ListIterator<E> listIterator(final int index) {<newline46mondego>if (index<0 || index>size())<newline46mondego>  throw new IndexOutOfBoundsException(<doubleQuotes46>Index: <doubleQuotes46>+index);<newline46mondego><newline46mondego>return new ListItr(index);<newline46mondego>}<newline46mondego>"
"2531splitHere46","4388011splitHere46","private class ListItr extends Itr implements ListIterator<E> {<newline46mondego>ListItr(int index) {<newline46mondego>    cursor = index;<newline46mondego>}<newline46mondego><newline46mondego>// [...]<newline46mondego>"
"2532splitHere46","4388011splitHere46","public E next() {<newline46mondego>        checkForComodification();<newline46mondego>    try {<newline46mondego>    E next = get(cursor);<newline46mondego>    lastRet = cursor++;<newline46mondego>    return next;<newline46mondego>    } catch (IndexOutOfBoundsException e) {<newline46mondego>    checkForComodification();<newline46mondego>    throw new NoSuchElementException();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2533splitHere46","4388011splitHere46","public E get(int index) {<newline46mondego>RangeCheck(index);<newline46mondego><newline46mondego>return (E) elementData[index];<newline46mondego>}<newline46mondego>"
"2534splitHere46","4388018splitHere46","#{sessionScope.login}<newline46mondego>"
"2535splitHere46","4388018splitHere46","<h:outputText value=<doubleQuotes46>Guest<doubleQuotes46> rendered=<doubleQuotes46>#{sessionScope.login != null}<doubleQuotes46> /><newline46mondego>"
"2536splitHere46","4388067splitHere46","Class.cast"
"2537splitHere46","4388067splitHere46","T result = (T)store.get(e);<newline46mondego>"
"2538splitHere46","4388067splitHere46","T result = exampleClass.cast(store.get(e));<newline46mondego>"
"2539splitHere46","4388188splitHere46","<doubleQuotes46>ADMIN<doubleQuotes46>"
"2540splitHere46","4388188splitHere46","ADMIN"
"2541splitHere46","4388188splitHere46","<doubleQuotes46>STUDENTS<doubleQuotes46>"
"2542splitHere46","4388188splitHere46","STUDENTS"
"2543splitHere46","4388188splitHere46","<doubleQuotes46>"
"2544splitHere46","4388246splitHere46","getLocation()"
"2545splitHere46","4388246splitHere46","Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();<newline46mondego>"
"2546splitHere46","4388338splitHere46","Interval i = new Interval(<newline46mondego>    new DateMidnight(2010, 3, 2), new DateMidnight(2010, 3, 5));<newline46mondego><newline46mondego>i.contains(new DateTime(2010, 3, 1, 23, 59, 59, 999)); // == false<newline46mondego>i.contains(new DateTime(2010, 3, 2, 0, 0, 0, 0)); // == true<newline46mondego>i.contains(new DateTime(2010, 3, 4, 23, 59, 59, 999)); // == true<newline46mondego>i.contains(new DateTime(2010, 3, 5, 0, 0, 0, 0)); // == false<newline46mondego>"
"2547splitHere46","4388377splitHere46","ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);<newline46mondego>scheduler.schedule(new Task(), 30, TimeUnit.SECONDS);<newline46mondego>"
"2548splitHere46","4388377splitHere46","Task"
"2549splitHere46","4388377splitHere46","Runnable"
"2550splitHere46","4388377splitHere46","class Task implements Runnable<newline46mondego>{<newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>        // do your magic here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2551splitHere46","4388377splitHere46","shutdownNow"
"2552splitHere46","4388377splitHere46","// prevents task from executing if it hasn't executed yet<newline46mondego>scheduler.shutdownNow(); <newline46mondego>"
"2553splitHere46","4388453splitHere46","hashCode()"
"2554splitHere46","4388453splitHere46","equals()"
"2555splitHere46","4388453splitHere46","User"
"2556splitHere46","4388453splitHere46","username"
"2557splitHere46","4388453splitHere46","email"
"2558splitHere46","4388453splitHere46","hashCode()"
"2559splitHere46","4388453splitHere46","equals()"
"2560splitHere46","4388453splitHere46","equals()"
"2561splitHere46","4388453splitHere46","hashCode()"
"2562splitHere46","4388542splitHere46","Toolkit.createImage(url)"
"2563splitHere46","4388542splitHere46","ImageIO.read(url)"
"2564splitHere46","4388542splitHere46","private static final int[] RGB_MASKS = {0xFF0000, 0xFF00, 0xFF};<newline46mondego>private static final ColorModel RGB_OPAQUE =<newline46mondego>    new DirectColorModel(32, RGB_MASKS[0], RGB_MASKS[1], RGB_MASKS[2]);<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>String sUrl=<doubleQuotes46>http://img01.taobaocdn.com/imgextra/i1/449400070/T2hbVwXj0XXXXXXXXX_!!449400070.jpg<doubleQuotes46>;<newline46mondego>URL url = new URL(sUrl);<newline46mondego>Image img = Toolkit.getDefaultToolkit().createImage(url);<newline46mondego><newline46mondego>PixelGrabber pg = new PixelGrabber(img, 0, 0, -1, -1, true);<newline46mondego>pg.grabPixels();<newline46mondego>int width = pg.getWidth(), height = pg.getHeight();<newline46mondego><newline46mondego>DataBuffer buffer = new DataBufferInt((int[]) pg.getPixels(), pg.getWidth() * pg.getHeight());<newline46mondego>WritableRaster raster = Raster.createPackedRaster(buffer, width, height, width, RGB_MASKS, null);<newline46mondego>BufferedImage bi = new BufferedImage(RGB_OPAQUE, raster, false, null);<newline46mondego><newline46mondego>String to = <doubleQuotes46>D:/temp/result.jpg<doubleQuotes46>;<newline46mondego>ImageIO.write(bi, <doubleQuotes46>jpg<doubleQuotes46>, new File(to));<newline46mondego>"
"2565splitHere46","4388542splitHere46","Toolkit.createImage()"
"2566splitHere46","4388610splitHere46","try/catch"
"2567splitHere46","4388610splitHere46","stringVariable.matches(<doubleQuotes46>\\d<doubleQuotes46>)"
"2568splitHere46","4388621splitHere46","equals()"
"2569splitHere46","4388621splitHere46","hashCode()"
"2570splitHere46","4388621splitHere46","final Map<A, String> map = new HashMap<A, Object>();<newline46mondego>final A first = new A(<doubleQuotes46>fe<doubleQuotes46>, <doubleQuotes46>fi<doubleQuotes46>, <doubleQuotes46>fo<doubleQuotes46>, <doubleQuotes46>fum<doubleQuotes46>);<newline46mondego><newline46mondego>map.put(first, <doubleQuotes46>success<doubleQuotes46>);<newline46mondego><newline46mondego>// later on<newline46mondego>final A second = new A (<doubleQuotes46>fe<doubleQuotes46>, <doubleQuotes46>fi<doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>System.out.println(map.get(second)); // prints <doubleQuotes46>success<doubleQuotes46>;<newline46mondego>"
"2571splitHere46","4388621splitHere46","Map<A, String>"
"2572splitHere46","4388621splitHere46","A"
"2573splitHere46","4388621splitHere46","field1"
"2574splitHere46","4388621splitHere46","field2"
"2575splitHere46","4388621splitHere46","XYPoint"
"2576splitHere46","4388621splitHere46","A"
"2577splitHere46","4388621splitHere46","A"
"2578splitHere46","4388621splitHere46","String.intern()"
"2579splitHere46","4388621splitHere46","Map"
"2580splitHere46","4388621splitHere46","Set"
"2581splitHere46","4388621splitHere46","Map"
"2582splitHere46","4388621splitHere46","Set"
"2583splitHere46","4388621splitHere46","hashCode"
"2584splitHere46","4388621splitHere46","equals"
"2585splitHere46","4388621splitHere46","// Populate a map, with an A as the key<newline46mondego>final Map<A, String> map = new HashMap<A, Object>();<newline46mondego>final A a = new A(<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>two<doubleQuotes46>, <doubleQuotes46>three<doubleQuotes46>, <doubleQuotes46>four<doubleQuotes46>);<newline46mondego>map.put(a, <doubleQuotes46>here<doubleQuotes46>);<newline46mondego><newline46mondego>// Mutate a<newline46mondego>a.setField1(<doubleQuotes46>un<doubleQuotes46>);<newline46mondego><newline46mondego>// Now look up what we associated with it<newline46mondego>System.out.println(map.get(a)); // prints <doubleQuotes46>null<doubleQuotes46> - huh?<newline46mondego>System.out.println(map.containsKey(a)); // prints <doubleQuotes46>false<doubleQuotes46><newline46mondego>"
"2586splitHere46","4388650splitHere46","gcc-4.0 -arch ppc -isysroot /Developer/SDKs/MacOSX10.4u.sdk/ -mmacosx-version-min=10.3 -o testprog testarch.c<newline46mondego>"
"2587splitHere46","4388650splitHere46","otool -h"
"2588splitHere46","4388650splitHere46","$ otool -h testprogtestprog:<newline46mondego>Mach header<newline46mondego>      magic cputype cpusubtype  caps    filetype ncmds sizeofcmds      flags<newline46mondego> 0xfeedface      18          0  0x00          2    11       1268 0x00000085<newline46mondego>"
"2589splitHere46","4388903splitHere46","import javax.ws.rs.core.Response;<newline46mondego>import javax.ws.rs.core.Response.ResponseBuilder;<newline46mondego><newline46mondego>public Response getFile(String contentType) {<newline46mondego><newline46mondego>        File f = new File(<doubleQuotes46>/tmp/file.doc<doubleQuotes46>);<newline46mondego><newline46mondego>        ResponseBuilder response = Response.ok((Object) f);<newline46mondego>        response.type(contentType);<newline46mondego>        response.header(<doubleQuotes46>Content-Disposition<doubleQuotes46>, <doubleQuotes46>attachment; filename=\<doubleQuotes46>file.doc\<doubleQuotes46><doubleQuotes46>);<newline46mondego>        return response.build();<newline46mondego>    }<newline46mondego>"
"2590splitHere46","4388959splitHere46","org.eclipse.ui.ide.prefs"
"2591splitHere46","4388959splitHere46","RECENT_WORKSPACES"
"2592splitHere46","4388959splitHere46","RECENT_WORKSPACES"
"2593splitHere46","4388959splitHere46","org.eclipse.ui.ide.prefs"
"2594splitHere46","4388959splitHere46","ECLIPSE_HOME/configuration/.settings/"
"2595splitHere46","4388966splitHere46","superpackage com.myorg.myApp.model<newline46mondego>{<newline46mondego>    member package com.myorg.myApp.model.swing;<newline46mondego><newline46mondego>    member package com.myorg.myApp.model.html;<newline46mondego><newline46mondego>    export com.myorg.myApp.model.swing.SEmployee;<newline46mondego>    export com.myorg.myApp.model.swing.SDepartment;<newline46mondego><newline46mondego>    export package com.myorg.myApp.model.html;<newline46mondego>}<newline46mondego>"
"2596splitHere46","4388966splitHere46","public"
"2597splitHere46","4389021splitHere46","activity.runOnUiThread(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        ... do your GUI stuff<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"2598splitHere46","4389050splitHere46","system"
"2599splitHere46","4389223splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.InputEvent;<newline46mondego>import java.awt.event.KeyEvent;<newline46mondego><newline46mondego>public class RobotWrapper {<newline46mondego><newline46mondego>    private static final int STD_DELAY = 35000;<newline46mondego><newline46mondego>    private final Robot robot;<newline46mondego><newline46mondego>    public RobotWrapper() {<newline46mondego>        try {<newline46mondego>            robot = new Robot();<newline46mondego>        } catch (AWTException e) {<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public void doStuff(int x, int y) {<newline46mondego>        robot.keyPress(KeyEvent.VK_CONTROL);<newline46mondego>        robot.mouseMove(x, y);<newline46mondego>        robot.mousePress(InputEvent.BUTTON1_MASK);<newline46mondego>        robot.mouseRelease(InputEvent.BUTTON1_MASK);<newline46mondego>        robot.delay(STD_DELAY);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        RobotWrapper robotWrapper = new RobotWrapper();<newline46mondego>        robotWrapper.doStuff(16, 853);<newline46mondego>        robotWrapper.doStuff(100, 200);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2600splitHere46","4389225splitHere46","ImageIO.write(img, <doubleQuotes46>BMP<doubleQuotes46>, new File(<doubleQuotes46>filename.bmp<doubleQuotes46>));<newline46mondego>"
"2601splitHere46","4389225splitHere46","BufferedImage"
"2602splitHere46","4389225splitHere46","FileOutputStream"
"2603splitHere46","4389271splitHere46","District"
"2604splitHere46","4389271splitHere46","District"
"2605splitHere46","4389271splitHere46","GWT.create(District.class)"
"2606splitHere46","4389309splitHere46","PrintStream.print()"
"2607splitHere46","4389309splitHere46","PrintStream.write()"
"2608splitHere46","4389309splitHere46","csv"
"2609splitHere46","4389309splitHere46","putNextEntry()"
"2610splitHere46","4389342splitHere46","TOMCAT_HOME/bin/startup.bat"
"2611splitHere46","4389342splitHere46","startup.sh"
"2612splitHere46","4389342splitHere46","tomcat6.exe"
"2613splitHere46","4389342splitHere46","tomcat6w.exe"
"2614splitHere46","4389342splitHere46","Services.msc"
"2615splitHere46","4389342splitHere46","Run"
"2616splitHere46","4389342splitHere46","Apache Tomcat 6"
"2617splitHere46","4389507splitHere46","ArrayList.toString()"
"2618splitHere46","4389507splitHere46","StringBuilder builder = new StringBuilder();<newline46mondego>for (String value : publicArray) {<newline46mondego>    builder.append(value);<newline46mondego>}<newline46mondego>String text = builder.toString();<newline46mondego>"
"2619splitHere46","4389507splitHere46","publicArray"
"2620splitHere46","4389560splitHere46","Calendar c = Calendar.getInstance();<newline46mondego>long now = c.getTimeInMillis();<newline46mondego>c.set(Calendar.HOUR_OF_DAY, 0);<newline46mondego>c.set(Calendar.MINUTE, 0);<newline46mondego>c.set(Calendar.SECOND, 0);<newline46mondego>c.set(Calendar.MILLISECOND, 0);<newline46mondego>long passed = now - c.getTimeInMillis();<newline46mondego>long secondsPassed = passed / 1000;<newline46mondego>"
"2621splitHere46","4389560splitHere46","DateTime now = new DateTime();<newline46mondego>DateTime midnight = now.withTimeAtStartOfDay();<newline46mondego>Duration duration = new Duration(midnight, now);<newline46mondego>int seconds = duration.toStandardSeconds().getSeconds();<newline46mondego>"
"2622splitHere46","4389592splitHere46","@RequestBody"
"2623splitHere46","4389592splitHere46","@ResponseBody"
"2624splitHere46","4389592splitHere46","HttpMessageConverter"
"2625splitHere46","4389592splitHere46","ViewResolver"
"2626splitHere46","4389592splitHere46","MarshallingHttpMessageConverter"
"2627splitHere46","4389592splitHere46","HttpMessageConverter"
"2628splitHere46","4389592splitHere46","AnnotationMethodHandlerAdapter"
"2629splitHere46","4389592splitHere46","HttpMessageConveter"
"2630splitHere46","4389592splitHere46","BeanPostProcessor"
"2631splitHere46","4389592splitHere46","public class Configurer implements BeanPostProcessor {<newline46mondego>    public void postProcessAfterInitialization(String name, Object bean) {<newline46mondego>        if (bean instanceof AnnotationMethodHandlerAdapter) {<newline46mondego>            AnnotationMethodHandlerAdapter a = (AnnotationMethodHandlerAdapter) bean;<newline46mondego>            HttpMessageConverter[] convs = a.getMessageConverters();<newline46mondego>            ... add new converter ...<newline46mondego>            a.setMessageConverters(convs);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"2632splitHere46","4389627splitHere46","if (request instanceof HttpServletRequest) {<newline46mondego> String url = ((HttpServletRequest)request).getRequestURL().toString();<newline46mondego> String queryString = ((HttpServletRequest)request).getQueryString();<newline46mondego>}<newline46mondego>"
"2633splitHere46","4389627splitHere46","System.out.println(url + <doubleQuotes46>?<doubleQuotes46> + queryString);<newline46mondego>"
"2634splitHere46","4389627splitHere46","HttpServletRequest.getRequestURL()"
"2635splitHere46","4389627splitHere46","HttpServletRequest.getQueryString()"
"2636splitHere46","4390136splitHere46","context.setResourceBase(<doubleQuotes46>/path-to-your-project/WebContent<doubleQuotes46>);<newline46mondego>context.setDescriptor(<doubleQuotes46>/path-to-your-project/WebContent/WEB-INF/web.xml<doubleQuotes46>);<newline46mondego>"
"2637splitHere46","4390136splitHere46","context.setWar(<doubleQuotes46>/path-to-your-project/WebContent<doubleQuotes46>);<newline46mondego>"
"2638splitHere46","4390136splitHere46","Resource jettyConfig = Resource.newSystemResource(<doubleQuotes46>jetty.xml<doubleQuotes46>);<newline46mondego>XmlConfiguration configuration = new XmlConfiguration(jettyConfig.getInputStream());<newline46mondego>Server server = (Server)configuration.configure();<newline46mondego><newline46mondego>WebAppContext wac = new WebAppContext();<newline46mondego>wac.setResourceBase(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>wac.setDescriptor(<doubleQuotes46>WEB-INF/web.xml<doubleQuotes46>);<newline46mondego>wac.setContextPath(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>wac.setParentLoaderPriority(true);<newline46mondego>server.setHandler(wac);<newline46mondego><newline46mondego>server.start();<newline46mondego>"
"2639splitHere46","4390143splitHere46","<newline46mondego>/*<newline46mondego> *<newline46mondego> * Currency converting<newline46mondego> *<newline46mondego> */<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JTextField;<newline46mondego>import java.awt.GridLayout;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import javax.swing.JComboBox;<newline46mondego><newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>public class CurrencyConverterWin extends JFrame {<newline46mondego><newline46mondego>    private JLabel promptLabel;<newline46mondego>    private JTextField amountField;<newline46mondego>    private JButton goButton;<newline46mondego>    private JPanel inputPanel;<newline46mondego>    private JPanel answerPanel;<newline46mondego>    private JLabel answerLabel;<newline46mondego>    private JLabel selectLabel;<newline46mondego>    private JComboBox currencyMenuBar;<newline46mondego>    private JPanel menuPanel;<newline46mondego>    private double result = 0.0;<newline46mondego>    private double euro = 1.22257;<newline46mondego>    private double japYen = 152.073;<newline46mondego>    private double rusRuble = 42.5389;<newline46mondego>    private double usd = 1.5577;<newline46mondego><newline46mondego>    public CurrencyConverterWin() {<newline46mondego>        super();<newline46mondego>        this.setSize(500, 200);<newline46mondego>        this.setTitle(<doubleQuotes46>Currency Converter Window<doubleQuotes46>);<newline46mondego>        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego><newline46mondego>        this.setLayout(new GridLayout(3, 1));<newline46mondego><newline46mondego>        this.selectLabel = new JLabel(<doubleQuotes46>Select a currency to convert to: <doubleQuotes46>, JLabel.RIGHT);<newline46mondego>        this.answerLabel = new JLabel(<doubleQuotes46> <doubleQuotes46>, JLabel.CENTER);<newline46mondego><newline46mondego>        currencyMenuBar = new JComboBox(new String[]{<doubleQuotes46>Euros<doubleQuotes46>,<doubleQuotes46>Japanese Yen<doubleQuotes46>,<doubleQuotes46>Russian Rubles<doubleQuotes46>,<doubleQuotes46>US Dollars<doubleQuotes46>});<newline46mondego><newline46mondego>        this.menuPanel = new JPanel();<newline46mondego>        this.menuPanel.add(this.selectLabel);<newline46mondego>        this.menuPanel.add(this.currencyMenuBar);<newline46mondego>        this.add(this.menuPanel);<newline46mondego><newline46mondego>        this.promptLabel = new JLabel(<doubleQuotes46>(select a currency first) <doubleQuotes46>, JLabel.RIGHT);<newline46mondego>        this.answerLabel = new JLabel(<doubleQuotes46> <doubleQuotes46>, JLabel.CENTER);<newline46mondego><newline46mondego>        this.amountField = new JTextField(<doubleQuotes46><doubleQuotes46>, 8);<newline46mondego>        this.goButton = new JButton(<doubleQuotes46>GO<doubleQuotes46>);<newline46mondego>        goButton.addActionListener(new java.awt.event.ActionListener() {<newline46mondego><newline46mondego>            public void actionPerformed(java.awt.event.ActionEvent evt) {<newline46mondego>                buttonClicked(evt);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        this.inputPanel = new JPanel();<newline46mondego>        this.inputPanel.add(this.promptLabel);<newline46mondego>        this.inputPanel.add(this.amountField);<newline46mondego>        this.inputPanel.add(this.goButton);<newline46mondego><newline46mondego>        this.add(this.inputPanel);<newline46mondego><newline46mondego>        this.answerPanel = new JPanel();<newline46mondego>        this.answerPanel.add(this.answerLabel);<newline46mondego>        this.add(this.answerPanel);<newline46mondego>    }<newline46mondego><newline46mondego>    double EuroToSterling() {<newline46mondego>        double total = Double.parseDouble(amountField.getText()) * euro;<newline46mondego>        return total;<newline46mondego>    }<newline46mondego><newline46mondego>    double JapYenToSterling()<newline46mondego>    {<newline46mondego>        double japToSterlingTotal = Double.parseDouble(amountField.getText()) * japYen;<newline46mondego>        return japToSterlingTotal;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>//String currencyEntered = yearField.getText();<newline46mondego>    public void buttonClicked(ActionEvent evt) {<newline46mondego>        if(currencyMenuBar.getSelectedItem().equals(<doubleQuotes46>Euros<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            answerLabel.setText(EuroToSterling() + <doubleQuotes46> Euros<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        if(currencyMenuBar.getSelectedItem().equals(<doubleQuotes46>Japanese Yen<doubleQuotes46>))<newline46mondego>        {<newline46mondego>            answerLabel.setText(JapYenToSterling() + <doubleQuotes46> Japanese Yen<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {        <newline46mondego>        try{UIManager.setLookAndFeel(<doubleQuotes46>com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel<doubleQuotes46>);}<newline46mondego>        catch (Exception e){e.printStackTrace();}<newline46mondego>        CurrencyConverterWin win = new CurrencyConverterWin();<newline46mondego>        win.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2640splitHere46","4390213splitHere46","x ?: y"
"2641splitHere46","4390213splitHere46","x != null ? x : y"
"2642splitHere46","4390231splitHere46","label"
"2643splitHere46","4390231splitHere46","<h:inputText label=<doubleQuotes46>User ID<doubleQuotes46> /><newline46mondego><h:inputSecret label=<doubleQuotes46>Password<doubleQuotes46> /><newline46mondego>"
"2644splitHere46","4390231splitHere46","prependId=<doubleQuotes46>false<doubleQuotes46>"
"2645splitHere46","4390266splitHere46","ItemListener"
"2646splitHere46","4390266splitHere46","implements ItemListener"
"2647splitHere46","4390266splitHere46","itemStateChanged"
"2648splitHere46","4390266splitHere46","ItemListener"
"2649splitHere46","4390266splitHere46","itemStateChanged"
"2650splitHere46","4390266splitHere46","SwingUtilities.invokeLater"
"2651splitHere46","4390299splitHere46","class MyArray {<newline46mondego>   private $my_array;<newline46mondego><newline46mondego>   function  __construct() {<newline46mondego>      $this->my_array = array();<newline46mondego>   }<newline46mondego><newline46mondego>   public function setMyArray($value) {<newline46mondego>      $this->my_array = $value;<newline46mondego>   }<newline46mondego><newline46mondego>   public function getMyArray() {<newline46mondego>      return $this->my_array;<newline46mondego>   }<newline46mondego><newline46mondego>   public function getLastElement() {<newline46mondego>      $last_elem = array_reverse($this->getMyArray());<newline46mondego>      return $last_elem[0];<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>$myArr = new MyArray();<newline46mondego>$a[] = <doubleQuotes46>Hello<doubleQuotes46>; // use this instead of array_push<newline46mondego>$a[] = <doubleQuotes46>World<doubleQuotes46>;<newline46mondego>$myArr->setMyArray($a);<newline46mondego>echo <doubleQuotes46>My Array:<pre><doubleQuotes46>.print_r($myArr->getMyArray(),true).<doubleQuotes46></pre><br />\n<doubleQuotes46>;<newline46mondego>echo <doubleQuotes46>Last Element: <doubleQuotes46>.$myArr->getLastElement().<doubleQuotes46><br />\n<doubleQuotes46>;<newline46mondego><newline46mondego>$a[] = <doubleQuotes46>Yet another element<doubleQuotes46>;<newline46mondego>$myArr->setMyArray($a);<newline46mondego>echo <doubleQuotes46>My Array Again:<pre><doubleQuotes46>.print_r($myArr->getMyArray(),true).<doubleQuotes46></pre><br />\n<doubleQuotes46>;<newline46mondego>echo <doubleQuotes46>Last Element Again: <doubleQuotes46>.$myArr->getLastElement().<doubleQuotes46><br />\n<doubleQuotes46>;<newline46mondego>"
"2652splitHere46","4390299splitHere46","My Array:Array<newline46mondego>(<newline46mondego>    [0] => Hello<newline46mondego>    [1] => World<newline46mondego>)<newline46mondego><newline46mondego>Last Element: World<newline46mondego><newline46mondego>My Array Again:Array<newline46mondego>(<newline46mondego>    [0] => Hello<newline46mondego>    [1] => World<newline46mondego>    [2] => Yet another element<newline46mondego>)<newline46mondego><newline46mondego>Last Element Again: Yet another element<newline46mondego>"
"2653splitHere46","4390479splitHere46","public class StringTest <newline46mondego>{<newline46mondego><newline46mondego>    public static final String crT = <doubleQuotes46>CREATE TABLE <doubleQuotes46>;<newline46mondego>    public static final String inI = <doubleQuotes46>INSERT INTO <doubleQuotes46>;<newline46mondego>    public static final String val = <doubleQuotes46> VALUES <doubleQuotes46>;<newline46mondego><newline46mondego>    public static final String[] catInsertArray = new String[13];<newline46mondego><newline46mondego>    // you were probably doing this, which is not allowed in Java because you are writing code outside of a method body or static initializer block<newline46mondego>    //catInsertArray[0] = inI + val + <doubleQuotes46>(null, 'Student Loan', 'in', 0.00, 0.00, 0.00, 0, 0 );<doubleQuotes46>; <newline46mondego><newline46mondego>    static<newline46mondego>    {<newline46mondego>         // static initialize your static member<newline46mondego>         catInsertArray[0] = inI + val + <doubleQuotes46>(null, 'Student Loan', 'in', 0.00, 0.00, 0.00, 0, 0 );<doubleQuotes46>; <newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String [] args)<newline46mondego>    {<newline46mondego>        // You can put code in a method<newline46mondego>        //catInsertArray[0] = inI + val + <doubleQuotes46>(null, 'Student Loan', 'in', 0.00, 0.00, 0.00, 0, 0 );<doubleQuotes46>; <newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2654splitHere46","4390479splitHere46","DatabaseConstants"
"2655splitHere46","4390479splitHere46","static"
"2656splitHere46","4390479splitHere46","String"
"2657splitHere46","4390479splitHere46","package com.geistware.studentbudgetapp;<newline46mondego><newline46mondego>import android.provider.BaseColumns;<newline46mondego><newline46mondego>public class  DatabaseConstants {<newline46mondego><newline46mondego>    //Variables for DDL statements and such<newline46mondego>    public static final String crT = <doubleQuotes46>CREATE TABLE <doubleQuotes46>;<newline46mondego>    public static final String inI = <doubleQuotes46>INSERT INTO <doubleQuotes46>;<newline46mondego>    public static final String val = <doubleQuotes46> VALUES <doubleQuotes46>;<newline46mondego><newline46mondego>    //Table Names<newline46mondego>    public static final String CAT_BUD_TAB = <doubleQuotes46>CAT_BUD_TAB<doubleQuotes46>;<newline46mondego>    public static final String TWO_WEE_TAB = <doubleQuotes46>TWO_WEE_TAB<doubleQuotes46>;<newline46mondego><newline46mondego>    //columns from the category_budget_table<newline46mondego>    public static final String CAT_ITEM = <doubleQuotes46>CAT_ITEM<doubleQuotes46>;<newline46mondego>    public static final String IN_OUT = <doubleQuotes46>IN_OUT<doubleQuotes46>;<newline46mondego>    public static final String BUDGET_AMOUNT = <doubleQuotes46>BUDGET_AMOUNT<doubleQuotes46>;<newline46mondego>    public static final String ACTUAL_AMOUNT = <doubleQuotes46>ACTUAL_AMOUNT<doubleQuotes46>;<newline46mondego>    public static final String AMOUNT_STRAYED = <doubleQuotes46>AMOUNT_STRAYED<doubleQuotes46>;<newline46mondego>    public static final String OVERBUDGET_TF = <doubleQuotes46>OVERBUDGET_TF<doubleQuotes46>;<newline46mondego>    public static final String AUTOSPEND_TF = <doubleQuotes46>AUTOSPEND_TF<doubleQuotes46>;<newline46mondego><newline46mondego>    //Initial DDL Statements and Initial INSERT statements to populate table<newline46mondego>    public static final String createCATBUDTAB = (crT + CAT_BUD_TAB + <newline46mondego>            <doubleQuotes46>(_id INTEGER PRIMARY KEY, CAT_ITEM TEXT, IN_OUT TEXT, BUDGET_AMOUNT REAL, ACTUAL_AMOUNT REAL, AMOUNT_STRAYED REAL, OVERBUDGET_TF INTEGER, AUTOSPEND_TF INTEGER);<doubleQuotes46>);<newline46mondego>    public static final String createTWOWEETAB = (crT + TWO_WEE_TAB + <newline46mondego>            <doubleQuotes46>(_id INTEGER PRIMARY KEY, SUB_CAT_ITEM TEXT, CAT_ITEM TEXT, COST REAL, ESSENTIAL_TF INTEGER, CURRENT_LAST TEXT, WEEK_ID INTEGER);<doubleQuotes46>);<newline46mondego><newline46mondego>    public static String[] catInsertArray = new String[13];<newline46mondego><newline46mondego>    // you still need to to put this code into a static initializer block<newline46mondego>    static<newline46mondego>    {<newline46mondego>        catInsertArray[0] = inI + CAT_BUD_TAB + val + <doubleQuotes46>(null, 'Student Loan', 'in', 0.00, 0.00, 0.00, 0, 0 );<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2658splitHere46","4390564splitHere46","startMIDlet()"
"2659splitHere46","4390564splitHere46","RecordStore recordStore = RecordStore.openRecordStore(<doubleQuotes46>recordstorename<doubleQuotes46>, true);<newline46mondego>String data=<doubleQuotes46>data<doubleQuotes46>;<newline46mondego>recordStore.addRecord(data.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);, 0, data.getBytes().length);<newline46mondego>"
"2660splitHere46","4390868splitHere46","gprof"
"2661splitHere46","4391081splitHere46","java -cp /home/lib/libA.jar:./lib/libB.jar:classes com.whatever.Start config.file<newline46mondego>"
"2662splitHere46","4391098splitHere46","studentComboBox"
"2663splitHere46","4391098splitHere46","jlabel1"
"2664splitHere46","4391098splitHere46","String h = getParameter(<doubleQuotes46>student1<doubleQuotes46>);<newline46mondego>String i = getParameter(<doubleQuotes46>student2<doubleQuotes46>);<newline46mondego>String j = getParameter(<doubleQuotes46>student3<doubleQuotes46>);<newline46mondego><newline46mondego>private void studentComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {                                                   <newline46mondego>    if (studentComboBox.getSelectedItem().equals(<doubleQuotes46>Student 1<doubleQuotes46>)){<newline46mondego>        jlabel1.setText(h);<newline46mondego>    } else if (studentComboBox.getSelectedItem().equals(<doubleQuotes46>Student 2<doubleQuotes46>)){<newline46mondego>        jlabel1.setText(i);<newline46mondego>    } else if (studentComboBox.getSelectedItem().equals(<doubleQuotes46>Student 3<doubleQuotes46>)){<newline46mondego>        jlabel1.setText(j);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2665splitHere46","4391098splitHere46","studentComboBoxItemStateChanged"
"2666splitHere46","4391098splitHere46","jlabel1"
"2667splitHere46","4391160splitHere46","System.out.println(2 + 3 + <doubleQuotes46>>=<doubleQuotes46> + 1 + 1);<newline46mondego>"
"2668splitHere46","4391160splitHere46","<doubleQuotes46>5 >=<doubleQuotes46>"
"2669splitHere46","4391160splitHere46","<doubleQuotes46>5 >= 1<doubleQuotes46>"
"2670splitHere46","4391160splitHere46","<doubleQuotes46>5 >= 11<doubleQuotes46>"
"2671splitHere46","4391431splitHere46","<h:inputText id=<doubleQuotes46>username<doubleQuotes46> value=<doubleQuotes46>#{user.username}<doubleQuotes46> <newline46mondego>                size=<doubleQuotes46>64<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46><newline46mondego>                label=<doubleQuotes46>UserName<doubleQuotes46> ><newline46mondego>                <f:validateLength minimum=<doubleQuotes46>0<doubleQuotes46> maximum=<doubleQuotes46>64<doubleQuotes46> /><newline46mondego>            </h:inputText>  <newline46mondego>"
"2672splitHere46","4391458splitHere46","StyledText"
"2673splitHere46","4391458splitHere46","setText"
"2674splitHere46","4391458splitHere46","getText"
"2675splitHere46","4391458splitHere46","VerifyKeyListener"
"2676splitHere46","4391458splitHere46","System.getProperty(<doubleQuotes46>line.separator<doubleQuotes46>)"
"2677splitHere46","4391477splitHere46","R.id.Spinner"
"2678splitHere46","4391477splitHere46","TextView"
"2679splitHere46","4391477splitHere46","SimpleCursorAdapter"
"2680splitHere46","4391477splitHere46","TextView"
"2681splitHere46","4391477splitHere46","android.R.id.text1"
"2682splitHere46","4391490splitHere46","public class RegistrationBean {<newline46mondego>  @Valid<newline46mondego>  SecurityQuestion securityQuestion;<newline46mondego>  String name;<newline46mondego><newline46mondego>  public SecurityQuestion getSecurityQuestion(){<newline46mondego>        return securityQuestion;<newline46mondego>  }<newline46mondego>  public void setSecurityQuestion(SecurityQuestion q){<newline46mondego>      this.securityQuestion = q;<newline46mondego>  }    <newline46mondego>  public SecurityQuestionType[] getSecurityQuestionOptions() {<newline46mondego>    return SecurityQuestionType.values();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2683splitHere46","4391494splitHere46","context-param"
"2684splitHere46","4391494splitHere46","web.xml"
"2685splitHere46","4391494splitHere46","<context-param><newline46mondego>    <param-name>javax.faces.PARTIAL_STATE_SAVING</param-name><newline46mondego>    <param-value>false</param-value><newline46mondego></context-param><newline46mondego>"
"2686splitHere46","4391494splitHere46","false"
"2687splitHere46","4391494splitHere46","javax.faces.ViewState"
"2688splitHere46","4391505splitHere46","WriteProcessMemory"
"2689splitHere46","4391517splitHere46","Object command = request.getPortletSession().getAttribute(RESERVATION_OF_BOOKS_COMMAND_SESSION_NAME);<newline46mondego><newline46mondego>if(!(command instanceof ReservationOfBooksCommand)){<newline46mondego>        request.getPortletSession().removeAttribute(RESERVATION_OF_BOOKS_COMMAND_SESSION_NAME);<newline46mondego>}else{<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"2690splitHere46","4391538splitHere46","new BigInteger(<doubleQuotes46>ABED74<doubleQuotes46>).toByteArray()"
"2691splitHere46","4391538splitHere46","byte[] array = (byte[]) new Hex().decode(text);<newline46mondego>"
"2692splitHere46","4391614splitHere46","f:selectItems"
"2693splitHere46","4391614splitHere46","SelectItem"
"2694splitHere46","4391614splitHere46","disabled"
"2695splitHere46","4391614splitHere46","public class Bean {<newline46mondego>    private List<SelectItem> selectItems;<newline46mondego><newline46mondego>    public Bean() {<newline46mondego>        selectItems = new ArrayList<SelectItem>();<newline46mondego>        selectItem.add(new SelectItem(1, <doubleQuotes46>Form 1<doubleQuotes46>, null, false));<newline46mondego>        selectItem.add(new SelectItem(2, <doubleQuotes46>Form 2<doubleQuotes46>, null, false));<newline46mondego>        selectItem.add(new SelectItem(3, <doubleQuotes46>Form 3<doubleQuotes46>, null, false));<newline46mondego>        selectItem.add(new SelectItem(4, <doubleQuotes46>Form 4<doubleQuotes46>, null, true));<newline46mondego>        selectItem.add(new SelectItem(5, <doubleQuotes46>Form 5<doubleQuotes46>, null, true));<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2696splitHere46","4391614splitHere46","f:selectItem"
"2697splitHere46","4391614splitHere46","itemDisabled"
"2698splitHere46","4391614splitHere46","<f:selectItem itemValue=<doubleQuotes46>1<doubleQuotes46> itemLabel=<doubleQuotes46>Form 1<doubleQuotes46> itemDisabled=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego><f:selectItem itemValue=<doubleQuotes46>2<doubleQuotes46> itemLabel=<doubleQuotes46>Form 2<doubleQuotes46> itemDisabled=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego><f:selectItem itemValue=<doubleQuotes46>3<doubleQuotes46> itemLabel=<doubleQuotes46>Form 3<doubleQuotes46> itemDisabled=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego><f:selectItem itemValue=<doubleQuotes46>4<doubleQuotes46> itemLabel=<doubleQuotes46>Form 4<doubleQuotes46> itemDisabled=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego><f:selectItem itemValue=<doubleQuotes46>5<doubleQuotes46> itemLabel=<doubleQuotes46>Form 5<doubleQuotes46> itemDisabled=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"2699splitHere46","4391746splitHere46","class MyList extends ArrayList<newline46mondego>{<newline46mondego><newline46mondego>{ // This is an instance initializer; the code is invoked before the constructor.<newline46mondego>add(<doubleQuotes46>first<doubleQuotes46>); <newline46mondego>add(<doubleQuotes46>second<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>public MyList() {<newline46mondego>    super();<newline46mondego>    // I believe initializers run here, but I have never specifically tested this<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2700splitHere46","4391746splitHere46","List list=new MyList();<newline46mondego>"
"2701splitHere46","4391811splitHere46","Application"
"2702splitHere46","4391811splitHere46","public class App extends Application {"
"2703splitHere46","4391811splitHere46","android:name"
"2704splitHere46","4391811splitHere46","<application>"
"2705splitHere46","4391811splitHere46","AndroidManifest.xml"
"2706splitHere46","4391811splitHere46","android:name=<doubleQuotes46>.App<doubleQuotes46>"
"2707splitHere46","4391811splitHere46","onCreate()"
"2708splitHere46","4391811splitHere46","this"
"2709splitHere46","4391811splitHere46","app"
"2710splitHere46","4391811splitHere46","getApp()"
"2711splitHere46","4391811splitHere46","public class App extends Application{<newline46mondego><newline46mondego>    private static Context mContext;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate() {<newline46mondego>        super.onCreate();<newline46mondego>        mContext = this;<newline46mondego>    }<newline46mondego><newline46mondego>    public static Context getContext(){<newline46mondego>        return mContext;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2712splitHere46","4391811splitHere46","App.getContext()"
"2713splitHere46","4391811splitHere46","getResources()"
"2714splitHere46","4391811splitHere46","App.getContext().getResources()"
"2715splitHere46","4392029splitHere46","<context-param>"
"2716splitHere46","4392029splitHere46","Map"
"2717splitHere46","4392029splitHere46","${initParam}"
"2718splitHere46","4392029splitHere46","${initParam.htmlRootPath}<newline46mondego>"
"2719splitHere46","4392188splitHere46","public static int binarySearch(Comparable[] objArray,Comparable item)<newline46mondego>{       <newline46mondego>    int lower=0;<newline46mondego>    int upper=objArray.length -1;<newline46mondego>"
"2720splitHere46","4392188splitHere46","public static int binarySearch(Comparable[] objArray,Comparable item)<newline46mondego>{       <newline46mondego>    return bSearch(objArray, item, 0, objArray.length -1);<newline46mondego>    ....<newline46mondego><newline46mondego>private static int bSearch(Comparable[] objArray,Comparable item, int lower, int upper)<newline46mondego>{<newline46mondego>   if( lower > upper /* not found */){ return -1; };<newline46mondego><newline46mondego>   int pivot = ((int)((upper - lower) / 2)) + lower;<newline46mondego><newline46mondego>   int cmp = objArray[pivot].compareTo(item);<newline46mondego><newline46mondego>   if( cmp == 0 ){ return pivot; }<newline46mondego>   else if (cmp < 0 ){ return bSearch(objArray,item, lower, pivot - 1); }<newline46mondego>   else{ return bSearch(objArray,item, pivot+1, upper); }<newline46mondego>}<newline46mondego>"
"2721splitHere46","4392188splitHere46","bSearch"
"2722splitHere46","4392466splitHere46","super.getName()"
"2723splitHere46","4392670splitHere46","/*<newline46mondego> * Licensed to the Apache Software Foundation (ASF) under one or more<newline46mondego> * contributor license agreements.  See the NOTICE file distributed with<newline46mondego> * this work for additional information regarding copyright ownership.<newline46mondego> * The ASF licenses this file to You under the Apache License, Version 2.0<newline46mondego> * (the <doubleQuotes46>License<doubleQuotes46>); you may not use this file except in compliance with<newline46mondego> * the License.  You may obtain a copy of the License at<newline46mondego> *<newline46mondego> *      http://www.apache.org/licenses/LICENSE-2.0<newline46mondego> *<newline46mondego> * Unless required by applicable law or agreed to in writing, software<newline46mondego> * distributed under the License is distributed on an <doubleQuotes46>AS IS<doubleQuotes46> BASIS,<newline46mondego> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<newline46mondego> * See the License for the specific language governing permissions and<newline46mondego> * limitations under the License.<newline46mondego> */<newline46mondego>package org.apache.pdfbox;<newline46mondego><newline46mondego>import java.awt.HeadlessException;<newline46mondego>import java.awt.Toolkit;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego><newline46mondego>import javax.imageio.ImageIO;<newline46mondego><newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.apache.pdfbox.exceptions.InvalidPasswordException;<newline46mondego>import org.apache.pdfbox.pdmodel.PDDocument;<newline46mondego>import org.apache.pdfbox.pdmodel.PDPage;<newline46mondego>import org.apache.pdfbox.pdmodel.common.PDRectangle;<newline46mondego>import org.apache.pdfbox.util.PDFImageWriter;<newline46mondego><newline46mondego>/**<newline46mondego> * Convert a PDF document to an image.<newline46mondego> *<newline46mondego> * @author <a href=<doubleQuotes46>ben@benlitchfield.com<doubleQuotes46>>Ben Litchfield</a><newline46mondego> * @version $Revision: 1.6 $<newline46mondego> */<newline46mondego>public class PDFToImage<newline46mondego>{<newline46mondego><newline46mondego>    private static final String PASSWORD = <doubleQuotes46>-password<doubleQuotes46>;<newline46mondego>    private static final String START_PAGE = <doubleQuotes46>-startPage<doubleQuotes46>;<newline46mondego>    private static final String END_PAGE = <doubleQuotes46>-endPage<doubleQuotes46>;<newline46mondego>    private static final String IMAGE_FORMAT = <doubleQuotes46>-imageType<doubleQuotes46>;<newline46mondego>    private static final String OUTPUT_PREFIX = <doubleQuotes46>-outputPrefix<doubleQuotes46>;<newline46mondego>    private static final String COLOR = <doubleQuotes46>-color<doubleQuotes46>;<newline46mondego>    private static final String RESOLUTION = <doubleQuotes46>-resolution<doubleQuotes46>;<newline46mondego>    private static final String CROPBOX = <doubleQuotes46>-cropbox<doubleQuotes46>;<newline46mondego><newline46mondego>    /**<newline46mondego>     * private constructor.<newline46mondego>    */<newline46mondego>    private PDFToImage()<newline46mondego>    {<newline46mondego>        //static class<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Infamous main method.<newline46mondego>     *<newline46mondego>     * @param args Command line arguments, should be one and a reference to a file.<newline46mondego>     *<newline46mondego>     * @throws Exception If there is an error parsing the document.<newline46mondego>     */<newline46mondego>    public static void main( String[] args ) throws Exception<newline46mondego>    {<newline46mondego>        String password = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        String pdfFile = null;<newline46mondego>        String outputPrefix = null;<newline46mondego>        String imageFormat = <doubleQuotes46>jpg<doubleQuotes46>;<newline46mondego>        int startPage = 1;<newline46mondego>        int endPage = Integer.MAX_VALUE;<newline46mondego>        String color = <doubleQuotes46>rgb<doubleQuotes46>;<newline46mondego>        int resolution;<newline46mondego>    float cropBoxLowerLeftX = 0;<newline46mondego>    float cropBoxLowerLeftY = 0;<newline46mondego>    float cropBoxUpperRightX = 0;<newline46mondego>    float cropBoxUpperRightY = 0;<newline46mondego>        try<newline46mondego>        {<newline46mondego>            resolution = Toolkit.getDefaultToolkit().getScreenResolution();<newline46mondego>        }<newline46mondego>        catch( HeadlessException e )<newline46mondego>        {<newline46mondego>            resolution = 96;<newline46mondego>        }<newline46mondego>        for( int i = 0; i < args.length; i++ )<newline46mondego>        {<newline46mondego>            if( args[i].equals( PASSWORD ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                if( i >= args.length )<newline46mondego>                {<newline46mondego>                    usage();<newline46mondego>                }<newline46mondego>                password = args[i];<newline46mondego>            }<newline46mondego>            else if( args[i].equals( START_PAGE ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                if( i >= args.length )<newline46mondego>                {<newline46mondego>                    usage();<newline46mondego>                }<newline46mondego>                startPage = Integer.parseInt( args[i] );<newline46mondego>            }<newline46mondego>            else if( args[i].equals( END_PAGE ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                if( i >= args.length )<newline46mondego>                {<newline46mondego>                    usage();<newline46mondego>                }<newline46mondego>                endPage = Integer.parseInt( args[i] );<newline46mondego>            }<newline46mondego>            else if( args[i].equals( IMAGE_FORMAT ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                imageFormat = args[i];<newline46mondego>            }<newline46mondego>            else if( args[i].equals( OUTPUT_PREFIX ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                outputPrefix = args[i];<newline46mondego>            }<newline46mondego>            else if( args[i].equals( COLOR ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                color = args[i];<newline46mondego>            }<newline46mondego>            else if( args[i].equals( RESOLUTION ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>                resolution = Integer.parseInt(args[i]);<newline46mondego>            }<newline46mondego>            else if( args[i].equals( CROPBOX ) )<newline46mondego>            {<newline46mondego>                i++;<newline46mondego>            cropBoxLowerLeftX = Float.valueOf(args[i]).floatValue();<newline46mondego>                i++;<newline46mondego>            cropBoxLowerLeftY = Float.valueOf(args[i]).floatValue();<newline46mondego>                i++;<newline46mondego>            cropBoxUpperRightX = Float.valueOf(args[i]).floatValue();<newline46mondego>                i++;<newline46mondego>            cropBoxUpperRightY = Float.valueOf(args[i]).floatValue();<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                if( pdfFile == null )<newline46mondego>                {<newline46mondego>                    pdfFile = args[i];<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if( pdfFile == null )<newline46mondego>        {<newline46mondego>            usage();<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            if(outputPrefix == null)<newline46mondego>            {<newline46mondego>                outputPrefix = pdfFile.substring( 0, pdfFile.lastIndexOf( '.' ));<newline46mondego>            }<newline46mondego><newline46mondego>            PDDocument document = null;<newline46mondego>            try<newline46mondego>            {<newline46mondego>                document = PDDocument.load( pdfFile );<newline46mondego><newline46mondego><newline46mondego>                //document.print();<newline46mondego>                if( document.isEncrypted() )<newline46mondego>                {<newline46mondego>                    try<newline46mondego>                    {<newline46mondego>                        document.decrypt( password );<newline46mondego>                    }<newline46mondego>                    catch( InvalidPasswordException e )<newline46mondego>                    {<newline46mondego>                        if( args.length == 4 )//they supplied the wrong password<newline46mondego>                        {<newline46mondego>                            System.err.println( <doubleQuotes46>Error: The supplied password is incorrect.<doubleQuotes46> );<newline46mondego>                            System.exit( 2 );<newline46mondego>                        }<newline46mondego>                        else<newline46mondego>                        {<newline46mondego>                            //they didn't supply a password and the default of <doubleQuotes46><doubleQuotes46> was wrong.<newline46mondego>                            System.err.println( <doubleQuotes46>Error: The document is encrypted.<doubleQuotes46> );<newline46mondego>                            usage();<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                int imageType = 24;<newline46mondego>                if (<doubleQuotes46>bilevel<doubleQuotes46>.equalsIgnoreCase(color))<newline46mondego>                {<newline46mondego>                    imageType = BufferedImage.TYPE_BYTE_BINARY;<newline46mondego>                }<newline46mondego>                else if (<doubleQuotes46>indexed<doubleQuotes46>.equalsIgnoreCase(color))<newline46mondego>                {<newline46mondego>                    imageType = BufferedImage.TYPE_BYTE_INDEXED;<newline46mondego>                }<newline46mondego>                else if (<doubleQuotes46>gray<doubleQuotes46>.equalsIgnoreCase(color))<newline46mondego>                {<newline46mondego>                    imageType = BufferedImage.TYPE_BYTE_GRAY;<newline46mondego>                }<newline46mondego>                else if (<doubleQuotes46>rgb<doubleQuotes46>.equalsIgnoreCase(color))<newline46mondego>                {<newline46mondego>                    imageType = BufferedImage.TYPE_INT_RGB;<newline46mondego>                }<newline46mondego>                else if (<doubleQuotes46>rgba<doubleQuotes46>.equalsIgnoreCase(color))<newline46mondego>                {<newline46mondego>                    imageType = BufferedImage.TYPE_INT_ARGB;<newline46mondego>                }<newline46mondego>                else<newline46mondego>                {<newline46mondego>                    System.err.println( <doubleQuotes46>Error: the number of bits per pixel must be 1, 8 or 24.<doubleQuotes46> );<newline46mondego>                    System.exit( 2 );<newline46mondego>                }<newline46mondego><newline46mondego>                //si une cropBox a ete specifier, appeler la methode de modification de cropbox<newline46mondego>        //changeCropBoxes(PDDocument document,float a, float b, float c,float d)<newline46mondego>        if ( cropBoxLowerLeftX!=0 || cropBoxLowerLeftY!=0 || cropBoxUpperRightX!=0 || cropBoxUpperRightY!=0 )<newline46mondego>        {<newline46mondego>          changeCropBoxes(document,cropBoxLowerLeftX, cropBoxLowerLeftY, cropBoxUpperRightX, cropBoxUpperRightY);<newline46mondego>        }<newline46mondego><newline46mondego>                //Make the call<newline46mondego>                PDFImageWriter imageWriter = new PDFImageWriter();<newline46mondego>                boolean success = imageWriter.writeImage(document, imageFormat, password,<newline46mondego>                        startPage, endPage, outputPrefix, imageType, resolution);<newline46mondego>                if (!success)<newline46mondego>                {<newline46mondego>                    System.err.println( <doubleQuotes46>Error: no writer found for image format '<doubleQuotes46><newline46mondego>                            + imageFormat + <doubleQuotes46>'<doubleQuotes46> );<newline46mondego>                    System.exit(1);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            catch (Exception e)<newline46mondego>            {<newline46mondego>                System.err.println(e);<newline46mondego>            }<newline46mondego>            finally<newline46mondego>            {<newline46mondego>                if( document != null )<newline46mondego>                {<newline46mondego>                    document.close();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * This will print the usage requirements and exit.<newline46mondego>     */<newline46mondego>    private static void usage()<newline46mondego>    {<newline46mondego>        System.err.println( <doubleQuotes46>Usage: java org.apache.pdfbox.PDFToImage [OPTIONS] <PDF file>\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -password  <password>          Password to decrypt document\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -imageType <image type>        (<doubleQuotes46> + getImageFormats() + <doubleQuotes46>)\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -outputPrefix <output prefix>  Filename prefix for image files\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -startPage <number>            The first page to start extraction(1 based)\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -endPage <number>              The last page to extract(inclusive)\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -color <string>                The color depth (valid: bilevel, indexed, gray, rgb, rgba)\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -resolution <number>           The bitmap resolution in dpi\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  -cropbox <number> <number> <number> <number> The page area to export\n<doubleQuotes46> +<newline46mondego>            <doubleQuotes46>  <PDF file>                     The PDF document to use\n<doubleQuotes46><newline46mondego>            );<newline46mondego>        System.exit( 1 );<newline46mondego>    }<newline46mondego><newline46mondego>    private static String getImageFormats()<newline46mondego>    {<newline46mondego>        StringBuffer retval = new StringBuffer();<newline46mondego>        String[] formats = ImageIO.getReaderFormatNames();<newline46mondego>        for( int i = 0; i < formats.length; i++ )<newline46mondego>        {<newline46mondego>            retval.append( formats[i] );<newline46mondego>            if( i + 1 < formats.length )<newline46mondego>            {<newline46mondego>                retval.append( <doubleQuotes46>,<doubleQuotes46> );<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return retval.toString();<newline46mondego>    }<newline46mondego><newline46mondego>    private static void changeCropBoxes(PDDocument document,float a, float b, float c,float d)<newline46mondego>    {<newline46mondego>      List pages = document.getDocumentCatalog().getAllPages();<newline46mondego>      for( int i = 0; i < pages.size(); i++ )<newline46mondego>      {<newline46mondego>              System.out.println(<doubleQuotes46>resizing page<doubleQuotes46>);<newline46mondego>          PDPage page = (PDPage)pages.get( i );<newline46mondego>          PDRectangle rectangle = new PDRectangle();<newline46mondego>              rectangle.setLowerLeftX(a);<newline46mondego>              rectangle.setLowerLeftY(b);<newline46mondego>              rectangle.setUpperRightX(c);<newline46mondego>              rectangle.setUpperRightY(d);<newline46mondego>          page.setMediaBox(rectangle);<newline46mondego>          page.setCropBox(rectangle);<newline46mondego><newline46mondego>      }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2724splitHere46","4392679splitHere46","Map<String,User> result = mapper.readValue(src, new TypeReference<Map<String,User>>() { });<newline46mondego>"
"2725splitHere46","4392679splitHere46","List<Detail> lcd = mapper.readValue(ld, new TypeReference<List<Detail>>() {});<newline46mondego>"
"2726splitHere46","4392739splitHere46","somePanel.revalidate()"
"2727splitHere46","4392739splitHere46","invalidate"
"2728splitHere46","4392739splitHere46","revalidate"
"2729splitHere46","4392761splitHere46","handler.setLevel(...);"
"2730splitHere46","4392933splitHere46","Generating 1400000 ids to /tmp/DID.txt<newline46mondego>Generating 16000000 ids to /tmp/AllIDs.txt<newline46mondego>Reading ids in /tmp/DID.txt<newline46mondego>Reading ids in /tmp/AllIDs.txt<newline46mondego>Took 8794 ms to find 294330 valid ids<newline46mondego>"
"2731splitHere46","4392933splitHere46","public static void main(String... args) throws IOException {<newline46mondego>    generateFile(<doubleQuotes46>/tmp/DID.txt<doubleQuotes46>, 1400000);<newline46mondego>    generateFile(<doubleQuotes46>/tmp/AllIDs.txt<doubleQuotes46>, 16000000);<newline46mondego><newline46mondego>    long start = System.currentTimeMillis();<newline46mondego>    TLongHashSet did = readLongs(<doubleQuotes46>/tmp/DID.txt<doubleQuotes46>);<newline46mondego>    TLongHashSet validIDS = readLongsUnion(<doubleQuotes46>/tmp/AllIDs.txt<doubleQuotes46>,did);<newline46mondego><newline46mondego>    long time = System.currentTimeMillis() - start;<newline46mondego>    System.out.println(<doubleQuotes46>Took <doubleQuotes46>+ time+<doubleQuotes46> ms to find <doubleQuotes46>+ validIDS.size()+<doubleQuotes46> valid ids<doubleQuotes46>);<newline46mondego>}<newline46mondego><newline46mondego>private static TLongHashSet readLongs(String filename) throws IOException {<newline46mondego>    System.out.println(<doubleQuotes46>Reading ids in <doubleQuotes46>+filename);<newline46mondego>    BufferedReader br = new BufferedReader(new FileReader(filename), 128*1024);<newline46mondego>    TLongHashSet ids = new TLongHashSet();<newline46mondego>    for(String line; (line = br.readLine())!=null;)<newline46mondego>        ids.add(Long.parseLong(line));<newline46mondego>    br.close();<newline46mondego>    return ids;<newline46mondego>}<newline46mondego><newline46mondego>private static TLongHashSet readLongsUnion(String filename, TLongHashSet validSet) throws IOException {<newline46mondego>    System.out.println(<doubleQuotes46>Reading ids in <doubleQuotes46>+filename);<newline46mondego>    BufferedReader br = new BufferedReader(new FileReader(filename), 128*1024);<newline46mondego>    TLongHashSet ids = new TLongHashSet();<newline46mondego>    for(String line; (line = br.readLine())!=null;) {<newline46mondego>        long val = Long.parseLong(line);<newline46mondego>        if (validSet.contains(val))<newline46mondego>            ids.add(val);<newline46mondego>    }<newline46mondego>    br.close();<newline46mondego>    return ids;<newline46mondego>}<newline46mondego><newline46mondego>private static void generateFile(String filename, int number) throws IOException {<newline46mondego>    System.out.println(<doubleQuotes46>Generating <doubleQuotes46>+number+<doubleQuotes46> ids to <doubleQuotes46>+filename);<newline46mondego>    PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(filename), 128*1024));<newline46mondego>    Random rand = new Random();<newline46mondego>    for(int i=0;i<number;i++)<newline46mondego>        pw.println(rand.nextInt(1<<26));<newline46mondego>    pw.close();<newline46mondego>}<newline46mondego>"
"2732splitHere46","4393178splitHere46","$('#elementid').attr('disabled', false)"
"2733splitHere46","4393178splitHere46","<p:accordionPanel>"
"2734splitHere46","4393178splitHere46","<rich:jQuery>"
"2735splitHere46","4393209splitHere46","class Example {<newline46mondego><newline46mondego>class LazyInitStrategy implements Runnable {<newline46mondego>    private final Runnable operation;<newline46mondego>    private boolean done = false;<newline46mondego><newline46mondego>    LazyInitStrategy(Runnable operation) {<newline46mondego>        this.operation = operation;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        if (!done) {<newline46mondego>            operation.run();<newline46mondego>            done = true;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private final class AbstractInit implements Runnable {<newline46mondego>    public void run() {<newline46mondego>        // insert data in db<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>private final class AbstractWebInit implements Runnable {<newline46mondego>    public void run() {<newline46mondego>        // here, make a call to AbstractTestClass.before() init the interfaces<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class AbstractTestClass {<newline46mondego><newline46mondego>    final LazyInitStrategy setup = new LazyInitStrategy(new AbstractInit());<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void before() {<newline46mondego>        setup.run();<newline46mondego>        // do some more thing<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class AbstractWebTestClass extends WebTestCase {<newline46mondego><newline46mondego>    final LazyInitStrategy setupInfo = new LazyInitStrategy(new AbstractWebInit());<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void before() {<newline46mondego>        setupInfo.run();<newline46mondego>        // do some more thing<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2736splitHere46","4393305splitHere46","GET / HTTP/1.1\r\nHost: <hostname\r\n\r\n"
"2737splitHere46","4393305splitHere46","netcat"
"2738splitHere46","4393305splitHere46","telnet"
"2739splitHere46","4393305splitHere46","netcat google.com 80"
"2740splitHere46","4393305splitHere46","telnet google.com 80"
"2741splitHere46","4393317splitHere46","<error-page>"
"2742splitHere46","4393317splitHere46","<error-code>"
"2743splitHere46","4393317splitHere46","404"
"2744splitHere46","4393317splitHere46","<servlet><newline46mondego>    <servlet-name>errorServlet</servlet-name><newline46mondego>    <servlet-class>com.example.ErrorServlet</servlet-class><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>errorServlet</servlet-name><newline46mondego>    <url-pattern>/error</url-pattern><newline46mondego></servlet-mapping><newline46mondego><newline46mondego><error-page><newline46mondego>    <error-code>404</error-code><newline46mondego>    <location>/error</location><newline46mondego></error-page><newline46mondego>"
"2745splitHere46","4393317splitHere46","url-pattern"
"2746splitHere46","4393317splitHere46","/pages/*"
"2747splitHere46","4393317splitHere46","Filter"
"2748splitHere46","4393317splitHere46","/*"
"2749splitHere46","4393317splitHere46","if (new File(servletContext.getRealPath(request.getRequestURI())).exists()) {<newline46mondego>    chain.doFilter(request, response);<newline46mondego>} else {<newline46mondego>    request.getRequestDispatcher(<doubleQuotes46>/pages<doubleQuotes46> + request.getRequestURI()).forward(request, response);<newline46mondego>}<newline46mondego>"
"2750splitHere46","4393317splitHere46","/pages"
"2751splitHere46","4393317splitHere46","mod_rewrite"
"2752splitHere46","4393317splitHere46","UrlRewriteFilter"
"2753splitHere46","4393517splitHere46","<env-entry><newline46mondego>    <env-entry-name>myEntryName</env-entry-name><newline46mondego>    <env-entry-type>java.lang.String</env-entry-type><newline46mondego>    <env-entry-value>myEntryValue</env-entry-value><newline46mondego></env-entry><newline46mondego>"
"2754splitHere46","4393517splitHere46","// Do once<newline46mondego>Context env = (Context) new InitialContext().lookup(<doubleQuotes46>java:comp/env<doubleQuotes46>);<newline46mondego><newline46mondego>// Do for every entry<newline46mondego>String entryValue = (String) env.lookup(<doubleQuotes46>myEntryName<doubleQuotes46>);<newline46mondego>"
"2755splitHere46","4393990splitHere46","-Xshare:auto"
"2756splitHere46","4393990splitHere46","-Xshare:on"
"2757splitHere46","4393990splitHere46","classes.jsa"
"2758splitHere46","4393990splitHere46","classlist"
"2759splitHere46","4393990splitHere46","rt.jar"
"2760splitHere46","4394185splitHere46","site-template.xjb"
"2761splitHere46","4394185splitHere46","<bindings xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>          xmlns:xsi=<doubleQuotes46>http://www.w3.org/2000/10/XMLSchema-instance<doubleQuotes46><newline46mondego>          xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>          version=<doubleQuotes46>2.1<doubleQuotes46>><newline46mondego>    <bindings schemaLocation=<doubleQuotes46>site-template.xsd<doubleQuotes46> version=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego>        <!-- Customise the package name --><newline46mondego>        <schemaBindings><newline46mondego>            <package name=<doubleQuotes46>com.example.schema<doubleQuotes46>/><newline46mondego>        </schemaBindings><newline46mondego><newline46mondego>        <!-- rename the value element --><newline46mondego>        <bindings node=<doubleQuotes46>//xs:complexType[@name='MetaType']<doubleQuotes46>><newline46mondego>            <bindings node=<doubleQuotes46>.//xs:attribute[@name='Value']<doubleQuotes46>><newline46mondego>                <property name=<doubleQuotes46>ValueAttribute<doubleQuotes46>/><newline46mondego>            </bindings><newline46mondego>        </bindings><newline46mondego>    </bindings><newline46mondego></bindings><newline46mondego>"
"2762splitHere46","4394185splitHere46","getValueAttribute()"
"2763splitHere46","4394185splitHere46","getValue()"
"2764splitHere46","4394213splitHere46","invokeAndWait"
"2765splitHere46","4394315splitHere46","Thread"
"2766splitHere46","4394315splitHere46","Runnable"
"2767splitHere46","4394315splitHere46","public class Task implements Runnable {<newline46mondego>    private YourObject yourObject;<newline46mondego><newline46mondego>    public Task(YourObject yourObject) {<newline46mondego>        this.yourObject = yourObject;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>        yourObject.setSomething(<doubleQuotes46>something<doubleQuotes46>); // See?<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2768splitHere46","4394428splitHere46","public static final Handler handlerVisibility = new Handler() {<newline46mondego>    public void handleMessage(Message msg) {<newline46mondego>        int visibility = msg.getData().getInt(<doubleQuotes46>visibility<doubleQuotes46>);<newline46mondego>        view.setVisibility(visibility);<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"2769splitHere46","4394637splitHere46","C"
"2770splitHere46","4394696splitHere46","<constant name=<doubleQuotes46>struts.objectFactory<doubleQuotes46> value=<doubleQuotes46>spring<doubleQuotes46> /><newline46mondego>struts.objectFactory = org.apache.struts2.spring.StrutsSpringObjectFactory<newline46mondego>"
"2771splitHere46","4394696splitHere46","<listener><newline46mondego><listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><newline46mondego>"
"2772splitHere46","4394821splitHere46","\<doubleQuotes46>[^\<doubleQuotes46>]*\<doubleQuotes46><newline46mondego>"
"2773splitHere46","4394821splitHere46","\<doubleQuotes46>*"
"2774splitHere46","4394821splitHere46","name='value'"
"2775splitHere46","4394821splitHere46","name=<doubleQuotes46>value<doubleQuotes46>"
"2776splitHere46","4395045splitHere46","BeanUtils"
"2777splitHere46","4395045splitHere46","BeanUtils.copyProperties(source, target);<newline46mondego>"
"2778splitHere46","4395045splitHere46","BeanWrapper"
"2779splitHere46","4395045splitHere46","BeanWrapperImpl"
"2780splitHere46","4395051splitHere46","public static final byte[] readBytes(final InputStream is) throws IOException {<newline46mondego>    ByteArrayOutputStream baos = new ByteArrayOutputStream(Short.MAX_VALUE);<newline46mondego>    byte[] b = new byte[Short.MAX_VALUE];<newline46mondego>    int len = 0;<newline46mondego>    while ((len = is.read(b)) != -1) {<newline46mondego>        baos.write(b, 0, len);<newline46mondego>    }<newline46mondego>    return baos.toByteArray();<newline46mondego>}<newline46mondego>"
"2781splitHere46","4395265splitHere46","MixedFraction"
"2782splitHere46","4395276splitHere46","staticness"
"2783splitHere46","4395276splitHere46","static"
"2784splitHere46","4395276splitHere46","Modifier.isStatic(method.getModifiers());<newline46mondego>"
"2785splitHere46","4395276splitHere46","null"
"2786splitHere46","4395276splitHere46","method.invoke()"
"2787splitHere46","4395276splitHere46","static"
"2788splitHere46","4395276splitHere46","Class.forName(name).getDeclaredMethods()[i].invoke(null, new Object[0]);<newline46mondego>"
"2789splitHere46","4395276splitHere46","Class.Forname()"
"2790splitHere46","4395500splitHere46","yourDecimalFormat.parse(yourStringtoBecomeScientificNumber)"
"2791splitHere46","4395701splitHere46","<html><newline46mondego><body><newline46mondego><applet code=<doubleQuotes46>myJApplet<doubleQuotes46> width=<doubleQuotes46>800<doubleQuotes46> height=<doubleQuotes46>480<doubleQuotes46>><newline46mondego></applet><newline46mondego></body><newline46mondego></html><newline46mondego>"
"2792splitHere46","4395754splitHere46","for (int i=1; i<=n; i++) {<newline46mondego>    for (int j=0; j<3; j++) {<newline46mondego>        for (int k=0; k<i; k++) {<newline46mondego>            System.out.print(arr[j] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2793splitHere46","4395911splitHere46","synchronized"
"2794splitHere46","4395911splitHere46","m1"
"2795splitHere46","4395911splitHere46","m2"
"2796splitHere46","4395962splitHere46","java.lang.NoClassDefFoundError: xxx/GetBibliografijeXml<newline46mondego>    (wrong name: xxx/GetBibliografijeXML) <newline46mondego>"
"2797splitHere46","4395966splitHere46","<copy todir=<doubleQuotes46>dest<doubleQuotes46> flatten=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>  <path><newline46mondego>    <pathelement path=<doubleQuotes46>${java.class.path}<doubleQuotes46>/><newline46mondego>  </path><newline46mondego></copy><newline46mondego>"
"2798splitHere46","4395994splitHere46","Util"
"2799splitHere46","4395994splitHere46","public static int getIndex(Set<? extends Object> set, Object value) {<newline46mondego>   int result = 0;<newline46mondego>   for (Object entry:set) {<newline46mondego>     if (entry.equals(value)) return result;<newline46mondego>     result++;<newline46mondego>   }<newline46mondego>   return -1;<newline46mondego> }<newline46mondego>"
"2800splitHere46","4395994splitHere46","Set"
"2801splitHere46","4395994splitHere46","getIndex()"
"2802splitHere46","4395994splitHere46","Set"
"2803splitHere46","4395994splitHere46","public class IndexAwareSet<T> implements Set {<newline46mondego>   private Set<T> set;<newline46mondego>   public IndexAwareSet(Set<T> set) {<newline46mondego>     this.set = set;<newline46mondego>   }<newline46mondego><newline46mondego>   // ... implement all methods from Set and delegate to the internal Set<newline46mondego><newline46mondego>   public int getIndex(T entry) {<newline46mondego>     int result = 0;<newline46mondego>     for (T entry:set) {<newline46mondego>       if (entry.equals(value)) return result;<newline46mondego>       result++;<newline46mondego>     }<newline46mondego>     return -1;<newline46mondego>   }<newline46mondego> }<newline46mondego>"
"2804splitHere46","4396047splitHere46","LDC"
"2805splitHere46","4396047splitHere46","invokestatic"
"2806splitHere46","4396047splitHere46","Class clazz = Class.forName(yourClassName);<newline46mondego>// either (for public methods)<newline46mondego>Method method = clazz.getMethod(yourMethodName);<newline46mondego>// or for protected / private methods:<newline46mondego>Method method = clazz.getDeclaredMethod(yourMethodName, yourArgumentTypes);<newline46mondego>method.setAccessible(true); <newline46mondego><newline46mondego>// assuming the method is static<newline46mondego>Object result = method.invoke(null, yourMethodArgs);<newline46mondego>// otherwise: pass a object reference instead of null<newline46mondego>// to call the method <doubleQuotes46>on<doubleQuotes46> that object<newline46mondego>"
"2807splitHere46","4396079splitHere46","javax.sound.midi.Receiver"
"2808splitHere46","4396079splitHere46","WeakReference<DumpReceiver>"
"2809splitHere46","4396079splitHere46","WeakReference<T>"
"2810splitHere46","4396079splitHere46","T"
"2811splitHere46","4396079splitHere46","WeakReference<DumpReceiver>"
"2812splitHere46","4396079splitHere46","javax.sound.midi.Receiver"
"2813splitHere46","4396079splitHere46","WeakReference<Receiver>"
"2814splitHere46","4396079splitHere46","r"
"2815splitHere46","4396079splitHere46","DumpReceiver"
"2816splitHere46","4396086splitHere46","public abstract class ActivityService{<newline46mondego>    public abstract Foo processEntity(Entity entity);<newline46mondego>}<newline46mondego>"
"2817splitHere46","4396086splitHere46","private Map<Class<? extends Entity>,<newline46mondego>    Class<? extends ActivityService>> serviceMap =<newline46mondego>        new ConcurrentHashMap<Class<? extends Entity>,<newline46mondego>                              Class<? extends ActivityService>>();<newline46mondego>private ApplicationContext context;<newline46mondego>private ActivityService getServiceForEntity(Entity e){<newline46mondego>    Class<? extends Entity> entityClass = e.getClass();<newline46mondego>    Class<? extends ActivityService> serviceClass =<newline46mondego>        serviceMap.get(entityClass);<newline46mondego>    if(serviceClass==null){<newline46mondego>        for(Map.Entry<Class<? extends Entity>,<newline46mondego>                      Class<? extends ActivityService>> entry :<newline46mondego>            serviceMap.entrySet()){<newline46mondego>            if(entry.getKey().isAssignableFrom(entityClass)){<newline46mondego>                serviceClass = entry.getValue();<newline46mondego>                break;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        if(serviceClass==null){<newline46mondego>            // throw a suitable exception<newline46mondego>        }<newline46mondego>        serviceMap.put(entityClass, serviceClass);<newline46mondego>    }<newline46mondego>    return context.getBean(serviceClass);<newline46mondego>}<newline46mondego>"
"2818splitHere46","4396124splitHere46","ApplicationContext"
"2819splitHere46","4396124splitHere46","beanRefContext.xml"
"2820splitHere46","4396124splitHere46","@Primary"
"2821splitHere46","4396124splitHere46","@Qualifier"
"2822splitHere46","4396166splitHere46","File"
"2823splitHere46","4396166splitHere46","InputStream"
"2824splitHere46","4396324splitHere46","@Transactional"
"2825splitHere46","4396324splitHere46","@Transactional"
"2826splitHere46","4396324splitHere46","@Transactional"
"2827splitHere46","4396324splitHere46","@Transactional"
"2828splitHere46","4396396splitHere46","GraphicsConfiguration config = new JFrame().getGraphicsConfiguration();<newline46mondego>// Or better, use your main GUI component instead of new JFrame()<newline46mondego>BufferedImage fixedImg = config.createCompatibleImage(img.getWidth(), img.getHeight(), Transparency.TRANSLUCENT);<newline46mondego>Graphics2D fig = fixedImg.createGraphics();<newline46mondego>fig.drawImage(img, 0, 0, null);<newline46mondego>fig.dispose();<newline46mondego>fixedImg.flush();<newline46mondego>"
"2829splitHere46","4396608splitHere46","map"
"2830splitHere46","4396608splitHere46","<c:forEach items=<doubleQuotes46>${requestScope.validationResults}<doubleQuotes46> var=<doubleQuotes46>mapEntry<doubleQuotes46> varStatus=<doubleQuotes46>index<doubleQuotes46>><newline46mondego>    <c:if test=<doubleQuotes46>${mapEntry.key == 'userName'}<doubleQuotes46>><newline46mondego>        <tr><newline46mondego>            <td>${mapEntry.value.details}</td><newline46mondego>        </tr><newline46mondego>    </c:if><newline46mondego></c:forEach><newline46mondego>"
"2831splitHere46","4396608splitHere46","userName"
"2832splitHere46","4396608splitHere46","null"
"2833splitHere46","4396608splitHere46","<c:if test=<doubleQuotes46>${requestScope.validationResults['userName'] != null}<doubleQuotes46>><newline46mondego>    <tr><newline46mondego>        <td>${requestScope.validationResults['userName'].details}</td><newline46mondego>    </tr><newline46mondego></c:if><newline46mondego>"
"2834splitHere46","4396608splitHere46","<c:forEach var=<doubleQuotes46>grp<doubleQuotes46> items=<doubleQuotes46>${requestScope.groups}<doubleQuotes46> varStatus=<doubleQuotes46>status<doubleQuotes46>><newline46mondego>    <label>${grp.groupEName}</label><newline46mondego>    <input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>group<doubleQuotes46> value=<doubleQuotes46>${grp.groupNo}<doubleQuotes46> ${grp.isUserGroup ? 'checked' : ''} /><newline46mondego></c:forEach><newline46mondego>"
"2835splitHere46","4396675splitHere46","// global, shared lock.<newline46mondego>final Lock lock = new ReentrantLock();<newline46mondego>final Condition locationReceived  = lock.newCondition(); <newline46mondego><newline46mondego>// first servlet:<newline46mondego>//<newline46mondego>lock.lock();<newline46mondego>try {<newline46mondego>    requestLocation();<newline46mondego>    if (!locationReceived.await(10, TimeUnit.SECONDS)) {<newline46mondego>        // location was not received in the timeout.<newline46mondego>    } else {<newline46mondego>        // read location from shared object.<newline46mondego>    }<newline46mondego>} finally {<newline46mondego>    lock.unlock();<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// servlet that receives geolocation<newline46mondego>//<newline46mondego>lock.lock();<newline46mondego>try {<newline46mondego>    // set location in shared object.<newline46mondego>    locationReceived.signal();<newline46mondego>} finally {<newline46mondego>    lock.unlock();<newline46mondego>}<newline46mondego>"
"2836splitHere46","4396776splitHere46","String myJpgPath = <doubleQuotes46>/sdcard/picture.jpg<doubleQuotes46>;<newline46mondego>Bitmap image_b = BitmapFactory.decodeFile(myJpgPath);<newline46mondego>final BitmapDrawable image_d = new BitmapDrawable(image_b);<newline46mondego>final FrameLayout main = (FrameLayout) findViewById(R.id.main_view);<newline46mondego>main.setBackgroundDrawable(image_d);<newline46mondego>"
"2837splitHere46","4396821splitHere46","projectServiceImpl"
"2838splitHere46","4396821splitHere46","MyDIController"
"2839splitHere46","4396821splitHere46","<bean id=<doubleQuotes46>projectService<doubleQuotes46> class=<doubleQuotes46>com.mydomain.project.service.impl.ProjectServiceImpl<doubleQuotes46> /><newline46mondego><newline46mondego><bean id=<doubleQuotes46>myDIController <doubleQuotes46> class=<doubleQuotes46>com.mydomain.project.service.MyDIController<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>projectServiceImpl<doubleQuotes46>><newline46mondego>            <ref local=<doubleQuotes46>projectService<doubleQuotes46>/><newline46mondego>        </property><newline46mondego></bean>  <newline46mondego>"
"2840splitHere46","4396821splitHere46","<web-app><newline46mondego>     <context-param><newline46mondego>            <param-name>contextConfigLocation</param-name><newline46mondego>            <param-value><newline46mondego>                /WEB-INF/application-context.xml                     <newline46mondego>            </param-value><newline46mondego>        </context-param><newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego><servlet><newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>"
"2841splitHere46","4396982splitHere46","com.mine.logger.internal.udp.UdpListener"
"2842splitHere46","4397153splitHere46","public void repaint(int x, int y, int width, int height)"
"2843splitHere46","4397153splitHere46","void repaint()"
"2844splitHere46","4397153splitHere46","Invalidate():"
"2845splitHere46","4397153splitHere46","Repaint() :"
"2846splitHere46","4397153splitHere46","Update"
"2847splitHere46","4397160splitHere46","List<Region> getRegions(){<newline46mondego>  sorted = new List<Regions>(regions);<newline46mondego>  Collections.sort(sorted, new RegionComparator(getUserLanguage()));<newline46mondego>  return sorted;<newline46mondego>}<newline46mondego>"
"2848splitHere46","4397190splitHere46","jfreechart-1.0.3.jar"
"2849splitHere46","4397190splitHere46","import java.awt.Color;<newline46mondego>import java.awt.GradientPaint;<newline46mondego>import java.awt.Rectangle;<newline46mondego>import org.jfree.chart.LegendItem;<newline46mondego><newline46mondego>/**<newline46mondego> * Hello world!<newline46mondego> *<newline46mondego> */<newline46mondego>public class App <newline46mondego>{<newline46mondego>    public static void main( String[] args )<newline46mondego>    {<newline46mondego>        LegendItem item1 = new LegendItem(<doubleQuotes46>US<doubleQuotes46>, <doubleQuotes46>US<doubleQuotes46>, <doubleQuotes46>US<doubleQuotes46>, <doubleQuotes46>US<doubleQuotes46>,<newline46mondego>                new Rectangle(10, 10), new GradientPaint(0.0f, 0.0f,<newline46mondego>                new Color(16, 89, 172), 0.0f, 0.0f, new Color(201, 201, 244)));<newline46mondego><newline46mondego>        System.out.println(item1.getSeriesIndex());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2850splitHere46","4397309splitHere46","ApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(pageContext.getServletContext()); <newline46mondego>MyService myService = context.getBean(MyService.class);<newline46mondego>myService.doSomething();<newline46mondego>"
"2851splitHere46","4397316splitHere46","Runnable"
"2852splitHere46","4397316splitHere46","Callable<Set<Image>>"
"2853splitHere46","4397316splitHere46","Future<Set<Image>>"
"2854splitHere46","4397316splitHere46","Future<Set<Image>> future =<newline46mondego>  Executors.newSingleThreadExecutor().submit(new Callable<Set<Image>>()<newline46mondego>    {<newline46mondego>      @Override<newline46mondego>      public Set<Image> call() throws Exception<newline46mondego>      {<newline46mondego>        return someServiceThatLoadsImages.load();<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>try<newline46mondego>{<newline46mondego>  Set<Image> images = future.get();<newline46mondego>  display(images);<newline46mondego>} catch (Exception e)<newline46mondego>{<newline46mondego>  logger.error(<doubleQuotes46>Something bad happened<doubleQuotes46>, e);<newline46mondego>}<newline46mondego>"
"2855splitHere46","4397671splitHere46","instanceof"
"2856splitHere46","4397671splitHere46","instanceof"
"2857splitHere46","4397737splitHere46","filter"
"2858splitHere46","4397737splitHere46","<bean:write name=<doubleQuotes46>booklist<doubleQuotes46> property=<doubleQuotes46>title<doubleQuotes46> filter=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"2859splitHere46","4397737splitHere46","<bean:write>"
"2860splitHere46","4397737splitHere46","true"
"2861splitHere46","4397744splitHere46","public enum BazEnum {<newline46mondego>    FOO(0x01),<newline46mondego>    BAR(0x09);<newline46mondego><newline46mondego>    private int value;<newline46mondego><newline46mondego>    BazEnum(int value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getValue() {<newline46mondego>        return value;<newline46mondego>    }<newline46mondego><newline46mondego>    public static BazEnum fromValue(int value) {<newline46mondego>        for (BazEnum curenum : BazEnum.values()) {<newline46mondego>            if (curenum.getValue() == value) {<newline46mondego>                return curenum;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class MainClass {<newline46mondego>    public static void main(String[] params) {<newline46mondego>        BazEnum baz = BazEnum.fromValue(0x09);<newline46mondego><newline46mondego>        switch baz {<newline46mondego>            case FOO:<newline46mondego>                ...<newline46mondego>                break;<newline46mondego>            case BAR:<newline46mondego>                ...<newline46mondego>                break;<newline46mondego>            default:<newline46mondego>                ...<newline46mondego>                break;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2862splitHere46","4397781splitHere46","Class stemClass = Class.forName(<doubleQuotes46>org.tartarus.snowball.ext.<doubleQuotes46> + lang + <doubleQuotes46>Stemmer<doubleQuotes46>);<newline46mondego>  stemmer = (SnowballProgram) stemClass.newInstance();<newline46mondego>  stemmer.setCurrent(<doubleQuotes46>your_word<doubleQuotes46>);<newline46mondego>  stemmer.stem();<newline46mondego>  String your_stemmed_word = stemmer.getCurrent();  <newline46mondego>"
"2863splitHere46","4397782splitHere46","RuleHandler<T extends Rule>"
"2864splitHere46","4397782splitHere46","RuleHandler<?> === RuleHandler<? extends Rule>"
"2865splitHere46","4397782splitHere46","abstract class RuleHandler<T extends Rule><newline46mondego>{<newline46mondego>  final Class<T> clazz;<newline46mondego>  // as before<newline46mondego>}<newline46mondego><newline46mondego>class HandlerDispatcher<newline46mondego>{<newline46mondego>  private final Map<Class<?>, RuleHandler<?>> handlers;<newline46mondego>  void register(RuleHandler<?> handler)<newline46mondego>  {<newline46mondego>    handlers.put(handler.clazz, handler);<newline46mondego>  }<newline46mondego>  void doStuff(List<Rule> rules)<newline46mondego>  {<newline46mondego>    for(Rule rule : rules)<newline46mondego>    {<newline46mondego>      @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>      RuleHandler<Rule> handler = (RuleHandler<Rule>) handlers.get(rule.getClass());<newline46mondego>      handler.doStuff(rule);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>class Test<newline46mondego>{<newline46mondego>  void main()<newline46mondego>  {<newline46mondego>    HandlerDispatcher hd = new HandlerDispatcher();<newline46mondego>    hd.register(new ExampleRuleHandler());<newline46mondego><newline46mondego>    RuleHandler<?> handler = new ExampleRuleHandler();<newline46mondego>    hd.register(handler);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2866splitHere46","4397863splitHere46","SELECT COUNT(*)"
"2867splitHere46","4397863splitHere46","//do nothing everything's as it should be<newline46mondego>"
"2868splitHere46","4397863splitHere46","select column_name"
"2869splitHere46","4397863splitHere46","select count(*)"
"2870splitHere46","4397863splitHere46","Cursor cur = db.rawQuery(<doubleQuotes46>SELECT COUNT(*) FROM CAT_BUD_TAB<doubleQuotes46>, null);<newline46mondego>if (cur != null) {<newline46mondego>    cur.moveToFirst();                       // Always one row returned.<newline46mondego>    if (cur.getInt (0) == 0) {               // Zero count means empty table.<newline46mondego>        for (int i = 0; i < 13; i++) {<newline46mondego>            db.execSQL (catInsertArray[i]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2871splitHere46","4397997splitHere46","<html:options collection='catList' property='catId' labelProperty='catName'><newline46mondego>"
"2872splitHere46","4397997splitHere46","category"
"2873splitHere46","4397997splitHere46","Category"
"2874splitHere46","4398213splitHere46","super()"
"2875splitHere46","4398213splitHere46","class A {<newline46mondego>    public A() {<newline46mondego>        System.out.println(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class B extends A {<newline46mondego>    public B() {<newline46mondego>        super();<newline46mondego>        System.out.println(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class C extends B {<newline46mondego>    public C() {<newline46mondego>        super();<newline46mondego>        System.out.println(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Inheritance {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        C c = new C();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2876splitHere46","4398213splitHere46","super();"
"2877splitHere46","4398213splitHere46","super(parameter.. )"
"2878splitHere46","4398320splitHere46","<c:out>"
"2879splitHere46","4398320splitHere46","<h:outputText>"
"2880splitHere46","4398320splitHere46","<c:out value=<doubleQuotes46>${bean.text}<doubleQuotes46> escapeXml=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>"
"2881splitHere46","4398320splitHere46","<h:outputText value=<doubleQuotes46>#{bean.text}<doubleQuotes46> escape=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>"
"2882splitHere46","4398320splitHere46","replaceAll()"
"2883splitHere46","4398320splitHere46","white-space: pre;"
"2884splitHere46","4398383splitHere46","ResultSet"
"2885splitHere46","4398398splitHere46","String str = <doubleQuotes46>Hello  <doubleQuotes46>;<newline46mondego>String str2 = str.trim();<newline46mondego>"
"2886splitHere46","4398515splitHere46","opsByClass"
"2887splitHere46","4398515splitHere46","ServiceObject"
"2888splitHere46","4398515splitHere46","ServiceObject"
"2889splitHere46","4398515splitHere46","Foo"
"2890splitHere46","4398515splitHere46","ServiceObject"
"2891splitHere46","4398515splitHere46","svc.execute"
"2892splitHere46","4398515splitHere46","ServiceObject"
"2893splitHere46","4398515splitHere46","Operation"
"2894splitHere46","4398726splitHere46","public class DBAct extends Activity {<newline46mondego>    private DataHelper dh;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(Bundle savedInstanceState) {<newline46mondego>        super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>        //init your activity here<newline46mondego>        //e.g. setContentView(R.layout.main);<newline46mondego><newline46mondego>        dh = new DataHelper(this);<newline46mondego>        SQLiteDatabase db = dh.getReadableDatabase();<newline46mondego>        Cursor cursor = db.query(<doubleQuotes46>books<doubleQuotes46>, new String[] { <doubleQuotes46>title<doubleQuotes46> }, null, null, null, null, <doubleQuotes46>title desc<doubleQuotes46>);<newline46mondego>        if (cursor.moveToFirst()) {<newline46mondego>            do {<newline46mondego>                list.add(cursor.getString(0));<newline46mondego>            } while (cursor.moveToNext());<newline46mondego>        }<newline46mondego>        if (cursor != null && !cursor.isClosed()) {<newline46mondego>           cursor.close();<newline46mondego>        }<newline46mondego>        db.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2895splitHere46","4399203splitHere46","request.getRequestDispatcher(<doubleQuotes46>myFile.jsp<doubleQuotes46>).forward(request, repsponse);<newline46mondego>"
"2896splitHere46","4399338splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>  cal.set(Calendar.HOUR_OF_DAY, cal.getActualMinimum(Calendar.HOUR_OF_DAY));<newline46mondego>  cal.set(Calendar.MINUTE, cal.getActualMinimum(Calendar.MINUTE));<newline46mondego>  cal.set(Calendar.SECOND, cal.getActualMinimum(Calendar.SECOND));<newline46mondego>  cal.set(Calendar.MILLISECOND, cal.getActualMinimum(Calendar.MILLISECOND));<newline46mondego>"
"2897splitHere46","4399338splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>  cal.set(Calendar.HOUR_OF_DAY, 0);<newline46mondego>  cal.set(Calendar.MINUTE, 0)<newline46mondego>  cal.set(Calendar.SECOND, 0);<newline46mondego>  cal.set(Calendar.MILLISECOND, 0);<newline46mondego>"
"2898splitHere46","4399623splitHere46","T"
"2899splitHere46","4399623splitHere46","defValue"
"2900splitHere46","4399623splitHere46","Class<?> tType = defValue.get(0).getClass();<newline46mondego><newline46mondego>if (Boolean.class.isAssignableFrom(tType)) { //...  <newline46mondego>"
"2901splitHere46","4399623splitHere46","getTypeArguments()"
"2902splitHere46","4399623splitHere46","Method"
"2903splitHere46","4399623splitHere46","getTypeParameters()"
"2904splitHere46","4399623splitHere46","T"
"2905splitHere46","4399623splitHere46","T"
"2906splitHere46","4399692splitHere46","Long, Integer, Double"
"2907splitHere46","4399692splitHere46","java.util.HashMap<String, Integer> map = new java.util.HashMap<String,Integer>();<newline46mondego>map.put(<doubleQuotes46>one<doubleQuotes46>, 1); // 1 is an integer, not an instance of Integer<newline46mondego>"
"2908splitHere46","4399692splitHere46","Map<String, Number>"
"2909splitHere46","4399692splitHere46","BigDecimal, BigInteger, Byte, Double, Float, Integer, Long, Short"
"2910splitHere46","4399692splitHere46","AtomicLong, AtomicInteger"
"2911splitHere46","4399692splitHere46","Map<String, Number> map = new HashMap<String, Number>();<newline46mondego><newline46mondego>map.put(<doubleQuotes46>one<doubleQuotes46>, 1);<newline46mondego>map.put(<doubleQuotes46>two<doubleQuotes46>, 2.0);<newline46mondego>map.put(<doubleQuotes46>three<doubleQuotes46>, 1L);<newline46mondego><newline46mondego>for(String k:map.keySet()) {<newline46mondego>  Number v = map.get(k);<newline46mondego>  System.err.println(v + <doubleQuotes46> is instance of <doubleQuotes46> + v.getClass().getName() + <doubleQuotes46>: <doubleQuotes46> + v);<newline46mondego>}<newline46mondego>"
"2912splitHere46","4400046splitHere46","JTable table = new JTable();<newline46mondego>JButton button = new JButton();<newline46mondego>button.setEnabled(false);<newline46mondego><newline46mondego>ListSelectionModel listSelectionModel = table.getSelectionModel();<newline46mondego>listSelectionModel.addListSelectionListener(new ListSelectionListener() {<newline46mondego>        public void valueChanged(ListSelectionEvent e) { <newline46mondego>            ListSelectionModel lsm = (ListSelectionModel)e.getSource();<newline46mondego>            button.setEnabled(!lsm.isSelectionEmpty());<newline46mondego>});<newline46mondego>"
"2913splitHere46","4400111splitHere46","public static <T> T unmarshal( Class<T> docClass, InputStream inputStream ) throws JAXBException, SAXException {<newline46mondego>    String packageName = docClass.getPackage().getName();<newline46mondego>    JAXBContext jc = JAXBContext.newInstance( packageName );<newline46mondego>    Unmarshaller u = jc.createUnmarshaller();<newline46mondego>    XMLValidator xmlValidator=new XMLValidator();<newline46mondego>    xmlValidator.validateXMLToSchema(u, null);<newline46mondego>    u.unmarshal(inputStream);<newline46mondego>}<newline46mondego>"
"2914splitHere46","4400432splitHere46","FALSE"
"2915splitHere46","4400432splitHere46","=="
"2916splitHere46","4400432splitHere46","a"
"2917splitHere46","4400432splitHere46","b"
"2918splitHere46","4400432splitHere46","FALSE"
"2919splitHere46","4400432splitHere46","String a = <doubleQuotes46>TEST<doubleQuotes46>; String b = <doubleQuotes46>TEST<doubleQuotes46>;"
"2920splitHere46","4400432splitHere46","TRUE"
"2921splitHere46","4400662splitHere46","String[] strings = { <doubleQuotes46>Here<doubleQuotes46>, <doubleQuotes46>Are<doubleQuotes46>, <doubleQuotes46>Some<doubleQuotes46>, <doubleQuotes46>Strings<doubleQuotes46> };<newline46mondego>Vector<String> vector = new Vector<String>(Arrays.asList(strings));<newline46mondego>"
"2922splitHere46","4400664splitHere46","<context-param><newline46mondego>    <param-name>log4jConfigLocation</param-name><newline46mondego>    <param-value>/WEB-INF/classes/log4j.web.properties</param-value><newline46mondego></context-param><newline46mondego><newline46mondego><listener><newline46mondego>    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class><newline46mondego></listener><newline46mondego>"
"2923splitHere46","4400703splitHere46","this"
"2924splitHere46","4400817splitHere46","<persistence xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/persistence<doubleQuotes46> version=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego>    <persistence-unit name=<doubleQuotes46>name<doubleQuotes46>><newline46mondego>        <provider>org.hibernate.ejb.HibernatePersistence</provider><newline46mondego>        <mapping-file>com/equifax/aspire/persistence/framework/hibernate/EmptySupportedString.hbm.xml</mapping-file><newline46mondego>"
"2925splitHere46","4400872splitHere46","String password = new String(Hex.encodeHex(cript.digest()),<newline46mondego>                             CharSet.forName(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"2926splitHere46","4400889splitHere46","CountDownLatch"
"2927splitHere46","4400889splitHere46","AbstractQueuedSynchronizer"
"2928splitHere46","4400889splitHere46","Unsafe.compareAndSwapInt"
"2929splitHere46","4400890splitHere46","class ConnectionUtil {<newline46mondego>    public static final ThreadLocal<Connection> connection = new ThreadLocal<Connection>();<newline46mondego>}<newline46mondego><newline46mondego>public Return method(Args arg) {<newline46mondego>    ConnectionUtil.connection.set(newConnection());<newline46mondego>    try {<newline46mondego>        ...<newline46mondego>    } finally {<newline46mondego>        ConnectionUtil.connection.remove();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2930splitHere46","4400903splitHere46","O(log N)"
"2931splitHere46","4400903splitHere46","O(1)"
"2932splitHere46","4400903splitHere46","O(N)"
"2933splitHere46","4400933splitHere46","1. public void setValue(Object value)<newline46mondego>2. public void setStepSize(Number stepSize)<newline46mondego>3. public void setMaximum(Comparable maximum)<newline46mondego>4. public void setMinimum(Comparable minimum)<newline46mondego>"
"2934splitHere46","4400933splitHere46","SpinnerModel"
"2935splitHere46","4400933splitHere46","SpinnerNumberModel"
"2936splitHere46","4400933splitHere46","AbstractSpinnerModel"
"2937splitHere46","4400933splitHere46","SpinnerNumberModel"
"2938splitHere46","4400933splitHere46","fireStateChanged"
"2939splitHere46","4401033splitHere46","com.example.GreatApp.resources"
"2940splitHere46","4401033splitHere46","getClassLoader().getResourceAsStream(<newline46mondego>               <doubleQuotes46>com/example/GreatApp/resource/icon.png<doubleQuotes46>);`<newline46mondego>"
"2941splitHere46","4401033splitHere46","/**<newline46mondego> * Creates and returns an ImageIcon from the resource in jar.<newline46mondego> * @param location resource location in the jar,<newline46mondego> * like 'com/example/GreatApp/res/icon.png' or null if it was not found.<newline46mondego> */<newline46mondego>public ImageIcon createImageIconFromResource(String location)<newline46mondego>           throws java.io.IOException {<newline46mondego>  java.io.InputStream input = getClassLoader().getResourceAsStream(<newline46mondego>               location);<newline46mondego>  // or throw an ioexception here aka `file not found`<newline46mondego>  if(input == null) return null;<newline46mondego>  return new ImageIcon(ImageIO.read(input));<newline46mondego>}<newline46mondego>"
"2942splitHere46","4401067splitHere46","b.setValue2(a.getValue2().longValue());<newline46mondego>"
"2943splitHere46","4401067splitHere46","a.value2"
"2944splitHere46","4401067splitHere46","Double"
"2945splitHere46","4401067splitHere46","b.setValue1(a.getValue1().doubleValue());<newline46mondego>"
"2946splitHere46","4401067splitHere46","Method"
"2947splitHere46","4401067splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>      A a = new A();<newline46mondego>      a.setValue1(1.0);<newline46mondego>      a.setValue2(5);<newline46mondego><newline46mondego>      B b = new B();<newline46mondego><newline46mondego>      Method[] methods = b.getClass().getMethods();<newline46mondego>      for ( Method m : methods ) {<newline46mondego>         if ( m.getName().equals(<doubleQuotes46>setValue2<doubleQuotes46>) ) {<newline46mondego>            m.invoke(b, transform(a.getValue2(), m.getParameterTypes()[0]));<newline46mondego>         }<newline46mondego>      }<newline46mondego>      System.out.println(b.getValue2());<newline46mondego>   }<newline46mondego><newline46mondego>   private static Number transform(Number n, Class<?> toClass) {<newline46mondego>      if ( toClass == Long.class ) {<newline46mondego>         return n.longValue();<newline46mondego>      } else if ( toClass == Double.class ) {<newline46mondego>         return n.doubleValue();<newline46mondego>      }<newline46mondego>      //instead of this you should handle the other cases exhaustively<newline46mondego>      return null;<newline46mondego>   }<newline46mondego>"
"2948splitHere46","4401067splitHere46","IllegalArgumentException"
"2949splitHere46","4401067splitHere46","a"
"2950splitHere46","4401067splitHere46","value2"
"2951splitHere46","4401067splitHere46","Long"
"2952splitHere46","4401067splitHere46","Integer"
"2953splitHere46","4401067splitHere46","a.value2"
"2954splitHere46","4401288splitHere46","=== httpd.conf in Apache server ===<newline46mondego><newline46mondego># enable the below or add new<newline46mondego>LoadModule proxy_module modules/mod_proxy.so<newline46mondego><newline46mondego>LoadModule proxy_http_module modules/mod_proxy_http.so<newline46mondego><newline46mondego># Start Modules for PHP<newline46mondego>LoadModule php5_module <doubleQuotes46>c:/php/php5apache2_2.dll<doubleQuotes46><newline46mondego><newline46mondego>AddHandler application/x-httpd-php .php<newline46mondego><newline46mondego># configure the path to php.ini<newline46mondego>PHPIniDir <doubleQuotes46>c:/windows<doubleQuotes46><newline46mondego><newline46mondego># Just at the end of 'Main' server configuration - add the below<newline46mondego>ProxyRequests On <newline46mondego>ProxyVia On <newline46mondego><Proxy *><newline46mondego>    Order deny,allow<newline46mondego>    Allow from all<newline46mondego></Proxy><newline46mondego><newline46mondego>ProxyPass /examples http://localhost:8080/examples/<newline46mondego>ProxyPass /servlets http://localhost:8080/examples/servlets/<newline46mondego>ProxyPass /jsp http://localhost:8080/examples/jsp/<newline46mondego>ProxyPassReverse /examples http://localhost:8080/examples/<newline46mondego><newline46mondego># Finish Modules for PHP<newline46mondego><newline46mondego>=== server.xml in Tomcat ===<newline46mondego><!-- searched the below connector port=8080 and I replaced that tag with the below --><newline46mondego> <Connector port=<doubleQuotes46>8080<doubleQuotes46> maxHttpHeaderSize=<doubleQuotes46>8192<doubleQuotes46><newline46mondego>           maxThreads=<doubleQuotes46>150<doubleQuotes46> minSpareThreads=<doubleQuotes46>25<doubleQuotes46> maxSpareThreads=<doubleQuotes46>75<doubleQuotes46><newline46mondego>           enableLookups=<doubleQuotes46>false<doubleQuotes46> redirectPort=<doubleQuotes46>8443<doubleQuotes46> acceptCount=<doubleQuotes46>100<doubleQuotes46><newline46mondego>           connectionTimeout=<doubleQuotes46>20000<doubleQuotes46> disableUploadTimeout=<doubleQuotes46>true<doubleQuotes46><newline46mondego>           proxyName=<doubleQuotes46>http://localhost<doubleQuotes46> proxyPort=<doubleQuotes46>80<doubleQuotes46>/><newline46mondego>"
"2955splitHere46","4401387splitHere46","Enumeration e = Logger.getRootLogger().getAllAppenders();<newline46mondego>    while ( e.hasMoreElements() ){<newline46mondego>      Appender app = (Appender)e.nextElement();<newline46mondego>      if ( app instanceof FileAppender ){<newline46mondego>        System.out.println(<doubleQuotes46>File: <doubleQuotes46> + ((FileAppender)app).getFile());<newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"2956splitHere46","4401410splitHere46","-XX:MaxHeapSize=256m"
"2957splitHere46","4401410splitHere46","-Xmx512m"
"2958splitHere46","4401796splitHere46","Class A{<newline46mondego>public static int a=0;<newline46mondego>}<newline46mondego><newline46mondego>Class B{<newline46mondego>public void someMethod(){<newline46mondego>A.a = 10;<newline46mondego>}<newline46mondego>}<newline46mondego>"
"2959splitHere46","4401860splitHere46","<form id=<doubleQuotes46>leadform<doubleQuotes46> enctype=<doubleQuotes46>application/x-www-form-urlencoded; charset=utf-8<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> accept-charset=<doubleQuotes46>utf-8<doubleQuotes46> action=<doubleQuotes46>{//app/path}<doubleQuotes46>><newline46mondego>"
"2960splitHere46","4401860splitHere46","<form id=<doubleQuotes46>leadform<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> action=<doubleQuotes46>{//app/path}<doubleQuotes46>><newline46mondego>"
"2961splitHere46","4401860splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>"
"2962splitHere46","4401860splitHere46","text/html"
"2963splitHere46","4401860splitHere46","<!DOCTYPE html PUBLIC <doubleQuotes46>-//W3C//DTD XHTML 1.0 Transitional//EN<doubleQuotes46> <doubleQuotes46>http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd<doubleQuotes46>><newline46mondego>"
"2964splitHere46","4401860splitHere46","<!DOCTYPE html>"
"2965splitHere46","4401860splitHere46","<meta http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=utf-8<doubleQuotes46>/><newline46mondego>"
"2966splitHere46","4401860splitHere46","-Dfile.encoding=UTF-8<newline46mondego>"
"2967splitHere46","4401860splitHere46","request.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);"
"2968splitHere46","4401860splitHere46","getParameter()"
"2969splitHere46","4401860splitHere46","Filter"
"2970splitHere46","4401860splitHere46","<%@page pageEncoding=<doubleQuotes46>UTF-8<doubleQuotes46> %><newline46mondego>"
"2971splitHere46","4401860splitHere46","Filter"
"2972splitHere46","4401860splitHere46","doFilter()"
"2973splitHere46","4401860splitHere46","if (request.getCharacterEncoding() == null) {<newline46mondego>    request.setCharacterEncoding(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>}<newline46mondego>chain.doFilter(request, response);<newline46mondego>"
"2974splitHere46","4401860splitHere46","<Connector>"
"2975splitHere46","4401860splitHere46","Tomcat/conf/server.xml"
"2976splitHere46","4401860splitHere46","<Connector (...) URIEncoding=<doubleQuotes46>UTF-8<doubleQuotes46> /><newline46mondego>"
"2977splitHere46","4401871splitHere46","ArrayList<ArrayList<String>> array = new ArrayList<ArrayList<String>>();"
"2978splitHere46","4401871splitHere46","import java.util.ArrayList;<newline46mondego><newline46mondego>class TwoDimentionalArrayList<T> extends ArrayList<ArrayList<T>> {<newline46mondego>    public void addToInnerArray(int index, T element) {<newline46mondego>        while (index >= this.size()) {<newline46mondego>            this.add(new ArrayList<T>());<newline46mondego>        }<newline46mondego>        this.get(index).add(element);<newline46mondego>    }<newline46mondego><newline46mondego>    public void addToInnerArray(int index, int index2, T element) {<newline46mondego>        while (index >= this.size()) {<newline46mondego>            this.add(new ArrayList<T>());<newline46mondego>        }<newline46mondego><newline46mondego>        ArrayList<T> inner = this.get(index);<newline46mondego>        while (index2 >= inner.size()) {<newline46mondego>            inner.add(null);<newline46mondego>        }<newline46mondego><newline46mondego>        inner.set(index2, element);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2979splitHere46","4401927splitHere46","Main-Class: Machine.WarMachine<newline46mondego>"
"2980splitHere46","4401927splitHere46","machine"
"2981splitHere46","4401938splitHere46","if (!theEvent.has(<doubleQuotes46>plugin<doubleQuotes46>))<newline46mondego>{<newline46mondego>    processNonPluginEvent(theEvent);<newline46mondego>    return;<newline46mondego>}<newline46mondego>"
"2982splitHere46","4401938splitHere46","JSONObject"
"2983splitHere46","4402297splitHere46","Runnable"
"2984splitHere46","4402297splitHere46","new Thread(runnable)"
"2985splitHere46","4402297splitHere46","SwingUtilities.invokeLater(runnable)"
"2986splitHere46","4402843splitHere46","@Transactional"
"2987splitHere46","4402843splitHere46","@Transactional(rollbackFor={MyInvalidUserException.class, MyApplicationException.class})<newline46mondego>public void method() throws MyInvalidUserException, MyApplicationException { ... }<newline46mondego>"
"2988splitHere46","4402877splitHere46","ImageIO.write(bufferedImage,<doubleQuotes46>jpg<doubleQuotes46>,file);<newline46mondego>"
"2989splitHere46","4402877splitHere46","IIOImage outputImage = new IIOImage(bufferedImage, null, null);<newline46mondego><newline46mondego>ImageWriter writer = ImageIO.getImageWritersByFormatName(<doubleQuotes46>jpeg<doubleQuotes46>).next();        <newline46mondego>writer.setOutput(new FileImageOutputStream(outFile));<newline46mondego>ImageWriteParam writeParam = writer.getDefaultWriteParam();<newline46mondego>writeParam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);<newline46mondego>writeParam.setCompressionQuality(.75f); // float between 0 and 1, 1 for max quality.<newline46mondego>writer.write( null, outputImage, writeParam);<newline46mondego>"
"2990splitHere46","4403142splitHere46","private static class MyDbHelper extends SQLiteOpenHelper<newline46mondego>{<newline46mondego><newline46mondego>    public MyDbHelper(Context context, String description, CursorFactory factory, int version)<newline46mondego>    {<newline46mondego>        super(context, description, factory, version);          <newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onCreate(SQLiteDatabase _db)<newline46mondego>    {<newline46mondego>        _db.execSQL(CREATE_TABLE_1);<newline46mondego>        _db.execSQL(CREATE_TABLE_2);<newline46mondego>        _db.execSQL(CREATE_TABLE_3);<newline46mondego>        ..etc<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void onUpgrade(SQLiteDatabase _db, int oldVersion, int newVersion)<newline46mondego>    {<newline46mondego>        // Log the version upgrade.<newline46mondego>        Log.w(<doubleQuotes46>MyDbAdapter<doubleQuotes46>, <doubleQuotes46>Upgrading from version <doubleQuotes46> + oldVersion + <doubleQuotes46> to <doubleQuotes46> +<newline46mondego>                newVersion + <doubleQuotes46>, which will destroy all old data.<doubleQuotes46>);<newline46mondego><newline46mondego>        _db.execSQL(<doubleQuotes46>DROP TABLE IF EXISTS <doubleQuotes46> + TBL_ONE);<newline46mondego>        _db.execSQL(<doubleQuotes46>DROP TABLE IF EXISTS <doubleQuotes46> + TBL_TWO);<newline46mondego>        _db.execSQL(<doubleQuotes46>DROP TABLE IF EXISTS <doubleQuotes46> + TBL_THREE);<newline46mondego><newline46mondego>        onCreate(_db);          <newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2991splitHere46","4403142splitHere46","private SQLiteDatabase db;  <newline46mondego>private MyDbHelper dbHelper;<newline46mondego><newline46mondego>public MyDbAdapter(Context context)<newline46mondego>{       <newline46mondego>    dbHelper = new MyDbHelper(context, DATABASE_NAME, null, DB_VERSION);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public MyDbAdapter open() throws SQLException<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        db = dbHelper.getWritableDatabase();<newline46mondego>    }<newline46mondego>    catch (SQLiteException ex)<newline46mondego>    {<newline46mondego>        db = dbHelper.getReadableDatabase();<newline46mondego>    }<newline46mondego><newline46mondego>    return this;<newline46mondego>}<newline46mondego><newline46mondego>public void close()<newline46mondego>{<newline46mondego>    db.close();<newline46mondego>}<newline46mondego>"
"2992splitHere46","4403142splitHere46","public class ListsDAO<newline46mondego> {<newline46mondego>private Context mContext;<newline46mondego>private MyDbAdapter db;<newline46mondego><newline46mondego>public ListsDAO(Context context)<newline46mondego>{<newline46mondego>    mContext = context;<newline46mondego>    db = new MyDbAdapter(mContext);<newline46mondego>}<newline46mondego><newline46mondego>public List<MyObject> getAllObjects()<newline46mondego>{<newline46mondego>    List<MyObject> objects = new ArrayList<MyObject>();<newline46mondego><newline46mondego>    db.open();<newline46mondego>    Cursor cursor = db.getAllObjects();     <newline46mondego><newline46mondego>    if (cursor.moveToFirst())<newline46mondego>    {<newline46mondego>"
"2993splitHere46","4403570splitHere46","int r = x % n;<newline46mondego>if (r > 0 && x < 0)<newline46mondego>{<newline46mondego>    r -= n;<newline46mondego>}<newline46mondego>"
"2994splitHere46","4403570splitHere46","int r = x % n;<newline46mondego>if (r < 0)<newline46mondego>{<newline46mondego>    r += n;<newline46mondego>}<newline46mondego>"
"2995splitHere46","4403826splitHere46","@Pointcut(<doubleQuotes46>execution(private * *(..))<doubleQuotes46>)<newline46mondego> public void anyPrivateMethod() {}<newline46mondego><newline46mondego> @Before(<doubleQuotes46>anyPrivateMethod()<doubleQuotes46>)<newline46mondego> public void beforePrivateMethod(JoinPoint jp) {<newline46mondego>     System.out.println(<doubleQuotes46>Before a private method...<doubleQuotes46>);<newline46mondego> }<newline46mondego>"
"2996splitHere46","4403885splitHere46","@RequestMapping(value=<doubleQuotes46>/url/{varible}<doubleQuotes46>, method=RequestMethod.GET)<newline46mondego>public String controllerMethod(@PathVariable(<doubleQuotes46>varible<doubleQuotes46>) String theVariable, Model model) {<newline46mondego>    //I get the variable in the variable<newline46mondego>    ... <newline46mondego>}<newline46mondego>"
"2997splitHere46","4403983splitHere46","bool success = false;<newline46mondego>try {<newline46mondego>    //your code<newline46mondego>    success = true;<newline46mondego>    return retVal;<newline46mondego>} finally {<newline46mondego>    if (!success) {<newline46mondego>        //clean up<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2998splitHere46","4404038splitHere46","for(int i = 1; i <= 10; i ++) {<newline46mondego>      System.out.println(i % 10);<newline46mondego>}<newline46mondego>"
"2999splitHere46","4404048splitHere46","private static Jframe openFrame;<newline46mondego>...<newline46mondego>...<newline46mondego>if (openFrame != null)<newline46mondego>{<newline46mondego>    openFrame.dispose();<newline46mondego>}<newline46mondego><newline46mondego>openFrame = this;<newline46mondego>"
"3000splitHere46","4404061splitHere46","Model model = null;<newline46mondego>FileReader reader = null;<newline46mondego>MavenXpp3Reader mavenreader = new MavenXpp3Reader();<newline46mondego>try {<newline46mondego>    reader = new FileReader(pomfile);<newline46mondego>    model = mavenreader.read(reader);<newline46mondego>    model.setPomFile(pomfile);<newline46mondego>}catch(Exception ex){}<newline46mondego>MavenProject project = new MavenProject(model);<newline46mondego>"
"3001splitHere46","4404115splitHere46","package aaa;<newline46mondego><newline46mondego>// AN OBSERVER INTERFACE<newline46mondego>// This is a contract between an interested party (the OBSERVER) and<newline46mondego>//   the thing it would like to know has changed (the OBSERVABLE)<newline46mondego>// The OBSERVABLE will call this method whenever its data changes<newline46mondego>public interface SomethingChangedListener {<newline46mondego>    void somethingChanged(String name, Object newValue);<newline46mondego>}<newline46mondego>"
"3002splitHere46","4404115splitHere46","package aaa;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>// An OBSERVABLE class<newline46mondego>public class Person {<newline46mondego>    // STEP 1: keep track of <doubleQuotes46>who cares<doubleQuotes46><newline46mondego>    //         outsiders with interest implement the observer interface<newline46mondego>    //         and register with the person to indicate that they care<newline46mondego>    private List<SomethingChangedListener> listeners = new ArrayList<SomethingChangedListener>();<newline46mondego>    public void addSomethingChangedListener(SomethingChangedListener scl) {<newline46mondego>        listeners.add(scl);<newline46mondego>    }<newline46mondego>    public void removeSomethingChangedListener(SomethingChangedListener scl) {<newline46mondego>        listeners.remove(scl);<newline46mondego>    }<newline46mondego><newline46mondego>    // STEP 2: be able to notify those observers by calling a method in the observer interface<newline46mondego>    protected void fireSomethingChanged(String name, Object newValue) {<newline46mondego>        for (SomethingChangedListener scl : listeners) {<newline46mondego>            scl.somethingChanged(name, newValue);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // STEP 3: whenever the data changes, notify the observers<newline46mondego>    private String name;<newline46mondego>    private int age;<newline46mondego><newline46mondego>    public int getAge() {<newline46mondego>        return age;<newline46mondego>    }<newline46mondego>    public void setAge(int age) {<newline46mondego>        this.age = age;<newline46mondego>        fireSomethingChanged(<doubleQuotes46>age<doubleQuotes46>, name);<newline46mondego>    }<newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>        fireSomethingChanged(<doubleQuotes46>name<doubleQuotes46>, name);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3003splitHere46","4404115splitHere46","package aaa;<newline46mondego><newline46mondego>public class Test1 {<newline46mondego>    private static class TestObserver implements SomethingChangedListener {<newline46mondego>        @Override public void somethingChanged(String name, Object newValue) {<newline46mondego>            System.out.println(<doubleQuotes46>Property '<doubleQuotes46> + name + <doubleQuotes46>' changed to '<doubleQuotes46> + newValue + <doubleQuotes46>'<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Person p = new Person();<newline46mondego>        p.addSomethingChangedListener(new TestObserver());<newline46mondego>        p.setName(<doubleQuotes46>Scott<doubleQuotes46>);<newline46mondego>        p.setAge(43);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3004splitHere46","4404115splitHere46","Property 'name' changed to 'Scott'<newline46mondego>Property 'age' changed to 'Scott'<newline46mondego>"
"3005splitHere46","4404115splitHere46","person.setName(textFromField);<newline46mondego>"
"3006splitHere46","4404149splitHere46","if (lista.contains(conta1)) {<newline46mondego>    System.out.println(<doubleQuotes46>Account found<doubleQuotes46>);<newline46mondego>} else {<newline46mondego>    System.out.println(<doubleQuotes46>Account not found<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3007splitHere46","4404149splitHere46","CurrentAccount"
"3008splitHere46","4404149splitHere46","Source > Generate hashCode() and equals()..."
"3009splitHere46","4404363splitHere46","button.setFocusable(false);<newline46mondego>"
"3010splitHere46","4404614splitHere46","lookingAt()"
"3011splitHere46","4404614splitHere46","\A"
"3012splitHere46","4404614splitHere46","<"
"3013splitHere46","4404614splitHere46","&"
"3014splitHere46","4404614splitHere46",".*"
"3015splitHere46","4404614splitHere46",".*"
"3016splitHere46","4404614splitHere46","region(int, int)"
"3017splitHere46","4404614splitHere46","position = matcher.end();<newline46mondego>matcher.region(position, matcher.regionEnd());<newline46mondego>"
"3018splitHere46","4404614splitHere46",".*"
"3019splitHere46","4404614splitHere46","usePattern()"
"3020splitHere46","4404614splitHere46","\\G"
"3021splitHere46","4404614splitHere46","find()"
"3022splitHere46","4404614splitHere46","find(int)"
"3023splitHere46","4404614splitHere46","region()"
"3024splitHere46","4404614splitHere46","lookingAt()"
"3025splitHere46","4404881splitHere46","org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
"3026splitHere46","4404881splitHere46","ViewResolvers"
"3027splitHere46","4404881splitHere46","<bean class=<doubleQuotes46>org.springframework.web.servlet.view.ContentNegotiatingViewResolver<doubleQuotes46>><newline46mondego>  <property name=<doubleQuotes46>mediaTypes<doubleQuotes46>><newline46mondego>    <map><newline46mondego>      <entry key=<doubleQuotes46>atom<doubleQuotes46> value=<doubleQuotes46>application/atom+xml<doubleQuotes46>/><newline46mondego>      <entry key=<doubleQuotes46>html<doubleQuotes46> value=<doubleQuotes46>text/html<doubleQuotes46>/><newline46mondego>      <entry key=<doubleQuotes46>json<doubleQuotes46> value=<doubleQuotes46>application/json<doubleQuotes46>/><newline46mondego>    </map><newline46mondego>  </property><newline46mondego>  <property name=<doubleQuotes46>viewResolvers<doubleQuotes46>><newline46mondego>    <list><newline46mondego>      <bean class=<doubleQuotes46>org.springframework.web.servlet.view.InternalResourceViewResolver<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>prefix<doubleQuotes46> value=<doubleQuotes46>/WEB-INF/jsp/<doubleQuotes46>/><newline46mondego>        <property name=<doubleQuotes46>suffix<doubleQuotes46> value=<doubleQuotes46>.jsp<doubleQuotes46>/><newline46mondego>      </bean><newline46mondego>    </list><newline46mondego>  </property><newline46mondego>  <property name=<doubleQuotes46>defaultViews<doubleQuotes46>><newline46mondego>    <list><newline46mondego>      <bean class=<doubleQuotes46>org.springframework.web.servlet.view.json.MappingJacksonJsonView<doubleQuotes46> /><newline46mondego>    </list><newline46mondego>  </property><newline46mondego></bean><newline46mondego><bean id=<doubleQuotes46>content<doubleQuotes46> class=<doubleQuotes46>com.springsource.samples.rest.SampleContentAtomView<doubleQuotes46>/><newline46mondego>"
"3028splitHere46","4404881splitHere46","import org.springframework.stereotype.Controller;<newline46mondego>import org.springframework.ui.ModelMap;<newline46mondego>import org.springframework.web.bind.annotation.RequestMapping;<newline46mondego><newline46mondego>@Controller<newline46mondego>public class BlogsController {<newline46mondego><newline46mondego>    @RequestMapping(<doubleQuotes46>/blogs<doubleQuotes46>)<newline46mondego>    public String index(ModelMap model) {<newline46mondego>        model.addAttribute(<doubleQuotes46>blog<doubleQuotes46>, new Blog(<doubleQuotes46>foobar<doubleQuotes46>));<newline46mondego>        return <doubleQuotes46>blogs/index<doubleQuotes46>;<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"3029splitHere46","4404894splitHere46","malloc"
"3030splitHere46","4404894splitHere46","new"
"3031splitHere46","4404894splitHere46","delete"
"3032splitHere46","4404894splitHere46","free"
"3033splitHere46","4405075splitHere46","class MyObject<newline46mondego>{<newline46mondego>    private String name;<newline46mondego>    private int age;<newline46mondego>    private String password;<newline46mondego><newline46mondego>    // Getters and setters<newline46mondego>}<newline46mondego>"
"3034splitHere46","4405106splitHere46","try {    <newline46mondego>  BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out));<newline46mondego><newline46mondego>  log.write(<doubleQuotes46>This will be printed on stdout!\n<doubleQuotes46>);<newline46mondego>  log.flush();<newline46mondego>}<newline46mondego>catch (Exception e) {<newline46mondego>  e.printStackTrace();<newline46mondego>}<newline46mondego>"
"3035splitHere46","4405106splitHere46","OutputStreamWriter"
"3036splitHere46","4405106splitHere46","PrintWriter"
"3037splitHere46","4405106splitHere46","Writer"
"3038splitHere46","4405106splitHere46","BufferedWriter log;<newline46mondego><newline46mondego>Writer openForFile(String fileName) {<newline46mondego>  if (fileName != null)<newline46mondego>    return new PrintWriter(fileName);<newline46mondego>  else<newline46mondego>    return new OutputStreamWriter(System.out);<newline46mondego>}<newline46mondego><newline46mondego>log = new BufferedWriter(openForFile(null)); //stdout<newline46mondego>log = new BufferedWriter(openForFile(<doubleQuotes46>mylog.log<doubleQuotes46>)); // using a file<newline46mondego>"
"3039splitHere46","4405124splitHere46","-importkeystore [-v] <newline46mondego>         [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]<newline46mondego>         [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]<newline46mondego>         [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]<newline46mondego>         [-srcprotected] [-destprotected]<newline46mondego>         [-srcprovidername <srcprovidername>]<newline46mondego>         [-destprovidername <destprovidername>]<newline46mondego>         [-srcalias <srcalias> [-destalias <destalias>]<newline46mondego>           [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]<newline46mondego>         [-noprompt]<newline46mondego>         [-providerclass <provider_class_name> [-providerarg <arg>]] ...<newline46mondego>         [-providerpath <pathlist>]<newline46mondego>"
"3040splitHere46","4405128splitHere46","fn:escapeXml()"
"3041splitHere46","4405128splitHere46","<"
"3042splitHere46","4405128splitHere46",">"
"3043splitHere46","4405128splitHere46","<doubleQuotes46>"
"3044splitHere46","4405128splitHere46","'"
"3045splitHere46","4405128splitHere46","<%@taglib prefix=<doubleQuotes46>fn<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/functions<doubleQuotes46> %><newline46mondego>...<newline46mondego><input type=<doubleQuotes46>hidden<doubleQuotes46> name=<doubleQuotes46>countMap<doubleQuotes46> id=<doubleQuotes46>countMap<doubleQuotes46> value=<doubleQuotes46>${fn:escapeXml(countMap)}<doubleQuotes46>><newline46mondego>"
"3046splitHere46","4405128splitHere46","String#replace()"
"3047splitHere46","4405128splitHere46","return jsonString.replace(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>&quot;<doubleQuotes46>);<newline46mondego>"
"3048splitHere46","4405134splitHere46","String.matches()"
"3049splitHere46","4405134splitHere46","^"
"3050splitHere46","4405134splitHere46","$"
"3051splitHere46","4405134splitHere46","Matcher.find()"
"3052splitHere46","4405134splitHere46","String.matches()"
"3053splitHere46","4405134splitHere46","[a-z]+"
"3054splitHere46","4405134splitHere46","Matcher.find()"
"3055splitHere46","4405134splitHere46","[a-z]"
"3056splitHere46","4405143splitHere46","java.net.DatagramSocket"
"3057splitHere46","4405143splitHere46","DatagramSocket socket = new DatagramSocket();<newline46mondego>"
"3058splitHere46","4405143splitHere46","DatagramSocket socket = new DatagramSocket();<newline46mondego><newline46mondego>byte[] b = new byte[DGRAM_LENGTH];<newline46mondego>DatagramPacket dgram;<newline46mondego><newline46mondego>dgram = new DatagramPacket(b, b.length,<newline46mondego>  InetAddress.getByName(MCAST_ADDR), DEST_PORT);<newline46mondego><newline46mondego>System.err.println(<doubleQuotes46>Sending <doubleQuotes46> + b.length + <doubleQuotes46> bytes to <doubleQuotes46> +<newline46mondego>  dgram.getAddress() + ':' + dgram.getPort());<newline46mondego>while(true) {<newline46mondego>  System.err.print(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>  socket.send(dgram);<newline46mondego>  Thread.sleep(1000);<newline46mondego>}<newline46mondego>"
"3059splitHere46","4405143splitHere46","byte[] b = new byte[BUFFER_LENGTH];<newline46mondego>DatagramPacket dgram = new DatagramPacket(b, b.length);<newline46mondego>MulticastSocket socket =<newline46mondego>  new MulticastSocket(DEST_PORT); // must bind receive side<newline46mondego>socket.joinGroup(InetAddress.getByName(MCAST_ADDR));<newline46mondego><newline46mondego>while(true) {<newline46mondego>  socket.receive(dgram); // blocks until a datagram is received<newline46mondego>  System.err.println(<doubleQuotes46>Received <doubleQuotes46> + dgram.getLength() +<newline46mondego>    <doubleQuotes46> bytes from <doubleQuotes46> + dgram.getAddress());<newline46mondego>  dgram.setLength(b.length); // must reset length field!<newline46mondego>}<newline46mondego>"
"3060splitHere46","4405208splitHere46","package polygonexample;<newline46mondego><newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Polygon;<newline46mondego>import java.awt.event.MouseAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.util.LinkedList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Random;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author ndunn<newline46mondego> */<newline46mondego>public class PolygonExample extends JPanel {<newline46mondego><newline46mondego>    private static final int NUM_POLYGONS = 20;<newline46mondego><newline46mondego>    private List<MapPolygon> polygons;<newline46mondego><newline46mondego>    private static final int WIDTH = 600;<newline46mondego>    private static final int HEIGHT = 600;<newline46mondego>    private Random random = new Random();<newline46mondego>    public PolygonExample() {<newline46mondego><newline46mondego>        polygons = new LinkedList<MapPolygon>();<newline46mondego>        for (int i = 0; i < NUM_POLYGONS; i++) {<newline46mondego>            int x1 = random.nextInt(WIDTH);<newline46mondego>            int x2 = random.nextInt(WIDTH);<newline46mondego>            int x3 = random.nextInt(WIDTH);<newline46mondego><newline46mondego>            int y1 = random.nextInt(HEIGHT);<newline46mondego>            int y2 = random.nextInt(HEIGHT);<newline46mondego>            int y3 = random.nextInt(HEIGHT);<newline46mondego><newline46mondego>            int r = random.nextInt(255);<newline46mondego>            int g = random.nextInt(255);<newline46mondego>            int b = random.nextInt(255);<newline46mondego>            Color randomColor = new Color(r,g,b);<newline46mondego><newline46mondego>            polygons.add(new MapPolygon(new int[]{x1,x2,x3}, new int[]{y1,y2,y3}, 3, randomColor));<newline46mondego>        }<newline46mondego><newline46mondego>        addMouseListener(new MouseAdapter() {<newline46mondego>            @Override<newline46mondego>            public void mousePressed(MouseEvent e) {<newline46mondego>                for (MapPolygon mapPiece : polygons) {<newline46mondego>                    if (mapPiece.contains(e.getPoint())) {<newline46mondego>                        mapPiece.setSelected(!mapPiece.isSelected());<newline46mondego>                        repaint();<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return new Dimension(WIDTH, HEIGHT);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        final Color outlineColor = Color.BLACK;<newline46mondego>        for (MapPolygon mapPiece : polygons) {<newline46mondego>            if (mapPiece.isSelected()) {<newline46mondego>                g.setColor(mapPiece.getFillColor());<newline46mondego>                g.fillPolygon(mapPiece);<newline46mondego>            }<newline46mondego>            else {<newline46mondego>                g.setColor(outlineColor);<newline46mondego>                g.drawPolygon(mapPiece);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args the command line arguments<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        JPanel panel = new PolygonExample();<newline46mondego>        frame.getContentPane().add(panel);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    }<newline46mondego><newline46mondego>    private class MapPolygon extends Polygon {<newline46mondego><newline46mondego>        private boolean selected;<newline46mondego>        private Color fillColor;<newline46mondego><newline46mondego>        public MapPolygon(int[] xpoints, int[] ypoints, int npoints, Color color) {<newline46mondego>            super(xpoints, ypoints, npoints);<newline46mondego>            this.fillColor = color;<newline46mondego>            this.selected = false;<newline46mondego>        }<newline46mondego><newline46mondego>        public Color getFillColor() {<newline46mondego>            return fillColor;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setFillColor(Color fillColor) {<newline46mondego>            this.fillColor = fillColor;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean isSelected() {<newline46mondego>            return selected;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setSelected(boolean selected) {<newline46mondego>            this.selected = selected;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3061splitHere46","4405426splitHere46","String.valueOf"
"3062splitHere46","4405426splitHere46","Integer.toString"
"3063splitHere46","4405426splitHere46","Integer.toString"
"3064splitHere46","4405562splitHere46",".*=.*"
"3065splitHere46","4405798splitHere46","public void doAfterCompose(Component comp) throws Exception {<newline46mondego>    super.doAfterCompose(comp);<newline46mondego><newline46mondego>    for(int i=0;i<=10;i++){<newline46mondego>        Listitem li = new Listitem();<newline46mondego>        Listcell lic = new ListCell();<newline46mondego>        li.appendChild(lic);<newline46mondego>        Button myBtn = new Button(<doubleQuotes46>Btn<doubleQuotes46>);<newline46mondego>        myBtn.setParent(lic);<newline46mondego><newline46mondego>        //...<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3066splitHere46","4405901splitHere46","tabSelected"
"3067splitHere46","4405901splitHere46","tabSelected"
"3068splitHere46","4405901splitHere46","setStandards"
"3069splitHere46","4406193splitHere46","-vm<newline46mondego>C:\Progra~1\Java\jdk1.5.0_22\jre\bin\javaw<newline46mondego>"
"3070splitHere46","4406335splitHere46","'${'"
"3071splitHere46","4406335splitHere46","${"
"3072splitHere46","4406335splitHere46","${'${'}"
"3073splitHere46","4406335splitHere46","'${'"
"3074splitHere46","4406335splitHere46","${'}'}"
"3075splitHere46","4406335splitHere46","'}'"
"3076splitHere46","4406335splitHere46","<h4>${id}</h4><newline46mondego>"
"3077splitHere46","4406335splitHere46","<h4>${'${'}id}</h4><newline46mondego>"
"3078splitHere46","4406495splitHere46","ENTER"
"3079splitHere46","4406495splitHere46","JTEXTAREA"
"3080splitHere46","4406578splitHere46","respone.sendRedirect"
"3081splitHere46","4406578splitHere46","java.lang.IllegalStateException"
"3082splitHere46","4406578splitHere46","respone.sendRedirect"
"3083splitHere46","4406650splitHere46","&#8482;"
"3084splitHere46","4406650splitHere46","mimemsg.setSubject(<doubleQuotes46>Your new InCites\u2122 subscription<doubleQuotes46>, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"3085splitHere46","4406650splitHere46","=?UTF-8?Q?Your...subscription?="
"3086splitHere46","4406650splitHere46","package so4406538;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.util.Properties;<newline46mondego><newline46mondego>import javax.mail.MessagingException;<newline46mondego>import javax.mail.Session;<newline46mondego>import javax.mail.internet.MimeMessage;<newline46mondego><newline46mondego>public class MailDemo {<newline46mondego><newline46mondego>  public static void main(String[] args) throws MessagingException, IOException {<newline46mondego>    Properties props = new Properties();<newline46mondego>    Session session = Session.getDefaultInstance(props);<newline46mondego>    MimeMessage message = new MimeMessage(session);<newline46mondego>    message.setSubject(<doubleQuotes46>Your new InCites\u2122 subscription<doubleQuotes46>, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    message.setContent(<doubleQuotes46>hello<doubleQuotes46>, <doubleQuotes46>text/plain<doubleQuotes46>);<newline46mondego>    message.writeTo(System.out);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3087splitHere46","4406650splitHere46","Message-ID: <7888229.0.1291967222281.JavaMail.roland@bacc><newline46mondego>Subject: =?UTF-8?Q?Your_new_InCites=E2=84=A2_subscription?=<newline46mondego>MIME-Version: 1.0<newline46mondego>Content-Type: text/plain; charset=us-ascii<newline46mondego>Content-Transfer-Encoding: 7bit<newline46mondego><newline46mondego>hello<newline46mondego>"
"3088splitHere46","4406664splitHere46","null"
"3089splitHere46","4406700splitHere46","RandomAccessFile.setLength"
"3090splitHere46","4406700splitHere46","RandomAccessFile"
"3091splitHere46","4406700splitHere46","write"
"3092splitHere46","4406700splitHere46","restore(int i)"
"3093splitHere46","4406700splitHere46","i"
"3094splitHere46","4406788splitHere46","Document"
"3095splitHere46","4406788splitHere46","Node"
"3096splitHere46","4406788splitHere46","Element"
"3097splitHere46","4406788splitHere46","Document"
"3098splitHere46","4407112splitHere46","<% .. %>"
"3099splitHere46","4407112splitHere46","<%@ page import=<doubleQuotes46>..<doubleQuotes46> %>"
"3100splitHere46","4407174splitHere46","doUpload"
"3101splitHere46","4407176splitHere46","java.util.List"
"3102splitHere46","4407176splitHere46","new ArrayList(originalCollection)"
"3103splitHere46","4407176splitHere46","ArrayList"
"3104splitHere46","4407329splitHere46","public static function getRemoteObject(destination:String, channelName:String,<newline46mondego>    showBusyCursor:Boolean=true):RemoteObject{<newline46mondego>    var remoteService:RemoteObject=new RemoteObject(destination);<newline46mondego>    var channelSet:ChannelSet=new ChannelSet();<newline46mondego>    var url:String = Application(Application.application).url;<newline46mondego>    var secure:Boolean = URLUtil.isHttpsURL(url);<newline46mondego>    var protocol:String = URLUtil.getProtocol(url);<newline46mondego>    var amf:AMFChannel;<newline46mondego>    if (secure){<newline46mondego>        amf = new SecureAMFChannel(channelName, protocol +<newline46mondego>            <doubleQuotes46>://{server.name}:{server.port}<doubleQuotes46> +<newline46mondego>            (Application.application as Application).parameters.contextRoot +<newline46mondego>            <doubleQuotes46>/graniteamf/amf<doubleQuotes46>);<newline46mondego>    }else{<newline46mondego>        amf = new AMFChannel(channelName, protocol +<newline46mondego>            <doubleQuotes46>://{server.name}:{server.port}<doubleQuotes46> +<newline46mondego>            (Application.application as Application).parameters.contextRoot<newline46mondego>            + <doubleQuotes46>/graniteamf/amf<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    channelSet.addChannel(amf);<newline46mondego>    remoteService.channelSet=channelSet;<newline46mondego>    remoteService.showBusyCursor=showBusyCursor;<newline46mondego>    return remoteService;<newline46mondego>}<newline46mondego>"
"3105splitHere46","4407329splitHere46","String flashVariables = <doubleQuotes46>contextRoot=<doubleQuotes46> + request.getContextPath() +<newline46mondego>    <doubleQuotes46>&locale=<doubleQuotes46> + request.getLocale().getLanguage(); <newline46mondego>"
"3106splitHere46","4407354splitHere46","DatasourceConnectionProvider"
"3107splitHere46","4407354splitHere46","DataSource"
"3108splitHere46","4407354splitHere46","DataSource"
"3109splitHere46","4407354splitHere46","InjectedDataSourceConnectionProvider"
"3110splitHere46","4407354splitHere46","DataSource"
"3111splitHere46","4407354splitHere46","setDataSource()"
"3112splitHere46","4407354splitHere46","configure()"
"3113splitHere46","4407354splitHere46","public class CustomConnectionProvider extends InjectedDataSourceConnectionProvider {<newline46mondego>    @Override<newline46mondego>    public void configure(Properties props) throws HibernateException {<newline46mondego>        org.apache.commons.dbcp.BasicDataSource dataSource = new BasicDataSource();<newline46mondego>        org.apache.commons.beanutils.BeanUtils.populate( dataSource, props );<newline46mondego>        setDataSource(dataSource);<newline46mondego><newline46mondego>        super.configure(props);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3114splitHere46","4407354splitHere46","Configuration cfg = new Configuration();<newline46mondego>Properties props = new Properties();<newline46mondego>props.put( Environment.CONNECTION_PROVIDER, InjectedDataSourceConnectionProvider.class.getName() );<newline46mondego>cfg.addProperties(props);<newline46mondego>"
"3115splitHere46","4407452splitHere46","String toDo = <doubleQuotes46>12/12/2010:{content1:[{xyz,abc}],13/12/2010:{content2:[{xyz,abc},{content3:[{aa,bb}]}]<doubleQuotes46>;<newline46mondego>String[] splitted = toDo.split(<doubleQuotes46>\\}\\]<doubleQuotes46>);<newline46mondego>for (String s : splitted) {<newline46mondego>    System.out.println(s);<newline46mondego>}<newline46mondego>"
"3116splitHere46","4407668splitHere46","setsockopt"
"3117splitHere46","4407668splitHere46","TCP_NODELAY"
"3118splitHere46","4407731splitHere46","String s = <doubleQuotes46>{menu:{\<doubleQuotes46>1\<doubleQuotes46>:\<doubleQuotes46>sql\<doubleQuotes46>, \<doubleQuotes46>2\<doubleQuotes46>:\<doubleQuotes46>android\<doubleQuotes46>, \<doubleQuotes46>3\<doubleQuotes46>:\<doubleQuotes46>mvc\<doubleQuotes46>}}<doubleQuotes46>;<newline46mondego>    JSONObject jObject  = new JSONObject(s);<newline46mondego>    JSONObject  menu = jObject.getJSONObject(<doubleQuotes46>menu<doubleQuotes46>);<newline46mondego><newline46mondego>    Map<String,String> map = new HashMap<String,String>();<newline46mondego>    Iterator iter = menu.keys();<newline46mondego>    while(iter.hasNext()){<newline46mondego>        String key = (String)iter.next();<newline46mondego>        String value = menu.getString(key);<newline46mondego>        map.put(key,value);<newline46mondego>    }<newline46mondego>"
"3119splitHere46","4407775splitHere46","Inner instance = constructor.newInstance(new Outer(){});<newline46mondego>"
"3120splitHere46","4407868splitHere46","XmlType"
"3121splitHere46","4407868splitHere46","propOrder"
"3122splitHere46","4407868splitHere46","@XmlType(propOrder={})<newline46mondego>"
"3123splitHere46","4407868splitHere46","xs:all"
"3124splitHere46","4407868splitHere46","<xs:complexType name=<doubleQuotes46>userdataType<doubleQuotes46>><newline46mondego>  <xs:all><newline46mondego>    <xs:element name=<doubleQuotes46>username<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    <xs:element name=<doubleQuotes46>street<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    <xs:element name=<doubleQuotes46>address<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>  </xs:all><newline46mondego></xs:complexType><newline46mondego>"
"3125splitHere46","4407929splitHere46","@XmlNs"
"3126splitHere46","4407929splitHere46","package-info.java"
"3127splitHere46","4407929splitHere46","@XmlSchema(namespace = Namespaces.MAIN,<newline46mondego>    xmlns = { @XmlNs(prefix = <doubleQuotes46>xlink<doubleQuotes46>, namespaceURI = Namespaces.XLINK) },<newline46mondego>    elementFormDefault = QUALIFIED, attributeFormDefault = QUALIFIED)<newline46mondego>package example.bindings;<newline46mondego><newline46mondego>import static javax.xml.bind.annotation.XmlNsForm.QUALIFIED;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlNs;<newline46mondego>import javax.xml.bind.annotation.XmlSchema;<newline46mondego>import example.common.Namespaces;<newline46mondego>"
"3128splitHere46","4407929splitHere46","@XmlNs"
"3129splitHere46","4407929splitHere46","@XmlSchema"
"3130splitHere46","4408117splitHere46","public void delete()<newline46mondego>"
"3131splitHere46","4408117splitHere46","public void delete(Deleteable obj) {<newline46mondego>    obj.delete();<newline46mondego>}<newline46mondego>"
"3132splitHere46","4408124splitHere46","byte[] array = bigInteger.toByteArray();<newline46mondego>if (array[0] == 0) {<newline46mondego>    byte[] tmp = new byte[array.length - 1];<newline46mondego>    System.arraycopy(array, 1, tmp, 0, tmp.length);<newline46mondego>    array = tmp;<newline46mondego>}<newline46mondego>"
"3133splitHere46","4408295splitHere46","view.jsp"
"3134splitHere46","4408295splitHere46","List<String> datas = new ArrayList<String>();<newline46mondego>//Add 100 datas...<newline46mondego>request.setAttribute(<doubleQuotes46>datas<doubleQuotes46>, datas);<newline46mondego>"
"3135splitHere46","4408295splitHere46","view.jsp"
"3136splitHere46","4408295splitHere46","<c:if test=<doubleQuotes46>${requestScope.datas != null}<doubleQuotes46>><newline46mondego><newline46mondego></c:if><newline46mondego>"
"3137splitHere46","4408295splitHere46","view.htm"
"3138splitHere46","4408295splitHere46","someData"
"3139splitHere46","4408295splitHere46","datas"
"3140splitHere46","4408295splitHere46","<c:if>"
"3141splitHere46","4408315splitHere46","public void onCreate(Bundle savedInstanceState) {<newline46mondego>            super.onCreate(savedInstanceState);<newline46mondego><newline46mondego>            setContentView(demoview);<newline46mondego>        }<newline46mondego><newline46mondego>        private class DemoView extends View{<newline46mondego>            public DemoView(Context context){<newline46mondego>                super(context);<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            protected void onDraw(Canvas canvas) {<newline46mondego>                super.onDraw(canvas);<newline46mondego>                Paint p = new Paint();<newline46mondego>                p.setColor(Color.RED);<newline46mondego>                DashPathEffect dashPath = new DashPathEffect(new float[]{5,5}, (float)1.0);<newline46mondego><newline46mondego>                p.setPathEffect(dashPath);<newline46mondego>                p.setStyle(Style.STROKE);<newline46mondego>                canvas.drawCircle(100, 100, 50, p);<newline46mondego><newline46mondego>                invalidate();<newline46mondego>            }<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"3142splitHere46","4408365splitHere46","my_client/axis-repo/conf/axis2.xml"
"3143splitHere46","4408365splitHere46","<parameter name=<doubleQuotes46>OutflowSecurity<doubleQuotes46>><newline46mondego>        <action><newline46mondego>                <items>UsernameToken</items><newline46mondego>                <user>bob</user><newline46mondego>                <passwordCallbackClass>org.apache.rampart.<newline46mondego>                samples.sample02.PWCBHandler</passwordCallbackClass><newline46mondego>        </action><newline46mondego></parameter><newline46mondego>"
"3144splitHere46","4408484splitHere46","rowClasses"
"3145splitHere46","4408484splitHere46","<h:dataTable value=<doubleQuotes46>#{bean.list}<doubleQuotes46> rowClasses=<doubleQuotes46>#{bean.rowClasses}<doubleQuotes46>><newline46mondego>"
"3146splitHere46","4408484splitHere46","public String getRowClasses() {<newline46mondego>    StringBuilder rowClasses = new StringBuilder();<newline46mondego>    for (Item item : list) {<newline46mondego>        if (rowClasses.length() > 0) rowClasses.append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        rowClasses.append(item.getRowClass());<newline46mondego>    }<newline46mondego>    return rowClasses.toString();<newline46mondego>}<newline46mondego>"
"3147splitHere46","4408484splitHere46","rowClasses"
"3148splitHere46","4408484splitHere46","Item#getRowClass()"
"3149splitHere46","4408484splitHere46","public String getRowClasses() {<newline46mondego>    StringBuilder rowClasses = new StringBuilder();<newline46mondego>    for (int i = 0; i < list.size(); i++) {<newline46mondego>        if (rowClasses.length() > 0) rowClasses.append(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>        rowClasses.append(selected.contains(i) ? <doubleQuotes46>selected<doubleQuotes46> : <doubleQuotes46>none<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return rowClasses.toString();<newline46mondego>}<newline46mondego>"
"3150splitHere46","4408484splitHere46","selected"
"3151splitHere46","4408484splitHere46","List<Integer>"
"3152splitHere46","4408484splitHere46","none,selected,selected,none,none,selected,none,none,none,none<newline46mondego>"
"3153splitHere46","4408690splitHere46","public static <E> void permute2(List<E> beginningList, List<E> endingList) {<newline46mondego>    if (endingList.size() <= 1) {<newline46mondego>        //combine the two lists<newline46mondego>        List<E> result = new ArrayList<E>(beginningList);<newline46mondego>        result.addAll(endingList);<newline46mondego>        System.out.println(result);<newline46mondego>    } else<newline46mondego>        for (int i = 0; i < endingList.size(); i++) {<newline46mondego><newline46mondego>            //create a list without the ith element<newline46mondego>            List<E> newList = new ArrayList<E>(endingList);<newline46mondego>            newList.remove(i);<newline46mondego><newline46mondego>            //create a list by adding the ith element to beginning<newline46mondego>            List<E> newBeginning = new ArrayList<E>(beginningList);<newline46mondego>            newBeginning.add(endingList.get(i));<newline46mondego><newline46mondego>            permute2(newBeginning, newList);<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"3154splitHere46","4408690splitHere46","public static void main(String args[]) {<newline46mondego>    permute2(new ArrayList<Integer>(), new ArrayList<Integer>(Arrays.asList(1, 2, 3)));<newline46mondego>}<newline46mondego>"
"3155splitHere46","4408690splitHere46","[1, 2, 3]<newline46mondego>[1, 3, 2]<newline46mondego>[2, 1, 3]<newline46mondego>[2, 3, 1]<newline46mondego>[3, 1, 2]<newline46mondego>[3, 2, 1]<newline46mondego>"
"3156splitHere46","4408748splitHere46","table.getTableHeader().setFont(new Font(<doubleQuotes46>SansSerif<doubleQuotes46>, Font.ITALIC, 12));<newline46mondego>"
"3157splitHere46","4409134splitHere46","public static <E> E[] appendToArray(E[] array, E item)<newline46mondego>"
"3158splitHere46","4409134splitHere46","ArrayUtils"
"3159splitHere46","4409134splitHere46","appendToArray"
"3160splitHere46","4409134splitHere46","<E>"
"3161splitHere46","4409134splitHere46","E"
"3162splitHere46","4409134splitHere46","ArrayUtils<E>"
"3163splitHere46","4409134splitHere46","static"
"3164splitHere46","4409134splitHere46","<E>"
"3165splitHere46","4409134splitHere46","E"
"3166splitHere46","4409134splitHere46","ArrayUtils<E>"
"3167splitHere46","4409134splitHere46","public static <I> I[] appendToArray(I[] array, I item)<newline46mondego>"
"3168splitHere46","4409157splitHere46","request.getRequestUri()"
"3169splitHere46","4409157splitHere46","request.getQueryString()"
"3170splitHere46","4409157splitHere46","java.net.URLEncoder"
"3171splitHere46","4409157splitHere46","request.getContextPath()"
"3172splitHere46","4409157splitHere46","response.sendRedirect(request.getContextPath()+<doubleQuotes46>/location/set.html?action=asklocation&redirectUrl=<doubleQuotes46>+<newline46mondego>            URLEncoder.encode(request.getRequestUri()+<doubleQuotes46>?<doubleQuotes46>+request.getQueryString(), serverUrlEncodingPreferablyUTF8));"
"3173splitHere46","4409157splitHere46","RequestDispatcher"
"3174splitHere46","4409198splitHere46","String[] locations = <newline46mondego>   Foo.class.getAnnotation(ContextConfiguration.class).locations();<newline46mondego>"
"3175splitHere46","4409243splitHere46","public LibraryDB (File file) throws IOException {<newline46mondego>//this next line was what I was missing...sigh.<newline46mondego>    this.libraryItems = new HashMap<Integer, LibraryItem>();<newline46mondego>        Scanner readFile = new Scanner(file);<newline46mondego>        int barcode;<newline46mondego>        String title;<newline46mondego>        String author;<newline46mondego>        while (readFile.hasNext()){<newline46mondego>            barcode = Integer.parseInt(readFile.nextLine());<newline46mondego>            title   = readFile.nextLine();<newline46mondego>            author  = readFile.nextLine();<newline46mondego>            LibraryItem authorTitleValues = new LibraryItem(title, author);<newline46mondego>            libraryItems.put(Integer.valueOf(barcode), authorTitleValues);<newline46mondego>            }<newline46mondego>        readFile.close();<newline46mondego>    }<newline46mondego>"
"3176splitHere46","4409263splitHere46","class MyJob implements Job {<newline46mondego><newline46mondego>    public MyJob() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void execute(JobExecutionContext context) throws JobExecutionException {<newline46mondego><newline46mondego>        try{<newline46mondego>            //connect to other application etc<newline46mondego>        }<newline46mondego>        catch(Exception e){<newline46mondego><newline46mondego>            Thread.sleep(600000); //sleep for 10 mins<newline46mondego><newline46mondego>            JobExecutionException e2 = new JobExecutionException(e);<newline46mondego>            //fire it again<newline46mondego>            e2.setRefireImmediately(true);<newline46mondego>            throw e2;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3177splitHere46","4409263splitHere46","class MyJob implements StatefulJob {<newline46mondego><newline46mondego>    public MyJob() {<newline46mondego>    }<newline46mondego><newline46mondego>    public void execute(JobExecutionContext context) throws JobExecutionException {<newline46mondego>        JobDataMap dataMap = context.getJobDetail().getJobDataMap();<newline46mondego>        int count = dataMap.getIntValue(<doubleQuotes46>count<doubleQuotes46>);<newline46mondego><newline46mondego>        // allow 5 retries<newline46mondego>        if(count >= 5){<newline46mondego>            JobExecutionException e = new JobExecutionException(<doubleQuotes46>Retries exceeded<doubleQuotes46>);<newline46mondego>            //make sure it doesn't run again<newline46mondego>            e.setUnscheduleAllTriggers(true);<newline46mondego>            throw e;<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>        try{<newline46mondego>            //connect to other application etc<newline46mondego><newline46mondego>            //reset counter back to 0<newline46mondego>            dataMap.putAsString(<doubleQuotes46>count<doubleQuotes46>, 0);<newline46mondego>        }<newline46mondego>        catch(Exception e){<newline46mondego>            count++;<newline46mondego>            dataMap.putAsString(<doubleQuotes46>count<doubleQuotes46>, count);<newline46mondego>            JobExecutionException e2 = new JobExecutionException(e);<newline46mondego><newline46mondego>            Thread.sleep(600000); //sleep for 10 mins<newline46mondego><newline46mondego>            //fire it again<newline46mondego>            e2.setRefireImmediately(true);<newline46mondego>            throw e2;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3178splitHere46","4409334splitHere46","<s:datetimepicker name=<doubleQuotes46>remocao.criacao<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46> displayFormat=<doubleQuotes46>MM/dd/yyyy<doubleQuotes46>/><newline46mondego>"
"3179splitHere46","4409419splitHere46","System.out.println()"
"3180splitHere46","4409419splitHere46","System.out.println()"
"3181splitHere46","4409419splitHere46","LOGGING"
"3182splitHere46","4409419splitHere46","//#ifdef LOGGING<newline46mondego>System.out.println(<doubleQuotes46>LOGGING is enabled<doubleQuotes46>);<newline46mondego>//#endif<newline46mondego>"
"3183splitHere46","4409520splitHere46","InvocationHandler"
"3184splitHere46","4409520splitHere46","InvocationHandler"
"3185splitHere46","4409520splitHere46","InvocationHandler"
"3186splitHere46","4409665splitHere46","String text = <doubleQuotes46>one two three<doubleQuotes46>;<newline46mondego>String text2= <doubleQuotes46>to two too<doubleQuotes46>;<newline46mondego>"
"3187splitHere46","4409665splitHere46","String two = <doubleQuotes46>two<doubleQuotes46>;<newline46mondego>String text = <doubleQuotes46>one <doubleQuotes46> + two + <doubleQuotes46> three<doubleQuotes46>;<newline46mondego>String text2= <doubleQuotes46>to <doubleQuotes46> + two + <doubleQuotes46> too<doubleQuotes46>;<newline46mondego>"
"3188splitHere46","4409859splitHere46","public class MyNullConverter implements Converter {<newline46mondego>  @Override<newline46mondego>  public Object convert(final Class type, final Object value) {<newline46mondego>    try {<newline46mondego>      return value == null ? type.newInstance() : value;<newline46mondego>    } catch (final InstantiationException e) {<newline46mondego>      return null;<newline46mondego>    } catch (final IllegalAccessException e) {<newline46mondego>      return null;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3189splitHere46","4409859splitHere46","ConvertUtils.register(new MyNullConverter(), Something.class);<newline46mondego>"
"3190splitHere46","4410140splitHere46","maven-compiler-plugin"
"3191splitHere46","4410140splitHere46","<bootclasspath>"
"3192splitHere46","4410279splitHere46","shell_exec()"
"3193splitHere46","4410279splitHere46","$result = shell_exec(<doubleQuotes46>java -jar /path/to/imageprocessor.jar <doubleQuotes46> + $imagepath);<newline46mondego>if ($result) {<newline46mondego>    // Shell execution succeed.<newline46mondego>} else {<newline46mondego>    // Shell execution failed.<newline46mondego>}<newline46mondego>"
"3194splitHere46","4410286splitHere46","private static boolean check(ArrayList<Node> list, int num) {<newline46mondego>    for (Node node : list) {<newline46mondego>        if(node.data == num)<newline46mondego>            return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"3195splitHere46","4410291splitHere46","int parseWithDefault(String s, int def) {<newline46mondego>    try {<newline46mondego>        return Integer.parseInt(s);<newline46mondego>    }<newline46mondego>    catch (NumberFormatException e) {<newline46mondego>        // It's OK to ignore <doubleQuotes46>e<doubleQuotes46> here because returning a default value is the documented behaviour on invalid input.<newline46mondego>        return def;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3196splitHere46","4410385splitHere46","NearestPoint.c"
"3197splitHere46","4410711splitHere46","Integer[]"
"3198splitHere46","4410711splitHere46","equals"
"3199splitHere46","4410711splitHere46","hashCode"
"3200splitHere46","4410711splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Integer[] arr1 = { 1, 2 };<newline46mondego>        Integer[] arr2 = { 1, 2 };<newline46mondego><newline46mondego>        System.out.println(arr1.equals(arr2));<newline46mondego>        System.out.println(arr1.hashCode() + <doubleQuotes46> / <doubleQuotes46> + arr2.hashCode());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3201splitHere46","4410711splitHere46","false<newline46mondego>1476323068 / 535746438<newline46mondego>"
"3202splitHere46","4410711splitHere46","Point"
"3203splitHere46","4410711splitHere46","equals"
"3204splitHere46","4410711splitHere46","hashCode"
"3205splitHere46","4410711splitHere46","java.awt.Point"
"3206splitHere46","4410795splitHere46","public static void upload(@Required File sprocketFile) {<newline46mondego>try {           <newline46mondego>  if (sprocketFile == null || validation.hasErrors()) {<newline46mondego>    validation.addError(<doubleQuotes46>Upload Error<doubleQuotes46>, <doubleQuotes46>Please select a sprocket to upload<doubleQuotes46>, sprocketFile);<newline46mondego>    params.flash();<newline46mondego>    validation.keep();                          <newline46mondego>    index();<newline46mondego>}<newline46mondego>"
"3207splitHere46","4410796splitHere46","Set<Action>"
"3208splitHere46","4410796splitHere46","List"
"3209splitHere46","4410796splitHere46","Set"
"3210splitHere46","4410796splitHere46","Multibinder<Action> actionBinder = Multibinders.newSetBinder(binder(), Action.class);<newline46mondego>actionBinder.addBinding().to(FooAction.class);<newline46mondego>actionBinder.addBinding().to(BarAction.class);<newline46mondego>"
"3211splitHere46","4410796splitHere46","@Inject"
"3212splitHere46","4410796splitHere46","Set<Action>"
"3213splitHere46","4410840splitHere46","orderedBy"
"3214splitHere46","4410840splitHere46","ImmutableSortedSet"
"3215splitHere46","4410840splitHere46","ImmutableSortedSet"
"3216splitHere46","4410840splitHere46","copyOf(obj)"
"3217splitHere46","4410840splitHere46","orderedBy"
"3218splitHere46","4410840splitHere46","ImmutableSortedSet.orderedBy(myComparator).build()"
"3219splitHere46","4410840splitHere46","ImmutableSortedSet<String> ordered = ImmutableSortedSet.copyOf(myComparator, obj);<newline46mondego>"
"3220splitHere46","4410840splitHere46","ImmutableSortedSet<String> ordered = ImmutableSortedSet.orderedBy(myComparator)<newline46mondego>    .addAll(obj).build();<newline46mondego>"
"3221splitHere46","4410869splitHere46","private static boolean condition(int n){<newline46mondego>    for (int i = 0; i <= n; i++)<newline46mondego>        if(n == i*4 || n == (i * 4 - 1))<newline46mondego>            return true;<newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>public static double recursiveVal(int x, int y, double A, double B){<newline46mondego><newline46mondego>    if (x > 6 && (x - 2 >= y))<newline46mondego>        return 1;<newline46mondego><newline46mondego>    if (y > 6 && (y - 2 >= x))<newline46mondego>        return 0;<newline46mondego><newline46mondego>    if(x > 5 && y > 5 && x == y)<newline46mondego>        return A*(1-B) / (1 -(A*B) - ((1-A)*(1-B)));<newline46mondego><newline46mondego>    double val1 = recursiveVal(x+1, y, A, B);<newline46mondego>    double val2 = recursiveVal(x, y+1, A, B);<newline46mondego><newline46mondego>    return condition(x + y)<newline46mondego>        ? A * val1 + val2 * (1-A)<newline46mondego>        : (1-B) * val1 + B * val2; <newline46mondego>}<newline46mondego>"
"3222splitHere46","4410926splitHere46","InputStream input = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>file.txt<doubleQuotes46>);<newline46mondego>"
"3223splitHere46","4410926splitHere46","InputStream input = getServletContext().getResourceAsStream(<doubleQuotes46>file.txt<doubleQuotes46>);<newline46mondego>"
"3224splitHere46","4410926splitHere46","java.io.File"
"3225splitHere46","4410926splitHere46","getResourceAsStream()"
"3226splitHere46","4410926splitHere46","FileInputStream"
"3227splitHere46","4411289splitHere46","java.util.Properties"
"3228splitHere46","4411289splitHere46","filename.properties"
"3229splitHere46","4411289splitHere46","key1=value1<newline46mondego>key2=value2<newline46mondego>key3=value3<newline46mondego>"
"3230splitHere46","4411289splitHere46","Properties properties = new Properties();<newline46mondego>properties.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>filename.properties<doubleQuotes46>));<newline46mondego>"
"3231splitHere46","4411289splitHere46","String key1 = properties.getProperty(<doubleQuotes46>key1<doubleQuotes46>); // returns value1<newline46mondego>"
"3232splitHere46","4411399splitHere46","s"
"3233splitHere46","4411399splitHere46","findRoot()"
"3234splitHere46","4411399splitHere46","substring()"
"3235splitHere46","4411562splitHere46","<url-pattern>"
"3236splitHere46","4411562splitHere46","web.xml"
"3237splitHere46","4411562splitHere46","<form action=<doubleQuotes46>servleturl<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46>><newline46mondego>    <textarea name=<doubleQuotes46>text<doubleQuotes46>></textarea><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46>><newline46mondego></form><newline46mondego>"
"3238splitHere46","4411562splitHere46","doPost()"
"3239splitHere46","4411562splitHere46","String text = request.getParameter(<doubleQuotes46>text<doubleQuotes46>);<newline46mondego>"
"3240splitHere46","4411617splitHere46","#if($foo.bool == $null)<newline46mondego>  not yet set  <newline46mondego>#elseif($foo.bool)<newline46mondego>    set to TRUE<newline46mondego>#else<newline46mondego>    set to FALSE<newline46mondego>#end<newline46mondego>"
"3241splitHere46","4411788splitHere46","MultipleOutputs"
"3242splitHere46","4411788splitHere46","MultipleOutputs"
"3243splitHere46","4411788splitHere46","spill"
"3244splitHere46","4411788splitHere46","number of mappers * total partitions possible"
"3245splitHere46","4411788splitHere46","number of reduce operations * total partitions possible"
"3246splitHere46","4411790splitHere46","java.net.URLDecoder.decode(<doubleQuotes46>%22Hello+World+%26+Hello+World%22<doubleQuotes46>, <doubleQuotes46>UTF-8<doubleQuotes46>)<newline46mondego>"
"3247splitHere46","4412033splitHere46","Math.abs()<newline46mondego>"
"3248splitHere46","4412033splitHere46","abs()<newline46mondego>"
"3249splitHere46","4412045splitHere46","else if(ch == '}') {<newline46mondego>  if (currentCharacters.length() > 0) {<newline46mondego>    handleText(currentCharacters.toString());<newline46mondego>    currentCharacters = new StringBuffer();<newline46mondego>  }<newline46mondego>  if (level == 0)<newline46mondego>    throw new IOException(<doubleQuotes46>Too many close-groups in RTF text<doubleQuotes46>);<newline46mondego>  endgroup();<newline46mondego>  level --;<newline46mondego>}<newline46mondego>"
"3250splitHere46","4412204splitHere46","public class MyPojo {<newline46mondego>  public Fields fields;<newline46mondego>}<newline46mondego><newline46mondego>public class Fields {<newline46mondego>  public String foo;<newline46mondego>  public String bar;<newline46mondego>}<newline46mondego>"
"3251splitHere46","4412204splitHere46","{ <newline46mondego>  <doubleQuotes46>fields<doubleQuotes46> : [<newline46mondego>    {<newline46mondego>      <doubleQuotes46>foo<doubleQuotes46> : <doubleQuotes46>foovalue<doubleQuotes46>,<newline46mondego>      <doubleQuotes46>bar<doubleQuotes46> : <doubleQuotes46>barvalue<doubleQuotes46><newline46mondego>    }<newline46mondego>  ]<newline46mondego>}<newline46mondego>"
"3252splitHere46","4412300splitHere46","Element"
"3253splitHere46","4412300splitHere46","Element"
"3254splitHere46","4412300splitHere46","indexOf()"
"3255splitHere46","4412728splitHere46","try{ __.close(); } catch(__Exception e){...}"
"3256splitHere46","4412728splitHere46","close()"
"3257splitHere46","4412728splitHere46","catch"
"3258splitHere46","4412728splitHere46","finally"
"3259splitHere46","4412728splitHere46","finally"
"3260splitHere46","4412728splitHere46","null"
"3261splitHere46","4412728splitHere46","IOException"
"3262splitHere46","4412728splitHere46","NullPointerException"
"3263splitHere46","4412995splitHere46","onEndRequest()"
"3264splitHere46","4412995splitHere46","onEndRequest()"
"3265splitHere46","4412995splitHere46","getWebResponse()"
"3266splitHere46","4412995splitHere46","@Override<newline46mondego>protected void onEndRequest() {<newline46mondego>    super.onEndRequest();<newline46mondego>    ((WebResponse) response).setHeader(<doubleQuotes46>X-custom<doubleQuotes46>, <doubleQuotes46>...<doubleQuotes46> );<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"3267splitHere46","4412995splitHere46","response"
"3268splitHere46","4412995splitHere46","setHeader()"
"3269splitHere46","4412995splitHere46","chain.doFilter()"
"3270splitHere46","4412995splitHere46","getWebResponse()"
"3271splitHere46","4413018splitHere46","<[^>]+>|&[^;]+;<newline46mondego>"
"3272splitHere46","4413027splitHere46","jComboBox1.setRenderer(new DefaultListCellRenderer() {<newline46mondego>    @Override<newline46mondego>    public void paint(Graphics g) {<newline46mondego>        setBackground(Color.WHITE);<newline46mondego>        setForeground(Color.BLACK);<newline46mondego>        super.paint(g);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3273splitHere46","4413052splitHere46","Arrays.asList(array)"
"3274splitHere46","4413121splitHere46","Item machinePistol = new Item().new Weapon(); <newline46mondego>"
"3275splitHere46","4413121splitHere46","Item item = new Item();<newline46mondego>Item machinePistol = item.new Weapon(); <newline46mondego>"
"3276splitHere46","4413121splitHere46","Item machinePistol = new Weapon();<newline46mondego>"
"3277splitHere46","4413153splitHere46","drawString"
"3278splitHere46","4413153splitHere46","void drawString(Graphics g, String text, int x, int y) {<newline46mondego>    for (String line : text.split(<doubleQuotes46>\n<doubleQuotes46>))<newline46mondego>        g.drawString(line, x, y += g.getFontMetrics().getHeight());<newline46mondego>}<newline46mondego>"
"3279splitHere46","4413153splitHere46","import java.awt.*;<newline46mondego><newline46mondego>public class TestComponent extends JPanel {<newline46mondego><newline46mondego>    private void drawString(Graphics g, String text, int x, int y) {<newline46mondego>        for (String line : text.split(<doubleQuotes46>\n<doubleQuotes46>))<newline46mondego>            g.drawString(line, x, y += g.getFontMetrics().getHeight());<newline46mondego>    }<newline46mondego><newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        super.paintComponent(g);<newline46mondego>        drawString(g, <doubleQuotes46>hello\nworld<doubleQuotes46>, 20, 20);<newline46mondego>        g.setFont(g.getFont().deriveFont(20f));<newline46mondego>        drawString(g, <doubleQuotes46>part1\npart2<doubleQuotes46>, 120, 120);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String s[]) {<newline46mondego>        JFrame f = new JFrame();<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(new TestComponent());<newline46mondego>        f.setSize(220, 220);<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3280splitHere46","4413325splitHere46","Node node"
"3281splitHere46","4413325splitHere46","nodeToString"
"3282splitHere46","4413325splitHere46","DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();<newline46mondego>  DocumentBuilder parser = factory.newDocumentBuilder();<newline46mondego>  Document xmlDoc = parser.parse(file);//file has the xml<newline46mondego>  String xml = nodeToString(xmlDoc.getDocumentElement());//pass in the root<newline46mondego>  //xml has the xml info. E.g no xml declaration. Add it<newline46mondego>  xml = <doubleQuotes46><?xml version=\<doubleQuotes46>1.0\<doubleQuotes46> encoding=\<doubleQuotes46>UTF-8\<doubleQuotes46> ?> + xml;//bad to append this way...<newline46mondego>  System.out.println(<doubleQuotes46>XML is:<doubleQuotes46>+xml);<newline46mondego>"
"3283splitHere46","4413350splitHere46","${}"
"3284splitHere46","4413350splitHere46","<textarea readonly>${str}</textarea><newline46mondego>"
"3285splitHere46","4413563splitHere46","SwingUtilites"
"3286splitHere46","4413563splitHere46","JDialog"
"3287splitHere46","4413563splitHere46","setVisible(true)"
"3288splitHere46","4413563splitHere46","<newline46mondego>final JDialog waitForTrans = new JDialog((JFrame) null, true);<newline46mondego><newline46mondego>SwingWorker worker = new SwingWorker() {<newline46mondego><newline46mondego>  public String doInBackground() throws Exception {<newline46mondego>    Thread.sleep(5000);<newline46mondego>    return null;<newline46mondego>  }<newline46mondego><newline46mondego>  public void done() {<newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        waitForTrans.setVisible(false);<newline46mondego>        waitForTrans.dispose();<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego><newline46mondego>};<newline46mondego><newline46mondego>worker.execute();<newline46mondego>SwingUtilities.invokeLater(new Runnable() {<newline46mondego>  public void run() {<newline46mondego>    waitForTrans.add(new JLabel(<doubleQuotes46>Please Wait...<doubleQuotes46>));<newline46mondego>    waitForTrans.setMinimumSize(new Dimension(300, 100));<newline46mondego>    waitForTrans.setVisible(true);<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"3289splitHere46","4413583splitHere46","Runtime rt = Runtime.getRuntime();<newline46mondego>Process proc = rt.exec(<doubleQuotes46>c:/test.exe filearg1,filearg2,filearg3<doubleQuotes46>);<newline46mondego>"
"3290splitHere46","4413611splitHere46","class TestFrame<newline46mondego>        extends JFrame<newline46mondego>        implements ActionListener<newline46mondego>{<newline46mondego>    public TestFrame()<newline46mondego>    {<newline46mondego>        cards = new JPanel(new CardLayout() );<newline46mondego>        card_list = new JPanel[5];<newline46mondego><newline46mondego>        for (int i = 0; i < card_list.length; i++) {<newline46mondego>            String text = <doubleQuotes46>Card <doubleQuotes46> + i;<newline46mondego>            JPanel card = createCard(text);<newline46mondego>            card_list[i] = card;<newline46mondego>            cards.add(card, text);<newline46mondego>        }<newline46mondego><newline46mondego>        add(cards);<newline46mondego>    }<newline46mondego><newline46mondego>public JPanel getCurrentCard()<newline46mondego>{<newline46mondego>    JPanel card = null;<newline46mondego><newline46mondego>    for (Component comp : cards.getComponents() ) {<newline46mondego>        if (comp.isVisible() == true) {<newline46mondego>            card = (JPanel)comp;<newline46mondego>            System.out.println(card.getName() );<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println();<newline46mondego><newline46mondego>    return card;<newline46mondego>}<newline46mondego><newline46mondego>public void actionPerformed(ActionEvent evt)<newline46mondego>{<newline46mondego>    JPanel card = getCurrentCard();<newline46mondego><newline46mondego>    CardLayout cl = (CardLayout)(cards.getLayout() );<newline46mondego>    cl.next(cards);<newline46mondego>}<newline46mondego><newline46mondego>    public JPanel createCard(String text)<newline46mondego>    {<newline46mondego>        JPanel card = new JPanel();<newline46mondego>        card.setName(text);<newline46mondego><newline46mondego>        JButton btn = new JButton(text);<newline46mondego>        btn.addActionListener(this);<newline46mondego><newline46mondego>        card.add(btn);<newline46mondego>        return card;<newline46mondego>    }<newline46mondego><newline46mondego>    JPanel cards;<newline46mondego>    JPanel[] card_list;<newline46mondego>}<newline46mondego>"
"3291splitHere46","4413688splitHere46","ConfigurationBuilder cb = new ConfigurationBuilder();<newline46mondego>            cb.setDebugEnabled(true)<newline46mondego>                .setOAuthConsumerKey(consumerKey)<newline46mondego>                .setOAuthConsumerSecret(consumerSecret)<newline46mondego>                .setOAuthAccessToken(oAuthAccessToken)<newline46mondego>                .setOAuthAccessTokenSecret(oAuthAccessTokenSecret);<newline46mondego>            TwitterFactory tf = new TwitterFactory(cb.build());<newline46mondego>            Twitter twitter = tf.getInstance();<newline46mondego>                    twitter.updateStatus(<doubleQuotes46>This is a test message<doubleQuotes46>); //ThrowsTwitterException<newline46mondego>"
"3292splitHere46","4413696splitHere46","setSize(new Dimension(CLIENT_WIDTH, CLIENT_HEIGHT));<newline46mondego>this.getContentPane().setLayout(null);<newline46mondego>this.getContentPane().setBackground(backColor);<newline46mondego>talkArea.setEditable(false);<newline46mondego>talkArea.setBackground(Color.white);<newline46mondego>talkArea.setBounds(new Rectangle(TALK_LEFT, TALK_TOP, TALK_WIDTH,      TALK_HEIGHT));<newline46mondego>this.getContentPane().add(talkArea, null); // <--- you want this inside the text area, not here!<newline46mondego>// set input area<newline46mondego>inputField.setBackground(Color.white);<newline46mondego>inputField.setBounds(new Rectangle(INPUT_LEFT, INPUT_TOP, INPUT_WIDTH,      INPUT_HEIGHT));<newline46mondego>inputField.addActionListener(this);<newline46mondego>this.getContentPane().add(inputField, null);<newline46mondego>this.getContentPane().add(talkAreaScrollPane, null);  // <--- you never set the size on here <newline46mondego>"
"3293splitHere46","4413748splitHere46","production {<newline46mondego>    dataSource {<newline46mondego>        dbCreate = <doubleQuotes46>update<doubleQuotes46><newline46mondego>        url = <doubleQuotes46>jdbc:hsqldb:file:prodDb;shutdown=true<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3294splitHere46","4413748splitHere46","production {<newline46mondego>    dataSource {<newline46mondego>        dbCreate = <doubleQuotes46>update<doubleQuotes46><newline46mondego>        url = <doubleQuotes46>jdbc:hsqldb:file:/some/writeable/folder/prodDb;shutdown=true<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3295splitHere46","4413748splitHere46","grails.config.locations = [<doubleQuotes46>classpath:${appName}-config.groovy<doubleQuotes46>]<newline46mondego>"
"3296splitHere46","4413748splitHere46","dataSource {<newline46mondego>    url = <doubleQuotes46>jdbc:hsqldb:file:/some/writeable/folder/prodDb;shutdown=true<doubleQuotes46><newline46mondego>}<newline46mondego>"
"3297splitHere46","4413944splitHere46","public class ClientModule extends PrivateModule {<newline46mondego>  private final Writer writer;<newline46mondego>  private final Class<? extends Annotation> annotationType;<newline46mondego><newline46mondego>  public ClientModule(Writer writer, Class<? extends Annotation> annotationType) {<newline46mondego>    this.writer = writer;<newline46mondego>    this.annotationType = annotationType;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override protected void configure() {<newline46mondego>    bind(Writer.class).toInstance(writer);<newline46mondego>    bind(Logger.class).to(LoggerImpl.class);<newline46mondego>    expose(Client.class).annotatedWith(annotationType);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class ClientFactoryModule extends AbstractModule {<newline46mondego>  private final File file;<newline46mondego><newline46mondego>  public ClientFactoryModule(File file) {<newline46mondego>    this.file = file;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override protected void configure() {<newline46mondego>    install(new ClientModule(new StdOutWriter(), StdOut.class));<newline46mondego>    install(new ClientModule(new FileWriter(file), FileOut.class));<newline46mondego>    bind(ClientFactory.class).to(ClientFactoryImpl.class);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class ClientFactoryImpl implements ClientFactory {<newline46mondego>  private final Client stdOutClient;<newline46mondego>  private final Client fileClient;<newline46mondego><newline46mondego>  @Inject public ClientFactoryImpl(@StdOut Client stdOutClient, <newline46mondego>                                   @FileOut Client fileClient) {<newline46mondego>    this.stdOutClient = stdOutClient;<newline46mondego>    this.fileClient = fileClient;<newline46mondego>  }<newline46mondego><newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"3298splitHere46","4413944splitHere46","Client fileClient(File)"
"3299splitHere46","4414033splitHere46","<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import javax.xml.parsers.SAXParser;<newline46mondego>import javax.xml.parsers.SAXParserFactory;<newline46mondego><newline46mondego>import org.xml.sax.Attributes;<newline46mondego>import org.xml.sax.SAXException;<newline46mondego>import org.xml.sax.helpers.DefaultHandler;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>  private static final String HTML_INSTRUCTIONS = <doubleQuotes46>html_instructions<doubleQuotes46>;<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    final List htmlInstructions = new ArrayList();<newline46mondego><newline46mondego>    SAXParserFactory spf = SAXParserFactory.newInstance();<newline46mondego>    SAXParser sp = spf.newSAXParser();<newline46mondego>    DefaultHandler dh = new DefaultHandler() {<newline46mondego>      private boolean isHtmlInstructions = false;<newline46mondego>      private StringBuilder sb = new StringBuilder();<newline46mondego>      @Override<newline46mondego>      public void startElement(String uri, String localName, String name,<newline46mondego>          Attributes attributes) throws SAXException {<newline46mondego>        super.startElement(uri, localName, name, attributes);<newline46mondego>        if (HTML_INSTRUCTIONS.equals(name)) {<newline46mondego>          isHtmlInstructions = true;<newline46mondego>        }<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void characters(char ch[], int start, int length)<newline46mondego>      throws SAXException {<newline46mondego>        if (isHtmlInstructions) {<newline46mondego>          sb.append(ch, start, length);<newline46mondego>        }<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      public void endElement(String uri, String localName, String name)<newline46mondego>          throws SAXException {<newline46mondego>        super.endElement(uri, localName, name);<newline46mondego>        if (HTML_INSTRUCTIONS.equals(name)) {<newline46mondego>          htmlInstructions.add(sb.toString());<newline46mondego>          sb.delete(0, sb.length());<newline46mondego>          isHtmlInstructions = false;<newline46mondego>        }<newline46mondego>      }<newline46mondego>    };<newline46mondego><newline46mondego>    InputStream is = new FileInputStream(<doubleQuotes46>test.xml<doubleQuotes46>);<newline46mondego>    sp.parse(is, dh);<newline46mondego>    for (String htmlInstruction : htmlInstructions) {<newline46mondego>      System.out.println(htmlInstruction);<newline46mondego>    }<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"3300splitHere46","4414033splitHere46","<newline46mondego>Head <b>east on <b>S Street Viaduct</b><newline46mondego>"
"3301splitHere46","4414283splitHere46","speak()"
"3302splitHere46","4414283splitHere46","walk()"
"3303splitHere46","4414283splitHere46","Animal"
"3304splitHere46","4414345splitHere46","DefaultMessageListenerContainer"
"3305splitHere46","4414345splitHere46","Lifecycle"
"3306splitHere46","4414345splitHere46","Lifecycle"
"3307splitHere46","4414479splitHere46","new String(<doubleQuotes46>Hello World!<TAG> &nsbp;<doubleQuotes46>.split(<doubleQuotes46><<doubleQuotes46>)[0])<newline46mondego>"
"3308splitHere46","4414563splitHere46","ApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(servletContext);<newline46mondego>Object bean = context.getBean(some.thing.Else.class);<newline46mondego>"
"3309splitHere46","4414563splitHere46","ApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(servletContext);<newline46mondego><newline46mondego>Object bean = context.getBean(some.thing.Else.class);<newline46mondego><newline46mondego>Context initCtx = new InitialContext();<newline46mondego>Context springCtx = initCtx.createSubcontext(<doubleQuotes46>spring<doubleQuotes46>);<newline46mondego><newline46mondego>springCtx.bind(<doubleQuotes46>bean<doubleQuotes46>, bean);<newline46mondego>"
"3310splitHere46","4414563splitHere46","ApplicationContext"
"3311splitHere46","4414563splitHere46","ContextLoaderListener"
"3312splitHere46","4414563splitHere46","<listener><newline46mondego>    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><newline46mondego></listener><newline46mondego><newline46mondego><listener><newline46mondego>    <listener-class><newline46mondego>    org.example.sandbox.MyCustomServletContextListener<newline46mondego>  </listener-class><newline46mondego></listener> <newline46mondego>"
"3313splitHere46","4414563splitHere46","ServletContext"
"3314splitHere46","4414563splitHere46","getWebApplicationContext"
"3315splitHere46","4414563splitHere46","ServletContextEvent"
"3316splitHere46","4414563splitHere46","@Override<newline46mondego>public void contextInitialized(ServletContextEvent contextEvent) {<newline46mondego>    try {<newline46mondego>        ApplicationContext appContext = WebApplicationContextUtils.getWebApplicationContext(contextEvent.getServletContext());<newline46mondego><newline46mondego>        // get a bean named <doubleQuotes46>myCalendar<doubleQuotes46> from the application context       <newline46mondego>        Calendar cal = (Calendar)appContext.getBean(<doubleQuotes46>myCalendar<doubleQuotes46>);<newline46mondego><newline46mondego>        // bind via JNDI<newline46mondego>        Context initialContext = new InitialContext();<newline46mondego>        Context subCtx = initialContext.createSubcontext(<doubleQuotes46>sample<doubleQuotes46>);<newline46mondego>        subCtx.bind(<doubleQuotes46>calendar<doubleQuotes46>, cal);<newline46mondego><newline46mondego>    } catch (NamingException e) { // ommitted }<newline46mondego>}<newline46mondego>"
"3317splitHere46","4414747splitHere46","\1"
"3318splitHere46","4414747splitHere46","\2"
"3319splitHere46","4414969splitHere46","public interface ICommand{<newline46mondego>   void execute();<newline46mondego>   void undo();<newline46mondego>   void redo();<newline46mondego>}<newline46mondego>"
"3320splitHere46","4414969splitHere46","class MoveCommand implements ICommand{//parameter to store current board state<newline46mondego>  public MoveCommand(){<newline46mondego>    // new board state is validated<newline46mondego>  }<newline46mondego>  public void execute(){<newline46mondego>    // change the board state<newline46mondego>  }<newline46mondego> public void undo(){ // restore<newline46mondego> }<newline46mondego> public void redo(){ // apply again if possible<newline46mondego> }<newline46mondego>}<newline46mondego>"
"3321splitHere46","4414969splitHere46","class CommandDispatcher{<newline46mondego> private List<ICommand> commands = new ArrayList<ICommand>();<newline46mondego> public CommandDispatcher(){<newline46mondego> }<newline46mondego> private ICommand currentCommand = null;<newline46mondego> public void setCommand(ICommand cmd){<newline46mondego>   currentCommand  = cmd;<newline46mondego>   cmd.execute();<newline46mondego>   commands.add(cmd);<newline46mondego> }<newline46mondego> public void undoAll(){<newline46mondego>    for(ICommand cmd : commands){cmd.undo();}<newline46mondego>}<newline46mondego> public void undo(){<newline46mondego> commands.remove(commands.size()-1);<newline46mondego> currentCommand = commands.get(commands.size()-1)<newline46mondego>}<newline46mondego>public void redo(){<newline46mondego>if(null!=currentCommand) currentCommand.redo();<newline46mondego>}<newline46mondego>"
"3322splitHere46","4415100splitHere46","java.swing.Timer"
"3323splitHere46","4415100splitHere46","java.util.Timer"
"3324splitHere46","4415113splitHere46","public class ColorUtils {<newline46mondego>    private static int FIRST_COLOR = Color.GREEN;<newline46mondego>    private static int SECOND_COLOR = Color.YELLOW;<newline46mondego>    private static int THIRD_COLOR = Color.RED;<newline46mondego><newline46mondego>    public static int getColor(float p) {<newline46mondego>        int c0;<newline46mondego>        int c1;<newline46mondego>        if (p <= 0.5f) {<newline46mondego>            p *= 2;<newline46mondego>            c0 = FIRST_COLOR;<newline46mondego>            c1 = SECOND_COLOR;<newline46mondego>        } else {<newline46mondego>            p = (p - 0.5f) * 2;<newline46mondego>            c0 = SECOND_COLOR;<newline46mondego>            c1 = THIRD_COLOR;<newline46mondego>        }<newline46mondego>        int a = ave(Color.alpha(c0), Color.alpha(c1), p);<newline46mondego>        int r = ave(Color.red(c0), Color.red(c1), p);<newline46mondego>        int g = ave(Color.green(c0), Color.green(c1), p);<newline46mondego>        int b = ave(Color.blue(c0), Color.blue(c1), p);<newline46mondego>        return Color.argb(a, r, g, b);<newline46mondego>    }<newline46mondego><newline46mondego>    private static int ave(int src, int dst, float p) {<newline46mondego>        return src + java.lang.Math.round(p * (dst - src));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3325splitHere46","4415161splitHere46","singleton"
"3326splitHere46","4415161splitHere46","static"
"3327splitHere46","4415235splitHere46","select ... order by RANDOM() limit 10<newline46mondego>"
"3328splitHere46","4415323splitHere46","Buffer"
"3329splitHere46","4415323splitHere46","wait"
"3330splitHere46","4415323splitHere46","wait"
"3331splitHere46","4415323splitHere46","wait"
"3332splitHere46","4415504splitHere46","Logger.setLevel"
"3333splitHere46","4415504splitHere46","Level"
"3334splitHere46","4415504splitHere46","Logger"
"3335splitHere46","4415504splitHere46","Logger logger = Logger.getLogger(<doubleQuotes46>myLogger<doubleQuotes46>);<newline46mondego>logger.addAppender(new ConsoleAppender(new SimpleLayout()));<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>*** The current level will be INFO<doubleQuotes46>);<newline46mondego><newline46mondego>logger.setLevel(Level.INFO);<newline46mondego>logger.warn(<doubleQuotes46>Only INFO and higher will appear<doubleQuotes46>);<newline46mondego>logger.info(<doubleQuotes46>Only INFO and higher will appear<doubleQuotes46>);<newline46mondego>logger.debug(<doubleQuotes46>Only INFO and higher will appear<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>*** Changing level to DEBUG<doubleQuotes46>);<newline46mondego><newline46mondego>// remember the previous level<newline46mondego>Level previousLevel = logger.getLevel();<newline46mondego><newline46mondego>logger.setLevel(Level.DEBUG);<newline46mondego>logger.warn(<doubleQuotes46>DEBUG and higher will appear<doubleQuotes46>);<newline46mondego>logger.info(<doubleQuotes46>DEBUG and higher will appear<doubleQuotes46>);<newline46mondego>logger.debug(<doubleQuotes46>DEBUG and higher will appear<doubleQuotes46>);<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>*** Changing level back to previous level<doubleQuotes46>);<newline46mondego><newline46mondego>// revert to previous level<newline46mondego>logger.setLevel(previousLevel);<newline46mondego>logger.warn(<doubleQuotes46>Only INFO and higher will appear<doubleQuotes46>);<newline46mondego>logger.info(<doubleQuotes46>Only INFO and higher will appear<doubleQuotes46>);<newline46mondego>logger.debug(<doubleQuotes46>Only INFO and higher will appear<doubleQuotes46>);<newline46mondego>"
"3336splitHere46","4415504splitHere46","*** The current level will be INFO<newline46mondego>WARN - Only INFO and higher will appear<newline46mondego>INFO - Only INFO and higher will appear<newline46mondego>*** Changing level to DEBUG<newline46mondego>WARN - DEBUG and higher will appear<newline46mondego>INFO - DEBUG and higher will appear<newline46mondego>DEBUG - DEBUG and higher will appear<newline46mondego>*** Changing level back to previous level<newline46mondego>WARN - Only INFO and higher will appear<newline46mondego>INFO - Only INFO and higher will appear<newline46mondego>"
"3337splitHere46","4415504splitHere46","Logger"
"3338splitHere46","4415504splitHere46","myLogger"
"3339splitHere46","4415504splitHere46","setLevel"
"3340splitHere46","4415504splitHere46","Logger.getRootLogger"
"3341splitHere46","4415558splitHere46","response.sendRedirect(url);<newline46mondego>"
"3342splitHere46","4415577splitHere46","getLogger(String)"
"3343splitHere46","4415577splitHere46","LogManager"
"3344splitHere46","4415577splitHere46","setLevel"
"3345splitHere46","4415691splitHere46","private"
"3346splitHere46","4415691splitHere46","init()"
"3347splitHere46","4415691splitHere46","doStuffAfterGuiInitialized()"
"3348splitHere46","4415888splitHere46","StaticNonStaticTest.object"
"3349splitHere46","4416000splitHere46","HashMap"
"3350splitHere46","4416000splitHere46","put"
"3351splitHere46","4416000splitHere46","get"
"3352splitHere46","4416000splitHere46","HashMap"
"3353splitHere46","4416000splitHere46","HashMap"
"3354splitHere46","4416000splitHere46","AbstractMap"
"3355splitHere46","4416000splitHere46","put"
"3356splitHere46","4416000splitHere46","get"
"3357splitHere46","4416000splitHere46","public class Table {<newline46mondego>       protected java.util.HashMap<String, Integer> map = <newline46mondego>             new java.util.HashMap<String, Integer>();<newline46mondego><newline46mondego>       public Integer get(String key) { return map.get(key); }<newline46mondego><newline46mondego>       public Integer put(String key, Integer value) {<newline46mondego>          if (map.containsKey(key)) {<newline46mondego>           // implement the logic you need here.<newline46mondego>           // You might want to return `value` to indicate<newline46mondego>           // that no changes applied<newline46mondego>           return value;<newline46mondego>          } else {<newline46mondego>            return map.put(key, value);<newline46mondego>          }<newline46mondego>       }<newline46mondego>       // other methods goes here<newline46mondego>    }<newline46mondego>"
"3358splitHere46","4416000splitHere46","HashMap"
"3359splitHere46","4416000splitHere46","put"
"3360splitHere46","4416000splitHere46","putAll"
"3361splitHere46","4416000splitHere46","HashMap"
"3362splitHere46","4416000splitHere46","put"
"3363splitHere46","4416000splitHere46","public class Table extends java.util.HashMap<String, Integer> {<newline46mondego>       public Integer put(String key, Integer value) {<newline46mondego>          if (containsKey(key)) {<newline46mondego>           // implement the logic you need here.<newline46mondego>           // You might want to return `value` to indicate<newline46mondego>           // that no changes applied<newline46mondego>           return value;<newline46mondego>          } else {<newline46mondego>            return super.put(key, value);<newline46mondego>          }<newline46mondego>       }<newline46mondego>    }<newline46mondego>"
"3364splitHere46","4416000splitHere46","HashMap"
"3365splitHere46","4416000splitHere46","public final Integer putToMap(String key, String value) {<newline46mondego>   if(this.map.containsKey(key)) {<newline46mondego>      return value;<newline46mondego>   } else {<newline46mondego>      return this.map.put(key, value);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3366splitHere46","4416081splitHere46","List<String> stringList = new ArrayList<String>();<newline46mondego>stringList.add(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>List<Integer> intList = new ArrayList(stringList); // Warning about unchecked conversion<newline46mondego>int i = intList.get(0); // Oops, throws a ClassCastException<newline46mondego>"
"3367splitHere46","4416352splitHere46","Welcome createaccount = new Welcome(); <newline46mondego>"
"3368splitHere46","4416352splitHere46","AndroidManifest.xml"
"3369splitHere46","4416352splitHere46","android:name=<doubleQuotes46>Welcome<doubleQuotes46>"
"3370splitHere46","4416352splitHere46","<application>"
"3371splitHere46","4416503splitHere46","User"
"3372splitHere46","4416503splitHere46","id"
"3373splitHere46","4416503splitHere46","em.find()"
"3374splitHere46","4416503splitHere46","AUTO"
"3375splitHere46","4416559splitHere46","FormToolkit"
"3376splitHere46","4416559splitHere46","PaintListener"
"3377splitHere46","4416559splitHere46","paintBordersFor(.)"
"3378splitHere46","4416678splitHere46","if ((folder.getType() & Folder.HOLDS_FOLDERS) != 0)<newline46mondego>"
"3379splitHere46","4416678splitHere46","=="
"3380splitHere46","4416727splitHere46","getResourceAsStream()"
"3381splitHere46","4416727splitHere46","InputStream"
"3382splitHere46","4416807splitHere46","Compiling 1 source file to C:\Users\Para\Documents\NetBeansProjects\Barbut\build\compiled<newline46mondego>C:\Users\Para\Documents\NetBeansProjects\Barbut\build\compiled\scala\reflect\ScalaSignature.class: warning: Cannot find annotation method 'value()' in type 'java.lang.annotation.Retention': class file for java.lang.annotation.Retention not found<newline46mondego>An exception has occurred in the compiler (1.6.0_18). Please file a bug at the Java Developer Connection (http://java.sun.com/webapps/bugreport)  after checking the Bug Parade for duplicates. Include your program and the following diagnostic in your report.  Thank you.<newline46mondego>com.sun.tools.javac.code.Symbol$CompletionFailure: class file for java.lang.annotation.RetentionPolicy not found<newline46mondego>C:\Users\Para\Documents\NetBeansProjects\Barbut\nbproject\build-impl.xml:379: Compile failed; see the compiler error output for details.<newline46mondego>BUILD FAILED (total time: 1 minute 2 seconds)<newline46mondego>"
"3383splitHere46","4416958splitHere46","public static Function<Integer, Integer> intIncrementer(final int step) {<newline46mondego>    class IntIncrementer implements Function<Integer, Integer> {<newline46mondego>      private final int _step = step;<newline46mondego><newline46mondego>      @Override public Integer apply(Integer i) {<newline46mondego>        return i + _step;<newline46mondego>      }<newline46mondego><newline46mondego>      @Override public boolean equals(Object obj) {<newline46mondego>        return (obj instanceof IntIncrementer) <newline46mondego>           && ((IntIncrementer) obj)._step == _step;<newline46mondego>      }<newline46mondego><newline46mondego>      @Override public int hashCode() {<newline46mondego>        return _step;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    return new IntIncrementer();<newline46mondego>  }<newline46mondego>"
"3384splitHere46","4416958splitHere46","i + _step"
"3385splitHere46","4416958splitHere46","BigInteger"
"3386splitHere46","4416958splitHere46","long"
"3387splitHere46","4416958splitHere46","<T extends Comparable<T>>"
"3388splitHere46","4416958splitHere46","<T>"
"3389splitHere46","4416958splitHere46","Range"
"3390splitHere46","4416958splitHere46","public interface Range<T> extends Iterable<T> {<newline46mondego>  // TODO: write the terms of the contract<newline46mondego>  @Override public boolean equals(Object obj);<newline46mondego>  @Override public int hashCode();<newline46mondego>  // TODO: other useful methods?<newline46mondego>}<newline46mondego>"
"3391splitHere46","4416958splitHere46","for"
"3392splitHere46","4416969splitHere46","ServletContextListener"
"3393splitHere46","4416969splitHere46","contextInitialized(..)"
"3394splitHere46","4416969splitHere46","TimeZone.setDefault(..)"
"3395splitHere46","4416969splitHere46","@PostConstruct"
"3396splitHere46","4416969splitHere46","afterPropertiesSet()"
"3397splitHere46","4417000splitHere46","DateTime#toDate()"
"3398splitHere46","4417000splitHere46","Date date = dateTime.toDate();<newline46mondego>"
"3399splitHere46","4417158splitHere46","class MyValues{<newline46mondego>    public int i = 1;<newline46mondego>    private String value = null;<newline46mondego><newline46mondego>    public MyValues(String v){<newline46mondego>        value = v;<newline46mondego>    }<newline46mondego><newline46mondego>    int hashCode()<newline46mondego>    {<newline46mondego>        return value.length;<newline46mondego>    }<newline46mondego><newline46mondego>    boolean equals(Object obj){<newline46mondego>        return obj.equals(value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3400splitHere46","4417158splitHere46","private Set<MyValues> values = new TreeSet<MyValues>();<newline46mondego>for(String s : duplicatArray){<newline46mondego>    MyValues v = new MyValues(s);<newline46mondego>    if (values.add(v))<newline46mondego>    {<newline46mondego>        v.i++;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3401splitHere46","4417229splitHere46","<h:outputText value=<doubleQuotes46>#{item.rentid}<doubleQuotes46> /><newline46mondego>"
"3402splitHere46","4417229splitHere46","java.lang.NumberFormatException: For input string: <doubleQuotes46>rentid<doubleQuotes46><newline46mondego>    ...<newline46mondego>    at javax.el.ArrayELResolver.getValue(ArrayELResolver.java:195)<newline46mondego>    ...<newline46mondego>    at javax.faces.component.UIOutput.getValue(UIOutput.java:168)<newline46mondego>"
"3403splitHere46","4417229splitHere46","ArrayELResolver"
"3404splitHere46","4417229splitHere46","#{item}"
"3405splitHere46","4417229splitHere46","Object[]"
"3406splitHere46","4417229splitHere46","#{item[0]}"
"3407splitHere46","4417229splitHere46","rentid"
"3408splitHere46","4417229splitHere46","#{item.rentid}"
"3409splitHere46","4417229splitHere46","RentController#getTopMembers()"
"3410splitHere46","4417229splitHere46","List<Rent>"
"3411splitHere46","4417229splitHere46","List<Object[]>"
"3412splitHere46","4417229splitHere46","RentController"
"3413splitHere46","4417229splitHere46","#{rentController}"
"3414splitHere46","4417641splitHere46","DateTime#toLocalDate()"
"3415splitHere46","4417641splitHere46","LocalDate localDate = dateTime.toLocalDate();<newline46mondego>"
"3416splitHere46","4417678splitHere46","<jsp:include>"
"3417splitHere46","4417678splitHere46","<jsp:include page=<doubleQuotes46>${bean.pagename}.jsp<doubleQuotes46> /><newline46mondego>"
"3418splitHere46","4417678splitHere46","<c:if>"
"3419splitHere46","4417678splitHere46","<c:choose>"
"3420splitHere46","4417678splitHere46","<c:choose><newline46mondego>    <c:when test=<doubleQuotes46>${bean.pagename == 'main'}<doubleQuotes46>><newline46mondego>        <jsp:include page=<doubleQuotes46>main.jsp<doubleQuotes46> /><newline46mondego>    </c:when><newline46mondego>    <c:otherwise><newline46mondego>        <jsp:include page=<doubleQuotes46>welcome.jsp<doubleQuotes46> /><newline46mondego>    </c:otherwise><newline46mondego></c:choose><newline46mondego>"
"3421splitHere46","4417678splitHere46","?:"
"3422splitHere46","4417678splitHere46","<jsp:include page=<doubleQuotes46>${bean.pagename == 'main' ? 'main' : 'welcome'}.jsp}<doubleQuotes46> /><newline46mondego>"
"3423splitHere46","4417738splitHere46","compareAndSet()"
"3424splitHere46","4417738splitHere46","true"
"3425splitHere46","4417738splitHere46","v"
"3426splitHere46","4417738splitHere46","v + 1"
"3427splitHere46","4417738splitHere46","v + 1"
"3428splitHere46","4417738splitHere46","v"
"3429splitHere46","4417738splitHere46","v + 1"
"3430splitHere46","4417738splitHere46","v + 2"
"3431splitHere46","4417738splitHere46","compareAndSet()"
"3432splitHere46","4417738splitHere46","true"
"3433splitHere46","4417738splitHere46","v + 1"
"3434splitHere46","4417738splitHere46","compareAndSet()"
"3435splitHere46","4417738splitHere46","get()"
"3436splitHere46","4417738splitHere46","AtomicInteger"
"3437splitHere46","4417738splitHere46","incrementAndGet()"
"3438splitHere46","4417752splitHere46","schemagen"
"3439splitHere46","4417885splitHere46","new String(buffer, 0, numread)"
"3440splitHere46","4417885splitHere46","read()"
"3441splitHere46","4417885splitHere46","numread == -1"
"3442splitHere46","4417885splitHere46","sizeof(some_array)"
"3443splitHere46","4417885splitHere46","\0"
"3444splitHere46","4417885splitHere46","printf"
"3445splitHere46","4417885splitHere46","\n"
"3446splitHere46","4417885splitHere46","strlen(string) + 1"
"3447splitHere46","4417885splitHere46","BufferedReader"
"3448splitHere46","4417885splitHere46","readLine()"
"3449splitHere46","4417889splitHere46","final CharSequence date = DateFormat.format(mDateFormat, mCalendar);<newline46mondego>    final CharSequence day = DateFormat.format(mDayFormat, mCalendar);<newline46mondego>    String time = (String) DateFormat.format(mTimeFormat, mCalendar);<newline46mondego>    RemoteViews views = new RemoteViews(getPackageName(), R.layout.clock2by2);<newline46mondego>    String days = new String(day.toString().substring(0,1).toUpperCase() + day.toString().substring(1));<newline46mondego>    String dates = new String(date.toString().substring(0,1).toUpperCase() + date.toString().substring(1));<newline46mondego><newline46mondego>    views.setTextViewText(R.id.Day, days);<newline46mondego>    views.setTextViewText(R.id.Date, dates);<newline46mondego>    views.setImageViewBitmap(R.id.TimeView, buildUpdate(time));<newline46mondego>"
"3450splitHere46","4417901splitHere46","String s = String.format(<doubleQuotes46>e = %+10.4f<doubleQuotes46>, Math.E);<newline46mondego>"
"3451splitHere46","4418091splitHere46","ds.setUrl(<doubleQuotes46>jdbc:mysql:mxj://localhost<doubleQuotes46>);<newline46mondego>ds.setUser(<doubleQuotes46>root<doubleQuotes46>);<newline46mondego>ds.setPassword(<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"3452splitHere46","4418091splitHere46","DriverManager#getConnection()"
"3453splitHere46","4418091splitHere46","InitializeData"
"3454splitHere46","4418091splitHere46","ds"
"3455splitHere46","4418091splitHere46","ds.getConnection()"
"3456splitHere46","4418091splitHere46","MysqlDataSource"
"3457splitHere46","4418091splitHere46","DriverManager"
"3458splitHere46","4418125splitHere46","abstract class PlayBase {}<newline46mondego>interface MyInterface<T extends PlayBase> {<newline46mondego>    public void playWith(List<T> list);<newline46mondego>}   <newline46mondego>"
"3459splitHere46","4418125splitHere46","class A extends PlayBase {}<newline46mondego>class MyImplementationA implements MyInterface<A> {<newline46mondego>    public void playWith(List<? extends A> list){}<newline46mondego>}<newline46mondego>"
"3460splitHere46","4418251splitHere46","int n;<newline46mondego>MyOutStream.write(new byte[]{n&0xff, (n>>8)&0xff, (n>>16)&0xff, (n>>24)&0xff});<newline46mondego>"
"3461splitHere46","4418368splitHere46","log4j.rootLogger=DEBUG,A1<newline46mondego>log4j.newlogger=WARN, XML<newline46mondego>"
"3462splitHere46","4418407splitHere46","<doubleQuotes46>&#60;([ A-Z&#;0-9-]*?) (\\d{4}-\\d{2}-\\d{2})&#62;<doubleQuotes46><newline46mondego>"
"3463splitHere46","4418407splitHere46","*+"
"3464splitHere46","4418407splitHere46","*?"
"3465splitHere46","4418407splitHere46","*"
"3466splitHere46","4418430splitHere46","String key = <doubleQuotes46>Name =<doubleQuotes46>;<newline46mondego>String space = <doubleQuotes46><doubleQuotes46>;<newline46mondego>for(int i; i<(50-key.length); i++)<newline46mondego>{space = space + <doubleQuotes46> <doubleQuotes46>;}<newline46mondego>String value = <doubleQuotes46>Bob\n<doubleQuotes46>;<newline46mondego>System.out.println(key+space+value);<newline46mondego>"
"3467splitHere46","4418430splitHere46","StringBuilder"
"3468splitHere46","4418578splitHere46","kundenregister[i][0] = Console.readCharArray();<newline46mondego>"
"3469splitHere46","4418578splitHere46","kundenregister[i][0]"
"3470splitHere46","4418578splitHere46","char"
"3471splitHere46","4418578splitHere46","char[][][] kundenregister = new char[nk][4][];<newline46mondego>"
"3472splitHere46","4418578splitHere46","char"
"3473splitHere46","4418578splitHere46","List<Customer>"
"3474splitHere46","4418578splitHere46","ArrayList<T>"
"3475splitHere46","4418726splitHere46","tempStock"
"3476splitHere46","4418726splitHere46","setTicker()"
"3477splitHere46","4418726splitHere46","tempStock"
"3478splitHere46","4418726splitHere46","ArrayList"
"3479splitHere46","4418726splitHere46","tempStock"
"3480splitHere46","4418726splitHere46","// If parsing was successful...<newline46mondego>    if (succeed) {<newline46mondego>        tempStock = new Stock(); // or however you instantiate this object<newline46mondego>        tempStock.setTicker(ticker);<newline46mondego>        tempStock.setNumberOfShares(num_shares);<newline46mondego>        tempStock.setStockName(stockName);<newline46mondego>"
"3481splitHere46","4418772splitHere46","private static Function<Shape, ModelBean> MODEL_BEAN_PROJECTION =<newline46mondego>    new Function<Shape, ModelBean>() {<newline46mondego>    final ModelBeanCreator binder = new ModelBeanCreator();<newline46mondego><newline46mondego>    @Override<newline46mondego>    public ModelBean apply(Shape input) {<newline46mondego>        return binder.createModelBean(input);<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"3482splitHere46","4418772splitHere46","MODEL_BEAN_PROJECTION"
"3483splitHere46","4418841splitHere46","accept()"
"3484splitHere46","4418841splitHere46","visit()"
"3485splitHere46","4418841splitHere46","List<Type> superInterfaces = enumDecNode.superInterfaceTypes();<newline46mondego>for( Type superInterface: superInterfaces)<newline46mondego>    superInterface.accept( this);<newline46mondego>"
"3486splitHere46","4418841splitHere46","this.visit( superInterface);<newline46mondego>"
"3487splitHere46","4418841splitHere46","Type"
"3488splitHere46","4418841splitHere46","visit( Type node)"
"3489splitHere46","4418841splitHere46","superInterfaces"
"3490splitHere46","4418852splitHere46","int number = <newline46mondego>OutputStream os =<newline46mondego>os.write(number >> 16);<newline46mondego>os.write(number >> 8);<newline46mondego>os.write(number);<newline46mondego>"
"3491splitHere46","4418852splitHere46","InputStream is = <newline46mondego>int number = ((is.read() & 0xFF) << 16) | ((is.read() & 0xFF) << 8) | (is.read() & 0xFF)<newline46mondego>"
"3492splitHere46","4418852splitHere46","2 TB of disk space is worth about $100<newline46mondego>1 GB is worth about 5 cents<newline46mondego>1 MB is worth about 0.005 cents<newline46mondego>1 KB is worth about 0.000005 cents.<newline46mondego>1 B is worth about 0.000000005 cents.<newline46mondego>"
"3493splitHere46","4418852splitHere46","1 minute of your time, 12 cents. ~2 GB.<newline46mondego>1 second, 0.2 cents. ~40 MB.<newline46mondego>1 key, 0.2 seconds, 0.04 cents ~8 MB.<newline46mondego>1 blink. 0.05 seconds, 0.01 cents ~2 MB.<newline46mondego>"
"3494splitHere46","4419026splitHere46","nameB = savedInstanceState.getString(<doubleQuotes46>com.example.myapp.Name<doubleQuotes46>);<newline46mondego>"
"3495splitHere46","4419026splitHere46","Bundle bundle = getIntent().getExtras();<newline46mondego>nameB = bundle.getString(<doubleQuotes46>com.example.myapp.Name<doubleQuotes46>);<newline46mondego>"
"3496splitHere46","4419044splitHere46","chooser.getSelectedFile()"
"3497splitHere46","4419044splitHere46","chooser.getCurrentDirectory()"
"3498splitHere46","4419044splitHere46","C:\Windows"
"3499splitHere46","4419065splitHere46","BroadcastReciever"
"3500splitHere46","4419065splitHere46","Activity"
"3501splitHere46","4419066splitHere46","EntityManager"
"3502splitHere46","4419066splitHere46","EntityManager"
"3503splitHere46","4419066splitHere46","@PersistenceContext"
"3504splitHere46","4419066splitHere46","EntityManager"
"3505splitHere46","4419066splitHere46","ThreadLocal"
"3506splitHere46","4419066splitHere46","@PersistenceContext"
"3507splitHere46","4419066splitHere46","EntityManager"
"3508splitHere46","4419066splitHere46","ThreadLocal"
"3509splitHere46","4419066splitHere46","ThreadLocal"
"3510splitHere46","4419102splitHere46","com.ibm.jvm.Dump.HeapDump()"
"3511splitHere46","4419135splitHere46","String[] temp = expression.split(<doubleQuotes46>[\\s0-9+-]+<doubleQuotes46>);<newline46mondego>"
"3512splitHere46","4419135splitHere46","+"
"3513splitHere46","4419135splitHere46","-"
"3514splitHere46","4419135splitHere46","-"
"3515splitHere46","4419234splitHere46","java"
"3516splitHere46","4419234splitHere46","javac"
"3517splitHere46","4419234splitHere46","deps\mail.jar"
"3518splitHere46","4419234splitHere46","deps/mail.jar"
"3519splitHere46","4419234splitHere46",":"
"3520splitHere46","4419234splitHere46",";"
"3521splitHere46","4419255splitHere46","public class Color extends java.awt.Color{<newline46mondego>  public Color(int rgb) {<newline46mondego>    super(rgb);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3522splitHere46","4419287splitHere46","<project><newline46mondego>    ...<newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>                <artifactId>maven-war-plugin</artifactId><newline46mondego>                <version>2.1.1</version><newline46mondego>                <configuration><newline46mondego>                    <packagingExcludes>WEB-INF/web.xml</packagingExcludes><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>        </plugins><newline46mondego>    </build><newline46mondego>    ...<newline46mondego></project><newline46mondego>"
"3523splitHere46","4419748splitHere46","$INFILE"
"3524splitHere46","4419748splitHere46","sed -i -e '/^package /d' -e '1,1 i package '<doubleQuotes46>$(dirname <doubleQuotes46>$INFILE<doubleQuotes46> | sed -e 's:/:.:g');<doubleQuotes46> $INFILE<newline46mondego>"
"3525splitHere46","4419794splitHere46","y_position = sqrt(3)/2 * diameter * y"
"3526splitHere46","4419814splitHere46","import javax.swing.*;<newline46mondego><newline46mondego><newline46mondego>public class menuBar extends JMenuBar{<newline46mondego><newline46mondego>  public menuBar(){<newline46mondego><newline46mondego>    JMenu file = new JMenu(<doubleQuotes46>File<doubleQuotes46>);<newline46mondego>    this.add(file);<newline46mondego>    JMenuItem open = new JMenuItem(<doubleQuotes46>Open<doubleQuotes46>);<newline46mondego>    file.add(open);<newline46mondego>    JMenuItem neww = new JMenuItem(<doubleQuotes46>New<doubleQuotes46>);<newline46mondego>    file.add(neww);<newline46mondego><newline46mondego>    JMenu edit = new JMenu(<doubleQuotes46>Edit<doubleQuotes46>);<newline46mondego>    this.add(edit);<newline46mondego>    JMenuItem color = new JMenuItem(<doubleQuotes46>Change Color<doubleQuotes46>);<newline46mondego>    edit.add(color);<newline46mondego><newline46mondego>    JMenu help = new JMenu(<doubleQuotes46>Help<doubleQuotes46>);<newline46mondego>    this.add(help);<newline46mondego>    JMenuItem about = new JMenuItem(<doubleQuotes46>About<doubleQuotes46>);<newline46mondego>    help.add(about);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3527splitHere46","4419814splitHere46","import javax.swing.*;<newline46mondego><newline46mondego>public class SaucerDriver{<newline46mondego><newline46mondego>  public static void main(String[] args){<newline46mondego>    DisplayWindow d = new DisplayWindow();<newline46mondego>    d.setJMenuBar(new menuBar());<newline46mondego>    SaucerPanel p = new SaucerPanel(menuBar);<newline46mondego>    d.addPanel(p);<newline46mondego>    d.showFrame();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3528splitHere46","4419814splitHere46","public SaucerPanel(JMenuBar menuBar){<newline46mondego>    setMenuBarItems(menuBar);<newline46mondego>    //...rest of the JPANEL code here<newline46mondego>}<newline46mondego>"
"3529splitHere46","4419814splitHere46","public void setMenuBarItems(JMenuBar menuBar) {<newline46mondego>    JMenu file = new JMenu(<doubleQuotes46>File<doubleQuotes46>);<newline46mondego>    menuBar.add(file);<newline46mondego>    JMenuItem open = new JMenuItem(<doubleQuotes46>Open<doubleQuotes46>);<newline46mondego>    file.add(open);<newline46mondego>    JMenuItem neww = new JMenuItem(<doubleQuotes46>New<doubleQuotes46>);<newline46mondego>    file.add(neww);<newline46mondego><newline46mondego>    JMenu edit = new JMenu(<doubleQuotes46>Edit<doubleQuotes46>);<newline46mondego>    menuBar.add(edit);<newline46mondego>    JMenuItem color = new JMenuItem(<doubleQuotes46>Change Color<doubleQuotes46>);<newline46mondego>    edit.add(color);<newline46mondego><newline46mondego>    JMenu help = new JMenu(<doubleQuotes46>Help<doubleQuotes46>);<newline46mondego>    menuBar.add(help);<newline46mondego>    JMenuItem about = new JMenuItem(<doubleQuotes46>About<doubleQuotes46>);<newline46mondego>    help.add(about);<newline46mondego>}<newline46mondego>"
"3530splitHere46","4419936splitHere46","StringBuilder"
"3531splitHere46","4419936splitHere46","StringBuffer"
"3532splitHere46","4419936splitHere46","StringBuilder"
"3533splitHere46","4419936splitHere46","StringBuffer"
"3534splitHere46","4419936splitHere46","StringBuffer"
"3535splitHere46","4419936splitHere46","StringBuffer"
"3536splitHere46","4419936splitHere46","StringBuffer"
"3537splitHere46","4419936splitHere46","StringBuilder"
"3538splitHere46","4419936splitHere46","StringBuffer"
"3539splitHere46","4419936splitHere46","StringBuilder"
"3540splitHere46","4419936splitHere46","StringBuilder"
"3541splitHere46","4419936splitHere46","StringBuffer"
"3542splitHere46","4420013splitHere46","unknown(101)<newline46mondego> -> 1 + 2 * unknown(10) <newline46mondego>   -> 1 + 2 * (0 + 2 * unknown(1))<newline46mondego>     -> 1 + 2 * (0 + 2 * 1)<newline46mondego>   -> 1 + 2 * 2<newline46mondego> -> 5<newline46mondego>"
"3543splitHere46","4420312splitHere46","/assets/instruments/data/bongo/audio<newline46mondego>"
"3544splitHere46","4420312splitHere46","// Declare globally if needed<newline46mondego>    int mySoundId;<newline46mondego>    SoundPool soundPool = new SoundPool(5, AudioManager.STREAM_MUSIC, 0 );<newline46mondego>    AssetManager am = this.getAssets();<newline46mondego><newline46mondego>    //Use in whatever method is used to load the sounds<newline46mondego>    try {<newline46mondego>        mySoundId = soundPool.load(am.openFd(<doubleQuotes46>instruments/data/bongo/audio/bong1.wav<doubleQuotes46>), 1);<newline46mondego>    } catch (IOException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"3545splitHere46","4420312splitHere46","soundPool.play(mySoundId, 1, 1, 0, 0, 1);<newline46mondego>"
"3546splitHere46","4420315splitHere46","Object.hashCode()"
"3547splitHere46","4420315splitHere46","LinkedHashMap"
"3548splitHere46","4420556splitHere46","X"
"3549splitHere46","4420556splitHere46","size"
"3550splitHere46","4420556splitHere46","List<Calendar>"
"3551splitHere46","4420556splitHere46","X"
"3552splitHere46","4420556splitHere46","List"
"3553splitHere46","4420556splitHere46","Calendars"
"3554splitHere46","4420556splitHere46","List"
"3555splitHere46","4420556splitHere46","List"
"3556splitHere46","4420556splitHere46","List"
"3557splitHere46","4420556splitHere46","getCalendarCount"
"3558splitHere46","4420684splitHere46","public interface AnotherInterface {<newline46mondego>    public void onEvent(List<JPanel> event);<newline46mondego>    public void onEvent(List<JLabel> event);<newline46mondego>}<newline46mondego>"
"3559splitHere46","4420684splitHere46","public class Sandbox {<newline46mondego>//    ....<newline46mondego>    public final class JPanelEventHandler implements Listener<JPanel> {<newline46mondego>        AnotherInterface target;<newline46mondego>        JPanelEventHandler(AnotherInterface target){this.target = target;}<newline46mondego>        public final void onEvent(JPanel event){<newline46mondego>             target.onEvent(event);<newline46mondego>        }<newline46mondego>    }<newline46mondego>///same with JLabel<newline46mondego>}<newline46mondego>"
"3560splitHere46","4420746splitHere46","public void wash(Fruit f)<newline46mondego>{<newline46mondego>   if(f instanceof Apple)<newline46mondego>   {<newline46mondego>      wash((Apple) f) ;<newline46mondego>   }<newline46mondego>   else if(f instanceof Peach)<newline46mondego>   {<newline46mondego>      wash((Peach) f) ;<newline46mondego>   }<newline46mondego>   else<newline46mondego>   {<newline46mondego>      // handle the error, usually through an exception<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3561splitHere46","4420746splitHere46","public abstract class Fruit<newline46mondego>{<newline46mondego>   // etc.<newline46mondego>   public abstract void accept(FruitVisitor v) ;<newline46mondego>}<newline46mondego><newline46mondego>public class Apple extends Fruit<newline46mondego>{<newline46mondego>   // etc.<newline46mondego>   public void accept(FruitVisitor v)<newline46mondego>   {<newline46mondego>      v.visit(this) ;<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>public class Peach extends Fruit<newline46mondego>{<newline46mondego>   // etc.<newline46mondego>   public void accept(FruitVisitor v)<newline46mondego>   {<newline46mondego>      v.visit(this) ;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3562splitHere46","4420746splitHere46","public interface class FruitVisitor<newline46mondego>{<newline46mondego>   // etc.<newline46mondego><newline46mondego>   // Note that there are no visit method for Fruit<newline46mondego>   // this is not an error<newline46mondego><newline46mondego>   public void visit(Apple a) ;<newline46mondego>   public void visit(Peach p) ;<newline46mondego>}<newline46mondego>"
"3563splitHere46","4420746splitHere46","public class FruitVisitorWasher : implements FruitVisitor<newline46mondego>{<newline46mondego>   // etc.<newline46mondego><newline46mondego>   // Note that there are no visit method for Fruit<newline46mondego>   // this is not an error<newline46mondego><newline46mondego>   // Note, too, that you must provide a wash method in<newline46mondego>   // FruitVisitorWasher (or use an anonymous class, as<newline46mondego>   // in the example of the second edit to access the<newline46mondego>   // wash method of the outer class)<newline46mondego><newline46mondego>   public void visit(Apple a)<newline46mondego>   {<newline46mondego>      wash(a) ;<newline46mondego>   }<newline46mondego><newline46mondego>   public void visit(Peach p)<newline46mondego>   {<newline46mondego>      wash(p) ;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3564splitHere46","4420746splitHere46","FruitVisitorWasher fvw = new FruitVisitorWasher() ;<newline46mondego><newline46mondego>for( Fruit f: arguments)<newline46mondego>{<newline46mondego>   f.accept(fvw) ;<newline46mondego>}<newline46mondego>"
"3565splitHere46","4420746splitHere46","public class Foo<newline46mondego>{<newline46mondego>   public wash(Apple a) { /* etc. */ }<newline46mondego>   public wash(Peach p) { /* etc. */ }<newline46mondego>   public bar(List<? extends Fruit> arguments)<newline46mondego>   {<newline46mondego>      for( Fruit f: arguments)<newline46mondego>      {<newline46mondego>         wash(f) ; // we wand the right wash method called.<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3566splitHere46","4420746splitHere46","public class Foo<newline46mondego>{<newline46mondego>   public void wash(Apple a) { System.out.println(<doubleQuotes46>Apple<doubleQuotes46>) ; }<newline46mondego>   public void wash(Peach p) { System.out.println(<doubleQuotes46>Peach<doubleQuotes46>) ; }<newline46mondego><newline46mondego>   public void bar(List<? extends Fruit> arguments)<newline46mondego>   {<newline46mondego>      FruitVisitor fv = new FruitVisitor()<newline46mondego>      {<newline46mondego>         public void visit(Apple a)<newline46mondego>         {<newline46mondego>            wash(a) ; // will call the wash method<newline46mondego>                      // of the outer class (Foo)<newline46mondego>         }<newline46mondego><newline46mondego>         public void visit(Peach p)<newline46mondego>         {<newline46mondego>            wash(p) ; // will call the wash method<newline46mondego>                      // of the outer class (Foo)<newline46mondego>         }<newline46mondego>      } ;<newline46mondego><newline46mondego>      for(Fruit f: arguments)<newline46mondego>      {<newline46mondego>         f.accept(fv) ;<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3567splitHere46","4420932splitHere46","HandlerExceptionResolver"
"3568splitHere46","4420932splitHere46","HandlerInterceptor"
"3569splitHere46","4420932splitHere46","afterCompletion"
"3570splitHere46","4420952splitHere46","a.compareTo(b)<newline46mondego>"
"3571splitHere46","4420952splitHere46","if (Integer.parseInt(a) < Integer.parseInt(b)){<newline46mondego>   ...<newline46mondego>} else {<newline46mondego> ...<newline46mondego>}<newline46mondego>"
"3572splitHere46","4421160splitHere46","mappedBy=<doubleQuotes46>siteId<doubleQuotes46>"
"3573splitHere46","4421352splitHere46","ConstantPoolGen"
"3574splitHere46","4421352splitHere46","ConstantPoolGen"
"3575splitHere46","4421352splitHere46","MethodGen"
"3576splitHere46","4421352splitHere46","MethodGen"
"3577splitHere46","4421352splitHere46","setName()"
"3578splitHere46","4421438splitHere46","String.format(<doubleQuotes46>%16s<doubleQuotes46>, Integer.toBinaryString(1)).replace(' ', '0')<newline46mondego>"
"3579splitHere46","4421649splitHere46","protected void onListItemClick(ListView l, View v, int position, long id) {<newline46mondego>    super.onListItemClick(l, v, position, id);<newline46mondego>    // Get the item that was clicked<newline46mondego><newline46mondego>    Intent selectedProjectType = new Intent();<newline46mondego><newline46mondego>    Cursor o = (Cursor) this.getListAdapter().getItem(position);<newline46mondego>    String keyword = o.getString(1);<newline46mondego><newline46mondego>    selectedProjectType.putExtra(<doubleQuotes46>selectedprojecttype<doubleQuotes46>, keyword);<newline46mondego><newline46mondego>    setResult(RESULT_OK, selectedProjectType);<newline46mondego>    finish();<newline46mondego>}<newline46mondego>"
"3580splitHere46","4421675splitHere46","g"
"3581splitHere46","4421675splitHere46","h"
"3582splitHere46","4421675splitHere46","i"
"3583splitHere46","4421675splitHere46","4"
"3584splitHere46","4421739splitHere46","javac -cp path_to_jar1.jar:path_to_jar2.jar Example.java<newline46mondego>"
"3585splitHere46","4421739splitHere46","java -cp .:path_to_jar1.jar:path_to_jar2.jar Example<newline46mondego>"
"3586splitHere46","4421739splitHere46",";"
"3587splitHere46","4421739splitHere46",":"
"3588splitHere46","4421778splitHere46","public class Test {<newline46mondego><newline46mondego>    public static void main(String args[])<newline46mondego>    {<newline46mondego>        double d = 6.67e-11;<newline46mondego><newline46mondego>        System.out.println(Double.toString(d)); // Prints <doubleQuotes46>6.67E-11<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3589splitHere46","4421778splitHere46","Double.toString()"
"3590splitHere46","4421778splitHere46","Double.parseDouble()"
"3591splitHere46","4421790splitHere46","<url-pattern>/tela-paciente/*</url-pattern>"
"3592splitHere46","4421928splitHere46","java"
"3593splitHere46","4421928splitHere46","bin"
"3594splitHere46","4421928splitHere46","java"
"3595splitHere46","4421928splitHere46","javaw"
"3596splitHere46","4421928splitHere46","ProcessBuilder"
"3597splitHere46","4421928splitHere46","java"
"3598splitHere46","4421928splitHere46","j9"
"3599splitHere46","4421928splitHere46","j9w"
"3600splitHere46","4421928splitHere46","-X"
"3601splitHere46","4421928splitHere46","-XX"
"3602splitHere46","4421928splitHere46","rvm"
"3603splitHere46","4421928splitHere46","java"
"3604splitHere46","4421928splitHere46","ikvm"
"3605splitHere46","4422152splitHere46","Transferable"
"3606splitHere46","4422230splitHere46","JLabel lbl_test;<newline46mondego><newline46mondego>lbl_test.setPreferredSize(new Dimension(100, 100) );<newline46mondego>lbl_test.revalidate();<newline46mondego>"
"3607splitHere46","4422270splitHere46","node()"
"3608splitHere46","4422270splitHere46","string"
"3609splitHere46","4422270splitHere46","<xq-param name=<doubleQuotes46>xqsource<doubleQuotes46> type=<doubleQuotes46>string<doubleQuotes46>><newline46mondego>  <var name=<doubleQuotes46>sourceString<doubleQuotes46> /><newline46mondego></xq-param><newline46mondego>"
"3610splitHere46","4422375splitHere46","main(..)"
"3611splitHere46","4422375splitHere46","JFrame"
"3612splitHere46","4422375splitHere46","setVisible(true)"
"3613splitHere46","4422375splitHere46","JFrame"
"3614splitHere46","4422475splitHere46","s = s.toLowerCase();<newline46mondego>"
"3615splitHere46","4422475splitHere46","toLowerCase()"
"3616splitHere46","4422606splitHere46","DocumentListener dlBarcode = new DocumentAdaptor() {<newline46mondego>public void insertUpdate(DocumentEvent e) {<newline46mondego>    String value = jtBarcode.getText();<newline46mondego>    if (isBarcode(value)) {<newline46mondego>        PerformSearch ps = new PerformSearch(value);<newline46mondego>        ps.execute();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3617splitHere46","4422606splitHere46","class PerformSearch extends SwingWorker<Product, Void> {<newline46mondego>private String key = null;<newline46mondego>public PerformSearch(String key) {<newline46mondego>    this.key = key;<newline46mondego>}<newline46mondego>@Override<newline46mondego>protected Product doInBackground() throws Exception {<newline46mondego>    return soap.findProduct(this.key);<newline46mondego>}<newline46mondego>protected void done() {<newline46mondego>    Product p = null;<newline46mondego>    try {<newline46mondego>         p = get();<newline46mondego>    } catch (InterruptedException e) {<newline46mondego>    } catch (ExecutionException e) {<newline46mondego>    }<newline46mondego>    prod = p;<newline46mondego>    if (prod != null) {<newline46mondego>        ... populate text fields<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        ... not found dialog<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3618splitHere46","4423029splitHere46","Derived"
"3619splitHere46","4423247splitHere46","import java.util.Scanner;<newline46mondego><newline46mondego>public class assn10<newline46mondego>{<newline46mondego>    static double bal = 0.0;<newline46mondego>    static double inc = 0.0;<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>       Scanner stdIn = new Scanner(System.in);<newline46mondego>       String act = <doubleQuotes46>MUSH<doubleQuotes46>;<newline46mondego><newline46mondego>       while (act.charAt(0) != 'Q')<newline46mondego>       {<newline46mondego>           System.out.print((char)27 + <doubleQuotes46>[2J<doubleQuotes46>);<newline46mondego>           System.out.print(<doubleQuotes46>## IT\'S A BANK ##\nD - Deposit\nW - Withdraw\nI - Interest\nB - Balance\nQ - Quit\n\nAction:<doubleQuotes46>);<newline46mondego>           act = stdIn.next();<newline46mondego>           act = act.toUpperCase();<newline46mondego>           switch (act.charAt(0))<newline46mondego>           {<newline46mondego>           case 'D':<newline46mondego>               deposit(stdIn);<newline46mondego>               break;<newline46mondego>           case 'W':<newline46mondego>               withdraw(stdIn);<newline46mondego>               break;<newline46mondego>           case 'I':<newline46mondego>               interest(stdIn);<newline46mondego>               break;<newline46mondego>           case 'B':<newline46mondego>               balance(stdIn);<newline46mondego>               break;<newline46mondego>           }<newline46mondego>       }<newline46mondego>   }<newline46mondego><newline46mondego>   public static void deposit(Scanner stdIn)<newline46mondego>   {<newline46mondego>       System.out.print((char)27 + <doubleQuotes46>[2J<doubleQuotes46>);<newline46mondego>       System.out.print(<doubleQuotes46>Deposit how much?:<doubleQuotes46>);<newline46mondego>       inc = stdIn.nextDouble();<newline46mondego><newline46mondego>       while (inc < 0)<newline46mondego>       {<newline46mondego>           System.out.print(<doubleQuotes46>Deposits must be non-negative. Please try again:<doubleQuotes46>);<newline46mondego>           inc = stdIn.nextDouble();<newline46mondego>       }<newline46mondego><newline46mondego>       bal += inc;<newline46mondego>   }<newline46mondego><newline46mondego>   public static void withdraw(Scanner stdIn)<newline46mondego>   {<newline46mondego>       System.out.print((char)27 + <doubleQuotes46>[2J<doubleQuotes46>);<newline46mondego>       System.out.print(<doubleQuotes46>Withdraw how much?:<doubleQuotes46>);<newline46mondego>       inc = stdIn.nextDouble();<newline46mondego><newline46mondego>       while (inc < 0)<newline46mondego>       {<newline46mondego>           System.out.print(<doubleQuotes46>Withdrawalas must be non-negative. Please try again:<doubleQuotes46>);<newline46mondego>           inc = stdIn.nextDouble();<newline46mondego>       }<newline46mondego>       while (inc > bal)<newline46mondego>       {<newline46mondego>           System.out.print(<doubleQuotes46>Insufficient funds. Please try a lower amount:<doubleQuotes46>);<newline46mondego>           inc = stdIn.nextDouble();<newline46mondego>       }<newline46mondego><newline46mondego>       bal -= inc;<newline46mondego>   }<newline46mondego><newline46mondego>   public static void interest(Scanner stdIn)<newline46mondego>   {<newline46mondego>       System.out.print((char)27 + <doubleQuotes46>[2J<doubleQuotes46>);<newline46mondego>       inc = bal*.04;<newline46mondego>       bal += inc;<newline46mondego>       System.out.print(<doubleQuotes46>Interest accrued: $<doubleQuotes46> + inc + <doubleQuotes46>; press enter key to return to menu.<doubleQuotes46>);<newline46mondego>       stdIn.nextLine();<newline46mondego>       stdIn.nextLine();<newline46mondego>   }<newline46mondego><newline46mondego>   public static void balance(Scanner stdIn)<newline46mondego>   {<newline46mondego>       System.out.print((char)27 + <doubleQuotes46>[2J<doubleQuotes46>);<newline46mondego>       System.out.print(<doubleQuotes46>Balance = $<doubleQuotes46> + bal + <doubleQuotes46>; press enter key to return to menu.<doubleQuotes46>);<newline46mondego>       stdIn.nextLine();<newline46mondego>       stdIn.nextLine();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3620splitHere46","4423260splitHere46","@Transactional"
"3621splitHere46","4423260splitHere46","<bean id=<doubleQuotes46>transactionManager1<doubleQuotes46><newline46mondego>    class=<doubleQuotes46>org.springframework.orm.jpa.JpaTransactionManager<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>entityManagerFactory<doubleQuotes46> ref=<doubleQuotes46>entityManagerFactory1<doubleQuotes46> /><newline46mondego>    <qualifier value=<doubleQuotes46>account<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>transactionManager2<doubleQuotes46><newline46mondego>    class=<doubleQuotes46>org.springframework.orm.jpa.JpaTransactionManager<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>entityManagerFactory<doubleQuotes46> ref=<doubleQuotes46>entityManagerFactory2<doubleQuotes46> /><newline46mondego>    <qualifier value=<doubleQuotes46>businessData<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"3622splitHere46","4423260splitHere46","public class TransactionalService {<newline46mondego><newline46mondego>    @Transactional(<doubleQuotes46>account<doubleQuotes46>)<newline46mondego>    public void setSomethingInAccount() { ... }<newline46mondego><newline46mondego>    @Transactional(<doubleQuotes46>businessData<doubleQuotes46>)<newline46mondego>    public void doSomethingInBusinessData() { ... }<newline46mondego>}<newline46mondego>"
"3623splitHere46","4423373splitHere46","fileset"
"3624splitHere46","4423373splitHere46","*Test*.java"
"3625splitHere46","4423373splitHere46","*Test*.class"
"3626splitHere46","4423373splitHere46","<batchtest fork=<doubleQuotes46>yes<doubleQuotes46> todir=<doubleQuotes46>${target-test-reports}<doubleQuotes46> ><newline46mondego>    <fileset dir=<doubleQuotes46>${target-test-classes}<doubleQuotes46>><newline46mondego>        <include name=<doubleQuotes46>**/*Test*.class<doubleQuotes46>/><newline46mondego>    </fileset><newline46mondego>    <formatter type=<doubleQuotes46>xml<doubleQuotes46>/><newline46mondego>    <formatter type=<doubleQuotes46>plain<doubleQuotes46> usefile=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego></batchtest><newline46mondego>"
"3627splitHere46","4423563splitHere46","int[] x = { 0 };<newline46mondego>int[] y = { 0 };<newline46mondego>someMethod(x, y);<newline46mondego>return x[0] + y[0];<newline46mondego>"
"3628splitHere46","4423563splitHere46","public class Holder<T> {<newline46mondego>    private T _value;<newline46mondego>    private Holder(T value) { _value = value; }<newline46mondego>    public static of(T value) { return new Holder<T>(value); }<newline46mondego>    public T getValue() { return _value; }<newline46mondego>    public void setValue(T value) { _value = value; }<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>Holder<String> x = Holder.of(<doubleQuotes46>123<doubleQuotes46>);<newline46mondego>Holder<String> y = Holder.of(<doubleQuotes46>456<doubleQuotes46>);<newline46mondego>someMethod(x, y);<newline46mondego>return x.getValue() + y.getValue();<newline46mondego>"
"3629splitHere46","4423563splitHere46","SomeMethodResult result = someMethod(x, y);<newline46mondego>return result.getX() + result.getY();<newline46mondego>"
"3630splitHere46","4423563splitHere46","return someMethod(x, y);<newline46mondego>"
"3631splitHere46","4423705splitHere46","onDestroy"
"3632splitHere46","4423705splitHere46","onDestroy"
"3633splitHere46","4423798splitHere46","JScrollPane inputPane = new JScrollPane(inputField, JScrollPane.VERTICAL_SCROLLBAR_NEVER, <newline46mondego>                    JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);<newline46mondego>"
"3634splitHere46","4423798splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>public class FuSwing1b extends JPanel {<newline46mondego>    private static final int TA_ROWS = 25;<newline46mondego>    private static final int TA_COLS = 60;<newline46mondego>    private JTextField inputField = new JTextField();<newline46mondego>    private JTextArea talkArea = new JTextArea(TA_ROWS, TA_COLS);<newline46mondego><newline46mondego>    public FuSwing1b() {<newline46mondego>        talkArea.setEditable(false);<newline46mondego>        talkArea.setFocusable(false);<newline46mondego>        talkArea.setBackground(Color.white);<newline46mondego>        //talkArea.setPreferredSize(new Dimension(TALK_WIDTH, TALK_HEIGHT));<newline46mondego><newline46mondego>        JScrollPane talkPane = new JScrollPane(talkArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, <newline46mondego>                    JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);<newline46mondego>        JScrollPane inputPane = new JScrollPane(inputField, JScrollPane.VERTICAL_SCROLLBAR_NEVER, <newline46mondego>                    JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);<newline46mondego><newline46mondego>        int gap = 10;<newline46mondego>        setLayout(new BorderLayout(gap, gap));<newline46mondego>        add(talkPane, BorderLayout.CENTER);<newline46mondego>        add(inputPane, BorderLayout.SOUTH);<newline46mondego>        setBorder(BorderFactory.createEmptyBorder(gap , gap, gap, gap));<newline46mondego>    }<newline46mondego><newline46mondego>    private static void createAndShowUI() {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>FuSwing1b<doubleQuotes46>);<newline46mondego>        frame.getContentPane().add(new FuSwing1b());<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                createAndShowUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3635splitHere46","4423815splitHere46","persistence.xml"
"3636splitHere46","4423815splitHere46","LocalContainerEntityManagerFactoryBean"
"3637splitHere46","4423815splitHere46","LocalContainerEntityManagerFactoryBean"
"3638splitHere46","4423866splitHere46","<form:x>"
"3639splitHere46","4423866splitHere46","@RequestMapping(..)<newline46mondego>public String foo(YourObject object) {..}<newline46mondego>"
"3640splitHere46","4423866splitHere46","@ModelAttribute"
"3641splitHere46","4424213splitHere46","Model"
"3642splitHere46","4424213splitHere46","ModelAndView"
"3643splitHere46","4424213splitHere46","Map"
"3644splitHere46","4424213splitHere46","@RequestMapping(..)<newline46mondego>public String controllerMethod(..., Model model) {<newline46mondego>    model.addAttribute(<doubleQuotes46>object1<doubleQuotes46>, foo);<newline46mondego>    model.addAttribute(<doubleQuotes46>object2<doubleQuotes46>, bar);<newline46mondego>}<newline46mondego>"
"3645splitHere46","4424213splitHere46","${object1.something}<newline46mondego>${object2.anotherThing}<newline46mondego>"
"3646splitHere46","4424226splitHere46","File"
"3647splitHere46","4424226splitHere46","Activity.getCacheDir()"
"3648splitHere46","4424226splitHere46","new File(cachedir, <doubleQuotes46>filename.tmp<doubleQuotes46>)"
"3649splitHere46","4424286splitHere46","0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 (Best we can do using pieces: 5 )<newline46mondego> 0 0 0 0 0 1 1 1 1 1 2 2 2 2 2 2 2 (Best we can do using pieces: 5 10 )<newline46mondego> 0 0 0 0 0 1 2 2 2 2 2 2 2 2 2 2 2 (Best we can do using pieces: 5 10 6 )<newline46mondego> 0 0 0 0 0 1 3 3 3 3 3 3 3 3 3 3 3 (Best we can do using pieces: 5 10 6 6 )<newline46mondego> 0 0 0 0 0 1 3 3 3 3 3 3 4 4 4 4 4 (Best we can do using pieces: 5 10 6 6 12 )<newline46mondego> 0 0 0 0 0 1 3 3 3 3 3 3 4 4 4 4 5 (Best we can do using pieces: 5 10 6 6 12 16 )<newline46mondego> 0 0 0 0 0 1 3 3 4 4 4 4 4 4 4 4[5] (Best we can do using pieces: 5 10 6 6 12 16 8 )<newline46mondego><newline46mondego> Tallest cake as a height of: 5<newline46mondego>"
"3650splitHere46","4424286splitHere46","public static void main( String[] args ) {<newline46mondego>    doIt( new int[] {8,16,12,6,6,10,5} );<newline46mondego>    doIt( new int[] {0, 45, 25, 40, 38, 20, 10, 32, 25, 18, 30} ); <newline46mondego>    doIt( new int[] {10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1} );<newline46mondego>}<newline46mondego><newline46mondego>public static void doIt( int[] r ) {<newline46mondego>    final int[] a= new int[r.length];<newline46mondego>    int max = Integer.MIN_VALUE;<newline46mondego>    for (int i = 0; i < a.length; i++) {<newline46mondego>        max = Math.max( max, a[i] );<newline46mondego>        a[(a.length-1)-i] = r[i];<newline46mondego>    }<newline46mondego>    final int[] s = new int[max+1];<newline46mondego>    for (int i = 0; i < a.length; i++) {<newline46mondego>        final int size = a[i];<newline46mondego>        s[size]++;<newline46mondego>        for (int j = size+1; j < s.length; j++) {<newline46mondego>            s[j] = Math.max( s[j-1], s[j] );<newline46mondego>        }<newline46mondego>        for (int j = 0; j < s.length; j++) {<newline46mondego>            System.out.print( <doubleQuotes46> <doubleQuotes46> + ((s[j]) > 9 ? <doubleQuotes46><doubleQuotes46> : <doubleQuotes46> <doubleQuotes46>) + s[j] );<newline46mondego>        }<newline46mondego>        System.out.print( <doubleQuotes46> (Best we can do using pieces: <doubleQuotes46> );<newline46mondego>        for (int k = 0; k <= i; k++) {<newline46mondego>            System.out.print( a[k] + <doubleQuotes46> <doubleQuotes46> );<newline46mondego>        }<newline46mondego>        System.out.println( <doubleQuotes46>)<doubleQuotes46> );<newline46mondego>    }<newline46mondego>    System.out.println( <doubleQuotes46>Tallest cake as a height of: <doubleQuotes46> + s[s.length-1] );<newline46mondego>}<newline46mondego>"
"3651splitHere46","4424481splitHere46","String s1, s2; /* input strings */<newline46mondego><newline46mondego>StringBuilder sb = new StringBuilder();<newline46mondego>for (int i = 0; i < s1.length(); i++) {<newline46mondego>  sb.append(s1.charAt(i));<newline46mondego>  sb.append(s2.charAt(i));<newline46mondego>}<newline46mondego><newline46mondego>String result = sb.toString();<newline46mondego>"
"3652splitHere46","4424507splitHere46","public Item(String InName, double InPrice) { ... } <newline46mondego>"
"3653splitHere46","4424507splitHere46","public void Item(...)<newline46mondego>"
"3654splitHere46","4424507splitHere46","this()"
"3655splitHere46","4424507splitHere46","super()"
"3656splitHere46","4424619splitHere46","trace(root.loaderInfo.loaderURL)<newline46mondego>"
"3657splitHere46","4424653splitHere46","@Deprecated"
"3658splitHere46","4424653splitHere46","try {<newline46mondego>    doWork(workUnit, 15, Style.STRICT);<newline46mondego>} catch (MakeSureYouOverrodeEverythingYouWantedToFirst warning) {<newline46mondego>    ; // will never actually reach here, but you have been warned!<newline46mondego>}<newline46mondego>"
"3659splitHere46","4424704splitHere46","<fmt:parseDate value=<doubleQuotes46>${item.date}<doubleQuotes46> pattern=<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46> var=<doubleQuotes46>date<doubleQuotes46>/><newline46mondego><fmt:formatDate value=<doubleQuotes46>${date}<doubleQuotes46> pattern=<doubleQuotes46>dd/MM/yyyy HH:mm<doubleQuotes46> /><newline46mondego>"
"3660splitHere46","4424704splitHere46","java.util.Date"
"3661splitHere46","4424704splitHere46","java.lang.String"
"3662splitHere46","4424704splitHere46","<fmt:formatDate value=<doubleQuotes46>${item.date}<doubleQuotes46> pattern=<doubleQuotes46>dd/MM/yyyy HH:mm<doubleQuotes46> /><newline46mondego>"
"3663splitHere46","4424763splitHere46","System.arraycopy"
"3664splitHere46","4424763splitHere46","ArrayList"
"3665splitHere46","4424763splitHere46","List.subList"
"3666splitHere46","4424905splitHere46","public class tarea<newline46mondego>{         <newline46mondego>    List<input> datas = new ArrayList<input>();<newline46mondego><newline46mondego>     class input<newline46mondego>     {<newline46mondego>         public int profit;<newline46mondego>         public int deadline;<newline46mondego>         public int index1;<newline46mondego>         public int index2;<newline46mondego>         public int sum() {return index1+index2;}<newline46mondego>        /**<newline46mondego>         * @param profit<newline46mondego>         * @param deadline<newline46mondego>         */<newline46mondego>        public input(int deadline, int profit)<newline46mondego>        {<newline46mondego>            super();<newline46mondego>            this.profit = profit;<newline46mondego>            this.deadline = deadline;<newline46mondego>        } <newline46mondego><newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego>     public void readData1()<newline46mondego>     {<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(1,1));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>         this.datas.add(new input(10,1000));<newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego>     public void readData2()<newline46mondego>     {/*<newline46mondego>         3 40<newline46mondego>         2 1 35<newline46mondego>         3 1 30<newline46mondego>         4 3 25<newline46mondego>         5 1 20<newline46mondego>         6 3 15<newline46mondego>         7 2 10 */<newline46mondego><newline46mondego>         this.datas.add(new input(3,40));<newline46mondego>         this.datas.add(new input(1,35));<newline46mondego>         this.datas.add(new input(1,30));<newline46mondego>         this.datas.add(new input(3,25));<newline46mondego>         this.datas.add(new input(1,20));<newline46mondego>         this.datas.add(new input(3,15));<newline46mondego>         this.datas.add(new input(2,10));<newline46mondego>     }<newline46mondego><newline46mondego>     public void readData3()<newline46mondego>     {/*<newline46mondego>     2 30<newline46mondego>     4099 1 35<newline46mondego>     3059 2 25<newline46mondego>     2098 1 40*/<newline46mondego><newline46mondego>         this.datas.add(new input(2,30));<newline46mondego>         this.datas.add(new input(1,35));<newline46mondego>         this.datas.add(new input(2,25));<newline46mondego>         this.datas.add(new input(1,40));<newline46mondego>     }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>     @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public void sortbyprofit(List<input> datas)<newline46mondego>     {<newline46mondego>         Collections.sort(datas, new Comparator() {<newline46mondego><newline46mondego>            public int compare(Object o1, Object o2)<newline46mondego>            {<newline46mondego>                if(((input)(o1)).profit < ((input)(o2)).profit)<newline46mondego>                    return 1;<newline46mondego>                else if(((input)(o1)).profit == ((input)(o2)).profit)<newline46mondego>                    return 0;<newline46mondego>                else return -1;<newline46mondego>            }});<newline46mondego>     }<newline46mondego><newline46mondego>     @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>     public void sortbydeadline(List<input> datas)<newline46mondego>      {<newline46mondego>          Collections.sort(datas, new Comparator() {<newline46mondego><newline46mondego>             public int compare(Object o1, Object o2)<newline46mondego>             {<newline46mondego>                 if(((input)(o1)).deadline > ((input)(o2)).deadline)<newline46mondego>                     return 1;<newline46mondego>                 else if(((input)(o1)).deadline == ((input)(o2)).deadline)<newline46mondego>                     return 0;<newline46mondego>                 else return -1;<newline46mondego>             }});<newline46mondego>      }<newline46mondego><newline46mondego><newline46mondego>     @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>     public void sortbySum(List<input> datas)<newline46mondego>      {<newline46mondego>          Collections.sort(datas, new Comparator() {<newline46mondego><newline46mondego>             public int compare(Object o1, Object o2)<newline46mondego>             {<newline46mondego>                 if(((input)(o1)).sum() > ((input)(o2)).sum())<newline46mondego>                     return 1;<newline46mondego>                 else if(((input)(o1)).sum() == ((input)(o2)).sum())<newline46mondego>                     return 0;<newline46mondego>                 else return -1;<newline46mondego>             }});<newline46mondego>      }<newline46mondego><newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        tarea tsk = new tarea();<newline46mondego>        //tsk.readData1();<newline46mondego>        //tsk.readData2();<newline46mondego>        tsk.readData3();<newline46mondego><newline46mondego><newline46mondego>        while (tsk.datas.size() > 0)<newline46mondego>        {<newline46mondego>            //sort by profit<newline46mondego>            tsk.sortbyprofit(tsk.datas);<newline46mondego>            int idx0 = 1;<newline46mondego>            //assign index<newline46mondego>            for (input data : tsk.datas)<newline46mondego>            {<newline46mondego>                data.index1 = idx0;<newline46mondego>                idx0++;<newline46mondego>            }<newline46mondego><newline46mondego>            //sort by deadline<newline46mondego>            tsk.sortbydeadline(tsk.datas);<newline46mondego>            int idx2 = 1;<newline46mondego>            for (input data : tsk.datas)<newline46mondego>            {<newline46mondego>                data.index2 = idx2;<newline46mondego>                idx2++;<newline46mondego>            }<newline46mondego><newline46mondego>            //sort by sum and profit<newline46mondego>            tsk.sortbySum(tsk.datas);<newline46mondego><newline46mondego>            List<input> tmpdatas = new ArrayList<input>();<newline46mondego>            int valsum = tsk.datas.get(0).sum();<newline46mondego>            for (input data : tsk.datas)<newline46mondego>            {<newline46mondego>                if (data.sum() == valsum)<newline46mondego>                    tmpdatas.add(data);<newline46mondego>            }            <newline46mondego>            tsk.sortbyprofit(tmpdatas);<newline46mondego><newline46mondego>            //get the first one as result<newline46mondego>            input thedata = tmpdatas.get(0);<newline46mondego><newline46mondego>            System.out.println(<doubleQuotes46>result ===> <doubleQuotes46> + thedata.profit);<newline46mondego><newline46mondego>            tsk.datas.remove(thedata);<newline46mondego>            tmpdatas = new ArrayList<input>();<newline46mondego>            for (input data : tsk.datas)<newline46mondego>            {<newline46mondego>                data.deadline--;<newline46mondego>                if (data.deadline > 0)<newline46mondego>                    tmpdatas.add(data);<newline46mondego>            }<newline46mondego>            tsk.datas = tmpdatas;<newline46mondego>        }<newline46mondego><newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"3667splitHere46","4424922splitHere46","buffer.length"
"3668splitHere46","4424922splitHere46","buffersize"
"3669splitHere46","4424997splitHere46","function f1:<newline46mondego>  loop 3 times<newline46mondego>    loop n times<newline46mondego>"
"3670splitHere46","4424997splitHere46","function f2:<newline46mondego>  loop 50 times<newline46mondego>"
"3671splitHere46","4424997splitHere46","n = n - (n / 50)"
"3672splitHere46","4424997splitHere46","n - (n / 50)*50 = 0"
"3673splitHere46","4424997splitHere46","function f3:<newline46mondego>  loop n times<newline46mondego>    loop n times<newline46mondego>"
"3674splitHere46","4424997splitHere46","function f4:<newline46mondego>  recurse n times<newline46mondego>"
"3675splitHere46","4424997splitHere46","arr[hi] * arr[low] > 10<newline46mondego>"
"3676splitHere46","4424997splitHere46","function 5:<newline46mondego>  loops ceil(log_2(n)) times<newline46mondego>"
"3677splitHere46","4424997splitHere46","m/=2"
"3678splitHere46","4424997splitHere46","10 / 2 = <newline46mondego>  5 / 2 = <newline46mondego>   2.5 / 2 = <newline46mondego>    1.25 / 2 = <newline46mondego>      0.75<newline46mondego>"
"3679splitHere46","4425044splitHere46","WebView"
"3680splitHere46","4425044splitHere46","WebView"
"3681splitHere46","4425044splitHere46","WebView"
"3682splitHere46","4425044splitHere46","loadData()"
"3683splitHere46","4425044splitHere46","loadDataWithBaseURL()"
"3684splitHere46","4425052splitHere46","cou.setObject(course);<newline46mondego>                cou.setNext(new linked());<newline46mondego>                cou = cou.getNext();<newline46mondego>"
"3685splitHere46","4425052splitHere46","n.setObject(student);<newline46mondego>            n.setNext(new linked());<newline46mondego>            n = n.getNext();<newline46mondego>"
"3686splitHere46","4425164splitHere46","if (!this.isCompiled()) System.out.println(<doubleQuotes46>Compilation needed !<doubleQuotes46>);<newline46mondego>"
"3687splitHere46","4425164splitHere46","if (!arg0.first()) System.out.println(<doubleQuotes46>Empty RS !<doubleQuotes46>);<newline46mondego>else System.out.println(<doubleQuotes46>RS contains lines!<doubleQuotes46>);<newline46mondego>"
"3688splitHere46","4425164splitHere46","i<=arg1"
"3689splitHere46","4425164splitHere46","i<arg1"
"3690splitHere46","4425197splitHere46","Man maxAge = new Man(0);<newline46mondego>for(Man man : list) {<newline46mondego>  if(man.age > maxAge.age) {<newline46mondego>    maxAge = man;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3691splitHere46","4425197splitHere46","public static <T extends Object & Comparable<? super T>> T max(<newline46mondego>  Collection<? extends T> collection) {<newline46mondego>  Iterator<? extends T> it = collection.iterator();<newline46mondego>  T max = it.next();<newline46mondego>  while (it.hasNext()) {<newline46mondego>    T next = it.next();<newline46mondego>    if (max.compareTo(next) < 0) {<newline46mondego>      max = next;<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return max;<newline46mondego>}<newline46mondego>"
"3692splitHere46","4425293splitHere46","jsonObject.getAsJsonArray(<doubleQuotes46>routes<doubleQuotes46>).get(0).get(<doubleQuotes46>summary<doubleQuotes46>);"
"3693splitHere46","4425293splitHere46","jsonObject.routes[0].summary"
"3694splitHere46","4425663splitHere46","project1"
"3695splitHere46","4425663splitHere46","project2"
"3696splitHere46","4425684splitHere46","String amtRentIn=amountRentText.getText();<newline46mondego>boolean incorrect = true;<newline46mondego>while(incorrect){<newline46mondego>try{Double.parseDouble(amtRentIn);incorrect = false;}<newline46mondego>catch(NumberFormatException nfe){<newline46mondego>   amtRentIn=JOptionPane.showInputDialog(<doubleQuotes46>Invalid input. Please <doubleQuotes46>+<newline46mondego>           <doubleQuotes46>enter your rent: <doubleQuotes46>);<newline46mondego> }<newline46mondego><newline46mondego>}<newline46mondego>"
"3697splitHere46","4426324splitHere46","RestTemplate"
"3698splitHere46","4426636splitHere46","javax.validation.constraints.*"
"3699splitHere46","4426636splitHere46","@Before"
"3700splitHere46","4426636splitHere46","@Around"
"3701splitHere46","4426687splitHere46","Field field = LoggerManager.class.getDeclaredField(<doubleQuotes46>_instance<doubleQuotes46>);<newline46mondego>field.setAccessible(true);<newline46mondego>field.set(null, new NewLoggerManager());<newline46mondego>"
"3702splitHere46","4426687splitHere46","Field"
"3703splitHere46","4426687splitHere46","_instance"
"3704splitHere46","4426687splitHere46","null"
"3705splitHere46","4426687splitHere46","static"
"3706splitHere46","4427014splitHere46","public class ListBookAction extends ActionSupport {<newline46mondego>    BookService bookService;<newline46mondego>    List<Book> bookList;<newline46mondego><newline46mondego>    public List<Book> getPostedBooks(){<newline46mondego>        List<Book> bookList = new ArrayList<Book>();<newline46mondego>        bookList = bookService.getUserPostedBooks();<newline46mondego>        return bookList;<newline46mondego>    }<newline46mondego><newline46mondego>    public String show(){<newline46mondego>        bookList = getPostedBooks();<newline46mondego>        return <doubleQuotes46>list<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    public List<Book> getBookList() {<newline46mondego>        return bookList;<newline46mondego>    }<newline46mondego>    public void setBookService(BookService bookService) {<newline46mondego>        this.bookService = bookService;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3707splitHere46","4427014splitHere46","<action name=<doubleQuotes46>*ListBook<doubleQuotes46> class=<doubleQuotes46>com.example.ListBookAction<doubleQuotes46> method=<doubleQuotes46>{1}<doubleQuotes46>><newline46mondego>            <result name=<doubleQuotes46>list<doubleQuotes46>  type=<doubleQuotes46>tiles-defs<doubleQuotes46>>listbook.listbook</result><newline46mondego>        </action>       <newline46mondego>"
"3708splitHere46","4427014splitHere46","http://localhost:8888/showListBook.action<newline46mondego>"
"3709splitHere46","4427044splitHere46","public class IntArrays {<newline46mondego><newline46mondego>     static List<Integer> intArrayAsList(final int[] a) { <newline46mondego>     if (a == null)<newline46mondego>         throw new NullPointerException();<newline46mondego><newline46mondego><newline46mondego>     return new AbstractList<Integer>() {<newline46mondego>         // code here<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"3710splitHere46","4427044splitHere46","public Integer get(int i) {<newline46mondego>          return a[i]; // Autoboxing (Item 5)<newline46mondego> }<newline46mondego><newline46mondego><newline46mondego> public Integer set(int i, Integer val) {<newline46mondego>       int oldVal = a[i];<newline46mondego>       a[i] = val; // Auto-unboxing<newline46mondego>       return oldVal; // Autoboxing<newline46mondego> }<newline46mondego><newline46mondego> public int size() {<newline46mondego>     return a.length;<newline46mondego> }<newline46mondego>"
"3711splitHere46","4427062splitHere46","jboss-4.0.0/server/default/deploy/jbossweb-tomcat50.sar/web.xml <newline46mondego>"
"3712splitHere46","4427062splitHere46","<error-page>   <newline46mondego><error-code>404</error-code>   <newline46mondego><location>/pagenotfound.jsp</location>   <newline46mondego></error-page>  <newline46mondego><error-page>   <newline46mondego><error-code>500</error-code>   <newline46mondego><location>/servererror.jsp</location>  <newline46mondego></error-page>    <newline46mondego>"
"3713splitHere46","4427294splitHere46","new File(<doubleQuotes46>/path/to/folder<doubleQuotes46>).mkdir();<newline46mondego>"
"3714splitHere46","4427294splitHere46","mkdirs()"
"3715splitHere46","4427294splitHere46","java.io.File"
"3716splitHere46","4427312splitHere46","StackOverflowError"
"3717splitHere46","4427312splitHere46","ArrayIndexOutOfBoundsException"
"3718splitHere46","4427334splitHere46","<fmt:message key=<doubleQuotes46>list.${myVar}<doubleQuotes46>/>"
"3719splitHere46","4427334splitHere46","<taglib xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/j2ee<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego><newline46mondego>  <description>JSTL 1.1 i18n-capable formatting library</description><newline46mondego>  <display-name>JSTL fmt</display-name><newline46mondego>  <tlib-version>1.1</tlib-version><newline46mondego>  <short-name>fmt</short-name><newline46mondego>  <uri>http://java.sun.com/jsp/jstl/fmt</uri><newline46mondego>...<newline46mondego><tag><newline46mondego>    <description><newline46mondego>        Maps key to localized message and performs parametric replacement<newline46mondego>    </description><newline46mondego>    <name>message</name><newline46mondego>    <tag-class>org.apache.taglibs.standard.tag.rt.fmt.MessageTag</tag-class><newline46mondego>    <body-content>JSP</body-content><newline46mondego>    <attribute><newline46mondego>        <description><newline46mondego>Message key to be looked up.<newline46mondego>        </description><newline46mondego>        <name>key</name><newline46mondego>        <required>false</required><newline46mondego>        <rtexprvalue>true</rtexprvalue><newline46mondego>    </attribute><newline46mondego>...<newline46mondego>"
"3720splitHere46","4427334splitHere46","<%@ taglib prefix='spring' uri='http://www.springframework.org/tags'%><newline46mondego>...<newline46mondego><spring:message code=<doubleQuotes46>myPrefix.${transaction.state}<doubleQuotes46>/><newline46mondego>"
"3721splitHere46","4427413splitHere46","<doubleQuotes46>java<doubleQuotes46>"
"3722splitHere46","4427413splitHere46","<doubleQuotes46>C:\Program Files<doubleQuotes46>"
"3723splitHere46","4427413splitHere46","%PATH%"
"3724splitHere46","4427432splitHere46","public class Foo {<newline46mondego>    private String mySecret = <doubleQuotes46>http://example.com<doubleQuotes46>;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3725splitHere46","4427432splitHere46","public class Foo {<newline46mondego>    private String encrypted = <doubleQuotes46><manually created encrypted string><doubleQuotes46>;<newline46mondego>    private String key = <doubleQuotes46><key used for encryption<doubleQuotes46>;<newline46mondego>    private String mySecret = MyDecryptUtil.decrypt(encrypted, key);<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3726splitHere46","4427472splitHere46","Filter"
"3727splitHere46","4427472splitHere46","doFilter(..)"
"3728splitHere46","4427472splitHere46","long start = System.nanoTime();<newline46mondego>chain.doFilter(request, responsE);<newline46mondego>long time = System.nanoTime() - start;<newline46mondego>"
"3729splitHere46","4427535splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.INTERNET<doubleQuotes46>></uses-permission><newline46mondego>"
"3730splitHere46","4427922splitHere46","class CreateZipController extends AbstractController {<newline46mondego>//tokenService is soemthing that you can save a future with, and return a token for - can be anything reallly...like a map.<newline46mondego>    public ModelAndView handleRequestInternal(final HttpServletRequest request, HttpServletResponse response) throws Exception {<newline46mondego>        Future<ZipFile> zipTask = executorService.submit(new Callable<ZipFile>(){<newline46mondego>            public ZipFile call() {<newline46mondego>                 return createZipFile(request);<newline46mondego>            }<newline46mondego>        });<newline46mondego>        String token = tokenService.saveTask(zipTask);<newline46mondego>        if (zipTask.isDone() {<newline46mondego>           ModelAndView mav = new ModelAndView(<doubleQuotes46>downloadView<doubleQuotes46>);<newline46mondego>           mav.addObject(<doubleQuotes46>url<doubleQuotes46>, getDownloadUrlFrom(zipTask.get().getName()));<newline46mondego>           return mav;<newline46mondego>        }<newline46mondego>        ModelAndView mav = new ModelAndView(<doubleQuotes46>waitView<doubleQuotes46>);<newline46mondego>        mav.addObject(<doubleQuotes46>message<doubleQuotes46>, <doubleQuotes46>Please wait while zip is being created<doubleQuotes46>);<newline46mondego>        mav.addObject(<doubleQuotes46>token<doubleQuotes46>, token);<newline46mondego>        return mav;        <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>class GetZipController extends AbstractController {<newline46mondego><newline46mondego>    public ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {<newline46mondego>        String token = request.getParameter(<doubleQuotes46>token<doubleQuotes46>);<newline46mondego>        Future<ZipFile> zipTask = tokenService.getTaskFrom(token);<newline46mondego>        if (zipTask.isDone() {<newline46mondego>           ModelAndView mav = new ModelAndView(<doubleQuotes46>downloadView<doubleQuotes46>);<newline46mondego>           mav.addObject(<doubleQuotes46>url<doubleQuotes46>, getDownloadUrlFrom(zipTask.get().getName()));<newline46mondego>           return mav;        <newline46mondego>        } else {<newline46mondego>           ModelAndView mav = new ModelAndView(<doubleQuotes46>waitView<doubleQuotes46>);<newline46mondego>           mav.addObject(<doubleQuotes46>message<doubleQuotes46>, <doubleQuotes46>please wait while the zip is being built<doubleQuotes46>);<newline46mondego>           return mav;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3731splitHere46","4428411splitHere46","java.io.*"
"3732splitHere46","4428779splitHere46","Integer"
"3733splitHere46","4428779splitHere46","=="
"3734splitHere46","4428779splitHere46",".equals()"
"3735splitHere46","4428779splitHere46","Integer"
"3736splitHere46","4428779splitHere46",">>> different"
"3737splitHere46","4428779splitHere46","int"
"3738splitHere46","4428779splitHere46","Integer"
"3739splitHere46","4428779splitHere46","Coordinates"
"3740splitHere46","4428952splitHere46","/System/Library/Frameworks/JavaVM.framework/Home/"
"3741splitHere46","4428952splitHere46","Versions/CurrentJDK/Home"
"3742splitHere46","4428952splitHere46","/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home"
"3743splitHere46","4429032splitHere46","c:forEach"
"3744splitHere46","4429032splitHere46","Map"
"3745splitHere46","4429032splitHere46","Map.Entry"
"3746splitHere46","4429032splitHere46","getKey()"
"3747splitHere46","4429032splitHere46","getValue()"
"3748splitHere46","4429032splitHere46","<c:forEach items=<doubleQuotes46>${map}<doubleQuotes46> var=<doubleQuotes46>entry<doubleQuotes46>><newline46mondego>    key = ${entry.key}, value = ${entry.value}<newline46mondego><newline46mondego><c:forEach><newline46mondego>"
"3749splitHere46","4429032splitHere46","Map"
"3750splitHere46","4429032splitHere46","List"
"3751splitHere46","4429032splitHere46","Tile"
"3752splitHere46","4429032splitHere46","public class Tile {<newline46mondego>    private String name;<newline46mondego>    private String description;<newline46mondego>    private string imagepath;<newline46mondego>    // Add/generate c'tor/getters/setters/etc.<newline46mondego>}<newline46mondego>"
"3753splitHere46","4429032splitHere46","Map<Integer, Tile> map = new TreeMap<Integer, Tile>();<newline46mondego>map.put(1, new Tile(<doubleQuotes46>name1<doubleQuotes46>, <doubleQuotes46>description1<doubleQuotes46>, <doubleQuotes46>imagepath1<doubleQuotes46>));<newline46mondego>map.put(2, new Tile(<doubleQuotes46>name2<doubleQuotes46>, <doubleQuotes46>description2<doubleQuotes46>, <doubleQuotes46>imagepath2<doubleQuotes46>));<newline46mondego>map.put(3, new Tile(<doubleQuotes46>name3<doubleQuotes46>, <doubleQuotes46>description3<doubleQuotes46>, <doubleQuotes46>imagepath3<doubleQuotes46>));<newline46mondego>// ...<newline46mondego><newline46mondego>request.setAttribute(<doubleQuotes46>map<doubleQuotes46>, map); // It'll be available as ${map} in JSP.<newline46mondego>request.getRequestDispatcher(<doubleQuotes46>/WEB-INF/page.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>"
"3754splitHere46","4429032splitHere46","<c:forEach items=<doubleQuotes46>${map}<doubleQuotes46> var=<doubleQuotes46>entry<doubleQuotes46>><newline46mondego>    <div><newline46mondego>        Map key: ${entry.key}<newline46mondego><newline46mondego>        Tile name: ${entry.value.name}<newline46mondego><newline46mondego>        Tile description: ${entry.value.description}<newline46mondego><newline46mondego>        Tile image: <img src=<doubleQuotes46>${entry.value.imagepath}<doubleQuotes46>><newline46mondego>    </div><newline46mondego></c:forEach><newline46mondego>"
"3755splitHere46","4429032splitHere46","jsp:useBean"
"3756splitHere46","4429236splitHere46","// Converter used to make sure XStream still able to read old version of XML<newline46mondego>// files.<newline46mondego>private static Converter getSimpleDateConverter() {<newline46mondego>    return new Converter() {<newline46mondego>        @Override<newline46mondego>        public void marshal(Object o, HierarchicalStreamWriter writer, MarshallingContext mc) {<newline46mondego>            SimpleDate simpleDate = (SimpleDate) o;<newline46mondego>            writer.startNode(<doubleQuotes46>year<doubleQuotes46>);<newline46mondego>            writer.setValue(<doubleQuotes46><doubleQuotes46> + simpleDate.getYear());<newline46mondego>            writer.endNode();<newline46mondego>            writer.startNode(<doubleQuotes46>month<doubleQuotes46>);<newline46mondego>            writer.setValue(<doubleQuotes46><doubleQuotes46> + simpleDate.getMonth());<newline46mondego>            writer.endNode();<newline46mondego>            writer.startNode(<doubleQuotes46>day<doubleQuotes46>);<newline46mondego>            writer.setValue(<doubleQuotes46><doubleQuotes46> + simpleDate.getDay());<newline46mondego>            writer.endNode();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext uc) {<newline46mondego>            Map<String, String> map = new HashMap<String, String>();<newline46mondego>            while (reader.hasMoreChildren()) {<newline46mondego>                reader.moveDown();<newline46mondego>                map.put(reader.getNodeName(), reader.getValue());<newline46mondego>                reader.moveUp();<newline46mondego>            }<newline46mondego>            // Introduce since version 1.0.6.<newline46mondego>            // We had renamed 'date' field to 'day' field.<newline46mondego>            final boolean isOldVersion = map.containsKey(<doubleQuotes46>date<doubleQuotes46>);<newline46mondego>            if (isOldVersion) {<newline46mondego>                final int year = Integer.parseInt(map.get(<doubleQuotes46>year<doubleQuotes46>));<newline46mondego>                // We changed 0 based month to 1 based month, to fit into Joda library.<newline46mondego>                final int month = Integer.parseInt(map.get(<doubleQuotes46>month<doubleQuotes46>)) + 1;<newline46mondego>                final int day  = Integer.parseInt(map.get(<doubleQuotes46>date<doubleQuotes46>));<newline46mondego>                return new SimpleDate(year, month, day);<newline46mondego>            } else {<newline46mondego>                final int year = Integer.parseInt(map.get(<doubleQuotes46>year<doubleQuotes46>));<newline46mondego>                final int month = Integer.parseInt(map.get(<doubleQuotes46>month<doubleQuotes46>));<newline46mondego>                final int day  = Integer.parseInt(map.get(<doubleQuotes46>day<doubleQuotes46>));<newline46mondego>                return new SimpleDate(year, month, day);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean canConvert(Class type) {<newline46mondego>            return SimpleDate.class.isAssignableFrom(type);<newline46mondego>        }<newline46mondego>    };<newline46mondego>}<newline46mondego>"
"3757splitHere46","4429236splitHere46","xStream.registerConverter(getSimpleDateConverter());<newline46mondego>"
"3758splitHere46","4429257splitHere46","ResourceBundle.Control"
"3759splitHere46","4429257splitHere46","public class UTF8Control extends Control {<newline46mondego>    public ResourceBundle newBundle<newline46mondego>        (String baseName, Locale locale, String format, ClassLoader loader, boolean reload)<newline46mondego>            throws IllegalAccessException, InstantiationException, IOException<newline46mondego>    {<newline46mondego>        // The below is a copy of the default implementation.<newline46mondego>        String bundleName = toBundleName(baseName, locale);<newline46mondego>        String resourceName = toResourceName(bundleName, <doubleQuotes46>properties<doubleQuotes46>);<newline46mondego>        ResourceBundle bundle = null;<newline46mondego>        InputStream stream = null;<newline46mondego>        if (reload) {<newline46mondego>            URL url = loader.getResource(resourceName);<newline46mondego>            if (url != null) {<newline46mondego>                URLConnection connection = url.openConnection();<newline46mondego>                if (connection != null) {<newline46mondego>                    connection.setUseCaches(false);<newline46mondego>                    stream = connection.getInputStream();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            stream = loader.getResourceAsStream(resourceName);<newline46mondego>        }<newline46mondego>        if (stream != null) {<newline46mondego>            try {<newline46mondego>                // Only this line is changed to make it to read properties files as UTF-8.<newline46mondego>                bundle = new PropertyResourceBundle(new InputStreamReader(stream, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>            } finally {<newline46mondego>                stream.close();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return bundle;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3760splitHere46","4429257splitHere46","ResourceBundle bundle = ResourceBundle.getBundle(<doubleQuotes46>com.example.i18n.text<doubleQuotes46>, new UTF8Control());<newline46mondego>"
"3761splitHere46","4429318splitHere46","java.sql.Time myTime = java.sql.Time.valueOf(hour1);<newline46mondego>"
"3762splitHere46","4429545splitHere46","DecimalFormat(<doubleQuotes46>#,##0.00#<doubleQuotes46>)<newline46mondego>"
"3763splitHere46","4429660splitHere46","Intent myActivity = new Intent(class1.this,class2.class);<newline46mondego>main.this.startActivity(myActivity);<newline46mondego>"
"3764splitHere46","4429726splitHere46","C:\example\"
"3765splitHere46","4429726splitHere46","C:\example\<date>\<time>\<files>"
"3766splitHere46","4429726splitHere46","File#mkdirs()"
"3767splitHere46","4429726splitHere46","File file = new File(<doubleQuotes46>C:/example/newdir/newdir/filename.ext<doubleQuotes46>);<newline46mondego>file.mkdirs();<newline46mondego>// ...<newline46mondego>"
"3768splitHere46","4429989splitHere46","private byte[] encryptAES128(byte[] input, byte[] initialVector) {<newline46mondego>    SecretKey aeskey = new SecretKeySpec(keyC, 0, 16, <doubleQuotes46>AES<doubleQuotes46>);<newline46mondego>    AlgorithmParameterSpec paramSpec = new IvParameterSpec(initialVector);<newline46mondego>    cipher = Cipher.getInstance(<doubleQuotes46>AES/CTR/NOPADDING<doubleQuotes46>);<newline46mondego>    getAesCTRCipher().init(Cipher.ENCRYPT_MODE, aeskey, paramSpec);<newline46mondego>    return getAesCTRCipher().doFinal(input);<newline46mondego>}<newline46mondego>"
"3769splitHere46","4430150splitHere46","yourString.replaceAll(<doubleQuotes46>'([^']+)'<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>);<newline46mondego>"
"3770splitHere46","4430150splitHere46","System.out.println(<doubleQuotes46>any text 'something'<doubleQuotes46>.replaceAll(<doubleQuotes46>'([^']+)'<doubleQuotes46>, <doubleQuotes46>$1<doubleQuotes46>));<newline46mondego>"
"3771splitHere46","4430150splitHere46","any text something"
"3772splitHere46","4430181splitHere46","newString = myString.replaceAll(<doubleQuotes46>[<>\\[\\],-]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"3773splitHere46","4430181splitHere46","<>"
"3774splitHere46","4430307splitHere46","BufferedWriter bw = new BufferedWriter(new FileWriter(<doubleQuotes46>file.txt<doubleQuotes46>));<newline46mondego>        while (st.hasMoreTokens()) {<newline46mondego><newline46mondego>            bw.write(st.nextToken());<newline46mondego>            bw.newLine();<newline46mondego><newline46mondego>        }<newline46mondego>        bw.close();<newline46mondego>"
"3775splitHere46","4430432splitHere46","// Get contents of result1 into source2<newline46mondego>"
"3776splitHere46","4430432splitHere46","input2 = new StringReader(output1.getBuffer().toString());<newline46mondego>source2 = new StreamSource(input2);<newline46mondego>output2 = new StringWriter();<newline46mondego>result2 = new StreamResult(output2);<newline46mondego>"
"3777splitHere46","4430519splitHere46","setBackground"
"3778splitHere46","4430519splitHere46","setBorder"
"3779splitHere46","4430871splitHere46","TreeSet"
"3780splitHere46","4430871splitHere46","TreeSet<Integer>"
"3781splitHere46","4430871splitHere46","Arrays.binarySearch"
"3782splitHere46","4430871splitHere46","int[] someInts = {3,2,6,7, /*...,*/ 99};<newline46mondego><newline46mondego>// use a TreeSet<newline46mondego>TreeSet<Integer> ints = new TreeSet<Integer>();<newline46mondego>for (int i : someInts)<newline46mondego>    ints.add(i);<newline46mondego><newline46mondego>System.out.println(ints.contains(2)); // true      <newline46mondego>System.out.println(ints.contains(5)); // false<newline46mondego><newline46mondego>// or sort the array and use Arrays.binarySearch<newline46mondego>Arrays.sort(someInts);<newline46mondego>System.out.println(Arrays.binarySearch(someInts, 2) >= 0); // true<newline46mondego>System.out.println(Arrays.binarySearch(someInts, 5) >= 0); // false<newline46mondego>"
"3783splitHere46","4430876splitHere46","def object = new MyClass();<newline46mondego>object.metaClass.getName = { <doubleQuotes46>Jake<doubleQuotes46> }<newline46mondego>assert <doubleQuotes46>Jake<doubleQuotes46> == object.getName()<newline46mondego>"
"3784splitHere46","4430893splitHere46","UIOutput"
"3785splitHere46","4430893splitHere46","UIInput"
"3786splitHere46","4430893splitHere46","<h:outputText>"
"3787splitHere46","4430893splitHere46","<h:inputWhatever>"
"3788splitHere46","4430893splitHere46","javax.faces.ViewState"
"3789splitHere46","4430933splitHere46","=="
"3790splitHere46","4430933splitHere46","field.getText().isEmpty()<newline46mondego>"
"3791splitHere46","4430933splitHere46","field.getText().trim().isEmpty()<newline46mondego>"
"3792splitHere46","4431012splitHere46","<h:inputWhatever><newline46mondego>    <f:converter converterId=<doubleQuotes46>converterId<doubleQuotes46> /><newline46mondego></h:inputWhatever><newline46mondego>"
"3793splitHere46","4431012splitHere46","<h:inputWhatever converter=<doubleQuotes46>#{applicationBean.converter}<doubleQuotes46> /><newline46mondego>"
"3794splitHere46","4431012splitHere46","DataFormat"
"3795splitHere46","4431012splitHere46","DateFormat"
"3796splitHere46","4431063splitHere46","Query query = em.createQuery(<doubleQuotes46>DELETE Order WHERE customer = :customer<doubleQuotes46>);<newline46mondego>query.setParameter(<doubleQuotes46>customer<doubleQuotes46>, customer);<newline46mondego>query.executeUpdate();<newline46mondego>"
"3797splitHere46","4431525splitHere46","Query query = em.createQuery(<newline46mondego>                <doubleQuotes46>SELECT COUNT(DISTINCT s.userId) FROM UserSession s <doubleQuotes46> +<newline46mondego>                <doubleQuotes46>WHERE s.loginTime >= :fromTime <doubleQuotes46> +<newline46mondego>                   <doubleQuotes46> AND s.loginTime < :toTime <doubleQuotes46> +<newline46mondego>        );<newline46mondego>"
"3798splitHere46","4431791splitHere46","getLegendItems()"
"3799splitHere46","4432035splitHere46","?"
"3800splitHere46","4432035splitHere46","public interface Test<T> {<newline46mondego>    public void shout(T whatever);<newline46mondego>    public T repeatPreviousShout();<newline46mondego><newline46mondego>}<newline46mondego>"
"3801splitHere46","4432035splitHere46","public static void instantTest(Test<?> test) {<newline46mondego>    System.out.println(test.repeatPreviousShout());<newline46mondego>}<newline46mondego>"
"3802splitHere46","4432035splitHere46","test"
"3803splitHere46","4432035splitHere46","Test"
"3804splitHere46","4432035splitHere46","repeatPreviousShout()"
"3805splitHere46","4432035splitHere46","?"
"3806splitHere46","4432035splitHere46","T"
"3807splitHere46","4432035splitHere46","Test"
"3808splitHere46","4432035splitHere46","T"
"3809splitHere46","4432035splitHere46","T"
"3810splitHere46","4432035splitHere46","Object"
"3811splitHere46","4432035splitHere46","repeatPreviousShout()"
"3812splitHere46","4432035splitHere46","Object"
"3813splitHere46","4432035splitHere46","public static void instantTest2(Test<?> test) {<newline46mondego>    test.shout(test.repeatPreviousShout());<newline46mondego>}<newline46mondego>"
"3814splitHere46","4432035splitHere46","Test<capture#xxx of ?> cannot be applied"
"3815splitHere46","4432035splitHere46","xxx"
"3816splitHere46","4432035splitHere46","337"
"3817splitHere46","4432035splitHere46","shout()"
"3818splitHere46","4432035splitHere46","T"
"3819splitHere46","4432066splitHere46","int fileSize = (int) ifile.length();<newline46mondego>"
"3820splitHere46","4432066splitHere46","int"
"3821splitHere46","4432066splitHere46","newName = fname + <doubleQuotes46>.part<doubleQuotes46> + Integer.toString(nChunks - 1);<newline46mondego>"
"3822splitHere46","4432066splitHere46","name.part10"
"3823splitHere46","4432066splitHere46","name.part2"
"3824splitHere46","4432066splitHere46","Comparator"
"3825splitHere46","4432084splitHere46","int [,] A = new int [a,b]"
"3826splitHere46","4432084splitHere46","int [,] A = new int [b,a];<newline46mondego>"
"3827splitHere46","4432084splitHere46","Console.Write(<doubleQuotes46> <doubleQuotes46> + A[r, c].ToString().PadLeft(mn.ToString().Length, ' '));<newline46mondego>"
"3828splitHere46","4432121splitHere46","NullReferenceException"
"3829splitHere46","4432121splitHere46","IOException"
"3830splitHere46","4432182splitHere46","String"
"3831splitHere46","4432182splitHere46","getBytes"
"3832splitHere46","4432182splitHere46","ByteBuffer"
"3833splitHere46","4432182splitHere46","asLongBuffer"
"3834splitHere46","4432182splitHere46","String"
"3835splitHere46","4432182splitHere46","String(byte[] bytes)"
"3836splitHere46","4432182splitHere46","String input = <doubleQuotes46>hello long world<doubleQuotes46>;<newline46mondego><newline46mondego>byte[] bytes = input.getBytes();<newline46mondego>LongBuffer tmpBuf = ByteBuffer.wrap(bytes).asLongBuffer();<newline46mondego><newline46mondego>long[] lArr = new long[tmpBuf.remaining()];<newline46mondego>for (int i = 0; i < lArr.length; i++)<newline46mondego>    lArr[i] = tmpBuf.get();<newline46mondego><newline46mondego>System.out.println(input);<newline46mondego>System.out.println(Arrays.toString(lArr));<newline46mondego>// store longs...<newline46mondego><newline46mondego>// ...load longs<newline46mondego>long[] longs = { 7522537965568945263L, 7955362964116237412L };<newline46mondego>byte[] inputBytes = new byte[longs.length * 8];<newline46mondego>ByteBuffer bbuf = ByteBuffer.wrap(inputBytes);<newline46mondego>for (long l : longs)<newline46mondego>    bbuf.putLong(l);<newline46mondego>System.out.println(new String(inputBytes));<newline46mondego>"
"3837splitHere46","4432434splitHere46","@XmlElements(value = {<newline46mondego>        @XmlElement(name=<doubleQuotes46>address<doubleQuotes46>,<newline46mondego>                    type=Address.class),<newline46mondego>        @XmlElement(name=<doubleQuotes46>phone-number<doubleQuotes46>,<newline46mondego>                    type=PhoneNumber.class),<newline46mondego>        @XmlElement(name=<doubleQuotes46>note<doubleQuotes46>,<newline46mondego>                    type=String.class)<newline46mondego>})<newline46mondego>private List<Object> contactInfo;<newline46mondego>"
"3838splitHere46","4432519splitHere46","JDialog"
"3839splitHere46","4432519splitHere46","JDialog"
"3840splitHere46","4432519splitHere46","true"
"3841splitHere46","4432519splitHere46","<newline46mondego>super(parent, true);   <newline46mondego>"
"3842splitHere46","4432795splitHere46","Comparator"
"3843splitHere46","4432795splitHere46","Collections.sort(yourList, new CustomComparator<YourClass>());<newline46mondego>"
"3844splitHere46","4432795splitHere46","Comparator"
"3845splitHere46","4432795splitHere46","Collections.sort(yourList, new Comparator<YourClass>(){<newline46mondego>    public int compare(YourClass one, YourClass two) {<newline46mondego>        // compare using whichever properties of ListType you need<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3846splitHere46","4432795splitHere46","class YourClass {<newline46mondego><newline46mondego>    static Comparator<YourClass> getAttribute1Comparator() {<newline46mondego>        return new Comparator<YourClass>() {<newline46mondego>            // compare using attribute 1<newline46mondego>        };<newline46mondego>    }<newline46mondego><newline46mondego>    static Comparator<YourClass> getAttribute2Comparator() {<newline46mondego>        return new Comparator<YourClass>() {<newline46mondego>            // compare using attribute 2<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3847splitHere46","4432795splitHere46","Collections.sort(yourList, YourClass.getAttribute2Comparator());<newline46mondego>"
"3848splitHere46","4432896splitHere46","public class MyClass<newline46mondego>{<newline46mondego>    final object lockObject;<newline46mondego><newline46mondego>    public MyClass()<newline46mondego>    {<newline46mondego>        lockObject = new Object();<newline46mondego>    }<newline46mondego><newline46mondego>    public void someMethodWithACriticalSection()<newline46mondego>    {<newline46mondego>        doSomethingNonCritical();<newline46mondego><newline46mondego>        synchronized (lockObject)<newline46mondego>        {<newline46mondego>            doSomethingCritical();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3849splitHere46","4432896splitHere46","this"
"3850splitHere46","4432934splitHere46","response.current.set(new CookieLessResponseWrapper(response.current()))"
"3851splitHere46","4432934splitHere46","package helpers;<newline46mondego><newline46mondego>import play.mvc.Http.Response;<newline46mondego><newline46mondego>public class CookieLessResponseWrapper extends Response {<newline46mondego>    private Response wrappedResponse;<newline46mondego><newline46mondego>    public CookieLessResponseWrapper(Response response) {<newline46mondego>        this.wrappedResponse = response;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void accessControl(String allowOrigin, boolean allowCredentials) {<newline46mondego>        wrappedResponse.accessControl(allowOrigin, allowCredentials);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void accessControl(String allowOrigin, String allowMethods,<newline46mondego>            boolean allowCredentials) {<newline46mondego>        wrappedResponse.accessControl(allowOrigin, allowMethods, allowCredentials);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void accessControl(String allowOrigin) {<newline46mondego>        wrappedResponse.accessControl(allowOrigin);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void cacheFor(String etag, String duration, long lastModified) {<newline46mondego>        wrappedResponse.cacheFor(etag, duration, lastModified);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void cacheFor(String duration) {<newline46mondego>        wrappedResponse.cacheFor(duration);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String getHeader(String name) {<newline46mondego>        return wrappedResponse.getHeader(name);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void print(Object o) {<newline46mondego>        wrappedResponse.print(o);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void removeCookie(String name) {<newline46mondego>        wrappedResponse.removeCookie(name);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void reset() {<newline46mondego>        wrappedResponse.reset();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setContentTypeIfNotSet(String contentType) {<newline46mondego>        wrappedResponse.setContentTypeIfNotSet(contentType);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setCookie(String name, String value, String domain,<newline46mondego>            String path, Integer maxAge, boolean secure, boolean httpOnly) {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setCookie(String name, String value, String domain,<newline46mondego>            String path, Integer maxAge, boolean secure) {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setCookie(String name, String value, String duration) {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setCookie(String name, String value) {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setHeader(String name, String value) {<newline46mondego>        wrappedResponse.setHeader(name, value);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3852splitHere46","4432976splitHere46","ThreadingPolicy"
"3853splitHere46","4432976splitHere46","ORB_CTRL_MODEL"
"3854splitHere46","4432976splitHere46","SINGLE_THREAD_MODEL"
"3855splitHere46","4432976splitHere46","ORB.init()"
"3856splitHere46","4432976splitHere46","ORB_CTRL_MODEL"
"3857splitHere46","4433005splitHere46","x"
"3858splitHere46","4433167splitHere46","setLocation"
"3859splitHere46","4433167splitHere46","setLayout"
"3860splitHere46","4433167splitHere46","FlowLayout"
"3861splitHere46","4433167splitHere46","MigLayout"
"3862splitHere46","4433167splitHere46","ArrowScoreLabels"
"3863splitHere46","4433167splitHere46","JPanel"
"3864splitHere46","4433167splitHere46","createContentPane"
"3865splitHere46","4433167splitHere46","new ArrowScoreLabels()"
"3866splitHere46","4433167splitHere46","new ArrowScoreLabels().createContentPane()"
"3867splitHere46","4433167splitHere46","ArrowScoreLabels"
"3868splitHere46","4433167splitHere46","public ArrowScoreLabels()"
"3869splitHere46","4433167splitHere46","createContentPane"
"3870splitHere46","4433282splitHere46","/**<newline46mondego> * Save the state of this object to a stream (i.e., serialize it).<newline46mondego> *<newline46mondego> * @serialData The value returned by <code>getTime()</code><newline46mondego> *         is emitted (long).  This represents the offset from<newline46mondego> *             January 1, 1970, 00:00:00 GMT in milliseconds.<newline46mondego> */<newline46mondego>private void writeObject(ObjectOutputStream s)<newline46mondego>     throws IOException<newline46mondego>{<newline46mondego>    s.writeLong(getTimeImpl());<newline46mondego>}<newline46mondego>"
"3871splitHere46","4433320splitHere46","/(0vpgd055cifko3mnw4nkuimz)/Mp.aspx?ni=1482&amp;pi=72&amp;_72_url=925b9749-b7c7-4615-9f1a-9b613c344c82<newline46mondego>"
"3872splitHere46","4433320splitHere46","&amp;"
"3873splitHere46","4433320splitHere46","&"
"3874splitHere46","4433320splitHere46","/(0vpgd055cifko3mnw4nkuimz)/Mp.aspx?ni=1482&pi=72&_72_url=925b9749-b7c7-4615-9f1a-9b613c344c82<newline46mondego>"
"3875splitHere46","4433325splitHere46","String"
"3876splitHere46","4433325splitHere46","Class#forName()"
"3877splitHere46","4433325splitHere46","Class#newInstance()"
"3878splitHere46","4433325splitHere46","Object o = Class.forName(<doubleQuotes46>com.example.Foo<doubleQuotes46>).newInstance();<newline46mondego>"
"3879splitHere46","4433325splitHere46","URL"
"3880splitHere46","4433325splitHere46","URLClassLoader"
"3881splitHere46","4433325splitHere46","Class#forName()"
"3882splitHere46","4433325splitHere46","URL url = getItSomehow();<newline46mondego>URLClassLoader classLoader = URLClassLoader.newInstance(new URL[] { url });<newline46mondego>Object o = Class.forName(<doubleQuotes46>com.example.Foo<doubleQuotes46>, true, classLoader).newInstance();<newline46mondego>"
"3883splitHere46","4433325splitHere46","File"
"3884splitHere46","4433325splitHere46","URL"
"3885splitHere46","4433325splitHere46","File file = getItSomehow();<newline46mondego>URL url = file.toURI().toURL();<newline46mondego>// Continue with URLClassLoader.<newline46mondego>"
"3886splitHere46","4433946splitHere46","legacy/123"
"3887splitHere46","4433946splitHere46","@RequestMapping(<doubleQuotes46>/legacy/{id}<doubleQuotes46>)<newline46mondego>public ModelAndView catchAll(@PathVariable(<doubleQuotes46>id<doubleQuotes46>) String id) {<newline46mondego>  Legacy legacy = // Get the object from your database using the id<newline46mondego>  return new ModelAndView(<doubleQuotes46>legacy<doubleQuotes46>, <doubleQuotes46>legacy<doubleQuotes46>, legacy); // insert the legacy object into your view, it will be accessed by the name <doubleQuotes46>legacy<doubleQuotes46><newline46mondego>}<newline46mondego>"
"3888splitHere46","4433946splitHere46","legacy.jsp"
"3889splitHere46","4433946splitHere46","123"
"3890splitHere46","4434023splitHere46","if (string.matches(<doubleQuotes46>^[a-zA-Z0-9_]+$<doubleQuotes46>) {<newline46mondego>  // contains only listed chars<newline46mondego>} else {<newline46mondego>  // contains other chars<newline46mondego>}<newline46mondego>"
"3891splitHere46","4434093splitHere46","getClass().getClassloader().getResource()"
"3892splitHere46","4434141splitHere46","=="
"3893splitHere46","4434141splitHere46",".equals()"
"3894splitHere46","4434141splitHere46",".__cmp__()"
"3895splitHere46","4434141splitHere46",".equals()"
"3896splitHere46","4434141splitHere46","is"
"3897splitHere46","4434141splitHere46","=="
"3898splitHere46","4434213splitHere46","Intent StartGame = new Intent(this, StartGame.class);<newline46mondego>StartGame.putExtra(<doubleQuotes46>difficulty<doubleQuotes46>, difficultyLevel);<newline46mondego>startActivity(StartGame);<newline46mondego>"
"3899splitHere46","4434213splitHere46","Bundle extras = getIntent().getExtras();<newline46mondego>if (extras != null) {<newline46mondego>    String difficulty= extras.getString(<doubleQuotes46>difficulty<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3900splitHere46","4434273splitHere46","applicationEventMulticaster"
"3901splitHere46","4434273splitHere46","SimpleApplicationEventMulticaster"
"3902splitHere46","4434275splitHere46","0101<newline46mondego>or<newline46mondego>0011<newline46mondego>----<newline46mondego>0111<newline46mondego>"
"3903splitHere46","4434275splitHere46","public class FontStyle {<newline46mondego>    final int BOLD = 1;<newline46mondego>    final int ITALIC = 2;<newline46mondego>    final int UNDERLINED = 4;<newline46mondego><newline46mondego>    private int fontStyle;<newline46mondego><newline46mondego>    public void setFontStyle(int style) {<newline46mondego>       this.fontStyle = fontStyle;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean hasStyle(int style) {<newline46mondego>       return fontStyle & style == style;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3904splitHere46","4434275splitHere46","FontStyle boldAndUnderlined = new FontStyle();<newline46mondego>boldAndUnderlined.setFOntStyle(FontStyle.BOLD | FontStyle.UNDERLINED);<newline46mondego>"
"3905splitHere46","4434286splitHere46","{<newline46mondego>   <doubleQuotes46>someProperty<doubleQuotes46> : 1,<newline46mondego>   <doubleQuotes46>sendingUser<doubleQuotes46> : {<newline46mondego>               userID : 34343,<newline46mondego>               name : <doubleQuotes46>Joe Bloggs<doubleQuotes46><newline46mondego>             },<newline46mondego>   <doubleQuotes46>recivingUser<doubleQuotes46> : {<newline46mondego>               userID : 34345,<newline46mondego>               name : <doubleQuotes46>Joe Bloggs<doubleQuotes46><newline46mondego>             }<newline46mondego>}<newline46mondego>"
"3906splitHere46","4434286splitHere46","DBCollection coll = db.getCollection(<doubleQuotes46>privateMessages<doubleQuotes46>)<newline46mondego><newline46mondego>    query = new BasicDBObject();<newline46mondego><newline46mondego>    query.put(<doubleQuotes46>sendingUser.userID<doubleQuotes46>, new BasicDBObject(<doubleQuotes46>$eq<doubleQuotes46>, 34345)); <newline46mondego><newline46mondego>    cur = coll.find(query); // all documents with  sendingUser.userID = 34345 will be //returned by cursor<newline46mondego>"
"3907splitHere46","4434305splitHere46","proxy"
"3908splitHere46","4434305splitHere46","proxy"
"3909splitHere46","4434305splitHere46","user> (defmacro foo [] <doubleQuotes46>FOO<doubleQuotes46>)<newline46mondego>#'user/foo<newline46mondego><newline46mondego>user> (.toString (proxy [Object] [] <newline46mondego>                   (toString [] <newline46mondego>                     (str (foo) \space (reduce + (range 5))))))<newline46mondego><doubleQuotes46>FOO 10<doubleQuotes46><newline46mondego>"
"3910splitHere46","4434419splitHere46","remoteViews.setTextViewText"
"3911splitHere46","4434419splitHere46","updateAppWidget"
"3912splitHere46","4434419splitHere46","AppWidgetManager manager = AppWidgetManager.getInstance(context);<newline46mondego>manager.updateAppWidget(thisWidget, remoteViews);<newline46mondego>"
"3913splitHere46","4434507splitHere46","GenericClass<String>[] array = new GenericClass[1];<newline46mondego>Object[] brokenArray = array;<newline46mondego>brokenArray[0] = new GenericClass<Integer>();<newline46mondego>String value = array[0].getGenericValue(); //kaboom<newline46mondego>"
"3914splitHere46","4434763splitHere46","ArrayList"
"3915splitHere46","4434763splitHere46","TreeSet"
"3916splitHere46","4434763splitHere46","worldCityRanks.add"
"3917splitHere46","4434763splitHere46","continentCityRanks.add"
"3918splitHere46","4434763splitHere46","countryCityRanks.add"
"3919splitHere46","4434763splitHere46","// Probably in your Entity class<newline46mondego>public void addDescendant(int distance, Entity descendant) {<newline46mondego>  // this replaces worldCityRanks.add, continentCityRanks.add,<newline46mondego>  // countryCityRanks.add, etc.<newline46mondego>}<newline46mondego>"
"3920splitHere46","4434763splitHere46","ArrayList"
"3921splitHere46","4434763splitHere46","public void calcStats() {<newline46mondego>  theWorld.initAllRanks();<newline46mondego>  List<Entity> ancestors = new ArrayList<Entity>();<newline46mondego>  theWorld.accumulateAllRanks(ancestors);<newline46mondego>}<newline46mondego><newline46mondego>class Entity ... {<newline46mondego>  ...<newline46mondego><newline46mondego>  void initAllRanks() {<newline46mondego>    initRanks();<newline46mondego>    for(Entity child: getChildren()) {<newline46mondego>      child.initAllRanks();<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  void accumulateAllRanks(List<Entity> ancestors) {<newline46mondego>    int distance = ancestors.size();<newline46mondego>    for(Entity ancestor: ancestors) {<newline46mondego>      distance--;<newline46mondego>      ancestor.addDescendant(distance, this);<newline46mondego>    }<newline46mondego>    ancestors.add(this); // push this<newline46mondego>    for(Entity child: getChildren()) {<newline46mondego>      child.accumulateAllRanks(ancestors);<newline46mondego>    }<newline46mondego>    ancestors.remove(ancestors.size() - 1); // pop this<newline46mondego>  }<newline46mondego>"
"3922splitHere46","4434893splitHere46","-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n<newline46mondego>"
"3923splitHere46","4434927splitHere46","date               = date-value<newline46mondego><newline46mondego>date-value         = date-fullyear date-month date-mday<newline46mondego>date-fullyear      = 4DIGIT<newline46mondego>date-month         = 2DIGIT        ; 01-12<newline46mondego>date-mday          = 2DIGIT        ; 01-28, 01-29, 01-30, 01-31<newline46mondego>                                   ; based on month/year<newline46mondego>"
"3924splitHere46","4434929splitHere46","for (filename : filenames) {<newline46mondego>   if (filename.matches(<doubleQuotes46>.*ham.*<doubleQuotes46>)) {<newline46mondego>      System.out.println(<doubleQuotes46>ham:<doubleQuotes46> + filename);<newline46mondego><newline46mondego>      // reset these to null (where are they declared?)<newline46mondego>      read = null;   <newline46mondego>      br = null;   <newline46mondego>      try {<newline46mondego>         read = new FileReader(<doubleQuotes46>trainfiles/<doubleQuotes46>+filename);          <newline46mondego>         br = new BufferedReader(read);<newline46mondego><newline46mondego>         while ((lines = br.readLine()) != null) {<newline46mondego>            System.out.println(lines);<newline46mondego>            // st = new StringTokenizer(lines);<newline46mondego>            // while (st.hasMoreTokens()) {<newline46mondego>            //    System.out.println(st.nextToken());<newline46mondego>            // }<newline46mondego>         }<newline46mondego>      } catch (Exception e) {<newline46mondego>         e.printStackTrace();<newline46mondego>      } finally {<newline46mondego>         if (br != null) br.close();<newline46mondego>         if (read != null) read.close();<newline46mondego>      }<newline46mondego>   } <newline46mondego>}<newline46mondego>"
"3925splitHere46","4434929splitHere46","for"
"3926splitHere46","4434929splitHere46","for (filename : filenames) ..."
"3927splitHere46","4434929splitHere46","read"
"3928splitHere46","4434929splitHere46","br"
"3929splitHere46","4434929splitHere46","null"
"3930splitHere46","4434929splitHere46","br"
"3931splitHere46","4434929splitHere46","close"
"3932splitHere46","4434929splitHere46","null"
"3933splitHere46","4435201splitHere46","<provider>org.hibernate.ejb.HibernatePersistence</provider><newline46mondego>"
"3934splitHere46","4435201splitHere46","<provider>oracle.toplink.essentials.PersistenceProvider</provider><newline46mondego>"
"3935splitHere46","4435260splitHere46","false"
"3936splitHere46","4435341splitHere46","xrot"
"3937splitHere46","4435341splitHere46","yrot"
"3938splitHere46","4435341splitHere46","zrot"
"3939splitHere46","4435341splitHere46","addTranslation()"
"3940splitHere46","4435347splitHere46","<aop:aspectj-autoproxy/><newline46mondego>  <context:annotation-config/><newline46mondego>  <context:component-scan base-package=<doubleQuotes46>com.company.*<doubleQuotes46>/><newline46mondego>"
"3941splitHere46","4435347splitHere46","package com.company.*;<newline46mondego><newline46mondego>import org.apache.log4j.Logger;<newline46mondego>import org.aspectj.lang.ProceedingJoinPoint;<newline46mondego>import org.aspectj.lang.annotation.Around;<newline46mondego>import org.aspectj.lang.annotation.Aspect;<newline46mondego>import org.springframework.stereotype.Component;<newline46mondego>import org.springframework.util.StopWatch;<newline46mondego><newline46mondego>@Component<newline46mondego>@Aspect<newline46mondego>public class AOPMethodLogger {<newline46mondego><newline46mondego>    @Around(<doubleQuotes46>bean(*Service)<doubleQuotes46>)<newline46mondego>    public Object timeMethod(ProceedingJoinPoint joinPoint) throws Throwable {<newline46mondego>        StopWatch stopWatch = new StopWatch();<newline46mondego>        stopWatch.start();<newline46mondego>        Object retVal = joinPoint.proceed();<newline46mondego>        stopWatch.stop();<newline46mondego>        if(stopWatch.getTotalTimeMillis() > 35){<newline46mondego>            StringBuffer logMessageStringBuffer = new StringBuffer();<newline46mondego>            logMessageStringBuffer.append(joinPoint.getTarget().getClass().getName());<newline46mondego>            logMessageStringBuffer.append(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>            logMessageStringBuffer.append(joinPoint.getSignature().getName());<newline46mondego>            logMessageStringBuffer.append(<doubleQuotes46>(<doubleQuotes46>);<newline46mondego>            logMessageStringBuffer.append(joinPoint.getArgs());<newline46mondego>            logMessageStringBuffer.append(<doubleQuotes46>)<doubleQuotes46>);<newline46mondego>            logMessageStringBuffer.append(<doubleQuotes46> execution time: <doubleQuotes46>);<newline46mondego>            logMessageStringBuffer.append(stopWatch.getTotalTimeMillis());<newline46mondego>            logMessageStringBuffer.append(<doubleQuotes46> ms<doubleQuotes46>);<newline46mondego>            System.out.println(logMessageStringBuffer.toString());<newline46mondego>        }<newline46mondego>        return retVal;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3942splitHere46","4435383splitHere46","@Target({ElementType.ANNOTATION_TYPE})<newline46mondego>@Retention(RetentionPolicy.RUNTIME)<newline46mondego>public @interface MyAnnotation { ... }<newline46mondego>"
"3943splitHere46","4435408splitHere46","N"
"3944splitHere46","4435408splitHere46","sum"
"3945splitHere46","4435408splitHere46","inc"
"3946splitHere46","4435535splitHere46","public"
"3947splitHere46","4435535splitHere46","public static final"
"3948splitHere46","4435535splitHere46","MyInterface.MY_CONST"
"3949splitHere46","4435535splitHere46","final"
"3950splitHere46","4435535splitHere46","abstract class"
"3951splitHere46","4435535splitHere46","MyInterface.MY_CONST"
"3952splitHere46","4435535splitHere46","MyExtendingClass.MY_CONST"
"3953splitHere46","4435535splitHere46","instanceOfMyExtendingClass.MY_CONST"
"3954splitHere46","4435855splitHere46","Random.nextInt(...)<newline46mondego>"
"3955splitHere46","4435915splitHere46","String.split"
"3956splitHere46","4435915splitHere46","Pattern.split"
"3957splitHere46","4435915splitHere46","Pattern.LITERAL"
"3958splitHere46","4435915splitHere46","String.split"
"3959splitHere46","4436052splitHere46","try {<newline46mondego> String driverName = <doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>;<newline46mondego> Class.forName(driverName);<newline46mondego><newline46mondego> String serverName = <doubleQuotes46>localhost<doubleQuotes46>;<newline46mondego> String mydatabase = <doubleQuotes46>hpdata<doubleQuotes46>;<newline46mondego> String url = <doubleQuotes46>jdbc:mysql :// <doubleQuotes46> + serverName + <doubleQuotes46>/<doubleQuotes46> + mydatabase; <newline46mondego><newline46mondego> String username = <doubleQuotes46>root<doubleQuotes46>;<newline46mondego> String password = <doubleQuotes46>123456<doubleQuotes46>;<newline46mondego> connection = DriverManager.getConnection(url, username, password);<newline46mondego>} catch(Exception e) {<newline46mondego> // appropriate action<newline46mondego>}<newline46mondego>"
"3960splitHere46","4436173splitHere46","import java.sql.Connection;<newline46mondego>import java.sql.DriverManager;<newline46mondego><newline46mondego>public class Main {<newline46mondego>  public static void main(String[] argv) throws Exception {<newline46mondego>    String driverName = <doubleQuotes46>org.gjt.mm.mysql.Driver<doubleQuotes46>;<newline46mondego>    Class.forName(driverName);<newline46mondego><newline46mondego>    String serverName = <doubleQuotes46>localhost<doubleQuotes46>;<newline46mondego>    String mydatabase = <doubleQuotes46>mydatabase<doubleQuotes46>;<newline46mondego>    String url = <doubleQuotes46>jdbc:mysql://<doubleQuotes46> + serverName + <doubleQuotes46>/<doubleQuotes46> + mydatabase; <newline46mondego><newline46mondego>    String username = <doubleQuotes46>username<doubleQuotes46>;<newline46mondego>    String password = <doubleQuotes46>password<doubleQuotes46>;<newline46mondego>    Connection connection = DriverManager.getConnection(url, username, password);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3961splitHere46","4436190splitHere46","abstract class A<newline46mondego>{<newline46mondego> //thousands of abstract method();<newline46mondego> abstract methodA();<newline46mondego> abstract methodB();<newline46mondego> abstract methodC();<newline46mondego>}<newline46mondego><newline46mondego>//OR<newline46mondego>interface ForOnlymethodA<newline46mondego>{<newline46mondego> void methodA();<newline46mondego>}<newline46mondego>interface FormethodBandmethodC<newline46mondego>{<newline46mondego> void methodB();<newline46mondego> void methodC();<newline46mondego>}<newline46mondego>"
"3962splitHere46","4436190splitHere46","Abstract"
"3963splitHere46","4436208splitHere46","-Dvisualvm.display.name=FooBar"
"3964splitHere46","4436275splitHere46","e.setDigit(root.getElement().getLevel() + 1);<newline46mondego>"
"3965splitHere46","4436322splitHere46","WHERE product_name IN (?, ?)<newline46mondego>"
"3966splitHere46","4436371splitHere46","<procedure id=<doubleQuotes46>yourProc<doubleQuotes46> parameterClass=<doubleQuotes46>yourclass<doubleQuotes46> resultMap=<doubleQuotes46>result<doubleQuotes46>><newline46mondego>    {call yourProc(#param1#,#param2#)}<newline46mondego></procedure><newline46mondego>"
"3967splitHere46","4436408splitHere46","Class.forName(<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>).newInstance();<newline46mondego>String jdbcURL=<doubleQuotes46>jdbc:mysql://localhost:3306/jsp<doubleQuotes46>;<newline46mondego>conn = DriverManager.getConnection(jdbcURL,<doubleQuotes46>root<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>PreparedStatement psSelectRecord=null;<newline46mondego>ResultSet rsSelectRecord=null;<newline46mondego>String sqlSelectRecord=null;<newline46mondego><newline46mondego>sqlSelectRecord=<doubleQuotes46>SELECT s.iEmpID, s.sStaffName, s.sStaffDept, s.iStaffPhone,<doubleQuotes46>+<newline46mondego>                    <doubleQuotes46>d.sAddress FROM staff_register s <doubleQuotes46> +<newline46mondego>                        <doubleQuotes46>left join staff_details d on d.iEmpID=s.iEmpID<doubleQuotes46>;    <newline46mondego><newline46mondego>psSelectRecord=conn.prepareStatement(sqlSelectRecord);<newline46mondego>rsSelectRecord=psSelectRecord.executeQuery();<newline46mondego>"
"3968splitHere46","4436433splitHere46","Session session = null;<newline46mondego>Transaction txn = null;<newline46mondego>try {  <newline46mondego>    SessionFactory sessionFactory = <newline46mondego>        new Configuration().configure().buildSessionFactory();<newline46mondego>    session = sessionFactory.openSession();  <newline46mondego>    txn = session.beginTransaction();<newline46mondego>    Course course = new Course();  <newline46mondego>    course.setDescription(<doubleQuotes46>Description<doubleQuotes46>);<newline46mondego>    course.setName(<doubleQuotes46>NAME<doubleQuotes46>);<newline46mondego>    course.setUrl(<doubleQuotes46>http://www.url.com<doubleQuotes46>); <newline46mondego>    session.save(course); <newline46mondego>    txn.commit();<newline46mondego><newline46mondego>} catch (Exception e) { <newline46mondego>    System.out.println(e.getMessage());<newline46mondego>} finally {<newline46mondego>    if (!txn.wasCommitted()) {<newline46mondego>        txn.rollback();<newline46mondego>    }<newline46mondego><newline46mondego>    session.flush();  <newline46mondego>    session.close();   <newline46mondego>}<newline46mondego>"
"3969splitHere46","4436481splitHere46","String[] s = {<doubleQuotes46>FOO<doubleQuotes46>, <doubleQuotes46>BAR<doubleQuotes46>};  <newline46mondego>"
"3970splitHere46","4436481splitHere46","String[] s;<newline46mondego>s={<doubleQuotes46>FOO<doubleQuotes46>, <doubleQuotes46>BAR<doubleQuotes46>};  <newline46mondego>"
"3971splitHere46","4436544splitHere46","with cte_transaction_data as<newline46mondego>(<newline46mondego>    select 300 as deposit, null as withdraw, date '01/02/2010' as transaction_date union all<newline46mondego>    select null, 200, date '01/15/2010' union all<newline46mondego>    select null, 300, date '01/25/2010' union all<newline46mondego>    select 800, null, date '01/28/2010'<newline46mondego>)<newline46mondego>select<newline46mondego>    month,<newline46mondego>    min(balance) as minimum_balance<newline46mondego>from<newline46mondego>    (<newline46mondego>        select <newline46mondego>            transaction_date,<newline46mondego>            date_trunc('month', transaction_date) as month,<newline46mondego>            300 <newline46mondego>            + coalesce(sum(deposit) over(order by transaction_date rows between unbounded preceding and current row), 0)<newline46mondego>            - coalesce(sum(withdraw) over(order by transaction_date rows between unbounded preceding and current row), 0) as balance<newline46mondego>         from cte_transaction_data<newline46mondego>    ) as running_balance<newline46mondego>group by<newline46mondego>    month<newline46mondego>order by<newline46mondego>    month</pre>"
"3972splitHere46","4436544splitHere46","month                   minimum_balance<newline46mondego>2010-01-01 00:00:00-06  100</pre>"
"3973splitHere46","4436657splitHere46","Closable"
"3974splitHere46","4436695splitHere46","boolExp1 || boolExp2 && boolExp3 || boolExp4<newline46mondego>"
"3975splitHere46","4436695splitHere46","boolExp1 || (boolExp2 && boolExp3) || boolExp4<newline46mondego>"
"3976splitHere46","4436695splitHere46","(boolExp1 || boolExp2) && (boolExp3 || boolExp4)<newline46mondego>"
"3977splitHere46","4436695splitHere46","boolExp1"
"3978splitHere46","4436695splitHere46","boolExp1 = true<newline46mondego>boolExp2 = false<newline46mondego>boolExp3 = false<newline46mondego>boolExp4 = false<newline46mondego>"
"3979splitHere46","4436915splitHere46","Quaternion Quaternion::create_from_axis_angle(const double &xx, const double &yy, const double &zz, const double &a)<newline46mondego>{<newline46mondego>    // Here we calculate the sin( theta / 2) once for optimization<newline46mondego>    double result = sin( a / 2.0 );<newline46mondego><newline46mondego>    // Calculate the x, y and z of the quaternion<newline46mondego>    double x = xx * result;<newline46mondego>    double y = yy * result;<newline46mondego>    double z = zz * result;<newline46mondego><newline46mondego>    // Calcualte the w value by cos( theta / 2 )<newline46mondego>    double w = cos( a / 2.0 );<newline46mondego><newline46mondego>    return Quaternion(x, y, z, w).normalize();<newline46mondego>}<newline46mondego>"
"3980splitHere46","4436915splitHere46","createFromAxisAngle(1, 0, 0, M_PI/2)"
"3981splitHere46","4436991splitHere46","session.getIdentifier(object)"
"3982splitHere46","4437022splitHere46","put()"
"3983splitHere46","4437053splitHere46","import java.lang.reflect.Array;<newline46mondego><newline46mondego>public void myMethod(Object array) {<newline46mondego>    Object first = Array.get(a, 0); // Object, primitives are wrapped.<newline46mondego>}<newline46mondego>"
"3984splitHere46","4437076splitHere46","import javax.crypto.Cipher;<newline46mondego>import javax.crypto.SecretKey;<newline46mondego>import javax.crypto.spec.SecretKeySpec;<newline46mondego>import javax.crypto.spec.IvParameterSpec;<newline46mondego>import java.security.Security;<newline46mondego><newline46mondego>import org.bouncycastle.jce.provider.BouncyCastleProvider;<newline46mondego><newline46mondego>public class Main{<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Security.addProvider(new BouncyCastleProvider());<newline46mondego><newline46mondego>        byte [] plain = <doubleQuotes46>I eat fish every day<doubleQuotes46>.getBytes(<doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego><newline46mondego>        byte [] keyBytes = new byte [] { (byte) 0xC1, (byte) 0x57, (byte) 0x45, (byte) 0x08,<newline46mondego>            (byte) 0x85, (byte) 0x02, (byte) 0xB0, (byte) 0xD3,<newline46mondego>            (byte) 0xA2, (byte) 0xEF, (byte) 0x68, (byte) 0x43,<newline46mondego>            (byte) 0x5E, (byte) 0xE6, (byte) 0xD0, (byte) 0x75 };<newline46mondego><newline46mondego><newline46mondego>        SecretKey keySpec = new SecretKeySpec(keyBytes, <doubleQuotes46>DESede<doubleQuotes46>);<newline46mondego><newline46mondego>        IvParameterSpec iv = new IvParameterSpec(new byte[8]);<newline46mondego><newline46mondego>        Cipher e_cipher = Cipher.getInstance(<doubleQuotes46>DESede/CBC/PKCS5Padding<doubleQuotes46>, <doubleQuotes46>BC<doubleQuotes46>);<newline46mondego><newline46mondego>        e_cipher.init(Cipher.ENCRYPT_MODE, keySpec, iv);<newline46mondego><newline46mondego>        byte [] cipherText = e_cipher.doFinal(plain);<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Ciphertext: <doubleQuotes46> + new sun.misc.BASE64Encoder().encode(cipherText));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3985splitHere46","4437188splitHere46","ActionEvent"
"3986splitHere46","4437188splitHere46","setSelectedIndex"
"3987splitHere46","4437188splitHere46","setSelectedValue"
"3988splitHere46","4437188splitHere46","setSelectedBoundValue"
"3989splitHere46","4437188splitHere46","JComboBox"
"3990splitHere46","4437188splitHere46","box.addActionListener(new ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        if (e.getModifiers() != 0) {<newline46mondego>            // ~ mouse button pressed ;)<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"3991splitHere46","4437282splitHere46","MethodDescriptor:"
"3992splitHere46","4437282splitHere46","( ParameterDescriptor* ) ReturnDescriptor"
"3993splitHere46","4437282splitHere46","public final void a(ak aa)     ->     (Lsomepkg1/ak;)V<newline46mondego>public final void a(cn ccn)    ->     (Lsomepkg2/ccn;)V<newline46mondego>public final cN a()            ->     ()Lsomepkg3/cN;<newline46mondego>public final void a()          ->     ()V<newline46mondego>public final boolean a()       ->     ()Z<newline46mondego>"
"3994splitHere46","4437282splitHere46","-overloadaggressively"
"3995splitHere46","4437282splitHere46","jsr"
"3996splitHere46","4437306splitHere46","package smartOfficeJava;<newline46mondego><newline46mondego>import gnu.io.CommPort;<newline46mondego>import gnu.io.CommPortIdentifier;<newline46mondego>import gnu.io.SerialPort;<newline46mondego>import gnu.io.SerialPortEvent;<newline46mondego>import gnu.io.SerialPortEventListener;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.OutputStream;<newline46mondego><newline46mondego>/**<newline46mondego> * This version of the TwoWaySerialComm example makes use of the <newline46mondego> * SerialPortEventListener to avoid polling.<newline46mondego> *<newline46mondego> */<newline46mondego>public class Arduino<newline46mondego>{<newline46mondego>    OutputStream out;<newline46mondego>    SerialReader input;<newline46mondego>    public Arduino()<newline46mondego>    {<newline46mondego>        super();<newline46mondego>    }<newline46mondego><newline46mondego>    void connect ( String portName ) throws Exception<newline46mondego>    {<newline46mondego>        CommPortIdentifier portIdentifier = CommPortIdentifier.getPortIdentifier(portName);<newline46mondego>        if ( portIdentifier.isCurrentlyOwned() )<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Error: Port is currently in use<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            CommPort commPort = portIdentifier.open(this.getClass().getName(),2000);<newline46mondego><newline46mondego>            if ( commPort instanceof SerialPort )<newline46mondego>            {<newline46mondego>                SerialPort serialPort = (SerialPort) commPort;<newline46mondego>                serialPort.setSerialPortParams(9600,SerialPort.DATABITS_8,SerialPort.STOPBITS_1,SerialPort.PARITY_NONE);<newline46mondego><newline46mondego>                InputStream in = serialPort.getInputStream();<newline46mondego>                out = serialPort.getOutputStream();<newline46mondego><newline46mondego>                //(new Thread(new SerialWriter(out))).start();<newline46mondego>                input = new SerialReader(in);<newline46mondego>                serialPort.addEventListener(input);<newline46mondego>                serialPort.notifyOnDataAvailable(true);<newline46mondego>                Thread.sleep(3000);<newline46mondego>                out.write(<doubleQuotes46>yes<doubleQuotes46>.getBytes());   <newline46mondego><newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                System.out.println(<doubleQuotes46>Error: Only serial ports are handled by this example.<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }     <newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Handles the input coming from the serial port. A new line character<newline46mondego>     * is treated as the end of a block in this example. <newline46mondego>     */<newline46mondego>    public static class SerialReader implements SerialPortEventListener <newline46mondego>    {<newline46mondego>        private InputStream in;<newline46mondego>        private byte[] buffer = new byte[1024];<newline46mondego>        String buffer_string;<newline46mondego>        public SerialReader ( InputStream in )<newline46mondego>        {<newline46mondego>            this.in = in;<newline46mondego>        }<newline46mondego><newline46mondego>        public void serialEvent(SerialPortEvent arg0) {<newline46mondego>            int data;<newline46mondego><newline46mondego>            try<newline46mondego>            {<newline46mondego>                int len = 0;<newline46mondego>                while ( ( data = in.read()) > -1 )<newline46mondego>                {<newline46mondego>                    if ( data == '\n' ) {<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                    buffer[len++] = (byte) data;<newline46mondego>                }<newline46mondego>                //System.out.print(new String(buffer,0,len));<newline46mondego>                buffer_string = new String(buffer,0,len);<newline46mondego>            }<newline46mondego>            catch ( IOException e )<newline46mondego>            {<newline46mondego>                e.printStackTrace();<newline46mondego>                System.exit(-1);<newline46mondego>            }             <newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    /** <newline46mondego>    public static class SerialWriter implements Runnable <newline46mondego>    {<newline46mondego>        OutputStream out;<newline46mondego><newline46mondego>        public SerialWriter ( OutputStream out )<newline46mondego>        {<newline46mondego>            this.out = out;<newline46mondego>        }<newline46mondego><newline46mondego>        public void run ()<newline46mondego>        {<newline46mondego>            try<newline46mondego>            {                <newline46mondego>                int c = 0;<newline46mondego>                while ( ( c = System.in.read()) > -1 )<newline46mondego>                {<newline46mondego>                    this.out.write(c);<newline46mondego>                }                <newline46mondego>            }<newline46mondego>            catch ( IOException e )<newline46mondego>            {<newline46mondego>                e.printStackTrace();<newline46mondego>                System.exit(-1);<newline46mondego>            }            <newline46mondego>        }<newline46mondego>    }*/<newline46mondego><newline46mondego>   public String getSensor(){<newline46mondego>       try<newline46mondego>       {                <newline46mondego>               this.out.write(<doubleQuotes46>yes<doubleQuotes46>.getBytes());              <newline46mondego>       }<newline46mondego>       catch ( IOException e )<newline46mondego>       {<newline46mondego>           e.printStackTrace();<newline46mondego>       }  <newline46mondego>       try {<newline46mondego>        Thread.sleep(3000);<newline46mondego>    } catch (InterruptedException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>       return (input.buffer_string).trim();<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>    public static void main ( String[] args )<newline46mondego>    {<newline46mondego>        Arduino test;<newline46mondego>        try<newline46mondego>        {<newline46mondego>            test = new Arduino();<newline46mondego>            test.connect(<doubleQuotes46>COM3<doubleQuotes46>);<newline46mondego>            System.out.println(test.getSensor());<newline46mondego>            System.out.println(test.getSensor());<newline46mondego>            System.out.println(test.getSensor());<newline46mondego>        }<newline46mondego>        catch ( Exception e )<newline46mondego>        {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"3997splitHere46","4437368splitHere46","Long"
"3998splitHere46","4437368splitHere46","int"
"3999splitHere46","4437368splitHere46","long"
"4000splitHere46","4437368splitHere46","L"
"4001splitHere46","4437368splitHere46","-1"
"4002splitHere46","4437368splitHere46","long"
"4003splitHere46","4437368splitHere46","-1L"
"4004splitHere46","4437368splitHere46","Long result = -1L;<newline46mondego>"
"4005splitHere46","4437368splitHere46","int"
"4006splitHere46","4437368splitHere46","long"
"4007splitHere46","4437368splitHere46","long result = -1;<newline46mondego>"
"4008splitHere46","4437368splitHere46","Long result = (long) -1;<newline46mondego>"
"4009splitHere46","4437368splitHere46","int"
"4010splitHere46","4437368splitHere46","long"
"4011splitHere46","4437368splitHere46","Integer"
"4012splitHere46","4437368splitHere46","Long"
"4013splitHere46","4437495splitHere46","SELECT CAST(myVarcharField AS DECIMAL(10)) as myIntField order by myIntField; <newline46mondego>"
"4014splitHere46","4437495splitHere46","SELECT CAST(myVarcharField AS UNSIGNED) as myIntField order by myIntField; <newline46mondego>"
"4015splitHere46","4437752splitHere46","println"
"4016splitHere46","4437752splitHere46","PrintStream"
"4017splitHere46","4437752splitHere46","cat largeTextFile.txt<newline46mondego>cat largeTextFile.txt > temp.txt<newline46mondego>"
"4018splitHere46","4437752splitHere46","System.out"
"4019splitHere46","4437850splitHere46","abstract"
"4020splitHere46","4437850splitHere46","Serializable"
"4021splitHere46","4437850splitHere46","private void writeObject(java.io.ObjectOutputStream out)<newline46mondego>   throws IOException<newline46mondego>private void readObject(java.io.ObjectInputStream in)<newline46mondego>   throws IOException, ClassNotFoundException;<newline46mondego>private void readObjectNoData() <newline46mondego>   throws ObjectStreamException;<newline46mondego>"
"4022splitHere46","4437985splitHere46","icepdf-core.jar"
"4023splitHere46","4437985splitHere46","icepdf-viewer.jar"
"4024splitHere46","4437985splitHere46","import org.icepdf.ri.common.SwingController;<newline46mondego>import org.icepdf.ri.common.SwingViewBuilder;<newline46mondego><newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego>/**<newline46mondego> * The <code>ViewerComponentExample</code> class is an example of how to use<newline46mondego> * <code>SwingController</code> and <code>SwingViewBuilder</code><newline46mondego> * to build a PDF viewer component.  A file specified at the command line is<newline46mondego> * opened in a JFrame which contains the viewer component.<newline46mondego> *<newline46mondego> * @since 2.0<newline46mondego> */<newline46mondego>public class ViewerComponentExample {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        // Get a file from the command line to open<newline46mondego>        String filePath = args[0];<newline46mondego><newline46mondego>        // build a component controller<newline46mondego>        SwingController controller = new SwingController();<newline46mondego><newline46mondego>        SwingViewBuilder factory = new SwingViewBuilder(controller);<newline46mondego><newline46mondego>        JPanel viewerComponentPanel = factory.buildViewerPanel();<newline46mondego><newline46mondego>        // add interactive mouse link annotation support via callback<newline46mondego>        controller.getDocumentViewController().setAnnotationCallback(<newline46mondego>                new org.icepdf.ri.common.MyAnnotationCallback(<newline46mondego>                        controller.getDocumentViewController()));<newline46mondego><newline46mondego>        JFrame applicationFrame = new JFrame();<newline46mondego>        applicationFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        applicationFrame.getContentPane().add(viewerComponentPanel);<newline46mondego><newline46mondego>        // Now that the GUI is all in place, we can try openning a PDF<newline46mondego>        controller.openDocument(filePath);<newline46mondego><newline46mondego>        // show the component<newline46mondego>        applicationFrame.pack();<newline46mondego>        applicationFrame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4025splitHere46","4437985splitHere46","SwingViewBuilder"
"4026splitHere46","4437985splitHere46","org.eclipse.swt.awt.SWT_AWT"
"4027splitHere46","4438124splitHere46","import java.io.*;<newline46mondego>import java.nio.charset.Charset;<newline46mondego>import java.util.*;<newline46mondego>public class CharsetToolkit{<newline46mondego>private byte[] buffer;<newline46mondego>private Charset defaultCharset;<newline46mondego>private boolean enforce8Bit = false;<newline46mondego>public CharsetToolkit(byte[] buffer)<newline46mondego>{<newline46mondego>    this.buffer = buffer;<newline46mondego>    this.defaultCharset = getDefaultSystemCharset();<newline46mondego>}<newline46mondego>public CharsetToolkit(byte[] buffer, Charset defaultCharset)<newline46mondego>{<newline46mondego>    this.buffer = buffer;<newline46mondego>    setDefaultCharset(defaultCharset);<newline46mondego>}<newline46mondego>public void setDefaultCharset(Charset defaultCharset)<newline46mondego>{<newline46mondego>    if (defaultCharset != null)<newline46mondego>        this.defaultCharset = defaultCharset;<newline46mondego>    else<newline46mondego>        this.defaultCharset = getDefaultSystemCharset();<newline46mondego>}<newline46mondego>public void setEnforce8Bit(boolean enforce)<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    this.enforce8Bit = enforce;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public boolean getEnforce8Bit()<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    return this.enforce8Bit;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public Charset getDefaultCharset()<newline46mondego>{<newline46mondego>    return defaultCharset;<newline46mondego>}<newline46mondego><newline46mondego>public Charset guessEncoding()<newline46mondego>{<newline46mondego>    if (hasUTF8Bom(buffer)) return Charset.forName(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    if (hasUTF16LEBom(buffer)) return Charset.forName(<doubleQuotes46>UTF-16LE<doubleQuotes46>);<newline46mondego>if (hasUTF16BEBom(buffer)) return Charset.forName(<doubleQuotes46>UTF-16BE<doubleQuotes46>);<newline46mondego>    boolean highOrderBit = false;<newline46mondego>    boolean validU8Char = true;<newline46mondego>int length = buffer.length;<newline46mondego>    int i = 0;<newline46mondego><newline46mondego>while (i < length - 6)<newline46mondego>    {<newline46mondego>        byte b0 = buffer[i];<newline46mondego>        byte b1 = buffer[i + 1];<newline46mondego>        byte b2 = buffer[i + 2];<newline46mondego>        byte b3 = buffer[i + 3];<newline46mondego>        byte b4 = buffer[i + 4];<newline46mondego>        byte b5 = buffer[i + 5];<newline46mondego>        if (b0 < 0)<newline46mondego><newline46mondego>    {<newline46mondego>        highOrderBit = true;<newline46mondego>            // a two-bytes sequence was encoutered<newline46mondego>            if (isTwoBytesSequence(b0))<newline46mondego>            {<newline46mondego>                if (!isContinuationChar(b1))<newline46mondego>                validU8Char = false;<newline46mondego>                else<newline46mondego>                    i++;<newline46mondego>            }<newline46mondego>            // a three-bytes sequence was encoutered<newline46mondego><newline46mondego>            else if (isThreeBytesSequence(b0))<newline46mondego><newline46mondego>            {<newline46mondego><newline46mondego>                // there must be two continuation bytes of the form 10xxxxxx,<newline46mondego><newline46mondego>                // otherwise the following characteris is not a valid UTF-8 construct<newline46mondego><newline46mondego>                if (!(isContinuationChar(b1) && isContinuationChar(b2)))<newline46mondego><newline46mondego>                    validU8Char = false;<newline46mondego><newline46mondego>                else<newline46mondego><newline46mondego>                    i += 2;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            // a four-bytes sequence was encoutered<newline46mondego><newline46mondego>            else if (isFourBytesSequence(b0))<newline46mondego><newline46mondego>            {<newline46mondego><newline46mondego>                // there must be three continuation bytes of the form 10xxxxxx,<newline46mondego><newline46mondego>                // otherwise the following characteris is not a valid UTF-8 construct<newline46mondego><newline46mondego>                if (!(isContinuationChar(b1) && isContinuationChar(b2) && isContinuationChar(b3)))<newline46mondego><newline46mondego>                    validU8Char = false;<newline46mondego><newline46mondego>                else<newline46mondego><newline46mondego>                    i += 3;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            // a five-bytes sequence was encoutered<newline46mondego><newline46mondego>            else if (isFiveBytesSequence(b0))<newline46mondego><newline46mondego>            {<newline46mondego><newline46mondego>                // there must be four continuation bytes of the form 10xxxxxx,<newline46mondego><newline46mondego>                // otherwise the following characteris is not a valid UTF-8 construct<newline46mondego><newline46mondego>                if (!(isContinuationChar(b1) && isContinuationChar(b2) && isContinuationChar(b3) && isContinuationChar(b4)))<newline46mondego><newline46mondego>                    validU8Char = false;<newline46mondego><newline46mondego>                else<newline46mondego><newline46mondego>                    i += 4;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            // a six-bytes sequence was encoutered<newline46mondego><newline46mondego>            else if (isSixBytesSequence(b0))<newline46mondego><newline46mondego>            {<newline46mondego><newline46mondego>                // there must be five continuation bytes of the form 10xxxxxx,<newline46mondego><newline46mondego>                // otherwise the following characteris is not a valid UTF-8 construct<newline46mondego><newline46mondego>                if (!(isContinuationChar(b1) && isContinuationChar(b2) && isContinuationChar(b3) && isContinuationChar(b4) && isContinuationChar(b5)))<newline46mondego><newline46mondego>                    validU8Char = false;<newline46mondego><newline46mondego>                else<newline46mondego><newline46mondego>                    i += 5;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>            else<newline46mondego><newline46mondego>                validU8Char = false;<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        if (!validU8Char) break;<newline46mondego><newline46mondego>        i++;<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    // if no byte with an high order bit set, the encoding is US-ASCII<newline46mondego><newline46mondego>    // (it might have been UTF-7, but this encoding is usually internally used only by mail systems)<newline46mondego><newline46mondego>    if (!highOrderBit)<newline46mondego><newline46mondego>    {<newline46mondego><newline46mondego>        // returns the default charset rather than US-ASCII if the enforce8Bit flag is set.<newline46mondego><newline46mondego>        if (this.enforce8Bit)<newline46mondego><newline46mondego>            return this.defaultCharset;<newline46mondego><newline46mondego>        else<newline46mondego><newline46mondego>            return Charset.forName(<doubleQuotes46>US-ASCII<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    // if no invalid UTF-8 were encountered, we can assume the encoding is UTF-8,<newline46mondego><newline46mondego>    // otherwise the file would not be human readable<newline46mondego><newline46mondego>    if (validU8Char) return Charset.forName(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego><newline46mondego>    // finally, if it's not UTF-8 nor US-ASCII, let's assume the encoding is the default encoding<newline46mondego><newline46mondego>    return this.defaultCharset;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public static Charset guessEncoding(File f, int bufferLength) throws FileNotFoundException, IOException<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    FileInputStream fis = new FileInputStream(f);<newline46mondego><newline46mondego>    byte[] buffer = new byte[bufferLength];<newline46mondego><newline46mondego>    fis.read(buffer);<newline46mondego><newline46mondego>    fis.close();<newline46mondego><newline46mondego>    CharsetToolkit toolkit = new CharsetToolkit(buffer);<newline46mondego><newline46mondego>    toolkit.setDefaultCharset(getDefaultSystemCharset());<newline46mondego><newline46mondego>    return toolkit.guessEncoding();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>public static Charset guessEncoding(File f, int bufferLength, Charset defaultCharset) throws FileNotFoundException, IOException<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    FileInputStream fis = new FileInputStream(f);<newline46mondego><newline46mondego>    byte[] buffer = new byte[bufferLength];<newline46mondego><newline46mondego>    fis.read(buffer);<newline46mondego><newline46mondego>    fis.close();<newline46mondego><newline46mondego>    CharsetToolkit toolkit = new CharsetToolkit(buffer);<newline46mondego><newline46mondego>    toolkit.setDefaultCharset(defaultCharset);<newline46mondego><newline46mondego>    return toolkit.guessEncoding();<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego><newline46mondego> * If the byte has the form 10xxxxx, then it's a continuation byte of a multiple byte character;<newline46mondego><newline46mondego> *<newline46mondego><newline46mondego> * @param b a byte.<newline46mondego><newline46mondego> * @return true if it's a continuation char.<newline46mondego><newline46mondego> */<newline46mondego><newline46mondego>private static boolean isContinuationChar(byte b)<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    return -128 <= b && b <= -65;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego><newline46mondego> * If the byte has the form 110xxxx, then it's the first byte of a two-bytes sequence character.<newline46mondego><newline46mondego> *<newline46mondego><newline46mondego> * @param b a byte.<newline46mondego><newline46mondego> * @return true if it's the first byte of a two-bytes sequence.<newline46mondego><newline46mondego> */<newline46mondego><newline46mondego>private static boolean isTwoBytesSequence(byte b)<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    return -64 <= b && b <= -33;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego><newline46mondego> * If the byte has the form 1110xxx, then it's the first byte of a three-bytes sequence character.<newline46mondego><newline46mondego> *<newline46mondego><newline46mondego> * @param b a byte.<newline46mondego><newline46mondego> * @return true if it's the first byte of a three-bytes sequence.<newline46mondego><newline46mondego> */<newline46mondego><newline46mondego>private static boolean isThreeBytesSequence(byte b)<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    return -32 <= b && b <= -17;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego><newline46mondego> * If the byte has the form 11110xx, then it's the first byte of a four-bytes sequence character.<newline46mondego><newline46mondego> *<newline46mondego><newline46mondego> * @param b a byte.<newline46mondego><newline46mondego> * @return true if it's the first byte of a four-bytes sequence.<newline46mondego><newline46mondego> */<newline46mondego><newline46mondego>private static boolean isFourBytesSequence(byte b)<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>    return -16 <= b && b <= -9;<newline46mondego><newline46mondego>}<newline46mondego>"
"4028splitHere46","4438124splitHere46","private static boolean isSixBytesSequence(byte b)<newline46mondego>{<newline46mondego>    return -4 <= b && b <= -3;<newline46mondego>}<newline46mondego>public static Charset getDefaultSystemCharset()<newline46mondego>{<newline46mondego>    return Charset.forName(System.getProperty(<doubleQuotes46>file.encoding<doubleQuotes46>));<newline46mondego>}<newline46mondego>private static boolean hasUTF8Bom(byte[] bom)<newline46mondego>{<newline46mondego>    return (bom[0] == -17 && bom[1] == -69 && bom[2] == -65);<newline46mondego>}<newline46mondego>private static boolean hasUTF16LEBom(byte[] bom)<newline46mondego>{<newline46mondego>return (bom[0] == -1 && bom[1] == -2);<newline46mondego>}<newline46mondego>private static boolean hasUTF16BEBom(byte[] bom)<newline46mondego>{<newline46mondego>    return (bom[0] == -2 && bom[1] == -1);<newline46mondego>}<newline46mondego>public static Charset[] getAvailableCharsets()<newline46mondego>{<newline46mondego>    Collection collection = Charset.availableCharsets().values();<newline46mondego>    return (Charset[]) collection.toArray(new Charset[collection.size()]);<newline46mondego>}<newline46mondego>public static void main(String[] args) throws FileNotFoundException, IOException<newline46mondego>{<newline46mondego>File file = new File(<doubleQuotes46>windows-1252.txt<doubleQuotes46>);<newline46mondego>    Charset guessedCharset = CharsetToolkit.guessEncoding(file, 4096);<newline46mondego>    System.err.println(<doubleQuotes46>Charset found: <doubleQuotes46> + guessedCharset.displayName());<newline46mondego>FileInputStream fis = new FileInputStream(file);<newline46mondego>    InputStreamReader isr = new InputStreamReader(fis, guessedCharset);<newline46mondego>    BufferedReader br = new BufferedReader(isr);<newline46mondego>    String line;<newline46mondego>    while ((line = br.readLine()) != null)<newline46mondego>    {<newline46mondego>        System.out.println(line);<newline46mondego><newline46mondego>    }}}<newline46mondego>"
"4029splitHere46","4438124splitHere46","Charset guessedCharset = CharsetToolkit.guessEncoding(new File(<doubleQuotes46>filename.htm<doubleQuotes46>), 4096);<newline46mondego>    BufferedReader c = new BufferedReader(new InputStreamReader(new FileInputStream(<doubleQuotes46>filename.htm<doubleQuotes46>), guessedCharset)) ;<newline46mondego>"
"4030splitHere46","4438257splitHere46","SHOUTY_CASE"
"4031splitHere46","4438257splitHere46","LargeProduct"
"4032splitHere46","4438257splitHere46","height"
"4033splitHere46","4438257splitHere46","height"
"4034splitHere46","4438257splitHere46","getHeight"
"4035splitHere46","4438257splitHere46","setHeight"
"4036splitHere46","4438386splitHere46","public class Foo {<newline46mondego><newline46mondego>  static String a;<newline46mondego><newline46mondego>  static {<newline46mondego>    a = <doubleQuotes46>foo<doubleQuotes46>;<newline46mondego>  }<newline46mondego><newline46mondego>  static String b = a;<newline46mondego><newline46mondego>  static {<newline46mondego>    System.println(b);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"4037splitHere46","4438441splitHere46","int supported_interaction_modes=this.getInteractionModes();<newline46mondego>boolean horizontal__interaction,vertical_interaction;<newline46mondego>if((supported_interaction_modes&CustomItem.TRAVERSE_HORIZONTAL)!=0)        //Horizontal traverse support<newline46mondego>  horizontal_interaction=true;<newline46mondego>else<newline46mondego>  horizontal_interaction=false;<newline46mondego>if((supported_interaction_modes&CustomItem.TRAVERSE_VERTICAL)!=0)<newline46mondego>  vertical_interaction=true;        <newline46mondego>else<newline46mondego>  vertical_interaction=false;<newline46mondego>"
"4038splitHere46","4438495splitHere46","project properties -> libraries -> select hibernate JAR -> click Edit -> browse to Javadocs and Source"
"4039splitHere46","4438956splitHere46","\\((\\d+)\\)<newline46mondego>"
"4040splitHere46","4438956splitHere46","^"
"4041splitHere46","4438956splitHere46","$"
"4042splitHere46","4438956splitHere46",".*"
"4043splitHere46","4438956splitHere46","String[] str  = new String[]{<doubleQuotes46>0:ADD(10)<doubleQuotes46>,<doubleQuotes46>1:ADD(20)<doubleQuotes46>};<newline46mondego>        Pattern pattern = Pattern.compile(<doubleQuotes46>^.*\\((\\d+)\\).*$<doubleQuotes46>);<newline46mondego>        for (int i = 0; i < str.length; i++)<newline46mondego>        {<newline46mondego>            Matcher m = pattern.matcher(str[i]);<newline46mondego>            System.out.println(m.matches());<newline46mondego>            System.out.println(m.group(1));<newline46mondego>        }<newline46mondego>"
"4044splitHere46","4439079splitHere46","// Tell the media scanner about the new file so that it is<newline46mondego>// immediately available to the user.<newline46mondego>MediaScannerConnection.scanFile(this,<newline46mondego>    new String[] { filename }, null,<newline46mondego>    new MediaScannerConnection.OnScanCompletedListener() {<newline46mondego>    public void onScanCompleted(String path, Uri uri) {<newline46mondego>    Log.i(<doubleQuotes46>ExternalStorage<doubleQuotes46>, <doubleQuotes46>Scanned <doubleQuotes46> + path + <doubleQuotes46>:<doubleQuotes46>);<newline46mondego>        Log.i(<doubleQuotes46>ExternalStorage<doubleQuotes46>, <doubleQuotes46>-> uri=<doubleQuotes46> + uri);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4045splitHere46","4439108splitHere46","UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = <doubleQuotes46>PAUSED<doubleQuotes46><newline46mondego>"
"4046splitHere46","4439195splitHere46","int supported_interaction_modes=this.getInteractionModes();<newline46mondego>boolean horizontal_interaction,vertical_interaction;<newline46mondego><newline46mondego>if((supported_interaction_modes&CustomItem.TRAVERSE_HORIZONTAL)!=0)<newline46mondego>  horizontal_interaction=true;<newline46mondego>else<newline46mondego>  horizontal_interaction=false;<newline46mondego><newline46mondego>if((supported_interaction_modes&CustomItem.TRAVERSE_VERTICAL)!=0)<newline46mondego>  vertical_interaction=true;<newline46mondego>else<newline46mondego>  vertical_interaction=false;<newline46mondego>"
"4047splitHere46","4439202splitHere46","if"
"4048splitHere46","4439202splitHere46","else if"
"4049splitHere46","4439202splitHere46","do<newline46mondego>{<newline46mondego>    if (...)<newline46mondego>        break;<newline46mondego>    ...<newline46mondego>} while (false);<newline46mondego>"
"4050splitHere46","4439213splitHere46","general_action_id<newline46mondego>user_id<newline46mondego>action_x_id<newline46mondego>action_y_id<newline46mondego>"
"4051splitHere46","4439330splitHere46","const unsigned char aa = *buffer & 0x07;<newline46mondego>const bool ab          = (*buffer & 0x08) != 0;<newline46mondego>const unsigned char ba = (*buffer & 0x70) >> 4;<newline46mondego>const bool bb          = (*buffer & 0x80) != 0;<newline46mondego>"
"4052splitHere46","4439517splitHere46","java.awt.*"
"4053splitHere46","4439517splitHere46","java.swing.*"
"4054splitHere46","4439517splitHere46","java -Djava.awt.headless=true"
"4055splitHere46","4439517splitHere46","System.setProperty(<doubleQuotes46>java.awt.headless<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);"
"4056splitHere46","4439517splitHere46","java.awt.headless"
"4057splitHere46","4439656splitHere46","PATH=$PATH:/home/user/path/to/executable<newline46mondego>"
"4058splitHere46","4439827splitHere46","BigInteger"
"4059splitHere46","4439827splitHere46","int"
"4060splitHere46","4439827splitHere46","long"
"4061splitHere46","4439827splitHere46","BigX"
"4062splitHere46","4439925splitHere46","OOP"
"4063splitHere46","4439969splitHere46",".action"
"4064splitHere46","4439969splitHere46","# Example .htaccess<newline46mondego>#<newline46mondego># Please make sure 8009 is the port number of your Java EE server<newline46mondego>RewriteEngine On<newline46mondego>RewriteBase /<newline46mondego><newline46mondego>RewriteRule ^(.*\.action)$ ajp://127.0.0.1:8009/$1 [P,QSA,L]<newline46mondego>"
"4065splitHere46","4439969splitHere46","LoadModule proxy_module modules/mod_proxy.so<newline46mondego>LoadModule proxy_ajp_module modules/mod_proxy_ajp.so<newline46mondego>LoadModule proxy_balancer_module modules/mod_proxy_balancer.so<newline46mondego>LoadModule proxy_http_module modules/mod_proxy_http.so<newline46mondego>LoadModule rewrite_module modules/mod_rewrite.so<newline46mondego>"
"4066splitHere46","4440037splitHere46","Thread.setPriority(int newPriority)"
"4067splitHere46","4440037splitHere46","java.security.MessageDigest"
"4068splitHere46","4440067splitHere46","xstream.alias(<doubleQuotes46>shows<doubleQuotes46>, Shows.class);<newline46mondego>xstream.alias(<doubleQuotes46>show<doubleQuotes46>, String.class);<newline46mondego>"
"4069splitHere46","4440067splitHere46","Shows.shows"
"4070splitHere46","4440067splitHere46","xstream.addImplicitCollection(Shows.class, <doubleQuotes46>shows<doubleQuotes46>);"
"4071splitHere46","4440237splitHere46","\n"
"4072splitHere46","4440237splitHere46","&lt;p&gt;"
"4073splitHere46","4440237splitHere46","swing"
"4074splitHere46","4440324splitHere46","<RepOpParam, Object>"
"4075splitHere46","4440324splitHere46","OperationParam"
"4076splitHere46","4440324splitHere46","RepOpParam"
"4077splitHere46","4440324splitHere46","RepOpParam"
"4078splitHere46","4440324splitHere46","public interface RepOpParam<Value> {<newline46mondego>    public Value getValue(Map<RepOpParam, Object> parameters);<newline46mondego>}<newline46mondego>"
"4079splitHere46","4440324splitHere46","String myName = (String) params.get(ParamName.NAME1);<newline46mondego>"
"4080splitHere46","4440324splitHere46","String myName = ParamName.NAME1.getValue(params);<newline46mondego>"
"4081splitHere46","4440344splitHere46","bodyparts=new Vector();<newline46mondego>  String body = <doubleQuotes46><br />testtestest<br />fefefefefefefefefef<br />qqqqqqqqqqqq<doubleQuotes46>;<newline46mondego><newline46mondego>  int previousIndex=0;<newline46mondego>  while(body.indexOf(<doubleQuotes46><br /><doubleQuotes46>,previousIndex)!=-1) {<newline46mondego>    int index=body.indexOf(<doubleQuotes46><br /><doubleQuotes46>,previousIndex);<newline46mondego>    System.out.println(body.substring(previousIndex, index));<newline46mondego>    bodyparts.addElement(body.substring(previousIndex, index));<newline46mondego>    previousIndex=index+(<doubleQuotes46><br /><doubleQuotes46>.size());<newline46mondego>  }<newline46mondego>"
"4082splitHere46","4440482splitHere46","String query = <doubleQuotes46>insert into user(user_id, username, age, creation_ts) values(?,?,?,?)<doubleQuotes46>;<newline46mondego>PreparedStatement pstmt = conn.prepareStatement(query);<newline46mondego>... //fill in all your parameters<newline46mondego>pstmt.setTimestamp(4, new Timestamp(System.currentTimeMillis()) );<newline46mondego>... //execute here<newline46mondego>"
"4083splitHere46","4440608splitHere46","SAXParser"
"4084splitHere46","4440608splitHere46","ELEMENT_NODE"
"4085splitHere46","4440608splitHere46","Vector<Node>"
"4086splitHere46","4440608splitHere46","public void traverseNodes(Node node, Vector<Node> nodeList)<newline46mondego>{<newline46mondego>    if(node.getNodeType() == Node.ELEMENT_NODE)<newline46mondego>    {<newline46mondego>        nodeList.add(node);<newline46mondego>        if(node.getChildNodes().getLength() >= 1)<newline46mondego>        {<newline46mondego>            NodeList childNodeList = node.getChildNodes();<newline46mondego>            for(int nodeIndex = 1;nodeIndex < childNodeList.getLength(); nodeIndex++)<newline46mondego>            {<newline46mondego>                traverseNodes(childNodeList.item(nodeIndex),nodeList);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4087splitHere46","4440992splitHere46","J2SE 6.0 = 50 (0x32 hex)<newline46mondego>J2SE 5.0 = 49 (0x31 hex)<newline46mondego>JDK 1.4 = 48 (0x30 hex)<newline46mondego>JDK 1.3 = 47 (0x2F hex)<newline46mondego>JDK 1.2 = 46 (0x2E hex)<newline46mondego>JDK 1.1 = 45 (0x2D hex)<newline46mondego>"
"4088splitHere46","4441118splitHere46","int[] x = { 0, 0, 0 };<newline46mondego>int[] y = new int[3];<newline46mondego>"
"4089splitHere46","4441118splitHere46","length"
"4090splitHere46","4441216splitHere46","robots.txt"
"4091splitHere46","4441216splitHere46","robots.txt"
"4092splitHere46","4441216splitHere46","robots.txt"
"4093splitHere46","4441497splitHere46","setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);<newline46mondego>"
"4094splitHere46","4441497splitHere46","JFrame"
"4095splitHere46","4441497splitHere46","windowClosing()"
"4096splitHere46","4441497splitHere46","System.exit(1);<newline46mondego>"
"4097splitHere46","4441636splitHere46","public class Student implements Comparable<Student> {<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"4098splitHere46","4441799splitHere46","public void fillMap(HashMap<String, Object> map, Object bean) {<newline46mondego>    try {<newline46mondego>        BeanInfo info = Introspector.getBeanInfo(bean.getClass());<newline46mondego>        PropertyDescriptor[] props = info.getPropertyDescriptors();<newline46mondego>        for (int i = 0; i < props.length; i++) {<newline46mondego>            Method reader = props[i].getReadMethod();<newline46mondego>            if (reader != null && !props[i].getName().equals(<doubleQuotes46>class<doubleQuotes46>)) {<newline46mondego>                Object invoke = reader.invoke(bean, new Object[] {});<newline46mondego>                if (invoke != null) {<newline46mondego>                    if (!reader.getReturnType().isPrimitive()) {<newline46mondego>                        fillMap(map, invoke);<newline46mondego>                    } else {<newline46mondego>                        map.put(props[i].getName(), invoke);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    } catch (Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4099splitHere46","4441848splitHere46","codebase"
"4100splitHere46","4441901splitHere46","public long getDbgroupId() {<newline46mondego>    return dbgroupid;<newline46mondego>}<newline46mondego>"
"4101splitHere46","4442169splitHere46","public int hashCode() {<newline46mondego>    return a * 13 + b.hashCode() * 23 + (c? 31: 7);<newline46mondego>}<newline46mondego>"
"4102splitHere46","4442169splitHere46","hashCode()"
"4103splitHere46","4442169splitHere46","Object"
"4104splitHere46","4442586splitHere46","String resultString = subjectString.replaceAll(<doubleQuotes46>^\\s*\\w+\\s*<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4105splitHere46","4442740splitHere46","trim()"
"4106splitHere46","4442740splitHere46","trim()"
"4107splitHere46","4442740splitHere46","trim()"
"4108splitHere46","4442740splitHere46","s = s.replaceAll(<doubleQuotes46>\\s+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4109splitHere46","4442826splitHere46","org.apache.hama.zookeeper.QuorumPeer"
"4110splitHere46","4443098splitHere46","Producer()<newline46mondego>{<newline46mondego>   if (buffer.hasemptyspaces())<newline46mondego>   {<newline46mondego>      produce(buffer);<newline46mondego>   }<newline46mondego>   else<newline46mondego>   {<newline46mondego>      sleep(n);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>Consumer()<newline46mondego>{<newline46mondego>   if (buffer.hasfullspaces())<newline46mondego>   {<newline46mondego>      consume(buffer);<newline46mondego>   }<newline46mondego>   else<newline46mondego>   {<newline46mondego>      sleep(n);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4111splitHere46","4443142splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> standalone=<doubleQuotes46>no<doubleQuotes46>?><newline46mondego><project default=<doubleQuotes46>pack<doubleQuotes46>><newline46mondego>    <target name=<doubleQuotes46>pack<doubleQuotes46>><newline46mondego>        <jar destfile=<doubleQuotes46>myprog.jar<doubleQuotes46>><newline46mondego>            <manifest><newline46mondego>                <attribute name=<doubleQuotes46>Main-Class<doubleQuotes46> value=<doubleQuotes46>com.example.myapp.Main<doubleQuotes46> /><newline46mondego>                <attribute name=<doubleQuotes46>Class-Path<doubleQuotes46> value=<doubleQuotes46>.<doubleQuotes46>/><newline46mondego>            </manifest><newline46mondego>            <fileset dir=<doubleQuotes46>bin<doubleQuotes46> defaultexcludes=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>                <include name=<doubleQuotes46>**/*.class<doubleQuotes46> /><newline46mondego>            </fileset><newline46mondego>        </jar><newline46mondego>        <zip destfile=<doubleQuotes46>package.zip<doubleQuotes46>><newline46mondego>            <fileset dir=<doubleQuotes46>.<doubleQuotes46>><newline46mondego>                <include name=<doubleQuotes46>myprog.jar<doubleQuotes46> /><newline46mondego>                <include name=<doubleQuotes46>myprog.properties<doubleQuotes46> /><newline46mondego>                <include name=<doubleQuotes46>myprog.xls<doubleQuotes46> /><newline46mondego>            </fileset><newline46mondego>        </zip><newline46mondego>    </target><newline46mondego></project><newline46mondego>"
"4112splitHere46","4443303splitHere46","String.getBytes(String charsetname)"
"4113splitHere46","4443353splitHere46","FacesContext#getMessages(String clientId)"
"4114splitHere46","4443353splitHere46","public boolean hasMessages(String clientId) {<newline46mondego>    return FacesContext.getCurrentInstance().getMessages(clientId).hasNext();<newline46mondego>}<newline46mondego>"
"4115splitHere46","4443353splitHere46","<h:graphicImage rendered=<doubleQuotes46>#{bean.hasMessages('form:firstName')}<doubleQuotes46> /><newline46mondego>"
"4116splitHere46","4443353splitHere46","<s:message errorClass=<doubleQuotes46>message error<doubleQuotes46> /><newline46mondego>"
"4117splitHere46","4443353splitHere46",".message.error {<newline46mondego>    background: url('error.png') no-repeat left center;<newline46mondego>    padding-left: 15px;<newline46mondego>}<newline46mondego>"
"4118splitHere46","4443490splitHere46","class Container{<newline46mondego><newline46mondego>  //eventually provides setters and getters<newline46mondego>  public float x;<newline46mondego>  public float y;<newline46mondego>  //------------<newline46mondego><newline46mondego>  private static Container instance = null;<newline46mondego>  private void Container(){<newline46mondego><newline46mondego>  }<newline46mondego>  public static Container getInstance(){<newline46mondego>    if(!instance){<newline46mondego>       instance = new Container();<newline46mondego>      }<newline46mondego>      return instance;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4119splitHere46","4443490splitHere46","Container.getInstance().x = 3;<newline46mondego>temp = Container.getInstance().x;<newline46mondego>"
"4120splitHere46","4443584splitHere46","String s = <doubleQuotes46>file is not there from for this time for this test<doubleQuotes46>;<newline46mondego>String[] splits = s.split(<doubleQuotes46>file|from|for<doubleQuotes46>);<newline46mondego>"
"4121splitHere46","4443705splitHere46","javax.swing.event.ChangeListener"
"4122splitHere46","4443715splitHere46","BCrypt.hashpw(password_from_user, BCrypt.gensalt());<newline46mondego>"
"4123splitHere46","4443715splitHere46","BCrypt.checkpw(password_from_user, hashed_password_from_database)<newline46mondego>"
"4124splitHere46","4443746splitHere46","h2.jar"
"4125splitHere46","4443746splitHere46","lib"
"4126splitHere46","4443746splitHere46","Class-Path"
"4127splitHere46","4443746splitHere46","Class-Path: lib/h2.jar lib/â€¦<newline46mondego>"
"4128splitHere46","4443906splitHere46","{ <doubleQuotes46>hello<doubleQuotes46>, <doubleQuotes46>world<doubleQuotes46> }"
"4129splitHere46","4443906splitHere46","new String[] { ... }"
"4130splitHere46","4443982splitHere46","// -- uses commons-io<newline46mondego>String fileAsString = FileUtils.readFileToString( new File( <doubleQuotes46>file-name-here<doubleQuotes46> ) );<newline46mondego>boolean isTextualFile = fileAsString.matches( <doubleQuotes46>.*\\p{ASCII}+.*<doubleQuotes46> );<newline46mondego>"
"4131splitHere46","4443982splitHere46","<doubleQuotes46>.*(?:\\p{Print}|\\p{Space})+.*<doubleQuotes46><newline46mondego>"
"4132splitHere46","4444198splitHere46","public class MySingleton{<newline46mondego><newline46mondego>   private MySingleton(){<newline46mondego><newline46mondego>   }<newline46mondego><newline46mondego>   public static MySingleton getInstance(){<newline46mondego>       return SingletonCreator.INSTANCE;<newline46mondego>   }<newline46mondego><newline46mondego>   private static class SingletonCreator{<newline46mondego>     private static final MySingleton INSTNACE = new MySingleton();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4133splitHere46","4444386splitHere46","bindService(bindIntent, mConnection, Context.BIND_AUTO_CREATE);<newline46mondego>  mIsBound = true; <newline46mondego>"
"4134splitHere46","4444397splitHere46","StringUtils.split(string, separator, max)"
"4135splitHere46","4444397splitHere46","ArrayUtils.addAll(result, emptyArray)"
"4136splitHere46","4444397splitHere46","emptyArray"
"4137splitHere46","4444397splitHere46","max - result.length"
"4138splitHere46","4444458splitHere46","#FileLock<newline46mondego>#Tue Dec 14 22:29:22 CET 2010<newline46mondego>id=12ce6c9a16a912077e514cc6fff231e91b09d2dbe43<newline46mondego>method=file<newline46mondego>server=192.168.0.126\:52068<newline46mondego>"
"4139splitHere46","4444520splitHere46","/(.*?(?::[A-Z\d]{3}-[A-Z\d]{5}-[A-Z\d]{2}){2,})/<newline46mondego>"
"4140splitHere46","4444520splitHere46","split(':', 3)"
"4141splitHere46","4444520splitHere46","split(':')"
"4142splitHere46","4444520splitHere46","/(.*?):([A-Z\d]{3}-[A-Z\d]{5}-[A-Z\d]{2})((?::[A-Z\d]{3}-[A-Z\d]{5}-[A-Z\d]{2})+)/<newline46mondego>"
"4143splitHere46","4444520splitHere46","/(.*?):([A-Z\d]{3}-[A-Z\d]{5}-[A-Z\d]{2}):([A-Z\d]{3}-[A-Z\d]{5}-[A-Z\d]{2}(?::[A-Z\d]{3}-[A-Z\d]{5}-[A-Z\d]{2})*)/<newline46mondego>"
"4144splitHere46","4444548splitHere46","DateFormat myDateFormat = new SimpleDateFormat(<doubleQuotes46>hh:mm:ss<doubleQuotes46>);<newline46mondego>objectMapper.getSerializationConfig().setDateFormat(myDateFormat);<newline46mondego>objectMapper.getDeserializationConfig().setDateFormat(myDateFormat); <newline46mondego>"
"4145splitHere46","4444663splitHere46","<ivy:retrieve pattern=<doubleQuotes46>ivyLib/[artifact](.[ext])<doubleQuotes46> conf=<doubleQuotes46>default<doubleQuotes46> /><newline46mondego>"
"4146splitHere46","4444663splitHere46","ivyLib/Foo"
"4147splitHere46","4444663splitHere46","ivyLib/Foo.jar"
"4148splitHere46","4444677splitHere46","import java.io.*;<newline46mondego>import java.awt.event.*;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.text.*;<newline46mondego><newline46mondego>public class Console implements Runnable<newline46mondego>{<newline46mondego>    JTextArea displayPane;<newline46mondego>    BufferedReader reader;<newline46mondego><newline46mondego>    private Console(JTextArea displayPane, PipedOutputStream pos)<newline46mondego>    {<newline46mondego>        this.displayPane = displayPane;<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego>            PipedInputStream pis = new PipedInputStream( pos );<newline46mondego>            reader = new BufferedReader( new InputStreamReader(pis) );<newline46mondego>        }<newline46mondego>        catch(IOException e) {}<newline46mondego>    }<newline46mondego><newline46mondego>    public void run()<newline46mondego>    {<newline46mondego>        String line = null;<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego>            while ((line = reader.readLine()) != null)<newline46mondego>            {<newline46mondego>//              displayPane.replaceSelection( line + <doubleQuotes46>\n<doubleQuotes46> );<newline46mondego>                displayPane.append( line + <doubleQuotes46>\n<doubleQuotes46> );<newline46mondego>                displayPane.setCaretPosition( displayPane.getDocument().getLength() );<newline46mondego>            }<newline46mondego><newline46mondego>            System.err.println(<doubleQuotes46>im here<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        catch (IOException ioe)<newline46mondego>        {<newline46mondego>            JOptionPane.showMessageDialog(null,<newline46mondego>                <doubleQuotes46>Error redirecting output : <doubleQuotes46>+ioe.getMessage());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void redirectOutput(JTextArea displayPane)<newline46mondego>    {<newline46mondego>        Console.redirectOut(displayPane);<newline46mondego>        Console.redirectErr(displayPane);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void redirectOut(JTextArea displayPane)<newline46mondego>    {<newline46mondego>        PipedOutputStream pos = new PipedOutputStream();<newline46mondego>        System.setOut( new PrintStream(pos, true) );<newline46mondego><newline46mondego>        Console console = new Console(displayPane, pos);<newline46mondego>        new Thread(console).start();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void redirectErr(JTextArea displayPane)<newline46mondego>    {<newline46mondego>        PipedOutputStream pos = new PipedOutputStream();<newline46mondego>        System.setErr( new PrintStream(pos, true) );<newline46mondego><newline46mondego>        Console console = new Console(displayPane, pos);<newline46mondego>        new Thread(console).start();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        JTextArea textArea = new JTextArea();<newline46mondego>        JScrollPane scrollPane = new JScrollPane( textArea );<newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Redirect Output<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );<newline46mondego>        frame.getContentPane().add( scrollPane );<newline46mondego>        frame.setSize(200, 100);<newline46mondego>        frame.setVisible(true);<newline46mondego><newline46mondego>        Console.redirectOutput( textArea );<newline46mondego>        final int i = 0;<newline46mondego><newline46mondego>        Timer timer = new Timer(1000, new ActionListener()<newline46mondego>        {<newline46mondego>            public void actionPerformed(ActionEvent e)<newline46mondego>            {<newline46mondego>                System.out.println( new java.util.Date().toString() );<newline46mondego>                System.err.println( System.currentTimeMillis() );<newline46mondego>            }<newline46mondego>        });<newline46mondego>        timer.start();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4149splitHere46","4444892splitHere46","Class<T>"
"4150splitHere46","4444892splitHere46","T"
"4151splitHere46","4445041splitHere46","Run > Run Configurations > Your Main > Arguments > VM Arguments"
"4152splitHere46","4445041splitHere46","-Xbootclasspath/p:newjava3d.jar"
"4153splitHere46","4445085splitHere46","static int add(int a, int b)<newline46mondego>{<newline46mondego>    return a + b;<newline46mondego>}<newline46mondego>"
"4154splitHere46","4445235splitHere46","<project><newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>     <plugin><newline46mondego>       <groupId>org.apache.maven.plugins</groupId><newline46mondego>       <artifactId>maven-jar-plugin</artifactId><newline46mondego>       <version>2.2</version><newline46mondego>       <executions><newline46mondego>         <execution><newline46mondego>           <goals><newline46mondego>             <goal>test-jar</goal><newline46mondego>           </goals><newline46mondego>         </execution><newline46mondego>       </executions><newline46mondego>     </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego></project><newline46mondego>"
"4155splitHere46","4445235splitHere46","<dependency><newline46mondego>  <groupId>com.myco.app</groupId><newline46mondego>  <artifactId>foo</artifactId><newline46mondego>  <version>1.0-SNAPSHOT</version><newline46mondego>  <type>test-jar</type><newline46mondego>  <scope>test</scope><newline46mondego></dependency><newline46mondego>"
"4156splitHere46","4445290splitHere46","Vector<Entry> output = new Vector<Entry>();<newline46mondego>"
"4157splitHere46","4445290splitHere46","output = new Vector<Entry>();<newline46mondego>"
"4158splitHere46","4445290splitHere46","output.clear()"
"4159splitHere46","4445345splitHere46","byte[] hash(byte[] salt, int count, char[] password)"
"4160splitHere46","4445786splitHere46","BufferedInputStream.read()"
"4161splitHere46","4445786splitHere46","BufferedReader"
"4162splitHere46","4445786splitHere46","readLine"
"4163splitHere46","4445786splitHere46","readLine"
"4164splitHere46","4445786splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.IOException;   <newline46mondego>public class LineReader {   <newline46mondego>  private boolean doDiscardNl;<newline46mondego>  private BufferedReader br;<newline46mondego>  public LineReader(BufferedReader br) { this.br = br; }<newline46mondego>  public String readLine() throws IOException {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    int i;<newline46mondego>    while (0 <= (i = br.read())) {<newline46mondego>      if (i == '\n') {<newline46mondego>        if (doDiscardNl) {<newline46mondego>          doDiscardNl = false;  <newline46mondego>        } else {<newline46mondego>          sb.append((char)'\n');<newline46mondego>          break;<newline46mondego>        }<newline46mondego>      } else {<newline46mondego>        doDiscardNl = false;<newline46mondego>        sb.append((char)i);  <newline46mondego>        if (i == '\r') {<newline46mondego>          doDiscardNl = true;<newline46mondego>          break;<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>    return sb.toString();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4165splitHere46","4445786splitHere46","readLine"
"4166splitHere46","4445786splitHere46","readLine"
"4167splitHere46","4445786splitHere46",".jar"
"4168splitHere46","4445830splitHere46","svcutil.exe"
"4169splitHere46","4446193splitHere46","x = <doubleQuotes46>a<doubleQuotes46><newline46mondego><newline46mondego>y = <doubleQuotes46>a<doubleQuotes46><newline46mondego>temp = <doubleQuotes46>a<doubleQuotes46><newline46mondego>x = <doubleQuotes46>a<doubleQuotes46><newline46mondego>y = <doubleQuotes46>a<doubleQuotes46><newline46mondego>add(<doubleQuotes46>aa<doubleQuotes46>)<newline46mondego><newline46mondego>y = <doubleQuotes46>b<doubleQuotes46><newline46mondego>temp = <doubleQuotes46>a<doubleQuotes46><newline46mondego>x = <doubleQuotes46>b<doubleQuotes46><newline46mondego>y = <doubleQuotes46>a<doubleQuotes46><newline46mondego>add(<doubleQuotes46>ba<doubleQuotes46>)<newline46mondego><newline46mondego>x = <doubleQuotes46>b<doubleQuotes46><newline46mondego><newline46mondego>y = <doubleQuotes46>a<doubleQuotes46><newline46mondego>temp = <doubleQuotes46>b<doubleQuotes46><newline46mondego>x = <doubleQuotes46>a<doubleQuotes46><newline46mondego>y = <doubleQuotes46>b<doubleQuotes46><newline46mondego>add(<doubleQuotes46>ab<doubleQuotes46>)<newline46mondego><newline46mondego>y = <doubleQuotes46>b<doubleQuotes46><newline46mondego>temp = <doubleQuotes46>a<doubleQuotes46><newline46mondego>x = <doubleQuotes46>b<doubleQuotes46><newline46mondego>y = <doubleQuotes46>a<doubleQuotes46><newline46mondego>add(<doubleQuotes46>ba<doubleQuotes46>)<newline46mondego>"
"4170splitHere46","4446448splitHere46","public static void main(String[] args) {<newline46mondego>    String number1 = <doubleQuotes46>17<doubleQuotes46>;<newline46mondego>    String number2 = <doubleQuotes46>15<doubleQuotes46>;<newline46mondego><newline46mondego>    char[] n1 = number1.toCharArray();<newline46mondego>    char[] n2 = number2.toCharArray();<newline46mondego><newline46mondego>    int result = 0;<newline46mondego>    for (int i = 0; i < n1.length; i++) {<newline46mondego>        for (int j = 0; j < n2.length; j++) {<newline46mondego>            result += (n1[i] - '0') * (n2[j] - '0')<newline46mondego>                    * (int) Math.pow(10, n1.length * 2 - (i + j + 2));<newline46mondego>        }<newline46mondego>    }<newline46mondego>    System.out.println(result);<newline46mondego>}<newline46mondego>"
"4171splitHere46","4446540splitHere46","for (Tuteur tuteur in commune.tuteurs) {<newline46mondego>    tuteur.getCommunes().remove(commune);<newline46mondego>    entityManager.persist(tuteur);<newline46mondego>}<newline46mondego><newline46mondego>commune.getTuteurs().clear();<newline46mondego>entityManager.persist(commune);<newline46mondego>entityManager.remove(commune);<newline46mondego>"
"4172splitHere46","4446540splitHere46","Caused by: Exception [EclipseLink-45] (Eclipse Persistence Services - 2.0.1.v20100213-r6600): org.eclipse.persistence.exceptions.DescriptorException<newline46mondego>Exception Description: Missing mapping for field [Commune.id].<newline46mondego>Descriptor: RelationalDescriptor(entites.Commune --> [DatabaseTable(Commune)])<newline46mondego>"
"4173splitHere46","4446540splitHere46","@JoinTable"
"4174splitHere46","4446540splitHere46","referenceColumnName"
"4175splitHere46","4446540splitHere46","@Id"
"4176splitHere46","4446540splitHere46","@JoinTable"
"4177splitHere46","4446546splitHere46","public void instanceSync() {<newline46mondego>    synchronized( this ) {<newline46mondego>        System.out.println(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>        testList.add( 1 );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4178splitHere46","4446546splitHere46","public void classSync() {<newline46mondego>   synchronized( TestClass.class ) {<newline46mondego>       System.out.println(<doubleQuotes46>...<doubleQuotes46>);<newline46mondego>       testList.add( 1 );<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4179splitHere46","4446554splitHere46","main"
"4180splitHere46","4446554splitHere46","main"
"4181splitHere46","4446595splitHere46","Set<String> cases = new HashSet<String>();<newline46mondego>  cases.add( TAG_PLAY.toLowerCase() );<newline46mondego>  cases.add( TAG_PASSWORD.toLowerCase() );<newline46mondego><newline46mondego>  ...<newline46mondego>  if ( cases.contains( e.getActionCommand().toLowerCase() ) { <newline46mondego>  ...<newline46mondego>"
"4182splitHere46","4446644splitHere46","HibernateUtil"
"4183splitHere46","4446644splitHere46","SessionFactory"
"4184splitHere46","4446644splitHere46","public static"
"4185splitHere46","4446644splitHere46","Session"
"4186splitHere46","4446644splitHere46","HibernateUtil.getSessionFactory().getCurrentSession()"
"4187splitHere46","4446667splitHere46","equalsIgnoreCase"
"4188splitHere46","4446667splitHere46","if (myString.toUpperCase().equals(myOtherString.toUpperCase())) {<newline46mondego>"
"4189splitHere46","4446667splitHere46","if (myString.equalsIgnoreCase(myOtherString)) {<newline46mondego>"
"4190splitHere46","4446667splitHere46","equalsIgnoreCase"
"4191splitHere46","4447026splitHere46","LdapUtils.convertLdapException()"
"4192splitHere46","4447026splitHere46","773"
"4193splitHere46","4447091splitHere46","if (session.getAttribute(<doubleQuotes46>sessUserName<doubleQuotes46>) == null)<newline46mondego>"
"4194splitHere46","4447233splitHere46","RoleAssignment"
"4195splitHere46","4447233splitHere46","class RoleAssignment {<newline46mondego>  private User user; <newline46mondego>  private Branch branch;<newline46mondego>  private Role role;<newline46mondego>}<newline46mondego>"
"4196splitHere46","4447233splitHere46","User"
"4197splitHere46","4447233splitHere46","Branch"
"4198splitHere46","4447233splitHere46","Role"
"4199splitHere46","4447233splitHere46","RoleAssignment"
"4200splitHere46","4447233splitHere46","class User { <newline46mondego>  private Set<RoleAssignment> roleAssignemnts;<newline46mondego>}<newline46mondego>"
"4201splitHere46","4447283splitHere46","private static String   className   = LogWriter.class.getName() + <doubleQuotes46>.<doubleQuotes46>;<newline46mondego><newline46mondego>static<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        appLogger = Logger.getLogger(<doubleQuotes46>Demologer<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    catch (Exception e)<newline46mondego>    {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>  public static void logDebug(String message)<newline46mondego>{<newline46mondego>    appLogger.log(className, Level.DEBUG, LogWriter.getMessage(message), null);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public static void logInfo(String message)<newline46mondego>{<newline46mondego>    appLogger.log(className, Level.INFO, LogWriter.getMessage(message), null);<newline46mondego>}<newline46mondego><newline46mondego>public static void logError(String message)<newline46mondego>{<newline46mondego>    appLogger.log(className, Level.ERROR, LogWriter.getMessage(message), null);<newline46mondego>}<newline46mondego>"
"4202splitHere46","4447283splitHere46","Calendar cale = Calendar.getInstance();<newline46mondego>    Date now = cale.getTime();<newline46mondego><newline46mondego>    //retValue=now.getDate()+<doubleQuotes46>/<doubleQuotes46>+(now.getMonth()+1)+<doubleQuotes46>/<doubleQuotes46>+(now.getYear()+1900)+<doubleQuotes46>  <doubleQuotes46>+now.getHours()+<doubleQuotes46>:<doubleQuotes46>+now.getMinutes()+<doubleQuotes46>:<doubleQuotes46>+now.getSeconds();<newline46mondego>    retValue = now + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego><newline46mondego>    now = null;<newline46mondego>    cale = null;<newline46mondego><newline46mondego>    return retValue + message;<newline46mondego>}<newline46mondego>"
"4203splitHere46","4447336splitHere46","WEB-INF/lib"
"4204splitHere46","4447602splitHere46","int[] shuffle = // an array containing a permutation of [0..19]<newline46mondego>    int[][] z = new int[20][];<newline46mondego>    for (int i = 0; i < 20; i++) {<newline46mondego>        int[] vy = y[i];<newline46mondego>        int[] vz = new int[3];<newline46mondego>        for (int j = 0; j < 3; j++) {<newline46mondego>            vz[j] = shuffle[vy[j]];<newline46mondego>        }<newline46mondego>        z[shuffle[i]] = vz;<newline46mondego>    }<newline46mondego>"
"4205splitHere46","4447724splitHere46","return new LinkedList(new LinkedHashSet(list1).retainAll(list2));<newline46mondego>"
"4206splitHere46","4447724splitHere46","list1"
"4207splitHere46","4447830splitHere46","java.beans"
"4208splitHere46","4447830splitHere46","java.beans.Introspector.getBeanInfo(Class)"
"4209splitHere46","4447947splitHere46","Base b2<newline46mondego>"
"4210splitHere46","4447947splitHere46","b2"
"4211splitHere46","4447947splitHere46","Base"
"4212splitHere46","4447947splitHere46","Base"
"4213splitHere46","4447947splitHere46","Base"
"4214splitHere46","4447947splitHere46","new Child()<newline46mondego>"
"4215splitHere46","4447947splitHere46","Child"
"4216splitHere46","4447947splitHere46","Child"
"4217splitHere46","4447947splitHere46","Base"
"4218splitHere46","4447947splitHere46","b2"
"4219splitHere46","4447947splitHere46","Base"
"4220splitHere46","4447947splitHere46","b2"
"4221splitHere46","4447947splitHere46","Child"
"4222splitHere46","4447947splitHere46","Base"
"4223splitHere46","4447947splitHere46","Child"
"4224splitHere46","4447947splitHere46","b2.subtract();<newline46mondego>"
"4225splitHere46","4447947splitHere46","b2"
"4226splitHere46","4447947splitHere46","subtract"
"4227splitHere46","4447947splitHere46","List<String> strings = new ArrayList<String>();<newline46mondego>"
"4228splitHere46","4447947splitHere46","ArrayList<T>"
"4229splitHere46","4447947splitHere46","List<T>"
"4230splitHere46","4447947splitHere46","List<T>"
"4231splitHere46","4447947splitHere46","ArrayList<T>"
"4232splitHere46","4448057splitHere46","Runtime.getRuntime()"
"4233splitHere46","4448157splitHere46","public int size() {<newline46mondego>    return size;<newline46mondego>}<newline46mondego>"
"4234splitHere46","4448157splitHere46","for(int i=0;i<list.size;i++)<newline46mondego>// ...<newline46mondego>"
"4235splitHere46","4448157splitHere46","public boolean add(E e) {<newline46mondego>    ensureCapacity(size + 1);  // Increments modCount!!<newline46mondego>    elementData[size++] = e;<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"4236splitHere46","4448178splitHere46","public class DiagramMaker {<newline46mondego>    private final int[] data;<newline46mondego>    private final char[] filler;<newline46mondego>    private final int maxHeight;<newline46mondego>    private final int columnWidth;<newline46mondego>    private final int spacing;<newline46mondego><newline46mondego>    private int[] colHeights;<newline46mondego><newline46mondego>    public DiagramMaker(int[] data, char[] filler, int maxHeight, int columnWidth, int spacing) {<newline46mondego>        this.data = data;<newline46mondego>        this.filler = filler;<newline46mondego>        this.maxHeight = maxHeight;<newline46mondego>        this.columnWidth = columnWidth;<newline46mondego>        this.spacing = spacing;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>        Primary method for writing the chart to StringBuffer<newline46mondego>    */<newline46mondego>    public render(StringBuffer buffer) {<newline46mondego>    //Calculate the heights of all data columns scaled to our maxHeight<newline46mondego>        colHeights = DiagramMaker.getColumnHeights(data, maxHeight);<newline46mondego>    //Output all of our lines onto StringBuffer<newline46mondego>        for (int i=0;i<maxHeight;i++) {<newline46mondego>            printLine(buffer, i);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>        Method for printing 1 line of the chart<newline46mondego>    */<newline46mondego>    public void printLine(StringBuffer buffer, int lineNum) {<newline46mondego>    //Go through all columns<newline46mondego>        for (int i=0;i<colHeights.length;i++) {<newline46mondego>            //Check if current row can be seen on this line<newline46mondego>            if (colHeights[lineNum] >= maxHeight-lineNum) {<newline46mondego>                DiagramMaker.printColumnLine(buffer, filler[i], columnWidth);<newline46mondego>                //Should we draw the spacing<newline46mondego>                if (i < colHeights.length-1) {<newline46mondego>                    DiagramMaker.printColumnLine(buffer, ' ', spacing);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>/**<newline46mondego>    Method for filling the given character specified amount of times into StringBuffer. Used for drawing columns and spacers.<newline46mondego>*/<newline46mondego>    protected static void printColumnLine(StringBuffer buffer, char filler, int width) {<newline46mondego>        for (int i=0;i<width;i++) {<newline46mondego>            buffer.append(filler);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>        Calculates the maximal data value<newline46mondego>    */<newline46mondego>    protected static int getMaxData(int[] data) {<newline46mondego>        int maxData = 0;<newline46mondego>        for (int val : data) {<newline46mondego>            if (val > maxData) {<newline46mondego>                maxData = val;<newline46mondego>            }<newline46mondego>        }   <newline46mondego>        return maxData;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>        Gets the height of each column given max height and data<newline46mondego>    */<newline46mondego>    protected static int[] getColumnHeights(int[] data, int maxHeight) {<newline46mondego>        int maxData = getMaxData(data)<newline46mondego>        int[] heights = new int[data.length];<newline46mondego>        for (int i=0;i<data.length;i++) {<newline46mondego>            //Calculate the scale of this column<newline46mondego>            double scale = ((double)data[i])/maxData;<newline46mondego>            heights[i] = (int)(scale*data[i]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4237splitHere46","4448318splitHere46","c"
"4238splitHere46","4448318splitHere46","int"
"4239splitHere46","4448318splitHere46","rowArray[c]"
"4240splitHere46","4448318splitHere46","for (int[] row : imgMap) {<newline46mondego>    String[] rowArray = mapBR.readLine().split(<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>    for (int c = 0; c < row.length; c++) {<newline46mondego>        row[c] = Integer.parseInt(rowArray[c]);            <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4241splitHere46","4448318splitHere46","r"
"4242splitHere46","4448318splitHere46","imgMap[r]"
"4243splitHere46","4448318splitHere46","for (int[] row : imgMap) {<newline46mondego>    for (int value : row) {<newline46mondego>        System.out.print(<doubleQuotes46> <doubleQuotes46> + value);<newline46mondego>    }<newline46mondego>    System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4244splitHere46","4448435splitHere46","HashSet<Character>"
"4245splitHere46","4448435splitHere46","HashSet<Character> h1 = new HashSet<Character>(), h2 = new HashSet<Character>();<newline46mondego>for(int i = 0; i < s1.length(); i++)                                            <newline46mondego>{<newline46mondego>  h1.add(s1.charAt(i));<newline46mondego>}<newline46mondego>for(int i = 0; i < s2.length(); i++)<newline46mondego>{<newline46mondego>  h2.add(s2.charAt(i));<newline46mondego>}<newline46mondego>h1.retainAll(h2);<newline46mondego>Character[] res = h1.toArray(new Character[0]);<newline46mondego>"
"4246splitHere46","4448435splitHere46","O(m + n)"
"4247splitHere46","4448525splitHere46","lblarray[i].setText(<doubleQuotes46><doubleQuotes46>+tarningar[i]);<newline46mondego>"
"4248splitHere46","4448569splitHere46","Thread.UncaughtExceptionHandler"
"4249splitHere46","4448569splitHere46","public void handle(Throwable thrown);<newline46mondego>"
"4250splitHere46","4448569splitHere46","MyExceptionHandler"
"4251splitHere46","4448569splitHere46","EventDispatchThread"
"4252splitHere46","4448569splitHere46","java.awt"
"4253splitHere46","4448569splitHere46","handleException()"
"4254splitHere46","4448569splitHere46","/**<newline46mondego> * Handles an exception thrown in the event-dispatch thread.<newline46mondego> *<newline46mondego> * <p> If the system property <doubleQuotes46>sun.awt.exception.handler<doubleQuotes46> is defined, then<newline46mondego> * when this method is invoked it will attempt to do the following:<newline46mondego> *<newline46mondego> * <ol><newline46mondego> * <li> Load the class named by the value of that property, using the<newline46mondego> *      current thread's context class loader,<newline46mondego> * <li> Instantiate that class using its zero-argument constructor,<newline46mondego> * <li> Find the resulting handler object's <tt>public void handle</tt><newline46mondego> *      method, which should take a single argument of type<newline46mondego> *      <tt>Throwable</tt>, and<newline46mondego> * <li> Invoke the handler's <tt>handle</tt> method, passing it the<newline46mondego> *      <tt>thrown</tt> argument that was passed to this method.<newline46mondego> * </ol><newline46mondego> *<newline46mondego> * If any of the first three steps fail then this method will return<newline46mondego> * <tt>false</tt> and all following invocations of this method will return<newline46mondego> * <tt>false</tt> immediately.  An exception thrown by the handler object's<newline46mondego> * <tt>handle</tt> will be caught, and will cause this method to return<newline46mondego> * <tt>false</tt>.  If the handler's <tt>handle</tt> method is successfully<newline46mondego> * invoked, then this method will return <tt>true</tt>.  This method will<newline46mondego> * never throw any sort of exception.<newline46mondego> *<newline46mondego> * <p> <i>Note:</i> This method is a temporary hack to work around the<newline46mondego> * absence of a real API that provides the ability to replace the<newline46mondego> * event-dispatch thread.  The magic <doubleQuotes46>sun.awt.exception.handler<doubleQuotes46> property<newline46mondego> * <i>will be removed</i> in a future release.<newline46mondego> */<newline46mondego>"
"4255splitHere46","4448569splitHere46","import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class Test {<newline46mondego>  public static class ExceptionHandler<newline46mondego>                                   implements Thread.UncaughtExceptionHandler {<newline46mondego><newline46mondego>    public void handle(Throwable thrown) {<newline46mondego>      // for EDT exceptions<newline46mondego>      handleException(Thread.currentThread().getName(), thrown);<newline46mondego>    }<newline46mondego><newline46mondego>    public void uncaughtException(Thread thread, Throwable thrown) {<newline46mondego>      // for other uncaught exceptions<newline46mondego>      handleException(thread.getName(), thrown);<newline46mondego>    }<newline46mondego><newline46mondego>    protected void handleException(String tname, Throwable thrown) {<newline46mondego>      System.err.println(<doubleQuotes46>Exception on <doubleQuotes46> + tname);<newline46mondego>      thrown.printStackTrace();<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    Thread.setDefaultUncaughtExceptionHandler(new ExceptionHandler());<newline46mondego>    System.setProperty(<doubleQuotes46>sun.awt.exception.handler<doubleQuotes46>,<newline46mondego>                       ExceptionHandler.class.getName());<newline46mondego><newline46mondego>    // cause an exception on the EDT<newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        ((Object) null).toString();        <newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    // cause an exception off the EDT<newline46mondego>    ((Object) null).toString();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4256splitHere46","4448727splitHere46","\p{L}+"
"4257splitHere46","4448729splitHere46","boolean flag = true;<newline46mondego>int first = tarningar[0];<newline46mondego>for(int i = 1; i < 5 && flag; i++)<newline46mondego>{<newline46mondego>  if (tarningar[i] != first) flag = false;<newline46mondego>}<newline46mondego>if (flag) System.out.println(<doubleQuotes46>ok<doubleQuotes46>);<newline46mondego>"
"4258splitHere46","4448837splitHere46","table = new JTable(tableModel);<newline46mondego>"
"4259splitHere46","4448837splitHere46","table.setModel(tableModel);<newline46mondego>"
"4260splitHere46","4449161splitHere46","long unsignedA = <newline46mondego>long unsignedB = <newline46mondego>boolean greater = unsignedA + Long.MIN_VALUE > unsignedB + Long.MIN_VALUE<newline46mondego>"
"4261splitHere46","4449161splitHere46","byte unsignedA = 0;<newline46mondego>unsignedA--; <newline46mondego>// unsignedA == FF, is this -1 or 255? Java assumes the former but you assume the later<newline46mondego><newline46mondego>byte unsignedB = unsignedA * unsignedA;<newline46mondego>// unsignedB is -1 * -1 = 1 or (byte) (255*255) = (byte) 65525 = 1.<newline46mondego>"
"4262splitHere46","4449253splitHere46","@ManyToOne<newline46mondego>@JoinTable(name = <doubleQuotes46>Addresses<doubleQuotes46>, joinColumns = {@JoinColumn(name=<doubleQuotes46>user_id<doubleQuotes46>, <newline46mondego>referencedColumnName = <doubleQuotes46>user_id<doubleQuotes46>) } )<newline46mondego>private Users user;<newline46mondego>"
"4263splitHere46","4449253splitHere46","@ManyToOne<newline46mondego>@JoinTable(name = <doubleQuotes46>Phone<doubleQuotes46>, joinColumns = {@JoinColumn(name=<doubleQuotes46>address_id<doubleQuotes46>, <newline46mondego>referencedColumnName = <doubleQuotes46>address_id<doubleQuotes46>) } )<newline46mondego>private Addresses address;<newline46mondego>"
"4264splitHere46","4449397splitHere46","public String[] list(FilenameFilter filter) {<newline46mondego>    String names[] = list();<newline46mondego>    if ((names == null) || (filter == null)) {<newline46mondego>        return names;<newline46mondego>    }<newline46mondego>    ArrayList v = new ArrayList();<newline46mondego>    for (int i = 0 ; i < names.length ; i++) {<newline46mondego>        if (filter.accept(this, names[i])) {<newline46mondego>            v.add(names[i]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return (String[])(v.toArray(new String[v.size()]));<newline46mondego>}<newline46mondego>"
"4265splitHere46","4449668splitHere46","key = {0}''s brush is {1} centimeters tall<newline46mondego>"
"4266splitHere46","4449742splitHere46","ServerAddress: http://example.com<newline46mondego>"
"4267splitHere46","4449742splitHere46","String url= MIDlet.getAppProperty(<doubleQuotes46>ServerAddress<doubleQuotes46>);  <newline46mondego>"
"4268splitHere46","4449742splitHere46","ServerAddress: http://mobilemaps.clients.google.com/glm/mmap<newline46mondego>"
"4269splitHere46","4449791splitHere46","@Test<newline46mondego>public void testEquals_Symmetric() {<newline46mondego>    Person x = new Person(<doubleQuotes46>Foo Bar<doubleQuotes46>);  // equals and hashCode check name field value<newline46mondego>    Person y = new Person(<doubleQuotes46>Foo Bar<doubleQuotes46>);<newline46mondego>    Assert.assertTrue(x.equals(y) && y.equals(x));<newline46mondego>    Assert.assertTrue(x.hashCode() == y.hashCode());<newline46mondego>}<newline46mondego>"
"4270splitHere46","4449998splitHere46","import java.lang.reflect.Array;<newline46mondego>import java.lang.reflect.Method;<newline46mondego>import java.lang.reflect.Modifier;<newline46mondego><newline46mondego>import net.sf.cglib.proxy.Enhancer;<newline46mondego>import net.sf.cglib.proxy.MethodInterceptor;<newline46mondego>import net.sf.cglib.proxy.MethodProxy;<newline46mondego><newline46mondego><newline46mondego>public class AbstractFactory {<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public static <A> A createDefaultImplementation(Class<A> abstractClass) {<newline46mondego>        Enhancer enhancer = new Enhancer();<newline46mondego>        enhancer.setSuperclass(abstractClass);<newline46mondego>        enhancer.setCallback(new MethodInterceptor() {<newline46mondego>            public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {<newline46mondego>                if (!Modifier.isAbstract(method.getModifiers())) {<newline46mondego>                    return methodProxy.invokeSuper(proxy, args);<newline46mondego>                } else {<newline46mondego>                    Class type = method.getReturnType();<newline46mondego>                    if (type.isPrimitive() && !void.class.equals(type)) {<newline46mondego>                        return Array.get(Array.newInstance(type, 1), 0);<newline46mondego>                    } else {<newline46mondego>                        return null;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>        return (A) enhancer.create();<newline46mondego>    }<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public static <A> A createDefaultImplementation(String className) throws ClassNotFoundException{<newline46mondego>        return (A) createDefaultImplementation(Class.forName(className));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4271splitHere46","4450001splitHere46","static final int[] a = new int[]{ 100,200 };<newline46mondego>"
"4272splitHere46","4450166splitHere46","matches"
"4273splitHere46","4450166splitHere46","^"
"4274splitHere46","4450166splitHere46","$"
"4275splitHere46","4450166splitHere46","public static void main(String[] args) throws ParseException {<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>\\d\\d\\d<doubleQuotes46>);<newline46mondego>    Matcher m = p.matcher(<doubleQuotes46>a123b<doubleQuotes46>);<newline46mondego>    System.out.println(m.find());<newline46mondego>    System.out.println(m.matches());<newline46mondego><newline46mondego>    p = Pattern.compile(<doubleQuotes46>^\\d\\d\\d$<doubleQuotes46>);<newline46mondego>    m = p.matcher(<doubleQuotes46>123<doubleQuotes46>);<newline46mondego>    System.out.println(m.find());<newline46mondego>    System.out.println(m.matches());<newline46mondego>}<newline46mondego><newline46mondego>/* output:<newline46mondego>true<newline46mondego>false<newline46mondego>true<newline46mondego>true<newline46mondego>*/<newline46mondego>"
"4276splitHere46","4450166splitHere46","123"
"4277splitHere46","4450166splitHere46","a123b"
"4278splitHere46","4450166splitHere46","find()"
"4279splitHere46","4450166splitHere46","matches()"
"4280splitHere46","4450166splitHere46","a123b"
"4281splitHere46","4450166splitHere46","123"
"4282splitHere46","4450245splitHere46","getReader()"
"4283splitHere46","4450245splitHere46","String ba = getBaId(getBody(httpRequest)); <newline46mondego>"
"4284splitHere46","4450245splitHere46","getInputStream()"
"4285splitHere46","4450245splitHere46","ServletRequestWrapper"
"4286splitHere46","4450292splitHere46","platformRequest(<doubleQuotes46>http://developers.sun.com/mobility<doubleQuotes46>);<newline46mondego>"
"4287splitHere46","4450350splitHere46","public static void main(final String... args) throws IOException, InterruptedException {<newline46mondego>    final Runtime runtime = Runtime.getRuntime();<newline46mondego>    final String command = <doubleQuotes46>...<doubleQuotes46>; // cmd.exe<newline46mondego><newline46mondego>    final Process proc = runtime.exec(command, null, new File(<doubleQuotes46>.<doubleQuotes46>));<newline46mondego><newline46mondego>    final BufferedReader input = new BufferedReader(new InputStreamReader(proc.getInputStream()));<newline46mondego><newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    char[] cbuf = new char[100];<newline46mondego>    while (input.read(cbuf) != -1) {<newline46mondego>        sb.append(cbuf);<newline46mondego>        if (sb.toString().contains(<doubleQuotes46>Password:<doubleQuotes46>)) {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>        Thread.sleep(1000);<newline46mondego>    }<newline46mondego>    System.out.println(sb);<newline46mondego>}<newline46mondego>"
"4288splitHere46","4450387splitHere46","*.gwt.xml"
"4289splitHere46","4450387splitHere46","@FILTER@"
"4290splitHere46","4450393splitHere46","timestamp"
"4291splitHere46","4450393splitHere46","Calendar cal=GregorianCalendar.getInstance();<newline46mondego>cal.setTime(timestamp);<newline46mondego>"
"4292splitHere46","4450659splitHere46","ArrayList"
"4293splitHere46","4450659splitHere46","ArrayList"
"4294splitHere46","4450847splitHere46","[{<doubleQuotes46>billId<doubleQuotes46>:<doubleQuotes46>billid3<doubleQuotes46>,<doubleQuotes46>amount<doubleQuotes46>:<doubleQuotes46>13<doubleQuotes46>}]<newline46mondego>"
"4295splitHere46","4450900splitHere46","Person"
"4296splitHere46","4450900splitHere46","Project"
"4297splitHere46","4450900splitHere46","project"
"4298splitHere46","4450900splitHere46","List<Person> list = sess.createQuery(<newline46mondego>    <doubleQuotes46>from Person p where p.project.id = :id<doubleQuotes46>)<newline46mondego>    .setParameter(<doubleQuotes46>id<doubleQuotes46>, projectId)<newline46mondego>    .list();  <newline46mondego>"
"4299splitHere46","4450900splitHere46","select p from Person p join p.projects proj where proj.id = :id<newline46mondego>"
"4300splitHere46","4450900splitHere46","setParameter()"
"4301splitHere46","4450951splitHere46","public class DaysOfWeek {<newline46mondego>    private final Map daysOfWeek = new HashMap();<newline46mondego>    public DaysOfWeek() { <newline46mondego>      // prepopulate my map<newline46mondego>      daysOfWeek.put(0, <doubleQuotes46>Sunday<doubleQuotes46>);<newline46mondego>      daysOfWeek.put(1, <doubleQuotes46>Monday<doubleQuotes46>);<newline46mondego>      // etc<newline46mondego>    }<newline46mondego><newline46mondego>    public String getDayName(int dayOfWeek) {<newline46mondego>      return daysOfWeek(dayOfWeek);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4302splitHere46","4451479splitHere46","for (int j = 1; j <= (2 * i - 1); j++) {<newline46mondego>        if((l-j) < l-i){<newline46mondego>        // here System.out.print(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else<newline46mondego>            System.out.print(l - j);<newline46mondego>"
"4303splitHere46","4451479splitHere46","for(int j = 1; j < i; j++)<newline46mondego>     System.out.print(10-j);<newline46mondego><newline46mondego>System.out.println(10-i);<newline46mondego><newline46mondego>for(int j = 1; j < i; j++)<newline46mondego>     System.out.print(10-i+j);    <newline46mondego>"
"4304splitHere46","4451512splitHere46","out = new ObjectOutputStream(kkSocket.getOutputStream());<newline46mondego>"
"4305splitHere46","4451512splitHere46","out = new ObjectOutputStream(new BufferedOutputStream(kkSocket.getOutputStream()));<newline46mondego>"
"4306splitHere46","4451512splitHere46","out.flush();<newline46mondego>"
"4307splitHere46","4451574splitHere46","Map<Key, List<Value>><newline46mondego>"
"4308splitHere46","4451574splitHere46","Pair"
"4309splitHere46","4451574splitHere46","class Pair<E,F, ...> {<newline46mondego><newline46mondego>    public E one;<newline46mondego>    public F two;<newline46mondego>    ...<newline46mondego><newline46mondego>}<newline46mondego>"
"4310splitHere46","4451574splitHere46","Map"
"4311splitHere46","4451574splitHere46","Map<Key, Pair<Value, Value>><newline46mondego>"
"4312splitHere46","4451634splitHere46","<init-param><newline46mondego>  <param-name>contextConfigLocation</param-name><newline46mondego>  <param-value><newline46mondego>    /WEB-INF/spring/spring-beans1.xml<newline46mondego>    /WEB-INF/spring/spring-beans2.xml<newline46mondego>  </param-value><newline46mondego></init-param><newline46mondego>"
"4313splitHere46","4451759splitHere46","FIXME"
"4314splitHere46","4451759splitHere46","TODO"
"4315splitHere46","4452038splitHere46","Transport transport = session.getTransport(<doubleQuotes46>smtp<doubleQuotes46>);<newline46mondego>transport.connect();<newline46mondego>transport.sendMessage(message, message.getAllRecipients());<newline46mondego>transport.close();<newline46mondego>"
"4316splitHere46","4452077splitHere46","interface Box<T> {<newline46mondego>    public T get();<newline46mondego>    public void put( T element);<newline46mondego>}<newline46mondego><newline46mondego>class CaptureTest {<newline46mondego>    public void rebox( Box<?> box) {<newline46mondego>        box.get(); // return type of get() is a capture binding<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4317splitHere46","4452089splitHere46","$in"
"4318splitHere46","4452210splitHere46","import javax.xml.bind.JAXBElement;<newline46mondego>import javax.xml.bind.annotation.XmlElementDecl;<newline46mondego>import javax.xml.bind.annotation.XmlRegistry;<newline46mondego>import javax.xml.namespace.QName;<newline46mondego><newline46mondego>@XmlRegistry<newline46mondego>public class ObjectFactory {<newline46mondego><newline46mondego>    @XmlElementDecl(name=<doubleQuotes46>InvoiceAdd<doubleQuotes46>)<newline46mondego>    JAXBElement<TransactionAdd> createInvoiceAdd(TransactionAdd invoiceAdd) {<newline46mondego>        return new JAXBElement<TransactionAdd>(new QName(<doubleQuotes46>InvoiceAdd<doubleQuotes46>), TransactionAdd.class, invoiceAdd);<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElementDecl(name=<doubleQuotes46>SalesOrderAdd<doubleQuotes46>)<newline46mondego>    JAXBElement<TransactionAdd> createSalesOrderAdd(TransactionAdd salesOrderAdd) {<newline46mondego>        return new JAXBElement<TransactionAdd>(new QName(<doubleQuotes46>SalesOrderAdd<doubleQuotes46>), TransactionAdd.class, salesOrderAdd);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4319splitHere46","4452210splitHere46","import java.util.List;<newline46mondego><newline46mondego>import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlTransient;<newline46mondego><newline46mondego>public class TransactionAdd {<newline46mondego><newline46mondego>    private String txnDate;<newline46mondego>    private String refNumber;<newline46mondego>    private String txnType;<newline46mondego>    private List<LineAdd> lines;<newline46mondego><newline46mondego>    @XmlElement(name=<doubleQuotes46>TxnDate<doubleQuotes46>)<newline46mondego>    public String getTxnDate() {<newline46mondego>        return txnDate;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTxnDate(String txnDate) {<newline46mondego>        this.txnDate = txnDate;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement(name=<doubleQuotes46>RefNumber<doubleQuotes46>)<newline46mondego>    public String getRefNumber() {<newline46mondego>        return refNumber;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setRefNumber(String refNumber) {<newline46mondego>        this.refNumber = refNumber;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlTransient<newline46mondego>    public String getTxnType() {<newline46mondego>        return txnType;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTxnType(String txnType) {<newline46mondego>        this.txnType = txnType;<newline46mondego>    }<newline46mondego><newline46mondego>    public List<LineAdd> getLines() {<newline46mondego>        return lines;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setLines(List<LineAdd> lines) {<newline46mondego>        this.lines = lines;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4320splitHere46","4452210splitHere46","import java.io.File;<newline46mondego><newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.JAXBElement;<newline46mondego>import javax.xml.bind.Marshaller;<newline46mondego>import javax.xml.bind.Unmarshaller;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(TransactionAdd.class, ObjectFactory.class);<newline46mondego><newline46mondego>        File xml = new File(<doubleQuotes46>src/forum107/input1.xml<doubleQuotes46>);<newline46mondego>        Unmarshaller unmarshaller = jc.createUnmarshaller();<newline46mondego>        JAXBElement<TransactionAdd> je = (JAXBElement<TransactionAdd>) unmarshaller.unmarshal(xml);<newline46mondego>        TransactionAdd ta = je.getValue();<newline46mondego>        ta.setTxnType(je.getName().getLocalPart());<newline46mondego><newline46mondego>        JAXBElement<TransactionAdd> jeOut;<newline46mondego>        if(<doubleQuotes46>InvoiceAdd<doubleQuotes46>.equals(ta.getTxnType())) {<newline46mondego>            jeOut = new ObjectFactory().createInvoiceAdd(ta);<newline46mondego>        } else {<newline46mondego>            jeOut = new ObjectFactory().createSalesOrderAdd(ta);<newline46mondego>        }<newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(jeOut, System.out);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4321splitHere46","4452268splitHere46","U"
"4322splitHere46","4452268splitHere46","U"
"4323splitHere46","4452268splitHere46","class EventThing<T extends AbstractThing<Double>><newline46mondego>"
"4324splitHere46","4452268splitHere46","Double"
"4325splitHere46","4452268splitHere46","class EventThing<T extends AbstractThing<U>><newline46mondego>"
"4326splitHere46","4452268splitHere46","Double"
"4327splitHere46","4452268splitHere46","U"
"4328splitHere46","4452268splitHere46","U"
"4329splitHere46","4452268splitHere46","Double"
"4330splitHere46","4452268splitHere46","U"
"4331splitHere46","4452268splitHere46","class EventThing<T extends AbstractThing<U>, U><newline46mondego>"
"4332splitHere46","4452385splitHere46","TabActivity"
"4333splitHere46","4452385splitHere46","Theme.Dialog"
"4334splitHere46","4452385splitHere46","AlertDialog"
"4335splitHere46","4452385splitHere46","Activity"
"4336splitHere46","4452385splitHere46","Activity"
"4337splitHere46","4452521splitHere46","Object<newline46mondego><newline46mondego>Animal<newline46mondego><newline46mondego>Cat<newline46mondego>"
"4338splitHere46","4452521splitHere46","Object    Animal<newline46mondego><newline46mondego>      Cat<newline46mondego>"
"4339splitHere46","4452521splitHere46","Cat"
"4340splitHere46","4452521splitHere46","Cat"
"4341splitHere46","4452521splitHere46","extends"
"4342splitHere46","4452521splitHere46","Animal"
"4343splitHere46","4452521splitHere46","extends"
"4344splitHere46","4452521splitHere46","Object"
"4345splitHere46","4452607splitHere46","SharedPreferences"
"4346splitHere46","4452607splitHere46","MODE_PRIVATE"
"4347splitHere46","4452607splitHere46","MODE_WORLD_READABLE"
"4348splitHere46","4452607splitHere46","MODE_WORLD_WRITEABLE"
"4349splitHere46","4452607splitHere46","MODE_PRIVATE"
"4350splitHere46","4452642splitHere46","intent.putExtra(<doubleQuotes46>mySelectedRowId<doubleQuotes46>, rowId);<newline46mondego>"
"4351splitHere46","4452642splitHere46","selectedId = intent.getLongExtra(<doubleQuotes46>mySelectedRowId<doubleQuotes46>, 1);<newline46mondego>"
"4352splitHere46","4452782splitHere46","cProfile"
"4353splitHere46","4452782splitHere46","profile"
"4354splitHere46","4452782splitHere46","guppy"
"4355splitHere46","4452838splitHere46","Enum.valueOf"
"4356splitHere46","4452914splitHere46","tnsnames.ora"
"4357splitHere46","4452914splitHere46","$ORACLE_HOME/network/admin"
"4358splitHere46","4452914splitHere46","ORA11 =<newline46mondego>  (DESCRIPTION =<newline46mondego>    (ADDRESS_LIST =<newline46mondego>      (ADDRESS = (PROTOCOL = TCP)(HOST = hostname)(PORT = 1521))<newline46mondego>    )<newline46mondego>    (CONNECT_DATA =<newline46mondego>      (SERVICE_NAME = ORA11)<newline46mondego>    )<newline46mondego>  )<newline46mondego>"
"4359splitHere46","4452914splitHere46","jdbc:oracle:thin:@hostname:1521:ORA11<newline46mondego>"
"4360splitHere46","4452938splitHere46","1"
"4361splitHere46","4452938splitHere46","SELECT MIN(a.id) + 1 AS smallestAvailableId<newline46mondego>FROM your_table AS a<newline46mondego>LEFT JOIN your_table AS a2<newline46mondego>        ON a2.id = a.id + 1<newline46mondego>WHERE a2.id IS NULL<newline46mondego>"
"4362splitHere46","4452968splitHere46","s"
"4363splitHere46","4452968splitHere46","Character.isUpperCase(s.charAt(0))<newline46mondego>"
"4364splitHere46","4452968splitHere46","U+FFFF"
"4365splitHere46","4452968splitHere46","Character.isUpperCase(s.codePointAt(0));<newline46mondego>"
"4366splitHere46","4453066splitHere46","java.security.cert.Certificate"
"4367splitHere46","4453066splitHere46","<doubleQuotes46>type<doubleQuotes46>"
"4368splitHere46","4453066splitHere46","java.io.Serializable"
"4369splitHere46","4453066splitHere46","transient"
"4370splitHere46","4453080splitHere46","{}"
"4371splitHere46","4453080splitHere46","Map<String, Object>"
"4372splitHere46","4453080splitHere46","public class ResponseData {<newline46mondego>    private Response response;<newline46mondego>    // +getter+setter<newline46mondego><newline46mondego>    public static class Response {<newline46mondego>        private int reference;<newline46mondego>        private Data data;<newline46mondego>        // +getters+setters<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Data {<newline46mondego>        private User user;<newline46mondego>        // +getter+setter<newline46mondego>    }<newline46mondego><newline46mondego>    public static class User {<newline46mondego>        private String id;<newline46mondego>        private String firstName; <newline46mondego>        private String lastName;<newline46mondego>        private String email;<newline46mondego>        private String phone;<newline46mondego>        private Linkedid linkedid;<newline46mondego>        // +getters+setters<newline46mondego>    }<newline46mondego><newline46mondego>    public static class Linkedid {<newline46mondego>        private String id;<newline46mondego>        // +getter+setter<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4373splitHere46","4453080splitHere46","ResponseData responseData = new Gson().fromJson(json, ResponseData.class);<newline46mondego>"
"4374splitHere46","4453126splitHere46","1"
"4375splitHere46","4453250splitHere46","collection.size()"
"4376splitHere46","4453250splitHere46","delete-orphan"
"4377splitHere46","4453273splitHere46","Map<Enum,Map<String,double[]>><newline46mondego>"
"4378splitHere46","4453287splitHere46","queueReceiver = ((AQjmsSession) queueSession).<newline46mondego>   createReceiver(queue, XMLType.getORADataFactory());<newline46mondego>"
"4379splitHere46","4453341splitHere46","char"
"4380splitHere46","4453341splitHere46","'c'"
"4381splitHere46","4453341splitHere46","0x0063"
"4382splitHere46","4453341splitHere46","String"
"4383splitHere46","4453341splitHere46","String"
"4384splitHere46","4453341splitHere46","int"
"4385splitHere46","4453341splitHere46","char[]"
"4386splitHere46","4453341splitHere46","char[]"
"4387splitHere46","4453341splitHere46","char"
"4388splitHere46","4453378splitHere46","Class"
"4389splitHere46","4453378splitHere46","Object"
"4390splitHere46","4453378splitHere46","class"
"4391splitHere46","4453378splitHere46","Object"
"4392splitHere46","4453378splitHere46","getClass()"
"4393splitHere46","4453378splitHere46","getClass()"
"4394splitHere46","4453378splitHere46","Foo.class"
"4395splitHere46","4453378splitHere46","Class"
"4396splitHere46","4453378splitHere46","isAbstract()"
"4397splitHere46","4453378splitHere46","isPrimitive()"
"4398splitHere46","4453378splitHere46","@Processable"
"4399splitHere46","4453378splitHere46","public void process(Object obj) {<newline46mondego>    if (obj.getClass().isAnnotationPresent(Processable.class)) {<newline46mondego>       // process somehow; <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4400splitHere46","4453378splitHere46","Class"
"4401splitHere46","4453378splitHere46","Class"
"4402splitHere46","4453378splitHere46","Class"
"4403splitHere46","4453465splitHere46","invokeLater"
"4404splitHere46","4453465splitHere46","Thread worker = new Thread(new Runnable(){<newline46mondego>    public void run(){<newline46mondego>        jTextArea.append(<doubleQuotes46>Test<doubleQuotes46> + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            Thread.sleep(3000);<newline46mondego>        } catch (InterruptedException e1) {<newline46mondego>            e1.printStackTrace();<newline46mondego>        }<newline46mondego>        jTextArea.append(<doubleQuotes46>Test1<doubleQuotes46> + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego>});<newline46mondego>worker.start();<newline46mondego>"
"4405splitHere46","4453475splitHere46","in"
"4406splitHere46","4453475splitHere46","readLine()"
"4407splitHere46","4453475splitHere46","null"
"4408splitHere46","4453478splitHere46","FacesServlet"
"4409splitHere46","4453478splitHere46","web.xml"
"4410splitHere46","4453478splitHere46","url-pattern"
"4411splitHere46","4453478splitHere46","FacesServlet"
"4412splitHere46","4453478splitHere46","FacesServlet"
"4413splitHere46","4453478splitHere46","url-pattern"
"4414splitHere46","4453478splitHere46","FacesServlet"
"4415splitHere46","4453478splitHere46","web.xml"
"4416splitHere46","4453478splitHere46","*.jsf"
"4417splitHere46","4453478splitHere46","start.xhtml"
"4418splitHere46","4453478splitHere46","url-pattern"
"4419splitHere46","4453478splitHere46","*.xhtml"
"4420splitHere46","4453478splitHere46","<servlet><newline46mondego>    <servlet-name>facesServlet</servlet-name><newline46mondego>    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>facesServlet</servlet-name><newline46mondego>    <url-pattern>*.xhtml</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"4421splitHere46","4453484splitHere46","import java.text.DecimalFormat;<newline46mondego>public class Rounder {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        double value = 0.0000037d;<newline46mondego>        // size to the maximum number of digits you'd like to show<newline46mondego>        // used to avoid representing the number using scientific notation<newline46mondego>        // when converting to string<newline46mondego>        DecimalFormat maxDigitsFormatter = new DecimalFormat(<doubleQuotes46>#.###################<doubleQuotes46>);<newline46mondego>        StringBuilder pattern = new StringBuilder().append(<doubleQuotes46>0.00<doubleQuotes46>);<newline46mondego>        if(value < 0.01d){<newline46mondego>            String s = maxDigitsFormatter.format(value);<newline46mondego>            int i = s.indexOf(<doubleQuotes46>.<doubleQuotes46>) + 3;<newline46mondego>            while(i < s.length()-1){<newline46mondego>                pattern.append(<doubleQuotes46>0<doubleQuotes46>);<newline46mondego>                i++;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        DecimalFormat df = new DecimalFormat(pattern.toString());<newline46mondego>        System.out.println(<doubleQuotes46>value           = <doubleQuotes46> + value);<newline46mondego>        System.out.println(<doubleQuotes46>formatted value = <doubleQuotes46> + maxDigitsFormatter.format(value));<newline46mondego>        System.out.println(<doubleQuotes46>pattern         = <doubleQuotes46> + pattern);<newline46mondego>        System.out.println(<doubleQuotes46>rounded         = <doubleQuotes46> + df.format(value));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4422splitHere46","4453498splitHere46","BlockCipher engine = new AESEngine();<newline46mondego>BufferedBlockCipher cipher = new PaddedBufferedBlockCipher(new CBCBlockCipher(engine));<newline46mondego><newline46mondego>byte[] key = keyString.getBytes();<newline46mondego>byte[] input = inputString.getBytes();<newline46mondego><newline46mondego>cipher.init(true, new ParametersWithIV(new KeyParameter(key), ivBytes));<newline46mondego><newline46mondego>byte[] cipherText = new byte[cipher.getOutputSize(input.length)];<newline46mondego><newline46mondego>int outputLen = cipher.processBytes(input, 0, input.length, cipherText, 0);<newline46mondego>try<newline46mondego>{<newline46mondego>    cipher.doFinal(cipherText, outputLen);<newline46mondego>}<newline46mondego>catch (CryptoException ce)<newline46mondego>{<newline46mondego>    System.err.println(ce);<newline46mondego>    System.exit(1);<newline46mondego>}<newline46mondego>"
"4423splitHere46","4453498splitHere46","PaddedBufferedBlockCipher"
"4424splitHere46","4453498splitHere46","cipher.init(false, ...)"
"4425splitHere46","4453498splitHere46","processBytes"
"4426splitHere46","4453665splitHere46","void createSession(String Username) {<newline46mondego>        getThreadLocalRequest().getSession().setAttribute(<doubleQuotes46>Username<doubleQuotes46>, Username);<newline46mondego>    }<newline46mondego><newline46mondego>    boolean validateSession(String Username) {<newline46mondego>        if (getThreadLocalRequest().getSession().getAttribute(<doubleQuotes46>Username<doubleQuotes46>) != null) {<newline46mondego>            return true;<newline46mondego>        } else {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"4427splitHere46","4453827splitHere46","QFile stdin = new QFile();<newline46mondego>stdin.open(0, new QIODevice.OpenMode(QIODevice.OpenModeFlag.ReadOnly));<newline46mondego>QFile stdout = new QFile();<newline46mondego>stdout.open(1, new QIODevice.OpenMode(QIODevice.OpenModeFlag.WriteOnly));<newline46mondego>QFile stderr = new QFile();<newline46mondego>stderr.open(2, new QIODevice.OpenMode(QIODevice.OpenModeFlag.WriteOnly));<newline46mondego>"
"4428splitHere46","4453908splitHere46","// Create a trust manager that does not validate certificate chains<newline46mondego>TrustManager[] trustAllCerts = new TrustManager[]{<newline46mondego>  new X509TrustManager() {<newline46mondego>    public java.security.cert.X509Certificate[] getAcceptedIssuers() {<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>    public void checkClientTrusted(<newline46mondego>        java.security.cert.X509Certificate[] certs, String authType) {}<newline46mondego>    public void checkServerTrusted(<newline46mondego>        java.security.cert.X509Certificate[] certs, String authType) {}<newline46mondego>  }<newline46mondego>};<newline46mondego><newline46mondego>// Install the all-trusting trust manager<newline46mondego>try {<newline46mondego>  SSLContext sc = SSLContext.getInstance(<doubleQuotes46>SSL<doubleQuotes46>);<newline46mondego>  sc.init(null, trustAllCerts, new java.security.SecureRandom());<newline46mondego>  HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());<newline46mondego>} catch (Exception e) {<newline46mondego>}<newline46mondego><newline46mondego>// Now you can access an https URL without having the certificate in the <newline46mondego>// truststore<newline46mondego>try {<newline46mondego>  URL url = new URL(<doubleQuotes46>https://hostname/index.html<doubleQuotes46>);<newline46mondego>} catch (MalformedURLException e) {<newline46mondego>}<newline46mondego>"
"4429splitHere46","4453921splitHere46","<AsifXml xmlns:AsifXml=<doubleQuotes46>http://www.website.com/ASIF<doubleQuotes46>><newline46mondego>"
"4430splitHere46","4453921splitHere46","AsifXml"
"4431splitHere46","4453921splitHere46","AsifXml"
"4432splitHere46","4453921splitHere46","<AsifXml xmlns=<doubleQuotes46>http://www.website.com/ASIF<doubleQuotes46> <newline46mondego>         xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> <newline46mondego>         version=<doubleQuotes46>1.1.4<doubleQuotes46> <newline46mondego>         content=<doubleQuotes46>study<doubleQuotes46>><newline46mondego>"
"4433splitHere46","4453921splitHere46","AsifXml"
"4434splitHere46","4453921splitHere46","http://www.website.com/ASIF"
"4435splitHere46","4453921splitHere46","<AsifXml:AsifXml xmlns:AsifXml=<doubleQuotes46>http://www.website.com/ASIF<doubleQuotes46> <newline46mondego>         xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> <newline46mondego>         version=<doubleQuotes46>1.1.4<doubleQuotes46> <newline46mondego>         content=<doubleQuotes46>study<doubleQuotes46>><newline46mondego>"
"4436splitHere46","4453974splitHere46","connection.commit()"
"4437splitHere46","4453974splitHere46","connection.rollback()"
"4438splitHere46","4454017splitHere46","new QName(<doubleQuotes46>http://tempuri.org<doubleQuotes46>, <doubleQuotes46>Service1<doubleQuotes46>)<newline46mondego>"
"4439splitHere46","4454017splitHere46","new QName(<doubleQuotes46>http://tempuri.org/<doubleQuotes46>, <doubleQuotes46>Service1<doubleQuotes46>)<newline46mondego>"
"4440splitHere46","4454064splitHere46","open /path/to/some.app  <newline46mondego>"
"4441splitHere46","4454064splitHere46","Runtime.getRuntime().exec( new String[] { <doubleQuotes46>open<doubleQuotes46>, <doubleQuotes46>/path/to/app/SomeApp.app<doubleQuotes46>} );<newline46mondego>"
"4442splitHere46","4454064splitHere46","/path/to/app"
"4443splitHere46","4454064splitHere46",".app"
"4444splitHere46","4454064splitHere46",".jar"
"4445splitHere46","4454163splitHere46","show"
"4446splitHere46","4454163splitHere46","JFrame"
"4447splitHere46","4454163splitHere46","java.awt.Window"
"4448splitHere46","4454163splitHere46","setVisible(true);"
"4449splitHere46","4454163splitHere46","test.add(hello);"
"4450splitHere46","4454163splitHere46","termDB.getSelectedItem()"
"4451splitHere46","4454163splitHere46","Object"
"4452splitHere46","4454163splitHere46","JLabel"
"4453splitHere46","4454163splitHere46","termDB.getSelectedItem().toString()"
"4454splitHere46","4454217splitHere46","DateTimeUtils.setCurrentMillisFixed()"
"4455splitHere46","4454244splitHere46","getBean()"
"4456splitHere46","4454783splitHere46","Class.newInstance"
"4457splitHere46","4454783splitHere46","for(Field field : cls.getDeclaredFields()){<newline46mondego> Class type = field.getType();<newline46mondego> String name = field.getName();<newline46mondego> Annotation[] annotations = field.getDeclaredAnnotations();<newline46mondego>}<newline46mondego>"
"4458splitHere46","4454818splitHere46","atan2"
"4459splitHere46","4454818splitHere46","class TrigMath {<newline46mondego><newline46mondego>    static final double sq2p1 = 2.414213562373095048802e0;<newline46mondego>    static final double sq2m1 = .414213562373095048802e0;<newline46mondego>    static final double p4 = .161536412982230228262e2;<newline46mondego>    static final double p3 = .26842548195503973794141e3;<newline46mondego>    static final double p2 = .11530293515404850115428136e4;<newline46mondego>    static final double p1 = .178040631643319697105464587e4;<newline46mondego>    static final double p0 = .89678597403663861959987488e3;<newline46mondego>    static final double q4 = .5895697050844462222791e2;<newline46mondego>    static final double q3 = .536265374031215315104235e3;<newline46mondego>    static final double q2 = .16667838148816337184521798e4;<newline46mondego>    static final double q1 = .207933497444540981287275926e4;<newline46mondego>    static final double q0 = .89678597403663861962481162e3;<newline46mondego>    static final double PIO2 = 1.5707963267948966135E0;<newline46mondego><newline46mondego>    private static double mxatan(double arg) {<newline46mondego>        double argsq = arg * arg, value;<newline46mondego>        value = ((((p4 * argsq + p3) * argsq + p2) * argsq + p1) * argsq + p0);<newline46mondego>        value = value / (((((argsq+q4)*argsq+q3)*argsq+q2)*argsq+q1)*argsq+q0);<newline46mondego>        return value * arg;<newline46mondego>    }<newline46mondego><newline46mondego>    private static double msatan(double arg) {<newline46mondego>        return arg < sq2m1 ? mxatan(arg)<newline46mondego>             : arg > sq2p1 ? PIO2 - mxatan(1 / arg)<newline46mondego>             : PIO2 / 2 + mxatan((arg - 1) / (arg + 1));<newline46mondego>    }<newline46mondego><newline46mondego>    public static double atan(double arg) {<newline46mondego>        return arg > 0 ? msatan(arg) : -msatan(-arg);<newline46mondego>    }<newline46mondego><newline46mondego>    public static double atan2(double arg1, double arg2) {<newline46mondego>        if (arg1 + arg2 == arg1)<newline46mondego>            return arg1 >= 0 ? PIO2 : -PIO2;<newline46mondego>        arg1 = atan(arg1 / arg2);<newline46mondego>        return arg2 < 0 ? arg1 <= 0 ? arg1 + Math.PI : arg1 - Math.PI : arg1;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4460splitHere46","4454902splitHere46","trimedString.replaceAll(<doubleQuotes46>article-idref=\<doubleQuotes46>[^\<doubleQuotes46>]*\<doubleQuotes46> *<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"4461splitHere46","4454982splitHere46","panel=new InformationPanel(<doubleQuotes46>myPanel<doubleQuotes46>);<newline46mondego>message=new ModalWindow(<doubleQuotes46>InformationDialog<doubleQuotes46>);<newline46mondego>message.setContent(panel);<newline46mondego>"
"4462splitHere46","4454982splitHere46","ModalWindow"
"4463splitHere46","4454982splitHere46","message=new ModalWindow(<doubleQuotes46>InformationDialog<doubleQuotes46>);<newline46mondego>panel=new InformationPanel(message.getContentId());<newline46mondego>message.setContent(panel);<newline46mondego>"
"4464splitHere46","4454982splitHere46","message.getContentId()"
"4465splitHere46","4454997splitHere46","ConcurrentModificationException"
"4466splitHere46","4454997splitHere46","Iterator<Event> it = eventList.iterator();<newline46mondego>while(it.hasNext())<newline46mondego>{<newline46mondego>  Event ev = it.next();<newline46mondego>  if (ev.ready())<newline46mondego>    it.remove();<newline46mondego>}<newline46mondego>"
"4467splitHere46","4454997splitHere46","Iterator"
"4468splitHere46","4454997splitHere46","for(E : list)"
"4469splitHere46","4454997splitHere46","add"
"4470splitHere46","4454997splitHere46","remove"
"4471splitHere46","4454997splitHere46","it.remove()"
"4472splitHere46","4454997splitHere46","it"
"4473splitHere46","4455014splitHere46","import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlRootElement;<newline46mondego>import javax.xml.bind.annotation.XmlType;<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlType(propOrder={<doubleQuotes46>to<doubleQuotes46>, <doubleQuotes46>from<doubleQuotes46>, <doubleQuotes46>header<doubleQuotes46>, <doubleQuotes46>body<doubleQuotes46>, <doubleQuotes46>assignee<doubleQuotes46>})<newline46mondego>public class Note {<newline46mondego><newline46mondego>    private String to;<newline46mondego>    private String from;<newline46mondego>    private String header;<newline46mondego>    private String body;<newline46mondego>    private Assignee assignee;<newline46mondego><newline46mondego>    @XmlElement(nillable=true)<newline46mondego>    public String getTo() {<newline46mondego>        return to;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setTo(String to) {<newline46mondego>        this.to = to;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement(nillable=true)<newline46mondego>    public String getFrom() {<newline46mondego>        return from;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setFrom(String from) {<newline46mondego>        this.from = from;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement(nillable=true)<newline46mondego>    public String getHeader() {<newline46mondego>        return header;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setHeader(String header) {<newline46mondego>        this.header = header;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement(nillable=true)<newline46mondego>    public String getBody() {<newline46mondego>        return body;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setBody(String body) {<newline46mondego>        this.body = body;<newline46mondego>    }<newline46mondego><newline46mondego>    public Assignee getAssignee() {<newline46mondego>        return assignee;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setAssignee(Assignee assignee) {<newline46mondego>        this.assignee = assignee;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4474splitHere46","4455014splitHere46","import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;<newline46mondego><newline46mondego>@XmlJavaTypeAdapter(AssigneeAdapter.class)<newline46mondego>public class Assignee {<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private String surname;<newline46mondego><newline46mondego>    @XmlElement(nillable=true)<newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement(nillable=true)<newline46mondego>    public String getSurname() {<newline46mondego>        return surname;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSurname(String surname) {<newline46mondego>        this.surname = surname;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isNull() {<newline46mondego>        return null == name && null == surname;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4475splitHere46","4455014splitHere46","import javax.xml.bind.annotation.adapters.XmlAdapter;<newline46mondego><newline46mondego>public class AssigneeAdapter extends XmlAdapter<Assignee, Assignee> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Assignee unmarshal(Assignee v) throws Exception {<newline46mondego>        if(v.isNull()) {<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>        return v;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Assignee marshal(Assignee v) throws Exception {<newline46mondego>        if(null == v) {<newline46mondego>            return new Assignee();<newline46mondego>        }<newline46mondego>        return v;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4476splitHere46","4455014splitHere46","import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.Marshaller;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext jc = JAXBContext.newInstance(Note.class);<newline46mondego><newline46mondego>        Marshaller marshaller = jc.createMarshaller();<newline46mondego>        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);<newline46mondego>        marshaller.marshal(new Note(), System.out);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4477splitHere46","4455482splitHere46","String input=<doubleQuotes46><media id=\<doubleQuotes46>pc011018\<doubleQuotes46> rights=\<doubleQuotes46>licensed\<doubleQuotes46> type=\<doubleQuotes46>photo\<doubleQuotes46>><title>Sri Lankans harvest tea</title></media><doubleQuotes46>;<newline46mondego>    Pattern r= Pattern.compile(<doubleQuotes46><media id=\<doubleQuotes46>(.*)\<doubleQuotes46> rights=\<doubleQuotes46>(.*)\<doubleQuotes46> type=\<doubleQuotes46>(.*)\<doubleQuotes46>>(.*)<doubleQuotes46>);<newline46mondego>    Matcher m = r.matcher(input);<newline46mondego>    m.find();<newline46mondego>    System.out.println(<doubleQuotes46><media type=\<doubleQuotes46><doubleQuotes46>+m.group(3)+ <doubleQuotes46>\<doubleQuotes46> + id=\<doubleQuotes46><doubleQuotes46>+ m.group(1) + <doubleQuotes46>\<doubleQuotes46> rights=\<doubleQuotes46><doubleQuotes46> + m.group(2) + <doubleQuotes46>\<doubleQuotes46>><doubleQuotes46>+m.group(4));<newline46mondego>"
"4478splitHere46","4455707splitHere46","method"
"4479splitHere46","4455707splitHere46","public class Foo {<newline46mondego>    private String value;<newline46mondego><newline46mondego>    public Foo(String v) {<newline46mondego>        this.value = v;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getValue() {<newline46mondego>        return this.value;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setValue(String v) {<newline46mondego>        this.value = v;<newline46mondego>    }<newline46mondego> }<newline46mondego><newline46mondego> // ....<newline46mondego> public void method(String in, Foo inOut) {<newline46mondego>     inOut.setValue(in);<newline46mondego> }<newline46mondego>"
"4480splitHere46","4455707splitHere46","value"
"4481splitHere46","4455707splitHere46","method"
"4482splitHere46","4455938splitHere46","java.text.SimpleDateFormatter"
"4483splitHere46","4455993splitHere46","file.printf(<doubleQuotes46>Your payment method is %10f\n<doubleQuotes46>, payFileOutput);<newline46mondego>"
"4484splitHere46","4455993splitHere46","payFileOutput"
"4485splitHere46","4455993splitHere46","%10f"
"4486splitHere46","4455993splitHere46","java.util.IllegalFormatConversionException: f != java.lang.String<newline46mondego>"
"4487splitHere46","4455993splitHere46","format()"
"4488splitHere46","4455997splitHere46","$ buildr package DATABASE=postgres<newline46mondego>"
"4489splitHere46","4455997splitHere46","ENV['DATABASE'] ||= 'hsql' # this line makes the default 'hsql'<newline46mondego><newline46mondego>define <doubleQuotes46>foo<doubleQuotes46> do<newline46mondego>  # the rest of the definition<newline46mondego><newline46mondego>  resources.enhance do<newline46mondego>    cp _(:source, :main, :resources, <doubleQuotes46>database-#{ENV['DATABASE']}.properties<doubleQuotes46>), _(:target, :resources, <doubleQuotes46>database.properties<doubleQuotes46>)<newline46mondego>  end<newline46mondego>end<newline46mondego>"
"4490splitHere46","4455997splitHere46","database-*.properties"
"4491splitHere46","4455997splitHere46","database.properties"
"4492splitHere46","4455997splitHere46","system"
"4493splitHere46","4455997splitHere46","resources.enhance do<newline46mondego>  system(<doubleQuotes46>cp '#{_(:source, :main, :resources, <doubleQuotes46>database-#{ENV['DATABASE']}.properties<doubleQuotes46>)}' '#{_(:target, :resources, <doubleQuotes46>database.properties<doubleQuotes46>)}'<doubleQuotes46>)<newline46mondego>end<newline46mondego>"
"4494splitHere46","4456018splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class AAA {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        ArrayList<String> name = new ArrayList<String>();<newline46mondego>        ArrayList<Integer> phone = new ArrayList<Integer>();<newline46mondego>        Scanner sc = new Scanner(System.in);<newline46mondego>        while (true) {<newline46mondego>            System.out.println(<doubleQuotes46>Please enter your name: <doubleQuotes46>);<newline46mondego>            name.add(sc.next());<newline46mondego>            System.out.println(<doubleQuotes46>Please enter your number: <doubleQuotes46>);<newline46mondego>            phone.add(sc.nextInt());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4495splitHere46","4456205splitHere46","package struts2.stream;<newline46mondego><newline46mondego>import com.opensymphony.xwork2.ActionSupport;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.StringBufferInputStream;<newline46mondego>import org.apache.struts2.convention.annotation.Result;<newline46mondego><newline46mondego><newline46mondego>@Result(name = ActionSupport.SUCCESS, type = <doubleQuotes46>stream<doubleQuotes46>, params =<newline46mondego>{<newline46mondego>    <doubleQuotes46>contentType<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>text/hmtl<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>inputName<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>inputStream<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>contentDisposition<doubleQuotes46>,<newline46mondego>    <doubleQuotes46>filename=document.txt<doubleQuotes46><newline46mondego>})<newline46mondego>public class StreamTestAction extends ActionSupport{<newline46mondego>    public InputStream inputStream;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public String execute(){<newline46mondego>    inputStream = new StringBufferInputStream(<doubleQuotes46>Hello World! This is a text string response from a Struts 2 Action.<doubleQuotes46>);      <newline46mondego>    return SUCCESS;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4496splitHere46","4456278splitHere46","PostMethod"
"4497splitHere46","4456278splitHere46","HttpEntity"
"4498splitHere46","4456278splitHere46","UrlEncodedFormEntity"
"4499splitHere46","4456278splitHere46","writeTo"
"4500splitHere46","4456278splitHere46","ByteArrayOutputStream"
"4501splitHere46","4456278splitHere46","ByteArrayEntity"
"4502splitHere46","4456312splitHere46","Map"
"4503splitHere46","4456312splitHere46","HashMap"
"4504splitHere46","4456312splitHere46","import com.google.common.collect.HashMultimap;<newline46mondego>import com.google.common.collect.SetMultimap;<newline46mondego><newline46mondego>  public static void main(String[] args) <newline46mondego>  {<newline46mondego>    final SetMultimap<Integer, Integer> foo = HashMultimap.create();<newline46mondego>    foo.put( 1,35);<newline46mondego>    foo.put(   1,30);<newline46mondego>    foo.put(  1,20);<newline46mondego>    foo.put(  2,10);<newline46mondego>    foo.put(  3,40);<newline46mondego>    foo.put(  3,25);<newline46mondego>    foo.put(  3,15);<newline46mondego>    System.out.println(foo);<newline46mondego>  }<newline46mondego>"
"4505splitHere46","4456312splitHere46","get(Integer key)"
"4506splitHere46","4456681splitHere46","JList"
"4507splitHere46","4456681splitHere46","JScrollPane"
"4508splitHere46","4456692splitHere46","public class aBomb extends Applet {<newline46mondego>//...<newline46mondego>    // Here's the init method; the @Override goes<newline46mondego>    // immediately before the declaration.<newline46mondego>    @Override<newline46mondego>    public void init() {<newline46mondego>//...<newline46mondego>};<newline46mondego>"
"4509splitHere46","4456692splitHere46","@Override"
"4510splitHere46","4456692splitHere46","@Overrides"
"4511splitHere46","4456714splitHere46","String a = <doubleQuotes46>a string<doubleQuotes46>;<newline46mondego>public void change(String b) {<newline46mondego>    b = <doubleQuotes46>some other string<doubleQuotes46>;<newline46mondego>}<newline46mondego>change(a);<newline46mondego>"
"4512splitHere46","4456747splitHere46","<doubleQuotes46>Bob was a bob \\n<doubleQuotes46>"
"4513splitHere46","4456747splitHere46","Bob was a bob \n"
"4514splitHere46","4456747splitHere46","\\n"
"4515splitHere46","4456772splitHere46","int[] array; int[][] matrix;<newline46mondego>"
"4516splitHere46","4456772splitHere46","int array[], matrix[][];<newline46mondego>"
"4517splitHere46","4456772splitHere46","int[] array, matrix[];<newline46mondego>"
"4518splitHere46","4456795splitHere46","/\$[A-Fa-f0-9]/"
"4519splitHere46","4456795splitHere46","Pattern.matches(<doubleQuotes46>\$[A-Fa-f0-9]<doubleQuotes46>, yourString);<newline46mondego>"
"4520splitHere46","4456817splitHere46","<h:selectOneRadio>"
"4521splitHere46","4456817splitHere46","value"
"4522splitHere46","4456817splitHere46","<ui:repeat value=<doubleQuotes46>#{bean.radios}<doubleQuotes46> var=<doubleQuotes46>radio<doubleQuotes46>><newline46mondego>    <h:selectOneRadio value=<doubleQuotes46>#{radio.selected}<doubleQuotes46>><newline46mondego>        <f:selectItems value=<doubleQuotes46>#{radio.selectItems}<doubleQuotes46> /><newline46mondego>    </h:selectOneRadio><newline46mondego><ui:repeat><newline46mondego>"
"4523splitHere46","4456817splitHere46","radios.get(index).setSelected(newValue);<newline46mondego>"
"4524splitHere46","4457010splitHere46","import java.io.DataOutputStream;<newline46mondego>import java.io.FileOutputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.util.Vector;<newline46mondego><newline46mondego>/**<newline46mondego> * Write the numbers in binary.<newline46mondego> */<newline46mondego>public class WriteBinary {<newline46mondego>  public static void main(String[] argv) throws IOException {<newline46mondego>    Vector<int> numbers = getVectorOfNumbers();<newline46mondego>    int size = numbers.size();<newline46mondego><newline46mondego>    String FILENAME = <doubleQuotes46>binary.dat<doubleQuotes46>;<newline46mondego>    DataOutputStream os = new DataOutputStream(new FileOutputStream(<newline46mondego>        FILENAME));<newline46mondego>    os.writeInt(size);<newline46mondego>    for(int n : numbers) {<newline46mondego>      os.writeInt(n);<newline46mondego>    }<newline46mondego>    os.close();<newline46mondego>    System.out.println(<doubleQuotes46>Wrote <doubleQuotes46> + size + <doubleQuotes46> numbers to file <doubleQuotes46> + FILENAME);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4525splitHere46","4457225splitHere46","-keep public class * extends com.yoursite.android.yourappname.YourClassName<newline46mondego><newline46mondego>-keepclassmembers class * extends com.yoursite.android.yourappname.YourClassName{<newline46mondego> public <init>(android.content.Context);<newline46mondego>}<newline46mondego>"
"4526splitHere46","4457225splitHere46","<init>"
"4527splitHere46","4457225splitHere46","Context"
"4528splitHere46","4457225splitHere46","YourClassName"
"4529splitHere46","4457225splitHere46","-keepclassmembers class * {<newline46mondego> public void myClickHandler(android.view.View);<newline46mondego>}<newline46mondego>"
"4530splitHere46","4457225splitHere46","myClickHandler"
"4531splitHere46","4457225splitHere46","View"
"4532splitHere46","4457369splitHere46","public void setupInfo()<newline46mondego>{<newline46mondego>    try<newline46mondego>    {<newline46mondego>        // call methods that might throw SQLException<newline46mondego>    }<newline46mondego>    catch (SQLException e)<newline46mondego>    {<newline46mondego>        // do something appropriate with the exception, *at least*:<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4533splitHere46","4457369splitHere46","SQLException"
"4534splitHere46","4457369splitHere46","private void setupInfo() throws SQLException<newline46mondego>{<newline46mondego>    // call methods that might throw SQLException<newline46mondego>}<newline46mondego>"
"4535splitHere46","4457559splitHere46","marshaller.setProperty(<doubleQuotes46>jaxb.encoding<doubleQuotes46>, <doubleQuotes46>Unicode<doubleQuotes46>);<newline46mondego>"
"4536splitHere46","4457925splitHere46","int a = 1;<newline46mondego>int b = 2;<newline46mondego>swap(a, b);<newline46mondego>"
"4537splitHere46","4457925splitHere46","int a = 1;<newline46mondego>int b = 2;<newline46mondego>swap(&a, &b);<newline46mondego>"
"4538splitHere46","4457925splitHere46","int a = 1;<newline46mondego>int b = 2;<newline46mondego>a, b = {b, a};<newline46mondego>// or ...<newline46mondego>a, b = swap(b, a); // where swap returns an explicit or implicit tuple.<newline46mondego>"
"4539splitHere46","4457925splitHere46","int a = 1;<newline46mondego>int b = 2;<newline46mondego>a, b = swap(b, a);<newline46mondego>"
"4540splitHere46","4457925splitHere46","IntHolder a = new IntHolder(1);<newline46mondego>   IntHolder b = new IntHolder(2);<newline46mondego>   swap(a, b);<newline46mondego>"
"4541splitHere46","4457925splitHere46","AtomicType"
"4542splitHere46","4457925splitHere46","MutableInteger"
"4543splitHere46","4457925splitHere46","AtomicType"
"4544splitHere46","4457925splitHere46","swap"
"4545splitHere46","4458019splitHere46","DecimalFormat"
"4546splitHere46","4458019splitHere46","String formatted = new DecimalFormat(<doubleQuotes46>#.##<doubleQuotes46>).format(val);<newline46mondego>"
"4547splitHere46","4458108splitHere46","UNION ALL"
"4548splitHere46","4458108splitHere46","select SUM(n) as total<newline46mondego>from (<newline46mondego>  (select count(*) as n from table1)<newline46mondego>  UNION ALL<newline46mondego>  (select count(*) as n from table2)<newline46mondego>) t;<newline46mondego>"
"4549splitHere46","4458360splitHere46","String SectorCode = null;<newline46mondego>String IndustrialCode = null;<newline46mondego>try{<newline46mondego>  SectorCode = employerProfile.getSectorCode().getSectorTypeId();<newline46mondego>  IndustrialCode = employerProfile.getIndustrialCode().getIndustryTypeId();<newline46mondego>  ...<newline46mondego>}catch(Exception ex){<newline46mondego>    if(SectorCode==null || IndustrialCode==null){<newline46mondego>       JOptionPane.showMessageDialog(null, <doubleQuotes46>Record not found<doubleQuotes46> );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4550splitHere46","4458430splitHere46","char"
"4551splitHere46","4458430splitHere46","short"
"4552splitHere46","4458430splitHere46","char"
"4553splitHere46","4458430splitHere46","short"
"4554splitHere46","4458430splitHere46","char"
"4555splitHere46","4458430splitHere46","char"
"4556splitHere46","4458430splitHere46","short"
"4557splitHere46","4458430splitHere46","char"
"4558splitHere46","4458559splitHere46","jQuery(document).ready(function() {<newline46mondego>    jQuery(<doubleQuotes46>.rich-stglpanel<doubleQuotes46>).removeClass(<doubleQuotes46>rich-stglpanel<doubleQuotes46>);<newline46mondego>    ...<newline46mondego>});<newline46mondego>"
"4559splitHere46","4458559splitHere46","rich-stglpanel"
"4560splitHere46","4458727splitHere46","sun.*"
"4561splitHere46","4458904splitHere46","List<Insertable>"
"4562splitHere46","4458904splitHere46","List<ClassCanBeInserted>"
"4563splitHere46","4458904splitHere46","Insertable"
"4564splitHere46","4458904splitHere46","ClassCanBeInserted"
"4565splitHere46","4458904splitHere46","SomeMethod(List<? extends Insertable> list)"
"4566splitHere46","4459026splitHere46","SimpleDateFormat"
"4567splitHere46","4459026splitHere46",":"
"4568splitHere46","4459026splitHere46",":"
"4569splitHere46","4459026splitHere46","2010-12-15T16:26:49.841-0800<newline46mondego>"
"4570splitHere46","4459026splitHere46","-0800"
"4571splitHere46","4459026splitHere46","-08:00"
"4572splitHere46","4459026splitHere46","SimpleDateFormat"
"4573splitHere46","4459026splitHere46","yyyy-MM-dd'T'HH:mm:ss.SSSZ"
"4574splitHere46","4459311splitHere46","public static int [][] concat(int a[], int b[]) {<newline46mondego>    int res[][] = new int[a.length][2];<newline46mondego>    if (a.length != b.length) {<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>lenght are not equal, cannot perform<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    for (int i = 0; i < a.length; i++) {<newline46mondego>        res[i][0] = a[i];<newline46mondego>        res[i][1] = b[i];<newline46mondego>    }<newline46mondego>    return res;<newline46mondego>}<newline46mondego>"
"4575splitHere46","4459393splitHere46","javax.swing.Timer"
"4576splitHere46","4459393splitHere46","ActionListener"
"4577splitHere46","4459393splitHere46","java.util.Timer"
"4578splitHere46","4459393splitHere46","Thread"
"4579splitHere46","4459393splitHere46","doWork"
"4580splitHere46","4459393splitHere46","Thread"
"4581splitHere46","4459652splitHere46","reference"
"4582splitHere46","4459652splitHere46","String s = null;<newline46mondego><newline46mondego>System.out.println(s instanceof Object); // false<newline46mondego>"
"4583splitHere46","4459680splitHere46","next()"
"4584splitHere46","4459680splitHere46","Iterator<String> iterator = (Iterator<String>) myList.iterator();<newline46mondego>while (iterator.hasNext()) {//List tagListAux<newline46mondego>        System.out.println(<doubleQuotes46>Test -> <doubleQuotes46>+iterator.next());<newline46mondego>        if(iterator.next().equalsIgnoreCase(myString)){<newline46mondego>        flag = true;<newline46mondego>}  <newline46mondego>"
"4585splitHere46","4459680splitHere46","for(String str: myList){<newline46mondego>        System.out.println(<doubleQuotes46>Test -> <doubleQuotes46>+str);<newline46mondego>        if(str.equalsIgnoreCase(myString)){<newline46mondego>        flag = true;<newline46mondego>}<newline46mondego>"
"4586splitHere46","4459696splitHere46","private final Iterator<? extends<newline46mondego>    Map.Entry<K, ? extends Collection<V>><newline46mondego>> iterator;<newline46mondego>"
"4587splitHere46","4459696splitHere46","public void foo(){<newline46mondego>    while(iterator.hasNext()){<newline46mondego>        Entry<K, ? extends Collection<V>> entry = iterator.next();<newline46mondego>        Collection<V> value = entry.getValue();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4588splitHere46","4459926splitHere46","public class MainFrame extends javax.swing.JFrame implements PropertyChangeListener {<newline46mondego><newline46mondego>    private final JLabel label = new JLabel();<newline46mondego><newline46mondego>    MainFrame() {<newline46mondego><newline46mondego>        setPreferredSize(new Dimension(200, 200));<newline46mondego>        add(label);<newline46mondego>        pack();<newline46mondego><newline46mondego>        SwingWorker worker = new SwingWorker() {<newline46mondego>            @Override<newline46mondego>            protected Object doInBackground() throws Exception {<newline46mondego>                String c = null;<newline46mondego>                for (String s : new String[] {<doubleQuotes46>a<doubleQuotes46>, <doubleQuotes46>b<doubleQuotes46>, <doubleQuotes46>c<doubleQuotes46>}) {<newline46mondego>                    Thread.sleep(1000);<newline46mondego>                    firePropertyChange(<doubleQuotes46>counter<doubleQuotes46>, c, c = s);<newline46mondego>                }<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        worker.addPropertyChangeListener(MainFrame.this);<newline46mondego>        worker.execute();<newline46mondego>    }<newline46mondego><newline46mondego>    public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>        if (<doubleQuotes46>counter<doubleQuotes46>.equals(evt.getPropertyName())) {<newline46mondego>            label.setText((String) evt.getNewValue());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                new MainFrame().setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4589splitHere46","4459964splitHere46","Days d = Days.daysBetween(startDate, endDate);<newline46mondego>int days = d.getDays();<newline46mondego>if(days==15){<newline46mondego>   //do something<newline46mondego>}<newline46mondego>"
"4590splitHere46","4460067splitHere46","public interface Executable() {<newline46mondego><newline46mondego>   void exec() throws SqlException();<newline46mondego><newline46mondego> }<newline46mondego>"
"4591splitHere46","4460067splitHere46","public void method1() {<newline46mondego>   execute(new Executable() {<newline46mondego><newline46mondego>     @Override<newline46mondego>     public void exec() throws SqlException() {<newline46mondego>          // your code here<newline46mondego>     }<newline46mondego>  });<newline46mondego>  } <newline46mondego>"
"4592splitHere46","4460067splitHere46","private void execute(Executor ex) {<newline46mondego>    try {<newline46mondego>      ex.exec();<newline46mondego>    } catch(...) {<newline46mondego>      ...<newline46mondego>    } finally {<newline46mondego>       ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4593splitHere46","4460140splitHere46","if (answer.equals(<doubleQuotes46>yes<doubleQuotes46>))<newline46mondego>    System.out.println(<doubleQuotes46>Enter ... informations : <doubleQuotes46>);<newline46mondego>else<newline46mondego>    System.out.println(<doubleQuotes46>Bye<doubleQuotes46>);<newline46mondego>"
"4594splitHere46","4460179splitHere46","String bigName = <doubleQuotes46>John McDonalds Harris<doubleQuotes46><newline46mondego>String[] names = bigName.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>System.out.println(String.format(<doubleQuotes46>FirstName: %s : LastName: %s<doubleQuotes46>, names[0], names[names.length-1])); <newline46mondego>"
"4595splitHere46","4460328splitHere46","org.apache.commons.collections.keyvalue.MultiKey"
"4596splitHere46","4460328splitHere46","Map<Multikey, Object>"
"4597splitHere46","4460440splitHere46","GET"
"4598splitHere46","4460440splitHere46","http://your.app.server.com/imei_script.php?imei=IMEI_VALUE<newline46mondego>"
"4599splitHere46","4460440splitHere46","<?php<newline46mondego>    // to return plain text<newline46mondego>    header(<doubleQuotes46>Content-Type: plain/text<doubleQuotes46>); <newline46mondego>    $imei = $_GET[<doubleQuotes46>imei<doubleQuotes46>];<newline46mondego>    // make a DB call to check if IMEI exists<newline46mondego>    // store <doubleQuotes46>true<doubleQuotes46> or <doubleQuotes46>false<doubleQuotes46> string in $retval<newline46mondego>    echo($retval);<newline46mondego>?><newline46mondego>"
"4600splitHere46","4460440splitHere46","String imei = ...;<newline46mondego>String url = <doubleQuotes46>http://your.app.server.com/imei_script.php?imei=<doubleQuotes46> + imei;<newline46mondego>// This will remotely call your PHP script with the IMEI parameter you need<newline46mondego>HttpConnection c = (HttpConnection)Connector.open(url);<newline46mondego>"
"4601splitHere46","4460555splitHere46","<div>"
"4602splitHere46","4460555splitHere46","<table>"
"4603splitHere46","4460619splitHere46","close()"
"4604splitHere46","4460752splitHere46","setOnClickListener(null)"
"4605splitHere46","4460826splitHere46","StringBuilder b = new StringBuilder();<newline46mondego>for (int i = 0; i < mac.length; i++) {<newline46mondego>    b.append(String.format(<doubleQuotes46>%02X%s<doubleQuotes46>, mac[i], (i < mac.length - 1) ? <doubleQuotes46>-<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>String s = b.toString();<newline46mondego>"
"4606splitHere46","4460947splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><weblogic-web-app xmlns=<doubleQuotes46>http://www.bea.com/ns/weblogic/90<doubleQuotes46>><newline46mondego>    <session-descriptor><newline46mondego>        <cookie-name>MyCookieName</cookie-name><newline46mondego>    </session-descriptor><newline46mondego></weblogic-web-app><newline46mondego>"
"4607splitHere46","4461107splitHere46","if (!isDisabled()) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4608splitHere46","4461107splitHere46","if (isEnabled()) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4609splitHere46","4461107splitHere46","boolean disabled = !isEnabled();<newline46mondego>if (disabled) {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4610splitHere46","4461132splitHere46","-b"
"4611splitHere46","4461132splitHere46","X"
"4612splitHere46","4461132splitHere46","localhost"
"4613splitHere46","4461132splitHere46","localhost"
"4614splitHere46","4461132splitHere46","X"
"4615splitHere46","4461132splitHere46","-b 0.0.0.0"
"4616splitHere46","4461132splitHere46","0.0.0.0"
"4617splitHere46","4461145splitHere46","c:set"
"4618splitHere46","4461145splitHere46","f:view beforePhase"
"4619splitHere46","4461145splitHere46","<c:set scope=<doubleQuotes46>request<doubleQuotes46> target=<doubleQuotes46>#{bean}<doubleQuotes46> property=<doubleQuotes46>id<doubleQuotes46> value=<doubleQuotes46>123<doubleQuotes46> /><newline46mondego><f:view beforePhase=<doubleQuotes46>#{bean.onload}<doubleQuotes46>><newline46mondego>    ...<newline46mondego></f:view><newline46mondego>"
"4620splitHere46","4461145splitHere46","public class Bean {<newline46mondego>    private String id; // +getter+setter<newline46mondego><newline46mondego>    public void onload(PhaseEvent event) {<newline46mondego>        // Value of id is available here.<newline46mondego>        System.out.println(id); // 123<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4621splitHere46","4461285splitHere46","Calendar.getInstance(TimeZone.getTimeZone(<doubleQuotes46>America/New_York<doubleQuotes46>)).getTime()"
"4622splitHere46","4461372splitHere46","getClass"
"4623splitHere46","4461372splitHere46","Class<?<newline46mondego>  extends |X|>"
"4624splitHere46","4461372splitHere46","getClass"
"4625splitHere46","4461372splitHere46","|X|"
"4626splitHere46","4461372splitHere46","MyClass"
"4627splitHere46","4461372splitHere46","instance.getClass()"
"4628splitHere46","4461372splitHere46","Class<? extends MyClass>"
"4629splitHere46","4461372splitHere46","Class<?>"
"4630splitHere46","4461372splitHere46","<T extends MyClass>"
"4631splitHere46","4461372splitHere46","MyClass"
"4632splitHere46","4461372splitHere46","T extends MyClass"
"4633splitHere46","4461372splitHere46","MyClass"
"4634splitHere46","4461372splitHere46","<? extends MyClass>"
"4635splitHere46","4461372splitHere46","MyClass"
"4636splitHere46","4461476splitHere46","ofstream fout(<doubleQuotes46>aaa.txt<doubleQuotes46>);<newline46mondego>fout << <doubleQuotes46>Hi, Ð¿Ñ€Ð¸Ð²ÐµÑ‚\n<doubleQuotes46>; <newline46mondego>"
"4637splitHere46","4461534splitHere46","var message : Message = new Message();<newline46mondego><newline46mondego>message.data = <doubleQuotes46>Hello from Merapi Flex.<doubleQuotes46>;<newline46mondego><newline46mondego>message.type = <doubleQuotes46>Reply<doubleQuotes46>;<newline46mondego><newline46mondego>Bridge.instance.sendMessage( message );<newline46mondego>"
"4638splitHere46","4461534splitHere46","Bridge bridge = Bridge.getInstance();<newline46mondego><newline46mondego>Message message = new Message();<newline46mondego><newline46mondego>message.setData(<doubleQuotes46>Hello from Merapi Java.<doubleQuotes46>);<newline46mondego><newline46mondego>bridge.sendMessage(message);<newline46mondego>"
"4639splitHere46","4461534splitHere46","<merapi:BridgeInstance<newline46mondego><newline46mondego>id=<doubleQuotes46>bridge<doubleQuotes46> result=<doubleQuotes46>handleResult(event)<doubleQuotes46> /><newline46mondego><newline46mondego><newline46mondego><newline46mondego><mx:Script><newline46mondego><newline46mondego><![CDATA[<newline46mondego><newline46mondego>private function handleResult( event : ResultEvent ) : void<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>var message : IMessage = event.result as IMessage;<newline46mondego>"
"4640splitHere46","4461534splitHere46","Bridge.getInstance().registerMessageHandler(<doubleQuotes46>Reply<doubleQuotes46>, messageHandlerInstance );<newline46mondego><newline46mondego>public void handleMessage( IMessage message )<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>System.out.println( message.getData() );<newline46mondego><newline46mondego>}<newline46mondego>"
"4641splitHere46","4461628splitHere46","@Entity<newline46mondego>public class Article{<newline46mondego><newline46mondego>    @Id<newline46mondego>    private Long id;<newline46mondego><newline46mondego>    @OneToMany(mappedBy=<doubleQuotes46>container<doubleQuotes46>)<newline46mondego>    private Set<LocalizedArticle> localizedArticles;<newline46mondego><newline46mondego>}<newline46mondego>"
"4642splitHere46","4461628splitHere46","@Entity<newline46mondego>public class LocalizedArticle{<newline46mondego><newline46mondego>    @ManyToOne<newline46mondego>    private Article container;<newline46mondego><newline46mondego>    @Id<newline46mondego>    private Long id;<newline46mondego><newline46mondego>    private String body;<newline46mondego><newline46mondego>    private String title;<newline46mondego><newline46mondego>    private String locale;<newline46mondego><newline46mondego>}<newline46mondego>"
"4643splitHere46","4461681splitHere46","System.getProperty()"
"4644splitHere46","4461681splitHere46","System.getProperty()"
"4645splitHere46","4461681splitHere46","Messages"
"4646splitHere46","4461681splitHere46",".getString"
"4647splitHere46","4461681splitHere46","Messages.getString(<doubleQuotes46>Test.STR0<doubleQuotes46>)<newline46mondego>"
"4648splitHere46","4461770splitHere46","textArea.addKeyUpHandler(new KeyUpHandler() {<newline46mondego>    public void onKeyUp(KeyUpEvent event) {<newline46mondego>        counter.setText(<doubleQuotes46>Number of characters: <doubleQuotes46> + textArea.getText().length());<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4649splitHere46","4461772splitHere46","Run As > JUnit test"
"4650splitHere46","4461772splitHere46","Run > Run Configurations"
"4651splitHere46","4461825splitHere46","Objects"
"4652splitHere46","4461825splitHere46","String"
"4653splitHere46","4461825splitHere46","Integer"
"4654splitHere46","4461825splitHere46","B"
"4655splitHere46","4461825splitHere46","Objects"
"4656splitHere46","4461825splitHere46","List<Number> numList = new ArrayList<Number>();<newline46mondego>numList.add(new Double(5.5));<newline46mondego>numList.add(new Integer(5));<newline46mondego>numList.add(new Long(10L));<newline46mondego>"
"4657splitHere46","4461978splitHere46","code=<doubleQuotes46>com.elementit.JavaPowUpload.Manager.class<doubleQuotes46><newline46mondego>"
"4658splitHere46","4462002splitHere46","h:commandLink"
"4659splitHere46","4462002splitHere46","h:link"
"4660splitHere46","4462002splitHere46","h:commandLink"
"4661splitHere46","4462002splitHere46","@PostConstruct"
"4662splitHere46","4462002splitHere46","h:link"
"4663splitHere46","4462002splitHere46","f:param"
"4664splitHere46","4462002splitHere46","@ManagedProperty"
"4665splitHere46","4462002splitHere46","public BeanOfTargetPage {<newline46mondego>    @ManagedProperty(value=<doubleQuotes46>#{param.foo}<doubleQuotes46>)<newline46mondego>    private String foo;<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    public void init() {<newline46mondego>        // Parameter 'foo' is available here.<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4666splitHere46","4462028splitHere46","x ? y : z"
"4667splitHere46","4462028splitHere46","String mood = inProfit() ? <doubleQuotes46>happy<doubleQuotes46> : <doubleQuotes46>sad<doubleQuotes46>;<newline46mondego>"
"4668splitHere46","4462028splitHere46","String"
"4669splitHere46","4462028splitHere46","if-else"
"4670splitHere46","4462028splitHere46","if (jXPanel6.isVisible()) {<newline46mondego>    jXPanel6.setVisible(true);<newline46mondego>}<newline46mondego>else {<newline46mondego>    jXPanel6.setVisible(false);<newline46mondego>}<newline46mondego>"
"4671splitHere46","4462028splitHere46","jXPanel6.setVisible(jXPanel6.isVisible());<newline46mondego>"
"4672splitHere46","4462070splitHere46","Constructor<?> c = class.getDeclaredConstructor();<newline46mondego>c.setAccessible(true);<newline46mondego>c.newInstance();<newline46mondego>"
"4673splitHere46","4462329splitHere46","while (current != last)"
"4674splitHere46","4462329splitHere46","=="
"4675splitHere46","4462329splitHere46","true"
"4676splitHere46","4462419splitHere46","GfxData"
"4677splitHere46","4462419splitHere46","private GfxData m_GraphicsData = new GfxData"
"4678splitHere46","4462494splitHere46","@Autowired"
"4679splitHere46","4462494splitHere46","@Qualifier"
"4680splitHere46","4462494splitHere46","@Autowired"
"4681splitHere46","4462494splitHere46","@Resource"
"4682splitHere46","4462494splitHere46","@Resource(name=<doubleQuotes46>jedisConnector<doubleQuotes46>)<newline46mondego>JedisConnector beanA;<newline46mondego><newline46mondego>@Resource(name=<doubleQuotes46>jedisConnectorPOD<doubleQuotes46>)<newline46mondego>JedisConnector beanB;<newline46mondego>"
"4683splitHere46","4462494splitHere46","@Resource<newline46mondego>JedisConnector jedisConnector;<newline46mondego><newline46mondego>@Resource<newline46mondego>JedisConnector jedisConnectorPOD;<newline46mondego>"
"4684splitHere46","4462500splitHere46","window.setExtendedState(Frame.MAXIMIZED_BOTH); //maximise window<newline46mondego><newline46mondego> window.setUndecorated(true); //remove decorations e.g. x in top right<newline46mondego>"
"4685splitHere46","4462500splitHere46","window.setAlwaysOnTop(true);<newline46mondego>"
"4686splitHere46","4462576splitHere46","<spring:message code=<doubleQuotes46>samples.title.dialog<doubleQuotes46> text=<doubleQuotes46>${samples.title.dialog}<doubleQuotes46>/><newline46mondego>"
"4687splitHere46","4462576splitHere46","samples.title.dialog"
"4688splitHere46","4462576splitHere46","<spring:message code=<doubleQuotes46>samples.title.dialog<doubleQuotes46> text=<doubleQuotes46>${applicationScope['samples.title.dialog']}<doubleQuotes46>/><newline46mondego><spring:message code=<doubleQuotes46>samples.title.dialog<doubleQuotes46> text=<doubleQuotes46>${requestScope['samples.title.dialog']}<doubleQuotes46>/><newline46mondego><spring:message code=<doubleQuotes46>samples.title.dialog<doubleQuotes46> text=<doubleQuotes46>${sessionScope['samples.title.dialog']}<doubleQuotes46>/><newline46mondego><spring:message code=<doubleQuotes46>samples.title.dialog<doubleQuotes46> text=<doubleQuotes46>${pageScope['samples.title.dialog']}<doubleQuotes46>/><newline46mondego>"
"4689splitHere46","4462664splitHere46","numbers"
"4690splitHere46","4462664splitHere46","target"
"4691splitHere46","4462664splitHere46","numbers"
"4692splitHere46","4462664splitHere46","target"
"4693splitHere46","4462664splitHere46","O(numbers.size * target)"
"4694splitHere46","4462664splitHere46","numbers.size"
"4695splitHere46","4462664splitHere46","0"
"4696splitHere46","4462664splitHere46","0"
"4697splitHere46","4462664splitHere46","numbers == {1, 3}"
"4698splitHere46","4462664splitHere46","{0, 1, 3, 4}"
"4699splitHere46","4462664splitHere46","numbers"
"4700splitHere46","4462664splitHere46","4"
"4701splitHere46","4462664splitHere46","{0 + 4, 1 + 4, 3 + 4, 4 + 4}"
"4702splitHere46","4462664splitHere46","numbers == {1, 3, 4}"
"4703splitHere46","4462664splitHere46","{0, 1, 3, 4, 5, 7, 8}"
"4704splitHere46","4462664splitHere46","boolean splittable(int[] numbers, int target) {<newline46mondego>    boolean[] reached = new boolean[target + 1];<newline46mondego>    reached[0] = true;<newline46mondego><newline46mondego>    for (int number : numbers) {<newline46mondego>        for (int sum = target - 1; sum >= 0; --sum) {<newline46mondego>            if (reached[sum] && sum + number <= target) {<newline46mondego>                reached[sum + number] = true;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return reached[target];<newline46mondego>}<newline46mondego>"
"4705splitHere46","4462664splitHere46","System.out.println(splittable(new int[]{3, 1, 4}, 7)); // => true<newline46mondego>System.out.println(splittable(new int[]{3, 1, 4}, 6)); // => false<newline46mondego>"
"4706splitHere46","4462664splitHere46","s"
"4707splitHere46","4462664splitHere46","s3"
"4708splitHere46","4462664splitHere46","s5"
"4709splitHere46","4462664splitHere46","s/2 - s3"
"4710splitHere46","4462664splitHere46","s/2 - s5"
"4711splitHere46","4462812splitHere46","scala.Long"
"4712splitHere46","4462812splitHere46","java.lang.Long"
"4713splitHere46","4462812splitHere46","found   : scala.collection.immutable.Map[scala.Long,Foo]<newline46mondego>required: scala.collection.Map[java.lang.Long,Foo]<newline46mondego>"
"4714splitHere46","4462812splitHere46","x.javaMethod(asJavaMap(Map((1:java.lang.Long) -> new Foo, (2:java.lang.Long) -> new Foo)))<newline46mondego>"
"4715splitHere46","4463178splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><!DOCTYPE hibernate-mapping PUBLIC <doubleQuotes46>-//Hibernate/Hibernate Mapping DTD 3.0//EN<doubleQuotes46><newline46mondego><doubleQuotes46>http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd<doubleQuotes46>><newline46mondego><!-- Generated Dec 16, 2010 8:37:02 AM by Hibernate Tools 3.4.0.Beta1 --><newline46mondego><hibernate-mapping><newline46mondego>    <class name=<doubleQuotes46>com.BiddingSystem.Models.Category<doubleQuotes46> table=<doubleQuotes46>CATEGORY<doubleQuotes46>><newline46mondego>        <id name=<doubleQuotes46>CategoryId<doubleQuotes46> type=<doubleQuotes46>long<doubleQuotes46>><newline46mondego>            <column name=<doubleQuotes46>CATEGORYID<doubleQuotes46> /><newline46mondego>            <generator class=<doubleQuotes46>native<doubleQuotes46> /><newline46mondego>        </id><newline46mondego>        <property name=<doubleQuotes46>CategoryName<doubleQuotes46> type=<doubleQuotes46>java.lang.String<doubleQuotes46>><newline46mondego>            <column name=<doubleQuotes46>CATEGORYNAME<doubleQuotes46> /><newline46mondego>        </property><newline46mondego><newline46mondego>        <many-to-one name=<doubleQuotes46>ParentCategory<doubleQuotes46> class=<doubleQuotes46>com.BiddingSystem.Models.Category<doubleQuotes46>><newline46mondego>            <column name=<doubleQuotes46>PARENT_CATEGORY_ID<doubleQuotes46> /><newline46mondego>        </many-to-one><newline46mondego><newline46mondego>        <set name=<doubleQuotes46>SubCategory<doubleQuotes46> lazy=<doubleQuotes46>false<doubleQuotes46> cascade=<doubleQuotes46>all-delete-orphan<doubleQuotes46> inverse=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>            <key><newline46mondego>                <column name=<doubleQuotes46>PARENT_CATEGORY_ID<doubleQuotes46> /><newline46mondego>            </key><newline46mondego>            <one-to-many class=<doubleQuotes46>com.BiddingSystem.Models.Category<doubleQuotes46> /><newline46mondego>        </set><newline46mondego><newline46mondego>        <set name=<doubleQuotes46>AllAttributes<doubleQuotes46> table=<doubleQuotes46>ATTRIBUTE<doubleQuotes46> inverse=<doubleQuotes46>false<doubleQuotes46> lazy=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>            <key><newline46mondego>                <column name=<doubleQuotes46>CATEGORYID<doubleQuotes46> /><newline46mondego>            </key><newline46mondego>            <one-to-many class=<doubleQuotes46>com.BiddingSystem.Models.Attribute<doubleQuotes46> /><newline46mondego>        </set><newline46mondego>    </class><newline46mondego></hibernate-mapping><newline46mondego>"
"4716splitHere46","4463180splitHere46","equals"
"4717splitHere46","4463180splitHere46","hashCode"
"4718splitHere46","4463180splitHere46","HashMap"
"4719splitHere46","4463180splitHere46","HashSet"
"4720splitHere46","4463180splitHere46","removeAll"
"4721splitHere46","4463180splitHere46","retainAll"
"4722splitHere46","4463180splitHere46","equals"
"4723splitHere46","4463180splitHere46","hashCode"
"4724splitHere46","4463180splitHere46","Item"
"4725splitHere46","4463180splitHere46","equals"
"4726splitHere46","4463180splitHere46","public class ItemWrapper {<newline46mondego>    private final Item item;<newline46mondego>    public ItemWrapper(Item item) {<newline46mondego>        this.item = item;<newline46mondego>    }<newline46mondego><newline46mondego>    public Item getItem() {<newline46mondego>        return item;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object obj) {<newline46mondego>        return obj instanceof ItemWrapper && item.getId().equals(((ItemWrapper) obj).item.getId());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        return item.getId().hashCode();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4727splitHere46","4463180splitHere46","ItemWrapper"
"4728splitHere46","4463180splitHere46","Item"
"4729splitHere46","4463180splitHere46","ItemWrapper"
"4730splitHere46","4463180splitHere46","removeAll"
"4731splitHere46","4463180splitHere46","retainAll"
"4732splitHere46","4463180splitHere46","Item"
"4733splitHere46","4463180splitHere46","ItemWrapper"
"4734splitHere46","4463180splitHere46","getItem()"
"4735splitHere46","4463180splitHere46","ArrayList"
"4736splitHere46","4463386splitHere46","Paragraph p = new Paragraph(); // or Phrase<newline46mondego>p.setLeading( 12f ); // in points<newline46mondego>"
"4737splitHere46","4463473splitHere46","JavaCompiler"
"4738splitHere46","4463473splitHere46","javax.tools"
"4739splitHere46","4463789splitHere46","myList = java.util.ArrayList<String>()<newline46mondego>"
"4740splitHere46","4463892splitHere46","<names><newline46mondego>    <name color=<doubleQuotes46>blue<doubleQuotes46> time=<doubleQuotes46>555555<doubleQuotes46>> <newline46mondego>        <element1 param=<doubleQuotes46>1<doubleQuotes46>> <newline46mondego>            <value>value1</value> <newline46mondego>            <value>value2</value> <newline46mondego>            <value>value3</value> <newline46mondego>        </element1> <newline46mondego>    </name> <newline46mondego>    <name color=<doubleQuotes46>blue<doubleQuotes46> time=<doubleQuotes46>888888<doubleQuotes46>> <newline46mondego>        <element1 param=<doubleQuotes46>1<doubleQuotes46>> <newline46mondego>            <value>value1</value> <newline46mondego>            <value>value2</value> <newline46mondego>            <value>value3</value> <newline46mondego>        </element1> <newline46mondego>    </name> <newline46mondego></names><newline46mondego>"
"4741splitHere46","4463892splitHere46","//name[@time = '555555']<newline46mondego>"
"4742splitHere46","4463892splitHere46","//name[@time = '555555']/element1/value<newline46mondego>"
"4743splitHere46","4463939splitHere46","String rex = <doubleQuotes46>^\\d+\\.\\s\\p{Lu}+.*<doubleQuotes46>;<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>1. PTYU fmmflksfkslfsm<doubleQuotes46>.matches(rex));<newline46mondego>// true<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>. PTYU fmmflksfkslfsm<doubleQuotes46>.matches(rex));<newline46mondego>// false, missing leading digit<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>1.PTYU fmmflksfkslfsm<doubleQuotes46>.matches(rex));<newline46mondego>// false, missing space after .<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>1. xPTYU fmmflksfkslfsm<doubleQuotes46>.matches(rex));<newline46mondego>// false, lower case letter before the upper case letters<newline46mondego>"
"4744splitHere46","4463939splitHere46","^"
"4745splitHere46","4463939splitHere46","\d+"
"4746splitHere46","4463939splitHere46","\"
"4747splitHere46","4463939splitHere46","\\"
"4748splitHere46","4463939splitHere46","\."
"4749splitHere46","4463939splitHere46","."
"4750splitHere46","4463939splitHere46","[.]"
"4751splitHere46","4463939splitHere46","\s"
"4752splitHere46","4463939splitHere46","{1}"
"4753splitHere46","4463939splitHere46","\p{Lu}+"
"4754splitHere46","4463939splitHere46","[A-Z]+"
"4755splitHere46","4463939splitHere46",".*"
"4756splitHere46","4463939splitHere46",".*"
"4757splitHere46","4463939splitHere46","String#match"
"4758splitHere46","4464076splitHere46","scalac"
"4759splitHere46","4464076splitHere46","javac"
"4760splitHere46","4464076splitHere46","*.class"
"4761splitHere46","4464076splitHere46","javac"
"4762splitHere46","4464409splitHere46","<applet code=<doubleQuotes46>MainApplet<doubleQuotes46> width=600 height=600 archive=<doubleQuotes46>GameAudio.jar<doubleQuotes46> ></applet><newline46mondego>"
"4763splitHere46","4464409splitHere46","<applet code=<doubleQuotes46>gameaudio.MainApplet<doubleQuotes46> width=600 height=600 archive=<doubleQuotes46>GameAudio.jar<doubleQuotes46> ></applet><newline46mondego>"
"4764splitHere46","4464659splitHere46","load"
"4765splitHere46","4464659splitHere46","IOException"
"4766splitHere46","4464659splitHere46","actionPerformed"
"4767splitHere46","4464659splitHere46","IOException"
"4768splitHere46","4464659splitHere46","try/catch"
"4769splitHere46","4464659splitHere46","actionPerformed"
"4770splitHere46","4464659splitHere46","RuntimeException"
"4771splitHere46","4465103splitHere46","javax.lang.model"
"4772splitHere46","4465163splitHere46","lazy=<doubleQuotes46>true<doubleQuotes46>"
"4773splitHere46","4465163splitHere46","lazy=<doubleQuotes46>false<doubleQuotes46>"
"4774splitHere46","4465163splitHere46","from Cat as cat<newline46mondego>    inner join fetch cat.mate<newline46mondego>    left join fetch cat.kittens<newline46mondego>"
"4775splitHere46","4465163splitHere46","from Cat as cat<newline46mondego>    inner join fetch cat.mate<newline46mondego>    left join fetch cat.kittens child<newline46mondego>    left join fetch child.kittens<newline46mondego>"
"4776splitHere46","4465254splitHere46","Unmarshaller.unmarshal"
"4777splitHere46","4465281splitHere46","web.xml"
"4778splitHere46","4465281splitHere46","request.getRequestURL().toString()"
"4779splitHere46","4465281splitHere46","doFilter()"
"4780splitHere46","4465543splitHere46","Image myImage= getImage(getDocumentBase(),<doubleQuotes46>img.jpg<doubleQuotes46>);<newline46mondego>ImageIcon imgIcon = new ImageIcon(myImage);<newline46mondego>"
"4781splitHere46","4465596splitHere46","${requestScope[<doubleQuotes46>javax.servlet.forward.request_uri<doubleQuotes46>]}<newline46mondego>"
"4782splitHere46","4465672splitHere46","ApplicationMessageFolder"
"4783splitHere46","4465833splitHere46","HashMap<String, String> map = new HashMap<String, String>();<newline46mondego>map.put(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>John<doubleQuotes46>);<newline46mondego>map.put(<doubleQuotes46>email<doubleQuotes46>, <doubleQuotes46>john@mail.com<doubleQuotes46>);<newline46mondego>"
"4784splitHere46","4465915splitHere46","Thread.interrupt()"
"4785splitHere46","4465915splitHere46","Thread.stop()"
"4786splitHere46","4465932splitHere46","KeyStroke.getKeyStroke(KeyEvent.VK_Z, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())<newline46mondego>"
"4787splitHere46","4466413splitHere46","System.out.printf(<doubleQuotes46>%2$,f + %1$,f<doubleQuotes46>, 1232.7, 4562343.2);<newline46mondego>"
"4788splitHere46","4466413splitHere46","4,562,343.200000 + 1,232.700000<newline46mondego>"
"4789splitHere46","4466607splitHere46","Number"
"4790splitHere46","4466607splitHere46","isAssignableFrom(Class<?>)"
"4791splitHere46","4466621splitHere46","class Foo { }<newline46mondego>class Bar {<newline46mondego>    function quux(Foo $f) { }<newline46mondego>}<newline46mondego>"
"4792splitHere46","4466621splitHere46","public"
"4793splitHere46","4466621splitHere46","protected"
"4794splitHere46","4466621splitHere46","private"
"4795splitHere46","4466621splitHere46","abstract"
"4796splitHere46","4466621splitHere46","final"
"4797splitHere46","4466621splitHere46","/**<newline46mondego> * @AclActivity('view-services')<newline46mondego> * @AclActivity('edit-services')<newline46mondego> */<newline46mondego>public function editServiceAction() { ... }<newline46mondego>"
"4798splitHere46","4466687splitHere46","@Transient"
"4799splitHere46","4466687splitHere46","@Transient<newline46mondego>public boolean isFinished() {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"4800splitHere46","4466767splitHere46","Field[] fields = DummyClass.class.getDeclaredFields();<newline46mondego>for (Field f : fields) {<newline46mondego>    if (Modifier.isStatic(f.getModifiers() && isRightName(f.getName()) {<newline46mondego>        doWhatever(f);<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"4801splitHere46","4466796splitHere46","boolean hasAmPmClock(Locale locale) {<newline46mondego>        DateFormat stdFormat = DateFormat.getTimeInstance(DateFormat.SHORT,<newline46mondego>                Locale.US);<newline46mondego>        DateFormat localeFormat = DateFormat.getTimeInstance(DateFormat.LONG,<newline46mondego>                locale);<newline46mondego>        String midnight = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        try {<newline46mondego>            midnight = localeFormat.format(stdFormat.parse(<doubleQuotes46>12:00 AM<doubleQuotes46>));<newline46mondego>        } catch (ParseException ignore) {<newline46mondego>        }<newline46mondego>        return midnight.contains(<doubleQuotes46>12<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4802splitHere46","4466937splitHere46","import"
"4803splitHere46","4467021splitHere46","checked"
"4804splitHere46","4467021splitHere46","<input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>group<doubleQuotes46> value=<doubleQuotes46>${grp.groupNo}<doubleQuotes46> ${grp.groupNo == param.group ? 'checked' : ''}><newline46mondego>"
"4805splitHere46","4467021splitHere46","?:"
"4806splitHere46","4467021splitHere46","checked"
"4807splitHere46","4467021splitHere46","<input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>group<doubleQuotes46> value=<doubleQuotes46>1<doubleQuotes46> checked><newline46mondego>"
"4808splitHere46","4467170splitHere46","<head>  <newline46mondego>     <meta http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=UTF-8<doubleQuotes46>>      <newline46mondego><newline46mondego>    <a4j:loadScript src=<doubleQuotes46>resource:///org/richfaces/renderkit/html/scripts/jquery/jquery.js<doubleQuotes46> />                 <newline46mondego>    <a4j:loadScript src=<doubleQuotes46>../scripts/highcharts.js<doubleQuotes46>/>  <newline46mondego><newline46mondego>    <script type=<doubleQuotes46>text/javascript<doubleQuotes46>>  <newline46mondego><newline46mondego>     jQuery.noConflict();  <newline46mondego><newline46mondego>     jQuery(document).ready(function()  <newline46mondego>     {  <newline46mondego>          ....  <newline46mondego>          ....  <newline46mondego>     });  <newline46mondego><newline46mondego> </script>  </head> <newline46mondego>"
"4809splitHere46","4467466splitHere46","ResponseHandler.handleResponse(HttpResponse response)"
"4810splitHere46","4467466splitHere46","HttpClient"
"4811splitHere46","4467466splitHere46","HttpClient.execute"
"4812splitHere46","4467466splitHere46","HttpResponse"
"4813splitHere46","4467466splitHere46","HttpResponse.getStatusLine().getStatusCode()"
"4814splitHere46","4467466splitHere46","org.apache.http.client.RedirectHandler"
"4815splitHere46","4467547splitHere46","for(int j = 0;j<nl.getLength();j++){<newline46mondego>    System.out.println(nl.item(j).getNodeName());<newline46mondego>}<newline46mondego>"
"4816splitHere46","4467547splitHere46","#text<newline46mondego>code<newline46mondego>#text<newline46mondego>name<newline46mondego>#text<newline46mondego>"
"4817splitHere46","4467547splitHere46","name"
"4818splitHere46","4467547splitHere46","Node nameNode = nl.item(3);<newline46mondego>"
"4819splitHere46","4467547splitHere46","NodeList nodelist = XPathAPI.selectNodeList(doc, <doubleQuotes46>//products/product/name<doubleQuotes46>);<newline46mondego>for (int i = 0; i < nodelist.getLength(); i++) {<newline46mondego>    productlist.add(nodelist.item(i).getTextContent());<newline46mondego>}<newline46mondego>"
"4820splitHere46","4467753splitHere46","scala> Some(1).orNull<newline46mondego><console>:10: error: could not find implicit value for parameter ev: <:<[Null,Int]<newline46mondego>       Some(1).orNull<newline46mondego>               ^<newline46mondego>scala> (None : Option[Int]).orNull<newline46mondego><console>:10: error: could not find implicit value for parameter ev: <:<[Null,Int]<newline46mondego>       (None : Option[Int]).orNull<newline46mondego><newline46mondego>scala> Some(<doubleQuotes46>hi<doubleQuotes46>).orNull<newline46mondego>res21: java.lang.String = hi<newline46mondego><newline46mondego>scala> Some(null : String).orNull<newline46mondego>res22: String = null<newline46mondego><newline46mondego>scala> (None : Option[String]).orNull<newline46mondego>res23: String = null<newline46mondego>"
"4821splitHere46","4467753splitHere46","def orNull[A >: Null] = ...."
"4822splitHere46","4467753splitHere46","<:<[Null, A1]"
"4823splitHere46","4467753splitHere46","Null <:< A1"
"4824splitHere46","4467753splitHere46","conforms"
"4825splitHere46","4467753splitHere46","scala> class Wrapper[A](option: Option[A]) {<newline46mondego>     | def orNull(implicit ev: Null <:< A): A = if(option.isEmpty) null else option.get<newline46mondego>     | }<newline46mondego>defined class Wrapper<newline46mondego><newline46mondego>scala> new Wrapper(Some(<doubleQuotes46>hi<doubleQuotes46>)).orNull<newline46mondego>res18: java.lang.String = hi<newline46mondego>"
"4826splitHere46","4467917splitHere46","request.setAttribute(<doubleQuotes46>macaddress<doubleQuotes46>, <doubleQuotes46>00-K0-89-9D-JY<doubleQuotes46>);<newline46mondego>"
"4827splitHere46","4467917splitHere46","<input type='hidden' value='${macaddress}' /><newline46mondego>"
"4828splitHere46","4468104splitHere46","public class DisplayBitmaps extends UiApplication<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        DisplayBitmaps theApp = new DisplayBitmaps();       <newline46mondego>        theApp.enterEventDispatcher();<newline46mondego>    }<newline46mondego><newline46mondego>    public DisplayBitmaps()<newline46mondego>    {        <newline46mondego>        pushScreen(new DisplayBitmapsScreen());<newline46mondego>    }    <newline46mondego>}<newline46mondego><newline46mondego>final class DisplayBitmapsScreen extends MainScreen<newline46mondego>{<newline46mondego>    DisplayBitmapsScreen()<newline46mondego>    {    <newline46mondego>     Bitmap bitmap = EncodedImage.getEncodedImageResource(<doubleQuotes46>images/image.png<doubleQuotes46>).getBitmap();<newline46mondego>     BitmapField bitmapField = new BitmapField(bitmap);<newline46mondego>        add(bitmapField);<newline46mondego>    }<newline46mondego><newline46mondego>    public void close()<newline46mondego>    {  <newline46mondego>        super.close();<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"4829splitHere46","4468104splitHere46","DisplayBitmapsScreen()<newline46mondego>{    <newline46mondego> //Bitmap bitmap = EncodedImage.getEncodedImageResource(<doubleQuotes46>images/image.png<doubleQuotes46>).getBitmap();<newline46mondego> try {<newline46mondego>  FileConnection fc = (FileConnection) Connector.open(<doubleQuotes46>file:///SDCard/BlackBerry/pictures/image.png<doubleQuotes46>);<newline46mondego>  if (fc.exists()) {<newline46mondego>   byte[] image = new byte[(int) fc.fileSize()];<newline46mondego>   InputStream inStream = fc.openInputStream();<newline46mondego>   inStream.read(image);<newline46mondego>   inStream.close();<newline46mondego>   EncodedImage encodedImage = EncodedImage.createEncodedImage(image, 0, -1);<newline46mondego>   BitmapField bitmapField = new BitmapField(encodedImage.getBitmap());<newline46mondego>   fc.close();<newline46mondego>   add(bitmapField);<newline46mondego>  }<newline46mondego> } catch (Exception e) { System.out.println(<doubleQuotes46>EXCEPTION <doubleQuotes46> + e); }<newline46mondego>}<newline46mondego>"
"4830splitHere46","4468104splitHere46","protected void paint(Graphics graphics) {<newline46mondego>   graphics.drawImage(x, y, width, height, image, frameIndex, left, top);<newline46mondego>   super.paint(graphics);<newline46mondego>}<newline46mondego>"
"4831splitHere46","4468257splitHere46","(86400000 - 82800000)/1000 = 3600"
"4832splitHere46","4468455splitHere46","main"
"4833splitHere46","4468455splitHere46","System.exit(0)"
"4834splitHere46","4468924splitHere46","Set<GroovyRowResult> rowResults = [] as Set<newline46mondego>Sql sql = // instantiate using a Connection, DataSource, or whatever<newline46mondego>List<String> spCallStrings = [] // add the SQL strings that calls each proc to this List<newline46mondego><newline46mondego>spCallStrings.each { spCallString -><newline46mondego><newline46mondego>    rowResults.addAll(sql.rows(spCallString))<newline46mondego>}<newline46mondego>"
"4835splitHere46","4468986splitHere46","max ;          // Error, missing =<newline46mondego>"
"4836splitHere46","4468986splitHere46","javac"
"4837splitHere46","4468986splitHere46","YourFile.java:line: not a statement<newline46mondego>max ;<newline46mondego>^<newline46mondego>"
"4838splitHere46","4469246splitHere46","jEnv->ReleaseCharArrayElements(javaCharArray, C_CharArray, JNI_COMMIT);<newline46mondego>"
"4839splitHere46","4469259splitHere46","Turn"
"4840splitHere46","4469259splitHere46","List<Turn> turns = new ArrayList<Turn>();<newline46mondego>"
"4841splitHere46","4469259splitHere46","turns.add(new Turn());<newline46mondego>"
"4842splitHere46","4469259splitHere46","private void fixTurn(int number) {<newline46mondego>   Turn memory = turns.get(number);<newline46mondego>   memory.setCount(memory.getCount()+count);<newline46mondego>}<newline46mondego>"
"4843splitHere46","4469486splitHere46","tapestry.production-mode=false"
"4844splitHere46","4469486splitHere46","Tapestry-Module-Classes"
"4845splitHere46","4469486splitHere46","META-INF/MANIFEST.MF"
"4846splitHere46","4469486splitHere46","public class MyTapestryComponentsModule {<newline46mondego><newline46mondego>   public static void contributeComponentClassResolver(<newline46mondego>            Configuration<LibraryMapping> configuration) {<newline46mondego>        configuration.add(<newline46mondego>            new LibraryMapping(<doubleQuotes46>myprefix<doubleQuotes46>, <doubleQuotes46>my.tapestry.basepackage<doubleQuotes46>));<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"4847splitHere46","4469486splitHere46","my.tapestry.basepackage.components"
"4848splitHere46","4469486splitHere46","my.tapestry.basepackage.mixins"
"4849splitHere46","4469486splitHere46","<div t:type=<doubleQuotes46>myprefix/MyComponent<doubleQuotes46> ... /><newline46mondego>"
"4850splitHere46","4469486splitHere46","2010-12-20 20:27:07,663 [main] INFO  org.apache.tapestry5.services.TapestryModule.ComponentClassResolver - Available components:<newline46mondego>  ActionLink: org.apache.tapestry5.corelib.components.ActionLink<newline46mondego>  AddRowLink: org.apache.tapestry5.corelib.components.AddRowLink<newline46mondego>  etc.<newline46mondego>"
"4851splitHere46","4469723splitHere46","List<Number> l = new ArrayList<Integer>();<newline46mondego>"
"4852splitHere46","4469723splitHere46","public void foo(List<Number> list) {<newline46mondego>    l.add(new Double(42.0));<newline46mondego>}<newline46mondego>"
"4853splitHere46","4469723splitHere46","foo(l)"
"4854splitHere46","4469723splitHere46","Double"
"4855splitHere46","4469723splitHere46","Number"
"4856splitHere46","4469723splitHere46","Double"
"4857splitHere46","4469723splitHere46","ArrayList<Integer>"
"4858splitHere46","4469748splitHere46","String.format(<doubleQuotes46>%010d<doubleQuotes46>, Integer.parseInt(mystring));<newline46mondego>"
"4859splitHere46","4469864splitHere46","public class SuperClass<newline46mondego>{<newline46mondego>    public SuperClass()<newline46mondego>    {<newline46mondego>        new SubClass();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class SubClass extends SuperClass<newline46mondego>{<newline46mondego>    public SubClass()<newline46mondego>    {<newline46mondego>        super();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4860splitHere46","4469930splitHere46","<list name=<doubleQuotes46>whatEver<doubleQuotes46>><newline46mondego>        <key column=<doubleQuotes46>whatEver_fk<doubleQuotes46>/><newline46mondego>        <index column=<doubleQuotes46>idx<doubleQuotes46>/><newline46mondego>        <one-to-many class=<doubleQuotes46>WhatEver<doubleQuotes46>/><newline46mondego>    </list><newline46mondego>"
"4861splitHere46","4469990splitHere46","@ManagedProperty"
"4862splitHere46","4469990splitHere46","@ManagedBean"
"4863splitHere46","4469990splitHere46","UserIdentity"
"4864splitHere46","4469990splitHere46","UserIdentity identity = (UserIdentity) request.getSession().getAttribute(<doubleQuotes46>userIdentity<doubleQuotes46>);<newline46mondego>"
"4865splitHere46","4469990splitHere46","FacesContext"
"4866splitHere46","4469990splitHere46","FacesServlet"
"4867splitHere46","4469990splitHere46","FacesContext"
"4868splitHere46","4469990splitHere46","null"
"4869splitHere46","4470072splitHere46","System.out.println(<doubleQuotes46>Joe<doubleQuotes46>.replaceAll(<doubleQuotes46>.(?!$)<doubleQuotes46>, <doubleQuotes46>$0 <doubleQuotes46>));<newline46mondego>"
"4870splitHere46","4470177splitHere46","com\extjs\gxt\ui\client\messages\XMessages.properties"
"4871splitHere46","4470177splitHere46","com\extjs\gxt\ui\client\messages\XMessages_it.properties"
"4872splitHere46","4470398splitHere46","cd"
"4873splitHere46","4470398splitHere46","org"
"4874splitHere46","4470398splitHere46","java -cp . org.kodeplay.kodejava.NewHelloWorld<newline46mondego>"
"4875splitHere46","4470530splitHere46","invokeAll(batch1); invokeAll(batch2);"
"4876splitHere46","4470530splitHere46","invokeAll()"
"4877splitHere46","4470530splitHere46","Runnable"
"4878splitHere46","4470530splitHere46","Callable"
"4879splitHere46","4470530splitHere46","Executors.callable(Runnable r)"
"4880splitHere46","4470530splitHere46","Executors.newSingleThreadExecutor()"
"4881splitHere46","4470530splitHere46","Callable"
"4882splitHere46","4470530splitHere46","Future"
"4883splitHere46","4470530splitHere46","myFuture.get()"
"4884splitHere46","4470612splitHere46","BuilderChild"
"4885splitHere46","4470612splitHere46","new BuilderChild<Object>().doSmth().doSmthElse();<newline46mondego>"
"4886splitHere46","4470612splitHere46","doSmthElse"
"4887splitHere46","4470612splitHere46","BuilderChild<T> doSmthElse()"
"4888splitHere46","4470835splitHere46","if (src.equals(destFolder)) {<newline46mondego>    continue;<newline46mondego>}<newline46mondego>"
"4889splitHere46","4470835splitHere46","File[] files = src.listFiles();"
"4890splitHere46","4470835splitHere46","src.list()"
"4891splitHere46","4470835splitHere46","File[] files"
"4892splitHere46","4470835splitHere46","File files[]"
"4893splitHere46","4470835splitHere46","InputStream.read(byte[])"
"4894splitHere46","4470835splitHere46","!= -1"
"4895splitHere46","4470835splitHere46","> 0"
"4896splitHere46","4470872splitHere46","<Pattern>[%X{contextID}] - [%thread] - %date{dd/MM/yyyy HH:mm:ss} %level %msg%n</Pattern><newline46mondego>"
"4897splitHere46","4470872splitHere46","public class LoggerSeparator implements InitializingBean{<newline46mondego>    private Integer contextID;<newline46mondego><newline46mondego>    public LoggerSeparator() {}<newline46mondego><newline46mondego>    public void setContextID(int id) {<newline46mondego>        this.contextID = id;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void afterPropertiesSet() throws Exception {<newline46mondego>        if ( contextID != null )<newline46mondego>            MDC.put(<doubleQuotes46>contextID<doubleQuotes46>, contextID.toString());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4898splitHere46","4470872splitHere46","<bean class=<doubleQuotes46>com.myproblem.LoggerSeparator<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>contextID<doubleQuotes46> value=<doubleQuotes46>${contextID}<doubleQuotes46> /><newline46mondego></bean><newline46mondego>...<newline46mondego>"
"4899splitHere46","4470872splitHere46","...<newline46mondego>Properties props = new Properties();<newline46mondego>props.put(<doubleQuotes46>contextID<doubleQuotes46>, contextID);<newline46mondego>PropertyPlaceholderConfigurer conf = new PropertyPlaceholderConfigurer();<newline46mondego>conf.setProperties(props);<newline46mondego>ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext();<newline46mondego>context.addBeanFactoryPostProcessor(conf);<newline46mondego>context.setConfigLocation(<doubleQuotes46>beans/main.xml<doubleQuotes46>);<newline46mondego>context.refresh();<newline46mondego>...<newline46mondego>"
"4900splitHere46","4470927splitHere46","org.mozilla.javascript.EcmaError: TypeError: Cannot find function attachEvent in object [object Image]<newline46mondego>"
"4901splitHere46","4470927splitHere46","Image"
"4902splitHere46","4470927splitHere46","attachEvent"
"4903splitHere46","4470927splitHere46","(function(){ var b,d,e,f;function g(a,c)<newline46mondego>"
"4904splitHere46","4471007splitHere46","<context-param><newline46mondego>    <param-name>webAppRootKey</param-name><newline46mondego>    <param-value>myRootKey</param-value><newline46mondego></context-param><newline46mondego>"
"4905splitHere46","4471009splitHere46","(alphanum)(underscore)(num)(hyphen)(num)(dot)(aLpHa)(dot)(num)(dot)(num)(dot)(.xml)"
"4906splitHere46","4471009splitHere46","\w*_\d*-\d*\.([a-zA-Z])*\.\d*\.\d*(\.)?\.xml"
"4907splitHere46","4471009splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>\\w*_\\d*-\\d*\\.([a-zA-Z])*\\.\\d*\\.\\d*(\\.)?\\.xml<doubleQuotes46>,Pattern.CASE_INSENSITIVE);"
"4908splitHere46","4471009splitHere46","[a-zA-Z]"
"4909splitHere46","4471009splitHere46","Pattern.CASE_INSENSITIVE"
"4910splitHere46","4471009splitHere46","s.matches(<doubleQuotes46>[a-zA-Z0-9]_[0-9]-[0-9].[a-zA-Z].[0-9].[0-9].xml<doubleQuotes46>);"
"4911splitHere46","4471009splitHere46","alpha"
"4912splitHere46","4471009splitHere46","number"
"4913splitHere46","4471009splitHere46","alphanumeric"
"4914splitHere46","4471009splitHere46","*"
"4915splitHere46","4471009splitHere46","+"
"4916splitHere46","4471016splitHere46","public class DataProbability implements Comparable<DataProbability> {<newline46mondego>    private int data;<newline46mondego>    private double probability;<newline46mondego><newline46mondego>    public int getData() {<newline46mondego>        return data;<newline46mondego>    }<newline46mondego><newline46mondego>    public double getProbability() {<newline46mondego>        return probability;<newline46mondego>    }<newline46mondego><newline46mondego>    public int compareTo(DataProbability pProb) {<newline46mondego>        return Double.compare(getProbability(), pProb.getProbability());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// Later, with your list<newline46mondego>List<DataProbability> lDataList = new ArrayList<DataProbability>();<newline46mondego>// Add some elements<newline46mondego>Collections.sort(lDataList);<newline46mondego>"
"4917splitHere46","4471028splitHere46","org.dbunit.ext.oracle.Oracle10DataTypeFactory"
"4918splitHere46","4471071splitHere46","while ((line = reader.readLine()) != null) {<newline46mondego>    line = process(line);<newline46mondego>    writer.println(line);<newline46mondego>}<newline46mondego>"
"4919splitHere46","4471211splitHere46","List<Circle>"
"4920splitHere46","4471211splitHere46","Comparator<Shape>"
"4921splitHere46","4471371splitHere46","setCompany(Company company) {<newline46mondego>  this.company = company);<newline46mondego>}<newline46mondego>"
"4922splitHere46","4471640splitHere46","JSlider"
"4923splitHere46","4471640splitHere46","SynthSliderUI"
"4924splitHere46","4471640splitHere46","protected boolean paintValue"
"4925splitHere46","4471640splitHere46","private void updateStyle(JSlider c)"
"4926splitHere46","4471640splitHere46","paintValue"
"4927splitHere46","4471640splitHere46","setUI()"
"4928splitHere46","4471640splitHere46","SynthSliderUI"
"4929splitHere46","4471640splitHere46","paintValue"
"4930splitHere46","4471640splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.lang.reflect.Field;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JSlider;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego>import javax.swing.UIManager;<newline46mondego><newline46mondego>public class SliderDemo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        UIManager.setLookAndFeel(<doubleQuotes46>javax.swing.plaf.synth.SynthLookAndFeel<doubleQuotes46>);<newline46mondego><newline46mondego>        Class<?> sliderUIClass = Class.forName(<doubleQuotes46>javax.swing.plaf.synth.SynthSliderUI<doubleQuotes46>);<newline46mondego>        final Field paintValue = sliderUIClass.getDeclaredField(<doubleQuotes46>paintValue<doubleQuotes46>);<newline46mondego>        paintValue.setAccessible(true);<newline46mondego><newline46mondego>        SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                JFrame f = new JFrame();<newline46mondego>                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                f.setLayout(new BorderLayout());<newline46mondego><newline46mondego>                JSlider slider = new JSlider(3, 6, 4);<newline46mondego>                try {<newline46mondego>                    paintValue.set(slider.getUI(), false);<newline46mondego>                } catch (Exception e) {<newline46mondego>                    throw new RuntimeException(e);<newline46mondego>                }<newline46mondego>                f.add(slider, BorderLayout.CENTER);<newline46mondego><newline46mondego>                f.pack();<newline46mondego>                f.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}"
"4931splitHere46","4471950splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Hello, world!<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setVisible(true);<newline46mondego>        System.out.println(<doubleQuotes46>Main method returns<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4932splitHere46","4471950splitHere46","main"
"4933splitHere46","4472133splitHere46",".getOutputStream()"
"4934splitHere46","4472133splitHere46",".getWriter()"
"4935splitHere46","4472303splitHere46","HTTPConduit"
"4936splitHere46","4472303splitHere46","HTTPCLientPolicy"
"4937splitHere46","4472303splitHere46","MyWebService service = new MyWebService();<newline46mondego>MyWebServicePortType client = service.MyWebServicePort();<newline46mondego><newline46mondego>Client cl = ClientProxy.getClient(client);<newline46mondego><newline46mondego>HTTPConduit http = (HTTPConduit) cl.getConduit();<newline46mondego><newline46mondego>HTTPClientPolicy httpClientPolicy = new HTTPClientPolicy();<newline46mondego>httpClientPolicy.setConnectionTimeout(0);<newline46mondego>httpClientPolicy.setReceiveTimeout(0);<newline46mondego><newline46mondego>http.setClient(httpClientPolicy);<newline46mondego><newline46mondego>client.doSomething(...);<newline46mondego>"
"4938splitHere46","4472364splitHere46","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter<newline46mondego>System.IO.FileStream<newline46mondego>"
"4939splitHere46","4472364splitHere46","BinaryFormatter formatter = new BinaryFormatter();<newline46mondego>FileStream file = File.OpenRead(@<doubleQuotes46>InsertFileName<doubleQuotes46>);<newline46mondego>TheClass classInstance = (TheClass)formatter.Deserialize(file);<newline46mondego>file.Close();<newline46mondego>"
"4940splitHere46","4472364splitHere46","System.Runtime.Serialization.Formatters.Soap.SoapFormatter<newline46mondego>"
"4941splitHere46","4472364splitHere46","FileStream file = File.Create(@<doubleQuotes46>InsertFileName<doubleQuotes46>);<newline46mondego>SoapFormatter formatter = new SoapFormatter();<newline46mondego>formatter.Serialize(file, classInstance);<newline46mondego>file.Close();<newline46mondego>"
"4942splitHere46","4472364splitHere46","System.Xml.Serialization.XmlSerializer<newline46mondego>"
"4943splitHere46","4472364splitHere46","XmlSerializer serializer = new XmlSerializer(typeof(TheClass));<newline46mondego>StreamWriter xmlFile = new StreamWriter(@<doubleQuotes46>InsertFileName<doubleQuotes46>);<newline46mondego>serializer.Serialize(xmlFile, classInstance);<newline46mondego>xmlFile.Close();<newline46mondego>"
"4944splitHere46","4472406splitHere46","\v"
"4945splitHere46","4472406splitHere46",":help magic"
"4946splitHere46","4472629splitHere46","BeforeSelectionHandler"
"4947splitHere46","4472629splitHere46","cancel"
"4948splitHere46","4472629splitHere46","but understand that it is"
"4949splitHere46","4472629splitHere46","not a drop in replacement for this class"
"4950splitHere46","4472696splitHere46","RequiredAnnotationBeanPostProcessor"
"4951splitHere46","4472696splitHere46","PriorityOrdered"
"4952splitHere46","4472696splitHere46","Integer.MAX_VALUE - 1"
"4953splitHere46","4472696splitHere46","PriorityOrdered"
"4954splitHere46","4472696splitHere46","RequiredAnnotationBeanPostProcessor"
"4955splitHere46","4472742splitHere46","<*Am I right? or is that not how it behaves? some explanation pls.*>"
"4956splitHere46","4472742splitHere46","<*Again, some comments/suggestion appreciated.*>"
"4957splitHere46","4472762splitHere46","ImageIO.read('some file')"
"4958splitHere46","4472762splitHere46","com.sun.imageio.plugins.jpeg.JPEGImageReader"
"4959splitHere46","4472762splitHere46","SeekableStream seekableStream =  new FileSeekableStream(new File(<doubleQuotes46>front.jpg<doubleQuotes46>));<newline46mondego>ParameterBlock pb = new ParameterBlock();<newline46mondego>pb.add(seekableStream);<newline46mondego><newline46mondego>BufferedImage image = JAI.create(<doubleQuotes46>jpeg<doubleQuotes46>, pb).getAsBufferedImage();<newline46mondego>"
"4960splitHere46","4472989splitHere46","00001010"
"4961splitHere46","4472989splitHere46","?"
"4962splitHere46","4473085splitHere46","public class MyActionSubPub<newline46mondego>{<newline46mondego>    private List<ActionListener> downstreams = new ArrayList<ActionListener>();<newline46mondego>    public MyActionSubPub( AbstractButton(or whatever) button )<newline46mondego>    {<newline46mondego>        button.addActionListener( this );<newline46mondego>    }<newline46mondego>    public addActionListener( ActionListener listener )<newline46mondego>    {<newline46mondego>        downstreams.add( listener );<newline46mondego>    }<newline46mondego>    public void actionPerformed( ActionEvent event )<newline46mondego>    {<newline46mondego>        ... do your stuff ...<newline46mondego>        ... loop through all downstreams, call actionPerformed on each...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4963splitHere46","4473103splitHere46","import java.math.BigInteger;<newline46mondego><newline46mondego>public class BigIntegerTest {<newline46mondego><newline46mondego>    public BigInteger add(long a, long b){<newline46mondego>        BigInteger big1 = new BigInteger(Long.toString(a));<newline46mondego>        BigInteger big2 = new BigInteger(Long.toString(b));<newline46mondego><newline46mondego>        return big1.add(big2);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        System.out.println(new BigIntegerTest().add(22342342424323423L, 234234234234234234L));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4964splitHere46","4473182splitHere46","# Problematic frame:<newline46mondego># C  [nvd3dum.dll+0x2fff52]<newline46mondego>"
"4965splitHere46","4473296splitHere46","RandomAccessFile"
"4966splitHere46","4473296splitHere46","InputStream"
"4967splitHere46","4473296splitHere46","InputStream input = zipFile.getInputStream(entry);<newline46mondego>"
"4968splitHere46","4473296splitHere46","InputStreamReader"
"4969splitHere46","4473296splitHere46","BufferedReader"
"4970splitHere46","4473296splitHere46","BufferedReader br = new BufferedReader(new InputStreamReader(input, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"4971splitHere46","4473296splitHere46","try/finally"
"4972splitHere46","4473736splitHere46","public static final String COMMA=<doubleQuotes46>,<doubleQuotes46>;"
"4973splitHere46","4473818splitHere46","JAXBContext jc = JAXBContext.newInstance(Root.class);<newline46mondego>Marshaller marshaller = jc.createMarshaller();<newline46mondego>marshaller.setProperty(Marshaller.JAXB_NO_NAMESPACE_SCHEMA_LOCATION, <doubleQuotes46>bla-bla.xsd<doubleQuotes46>);<newline46mondego>"
"4974splitHere46","4473939splitHere46","App-ClassLoader: resolveClass(<doubleQuotes46>SomeCoolThing<doubleQuotes46>)<newline46mondego>    parent->resolveClass(<doubleQuotes46>SomeCoolThing<doubleQuotes46>)<newline46mondego><newline46mondego>Boot-ClassLoader (the ultimate parent): resolveClass(<doubleQuotes46>SomeCoolThing<doubleQuotes46>)<newline46mondego>    SomeCoolThing needs SomeLameThing<newline46mondego>    resolveClass(<doubleQuotes46>SomeLameThing<doubleQuotes46>)<newline46mondego>        Can't find it!!!!<newline46mondego>"
"4975splitHere46","4473963splitHere46","DefaultWorkflowInterceptor"
"4976splitHere46","4474492splitHere46","MyWrapper {<newline46mondego>    private OtherClass data;<newline46mondego><newline46mondego>    MyWrapper(OtherClass data) {<newline46mondego>        this.data = data;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean equals(Object that) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4977splitHere46","4474785splitHere46","FileNotFoundException"
"4978splitHere46","4474785splitHere46","IllegalStateException"
"4979splitHere46","4474785splitHere46","BeanCreationException"
"4980splitHere46","4474785splitHere46","FileNotFoundException"
"4981splitHere46","4474785splitHere46","init()"
"4982splitHere46","4474785splitHere46","fatal"
"4983splitHere46","4474790splitHere46","org.apache.log4j.RollingFileAppender"
"4984splitHere46","4474790splitHere46","<newline46mondego>log4j.appender.NotConsole=org.apache.log4j.RollingFileAppender<newline46mondego>log4j.appender.NotConsole.fileName=/some/path/to/a/fileName.log<newline46mondego>log4j.appender.NotConsole.maxFileSize=20MB<newline46mondego>"
"4985splitHere46","4474902splitHere46","FontFactory.getFont(...)"
"4986splitHere46","4474902splitHere46","FontFactory.registerDirectories()"
"4987splitHere46","4474902splitHere46","FontFactory.register(fontPath)"
"4988splitHere46","4474902splitHere46","FontFactory.registerDirectories();<newline46mondego><newline46mondego>Font fuente = FontFactory.getFont(<doubleQuotes46>Times New Roman<doubleQuotes46>);<newline46mondego>"
"4989splitHere46","4474902splitHere46","Font.getFamily()"
"4990splitHere46","4474973splitHere46","InputStream"
"4991splitHere46","4474973splitHere46","HttpServletRequest#getPart()"
"4992splitHere46","4474973splitHere46","Part#getInputStream()"
"4993splitHere46","4474973splitHere46","InputStream"
"4994splitHere46","4475132splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame jf = new JFrame(<doubleQuotes46>Scorllbar test<doubleQuotes46>);<newline46mondego>        JPanel jp = new JPanel() {{ add(new JComponent() {<newline46mondego>                { setPreferredSize(new Dimension(450, 450)); }<newline46mondego>                public void paintComponent(Graphics g) {<newline46mondego>                    g.drawLine(0, 0, getWidth(), getHeight());<newline46mondego>                    g.drawLine(getWidth(), 0, 0, getHeight());<newline46mondego>                }});}};<newline46mondego><newline46mondego>        JScrollPane sp = new JScrollPane(jp,<newline46mondego>                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,<newline46mondego>                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);<newline46mondego><newline46mondego>        // Get the scroll-bar and make it a bit wider.<newline46mondego>        JScrollBar sb = sp.getVerticalScrollBar();<newline46mondego>        sb.setPreferredSize(new Dimension(50, 0));<newline46mondego><newline46mondego>        // Put it to the left.<newline46mondego>        sp.remove(sb);<newline46mondego>        JPanel tmp = new JPanel(new BorderLayout());<newline46mondego>        tmp.add(sp, BorderLayout.CENTER);<newline46mondego>        tmp.add(sb, BorderLayout.WEST);<newline46mondego><newline46mondego>        jf.add(tmp);<newline46mondego>        jf.setSize(300, 300);<newline46mondego>        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        jf.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4995splitHere46","4475200splitHere46","<doubleQuotes46>hello8<doubleQuotes46>.replaceAll(<doubleQuotes46>([1-9])<doubleQuotes46>, <doubleQuotes46>!$1<doubleQuotes46>);<newline46mondego>"
"4996splitHere46","4475200splitHere46","$0"
"4997splitHere46","4475200splitHere46","<doubleQuotes46>hello8<doubleQuotes46>.replaceAll(<doubleQuotes46>[1-9]<doubleQuotes46>, <doubleQuotes46>!$0<doubleQuotes46>);<newline46mondego>"
"4998splitHere46","4475223splitHere46","<bean id=<doubleQuotes46>myFactory2<doubleQuotes46> factory-bean=<doubleQuotes46>myFactory<doubleQuotes46> factory-method=<doubleQuotes46>createFactory<doubleQuotes46>><newline46mondego><newline46mondego></bean><newline46mondego>"
"4999splitHere46","4475223splitHere46","<bean id=<doubleQuotes46>myFactory2<doubleQuotes46> class=<doubleQuotes46>org.springframework.beans.factory.config.MethodInvokingFactoryBean<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>targetObject<doubleQuotes46>><ref local=<doubleQuotes46>myFactory<doubleQuotes46>/></property><newline46mondego>   <property name=<doubleQuotes46>targetMethod<doubleQuotes46>><value>createFactory</value></property><newline46mondego> </bean><newline46mondego>"
"5000splitHere46","4475417splitHere46","PostMethod filePost = new PostMethod('https://graph.facebook.com/me/photos');<newline46mondego>    filePost.getParams().setBooleanParameter(HttpMethodParams.USE_EXPECT_CONTINUE, false);<newline46mondego>    try {<newline46mondego>      println(<doubleQuotes46>Uploading <doubleQuotes46> + file.getName() + <doubleQuotes46> to 'https://graph.facebook.com/me/photos'<doubleQuotes46>);<newline46mondego>      Part[] parts = [new FilePart('source', file.getName(), file), new StringPart('access_token', <doubleQuotes46>${facebookData.access_token}<doubleQuotes46>), new StringPart('message', 'some message')]<newline46mondego>      filePost.setRequestEntity(new MultipartRequestEntity(parts, filePost.getParams()));<newline46mondego>      HttpClient client = new HttpClient();<newline46mondego>      client.getHttpConnectionManager().getParams().setConnectionTimeout(5000);<newline46mondego>      int status = client.executeMethod(filePost);<newline46mondego>      if (status == HttpStatus.SC_OK) {<newline46mondego>        println(<doubleQuotes46>Upload complete, response=<doubleQuotes46> + filePost.getResponseBodyAsString());<newline46mondego>      } else {<newline46mondego>        println(<doubleQuotes46>Upload failed, response=<doubleQuotes46> + HttpStatus.getStatusText(status));<newline46mondego>        // Create response<newline46mondego>        StringBuilder notificationsSendResponse = new StringBuilder();<newline46mondego>        byte[] byteArrayNotifications = new byte[4096];<newline46mondego>        for (int n; (n = filePost.getResponseBodyAsStream().read(byteArrayNotifications)) != -1;) {<newline46mondego>          notificationsSendResponse.append(new String(byteArrayNotifications, 0, n));<newline46mondego>        }<newline46mondego>        String notificationInfo = notificationsSendResponse.toString();<newline46mondego>      }<newline46mondego>    } catch (Exception ex) {<newline46mondego>      println(<doubleQuotes46>ERROR: <doubleQuotes46> + ex.getClass().getName() + <doubleQuotes46> <doubleQuotes46> + ex.getMessage());<newline46mondego>      ex.printStackTrace();<newline46mondego>    } finally {<newline46mondego>      filePost.releaseConnection();<newline46mondego>    }<newline46mondego>"
"5001splitHere46","4475486splitHere46","short"
"5002splitHere46","4475486splitHere46","Short"
"5003splitHere46","4475486splitHere46","getShort()"
"5004splitHere46","4475486splitHere46","int"
"5005splitHere46","4475487splitHere46","log4j-1.2.16.jar"
"5006splitHere46","4475487splitHere46",".onLoad <- function(lib, pkg) {<newline46mondego>    pathToSdk <- paste(system.file(package = <doubleQuotes46>segue<doubleQuotes46>) , <doubleQuotes46>/aws-java-sdk/<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>)<newline46mondego><newline46mondego>    jarPaths <- c(paste(pathToSdk, <doubleQuotes46>lib/aws-java-sdk-1.1.0.jar<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>),<newline46mondego>                  paste(pathToSdk, <doubleQuotes46>third-party/commons-logging-1.1.1/commons-logging-1.1.1.jar<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>),<newline46mondego>                  paste(pathToSdk, <doubleQuotes46>third-party/commons-httpclient-3.0.1/commons-httpclient-3.0.1.jar<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>),<newline46mondego>                  paste(pathToSdk, <doubleQuotes46>third-party/commons-codec-1.3/commons-codec-1.3.jar<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>),<newline46mondego>                  paste(pathToSdk, <doubleQuotes46>third-party/log4j-1.2.16.jar<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>),<newline46mondego>                  paste(pathToSdk, <doubleQuotes46>third-party/<doubleQuotes46>, sep=<doubleQuotes46><doubleQuotes46>)<newline46mondego>                  )<newline46mondego>    .jpackage(pkg, morePaths=jarPaths)<newline46mondego><newline46mondego>  ## other stuff edited out<newline46mondego><newline46mondego> }<newline46mondego>"
"5007splitHere46","4475487splitHere46","log4j.rootLogger=WARN, A1<newline46mondego>log4j.appender.A1=org.apache.log4j.ConsoleAppender<newline46mondego>log4j.appender.A1.layout=org.apache.log4j.PatternLayout<newline46mondego>log4j.appender.A1.layout.ConversionPattern=%d [%t] %-5p %c -  %m%n<newline46mondego>"
"5008splitHere46","4475636splitHere46","final Matcher m = p.matcher(this.currentLine.trim());<newline46mondego>"
"5009splitHere46","4475793splitHere46","<set-property name=<doubleQuotes46>compiler.stackMode<doubleQuotes46> value=<doubleQuotes46>strip<doubleQuotes46>/>"
"5010splitHere46","4476071splitHere46","(SingleTaskRDBMapper) mapper.put(<doubleQuotes46>SingleTask<doubleQuotes46>, new SingleTaskRDBMapper());<newline46mondego>"
"5011splitHere46","4476071splitHere46","public PersistanceFacade() {<newline46mondego>  mapper.put(<doubleQuotes46>SingleTask<doubleQuotes46>, new SingleTaskRDBMapper());<newline46mondego>}<newline46mondego>"
"5012splitHere46","4476071splitHere46","mappers"
"5013splitHere46","4476314splitHere46","<a href=<doubleQuotes46><doubleQuotes46> onclick=<doubleQuotes46>ajaxGet(${inv.id})<doubleQuotes46>>${inv.amount}</a><newline46mondego>"
"5014splitHere46","4476314splitHere46","<a onclick=<doubleQuotes46>ajaxGet(${inv.id})<doubleQuotes46>>${inv.amount}</a><newline46mondego>"
"5015splitHere46","4476314splitHere46","<a href=<doubleQuotes46><doubleQuotes46> onclick=<doubleQuotes46>ajaxGet(${inv.id}); return false;<doubleQuotes46>>${inv.amount}</a><newline46mondego>"
"5016splitHere46","4476417splitHere46","char"
"5017splitHere46","4476417splitHere46","String"
"5018splitHere46","4476417splitHere46","String"
"5019splitHere46","4476553splitHere46","java.lang.String"
"5020splitHere46","4476553splitHere46","CharSequence"
"5021splitHere46","4476553splitHere46","city.reset(<doubleQuotes46>waiting<doubleQuotes46>)"
"5022splitHere46","4476553splitHere46","WordBox.reset(S extends CharSequence)"
"5023splitHere46","4476553splitHere46","Box.reset(String)"
"5024splitHere46","4476553splitHere46","WordBox.reset()"
"5025splitHere46","4476553splitHere46","Box.reset()"
"5026splitHere46","4476553splitHere46","WordBox.reset()"
"5027splitHere46","4476553splitHere46","Box.reset()"
"5028splitHere46","4476553splitHere46","WordBox.reset()"
"5029splitHere46","4476553splitHere46","Word.reset()"
"5030splitHere46","4476553splitHere46","WordBox.reset()"
"5031splitHere46","4476553splitHere46","Box.reset()"
"5032splitHere46","4476553splitHere46","WordBox.reset()"
"5033splitHere46","4476553splitHere46","Box.reset()"
"5034splitHere46","4476597splitHere46","HashMap"
"5035splitHere46","4476597splitHere46","HashMap<IssueType, List<Issue>> a = new HashMap<IssueType, ArrayList<Issue>>();<newline46mondego>a.put(someIssue, new SomeClassThatImplementsListOfIssueButIsNotArrayList());<newline46mondego>"
"5036splitHere46","4476597splitHere46","ArrayList<String>"
"5037splitHere46","4476597splitHere46","List<String>"
"5038splitHere46","4476597splitHere46","List<String>"
"5039splitHere46","4476597splitHere46","ArrayList<String>"
"5040splitHere46","4476772splitHere46","public class ComputerOrder<T extends Product> extends GenericOrder<T> {<newline46mondego>    // etc...<newline46mondego>}<newline46mondego>"
"5041splitHere46","4476772splitHere46","public class ComputerOrder<T implements MyInterface> extends GenericOrder<T> {<newline46mondego>    // etc...<newline46mondego>}<newline46mondego>"
"5042splitHere46","4476873splitHere46","new Html(<doubleQuotes46><a target=\<doubleQuotes46>_blank\<doubleQuotes46> href=\<doubleQuotes46><doubleQuotes46> + url + <doubleQuotes46>\<doubleQuotes46>><doubleQuotes46> + someVariable + <doubleQuotes46></a><doubleQuotes46>);"
"5043splitHere46","4477188splitHere46","chain.doFilter(req, resp)"
"5044splitHere46","4477459splitHere46","User-Agent"
"5045splitHere46","4477459splitHere46","curl"
"5046splitHere46","4477459splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><beans<newline46mondego>    xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46><newline46mondego>    xmlns:sec=<doubleQuotes46>http://www.springframework.org/schema/security<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xmlns:context=<doubleQuotes46>http://www.springframework.org/schema/context<doubleQuotes46><newline46mondego>    xmlns:p=<doubleQuotes46>http://www.springframework.org/schema/p<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46><newline46mondego>        http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<newline46mondego>        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd<newline46mondego>        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd<doubleQuotes46>><newline46mondego><newline46mondego>    <!-- AspectJ pointcut expression that locates our <doubleQuotes46>post<doubleQuotes46> method and applies security that way<newline46mondego>    <protect-pointcut expression=<doubleQuotes46>execution(* bigbank.*Service.post*(..))<doubleQuotes46> access=<doubleQuotes46>ROLE_TELLER<doubleQuotes46>/>--><newline46mondego>    <sec:global-method-security secured-annotations=<doubleQuotes46>enabled<doubleQuotes46>/><newline46mondego><newline46mondego>    <bean id=<doubleQuotes46>basicAuthenticationFilter<doubleQuotes46><newline46mondego>          class=<doubleQuotes46>org.springframework.security.web.authentication.www.BasicAuthenticationFilter<doubleQuotes46><newline46mondego>          p:authenticationManager-ref=<doubleQuotes46>authenticationManager<doubleQuotes46><newline46mondego>          p:authenticationEntryPoint-ref=<doubleQuotes46>basicAuthenticationEntryPoint<doubleQuotes46> /><newline46mondego><newline46mondego>    <bean id=<doubleQuotes46>basicAuthenticationEntryPoint<doubleQuotes46><newline46mondego>          class=<doubleQuotes46>webapp.PlainTextBasicAuthenticationEntryPoint<doubleQuotes46><newline46mondego>          p:realmName=<doubleQuotes46>myWebapp<doubleQuotes46>/><newline46mondego><newline46mondego>    <bean id=<doubleQuotes46>formAuthenticationEntryPoint<doubleQuotes46><newline46mondego>          class=<doubleQuotes46>org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint<doubleQuotes46><newline46mondego>          p:loginFormUrl=<doubleQuotes46>/login.jsp<doubleQuotes46>/><newline46mondego><newline46mondego>    <bean id=<doubleQuotes46>daep<doubleQuotes46> class=<doubleQuotes46>org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint<doubleQuotes46>><newline46mondego>        <constructor-arg><newline46mondego>            <map><newline46mondego>                <entry key=<doubleQuotes46>hasHeader('User-Agent','Mozilla') or hasHeader('User-Agent','Opera') or hasHeader('User-Agent','Explorer')<doubleQuotes46> value-ref=<doubleQuotes46>formAuthenticationEntryPoint<doubleQuotes46> /><newline46mondego>            </map><newline46mondego>        </constructor-arg><newline46mondego>        <property name=<doubleQuotes46>defaultEntryPoint<doubleQuotes46> ref=<doubleQuotes46>basicAuthenticationEntryPoint<doubleQuotes46>/><newline46mondego>    </bean><newline46mondego><newline46mondego>    <sec:http entry-point-ref=<doubleQuotes46>daep<doubleQuotes46>><newline46mondego>        <sec:intercept-url pattern=<doubleQuotes46>/login.jsp*<doubleQuotes46> filters=<doubleQuotes46>none<doubleQuotes46>/><newline46mondego>        <sec:intercept-url pattern=<doubleQuotes46>/json<doubleQuotes46> access=<doubleQuotes46>ROLE_USER,ROLE_ADMIN<doubleQuotes46>  /><newline46mondego>        <sec:intercept-url pattern=<doubleQuotes46>/json/*<doubleQuotes46> access=<doubleQuotes46>ROLE_USER,ROLE_ADMIN<doubleQuotes46>  /><newline46mondego>        <sec:logout<newline46mondego>            logout-url=<doubleQuotes46>/logout<doubleQuotes46><newline46mondego>            logout-success-url=<doubleQuotes46>/home.jsp<doubleQuotes46>/><newline46mondego>        <sec:form-login<newline46mondego>            login-page=<doubleQuotes46>/login.jsp<doubleQuotes46><newline46mondego>            login-processing-url=<doubleQuotes46>/login<doubleQuotes46><newline46mondego>            authentication-failure-url=<doubleQuotes46>/login.jsp?login_error=1<doubleQuotes46> default-target-url=<doubleQuotes46>/home.jsp<doubleQuotes46>/><newline46mondego>        <sec:custom-filter position=<doubleQuotes46>BASIC_AUTH_FILTER<doubleQuotes46> ref=<doubleQuotes46>basicAuthenticationFilter<doubleQuotes46> /><newline46mondego>    </sec:http><newline46mondego><newline46mondego>    <sec:authentication-manager alias=<doubleQuotes46>authenticationManager<doubleQuotes46>><newline46mondego>        <sec:authentication-provider><newline46mondego>        ...<newline46mondego>        </sec:authentication-provider><newline46mondego>    </sec:authentication-manager><newline46mondego><newline46mondego></beans><newline46mondego>"
"5047splitHere46","4477459splitHere46","PlainTextBasicAuthenticationEntryPoint"
"5048splitHere46","4477459splitHere46","org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint"
"5049splitHere46","4477459splitHere46","import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego>import org.springframework.security.core.AuthenticationException;<newline46mondego>import org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint;<newline46mondego><newline46mondego>public class PlainTextBasicAuthenticationEntryPoint extends BasicAuthenticationEntryPoint {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {<newline46mondego>        response.addHeader(<doubleQuotes46>WWW-Authenticate<doubleQuotes46>, <doubleQuotes46>Basic realm=\<doubleQuotes46><doubleQuotes46> + getRealmName() + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego>        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);<newline46mondego>        PrintWriter writer = response.getWriter();<newline46mondego>        writer.println(<doubleQuotes46>HTTP Status <doubleQuotes46> + HttpServletResponse.SC_UNAUTHORIZED + <doubleQuotes46> - <doubleQuotes46> + authException.getMessage());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5050splitHere46","4477620splitHere46","<script><newline46mondego>//call after page loaded<newline46mondego>window.onload=setFocus(); <newline46mondego></script><newline46mondego>"
"5051splitHere46","4477620splitHere46","<body onload=<doubleQuotes46>setFocus();<doubleQuotes46>><newline46mondego>"
"5052splitHere46","4477641splitHere46","doLayout"
"5053splitHere46","4477641splitHere46","extends"
"5054splitHere46","4477641splitHere46","doLayout"
"5055splitHere46","4477641splitHere46","include"
"5056splitHere46","4477641splitHere46","Include"
"5057splitHere46","4477641splitHere46","#{include 'header.html'}<newline46mondego>your template code<newline46mondego>#{include 'footer.html'}<newline46mondego>"
"5058splitHere46","4477641splitHere46","extends"
"5059splitHere46","4477641splitHere46","doLayout"
"5060splitHere46","4477641splitHere46","#{extends 'template.html'}<newline46mondego>"
"5061splitHere46","4477839splitHere46","/**<newline46mondego> * Returns the z-order index of the component inside the container. <newline46mondego> * The higher a component is in the z-order hierarchy, the lower<newline46mondego> * its index.  The component with the lowest z-order index is<newline46mondego> * painted last, above all other child components.<newline46mondego> *<newline46mondego> * @param comp the component being queried<newline46mondego> * @return  the z-order index of the component; otherwise <newline46mondego> *          returns -1 if the component is <code>null</code><newline46mondego> *          or doesn't belong to the container <newline46mondego> * @see #setComponentZOrder(java.awt.Component, int)<newline46mondego> * @since 1.5<newline46mondego> */<newline46mondego>public int getComponentZOrder(Component comp) {<newline46mondego>        }<newline46mondego>"
"5062splitHere46","4477862splitHere46","try {<newline46mondego>        SingleTask = Class.forName(<doubleQuotes46>SingleTask<doubleQuotes46>);<newline46mondego>        RepeatingTask = Class.forName(<doubleQuotes46>RepeatingTask<doubleQuotes46>);<newline46mondego>        ComplexTask = Class.forName(<doubleQuotes46>ComplexTask<doubleQuotes46>);<newline46mondego>        mappers.put(SingleTask, new SingleTaskRDBMapper());<newline46mondego>        mappers.put(RepeatingTask, new RepeatingTaskRDBMapper());<newline46mondego>        mappers.put(ComplexTask, new ComplexTaskRDBMapper());<newline46mondego>    }<newline46mondego>    catch (ClassNotFoundException e) {}<newline46mondego>"
"5063splitHere46","4477862splitHere46","ClassNotFOundException"
"5064splitHere46","4477862splitHere46","SingleTask"
"5065splitHere46","4477862splitHere46","domain."
"5066splitHere46","4477862splitHere46","try {<newline46mondego>        SingleTask = Class.forName(<doubleQuotes46>domain.SingleTask<doubleQuotes46>);<newline46mondego>        RepeatingTask = Class.forName(<doubleQuotes46>domain.RepeatingTask<doubleQuotes46>);<newline46mondego>        ComplexTask = Class.forName(<doubleQuotes46>domain.ComplexTask<doubleQuotes46>);<newline46mondego>        mappers.put(SingleTask, new SingleTaskRDBMapper());<newline46mondego>        mappers.put(RepeatingTask, new RepeatingTaskRDBMapper());<newline46mondego>        mappers.put(ComplexTask, new ComplexTaskRDBMapper());<newline46mondego>    }<newline46mondego>    catch (ClassNotFoundException e) {<newline46mondego>        log.warn(<doubleQuotes46>Cannot load class<doubleQuotes46>, e);<newline46mondego>    }<newline46mondego>"
"5067splitHere46","4477982splitHere46","public static char[] StringReverse(char[] x , int startindex)<newline46mondego>{<newline46mondego>    int p = x.length;<newline46mondego>    if(startindex < p/2)<newline46mondego>    {<newline46mondego>        char temp = x[startindex];<newline46mondego>        x[startindex] = x[x.length - startindex-1];<newline46mondego>        x[x.length - startindex-1] = temp;<newline46mondego>        return StringReverse(x , startindex+1);<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        return x;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5068splitHere46","4477982splitHere46","public static void StringReverse(char[] x , int startindex)<newline46mondego>{<newline46mondego>    int p = x.length;<newline46mondego>    if(startindex < p/2)<newline46mondego>    {<newline46mondego>        char temp = x[startindex];<newline46mondego>        x[startindex] = x[x.length - startindex-1];<newline46mondego>        x[x.length - startindex-1] = temp;<newline46mondego>        StringReverse(x , startindex+1);<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        System.out.println(x);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5069splitHere46","4477982splitHere46","new String(<doubleQuotes46>Hello world<doubleQuotes46>).toCharArray()<newline46mondego>"
"5070splitHere46","4477982splitHere46","run:<newline46mondego>dlrow olleH<newline46mondego>BUILD SUCCESSFUL (total time: 0 seconds)<newline46mondego>"
"5071splitHere46","4478009splitHere46","public class Static {<newline46mondego><newline46mondego>  private final static Static INSTANCE = new Static();<newline46mondego><newline46mondego>  public static Static doStuff(...) {<newline46mondego>     ...;<newline46mondego>     return INSTANCE;<newline46mondego>  }<newline46mondego><newline46mondego>  public static Static doOtherStuff() {<newline46mondego>    ....<newline46mondego>    return INSTANCE;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5072splitHere46","4478009splitHere46","Static.doStuff(...).doOtherStuff(...).doStuff(...);<newline46mondego>"
"5073splitHere46","4478086splitHere46","JFrame f = new JFrame(<doubleQuotes46>Foobar<doubleQuotes46>);<newline46mondego>  BufferedImage myImage = null;<newline46mondego>  try {<newline46mondego>      myImage = ImageIO.read(new File(<doubleQuotes46>background.png<doubleQuotes46>));<newline46mondego>  } catch (Exception ex) {}<newline46mondego><newline46mondego>  JPanel p = new ImagePanel(myImage);<newline46mondego>  p.setLayout(new BorderLayout());<newline46mondego>  int gap = 15;<newline46mondego>  p.setBorder(BorderFactory.createEmptyBorder(gap, gap, gap, gap));<newline46mondego><newline46mondego>  JPanel southPanel = new JPanel(new FlowLayout(FlowLayout.CENTER)); // new FlowLayout not needed<newline46mondego>  southPanel.setOpaque(false);<newline46mondego>  JButton button = new JButton(<doubleQuotes46>OK<doubleQuotes46>);<newline46mondego>  //button.setSize(80, 200);<newline46mondego>  button.setPreferredSize(new Dimension(80, 200)); // ?? I don't like this.<newline46mondego>  button.setFont(new Font(<doubleQuotes46>Arial<doubleQuotes46>, 1, 40));<newline46mondego><newline46mondego>  southPanel.add(button);<newline46mondego>  p.add(southPanel, BorderLayout.SOUTH);<newline46mondego>  f.add(p);<newline46mondego>  f.pack(); // call after everything has been added<newline46mondego>  f.setLocationRelativeTo(null); // to center<newline46mondego>  f.setVisible(true);<newline46mondego>"
"5074splitHere46","4478201splitHere46","#{component}"
"5075splitHere46","4478201splitHere46","UIComponent"
"5076splitHere46","4478201splitHere46","getId()"
"5077splitHere46","4478201splitHere46","<h:inputText id=<doubleQuotes46>foo<doubleQuotes46> size=<doubleQuotes46>#{configBean.getSize(component.id)}<doubleQuotes46> /><newline46mondego>"
"5078splitHere46","4478201splitHere46","public int getSize(String componentId) {<newline46mondego>    return variableConfig.getSizeFor(componentId);<newline46mondego>}<newline46mondego>"
"5079splitHere46","4478201splitHere46","variableConfig"
"5080splitHere46","4478201splitHere46","@ApplicationScoped"
"5081splitHere46","4478201splitHere46","@ManagedBean"
"5082splitHere46","4478201splitHere46","<h:inputText id=<doubleQuotes46>foo<doubleQuotes46> size=<doubleQuotes46>#{variableConfig.getSizeFor(component.id)}<doubleQuotes46> /><newline46mondego>"
"5083splitHere46","4478201splitHere46","variableConfig.sizeFor(component.id)"
"5084splitHere46","4478201splitHere46","getSizeFor()"
"5085splitHere46","4478201splitHere46","sizeFor()"
"5086splitHere46","4478357splitHere46","<uses-permission android:name=<doubleQuotes46>android.permission.INTERNET<doubleQuotes46>/> <newline46mondego>"
"5087splitHere46","4478420splitHere46","i"
"5088splitHere46","4478420splitHere46","j"
"5089splitHere46","4478420splitHere46","return (fillMinAverageTimeArray(i, k - 1) + fillMinAverageTimeArray(k + 1, j));<newline46mondego>"
"5090splitHere46","4478420splitHere46","i + 1"
"5091splitHere46","4478420splitHere46","j - 1"
"5092splitHere46","4478420splitHere46","k + 1"
"5093splitHere46","4478420splitHere46","k - 1"
"5094splitHere46","4478515splitHere46","in"
"5095splitHere46","4478515splitHere46","InputStream ins = new BufferedInputStream(socket.getInputStream());<newline46mondego>    while (!finished) {<newline46mondego>      ByteArrayOutputStream buf = new ByteArrayOutputStream();<newline46mondego>      int b;<newline46mondego>      while ((b = ins.read()) > 0) {<newline46mondego>        buf.write(b);<newline46mondego>      }<newline46mondego>      if (b == -1)<newline46mondego>        throw new EOFException(<doubleQuotes46>EOF while reading from socket<doubleQuotes46>);<newline46mondego>      // b == 0<newline46mondego>      Document xml = readXML(new ByteArrayInputStream(buf.toByteArray()));<newline46mondego>      processAnswers(xml);<newline46mondego>      Element root = xml.getDocumentElement();<newline46mondego>      if (root.hasAttribute(<doubleQuotes46>fragmentLength<doubleQuotes46>)) {<newline46mondego>        int length = DatatypeConverter.parseInt(<newline46mondego>                root.getAttribute(<doubleQuotes46>fragmentLength<doubleQuotes46>));<newline46mondego>        boolean last = DatatypeConverter.parseBoolean(<newline46mondego>                root.getAttribute(<doubleQuotes46>isLastFragment<doubleQuotes46>));<newline46mondego>        int read = 0;<newline46mondego>        while (read < length) {<newline46mondego>          // split incoming fragment into 4Kb blocks so we don't run <newline46mondego>          // out of memory if the client sent a really large fragment<newline46mondego>          int l = Math.min(length - read, 4096);<newline46mondego>          byte[] fragment = new byte[l];<newline46mondego>          int pos = 0;<newline46mondego>          while (pos < l) {<newline46mondego>            int c = ins.read(fragment, pos, l - pos);<newline46mondego>            if (c == -1)<newline46mondego>              throw new EOFException(<newline46mondego>                      <doubleQuotes46>Preliminary EOF while reading fragment<doubleQuotes46>);<newline46mondego>            pos += c;<newline46mondego>            read += c;<newline46mondego>          }<newline46mondego>          // process fragment<newline46mondego>        }<newline46mondego>"
"5096splitHere46","4478582splitHere46","import java.util.regex.*;<newline46mondego><newline46mondego>class SOReplaceSpacesInQuotes {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    Pattern findQuotes = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>[^\<doubleQuotes46>]+\\*\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    for (String arg : args) {<newline46mondego>      Matcher m = findQuotes.matcher(arg);<newline46mondego><newline46mondego>      StringBuffer result = new StringBuffer();<newline46mondego>      while (m.find())<newline46mondego>        m.appendReplacement(result, m.group().replace(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>\\\\ <doubleQuotes46>));<newline46mondego>      m.appendTail(result);<newline46mondego><newline46mondego>      System.out.println(arg + <doubleQuotes46> -> <doubleQuotes46> + result.toString());<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5097splitHere46","4478582splitHere46","java SOReplaceSpacesInQuotes 'word1 AND <doubleQuotes46>word2 word3 word4*<doubleQuotes46> OR <doubleQuotes46>word5 word6*<doubleQuotes46> OR word7'"
"5098splitHere46","4478582splitHere46","word1 AND <doubleQuotes46>word2 word3 word4*<doubleQuotes46> OR <doubleQuotes46>word5 word6*<doubleQuotes46> OR word7 -> word1 AND <doubleQuotes46>word2\ word3\ word4*<doubleQuotes46> OR <doubleQuotes46>word5\ word6*<doubleQuotes46> OR word7"
"5099splitHere46","4478582splitHere46","<doubleQuotes46>[^<doubleQuotes46>]+\*<doubleQuotes46>"
"5100splitHere46","4478582splitHere46","*"
"5101splitHere46","4478582splitHere46","\<doubleQuotes46>"
"5102splitHere46","4478582splitHere46","*"
"5103splitHere46","4478582splitHere46","<doubleQuotes46>([^\\<doubleQuotes46>]|\\.)\*<doubleQuotes46>"
"5104splitHere46","4478582splitHere46","\<doubleQuotes46>([^\\\\\\<doubleQuotes46>]|\\\\.)\\*\<doubleQuotes46>"
"5105splitHere46","4478582splitHere46","<doubleQuotes46>[^<doubleQuotes46>]+[*+]<doubleQuotes46>"
"5106splitHere46","4478582splitHere46","m.group().replace(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>\\\\ <doubleQuotes46>)"
"5107splitHere46","4478582splitHere46","\\"
"5108splitHere46","4478582splitHere46","appendReplacement"
"5109splitHere46","4478582splitHere46","appendTail"
"5110splitHere46","4478582splitHere46","appendReplacement"
"5111splitHere46","4478582splitHere46","StringBuffer"
"5112splitHere46","4478582splitHere46","appendTail"
"5113splitHere46","4478582splitHere46","Matcher.appendReplacement(StringBuffer,String)"
"5114splitHere46","4478582splitHere46","a AND <doubleQuotes46>b<doubleQuotes46> AND *<doubleQuotes46>c<doubleQuotes46>"
"5115splitHere46","4478582splitHere46","a AND <doubleQuotes46>b<doubleQuotes46>\ AND\ *<doubleQuotes46>c<doubleQuotes46>"
"5116splitHere46","4478582splitHere46","import java.util.regex.*;<newline46mondego><newline46mondego>class SOReplaceSpacesInQuotes {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    Pattern findQuotes = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>[^\<doubleQuotes46>]+?(\\*)?\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    for (String arg : args) {<newline46mondego>      Matcher m = findQuotes.matcher(arg);<newline46mondego><newline46mondego>      StringBuffer result = new StringBuffer();<newline46mondego>      while (m.find()) {<newline46mondego>        if (m.group(1) == null)<newline46mondego>          m.appendReplacement(result, m.group());<newline46mondego>        else<newline46mondego>          m.appendReplacement(result, m.group().replace(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>\\\\ <doubleQuotes46>));<newline46mondego>      }<newline46mondego>      m.appendTail(result);<newline46mondego><newline46mondego>      System.out.println(arg + <doubleQuotes46> -> <doubleQuotes46> + result.toString());<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5117splitHere46","4478582splitHere46","+?"
"5118splitHere46","4478582splitHere46","null"
"5119splitHere46","4478582splitHere46","java SOReplaceSpacesInQuotes 'a AND <doubleQuotes46>b d<doubleQuotes46> AND *<doubleQuotes46>c d<doubleQuotes46>'"
"5120splitHere46","4478582splitHere46","a AND <doubleQuotes46>b d<doubleQuotes46> AND *<doubleQuotes46>c d<doubleQuotes46> -> a AND <doubleQuotes46>b d<doubleQuotes46> AND *<doubleQuotes46>c d<doubleQuotes46>"
"5121splitHere46","4478582splitHere46","java SOReplaceSpacesInQuotes 'a AND <doubleQuotes46>b d<doubleQuotes46> AND <doubleQuotes46>c d*<doubleQuotes46>'"
"5122splitHere46","4478582splitHere46","a AND <doubleQuotes46>b d<doubleQuotes46> AND *<doubleQuotes46>c d<doubleQuotes46> -> a AND <doubleQuotes46>b d<doubleQuotes46> AND <doubleQuotes46>c\ *d<doubleQuotes46>"
"5123splitHere46","4478957splitHere46","import com.sun.jna.Pointer;<newline46mondego>import com.sun.jna.Native;<newline46mondego>import com.sun.jna.win32.StdCallLibrary;<newline46mondego><newline46mondego>public class JNA_Main {<newline46mondego>    // Equivalent JNA mappings<newline46mondego>    public interface User32 extends StdCallLibrary {<newline46mondego>        User32 INSTANCE = (User32) Native.loadLibrary(<doubleQuotes46>user32<doubleQuotes46>, User32.class);<newline46mondego><newline46mondego>        interface WNDENUMPROC extends StdCallCallback {<newline46mondego>            boolean callback(Pointer hWnd, Pointer arg);<newline46mondego>        }<newline46mondego><newline46mondego>        boolean EnumWindows(WNDENUMPROC lpEnumFunc, Pointer arg);<newline46mondego><newline46mondego>        int GetWindowTextA(Pointer hWnd, byte[] lpString, int nMaxCount);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        final User32 user32 = User32.INSTANCE;<newline46mondego><newline46mondego>        user32.EnumWindows(new User32.WNDENUMPROC() {<newline46mondego><newline46mondego>            int count;<newline46mondego><newline46mondego>            public boolean callback(Pointer hWnd, Pointer userData) {<newline46mondego>                byte[] windowText = new byte[512];<newline46mondego>                user32.GetWindowTextA(hWnd, windowText, 512);<newline46mondego>                String wText = Native.toString(windowText);<newline46mondego>                wText = (wText.isEmpty()) ? <doubleQuotes46><doubleQuotes46> : <doubleQuotes46>; text: <doubleQuotes46> + wText;<newline46mondego>                System.out.println(<doubleQuotes46>Found window <doubleQuotes46> + hWnd + <doubleQuotes46>, total <doubleQuotes46> + ++count + wText);<newline46mondego>                return true;<newline46mondego>            }<newline46mondego>        }, null);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5124splitHere46","4479248splitHere46","{<newline46mondego>    <doubleQuotes46>Symptoms<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>label<doubleQuotes46>: <doubleQuotes46>Symptoms<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>data<doubleQuotes46>: [[1988, 10], [1989, 20], [1990, 10], [1991, 30], [1992, 40]]<newline46mondego>    },        <newline46mondego>    <doubleQuotes46>Reactions<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>label<doubleQuotes46>: <doubleQuotes46>Reactions<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>data<doubleQuotes46>: [[1988, 0], [1989, 0], [1990, 10], [1991, 30], [1992, 40]]<newline46mondego><newline46mondego>    },<newline46mondego>    <doubleQuotes46>Injections<doubleQuotes46>: {<newline46mondego>        <doubleQuotes46>label<doubleQuotes46>: <doubleQuotes46>Injections<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46>data<doubleQuotes46>: [[1988, 0], [1989, 0], [1990, 0], [1991, 30], [1992, 40]]<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5125splitHere46","4479570splitHere46","ConcurrentModificationException"
"5126splitHere46","4479570splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        List<String> strings = new Vector<String>();<newline46mondego><newline46mondego>        strings.add(<doubleQuotes46>lorem<doubleQuotes46>);<newline46mondego>        strings.add(<doubleQuotes46>ipsum<doubleQuotes46>);<newline46mondego>        strings.add(<doubleQuotes46>dolor<doubleQuotes46>);<newline46mondego>        strings.add(<doubleQuotes46>sit<doubleQuotes46>);<newline46mondego><newline46mondego>        int i = 0;<newline46mondego><newline46mondego>        Iterator<String> iter = strings.iterator();<newline46mondego>        while (iter.hasNext()) {<newline46mondego>            System.out.println(iter.next());<newline46mondego><newline46mondego>            // Modify the list in the middle of iteration.<newline46mondego>            if (i++ == 1)<newline46mondego>                strings.remove(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5127splitHere46","4479570splitHere46","lorem<newline46mondego>ipsum<newline46mondego>Exception in thread <doubleQuotes46>main<doubleQuotes46> java.util.ConcurrentModificationException<newline46mondego>    at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)<newline46mondego>    at java.util.AbstractList$Itr.next(AbstractList.java:343)<newline46mondego>    at Test.main(Test.java:18)<newline46mondego>"
"5128splitHere46","4479570splitHere46","next()"
"5129splitHere46","4479570splitHere46","next()"
"5130splitHere46","4479570splitHere46","ConcurrentModificationException"
"5131splitHere46","4479570splitHere46","CopyOnWriteArrayList"
"5132splitHere46","4479570splitHere46","import java.util.*;<newline46mondego>import java.util.concurrent.CopyOnWriteArrayList;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        List<String> strings = new CopyOnWriteArrayList<String>();<newline46mondego><newline46mondego>        strings.add(<doubleQuotes46>lorem<doubleQuotes46>);<newline46mondego>        strings.add(<doubleQuotes46>ipsum<doubleQuotes46>);<newline46mondego>        strings.add(<doubleQuotes46>dolor<doubleQuotes46>);<newline46mondego>        strings.add(<doubleQuotes46>sit<doubleQuotes46>);<newline46mondego><newline46mondego>        int i = 0;<newline46mondego><newline46mondego>        Iterator<String> iter = strings.iterator();<newline46mondego>        while (iter.hasNext()) {<newline46mondego>            System.out.println(iter.next());<newline46mondego><newline46mondego>            // Modify the list in the middle of iteration.<newline46mondego>            if (i++ == 1)<newline46mondego>                strings.remove(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5133splitHere46","4479570splitHere46","lorem<newline46mondego>ipsum<newline46mondego>dolor<newline46mondego>sit<newline46mondego>"
"5134splitHere46","4479822splitHere46","HostManagerServlet"
"5135splitHere46","4480213splitHere46","bar.setOpaque(true);<newline46mondego>"
"5136splitHere46","4480261splitHere46","SomeBaseClass"
"5137splitHere46","4480261splitHere46","List<SomeBaseClass>"
"5138splitHere46","4480261splitHere46","List<? extends SomeBaseClass>"
"5139splitHere46","4480261splitHere46","Number"
"5140splitHere46","4480261splitHere46","SomeBaseClass"
"5141splitHere46","4480261splitHere46","List<? extends Number> doubles = new ArrayList<Double>();<newline46mondego>List<Number> nums = (List<Number>) doubles;<newline46mondego><newline46mondego>nums.add(new Integer(5));    // no compiler complaints here...<newline46mondego><newline46mondego>// doubles now contains an Integer!<newline46mondego>"
"5142splitHere46","4480261splitHere46","@SupressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)"
"5143splitHere46","4480310splitHere46","windowId"
"5144splitHere46","4480310splitHere46","Map<String, Object>"
"5145splitHere46","4480310splitHere46","windowId"
"5146splitHere46","4480360splitHere46","Command"
"5147splitHere46","4480360splitHere46","Map<Character, Command>"
"5148splitHere46","4480360splitHere46","import java.util.*;<newline46mondego><newline46mondego>interface Command {<newline46mondego>    void runCommand();<newline46mondego>}<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Map<Character, Command> methodMap = new HashMap<Character, Command>();<newline46mondego><newline46mondego>        methodMap.put('h', new Command() {<newline46mondego>            public void runCommand() { System.out.println(<doubleQuotes46>help<doubleQuotes46>); };<newline46mondego>        });<newline46mondego><newline46mondego>        methodMap.put('t', new Command() {<newline46mondego>            public void runCommand() { System.out.println(<doubleQuotes46>teleport<doubleQuotes46>); };<newline46mondego>        });<newline46mondego><newline46mondego>        char cmd = 'h';<newline46mondego>        methodMap.get(cmd).runCommand();  // prints <doubleQuotes46>Help<doubleQuotes46><newline46mondego><newline46mondego>        cmd = 't';<newline46mondego>        methodMap.get(cmd).runCommand();  // prints <doubleQuotes46>teleport<doubleQuotes46><newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5149splitHere46","4480360splitHere46","Method"
"5150splitHere46","4480360splitHere46","import java.lang.reflect.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Map<Character, Method> methodMap = new HashMap<Character, Method>();<newline46mondego><newline46mondego>        methodMap.put('h', Test.class.getMethod(<doubleQuotes46>showHelp<doubleQuotes46>));<newline46mondego>        methodMap.put('t', Test.class.getMethod(<doubleQuotes46>teleport<doubleQuotes46>));<newline46mondego><newline46mondego>        char cmd = 'h';<newline46mondego>        methodMap.get(cmd).invoke(null);  // prints <doubleQuotes46>Help<doubleQuotes46><newline46mondego><newline46mondego>        cmd = 't';<newline46mondego>        methodMap.get(cmd).invoke(null);  // prints <doubleQuotes46>teleport<doubleQuotes46><newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public static void showHelp() {<newline46mondego>        System.out.println(<doubleQuotes46>Help<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void teleport() {<newline46mondego>        System.out.println(<doubleQuotes46>teleport<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5151splitHere46","4480360splitHere46","class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Map<Character, Runnable> commands = new HashMap<>();<newline46mondego><newline46mondego>        // Populate commands map<newline46mondego>        commands.put('h', () -> { System.out.println(<doubleQuotes46>Help<doubleQuotes46>);     });<newline46mondego>        commands.put('t', () -> { System.out.println(<doubleQuotes46>Teleport<doubleQuotes46>); });<newline46mondego><newline46mondego>        // Invoke some command<newline46mondego>        char cmd = 't';<newline46mondego>        commands.get(cmd).run();   // Prints <doubleQuotes46>Teleport<doubleQuotes46><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5152splitHere46","4480360splitHere46","Runnable"
"5153splitHere46","4480360splitHere46","Command"
"5154splitHere46","4480360splitHere46","@FunctionalInterface"
"5155splitHere46","4480360splitHere46","() -> { ... }"
"5156splitHere46","4480360splitHere46","help"
"5157splitHere46","4480360splitHere46","teleport"
"5158splitHere46","4480360splitHere46","YourClass::help"
"5159splitHere46","4480360splitHere46","YourClass.teleport"
"5160splitHere46","4480474splitHere46","TextView textView = (TextView)mView.findViewById(R.id.entryRowTextView);<newline46mondego>"
"5161splitHere46","4480517splitHere46","if (entity != null) {<newline46mondego>    // A Simple JSON Response Read<newline46mondego>    // InputStream instream = entity.getContent();<newline46mondego>    // String jsonText = convertStreamToString(instream);<newline46mondego><newline46mondego>    String jsonText = EntityUtils.toString(entity, HTTP.UTF_8);<newline46mondego><newline46mondego>    // ... toast code here<newline46mondego>}<newline46mondego>"
"5162splitHere46","4480645splitHere46","public class MyAction extends ActionSupport {<newline46mondego>    private String firstName;<newline46mondego><newline46mondego>    public String execute() throws Exception {<newline46mondego>        // do something here<newline46mondego>        return SUCCESS;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getFirstName() {<newline46mondego>        return firstName;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setFirstName(final String firstName) {<newline46mondego>        this.firstName = firstName;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5163splitHere46","4480645splitHere46","<s:property value=<doubleQuotes46>firstName<doubleQuotes46>/>"
"5164splitHere46","4480645splitHere46","${action.firstName}"
"5165splitHere46","4480924splitHere46","Graphics2D g2 = (Graphics2D)g;<newline46mondego>    int newW = (int)(originalImage.getWidth() * xScaleFactor);<newline46mondego>    int newH = (int)(originalImage.getHeight() * yScaleFactor);<newline46mondego>    g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,<newline46mondego>                        RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR);<newline46mondego>    g2.drawImage(originalImage, 0, 0, newW, newH, null);<newline46mondego>"
"5166splitHere46","4481408splitHere46","all"
"5167splitHere46","4481408splitHere46","mainLeft"
"5168splitHere46","4481408splitHere46","all.setLayout(s_layout)"
"5169splitHere46","4481408splitHere46","mainleft.setLayout(s_layout)"
"5170splitHere46","4481912splitHere46","Android Manifest"
"5171splitHere46","4481912splitHere46","Applications"
"5172splitHere46","4481912splitHere46","Name:"
"5173splitHere46","4481912splitHere46","Browse"
"5174splitHere46","4482249splitHere46","char[] buffer = new char[(int)responseEntity.getContentLength()];<newline46mondego>InputStream stream = responseEntity.getContent();<newline46mondego>InputStreamReader reader = new InputStreamReader(stream);<newline46mondego>reader.read(buffer);<newline46mondego>stream.close(); <newline46mondego>"
"5175splitHere46","4482249splitHere46","String jsonText = EntityUtils.toString(responseEntity, HTTP.UTF_8);<newline46mondego>"
"5176splitHere46","4482361splitHere46","SimpleDateFormat(format, locale)"
"5177splitHere46","4482361splitHere46","SimpleDateFormat fen = new SimpleDateFormat(<doubleQuotes46>dd/MMMM/yyyy<doubleQuotes46>, new Locale(<doubleQuotes46>en<doubleQuotes46>));<newline46mondego>    SimpleDateFormat ffr = new SimpleDateFormat(<doubleQuotes46>dd/MMMM/yyyy<doubleQuotes46>, new Locale(<doubleQuotes46>fr<doubleQuotes46>));<newline46mondego><newline46mondego>    Date date = new Date();<newline46mondego><newline46mondego>    System.out.println(fen.format(date));<newline46mondego>    System.out.println(ffr.format(date));<newline46mondego>"
"5178splitHere46","4482576splitHere46","enum Singleton {<newline46mondego>   INSTANCE<newline46mondego>}<newline46mondego>"
"5179splitHere46","4482576splitHere46","class Singleton {<newline46mondego>    static class SingletonHolder {<newline46mondego>        static final Singleton INSTANCE = new Singleton();<newline46mondego>    }<newline46mondego>    public static Singleton getInstance() {<newline46mondego>        return SingletonHolder.INSTANCE;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5180splitHere46","4482870splitHere46","SingleSelectionModel selectionModel = new SingleSelectionModel();<newline46mondego>"
"5181splitHere46","4482996splitHere46","calculateTabWidth"
"5182splitHere46","4482996splitHere46","BasicTabbedPaneUI"
"5183splitHere46","4482996splitHere46","public static void main(String[] args) throws Exception {<newline46mondego><newline46mondego>    JTabbedPane tabs = new JTabbedPane(JTabbedPane.LEFT);<newline46mondego>    tabs.setUI(new BasicTabbedPaneUI() {<newline46mondego>        @Override<newline46mondego>        protected int calculateTabWidth(<newline46mondego>                int tabPlacement, int tabIndex, FontMetrics metrics) {<newline46mondego>            return 200; // the width of the tab<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    tabs.add(<doubleQuotes46>Tab 1<doubleQuotes46>, new JButton());<newline46mondego>    tabs.add(<doubleQuotes46>Tab 2<doubleQuotes46>, new JButton());<newline46mondego><newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>    frame.add(tabs);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.setSize(400, 300);<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"5184splitHere46","4483145splitHere46","(class b)"
"5185splitHere46","4483145splitHere46","indicators.DoubleRingBuffer"
"5186splitHere46","4483145splitHere46","(vec (.getDeclaredMethods (class b)))"
"5187splitHere46","4483145splitHere46","DoubleRingBuffer"
"5188splitHere46","4483225splitHere46","static"
"5189splitHere46","4483225splitHere46","static protected boolean running;<newline46mondego>static ByteArrayOutputStream out;<newline46mondego>double fileName = Math.random(); <newline46mondego>"
"5190splitHere46","4483225splitHere46","doGet()"
"5191splitHere46","4483225splitHere46","java.io.File"
"5192splitHere46","4483225splitHere46","java.io.File"
"5193splitHere46","4483225splitHere46","/WEB-INF"
"5194splitHere46","4483225splitHere46","ServletContext#getRealPath()"
"5195splitHere46","4483225splitHere46","String relativeWebPath = <doubleQuotes46>filename.ext<doubleQuotes46>;<newline46mondego>String absoluteDiskPath = getServletContext().getRealPath(relativeWebPath);<newline46mondego>File file = new File(absoluteDiskPath);<newline46mondego>"
"5196splitHere46","4483225splitHere46","C:/path/to/recordings"
"5197splitHere46","4483225splitHere46","File file = new File(<doubleQuotes46>C:/path/to/recordings/filename.ext<doubleQuotes46>);<newline46mondego>"
"5198splitHere46","4483291splitHere46","private static boolean isChanged(String before, String after) {<newline46mondego>    if (before == null) {<newline46mondego>        return after == null;<newline46mondego>    } else {<newline46mondego>        return before.equals(after);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5199splitHere46","4483434splitHere46","public static int binarySearch(int[] arrayList,int searchObj){<newline46mondego><newline46mondego>     ///rest of your method<newline46mondego>"
"5200splitHere46","4483434splitHere46","binarySearch(arrayLIst, 5);<newline46mondego>"
"5201splitHere46","4483435splitHere46","SecurityManager"
"5202splitHere46","4483435splitHere46","FilePermission"
"5203splitHere46","4483435splitHere46","/-"
"5204splitHere46","4483435splitHere46","/*"
"5205splitHere46","4483435splitHere46","checkPermission"
"5206splitHere46","4483435splitHere46","ProtectionDomain"
"5207splitHere46","4483435splitHere46","FilePermission"
"5208splitHere46","4483454splitHere46","exit"
"5209splitHere46","4483454splitHere46","System.setSecurityManager(new SecurityManager() {<newline46mondego>        @Override<newline46mondego>        public void checkExit(int status) {<newline46mondego>            throw new AccessControlException(<doubleQuotes46>exit not allowed during testing<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"5210splitHere46","4483454splitHere46","exit"
"5211splitHere46","4483454splitHere46","exit"
"5212splitHere46","4483460splitHere46","public interface DataProvider {<newline46mondego>    public BigInteger getBigInteger(int columnIndex);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"5213splitHere46","4483460splitHere46","public class ResultSetDataProvider implements DataProvider {<newline46mondego>    private ResultSet resultSet;<newline46mondego><newline46mondego>    public ResultSetDataProvider(ResultSet resultSet) {<newline46mondego>        this.resultSet = resultSet;<newline46mondego>    }<newline46mondego><newline46mondego>    public BigInteger getBigInteger(int columnIndex) {<newline46mondego>        BigDecimal bigDecimal = resultSet.getBigDecimal(columnIndex);<newline46mondego>        return bigDecimal != null ? bigDecimal.toBigInteger() : null;<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"5214splitHere46","4483460splitHere46","try {<newline46mondego>    // Acquire ResultSet.<newline46mondego>    DataProvider dataProvider = new ResultSetDataProvider(resultSet);<newline46mondego>    // Process DataProvider.<newline46mondego>} finally {<newline46mondego>    // Close ResultSet.<newline46mondego>}<newline46mondego>"
"5215splitHere46","4483497splitHere46","// remove the unneeded information<newline46mondego>String date = date.replace(<doubleQuotes46>/Date(<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>).replace(<doubleQuotes46>)/<doubleQuotes46>); <newline46mondego>String[] dateParts = date.split(<doubleQuotes46>[+-]<doubleQuotes46>)<newline46mondego>//get the date represented by the given millis<newline46mondego>Calendar c = Calendar.getInstance();<newline46mondego>c.setTime(Long.parseLong(dateParts[0]);<newline46mondego>// proceed with formatting to the desired date format.<newline46mondego>"
"5216splitHere46","4483586splitHere46","stmt.executeUpdate(<newline46mondego>        <doubleQuotes46>INSERT INTO autoIncTutorial (dataField) <doubleQuotes46><newline46mondego>        + <doubleQuotes46>values ('Can I Get the Auto Increment Field?')<doubleQuotes46>,<newline46mondego>        Statement.RETURN_GENERATED_KEYS);<newline46mondego><newline46mondego>//<newline46mondego>// Example of using Statement.getGeneratedKeys()<newline46mondego>// to retrieve the value of an auto-increment<newline46mondego>// value<newline46mondego>//<newline46mondego><newline46mondego>int autoIncKeyFromApi = -1;<newline46mondego><newline46mondego>rs = stmt.getGeneratedKeys();<newline46mondego><newline46mondego>if (rs.next()) {<newline46mondego>    autoIncKeyFromApi = rs.getInt(1);<newline46mondego>} else {<newline46mondego><newline46mondego>    // throw an exception from here<newline46mondego>}<newline46mondego><newline46mondego>rs.close();<newline46mondego><newline46mondego>rs = null;<newline46mondego>"
"5217splitHere46","4483587splitHere46","AbstractSet"
"5218splitHere46","4483587splitHere46","public boolean equals(Object o)"
"5219splitHere46","4483587splitHere46","contains"
"5220splitHere46","4483587splitHere46","containsAll(..)"
"5221splitHere46","4483587splitHere46","HashSet"
"5222splitHere46","4483622splitHere46","end"
"5223splitHere46","4483622splitHere46","volatile"
"5224splitHere46","4483695splitHere46","Id"
"5225splitHere46","4483695splitHere46","package so4483619;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.HashMap;<newline46mondego>import java.util.LinkedHashMap;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>public class AddDel {<newline46mondego><newline46mondego>  private static <K, V> HashMap<K, V> newLinkedHashMap() {<newline46mondego>    return new LinkedHashMap<K, V>();<newline46mondego>  }<newline46mondego><newline46mondego>  private static <K, V> HashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> other) {<newline46mondego>    return new LinkedHashMap<K, V>(other);<newline46mondego>  }<newline46mondego><newline46mondego>  private static void computeDeleteAndAdd(List<? extends Item> before, List<? extends Item> after) {<newline46mondego>    Map<Long, Item> beforeById = newLinkedHashMap();<newline46mondego>    for (Item item : before) {<newline46mondego>      beforeById.put(item.getId(), item);<newline46mondego>    }<newline46mondego><newline46mondego>    Map<Long, Item> afterById = newLinkedHashMap();<newline46mondego>    for (Item item : after) {<newline46mondego>      afterById.put(item.getId(), item);<newline46mondego>    }<newline46mondego><newline46mondego>    Map<Long, Item> onlyBefore = newLinkedHashMap(beforeById);<newline46mondego>    onlyBefore.keySet().removeAll(afterById.keySet());<newline46mondego><newline46mondego>    Map<Long, Item> onlyAfter = newLinkedHashMap(afterById);<newline46mondego>    onlyAfter.keySet().removeAll(beforeById.keySet());<newline46mondego><newline46mondego>    for (Map.Entry<Long, Item> entry : onlyBefore.entrySet()) {<newline46mondego>      System.out.println(<doubleQuotes46>delete:<doubleQuotes46> + entry.getKey());<newline46mondego>    }<newline46mondego>    for (Map.Entry<Long, Item> entry : onlyAfter.entrySet()) {<newline46mondego>      System.out.println(<doubleQuotes46>add:<doubleQuotes46> + entry.getKey());<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    List<Item> beforeList = new ArrayList<Item>();<newline46mondego>    List<ItemEx> afterList = new ArrayList<ItemEx>();<newline46mondego><newline46mondego>    beforeList.add(new Item(1L));<newline46mondego>    beforeList.add(new Item(2L)); // delete<newline46mondego>    beforeList.add(new Item(3L));<newline46mondego><newline46mondego>    afterList.add(new ItemEx(1L));<newline46mondego>    afterList.add(new ItemEx(3L));<newline46mondego>    afterList.add(new ItemEx(4L));<newline46mondego><newline46mondego>    computeDeleteAndAdd(beforeList, afterList);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5226splitHere46","4483695splitHere46","LinkedHashMap"
"5227splitHere46","4483695splitHere46","beforeList"
"5228splitHere46","4483695splitHere46","afterList"
"5229splitHere46","4483695splitHere46","Item"
"5230splitHere46","4483695splitHere46","ItemEx"
"5231splitHere46","4483695splitHere46","equals(Object)"
"5232splitHere46","4483695splitHere46","hashCode()"
"5233splitHere46","4483695splitHere46","HashMap"
"5234splitHere46","4483695splitHere46","Item"
"5235splitHere46","4483695splitHere46","newLinkedHashMap"
"5236splitHere46","4483695splitHere46","computeDeleteAndAdd"
"5237splitHere46","4483695splitHere46","new LinkedHashMap<Long, Item>(...)"
"5238splitHere46","4483695splitHere46","newLinkedHashMap(...)"
"5239splitHere46","4483760splitHere46","Long b = 1113L;<newline46mondego>"
"5240splitHere46","4483829splitHere46","Runtime.getRuntime().exec()"
"5241splitHere46","4483830splitHere46","public class SomeClass {<newline46mondego>  private final ProcessingEnvironment pe = /* get it somewhere */;<newline46mondego>  private final Types typeUtils = pe.getTypeUtils();<newline46mondego><newline46mondego>  public TypeElement getExtracted(VariableElement ve) {<newline46mondego>    TypeMirror typeMirror = ve.asType();<newline46mondego>    Element element = typeUtils.asElement(typeMirror);<newline46mondego><newline46mondego>    // instanceof implies null-ckeck<newline46mondego>    return (element instanceof TypeElement)<newline46mondego>        ? (TypeElement)element : null;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5242splitHere46","4483830splitHere46","Types"
"5243splitHere46","4483830splitHere46","ProcessingEnvironment"
"5244splitHere46","4484043splitHere46","boolean foundSolution"
"5245splitHere46","4484043splitHere46","true"
"5246splitHere46","4484171splitHere46","package hello;<newline46mondego><newline46mondego>public class KeyDemoCanvas extends Canvas {<newline46mondego>    String eventType = <doubleQuotes46>- Press any!<doubleQuotes46>;<newline46mondego>    int keyCode;<newline46mondego><newline46mondego>    public void keyPressed(int keyCode) {<newline46mondego>        eventType = <doubleQuotes46>pressed<doubleQuotes46>;<newline46mondego>        this.keyCode = keyCode;<newline46mondego>        repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyReleased(int keyCode) {<newline46mondego>        eventType = <doubleQuotes46>released<doubleQuotes46>;<newline46mondego>        this.keyCode = keyCode;<newline46mondego>        repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    public void keyRepeated(int keyCode) {<newline46mondego>        eventType = <doubleQuotes46>repeated<doubleQuotes46>;<newline46mondego>        this.keyCode = keyCode;<newline46mondego>        repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    protected void paint(Graphics g) {<newline46mondego>        g.setGrayScale(255);<newline46mondego>        g.fillRect(0, 0, getWidth(), getHeight());<newline46mondego><newline46mondego>        g.setGrayScale(0);<newline46mondego><newline46mondego>        int y = 0;<newline46mondego>        // y = write (g, y, <doubleQuotes46>Key <doubleQuotes46>+ eventType);<newline46mondego>        if (keyCode == 0) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego><newline46mondego>        y = write(g, y, <doubleQuotes46>Char/Code: <doubleQuotes46> + ((keyCode < 0) ? <doubleQuotes46>N/A<doubleQuotes46> : <doubleQuotes46><doubleQuotes46><newline46mondego>                + (char) keyCode) + <doubleQuotes46>/<doubleQuotes46> + keyCode);<newline46mondego>        y = write(g, y, <doubleQuotes46>Name: <doubleQuotes46> + getKeyName(keyCode));<newline46mondego>        String gameAction;<newline46mondego>        switch (getGameAction(keyCode)) {<newline46mondego>            case LEFT:<newline46mondego>                gameAction = <doubleQuotes46>LEFT<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case RIGHT:<newline46mondego>                gameAction = <doubleQuotes46>RIGHT<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case UP:<newline46mondego>                gameAction = <doubleQuotes46>UP<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case DOWN:<newline46mondego>                gameAction = <doubleQuotes46>DOWN<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case FIRE:<newline46mondego>                gameAction = <doubleQuotes46>FIRE<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case GAME_A:<newline46mondego>                gameAction = <doubleQuotes46>GAME_A<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case GAME_B:<newline46mondego>                gameAction = <doubleQuotes46>GAME_B<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case GAME_C:<newline46mondego>                gameAction = <doubleQuotes46>GAME_C<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            case GAME_D:<newline46mondego>                gameAction = <doubleQuotes46>GAME_D<doubleQuotes46>;<newline46mondego>                break;<newline46mondego>            default:<newline46mondego>                gameAction = <doubleQuotes46>N/A<doubleQuotes46>;<newline46mondego>        }<newline46mondego>        write(g, y, <doubleQuotes46>Action: <doubleQuotes46> + gameAction);<newline46mondego>    }<newline46mondego><newline46mondego>    public int write(Graphics g, int y, String s) {<newline46mondego>        g.drawString(s, 0, y, Graphics.LEFT | Graphics.TOP);<newline46mondego>        return y + g.getFont().getHeight();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5247splitHere46","4484417splitHere46","Shell"
"5248splitHere46","4484417splitHere46","layout()"
"5249splitHere46","4484417splitHere46","data.heightHint = 200;<newline46mondego>"
"5250splitHere46","4484451splitHere46","private final Handler mHandler = new Handler();<newline46mondego>"
"5251splitHere46","4484451splitHere46","mHandler.postDelayed(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        doDelayedThing();<newline46mondego>    }<newline46mondego>}, 3000);<newline46mondego>"
"5252splitHere46","4484494splitHere46","org.apache.commons.io.FileUtils.iterateFiles(..)"
"5253splitHere46","4484494splitHere46","Iterator<File> iterateFiles(File directory,<newline46mondego>                                          String[] extensions,<newline46mondego>                                          boolean recursive)    <newline46mondego>"
"5254splitHere46","4484662splitHere46","Main-Class"
"5255splitHere46","4484662splitHere46","manifest"
"5256splitHere46","4484662splitHere46","<jar jarfile=<doubleQuotes46>${jar.name}<doubleQuotes46>><newline46mondego>  <fileset dir=<doubleQuotes46>${classes.dir}<doubleQuotes46>><newline46mondego>     <include name=<doubleQuotes46>**/*.*<doubleQuotes46>/><newline46mondego>  </fileset><newline46mondego>  <manifest><newline46mondego>     <attribute name=<doubleQuotes46>Main-Class<doubleQuotes46> value=<doubleQuotes46>MyApp<doubleQuotes46>/><newline46mondego>  </manifest><newline46mondego></jar><newline46mondego>"
"5257splitHere46","4484848splitHere46","private final int i=0;  <newline46mondego>"
"5258splitHere46","4484848splitHere46","class A {<newline46mondego><newline46mondego>    private final int i;<newline46mondego>       public A(int i){<newline46mondego>       this.i = i;<newline46mondego>    }<newline46mondego><newline46mondego>}  <newline46mondego>"
"5259splitHere46","4484848splitHere46","class A {<newline46mondego>    private final int i;<newline46mondego>    public A(int i) {<newline46mondego>    }//constructor over<newline46mondego>    {//initilizer block<newline46mondego>        i = 10;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5260splitHere46","4484868splitHere46","maxBellows"
"5261splitHere46","4484868splitHere46","lensFocal"
"5262splitHere46","4484868splitHere46","maxBellows / lensFocal"
"5263splitHere46","4484868splitHere46","max_stops"
"5264splitHere46","4484868splitHere46","maxBellows"
"5265splitHere46","4484868splitHere46","lensFocal"
"5266splitHere46","4485078splitHere46","DefaultTableModel model = new DefaultTableModel(...);<newline46mondego>JTable table = new JTable( model );<newline46mondego>"
"5267splitHere46","4485196splitHere46","public byte[] longToBytes(long x) {<newline46mondego>    ByteBuffer buffer = ByteBuffer.allocate(Long.BYTES);<newline46mondego>    buffer.putLong(x);<newline46mondego>    return buffer.array();<newline46mondego>}<newline46mondego><newline46mondego>public long bytesToLong(byte[] bytes) {<newline46mondego>    ByteBuffer buffer = ByteBuffer.allocate(Long.BYTES);<newline46mondego>    buffer.put(bytes);<newline46mondego>    buffer.flip();//need flip <newline46mondego>    return buffer.getLong();<newline46mondego>}<newline46mondego>"
"5268splitHere46","4485196splitHere46","public class ByteUtils {<newline46mondego>    private static ByteBuffer buffer = ByteBuffer.allocate(Long.BYTES);    <newline46mondego><newline46mondego>    public static byte[] longToBytes(long x) {<newline46mondego>        buffer.putLong(0, x);<newline46mondego>        return buffer.array();<newline46mondego>    }<newline46mondego><newline46mondego>    public static long bytesToLong(byte[] bytes) {<newline46mondego>        buffer.put(bytes, 0, bytes.length);<newline46mondego>        buffer.flip();//need flip <newline46mondego>        return buffer.getLong();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5269splitHere46","4485444splitHere46","String#split"
"5270splitHere46","4485444splitHere46","<doubleQuotes46>a. R; er,  we p.<doubleQuotes46><newline46mondego>  ^^ ^^  ^^^  ^ ^<newline46mondego>  || ||  |||  | |<newline46mondego>  || ||  |||  | +--Split here<newline46mondego>  || ||  |||  +----And here<newline46mondego>  || ||  ||+-------And here<newline46mondego>  || ||  |+--------And here<newline46mondego>  || ||  +---------And here<newline46mondego>  || |+------------And here<newline46mondego>  || +-------------And here<newline46mondego>  |+---------------And here<newline46mondego>  +----------------And here<newline46mondego>"
"5271splitHere46","4485444splitHere46","return s.split(<doubleQuotes46>[ .,;]+<doubleQuotes46>);<newline46mondego>"
"5272splitHere46","4485444splitHere46","[...]"
"5273splitHere46","4485444splitHere46","+"
"5274splitHere46","4485444splitHere46","<doubleQuotes46>(?: |\\.|,|\\;)+<doubleQuotes46>"
"5275splitHere46","4485599splitHere46","new File(<doubleQuotes46>c:/aaa/bbb/ccc/ddd<doubleQuotes46>).mkdirs();<newline46mondego>"
"5276splitHere46","4485615splitHere46","CREATE PACKAGE my_package IS<newline46mondego>  FUNCTION f_author_exists (name VARCHAR2) RETURNS NUMBER;<newline46mondego>  FUNCTION f_author_exists (name VARCHAR2, country VARCHAR2) RETURNS NUMBER;<newline46mondego>END my_package;<newline46mondego>"
"5277splitHere46","4485615splitHere46","public class FAuthorExists1 { /* ... */ }<newline46mondego>public class FAuthorExists2 { /* ... */ }<newline46mondego>"
"5278splitHere46","4485615splitHere46","CREATE PACKAGE my_package IS<newline46mondego>  PROCEDURE f_author_exists (name VARCHAR2);<newline46mondego>  PROCEDURE f_author_exists (name CHAR);<newline46mondego>  PROCEDURE f_author_exists (name CHAR, country OUT VARCHAR2);<newline46mondego>END my_package;<newline46mondego>"
"5279splitHere46","4485664splitHere46","Exception"
"5280splitHere46","4485664splitHere46","SomeCrazyException"
"5281splitHere46","4485744splitHere46","File here = new File(<doubleQuotes46>.<doubleQuotes46>);<newline46mondego>System.out.println(here.getAbsolutePath());<newline46mondego>"
"5282splitHere46","4485944splitHere46","A.class"
"5283splitHere46","4485944splitHere46","A"
"5284splitHere46","4485944splitHere46","Primary:<newline46mondego>  ParExpression<newline46mondego>        NonWildcardTypeArguments (<newline46mondego>            ExplicitGenericInvocationSuffix | this Arguments)<newline46mondego>  this [Arguments]<newline46mondego>  super SuperSuffix<newline46mondego>  Literal<newline46mondego>  new Creator<newline46mondego>  Identifier { . Identifier }[ IdentifierSuffix]<newline46mondego>  BasicType {[]} .class<newline46mondego>  void.class<newline46mondego>"
"5285splitHere46","4485944splitHere46","field"
"5286splitHere46","4485944splitHere46","method"
"5287splitHere46","4485944splitHere46","b.field"
"5288splitHere46","4485944splitHere46","b.field"
"5289splitHere46","4485944splitHere46","c.method"
"5290splitHere46","4485944splitHere46","c"
"5291splitHere46","4485944splitHere46","Class.forName(<doubleQuotes46>some horrible string<doubleQuotes46>)"
"5292splitHere46","4485944splitHere46","<type>.class"
"5293splitHere46","4485944splitHere46","class"
"5294splitHere46","4485944splitHere46","method"
"5295splitHere46","4485944splitHere46","field"
"5296splitHere46","4485944splitHere46","b.field"
"5297splitHere46","4485944splitHere46","b.field"
"5298splitHere46","4485944splitHere46","field"
"5299splitHere46","4485944splitHere46","field"
"5300splitHere46","4485944splitHere46","c.method"
"5301splitHere46","4485944splitHere46","c"
"5302splitHere46","4485944splitHere46","c"
"5303splitHere46","4485944splitHere46","c"
"5304splitHere46","4485944splitHere46","c.method"
"5305splitHere46","4485944splitHere46","method"
"5306splitHere46","4485944splitHere46","c"
"5307splitHere46","4486156splitHere46","stopProcessing"
"5308splitHere46","4486156splitHere46","run"
"5309splitHere46","4486341splitHere46","byte[] bytes = new byte[10000];<newline46mondego>// ...<newline46mondego>FileOutputStream out = new FileOutputStream(...);<newline46mondego>try {<newline46mondego>    out.write(bytes);<newline46mondego>} finally {<newline46mondego>    out.close();<newline46mondego>}<newline46mondego>"
"5310splitHere46","4486518splitHere46","<mapping><newline46mondego>    <class-a>Source</class-a><newline46mondego>    <class-b>Destination</class-b><newline46mondego>    <field custom-converter=<doubleQuotes46>HashMapToListConverter<doubleQuotes46>><newline46mondego>      <a>dtos</a> <!-- This is a Map<String,DTO> --><newline46mondego>      <b>dtos</b> <!-- This is a List<DTOPrime> --><newline46mondego>      <a-hint>java.util.LinkedHashMap</a-hint><newline46mondego>      <b-hint>java.util.ArrayList</b-hint><newline46mondego>    </field><newline46mondego>  </mapping><newline46mondego><newline46mondego><newline46mondego><newline46mondego>import org.dozer.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class HashMapToListConverter extends DozerConverter<Map, List> implements MapperAware {<newline46mondego><newline46mondego>  private Mapper mapper;<newline46mondego><newline46mondego>  public HashMapToListConverter() {<newline46mondego>    super(Map.class, List.class);<newline46mondego>  }<newline46mondego><newline46mondego>  public List convertTo(Map source, List destination) {<newline46mondego>    List<DTOPrime> convertedList = new ArrayList<DTOPrime>();<newline46mondego>    for (Object object : source.values()) {<newline46mondego>      DTO item = (DTO)object;<newline46mondego>      DTOPrime mappedItem = mapper.map(item, DTOPrime.class);<newline46mondego>      convertedList.add(mappedItem);<newline46mondego>    }<newline46mondego>    return convertedList;<newline46mondego>  }<newline46mondego><newline46mondego>  public Map convertFrom(List source, Map destination) {<newline46mondego>    Map<String, DTO> originalToMapped = new LinkedHashMap<String, DTO>();<newline46mondego>    for (Object object : source) {<newline46mondego>      DTOPrime item = (DTOPrime)object;<newline46mondego>      DTO mappedItem = mapper.map(item, DTO.class);<newline46mondego>      originalToMapped.put(mappedItem.getData(), mappedItem); // FIXME: Since the mapping is lossy, you can decide what the keys of your map are for the reverse mapping...<newline46mondego>    }<newline46mondego>    return originalToMapped;<newline46mondego>  }<newline46mondego><newline46mondego>  public void setMapper(Mapper mapper) {<newline46mondego>    this.mapper = mapper;<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"5311splitHere46","4486531splitHere46","/**<newline46mondego> * Bind an existing view to the data pointed to by cursor<newline46mondego> * @param view Existing view, returned earlier by newView<newline46mondego> * @param context Interface to application's global information<newline46mondego> * @param cursor The cursor from which to get the data. The cursor is already<newline46mondego> * moved to the correct position.<newline46mondego> */<newline46mondego>public abstract void bindView(View view, Context context, Cursor cursor);<newline46mondego>"
"5312splitHere46","4486932splitHere46","// deletes /home/kim/files/somefile.txt<newline46mondego>boolean result = new File(<doubleQuotes46>somefile.txt<doubleQuotes46>).delete();<newline46mondego><newline46mondego>// deletes /home/kim/files/somefile.txt<newline46mondego>File f = new File(<doubleQuotes46>somefile.txt<doubleQuotes46>);<newline46mondego>boolean result = new File(f.getCanonicalPath()).delete();<newline46mondego><newline46mondego>// deletes /home/kim/files/somefile.txt<newline46mondego>String execPath = System.getProperty(<doubleQuotes46>user.dir<doubleQuotes46>);<newline46mondego>File f = new File(execPath+<doubleQuotes46>/somefile.txt<doubleQuotes46>);<newline46mondego>f.delete();<newline46mondego>"
"5313splitHere46","4486985splitHere46","int modelRow = tableConvertRowIndexToModel( selectedRow );<newline46mondego>rowData.remove(modelRow); <newline46mondego>fireTableRowsDeleted(modelRow, modelRow);<newline46mondego>"
"5314splitHere46","4487095splitHere46","equals()"
"5315splitHere46","4487095splitHere46","hashCode()"
"5316splitHere46","4487095splitHere46","MyClass"
"5317splitHere46","4487341splitHere46","a"
"5318splitHere46","4487341splitHere46","dao.findBar(a)"
"5319splitHere46","4487341splitHere46","dao.findBar(a)"
"5320splitHere46","4487341splitHere46","x"
"5321splitHere46","4487341splitHere46","a"
"5322splitHere46","4487341splitHere46","dao.findBar(x.getBaz())"
"5323splitHere46","4487519splitHere46","com.example.MyClass<newline46mondego>"
"5324splitHere46","4487519splitHere46","./com/example/MyClass.class<newline46mondego>./db.properties<newline46mondego>"
"5325splitHere46","4487519splitHere46","db.properties"
"5326splitHere46","4487541splitHere46","public String encrypt(String str) {<newline46mondego>        try {<newline46mondego>            // Encode the string into bytes using utf-8<newline46mondego>            byte[] utf8 = str.getBytes(<doubleQuotes46>UTF8<doubleQuotes46>);<newline46mondego><newline46mondego>            // Encrypt<newline46mondego>            byte[] enc = ecipher.doFinal(utf8);<newline46mondego><newline46mondego>            // Encode bytes to base64 to get a string<newline46mondego>            return new sun.misc.BASE64Encoder().encode(enc);<newline46mondego>        } catch (javax.crypto.BadPaddingException e) {<newline46mondego>        } catch (IllegalBlockSizeException e) {<newline46mondego>        } catch (UnsupportedEncodingException e) {<newline46mondego>        } catch (java.io.IOException e) {<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    public String decrypt(String str) {<newline46mondego>        try {<newline46mondego>            // Decode base64 to get bytes<newline46mondego>            byte[] dec = new sun.misc.BASE64Decoder().decodeBuffer(str);<newline46mondego><newline46mondego>            // Decrypt<newline46mondego>            byte[] utf8 = dcipher.doFinal(dec);<newline46mondego><newline46mondego>            // Decode using utf-8<newline46mondego>            return new String(utf8, <doubleQuotes46>UTF8<doubleQuotes46>);<newline46mondego>        } catch (javax.crypto.BadPaddingException e) {<newline46mondego>        } catch (IllegalBlockSizeException e) {<newline46mondego>        } catch (UnsupportedEncodingException e) {<newline46mondego>        } catch (java.io.IOException e) {<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5327splitHere46","4487541splitHere46","try {<newline46mondego>    // Generate a temporary key. In practice, you would save this key.<newline46mondego>    // See also Encrypting with DES Using a Pass Phrase.<newline46mondego>    SecretKey key = KeyGenerator.getInstance(<doubleQuotes46>DES<doubleQuotes46>).generateKey();<newline46mondego><newline46mondego>    // Create encrypter/decrypter class<newline46mondego>    DesEncrypter encrypter = new DesEncrypter(key);<newline46mondego><newline46mondego>    // Encrypt<newline46mondego>    String encrypted = encrypter.encrypt(<doubleQuotes46>Don't tell anybody!<doubleQuotes46>);<newline46mondego><newline46mondego>    // Decrypt<newline46mondego>    String decrypted = encrypter.decrypt(encrypted);<newline46mondego>} catch (Exception e) {<newline46mondego>}<newline46mondego>"
"5328splitHere46","4487665splitHere46","java.security.SignatureException: Signature does not match."
"5329splitHere46","4487745splitHere46","mark()"
"5330splitHere46","4487745splitHere46","reset()"
"5331splitHere46","4487745splitHere46","RandomAccessFile"
"5332splitHere46","4487745splitHere46","ByteArrayOutputStream"
"5333splitHere46","4487745splitHere46","ByteArrayInputStream"
"5334splitHere46","4487865splitHere46","lastNode"
"5335splitHere46","4487865splitHere46","tail"
"5336splitHere46","4487865splitHere46","lastNode"
"5337splitHere46","4487865splitHere46","Add()"
"5338splitHere46","4487865splitHere46","Remove()"
"5339splitHere46","4487943splitHere46","Font createFont(int fontFormat, InputStream fontStream)"
"5340splitHere46","4487943splitHere46","Font createFont(int fontFormat, File fontFile)"
"5341splitHere46","4487943splitHere46","int"
"5342splitHere46","4487943splitHere46","Font.TRUETYPE_FONT"
"5343splitHere46","4487943splitHere46","Font.TYPE1_FONT"
"5344splitHere46","4487943splitHere46","InputStream"
"5345splitHere46","4487943splitHere46","File"
"5346splitHere46","4487943splitHere46","GraphicsEnviroment"
"5347splitHere46","4487943splitHere46","registerFont(Font)"
"5348splitHere46","4488120splitHere46","import org.htmlcleaner.HtmlCleaner;<newline46mondego>import org.htmlcleaner.TagNode;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Throwable {<newline46mondego>        HtmlCleaner cleaner = new HtmlCleaner();<newline46mondego>        String html = <doubleQuotes46><div style=\<doubleQuotes46>Z-INDEX: 654; BORDER-BOTTOM: 0px; POSITION: absolute; BORDER-LEFT: 0px; WIDTH: 80px; HEIGHT: 22px; BORDER-TOP: 0px; TOP: 64px; CURSOR: auto; BORDER-RIGHT: 0px; LEFT: 240px\<doubleQuotes46> id=\<doubleQuotes46>textboxElt11286249556014dIi15v\<doubleQuotes46> lineid=\<doubleQuotes46>lineid\<doubleQuotes46> pos_rel=\<doubleQuotes46>false\<doubleQuotes46> x1=\<doubleQuotes46>240\<doubleQuotes46> x2=\<doubleQuotes46>320\<doubleQuotes46> y1=\<doubleQuotes46>64\<doubleQuotes46> y2=\<doubleQuotes46>86\<doubleQuotes46>><input style=\<doubleQuotes46>WIDTH: 80px; HEIGHT: 20px\<doubleQuotes46> id=\<doubleQuotes46>textboxElt11286249556014dIi15v_textbox\<doubleQuotes46> title=\<doubleQuotes46>Enter Registration Number Here\<doubleQuotes46> tabindex=\<doubleQuotes46>1\<doubleQuotes46> value=\<doubleQuotes46> \<doubleQuotes46> maxlength=\<doubleQuotes46>15\<doubleQuotes46> size=\<doubleQuotes46>10\<doubleQuotes46> name=\<doubleQuotes46>scheduled_tribe_registration_number_text\<doubleQuotes46>></input></div><doubleQuotes46>;<newline46mondego>        TagNode node = cleaner.clean(html);<newline46mondego>        TagNode div = node.findElementByName(<doubleQuotes46>div<doubleQuotes46>, true);<newline46mondego>        System.out.println(div.getAttributeByName(<doubleQuotes46>style<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5349splitHere46","4488185splitHere46","for (int j = i + 2; j<numbers.length; j++){<newline46mondego>"
"5350splitHere46","4488185splitHere46","if (numbers.length<1 && target==0){return true;)<newline46mondego>"
"5351splitHere46","4488185splitHere46","for (int i=0;i<numbers.length;i++){<newline46mondego>     for (int j=2;j<numbers.length;j++){<newline46mondego>          if (target-numbers[i]-numbers[j]==0){return true;}<newline46mondego>     }<newline46mondego>     if (target-numbers[i]==0){ return true;}<newline46mondego>     curr+=target[i];<newline46mondego>}<newline46mondego>return false;<newline46mondego>"
"5352splitHere46","4488211splitHere46","static long SumSubtring(String s)<newline46mondego>{<newline46mondego>    long sum = 0, mult = 1;<newline46mondego>    for (int i = s.Length; i > 0; i--, mult = mult * 10 + 1)<newline46mondego>        sum += (s[i - 1] - '0') * mult * i;<newline46mondego>    return sum;<newline46mondego>}<newline46mondego>"
"5353splitHere46","4488224splitHere46","public class TCPClient {<newline46mondego><newline46mondego> public TCPClient(String host, int port) {<newline46mondego><newline46mondego>        try {<newline46mondego>            clientSocket = new Socket(host, port);<newline46mondego>        } catch (IOException e) {<newline46mondego>            System.out.println(<doubleQuotes46> Could not connect on port: <doubleQuotes46> + port + <doubleQuotes46> to <doubleQuotes46> + host);<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"5354splitHere46","4488224splitHere46","public class TCPListener {<newline46mondego><newline46mondego>    public TCPListener(int portNumber) {<newline46mondego>            try {<newline46mondego>                serverSocket = new ServerSocket(portNumber);<newline46mondego>            } catch (IOException e) {<newline46mondego>                System.out.println(<doubleQuotes46>Could not listen on port: <doubleQuotes46> + portNumber);<newline46mondego>            }<newline46mondego>            System.out.println(<doubleQuotes46>TCPListener created!<doubleQuotes46>);<newline46mondego>                    System.out.println(<doubleQuotes46>Connection accepted<doubleQuotes46>);<newline46mondego>            try {<newline46mondego>                while (true) {<newline46mondego>                    Socket clientConnection = serverSocket.accept();<newline46mondego><newline46mondego>    //every time client's class constructor called - line above will be executed and new connection saved into Socket class.<newline46mondego>                }<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>    }<newline46mondego>"
"5355splitHere46","4488333splitHere46","public String foo(String key, Object... parameters) {..}<newline46mondego>"
"5356splitHere46","4488406splitHere46","style"
"5357splitHere46","4488406splitHere46","Document doc = Jsoup.parse(html);<newline46mondego>Elements els = doc.select(<doubleQuotes46>style<doubleQuotes46>);<newline46mondego>for(Element e: els){<newline46mondego>    e.remove();<newline46mondego>}<newline46mondego>"
"5358splitHere46","4488504splitHere46","news"
"5359splitHere46","4488504splitHere46","Map<String,Long> <newline46mondego>"
"5360splitHere46","4488504splitHere46","Map<String,List<String>> <newline46mondego>"
"5361splitHere46","4488766splitHere46","String"
"5362splitHere46","4488766splitHere46","int"
"5363splitHere46","4488766splitHere46","int"
"5364splitHere46","4488766splitHere46","public Module()<newline46mondego>{<newline46mondego>  super();<newline46mondego>  this.name = null;<newline46mondego>  this.credits = 0;<newline46mondego>  this.hours = 0;<newline46mondego>}<newline46mondego>"
"5365splitHere46","4488766splitHere46","public Module()<newline46mondego>{}<newline46mondego>"
"5366splitHere46","4489081splitHere46","BooleanFilter"
"5367splitHere46","4489081splitHere46","BooleanFilter f = new BooleanFilter();<newline46mondego>for (String unwanted: unwantedCategories) {<newline46mondego>    TermsFilter tf = new TermsFilter(new Term(<doubleQuotes46>category<doubleQuotes46>, unwanted));<newline46mondego>    f.add(new FilterClause(tf, BooleanClause.MUST_NOT));<newline46mondego>}<newline46mondego>"
"5368splitHere46","4489149splitHere46","double summa4 = ((double)arr[0])/arr[1];<newline46mondego>    System.out.println(<doubleQuotes46>What's <doubleQuotes46>+arr[0]+<doubleQuotes46> / <doubleQuotes46>+arr[1]+<doubleQuotes46> ?<doubleQuotes46>);<newline46mondego>    double vad4 = sc.nextDouble();<newline46mondego><newline46mondego>    if (summa4 == vad4)<newline46mondego>        System.out.println(<doubleQuotes46>Correct!<doubleQuotes46>);<newline46mondego>    else<newline46mondego>        System.out.println(<doubleQuotes46>Wrong - The right answer is <doubleQuotes46>+summa4);<newline46mondego>"
"5369splitHere46","4489161splitHere46","Thread.sleep(millis);"
"5370splitHere46","4489171splitHere46","gbc.fill = GridBagConstraints.BOTH;<newline46mondego>gbc.weightx = 1.0;<newline46mondego>gbc.weighty = 1.0;<newline46mondego>"
"5371splitHere46","4489171splitHere46","BufferedImage"
"5372splitHere46","4489171splitHere46","paintComponent()"
"5373splitHere46","4489171splitHere46","public Trail() {<newline46mondego>    setTitle(<doubleQuotes46>Attendence Manager<doubleQuotes46>);<newline46mondego>    setIconImage(Toolkit.getDefaultToolkit().getImage(<doubleQuotes46>images/icon.png<doubleQuotes46>));<newline46mondego>    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();<newline46mondego>    setSize(new Dimension(dim.width - 20, dim.height - 100));<newline46mondego>    c = getContentPane();<newline46mondego>    gbl = new GridBagLayout();<newline46mondego>    setLayout(gbl);<newline46mondego><newline46mondego>    try {<newline46mondego>        final BufferedImage image = ImageIO.read(new File(<doubleQuotes46>images/sample.jpg<doubleQuotes46>));<newline46mondego>        banner = new JLabel(){<newline46mondego>            public void paintComponent(Graphics g) {<newline46mondego>                g.drawImage(image, 0, 0, getWidth(), getHeight(), null);<newline46mondego>            }<newline46mondego>        };<newline46mondego>        gbc.fill = GridBagConstraints.BOTH;<newline46mondego>        gbc.weightx = 1.0;<newline46mondego>        gbc.weighty = 1.0;<newline46mondego>        c.add(banner, gbc);<newline46mondego>    }<newline46mondego>    catch (IOException ex) {<newline46mondego>        Logger.getLogger(Trail.class.getName()).log(Level.SEVERE, null, ex);<newline46mondego>    }<newline46mondego><newline46mondego>    this.setVisible(true);<newline46mondego>    addWindowListener(new MyWindowAdapter());<newline46mondego>}<newline46mondego>"
"5374splitHere46","4489175splitHere46","Each line has a start point and an end point. Say that `start_x` <= `end_x` for all the lines.<newline46mondego>Create an empty bucket of lines.<newline46mondego>Sort all the points by their x coordinates, and then iterate through the sorted list.<newline46mondego>If the current point is a start point, test its line against all the lines in the bucket, and then add its line to the <newline46mondego>bucket.<newline46mondego>if the current point is an end point, remove its line from the bucket.<newline46mondego>"
"5375splitHere46","4489175splitHere46","O(N^2)"
"5376splitHere46","4489175splitHere46","O(NlogN)"
"5377splitHere46","4489388splitHere46","ServerSocket.accept()"
"5378splitHere46","4489388splitHere46","SererSocket.setSOTimeout(10000)<newline46mondego>"
"5379splitHere46","4489454splitHere46","SELECT i FROM Item i inner join i.categoryItems cat WHERE cat.id = :catID<newline46mondego>"
"5380splitHere46","4489454splitHere46","i.categoryItems.catalogId"
"5381splitHere46","4489574splitHere46","@@rowcount"
"5382splitHere46","4489574splitHere46","COUNT()"
"5383splitHere46","4489574splitHere46","ROW_COUNT()"
"5384splitHere46","4489616splitHere46","<doubleQuotes46>([a-zA-Z]:)?(\\\\[a-zA-Z0-9_.-]+)+\\\\?<doubleQuotes46><newline46mondego>"
"5385splitHere46","4489617splitHere46","public class LoginConsumerResponseParser extends DefaultHandler {<newline46mondego>    public void startDocument() throws SAXException {<newline46mondego>        System.out.println(<doubleQuotes46>startDocument()<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void endDocument() throws SAXException {<newline46mondego>        System.out.println(<doubleQuotes46>endDocument()<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void startElement(String namespaceURI, String localName,<newline46mondego>                             String qName, Attributes attrs) <newline46mondego>        throws SAXException {<newline46mondego><newline46mondego>        if (qName.equals(<doubleQuotes46>ActiveProdOwnership<doubleQuotes46>)) {<newline46mondego>            inActiveProdOwnership = true;<newline46mondego>        } else if (qName.equals(<doubleQuotes46>Product<doubleQuotes46>)) {<newline46mondego>            if (!inActiveProdOwnership) {<newline46mondego>                throw new SAXException(<doubleQuotes46>Product tag not expected here.<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            int length = attrs.getLength();<newline46mondego>            for (int i=0; i<length; i++) {<newline46mondego>                String name = attrs.getQName(i);<newline46mondego>                System.out.print(name + <doubleQuotes46>: <doubleQuotes46>);<newline46mondego>                String value = attrs.getValue(i);<newline46mondego>                System.out.println(value);            <newline46mondego>            }<newline46mondego>        }            <newline46mondego>    }<newline46mondego><newline46mondego>    public void endElement(String namespaceURI, String localName, String qName)<newline46mondego>        throws SAXException {<newline46mondego><newline46mondego>        if (localName.equals(<doubleQuotes46>ActiveProdOwnership<doubleQuotes46>))<newline46mondego>            inActiveProdOwnership = false;<newline46mondego>    }<newline46mondego><newline46mondego>    public void characters(char ch[], int start, int length) {<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego>        String xmlFile = args[0];<newline46mondego>        File file = new File(xmlFile);<newline46mondego>        if (file.exists()) {<newline46mondego>            SAXParserFactory factory = SAXParserFactory.newInstance();<newline46mondego>            SAXParser parser = factory.newSAXParser();<newline46mondego>            DefaultHandler handler = new Test();<newline46mondego>            parser.parse(xmlFile, handler);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            System.out.println(<doubleQuotes46>File not found!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean inActiveProdOwnership = false;<newline46mondego>}<newline46mondego>"
"5386splitHere46","4489617splitHere46","startDocument()<newline46mondego>code: 3N3<newline46mondego>component: TRI_SCORE<newline46mondego>orderNumber: 1-77305469<newline46mondego>endDocument()<newline46mondego>"
"5387splitHere46","4489807splitHere46","UserDetailsService"
"5388splitHere46","4489807splitHere46","User"
"5389splitHere46","4489807splitHere46","UserDetailsService"
"5390splitHere46","4489807splitHere46","UserDetails"
"5391splitHere46","4489807splitHere46","UserDetails"
"5392splitHere46","4489807splitHere46","public class MyUserDetailsService implements UserDetailsService{<newline46mondego><newline46mondego>    private EntityManager entityManager;<newline46mondego>    @PersistenceContext<newline46mondego>    public void setEntityManager(EntityManager newEm){<newline46mondego>        this.entityManager = newEm;<newline46mondego>    }<newline46mondego><newline46mondego>    public UserDetails loadUserByUsername(String username){<newline46mondego><newline46mondego>        // assuming that you have a User class that implements UserDetails<newline46mondego>        return entityManager.createQuery(<doubleQuotes46>from User where username = :username<doubleQuotes46>, User.class)<newline46mondego>                            .setParameter(<doubleQuotes46>username<doubleQuotes46>, username)<newline46mondego>                            .getSingleResult();<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5393splitHere46","4489807splitHere46","spring-security.xml"
"5394splitHere46","4489807splitHere46","<authentication-manager><newline46mondego>   <authentication-provider user-service-ref=<doubleQuotes46>MyUserDetailsService<doubleQuotes46> /><newline46mondego></authentication-manager><newline46mondego>"
"5395splitHere46","4489823splitHere46","@NamedQueries(  <newline46mondego>{   <newline46mondego> @NamedQuery(name = <doubleQuotes46>GetAvailableProducts<doubleQuotes46>, query = <doubleQuotes46>FROM Product p WHERE p.type= :type AND (p.available IN (:availableCollection) OR p.available = :available)<doubleQuotes46>,  <newline46mondego>}<newline46mondego>"
"5396splitHere46","4489823splitHere46","query.setParameterList('availableCollection', yourCollection);<newline46mondego>"
"5397splitHere46","4489823splitHere46","query.setParameter('availableCollection', yourCollection);<newline46mondego>"
"5398splitHere46","4489956splitHere46","Second"
"5399splitHere46","4489956splitHere46","First"
"5400splitHere46","4489956splitHere46","class First {<newline46mondego>    First(Object o) {<newline46mondego>        o.toString();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Second extends First {<newline46mondego>    private final static Second instance = new Second(new Object());<newline46mondego><newline46mondego>    private Second(Object o) {<newline46mondego>        super(o);<newline46mondego>    }<newline46mondego><newline46mondego>    public static Second getInstance() {<newline46mondego>        return instance;<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"5401splitHere46","4490010splitHere46","getCanonicalFile"
"5402splitHere46","4490010splitHere46","new File(<doubleQuotes46>D:\\dummy.txt<doubleQuotes46>).getCanonicalFile();<newline46mondego>"
"5403splitHere46","4490010splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.io.IOException: The device is not ready<newline46mondego>    at java.io.WinNTFileSystem.canonicalize0(Native Method)<newline46mondego>    at java.io.Win32FileSystem.canonicalize(Win32FileSystem.java:396)<newline46mondego>    at java.io.File.getCanonicalPath(File.java:559)<newline46mondego>    at java.io.File.getCanonicalFile(File.java:583)<newline46mondego>"
"5404splitHere46","4490169splitHere46","KeySpec ks = new DESKeySpec(<doubleQuotes46>key12345<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>SecretKey key = SecretKeyFactory.getInstance(<doubleQuotes46>DES<doubleQuotes46>).generateSecret(ks);<newline46mondego><newline46mondego>IvParameterSpec iv = new IvParameterSpec(<newline46mondego>        Hex.decodeHex(<doubleQuotes46>1234567890ABCDEF<doubleQuotes46>.toCharArray()));<newline46mondego><newline46mondego>Cipher cipher = Cipher.getInstance(<doubleQuotes46>DES/CBC/PKCS5Padding<doubleQuotes46>);<newline46mondego>cipher.init(Cipher.DECRYPT_MODE, key, iv);<newline46mondego><newline46mondego>byte[] decoded = cipher.doFinal(Base64.decodeBase64(<doubleQuotes46>B3xogi/Qfsc=<doubleQuotes46>));<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>Decoded: <doubleQuotes46> + new String(decoded, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"5405splitHere46","4490199splitHere46","@OneToMany(mappedBy = ...)<newline46mondego>@MapKey(name = <doubleQuotes46>countryKey<doubleQuotes46>)<newline46mondego>private Map<String, AddressWrapper> addressWrappers;<newline46mondego>"
"5406splitHere46","4490199splitHere46","@OneToMany Set<Address> addresses;"
"5407splitHere46","4490199splitHere46","String countryKey"
"5408splitHere46","4490225splitHere46","-Xloggc"
"5409splitHere46","4490344splitHere46","implicit def convertToJava...<newline46mondego>"
"5410splitHere46","4490417splitHere46","import java.io.FileInputStream;<newline46mondego>import javax.xml.XMLConstants;<newline46mondego>import javax.xml.bind.JAXBContext;<newline46mondego>import javax.xml.bind.Unmarshaller;<newline46mondego>import javax.xml.stream.XMLInputFactory;<newline46mondego>import javax.xml.stream.XMLStreamReader;<newline46mondego><newline46mondego>public class Demo {<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        JAXBContext context = JAXBContext.newInstance(Categories.class);<newline46mondego><newline46mondego>        XMLInputFactory xif = XMLInputFactory.newInstance();<newline46mondego>        FileInputStream fis = new FileInputStream(<doubleQuotes46>input.xml<doubleQuotes46>);<newline46mondego>        XMLStreamReader xsr = xif.createXMLStreamReader(fis);<newline46mondego>        xsr.nextTag();<newline46mondego>        String noNamespaceSchemaLocation = xsr.getAttributeValue(XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, <doubleQuotes46>noNamespaceSchemaLocation<doubleQuotes46>);<newline46mondego>        System.out.println(noNamespaceSchemaLocation);<newline46mondego><newline46mondego>        Unmarshaller um = context.createUnmarshaller();<newline46mondego>        Categories response = (Categories) um.unmarshal(xsr);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5411splitHere46","4490471splitHere46","Robot#createScreenCapture()"
"5412splitHere46","4490471splitHere46","BufferedImage image = new Robot().createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize()));<newline46mondego>ImageIO.write(image, <doubleQuotes46>png<doubleQuotes46>, new File(<doubleQuotes46>/screenshot.png<doubleQuotes46>));<newline46mondego>"
"5413splitHere46","4490515splitHere46","public void someMethod() {<newline46mondego>   synchronized(this) {<newline46mondego>      //code<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5414splitHere46","4490515splitHere46","this"
"5415splitHere46","4490515splitHere46","A"
"5416splitHere46","4490515splitHere46","A"
"5417splitHere46","4490515splitHere46","public static void methodB() {<newline46mondego>   synchronized (A.class) {<newline46mondego>      //code<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5418splitHere46","4490714splitHere46","int"
"5419splitHere46","4490714splitHere46","String"
"5420splitHere46","4490934splitHere46","#VALUE!"
"5421splitHere46","4490934splitHere46","Tools > Formula Auditing > Evaluate Formula"
"5422splitHere46","4490934splitHere46","AVERAGE(Output!D1:Output!D5)<newline46mondego>=AVERAGE(5:Output!D5)<newline46mondego>=AVERAGE(5:1)<newline46mondego>=AVERAGE(#VALUE!)<newline46mondego>=#VALUE!<newline46mondego>"
"5423splitHere46","4490934splitHere46","F2+Enter"
"5424splitHere46","4490934splitHere46","Formula formula = new Formula(3,5, <doubleQuotes46>AVERAGE(Output!D1,Output!D2,Output!D3,Output!D4,Output!D5)<doubleQuotes46>);<newline46mondego>"
"5425splitHere46","4491223splitHere46","public enum Text {<newline46mondego>  YELL, SWEAR, BEG, GREET /* and more */ ;<newline46mondego><newline46mondego>  /** Resources for the default locale */<newline46mondego>  private static final ResourceBundle res =<newline46mondego>    ResourceBundle.getBundle(<doubleQuotes46>com.example.Messages<doubleQuotes46>);<newline46mondego><newline46mondego>  /** @return the locale-dependent message */<newline46mondego>  public String toString() {<newline46mondego>    return res.getString(name() + <doubleQuotes46>.string<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5426splitHere46","4491223splitHere46","# File com/example/Messages.properties<newline46mondego># default language (english) resources<newline46mondego>YELL.string=HEY!<newline46mondego>SWEAR.string=Â§$%&<newline46mondego>BEG.string=Pleeeeeease!<newline46mondego>GREET.string=Hello player!<newline46mondego>"
"5427splitHere46","4491223splitHere46","# File com/example/Messages_de.properties<newline46mondego># german language resources<newline46mondego>YELL.string=HEY!<newline46mondego>SWEAR.string=%&$Â§<newline46mondego>BEG.string=Biiiiiitte!<newline46mondego>GREET.string=Hallo Spieler!<newline46mondego>"
"5428splitHere46","4491343splitHere46","mvn install:install-file -Dfile=<path-to-file> -DgroupId=<group-id> \<newline46mondego>    -DartifactId=<artifact-id> -Dversion=<version> -Dpackaging=<packaging><newline46mondego>"
"5429splitHere46","4491363splitHere46","ServletContextListener#contextInitialized()"
"5430splitHere46","4491363splitHere46","@WebListener<newline46mondego>public class Config implements ServletContextListener {<newline46mondego>    @Override<newline46mondego>    public void contextInitialized(ServletContextEvent event) {<newline46mondego>        // Do it here.<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void contextDestroyed(ServletContextEvent event) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5431splitHere46","4491474splitHere46","INSERT INTO webData VALUES (...)<newline46mondego>"
"5432splitHere46","4491474splitHere46","INSERT INTO webData (MyColumn1, MyColumn2) VALUES (...)<newline46mondego>"
"5433splitHere46","4491638splitHere46","run"
"5434splitHere46","4491638splitHere46","class MyThread extends Thread {<newline46mondego>     public void run() {<newline46mondego>         throw new RuntimeException();<newline46mondego>     }<newline46mondego> }<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>new MyThread().start();<newline46mondego>// here thread dies silently with no visible effects at all<newline46mondego>"
"5435splitHere46","4491638splitHere46","new MyThread().start(); // launch thread and forget<newline46mondego><newline46mondego>// 1000 lines of code further...<newline46mondego>i = i + 1; // would you like exception from child thread to be propagated here?<newline46mondego>"
"5436splitHere46","4492047splitHere46","class ANewlyCreatedAccount {<newline46mondego>  shouldHaveAZeroBalance() {}<newline46mondego>  shouldCalculateItsOwnInterest() {}<newline46mondego>}<newline46mondego>"
"5437splitHere46","4492049splitHere46","ArrayAdapter"
"5438splitHere46","4492049splitHere46","ArrayAdapter<CharSequence> beAdapter = new ArrayAdapter<CharSequence>(this,<newline46mondego>"
"5439splitHere46","4492049splitHere46","this"
"5440splitHere46","4492049splitHere46","OnItemSelectedListener"
"5441splitHere46","4492049splitHere46","ArrayAdapter"
"5442splitHere46","4492049splitHere46","MyParentView.this"
"5443splitHere46","4492049splitHere46","MyParentView"
"5444splitHere46","4492111splitHere46","ServletContextListener"
"5445splitHere46","4492111splitHere46","init()"
"5446splitHere46","4492111splitHere46","contextInitialized()"
"5447splitHere46","4492111splitHere46","public class Config implements ServletContextListener {<newline46mondego>    private static final String ATTRIBUTE_NAME = <doubleQuotes46>config<doubleQuotes46>;<newline46mondego>    private DataSource dataSource;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void contextInitialized(ServletContextEvent event) {<newline46mondego>        ServletContext servletContext = event.getServletContext();<newline46mondego>        String databaseName = servletContext.getInitParameter(<doubleQuotes46>database.name<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            dataSource = (DataSource) new InitialContext().lookup(databaseName);<newline46mondego>        } catch (NamingException e) {<newline46mondego>            throw new RuntimeException(<doubleQuotes46>Config failed: datasource not found<doubleQuotes46>, e);<newline46mondego>        }<newline46mondego>        servletContext.setAttribute(ATTRIBUTE_NAME, this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void contextDestroyed(ServletContextEvent event) {<newline46mondego>        // NOOP.<newline46mondego>    }<newline46mondego><newline46mondego>    public DataSource getDataSource() {<newline46mondego>        return dataSource;<newline46mondego>    }<newline46mondego><newline46mondego>    public static Config getInstance(ServletContext servletContext) {<newline46mondego>        return (Config) servletContext.getAttribute(ATTRIBUTE_NAME);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5448splitHere46","4492111splitHere46","web.xml"
"5449splitHere46","4492111splitHere46","<context-param><newline46mondego>    <param-name>database.name</param-name><newline46mondego>    <param-value>jdbc/mysqldb</param-value><newline46mondego></context-param><newline46mondego><listener><newline46mondego>    <listener-class>com.example.Config</listener-class><newline46mondego></listener><newline46mondego>"
"5450splitHere46","4492111splitHere46","init()"
"5451splitHere46","4492111splitHere46","doXXX()"
"5452splitHere46","4492111splitHere46","DataSource dataSource = Config.getInstance(getServletContext()).getDataSource();<newline46mondego>"
"5453splitHere46","4492619splitHere46","submit()"
"5454splitHere46","4492619splitHere46","submit()"
"5455splitHere46","4492619splitHere46","Callable"
"5456splitHere46","4492619splitHere46","ExecutorService executor = new ThreadPoolExecutor(1, 10, 60, TimeUnit.SECONDS, new LinkedBlockingDeque<Runnable>()) {<newline46mondego>    @Override<newline46mondego>    public <T> Future<T> submit(final Callable<T> task) {<newline46mondego>        Callable<T> wrappedTask = new Callable<T>() {<newline46mondego>            @Override<newline46mondego>            public T call() throws Exception {<newline46mondego>                try {<newline46mondego>                    return task.call();<newline46mondego>                }<newline46mondego>                catch (Exception e) {<newline46mondego>                    System.out.println(<doubleQuotes46>Oh boy, something broke!<doubleQuotes46>);<newline46mondego>                    e.printStackTrace();<newline46mondego>                    throw e;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        return super.submit(wrappedTask);<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"5457splitHere46","4492619splitHere46","ExecutorService"
"5458splitHere46","4492619splitHere46","submit()"
"5459splitHere46","4492836splitHere46","public String repeatSeparator(String word, String sep, int count) {    <newline46mondego>    StringBuffer buffer = new StringBuffer();<newline46mondego><newline46mondego>    while (count > 0) {<newline46mondego>        buffer.append(word);<newline46mondego>        count--;<newline46mondego>        if (count > 0) {<newline46mondego>            buffer.append(sep);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    return buffer.toString();                           <newline46mondego>}<newline46mondego>"
"5460splitHere46","4493040splitHere46","123456789123l"
"5461splitHere46","4493040splitHere46","l"
"5462splitHere46","4493040splitHere46","long l = 123456789123; // error, constant `123456789123` has type int<newline46mondego><newline46mondego>long l1 = 123456789123l; // will work<newline46mondego>long l2 = 123456789123L; // will work too<newline46mondego>"
"5463splitHere46","4493089splitHere46","List<Number>"
"5464splitHere46","4493089splitHere46","List<Integer>"
"5465splitHere46","4493089splitHere46","List<Number>"
"5466splitHere46","4493089splitHere46","Integer"
"5467splitHere46","4493089splitHere46","List<Number> numbers = new ArrayList<Number>();<newline46mondego>numbers.add(1.1); // add a double<newline46mondego>List<Integer> ints = numbers;<newline46mondego>Integer fail = ints.get(0); // ClassCastException!<newline46mondego>"
"5468splitHere46","4493089splitHere46","List<Integer>"
"5469splitHere46","4493089splitHere46","Integer"
"5470splitHere46","4493089splitHere46","Integer"
"5471splitHere46","4493089splitHere46","List"
"5472splitHere46","4493089splitHere46","Number"
"5473splitHere46","4493089splitHere46","List<Integer>"
"5474splitHere46","4493089splitHere46","List<Integer>"
"5475splitHere46","4493089splitHere46","List<?>"
"5476splitHere46","4493089splitHere46","List<? extends Number>"
"5477splitHere46","4493089splitHere46","?"
"5478splitHere46","4493089splitHere46","Object"
"5479splitHere46","4493089splitHere46","?"
"5480splitHere46","4493089splitHere46","Number"
"5481splitHere46","4493089splitHere46","? extends Number"
"5482splitHere46","4493089splitHere46","?"
"5483splitHere46","4493089splitHere46","List"
"5484splitHere46","4493089splitHere46","null"
"5485splitHere46","4493089splitHere46","? extends X"
"5486splitHere46","4493089splitHere46","? super X"
"5487splitHere46","4493089splitHere46","List<? super Integer>"
"5488splitHere46","4493089splitHere46","Integer"
"5489splitHere46","4493089splitHere46","List"
"5490splitHere46","4493089splitHere46","List<Integer>"
"5491splitHere46","4493089splitHere46","List<Number>"
"5492splitHere46","4493089splitHere46","List<Object>"
"5493splitHere46","4493089splitHere46","Integer"
"5494splitHere46","4493089splitHere46","new ArrayList<?>()"
"5495splitHere46","4493089splitHere46","ArrayList"
"5496splitHere46","4493089splitHere46","Object"
"5497splitHere46","4493089splitHere46","Foo"
"5498splitHere46","4493089splitHere46","null"
"5499splitHere46","4493089splitHere46","ArrayList<?>"
"5500splitHere46","4493264splitHere46","KeyboardFocusManager.getCurrentKeyboardFocusManager()"
"5501splitHere46","4493280splitHere46","$_SERVER['SERVER_NAME']<newline46mondego>"
"5502splitHere46","4493742splitHere46","File"
"5503splitHere46","4493742splitHere46","Settings"
"5504splitHere46","4493742splitHere46","Preferences"
"5505splitHere46","4493742splitHere46","Editor"
"5506splitHere46","4493759splitHere46","public void bar(){  <newline46mondego>    Integer value;<newline46mondego>    synchronized (iterator) {<newline46mondego>        value = iterator.next();  <newline46mondego>    }<newline46mondego>    doSomethingWithAnInteger(value);<newline46mondego>}  <newline46mondego>"
"5507splitHere46","4494032splitHere46","comm.jar"
"5508splitHere46","4494032splitHere46","jre/lib/ext"
"5509splitHere46","4494032splitHere46","javax.comm.properties"
"5510splitHere46","4494032splitHere46","jre/lib"
"5511splitHere46","4494032splitHere46","win32com.dll"
"5512splitHere46","4494032splitHere46","jre/bin"
"5513splitHere46","4494051splitHere46","System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>)<newline46mondego>"
"5514splitHere46","4494051splitHere46","require 'rbconfig'<newline46mondego>puts Config::CONFIG['host_os'] <newline46mondego>"
"5515splitHere46","4494088splitHere46","Iterator"
"5516splitHere46","4494088splitHere46","getDescendants(ElementFilter)"
"5517splitHere46","4494088splitHere46","Element"
"5518splitHere46","4494088splitHere46","Element lvl3 = lvl1.getDescendants(new ElementFilter(<doubleQuotes46>lvl3<doubleQuotes46>));<newline46mondego>"
"5519splitHere46","4494164splitHere46","url"
"5520splitHere46","4494164splitHere46","localhost"
"5521splitHere46","4494164splitHere46","localhost"
"5522splitHere46","4494164splitHere46","127.0.0.1"
"5523splitHere46","4494164splitHere46","jdbc:mysql://localhost:3306/MY_DB<newline46mondego>"
"5524splitHere46","4494164splitHere46","jdbc:mysql://127.0.0.1:3306/MY_DB<newline46mondego>"
"5525splitHere46","4494298splitHere46","File.toURL()"
"5526splitHere46","4494298splitHere46","public static URI fixFileURL(URL u) {<newline46mondego>    if (!<doubleQuotes46>file<doubleQuotes46>.equals(u.getProtocol())) throw new IllegalArgumentException();<newline46mondego>    return new File(u.getFile()).toURI();<newline46mondego>}<newline46mondego>"
"5527splitHere46","4494362splitHere46","userService.register(user)"
"5528splitHere46","4494362splitHere46","<tx:annotation-driven />"
"5529splitHere46","4494362splitHere46","@Transactional"
"5530splitHere46","4494362splitHere46","<tx:..>"
"5531splitHere46","4494396splitHere46","<attribute name=<doubleQuotes46>ServerBindPort<doubleQuotes46>>4445</attribute> <newline46mondego>"
"5532splitHere46","4494396splitHere46","netstat -an |find /i <doubleQuotes46>4445<doubleQuotes46><newline46mondego>"
"5533splitHere46","4494489splitHere46","tshark"
"5534splitHere46","4494489splitHere46","sudo tshark -f 'port 80' -R 'http' -V | grep -A 1 '^Hypertext Transfer Protocol'<newline46mondego>"
"5535splitHere46","4494489splitHere46","Running as user <doubleQuotes46>root<doubleQuotes46> and group <doubleQuotes46>root<doubleQuotes46>. This could be dangerous.<newline46mondego>Capturing on eth0<newline46mondego>Hypertext Transfer Protocol<newline46mondego>    GET /questions/4494294/r-gplots-barplots-how-to-fix-bar-width-independent-of-paper-setting HTTP/1.1\r\n<newline46mondego>--<newline46mondego>Hypertext Transfer Protocol<newline46mondego>    HTTP/1.1 200 OK\r\n<newline46mondego>--<newline46mondego>Hypertext Transfer Protocol<newline46mondego>    GET /posts/4494294/ivc/086e HTTP/1.1\r\n<newline46mondego>--<newline46mondego>Hypertext Transfer Protocol<newline46mondego>    HTTP/1.1 204 No Content\r\n<newline46mondego>--<newline46mondego>Hypertext Transfer Protocol<newline46mondego>    [truncated] GET /__utm.gif?utmwv=4.8.6&utmn=20455052&utmhn=stackoverflow.com&utmcs=UTF-8&utmsr=1600x1200&utmsc=24-bit&utmul=en-us&utmje=1&utmfl=10.1%20r102&utmdt=graph%20-%20R%3A%20gplots%2C%20barplots%3A%20how%20to%20fix%20bar%20width%20i<newline46mondego>--<newline46mondego>Hypertext Transfer Protocol<newline46mondego>    HTTP/1.1 200 OK\r\n<newline46mondego>--<newline46mondego>"
"5536splitHere46","4494489splitHere46","tshark"
"5537splitHere46","4494568splitHere46","<my:input type=<doubleQuotes46>text<doubleQuotes46> bean=<doubleQuotes46>#{userBean}<doubleQuotes46> property=<doubleQuotes46>userId<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego><my:input type=<doubleQuotes46>secret<doubleQuotes46> bean=<doubleQuotes46>#{userBean}<doubleQuotes46> property=<doubleQuotes46>password<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>"
"5538splitHere46","4494568splitHere46","<c:set var=<doubleQuotes46>id<doubleQuotes46> value=<doubleQuotes46>#{not empty id ? id : property}<doubleQuotes46> /><newline46mondego><c:set var=<doubleQuotes46>required<doubleQuotes46> value=<doubleQuotes46>#{not empty required and required}<doubleQuotes46> /><newline46mondego><newline46mondego><c:choose><newline46mondego>    <c:when test=<doubleQuotes46>#{type == 'text'}<doubleQuotes46>><newline46mondego>        <h:inputText id=<doubleQuotes46>#{id}<doubleQuotes46> <newline46mondego>            label=<doubleQuotes46>#{msgs[property]}<doubleQuotes46><newline46mondego>            value=<doubleQuotes46>#{bean[property]}<doubleQuotes46> <newline46mondego>            size=<doubleQuotes46>#{config.size(id)}<doubleQuotes46> <newline46mondego>            maxlength=<doubleQuotes46>#{config.maxlength(id)}<doubleQuotes46> <newline46mondego>            required=<doubleQuotes46>#{required}<doubleQuotes46> /><newline46mondego>    </c:when><newline46mondego>    <c:when test=<doubleQuotes46>#{type == 'secret'}<doubleQuotes46>><newline46mondego>        <h:inputSecret id=<doubleQuotes46>#{id}<doubleQuotes46> <newline46mondego>            label=<doubleQuotes46>#{msgs[property]}<doubleQuotes46><newline46mondego>            value=<doubleQuotes46>#{bean[property]}<doubleQuotes46> <newline46mondego>            size=<doubleQuotes46>#{config.size(id)}<doubleQuotes46> <newline46mondego>            maxlength=<doubleQuotes46>#{config.maxlength(id)}<doubleQuotes46> <newline46mondego>            required=<doubleQuotes46>#{required}<doubleQuotes46> /><newline46mondego>    </c:when><newline46mondego>    <c:otherwise><newline46mondego>        <h:outputText value=<doubleQuotes46>Unknown input type: #{type}<doubleQuotes46> /><newline46mondego>    </c:otherwise>            <newline46mondego></c:choose><newline46mondego>"
"5539splitHere46","4494568splitHere46","<h:outputLabel>"
"5540splitHere46","4494568splitHere46","<h:message>"
"5541splitHere46","4494953splitHere46","SQL = SQL.replace(<doubleQuotes46>AND Gender = 'Female'<doubleQuotes46>,<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"5542splitHere46","4495057splitHere46","Arrays.sort"
"5543splitHere46","4495162splitHere46","if(AbstractActivity.class.isAssignableFrom(cls)) {<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"5544splitHere46","4495260splitHere46","multipart/form-data"
"5545splitHere46","4495260splitHere46","java.net.URLConnection"
"5546splitHere46","4495260splitHere46","HttpServletRequest#getParts()"
"5547splitHere46","4495318splitHere46","GridBagConstraints gbc;<newline46mondego>final int A_CENTER = GridBagConstraints.CENTER;  // anchor: center<newline46mondego>final int F_NONE = GridBagConstraints.NONE;  // fill: none<newline46mondego>final int F_DX = GridBagConstraints.HORIZONTAL;  // fill: dx only<newline46mondego>final Insets IN_0 = new Insets(0, 0, 0, 0);  // empty insets<newline46mondego><newline46mondego>setLayout(new GridBagLayout() );<newline46mondego>gbc = new GridBagConstraints(0, 0, 1, 1, 50.0, 0.0, A_CENTER, F_DX, IN_0, 0, 0);<newline46mondego>add(new JButton(<doubleQuotes46>test1<doubleQuotes46>), gbc);<newline46mondego>gbc = new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0, A_CENTER, F_NONE, IN_0, 0, 0);<newline46mondego>add(new JButton(<doubleQuotes46>test2<doubleQuotes46>), gbc);<newline46mondego>gbc = new GridBagConstraints(2, 0, 1, 1, 50.0, 0.0, A_CENTER, F_DX, IN_0, 0, 0);<newline46mondego>add(new JButton(<doubleQuotes46>test1<doubleQuotes46>), gbc);<newline46mondego>"
"5548splitHere46","4495338splitHere46","AEReportBean"
"5549splitHere46","4495338splitHere46",".class"
"5550splitHere46","4495522splitHere46","ExternalContext#getSessionMap()"
"5551splitHere46","4495522splitHere46","ExternalContext externalContext = FacesContext.getCurrentInstance().getExternalContext();<newline46mondego>Map<String, Object> sessionMap = externalContext.getSessionMap();<newline46mondego>sessionMap.put(<doubleQuotes46>somekey<doubleQuotes46>, yourVariable);<newline46mondego>"
"5552splitHere46","4495522splitHere46","SomeObject yourVariable = (SomeObject) sessionMap.get(<doubleQuotes46>somekey<doubleQuotes46>);<newline46mondego>"
"5553splitHere46","4495522splitHere46","sessionBean.setSomeVariable(yourVariable);<newline46mondego>"
"5554splitHere46","4495522splitHere46","SomeObject yourVariable = sessionBean.getSomeVariable();<newline46mondego>"
"5555splitHere46","4495522splitHere46","faces-config.xml"
"5556splitHere46","4495522splitHere46","@ManagedProperty"
"5557splitHere46","4495522splitHere46","@ManagedBean<newline46mondego>@RequestScoped<newline46mondego>public class RequestBean {<newline46mondego>    @ManagedProperty(<doubleQuotes46>#{sessionBean}<doubleQuotes46>)<newline46mondego>    private SessionBean sessionBean;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"5558splitHere46","4495522splitHere46","@ManagedBean<newline46mondego>@SessionScoped<newline46mondego>public class SessionBean {<newline46mondego>    private SomeObject someVariable;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"5559splitHere46","4496050splitHere46","$var = <doubleQuotes46>select ... where col = \<doubleQuotes46>testing\<doubleQuotes46><doubleQuotes46>;<newline46mondego>$var = 'select ... where col = <doubleQuotes46>testing<doubleQuotes46>'; // more readable<newline46mondego>"
"5560splitHere46","4496140splitHere46","Object.wait"
"5561splitHere46","4496140splitHere46","Object.notify"
"5562splitHere46","4496140splitHere46","while (!condition) {<newline46mondego>        // really bad idea ... burns CPU cycles.<newline46mondego>    }<newline46mondego>"
"5563splitHere46","4496140splitHere46","while (!condition) {<newline46mondego>        Thread.sleep(...);  // bad idea<newline46mondego>    }<newline46mondego>"
"5564splitHere46","4496140splitHere46","loop{test; sleep}"
"5565splitHere46","4496218splitHere46","# .htaccess file contents<newline46mondego># Apache has the same docroot as the Java web app.<newline46mondego># Java webapp is running on port 8084<newline46mondego><IfModule mod_rewrite.c><newline46mondego>RewriteEngine On<newline46mondego>RewriteBase /<newline46mondego>RewriteCond %{REQUEST_FILENAME} !-f [NC,OR]<newline46mondego>RewriteCond %{REQUEST_FILENAME} !-d<newline46mondego># directory where images, static html files and JS scripts are located.<newline46mondego># Apache will serve these.<newline46mondego>RewriteRule ^resources - [L,NC]<newline46mondego># obviously, we want Apache to serve robots.txt<newline46mondego>RewriteRule ^robots.txt$ - [L,NC]<newline46mondego>RewriteRule ^(.*)$ http://localhost:8084/Dispatcher?q=$1 [L,P,QSA]<newline46mondego></IfModule><newline46mondego>"
"5566splitHere46","4496221splitHere46","reader.nextLine();<newline46mondego>"
"5567splitHere46","4496221splitHere46","System.out.print(<doubleQuotes46>Enter the second student's name: <doubleQuotes46>);<newline46mondego>"
"5568splitHere46","4496221splitHere46",".nextInt()"
"5569splitHere46","4496221splitHere46","nextLine()"
"5570splitHere46","4496398splitHere46","EEE"
"5571splitHere46","4496398splitHere46","MMM"
"5572splitHere46","4496398splitHere46","SimpleDateFormat"
"5573splitHere46","4496398splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    String target = <doubleQuotes46>Thu Sep 28 20:29:30 JST 2000<doubleQuotes46>;<newline46mondego>    DateFormat df = new SimpleDateFormat(<doubleQuotes46>EEE MMM dd kk:mm:ss z yyyy<doubleQuotes46>, Locale.ENGLISH);<newline46mondego>    Date result =  df.parse(target);  <newline46mondego>    System.out.println(result);<newline46mondego>}<newline46mondego>"
"5574splitHere46","4496398splitHere46","HH"
"5575splitHere46","4496398splitHere46","kk"
"5576splitHere46","4496695splitHere46","List<byte> lByte = new List<byte>();<newline46mondego>using (StreamReader sr = new StreamReader(myRequest.GetResponse().GetResponseStream()))<newline46mondego>{<newline46mondego>    while (sr.Peek() >= 0)<newline46mondego>    {<newline46mondego>        lByte.Add((byte)sr.Read());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5577splitHere46","4496695splitHere46","byte[] buffer = new byte[1000];<newline46mondego>using (Stream sr = myRequest.GetResponse().GetResponseStream())<newline46mondego>{<newline46mondego>    sr.Read(buffer, 0, 1000);<newline46mondego>}<newline46mondego>"
"5578splitHere46","4497088splitHere46","jar cf jar-file input-file(s)  <newline46mondego>"
"5579splitHere46","4497384splitHere46","final"
"5580splitHere46","4497384splitHere46","comment"
"5581splitHere46","4497607splitHere46","java -jar yourJar.jar<newline46mondego>pause<newline46mondego>"
"5582splitHere46","4497701splitHere46","String s =  <doubleQuotes46>0#Aitem, 0#Aitem2, 0#Aitem3, 1#Bitem, 1#Bitem2, 2#Citem, Nitem, Nitem2<doubleQuotes46>;<newline46mondego>    Pattern p = Pattern.compile(<doubleQuotes46>(\\d*)[#]{0,1}(\\w+?)(,|$)<doubleQuotes46>);        <newline46mondego>    Matcher m = p.matcher(s);<newline46mondego>    Map<String, List<String>> map = new TreeMap<String, List<String>>();<newline46mondego>    while(m.find()){<newline46mondego>        String group = m.group(1);<newline46mondego>        String item = m.group(2);<newline46mondego>        List<String> items = map.get(group);<newline46mondego>        if(items == null){<newline46mondego>            items = new ArrayList<String>();<newline46mondego>            map.put(group, items);<newline46mondego>        }<newline46mondego>        items.add(item);<newline46mondego>    }<newline46mondego>    //let's print it out<newline46mondego>    for(String key : map.keySet()){<newline46mondego>        System.out.println(key + <doubleQuotes46> : <doubleQuotes46> + map.get(key));<newline46mondego>    }<newline46mondego>"
"5583splitHere46","4497701splitHere46",": [Nitem, Nitem2]<newline46mondego>0 : [Aitem, Aitem2, Aitem3]<newline46mondego>1 : [Bitem, Bitem2]<newline46mondego>2 : [Citem]<newline46mondego>"
"5584splitHere46","4497758splitHere46","ioctl"
"5585splitHere46","4497758splitHere46","scsi_write"
"5586splitHere46","4497758splitHere46","cmd"
"5587splitHere46","4497758splitHere46","buf"
"5588splitHere46","4497758splitHere46","cmdLen"
"5589splitHere46","4497758splitHere46","bufLen"
"5590splitHere46","4497823splitHere46","BrowserContentManagerDemo.java"
"5591splitHere46","4497823splitHere46","BlackBerry JDE 4.5.0\samples\com\rim\samples\device\blackberry\browser\"
"5592splitHere46","4497823splitHere46","eclipse/plugins/net.rim.ejde.componentpack6.0.0_6.0.0.29/components/samples/com/rim/samples/device/browser/browsercontentmanagerdemo/"
"5593splitHere46","4497906splitHere46","<from-view-id>/template/menu.xhtml</from-view-id>  <newline46mondego>"
"5594splitHere46","4497906splitHere46","<from-view-id>/pages/*</from-view-id> <newline46mondego>"
"5595splitHere46","4497906splitHere46","#{UserManagerBean.goListPage}"
"5596splitHere46","4497906splitHere46","/pages/"
"5597splitHere46","4498118splitHere46","/*<newline46mondego> * To change this template, choose Tools | Templates<newline46mondego> * and open the template in the editor.<newline46mondego> */<newline46mondego><newline46mondego>package hello;<newline46mondego><newline46mondego>import javax.microedition.midlet.*;<newline46mondego>import javax.microedition.lcdui.*;<newline46mondego><newline46mondego>/**<newline46mondego> * @author Jigar<newline46mondego> */<newline46mondego>public class KeyEventListener extends MIDlet implements ItemStateListener{<newline46mondego><newline46mondego>    private boolean midletPaused = false;<newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Fields <doubleQuotes46>><newline46mondego>    private Form form;<newline46mondego>    private TextField textField;<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    /**<newline46mondego>     * The KeyEventListener constructor.<newline46mondego>     */<newline46mondego>    public KeyEventListener() {<newline46mondego>    }<newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Methods <doubleQuotes46>><newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Method: initialize <doubleQuotes46>><newline46mondego>    /**<newline46mondego>     * Initilizes the application.<newline46mondego>     * It is called only once when the MIDlet is started. The method is called before the <code>startMIDlet</code> method.<newline46mondego>     */<newline46mondego>    private void initialize() {<newline46mondego>        // write pre-initialize user code here<newline46mondego><newline46mondego>        // write post-initialize user code here<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Method: startMIDlet <doubleQuotes46>><newline46mondego>    /**<newline46mondego>     * Performs an action assigned to the Mobile Device - MIDlet Started point.<newline46mondego>     */<newline46mondego>    public void startMIDlet() {<newline46mondego>        // write pre-action user code here<newline46mondego>        switchDisplayable(null, getForm());<newline46mondego>        // write post-action user code here<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Method: resumeMIDlet <doubleQuotes46>><newline46mondego>    /**<newline46mondego>     * Performs an action assigned to the Mobile Device - MIDlet Resumed point.<newline46mondego>     */<newline46mondego>    public void resumeMIDlet() {<newline46mondego>        // write pre-action user code here<newline46mondego><newline46mondego>        // write post-action user code here<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Method: switchDisplayable <doubleQuotes46>><newline46mondego>    /**<newline46mondego>     * Switches a current displayable in a display. The <code>display</code> instance is taken from <code>getDisplay</code> method. This method is used by all actions in the design for switching displayable.<newline46mondego>     * @param alert the Alert which is temporarily set to the display; if <code>null</code>, then <code>nextDisplayable</code> is set immediately<newline46mondego>     * @param nextDisplayable the Displayable to be set<newline46mondego>     */<newline46mondego>    public void switchDisplayable(Alert alert, Displayable nextDisplayable) {<newline46mondego>        // write pre-switch user code here<newline46mondego>        Display display = getDisplay();<newline46mondego>        if (alert == null) {<newline46mondego>            display.setCurrent(nextDisplayable);<newline46mondego>        } else {<newline46mondego>            display.setCurrent(alert, nextDisplayable);<newline46mondego>        }<newline46mondego>        // write post-switch user code here<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Getter: form <doubleQuotes46>><newline46mondego>    /**<newline46mondego>     * Returns an initiliazed instance of form component.<newline46mondego>     * @return the initialized component instance<newline46mondego>     */<newline46mondego>    public Form getForm() {<newline46mondego>        if (form == null) {<newline46mondego>            // write pre-init user code here<newline46mondego>            form = new Form(<doubleQuotes46>form<doubleQuotes46>, new Item[] { getTextField() });<newline46mondego>            form.setItemStateListener(this);<newline46mondego>        }<newline46mondego>        return form;<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    //<editor-fold defaultstate=<doubleQuotes46>collapsed<doubleQuotes46> desc=<doubleQuotes46> Generated Getter: textField <doubleQuotes46>><newline46mondego>    /**<newline46mondego>     * Returns an initiliazed instance of textField component.<newline46mondego>     * @return the initialized component instance<newline46mondego>     */<newline46mondego>    public TextField getTextField() {<newline46mondego>        if (textField == null) {<newline46mondego>            // write pre-init user code here<newline46mondego>            textField = new TextField(<doubleQuotes46>textField<doubleQuotes46>, null, 32, TextField.ANY);<newline46mondego><newline46mondego>        }<newline46mondego>        return textField;<newline46mondego>    }<newline46mondego>    //</editor-fold><newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns a display instance.<newline46mondego>     * @return the display instance.<newline46mondego>     */<newline46mondego>    public Display getDisplay () {<newline46mondego>        return Display.getDisplay(this);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Exits MIDlet.<newline46mondego>     */<newline46mondego>    public void exitMIDlet() {<newline46mondego>        switchDisplayable (null, null);<newline46mondego>        destroyApp(true);<newline46mondego>        notifyDestroyed();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Called when MIDlet is started.<newline46mondego>     * Checks whether the MIDlet have been already started and initialize/starts or resumes the MIDlet.<newline46mondego>     */<newline46mondego>    public void startApp() {<newline46mondego>        if (midletPaused) {<newline46mondego>            resumeMIDlet ();<newline46mondego>        } else {<newline46mondego>            initialize ();<newline46mondego>            startMIDlet ();<newline46mondego>        }<newline46mondego>        midletPaused = false;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Called when MIDlet is paused.<newline46mondego>     */<newline46mondego>    public void pauseApp() {<newline46mondego>        midletPaused = true;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Called to signal the MIDlet to terminate.<newline46mondego>     * @param unconditional if true, then the MIDlet has to be unconditionally terminated and all resources has to be released.<newline46mondego>     */<newline46mondego>    public void destroyApp(boolean unconditional) {<newline46mondego>    }<newline46mondego><newline46mondego>    public void itemStateChanged(Item item) {<newline46mondego>        if(item.equals(getTextField())){<newline46mondego>            System.out.println(<doubleQuotes46>KeyPressed :) <doubleQuotes46>);<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5598splitHere46","4498181splitHere46","ints.iterator()"
"5599splitHere46","4498188splitHere46","Project Properties -> Build -> Packaging -> Build JAR after compiling"
"5600splitHere46","4498197splitHere46","try {<newline46mondego>        Enumeration roots = FileSystemRegistry.listRoots();<newline46mondego>        while(roots.hasMoreElements()) {<newline46mondego>            System.out.println(<doubleQuotes46>Root: file:///<doubleQuotes46>+(String)roots.nextElement());<newline46mondego>        }<newline46mondego>    } catch(Exception e) {<newline46mondego>    }<newline46mondego>"
"5601splitHere46","4498197splitHere46","public void write(String root) {                <newline46mondego>        FileConnection fc = null;<newline46mondego>        String fName = <doubleQuotes46>test.txt<doubleQuotes46>;<newline46mondego>        try {<newline46mondego>            fc = (FileConnection) Connector.open(root + fName, Connector.READ_WRITE);<newline46mondego>            if(!fc.exists()) {<newline46mondego>                fc.create();<newline46mondego>            }<newline46mondego><newline46mondego>            DataOutputStream dos = fc.openDataOutputStream();<newline46mondego>            dos.writeUTF(<doubleQuotes46>test-test<doubleQuotes46>);                <newline46mondego><newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } finally {<newline46mondego>            try {<newline46mondego>                fc.close();<newline46mondego>            } catch (IOException e) { }<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"5602splitHere46","4498197splitHere46","public void read(String root) {<newline46mondego>        FileConnection fc = null;<newline46mondego>        try {<newline46mondego>             fc= (FileConnection) Connector.open(root + <doubleQuotes46>test.txt<doubleQuotes46>, Connector.READ);<newline46mondego>             DataInputStream dis = fc.openDataInputStream();<newline46mondego>             String data = dis.readUTF();<newline46mondego>             System.out.println(data);<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } finally {<newline46mondego>            try {<newline46mondego>                fc.close();<newline46mondego>            } catch (IOException e) { }<newline46mondego>    }<newline46mondego>    }<newline46mondego>"
"5603splitHere46","4498261splitHere46","Iterator"
"5604splitHere46","4498261splitHere46","for"
"5605splitHere46","4498261splitHere46","int count = 0;<newline46mondego><newline46mondego>for(final Iterator iterator = list.iterator(); iterator.hasNext();) {<newline46mondego>    final Object o = iterator.next();<newline46mondego><newline46mondego>    if (++count == 5) {<newline46mondego>        iterator.remove();<newline46mondego>    }<newline46mondego><newline46mondego>    o.toString();<newline46mondego>}<newline46mondego>"
"5606splitHere46","4498261splitHere46","ConcurrentModificationException"
"5607splitHere46","4498261splitHere46","for"
"5608splitHere46","4498261splitHere46","Iterator"
"5609splitHere46","4498261splitHere46","list.remove()"
"5610splitHere46","4498261splitHere46","Iterator"
"5611splitHere46","4498357splitHere46","long array_sum(int...array)<newline46mondego>    {<newline46mondego>        long sum = 0;<newline46mondego>        for(int value : array)<newline46mondego>            sum += value;<newline46mondego>        return sum;<newline46mondego>    }<newline46mondego>"
"5612splitHere46","4498357splitHere46","System.out.println(array_sum(1, 2, 3, -1));<newline46mondego>System.out.println(array_sum(1, 2));<newline46mondego>System.out.println(array_sum(new int[]{1,2,3,4,5}));<newline46mondego><newline46mondego>5<newline46mondego>3<newline46mondego>15<newline46mondego>"
"5613splitHere46","4498786splitHere46","officetools.OfficeFile;<newline46mondego>"
"5614splitHere46","4498826splitHere46","Integer.MAX_VALUE   <newline46mondego>"
"5615splitHere46","4498864splitHere46","double scaleX = (double) this.getWidth() / (coordinateSystem.getMaxX() - coordinateSystem.getMinY());<newline46mondego>"
"5616splitHere46","4498864splitHere46","Y"
"5617splitHere46","4498864splitHere46","X"
"5618splitHere46","4498955splitHere46","Queue<Point> points = new ArrayBlockingQueue<Point>(1024);<newline46mondego>for(int i=0;i<1000;i++)<newline46mondego>  points.add(new Point(i,i));<newline46mondego>Point missing = new Point(-1, -1);<newline46mondego>int runs = 100 * 1000;<newline46mondego>long start = System.nanoTime();<newline46mondego>for(int i=0;i< runs;i++)<newline46mondego>    points.contains(missing);<newline46mondego>long time = System.nanoTime() - start;<newline46mondego>System.out.printf(<doubleQuotes46>Average contains() took %.1f us%n<doubleQuotes46>, time/runs/1000.0);<newline46mondego>"
"5619splitHere46","4498955splitHere46","Average contains() took 5.1 us<newline46mondego>"
"5620splitHere46","4499020splitHere46","<embed>"
"5621splitHere46","4499020splitHere46","<object>"
"5622splitHere46","4499020splitHere46",".mov"
"5623splitHere46","4499020splitHere46","InputStream"
"5624splitHere46","4499020splitHere46","OutputStream"
"5625splitHere46","4499025splitHere46","showMessageDialogAndBeep()"
"5626splitHere46","4499025splitHere46","JOptionPane.showMessageDialog"
"5627splitHere46","4499029splitHere46","response.sendRedirect(<doubleQuotes46>http://google.com<doubleQuotes46>);<newline46mondego>"
"5628splitHere46","4499033splitHere46","View"
"5629splitHere46","4499033splitHere46","findViewById(R.id.edit_text_1)"
"5630splitHere46","4499033splitHere46","View"
"5631splitHere46","4499033splitHere46","View"
"5632splitHere46","4499033splitHere46","findViewById()"
"5633splitHere46","4499033splitHere46","EditText"
"5634splitHere46","4499033splitHere46","setId()"
"5635splitHere46","4499101splitHere46","objectArray = {2,23,42,3}"
"5636splitHere46","4499101splitHere46","public static Integer[] convert(Object[] objectArray){<newline46mondego>  Integer[] intArray = new Integer[objectArray.length];<newline46mondego><newline46mondego>  for(int i=0; i<objectArray.length; i++){<newline46mondego>   intArray[i] = (Integer) objectArray[i];<newline46mondego>  }<newline46mondego><newline46mondego>  return intArray;<newline46mondego> }<newline46mondego>"
"5637splitHere46","4499101splitHere46","Object[] objectArray = new Integer[/*length*/];"
"5638splitHere46","4499101splitHere46","(Integer []) objectArray;"
"5639splitHere46","4499113splitHere46","String hql=<doubleQuotes46>select count(distinct ip) as ip, sum(bytes) as bytes from Entity en where ....<newline46mondego>Query q=Session.createQuery(hql).setResultTransformer(Transformers.aliasToBean(Model.class));<newline46mondego>"
"5640splitHere46","4499113splitHere46","class Model {<newline46mondego>    private String ip = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    private BigDecimal bytes = BigDecimal.ZERO;<newline46mondego><newline46mondego>    public void setIp(String anIp) {<newline46mondego>        if ( aString != null) {<newline46mondego>            this.ip = anIp;<newline46mondego>        }<newline46mondego>    }   <newline46mondego><newline46mondego>    public void setBytes(String aByte) {<newline46mondego>        if ( aByte != null) {<newline46mondego>            this.byte = aByte;<newline46mondego>        }<newline46mondego>    }   <newline46mondego>    .<newline46mondego>    .<newline46mondego>    .<newline46mondego>}<newline46mondego>"
"5641splitHere46","4499120splitHere46","split()"
"5642splitHere46","4499120splitHere46","String str = <doubleQuotes46>Name:Glenn Occupation:Code_Monkey<doubleQuotes46>;<newline46mondego><newline46mondego>String[] temp = str.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>String[] name = temp[0].split(<doubleQuotes46>:<doubleQuotes46>);<newline46mondego>String[] occupation = temp[1].split(<doubleQuotes46>:<doubleQuotes46>);<newline46mondego>"
"5643splitHere46","4499120splitHere46","name[0] - Name<newline46mondego>name[1] - Glenn<newline46mondego><newline46mondego>occupation[0] - Occupation<newline46mondego>occupation[1] - Code_Monkey<newline46mondego>"
"5644splitHere46","4499142splitHere46","%CATALINA_HOME%/bin"
"5645splitHere46","4499142splitHere46","Environment Variables"
"5646splitHere46","4499142splitHere46","System Variables"
"5647splitHere46","4499142splitHere46","Path"
"5648splitHere46","4499142splitHere46",";%CATALINA_HOME%\bin"
"5649splitHere46","4499142splitHere46","OK"
"5650splitHere46","4499142splitHere46","startup.bat"
"5651splitHere46","4499229splitHere46","Runnable"
"5652splitHere46","4499229splitHere46","private Target target;  // this is a Spring bean of some kind<newline46mondego>@Autowired private TaskScheduler taskScheduler;<newline46mondego><newline46mondego>public void scheduleSomething() {<newline46mondego>    Runnable task = new Runnable() {<newline46mondego>       public void run() {<newline46mondego>          target.doTheWork();<newline46mondego>       }<newline46mondego>    };<newline46mondego>    taskScheduler.scheduleWithFixedDelay(task, delay);<newline46mondego>}<newline46mondego>"
"5653splitHere46","4499371splitHere46","DecimalFormat"
"5654splitHere46","4499371splitHere46","import java.text.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws ParseException {<newline46mondego><newline46mondego>        DecimalFormatSymbols dfs = new DecimalFormatSymbols();<newline46mondego>        dfs.setGroupingSeparator('.');<newline46mondego>        dfs.setDecimalSeparator(',');<newline46mondego><newline46mondego>        DecimalFormat df = new DecimalFormat();<newline46mondego>        df.setGroupingSize(3);<newline46mondego><newline46mondego>        String[] tests = { <doubleQuotes46>15,151.11<doubleQuotes46>, <doubleQuotes46>-7,21.3<doubleQuotes46>, <doubleQuotes46>8.8<doubleQuotes46> };<newline46mondego>        for (String test : tests)<newline46mondego>            System.out.printf(<doubleQuotes46>\<doubleQuotes46>%s\<doubleQuotes46> -> %f%n<doubleQuotes46>, test, df.parseObject(test));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5655splitHere46","4499371splitHere46","<doubleQuotes46>15,151.11<doubleQuotes46> -> 15151.110000<newline46mondego><doubleQuotes46>-7,21.3<doubleQuotes46> -> -721.300000<newline46mondego><doubleQuotes46>8.8<doubleQuotes46> -> 8.800000<newline46mondego>"
"5656splitHere46","4499399splitHere46","message /Spring3MVC/hello.html description <newline46mondego>The requested resource (/Spring3MVC/hello.html) is not available.<newline46mondego>"
"5657splitHere46","4499399splitHere46","INFO : org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapped URL path [/hallo] onto handler 'halloController'<newline46mondego>"
"5658splitHere46","4499399splitHere46","<!-- Enables the Spring MVC @Controller programming model --><newline46mondego><annotation-driven /><newline46mondego>"
"5659splitHere46","4499410splitHere46","Map"
"5660splitHere46","4499410splitHere46","HashMap"
"5661splitHere46","4499410splitHere46","Map<String, Integer> tagArray = new HashMap<String, Integer>() {{<newline46mondego>    put(<doubleQuotes46>apples<doubleQuotes46>, 12);<newline46mondego>    put(<doubleQuotes46>oranges<doubleQuotes46>, 38);<newline46mondego>    put(<doubleQuotes46>pears<doubleQuotes46>, 10);<newline46mondego>    put(<doubleQuotes46>mangos<doubleQuotes46>, 24);<newline46mondego>    put(<doubleQuotes46>grapes<doubleQuotes46>, 18);<newline46mondego>    put(<doubleQuotes46>bananas<doubleQuotes46>, 56);<newline46mondego>    put(<doubleQuotes46>watermelons<doubleQuotes46>, 80);<newline46mondego>    put(<doubleQuotes46>lemons<doubleQuotes46>, 12);<newline46mondego>    put(<doubleQuotes46>limes<doubleQuotes46>, 12);<newline46mondego>    put(<doubleQuotes46>pineapples<doubleQuotes46>, 15);<newline46mondego>    put(<doubleQuotes46>strawberries<doubleQuotes46>, 20);<newline46mondego>    put(<doubleQuotes46>coconuts<doubleQuotes46>, 43);<newline46mondego>    put(<doubleQuotes46>cherries<doubleQuotes46>, 20);<newline46mondego>    put(<doubleQuotes46>raspberries<doubleQuotes46>, 8);<newline46mondego>    put(<doubleQuotes46>peaches<doubleQuotes46>, 25);<newline46mondego>}};<newline46mondego>"
"5662splitHere46","4499410splitHere46","<doubleQuotes46>lemons<doubleQuotes46>"
"5663splitHere46","4499410splitHere46","int value = tagArray.get(<doubleQuotes46>lemons<doubleQuotes46>);<newline46mondego>"
"5664splitHere46","4499410splitHere46","LinkedHashMap"
"5665splitHere46","4499410splitHere46","HashMap"
"5666splitHere46","4499412splitHere46","private RegExp urlValidator;<newline46mondego>private RegExp urlPlusTldValidator;<newline46mondego>public boolean isValidUrl(String url, boolean topLevelDomainRequired) {<newline46mondego>    if (urlValidator == null || urlPlusTldValidator == null) {<newline46mondego>        urlValidator = RegExp.compile(<doubleQuotes46>^((ftp|http|https)://[\\w@.\\-\\_]+(:\\d{1,5})?(/[\\w#!:.?+=&%@!\\_\\-/]+)*){1}$<doubleQuotes46>);<newline46mondego>        urlPlusTldValidator = RegExp.compile(<doubleQuotes46>^((ftp|http|https)://[\\w@.\\-\\_]+\\.[a-zA-Z]{2,}(:\\d{1,5})?(/[\\w#!:.?+=&%@!\\_\\-/]+)*){1}$<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    return (topLevelDomainRequired ? urlPlusTldValidator : urlValidator).exec(url) != null;<newline46mondego>}<newline46mondego>"
"5667splitHere46","4499428splitHere46","(name, version)"
"5668splitHere46","4499428splitHere46","select f from FeatureList f <newline46mondego>where f.version = <newline46mondego>     (select max(ff.version) from FeatureList ff where ff.name = f.name)<newline46mondego>"
"5669splitHere46","4499580splitHere46","NodeList list = estimateElement.getElementsByTagName(<doubleQuotes46>amount<doubleQuotes46>).item(0).getChildNodes();<newline46mondego> Node node = (Node) list.item(0); <newline46mondego><newline46mondego> String value  = node.getNodeValue();<newline46mondego>"
"5670splitHere46","4499595splitHere46","import java.io.*;<newline46mondego>class FileWrite <newline46mondego>{<newline46mondego>   public static void main(String args[])<newline46mondego>  {<newline46mondego>      try{<newline46mondego>    // Create file <newline46mondego>    FileWriter fstream = new FileWriter(System.currentTimeMillis() + <doubleQuotes46>out.txt<doubleQuotes46>);<newline46mondego>        BufferedWriter out = new BufferedWriter(fstream);<newline46mondego>    out.write(<doubleQuotes46>Hello Java<doubleQuotes46>);<newline46mondego>    //Close the output stream<newline46mondego>    out.close();<newline46mondego>    }catch (Exception e){//Catch exception if any<newline46mondego>      System.err.println(<doubleQuotes46>Error: <doubleQuotes46> + e.getMessage());<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5671splitHere46","4499848splitHere46","SimpleJdbcCall countryProcedure = new SimpleJdbcCall(dataSource)<newline46mondego>        .withoutProcedureColumnMetaDataAccess()<newline46mondego>        .withProcedureName(procedureName)<newline46mondego>        .declareParameters(new SqlOutParameter(<doubleQuotes46>RETURNCODE<doubleQuotes46>, Types.INTEGER))<newline46mondego>        .declareParameters(new SqlOutParameter(<doubleQuotes46>RETURNMSG<doubleQuotes46>, Types.VARCHAR));<newline46mondego>Map result = countryProcedure.execute();<newline46mondego>        System.out.println(<doubleQuotes46>RETURNCODE: <doubleQuotes46> + result.get(<doubleQuotes46>RETURNCODE<doubleQuotes46>));<newline46mondego>        System.out.println(<doubleQuotes46>RETURNMSG: <doubleQuotes46> + result.get(<doubleQuotes46>RETURNMSG<doubleQuotes46>));<newline46mondego>"
"5672splitHere46","4500055splitHere46","<dependency><newline46mondego>  <groupId>javax.persistence</groupId><newline46mondego>  <artifactId>persistence-api</artifactId>  <newline46mondego>  <version>1.0</version><newline46mondego></dependency><newline46mondego>"
"5673splitHere46","4500097splitHere46","List<String> friendList = new ArrayList<String>();<newline46mondego>friendList.add(<doubleQuotes46>friend1<doubleQuotes46>);<newline46mondego>friendList.add(<doubleQuotes46>friend2<doubleQuotes46>);<newline46mondego><newline46mondego>// assert before actually calling the method under test to make sure my setup is ok<newline46mondego>assertEquals(2, friendList.size());<newline46mondego><newline46mondego>// theObj is an instance of the class you are testing<newline46mondego>theObj.friendList = friendList; <newline46mondego><newline46mondego>// call the method under test<newline46mondego>theObj.removeFriend(<doubleQuotes46>friend1<doubleQuotes46>);<newline46mondego><newline46mondego>// be explicit, the list should now have size1 and NOT contain the removed friend<newline46mondego>assertEquals(1, friendList.size());<newline46mondego>assertFalse(friendList.contains(<doubleQuotes46>friend1<doubleQuotes46>);<newline46mondego>"
"5674splitHere46","4500157splitHere46","hornetq-ra.rar"
"5675splitHere46","4500157splitHere46","<gf_install_dir>/domains/<your_dmain>/applications/hornetq-ra/META-INF/ra.xml"
"5676splitHere46","4500157splitHere46","<config-property><newline46mondego>     <description>The transport configuration. These values must be in the form of key=val;key=val;</description><newline46mondego>     <config-property-name>ConnectionParameters</config-property-name><newline46mondego>     <config-property-type>java.lang.String</config-property-type><newline46mondego>     <config-property-value>server-id=0</config-property-value><newline46mondego>  </config-property><newline46mondego>"
"5677splitHere46","4500157splitHere46","server-id"
"5678splitHere46","4500157splitHere46","hornetq-core-client.jar"
"5679splitHere46","4500157splitHere46","hornetq-jms-client.jar"
"5680splitHere46","4500157splitHere46","hornetq-logging.jar"
"5681splitHere46","4500157splitHere46","netty.jar"
"5682splitHere46","4500157splitHere46","<ejb-name>MessageProcessor</ejb-name> <!-- MDB class name --><newline46mondego>  <jndi-name>ExampleMDB</jndi-name><newline46mondego>  <mdb-resource-adapter><newline46mondego>    <!-- The resource adapter mid element ties the generic ra for JMS<newline46mondego>        with this particular MDB --><newline46mondego>    <resource-adapter-mid>hornetq-ra</resource-adapter-mid><newline46mondego>    <activation-config><newline46mondego>      <activation-config-property><newline46mondego>        <activation-config-property-name>destinationType</activation-config-property-name><newline46mondego>        <activation-config-property-value>javax.jms.Queue</activation-config-property-value><newline46mondego>      </activation-config-property><newline46mondego>      <activation-config-property><newline46mondego>        <activation-config-property-name>destination</activation-config-property-name><newline46mondego>        <activation-config-property-value>/queue/exampleQueue</activation-config-property-value><newline46mondego>      </activation-config-property><newline46mondego>      <activation-config-property><newline46mondego>        <activation-config-property-name>ConnectorClassName</activation-config-property-name><newline46mondego>        <activation-config-property-value>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory</activation-config-property-value><newline46mondego>      </activation-config-property><newline46mondego>      <activation-config-property><newline46mondego>        <activation-config-property-name>ConnectionParameters</activation-config-property-name><newline46mondego>        <activation-config-property-value>host=hostname;port=5445</activation-config-property-value><newline46mondego>      </activation-config-property><newline46mondego><!--<newline46mondego>      <activation-config-property><newline46mondego>        <activation-config-property-name>UserName</activation-config-property-name><newline46mondego>        <activation-config-property-value>user</activation-config-property-value><newline46mondego>      </activation-config-property><newline46mondego>      <activation-config-property><newline46mondego>        <activation-config-property-name>Password</activation-config-property-name><newline46mondego>        <activation-config-property-value>pass</activation-config-property-value><newline46mondego>      </activation-config-property><newline46mondego>--><newline46mondego>    </activation-config><newline46mondego>  </mdb-resource-adapter><newline46mondego></ejb><newline46mondego>"
"5683splitHere46","4500157splitHere46","@MessageDriven(mappedName = <doubleQuotes46>ExampleMDB<doubleQuotes46>)<newline46mondego>public class MessageProcessor implements MessageListener {<newline46mondego><newline46mondego>  public MessageProcessor() {<newline46mondego>  }<newline46mondego><newline46mondego>  public void onMessage(Message message) {<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>message received<doubleQuotes46>);<newline46mondego><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5684splitHere46","4500193splitHere46","-Xverbose:gc"
"5685splitHere46","4500193splitHere46","jvisualvm"
"5686splitHere46","4500398splitHere46","<jar-file>"
"5687splitHere46","4500398splitHere46","<jar-file>myjar.jar</jar-file> <newline46mondego>"
"5688splitHere46","4500431splitHere46","normal"
"5689splitHere46","4500431splitHere46","separate"
"5690splitHere46","4500431splitHere46","src"
"5691splitHere46","4500431splitHere46","!login"
"5692splitHere46","4500439splitHere46","Collections.list(enumeration)"
"5693splitHere46","4500439splitHere46","EnumerationUtils.toList(enumeration)"
"5694splitHere46","4500443splitHere46","<packaging>jar</packaging><newline46mondego>"
"5695splitHere46","4500443splitHere46","war"
"5696splitHere46","4500472splitHere46","ps"
"5697splitHere46","4500472splitHere46","tasklist"
"5698splitHere46","4500529splitHere46","Display"
"5699splitHere46","4500529splitHere46","Ctrl+Shift+I"
"5700splitHere46","4500567splitHere46","setMaxInactiveInterval(-1)"
"5701splitHere46","4500577splitHere46","^[A-Za-z0-9][A-Za-z0-9_-]*(\\.[A-Za-z0-9_-]+)*\\.[A-Za-z]{2,6}$"
"5702splitHere46","4500669splitHere46","<context-param>"
"5703splitHere46","4500669splitHere46","sun-web.xml"
"5704splitHere46","4500669splitHere46","web.xml"
"5705splitHere46","4500879splitHere46","public void doSomething(List list) {<newline46mondego>    if(list.size() > 0) {<newline46mondego>        Object obj = list.get(0);<newline46mondego>        if(obj instanceof Data) {<newline46mondego>           doSomethingData((List<Data>)list);<newline46mondego>        } else if (obj instanceof Double) {<newline46mondego>           doSomethingDouble((List<Double>)list);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5706splitHere46","4501009splitHere46","String request = <doubleQuotes46>http://ws.audioscrobbler.com/2.0/?method=<doubleQuotes46> + method +<newline46mondego>                    <doubleQuotes46>&api_key=<doubleQuotes46>+apiKey;<newline46mondego>            request += <doubleQuotes46>&artist=<doubleQuotes46> + artist.replaceAll(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>%20<doubleQuotes46>);<newline46mondego>            if (method.equals(<doubleQuotes46>album.getinfo<doubleQuotes46>)) request += <doubleQuotes46>&album=<doubleQuotes46> + album.replaceAll(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>%20<doubleQuotes46>);<newline46mondego>            URL url = new URL(request);<newline46mondego>            InputStream is = url.openStream();<newline46mondego>            DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();<newline46mondego>            Document doc = db.parse(is);<newline46mondego><newline46mondego>            NodeList nl = doc.getElementsByTagName(<doubleQuotes46>image<doubleQuotes46>);<newline46mondego>            for (int i = 0; i < nl.getLength(); i++) {<newline46mondego>                Node n = nl.item(i);<newline46mondego>                if (n.getAttributes().item(0).getNodeValue().equals(imageSize)) {<newline46mondego>                    Node fc = n.getFirstChild();<newline46mondego>                    if (fc == null) return null;<newline46mondego>                    String imgUrl = fc.getNodeValue();<newline46mondego>                    if (imgUrl.trim().length() == 0) return null;<newline46mondego>                    return new ImageIcon(new URL(imgUrl));<newline46mondego>                }<newline46mondego>            }<newline46mondego>"
"5707splitHere46","4501084splitHere46","=="
"5708splitHere46","4501084splitHere46",".equals()"
"5709splitHere46","4501084splitHere46","equals"
"5710splitHere46","4501084splitHere46","null"
"5711splitHere46","4501084splitHere46","NullPointerException"
"5712splitHere46","4501084splitHere46","class Foo {<newline46mondego>    private int data;<newline46mondego><newline46mondego>    Foo(int d) {<newline46mondego>        this.data = d;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object other) {<newline46mondego>        if (other == null || other.getClass() != this.getClass()) {<newline46mondego>           return false;<newline46mondego>        }<newline46mondego>        return ((Foo)other).data == this.data;<newline46mondego>    }<newline46mondego><newline46mondego>    /* In a real class, you'd override `hashCode` here as well */<newline46mondego>}<newline46mondego><newline46mondego>Foo f1 = new Foo(5);<newline46mondego>Foo f2 = new Foo(5);<newline46mondego>System.out.println(f1 == f2);<newline46mondego>// outputs false, they're distinct object instances<newline46mondego><newline46mondego>System.out.println(f1.equals(f2));<newline46mondego>// outputs true, they're <doubleQuotes46>equal<doubleQuotes46> according to their definition<newline46mondego><newline46mondego>Foo f3 = null;<newline46mondego>System.out.println(f3 == null);<newline46mondego>// outputs true, `f3` doesn't have any object reference assigned to it<newline46mondego><newline46mondego>System.out.println(f3.equals(null));<newline46mondego>// Throws a NullPointerException, you can't dereference `f3`, it doesn't refer to anything<newline46mondego><newline46mondego>System.out.println(f1.equals(f3));<newline46mondego>// Outputs false, since `f1` is a valid instance but `f3` is null,<newline46mondego>// so one of the first checks inside the `Foo#equals` method will<newline46mondego>// disallow the equality because it sees that `other` == null<newline46mondego>"
"5713splitHere46","4501126splitHere46","bin\startup.bat"
"5714splitHere46","4501126splitHere46","Program Files"
"5715splitHere46","4501186splitHere46","// Folder 0: 1-500<newline46mondego>// Folder 1: 501-1000<newline46mondego>// Folder 2: 1001-1500<newline46mondego>// ...<newline46mondego><newline46mondego>int n = 1777;<newline46mondego>int folder = (n-1) / 500;<newline46mondego><newline46mondego>System.out.printf(<doubleQuotes46>%d belongs to folder %d - %d<doubleQuotes46>,<newline46mondego>                  n, folder * 500 + 1, (folder+1) * 500);<newline46mondego>"
"5716splitHere46","4501186splitHere46","1777 belongs to folder 1501 - 2000<newline46mondego>"
"5717splitHere46","4501186splitHere46","- 1"
"5718splitHere46","4501186splitHere46","n = 500"
"5719splitHere46","4501237splitHere46","DeamonGameServer"
"5720splitHere46","4501237splitHere46","jsrv"
"5721splitHere46","4501314splitHere46","if (!initialized) {<newline46mondego>   initialize();<newline46mondego>   initialized = true;<newline46mondego>}<newline46mondego>"
"5722splitHere46","4501314splitHere46","AtomicBoolean"
"5723splitHere46","4501314splitHere46","if (atomicInitialized.compareAndSet(false, true)) {<newline46mondego>    initialize();<newline46mondego>}<newline46mondego>"
"5724splitHere46","4501315splitHere46","LayoutInflater layoutInflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);<newline46mondego>LinearLayout ll= new LinearLayout(context);<newline46mondego>ll=(LinearLayout)layoutInflater.inflate(R.layout.gegevens_verzekeringen, ll);<newline46mondego>btnAutopech = (Button) ll.findViewById(R.id.btnAutopech);<newline46mondego>"
"5725splitHere46","4501320splitHere46","<property name=<doubleQuotes46>driverClassName<doubleQuotes46> value=<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>/><newline46mondego>    <property name=<doubleQuotes46>url<doubleQuotes46> value=<doubleQuotes46>jdbc:mysql://127.0.0.1:3306/schema<doubleQuotes46>/><newline46mondego><newline46mondego>    <prop key=<doubleQuotes46>hibernate.dialect<doubleQuotes46>>org.hibernate.dialect.MySQLDialect</prop><newline46mondego>"
"5726splitHere46","4501499splitHere46","final"
"5727splitHere46","4501647splitHere46","private ArrayList<WorkTabPane> workTabPanes = null;<newline46mondego>protected void addPane(WorkTabPane pane) {<newline46mondego>    workTabPanes.add(pane);<newline46mondego>}<newline46mondego>"
"5728splitHere46","4501647splitHere46","WorkTabPane"
"5729splitHere46","4501647splitHere46","<? extends WorkTabPane>"
"5730splitHere46","4501647splitHere46","ArrayList<WorkTabPaneSubclass1>"
"5731splitHere46","4501647splitHere46","WorkTabPaneSubclass2"
"5732splitHere46","4501707splitHere46","ActionLink"
"5733splitHere46","4501707splitHere46","context"
"5734splitHere46","4501707splitHere46","context"
"5735splitHere46","4501707splitHere46","zone"
"5736splitHere46","4501707splitHere46","<form t:id=<doubleQuotes46>form<doubleQuotes46> t:zone=<doubleQuotes46>myZone<doubleQuotes46>><newline46mondego>    <t:label for=<doubleQuotes46>userName<doubleQuotes46>/>:<newline46mondego>    <input t:type=<doubleQuotes46>TextField<doubleQuotes46> t:id=<doubleQuotes46>userName<doubleQuotes46> size=<doubleQuotes46>30<doubleQuotes46>/><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> t:type=<doubleQuotes46>Submit<doubleQuotes46> /><newline46mondego></form><newline46mondego>"
"5737splitHere46","4501707splitHere46","@Inject<newline46mondego>private Request request;<newline46mondego><newline46mondego>@OnEvent(EventConstants.SUCCESS)<newline46mondego>Object formSubmitted(){<newline46mondego>    //return zone content only if AJAX request, page otherwise<newline46mondego>    if (request.isXHR()) {<newline46mondego>        return myZone.getBody();<newline46mondego>    } else {<newline46mondego>        return this;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5738splitHere46","4501707splitHere46","LinkSubmit"
"5739splitHere46","4501733splitHere46","public static <T> List<T> nInstances(int n, Supplier<T> supplier){<newline46mondego>    List<T> list = Lists.newArrayListWithCapacity(n);<newline46mondego>    for(int i = 0; i < n; i++){<newline46mondego>        list.add(supplier.get());<newline46mondego>    }<newline46mondego>    return list;<newline46mondego>}<newline46mondego>"
"5740splitHere46","4501778splitHere46","within(some.package.MyInterface+)<newline46mondego>"
"5741splitHere46","4501827splitHere46","private"
"5742splitHere46","4501827splitHere46","protected"
"5743splitHere46","4501827splitHere46","public"
"5744splitHere46","4501888splitHere46","testButton"
"5745splitHere46","4501888splitHere46","resetButton()"
"5746splitHere46","4501948splitHere46","java.lang.ClassNotFoundException: org.apache.jsp.redirect_jsp<newline46mondego>"
"5747splitHere46","4501948splitHere46","redirect.jsp"
"5748splitHere46","4501948splitHere46","<% %>"
"5749splitHere46","4501948splitHere46","Servlet"
"5750splitHere46","4501948splitHere46","Filter"
"5751splitHere46","4501948splitHere46","/work"
"5752splitHere46","4501962splitHere46","interface Showable {<newline46mondego>    void show();<newline46mondego>}<newline46mondego>map() {<newline46mondego><newline46mondego>    map.put(<doubleQuotes46>p1<doubleQuotes46>, new Showable() { void show() { new Popup1().show(); } } );<newline46mondego>    map.put(<doubleQuotes46>p2<doubleQuotes46>, new Showable() { void show() { new Popup2().show(); } } );<newline46mondego>    map.put(<doubleQuotes46>p3<doubleQuotes46>, new Showable() { void show() { new Popup3().show(); } } ); <newline46mondego>}<newline46mondego><newline46mondego>onValueChange() {<newline46mondego>    map.get(selectedItem).show();<newline46mondego>}<newline46mondego>"
"5753splitHere46","4502156splitHere46","drop procedure if exists get_golfer_rank;<newline46mondego><newline46mondego>delimiter #<newline46mondego><newline46mondego>create procedure get_golfer_rank<newline46mondego>(<newline46mondego>p_golferID int unsigned<newline46mondego>)<newline46mondego>proc_main:begin<newline46mondego><newline46mondego>set @rank = 0;<newline46mondego><newline46mondego>select <newline46mondego>...<newline46mondego>where golferID = p_golferID;<newline46mondego><newline46mondego>end proc_main #<newline46mondego><newline46mondego>delimiter ;<newline46mondego><newline46mondego><newline46mondego>call get_golfer_rank(18);<newline46mondego>"
"5754splitHere46","4502335splitHere46","public static void main(String[] args) {<newline46mondego>    String input = <doubleQuotes46>removeProduct<doubleQuotes46>;<newline46mondego><newline46mondego>    //split into words<newline46mondego>    String[] words = input.split(<doubleQuotes46>(?=[A-Z])<doubleQuotes46>);<newline46mondego><newline46mondego>    words[0] = capitalizeFirstLetter(words[0]);<newline46mondego><newline46mondego>    //join<newline46mondego>    StringBuilder builder = new StringBuilder();<newline46mondego>    for ( String s : words ) {<newline46mondego>        builder.append(s).append(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(builder.toString());<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>private static String capitalizeFirstLetter(String in) {<newline46mondego>    return in.substring(0, 1).toUpperCase() + in.substring(1);<newline46mondego>}<newline46mondego>"
"5755splitHere46","4502335splitHere46","(?=[A-Z])"
"5756splitHere46","4502455splitHere46","Properties"
"5757splitHere46","4502455splitHere46","StringBuilder builder = new StringBuilder() ;<newline46mondego>builder.append('{');<newline46mondego>Enumeration keys = props.keys();<newline46mondego>while (keys.hasMoreElements()) {<newline46mondego>  String key = (String)keys.nextElement();<newline46mondego>  String value = (String)props.get(key);<newline46mondego>  builder.append('<doubleQuotes46>').append(key).append('<doubleQuotes46>');<newline46mondego>  builder.append(':');<newline46mondego>  builder.append('<doubleQuotes46>').append(value).append('<doubleQuotes46>').append(',');<newline46mondego>}<newline46mondego>builder.deleteCharAt(builder.length()-1);<newline46mondego>builder.append('}');<newline46mondego>String json = builder.toString();<newline46mondego>"
"5758splitHere46","4502572splitHere46","import java.util.ArrayList;<newline46mondego>    import java.util.List;<newline46mondego>    import javax.xml.bind.annotation.XmlAccessType;<newline46mondego>    import javax.xml.bind.annotation.XmlAccessorType;<newline46mondego>    import javax.xml.bind.annotation.XmlElement;<newline46mondego>    import javax.xml.bind.annotation.XmlType;<newline46mondego><newline46mondego>    @XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>    @XmlType(name = <doubleQuotes46>physicianList<doubleQuotes46>, propOrder = {<newline46mondego>        <doubleQuotes46>physician<doubleQuotes46><newline46mondego>    })<newline46mondego>    public class PhysicianList {<newline46mondego><newline46mondego>        @XmlElement(name = <doubleQuotes46>Physician<doubleQuotes46>)<newline46mondego>        protected List<Physician> physician;<newline46mondego><newline46mondego>        public List<Physician> getPhysician() {<newline46mondego>            if (physician == null) {<newline46mondego>                physician = new ArrayList<Physician>();<newline46mondego>            }<newline46mondego>            return this.physician;<newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego>"
"5759splitHere46","4502572splitHere46","<xs:schema<newline46mondego>        xmlns:jaxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>        xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46><newline46mondego>        jaxb:version=<doubleQuotes46>2.1<doubleQuotes46>><newline46mondego><newline46mondego>        <xs:complexType name=<doubleQuotes46>physician<doubleQuotes46>><newline46mondego>            <xs:sequence><newline46mondego>            </xs:sequence><newline46mondego>        </xs:complexType><newline46mondego><newline46mondego>        <xs:complexType name=<doubleQuotes46>physicianList<doubleQuotes46>><newline46mondego>            <xs:sequence><newline46mondego>                <xs:element name=<doubleQuotes46>Physician<doubleQuotes46><newline46mondego>                            type=<doubleQuotes46>physician<doubleQuotes46><newline46mondego>                            minOccurs=<doubleQuotes46>0<doubleQuotes46><newline46mondego>                            maxOccurs=<doubleQuotes46>unbounded<doubleQuotes46>><newline46mondego>                      <xs:annotation><newline46mondego>                          <xs:appinfo><newline46mondego>                              <jaxb:property name=<doubleQuotes46>physicians<doubleQuotes46>/><newline46mondego>                          </xs:appinfo><newline46mondego>                      </xs:annotation><newline46mondego>                 </xs:element><newline46mondego>            </xs:sequence><newline46mondego>        </xs:complexType><newline46mondego><newline46mondego>    </xs:schema><newline46mondego>"
"5760splitHere46","4502572splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import javax.xml.bind.annotation.XmlAccessType;<newline46mondego>import javax.xml.bind.annotation.XmlAccessorType;<newline46mondego>import javax.xml.bind.annotation.XmlElement;<newline46mondego>import javax.xml.bind.annotation.XmlType;<newline46mondego><newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>@XmlType(name = <doubleQuotes46>physicianList<doubleQuotes46>, propOrder = {<newline46mondego>    <doubleQuotes46>physicians<doubleQuotes46><newline46mondego>})<newline46mondego>public class PhysicianList {<newline46mondego><newline46mondego>    @XmlElement(name = <doubleQuotes46>Physician<doubleQuotes46>)<newline46mondego>    protected List<Physician> physicians;<newline46mondego><newline46mondego>    public List<Physician> getPhysicians() {<newline46mondego>        if (physicians == null) {<newline46mondego>            physicians = new ArrayList<Physician>();<newline46mondego>        }<newline46mondego>        return this.physicians;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5761splitHere46","4502650splitHere46","Drawable img = getContext().getResources().getDrawable( R.drawable.smiley );<newline46mondego>img.setBounds( 0, 0, 60, 60 );<newline46mondego>txtVw.setCompoundDrawables( img, null, null, null );<newline46mondego>"
"5762splitHere46","4502650splitHere46","Drawable img = getContext().getResources().getDrawable( R.drawable.smiley );<newline46mondego>txtVw.setCompoundDrawablesWithIntrinsicBounds( img, null, null, null);<newline46mondego>"
"5763splitHere46","4502650splitHere46","txtVw.setCompoundDrawablesWithIntrinsicBounds( R.drawable.smiley, 0, 0, 0);<newline46mondego>"
"5764splitHere46","4502777splitHere46","Score Missing-Tests<newline46mondego><newline46mondego>Java 20     1<newline46mondego><newline46mondego>Perl 16     0<newline46mondego><newline46mondego>Python 16   0<newline46mondego><newline46mondego>gawk 12     6 <newline46mondego><newline46mondego>mawk 10     6 <newline46mondego><newline46mondego>bash 7      12  <newline46mondego>"
"5765splitHere46","4502777splitHere46","CPU (sec)   Mem (KB)    Lines Code<newline46mondego><newline46mondego>bash    0.0670      1464        1<newline46mondego><newline46mondego>C gcc   0.0810    4064        59<newline46mondego><newline46mondego>Python  0.3869    13160       6<newline46mondego>"
"5766splitHere46","4502895splitHere46","new"
"5767splitHere46","4502952splitHere46","boolean isEverywhere(int[] nums, int val) {    <newline46mondego><newline46mondego>        // use i+=2 to get start index of pair.<newline46mondego>        for(int i=0;i<nums.length;i+=2) {<newline46mondego><newline46mondego>                // other index in the pair.<newline46mondego>                int j = i + 1;<newline46mondego><newline46mondego>                // make sure the other index really exists.<newline46mondego>                if(j < nums.length) { <newline46mondego><newline46mondego>                        // if it exists..and val is not equal to <newline46mondego>                        // either in the pair..return false.<newline46mondego>                        if(nums[i] != val && nums[j] != val) {<newline46mondego>                                return false;<newline46mondego>                        }       <newline46mondego>                } else {<newline46mondego>                        // no pair..one element case.<newline46mondego>                        // return true if that element is val..else return false.<newline46mondego>                        return nums[i] == val; <newline46mondego>                }       <newline46mondego>        }<newline46mondego><newline46mondego>        // array has no unpaired element..and all pairs have val.<newline46mondego>        return true;     <newline46mondego>}    <newline46mondego>"
"5768splitHere46","4503092splitHere46","@Override<newline46mondego>protected void onListItemClick(ListView l, View v, int position, long id) {<newline46mondego><newline46mondego>     if(adapter.getItem(position).equals(<doubleQuotes46>Triangle<doubleQuotes46>)){<newline46mondego>         adapter.clear();<newline46mondego>         for(String item : triangle){<newline46mondego>            adapter.add(item);<newline46mondego>         }<newline46mondego>         adapter.notifyDataSetChanged();<newline46mondego>     }else if(...)<newline46mondego>}<newline46mondego>"
"5769splitHere46","4503203splitHere46","wsimport"
"5770splitHere46","4503203splitHere46",".class"
"5771splitHere46","4503203splitHere46",".java"
"5772splitHere46","4503203splitHere46","wsimport"
"5773splitHere46","4503203splitHere46","-keepgenerated"
"5774splitHere46","4503203splitHere46",".java"
"5775splitHere46","4503312splitHere46","/WEB-INF/lib"
"5776splitHere46","4503773splitHere46","fill(parent)"
"5777splitHere46","4503773splitHere46","Control kids[] = parent.getChildren();<newline46mondego><newline46mondego>if (kids != null && kids.length != 0) {<newline46mondego>  getShell().setDefaultButton( (Button)kids[kids.length - 1] );<newline46mondego><newline46mondego>}<newline46mondego>"
"5778splitHere46","4503781splitHere46","machines.add(Integer.parseInt(fields[1])-1, column);<newline46mondego>"
"5779splitHere46","4503932splitHere46","Handler.post()"
"5780splitHere46","4504039splitHere46","EntityManager.createNativeQuery()"
"5781splitHere46","4504039splitHere46","EntityManager.find()"
"5782splitHere46","4504077splitHere46","init()"
"5783splitHere46","4504077splitHere46","init()"
"5784splitHere46","4504468splitHere46","import java.util.Timer;<newline46mondego>import java.util.TimerTask;<newline46mondego><newline46mondego>/** @see http://stackoverflow.com/questions/4503829 */<newline46mondego>public class TimerTest {<newline46mondego><newline46mondego>    private static final int MAX = 8;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        final Timer cpu = new Timer();<newline46mondego>        cpu.scheduleAtFixedRate(new TimerTask() {<newline46mondego><newline46mondego>            private int count;<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                count++;<newline46mondego>                System.out.println(<doubleQuotes46>Count: <doubleQuotes46> + count);<newline46mondego>                if (count == MAX) {<newline46mondego>                    cpu.cancel();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }, 100, 1000);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5785splitHere46","4504596splitHere46","<plugin><newline46mondego>  <groupId>org.apache.maven.plugins</groupId><newline46mondego>  <artifactId>maven-checkstyle-plugin</artifactId><newline46mondego>  <configuration><newline46mondego>    <skip>true</skip><newline46mondego>  </configuration><newline46mondego></plugin><newline46mondego>"
"5786splitHere46","4504596splitHere46","<plugin><newline46mondego>  <groupId>org.apache.maven.plugins</groupId><newline46mondego>  <artifactId>maven-checkstyle-plugin</artifactId><newline46mondego></plugin><newline46mondego>"
"5787splitHere46","4504596splitHere46","mvn help:effective-pom"
"5788splitHere46","4504692splitHere46","BufferedInputStream in = new BufferedInputStream(zin);<newline46mondego>BufferedOutputStream out = new BufferedOutputStream(fout);<newline46mondego>"
"5789splitHere46","4504692splitHere46","byte b[] = new byte[1024];<newline46mondego>int n;<newline46mondego>while ((n = in.read(b,0,1024)) >= 0) {<newline46mondego>  out.write(b,0,n);<newline46mondego>}<newline46mondego>"
"5790splitHere46","4504728splitHere46","java.util.Properties"
"5791splitHere46","4504728splitHere46","Properties properties = new Properties();<newline46mondego>properties.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>filename.properties<doubleQuotes46>));<newline46mondego>"
"5792splitHere46","4504728splitHere46","Reader"
"5793splitHere46","4504728splitHere46","Properties properties = new Properties();<newline46mondego>InputStream input = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>filename.properties<doubleQuotes46>);<newline46mondego>properties.load(new InputStreamReader(input, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"5794splitHere46","4504815splitHere46","java.util.concurrent.ExecutorService"
"5795splitHere46","4504815splitHere46","doPost"
"5796splitHere46","4504815splitHere46","class EmailServlet extends HttpServlet {<newline46mondego>    private ExecutorService emailSender;<newline46mondego><newline46mondego>    public void init() {<newline46mondego>        emailSender = Executors.newFixedThreadPool(1);<newline46mondego>    }<newline46mondego><newline46mondego>    public void destroy() {<newline46mondego>        emailSender.shutdownNow();<newline46mondego>    }<newline46mondego><newline46mondego>    public void doPost(...) {<newline46mondego>        ...<newline46mondego>        emailSender.execute(new Runnable() {public void run() {sendEmail();}});<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5797splitHere46","4504817splitHere46","public interface A {<newline46mondego> List<? extends B> getBs();<newline46mondego>}<newline46mondego>"
"5798splitHere46","4504817splitHere46","public interface A<C extends B> {<newline46mondego>     List<C> getBs();<newline46mondego>}<newline46mondego><newline46mondego>public class AImpl implements A<Bimpl>{<newline46mondego>     public List<Bimpl> getBs();<newline46mondego>}<newline46mondego>"
"5799splitHere46","4504890splitHere46","-vmargs -Xmx512m<newline46mondego>"
"5800splitHere46","4505077splitHere46","String"
"5801splitHere46","4505077splitHere46","String notes = new String(dataBytes, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"5802splitHere46","4505077splitHere46","DataInputStream"
"5803splitHere46","4505077splitHere46","InputStream"
"5804splitHere46","4505082splitHere46","@Table"
"5805splitHere46","4505082splitHere46","@Entity<newline46mondego>@Table(name = <doubleQuotes46>item<doubleQuotes46>)<newline46mondego>public class Item extends Model<newline46mondego>{<newline46mondego>    @ManyToMany(cascade = CascadeType.PERSIST)<newline46mondego>    public Set<ShopSection> sections;<newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>@Table(name = <doubleQuotes46>shop_section<doubleQuotes46>)<newline46mondego>public class ShopSection extends Model<newline46mondego>{<newline46mondego>    public List<Item> findActiveItems(int page, int length)<newline46mondego>    {<newline46mondego>        return Item.find(<doubleQuotes46>select distinct i from Item i join i.sections as s where s.id = ?<doubleQuotes46>, id).fetch(page, length);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5806splitHere46","4505314splitHere46","for (int i = 0; i < set.length; i++) {<newline46mondego>    int[] subset = {i};<newline46mondego>    process(subset);<newline46mondego>}<newline46mondego>"
"5807splitHere46","4505314splitHere46","processSubset(int[] set) {<newline46mondego>    int subset = new int[2];<newline46mondego>    for (int i = 0; i < set.length; i++) {<newline46mondego>        subset[0] = set[i];<newline46mondego>        processLargerSets(set, subset, i);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>void processLargerSets(int[] set, int[] subset, int i) {<newline46mondego>    for (int j = i + 1; j < set.length; j++) {<newline46mondego>        subset[1] = set[j];<newline46mondego>        process(subset);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5808splitHere46","4505314splitHere46","static void processSubsets(int[] set, int k) {<newline46mondego>    int[] subset = new int[k];<newline46mondego>    processLargerSubsets(set, subset, 0, 0);<newline46mondego>}<newline46mondego><newline46mondego>static void processLargerSubsets(int[] set, int[] subset, int subsetSize, int nextIndex) {<newline46mondego>    if (subsetSize == subset.length) {<newline46mondego>        process(subset);<newline46mondego>    } else {<newline46mondego>        for (int j = nextIndex; j < set.length; j++) {<newline46mondego>            subset[subsetSize] = set[j];<newline46mondego>            processLargerSubsets(set, subset, subsetSize + 1, j + 1);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5809splitHere46","4505314splitHere46","static void process(int[] subset) {<newline46mondego>    System.out.println(Arrays.toString(subset));<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public static void main(String[] args) throws Exception {<newline46mondego>    int[] set = {1,2,3,4,5};<newline46mondego>    processSubsets(set, 3);<newline46mondego>}<newline46mondego>"
"5810splitHere46","4505365splitHere46","<s:url action=<doubleQuotes46>submit/CalculatePoints<doubleQuotes46> includeParams=<doubleQuotes46>get<doubleQuotes46> var=<doubleQuotes46>playerX<doubleQuotes46> ><newline46mondego>    <s:param name=<doubleQuotes46>winnerNo<doubleQuotes46> value=<doubleQuotes46>'player2'<doubleQuotes46>/><newline46mondego></s:url><newline46mondego>"
"5811splitHere46","4505368splitHere46","Object o1 = new Object();<newline46mondego> Object o2 = o1;<newline46mondego><newline46mondego> o1 == o2; //true<newline46mondego><newline46mondego> o2 = new Object();<newline46mondego><newline46mondego> o1 == o2 // false<newline46mondego>"
"5812splitHere46","4505368splitHere46","o1 == o2 <newline46mondego>o1.equals(o2) <newline46mondego>"
"5813splitHere46","4505466splitHere46","session.invalidate();<newline46mondego>"
"5814splitHere46","4505466splitHere46","response.sendError(HttpServletResponse.SC_UNAUTHORIZED, <doubleQuotes46>Stop doing bad things<doubleQuotes46>);<newline46mondego>"
"5815splitHere46","4505537splitHere46","getInputStream()"
"5816splitHere46","4505537splitHere46","close()"
"5817splitHere46","4505628splitHere46","java.net.URLConnection"
"5818splitHere46","4505628splitHere46","String location = <doubleQuotes46>http://tinyurl.com/so-hints<doubleQuotes46>;<newline46mondego>HttpURLConnection connection = (HttpURLConnection) new URL(location).openConnection();<newline46mondego>connection.setInstanceFollowRedirects(false);<newline46mondego>while (connection.getResponseCode() / 100 == 3) {<newline46mondego>    location = connection.getHeaderField(<doubleQuotes46>location<doubleQuotes46>);<newline46mondego>    connection = (HttpURLConnection) new URL(location).openConnection();<newline46mondego>}<newline46mondego>System.out.println(location); // http://msmvps.com/blogs/jon_skeet/archive/2010/08/29/writing-the-perfect-question.aspx<newline46mondego>"
"5819splitHere46","4505864splitHere46","x=y<newline46mondego>"
"5820splitHere46","4505864splitHere46","public void writeConfig() throws Exception {<newline46mondego>    Properties tempProp = new Properties();<newline46mondego>    tempProp.load(new FileInputStream(<doubleQuotes46>app.config<doubleQuotes46>)); <newline46mondego>    tempProp.setProperty(<doubleQuotes46>x<doubleQuotes46>, <doubleQuotes46>y,z<doubleQuotes46>);<newline46mondego>    tempProp.store(new FileOutputStream(<doubleQuotes46>app.config<doubleQuotes46>), null); <newline46mondego><newline46mondego>  }<newline46mondego>"
"5821splitHere46","4506017splitHere46","jstring Java_com_example_native_NativeTestActivity_getNewString()"
"5822splitHere46","4506017splitHere46","jstring Java_com_example_native_BitmapView_getNewString()"
"5823splitHere46","4506017splitHere46","package com.example.native;<newline46mondego>public class NativeHelper {<newline46mondego>     public native String getNewString();<newline46mondego>     static<newline46mondego>     {<newline46mondego>         System.loadLibrary(<doubleQuotes46>nativeTest<doubleQuotes46>);<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"5824splitHere46","4506017splitHere46","jstring Java_com_example_native_NativeHelper_getNewString(JNIEnv* env, jobject javaThis)<newline46mondego>{<newline46mondego>     return (*env)->NewStringUTF(env, <doubleQuotes46>Hello from native code!<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5825splitHere46","4506171splitHere46","jarsigner -verbose -verify"
"5826splitHere46","4506264splitHere46","BufferedReader reader;<newline46mondego>int i;<newline46mondego>while((i = reader.read()) != -1)<newline46mondego>"
"5827splitHere46","4506264splitHere46","StringBuilder sb = new StringBuilder();<newline46mondego>sb.append((char)i);<newline46mondego>"
"5828splitHere46","4506305splitHere46","spring-jdbc"
"5829splitHere46","4506494splitHere46","ZipEntry dataZE;<newline46mondego>InputStream isData = getClass().getResourceAsStream(<doubleQuotes46>/<doubleQuotes46> + dataName + <doubleQuotes46>.zip<doubleQuotes46>);<newline46mondego>StringBuffer sbData = new StringBuffer();<newline46mondego>ZipInputStream dataZIS = new ZipInputStream(isData);<newline46mondego>while ((dataZE = dataZIS.getNextEntry()) != null) {<newline46mondego>    // do something...<newline46mondego>    dataZIS.closeEntry();<newline46mondego>}<newline46mondego>"
"5830splitHere46","4506865splitHere46","Map<Object, DataType> table<newline46mondego>"
"5831splitHere46","4506865splitHere46","HashMap"
"5832splitHere46","4506865splitHere46","TreeMap"
"5833splitHere46","4506865splitHere46","Big"
"5834splitHere46","4506865splitHere46","DataType"
"5835splitHere46","4507053splitHere46",".split(<doubleQuotes46>G1|G2<doubleQuotes46>)"
"5836splitHere46","4507057splitHere46","Iterator<StudentObj> students;<newline46mondego><newline46mondego>synchronized StudentObj getStudentInfo() {<newline46mondego>    if (null == students || !students.hasNext()) {<newline46mondego>        students = StudentDAO.getRows().iterator();<newline46mondego>    }<newline46mondego>    return students.next();<newline46mondego>}<newline46mondego>"
"5837splitHere46","4507073splitHere46","int num = 1;<newline46mondego>for (int n = 1; n < 12; n++) {<newline46mondego>    if (n > 8) {<newline46mondego>        System.out.println(n + 118);<newline46mondego>    } else if (n % 3 == 0) {<newline46mondego>        System.out.println(num + 1);<newline46mondego>    } else {<newline46mondego>        num *= 2;<newline46mondego>        System.out.println(num);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5838splitHere46","4507148splitHere46","javax.tools"
"5839splitHere46","4507239splitHere46","instanceof"
"5840splitHere46","4507239splitHere46","oopMagic(A obj)"
"5841splitHere46","4507244splitHere46","MDC.put(user);<newline46mondego>logger.log(<doubleQuotes46>Deleted something important!<doubleQuotes46>);<newline46mondego>"
"5842splitHere46","4507314splitHere46","@Column(name=<doubleQuotes46>USER_COMMUNITY<doubleQuotes46>)<newline46mondego>public String[] getCommunity() {<newline46mondego>    return community;<newline46mondego>}<newline46mondego>public void setCommunity(String[] community) {<newline46mondego>    this.community = community;<newline46mondego>}<newline46mondego>"
"5843splitHere46","4507314splitHere46","TINYBLOB"
"5844splitHere46","4507395splitHere46","public static String getUrl(HttpServletRequest req) {<newline46mondego>String reqUrl = req.getRequestURL().toString();<newline46mondego>String queryString = req.getQueryString();<newline46mondego>if (queryString != null) {<newline46mondego>    reqUrl += <doubleQuotes46>?<doubleQuotes46>+queryString;<newline46mondego>}<newline46mondego>return reqUrl;<newline46mondego>"
"5845splitHere46","4507432splitHere46","SomeClass"
"5846splitHere46","4507432splitHere46","somejar.jar"
"5847splitHere46","4507432splitHere46","someResource.xml"
"5848splitHere46","4507432splitHere46","lib"
"5849splitHere46","4507432splitHere46","someResource.xml"
"5850splitHere46","4507432splitHere46","Bundle-ClassPath"
"5851splitHere46","4507432splitHere46","Bundle-ClassPath: ., somejar.jar<newline46mondego>"
"5852splitHere46","4507432splitHere46","<doubleQuotes46>lib/someResource.xml<doubleQuotes46>"
"5853splitHere46","4507432splitHere46","somejar.jar"
"5854splitHere46","4507432splitHere46","SomeClass"
"5855splitHere46","4507432splitHere46","somejar.jar"
"5856splitHere46","4507584splitHere46","static scope = <doubleQuotes46>singleton<doubleQuotes46><newline46mondego>"
"5857splitHere46","4507612splitHere46","file:///SDCard/<file>.mp3"
"5858splitHere46","4507612splitHere46","getResourceAsStream"
"5859splitHere46","4507707splitHere46","SQliteOpenHelper"
"5860splitHere46","4507707splitHere46","SQliteOpenHelper"
"5861splitHere46","4507707splitHere46","SQLiteDatabase"
"5862splitHere46","4507710splitHere46","ByteBuffer originalBuffer = getOriginalBuffer();<newline46mondego>ByteBuffer newBuffer = ByteBuffer.allocate(originalBuffer.limit());<newline46mondego><newline46mondego>ByteBuffer slicedBuffer = originalBuffer.slice(); //Will be from pos to end<newline46mondego>originalBuffer.flip(); //Will be from 0 to pos<newline46mondego><newline46mondego>newBuffer.put(slicedBuffer)<newline46mondego>newBuffer.put(originalBuffer)<newline46mondego>"
"5863splitHere46","4507720splitHere46","List<Object[]>"
"5864splitHere46","4507720splitHere46","ClassCastException"
"5865splitHere46","4507720splitHere46","for (Object[] items : result) {<newline46mondego>    Masatosan m1 = (Masatosan) items[0];<newline46mondego>    Masatosan m2 = (Masatosan) items[1];<newline46mondego>}<newline46mondego>"
"5866splitHere46","4508030splitHere46","<target name=<doubleQuotes46>compile1<doubleQuotes46>> <newline46mondego>  <mkdir dir=<doubleQuotes46>./build/reports<doubleQuotes46>/> <newline46mondego>  <jrc <newline46mondego>    srcdir=<doubleQuotes46>./reports<doubleQuotes46><newline46mondego>    destdir=<doubleQuotes46>./build/reports<doubleQuotes46><newline46mondego>    tempdir=<doubleQuotes46>./build/reports<doubleQuotes46><newline46mondego>    keepjava=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    xmlvalidation=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>   <classpath refid=<doubleQuotes46>runClasspath<doubleQuotes46>/><newline46mondego>   <include name=<doubleQuotes46>**/*.jrxml<doubleQuotes46>/><newline46mondego>  </jrc><newline46mondego></target><newline46mondego>"
"5867splitHere46","4508030splitHere46","JasperCompileManager.compileReportToFile(<newline46mondego>                our_jasper_template.jrxml<doubleQuotes46>,//the path to the jrxml file to compile<newline46mondego>                our_compiled_template.jasper<doubleQuotes46>);//the path and name we want to save the compiled file to<newline46mondego>"
"5868splitHere46","4508047splitHere46","TreeModelListener"
"5869splitHere46","4508047splitHere46","javax.swing.Timer"
"5870splitHere46","4508047splitHere46","getRowBounds"
"5871splitHere46","4508047splitHere46","getPathBunds"
"5872splitHere46","4508047splitHere46","JTree"
"5873splitHere46","4508523splitHere46","<plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>tomcat-maven-plugin</artifactId><newline46mondego>        <configuration><newline46mondego>                <warFile>path/to/my/warFile.war</warFile><newline46mondego>        </configuration><newline46mondego></plugin><newline46mondego>"
"5874splitHere46","4508794splitHere46","<newline46mondego></p><newline46mondego><newline46mondego><pre><code><defaultCache maxElementsInMemory=<doubleQuotes46>10000<doubleQuotes46> eternal=<doubleQuotes46>false<doubleQuotes46><newline46mondego>    overflowToDisk=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego><newline46mondego><cache name=<doubleQuotes46>singleSharedCache<doubleQuotes46> maxElementsInMemory=<doubleQuotes46>2000<doubleQuotes46><newline46mondego>    eternal=<doubleQuotes46>false<doubleQuotes46> overflowToDisk=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>    <cacheDecoratorFactory class=<doubleQuotes46>com.xyz.util.CustomEhcacheDecoratorFactory<doubleQuotes46><newline46mondego>        properties=<doubleQuotes46>name=org.hibernate.tutorial.domain.Person<doubleQuotes46> /><newline46mondego>    <cacheDecoratorFactory class=<doubleQuotes46>com.xyz.util.CustomEhcacheDecoratorFactory<doubleQuotes46><newline46mondego>        properties=<doubleQuotes46>name=org.hibernate.tutorial.domain.Event<doubleQuotes46> /><newline46mondego></cache><newline46mondego>"
"5875splitHere46","4508796splitHere46","primeNumbers"
"5876splitHere46","4508796splitHere46","List"
"5877splitHere46","4508796splitHere46","primeMumbers[i]"
"5878splitHere46","4508796splitHere46","true"
"5879splitHere46","4508796splitHere46","false"
"5880splitHere46","4508796splitHere46","O(1)"
"5881splitHere46","4508796splitHere46","ArrayList"
"5882splitHere46","4508796splitHere46","O(N)"
"5883splitHere46","4508796splitHere46","N"
"5884splitHere46","4508796splitHere46","ArrayList.remove(...)"
"5885splitHere46","4508796splitHere46","ArrayList.remove(...)"
"5886splitHere46","4508824splitHere46","Image"
"5887splitHere46","4508824splitHere46","Font.stringWidth()"
"5888splitHere46","4508824splitHere46","Font.getHeight()"
"5889splitHere46","4508824splitHere46","Image"
"5890splitHere46","4508824splitHere46","Graphics"
"5891splitHere46","4508824splitHere46","Sprite"
"5892splitHere46","4508824splitHere46","Sprite.setTransform(Sprite.TRANS_ROT90)"
"5893splitHere46","4508824splitHere46","Sprite.paint()"
"5894splitHere46","4509008splitHere46","extracted.html"
"5895splitHere46","4509008splitHere46","<html xmlns:v=<doubleQuotes46>urn:schemas-microsoft-com:vml<doubleQuotes46><newline46mondego>      xmlns:o=<doubleQuotes46>urn:schemas-microsoft-com:office:office<doubleQuotes46><newline46mondego>      xmlns:w=<doubleQuotes46>urn:schemas-microsoft-com:office:word<doubleQuotes46><newline46mondego>      xmlns:m=<doubleQuotes46>http://schemas.microsoft.com/office/2004/12/omml<doubleQuotes46><newline46mondego>      xmlns=<doubleQuotes46>http://www.w3.org/TR/REC-html40<doubleQuotes46>><newline46mondego>"
"5896splitHere46","4509008splitHere46","InputStream"
"5897splitHere46","4509008splitHere46","InputStream"
"5898splitHere46","4509100splitHere46","BufferedReader obj = new BufferedReader(new InputStreamReader(System.in));<newline46mondego> do {<newline46mondego>     try {<newline46mondego>         System.out.print(<doubleQuotes46>Please enter the building number: <doubleQuotes46>); <newline46mondego>         userbnumber = obj.readLine();<newline46mondego>         if(!usernumber.equals(<doubleQuotes46>0<doubleQuotes46>){<newline46mondego>         //perform action here<newline46mondego>         }<newline46mondego>     } catch (IOException e) { <newline46mondego>         //handle it<newline46mondego>     }<newline46mondego> } while(!userbnumber.equals(<doubleQuotes46>0<doubleQuotes46>));  <newline46mondego>"
"5899splitHere46","4509100splitHere46","while(true){<newline46mondego>        try {<newline46mondego>             System.out.print(<doubleQuotes46>Please enter the building number: <doubleQuotes46>); <newline46mondego>             userbnumber = obj.readLine();<newline46mondego>             if(usernumber.equals(<doubleQuotes46>0<doubleQuotes46>){<newline46mondego>                     break;<newline46mondego>             }<newline46mondego>             //perform action here<newline46mondego>         } catch (IOException e) { <newline46mondego>             //handle it<newline46mondego>         }<newline46mondego><newline46mondego>}<newline46mondego>"
"5900splitHere46","4509288splitHere46","Log.i()"
"5901splitHere46","4509288splitHere46","elapsed"
"5902splitHere46","4509288splitHere46","mY-=100*elapsed/1000;"
"5903splitHere46","4509288splitHere46","fps"
"5904splitHere46","4509288splitHere46","fpscount"
"5905splitHere46","4509374splitHere46","while ( p2.next != null ) {<newline46mondego>    p2 = p2.next;<newline46mondego>    if (p2.next != null) {<newline46mondego>        p2 = p2.next;<newline46mondego>        p1 = p1.next;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5906splitHere46","4509389splitHere46","cascade=PERSIST"
"5907splitHere46","4509389splitHere46","cascade=ALL"
"5908splitHere46","4509389splitHere46","EntityExistsException"
"5909splitHere46","4509389splitHere46","EntityExistsException"
"5910splitHere46","4509389splitHere46","PersistenceException"
"5911splitHere46","4509389splitHere46","cascade=PERSIST"
"5912splitHere46","4509389splitHere46","cascade=ALL"
"5913splitHere46","4509389splitHere46","IllegalArgumentException"
"5914splitHere46","4509389splitHere46","cascade=MERGE"
"5915splitHere46","4509389splitHere46","cascade=ALL"
"5916splitHere46","4509389splitHere46","cascade=MERGE"
"5917splitHere46","4509389splitHere46","cascade=ALL"
"5918splitHere46","4509389splitHere46","cascade=MERGE"
"5919splitHere46","4509389splitHere46","cascade=ALL"
"5920splitHere46","4509404splitHere46","if (my test criteria){<newline46mondego>     query.setParameter(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>name of a student<doubleQuotes46>);<newline46mondego>  }  else {<newline46mondego>     query.setParameter(<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>  }<newline46mondego>"
"5921splitHere46","4509406splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>public class Tabularize {<newline46mondego><newline46mondego>    static String input =<newline46mondego>        <doubleQuotes46>acessos.add(new AcessoBean(\<doubleQuotes46>Ferramentas\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>Pesquisa\<doubleQuotes46>, \<doubleQuotes46>ppaParametrosList\<doubleQuotes46>, null, TipoAcessoBean.TELA));\n<doubleQuotes46> + <newline46mondego>        <doubleQuotes46>acessos.add(new AcessoBean(\<doubleQuotes46>Ferramentas\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>Gravar\<doubleQuotes46>, \<doubleQuotes46>ppaParametrosHome\<doubleQuotes46>, \<doubleQuotes46>persist\<doubleQuotes46>, TipoAcessoBean.ACAO));\n<doubleQuotes46> + <newline46mondego>        <doubleQuotes46>acessos.add(new AcessoBean(\<doubleQuotes46>Ferramentas\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>Atualizar Dados\<doubleQuotes46>, \<doubleQuotes46>ppaParametrosHome\<doubleQuotes46>, \<doubleQuotes46>update\<doubleQuotes46>, TipoAcessoBean.ACAO));\n<doubleQuotes46> + <newline46mondego>        <doubleQuotes46>acessos.add(new AcessoBean(\<doubleQuotes46>Ferramentas\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>Leitura\<doubleQuotes46>, \<doubleQuotes46>ppaParametrosHome\<doubleQuotes46>, \<doubleQuotes46>find\<doubleQuotes46>, TipoAcessoBean.ACAO));\n<doubleQuotes46> + <newline46mondego>        <doubleQuotes46>acessos.add(new AcessoBean(\<doubleQuotes46>Ferramentas\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>ParÃ¢metros\<doubleQuotes46>, \<doubleQuotes46>Excluir\<doubleQuotes46>, \<doubleQuotes46>ppaParametrosHome\<doubleQuotes46>, \<doubleQuotes46>remove\<doubleQuotes46>, TipoAcessoBean.ACAO));<doubleQuotes46>;<newline46mondego><newline46mondego>    public static void main( String[] args ) {<newline46mondego><newline46mondego>        int[] maxWidth = new int[1024];<newline46mondego><newline46mondego>        String[] lines = input.split( <doubleQuotes46>\n<doubleQuotes46> );<newline46mondego>        List<String[]> output = new ArrayList<String[]>();<newline46mondego>        for( String line : lines ) {<newline46mondego>            String[] columns = line.split( <doubleQuotes46>\\s*,\\s*<doubleQuotes46> );<newline46mondego>            output.add( columns );<newline46mondego><newline46mondego>            int i = 0;<newline46mondego>            for( String column : columns ) {<newline46mondego>                maxWidth[i] = Math.max( maxWidth[i], column.length() );<newline46mondego>                i ++;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        for( String[] columns : output ) {<newline46mondego>            int i = 0;<newline46mondego>            String delim = <doubleQuotes46><doubleQuotes46>;<newline46mondego>            for( String column : columns ) {<newline46mondego>                System.out.print( delim );<newline46mondego>                delim = <doubleQuotes46>, <doubleQuotes46>;<newline46mondego><newline46mondego>                String format = String.format(<doubleQuotes46>%%-%ds<doubleQuotes46>, maxWidth[i]);<newline46mondego>                System.out.printf( format, column );<newline46mondego><newline46mondego>                i ++;<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5922splitHere46","4509592splitHere46","public class ImageButtonField extends BitmapField<newline46mondego>{<newline46mondego>    public ImageButtonField(Bitmap image) {<newline46mondego>        super(image);<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isFocusable() {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    protected boolean navigationClick(int status, int time) {<newline46mondego>        fieldChangeNotify(0);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    protected boolean trackwheelClick(int status, int time) {<newline46mondego>        fieldChangeNotify(0);<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    protected boolean keyChar(char character, int status, int time) {<newline46mondego>        if(Characters.ENTER == character || Characters.SPACE == character) {<newline46mondego>            fieldChangeNotify(0);<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        return super.keyChar(character, status, time);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5923splitHere46","4509775splitHere46","static"
"5924splitHere46","4509775splitHere46","self"
"5925splitHere46","4509775splitHere46","self"
"5926splitHere46","4509775splitHere46","this"
"5927splitHere46","4509775splitHere46","static"
"5928splitHere46","4509775splitHere46","static"
"5929splitHere46","4509775splitHere46","static"
"5930splitHere46","4509775splitHere46","static"
"5931splitHere46","4509775splitHere46","static"
"5932splitHere46","4509775splitHere46","static"
"5933splitHere46","4509783splitHere46","Cannot find class [com.vinoth.domain.User]"
"5934splitHere46","4510128splitHere46","Composite"
"5935splitHere46","4510128splitHere46","composite.setLayout(new FillLayout());"
"5936splitHere46","4510147splitHere46","if (c == ' ')<newline46mondego>"
"5937splitHere46","4510147splitHere46","char"
"5938splitHere46","4510147splitHere46","=="
"5939splitHere46","4510147splitHere46","String"
"5940splitHere46","4510147splitHere46","<doubleQuotes46> <doubleQuotes46>"
"5941splitHere46","4510147splitHere46","char"
"5942splitHere46","4510147splitHere46","' '"
"5943splitHere46","4510217splitHere46","using (var client = new WebClient())<newline46mondego>{<newline46mondego>    string result = client.DownloadString(<doubleQuotes46>http://example.com/yoursevletaddress<doubleQuotes46>);<newline46mondego>    // TODO: do something with the returned content from the servlet<newline46mondego>}<newline46mondego>"
"5944splitHere46","4510382splitHere46","Long"
"5945splitHere46","4510382splitHere46","Long"
"5946splitHere46","4510382splitHere46","Long l = 1l;<newline46mondego>    Long[] l2 = {};<newline46mondego>    System.out.println(l.getClass());<newline46mondego>    System.out.println(l2.getClass());<newline46mondego>"
"5947splitHere46","4510382splitHere46","class java.lang.Long<newline46mondego>class [Ljava.lang.Long;<newline46mondego>"
"5948splitHere46","4510382splitHere46","[L_class_;"
"5949splitHere46","4510617splitHere46","java.lang.ClassNotFoundException: org.springframework.web.servlet.DispatcherServlet"
"5950splitHere46","4510617splitHere46","/WEB-INF/lib"
"5951splitHere46","4510617splitHere46","DispatcherServlet"
"5952splitHere46","4510693splitHere46","./src<newline46mondego>"
"5953splitHere46","4510693splitHere46","./src/main/java<newline46mondego>"
"5954splitHere46","4510777splitHere46","this"
"5955splitHere46","4510795splitHere46","<s:form action=<doubleQuotes46>xyz.action<doubleQuotes46> theme=<doubleQuotes46>simple<doubleQuotes46>><newline46mondego>     <s:textfield name=<doubleQuotes46>name<doubleQuotes46>/> <newline46mondego>     <img src=<doubleQuotes46>abc.png<doubleQuotes46>> <newline46mondego>     <s:textfield name=<doubleQuotes46>other info<doubleQuotes46>/> <newline46mondego>     <s:submit/> <newline46mondego></s:form><newline46mondego>"
"5956splitHere46","4510856splitHere46","appContext.share.get(<doubleQuotes46>myclass.instance<doubleQuotes46>) as MyClass"
"5957splitHere46","4510856splitHere46","as"
"5958splitHere46","4510856splitHere46","c.properties = appContext.share.get(<doubleQuotes46>myclass.instance<doubleQuotes46>).properties"
"5959splitHere46","4511025splitHere46","Boolean.FALSE"
"5960splitHere46","4511154splitHere46","@OneToMany(mappedBy=<doubleQuotes46>pl704_error<doubleQuotes46>...<newline46mondego>"
"5961splitHere46","4511154splitHere46","error"
"5962splitHere46","4511266splitHere46","connection.close()"
"5963splitHere46","4511266splitHere46","ResultSet"
"5964splitHere46","4511266splitHere46","Statement"
"5965splitHere46","4511266splitHere46","connection.close()"
"5966splitHere46","4511489splitHere46","Random rn = new Random();<newline46mondego>        int a, b, c, d;<newline46mondego><newline46mondego>        int min = 3, max = 10;<newline46mondego>        int desired = 30;<newline46mondego>        while<newline46mondego>            (<newline46mondego>            (<newline46mondego>            (a = rn.Next(min, max))<newline46mondego>            + (b = rn.Next(min, max))<newline46mondego>            + (c = rn.Next(min, max))<newline46mondego>            + (d = rn.Next(min, max))<newline46mondego>            )<newline46mondego>            != desired<newline46mondego>            ) { }<newline46mondego><newline46mondego>        int x = rn.Next(-1* (a - 1 ), a - 1);<newline46mondego>        int y = rn.Next(-1 * (b - 1), b - 1);<newline46mondego>        int z = rn.Next(-1 * (c - 1), c - 1);<newline46mondego>        int v = rn.Next(-1 * (d - 1), d - 1);<newline46mondego><newline46mondego>        string result =<newline46mondego>            (x >= 0 ? (a - x) + <doubleQuotes46>+<doubleQuotes46> + x : (a + -1 * x) + <doubleQuotes46>-<doubleQuotes46> + -1 * x) + <doubleQuotes46> + <doubleQuotes46> +<newline46mondego>            (y >= 0 ? (b - y) + <doubleQuotes46>+<doubleQuotes46> + y : (b + -1 * y) + <doubleQuotes46>-<doubleQuotes46> + -1 * y) + <doubleQuotes46> + <doubleQuotes46> +<newline46mondego>            (z >= 0 ? (c - z) + <doubleQuotes46>+<doubleQuotes46> + z : (c + -1 * z) + <doubleQuotes46>-<doubleQuotes46> + -1 * z) + <doubleQuotes46> + <doubleQuotes46> +<newline46mondego>            (v >= 0 ? (d - v) + <doubleQuotes46>+<doubleQuotes46> + v : (d + -1 * v) + <doubleQuotes46>-<doubleQuotes46> + -1 * v);<newline46mondego>"
"5967splitHere46","4511524splitHere46","pom.xml"
"5968splitHere46","4511524splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><project<newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46><newline46mondego>    xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego>    <groupId>my.maven.extention</groupId><newline46mondego>    <artifactId>pkg</artifactId><newline46mondego>    <version>0.0.1</version><newline46mondego>    <name>maven pkg archiver</name><newline46mondego>    <url>http://maven.apache.org</url><newline46mondego>    <properties><newline46mondego>        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><newline46mondego>    </properties><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>org.codehaus.plexus</groupId><newline46mondego>            <artifactId>plexus-archiver</artifactId><newline46mondego>            <version>1.1</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego></project><newline46mondego>"
"5969splitHere46","4511524splitHere46","src/main/resources/META-INF/plexus/components.xml"
"5970splitHere46","4511524splitHere46","<component-set><newline46mondego>    <components><newline46mondego>        <component><newline46mondego>            <role>org.codehaus.plexus.archiver.Archiver</role><newline46mondego>            <role-hint>pkg</role-hint><newline46mondego>            <implementation>cmy.maven.extention.pkg.PkgArchiver</implementation><newline46mondego>            <instantiation-strategy>per-lookup</instantiation-strategy> <newline46mondego>        </component><newline46mondego>    </components><newline46mondego></component-set><newline46mondego>"
"5971splitHere46","4511524splitHere46","PkgArchiver class"
"5972splitHere46","4511524splitHere46","<plugin><newline46mondego>    <groupId>org.apache.maven.plugins</groupId><newline46mondego>    <artifactId>maven-assembly-plugin</artifactId><newline46mondego>    <version>2.2</version><newline46mondego>    <configuration><newline46mondego>        <descriptors><newline46mondego>            <descriptor>${basedir}/src/main/assembly/assembly.xml</descriptor><newline46mondego>        </descriptors><newline46mondego>    </configuration><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>my.maven.extention</groupId><newline46mondego>            <artifactId>pkg</artifactId><newline46mondego>            <version>0.0.1</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego></plugin><newline46mondego>"
"5973splitHere46","4511662splitHere46","exclude=<doubleQuotes46>*<doubleQuotes46>'<newline46mondego>"
"5974splitHere46","4511716splitHere46","[...]"
"5975splitHere46","4511716splitHere46","Map"
"5976splitHere46","4511716splitHere46","public class Form {<newline46mondego>    private Map<String, String> values = ...;<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5977splitHere46","4511716splitHere46","values['foo']"
"5978splitHere46","4511716splitHere46","path"
"5979splitHere46","4511716splitHere46","<form:input path = <doubleQuotes46>values['foo']<doubleQuotes46> /><newline46mondego>"
"5980splitHere46","4511716splitHere46","name"
"5981splitHere46","4511716splitHere46","<input name = <doubleQuotes46>values['foo']<doubleQuotes46> type = <doubleQuotes46>text<doubleQuotes46> /><newline46mondego>"
"5982splitHere46","4511788splitHere46","^\d{4}\.\d$"
"5983splitHere46","4511788splitHere46","^"
"5984splitHere46","4511788splitHere46","$"
"5985splitHere46","4511788splitHere46","."
"5986splitHere46","4511788splitHere46","\d+"
"5987splitHere46","4511788splitHere46","\d{4}"
"5988splitHere46","4511788splitHere46","\d*"
"5989splitHere46","4511788splitHere46","<doubleQuotes46>.5<doubleQuotes46>"
"5990splitHere46","4511788splitHere46","\d*\.\d"
"5991splitHere46","4511819splitHere46","accept()"
"5992splitHere46","4511914splitHere46","new Thread(new Grapher()).start();<newline46mondego>"
"5993splitHere46","4511924splitHere46","try {<newline46mondego>            Desktop.getDesktop().browse(new URI(<doubleQuotes46>http://www.google.com<doubleQuotes46>));<newline46mondego>        } catch (IOException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (URISyntaxException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>"
"5994splitHere46","4512043splitHere46","String dateSample = <doubleQuotes46>10-01-2010 21:10:05<doubleQuotes46>;<newline46mondego><newline46mondego>    String oldFormat = <doubleQuotes46>dd-MM-yyyy HH:mm:ss<doubleQuotes46>;<newline46mondego>    String newFormat = <doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>;<newline46mondego><newline46mondego>    SimpleDateFormat sdf1 = new SimpleDateFormat(oldFormat);<newline46mondego>    SimpleDateFormat sdf2 = new SimpleDateFormat(newFormat);<newline46mondego><newline46mondego><newline46mondego>    try {<newline46mondego>        System.out.println(sdf2.format(sdf1.parse(dateSample)));<newline46mondego><newline46mondego>    } catch (ParseException e) {<newline46mondego>        // TODO Auto-generated catch block<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>"
"5995splitHere46","4512082splitHere46","beforePhase=<doubleQuotes46>#{bean.method}<doubleQuotes46><newline46mondego>"
"5996splitHere46","4512082splitHere46","beforePhaseListener"
"5997splitHere46","4512273splitHere46","<activity android:name=<doubleQuotes46>.Map<doubleQuotes46>></activity> <newline46mondego>"
"5998splitHere46","4512273splitHere46","<uses-library android:name=<doubleQuotes46>com.google.android.maps<doubleQuotes46> /><newline46mondego>"
"5999splitHere46","4512273splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>  <manifest xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>  package=<doubleQuotes46>com.clubber<doubleQuotes46><newline46mondego>  android:versionCode=<doubleQuotes46>1<doubleQuotes46><newline46mondego>  android:versionName=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego><newline46mondego><application android:icon=<doubleQuotes46>@drawable/icon<doubleQuotes46> android:label=<doubleQuotes46>@string/app_name<doubleQuotes46>><newline46mondego><newline46mondego>    <uses-library android:name=<doubleQuotes46>com.google.android.maps<doubleQuotes46> />     <newline46mondego>    <activity android:name=<doubleQuotes46>.clubbera<doubleQuotes46> android:label=<doubleQuotes46>@string/app_name<doubleQuotes46>><newline46mondego><newline46mondego><newline46mondego>        <intent-filter><newline46mondego>            <action android:name=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego>            <category android:name=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>        </intent-filter><newline46mondego>    </activity><newline46mondego>    <activity android:name=<doubleQuotes46>.Map<doubleQuotes46>> </activity><newline46mondego><newline46mondego></application><newline46mondego><uses-permission android:name=<doubleQuotes46>android.permission.INTERNET<doubleQuotes46> /><newline46mondego>"
"6000splitHere46","4512311splitHere46","InputStreamReader(InputStream in, CharsetDecoder dec)<newline46mondego>"
"6001splitHere46","4512311splitHere46","CharsetDecoder"
"6002splitHere46","4512360splitHere46","if (g instanceof Sphere)<newline46mondego>{<newline46mondego>    Sphere s = (Sphere) g;<newline46mondego>    System.out.println(s.radius);<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"6003splitHere46","4512360splitHere46","<newline46mondego>class Geometry {<newline46mondego>   ...<newline46mondego>   public void print() {<newline46mondego>      System.out.println(shape_name);<newline46mondego>      System.out.println(material);<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class Shape extends Geometry {<newline46mondego>   ...<newline46mondego>   public void print() {<newline46mondego>      System.out.println(radius);<newline46mondego>      System.out.println(center);<newline46mondego>      super.print();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6004splitHere46","4512744splitHere46","<jsp:useBean id=<doubleQuotes46>today<doubleQuotes46> class=<doubleQuotes46>java.util.Date<doubleQuotes46> scope=<doubleQuotes46>page<doubleQuotes46> /><newline46mondego><fmt:formatDate value=<doubleQuotes46>${today}<doubleQuotes46> pattern=<doubleQuotes46>MM.dd.yyyy<doubleQuotes46> /><newline46mondego>"
"6005splitHere46","4512798splitHere46","Join<Team, Player> p = t.join(Team_.players);<newline46mondego>t.fetch(Team_.players);<newline46mondego>c.select(t).where(cb.equal(p.get(Player_.age), age));<newline46mondego>"
"6006splitHere46","4512798splitHere46","join()"
"6007splitHere46","4512798splitHere46","fetch()"
"6008splitHere46","4512824splitHere46","adapter = new ArrayAdapter<String>(this, R.layout.list_item, msgList);  <newline46mondego>"
"6009splitHere46","4512824splitHere46","adapter = new ArrayAdapter<String>(this, R.layout.list_item, R.id.text, msgList);<newline46mondego>"
"6010splitHere46","4512966splitHere46","ConstraintHelper.java"
"6011splitHere46","4513231splitHere46","getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);<newline46mondego>"
"6012splitHere46","4513231splitHere46","getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE);<newline46mondego>"
"6013splitHere46","4513300splitHere46","@include"
"6014splitHere46","4513300splitHere46","<fmt:message>"
"6015splitHere46","4513300splitHere46","<jsp:include>"
"6016splitHere46","4513349splitHere46","ZipArchiveEntry entry = new ZipArchiveEntry(name);<newline46mondego>entry.setSize(size);<newline46mondego>zipOutput.putNextEntry(entry);<newline46mondego>zipOutput.write(contentOfEntry);<newline46mondego>zipOutput.closeArchiveEntry();<newline46mondego>"
"6017splitHere46","4513502splitHere46","Boot-Class-Path: ...junit.jar...<newline46mondego>"
"6018splitHere46","4513502splitHere46","-classpath ...junit.jar...<newline46mondego>"
"6019splitHere46","4513578splitHere46","int asInt = (bytes[0] & 0xFF) <newline46mondego>            | ((bytes[1] & 0xFF) << 8) <newline46mondego>            | ((bytes[2] & 0xFF) << 16) <newline46mondego>            | ((bytes[3] & 0xFF) << 24);<newline46mondego>"
"6020splitHere46","4513578splitHere46","float asFloat = Float.intBitsToFloat(asInt);<newline46mondego>"
"6021splitHere46","4513578splitHere46","DataInputStream"
"6022splitHere46","4513578splitHere46","|"
"6023splitHere46","4513578splitHere46","10100000<newline46mondego>|  10001100<newline46mondego>-----------<newline46mondego>   10101100<newline46mondego>"
"6024splitHere46","4513578splitHere46","{0x01, 0x02, 0x03, 0x04}"
"6025splitHere46","4513578splitHere46","{00000001, 00000010, 00000011, 00000100}"
"6026splitHere46","4513578splitHere46","0000 0001   (1)<newline46mondego>                        0000 0010             (2 <<  8)<newline46mondego>              0000 0011                       (3 << 16)<newline46mondego>  | 0000 0100                                 (4 << 24)<newline46mondego>  --------------------------------------------------------<newline46mondego>    0000 0100 0000 0011 0000 0010 0000 0001   (67 305 985)<newline46mondego>"
"6027splitHere46","4513871splitHere46","java.util.Logger"
"6028splitHere46","4514090splitHere46","xPos += dt*xVel; <newline46mondego>yPos += dt*yVel;<newline46mondego><newline46mondego>xVel += dt*x;<newline46mondego>yVel += dt*y;<newline46mondego>"
"6029splitHere46","4514090splitHere46","if (xPos > xMax) {<newline46mondego>    xPos = xMax;<newline46mondego>    xVel *= -1.0;<newline46mondego>} else if (xPos < 0.0) {<newline46mondego>    xPos = 0.0;<newline46mondego>    xVel *= -1.0;<newline46mondego>}<newline46mondego>"
"6030splitHere46","4514224splitHere46","package project;<newline46mondego><newline46mondego>public class Foo<newline46mondego>{<newline46mondego>    public enum Bar {<newline46mondego>        One, Two, Three<newline46mondego>    };<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>package project.attributes;<newline46mondego><newline46mondego>public class Foo<newline46mondego>{<newline46mondego>    public void setBar(project.Foo.Bar bar)<newline46mondego>    {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6031splitHere46","4514412splitHere46","javax.validation"
"6032splitHere46","4514595splitHere46","public void doGet(<newline46mondego>        final HttpServletRequest request,<newline46mondego>        final HttpServletResponse response)<newline46mondego>  throws IOException {<newline46mondego>    final PersistenceManager pm = PMF.get().getPersistenceManager();<newline46mondego><newline46mondego>    final List<ToDoListGaejdo> toDoLists;<newline46mondego>    {<newline46mondego>        final Query query = pm.newQuery(ToDoListGaejdo.class);<newline46mondego>        query.setOrdering(<doubleQuotes46>listName asc<doubleQuotes46>);<newline46mondego>        toDoLists = (List<ToDoListGaejdo>) query.execute();<newline46mondego>    }<newline46mondego><newline46mondego>    final List<ToDoItemGaejdo> entries;<newline46mondego>    {<newline46mondego>        final Query query = pm.newQuery(ToDoItemGaejdo.class);<newline46mondego>        query.setOrdering(<doubleQuotes46>listName asc, priority asc<doubleQuotes46>);<newline46mondego>        entries = (List<ToDoItemGaejdo>) query.execute();<newline46mondego>    }<newline46mondego><newline46mondego>    final ServletOutputStream out = response.getOutputStream();<newline46mondego><newline46mondego>    out.println(<doubleQuotes46><head><doubleQuotes46>);<newline46mondego>    out.println(<doubleQuotes46>  <title>Debug View</title><doubleQuotes46>);<newline46mondego>    ....<newline46mondego>"
"6033splitHere46","4514597splitHere46","System.out.println(new String(line.getBytes(), <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"6034splitHere46","4514597splitHere46","System.out.println(line);<newline46mondego>"
"6035splitHere46","4514597splitHere46","String#getBytes()"
"6036splitHere46","4514597splitHere46","InputStreamReader"
"6037splitHere46","4515045splitHere46","Map<String,Integer>"
"6038splitHere46","4515045splitHere46","public class XMLComparator implements Comparator<String> {<newline46mondego>    private Map<String,Integer> order;<newline46mondego><newline46mondego>    public XMLComparator(Map<String,Integer> desiredOrder) {<newline46mondego>        order = desiredOrder;<newline46mondego>    }<newline46mondego><newline46mondego>    public void compare(String s1, String s2) {<newline46mondego>        return order.get(s1) - order.get(s2);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6039splitHere46","4515045splitHere46","Collections.sort(variableNames, new XMLComparator(previouslyCreatedMap));<newline46mondego>"
"6040splitHere46","4515078splitHere46","ExternalContext#getSessionMap()"
"6041splitHere46","4515078splitHere46","HttpSession"
"6042splitHere46","4515078splitHere46","HttpServletRequest"
"6043splitHere46","4515078splitHere46","HttpSession"
"6044splitHere46","4515078splitHere46","HttpServletRequest#getSession()"
"6045splitHere46","4515078splitHere46","HttpSession#getAttribute()"
"6046splitHere46","4515078splitHere46","HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();<newline46mondego>"
"6047splitHere46","4515078splitHere46","Exception e = (Exception) request.getSession().getAttribute(AbstractProcessingFilter.SPRING_SECURITY_LAST_EXCEPTION_KEY);<newline46mondego>"
"6048splitHere46","4515113splitHere46","DataModel"
"6049splitHere46","4515113splitHere46","private DataModel<Item> dataModel; // +getter<newline46mondego><newline46mondego>public Bean() {<newline46mondego>    this.dataModel = new ListDataModel<Item>(loadListOfItemsFromDatabase());<newline46mondego>}<newline46mondego>"
"6050splitHere46","4515113splitHere46","<h:dataTable value=<doubleQuotes46>#{bean.dataModel}<doubleQuotes46>><newline46mondego>"
"6051splitHere46","4515113splitHere46","Item"
"6052splitHere46","4515113splitHere46","public void myListener(ValueChangeEvent event) {<newline46mondego>    int index = dataModel.getRowIndex();<newline46mondego>    Item item = dataModel.getRowData();<newline46mondego>    Object oldValue = event.getOldValue();<newline46mondego>    Object newValue = event.getNewValue();<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6053splitHere46","4515148splitHere46","public static class Window.Location<newline46mondego>"
"6054splitHere46","4515148splitHere46","getHref()"
"6055splitHere46","4515148splitHere46","getProtocol()"
"6056splitHere46","4515148splitHere46","getHost()"
"6057splitHere46","4515148splitHere46","getHostName()"
"6058splitHere46","4515148splitHere46","static java.lang.String getQueryString()<newline46mondego>   Gets the URL's query string.<newline46mondego><newline46mondego>static java.lang.String getParameter(java.lang.String name)<newline46mondego>  Gets the URL's parameter of the specified name<newline46mondego><newline46mondego>static java.util.Map<java.lang.String,java.util.List<java.lang.String>> getParameterMap() <newline46mondego>  Returns a Map of the URL query parameters for the host page; since changing the map would not change the window's location, the map returned is immutable.<newline46mondego>"
"6059splitHere46","4515198splitHere46","collection = (List<T>)aList;<newline46mondego>"
"6060splitHere46","4515198splitHere46","T"
"6061splitHere46","4515198splitHere46","TypeC"
"6062splitHere46","4515198splitHere46","List<TypeA>"
"6063splitHere46","4515198splitHere46","List<TypeC>"
"6064splitHere46","4515272splitHere46","import com.google.gwt.user.client.Window;<newline46mondego><newline46mondego>// ...<newline46mondego><newline46mondego>Window.Location.getParameter(<doubleQuotes46>foo<doubleQuotes46>) // == <doubleQuotes46>bar<doubleQuotes46><newline46mondego>"
"6065splitHere46","4515334splitHere46","new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd [hh:mm]<doubleQuotes46>);<newline46mondego>"
"6066splitHere46","4515334splitHere46","new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd hh:mm<doubleQuotes46>);<newline46mondego>new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd <doubleQuotes46>);<newline46mondego>"
"6067splitHere46","4515334splitHere46","Date"
"6068splitHere46","4515435splitHere46","$"
"6069splitHere46","4515435splitHere46","\b"
"6070splitHere46","4515435splitHere46","<doubleQuotes46>\\b(I|II|III|IV)\\b<doubleQuotes46><newline46mondego>"
"6071splitHere46","4515507splitHere46","@Override<newline46mondego>protected void onListItemClick(ListView l, View v, int position, long id) {<newline46mondego>    CheckedTextView textview = (CheckedTextView)v;<newline46mondego>    textview.setChecked(!textview.isChecked());<newline46mondego>}<newline46mondego>"
"6072splitHere46","4515534splitHere46","/"
"6073splitHere46","4515534splitHere46","local.tomcat"
"6074splitHere46","4515534splitHere46","local/tomcat"
"6075splitHere46","4515534splitHere46","c\tomcat-juli"
"6076splitHere46","4515534splitHere46","tomcat-juli"
"6077splitHere46","4515611splitHere46","bin"
"6078splitHere46","4515611splitHere46","com.mycompany.Server"
"6079splitHere46","4515611splitHere46","com/mycompany/Server.class"
"6080splitHere46","4515611splitHere46","bin"
"6081splitHere46","4515611splitHere46","bin"
"6082splitHere46","4515611splitHere46","bin"
"6083splitHere46","4515611splitHere46","jar: client server<newline46mondego>    cd bin; jar cfe ../HBNQServer Server Server.class Job.class JobQueue.class ServerThread.class FileTransfer.class<newline46mondego>    cd bin; jar cfe ../HBNQClient Client Client.class Job.class JobQueue.class FileTransfer.class<newline46mondego>"
"6084splitHere46","4515912splitHere46","button.dispatchEvent( new MouseEvent(...) );<newline46mondego>"
"6085splitHere46","4515912splitHere46","button.getModel().setRollover( true );<newline46mondego>"
"6086splitHere46","4516047splitHere46","oPut"
"6087splitHere46","4516047splitHere46","static"
"6088splitHere46","4516047splitHere46","<doubleQuotes46><doubleQuotes46>"
"6089splitHere46","4516047splitHere46","eProcList"
"6090splitHere46","4516047splitHere46","static"
"6091splitHere46","4516286splitHere46","Command pattern"
"6092splitHere46","4516286splitHere46","Delegate pattern"
"6093splitHere46","4516301splitHere46","SharedPreferences"
"6094splitHere46","4516301splitHere46","SharedPreferences"
"6095splitHere46","4516377splitHere46","TreePath"
"6096splitHere46","4516377splitHere46","TreeSelectionEvent public TreePath[] getPaths()"
"6097splitHere46","4516441splitHere46","public class dto implements IsSerializable, BeanModelTag  {<newline46mondego><newline46mondego>....//attributes and setter getters.<newline46mondego><newline46mondego>}<newline46mondego>"
"6098splitHere46","4516441splitHere46","public static <E> BeanModel toModel(E e) {<newline46mondego>    BeanModelFactory factory = BeanModelLookup.get().getFactory(e.getClass());<newline46mondego>    return factory.createModel(e);<newline46mondego>}<newline46mondego>"
"6099splitHere46","4516608splitHere46","private final"
"6100splitHere46","4516608splitHere46","import java.lang.reflect.Field;<newline46mondego><newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    WithPrivateFinalField pf = new WithPrivateFinalField();<newline46mondego>    System.out.println(pf);<newline46mondego>    Field f = pf.getClass().getDeclaredField(<doubleQuotes46>s<doubleQuotes46>);<newline46mondego>    f.setAccessible(true);<newline46mondego>    System.out.println(<doubleQuotes46>f.get(pf): <doubleQuotes46> + f.get(pf));<newline46mondego>    f.set(pf, <doubleQuotes46>No, youâ€™re not!<doubleQuotes46>);<newline46mondego>    System.out.println(pf);<newline46mondego>    System.out.println(<doubleQuotes46>f.get(pf): <doubleQuotes46> + f.get(pf));<newline46mondego>  }<newline46mondego><newline46mondego>  private static class WithPrivateFinalField {<newline46mondego>    private final String s;<newline46mondego><newline46mondego>    public WithPrivateFinalField() {<newline46mondego>      this.s = <doubleQuotes46>Iâ€™m totally safe<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    public String toString() {<newline46mondego>      return <doubleQuotes46>s = <doubleQuotes46> + s;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"6101splitHere46","4516608splitHere46","s = Iâ€™m totally safe<newline46mondego>f.get(pf): Iâ€™m totally safe<newline46mondego>s = No, youâ€™re not!<newline46mondego>f.get(pf): No, youâ€™re not!<newline46mondego>"
"6102splitHere46","4516665splitHere46","private static boolean isValidDate(String input) {<newline46mondego>        String formatString = <doubleQuotes46>MM/dd/yyyy<doubleQuotes46>;<newline46mondego><newline46mondego>        try {<newline46mondego>            SimpleDateFormat format = new SimpleDateFormat(formatString);<newline46mondego>            format.setLenient(false);<newline46mondego>            format.parse(input);<newline46mondego>        } catch (ParseException e) {<newline46mondego>            return false;<newline46mondego>        } catch (IllegalArgumentException e) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>public static void main(String[] args){<newline46mondego>        System.out.println(isValidDate(<doubleQuotes46>45/23/234<doubleQuotes46>)); // false<newline46mondego>        System.out.println(isValidDate(<doubleQuotes46>12/12/2111<doubleQuotes46>)); // true<newline46mondego>    }<newline46mondego>"
"6103splitHere46","4516677splitHere46","java.sql.Connection.close()"
"6104splitHere46","4516694splitHere46","httpContext.getResponse().setResponse(myResponse)<newline46mondego>try {<newline46mondego>  httpContext.getResponse().getOutputStream().write(new byte[]{})<newline46mondego>} catch (Exception e) {<newline46mondego>  // writing of headers failed. <newline46mondego>}<newline46mondego>"
"6105splitHere46","4516842splitHere46","MyClass"
"6106splitHere46","4516842splitHere46","MyClass A"
"6107splitHere46","4516842splitHere46","A.equals(<doubleQuotes46>a<doubleQuotes46>)"
"6108splitHere46","4516842splitHere46","<doubleQuotes46>a<doubleQuotes46>.equals(A)"
"6109splitHere46","4516842splitHere46","A.equals(A) <newline46mondego>"
"6110splitHere46","4517049splitHere46","javax.swing.text.AttributeSet<newline46mondego>"
"6111splitHere46","4517049splitHere46","javax.print.attribute.Attributeset<newline46mondego>"
"6112splitHere46","4517124splitHere46","BufferedReader br = new BufferedReader(new InputStreamReader(di));<newline46mondego>"
"6113splitHere46","4517124splitHere46","BufferedReader br = new BufferedReader(new InputStreamReader(di, <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>"
"6114splitHere46","4517171splitHere46","Set<Integer> first = new LinkedHashSet<Integer>(Arrays.asList(2,3,4,5));<newline46mondego>Set<Integer> second = new LinkedHashSet<Integer>(Arrays.asList(1,2,3,6));<newline46mondego>Set<Integer> addition = subtract(first, second);<newline46mondego>Set<Integer> subtracted = subtract( second, first);<newline46mondego><newline46mondego>public static <T> Set<T> subtract(Set<T> set1, Set<T> set2) {<newline46mondego>    Set<T> ret = new LinkedHashSet<T>(set1);<newline46mondego>    ret.removeAll(set2);<newline46mondego>    return ret;<newline46mondego>}<newline46mondego>"
"6115splitHere46","4517173splitHere46","HttpServletResponse"
"6116splitHere46","4517190splitHere46","applet"
"6117splitHere46","4517190splitHere46","<%@ page contentType=<doubleQuotes46>text/html;charset=UTF-8<doubleQuotes46> language=<doubleQuotes46>java<doubleQuotes46> %><newline46mondego><html><newline46mondego><head><newline46mondego>    <title>My Upload Page</title><newline46mondego></head><newline46mondego><body><newline46mondego><applet archive=<doubleQuotes46>plugins/jupload/wjhk.jupload.jar<doubleQuotes46><newline46mondego>  code=<doubleQuotes46>wjhk.jupload2.JUploadApplet<doubleQuotes46> height=<doubleQuotes46>700<doubleQuotes46> mayscript=<doubleQuotes46>true<doubleQuotes46><newline46mondego>  name=<doubleQuotes46>JUpload<doubleQuotes46> width=<doubleQuotes46>500<doubleQuotes46>><newline46mondego>  <param name=<doubleQuotes46>postURL<doubleQuotes46> value=<doubleQuotes46>http://localhost:8080/webapp/yourFileUpload.jsp<doubleQuotes46>/><newline46mondego>  Java 1.5 or higher plugin required.<newline46mondego></applet><newline46mondego></body><newline46mondego></html><newline46mondego>"
"6118splitHere46","4517190splitHere46","postURL"
"6119splitHere46","4517300splitHere46","xs:base64Binary"
"6120splitHere46","4517300splitHere46","<xs:complexType name=<doubleQuotes46>documentType<doubleQuotes46>><newline46mondego> <xs:sequence><newline46mondego>    <xs:element minOccurs=<doubleQuotes46>0<doubleQuotes46> name=<doubleQuotes46>mimetype<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> /><newline46mondego>    <xs:element minOccurs=<doubleQuotes46>0<doubleQuotes46> name=<doubleQuotes46>filename<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> /><newline46mondego>    <xs:element name=<doubleQuotes46>content<doubleQuotes46> type=<doubleQuotes46>xs:base64Binary<doubleQuotes46> /><newline46mondego> </xs:sequence><newline46mondego></xs:complexType><newline46mondego>"
"6121splitHere46","4517300splitHere46","org.apache.commons.codec.binary.Base64"
"6122splitHere46","4517300splitHere46","commons-codec"
"6123splitHere46","4517300splitHere46","// You can read in the PDF file with FileReader and get the bytes<newline46mondego>// Please obey that this solution must be improved for large pdf files<newline46mondego><newline46mondego>Base64.encodeBase64(binaryData, true)<newline46mondego>"
"6124splitHere46","4517464splitHere46","org.apache.log4j.jdbc.JDBCAppender"
"6125splitHere46","4517464splitHere46","org.apache.log4j.jdbcplus.JDBCAppender"
"6126splitHere46","4517508splitHere46","for (IntegrationClient integrationClient : allCachedIntegrationClients) {<newline46mondego>        putOneIntegrationClientOnCache(integrationClient);<newline46mondego>    }<newline46mondego>"
"6127splitHere46","4517508splitHere46","synchronized private void putOneIntegrationClientOnCache(IntegrationClient integrationClient){<newline46mondego>fillCachedIntegrationClients(); // only fill cache if it is null , it will never refill cache<newline46mondego>...<newline46mondego>"
"6128splitHere46","4517532splitHere46","HttpsURLConnection"
"6129splitHere46","4517532splitHere46","HostnameVerifier"
"6130splitHere46","4517532splitHere46","SSLSocket"
"6131splitHere46","4517532splitHere46","HandshakeCompletedListener."
"6132splitHere46","4517622splitHere46","manifest"
"6133splitHere46","4517784splitHere46","CopyOnWriteArrayList"
"6134splitHere46","4517873splitHere46","Project > Build Automatically"
"6135splitHere46","4518145splitHere46","[['a', 'b', 'c'], ['d', 'e', 'f']..."
"6136splitHere46","4518226splitHere46","s.getSessionFactory().getClassMetadata(Bar.class);<newline46mondego>"
"6137splitHere46","4518382splitHere46","<c:set var=<doubleQuotes46>p<doubleQuotes46> value=<doubleQuotes46>${param.pageNumber}<doubleQuotes46> /> <%-- current page (1-based) --%><newline46mondego><c:set var=<doubleQuotes46>l<doubleQuotes46> value=<doubleQuotes46>5<doubleQuotes46> /> <%-- amount of page links to be displayed --%><newline46mondego><c:set var=<doubleQuotes46>r<doubleQuotes46> value=<doubleQuotes46>${l / 2}<doubleQuotes46> /> <%-- minimum link range ahead/behind --%><newline46mondego><c:set var=<doubleQuotes46>t<doubleQuotes46> value=<doubleQuotes46>${tot}<doubleQuotes46> /> <%-- total amount of pages --%><newline46mondego><newline46mondego><c:set var=<doubleQuotes46>begin<doubleQuotes46> value=<doubleQuotes46>${((p - r) > 0 ? ((p - r) < (t - l + 1) ? (p - r) : (t - l)) : 0) + 1}<doubleQuotes46> /><newline46mondego><c:set var=<doubleQuotes46>end<doubleQuotes46> value=<doubleQuotes46>${(p + r) < t ? ((p + r) > l ? (p + r) : l) : t}<doubleQuotes46> /><newline46mondego><newline46mondego><c:forEach begin=<doubleQuotes46>${begin}<doubleQuotes46> end=<doubleQuotes46>${end}<doubleQuotes46> var=<doubleQuotes46>page<doubleQuotes46>><newline46mondego>    ${page}...<newline46mondego></c:forEach><newline46mondego>"
"6138splitHere46","4518681splitHere46","Map<String, String[]> mapArrays = new HashMap<String, String[]>();<newline46mondego><newline46mondego><newline46mondego>String arrayName = <doubleQuotes46>arrayT<doubleQuotes46> + type + <doubleQuotes46>V<doubleQuotes46> + value;<newline46mondego>mapArrays.put(arrayName, new String[size]);<newline46mondego>"
"6139splitHere46","4518681splitHere46","String[] someArray = mapArrays.get(arrayName);<newline46mondego>"
"6140splitHere46","4518694splitHere46","predecessor(x) = x - 1<newline46mondego>successor(x) = x + 1<newline46mondego><newline46mondego>sum(x, y) = <newline46mondego>  if x = 0 <newline46mondego>    then y <newline46mondego>    otherwise sum(predecessor(x), successor(y))<newline46mondego>"
"6141splitHere46","4518715splitHere46","Map"
"6142splitHere46","4518715splitHere46","<table><newline46mondego>    <jsp:useBean id=<doubleQuotes46>processed<doubleQuotes46> class=<doubleQuotes46>java.util.HashMap<doubleQuotes46> /><newline46mondego>    <c:forEach items=<doubleQuotes46>${persons}<doubleQuotes46> var=<doubleQuotes46>person<doubleQuotes46>><newline46mondego>        <c:if test=<doubleQuotes46>${empty processed[person.lastName]}<doubleQuotes46>><newline46mondego>            <c:set target=<doubleQuotes46>${processed}<doubleQuotes46> property=<doubleQuotes46>${person.lastName}<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego>            <tr><newline46mondego>                <td>${person.familyId}</td><newline46mondego>                <td>${person.lastName}</td><newline46mondego>                <td>${person.firstName}<newline46mondego>                    <c:forEach items=<doubleQuotes46>${persons}<doubleQuotes46> var=<doubleQuotes46>other<doubleQuotes46>><newline46mondego>                        <c:if test=<doubleQuotes46>${person.lastName == other.lastName and person.firstName != other.firstName}<doubleQuotes46>><newline46mondego>                            , ${other.firstName}<newline46mondego>                        </c:if><newline46mondego>                    </c:forEach><newline46mondego>                </td><newline46mondego>            </tr><newline46mondego>        </c:if><newline46mondego>    </c:forEach><newline46mondego></table><newline46mondego>"
"6143splitHere46","4518716splitHere46","List<Integer> nthElement( List<Integer> dims, int n ){<newline46mondego>    List<Integer> res = new ArrayList<Integer>(dims.size());<newline46mondego>    for(Integer cur  : dims){<newline46mondego>        if(n <= 0 ){<newline46mondego>            res.add(0);<newline46mondego>        } else {<newline46mondego>            n -= cur;<newline46mondego>            res.add(n >= 0 ? cur -1  : cur + n );<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return res;<newline46mondego>}<newline46mondego>"
"6144splitHere46","4518716splitHere46","//create list with 3 dimensions using Guava<newline46mondego>    List<Integer> dims = ImmutableList.of(1000, 1000, 1000);<newline46mondego>    //or with standard JDK<newline46mondego>    //List<Integer> dims = new ArrayList<Integer>(3);dims.add(1000);dims.add(1000);dims.add(1000);<newline46mondego><newline46mondego>    System.out.println(nthElement(dims, 0));<newline46mondego>    System.out.println(nthElement(dims, 1000));<newline46mondego>    System.out.println(nthElement(dims, 1001));<newline46mondego>    System.out.println(nthElement(dims, 2001));<newline46mondego>"
"6145splitHere46","4518716splitHere46","[0, 0, 0]<newline46mondego>    [999, 0, 0]<newline46mondego>    [999, 1, 0]<newline46mondego>    [999, 999, 1]<newline46mondego>"
"6146splitHere46","4518750splitHere46","?"
"6147splitHere46","4518750splitHere46","PreparedStatement p = conn.prepareStatement(<doubleQuotes46>ALTER user Stephen identified by \<doubleQuotes46>newPassword?\<doubleQuotes46> replace \<doubleQuotes46>oldPassword\<doubleQuotes46><doubleQuotes46>);<newline46mondego>p.setEscapeProcessing(false);<newline46mondego>p.execute();<newline46mondego>"
"6148splitHere46","4518750splitHere46","<doubleQuotes46>"
"6149splitHere46","4518786splitHere46","// Extend DefaultListCellRenderer, takes care of most of the work for you<newline46mondego>public class ExampleListCellRenderer extends DefaultListCellRenderer<newline46mondego>{<newline46mondego>    public Component getListCellRendererComponent(<newline46mondego>        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)<newline46mondego>    {<newline46mondego>        // I know DefaultListCellRenderer always returns a JLabel<newline46mondego>        // super setups up all the defaults<newline46mondego>        JLabel label = (JLabel)super.getListCellRendererComponent(list, value, index, isSelect, cellHasFocus);<newline46mondego><newline46mondego>        // <doubleQuotes46>value<doubleQuotes46> is whatever object you put into the list, you can use it however you want here<newline46mondego><newline46mondego>        // I'm going to prefix the label text to demonstrate the point<newline46mondego><newline46mondego>       label.setText(<doubleQuotes46>PRE:<doubleQuotes46> + label.getText());<newline46mondego><newline46mondego>       return label;<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// Some time later...<newline46mondego><newline46mondego>JList list = new JList();<newline46mondego>list.setCellRenderer(new ExampleListCellRenderer());<newline46mondego>"
"6150splitHere46","4519011splitHere46","java.util.Collections.sort(people);<newline46mondego>"
"6151splitHere46","4519063splitHere46","java -cp art.jar;ldom.jar;other.jar uk.co.Art<newline46mondego>"
"6152splitHere46","4519063splitHere46","java -jar art.jar<newline46mondego>"
"6153splitHere46","4519213splitHere46","-"
"6154splitHere46","4519213splitHere46","[]"
"6155splitHere46","4519213splitHere46",".-?"
"6156splitHere46","4519213splitHere46","./0123456789:;<=>?"
"6157splitHere46","4519213splitHere46","\\-"
"6158splitHere46","4519213splitHere46","public static String detectUrls(String text) {<newline46mondego>    String newText = text<newline46mondego>            .replaceAll(<doubleQuotes46>(?:https?|ftps?|http?)://[\\w/%.\\-?&=]+<doubleQuotes46>,<newline46mondego>                    <doubleQuotes46><a href='$0'>$0</a><doubleQuotes46>).replaceAll(<newline46mondego>                    <doubleQuotes46>(www\\.)[\\w/%.\\-?&=]+<doubleQuotes46>, <doubleQuotes46><a href='http://$0'>$0</a><doubleQuotes46>);<newline46mondego>    return newText;<newline46mondego>}<newline46mondego>"
"6159splitHere46","4519328splitHere46","UUID idOne = UUID.randomUUID();<newline46mondego>UUID idTwo = UUID.randomUUID();<newline46mondego>log(<doubleQuotes46>UUID One: <doubleQuotes46> + idOne);<newline46mondego>log(<doubleQuotes46>UUID Two: <doubleQuotes46> + idTwo);<newline46mondego>"
"6160splitHere46","4519328splitHere46","UUID One: 067e6162-3b6f-4ae2-a171-2470b63dff00 <newline46mondego>UUID Two: 54947df8-0e9e-4471-a2f9-9af509fb5889<newline46mondego>"
"6161splitHere46","4519418splitHere46","public CustomStreamWriter ([...], Writer writer) throws XMLStreamException {<newline46mondego>    this([...], XMLOutputFactory.newInstance().createXMLStreamWriter(writer);<newline46mondego>}<newline46mondego><newline46mondego>protected CustomStreamWriter ([...], XMLStreamWriter outputHandler) {<newline46mondego>    this.writer = writer;<newline46mondego>}<newline46mondego>"
"6162splitHere46","4519534splitHere46","ZipFile.size()"
"6163splitHere46","4519576splitHere46","RuntimeException"
"6164splitHere46","4519576splitHere46","Error"
"6165splitHere46","4519669splitHere46","Collection<Person> listPeople = new ArrayList<Person>();<newline46mondego>"
"6166splitHere46","4519669splitHere46","public class Person implements Comparable<Person>{<newline46mondego><newline46mondego>public int compareTo(Person person) {<newline46mondego>  if(this.name != null && person.name != null){<newline46mondego>   return this.name.compareToIgnoreCase(person.name);<newline46mondego>  }<newline46mondego>  return 0;<newline46mondego> }<newline46mondego><newline46mondego>}<newline46mondego>"
"6167splitHere46","4519669splitHere46","Collections.sort(listPeople);<newline46mondego>"
"6168splitHere46","4519772splitHere46","Ordered"
"6169splitHere46","4519772splitHere46","def <  (that: A): Boolean = (this compare that) <  0<newline46mondego>def >  (that: A): Boolean = (this compare that) >  0<newline46mondego>def <= (that: A): Boolean = (this compare that) <= 0<newline46mondego>def >= (that: A): Boolean = (this compare that) >= 0<newline46mondego>def compareTo(that: A): Int = compare(that)<newline46mondego>"
"6170splitHere46","4519772splitHere46","Ordered"
"6171splitHere46","4519772splitHere46","compareTo"
"6172splitHere46","4519778splitHere46","public class MainClass{<newline46mondego><newline46mondego>       public static void main(String [] args){<newline46mondego>                    new Gui();<newline46mondego>       }<newline46mondego>}<newline46mondego>"
"6173splitHere46","4519778splitHere46","new Semaphore();"
"6174splitHere46","4519821splitHere46","202 (Accepted)"
"6175splitHere46","4519994splitHere46","public class SimpleAdapterWithCheckbox extends SimpleAdapter {<newline46mondego><newline46mondego><newline46mondego>public SimpleAdapterWithCheckbox(Context context,<newline46mondego>        List<? extends Map<String, ?>> data, int resource, String[] from,<newline46mondego>        int[] to) {<newline46mondego>    super(context, data, resource, from, to);<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego> // method getView start for each row in adapter to show it in ListView<newline46mondego> public View getView(int position, View convertView, ViewGroup parent) {                <newline46mondego>        View v = super.getView(position, convertView, parent);<newline46mondego>        startChrono(v);// starting for each row<newline46mondego>        return v;       <newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego> private void  startChrono(View v){<newline46mondego><newline46mondego>    //Here we need to know structure of layout to get our element <newline46mondego>    LinearLayout vwParentRow = (LinearLayout)v;<newline46mondego>    LinearLayout ChildTop = (LinearLayout) vwParentRow.getChildAt(0);<newline46mondego>    LinearLayout ChildTop2 = (LinearLayout) ChildTop.getChildAt(1);<newline46mondego><newline46mondego>    //Now, we get chronometer and could work with it as we wont<newline46mondego>    Chronometer chrono = (Chronometer) ChildTop2.getChildAt(0);<newline46mondego>    chrono.setBase(SystemClock.elapsedRealtime());<newline46mondego>    chrono.start();<newline46mondego><newline46mondego> }<newline46mondego>"
"6176splitHere46","4520110splitHere46","def testParam(s: String) = StringUtils.isNotBlank(request.getParameter(s))<newline46mondego>val increment = (<newline46mondego>  if (testParam(NEXT_SCREEN_PARAMETER_NAME)) 1<newline46mondego>  else if (testParam(PREV_SCREEN_PARAMETER_NAME)) -1<newline46mondego>  else if (testParam(LAST_SCREEN_PARAMETER_NAME)) Int.MaxValue<newline46mondego>  else 0<newline46mondego>)<newline46mondego>"
"6177splitHere46","4520169splitHere46","MutableInt"
"6178splitHere46","4520271splitHere46","String[] times = { <doubleQuotes46>12:23:45<doubleQuotes46>, <doubleQuotes46>23:59:59<doubleQuotes46>, <doubleQuotes46>00:00:00<doubleQuotes46> }<newline46mondego> Arrays.sort(times);<newline46mondego> String firstTime = times[0];<newline46mondego> String lastTime = times[times.length-1];<newline46mondego>"
"6179splitHere46","4520324splitHere46","XmlWritingException"
"6180splitHere46","4520324splitHere46","PaymentGatewayException"
"6181splitHere46","4520324splitHere46","DataAccessException"
"6182splitHere46","4520324splitHere46","IOException"
"6183splitHere46","4520324splitHere46","PaymentGatewayException"
"6184splitHere46","4520324splitHere46","XmlWritingException"
"6185splitHere46","4520324splitHere46","RuntimeException"
"6186splitHere46","4520324splitHere46","DataAccessException"
"6187splitHere46","4520416splitHere46","ServletContext.getResourceAsStream(..)"
"6188splitHere46","4520416splitHere46","getClass().getResourceAsStream(..)"
"6189splitHere46","4520633splitHere46","<script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>   var t;<newline46mondego>   t=setTimeout(<doubleQuotes46>timedCount()<doubleQuotes46>, 1000); <newline46mondego><newline46mondego>   function timedCount() {<newline46mondego>      document.getElementById('formName:button').click();<newline46mondego><newline46mondego>      t=setTimeout(<doubleQuotes46>timedCount()<doubleQuotes46>, 10000); <newline46mondego>   }<newline46mondego></script><newline46mondego><newline46mondego>(...)<newline46mondego><newline46mondego><h:commandButton id=<doubleQuotes46>button<doubleQuotes46> action=<doubleQuotes46>#{bean.scrollNext}<doubleQuotes46> reRender=<doubleQuotes46>tableID<doubleQuotes46><newline46mondego>                 style=<doubleQuotes46>visibility:hidden;<doubleQuotes46>/><newline46mondego><newline46mondego>(...)<newline46mondego>"
"6190splitHere46","4520633splitHere46","HtmlDataScroller scroll; //(im not sure about the <doubleQuotes46>HtmlDataScroller<doubleQuotes46>)<newline46mondego><newline46mondego>(...)<newline46mondego><newline46mondego>public void scrollNext() { scroll.next(); }<newline46mondego><newline46mondego>(...)<newline46mondego><newline46mondego>//Gets and sets to bind the scroller<newline46mondego>get; set;...<newline46mondego>"
"6191splitHere46","4520756splitHere46","linenum > 0"
"6192splitHere46","4520756splitHere46","(MAP = inputFile.readLine()) != null"
"6193splitHere46","4520756splitHere46","linenum=linenum-1; <newline46mondego>    MAP = inputFile.readLine();"
"6194splitHere46","4520857splitHere46","import java.io.BufferedReader;<newline46mondego>import java.io.FileInputStream;<newline46mondego>import java.io.FileNotFoundException;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.LinkedHashMap;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Map;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego>import javax.swing.JScrollPane;<newline46mondego>import javax.swing.JTable;<newline46mondego>import javax.swing.event.TableModelListener;<newline46mondego>import javax.swing.table.TableModel;<newline46mondego><newline46mondego>public class Reader {<newline46mondego><newline46mondego>    public Reader() {<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        BufferedReader reader;<newline46mondego>        try {<newline46mondego>            reader = new BufferedReader(new InputStreamReader(<newline46mondego>                                        new FileInputStream(<doubleQuotes46>sample.txt<doubleQuotes46>)));<newline46mondego>            Map<String, Object[]> result = new LinkedHashMap<String, Object[]>();<newline46mondego><newline46mondego>            while (reader.ready()) {<newline46mondego>                String line = reader.readLine();<newline46mondego>                String[] values = line.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>                String key = values[0] + <doubleQuotes46>\t<doubleQuotes46> + values[1];<newline46mondego><newline46mondego>                String label = values[0];<newline46mondego>                String date = values[1];<newline46mondego>                Integer sum = 0;<newline46mondego>                Integer count = 0;<newline46mondego>                if (result.containsKey(key)) {<newline46mondego>                    sum = (Integer) ((Object[]) result.get(key))[2];<newline46mondego>                    count = (Integer) ((Object[]) result.get(key))[3];<newline46mondego>                } else {<newline46mondego><newline46mondego>                }<newline46mondego>                result.put(key, new Object[]{label, date,<newline46mondego>                        sum + Integer.parseInt(values[2]), count + 1});<newline46mondego>            }<newline46mondego>            ArrayList arrayList = new ArrayList(result.values());<newline46mondego><newline46mondego>            /* interate and print new output */<newline46mondego>            /*<newline46mondego>             * for (String key : result.keySet()) { Integer sum =<newline46mondego>             * result.get(key); Integer count = result2.get(key);<newline46mondego>             * System.out.println(key + <doubleQuotes46> <doubleQuotes46> + sum + <doubleQuotes46>\t<doubleQuotes46> + count); }<newline46mondego>            */<newline46mondego>            JTable table = new JTable(new AnimalTableModel(arrayList));<newline46mondego>            panel.add(new JScrollPane(table));<newline46mondego>            reader.close();<newline46mondego>            frame.setContentPane(panel);<newline46mondego>            frame.setVisible(true);<newline46mondego>            frame.pack();<newline46mondego>        } catch (FileNotFoundException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new Reader();<newline46mondego>    }<newline46mondego><newline46mondego>    public class AnimalTableModel implements TableModel {<newline46mondego>        final Class[] columnClass = new Class[]{String.class, String.class,<newline46mondego>                Integer.class, Integer.class};<newline46mondego>        final String[] columnName = new String[]{<doubleQuotes46>Date<doubleQuotes46>, <doubleQuotes46>Animal<doubleQuotes46>, <doubleQuotes46>Sum<doubleQuotes46>,<newline46mondego>                <doubleQuotes46>Count<doubleQuotes46>};<newline46mondego>        List values = null;<newline46mondego><newline46mondego>        public AnimalTableModel(List values) {<newline46mondego>            this.values = values;<newline46mondego>            // initilize values<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void addTableModelListener(TableModelListener l) {<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Class<?> getColumnClass(int columnIndex) {<newline46mondego>            return columnClass[columnIndex];<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getColumnCount() {<newline46mondego>            return columnClass.length;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String getColumnName(int columnIndex) {<newline46mondego>            return columnName[columnIndex];<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getRowCount() {<newline46mondego>            return values.size();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getValueAt(int rowIndex, int columnIndex) {<newline46mondego>            return ((Object[]) values.get(rowIndex))[columnIndex];<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean isCellEditable(int rowIndex, int columnIndex) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void removeTableModelListener(TableModelListener l) {<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {<newline46mondego>            // TODO FOR EDITABLE DT<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6195splitHere46","4520923splitHere46","SqlMapClientCallback<T>"
"6196splitHere46","4520923splitHere46","doInSqlMapClient"
"6197splitHere46","4520923splitHere46","SqlMapClientCallback<Integer> callback = new SqlMapClientCallback<Integer>() {<newline46mondego>        public Integer doInSqlMapClient(SqlMapExecutor executor) throws SQLException {<newline46mondego>            executor.startBatch();<newline46mondego>            //... do your queries here<newline46mondego>            return executor.executeBatch();<newline46mondego>        }<newline46mondego>    };<newline46mondego>"
"6198splitHere46","4520932splitHere46","zip -d file.jar unwanted_file.txt<newline46mondego>"
"6199splitHere46","4521071splitHere46","enumerateRecords"
"6200splitHere46","4521071splitHere46","getRecordIDs"
"6201splitHere46","4521464splitHere46","RFC 959 - File Transfer Protocol"
"6202splitHere46","4521625splitHere46","sock.getOutPutStream().write(Integer.toString(mPort))<newline46mondego><newline46mondego>s._PORT = int(s._sock.recv(1024))<newline46mondego>"
"6203splitHere46","4521856splitHere46","Iterator"
"6204splitHere46","4521856splitHere46","class MyClass extends MaxObject implements Iterator<Type><newline46mondego>"
"6205splitHere46","4521988splitHere46","@With(Secure.class)"
"6206splitHere46","4521988splitHere46","Secure"
"6207splitHere46","4521988splitHere46","checkAccess"
"6208splitHere46","4521988splitHere46","private static void loadCookieIfPresent() {<newline46mondego>    Http.Cookie remember = request.cookies.get(<doubleQuotes46>rememberme<doubleQuotes46>);<newline46mondego>    if (remember != null && remember.value.indexOf(<doubleQuotes46>-<doubleQuotes46>) > 0) {<newline46mondego>        String sign = remember.value.substring(0, remember.value.indexOf(<doubleQuotes46>-<doubleQuotes46>));<newline46mondego>        String username = remember.value.substring(remember.value.indexOf(<doubleQuotes46>-<doubleQuotes46>) + 1);<newline46mondego>        if (Crypto.sign(username).equals(sign)) {<newline46mondego>            session.put(<doubleQuotes46>username<doubleQuotes46>, username);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6209splitHere46","4521988splitHere46","checkUser"
"6210splitHere46","4522095splitHere46","public static Date getTwitterDate(String date) throws ParseException {<newline46mondego><newline46mondego>  final String TWITTER=<doubleQuotes46>EEE MMM dd HH:mm:ss ZZZZZ yyyy<doubleQuotes46>;<newline46mondego>  SimpleDateFormat sf = new SimpleDateFormat(TWITTER);<newline46mondego>  sf.setLenient(true);<newline46mondego>  return sf.parse(date);<newline46mondego>  }<newline46mondego><newline46mondego>public static void main (String[] args) throws java.lang.Exception<newline46mondego>    {<newline46mondego>      System.out.println(getTwitterDate(<doubleQuotes46>Thu Dec 3 18:26:07 +0000 2010<doubleQuotes46>));          <newline46mondego>    }<newline46mondego>"
"6211splitHere46","4522095splitHere46","SimpleDateFormat sf = new SimpleDateFormat(TWITTER,Locale.ENGLISH);"
"6212splitHere46","4522161splitHere46","if (event.getKeyCode() == KeyEvent.VK_UP) {<newline46mondego>...<newline46mondego>}<newline46mondego>"
"6213splitHere46","4522161splitHere46","VK_DOWN, VK_LEFT, VK_RIGHT"
"6214splitHere46","4522161splitHere46","VK_KP_UP, VK_KP_DOWN, VK_KP_LEFT, VK_KP_RIGHT"
"6215splitHere46","4522201splitHere46","\b"
"6216splitHere46","4522201splitHere46","String largeText = <doubleQuotes46>....<doubleQuotes46>;  // The very large text here.<newline46mondego>String removeText = <doubleQuotes46>is happy<doubleQuotes46>;<newline46mondego>largeText = largeText.replaceAll( <doubleQuotes46>(?i)\\b<doubleQuotes46> + removeText + <doubleQuotes46>\\b<doubleQuotes46> , <doubleQuotes46><doubleQuotes46> ); <newline46mondego>"
"6217splitHere46","4522411splitHere46","public class LimitedQueue<E> extends LinkedBlockingQueue<E> <newline46mondego>{<newline46mondego>    public LimitedQueue(int maxSize)<newline46mondego>    {<newline46mondego>        super(maxSize);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean offer(E e)<newline46mondego>    {<newline46mondego>        // turn offer() and add() into a blocking calls (unless interrupted)<newline46mondego>        try {<newline46mondego>            put(e);<newline46mondego>            return true;<newline46mondego>        } catch(InterruptedException ie) {<newline46mondego>            Thread.currentThread().interrupt();<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6218splitHere46","4522429splitHere46","Ordered"
"6219splitHere46","4522429splitHere46","Comparable"
"6220splitHere46","4522429splitHere46","compare"
"6221splitHere46","4522657splitHere46","-Duser.timezone=Asia/Jerusalem"
"6222splitHere46","4522657splitHere46","-Duser.timezone=GMT+2"
"6223splitHere46","4522659splitHere46","new InputStreamReader(in, <doubleQuotes46>UTF-8<doubleQuotes46>)"
"6224splitHere46","4522659splitHere46","Accept-Charset"
"6225splitHere46","4522659splitHere46","Accept-Charset: iso-8859-5, unicode-1-1;q=0.8"
"6226splitHere46","4523015splitHere46","...<newline46mondego>myCheckBox.addItemListener(new ItemListener() {<newline46mondego>    @Override<newline46mondego>    public void itemStateChanged(ItemEvent e) {<newline46mondego>        if (e.getStateChange() == ItemEvent.SELECTED) {<newline46mondego>            // the checkbox was just selected<newline46mondego>        } else {<newline46mondego>            // the checkbox was just deselected<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"6227splitHere46","4523058splitHere46","List<Thread>"
"6228splitHere46","4523058splitHere46","thread.join()"
"6229splitHere46","4523058splitHere46","java.util.concurrent"
"6230splitHere46","4523058splitHere46","CyclicBarrier"
"6231splitHere46","4523058splitHere46","CountDownLatch"
"6232splitHere46","4523152splitHere46","local_db.bin"
"6233splitHere46","4523272splitHere46","log4j.appender.FA=org.apache.log4j.RollingFileAppender<newline46mondego>log4j.appender.FA.MaxBackupIndex=1<newline46mondego>"
"6234splitHere46","4523272splitHere46","Logger.getRootLogger().getAppender(<doubleQuotes46>FA<doubleQuotes46>).rollOver()<newline46mondego>"
"6235splitHere46","4523366splitHere46","Runtime.getRuntime().availableProcessors()<newline46mondego>"
"6236splitHere46","4523408splitHere46","log4j"
"6237splitHere46","4523436splitHere46","foo.db"
"6238splitHere46","4523436splitHere46","foo.db"
"6239splitHere46","4523504splitHere46","Double[][] values = new Double[colNum][rowNum];<newline46mondego>"
"6240splitHere46","4523504splitHere46","Map <String, Integer> map = new HashMap<String, Integer>();<newline46mondego>map.add(<doubleQuotes46>Column_0_Name<doubleQuotes46>,0);<newline46mondego>map.add(<doubleQuotes46>Column_1_Name<doubleQuotes46>,1);<newline46mondego>map.add(<doubleQuotes46>Column_2_Name<doubleQuotes46>,2);<newline46mondego>map.add(<doubleQuotes46>Column_3_Name<doubleQuotes46>,3);<newline46mondego>//...<newline46mondego>map.add(<doubleQuotes46>Column_(colNum-1)_Name<doubleQuotes46>,colNum-1);<newline46mondego>"
"6241splitHere46","4523504splitHere46","public double getValue(String columnName, int row){<newline46mondego> int colNum = map.get(columnName);<newline46mondego> return values[colNum][row];<newline46mondego>}<newline46mondego>"
"6242splitHere46","4523744splitHere46","*** GENERATED FROM project.xml - DO NOT EDIT  ***<newline46mondego> ***         EDIT ../build.xml INSTEAD         ***<newline46mondego>"
"6243splitHere46","4523744splitHere46","<!-- You may freely edit this file. See commented blocks below for --><newline46mondego><!-- some examples of how to customize the build. --><newline46mondego><!-- (If you delete it and reopen the project it will be recreated.) --><newline46mondego><!-- By default, only the Clean and Build commands use this build script. --><newline46mondego><!-- Commands such as Run, Debug, and Test only use this build script if --><newline46mondego><!-- the Compile on Save feature is turned off for the project. --><newline46mondego><!-- You can turn off the Compile on Save (or Deploy on Save) setting --><newline46mondego><!-- in the project's Project Properties dialog box.--><newline46mondego>"
"6244splitHere46","4523887splitHere46","instanceof"
"6245splitHere46","4523887splitHere46","public void dispatch(Object o)<newline46mondego>{<newline46mondego>   if (o instanceof String)<newline46mondego>       handleString((String)o);<newline46mondego>   else if (o instanceof File)<newline46mondego>       handleFile((File)o);<newline46mondego>   else<newline46mondego>       handleObject(o);<newline46mondego>}<newline46mondego>"
"6246splitHere46","4523888splitHere46","-SNAPSHOT"
"6247splitHere46","4523910splitHere46","this"
"6248splitHere46","4523910splitHere46","int a = MyScannedRobotEvent.angle(this);<newline46mondego>"
"6249splitHere46","4523910splitHere46","this"
"6250splitHere46","4523928splitHere46","ConstraintValidator"
"6251splitHere46","4524166splitHere46","ExecutorService"
"6252splitHere46","4524166splitHere46","Callable<InputStream>"
"6253splitHere46","4524166splitHere46","ExecutorService executor = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());<newline46mondego>Future<InputStream> response1 = executor.submit(new Request(<doubleQuotes46>http://google.com<doubleQuotes46>));<newline46mondego>Future<InputStream> response2 = executor.submit(new Request(<doubleQuotes46>http://stackoverflow.com<doubleQuotes46>));<newline46mondego>// ...<newline46mondego>ByteArrayOutputStream totalResponse = new ByteArrayOutputStream();<newline46mondego>copyAndCloseInput(response1.get(), totalResponse);<newline46mondego>copyAndCloseInput(response2.get(), totalResponse);<newline46mondego>// ...<newline46mondego>executor.shutdown();<newline46mondego>"
"6254splitHere46","4524166splitHere46","public class Request implements Callable<InputStream> {<newline46mondego><newline46mondego>    private String url;<newline46mondego><newline46mondego>    public Request(String url) {<newline46mondego>        this.url = url;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public InputStream call() throws Exception {<newline46mondego>        return new URL(url).openStream();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6255splitHere46","4524194splitHere46","% jar cmf myManifestFile myJarFile *.class<newline46mondego>"
"6256splitHere46","4524194splitHere46","% jar cvmf META-INF/manifest.mf MyJar.jar a b c META-INF<newline46mondego>"
"6257splitHere46","4524261splitHere46","test(int i)"
"6258splitHere46","4524261splitHere46","test(Integer i)"
"6259splitHere46","4524261splitHere46","test(5)"
"6260splitHere46","4524406splitHere46","remove(Object o)<newline46mondego>remove(int i)<newline46mondego>"
"6261splitHere46","4524406splitHere46","int keyLocation = reducedFD.indexOf(KeyPlus.get(KEYindex));<newline46mondego>someArrayList.remove(keyLocation);<newline46mondego>"
"6262splitHere46","4524594splitHere46","public void fillDB(){<newline46mondego>        InputStreamReader in= new InputStreamReader(dataIS);<newline46mondego>        BufferedReader dataBR= new BufferedReader(in);<newline46mondego>        String dataLine;<newline46mondego>        try {<newline46mondego>        while ((dataLine = dataBR.readLine()) != null)   {<newline46mondego>          // split the data line<newline46mondego>          dataLineTokenizer = new StringTokenizer(dataLine, <doubleQuotes46>:<doubleQuotes46>);<newline46mondego>                //SQL query + save data to database<newline46mondego>          String sql =  <doubleQuotes46>INSERT INTO location ...<doubleQuotes46>;<newline46mondego>          //execute query<newline46mondego>          Log.v(<doubleQuotes46>Test Saving<doubleQuotes46>, sql);<newline46mondego>          clubberDB.execSQL(sql);<newline46mondego>        }<newline46mondego>        } catch (IOException e) {<newline46mondego>          // TODO Auto-generated catch block<newline46mondego>          e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"6263splitHere46","4524701splitHere46","public interface Car {<newline46mondego><newline46mondego>   void speedUp(int mvh);<newline46mondego><newline46mondego>   void breakDown(int mvh);<newline46mondego><newline46mondego>}<newline46mondego>"
"6264splitHere46","4524745splitHere46","<ImageView android:id=<doubleQuotes46>@+id/ImageView01<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46> <newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_below=<doubleQuotes46>@+id/VideoView01<doubleQuotes46>><newline46mondego></ImageView><newline46mondego>"
"6265splitHere46","4524880splitHere46","if(frame == null)<newline46mondego>                frame = new JFrame();<newline46mondego>            else {<newline46mondego>                //remove the previous JFrame<newline46mondego>                frame.setVisible(false);<newline46mondego>                frame.dispose();<newline46mondego>                //create a new one<newline46mondego>                frame = new JFrame();<newline46mondego>            }<newline46mondego>"
"6266splitHere46","4524880splitHere46","public static void main(String[] args) {<newline46mondego>    javax.swing.SwingUtilities.invokeLater(new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            designUI();<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"6267splitHere46","4525223splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>@<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(string);<newline46mondego>return matcher.find();<newline46mondego>"
"6268splitHere46","4525223splitHere46","matches"
"6269splitHere46","4525223splitHere46","find"
"6270splitHere46","4525223splitHere46","x.indexOf('@') != -1"
"6271splitHere46","4525223splitHere46","x.contains(<doubleQuotes46>@<doubleQuotes46>)"
"6272splitHere46","4525241splitHere46","String a=<doubleQuotes46>wÃ¶rd<doubleQuotes46>;<newline46mondego>String b=a.replaceAll(<doubleQuotes46>Ã¶<doubleQuotes46>, <doubleQuotes46>oe<doubleQuotes46>);<newline46mondego>System.out.println(b);<newline46mondego>"
"6273splitHere46","4525241splitHere46","String a=<doubleQuotes46>wÃ¶rdsÃ¤mple<doubleQuotes46>;<newline46mondego>String b=a.replaceAll(<doubleQuotes46>Ã¶<doubleQuotes46>, <doubleQuotes46>oe<doubleQuotes46>).replaceAll(<doubleQuotes46>Ã¤<doubleQuotes46>,<doubleQuotes46>ae<doubleQuotes46>);<newline46mondego>System.out.println(b);<newline46mondego>"
"6274splitHere46","4525351splitHere46","import java.swing.text.MaskFormater;<newline46mondego><newline46mondego>try {<newline46mondego>    MaskFormatter formatter = new MaskFormatter(<doubleQuotes46>+AA AAA AA AA AA<doubleQuotes46>);<newline46mondego>    formatter.setValueContainsLiteralCharacters(false);<newline46mondego>    System.err.println(formatter.valueToString(<doubleQuotes46>31987365414<doubleQuotes46>));<newline46mondego>} catch (ParseException e) {<newline46mondego>"
"6275splitHere46","4525436splitHere46","import scala.collection.immutable.List;<newline46mondego>import scala.collection.immutable.List$;<newline46mondego>import scala.collection.immutable.$colon$colon;<newline46mondego><newline46mondego>public class HelloScalaList {<newline46mondego><newline46mondego>    public static void main (String[] args) {<newline46mondego>        List xs = list(1,2,3);<newline46mondego>        System.out.println(xs);<newline46mondego>    }<newline46mondego><newline46mondego>    public static <T> List<T> list(T ... ts) {<newline46mondego>        List<T> result = List$.MODULE$.empty();<newline46mondego>        for(int i = ts.length; i > 0; i--) {<newline46mondego>            result = new $colon$colon(ts[i - 1], result);<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6276splitHere46","4525802splitHere46","SwingUtilities.isLeftMouseButton(MouseEvent anEvent)"
"6277splitHere46","4525802splitHere46","SwingUtilities.isRightMouseButton(MouseEvent anEvent)"
"6278splitHere46","4525802splitHere46","SwingUtilities.isMiddleMouseButton(MouseEvent anEvent)"
"6279splitHere46","4525827splitHere46","Vector"
"6280splitHere46","4525827splitHere46","Vector"
"6281splitHere46","4525827splitHere46","Vector"
"6282splitHere46","4525827splitHere46","Vector"
"6283splitHere46","4525902splitHere46","name:"
"6284splitHere46","4525902splitHere46","value:"
"6285splitHere46","4525902splitHere46","placement:"
"6286splitHere46","4525951splitHere46","@Formula"
"6287splitHere46","4525951splitHere46","@Entity<newline46mondego>public class MainEntity{<newline46mondego>    @Id<newline46mondego>    private Integer ID;<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>SOMEFIELD<doubleQuotes46>)<newline46mondego>    private String SomeField;<newline46mondego><newline46mondego>    @Formula(<doubleQuotes46>(SELECT ot1.LABEL FROM OtherTable1 ot1 WHERE ot1.CODE = CODE_FK_1)<doubleQuotes46>)<newline46mondego>    private String Label1;<newline46mondego><newline46mondego>}<newline46mondego>"
"6288splitHere46","4525951splitHere46","hibernate.show_sql=true"
"6289splitHere46","4526126splitHere46","Interface"
"6290splitHere46","4526126splitHere46","Class.forName(String)"
"6291splitHere46","4526126splitHere46","OS*"
"6292splitHere46","4526126splitHere46","-source 1.5 -target 1.5"
"6293splitHere46","4526126splitHere46","OS"
"6294splitHere46","4526126splitHere46","java.awt.Desktop<newline46mondego>"
"6295splitHere46","4526126splitHere46","public interface OS {<newline46mondego>     void openFile(java.io.File file) throws java.io.IOException;<newline46mondego> }<newline46mondego><newline46mondego> public class OSFactory {<newline46mondego>     public static OS create(){<newline46mondego>         try{<newline46mondego>             Class.forName(<doubleQuotes46>java.awt.Desktop<doubleQuotes46>);<newline46mondego>             return new OSJ6();<newline46mondego>         }catch(Exception e){<newline46mondego>             //fall back<newline46mondego>             return new OSJ5();<newline46mondego>         }<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"6296splitHere46","4526220splitHere46","ASCII"
"6297splitHere46","4526220splitHere46","String s = <doubleQuotes46>\u53ef\u4ee5\u544a\u8bc9\u6211<doubleQuotes46>;<newline46mondego>byte utfString = s.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"6298splitHere46","4526220splitHere46","String s = StringEscapeUtils.unescapeHtml(<doubleQuotes46>& #21487;& #20197;& #21578;& #35785;& #25105;<doubleQuotes46>); // without spaces<newline46mondego>"
"6299splitHere46","4526365splitHere46","getTextContent()"
"6300splitHere46","4526365splitHere46","Object result = expr.evaluate(doc, XPathConstants.NODESET);<newline46mondego>NodeList nodes = (NodeList) result;<newline46mondego>for (int i = 0; i < nodes.getLength(); i++)<newline46mondego>{<newline46mondego>    Node currentItem = nodes.item(i);<newline46mondego>    String key = currentItem.getAttributes().getNamedItem(<doubleQuotes46>key<doubleQuotes46>).getNodeValue();<newline46mondego>    String value = currentItem.getTextContent();<newline46mondego><newline46mondego>    System.out.printf(<doubleQuotes46>%1s = %2s\n<doubleQuotes46>, key, value);<newline46mondego>}<newline46mondego>"
"6301splitHere46","4526365splitHere46","getTextContent()"
"6302splitHere46","4526373splitHere46","<sql:setDataSource dataSource=<doubleQuotes46>jdbc/db<doubleQuotes46> /><newline46mondego><sql:query var=<doubleQuotes46>students<doubleQuotes46>><newline46mondego>    select * from students<newline46mondego></sql:query><newline46mondego><form action=<doubleQuotes46>student/studentQueryResponse.jsp<doubleQuotes46>><newline46mondego>    <strong>Select a student:</strong><newline46mondego>    <select name=<doubleQuotes46>studentID<doubleQuotes46>><newline46mondego>        <c:forEach var=<doubleQuotes46>row<doubleQuotes46> items=<doubleQuotes46>${students.rowsByIndex}<doubleQuotes46>><newline46mondego>            <option id=<doubleQuotes46><c:out value=<doubleQuotes46>${row[0]}<doubleQuotes46>/><doubleQuotes46>><c:out value=<doubleQuotes46>${row[1]}<doubleQuotes46>/></option>            <newline46mondego>        </c:forEach><newline46mondego>    </select><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>submit<doubleQuotes46> /><newline46mondego></form><newline46mondego>"
"6303splitHere46","4526513splitHere46","mileage"
"6304splitHere46","4526513splitHere46","<c:forEach items=<doubleQuotes46>${list}<doubleQuotes46> var=<doubleQuotes46>item<doubleQuotes46>>  <newline46mondego>    <tr>  <newline46mondego>        <td align=<doubleQuotes46>center<doubleQuotes46>>  <newline46mondego>            <input type=<doubleQuotes46>checkbox<doubleQuotes46> name=<doubleQuotes46>selectedItems<doubleQuotes46>   <newline46mondego>                value=<doubleQuotes46><c:out value=<doubleQuotes46>${item.numberPlate}<doubleQuotes46>/><doubleQuotes46>/>  <newline46mondego>        </td><newline46mondego>        <td align=<doubleQuotes46>left<doubleQuotes46>><c:out value=<doubleQuotes46>${item.numberPlate}<doubleQuotes46>/></td>  <newline46mondego>        <td align=<doubleQuotes46>left<doubleQuotes46>><c:out value=<doubleQuotes46>${item.driver.fullName}<doubleQuotes46> /></td>  <newline46mondego>        <td align=<doubleQuotes46>left<doubleQuotes46>><input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>mileage_<c:out value=<doubleQuotes46>${item.numberPlate}<doubleQuotes46>/><doubleQuotes46> value=<doubleQuotes46><doubleQuotes46> /></td>  <newline46mondego>    </tr>  <newline46mondego></c:forEach><newline46mondego>"
"6305splitHere46","4526513splitHere46","String[] selectedItems = request.getParameterValues(<doubleQuotes46>selectedItems<doubleQuotes46>);<newline46mondego>for (String selectedItem : selectedItems) {<newline46mondego>    String mileage = request.getParameter(<doubleQuotes46>mileage_<doubleQuotes46> + selectedItem);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6306splitHere46","4526551splitHere46","fn:escapeXml()"
"6307splitHere46","4526551splitHere46","<%@ taglib prefix=<doubleQuotes46>fn<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/functions<doubleQuotes46> %><newline46mondego>...<newline46mondego><param name=<doubleQuotes46>FlashVars<doubleQuotes46> value=<doubleQuotes46>${fn:escapeXml(flashVars)}<doubleQuotes46> /><newline46mondego>"
"6308splitHere46","4526591splitHere46","Could not find C:\......\android-sdk-windows\platform-tools\adb.exe!<newline46mondego>"
"6309splitHere46","4526626splitHere46","boolean stop"
"6310splitHere46","4526626splitHere46","System.currentTimeMillis()"
"6311splitHere46","4526626splitHere46","performCalculation"
"6312splitHere46","4526626splitHere46","results"
"6313splitHere46","4526626splitHere46","import java.util.Random;<newline46mondego>import java.util.Stack;<newline46mondego>import java.util.Timer;<newline46mondego>import java.util.TimerTask;<newline46mondego>import java.util.concurrent.atomic.AtomicInteger;<newline46mondego><newline46mondego>public class Main<newline46mondego>{<newline46mondego>    private static int CALCULATION_THRESHOLD = 2000;<newline46mondego><newline46mondego>    private static Stack<Object> results = new Stack<Object>();<newline46mondego><newline46mondego>    private static Object resultTrigger = new Object();<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        Timer calculationTimer = new Timer(true);<newline46mondego>        calculationTimer.schedule(new TimerTask() {<newline46mondego>            @Override<newline46mondego>            public void run()<newline46mondego>            {<newline46mondego>                Thread calculationThread = new Thread() {<newline46mondego>                    public void run() {<newline46mondego>                        Object result = performCalculation();<newline46mondego>                        results.push(result);<newline46mondego>                        synchronized(resultTrigger) {<newline46mondego>                            resultTrigger.notifyAll();<newline46mondego>                        }       <newline46mondego>                    }<newline46mondego>                };<newline46mondego>                calculationThread.start();<newline46mondego>            }<newline46mondego>        }, CALCULATION_THRESHOLD, CALCULATION_THRESHOLD);<newline46mondego><newline46mondego>        synchronized(resultTrigger) {<newline46mondego>            if (results.isEmpty()) {<newline46mondego>                // This is bad as it will never end if you don't<newline46mondego>                // get a result, add a timeout here. <newline46mondego>                try { resultTrigger.wait(); }<newline46mondego>                catch (InterruptedException ex) {}<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Get the next result<newline46mondego>        Object result = results.pop();<newline46mondego><newline46mondego>        System.out.println (<doubleQuotes46>Latest result is : <doubleQuotes46> + result);<newline46mondego><newline46mondego>        // Do something with the remaining results or throw <newline46mondego>        // them away<newline46mondego>        results.clear();<newline46mondego>    }<newline46mondego><newline46mondego>    private static AtomicInteger counter = new AtomicInteger();<newline46mondego><newline46mondego>    // This is the method we are assuming can't be<newline46mondego>    // changed to check for a stop flag.<newline46mondego>    public static Object performCalculation()<newline46mondego>    {<newline46mondego>        int calcID = counter.addAndGet(1);<newline46mondego>        System.out.println (<doubleQuotes46>Calculation <doubleQuotes46> + calcID + <doubleQuotes46> is running.<doubleQuotes46>);<newline46mondego>        Random randomGenerator = new Random();<newline46mondego>        int sleep = randomGenerator.nextInt(10000);<newline46mondego>        // Ensure we sleep for at least 2 seconds<newline46mondego>        try { Thread.sleep(sleep + 2000);   }<newline46mondego>        catch (InterruptedException ex) {}<newline46mondego>        return String.valueOf(counter.get());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6314splitHere46","4526699splitHere46","int doSomething(char* aString ,byte* aByteArray, long* arraySize)<newline46mondego>"
"6315splitHere46","4526699splitHere46","public class LibAWrapper{<newline46mondego>  //tell JNA to link with native library<newline46mondego>  Native.register(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>  //Type mapping in java <newline46mondego>  public native int doSomething(String aString ,byte[] aByteArray, NativeLongByReference arraySize)<newline46mondego>}<newline46mondego>"
"6316splitHere46","4526699splitHere46","new LibAWrapper().doSomething(<doubleQuotes46>Hello World<doubleQuotes46>,....<newline46mondego>"
"6317splitHere46","4526845splitHere46","minSdkVersion"
"6318splitHere46","4526845splitHere46","targetSdkVersion"
"6319splitHere46","4526950splitHere46","-Xprint:typer"
"6320splitHere46","4526950splitHere46","scala -Xprint:typer -e 'case class Foo(a: String, b: Int)'<newline46mondego>"
"6321splitHere46","4526950splitHere46","override def hashCode(): Int = ScalaRunTime.this._hashCode(Foo.this);<newline46mondego>override def toString(): String = ScalaRunTime.this._toString(Foo.this);<newline46mondego>override def equals(x$1: Any): Boolean = Foo.this.eq(x$1).||(x$1 match {<newline46mondego>  case (a: String,b: Int)this.Foo((a$1 @ _), (b$1 @ _)) if a$1.==(a).&&(b$1.==(b)) => x$1.asInstanceOf[this.Foo].canEqual(Foo.this)<newline46mondego>  case _ => false<newline46mondego>});<newline46mondego>"
"6322splitHere46","4526950splitHere46","def _hashCode(x: Product): Int = {<newline46mondego>  var code = x.productPrefix.hashCode()<newline46mondego>  val arr =  x.productArity<newline46mondego>  var i = 0<newline46mondego>  while (i < arr) {<newline46mondego>    val elem = x.productElement(i)<newline46mondego>    code = code * 41 + (if (elem == null) 0 else elem.hashCode())<newline46mondego>    i += 1<newline46mondego>  }<newline46mondego>  code<newline46mondego>}<newline46mondego>"
"6323splitHere46","4526950splitHere46","case that: Foo => this.a == that.a && this.b == that.b<newline46mondego>"
"6324splitHere46","4527126splitHere46","<f:verbatim>"
"6325splitHere46","4527126splitHere46","<p>Hello</p><newline46mondego><h:inputText /><newline46mondego><p>World</p><newline46mondego><h:outputText value=<doubleQuotes46>outputtext<doubleQuotes46> /><newline46mondego><p>This is weird</p><newline46mondego>"
"6326splitHere46","4527126splitHere46","<p>Hello</p><newline46mondego><p>World</p><newline46mondego><p>This is weird</p><newline46mondego><input type=<doubleQuotes46>text<doubleQuotes46> /><newline46mondego>outputtext    <newline46mondego>"
"6327splitHere46","4527126splitHere46","<f:verbatim>"
"6328splitHere46","4527126splitHere46","<f:verbatim><p>Hello</p></f:verbatim><newline46mondego><h:inputText /><newline46mondego><f:verbatim><p>World</p></f:verbatim><newline46mondego><h:outputText value=<doubleQuotes46>outputtext<doubleQuotes46> /><newline46mondego><f:verbatim><p>This is weird</p></f:verbatim><newline46mondego>"
"6329splitHere46","4527126splitHere46","<f:verbatim>"
"6330splitHere46","4527143splitHere46","<activity android:windowSoftInputMode=<doubleQuotes46>adjustPan<doubleQuotes46> ...><newline46mondego>"
"6331splitHere46","4527171splitHere46","System.out.println(..)"
"6332splitHere46","4527171splitHere46","log.debug(..)"
"6333splitHere46","4527266splitHere46","<doubleQuotes46>abc.*def<doubleQuotes46>"
"6334splitHere46","4527270splitHere46","StockInfo"
"6335splitHere46","4527270splitHere46","AddDiaryData"
"6336splitHere46","4527304splitHere46","cent = 100 % total;"
"6337splitHere46","4527304splitHere46","total =  (int) quarters + (int) dimes + (int) nickels + (int) pennies;<newline46mondego>"
"6338splitHere46","4527304splitHere46","cent = 100 % total;"
"6339splitHere46","4527351splitHere46","log4j.logger.my.pkg=info<newline46mondego>log4j.logger.my.pkg.ab.class1=debug<newline46mondego>"
"6340splitHere46","4527424splitHere46",".matchCount()"
"6341splitHere46","4527424splitHere46","public static int matchCount(String s, String find) {<newline46mondego>     String[] split = s.split(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>     int count = 0;<newline46mondego><newline46mondego>     for(int i=0; i<split.length; i++){<newline46mondego>        if(split[i].equals(find)){<newline46mondego>           count++;<newline46mondego>        }<newline46mondego>     }<newline46mondego>     return count;<newline46mondego> }<newline46mondego><newline46mondego><newline46mondego>String s = <doubleQuotes46>stack is stack<doubleQuotes46>;<newline46mondego>System.out.println(matchCount(s, <doubleQuotes46>stack<doubleQuotes46>)); // 2<newline46mondego>"
"6342splitHere46","4527644splitHere46","import android.view.View.OnClickListener;<newline46mondego>"
"6343splitHere46","4527707splitHere46","new Intent(this, ContactWidget.class);<newline46mondego>"
"6344splitHere46","4527707splitHere46","new Intent(ContactWidget.this, ContactWidget.class);<newline46mondego>"
"6345splitHere46","4527707splitHere46","this"
"6346splitHere46","4527707splitHere46","OnClickListener"
"6347splitHere46","4527707splitHere46","Intent's"
"6348splitHere46","4527707splitHere46","Context"
"6349splitHere46","4527707splitHere46","ContactWidget.this"
"6350splitHere46","4527738splitHere46","DIV"
"6351splitHere46","4527738splitHere46","OBJ123"
"6352splitHere46","4527738splitHere46","NodeList nl = parser.parse(null); // you can also filter here<newline46mondego><newline46mondego>NodeList divs = nl.extractAllNodesThatMatch(<newline46mondego>  new AndFilter(new TagNameFilter(<doubleQuotes46>DIV<doubleQuotes46>), <newline46mondego>    new HasAttributeFilter(<doubleQuotes46>id<doubleQuotes46>, <doubleQuotes46>OBJ123<doubleQuotes46>)));<newline46mondego><newline46mondego>if( divs.size() > 0 ) {<newline46mondego>  Tag div = divs.elementAt(0);<newline46mondego>  String text = div.getText(); // this is the text of the div<newline46mondego>}<newline46mondego>"
"6353splitHere46","4527738splitHere46","// make some sort of constants for all the positions<newline46mondego>const int OPEN_PRICE = 0;<newline46mondego>const int HIGH_PRICE = 1;<newline46mondego>const int LOW_PRICE = 2;<newline46mondego>// ....<newline46mondego><newline46mondego>NodeList nl = parser.parse(null); // you can also filter here<newline46mondego><newline46mondego>NodeList values = nl.extractAllNodesThatMatch(<newline46mondego>  new AndFilter(new TagNameFilter(<doubleQuotes46>TD<doubleQuotes46>), <newline46mondego>    new HasAttributeFilter(<doubleQuotes46>class<doubleQuotes46>, <doubleQuotes46>t1<doubleQuotes46>)));<newline46mondego><newline46mondego>if( values.size() > 0 ) {<newline46mondego>  Tag openPrice = values.elementAt(OPEN_PRICE);<newline46mondego>  String openPriceValue = openPrice.getText(); // this is the text of the div<newline46mondego>}<newline46mondego>"
"6354splitHere46","4527763splitHere46","public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        // A ViewHolder keeps references to children views to avoid unneccessary calls<newline46mondego>        // to findViewById() on each row.<newline46mondego>        ViewHolder holder;<newline46mondego><newline46mondego>        // When convertView is not null, we can reuse it directly, there is no need<newline46mondego>        // to reinflate it. We only inflate a new View when the convertView supplied<newline46mondego>        // by ListView is null.<newline46mondego>        if (convertView == null) {<newline46mondego>            convertView = mInflater.inflate(R.layout.list_item_icon_text, null);<newline46mondego><newline46mondego>            // Creates a ViewHolder and store references to the two children views<newline46mondego>            // we want to bind data to.<newline46mondego>            holder = new ViewHolder();<newline46mondego>            holder.text = (TextView) convertView.findViewById(R.id.text);<newline46mondego>            holder.icon = (ImageView) convertView.findViewById(R.id.icon);<newline46mondego><newline46mondego>            convertView.setTag(holder);<newline46mondego>        } else {<newline46mondego>            // Get the ViewHolder back to get fast access to the TextView<newline46mondego>            // and the ImageView.<newline46mondego>            holder = (ViewHolder) convertView.getTag();<newline46mondego>        }<newline46mondego><newline46mondego>        // Bind the data efficiently with the holder.<newline46mondego>        holder.text.setText(DATA[position]);<newline46mondego>        holder.icon.setImageBitmap((position & 1) == 1 ? mIcon1 : mIcon2);<newline46mondego><newline46mondego>        return convertView;<newline46mondego>    }<newline46mondego><newline46mondego>    static class ViewHolder {<newline46mondego>        TextView text;<newline46mondego>        ImageView icon;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6355splitHere46","4527792splitHere46","logcat"
"6356splitHere46","4527888splitHere46","String text = FileUtils.readFileToString(file);<newline46mondego>"
"6357splitHere46","4527889splitHere46","public void characters(char[] ch, int start, int length)<newline46mondego>            throws SAXException<newline46mondego>    {<newline46mondego>              if(in_ThisTag){<newline46mondego>                     myobj.setName(new String(ch,start,length))<newline46mondego>              }<newline46mondego>    }<newline46mondego>"
"6358splitHere46","4527889splitHere46","class"
"6359splitHere46","4527889splitHere46","<tag> Lorem Ipsum...really long sentence...</tag>"
"6360splitHere46","4527889splitHere46","characters"
"6361splitHere46","4527889splitHere46","set"
"6362splitHere46","4527889splitHere46","endElement"
"6363splitHere46","4527889splitHere46","@Override<newline46mondego>public void endElement(String uri, String localName, String qName)<newline46mondego>        throws SAXException {<newline46mondego><newline46mondego>    currentElement = false;<newline46mondego><newline46mondego>    /** set value */<newline46mondego>    if (localName.equalsIgnoreCase(<doubleQuotes46>tag<doubleQuotes46>))<newline46mondego>            {<newline46mondego>        sitesList.setName(currentValue);<newline46mondego>                    currentValue = <doubleQuotes46><doubleQuotes46>; //reset the currentValue<newline46mondego>            }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void characters(char[] ch, int start, int length)<newline46mondego>        throws SAXException {<newline46mondego><newline46mondego>    if (in_Tag) {<newline46mondego>        currentValue += new String(ch, start, length); //keep appending string, don't set it right here....maybe there's more to come.<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6364splitHere46","4527889splitHere46","StringBuilder"
"6365splitHere46","4528059splitHere46","import java.util.HashMap;<newline46mondego>import java.util.Iterator;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class StackOverflow {<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>public static void main(String[] args) {<newline46mondego>    Scanner scanner = new Scanner(System.in);<newline46mondego>    Map<String, Integer> countedWords = new HashMap<String, Integer>();<newline46mondego>    int numberOfWords = 0;<newline46mondego>    String word = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    while (true) {<newline46mondego>        word = scanner.nextLine();<newline46mondego>        if (word.equalsIgnoreCase(<doubleQuotes46>-1<doubleQuotes46>)) {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>        if (countedWords.containsKey(word)) {<newline46mondego>            numberOfWords = countedWords.get(word);<newline46mondego>            countedWords.put(word, ++numberOfWords);<newline46mondego>        } else {<newline46mondego>            countedWords.put(word, 1);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    Iterator it = countedWords.entrySet().iterator();<newline46mondego>    while (it.hasNext()) {<newline46mondego>        Map.Entry pairs = (Map.Entry)it.next();<newline46mondego>        System.out.println(pairs.getKey() + <doubleQuotes46> = <doubleQuotes46> + pairs.getValue());<newline46mondego>    }<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6366splitHere46","4528094splitHere46","final static String DATE_FORMAT = <doubleQuotes46>dd-MM-yyyy<doubleQuotes46>;<newline46mondego><newline46mondego>public static boolean isDateValid(String date) <newline46mondego>{<newline46mondego>        try {<newline46mondego>            DateFormat df = new SimpleDateFormat(DATE_FORMAT);<newline46mondego>            df.setLenient(false);<newline46mondego>            df.parse(date);<newline46mondego>            return true;<newline46mondego>        } catch (ParseException e) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"6367splitHere46","4528112splitHere46","import java.io.IOException;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Collection;<newline46mondego>import jdepend.framework.DependencyConstraint;<newline46mondego>import jdepend.framework.JDepend;<newline46mondego>import jdepend.framework.JavaPackage;<newline46mondego>import junit.framework.TestCase;<newline46mondego><newline46mondego>public class DependencyTest extends TestCase {<newline46mondego><newline46mondego>    private JDepend jdepend;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void setUp() throws IOException {<newline46mondego>        jdepend = new JDepend();<newline46mondego>        jdepend.addDirectory(<doubleQuotes46>build/classes/com<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public void testDomainDependsOnInfastructure_ShouldBeTrue() {<newline46mondego>        DependencyConstraint constraint = new DependencyConstraint();<newline46mondego><newline46mondego>        JavaPackage distribution = constraint.addPackage(<doubleQuotes46>com.distribution<doubleQuotes46>);<newline46mondego>        JavaPackage domainPackage = constraint.addPackage(<doubleQuotes46>com.domain<doubleQuotes46>);<newline46mondego>        JavaPackage infastructurePackage = constraint.addPackage(<doubleQuotes46>com.infrastructure<doubleQuotes46>);<newline46mondego><newline46mondego>        distribution.dependsUpon(domainPackage);<newline46mondego>        domainPackage.dependsUpon(infastructurePackage);<newline46mondego>        jdepend.analyze();<newline46mondego><newline46mondego>        Collection<JavaPackage> actual = new ArrayList<JavaPackage>();<newline46mondego>        actual.add(domainPackage);<newline46mondego>        actual.add(distribution);<newline46mondego>        actual.add(infastructurePackage);<newline46mondego><newline46mondego>        assertEquals(<doubleQuotes46>Domain doesn't depend on Infrastructure layer<doubleQuotes46>, true, constraint.match(actual));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6368splitHere46","4528129splitHere46","count"
"6369splitHere46","4528129splitHere46","count"
"6370splitHere46","4528129splitHere46","i"
"6371splitHere46","4528129splitHere46","j"
"6372splitHere46","4528129splitHere46","j - i + 1"
"6373splitHere46","4528129splitHere46","maxcount"
"6374splitHere46","4528129splitHere46","maxspan = Math.max(maxspan, count);"
"6375splitHere46","4528129splitHere46","int number = nums[i];"
"6376splitHere46","4528129splitHere46","number"
"6377splitHere46","4528129splitHere46","+1"
"6378splitHere46","4528129splitHere46","return"
"6379splitHere46","4528129splitHere46","maxspan"
"6380splitHere46","4528432splitHere46","<xsl:stylesheet version=<doubleQuotes46>1.0<doubleQuotes46><newline46mondego> xmlns:xsl=<doubleQuotes46>http://www.w3.org/1999/XSL/Transform<doubleQuotes46>><newline46mondego> <xsl:output omit-xml-declaration=<doubleQuotes46>yes<doubleQuotes46> indent=<doubleQuotes46>yes<doubleQuotes46>/><newline46mondego> <xsl:strip-space elements=<doubleQuotes46>*<doubleQuotes46>/><newline46mondego><newline46mondego> <xsl:param name=<doubleQuotes46>pNewLineColor<doubleQuotes46> select=<doubleQuotes46>123<doubleQuotes46>/><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>node()|@*<doubleQuotes46>><newline46mondego>  <xsl:copy><newline46mondego>   <xsl:apply-templates select=<doubleQuotes46>node()|@*<doubleQuotes46>/><newline46mondego>  </xsl:copy><newline46mondego> </xsl:template><newline46mondego><newline46mondego> <xsl:template match=<doubleQuotes46>@F_LINE_COLOR<doubleQuotes46>><newline46mondego>  <xsl:attribute name=<doubleQuotes46>{name()}<doubleQuotes46>><newline46mondego>    <xsl:value-of select=<doubleQuotes46>$pNewLineColor<doubleQuotes46>/><newline46mondego>  </xsl:attribute><newline46mondego> </xsl:template><newline46mondego></xsl:stylesheet><newline46mondego>"
"6381splitHere46","4528432splitHere46","<MineX STATE=<doubleQuotes46>add<doubleQuotes46>><newline46mondego>    <Desc F_CREATOR=<doubleQuotes46>admin<doubleQuotes46><newline46mondego>          F_ENTRYDATE=<doubleQuotes46>2010-12-24<doubleQuotes46><newline46mondego>          F_HEIGHT=<doubleQuotes46>0.875<doubleQuotes46><newline46mondego>          F_ID=<doubleQuotes46>1<doubleQuotes46><newline46mondego>          F_LEFT=<doubleQuotes46>1.15625<doubleQuotes46><newline46mondego>          F_LINE_COLOR=<doubleQuotes46>255<doubleQuotes46><newline46mondego>          F_FORECOLOR=<doubleQuotes46>0<doubleQuotes46>><newline46mondego>        <F_CUSTOM_BYTES></F_CUSTOM_BYTES><newline46mondego>    </Desc><newline46mondego></MineX><newline46mondego>"
"6382splitHere46","4528432splitHere46","<MineX STATE=<doubleQuotes46>add<doubleQuotes46>><newline46mondego>    <Desc F_CREATOR=<doubleQuotes46>admin<doubleQuotes46><newline46mondego>          F_ENTRYDATE=<doubleQuotes46>2010-12-24<doubleQuotes46><newline46mondego>          F_HEIGHT=<doubleQuotes46>0.875<doubleQuotes46><newline46mondego>          F_ID=<doubleQuotes46>1<doubleQuotes46><newline46mondego>          F_LEFT=<doubleQuotes46>1.15625<doubleQuotes46><newline46mondego>          F_LINE_COLOR=<doubleQuotes46>123<doubleQuotes46><newline46mondego>          F_FORECOLOR=<doubleQuotes46>0<doubleQuotes46>><newline46mondego>        <F_CUSTOM_BYTES></F_CUSTOM_BYTES><newline46mondego>    </Desc><newline46mondego></MineX><newline46mondego>"
"6383splitHere46","4528565splitHere46","public class CPS {<newline46mondego><newline46mondego>public static class Thunk {<newline46mondego>    final Object r;<newline46mondego>    final boolean isDelayed;<newline46mondego>    public Object force() {<newline46mondego>        Thunk t = this;<newline46mondego>        while (t.isDelayed)<newline46mondego>            t = t.compute();<newline46mondego>        return t.r;<newline46mondego>    }<newline46mondego>    public Thunk compute() {<newline46mondego>        return this;<newline46mondego>    }<newline46mondego>    public Thunk(Object answer) {<newline46mondego>        isDelayed = false;<newline46mondego>        r = answer;<newline46mondego>    }<newline46mondego>    public Thunk() {<newline46mondego>        isDelayed = true;<newline46mondego>        r = null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static class Continuation {<newline46mondego>    public Thunk apply(Object result) {<newline46mondego>        return new Thunk(result);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static Thunk even(final int n, final Continuation c) {<newline46mondego>    try {<newline46mondego>        if (n == 0) return c.apply(true);<newline46mondego>        else return odd(n-1, c);<newline46mondego>    } catch (StackOverflowError x) {<newline46mondego>        return new Thunk() {<newline46mondego>            public Thunk compute() {<newline46mondego>                return even(n, c);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static Thunk odd(final int n, final Continuation c) {<newline46mondego>    try {<newline46mondego>        if (n == 0) return c.apply(false);<newline46mondego>        else return even(n-1, c);<newline46mondego>    } catch (StackOverflowError x) {<newline46mondego>        return new Thunk() {<newline46mondego>            public Thunk compute() {<newline46mondego>                return odd(n, c);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public static void main(String args[]) {<newline46mondego>    long time1 = System.currentTimeMillis();<newline46mondego>    Object b =  even(100000000, new Continuation()).force();<newline46mondego>    long time2 = System.currentTimeMillis();<newline46mondego>    System.out.println(<doubleQuotes46>time = <doubleQuotes46>+(time2-time1)+<doubleQuotes46>, result = <doubleQuotes46>+b);<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6384splitHere46","4528565splitHere46","public class CPS2 {<newline46mondego><newline46mondego>public abstract static class Unwind extends RuntimeException {<newline46mondego>    public abstract Object compute();<newline46mondego>    public Object force() {<newline46mondego>        Unwind w = this;<newline46mondego>        do {<newline46mondego>            try {<newline46mondego>                return w.compute();<newline46mondego>            } catch (Unwind unwind) {<newline46mondego>                w = unwind;<newline46mondego>            }<newline46mondego>        } while (true);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static class Continuation {<newline46mondego>    public Object apply(Object result) {<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static Object even(final int n, final Continuation c) {<newline46mondego>    try {<newline46mondego>        if (n == 0) return c.apply(true);<newline46mondego>        else return odd(n-1, c);<newline46mondego>    } catch (StackOverflowError x) {<newline46mondego>        throw new Unwind()  {<newline46mondego>            public Object compute() {<newline46mondego>                return even(n, c);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static Object odd(final int n, final Continuation c) {<newline46mondego>    try {<newline46mondego>        if (n == 0) return c.apply(false);<newline46mondego>        else return even(n-1, c);<newline46mondego>    } catch (StackOverflowError x) {<newline46mondego>        return new Unwind() {<newline46mondego>            public Object compute() {<newline46mondego>                return odd(n, c);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public static void main(String args[]) {<newline46mondego>    long time1 = System.currentTimeMillis();<newline46mondego>    Unwind w = new Unwind() {<newline46mondego>        public Object compute() {<newline46mondego>            return even(100000000, new Continuation());<newline46mondego>        }<newline46mondego>    };<newline46mondego>    Object b = w.force();<newline46mondego>    long time2 = System.currentTimeMillis();<newline46mondego>    System.out.println(<doubleQuotes46>time = <doubleQuotes46>+(time2-time1)+<doubleQuotes46>, result = <doubleQuotes46>+b);<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6385splitHere46","4528565splitHere46","public class CPS3 {<newline46mondego><newline46mondego>public static class Thunk {<newline46mondego>    final Object r;<newline46mondego>    final boolean isDelayed;<newline46mondego>    public Object force() {<newline46mondego>        Thunk t = this;<newline46mondego>        while (t.isDelayed)<newline46mondego>            t = t.compute();<newline46mondego>        return t.r;<newline46mondego>    }<newline46mondego>    public Thunk compute() {<newline46mondego>        return this;<newline46mondego>    }<newline46mondego>    public Thunk(Object answer) {<newline46mondego>        isDelayed = false;<newline46mondego>        r = answer;<newline46mondego>    }<newline46mondego>    public Thunk() {<newline46mondego>        isDelayed = true;<newline46mondego>        r = null;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static class Continuation {<newline46mondego>    public Thunk apply(Object result) {<newline46mondego>        return new Thunk(result);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static Thunk even(final int n, final Continuation c, final int depth) {<newline46mondego>    if (depth >= 1000) {<newline46mondego>        return new Thunk() {<newline46mondego>            public Thunk compute() {<newline46mondego>                return even(n, c, 0);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>    if (n == 0) return c.apply(true);<newline46mondego>    else return odd(n-1, c, depth+1);<newline46mondego>}<newline46mondego><newline46mondego>public static Thunk odd(final int n, final Continuation c, final int depth) {<newline46mondego>    if (depth >= 1000) {<newline46mondego>        return new Thunk() {<newline46mondego>            public Thunk compute() {<newline46mondego>                return odd(n, c, 0);<newline46mondego>            }<newline46mondego>        };<newline46mondego>    }<newline46mondego>    if (n == 0) return c.apply(false);<newline46mondego>    else return even(n-1, c, depth+1);<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public static void main(String args[]) {<newline46mondego>    long time1 = System.currentTimeMillis();<newline46mondego>    Object b =  even(100000000, new Continuation(), 0).force();<newline46mondego>    long time2 = System.currentTimeMillis();<newline46mondego>    System.out.println(<doubleQuotes46>time = <doubleQuotes46>+(time2-time1)+<doubleQuotes46>, result = <doubleQuotes46>+b);<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6386splitHere46","4528589splitHere46","/usr/lib/jvm/java-6-sun-1.6.0_21/bin"
"6387splitHere46","4528589splitHere46","PATH"
"6388splitHere46","4528589splitHere46","javac"
"6389splitHere46","4528604splitHere46","SelectionAction"
"6390splitHere46","4528604splitHere46","import java.awt.*;<newline46mondego>import java.awt.event.ActionEvent;<newline46mondego>import javax.swing.*;<newline46mondego>import javax.swing.DefaultListSelectionModel;<newline46mondego>import javax.swing.table.DefaultTableModel;<newline46mondego><newline46mondego>/** @see http://stackoverflow.com/questions/4526779 */<newline46mondego>public class CheckABunch extends JPanel {<newline46mondego><newline46mondego>    private static final int CHECK_COL = 1;<newline46mondego>    private static final Object[][] DATA = {<newline46mondego>        {<doubleQuotes46>One<doubleQuotes46>, Boolean.TRUE}, {<doubleQuotes46>Two<doubleQuotes46>, Boolean.FALSE},<newline46mondego>        {<doubleQuotes46>Three<doubleQuotes46>, Boolean.TRUE}, {<doubleQuotes46>Four<doubleQuotes46>, Boolean.FALSE},<newline46mondego>        {<doubleQuotes46>Five<doubleQuotes46>, Boolean.TRUE}, {<doubleQuotes46>Six<doubleQuotes46>, Boolean.FALSE},<newline46mondego>        {<doubleQuotes46>Seven<doubleQuotes46>, Boolean.TRUE}, {<doubleQuotes46>Eight<doubleQuotes46>, Boolean.FALSE},<newline46mondego>        {<doubleQuotes46>Nine<doubleQuotes46>, Boolean.TRUE}, {<doubleQuotes46>Ten<doubleQuotes46>, Boolean.FALSE}};<newline46mondego>    private static final String[] COLUMNS = {<doubleQuotes46>Number<doubleQuotes46>, <doubleQuotes46>CheckBox<doubleQuotes46>};<newline46mondego>    private DataModel dataModel = new DataModel(DATA, COLUMNS);<newline46mondego>    private JTable table = new JTable(dataModel);<newline46mondego>    private DefaultListSelectionModel selectionModel;<newline46mondego><newline46mondego>    public CheckABunch() {<newline46mondego>        super(new BorderLayout());<newline46mondego>        this.add(new JScrollPane(table));<newline46mondego>        this.add(new ControlPanel(), BorderLayout.SOUTH);<newline46mondego>        table.setPreferredScrollableViewportSize(new Dimension(250, 175));<newline46mondego>        selectionModel = (DefaultListSelectionModel) table.getSelectionModel();<newline46mondego>    }<newline46mondego><newline46mondego>    private class DataModel extends DefaultTableModel {<newline46mondego><newline46mondego>        public DataModel(Object[][] data, Object[] columnNames) {<newline46mondego>            super(data, columnNames);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Class<?> getColumnClass(int columnIndex) {<newline46mondego>            if (columnIndex == CHECK_COL) {<newline46mondego>                return getValueAt(0, CHECK_COL).getClass();<newline46mondego>            }<newline46mondego>            return super.getColumnClass(columnIndex);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean isCellEditable(int row, int column) {<newline46mondego>            return column == CHECK_COL;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private class ControlPanel extends JPanel {<newline46mondego><newline46mondego>        public ControlPanel() {<newline46mondego>            this.add(new JLabel(<doubleQuotes46>Selection:<doubleQuotes46>));<newline46mondego>            this.add(new JButton(new SelectionAction(<doubleQuotes46>Clear<doubleQuotes46>, false)));<newline46mondego>            this.add(new JButton(new SelectionAction(<doubleQuotes46>Check<doubleQuotes46>, true)));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private class SelectionAction extends AbstractAction {<newline46mondego><newline46mondego>        boolean value;<newline46mondego><newline46mondego>        public SelectionAction(String name, boolean value) {<newline46mondego>            super(name);<newline46mondego>            this.value = value;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            for (int i = 0; i < dataModel.getRowCount(); i++) {<newline46mondego>                if (selectionModel.isSelectedIndex(i)) {<newline46mondego>                    dataModel.setValueAt(value, i, CHECK_COL);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static void createAndShowUI() {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>CheckABunch<doubleQuotes46>);<newline46mondego>        frame.add(new CheckABunch());<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        java.awt.EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                createAndShowUI();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6391splitHere46","4528644splitHere46","User user = userDAO.find(username, password);<newline46mondego>if (user != null) {<newline46mondego>    request.getSession().setAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>    // Display home page.<newline46mondego>} else {<newline46mondego>    // Display login form with error message.<newline46mondego>}<newline46mondego>"
"6392splitHere46","4528644splitHere46","${user}"
"6393splitHere46","4528644splitHere46","<p>Welcome back, <c:out value=<doubleQuotes46>${user.fullname}<doubleQuotes46> /></p><newline46mondego>"
"6394splitHere46","4528644splitHere46","Filter"
"6395splitHere46","4528644splitHere46","SELECT id FROM Users WHERE username=? AND password=MD5(?)<newline46mondego>"
"6396splitHere46","4528733splitHere46","HEAD"
"6397splitHere46","4528733splitHere46","Accept-Ranges: bytes"
"6398splitHere46","4528733splitHere46","Range"
"6399splitHere46","4528733splitHere46","URLConnection"
"6400splitHere46","4528733splitHere46","ExecutorService"
"6401splitHere46","4528733splitHere46","URLConnection"
"6402splitHere46","4529038splitHere46","URL url = this.getClass().getClassLoader().getResource(<doubleQuotes46>images/a.png<doubleQuotes46>);<newline46mondego>ImageIcon icon = new ImageIcon(url);<newline46mondego>"
"6403splitHere46","4529038splitHere46","getClassLoader()"
"6404splitHere46","4529268splitHere46","public class OrderItem {<newline46mondego>    private int theOrderNum;<newline46mondego><newline46mondego>    OrderItem(int num) {<newline46mondego>        theOrderNum = num;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getOrderNum() {<newline46mondego>        return theOrderNum;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6405splitHere46","4529268splitHere46","public void addToConveyorBelt(int orderNum) {<newline46mondego>    OrderItem oi = new OrderItem(orderNum);<newline46mondego>    conveyorBelt.add(oi);<newline46mondego>}<newline46mondego>"
"6406splitHere46","4529356splitHere46","class Conv {<newline46mondego>  def b(i: Int) = i.toByte<newline46mondego>  def B(i: Int) = i.asInstanceOf[Byte]<newline46mondego>  def s(i: Int) = i.toShort<newline46mondego>  def S(i: Int) = i.asInstanceOf[Short]<newline46mondego>  def f(i: Int) = i.toFloat <newline46mondego>  def F(i: Int) = i.asInstanceOf[Float]  <newline46mondego>  def d(i: Int) = i.toDouble<newline46mondego>  def D(i: Int) = i.asInstanceOf[Double]<newline46mondego>}<newline46mondego>"
"6407splitHere46","4529356splitHere46","javap -c Conv"
"6408splitHere46","4529356splitHere46","public byte b(int);<newline46mondego>  Code:<newline46mondego>   0:   iload_1<newline46mondego>   1:   i2b<newline46mondego>   2:   ireturn<newline46mondego><newline46mondego>public byte B(int);<newline46mondego>  Code:<newline46mondego>   0:   iload_1<newline46mondego>   1:   i2b<newline46mondego>   2:   ireturn<newline46mondego><newline46mondego>...<newline46mondego>"
"6409splitHere46","4529400splitHere46","paint()"
"6410splitHere46","4529400splitHere46","Frame"
"6411splitHere46","4529400splitHere46","actionPerformed()"
"6412splitHere46","4529557splitHere46","make core snod<newline46mondego>"
"6413splitHere46","4529557splitHere46","LOCAL_PACKAGE_NAME"
"6414splitHere46","4529557splitHere46","LOCAL_MODULE"
"6415splitHere46","4529557splitHere46","LOCAL_MODULE := core"
"6416splitHere46","4529598splitHere46","ObjectOutputStream"
"6417splitHere46","4529598splitHere46","Serializable"
"6418splitHere46","4529598splitHere46","Externalizable"
"6419splitHere46","4529598splitHere46","Serializable"
"6420splitHere46","4529598splitHere46","Serializable"
"6421splitHere46","4529768splitHere46","entityManager.refresh(yourEntity);  <newline46mondego>"
"6422splitHere46","4530209splitHere46","IRequestTargetUrlCodingStrategy"
"6423splitHere46","4530209splitHere46","MixedParamHybridUrlCodingStrategy"
"6424splitHere46","4530209splitHere46","mypage/param1/value1/param2/value2"
"6425splitHere46","4530209splitHere46","mypage?param3=value3"
"6426splitHere46","4530260splitHere46","Dictionary"
"6427splitHere46","4530260splitHere46","Dictionary"
"6428splitHere46","4530260splitHere46","HashTable"
"6429splitHere46","4530291splitHere46","DriverManagerDataSource"
"6430splitHere46","4530291splitHere46","context.refresh();<newline46mondego>DriverManagerDataSource databaseSource = (DriverManagerDataSource)context.getBean(<doubleQuotes46>dataSource<doubleQuotes46>);<newline46mondego>databaseSource.getUsername();<newline46mondego>"
"6431splitHere46","4530291splitHere46","URI a = getClass().getResource(<doubleQuotes46>/com/smartcall/bundle/database.properties<doubleQuotes46>).toURI();<newline46mondego>    File file = new File(a);<newline46mondego>"
"6432splitHere46","4530358splitHere46","m1"
"6433splitHere46","4530358splitHere46","C"
"6434splitHere46","4530358splitHere46","m2"
"6435splitHere46","4530358splitHere46","A"
"6436splitHere46","4530358splitHere46","C"
"6437splitHere46","4530358splitHere46","A"
"6438splitHere46","4530358splitHere46","m1"
"6439splitHere46","4530358splitHere46","m2"
"6440splitHere46","4530358splitHere46","m2"
"6441splitHere46","4530358splitHere46","C"
"6442splitHere46","4530358splitHere46","m1"
"6443splitHere46","4530358splitHere46","m3"
"6444splitHere46","4530358splitHere46","m3"
"6445splitHere46","4530358splitHere46","m1"
"6446splitHere46","4530358splitHere46","m3"
"6447splitHere46","4530358splitHere46","m2"
"6448splitHere46","4530358splitHere46","m3"
"6449splitHere46","4530358splitHere46","m2"
"6450splitHere46","4530358splitHere46","callme"
"6451splitHere46","4530358splitHere46","CallMeCode"
"6452splitHere46","4530358splitHere46","CallmeIfc"
"6453splitHere46","4530382splitHere46","instanceof"
"6454splitHere46","4530382splitHere46","instanceof"
"6455splitHere46","4530382splitHere46","if (car instanceof Ford) {<newline46mondego>    // You can safely cast to Ford *within* this block<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego>"
"6456splitHere46","4530382splitHere46","printMessage"
"6457splitHere46","4530382splitHere46","Car"
"6458splitHere46","4530382splitHere46","instanceof"
"6459splitHere46","4530465splitHere46","substring"
"6460splitHere46","4530465splitHere46","indexOf"
"6461splitHere46","4530465splitHere46","start +  len"
"6462splitHere46","4530465splitHere46","start + 1"
"6463splitHere46","4530535splitHere46","toString"
"6464splitHere46","4530535splitHere46","toString"
"6465splitHere46","4530535splitHere46","Person"
"6466splitHere46","4530535splitHere46","@Override<newline46mondego>public String toString() {<newline46mondego>    return <doubleQuotes46>Name: <doubleQuotes46> + name + <doubleQuotes46>, number: <doubleQuotes46> + nbr; <newline46mondego>}<newline46mondego>"
"6467splitHere46","4530535splitHere46","nbr"
"6468splitHere46","4530535splitHere46","int"
"6469splitHere46","4530535splitHere46","Integer"
"6470splitHere46","4530551splitHere46","replaceFirst"
"6471splitHere46","4530551splitHere46","string = string.replaceFirst(substring,<doubleQuotes46><doubleQuotes46>)<newline46mondego>"
"6472splitHere46","4530602splitHere46","EntityManager"
"6473splitHere46","4530602splitHere46","AnnotationSessionFactoryBean"
"6474splitHere46","4530602splitHere46","<bean id=<doubleQuotes46>sessionFactory<doubleQuotes46><newline46mondego>    class=<doubleQuotes46>org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>annotatedClasses<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <value>edu.acct.tsegay.model.User</value><newline46mondego>        </list><newline46mondego>    </property><newline46mondego>    ....<newline46mondego> </bean><newline46mondego>"
"6475splitHere46","4530602splitHere46","User"
"6476splitHere46","4530602splitHere46","new"
"6477splitHere46","4530686splitHere46","PreparedStatement stmt = connection.prepareStatement(<doubleQuotes46>SELECT * FROM whatever WHERE id = ? AND name= ?<doubleQuotes46>);<newline46mondego>stmt.setInt(1, 1000); // parameters starts at 1<newline46mondego>stmt.setString(2, <doubleQuotes46>'$%&<doubleQuotes46>);<newline46mondego>ResultSet rs = stmt.executeQuery();<newline46mondego>// ...<newline46mondego>"
"6478splitHere46","4530710splitHere46","HttpEntity entity = response.getEntity();<newline46mondego>String s = entity.toString();<newline46mondego>"
"6479splitHere46","4530710splitHere46","response = httpclient.execute(httpget);"
"6480splitHere46","4530861splitHere46","public IconDemoApp() {<newline46mondego>    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    setTitle(<doubleQuotes46>Icon Demo: Please Select an Image<doubleQuotes46>);<newline46mondego><newline46mondego>    // A label for displaying the pictures<newline46mondego>    photographLabel.setVerticalTextPosition(JLabel.BOTTOM);<newline46mondego>    photographLabel.setHorizontalTextPosition(JLabel.CENTER);<newline46mondego>    photographLabel.setHorizontalAlignment(JLabel.CENTER);<newline46mondego>    photographLabel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));<newline46mondego><newline46mondego>    // We add two glue components. Later in process() we will add thumbnail buttons<newline46mondego>    // to the toolbar inbetween thease glue compoents. This will center the<newline46mondego>    // buttons in the toolbar.<newline46mondego>    buttonBar.add(Box.createGlue());<newline46mondego>    buttonBar.add(Box.createGlue());<newline46mondego><newline46mondego>    add(buttonBar, BorderLayout.SOUTH);<newline46mondego>    add(photographLabel, BorderLayout.CENTER);<newline46mondego><newline46mondego>    setSize(400, 300);<newline46mondego><newline46mondego>    // this centers the frame on the screen<newline46mondego>    setLocationRelativeTo(null);<newline46mondego><newline46mondego>    // start the image loading SwingWorker in a background thread<newline46mondego>    loadimages.execute();<newline46mondego>}<newline46mondego>"
"6481splitHere46","4530863splitHere46","public void captureComponent(JComponent component, File imageFile) throws IOException {<newline46mondego>    BufferedImage bufImage = new BufferedImage(component.getSize().width, component.getSize().height, BufferedImage.TYPE_INT_RGB);  <newline46mondego>    component.paint(bufImage.createGraphics());   <newline46mondego>    imageFile.createNewFile();  <newline46mondego>    ImageIO.write(bufImage, <doubleQuotes46>jpeg<doubleQuotes46>, imageFile);<newline46mondego>}<newline46mondego>"
"6482splitHere46","4530864splitHere46","<id  type=<doubleQuotes46>int<doubleQuotes46> column=<doubleQuotes46>CUST_ID<doubleQuotes46> name=<doubleQuotes46>customerID<doubleQuotes46>><newline46mondego>        <generator class=<doubleQuotes46>native<doubleQuotes46>></generator><newline46mondego>    </id><newline46mondego>"
"6483splitHere46","4531133splitHere46","String"
"6484splitHere46","4531133splitHere46","String[]"
"6485splitHere46","4531133splitHere46","String sarr[] = {<doubleQuotes46>key1<doubleQuotes46>, <doubleQuotes46>key2<doubleQuotes46>, <doubleQuotes46>key3<doubleQuotes46>};<newline46mondego>jedis.blpop(someTimeout, sarr);<newline46mondego>"
"6486splitHere46","4531133splitHere46","String"
"6487splitHere46","4531133splitHere46","jedis.blpop(someTimeout, <doubleQuotes46>key1<doubleQuotes46>, <doubleQuotes46>key2<doubleQuotes46>, <doubleQuotes46>key3<doubleQuotes46>)"
"6488splitHere46","4531336splitHere46","Map"
"6489splitHere46","4531336splitHere46","HashMap"
"6490splitHere46","4531336splitHere46","SortedMap"
"6491splitHere46","4531336splitHere46","TreeMap"
"6492splitHere46","4531336splitHere46","Comparator"
"6493splitHere46","4531336splitHere46","LinkedHashMap"
"6494splitHere46","4531336splitHere46","List"
"6495splitHere46","4531336splitHere46","Map"
"6496splitHere46","4531439splitHere46","builder()"
"6497splitHere46","4531439splitHere46","Builder<Integer> builder = ImmutableList.builder();<newline46mondego>this.bar = builder.add(first).addAll(Arrays.asList(other)).build();<newline46mondego>"
"6498splitHere46","4531439splitHere46",".add(first).add(other)"
"6499splitHere46","4531439splitHere46","add"
"6500splitHere46","4531495splitHere46","if (node == null)<newline46mondego>{<newline46mondego>    return 0;<newline46mondego>}<newline46mondego>"
"6501splitHere46","4531495splitHere46","null"
"6502splitHere46","4531495splitHere46","return 1 +<newline46mondego>"
"6503splitHere46","4531495splitHere46","Math.max(heightOfBinaryTree(node.left),<newline46mondego>        heightOfBinaryTree(node.right));<newline46mondego>"
"6504splitHere46","4531495splitHere46","node.left"
"6505splitHere46","4531495splitHere46","node.right"
"6506splitHere46","4531495splitHere46","h"
"6507splitHere46","4531495splitHere46","hl"
"6508splitHere46","4531495splitHere46","hr"
"6509splitHere46","4531516splitHere46","container.setComponentZOrder(component, int)"
"6510splitHere46","4531545splitHere46","HTMLFilter"
"6511splitHere46","4531545splitHere46","-sourcepath"
"6512splitHere46","4531581splitHere46","getDefaultSharedPreferences()"
"6513splitHere46","4531581splitHere46","PreferenceActivity"
"6514splitHere46","4531627splitHere46","AsyncTaskCompleteListener.java"
"6515splitHere46","4531627splitHere46","import"
"6516splitHere46","4531627splitHere46","public static class"
"6517splitHere46","4531779splitHere46","Calendar calendar = Calendar.getInstance(); <newline46mondego><newline46mondego>calendar.add(Calendar.SECOND, -27);<newline46mondego>"
"6518splitHere46","4531823splitHere46","java.util.Random"
"6519splitHere46","4531823splitHere46","SecureRandom"
"6520splitHere46","4531823splitHere46","nextBytes"
"6521splitHere46","4531823splitHere46","java.util.Random"
"6522splitHere46","4531823splitHere46","SecureRandom sr = new SecureRandom();<newline46mondego>byte[] rndBytes = new byte[8];<newline46mondego>sr.nextBytes(rndBytes);<newline46mondego>"
"6523splitHere46","4531823splitHere46","Random"
"6524splitHere46","4531823splitHere46","java.util.Random"
"6525splitHere46","4531823splitHere46","java.util.Random"
"6526splitHere46","4531823splitHere46","long"
"6527splitHere46","4531823splitHere46","class Random96 extends Random {<newline46mondego>    int count = 0;<newline46mondego>    ExposedRandom extra48bits;<newline46mondego><newline46mondego>    class ExposedRandom extends Random {<newline46mondego>        public int next(int bits) {    // Expose the next-method.<newline46mondego>            return super.next(bits);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected int next(int bits) {<newline46mondego>        if (count++ == 0)<newline46mondego>            extra48bits = new ExposedRandom();<newline46mondego>        return super.next(bits) ^ extra48bits.next(bits) >> 1;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6528splitHere46","4531881splitHere46","String[] cmd = {<doubleQuotes46>/bin/sh<doubleQuotes46>, <doubleQuotes46>-c<doubleQuotes46>, <doubleQuotes46>stty raw </dev/tty<doubleQuotes46>};<newline46mondego>Runtime.getRuntime().exec(cmd);<newline46mondego>"
"6529splitHere46","4532038splitHere46","TestActivity"
"6530splitHere46","4532214splitHere46","System.currentTimeMillis()"
"6531splitHere46","4532463splitHere46","ff fb 01"
"6532splitHere46","4532463splitHere46","ff fb 03"
"6533splitHere46","4532463splitHere46","ff fd 01"
"6534splitHere46","4532463splitHere46","ff fb 01"
"6535splitHere46","4532463splitHere46","ff fd 03"
"6536splitHere46","4532463splitHere46","ff fb 03"
"6537splitHere46","4532463splitHere46","(char)0xff"
"6538splitHere46","4532463splitHere46","U+00ff"
"6539splitHere46","4532463splitHere46","Ã¿"
"6540splitHere46","4532463splitHere46","c3 bf"
"6541splitHere46","4532463splitHere46","Ã¿"
"6542splitHere46","4532463splitHere46","out = new PrintStream(connection.getOutputStream());<newline46mondego>out.print((char)0xff);  // sends 0xc3 0xbf<newline46mondego>out.print((char)0xfb);  // sends 0xc3 0xbb<newline46mondego>out.print((char)0x01);  // sends 0x01<newline46mondego>out.flush();<newline46mondego>"
"6543splitHere46","4532463splitHere46","out = new OutputStreamWriter(connection.getOutputStream(), <doubleQuotes46>ISO-8859-1<doubleQuotes46>);<newline46mondego>out.write((char)0xff);  // sends 0xff<newline46mondego>out.write((char)0xfb);  // sends 0xfb<newline46mondego>out.write((char)0x01);  // sends 0x01<newline46mondego>out.flush();<newline46mondego>"
"6544splitHere46","4532549splitHere46","out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));<newline46mondego>"
"6545splitHere46","4532603splitHere46",".dev"
"6546splitHere46","4532785splitHere46","String.getBytes(<doubleQuotes46>encoder<doubleQuotes46>);"
"6547splitHere46","4532785splitHere46","private static String readInput(String jtext) {<newline46mondego>    byte[] bytes = jtext.getBytes();<newline46mondego>    try {<newline46mondego>        String string = new String(bytes, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        return string;<newline46mondego>    } catch (UnsupportedEncodingException ex) {<newline46mondego>        // do something<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6548splitHere46","4532785splitHere46","getString"
"6549splitHere46","4532785splitHere46","getBytes"
"6550splitHere46","4532785splitHere46","new String(bytes, <doubleQuotes46>encoding used in your DB<doubleQuotes46>);"
"6551splitHere46","4532785splitHere46","new String(bytes, <doubleQuotes46>UTF-16<doubleQuotes46>);"
"6552splitHere46","4532785splitHere46","getBytes"
"6553splitHere46","4532785splitHere46","String"
"6554splitHere46","4532785splitHere46","getBytes"
"6555splitHere46","4532785splitHere46","result.getBytes(String columnLabel)"
"6556splitHere46","4532785splitHere46","ResultSet result = .... // from SQL query<newline46mondego>String readableString = readInput(result.getBytes(<doubleQuotes46>my_table_column<doubleQuotes46>));<newline46mondego>"
"6557splitHere46","4532785splitHere46","readInput"
"6558splitHere46","4532785splitHere46","private static String readInput(byte[] bytes) {<newline46mondego>    try {<newline46mondego>        // change encoding to your DB encoding.<newline46mondego>        // this can be UTF-8, UTF-16, 8859_1, etc.<newline46mondego>        String string = new String(bytes, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>        return string;<newline46mondego>    } catch (UnsupportedEncodingException ex) {<newline46mondego>        // do something, at least return garbled text<newline46mondego>        return new String(bytes, <doubleQuotes46>UTF-8<doubleQuotes46>);;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6559splitHere46","4532785splitHere46","readInput"
"6560splitHere46","4532870splitHere46","/WEB-INF/lib"
"6561splitHere46","4532870splitHere46","/WEB-INF/lib"
"6562splitHere46","4532870splitHere46","faces-config.xml"
"6563splitHere46","4532870splitHere46","<faces-config<newline46mondego>    xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego>"
"6564splitHere46","4532870splitHere46","web.xml"
"6565splitHere46","4532870splitHere46","<web-app <newline46mondego>    xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46><newline46mondego>    xmlns:web=<doubleQuotes46>http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> <newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46><newline46mondego>    id=<doubleQuotes46>YourWebappID<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.5<doubleQuotes46>><newline46mondego>"
"6566splitHere46","4532870splitHere46","url-pattern"
"6567splitHere46","4532870splitHere46","FacesServlet"
"6568splitHere46","4532870splitHere46","*.jsf"
"6569splitHere46","4532870splitHere46","FacesServlet"
"6570splitHere46","4532870splitHere46","*.xhtml"
"6571splitHere46","4532870splitHere46","*.jsp"
"6572splitHere46","4532870splitHere46","url-pattern"
"6573splitHere46","4532870splitHere46","/faces/*"
"6574splitHere46","4532870splitHere46","*.jsf"
"6575splitHere46","4532870splitHere46","outcome.xhtml"
"6576splitHere46","4532870splitHere46","*.jsp"
"6577splitHere46","4532870splitHere46","/WEB-INF/lib"
"6578splitHere46","4532870splitHere46","FaceletViewHandler"
"6579splitHere46","4532870splitHere46","faces-config.xml"
"6580splitHere46","4532870splitHere46","FaceletViewHandler"
"6581splitHere46","4532870splitHere46","ViewHandlerWrapper"
"6582splitHere46","4532870splitHere46","<context-param>"
"6583splitHere46","4532870splitHere46","web.xml"
"6584splitHere46","4532870splitHere46","javax.faces.DEFAULT_SUFFIX"
"6585splitHere46","4532870splitHere46","*.xhtml"
"6586splitHere46","4532870splitHere46","<facelet-taglib <newline46mondego>    xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego>"
"6587splitHere46","4532870splitHere46","<%@page contentType=<doubleQuotes46>text/html<doubleQuotes46> pageEncoding=<doubleQuotes46>UTF-8<doubleQuotes46>%><newline46mondego><%@taglib prefix=<doubleQuotes46>f<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46>%><newline46mondego><%@taglib prefix=<doubleQuotes46>h<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46>%><newline46mondego><!DOCTYPE html><newline46mondego><f:view><newline46mondego>    <html lang=<doubleQuotes46>en<doubleQuotes46>><newline46mondego>        <head><newline46mondego>            <title>JSP page</title><newline46mondego>        </head><newline46mondego>        <body><newline46mondego>            <h:outputText value=<doubleQuotes46>JSF components here.<doubleQuotes46> /><newline46mondego>        </body><newline46mondego>    </html><newline46mondego></f:view><newline46mondego>"
"6588splitHere46","4532870splitHere46","<!DOCTYPE html><newline46mondego><html lang=<doubleQuotes46>en<doubleQuotes46><newline46mondego>    xmlns=<doubleQuotes46>http://www.w3.org/1999/xhtml<doubleQuotes46><newline46mondego>    xmlns:f=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46><newline46mondego>    xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46><newline46mondego>    xmlns:ui=<doubleQuotes46>http://java.sun.com/jsf/facelets<doubleQuotes46>><newline46mondego>    <h:head><newline46mondego>        <title>XHTML page</title><newline46mondego>    </h:head><newline46mondego>    <h:body><newline46mondego>        <h:outputText value=<doubleQuotes46>JSF components here.<doubleQuotes46> /><newline46mondego>    </h:body>  <newline46mondego></html><newline46mondego>"
"6589splitHere46","4532870splitHere46","<jsp:include>"
"6590splitHere46","4532870splitHere46","<jsp:include page=<doubleQuotes46>include.jsp<doubleQuotes46> /><newline46mondego>"
"6591splitHere46","4532870splitHere46","<ui:include src=<doubleQuotes46>include.xhtml<doubleQuotes46> /><newline46mondego>"
"6592splitHere46","4532870splitHere46","<%@page contentType=<doubleQuotes46>text/html<doubleQuotes46> pageEncoding=<doubleQuotes46>UTF-8<doubleQuotes46>%><newline46mondego><%@taglib prefix=<doubleQuotes46>f<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46>%><newline46mondego><%@taglib prefix=<doubleQuotes46>h<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46>%><newline46mondego><f:subview id=<doubleQuotes46>include<doubleQuotes46>><newline46mondego>    <h:outputText value=<doubleQuotes46>JSF components here.<doubleQuotes46> /><newline46mondego></f:subview><newline46mondego>"
"6593splitHere46","4532870splitHere46","<ui:composition<newline46mondego>    xmlns=<doubleQuotes46>http://www.w3.org/1999/xhtml<doubleQuotes46><newline46mondego>    xmlns:f=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46><newline46mondego>    xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46><newline46mondego>    xmlns:ui=<doubleQuotes46>http://java.sun.com/jsf/facelets<doubleQuotes46>><newline46mondego>    <h:outputText value=<doubleQuotes46>JSF components here.<doubleQuotes46> /><newline46mondego></ui:composition><newline46mondego>"
"6594splitHere46","4532870splitHere46","faces-config.xml"
"6595splitHere46","4532870splitHere46","<managed-bean>"
"6596splitHere46","4532870splitHere46","@ManagedBean"
"6597splitHere46","4532870splitHere46","@ManagedBean(name=<doubleQuotes46>managedBeanName<doubleQuotes46>)<newline46mondego>@RequestScoped<newline46mondego>public class SomeBean {}<newline46mondego>"
"6598splitHere46","4532870splitHere46","@RequestScoped"
"6599splitHere46","4532870splitHere46","@ViewScoped"
"6600splitHere46","4532870splitHere46","@SessionScoped"
"6601splitHere46","4532870splitHere46","@ApplicationScoped"
"6602splitHere46","4532870splitHere46","name"
"6603splitHere46","4532870splitHere46","@ManagedBean"
"6604splitHere46","4532870splitHere46","@ManagedBean<newline46mondego>@RequestScoped<newline46mondego>public class SomeBean {}<newline46mondego>"
"6605splitHere46","4532870splitHere46","#{someBean}"
"6606splitHere46","4532870splitHere46","<managed-property>"
"6607splitHere46","4532870splitHere46","@ManagedProperty"
"6608splitHere46","4532870splitHere46","@ManagedProperty(<doubleQuotes46>#{otherBean}<doubleQuotes46>)<newline46mondego>private OtherBean otherBean;<newline46mondego>"
"6609splitHere46","4532870splitHere46","<validator>"
"6610splitHere46","4532870splitHere46","@FacesValidator"
"6611splitHere46","4532870splitHere46","@FacesValidator(<doubleQuotes46>someValidator<doubleQuotes46>)<newline46mondego>public class SomeValidator implements Validator {}<newline46mondego>"
"6612splitHere46","4532870splitHere46","<converter>"
"6613splitHere46","4532870splitHere46","@FacesConverter"
"6614splitHere46","4532870splitHere46","@FacesConverter(<doubleQuotes46>someConverter<doubleQuotes46>)<newline46mondego>public class SomeConverter implements Converter {}<newline46mondego>"
"6615splitHere46","4532870splitHere46","<renderer>"
"6616splitHere46","4532870splitHere46","@FacesRenderer"
"6617splitHere46","4532870splitHere46","@FacesRenderer(componentFamily=<doubleQuotes46>someComponentFamily<doubleQuotes46>, rendererType=<doubleQuotes46>someRendererType<doubleQuotes46>)<newline46mondego>public class SomeRenderer extends Renderer {}<newline46mondego>"
"6618splitHere46","4532870splitHere46","<navigation-case>"
"6619splitHere46","4532870splitHere46","<from-outcome>"
"6620splitHere46","4532870splitHere46","<to-view-id>"
"6621splitHere46","4532870splitHere46","@ViewScoped"
"6622splitHere46","4532870splitHere46","<t:saveState>"
"6623splitHere46","4532930splitHere46","while loop (iterate first hashmap)<newline46mondego>    second while loop(iterate second hashmap)<newline46mondego>         call your function here and pass values<newline46mondego>"
"6624splitHere46","4532976splitHere46","... = MyPlugin.getInstance().getConfig().getValue(MyPlugin.CONFIGKEY_P1);<newline46mondego>... = MyPlugin.getInstance().getConfig().getValue(MyPlugin.CONFIGKEY_P2);<newline46mondego>"
"6625splitHere46","4532976splitHere46","MyConfig config = MyPlugin.getInstance().getConfig();<newline46mondego>... = config.getValue(MyPlugin.CONFIGKEY_P1);<newline46mondego>... = config.getValue(MyPlugin.CONFIGKEY_P2);<newline46mondego>"
"6626splitHere46","4533064splitHere46","http://192.9.162.55/products/java-media/2D/forDevelopers/sdk12print.html"
"6627splitHere46","4533219splitHere46","KEY_NAME + <doubleQuotes46> = '<doubleQuotes46> + username + <doubleQuotes46>' AND <doubleQuotes46> + KEY_PASSWORD + <doubleQuotes46> = '<doubleQuotes46> + password + <doubleQuotes46>'<doubleQuotes46><newline46mondego>"
"6628splitHere46","4533224splitHere46","MainWindow.this"
"6629splitHere46","4533396splitHere46","public int strDist(String str, String sub) {<newline46mondego>  int first = str.indexOf(sub);<newline46mondego>  if (first == -1)<newline46mondego>    return 0;<newline46mondego>  int last = str.lastIndexOf(sub);<newline46mondego>  return last - first + sub.length();<newline46mondego>}<newline46mondego>"
"6630splitHere46","4533396splitHere46","max - previous"
"6631splitHere46","4533396splitHere46","max - previous + sub.length()"
"6632splitHere46","4533396splitHere46","previous"
"6633splitHere46","4533396splitHere46","<doubleQuotes46>foocatbar<doubleQuotes46>"
"6634splitHere46","4533396splitHere46","<doubleQuotes46>catfoocatbarcat<doubleQuotes46>"
"6635splitHere46","4533396splitHere46","String.indexOf()"
"6636splitHere46","4533396splitHere46","public static int indexOf(String str, String sub, int start, int direction) {<newline46mondego>  if (start < 0 || start > str.length() - sub.length())<newline46mondego>    return -1;<newline46mondego>  if (str.substring(start, start + sub.length()).equals(sub))<newline46mondego>    return start;<newline46mondego>  return indexOf(str, sub, start+direction, direction);<newline46mondego>}<newline46mondego><newline46mondego>public static int strDistRecursive(String str, String sub) {<newline46mondego>  int first = indexOf(str, sub, 0, 1);<newline46mondego>  if (first == -1)<newline46mondego>    return 0;<newline46mondego>  int last = indexOf(str, sub, str.length() - sub.length(), -1);<newline46mondego>  return last - first + sub.length();<newline46mondego>}<newline46mondego>"
"6637splitHere46","4533409splitHere46","delete"
"6638splitHere46","4533409splitHere46","javac"
"6639splitHere46","4533457splitHere46","String date=<doubleQuotes46>12/01/2010<doubleQuotes46>;<newline46mondego>String incDate;<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>MM/dd/yyyy<doubleQuotes46>);<newline46mondego>Calendar c = Calendar.getInstance();<newline46mondego>c.setTime(sdf.parse(date));<newline46mondego>int maxDay = c.getActualMaximum(Calendar.DAY_OF_MONTH);<newline46mondego>for(int co=0; co<maxDay; co++){<newline46mondego>    c.add(Calendar.DATE, 1); <newline46mondego>    incDate = sdf.format(c.getTime());<newline46mondego>}<newline46mondego>"
"6640splitHere46","4533457splitHere46","c.getActualMaximum(Calendar.DAY_OF_MONTH)"
"6641splitHere46","4533682splitHere46","//Skip 3 lines.<newline46mondego>for(int i=1;i<=3;i++)<newline46mondego>{<newline46mondego>    reader.readLine();<newline46mondego>}<newline46mondego>"
"6642splitHere46","4533682splitHere46","Map<Animal, Summary> result = new HashMap<Animal, Summary>();<newline46mondego><newline46mondego>class Animal<newline46mondego>{<newline46mondego>    String date;<newline46mondego><newline46mondego>    String name;<newline46mondego><newline46mondego>    public Animal(final String date, final String n)<newline46mondego>    {<newline46mondego>        this.date = date;<newline46mondego>        this.name = n;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode()<newline46mondego>    {<newline46mondego>        final int prime = 31;<newline46mondego>        int result = 1;<newline46mondego>        result = prime * result + ((date == null) ? 0 : date.hashCode());<newline46mondego>        result = prime * result + ((name == null) ? 0 : name.hashCode());<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object obj)<newline46mondego>    {<newline46mondego>        if (this == obj)<newline46mondego>        {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        if (obj == null)<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        if (!(obj instanceof Animal))<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        Animal other = (Animal) obj;<newline46mondego>        if (date == null)<newline46mondego>        {<newline46mondego>            if (other.date != null)<newline46mondego>            {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        else if (!date.equals(other.date))<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        if (name == null)<newline46mondego>        {<newline46mondego>            if (other.name != null)<newline46mondego>            {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        else if (!name.equals(other.name))<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>final static class Summary<newline46mondego>{<newline46mondego>    private int total;<newline46mondego><newline46mondego>    private int count;<newline46mondego><newline46mondego>    void setTotal(int value)<newline46mondego>    {<newline46mondego>        total = value;<newline46mondego>    }<newline46mondego><newline46mondego>    void setCount(int i)<newline46mondego>    {<newline46mondego>        count = i;<newline46mondego>    }<newline46mondego><newline46mondego>    void increaseCount()<newline46mondego>    {<newline46mondego>        count++;<newline46mondego>    }<newline46mondego><newline46mondego>    void addToTotal(int valueToAdd)<newline46mondego>    {<newline46mondego>        total += valueToAdd;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6643splitHere46","4533698splitHere46","Integer"
"6644splitHere46","4533698splitHere46","int"
"6645splitHere46","4533698splitHere46","public class MyArray implements Iterable<Integer> {<newline46mondego><newline46mondego>    public static class MyIterator implements Iterator<Integer> {<newline46mondego><newline46mondego>        private final MyArray myArray;<newline46mondego>        private int current;<newline46mondego><newline46mondego>        MyIterator(MyArray myArray) {<newline46mondego>            this.myArray = myArray;<newline46mondego>            this.current = myArray.start;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean hasNext() {<newline46mondego>            return current < myArray.end;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Integer next() {<newline46mondego>            if (! hasNext())   throw new NoSuchElementException();<newline46mondego>            return myArray.arr[current++];<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void remove() {<newline46mondego>            // Choose exception or implementation: <newline46mondego>            throw new OperationNotSupportedException();<newline46mondego>            // or<newline46mondego>            //// if (! hasNext())   throw new NoSuchElementException();<newline46mondego>            //// if (currrent + 1 < myArray.end) {<newline46mondego>            ////     System.arraycopy(myArray.arr, current+1, myArray.arr, current, myArray.end - current-1);<newline46mondego>            //// }<newline46mondego>            //// myArray.end--;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    ....<newline46mondego><newline46mondego>    // Most of the rest of MyArray is the same except adding a new iterator method ....<newline46mondego><newline46mondego>    public Iterator<Integer> iterator() {<newline46mondego>        return new MyIterator();<newline46mondego>    }<newline46mondego><newline46mondego>    // The rest of MyArray is the same ....<newline46mondego><newline46mondego>}<newline46mondego>"
"6646splitHere46","4533714splitHere46","image"
"6647splitHere46","4533714splitHere46","@Override<newline46mondego>public void paintComponent(Graphics g) {<newline46mondego>    super.paintComponent(g);<newline46mondego>    Graphics2D g2d = (Graphics2D) g;<newline46mondego>    int x = (this.getWidth() - image.getWidth(null)) / 2;<newline46mondego>    int y = (this.getHeight() - image.getHeight(null)) / 2;<newline46mondego>    g2d.drawImage(image, x, y, null);<newline46mondego>}<newline46mondego>"
"6648splitHere46","4533714splitHere46","@Override<newline46mondego>public void paintComponent(Graphics g) {<newline46mondego>    super.paintComponent(g);<newline46mondego>    Graphics2D g2d = (Graphics2D) g;<newline46mondego>    g2d.translate(this.getWidth() / 2, this.getHeight() / 2);<newline46mondego>    g2d.translate(-image.getWidth(null) / 2, -image.getHeight(null) / 2);<newline46mondego>    g2d.drawImage(image, 0, 0, null);<newline46mondego>}<newline46mondego>"
"6649splitHere46","4533786splitHere46","AnimationSet set = new AnimationSet(true);<newline46mondego><newline46mondego>Animation animation = new AlphaAnimation(0.0f, 1.0f);<newline46mondego>animation.setDuration(50);<newline46mondego>set.addAnimation(animation);<newline46mondego><newline46mondego>animation = new TranslateAnimation(<newline46mondego>Animation.RELATIVE_TO_SELF, 0.0f,Animation.RELATIVE_TO_SELF, 0.0f,<newline46mondego>Animation.RELATIVE_TO_SELF, -1.0f,Animation.RELATIVE_TO_SELF, 0.0f<newline46mondego>);<newline46mondego>animation.setDuration(100);<newline46mondego>set.addAnimation(animation);<newline46mondego><newline46mondego>LayoutAnimationController controller = new LayoutAnimationController(set, 0.5f);<newline46mondego>l.setLayoutAnimation(controller);<newline46mondego>"
"6650splitHere46","4533786splitHere46","public static Animation runFadeOutAnimationOn(Activity ctx, View target) {<newline46mondego>  Animation animation = AnimationUtils.loadAnimation(ctx,android.R.anim.fade_out);<newline46mondego>  target.startAnimation(animation);<newline46mondego>  return animation;<newline46mondego>}<newline46mondego>"
"6651splitHere46","4533889splitHere46","private static final Set<Integer> LOCKER = Collections.newSetFromMap(<newline46mondego>    new ConcurrentHashMap<Integer, Boolean>());<newline46mondego><newline46mondego>private static boolean tryLock(Integer key) {<newline46mondego>    return LOCKER.add(key);<newline46mondego>}<newline46mondego><newline46mondego>private static void releaseLock(Integer key) {<newline46mondego>    LOCKER.remove(key);<newline46mondego>}<newline46mondego>"
"6652splitHere46","4534020splitHere46","<doubleQuotes46>mysql:jdbc://127.0.0.1:3036/shedule<doubleQuotes46>  <newline46mondego>"
"6653splitHere46","4534020splitHere46","<doubleQuotes46>jdbc:mysql://127.0.0.1:3306/shedule<doubleQuotes46><newline46mondego>"
"6654splitHere46","4534038splitHere46","javax.faces.FactoryFinder"
"6655splitHere46","4534053splitHere46","ContentFactory"
"6656splitHere46","4534053splitHere46","@ManagedBean<newline46mondego>@RequestScoped // Or whatever<newline46mondego>public class ContentFactory {<newline46mondego><newline46mondego>    public String getSpecificForm(String formName) {<newline46mondego>        return null; // TODO: implement.<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6657splitHere46","4534053splitHere46","<ui:include src=<doubleQuotes46>#{contentFactory.getSpecificForm(provider.formName)}<doubleQuotes46> /><newline46mondego>"
"6658splitHere46","4534053splitHere46","ui:include"
"6659splitHere46","4534053splitHere46","c:forEach"
"6660splitHere46","4534053splitHere46","p:dataGrid"
"6661splitHere46","4534053splitHere46","c:forEach"
"6662splitHere46","4534053splitHere46","<html xmlns:c=<doubleQuotes46>http://java.sun.com/jstl/core<doubleQuotes46>><newline46mondego>...<newline46mondego><newline46mondego><c:forEach var=<doubleQuotes46>provider<doubleQuotes46> items=<doubleQuotes46>#{paymentFormBean.providers}<doubleQuotes46>><newline46mondego>    <ui:include src=<doubleQuotes46>#{contentFactory.getSpecificForm(provider.formName)}<doubleQuotes46> /><newline46mondego></c:forEach><newline46mondego>"
"6663splitHere46","4534162splitHere46","<target name=<doubleQuotes46>libs<doubleQuotes46>/><newline46mondego>  <uptodate property=<doubleQuotes46>isUpToDate<doubleQuotes46>><newline46mondego>    <srcfiles dir=<doubleQuotes46>${source.dir}<doubleQuotes46> includes=<doubleQuotes46>**/*.jar<doubleQuotes46>/><newline46mondego>    <globmapper from=<doubleQuotes46>${source.dir}/*.jar<doubleQuotes46> to=<doubleQuotes46>${destination.dir}/*.jar<doubleQuotes46>/><newline46mondego>  </uptodate><newline46mondego>  <!-- tasks below will only be executed if<newline46mondego>       there were libs that needed an update --><newline46mondego>  <antcall target=<doubleQuotes46>copy_libs<doubleQuotes46>/>  <newline46mondego>  <antcall target=<doubleQuotes46>clean_compiled_classes<doubleQuotes46>/>  <newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>copy_libs<doubleQuotes46> unless=<doubleQuotes46>isUpToDate<doubleQuotes46>>  <newline46mondego>  <copy file=... />  <newline46mondego>  <copy file=... />  <newline46mondego>  <copy file=... /><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>clean_compiled_classes<doubleQuotes46> unless=<doubleQuotes46>isUpToDate<doubleQuotes46>>  <newline46mondego>  <delete .../><newline46mondego></target><newline46mondego>"
"6664splitHere46","4534196splitHere46","remove(Object o)"
"6665splitHere46","4534196splitHere46","remove(int index)"
"6666splitHere46","4534196splitHere46","list.remove(1)"
"6667splitHere46","4534196splitHere46","remove(new Integer(1))"
"6668splitHere46","4534226splitHere46","File#renameTo()"
"6669splitHere46","4534226splitHere46","File file = imageFileChooser.getSelectedFile(); <newline46mondego>File destination = new File(<doubleQuotes46>/path/to/new/location<doubleQuotes46>, file.getName());<newline46mondego>boolean success = file.renameTo(destination);<newline46mondego>// You might want to check success result here.<newline46mondego>"
"6670splitHere46","4534377splitHere46","/useractivate"
"6671splitHere46","4534377splitHere46","http://yoursite.com/useractivate?hash=4342bc322&user=foo"
"6672splitHere46","4534377splitHere46","doGet()"
"6673splitHere46","4534377splitHere46","String hash = request.getParameter(<doubleQuotes46>hash<doubleQuotes46>);<newline46mondego>String user = request.getParameter(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego>// .. handle activation<newline46mondego>"
"6674splitHere46","4534430splitHere46","private String sha1(String s, String keyString) throws UnsupportedEncodingException, NoSuchAlgorithmException, InvalidKeyException {<newline46mondego><newline46mondego>SecretKeySpec key = new SecretKeySpec((keyString).getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>), <doubleQuotes46>HmacSHA1<doubleQuotes46>);<newline46mondego>Mac mac = Mac.getInstance(<doubleQuotes46>HmacSHA1<doubleQuotes46>);<newline46mondego>mac.init(key);<newline46mondego><newline46mondego>byte[] bytes = mac.doFinal(s.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego><newline46mondego>return new String( Base64.encodeBase64(bytes));<newline46mondego><newline46mondego>}<newline46mondego>"
"6675splitHere46","4534431splitHere46","#!/bin/sh<newline46mondego>restartCode=<doubleQuotes46>1<doubleQuotes46>; # predefined restart signal code<newline46mondego>java -jar '/home/fdqadmin/NetBeansProjects/dbConvert2/dist/dbConvert2.jar' --Terminal=true; # run java program<newline46mondego>if [ $? -eq restartCode ] # if exit code is equal to predefined restart signal code<newline46mondego>then<newline46mondego>  $0; # restart script<newline46mondego>fi<newline46mondego>exit $?;<newline46mondego>"
"6676splitHere46","4534608splitHere46","<dependency><newline46mondego>  <groupId>javax.inject</groupId><newline46mondego>  <artifactId>javax.inject</artifactId><newline46mondego>  <version>1</version><newline46mondego></dependency><newline46mondego>"
"6677splitHere46","4534681splitHere46","Content-length"
"6678splitHere46","4534681splitHere46","java.net.URLConnection"
"6679splitHere46","4534699splitHere46","User"
"6680splitHere46","4534699splitHere46","[(String, Integer)]"
"6681splitHere46","4534702splitHere46","Image.getScaledInstance(..)"
"6682splitHere46","4534711splitHere46","alt"
"6683splitHere46","4534711splitHere46","j_id113"
"6684splitHere46","4534728splitHere46","java.awt.Desktop.getDesktop().browse(uri)"
"6685splitHere46","4534728splitHere46","Program.launch(<doubleQuotes46>http://www.google.com<doubleQuotes46>);"
"6686splitHere46","4534728splitHere46","import org.eclipse.swt.program.Program;<newline46mondego><newline46mondego>public class del <newline46mondego>{<newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego>        Program.launch(<doubleQuotes46>http://www.google.com<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6687splitHere46","4534798splitHere46","// the true size is always a multiple of a page anyway.<newline46mondego>static final ByteBuffer buffer = ByteBuffer.allocateDirect(4096); <newline46mondego><newline46mondego>// synchronize the buffer if you need to, or use a ThreadLocal buffer as a simple cache.<newline46mondego>byte[] bytes = m_packet.getByteArray(0, m_packet.size());<newline46mondego>buffer.clear();<newline46mondego>buffer.put(bytes);<newline46mondego>buffer.flip();<newline46mondego>"
"6688splitHere46","4534933splitHere46","readLine"
"6689splitHere46","4534938splitHere46","for (LocalDate date = startDate; date.isBefore(endDate); date = date.plusDays(1))<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6690splitHere46","4534938splitHere46","Date"
"6691splitHere46","4534938splitHere46","Calendar"
"6692splitHere46","4534943splitHere46","for (Element form : Jsoup.connect(<doubleQuotes46>http://google.com<doubleQuotes46>).get().select(<doubleQuotes46>form<doubleQuotes46>)) {<newline46mondego>    System.out.printf(<doubleQuotes46>Form found: action=%s, method=%s%n<doubleQuotes46>, form.attr(<doubleQuotes46>action<doubleQuotes46>), form.attr(<doubleQuotes46>method<doubleQuotes46>));<newline46mondego>    for (Element input : form.select(<doubleQuotes46>input,select,textarea<doubleQuotes46>)) {<newline46mondego>        System.out.printf(<doubleQuotes46>\tInput found: name=%s, value=%s%n<doubleQuotes46>, input.attr(<doubleQuotes46>name<doubleQuotes46>), input.attr(<doubleQuotes46>value<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6693splitHere46","4534943splitHere46","Filter"
"6694splitHere46","4534943splitHere46","Map<String, String[]> params = request.getParameterMap();<newline46mondego>// ...<newline46mondego>"
"6695splitHere46","4534970splitHere46","<h:outputText>"
"6696splitHere46","4534970splitHere46",":"
"6697splitHere46","4534970splitHere46","<my:compositeComponent id=<doubleQuotes46>ccId<doubleQuotes46> /><newline46mondego>"
"6698splitHere46","4534970splitHere46","<p:ajax update=<doubleQuotes46>:ccId:cCart:cId<doubleQuotes46> /><newline46mondego>"
"6699splitHere46","4534989splitHere46","List<T>"
"6700splitHere46","4534989splitHere46","ArrayList<T>"
"6701splitHere46","4534989splitHere46","List<T>"
"6702splitHere46","4535072splitHere46","// get location of the code source<newline46mondego>URL url = yourpackage.Main.class.getProtectionDomain().getCodeSource().getLocation();<newline46mondego><newline46mondego>try {<newline46mondego>    // extract directory from code source url<newline46mondego>    String root = (new File(url.toURI())).getParentFile().getPath();<newline46mondego>    File doc = new File(root, <doubleQuotes46>test.htm<doubleQuotes46>);<newline46mondego>    // create htm file contents for testing<newline46mondego>    FileWriter writer = new FileWriter(doc);<newline46mondego>    writer.write(<doubleQuotes46><h1>Test</h1><doubleQuotes46>);<newline46mondego>    writer.close();<newline46mondego>    // open it in the editor<newline46mondego>    editor.setPage(doc.toURI().toURL());<newline46mondego>} catch (Exception e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego>"
"6703splitHere46","4535143splitHere46","public void loggedin(String title, String message, String positive, final Cursor c) {<newline46mondego>"
"6704splitHere46","4535185splitHere46","null"
"6705splitHere46","4535185splitHere46","@param foo foo description. Can be null<newline46mondego>"
"6706splitHere46","4535185splitHere46","null"
"6707splitHere46","4535185splitHere46","public Foo(String bar, String baz, int fooo, double barr, String asd);<newline46mondego>"
"6708splitHere46","4535185splitHere46","Foo foo = new FooBuilder().setBar(bar).setFooo(fooo).build();<newline46mondego>"
"6709splitHere46","4535219splitHere46","set terminal png<newline46mondego>set output 'graph.png'<newline46mondego>set xrange [0:5000000]<newline46mondego>set yrange [0:600]<newline46mondego>f1(x) = a1*x*log(x)/log(2)<newline46mondego>a1 = 1000<newline46mondego>plot 'time.dat' title 'Actual runtimes', \<newline46mondego>    a1*x*log(x)/log(2) title 'Fitted curve: O(nlogn)<newline46mondego>fit f1(x) 'time.dat' via a1<newline46mondego>"
"6710splitHere46","4535358splitHere46","7 / 5"
"6711splitHere46","4535358splitHere46","7 % 5"
"6712splitHere46","4535386splitHere46","FileInputStream"
"6713splitHere46","4535386splitHere46","InputStreamReader"
"6714splitHere46","4535386splitHere46","BufferedReader"
"6715splitHere46","4535386splitHere46","BufferedReader.readLine"
"6716splitHere46","4535386splitHere46","String.split"
"6717splitHere46","4535386splitHere46","Integer.parseInt"
"6718splitHere46","4535386splitHere46","Scanner"
"6719splitHere46","4535386splitHere46","Scanner"
"6720splitHere46","4535386splitHere46","Scanner"
"6721splitHere46","4535443splitHere46","4495 ./javax/sql/rowset/BaseRowSet.java<newline46mondego>4649 ./java/awt/Container.java<newline46mondego>5025 ./javax/swing/text/JTextComponent.java<newline46mondego>5246 ./java/util/regex/Pattern.java<newline46mondego>5316 ./javax/swing/JTree.java<newline46mondego>5469 ./java/lang/Character.java<newline46mondego>5473 ./javax/swing/JComponent.java<newline46mondego>9063 ./com/sun/corba/se/impl/logging/ORBUtilSystemException.java<newline46mondego>9595 ./javax/swing/JTable.java<newline46mondego>9982 ./java/awt/Component.java<newline46mondego>"
"6722splitHere46","4535452splitHere46","JList.HORIZONTAL_WRAP"
"6723splitHere46","4535452splitHere46","ListDialog"
"6724splitHere46","4535516splitHere46","System.out.println(someHTMLCodeAsString.replaceAll(<doubleQuotes46>\\$1<doubleQuotes46>, <doubleQuotes46>REPLACED<doubleQuotes46>));"
"6725splitHere46","4535706splitHere46","CharSequence format(CharSequence inFormat, long inTimeInMillis)<newline46mondego>"
"6726splitHere46","4535757splitHere46",">>> class A(object):<newline46mondego>...    def __init__(self, attribute1, attribute2):<newline46mondego>...        self.attribute1 = attribute1<newline46mondego>...        self.attribute2 = attribute2<newline46mondego>...<newline46mondego><newline46mondego>>>> a = A(1, 2)<newline46mondego>>>> a.attribute1<newline46mondego>1<newline46mondego>>>> a.attribute2<newline46mondego>2<newline46mondego>"
"6727splitHere46","4535757splitHere46","self.attribute"
"6728splitHere46","4535790splitHere46","if"
"6729splitHere46","4535790splitHere46","for"
"6730splitHere46","4535790splitHere46","switch"
"6731splitHere46","4535790splitHere46","out.print()"
"6732splitHere46","4535898splitHere46","Sugar"
"6733splitHere46","4535898splitHere46","quantity"
"6734splitHere46","4535898splitHere46","quantity"
"6735splitHere46","4535898splitHere46","1"
"6736splitHere46","4535958splitHere46","List<String>"
"6737splitHere46","4535958splitHere46","List<Object>"
"6738splitHere46","4535958splitHere46","List<String>"
"6739splitHere46","4535958splitHere46","List<? extends Object>"
"6740splitHere46","4535958splitHere46","List<Object>"
"6741splitHere46","4535958splitHere46","List<? super String>"
"6742splitHere46","4535958splitHere46","Foo<? extends T>"
"6743splitHere46","4535958splitHere46","T"
"6744splitHere46","4535958splitHere46","Foo<? super T>"
"6745splitHere46","4535958splitHere46","T"
"6746splitHere46","4535958splitHere46","void pushAll(Collection<? extends E> src);<newline46mondego>//src is an E producer<newline46mondego><newline46mondego>void popAll(Collection<? super E> dst);<newline46mondego>// dst is an E consumer<newline46mondego>"
"6747splitHere46","4536269splitHere46","WebClient wc = new WebClient(BrowserVersion.FIREFOX_3_6);<newline46mondego>HtmlPage page = wc.getPage(<doubleQuotes46>http://urlhere<doubleQuotes46>);<newline46mondego>page.executeJavaScript(<doubleQuotes46>JS code here<doubleQuotes46>);<newline46mondego>"
"6748splitHere46","4536287splitHere46","public interface Stack<newline46mondego>{<newline46mondego>    void push(Object o);<newline46mondego>    Object pop();<newline46mondego>}<newline46mondego>"
"6749splitHere46","4536287splitHere46","public interface Stack<T><newline46mondego>{<newline46mondego>    void push(T o);<newline46mondego>    T pop();<newline46mondego>}<newline46mondego>"
"6750splitHere46","4536372splitHere46","Calendar c=Calendar.getInstance();<newline46mondego>c.set(Calendar.DAY_OF_WEEK,Calendar.SUNDAY);<newline46mondego>c.set(Calendar.HOUR_OF_DAY,0);<newline46mondego>c.set(Calendar.MINUTE,0);<newline46mondego>c.set(Calendar.SECOND,0);<newline46mondego>DateFormat df=new SimpleDateFormat(<doubleQuotes46>EEE yyyy/MM/dd HH:mm:ss<doubleQuotes46>);<newline46mondego>System.out.println(df.format(c.getTime()));      // This past Sunday [ May include today ]<newline46mondego>c.add(Calendar.DATE,7);<newline46mondego>System.out.println(df.format(c.getTime()));      // Next Sunday<newline46mondego>c.add(Calendar.DATE,7);<newline46mondego>System.out.println(df.format(c.getTime()));      // Sunday after next<newline46mondego>"
"6751splitHere46","4536372splitHere46","Sun 2010/12/26 00:00:00<newline46mondego>Sun 2011/01/02 00:00:00<newline46mondego>Sun 2011/01/09 00:00:00<newline46mondego>"
"6752splitHere46","4536381splitHere46","Calendar c=Calendar.getInstance();<newline46mondego>c.set(Calendar.DAY_OF_WEEK,Calendar.SUNDAY);<newline46mondego>c.set(Calendar.HOUR_OF_DAY,0);<newline46mondego>c.set(Calendar.MINUTE,0);<newline46mondego>c.set(Calendar.SECOND,0);<newline46mondego>DateFormat df=new SimpleDateFormat(<doubleQuotes46>EEE yyyy/MM/dd HH:mm:ss<doubleQuotes46>);<newline46mondego>System.out.println(df.format(c.getTime()));      // This past Sunday [ May include today ]<newline46mondego>c.add(Calendar.DATE,7);<newline46mondego>System.out.println(df.format(c.getTime()));      // Next Sunday<newline46mondego>c.add(Calendar.DATE,7);<newline46mondego>System.out.println(df.format(c.getTime()));      // Sunday after next<newline46mondego>"
"6753splitHere46","4536381splitHere46","Sun 2010/12/26 00:00:00<newline46mondego>Sun 2011/01/02 00:00:00<newline46mondego>Sun 2011/01/09 00:00:00<newline46mondego>"
"6754splitHere46","4536449splitHere46","public class Foo {<newline46mondego><newline46mondego>    private DateInterval dateInterval;<newline46mondego><newline46mondego>    @Embedded<newline46mondego>    @AttributeOverrides({<newline46mondego>        @AttributeOverride(name=<doubleQuotes46>startDate<doubleQuotes46>, column=@Column(nullable=true)),<newline46mondego>        @AttributeOverride(name=<doubleQuotes46>endDate<doubleQuotes46>, column=@Column(nullable=true))<newline46mondego>    })<newline46mondego>    public DateInterval getDateInterval() { return this.dateInterval; }<newline46mondego>    public void setDateInterval(DateInterval dateInterval) { this.dateInterval = dateInterval; }<newline46mondego><newline46mondego>}<newline46mondego>"
"6755splitHere46","4536471splitHere46","public class DisplayBitmaps extends UiApplication<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        DisplayBitmaps theApp = new DisplayBitmaps();       <newline46mondego>        theApp.enterEventDispatcher();<newline46mondego>    }<newline46mondego><newline46mondego>    public DisplayBitmaps()<newline46mondego>    {     <newline46mondego>        pushScreen(new DisplayBitmapsScreen());<newline46mondego>    }    <newline46mondego>}<newline46mondego><newline46mondego>final class DisplayBitmapsScreen extends MainScreen<newline46mondego>{<newline46mondego>    DisplayBitmapsScreen() {  <newline46mondego>        try {<newline46mondego>            Thread.sleep(2000); // wait for the simulator SDCard to initialize in this example, on a phone this may take longer<newline46mondego>            // for a better way see http://www.blackberry.com/knowledgecenterpublic/livelink.exe/fetch/2000/348583/800332/1295814/How_To_-_Programmatically_determine_if_a_microSD_card_has_been_inserted.html?nodeid=1295868&vernum=0 <newline46mondego>            FileConnection fc = (FileConnection) Connector.open(<doubleQuotes46>file:///SDCard/BlackBerry/pictures/image.png<doubleQuotes46>);<newline46mondego>            if (fc.exists()) {<newline46mondego>                byte[] image = new byte[(int) fc.fileSize()];<newline46mondego>                InputStream inStream = fc.openInputStream();<newline46mondego>                inStream.read(image);<newline46mondego>                inStream.close();<newline46mondego>                //EncodedImages are useful for further file manipulation, otherwise you can go straight to Bitmap<newline46mondego>                //EncodedImage encodedImage = EncodedImage.createEncodedImage(image, 0, -1); <newline46mondego>                //Bitmap bitmap = encodedImage.getBitmap();<newline46mondego>                Bitmap bitmap = Bitmap.createBitmapFromBytes(image, 0, -1, 1);<newline46mondego>                BitmapField bitmapField = new BitmapField(bitmap);<newline46mondego>                fc.close();<newline46mondego>                add(bitmapField);<newline46mondego>            }<newline46mondego>        } catch (Exception e) { System.out.println(<doubleQuotes46>EXCEPTION <doubleQuotes46> + e); }<newline46mondego>    }<newline46mondego><newline46mondego>    public void close()<newline46mondego>    {  <newline46mondego>        super.close();<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"6756splitHere46","4537251splitHere46","<doubleQuotes46>Ghi<doubleQuotes46>"
"6757splitHere46","4537251splitHere46","Abc<newline46mondego>Def<newline46mondego>Ghi<newline46mondego>12345<newline46mondego>"
"6758splitHere46","4537251splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    String example = <doubleQuotes46>AbcDefGhi12345<doubleQuotes46>;<newline46mondego><newline46mondego>    if (example.matches(<doubleQuotes46>(([A-Z][a-z]+)+)([0-9]+)<doubleQuotes46>)) {<newline46mondego><newline46mondego>        Scanner s = new Scanner(example);<newline46mondego><newline46mondego>        String m;<newline46mondego>        while ((m = s.findWithinHorizon(<doubleQuotes46>[A-Z][a-z]+<doubleQuotes46>, 0)) != null)<newline46mondego>            System.out.println(m);<newline46mondego><newline46mondego>        System.out.println(s.findWithinHorizon(<doubleQuotes46>[0-9]+<doubleQuotes46>, 0));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6759splitHere46","4537659splitHere46","textArea.setCaretPosition(textArea.getDocument().getLength());<newline46mondego>"
"6760splitHere46","4537744splitHere46","public class MyApplication {<newline46mondego><newline46mondego>    public MyApplication() {<newline46mondego>        // Initialize and run application<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new MyApplication();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6761splitHere46","4537744splitHere46","public class MyApplication {<newline46mondego><newline46mondego>    public MyApplication() {<newline46mondego>        // Initialize application<newline46mondego>    }<newline46mondego><newline46mondego>    public void run() {<newline46mondego>        // Run application<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        MyApplication app = new MyApplication();<newline46mondego>        app.run();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6762splitHere46","4537764splitHere46","package javaapplication3;<newline46mondego><newline46mondego>import javax.swing.JDialog;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JLabel;<newline46mondego>import javax.swing.SwingUtilities;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>public static void main(String[] args)<newline46mondego>        throws Exception {<newline46mondego>    SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego><newline46mondego>        final JLabel jLabel = new JLabel(<doubleQuotes46>Please wait...<doubleQuotes46>);<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            JFrame myFrame = new JFrame(<doubleQuotes46>Main frame<doubleQuotes46>);<newline46mondego>            myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            myFrame.setSize(750, 500);<newline46mondego>            myFrame.setLocationRelativeTo(null);<newline46mondego>            myFrame.setVisible(true);<newline46mondego><newline46mondego>            JDialog d = new JDialog(myFrame, <doubleQuotes46>I'm waiting<doubleQuotes46>);<newline46mondego><newline46mondego>            d.add(jLabel);<newline46mondego>            d.setSize(300, 200);<newline46mondego>            d.setLocationRelativeTo(null);<newline46mondego>            d.setVisible(true);<newline46mondego><newline46mondego>            new Thread(new Runnable() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego><newline46mondego>                public void run() {<newline46mondego>                    try {<newline46mondego>                        Thread.sleep(3000); // simulate process<newline46mondego>                        jLabel.setText(<doubleQuotes46>Done<doubleQuotes46>);   // HERE: should be done on EDT!<newline46mondego>                    } catch (InterruptedException ex) {<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }).start();<newline46mondego><newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>}<newline46mondego>"
"6763splitHere46","4537764splitHere46","main()"
"6764splitHere46","4537764splitHere46","SwingUtilities.invokeAndWait(...)"
"6765splitHere46","4537764splitHere46","Thread.wait(...)"
"6766splitHere46","4537764splitHere46","SwingWorker"
"6767splitHere46","4537764splitHere46","SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            public void run() {<newline46mondego>                jLabel.setText(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>"
"6768splitHere46","4537764splitHere46","public static void main(String[] args)<newline46mondego>        throws Exception {<newline46mondego>    SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego><newline46mondego>        final JFrame myFrame = new JFrame(<doubleQuotes46>Main frame<doubleQuotes46>);<newline46mondego>        final JLabel jLabel = new JLabel(<doubleQuotes46>Please wait...<doubleQuotes46>);<newline46mondego>        final JDialog d = new JDialog(myFrame, <doubleQuotes46>I'm waiting<doubleQuotes46>);<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void run() {<newline46mondego>            myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            myFrame.setSize(750, 500);<newline46mondego>            myFrame.setLocationRelativeTo(null);<newline46mondego>            myFrame.setVisible(true);<newline46mondego><newline46mondego>            d.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);<newline46mondego><newline46mondego>            d.add(jLabel);<newline46mondego>            d.setSize(300, 200);<newline46mondego>            d.setLocationRelativeTo(null);<newline46mondego>            new Thread(new Runnable() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void run() {<newline46mondego>                    try {<newline46mondego>                        Thread.sleep(3000); // simulate process<newline46mondego>                        System.out.println(<doubleQuotes46>After<doubleQuotes46>);<newline46mondego>                        SwingUtilities.invokeLater(new Runnable() {<newline46mondego><newline46mondego>                            public void run() {<newline46mondego><newline46mondego><newline46mondego>                                d.setVisible(false);<newline46mondego>                                d.dispose();<newline46mondego><newline46mondego>                                myFrame.setVisible(false);<newline46mondego>                                myFrame.dispose();<newline46mondego>                            }<newline46mondego>                        });<newline46mondego>                    } catch (InterruptedException ex) {<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }).start();<newline46mondego>            d.setVisible(true);<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"6769splitHere46","4537764splitHere46","SwingUtilities."
"6770splitHere46","4537764splitHere46","invokeAndWait()"
"6771splitHere46","4537764splitHere46","invokeLater()"
"6772splitHere46","4537764splitHere46","Thread"
"6773splitHere46","4537764splitHere46","start()"
"6774splitHere46","4537764splitHere46","SwingWorker"
"6775splitHere46","4537764splitHere46","Thread"
"6776splitHere46","4537782splitHere46","java.awt.MouseInfo.getNumberOfButtons();<newline46mondego>"
"6777splitHere46","4537782splitHere46","awt"
"6778splitHere46","4537889splitHere46","\w"
"6779splitHere46","4537889splitHere46","-"
"6780splitHere46","4537889splitHere46","."
"6781splitHere46","4537889splitHere46","Pattern pattern1 = Pattern.compile(<doubleQuotes46>^[\\.\\w-]*@[\\.\\w-]*$<doubleQuotes46>);<newline46mondego>"
"6782splitHere46","4537889splitHere46","Pattern pattern1 = Pattern.compile(<doubleQuotes46>^[\\.\\w-]*(@[\\.\\w-]*)?$<doubleQuotes46>);<newline46mondego>"
"6783splitHere46","4538162splitHere46","user_id | article_id<newline46mondego>1234         1<newline46mondego>1234         5<newline46mondego>1100         1<newline46mondego>"
"6784splitHere46","4538162splitHere46","{ 1, 5 }<newline46mondego>"
"6785splitHere46","4538211splitHere46","<repositories>"
"6786splitHere46","4538211splitHere46","settings.xml"
"6787splitHere46","4538211splitHere46","pom.xml"
"6788splitHere46","4538211splitHere46","<distributionManagement>"
"6789splitHere46","4538211splitHere46","pom.xml"
"6790splitHere46","4538266splitHere46","<mui:menu .../>"
"6791splitHere46","4538354splitHere46","ClassLoader.getResourceAsStream(..)"
"6792splitHere46","4538354splitHere46","URL.openStream()"
"6793splitHere46","4538354splitHere46","java.util.ServiceLoader"
"6794splitHere46","4538361splitHere46","EmbeddedGraphDatabase graphDb = ...<newline46mondego>IndexService index = new LuceneIndexService(graphDb);<newline46mondego>BasicGraphDatabaseServer server = new LocalGraphDatabase(graphDb);<newline46mondego>server.registerIndexService(index, <doubleQuotes46>lucene index<doubleQuotes46>);<newline46mondego>// Expose the server through RMI as usual...<newline46mondego>"
"6795splitHere46","4538361splitHere46","RemoteGraphDatabase graphDb = ...<newline46mondego>IndexService index = new RemoteIndexService(graphDb, <doubleQuotes46>lucene index<doubleQuotes46>);<newline46mondego>// business as usual...<newline46mondego>"
"6796splitHere46","4538395splitHere46","<users><newline46mondego>...<newline46mondego>...<newline46mondego><user><newline46mondego>  <username>first_user</username><newline46mondego>  <password>some_obfuscated_password</password><newline46mondego>  <permission>1,3,4</permission><newline46mondego>  <otherDetails>some detail </otherDetails><newline46mondego></user><newline46mondego></users><newline46mondego>"
"6797splitHere46","4538452splitHere46","FTPClient.retrieveFileStream(String)"
"6798splitHere46","4538463splitHere46","class Item <T> {<newline46mondego>    NeigborList<T> neighbors;<newline46mondego>}<newline46mondego><newline46mondego>class WithName extends Item<WithName> {<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6799splitHere46","4538679splitHere46","startAllocCounting()"
"6800splitHere46","4538679splitHere46","android.os.Debug"
"6801splitHere46","4538764splitHere46","AssetManager"
"6802splitHere46","4538764splitHere46","open(String filename);"
"6803splitHere46","4538764splitHere46","InputStream"
"6804splitHere46","4538764splitHere46","assets"
"6805splitHere46","4538833splitHere46","getFormatName"
"6806splitHere46","4538833splitHere46","String format = getFormatName(new ByteArrayInputStream(imageData));<newline46mondego>BufferedImage img = ImageIO.read(new ByteArrayInputStream(imageData));<newline46mondego>"
"6807splitHere46","4538902splitHere46","@WebServlet"
"6808splitHere46","4538902splitHere46","@WebListener"
"6809splitHere46","4538917splitHere46","simpleVariable"
"6810splitHere46","4538942splitHere46","ObjectOutputStream"
"6811splitHere46","4538942splitHere46","private void writeObject(java.io.ObjectOutputStream out) {<newline46mondego>   out.defaultWriteObject();<newline46mondego>   log.info(<doubleQuotes46>Object of type <doubleQuotes46> + <newline46mondego>      getClass().getName() + <doubleQuotes46> is being serialized<doubleQuotes46>);<newline46mondego>   // optionally include a stacktrace here, or use a debugger, to see<newline46mondego>   // when exactly it happened<newline46mondego>}<newline46mondego>"
"6812splitHere46","4538973splitHere46","<doubleQuotes46>\++?<doubleQuotes46>"
"6813splitHere46","4538973splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\\++?<doubleQuotes46>);<newline46mondego>"
"6814splitHere46","4538973splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\\+\\d+<doubleQuotes46>);<newline46mondego>"
"6815splitHere46","4538973splitHere46","\+\d+"
"6816splitHere46","4538996splitHere46","glassfish/modules"
"6817splitHere46","4538996splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>  xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego><newline46mondego>    <groupId>com.mycompany</groupId><newline46mondego>    <artifactId>security.realm</artifactId><newline46mondego>    <version>1.0-SNAPSHOT</version><newline46mondego>    <packaging>bundle</packaging><newline46mondego><newline46mondego>    <name>Custom JDBCRealm OSGi</name><newline46mondego>    <url>http://maven.apache.org</url><newline46mondego><newline46mondego>    <properties><newline46mondego>        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><newline46mondego>    </properties><newline46mondego><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>org.glassfish.security</groupId><newline46mondego>            <artifactId>security</artifactId><newline46mondego>            <version>3.1-b33</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego><newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>                <groupId>org.apache.maven.plugins</groupId><newline46mondego>                <artifactId>maven-compiler-plugin</artifactId><newline46mondego>                <configuration><newline46mondego>                    <source>1.6</source><newline46mondego>                    <target>1.6</target><newline46mondego>                    <optimise>true</optimise><newline46mondego>                    <debug>true</debug><newline46mondego>                    <encoding>UTF-8</encoding><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>            <plugin><newline46mondego>                <groupId>org.apache.felix</groupId><newline46mondego>                <artifactId>maven-bundle-plugin</artifactId><newline46mondego>                <extensions>true</extensions><newline46mondego>                <configuration><newline46mondego>                    <instructions><newline46mondego>                        <Export-Package><newline46mondego>                            ${project.groupId}.${project.artifactId};version=${project.version}<newline46mondego>                        </Export-Package><newline46mondego>                        <Import-Package><newline46mondego>                            com.sun.appserv.security,<newline46mondego>                            org.glassfish.security.common,<newline46mondego>                            com.sun.enterprise.security.auth.realm,<newline46mondego>                            com.sun.enterprise.security.auth.login.common,<newline46mondego>                            java.util,<newline46mondego>                            javax.security.auth<newline46mondego>                        </Import-Package><newline46mondego>                    </instructions><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>        </plugins><newline46mondego>    </build><newline46mondego></project><newline46mondego>"
"6818splitHere46","4539129splitHere46","try {<newline46mondego>  FileInputStream stream = new FileInputStream(<doubleQuotes46>image.psd<doubleQuotes46>);<newline46mondego>  PsdImage psdFile = new PsdImage(stream);<newline46mondego>  System.out.println(<doubleQuotes46>Image width: <doubleQuotes46> + psdFile.getWidth());<newline46mondego>  System.out.println(<doubleQuotes46>Image height: <doubleQuotes46> + psdFile.getHeight());<newline46mondego>  PsdView view = new PsdView();<newline46mondego>  view.setPsdFile(psdFile);<newline46mondego>  getContentPane().add(view);<newline46mondego>} catch (IOException e) {<newline46mondego>  System.err.println(<doubleQuotes46>Error reading image file image.psd: <doubleQuotes46> + e);<newline46mondego>}<newline46mondego>"
"6819splitHere46","4539263splitHere46","FileConnection path = (FileConnection) Connector.open(<newline46mondego>        <doubleQuotes46>file:///SDCard/BlackBerry/documents/<doubleQuotes46> + <doubleQuotes46>status.zip<doubleQuotes46>,<newline46mondego>        Connector.READ_WRITE);<newline46mondego><newline46mondego>if (!path.exists()) {<newline46mondego>    path.create();<newline46mondego>}<newline46mondego>ZipOutputStream zinstream = new ZipOutputStream(path.openOutputStream());<newline46mondego><newline46mondego>// Adding Entries<newline46mondego>FileConnection jsonfile = (FileConnection) Connector.open(<newline46mondego>        <doubleQuotes46>file:///SDCard/BlackBerry/documents/<doubleQuotes46> + <doubleQuotes46>status.json<doubleQuotes46>,<newline46mondego>        Connector.READ_WRITE);<newline46mondego>if (!jsonfile.exists()) {<newline46mondego>    jsonfile.create();<newline46mondego>}<newline46mondego>int fileSize = (int) jsonfile.fileSize();<newline46mondego>if (fileSize > -1) {<newline46mondego>    InputStream input = jsonfile.openInputStream();<newline46mondego>    byte[] data = new byte[1024];<newline46mondego><newline46mondego>    ZipEntry entry = new ZipEntry(jsonfile.getName());<newline46mondego>    zinstream.putNextEntry(entry);<newline46mondego><newline46mondego>    int len;<newline46mondego>    while ((len = input.read(data)) > 0) {<newline46mondego>        zinstream.write(data, 0, len);<newline46mondego>    }<newline46mondego>    zinstream.closeEntry();<newline46mondego>}<newline46mondego>jsonfile.close();<newline46mondego>zinstream.close();<newline46mondego>path.close();<newline46mondego>"
"6820splitHere46","4539278splitHere46","<doubleQuotes46>id<doubleQuotes46>:0<newline46mondego>"
"6821splitHere46","4539278splitHere46","{<doubleQuotes46>id<doubleQuotes46>:0, <doubleQuotes46>Name<doubleQuotes46>:<doubleQuotes46>an Object<doubleQuotes46>}<newline46mondego>"
"6822splitHere46","4539278splitHere46","{<doubleQuotes46>Key<doubleQuotes46>:{<doubleQuotes46>id<doubleQuotes46>:0, <doubleQuotes46>Name<doubleQuotes46>:<doubleQuotes46>an Object<doubleQuotes46>}, <doubleQuotes46>Value<doubleQuotes46>:true}<newline46mondego>"
"6823splitHere46","4539278splitHere46","[{<doubleQuotes46>Key<doubleQuotes46>:{<doubleQuotes46>id<doubleQuotes46>:0, <doubleQuotes46>Name<doubleQuotes46>:<doubleQuotes46>an Object<doubleQuotes46>}, <doubleQuotes46>Value<doubleQuotes46>:true},<newline46mondego> {<doubleQuotes46>Key<doubleQuotes46>:{<doubleQuotes46>id<doubleQuotes46>:0, <doubleQuotes46>Name<doubleQuotes46>:<doubleQuotes46>an Object<doubleQuotes46>}, <doubleQuotes46>Value<doubleQuotes46>:true}]<newline46mondego>"
"6824splitHere46","4539318splitHere46","MCRYPT_RIJNDAEL_256"
"6825splitHere46","4539318splitHere46","MCRYPT_RIJNDAEL_128"
"6826splitHere46","4539318splitHere46","output = cipher.doFinal(Base64.decodeBase64(input));<newline46mondego>return new String(output);<newline46mondego>"
"6827splitHere46","4539318splitHere46","byte[]"
"6828splitHere46","4539318splitHere46","output = cipher.doFinal(Base64.decodeBase64(input));<newline46mondego>return new String(Base64.encodeBase64(output), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"6829splitHere46","4539318splitHere46","byte[]"
"6830splitHere46","4539419splitHere46","EJB module"
"6831splitHere46","4539419splitHere46","Web module"
"6832splitHere46","4539419splitHere46","Web module"
"6833splitHere46","4539419splitHere46","EJB module"
"6834splitHere46","4539419splitHere46","EJB module"
"6835splitHere46","4539419splitHere46","EJB module"
"6836splitHere46","4539419splitHere46","Web module"
"6837splitHere46","4539419splitHere46","EJB module"
"6838splitHere46","4539461splitHere46","public List<E> toList() {<newline46mondego>    List<E> result = new ArrayList<E>();<newline46mondego>    treeToList(root, result);<newline46mondego>    return result;<newline46mondego>}<newline46mondego><newline46mondego>private void treeToList(Node<E> node, List<E> goal) {<newline46mondego>    if (node != null) {<newline46mondego>        treeToList(node.left, goal);<newline46mondego>        goal.add(node.value);<newline46mondego>        treeToList(node.right, goal);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6839splitHere46","4539652splitHere46","/*<newline46mondego>   Copyright 2010 Michael Schierl (schierlm@gmx.de)<newline46mondego><newline46mondego>   Licensed under the Apache License, Version 2.0 (the <doubleQuotes46>License<doubleQuotes46>);<newline46mondego>   you may not use this file except in compliance with the License.<newline46mondego>   You may obtain a copy of the License at<newline46mondego><newline46mondego>       http://www.apache.org/licenses/LICENSE-2.0<newline46mondego><newline46mondego>   Unless required by applicable law or agreed to in writing, software<newline46mondego>   distributed under the License is distributed on an <doubleQuotes46>AS IS<doubleQuotes46> BASIS,<newline46mondego>   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<newline46mondego>   See the License for the specific language governing permissions and<newline46mondego>   limitations under the License.<newline46mondego> */<newline46mondego>package difflib.annotate;<newline46mondego><newline46mondego>import java.util.*;<newline46mondego><newline46mondego>import difflib.*;<newline46mondego><newline46mondego>/**<newline46mondego> * Generates an annotated version of a revision based on a list of older<newline46mondego> * revisions, like <tt>cvs annotate</tt> or <tt>svn blame</tt>.<newline46mondego> * <newline46mondego> * @author <a href=<doubleQuotes46>schierlm@gmx.de<doubleQuotes46>>Michael Schierl</a><newline46mondego> * <newline46mondego> * @param <R><newline46mondego> *            Type of the revision metadata<newline46mondego> */<newline46mondego>public class Annotate<R> {<newline46mondego><newline46mondego>    private final List<R> revisions;<newline46mondego>    private final int[] lineNumbers;<newline46mondego>    private R currentRevision;<newline46mondego>    private final List<Object> currentLines;<newline46mondego>    private final List<Integer> currentLineMap;<newline46mondego><newline46mondego>    /**<newline46mondego>     * Creates a new annotation generator.<newline46mondego>     * <newline46mondego>     * @param revision<newline46mondego>     *            Revision metadata for the revision to be annotated<newline46mondego>     * @param targetLines<newline46mondego>     *            Lines of the revision to be annotated<newline46mondego>     */<newline46mondego>    public Annotate(R revision, List<?> targetLines) {<newline46mondego>        revisions = new ArrayList<R>();<newline46mondego>        lineNumbers = new int[targetLines.size()];<newline46mondego>        currentRevision = revision;<newline46mondego>        currentLines = new ArrayList<Object>(targetLines);<newline46mondego>        currentLineMap = new ArrayList<Integer>();<newline46mondego>        for (int i = 0; i < lineNumbers.length; i++) {<newline46mondego>            lineNumbers[i] = -1;<newline46mondego>            revisions.add(null);<newline46mondego>            currentLineMap.add(i);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Check whether there are still lines that are unannotated. In that case,<newline46mondego>     * more older revisions should be retrieved and passed to the function. Note<newline46mondego>     * that as soon as you pass an empty revision, all lines will be annotated<newline46mondego>     * (with a later revision), therefore if you do not have any more revisions,<newline46mondego>     * pass an empty revision to annotate the rest of the lines.<newline46mondego>     */<newline46mondego>    public boolean areLinesUnannotated() {<newline46mondego>        for (int i = 0; i < lineNumbers.length; i++) {<newline46mondego>            if (lineNumbers[i] == -1 || revisions.get(i) == null)<newline46mondego>                return true;<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Add the previous revision and update annotation info.<newline46mondego>     * <newline46mondego>     * @param revision<newline46mondego>     *            Revision metadata for this revision<newline46mondego>     * @param lines<newline46mondego>     *            Lines of this revision<newline46mondego>     */<newline46mondego>    public void addRevision(R revision, List<?> lines) {<newline46mondego>        Patch patch = DiffUtils.diff(currentLines, lines);<newline46mondego>        int lineOffset = 0; // remember number of already deleted/added lines<newline46mondego>        for (Delta d : patch.getDeltas()) {<newline46mondego>            Chunk original = d.getOriginal();<newline46mondego>            Chunk revised = d.getRevised();<newline46mondego>            int pos = original.getPosition() + lineOffset;<newline46mondego>            // delete lines<newline46mondego>            for (int i = 0; i < original.getSize(); i++) {<newline46mondego>                int origLine = currentLineMap.remove(pos);<newline46mondego>                currentLines.remove(pos);<newline46mondego>                if (origLine != -1) {<newline46mondego>                    lineNumbers[origLine] = original.getPosition() + i;<newline46mondego>                    revisions.set(origLine, currentRevision);<newline46mondego>                }<newline46mondego>            }<newline46mondego>            for (int i = 0; i < revised.getSize(); i++) {<newline46mondego>                currentLines.add(pos + i, revised.getLines().get(i));<newline46mondego>                currentLineMap.add(pos + i, -1);<newline46mondego>            }<newline46mondego>            lineOffset += revised.getSize() - original.getSize();<newline46mondego>        }<newline46mondego><newline46mondego>        currentRevision = revision;<newline46mondego>        if (!currentLines.equals(lines))<newline46mondego>            throw new RuntimeException(<doubleQuotes46>Patch application failed<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Return the result of the annotation. It will be a List of the same length<newline46mondego>     * as the target revision, for which every entry states the revision where<newline46mondego>     * the line appeared last.<newline46mondego>     */<newline46mondego>    public List<R> getAnnotatedRevisions() {<newline46mondego>        return Collections.unmodifiableList(revisions);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Return the result of the annotation. It will be a List of the same length<newline46mondego>     * as the target revision, for which every entry states the line number in<newline46mondego>     * the revision where the line appeared last.<newline46mondego>     */<newline46mondego>    public int[] getAnnotatedLineNumbers() {<newline46mondego>        return (int[]) lineNumbers.clone();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6840splitHere46","4539710splitHere46","mvn clean deploy"
"6841splitHere46","4539710splitHere46","mvn jetty:run"
"6842splitHere46","4539781splitHere46","setOpaque(false)"
"6843splitHere46","4539841splitHere46","getIdentifier()"
"6844splitHere46","4539841splitHere46","(test != 0)"
"6845splitHere46","4539841splitHere46","mContext.get....."
"6846splitHere46","4539973splitHere46","mvn ... deploy"
"6847splitHere46","4539973splitHere46","mvn deploy"
"6848splitHere46","4539973splitHere46","mvn jetty:run"
"6849splitHere46","4539973splitHere46","mvn tomcat:run"
"6850splitHere46","4540019splitHere46","Cookie cookie = new Cookie(<doubleQuotes46>myCookie<doubleQuotes46>, <doubleQuotes46>myValue<doubleQuotes46>);<newline46mondego>cookie.setMaxAge(60 * 60);<newline46mondego>cookie.setDomain(<doubleQuotes46>.myserver.com<doubleQuotes46>);<newline46mondego>"
"6851splitHere46","4540195splitHere46","dt = new DateTime(date1);<newline46mondego>dt = dt.plusMinutes(30);<newline46mondego>System.out.println(<doubleQuotes46><doubleQuotes46>+dt);<newline46mondego>"
"6852splitHere46","4540212splitHere46","<doubleQuotes46>\r\n<doubleQuotes46>"
"6853splitHere46","4540212splitHere46","String.split()"
"6854splitHere46","4540212splitHere46","str.split(<doubleQuotes46>\n<doubleQuotes46>)"
"6855splitHere46","4540212splitHere46","str.split(<doubleQuotes46>\r\n<doubleQuotes46>)"
"6856splitHere46","4540378splitHere46","Callable"
"6857splitHere46","4540378splitHere46","Callable<String>"
"6858splitHere46","4540378splitHere46","Callable<String>"
"6859splitHere46","4540378splitHere46","Processor<String, String>"
"6860splitHere46","4540378splitHere46","Callable<String>"
"6861splitHere46","4540378splitHere46","Callable"
"6862splitHere46","4540378splitHere46","Callable"
"6863splitHere46","4540378splitHere46","JMeterTask"
"6864splitHere46","4540378splitHere46","Callable<JMeterRawResults>"
"6865splitHere46","4540378splitHere46","Callable<String>"
"6866splitHere46","4540378splitHere46","JMeterComponent"
"6867splitHere46","4540378splitHere46","Processor"
"6868splitHere46","4540378splitHere46","Renderer"
"6869splitHere46","4540378splitHere46","JMeterComponent"
"6870splitHere46","4540378splitHere46","Callable<JMeterRawResults>"
"6871splitHere46","4540378splitHere46","TypeLiteral"
"6872splitHere46","4540378splitHere46","bind(new TypeLiteral<Callable<JMeterRawResults>>(){})<newline46mondego>    .annotatedWith(Names.named(<doubleQuotes46>JMeter<doubleQuotes46>))<newline46mondego>    .to(JMeterTask.class);<newline46mondego>"
"6873splitHere46","4540519splitHere46","i /= f"
"6874splitHere46","4540519splitHere46","i"
"6875splitHere46","4540519splitHere46","i = i / f"
"6876splitHere46","4540519splitHere46","f / i"
"6877splitHere46","4540519splitHere46","i"
