"1splitHere46","2204685splitHere46","transactionDate"
"2splitHere46","2204685splitHere46","@Basic(optional = false)"
"3splitHere46","2204685splitHere46","optional"
"4splitHere46","2204685splitHere46","@Basic"
"5splitHere46","2205519splitHere46","new BufferedInputStream(new FileInputStream(<doubleQuotes46>myfile.txt<doubleQuotes46>));"
"6splitHere46","2205519splitHere46","new InputStreamReader(new FileInputStream(<doubleQuotes46>myfile.txt<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>);"
"7splitHere46","2205519splitHere46","new PushbackInputStream(System.in);"
"8splitHere46","2205600splitHere46","hashCode()"
"9splitHere46","2205600splitHere46","equals()"
"10splitHere46","2205600splitHere46","Object"
"11splitHere46","2205825splitHere46","List<Person>"
"12splitHere46","2205825splitHere46","<people>"
"13splitHere46","2205825splitHere46","People"
"14splitHere46","2205825splitHere46","<People>"
"15splitHere46","2205825splitHere46","People"
"16splitHere46","2205825splitHere46","@GET<newline46mondego>@Path(<doubleQuotes46>/TheListOfPeople<doubleQuotes46>)<newline46mondego>public People getListOfPeople() { <newline46mondego>    People people = new People();<newline46mondego>    people.getPerson().addAll(dao.getList()); // or something like it<newline46mondego><newline46mondego>    return people ;<newline46mondego>}<newline46mondego>"
"17splitHere46","2205850splitHere46","import java.util.regex.*;<newline46mondego><newline46mondego>public class Test<newline46mondego>{<newline46mondego>    private static final Pattern EMAIL_PATTERN = Pattern.compile<newline46mondego>        (<doubleQuotes46>Email:(.*?\\.edu)<doubleQuotes46>);<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        String testString = <doubleQuotes46>FooEmail:jjj@xyz.edu Bar Email:mmm@abc.edu Baz<doubleQuotes46>;<newline46mondego><newline46mondego>        printEmails(testString);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void printEmails(String input)<newline46mondego>    {<newline46mondego>        Matcher matcher = EMAIL_PATTERN.matcher(input);<newline46mondego>        while (matcher.find())<newline46mondego>        {<newline46mondego>            System.out.println(matcher.group(1));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"18splitHere46","2205850splitHere46",".edu"
"19splitHere46","2205935splitHere46","public <T extends Enum<T>> void enumValues(Class<T> enumType) {<newline46mondego>        for (T c : enumType.getEnumConstants()) {<newline46mondego>             System.out.println(c.name());<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"20splitHere46","2205984splitHere46","JDialog dialog = null;<newline46mondego>    JOptionPane optionPane = new JOptionPane();<newline46mondego>    optionPane.setMessage(<doubleQuotes46>Set Message<doubleQuotes46>);<newline46mondego>    optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);<newline46mondego><newline46mondego>    JPanel panel = new JPanel();<newline46mondego>    panel.setLayout(new GridLayout(3,1));<newline46mondego>    String[] buttonTxt = {<doubleQuotes46>Need Help<doubleQuotes46>,<doubleQuotes46>Help Me<doubleQuotes46>,<doubleQuotes46>Counting<doubleQuotes46>};<newline46mondego>    JButton[] buttons = new JButton[buttonTxt.length];<newline46mondego>    for (int i = 0; i < buttonTxt.length; i++)<newline46mondego>    {<newline46mondego>        buttons[i] = new JButton(buttonTxt[i]);<newline46mondego>        panel.add(buttons[i]);<newline46mondego>    }<newline46mondego>    optionPane.setOptionType(JOptionPane.DEFAULT_OPTION);<newline46mondego>    optionPane.add(panel);<newline46mondego>    dialog = optionPane.createDialog(null, <doubleQuotes46>Icon/Text Button<doubleQuotes46>);<newline46mondego>    dialog.setVisible(true);<newline46mondego>"
"21splitHere46","2206432splitHere46","System.out.println(Arrays.toString(<doubleQuotes46>a;b;c;d<doubleQuotes46>.split(<doubleQuotes46>(?<=;)<doubleQuotes46>)));<newline46mondego>System.out.println(Arrays.toString(<doubleQuotes46>a;b;c;d<doubleQuotes46>.split(<doubleQuotes46>(?=;)<doubleQuotes46>)));<newline46mondego>System.out.println(Arrays.toString(<doubleQuotes46>a;b;c;d<doubleQuotes46>.split(<doubleQuotes46>((?<=;)|(?=;))<doubleQuotes46>)));"
"22splitHere46","2206432splitHere46","[a;, b;, c;, d]<newline46mondego>[a, ;b, ;c, ;d]<newline46mondego>[a, ;, b, ;, c, ;, d]"
"23splitHere46","2206432splitHere46","((?<=;)|(?=;))"
"24splitHere46","2206432splitHere46",";"
"25splitHere46","2206432splitHere46",";"
"26splitHere46","2206432splitHere46","static public final String <b>WITH_DELIMITER = <doubleQuotes46>((?<=%1$s)|(?=%1$s))<doubleQuotes46></b>;<newline46mondego>...<newline46mondego>public void someMethod() {<newline46mondego>...<newline46mondego>final String[] aEach = <doubleQuotes46>a;b;c;d<doubleQuotes46>.<b>split(String.format(WITH_DELIMITER, <doubleQuotes46>;<doubleQuotes46>))</b>;<newline46mondego>...<newline46mondego>}<newline46mondego>...<newline46mondego>"
"27splitHere46","2206592splitHere46","InputStream in = null;<newline46mondego>            CompilationUnit cu = null;<newline46mondego>            try<newline46mondego>            {<newline46mondego>                    in = new SEDInputStream(filename);<newline46mondego>                    cu = JavaParser.parse(in);<newline46mondego>            }<newline46mondego>            catch(ParseException x)<newline46mondego>            {<newline46mondego>                 // handle parse exceptions here.<newline46mondego>            }<newline46mondego>            finally<newline46mondego>            {<newline46mondego>                  in.close();<newline46mondego>            }<newline46mondego>            return cu;<newline46mondego>"
"28splitHere46","2206592splitHere46","public class MethodVisitor extends VoidVisitorAdapter<newline46mondego>  {<newline46mondego>        public void visit(MethodDeclaration n, Object arg)<newline46mondego>        {<newline46mondego>             // extract method information here.<newline46mondego>             // put in to hashmap<newline46mondego>        }<newline46mondego>  }<newline46mondego>"
"29splitHere46","2206592splitHere46","MethodVisitor visitor = new MethodVisitor();<newline46mondego>  visitor.visit(cu, null);<newline46mondego>"
"30splitHere46","2206604splitHere46","Boolean"
"31splitHere46","2206604splitHere46","boolean di = (Boolean) someObject;<newline46mondego>"
"32splitHere46","2206604splitHere46","Boolean"
"33splitHere46","2206604splitHere46","boolean di = ((Boolean) someObject).booleanValue();<newline46mondego>"
"34splitHere46","2206604splitHere46","someObject"
"35splitHere46","2206705splitHere46","DocumentListener"
"36splitHere46","2206705splitHere46","Document"
"37splitHere46","2206705splitHere46","JTextArea"
"38splitHere46","2206705splitHere46","textArea"
"39splitHere46","2206705splitHere46","textArea.getDocument().addDocumentListener( new DocumentListener() {<newline46mondego>  public void changedUpdate( DocumentEvent e )<newline46mondego>  {<newline46mondego>  }<newline46mondego><newline46mondego>  public void insertUpdate( DocumentEvent e )<newline46mondego>  {<newline46mondego>    System.out.println( <doubleQuotes46>insertUpdate: Added <doubleQuotes46> + e.getLength() + <newline46mondego>        <doubleQuotes46> characters, document length = <doubleQuotes46> + e.getDocument().getLength() );<newline46mondego>  }<newline46mondego><newline46mondego>  public void removeUpdate( DocumentEvent e )<newline46mondego>  {<newline46mondego>    System.out.println( <doubleQuotes46>removeUpdate: Removed <doubleQuotes46> + e.getLength() +<newline46mondego>        <doubleQuotes46> characters, document length = <doubleQuotes46> + e.getDocument().getLength() );<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"40splitHere46","2206752splitHere46","import java.util.UUID;<newline46mondego><newline46mondego>public class GenerateUUID {<newline46mondego><newline46mondego><newline46mondego>      public static final void main(String... aArgs){<newline46mondego>        //generate random UUIDs<newline46mondego>        UUID idOne = UUID.randomUUID();<newline46mondego>        UUID idTwo = UUID.randomUUID();<newline46mondego>        log(<doubleQuotes46>UUID One: <doubleQuotes46> + idOne);<newline46mondego>        log(<doubleQuotes46>UUID Two: <doubleQuotes46> + idTwo);<newline46mondego>      }<newline46mondego><newline46mondego>      private static void log(Object aObject){<newline46mondego>        System.out.println( String.valueOf(aObject) );<newline46mondego>      }<newline46mondego>    } <newline46mondego>"
"41splitHere46","2206752splitHere46",">java -cp . GenerateUUID<newline46mondego>UUID One: 067e6162-3b6f-4ae2-a171-2470b63dff00 <newline46mondego>UUID Two: 54947df8-0e9e-4471-a2f9-9af509fb5889<newline46mondego>"
"42splitHere46","2206865splitHere46","HttpServletrequest#getContextPath()"
"43splitHere46","2206865splitHere46","getServletPath()"
"44splitHere46","2206865splitHere46","${pageContext.request.contextPath}"
"45splitHere46","2206865splitHere46","<base>"
"46splitHere46","2206865splitHere46","<!doctype html><newline46mondego><html lang=<doubleQuotes46>en<doubleQuotes46>><newline46mondego>    <head><newline46mondego>        <title>SO question 2204870</title><newline46mondego>        <base href=<doubleQuotes46>${pageContext.request.contextPath}<doubleQuotes46>><newline46mondego>        <script src=<doubleQuotes46>js/global.js<doubleQuotes46>></script><newline46mondego>        <link rel=<doubleQuotes46>stylesheet<doubleQuotes46> href=<doubleQuotes46>css/global.css<doubleQuotes46>><newline46mondego>    </head><newline46mondego>    <body><newline46mondego>        <ul><newline46mondego>            <li><a href=<doubleQuotes46>home.jsp<doubleQuotes46>>Home</a></li><newline46mondego>            <li><a href=<doubleQuotes46>faq.jsp<doubleQuotes46>>FAQ</a></li><newline46mondego>            <li><a href=<doubleQuotes46>contact.jsp<doubleQuotes46>>Contact</a></li><newline46mondego>        </ul><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"47splitHere46","2206865splitHere46","<base>"
"48splitHere46","2206865splitHere46","/"
"49splitHere46","2206865splitHere46","<base>"
"50splitHere46","2206934splitHere46","@Override"
"51splitHere46","2206934splitHere46","private static final ThreadLocal messages = new ThreadLocal();<newline46mondego>private static final ThreadLocal dontIntercept = new ThreadLocal() {<newline46mondego>    protected Object initialValue() {<newline46mondego>        return Boolean.FALSE;<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"52splitHere46","2206934splitHere46","Boolean"
"53splitHere46","2206934splitHere46",".booleanValue()"
"54splitHere46","2206934splitHere46","Boolean.valueOf"
"55splitHere46","2207013splitHere46","<redirect />"
"56splitHere46","2207013splitHere46","history.go(-1)"
"57splitHere46","2207032splitHere46","class User {<newline46mondego>     private List<UserScreen> screens;<newline46mondego>     // more properties<newline46mondego>}<newline46mondego>class Screen {<newline46mondego>    // screen properties<newline46mondego>}<newline46mondego>class UserScreen {<newline46mondego>    private Screen screen;<newline46mondego>    private User user;<newline46mondego>    private int position;<newline46mondego>}<newline46mondego>"
"58splitHere46","2207032splitHere46","position"
"59splitHere46","2207032splitHere46","UserScreen"
"60splitHere46","2207153splitHere46","this"
"61splitHere46","2207153splitHere46","_myVar"
"62splitHere46","2207153splitHere46","this"
"63splitHere46","2207153splitHere46","someclass.Method(1);<newline46mondego>SomeClass.StaticMethod(1);<newline46mondego>"
"64splitHere46","2207153splitHere46","this"
"65splitHere46","2207153splitHere46","someclass.Method(this);<newline46mondego>var someclass = new SomeClass(this);<newline46mondego>"
"66splitHere46","2207169splitHere46","NumberFormatter"
"67splitHere46","2207169splitHere46","NumberFormat"
"68splitHere46","2207169splitHere46","stringToValue"
"69splitHere46","2207169splitHere46","class StrictNumberFormatter extends javax.swing.text.NumberFormatter {<newline46mondego>    @Override<newline46mondego>    public Object stringToValue(String text) throws ParseException {<newline46mondego>        Object parsedValue = super.stringToValue(text);<newline46mondego>        String expectedText = super.valueToString(parsedValue);<newline46mondego>        if (! super.stringToValue(expectedText).equals(parsedValue)) {<newline46mondego>            throw new ParseException(<doubleQuotes46>Rounding occurred<doubleQuotes46>, 0);<newline46mondego>        }<newline46mondego>        return parsedValue;<newline46mondego>    }<newline46mondego><newline46mondego>    public StrictNumberFormatter(NumberFormat nf) {<newline46mondego>        super(nf);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>NumberFormat nf = NumberFormat.getNumberInstance();<newline46mondego>nf.setMaximumFractionDigits(2);<newline46mondego>nf.setMinimumFractionDigits(2);<newline46mondego>JFormattedTextField.AbstractFormatter formatter = new StrictNumberFormatter(nf);<newline46mondego>final JFormattedTextField ftf = new JFormattedTextField(formatter);<newline46mondego>ftf.setValue(new BigDecimal(<doubleQuotes46>1234.50<doubleQuotes46>));<newline46mondego>"
"70splitHere46","2207169splitHere46","<doubleQuotes46>$1,000<doubleQuotes46>"
"71splitHere46","2207169splitHere46","<doubleQuotes46>$1000<doubleQuotes46>"
"72splitHere46","2207169splitHere46","<doubleQuotes46>$1.20<doubleQuotes46>"
"73splitHere46","2207169splitHere46","<doubleQuotes46>$1.2<doubleQuotes46>"
"74splitHere46","2207169splitHere46","NumberFormat"
"75splitHere46","2207169splitHere46","NumberFormat"
"76splitHere46","2207202splitHere46","@RequestMapping(method = RequestMethod.POST)<newline46mondego>public ModelAndView edit(User u) { ... }<newline46mondego>"
"77splitHere46","2207202splitHere46","User"
"78splitHere46","2207202splitHere46","@ModelAttribute"
"79splitHere46","2207202splitHere46","... (@ModelAttrbiute(<doubleQuotes46>u<doubleQuotes46>) User u) ...<newline46mondego>"
"80splitHere46","2207337splitHere46","parent<newline46mondego>  + simple-weather<newline46mondego>  + simple-webapp<newline46mondego>"
"81splitHere46","2207337splitHere46","pom"
"82splitHere46","2207337splitHere46","packaging"
"83splitHere46","2207337splitHere46","pom"
"84splitHere46","2207337splitHere46","jar"
"85splitHere46","2207337splitHere46","war"
"86splitHere46","2207337splitHere46","extends"
"87splitHere46","2207337splitHere46","<modules>"
"88splitHere46","2207337splitHere46","module"
"89splitHere46","2207337splitHere46","mvn clean install"
"90splitHere46","2207347splitHere46","empty"
"91splitHere46","2207347splitHere46","styleClass=<doubleQuotes46>#{empty obj.validationErrorMap ? ' ' :  <newline46mondego> (obj.validationErrorMap.contains('key') ? 'highlight_field' : 'highlight_row')}<doubleQuotes46><newline46mondego>"
"92splitHere46","2207347splitHere46","styleClass=<doubleQuotes46>#{empty obj.validationErrorMap ? ' ' :  <newline46mondego> (obj.validationErrorMap['key'] ne null ? 'highlight_field' : 'highlight_row')}<doubleQuotes46><newline46mondego>"
"93splitHere46","2207347splitHere46","Map"
"94splitHere46","2207347splitHere46","List"
"95splitHere46","2207347splitHere46","List"
"96splitHere46","2207347splitHere46","fn:contains"
"97splitHere46","2207347splitHere46","List"
"98splitHere46","2207347splitHere46","styleClass=<doubleQuotes46>#{empty obj.validationErrorMap ? ' ' :  <newline46mondego> (fn:contains(obj.validationErrorMap, 'key') ? 'highlight_field' : 'highlight_row')}<doubleQuotes46><newline46mondego>"
"99splitHere46","2207506splitHere46","persist()"
"100splitHere46","2207506splitHere46","persist()"
"101splitHere46","2207506splitHere46","persist()"
"102splitHere46","2207522splitHere46","${registrationVO.BCity}"
"103splitHere46","2207522splitHere46","Introspector.decapitalize"
"104splitHere46","2207522splitHere46","birthCity"
"105splitHere46","2207522splitHere46","${registrationVO.birthCity}"
"106splitHere46","2207619splitHere46","quicksort"
"107splitHere46","2207677splitHere46","Set"
"108splitHere46","2207677splitHere46","removeAll"
"109splitHere46","2207677splitHere46","int[]"
"110splitHere46","2207677splitHere46","List<Integer> list1 = Ints.asList(array1);<newline46mondego>List<Integer> list2 = Ints.asList(array2);<newline46mondego>"
"111splitHere46","2207677splitHere46","Set<Integer> set1 = new HashSet<Integer>(list1);<newline46mondego>"
"112splitHere46","2207677splitHere46","set1.removeAll(list2);<newline46mondego>"
"113splitHere46","2207677splitHere46","return Ints.toArray(set1);<newline46mondego>"
"114splitHere46","2207798splitHere46","Matcher.appendReplacement()"
"115splitHere46","2207798splitHere46","String in = <doubleQuotes46>A xx1 B xx2 C xx3 D<doubleQuotes46>;<newline46mondego>    Matcher matcher = Pattern.compile(<doubleQuotes46>xx(\\d)<doubleQuotes46>).matcher(in);<newline46mondego>    StringBuffer out = new StringBuffer();<newline46mondego>    while (matcher.find()) {<newline46mondego>        int num = Integer.parseInt(matcher.group(1));<newline46mondego>        matcher.appendReplacement(out, Integer.toString(num*num));<newline46mondego>    }<newline46mondego>    System.out.println(matcher.appendTail(out).toString());<newline46mondego>"
"116splitHere46","2207957splitHere46","interface Function<R, T> {<newline46mondego><newline46mondego>     R call(T... input);<newline46mondego>}<newline46mondego>"
"117splitHere46","2207957splitHere46","Foo"
"118splitHere46","2207957splitHere46","static <R, T> R runFunction(Function<R, T> function, T ... input){<newline46mondego>    try{<newline46mondego>       return function.call(input);<newline46mondego>    } catch(NullPointerException _null){<newline46mondego>       m_Logger.error(<doubleQuotes46>Null error exception caught in Blah::Foo<doubleQuotes46>);<newline46mondego>       return null;<newline46mondego>    } catch(Exception ex){<newline46mondego>       m_Logger.error( ex.getMessage() );<newline46mondego>       return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"119splitHere46","2207957splitHere46","class SumDoubles implements Function<Double, Double> {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Double call(Double... input) {<newline46mondego>        Double sum = 0.0;<newline46mondego><newline46mondego>        for (Double d : input) {<newline46mondego>            sum += d;<newline46mondego>        }<newline46mondego><newline46mondego>        return sum;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Test<newline46mondego>public void sum() {<newline46mondego>    Double sum = runFunction(new SumDoubles(), 1.0, 2.0, 3.0);<newline46mondego>    assertThat(sum, is(6.0));<newline46mondego>}<newline46mondego>"
"120splitHere46","2208389splitHere46","public abstract class parent {<newline46mondego>    private int field = 0;<newline46mondego><newline46mondego>    public parent(int f) {<newline46mondego>         field = f;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void m1() { /* m1's implementation */ }<newline46mondego>    public void m2() { /* m2's common implementation */ }<newline46mondego>}<newline46mondego><newline46mondego>public class child1 {<newline46mondego>    public child1() {<newline46mondego>        super(1);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void m2() { super.m2() /* m2's child1 implementation */ }<newline46mondego>}<newline46mondego><newline46mondego>public class child2 {<newline46mondego>    public child2() {<newline46mondego>        super(2);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void m2() { super.m2() /* m2's child2 implementation */ }<newline46mondego>}<newline46mondego>"
"121splitHere46","2208393splitHere46","Converter"
"122splitHere46","2208393splitHere46","ValueSource"
"123splitHere46","2208393splitHere46","QueryValueSource"
"124splitHere46","2208393splitHere46","ValueSource"
"125splitHere46","2208393splitHere46","QueryValueSource"
"126splitHere46","2208397splitHere46","NumberRange range = new NumberRange(<newline46mondego>  OPEN_FOR_RAISE_RANGE,<newline46mondego>  OPEN_FOR_RAISE_RANGE + OPEN_FOR_CALL_RANGE<newline46mondego>);<newline46mondego><newline46mondego>if(range.containsNumber(num)) {<newline46mondego>  // do this<newline46mondego>} else {<newline46mondego>  // do something else<newline46mondego>}<newline46mondego>"
"127splitHere46","2208419splitHere46","<V extends Object>"
"128splitHere46","2208419splitHere46","V"
"129splitHere46","2208419splitHere46","Class<? extends Object>"
"130splitHere46","2208419splitHere46","Class<?>"
"131splitHere46","2208419splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)"
"132splitHere46","2208446splitHere46","Security.addProvider(new BouncyCastleProvider());<newline46mondego><newline46mondego>String data = <doubleQuotes46>hello world<doubleQuotes46>;<newline46mondego><newline46mondego>MessageDigest mda = MessageDigest.getInstance(<doubleQuotes46>SHA-512<doubleQuotes46>, <doubleQuotes46>BC<doubleQuotes46>);<newline46mondego>byte [] digesta = mda.digest(data.getBytes());<newline46mondego><newline46mondego>MessageDigest mdb = MessageDigest.getInstance(<doubleQuotes46>SHA-512<doubleQuotes46>, <doubleQuotes46>BC<doubleQuotes46>);<newline46mondego>byte [] digestb = mdb.digest(data.getBytes());<newline46mondego><newline46mondego>System.out.println(MessageDigest.isEqual(digesta, digestb));<newline46mondego><newline46mondego>System.out.println(Hex.encodeHex(digesta));<newline46mondego>"
"133splitHere46","2208474splitHere46","jar -tf joda-time-1.6.jar | more"
"134splitHere46","2208474splitHere46","org/joda/time/DateTime.class"
"135splitHere46","2208474splitHere46","org.joda.time"
"136splitHere46","2208608splitHere46","ExpressionFactory"
"137splitHere46","2208608splitHere46","#newInstance"
"138splitHere46","2208608splitHere46","newInstance()"
"139splitHere46","2208608splitHere46","ExpressionFactory factory = new ExpressionFactoryImpl();<newline46mondego>"
"140splitHere46","2208608splitHere46","newInstance()"
"141splitHere46","2208608splitHere46","ExpressionFactory"
"142splitHere46","2208767splitHere46","--Get top 10 rows.<newline46mondego>select top 10 * from TAB_A order by my_col asc<newline46mondego>"
"143splitHere46","2208767splitHere46","select @@version<newline46mondego>"
"144splitHere46","2208845splitHere46","<welcome-file-list><newline46mondego>    <welcome-file>firstcup/greetings.xhtml</welcome-file><newline46mondego></welcome-file-list><newline46mondego>"
"145splitHere46","2208962splitHere46","Integer"
"146splitHere46","2208962splitHere46","n++;"
"147splitHere46","2208962splitHere46","n = Integer.valueOf(n.intValue() + 1);<newline46mondego>"
"148splitHere46","2208962splitHere46","n"
"149splitHere46","2208962splitHere46","Increment"
"150splitHere46","2208962splitHere46","n"
"151splitHere46","2208962splitHere46","plusplus()"
"152splitHere46","2209136splitHere46","FactoryBean"
"153splitHere46","2209136splitHere46","FactoryBean"
"154splitHere46","2209136splitHere46","Class"
"155splitHere46","2209136splitHere46","public class MyFactoryBean extends AbstractFactoryBean {<newline46mondego><newline46mondego>    private Class targetClass;<newline46mondego><newline46mondego>    public void setTargetClass(Class targetClass) {<newline46mondego>        this.targetClass = targetClass;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected Object createInstance() throws Exception {<newline46mondego>        return targetClass.newInstance();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Class getObjectType() {<newline46mondego>        return targetClass;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"156splitHere46","2209136splitHere46","<bean name=<doubleQuotes46>ourBean<doubleQuotes46> class=<doubleQuotes46>com.xyz.MyFactoryBean<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>targetClass<doubleQuotes46> value=<doubleQuotes46>${class.weneed}<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"157splitHere46","2209136splitHere46","ourBean"
"158splitHere46","2209136splitHere46","${class.weneed}"
"159splitHere46","2209158splitHere46","/dev/null"
"160splitHere46","2209158splitHere46","echo <doubleQuotes46>yes<doubleQuotes46> <doubleQuotes46>\n<doubleQuotes46> | ./jdk-6u16-linux-i586.bin 1>/dev/null<newline46mondego>"
"161splitHere46","2209378splitHere46","public DirectionPanel(){<newline46mondego>   addKeyListener(new DirectionListener());<newline46mondego>   setFocusable(true);// INSERT THIS<newline46mondego>   setBackground(Color.yellow);<newline46mondego>}<newline46mondego>"
"162splitHere46","2209378splitHere46","JPanel"
"163splitHere46","2209606splitHere46","Junit"
"164splitHere46","2209606splitHere46","Test Libraries"
"165splitHere46","2209606splitHere46","Projects"
"166splitHere46","2209606splitHere46","Test Libraries"
"167splitHere46","2209710splitHere46","InputMethodManager.showSoftInput()"
"168splitHere46","2209710splitHere46","TextChangedListener"
"169splitHere46","2209710splitHere46","EditText"
"170splitHere46","2209710splitHere46","EditText"
"171splitHere46","2209746splitHere46","#!/bin/bash<newline46mondego><newline46mondego>(<newline46mondego>    until java -Xms256m -Xmx768m -jar MyApp.jar; do<newline46mondego>        echo <doubleQuotes46>MyApp crashed with exit code $?.  Respawning... <doubleQuotes46> >&2<newline46mondego>        sleep 5<newline46mondego>    done<newline46mondego>) &<newline46mondego>"
"172splitHere46","2209932splitHere46","javac Main.java<newline46mondego>javac This.java<newline46mondego>javac That.java<newline46mondego>javac Other.java<newline46mondego>"
"173splitHere46","2209932splitHere46","javac Main.java This.java That.java Other.java<newline46mondego>"
"174splitHere46","2210084splitHere46","final BufferedImage in = ImageIO.read(new File(<doubleQuotes46>frabozzle.tif<doubleQuotes46>));<newline46mondego>final BufferedImage out = new BufferedImage(<newline46mondego>    in.getWidth(), in.getHeight(),<newline46mondego>    BufferedImage.TYPE_BYTE_GRAY);<newline46mondego>out.getGraphics().drawImage(in, 0, 0, null);<newline46mondego>ImageIO.write(out, <doubleQuotes46>TIFF<doubleQuotes46>, new File(<doubleQuotes46>graybozzle.tif<doubleQuotes46>));<newline46mondego>"
"175splitHere46","2210089splitHere46","-X"
"176splitHere46","2210089splitHere46","$ mvn -?<newline46mondego>...<newline46mondego> -X,--debug      Produce execution debug output<newline46mondego>"
"177splitHere46","2210142splitHere46","@Constraint(validatedBy=YourChecker.class)<newline46mondego>//other annotations<newline46mondego>public @interface AllowedValues {<newline46mondego>    int[] value();<newline46mondego>}<newline46mondego>"
"178splitHere46","2210617splitHere46","emit(<uuid>, <event, timestamp>)"
"179splitHere46","2210617splitHere46","key = UUID, values = {<event1, timestamp1>, <event2, timestamp2>}"
"180splitHere46","2210617splitHere46","job.setSortComparatorClass();"
"181splitHere46","2210617splitHere46","public static class BNLSortComparator extends Text.Comparator {<newline46mondego>  public int compare(byte[] b1, int s1, int l1, byte[] b2, int s2, int l2) {<newline46mondego>    String sb1, sb2;<newline46mondego>    try {<newline46mondego>      sb1 = Text.decode(b1, s1, l1);<newline46mondego>      ...<newline46mondego>"
"182splitHere46","2210885splitHere46","Animal"
"183splitHere46","2210885splitHere46","Mammal"
"184splitHere46","2210885splitHere46","Animal a = new Animal();<newline46mondego>"
"185splitHere46","2210885splitHere46","a"
"186splitHere46","2210885splitHere46","Animal"
"187splitHere46","2210885splitHere46","Mammal"
"188splitHere46","2210885splitHere46","Animal"
"189splitHere46","2210885splitHere46","Animal a = new Mammal();<newline46mondego>"
"190splitHere46","2210885splitHere46","Animal"
"191splitHere46","2210885splitHere46","Mammal"
"192splitHere46","2210951splitHere46","<c:forEach>"
"193splitHere46","2210951splitHere46","Map"
"194splitHere46","2210951splitHere46","Map.Entry"
"195splitHere46","2210951splitHere46","<c:forEach var=<doubleQuotes46>type<doubleQuotes46> items=<doubleQuotes46>${types}<doubleQuotes46>><newline46mondego>   Key is ${type.key}<newline46mondego>   Value is ${type.value}<newline46mondego></c:forEach><newline46mondego>"
"196splitHere46","2211059splitHere46","class Base {<newline46mondego><newline46mondego>    final String errMsg;<newline46mondego><newline46mondego>    Base(String msg) {<newline46mondego>        errMsg = msg;<newline46mondego>    }<newline46mondego><newline46mondego>    abstract String doSomething();<newline46mondego>}<newline46mondego><newline46mondego>class Sub extends Base {<newline46mondego><newline46mondego>    Sub() {<newline46mondego>        super(<doubleQuotes46>Sub message<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    String doSomething() {<newline46mondego><newline46mondego>        return errMsg + <doubleQuotes46> from something<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"197splitHere46","2211091splitHere46","testCollection"
"198splitHere46","2211139splitHere46",".split(<doubleQuotes46>, <doubleQuotes46>)"
"199splitHere46","2211139splitHere46","for(i = 0; i < 2; i++)<newline46mondego>    Cars[i] = carModel.split(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>"
"200splitHere46","2211139splitHere46","for(i = 0; i < 2; i++)<newline46mondego>{<newline46mondego>    Cars[i][0] = carModel.getName()<newline46mondego>    Cars[i][1] = carModel.getManufacturer()<newline46mondego>    Cars[i][2] = carModel.getDate()<newline46mondego>}<newline46mondego>"
"201splitHere46","2211210splitHere46","g.drawString(<doubleQuotes46>X<doubleQuotes46>, col * columnWidth, row * rowHeight);<newline46mondego>"
"202splitHere46","2211322splitHere46","java.io.RandomAccessFile"
"203splitHere46","2211457splitHere46","@EmbeddedId"
"204splitHere46","2211457splitHere46","select a.addressKey.id from Address a<newline46mondego>"
"205splitHere46","2211457splitHere46","AddressKey addressKey = new AddressKey();<newline46mondego>addressKey.setCountry(<doubleQuotes46>USA<doubleQuotes46>);<newline46mondego>addressKey.setId(634);<newline46mondego>Address a = entityManager.find(Address.class, addressKey);    <newline46mondego>"
"206splitHere46","2211457splitHere46","Long"
"207splitHere46","2211499splitHere46","URL metafeedUrl = new URL(<doubleQuotes46>https://www.google.com/a/feeds/<doubleQuotes46>+domain+<doubleQuotes46>/user/2.0/<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>Getting user entries...\n<doubleQuotes46>);<newline46mondego>List<UserEntry> entries = new ArrayList<UserEntry>();<newline46mondego><newline46mondego>while (metafeedUrl != null) {<newline46mondego>    // Fetch page<newline46mondego>    System.out.println(<doubleQuotes46>Fetching page...\n<doubleQuotes46>);<newline46mondego>    UserFeed resultFeed = myService.getFeed(metafeedUrl, UserFeed.class);<newline46mondego>    entries.addAll(resultFeed.getEntries());<newline46mondego><newline46mondego>    // Check for next page<newline46mondego>    Link nextLink = resultFeed.getNextLink();<newline46mondego>    if (nextLink == null) {<newline46mondego>        metafeedUrl = null;<newline46mondego>    } else {<newline46mondego>        metafeedUrl = nextLink.getHref();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// Handle results<newline46mondego>for(int i=0; i<entries.size(); i++) {<newline46mondego>    UserEntry entry = entries.get(i);<newline46mondego>    System.out.println(<doubleQuotes46>\t<doubleQuotes46> + entry.getTitle().getPlainText());<newline46mondego>}<newline46mondego>System.out.println(<doubleQuotes46>\nTotal Entries: <doubleQuotes46>+entries.size());<newline46mondego>"
"208splitHere46","2211607splitHere46","java -jar <jar>"
"209splitHere46","2211607splitHere46","java -cp <jar> com.yourcom.package.classname<newline46mondego>"
"210splitHere46","2211607splitHere46","public static void main(String[] args)<newline46mondego>"
"211splitHere46","2211763splitHere46","ip.addr.of.srv:port"
"212splitHere46","2211763splitHere46","netstat"
"213splitHere46","2211763splitHere46","12.34.56.78"
"214splitHere46","2211763splitHere46","80"
"215splitHere46","2211780splitHere46","Calculator"
"216splitHere46","2211780splitHere46","add"
"217splitHere46","2211780splitHere46","subtract"
"218splitHere46","2211780splitHere46","multiply"
"219splitHere46","2211780splitHere46","divide"
"220splitHere46","2211780splitHere46","getQuote"
"221splitHere46","2211780splitHere46","@WebService"
"222splitHere46","2211798splitHere46","System.out.println( Pattern.matches(<doubleQuotes46>.*[0-9].*<doubleQuotes46>, password ));<newline46mondego>"
"223splitHere46","2211798splitHere46",".*"
"224splitHere46","2211798splitHere46","."
"225splitHere46","2211798splitHere46","*"
"226splitHere46","2212025splitHere46","ByteBuffer"
"227splitHere46","2212025splitHere46","long"
"228splitHere46","2212025splitHere46","byte[]"
"229splitHere46","2212025splitHere46","array()"
"230splitHere46","2212025splitHere46","ByteOrder"
"231splitHere46","2212025splitHere46","private static byte[] xform(long[] la, ByteOrder order) {<newline46mondego>    ByteBuffer bb = ByteBuffer.allocate(la.length * 8);<newline46mondego>    bb.order(order);<newline46mondego>    bb.asLongBuffer().put(la);<newline46mondego>    return bb.array();<newline46mondego>}<newline46mondego>"
"232splitHere46","2212025splitHere46","byte[]"
"233splitHere46","2212025splitHere46","byte"
"234splitHere46","2212025splitHere46","int"
"235splitHere46","2212025splitHere46","byte b"
"236splitHere46","2212025splitHere46","int i = (int) b & 0xFF;<newline46mondego>"
"237splitHere46","2212025splitHere46","double"
"238splitHere46","2212032splitHere46","getprice()"
"239splitHere46","2212032splitHere46","price"
"240splitHere46","2212246splitHere46","public class A {<newline46mondego><newline46mondego>   private B b;<newline46mondego><newline46mondego>   public A() {<newline46mondego>      b = new b(this);<newline46mondego>   }<newline46mondego><newline46mondego>   public aMethodInA() {<newline46mondego>      //stuff goes here<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public class B {<newline46mondego><newline46mondego>   private A a;<newline46mondego><newline46mondego>   public B(A a) {<newline46mondego>      this.a = a;<newline46mondego>   }<newline46mondego><newline46mondego>   public aMethodCallingMethodsInTheObjectThatInstantiatedMe() {<newline46mondego>      a.aMethodInA();<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"241splitHere46","2212324splitHere46","a == b"
"242splitHere46","2212662splitHere46","setBorder"
"243splitHere46","2212662splitHere46","setBorder( new EmptyBorder( 3, 3, 3, 3 ) )<newline46mondego>"
"244splitHere46","2212662splitHere46","import java.awt.BorderLayout;<newline46mondego>import java.awt.Container;<newline46mondego><newline46mondego>import javax.swing.JButton;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.border.EmptyBorder;<newline46mondego><newline46mondego>public class ALineBorder {<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Line Borders<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        JButton button1 = new JButton(<doubleQuotes46>Button1<doubleQuotes46>);<newline46mondego>        button1.setBorder( new EmptyBorder( 8, 8, 8, 8 ) );<newline46mondego>        JButton button2 = new JButton(<doubleQuotes46>Button2<doubleQuotes46>);<newline46mondego>        JButton button3 = new JButton(<doubleQuotes46>Button3<doubleQuotes46>);<newline46mondego>        button3.setBorder( new EmptyBorder( 16, 16, 16, 16 ) );<newline46mondego>        Container contentPane = frame.getContentPane();<newline46mondego>        contentPane.add(button1, BorderLayout.WEST);<newline46mondego>        contentPane.add(button2, BorderLayout.CENTER);<newline46mondego>        contentPane.add(button3, BorderLayout.EAST);<newline46mondego>        frame.pack();<newline46mondego>        frame.setSize(300, frame.getHeight());<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"245splitHere46","2212803splitHere46","invalid project description"
"246splitHere46","2212803splitHere46","<doubleQuotes46>File<doubleQuotes46> + <doubleQuotes46>Import<doubleQuotes46> + <doubleQuotes46>Existing Projects into Workspace<doubleQuotes46>"
"247splitHere46","2212803splitHere46","New> Android Project> Create project from existing source"
"248splitHere46","2212803splitHere46","%ANDROID_HOME%\samples"
"249splitHere46","2212803splitHere46","your_workspace_dir/.metadata/.log"
"250splitHere46","2212803splitHere46","\samples\Music"
"251splitHere46","2212803splitHere46","Create project from existing source"
"252splitHere46","2212803splitHere46","New Android Project"
"253splitHere46","2212803splitHere46","Snake"
"254splitHere46","2212803splitHere46","Samples"
"255splitHere46","2212803splitHere46","Project > Build all"
"256splitHere46","2212803splitHere46","Build Automatically"
"257splitHere46","2212978splitHere46","java.util.Array"
"258splitHere46","2212978splitHere46","JAVA_HOME/src.zip"
"259splitHere46","2213146splitHere46","ScheduledThreadPoolExecutor"
"260splitHere46","2213421splitHere46","Object[][]"
"261splitHere46","2213421splitHere46","public class MyResources extends ListResourceBundle {<newline46mondego>     protected Object[][] getContents() {<newline46mondego>         return new Object[][] = {<newline46mondego>         // LOCALIZE THIS<newline46mondego>             {<doubleQuotes46>s1<doubleQuotes46>, <doubleQuotes46>The disk \<doubleQuotes46>{1}\<doubleQuotes46> contains {0}.<doubleQuotes46>},  // MessageFormat pattern<newline46mondego>             {<doubleQuotes46>s2<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>},                               // location of {0} in pattern<newline46mondego>             {<doubleQuotes46>s3<doubleQuotes46>, <doubleQuotes46>My Disk<doubleQuotes46>},                         // sample disk name<newline46mondego>             {<doubleQuotes46>s4<doubleQuotes46>, <doubleQuotes46>no files<doubleQuotes46>},                        // first ChoiceFormat choice<newline46mondego>             {<doubleQuotes46>s5<doubleQuotes46>, <doubleQuotes46>one file<doubleQuotes46>},                        // second ChoiceFormat choice<newline46mondego>             {<doubleQuotes46>s6<doubleQuotes46>, <doubleQuotes46>{0,number} files<doubleQuotes46>},                // third ChoiceFormat choice<newline46mondego>             {<doubleQuotes46>s7<doubleQuotes46>, <doubleQuotes46>3 Mar 96<doubleQuotes46>},                        // sample date<newline46mondego>             {<doubleQuotes46>s8<doubleQuotes46>, new Dimension(1,5)}                 // real object, not just string<newline46mondego>         // END OF MATERIAL TO LOCALIZE<newline46mondego>         };<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"262splitHere46","2213435splitHere46","private static final String decimalFormatStr = <doubleQuotes46>0.00#<doubleQuotes46>;<newline46mondego>"
"263splitHere46","2213435splitHere46","DecimalFormat decimalFormat = new DecimalFormat(decimalFormatStr);<newline46mondego>"
"264splitHere46","2213477splitHere46","IRange[] test<newline46mondego>"
"265splitHere46","2213489splitHere46","Display.getDisplay( this ).setCurrent( null );<newline46mondego>"
"266splitHere46","2213489splitHere46","Display.getDisplay( this ).vibrate( duration );<newline46mondego>"
"267splitHere46","2213616splitHere46","jar-file"
"268splitHere46","2213616splitHere46","persistence.xml"
"269splitHere46","2213616splitHere46","EntityManager"
"270splitHere46","2213875splitHere46","BufferedImage bufferedImage = ImageIO.read(..);<newline46mondego>Image img = bufferedImage.getScaledInstance(..);<newline46mondego>BufferedImage result = // transform Image to BufferedImage<newline46mondego>ImageIO.write(result, <doubleQuotes46>image/jpeg<doubleQuotes46>, response.getOutputStream());<newline46mondego>"
"271splitHere46","2213875splitHere46","BufferedImage"
"272splitHere46","2214188splitHere46","return o.getClass().newInstance();<newline46mondego>"
"273splitHere46","2214188splitHere46","return o.getClass().getConstructor(getClass()).newInstance(this);<newline46mondego>"
"274splitHere46","2214208splitHere46","public static void main(String[] args)<newline46mondego>{<newline46mondego>    // args[0] is the directory path<newline46mondego>    // args[1] is the file path<newline46mondego>}<newline46mondego>"
"275splitHere46","2214349splitHere46","writer.print (<doubleQuotes46>GET <doubleQuotes46> + szUrl + <doubleQuotes46> HTTP/1.0\r\n\r\n<doubleQuotes46>); <newline46mondego>"
"276splitHere46","2214349splitHere46","\r\n\r\n"
"277splitHere46","2214349splitHere46","writer.print (<doubleQuotes46>GET <doubleQuotes46> + szUrl + <doubleQuotes46> HTTP/1.0\r\n<doubleQuotes46>); <newline46mondego>writer.print (<doubleQuotes46>header1: value1\r\n<doubleQuotes46>); <newline46mondego>writer.print (<doubleQuotes46>header2: value2\r\n<doubleQuotes46>); <newline46mondego>writer.print (<doubleQuotes46>header3: value3\r\n<doubleQuotes46>); <newline46mondego>// end the header section<newline46mondego>writer.print (<doubleQuotes46>\r\n<doubleQuotes46>); <newline46mondego>"
"278splitHere46","2214463splitHere46","@SessionAttribute"
"279splitHere46","2214463splitHere46","@SessionAttribute"
"280splitHere46","2214463splitHere46","HttpSession.getAttribute()"
"281splitHere46","2214477splitHere46","javap"
"282splitHere46","2214477splitHere46","php -r"
"283splitHere46","2214477splitHere46","java.util.List"
"284splitHere46","2214477splitHere46","java.util.Collection"
"285splitHere46","2214477splitHere46","new DOMDocument()"
"286splitHere46","2214477splitHere46","org.w3c.dom.Document"
"287splitHere46","2214477splitHere46","java.sql.Connection"
"288splitHere46","2214477splitHere46","FactoryBuilderFactory"
"289splitHere46","2214577splitHere46","Rectangle2D rect = new Rectangle2D.Double(double, double, double, double);<newline46mondego>"
"290splitHere46","2214577splitHere46","Rectangle2D rect = new Rectangle(int, int, int, int)<newline46mondego>"
"291splitHere46","2214906splitHere46","variableName"
"292splitHere46","2214906splitHere46","Servlet"
"293splitHere46","2214906splitHere46","PreparedStatement"
"294splitHere46","2214906splitHere46","public List<User> search(String username) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego>    ResultSet resultSet = null;<newline46mondego>    List<User> users = new ArrayList<User>();<newline46mondego><newline46mondego>    try {<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(<doubleQuotes46>SELECT id, username, age, email FROM user WHERE username LIKE ?<doubleQuotes46>);<newline46mondego>        statement.setString(1, <doubleQuotes46>%<doubleQuotes46> + username + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>        resultSet = statement.executeQuery();<newline46mondego>        while (resultSet.next()) {<newline46mondego>            users.add(mapUser(resultSet));<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        close(connection, statement, resultSet);<newline46mondego>    }<newline46mondego><newline46mondego>    return users;<newline46mondego>}<newline46mondego>"
"295splitHere46","2214963splitHere46","postMessage()"
"296splitHere46","2214963splitHere46","public static void postMessage(final String msg);<newline46mondego>"
"297splitHere46","2214963splitHere46","static"
"298splitHere46","2214963splitHere46","processMessage()"
"299splitHere46","2214963splitHere46","Java_callback.postMessage(msg_return);<newline46mondego>"
"300splitHere46","2214963splitHere46","private static FXListener listener;<newline46mondego>"
"301splitHere46","2215047splitHere46","String[]"
"302splitHere46","2215047splitHere46","string[]"
"303splitHere46","2215047splitHere46","package yourpackage;<newline46mondego><newline46mondego>public class YourClass {<newline46mondego><newline46mondego>    private String[] biscuitlist;<newline46mondego><newline46mondego>}<newline46mondego>"
"304splitHere46","2215306splitHere46","java.lang"
"305splitHere46","2215306splitHere46","java.util"
"306splitHere46","2215331splitHere46","%"
"307splitHere46","2215548splitHere46","Map"
"308splitHere46","2215548splitHere46","char *"
"309splitHere46","2215747splitHere46","Map"
"310splitHere46","2215747splitHere46","K"
"311splitHere46","2215747splitHere46","K"
"312splitHere46","2215747splitHere46","K extends Item"
"313splitHere46","2215747splitHere46","K"
"314splitHere46","2215747splitHere46","Item"
"315splitHere46","2215872splitHere46","String"
"316splitHere46","2215872splitHere46","equals()"
"317splitHere46","2215872splitHere46","try {<newline46mondego>   String className = <doubleQuotes46>com.path.to.ImplementationType<doubleQuotes46>;// really passed in from config<newline46mondego>   Class c = Class.forName(className);<newline46mondego>   InterfaceType interfaceType = (InterfaceType)c.newInstance();<newline46mondego>   if (className.equals(<doubleQuotes46>com.path.to.ImplementationType<doubleQuotes46>) {<newline46mondego>      ((ImplementationType)interfaceType).doSomethingOnlyICanDo();<newline46mondego>   } <newline46mondego>} catch (Exception e) {<newline46mondego>   e.printStackTrace();<newline46mondego>}<newline46mondego>"
"318splitHere46","2215872splitHere46","Class"
"319splitHere46","2215872splitHere46","Object"
"320splitHere46","2215872splitHere46","Method"
"321splitHere46","2215872splitHere46","Class"
"322splitHere46","2215872splitHere46","Method"
"323splitHere46","2215872splitHere46","Class"
"324splitHere46","2215872splitHere46","invoke"
"325splitHere46","2215872splitHere46","Method"
"326splitHere46","2215872splitHere46","Class"
"327splitHere46","2215872splitHere46","public class Foo {<newline46mondego><newline46mondego>    public void printAMessage() {<newline46mondego>    System.out.println(toString()+<doubleQuotes46>:a message<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    public void printAnotherMessage(String theString) {<newline46mondego>        System.out.println(toString()+<doubleQuotes46>:another message:<doubleQuotes46> + theString);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Class c = null;<newline46mondego>        try {<newline46mondego>            c = Class.forName(<doubleQuotes46>Foo<doubleQuotes46>);<newline46mondego>            Method method1 = c.getDeclaredMethod(<doubleQuotes46>printAMessage<doubleQuotes46>, new Class[]{});<newline46mondego>            Method method2 = c.getDeclaredMethod(<doubleQuotes46>printAnotherMessage<doubleQuotes46>, new Class[]{String.class});<newline46mondego>            Object o = c.newInstance();<newline46mondego>            System.out.println(<doubleQuotes46>this is my instance:<doubleQuotes46> + o.toString());<newline46mondego>            method1.invoke(o);<newline46mondego>            method2.invoke(o, <doubleQuotes46>this is my message, from a config file, of course<doubleQuotes46>);<newline46mondego>        } catch (ClassNotFoundException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        } catch (NoSuchMethodException nsme){<newline46mondego>            nsme.printStackTrace();<newline46mondego>        } catch (IllegalAccessException iae) {<newline46mondego>            iae.printStackTrace();<newline46mondego>        } catch (InstantiationException ie) {<newline46mondego>            ie.printStackTrace();<newline46mondego>        } catch (InvocationTargetException ite) {<newline46mondego>            ite.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"328splitHere46","2215872splitHere46","this is my instance:Foo@e0cf70<newline46mondego>Foo@e0cf70:a message<newline46mondego>Foo@e0cf70:another message:this is my message, from a config file, of course<newline46mondego>"
"329splitHere46","2216196splitHere46","InputStream is = new URL(url).openStream();<newline46mondego>"
"330splitHere46","2216303splitHere46","Activity"
"331splitHere46","2216303splitHere46","WebView"
"332splitHere46","2216303splitHere46","Activity"
"333splitHere46","2216303splitHere46","View"
"334splitHere46","2216303splitHere46","Activity"
"335splitHere46","2216303splitHere46","Activity"
"336splitHere46","2216303splitHere46","startActivityForResult()"
"337splitHere46","2216303splitHere46","WebView"
"338splitHere46","2216303splitHere46","WebViewClient"
"339splitHere46","2216303splitHere46","WebViewClient"
"340splitHere46","2216303splitHere46","WebView"
"341splitHere46","2216303splitHere46","setWebViewClient()"
"342splitHere46","2216303splitHere46","Activity"
"343splitHere46","2216303splitHere46","Intent"
"344splitHere46","2216303splitHere46","finish()"
"345splitHere46","2216303splitHere46","Activity"
"346splitHere46","2216303splitHere46","ListActivity"
"347splitHere46","2216303splitHere46","Activity"
"348splitHere46","2216303splitHere46","ListView"
"349splitHere46","2216303splitHere46","onListItemClick()"
"350splitHere46","2216303splitHere46","ListActivity"
"351splitHere46","2216303splitHere46","Activity"
"352splitHere46","2216303splitHere46","WebView"
"353splitHere46","2216303splitHere46","Activity"
"354splitHere46","2216328splitHere46","for (String key : map.keySet()) {<newline46mondego>    System.out.println(key + <doubleQuotes46>:<doubleQuotes46> + map.get(key));<newline46mondego>}<newline46mondego>"
"355splitHere46","2216603splitHere46","public static <T> T initializeAndUnproxy(T entity) {<newline46mondego>    if (entity == null) {<newline46mondego>        throw new <newline46mondego>           NullPointerException(<doubleQuotes46>Entity passed for initialization is null<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    Hibernate.initialize(entity);<newline46mondego>    if (entity instanceof HibernateProxy) {<newline46mondego>        entity = (T) ((HibernateProxy) entity).getHibernateLazyInitializer()<newline46mondego>                .getImplementation();<newline46mondego>    }<newline46mondego>    return entity;<newline46mondego>}<newline46mondego>"
"356splitHere46","2216669splitHere46","import java.awt.image.BufferedImage;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import javax.imageio.ImageIO;<newline46mondego><newline46mondego><newline46mondego>public class ImageTest {<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego><newline46mondego>        int width = 10 // width of your image<newline46mondego>        int height = 10 // height of your image<newline46mondego><newline46mondego>        BufferedImage img = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);<newline46mondego><newline46mondego><newline46mondego>        for (int x = 0; x < width; ++x)<newline46mondego>        {<newline46mondego>            for (int y = 0; y < height; ++y)<newline46mondego>            {<newline46mondego>                int grayscale = ... // get your greyscale value 0..255 from your array here.<newline46mondego>                int colorValue = grayscale | grayscale << 8 | grayscale << 16;<newline46mondego>                img.setRGB(x, y, colorValue);<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        ImageIO.write(img, <doubleQuotes46>png<doubleQuotes46>, new File(<doubleQuotes46>output.png<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"357splitHere46","2216669splitHere46","int colorValue = grayscale | grayscale << 8 | grayscale << 16;<newline46mondego>"
"358splitHere46","2216717splitHere46","LinkedList<ClientWorker> clients = SingletonClients.getClients();<newline46mondego>"
"359splitHere46","2216785splitHere46","import org.apache.commons.httpclient.*;<newline46mondego>import org.apache.commons.httpclient.methods.*;<newline46mondego>import org.apache.commons.httpclient.params.HttpMethodParams;<newline46mondego>"
"360splitHere46","2216785splitHere46","import org.apache.http.client.*;<newline46mondego>import org.apache.http.client.methods.*;<newline46mondego>import org.apache.http.client.params.HttpMethodParams;<newline46mondego>"
"361splitHere46","2216895splitHere46","_ah"
"362splitHere46","2216895splitHere46","serveRegex(<doubleQuotes46>/[\\w]+<doubleQuotes46>).with(MainServlet.class);"
"363splitHere46","2217202splitHere46","netbeans_default_options"
"364splitHere46","2217202splitHere46","-Xms256m -Xmx512m"
"365splitHere46","2217202splitHere46","If you specify the heap size (-Xmx) explicitely, you may also want to enable<newline46mondego># Concurrent Mark & Sweep garbage collector. In such case add the following<newline46mondego># options to the netbeans_default_options:<newline46mondego># -J-XX:+UseConcMarkSweepGC -J-XX:+CMSClassUnloadingEnabled -J-XX:+CMSPermGenSweepingEnabled<newline46mondego>"
"366splitHere46","2217331splitHere46","aBean"
"367splitHere46","2217331splitHere46","PropertyType get<PropertyName>()"
"368splitHere46","2217331splitHere46","void set<PropertyName>(PropertyType)"
"369splitHere46","2217388splitHere46","delete"
"370splitHere46","2217388splitHere46","file.delete();<newline46mondego>"
"371splitHere46","2217457splitHere46",">>([^<]+)<<"
"372splitHere46","2217457splitHere46","([^>]+>>)[^<]+(<<[.]+)"
"373splitHere46","2217457splitHere46","Matcher.find()"
"374splitHere46","2217457splitHere46","Matcher.matches()"
"375splitHere46","2217506splitHere46","FAIL - Invalid context path null was specified Deployment error: The module has not been deployed. See the server log for details.<newline46mondego>"
"376splitHere46","2217644splitHere46","class DBUtil {<newline46mondego>    public static ArrayList<Item> getMeAllOfMyItems() {<newline46mondego>         return items; // load from database whatever...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"377splitHere46","2217644splitHere46","ArrayList<Item> items = DBUtil.getMeAllOfMyItems();<newline46mondego>for (int i = 0; i < items.size(); i++) {<newline46mondego>    // do something with item<newline46mondego>}<newline46mondego>"
"378splitHere46","2217644splitHere46","class DBUtil {<newline46mondego>    public static LinkedList<Item> getMeAllOfMyItems() {<newline46mondego>         return items; // load from database whatever...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"379splitHere46","2217644splitHere46","LinkedList<Item> items = DBUtil.getMeAllOfMyItems();<newline46mondego>for (int i = 0; i < items.size(); i++) {<newline46mondego>    // do something with item<newline46mondego>}<newline46mondego>"
"380splitHere46","2217644splitHere46","class DBUtil {<newline46mondego>    public static List<Item> getMeAllOfMyItems() {<newline46mondego>         return items; // load from database whatever...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"381splitHere46","2217644splitHere46","List<Item> items = DBUtil.getMeAllOfMyItems();<newline46mondego>for (int i = 0; i < items.size(); i++) {<newline46mondego>    // do something with item<newline46mondego>}<newline46mondego>"
"382splitHere46","2217644splitHere46","class DBUtil {<newline46mondego>    public static List<Item> getMeAllOfMyItems() {<newline46mondego>         return items; // load from database whatever...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"383splitHere46","2217644splitHere46","List<Item> items = DBUtil.getMeAllOfMyItems();<newline46mondego>for (Item i : items) {<newline46mondego>    // do something with item<newline46mondego>}<newline46mondego>"
"384splitHere46","2217663splitHere46","ServletResponse.getWriter()"
"385splitHere46","2217663splitHere46","Content-type"
"386splitHere46","2217663splitHere46","application/x-shockwave-flash"
"387splitHere46","2217663splitHere46","ServletResponse.setContentType()"
"388splitHere46","2217663splitHere46","resp.setContentType(<doubleQuotes46>application/x-shockwave-flash<doubleQuotes46>);<newline46mondego>"
"389splitHere46","2217663splitHere46","Cache-Control"
"390splitHere46","2217663splitHere46","Expires"
"391splitHere46","2217663splitHere46","HttpServletResponse.setHeader()"
"392splitHere46","2217663splitHere46","HttpServletResponse.addHeader()"
"393splitHere46","2217663splitHere46","Filter"
"394splitHere46","2217663splitHere46","<url-pattern>"
"395splitHere46","2217708splitHere46","persistence.xml"
"396splitHere46","2217708splitHere46","FileSystemXmlApplicationContext"
"397splitHere46","2217708splitHere46","persistence.xml"
"398splitHere46","2217708splitHere46","META-INF"
"399splitHere46","2217718splitHere46","@PersistenceUnit<newline46mondego>public EntityManagerFactory emf;<newline46mondego>EntityManager em;<newline46mondego><newline46mondego><newline46mondego>public List fname (String id) {<newline46mondego>    String fname = null;<newline46mondego>    List persons = null;<newline46mondego>    //private PersistenceManagerFactory persistenceManagerFactory;<newline46mondego><newline46mondego>    try {<newline46mondego>        emf = Persistence.createEntityManagerFactory(<doubleQuotes46>WebApplicationSecurityPU<doubleQuotes46>);<newline46mondego><newline46mondego>        em = emf.createEntityManager();<newline46mondego>        persons = em.createQuery(<doubleQuotes46>select r from Roleuser r<doubleQuotes46>).getResultList();<newline46mondego><newline46mondego>        int i=0;<newline46mondego>        for (i=0;i<persons.size(); i++)<newline46mondego>            System.out.println(<doubleQuotes46>Testing n <doubleQuotes46>+ i +<doubleQuotes46> <doubleQuotes46> + persons.get(i));<newline46mondego><newline46mondego>    } catch(Exception e) {<newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46> + e);<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>        if(em != null) {<newline46mondego>            em.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return persons;<newline46mondego>}<newline46mondego>"
"400splitHere46","2217763splitHere46","Calendar todayPlus30 = new GregorianCalendar() {{<newline46mondego>  add(Calendar.DAY_OF_YEAR, 30);<newline46mondego>  set(Calendar.HOUR_OF_DAY, 0);<newline46mondego>  set(Calendar.MINUTE, 0);<newline46mondego>  set(Calendar.SECOND, 0);<newline46mondego>  set(Calendar.MILLISECOND, 0);<newline46mondego>}};<newline46mondego>"
"401splitHere46","2217944splitHere46","class Interpreter"
"402splitHere46","2217944splitHere46","class MemorySpace"
"403splitHere46","2217944splitHere46","class Function"
"404splitHere46","2218001splitHere46","BodyTag"
"405splitHere46","2218001splitHere46","tagX"
"406splitHere46","2218001splitHere46","tagY"
"407splitHere46","2218001splitHere46","<mylib:tagX><newline46mondego>   <mytags:tagY/><newline46mondego></mylib:tagX><newline46mondego>"
"408splitHere46","2218001splitHere46","<mytags:tagY/>"
"409splitHere46","2218001splitHere46","tagX"
"410splitHere46","2218001splitHere46","BodyTag"
"411splitHere46","2218063splitHere46","webapps"
"412splitHere46","2218063splitHere46","webapp"
"413splitHere46","2218063splitHere46","bilgin.ath.cx"
"414splitHere46","2218063splitHere46","80"
"415splitHere46","2218063splitHere46","mod_jk"
"416splitHere46","2218063splitHere46","mod_proxy"
"417splitHere46","2218063splitHere46","bilgin.ath.cx"
"418splitHere46","2218063splitHere46","worker.properties"
"419splitHere46","2218063splitHere46","httpd.conf"
"420splitHere46","2218063splitHere46","JkMount"
"421splitHere46","2218063splitHere46","httpd.conf"
"422splitHere46","2218063splitHere46","httpd.conf"
"423splitHere46","2218067splitHere46","import java.io.*;<newline46mondego>import java.util.*;<newline46mondego><newline46mondego>public class B {<newline46mondego><newline46mondego>  public static void main(String[] args) throws FileNotFoundException {<newline46mondego>     Map<String,Integer> map = new HashMap<String,Integer>();<newline46mondego>     for(int i = 0; i < 1000; ++i)<newline46mondego>     {<newline46mondego>        String s = choose(new File(<doubleQuotes46>g:/temp/a.txt<doubleQuotes46>));<newline46mondego>        if(!map.containsKey(s))<newline46mondego>           map.put(s, 0);<newline46mondego>        map.put(s, map.get(s) + 1);<newline46mondego>     }<newline46mondego><newline46mondego>     System.out.println(map);<newline46mondego>  }<newline46mondego><newline46mondego>  public static String choose(File f) throws FileNotFoundException<newline46mondego>  {<newline46mondego>     String result = null;<newline46mondego>     Random rand = new Random();<newline46mondego>     int n = 0;<newline46mondego>     for(Scanner sc = new Scanner(f); sc.hasNext(); )<newline46mondego>     {<newline46mondego>        ++n;<newline46mondego>        String line = sc.nextLine();<newline46mondego>        if(rand.nextInt(n) == 0)<newline46mondego>           result = line;         <newline46mondego>     }<newline46mondego><newline46mondego>     return result;      <newline46mondego>  }<newline46mondego>}<newline46mondego>"
"424splitHere46","2218113splitHere46","java.util.Arrays"
"425splitHere46","2218113splitHere46","java.util.Arrays"
"426splitHere46","2218113splitHere46","JDK_HOME\src.zip"
"427splitHere46","2218113splitHere46","System.out.println(..)"
"428splitHere46","2218113splitHere46","// Recursively sort halves of dest into src"
"429splitHere46","2218139splitHere46","public MemEl(long longValue) {<newline46mondego>    elements = (int) longValue;<newline46mondego>}<newline46mondego>"
"430splitHere46","2218139splitHere46","public MemEL(String str) {<newline46mondego>    elements = Integer.parseInt(str);<newline46mondego>}<newline46mondego>"
"431splitHere46","2218237splitHere46","ProcessBuilder pb = new ProcessBuilder(<doubleQuotes46>ps<doubleQuotes46>, <doubleQuotes46>-A<doubleQuotes46>);<newline46mondego>Process p = pb.start();<newline46mondego><newline46mondego>BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));<newline46mondego>// Skip first (header) line: <doubleQuotes46>  PID TTY          TIME CMD<doubleQuotes46><newline46mondego>in.readLine();<newline46mondego><newline46mondego>// Extract process IDs from lines of output<newline46mondego>// e.g. <doubleQuotes46>  146 ?        00:03:45 pdflush<doubleQuotes46><newline46mondego>List<String> runningProcessIds = new ArrayList<String>();<newline46mondego>for (String line = in.readLine(); line != null; line = in.readLine()) {<newline46mondego>    runningProcessIds.add(line.trim().split(<doubleQuotes46>\\s+<doubleQuotes46>)[0]);<newline46mondego>}<newline46mondego>"
"432splitHere46","2218310splitHere46","setProperty"
"433splitHere46","2218310splitHere46","store"
"434splitHere46","2218310splitHere46","new FileOutputStream(path, true)"
"435splitHere46","2218328splitHere46","ThreadLocal"
"436splitHere46","2218328splitHere46","public interface UserName {<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>@Component <newline46mondego>@Scope(value = <doubleQuotes46>request<doubleQuotes46>, proxyMode = ScopedProxyMode.INTERFACES)<newline46mondego>public class UsernameImpl implements UserName { <newline46mondego>    private String username; <newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"437splitHere46","2218552splitHere46","ContextNotionLevel ctnl=new ContextNotionLevel(Home.this);<newline46mondego>"
"438splitHere46","2218782splitHere46","showDialog"
"439splitHere46","2218782splitHere46","DemoActivity"
"440splitHere46","2218782splitHere46","ClassName.methodName()"
"441splitHere46","2218782splitHere46","showDialog"
"442splitHere46","2218782splitHere46","DemoActivity"
"443splitHere46","2218782splitHere46","showDialog"
"444splitHere46","2218782splitHere46","DemoActivity"
"445splitHere46","2218782splitHere46","Control"
"446splitHere46","2218782splitHere46","public class Control extends LinearLayout<newline46mondego>{<newline46mondego><newline46mondego>    ...<newline46mondego><newline46mondego>    // add an Activity instance<newline46mondego>    private Activity activity;<newline46mondego><newline46mondego>    // set the Activity in your constructor<newline46mondego>    public Control(Context context, AttributeSet attrs, Activity activity)<newline46mondego>    {<newline46mondego>        super(context, attrs);<newline46mondego>        this.activity = activity;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void onFinishInflate()<newline46mondego>    {<newline46mondego>        ...<newline46mondego><newline46mondego>           // Use the instance activity here<newline46mondego>           activity.showDialog(2);<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"447splitHere46","2219071splitHere46","public class Packet {<newline46mondego>    private String[] biscuitList;<newline46mondego>    public Packet(String[] biscuit) {<newline46mondego>        this.biscuitList = biscuit;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"448splitHere46","2219071splitHere46","this"
"449splitHere46","2219071splitHere46","Packet"
"450splitHere46","2219071splitHere46","new Packet"
"451splitHere46","2219071splitHere46","this.biscuitList"
"452splitHere46","2219071splitHere46","biscuitList"
"453splitHere46","2219071splitHere46","Packet"
"454splitHere46","2219071splitHere46","= biscuit"
"455splitHere46","2219071splitHere46","biscuit"
"456splitHere46","2219071splitHere46","biscuitList"
"457splitHere46","2219071splitHere46","String[]"
"458splitHere46","2219071splitHere46","List"
"459splitHere46","2219071splitHere46","List<String>"
"460splitHere46","2219071splitHere46","biscuit"
"461splitHere46","2219071splitHere46","biscuits"
"462splitHere46","2219071splitHere46","public class Packet {<newline46mondego>    private String[] biscuits;<newline46mondego>    public Packet(String[] biscuits) {<newline46mondego>        this.biscuits= biscuits;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"463splitHere46","2219071splitHere46","Packet"
"464splitHere46","2219071splitHere46","packet"
"465splitHere46","2219161splitHere46","Locale.US"
"466splitHere46","2219161splitHere46","DateFormat fmt = new SimpleDateFormat(<doubleQuotes46>MMMM dd, yyyy<doubleQuotes46>, Locale.US);<newline46mondego>Date d = fmt.parse(<doubleQuotes46>June 27,  2007<doubleQuotes46>);<newline46mondego>"
"467splitHere46","2219252splitHere46","/lib"
"468splitHere46","2219292splitHere46","/Dinamicki1"
"469splitHere46","2219373splitHere46","static int syracuse(int x){<newline46mondego>    if (x%2==0){<newline46mondego>      return x/2;<newline46mondego>    } else {<newline46mondego>      return 3*x+1;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"470splitHere46","2219543splitHere46","new ByteArrayInputStream(<doubleQuotes46>the string<doubleQuotes46>.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>))<newline46mondego>"
"471splitHere46","2220476splitHere46","System.out.println( <doubleQuotes46>\\u<doubleQuotes46> + Integer.toHexString('÷' | 0x10000).substring(1) );<newline46mondego>"
"472splitHere46","2220477splitHere46","ObjectList"
"473splitHere46","2220477splitHere46","equals"
"474splitHere46","2220477splitHere46","hashCode"
"475splitHere46","2220477splitHere46","public class ObjectList {<newline46mondego><newline46mondego>    private int h;<newline46mondego><newline46mondego>    private Object obj1;<newline46mondego>    private Object obj2;<newline46mondego>    private Object obj3;<newline46mondego>    private Object obj4;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(final Object o) {<newline46mondego>        if (!(o instanceof ObjectList))<newline46mondego>            return false;<newline46mondego><newline46mondego>        final ObjectList that = (ObjectList) o;<newline46mondego>        return that.obj1.equals(obj1) && that.obj2.equals(obj2)<newline46mondego>            && that.obj3.equals(obj3) && that.obj4.equals(obj4);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        // caches the hashcode since it could be costly to recompute every time<newline46mondego>        // but this assumes that your object is essentially immutable <newline46mondego>        // (which it should be if you are using equals/hashCode. If this is not<newline46mondego>        // true and you want to just temporarily use this when doing the duplicate<newline46mondego>        // test, move the h variable definition from the object level to this method<newline46mondego>        // and remove this if statement.<newline46mondego>        if (h != 0)<newline46mondego>            return h;<newline46mondego><newline46mondego>        h = obj1.hashCode();<newline46mondego>        h = h * 31 + obj2.hashCode();<newline46mondego>        h = h * 31 + obj3.hashCode();<newline46mondego>        h = h * 31 + obj4.hashCode();<newline46mondego>        return h;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public Collection<ObjectList> duplicates(<newline46mondego>        final Collection<ObjectList> someObjectsList) {<newline46mondego><newline46mondego>    final Set<ObjectList> unique = new HashSet<ObjectList>(someObjectsList);<newline46mondego>    final ArrayList<ObjectList> ret = new ArrayList<ObjectList>(someObjectsList);<newline46mondego>    for (final ObjectList o : unique) {<newline46mondego>        ret.remove(o);<newline46mondego>    }<newline46mondego><newline46mondego>    // The ret list now contains the duplicate instances; instances <newline46mondego>    // with more than two occurrences will occur multiple times still in<newline46mondego>    // this list.<newline46mondego>    return ret;<newline46mondego><newline46mondego>    // If you want a list of unique duplicate instances then, comment out the above<newline46mondego>    // return and uncomment this one.<newline46mondego>    // return new HashSet<ObjectList>(ret);<newline46mondego>}<newline46mondego>"
"476splitHere46","2220477splitHere46","Collection<ObjectList>"
"477splitHere46","2220559splitHere46","System.out.println"
"478splitHere46","2220559splitHere46","Log.i()"
"479splitHere46","2220559splitHere46","System.out.println"
"480splitHere46","2220559splitHere46","javaw"
"481splitHere46","2220559splitHere46","Log"
"482splitHere46","2220559splitHere46","Log.d(<doubleQuotes46>MyApp<doubleQuotes46>,<doubleQuotes46>I am here<doubleQuotes46>);<newline46mondego>"
"483splitHere46","2220559splitHere46","adb logcat<newline46mondego>"
"484splitHere46","2220559splitHere46","static final String"
"485splitHere46","2220559splitHere46","Log.d(MyActivity.LOG_TAG,<doubleQuotes46>Application started<doubleQuotes46>);<newline46mondego>"
"486splitHere46","2220559splitHere46","Log"
"487splitHere46","2220559splitHere46","e()"
"488splitHere46","2220559splitHere46","w()"
"489splitHere46","2220559splitHere46","i()"
"490splitHere46","2220559splitHere46","d()"
"491splitHere46","2220559splitHere46","v()"
"492splitHere46","2220624splitHere46","ServerResource"
"493splitHere46","2220624splitHere46","ChallengeAuthenticator"
"494splitHere46","2220624splitHere46","optional = true"
"495splitHere46","2220624splitHere46","ChallengeAuthenticator.challenge()"
"496splitHere46","2220624splitHere46","authenticate()"
"497splitHere46","2220624splitHere46","package example;<newline46mondego><newline46mondego>import org.restlet.*;<newline46mondego>import org.restlet.data.ChallengeScheme;<newline46mondego>import org.restlet.routing.Router;<newline46mondego>import org.restlet.security.*;<newline46mondego><newline46mondego>public class ExampleApp extends Application {<newline46mondego><newline46mondego>    private ChallengeAuthenticator authenticatior;<newline46mondego><newline46mondego>    private ChallengeAuthenticator createAuthenticator() {<newline46mondego>        Context context = getContext();<newline46mondego>        boolean optional = true;<newline46mondego>        ChallengeScheme challengeScheme = ChallengeScheme.HTTP_BASIC;<newline46mondego>        String realm = <doubleQuotes46>Example site<doubleQuotes46>;<newline46mondego><newline46mondego>        // MapVerifier isn't very secure; see docs for alternatives<newline46mondego>        MapVerifier verifier = new MapVerifier();<newline46mondego>        verifier.getLocalSecrets().put(<doubleQuotes46>user<doubleQuotes46>, <doubleQuotes46>password<doubleQuotes46>.toCharArray());<newline46mondego><newline46mondego>        ChallengeAuthenticator auth = new ChallengeAuthenticator(context, optional, challengeScheme, realm, verifier) {<newline46mondego>            @Override<newline46mondego>            protected boolean authenticate(Request request, Response response) {<newline46mondego>                if (request.getChallengeResponse() == null) {<newline46mondego>                    return false;<newline46mondego>                } else {<newline46mondego>                    return super.authenticate(request, response);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        return auth;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Restlet createInboundRoot() {<newline46mondego>        this.authenticatior = createAuthenticator();<newline46mondego><newline46mondego>        Router router = new Router();<newline46mondego>        router.attach(<doubleQuotes46>/user<doubleQuotes46>, UserResource.class);<newline46mondego><newline46mondego>        authenticatior.setNext(router);<newline46mondego>        return authenticatior;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean authenticate(Request request, Response response) {<newline46mondego>        if (!request.getClientInfo().isAuthenticated()) {<newline46mondego>            authenticatior.challenge(response, false);<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"498splitHere46","2220624splitHere46","package example;<newline46mondego><newline46mondego>import org.restlet.data.MediaType;<newline46mondego>import org.restlet.representation.EmptyRepresentation;<newline46mondego>import org.restlet.representation.Representation;<newline46mondego>import org.restlet.representation.StringRepresentation;<newline46mondego>import org.restlet.resource.ServerResource;<newline46mondego><newline46mondego>public class UserResource extends ServerResource {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Representation get() {<newline46mondego>        ExampleApp app = (ExampleApp) getApplication();<newline46mondego>        if (!app.authenticate(getRequest(), getResponse())) {<newline46mondego>            // Not authenticated<newline46mondego>            return new EmptyRepresentation();<newline46mondego>        }<newline46mondego><newline46mondego>        // Generate list of users<newline46mondego>        // ...<newline46mondego>    }     <newline46mondego><newline46mondego>    @Override<newline46mondego>    public Representation post(Representation entity) {<newline46mondego>        // Handle post<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"499splitHere46","2220801splitHere46","public static <T extends Enum<T>> Enum<T> getEnumAttribute(Element element, String name, <newline46mondego>    Enum<T> defaultValue) {<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"500splitHere46","2221306splitHere46","MediaTracker"
"501splitHere46","2221454splitHere46","setSoTimeout"
"502splitHere46","2221454splitHere46","java.net.SocketTimeoutException"
"503splitHere46","2221454splitHere46","ScheduledExecutorService"
"504splitHere46","2221454splitHere46","Timer"
"505splitHere46","2221620splitHere46","private"
"506splitHere46","2221668splitHere46","Map"
"507splitHere46","2221668splitHere46","GZIPOutputStream"
"508splitHere46","2221668splitHere46","Base64"
"509splitHere46","2221668splitHere46","Base64OutputStream"
"510splitHere46","2221668splitHere46","public static void main(String[] args) throws IOException {<newline46mondego>    Map<String, String> map = new HashMap<String, String>();<newline46mondego>    map.put(<doubleQuotes46>key1<doubleQuotes46>, <doubleQuotes46>value1<doubleQuotes46>);<newline46mondego>    map.put(<doubleQuotes46>key2<doubleQuotes46>, <doubleQuotes46>value2<doubleQuotes46>);<newline46mondego>    map.put(<doubleQuotes46>key3<doubleQuotes46>, <doubleQuotes46>value3<doubleQuotes46>);<newline46mondego><newline46mondego>    String serialized = serialize(map);<newline46mondego>    Map<String, String> deserialized = deserialize(serialized, new TypeToken<Map<String, String>>() {}.getType());<newline46mondego><newline46mondego>    System.out.println(deserialized);<newline46mondego>}<newline46mondego><newline46mondego>public static String serialize(Object object) throws IOException {<newline46mondego>    ByteArrayOutputStream byteaOut = new ByteArrayOutputStream();<newline46mondego>    GZIPOutputStream gzipOut = null;<newline46mondego>    try {<newline46mondego>        gzipOut = new GZIPOutputStream(new Base64OutputStream(byteaOut));<newline46mondego>        gzipOut.write(new Gson().toJson(object).getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>    } finally {<newline46mondego>        if (gzipOut != null) try { gzipOut.close(); } catch (IOException logOrIgnore) {}<newline46mondego>    }<newline46mondego>    return new String(byteaOut.toByteArray());<newline46mondego>}<newline46mondego><newline46mondego>public static <T> T deserialize(String string, Type type) throws IOException {<newline46mondego>    ByteArrayOutputStream byteaOut = new ByteArrayOutputStream();<newline46mondego>    GZIPInputStream gzipIn = null;<newline46mondego>    try {<newline46mondego>        gzipIn = new GZIPInputStream(new Base64InputStream(new ByteArrayInputStream(string.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>))));<newline46mondego>        for (int data; (data = gzipIn.read()) > -1;) {<newline46mondego>            byteaOut.write(data);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (gzipIn != null) try { gzipIn.close(); } catch (IOException logOrIgnore) {}<newline46mondego>    }<newline46mondego>    return new Gson().fromJson(new String(byteaOut.toByteArray()), type);<newline46mondego>}<newline46mondego>"
"511splitHere46","2221699splitHere46","JEditorPane"
"512splitHere46","2221699splitHere46","JEditorPane"
"513splitHere46","2221699splitHere46","JPopupMenu"
"514splitHere46","2221699splitHere46","String text = <doubleQuotes46>Potentially looooooong text. <doubleQuotes46> + <newline46mondego>    <doubleQuotes46>Lorem ipsum dolor sit amet, consectetuer<doubleQuotes46> +<newline46mondego>    <doubleQuotes46>adipiscing elit, sed diam nonummy nibh euismod <doubleQuotes46> +<newline46mondego>    <doubleQuotes46>tincidunt ut laoreet dolore magna aliquam<doubleQuotes46> + <newline46mondego>    <doubleQuotes46>adipiscing elit, sed diam nonummy nibh euismod<doubleQuotes46> + <newline46mondego>    <doubleQuotes46>erat volutpat. Ut wisi enim ad minim veniam, <doubleQuotes46> + <newline46mondego>    <doubleQuotes46>quis nostrud exerci tation.<doubleQuotes46>;<newline46mondego><newline46mondego>final JEditorPane editorPane = new JEditorPane(<doubleQuotes46>text/html<doubleQuotes46>, text);<newline46mondego>editorPane.setSize(300, Integer.MAX_VALUE);<newline46mondego>editorPane.setEditable(false);<newline46mondego>"
"515splitHere46","2221699splitHere46","<doubleQuotes46>Hello, World!<doubleQuotes46>"
"516splitHere46","2221703splitHere46","GridData"
"517splitHere46","2221703splitHere46","grabExcessVerticalSpace"
"518splitHere46","2221703splitHere46","private void createSectionWithButton(FormToolkit toolkit, final Composite body, final GridData layoutData) {<newline46mondego>    final Section section = createSection(toolkit, body, <doubleQuotes46>Section<doubleQuotes46>, layoutData.grabExcessVerticalSpace);<newline46mondego>    section.setLayoutData(layoutData);<newline46mondego>    section.setClient(toolkit.createButton(section, <doubleQuotes46>button<doubleQuotes46>, SWT.NONE));<newline46mondego>}<newline46mondego><newline46mondego>private Section createSection(final FormToolkit toolkit, final Composite body, String title,<newline46mondego>        boolean shouldGiveUpVerticalSpaceWhenFolded) {<newline46mondego>    final Section section = toolkit.createSection(body, Section.TITLE_BAR | Section.TWISTIE | Section.EXPANDED);<newline46mondego>    section.setText(title);<newline46mondego>    managedForm.addPart(new SectionPart(section));<newline46mondego>    if (shouldGiveUpVerticalSpaceWhenFolded) {<newline46mondego>        section.addExpansionListener(new ExpansionAdapter() {<newline46mondego>            public void expansionStateChanged(ExpansionEvent e) {<newline46mondego>                GridData gridData = (GridData) section.getLayoutData();<newline46mondego>                gridData.grabExcessVerticalSpace = e.getState();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>    section.addExpansionListener(new ExpansionAdapter() {<newline46mondego>        public void expansionStateChanged(ExpansionEvent e) {<newline46mondego>            managedForm.reflow(true);<newline46mondego>        }<newline46mondego>    });<newline46mondego>    return section;<newline46mondego>}<newline46mondego>"
"519splitHere46","2221793splitHere46","K"
"520splitHere46","2221793splitHere46","K"
"521splitHere46","2221833splitHere46","HandlerInterceptor"
"522splitHere46","2221874splitHere46","<f:setPropertyActionListener value=<doubleQuotes46>3<doubleQuotes46> target=<doubleQuotes46>#{bean.propety>"
"523splitHere46","2221874splitHere46","propety"
"524splitHere46","2221874splitHere46","run()"
"525splitHere46","2221874splitHere46","<h:commandButton action=<doubleQuotes46>#{bean.run}<doubleQuotes46>><newline46mondego>    <f:setPropertyActionListener target=<doubleQuotes46>#{bean.property}<doubleQuotes46> <newline46mondego>        value=<doubleQuotes46>#{pageVariable}<doubleQuotes46> /><newline46mondego></h:commandButton><newline46mondego><!-- pageVariable contains the number you are passing --><newline46mondego><newline46mondego><newline46mondego>public class Bean {<newline46mondego>   private int property; // with setters and getters<newline46mondego>   public void run() {<newline46mondego>      // do something with property<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"526splitHere46","2222056splitHere46","RandomFileAccess"
"527splitHere46","2222109splitHere46","<ice:inputText id=<doubleQuotes46>#{cid}<doubleQuotes46> value=<doubleQuotes46>#{value}<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"528splitHere46","2222268splitHere46","HttpServletRequest"
"529splitHere46","2222268splitHere46","getRequestURL()"
"530splitHere46","2222268splitHere46","?"
"531splitHere46","2222268splitHere46","getQueryString()"
"532splitHere46","2222268splitHere46","?"
"533splitHere46","2222268splitHere46","public static String getFullURL(HttpServletRequest request) {<newline46mondego>    StringBuffer requestURL = request.getRequestURL();<newline46mondego>    String queryString = request.getQueryString();<newline46mondego><newline46mondego>    if (queryString == null) {<newline46mondego>        return requestURL.toString();<newline46mondego>    } else {<newline46mondego>        return requestURL.append('?').append(queryString).toString();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"534splitHere46","2222788splitHere46","JRE type: Standard VM JRE <newline46mondego>Name: jdk1.6.0_18<newline46mondego>JRE home directory: C:\Program Files (x86)\Java\jdk1.6.0_18<newline46mondego>"
"535splitHere46","2222797splitHere46","<table><tr><td>cell a</td><td>cell b</td></table>"
"536splitHere46","2222855splitHere46","DispatcherServlet"
"537splitHere46","2222855splitHere46","*.jsp"
"538splitHere46","2222855splitHere46","DispatcherServlet"
"539splitHere46","2222855splitHere46","*.html"
"540splitHere46","2222971splitHere46","*"
"541splitHere46","2222971splitHere46",".."
"542splitHere46","2222971splitHere46","pointcut addMenu(ModelMap modelMap) : <newline46mondego>    execution (public String example.web.MyController.*(..)) && args (*, modelMap);<newline46mondego>"
"543splitHere46","2223046splitHere46","Tools > Libraries"
"544splitHere46","2223266splitHere46","MyType"
"545splitHere46","2223266splitHere46","fId"
"546splitHere46","2223266splitHere46","ftId"
"547splitHere46","2223266splitHere46","for (String fId : fIds) {         <newline46mondego>        String[] ftIds = handler.XMLList(<doubleQuotes46>//snip/ftid/text()<doubleQuotes46>);<newline46mondego>        for (String ftId : ftIds) {  <newline46mondego>            MyType tld = new MyType();<newline46mondego>            tld.setFtId(ftId);<newline46mondego>            tld.setFId(fId);        <newline46mondego>            logger.info(<doubleQuotes46>ftId:<doubleQuotes46>+ftId+<doubleQuotes46>,fId:<doubleQuotes46>+fId);<newline46mondego>            dataList.add(tld);  // each ft<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"548splitHere46","2223303splitHere46","class Model<T> { <newline46mondego><newline46mondego>    private T t; <newline46mondego>    private Class<T> tag;<newline46mondego><newline46mondego>    public Model(Class<T> tag) {<newline46mondego>       this.tag = tag;<newline46mondego>    }<newline46mondego><newline46mondego>    private void someMethod(){ <newline46mondego>       // use tag<newline46mondego>    }  <newline46mondego>} <newline46mondego>"
"549splitHere46","2223418splitHere46","OFXReader"
"550splitHere46","2223418splitHere46","AggregateUnmarshaller"
"551splitHere46","2223418splitHere46","net.sf.ofx4j.io.OFXReader"
"552splitHere46","2223418splitHere46","NanoXMLOFXReader"
"553splitHere46","2223418splitHere46","AggregateUnmarshaller"
"554splitHere46","2223513splitHere46","osql -L<newline46mondego>"
"555splitHere46","2223571splitHere46","style=<doubleQuotes46>color: #{yourVar == 'yes' ? 'green' : 'red'};<doubleQuotes46>"
"556splitHere46","2223571splitHere46","<h:outputText>"
"557splitHere46","2223571splitHere46","rendered"
"558splitHere46","2223571splitHere46","#{yourVar == 'yes'}"
"559splitHere46","2223571splitHere46","#{yourVar == 'no'}"
"560splitHere46","2223571splitHere46","styleClass=<doubleQuotes46>#{my:getStyleClass(yourVar)}<doubleQuotes46>"
"561splitHere46","2223680splitHere46","csm.method();<newline46mondego>"
"562splitHere46","2223680splitHere46","CallingStaticMethod.method();<newline46mondego>"
"563splitHere46","2223965splitHere46","(field = value) instanceof String<newline46mondego>"
"564splitHere46","2223965splitHere46","value"
"565splitHere46","2223965splitHere46","null"
"566splitHere46","2223965splitHere46","(field = value) != null<newline46mondego>"
"567splitHere46","2223965splitHere46","null"
"568splitHere46","2223965splitHere46","true"
"569splitHere46","2223965splitHere46","(field = value) == value<newline46mondego>"
"570splitHere46","2224020splitHere46","this.resourceMap = org.jdesktop.application.Application.getInstance(scheator.ScheatorApp.class).getContext().getResourceMap(MainTablePanel.class);<newline46mondego>    this.actionMap = org.jdesktop.application.Application.getInstance(scheator.ScheatorApp.class).getContext().getActionMap(MainTablePanel.class, this);<newline46mondego>"
"571splitHere46","2224324splitHere46","public class KTagLib extends AbstractTagLibrary {<newline46mondego>    public static final String NAMESPACE = <doubleQuotes46>http://mysite.blah/tags<doubleQuotes46>;<newline46mondego>    public static final KTagLib INSTANCE = new KTagLib();<newline46mondego><newline46mondego>    public KTagLib() {<newline46mondego>        super(NAMESPACE);<newline46mondego>        try{<newline46mondego>            try {<newline46mondego>                Method[] methods = KTags.class.getMethods();<newline46mondego><newline46mondego>                for (int i = 0; i < methods.length; i++) {<newline46mondego>                    if (Modifier.isStatic(methods[i].getModifiers())) {<newline46mondego>                        this.addFunction(methods[i].getName(), methods[i]);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } catch (Exception e) {<newline46mondego>                throw new RuntimeException(e);<newline46mondego>            }            <newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"572splitHere46","2224324splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><!DOCTYPE facelet-taglib PUBLIC <doubleQuotes46>-//Sun Microsystems, Inc.//DTD Facelet Taglib 1.0//EN<doubleQuotes46> <doubleQuotes46>http://java.sun.com/dtd/facelet-taglib_1_0.dtd<doubleQuotes46>><newline46mondego><facelet-taglib><newline46mondego>    <library-class>mypackage.KTagLib</library-class><newline46mondego></facelet-taglib><newline46mondego>"
"573splitHere46","2224324splitHere46","this.addFunction()"
"574splitHere46","2224324splitHere46","put()"
"575splitHere46","2224324splitHere46","doStuff"
"576splitHere46","2224431splitHere46","public class Example {<newline46mondego>    public class BooleanResult {<newline46mondego>        private boolean result;<newline46mondego><newline46mondego>        public void setResult(boolean value) { result = value; }<newline46mondego>        public boolean getResult() { return result; }<newline46mondego>    }<newline46mondego><newline46mondego>    // ....<newline46mondego>    public List doSomething(BooleanResult out) {<newline46mondego>        List list;<newline46mondego>        boolean result;<newline46mondego><newline46mondego>        // ...<newline46mondego><newline46mondego>        out.setResult(result);<newline46mondego><newline46mondego>        return list;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"577splitHere46","2224431splitHere46","Example.BooleanResult out = new Example.BooleanResult();<newline46mondego><newline46mondego>List list = example.doSomething(out);<newline46mondego><newline46mondego>boolean result = out.getResult();<newline46mondego>"
"578splitHere46","2224461splitHere46","$JDK_HOME/bin"
"579splitHere46","2224461splitHere46","/bin"
"580splitHere46","2224461splitHere46","jar"
"581splitHere46","2224672splitHere46","loginframe"
"582splitHere46","2224672splitHere46","loginFrame"
"583splitHere46","2224672splitHere46","public class JFrameTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame loginFrame = new JFrame(<doubleQuotes46>Login<doubleQuotes46>);<newline46mondego><newline46mondego>        loginFrame.setSize(500,400);<newline46mondego>        JPanel loginPanel = new JPanel();<newline46mondego>        loginPanel.setLayout(new GridLayout(0,2));<newline46mondego><newline46mondego>        JLabel header = new JLabel(<doubleQuotes46>Login<doubleQuotes46>);<newline46mondego>        JLabel header2 = new JLabel(<doubleQuotes46>blahvlah<doubleQuotes46>);<newline46mondego>        JLabel loginLabel = new JLabel(<doubleQuotes46>Login<doubleQuotes46>);<newline46mondego>        JTextField loginField = new JTextField(24);<newline46mondego>        JLabel passLabel = new JLabel(<doubleQuotes46>Password<doubleQuotes46>);<newline46mondego>        JTextField passField = new JTextField(24);<newline46mondego><newline46mondego>        loginPanel.add(header);<newline46mondego>        loginPanel.add(header2);<newline46mondego>        loginPanel.add(loginLabel);<newline46mondego>        loginPanel.add(loginField);<newline46mondego>        loginPanel.add(passLabel);<newline46mondego>        loginPanel.add(passField);<newline46mondego><newline46mondego>        loginFrame.add(loginPanel);<newline46mondego>        loginFrame.setVisible(true);<newline46mondego>        loginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"584splitHere46","2224706splitHere46","Card"
"585splitHere46","2224706splitHere46","Enum"
"586splitHere46","2224706splitHere46","Enum"
"587splitHere46","2224706splitHere46","Rank"
"588splitHere46","2224706splitHere46","Suit"
"589splitHere46","2224706splitHere46","Enum"
"590splitHere46","2224775splitHere46","%d"
"591splitHere46","2224775splitHere46","String"
"592splitHere46","2224775splitHere46","c[i][j]+<doubleQuotes46> <doubleQuotes46>"
"593splitHere46","2224775splitHere46","c[i][j]"
"594splitHere46","2224775splitHere46","String"
"595splitHere46","2224775splitHere46","%d"
"596splitHere46","2224775splitHere46","%f"
"597splitHere46","2224775splitHere46","System.out.printf(<doubleQuotes46>%.1f <doubleQuotes46>, c[i][j]); <newline46mondego>"
"598splitHere46","2224775splitHere46","Formatter"
"599splitHere46","2224793splitHere46","URLConnection"
"600splitHere46","2224793splitHere46","ProxySelector"
"601splitHere46","2224793splitHere46","ThreadLocal"
"602splitHere46","2224899splitHere46","java -classpath . Gateway"
"603splitHere46","2224899splitHere46","org.mcgill.telecom"
"604splitHere46","2224899splitHere46","java -classpath . org.mcgill.telecom.Gateway"
"605splitHere46","2224899splitHere46","org"
"606splitHere46","2224899splitHere46","temp"
"607splitHere46","2224899splitHere46","org/mcgill/telecom"
"608splitHere46","2224899splitHere46","Gateway.java"
"609splitHere46","2224899splitHere46","telecom"
"610splitHere46","2224899splitHere46","Gateway.java"
"611splitHere46","2224899splitHere46","temp"
"612splitHere46","2224899splitHere46","javac org/mcgill/telecom/Gateway.java"
"613splitHere46","2224899splitHere46","java -classpath . org.mcgill.telecom.Gateway"
"614splitHere46","2224899splitHere46","bart@hades:~$ cd Temp/<newline46mondego>bart@hades:~/Temp$ ls<newline46mondego>org<newline46mondego>bart@hades:~/Temp$ javac org/mcgill/telecom/Gateway.java <newline46mondego>bart@hades:~/Temp$ java -classpath . org.mcgill.telecom.Gateway<newline46mondego>Oi, it works!<newline46mondego>bart@hades:~/Temp$ <newline46mondego>"
"615splitHere46","2224899splitHere46","package org.mcgill.telecom;<newline46mondego><newline46mondego>public class Gateway {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    System.out.println(<doubleQuotes46>Oi, it works!<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"616splitHere46","2224908splitHere46","c.getFont()"
"617splitHere46","2224908splitHere46","deriveFont(Font.BOLD)"
"618splitHere46","2225028splitHere46","EventQueue"
"619splitHere46","2225028splitHere46","postEvent"
"620splitHere46","2225028splitHere46","invokeLater"
"621splitHere46","2225028splitHere46","KeyboardFocusManager"
"622splitHere46","2225028splitHere46","Component.requestFocus()"
"623splitHere46","2225028splitHere46","KeyboardFocusManager.setMostRecentFocusOwner(Component)"
"624splitHere46","2225028splitHere46","Map"
"625splitHere46","2225028splitHere46","mostRecentFocusOwners"
"626splitHere46","2225028splitHere46","Map"
"627splitHere46","2225028splitHere46","Map"
"628splitHere46","2225028splitHere46","put"
"629splitHere46","2225028splitHere46","import com.google.common.collect.ForwardingMap;<newline46mondego><newline46mondego>// ...<newline46mondego><newline46mondego>Field mrfoField = KeyboardFocusManager.class.getDeclaredField(<doubleQuotes46>mostRecentFocusOwners<doubleQuotes46>);<newline46mondego>mrfoField.setAccessible(true);<newline46mondego>final Map delegate = (Map) mrfoField.get(null);<newline46mondego>Map mrfo = new ForwardingMap() {<newline46mondego>    public Object put(Object key, Object value) {<newline46mondego>        new Throwable().printStackTrace();<newline46mondego>        return super.put(key, value);<newline46mondego>    }<newline46mondego>    protected Map delegate() {<newline46mondego>        return delegate;<newline46mondego>    }<newline46mondego>};<newline46mondego>mrfoField.set(null, mrfo);<newline46mondego>"
"630splitHere46","2225028splitHere46","requestFocus"
"631splitHere46","2225186splitHere46","Foo"
"632splitHere46","2225186splitHere46","Bar"
"633splitHere46","2225186splitHere46","super(String)"
"634splitHere46","2225186splitHere46","public Bar(String text) {<newline46mondego>   super(text);<newline46mondego>}<newline46mondego>"
"635splitHere46","2225186splitHere46","text"
"636splitHere46","2225186splitHere46","public Bar() {<newline46mondego>   super(DEFAULT_TEXT);<newline46mondego>}<newline46mondego>"
"637splitHere46","2225186splitHere46","super()"
"638splitHere46","2225275splitHere46","Connection"
"639splitHere46","2225275splitHere46","close()"
"640splitHere46","2225275splitHere46","ResultSet"
"641splitHere46","2225275splitHere46","Statement"
"642splitHere46","2225275splitHere46","Connection"
"643splitHere46","2225275splitHere46","finally"
"644splitHere46","2225275splitHere46","Connection conn = null;<newline46mondego>PreparedStatement ps = null;<newline46mondego>ResultSet rs = null;<newline46mondego><newline46mondego>try {<newline46mondego>    // Do stuff<newline46mondego>    ...<newline46mondego><newline46mondego>} catch (SQLException ex) {<newline46mondego>    // Exception handling stuff<newline46mondego>    ...<newline46mondego>} finally {<newline46mondego>    if (rs != null) {<newline46mondego>        try {<newline46mondego>            rs.close();<newline46mondego>        } catch (SQLException e) { /* ignored */}<newline46mondego>    }<newline46mondego>    if (ps != null) {<newline46mondego>        try {<newline46mondego>            ps.close();<newline46mondego>        } catch (SQLException e) { /* ignored */}<newline46mondego>    }<newline46mondego>    if (conn != null) {<newline46mondego>        try {<newline46mondego>            conn.close();<newline46mondego>        } catch (SQLException e) { /* ignored */}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"645splitHere46","2225275splitHere46","finally"
"646splitHere46","2225275splitHere46","} finally {<newline46mondego>    try { rs.close(); } catch (Exception e) { /* ignored */ }<newline46mondego>    try { ps.close(); } catch (Exception e) { /* ignored */ }<newline46mondego>    try { conn.close(); } catch (Exception e) { /* ignored */ }<newline46mondego>}<newline46mondego>"
"647splitHere46","2225275splitHere46","finally"
"648splitHere46","2225275splitHere46","} finally {<newline46mondego>    DbUtils.closeQuietly(rs);<newline46mondego>    DbUtils.closeQuietly(ps);<newline46mondego>    DbUtils.closeQuietly(conn);<newline46mondego>}<newline46mondego>"
"649splitHere46","2225275splitHere46","DbUtils"
"650splitHere46","2225397splitHere46","public static void main( String[] args )<newline46mondego>{<newline46mondego>   // stuff ...<newline46mondego>}<newline46mondego>"
"651splitHere46","2225429splitHere46","<environment id=<doubleQuotes46>development<doubleQuotes46>><newline46mondego>    <transactionManager type=<doubleQuotes46>JDBC<doubleQuotes46>/><newline46mondego>    <dataSource type=<doubleQuotes46>JNDI<doubleQuotes46>><newline46mondego>        <property name=<doubleQuotes46>data_source<doubleQuotes46> value=<doubleQuotes46>java:comp/env/jdbc/webDb<doubleQuotes46>/><newline46mondego>    </dataSource><newline46mondego></environment><newline46mondego>"
"652splitHere46","2225480splitHere46","s.matches(<doubleQuotes46>([123456789TJQKA])([dchs])\\1(?!\\2)[dchs]|([123456789TJQKA])\\3<doubleQuotes46>)<newline46mondego>"
"653splitHere46","2225480splitHere46","public class Test<newline46mondego>{<newline46mondego>    private static void test(String input, boolean expected)<newline46mondego>    {<newline46mondego>        boolean result = input.matches(<doubleQuotes46>([123456789TJQKA])([dchs])\\1(?!\\2)[dchs]|([123456789TJQKA])\\3<doubleQuotes46>);<newline46mondego>        if (result != expected)<newline46mondego>            throw new RuntimeException(<doubleQuotes46>Failed!<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws Exception<newline46mondego>    {<newline46mondego>        test(<doubleQuotes46>JJ<doubleQuotes46>, true);<newline46mondego>        test(<doubleQuotes46>JsJd<doubleQuotes46>, true);<newline46mondego>        test(<doubleQuotes46>11<doubleQuotes46>, true);<newline46mondego>        test(<doubleQuotes46>2c2h<doubleQuotes46>, true);<newline46mondego><newline46mondego>        test(<doubleQuotes46>Js<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>JsJs<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>JsJ<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>JQ<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>1d1d<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>J<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46><doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>3d3d<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>JsJdJ<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>JsJdJh<doubleQuotes46>, false);<newline46mondego>        test(<doubleQuotes46>1A<doubleQuotes46>, false);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"654splitHere46","2225499splitHere46","project.build.finalName"
"655splitHere46","2225499splitHere46","finalName"
"656splitHere46","2225499splitHere46","jarModule"
"657splitHere46","2225499splitHere46","bundleFileName"
"658splitHere46","2225499splitHere46","<project><newline46mondego>  [...]<newline46mondego>  <dependencies><newline46mondego>    <dependency><newline46mondego>      <groupId>yourgroupid</groupId><newline46mondego>      <artifactId>projectx-client</artifactId><newline46mondego>      <version>2.0.0</version><!-- not mandatory if inherited --><newline46mondego>    </dependency><newline46mondego>    [...]<newline46mondego>  </dependencies><newline46mondego>  [...]  <newline46mondego>  <build><newline46mondego>    [...]<newline46mondego>    <plugins><newline46mondego>      [...]<newline46mondego>      <plugin><newline46mondego>        <artifactId>maven-ear-plugin</artifactId><newline46mondego>        <version>2.4</version><newline46mondego>        <configuration><newline46mondego>          <finalName>projectx-ear</finalName><newline46mondego>          <modules><newline46mondego>            <jarModule><newline46mondego>              <groupId>yourgroupid</groupId><newline46mondego>              <artifactId>projectx-client</artifactId><newline46mondego>              <bundleFileName>anotherName.jar</bundleFileName><newline46mondego>            </jarModule><newline46mondego>          </modules><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>      [...]<newline46mondego></project><newline46mondego>"
"659splitHere46","2225565splitHere46","has"
"660splitHere46","2225565splitHere46","if (c[val]!=null && word.length()>1) {<newline46mondego>    return c[val].has(word.substring(1)); //<-- Change is on this line<newline46mondego>} else if (c[val].flag==true && word.length()==1) {<newline46mondego>    ...etc<newline46mondego>"
"661splitHere46","2225961splitHere46","int"
"662splitHere46","2225961splitHere46","int"
"663splitHere46","2225961splitHere46","++"
"664splitHere46","2225961splitHere46","int rolls = 0;<newline46mondego>rolls++;<newline46mondego>"
"665splitHere46","2225961splitHere46","int rolls = 0;<newline46mondego>rolls = rolls + 1;<newline46mondego>"
"666splitHere46","2225961splitHere46","main"
"667splitHere46","2225961splitHere46","float"
"668splitHere46","2225961splitHere46","int"
"669splitHere46","2225961splitHere46","int"
"670splitHere46","2225961splitHere46","float"
"671splitHere46","2225961splitHere46","int a = 10;<newline46mondego>float b = (float) a;<newline46mondego>"
"672splitHere46","2225961splitHere46","System.out.println()"
"673splitHere46","2225961splitHere46","println()"
"674splitHere46","2225994splitHere46","private final Class<T> clazz;<newline46mondego><newline46mondego>PropertyImplementationBinder(Class<T> clazz){<newline46mondego>    this.clazz = clazz;<newline46mondego>}<newline46mondego><newline46mondego>public Class<T> getInterfaceClass() {<newline46mondego>    return clazz;<newline46mondego>}<newline46mondego>"
"675splitHere46","2226136splitHere46","Map<String, Object>"
"676splitHere46","2226136splitHere46","String"
"677splitHere46","2226136splitHere46","<h:inputText value=<doubleQuotes46>#{bean.map.someProp}<doubleQuotes46> /><newline46mondego>"
"678splitHere46","2226136splitHere46","<h:inputText value=<doubleQuotes46>#{bean.map['someProp']}<doubleQuotes46> /><newline46mondego>"
"679splitHere46","2226136splitHere46","someVar"
"680splitHere46","2226136splitHere46","String"
"681splitHere46","2226136splitHere46","<doubleQuotes46>someProp<doubleQuotes46>"
"682splitHere46","2226136splitHere46","<h:inputText value=<doubleQuotes46>#{bean.map[someVar]}<doubleQuotes46> /><newline46mondego>"
"683splitHere46","2226136splitHere46","Map"
"684splitHere46","2226136splitHere46","public class Bean {<newline46mondego>    private Map<String, Object> map = new HashMap<String, Object>();<newline46mondego>}<newline46mondego>"
"685splitHere46","2226136splitHere46","@PostConstruct"
"686splitHere46","2226245splitHere46","CookieStore"
"687splitHere46","2226280splitHere46","<%@page contentType=<doubleQuotes46>text/html<doubleQuotes46> pageEncoding=<doubleQuotes46>MacRoman<doubleQuotes46>%><newline46mondego><!DOCTYPE HTML PUBLIC <doubleQuotes46>-//W3C//DTD HTML 4.01 Transitional//EN<doubleQuotes46><newline46mondego>   <doubleQuotes46>http://www.w3.org/TR/html4/loose.dtd<doubleQuotes46>><newline46mondego><%!<newline46mondego>private static class NdBadIdea {<newline46mondego>  private final int foo = 42;<newline46mondego><newline46mondego>  public int getFoo() {<newline46mondego>    return foo;<newline46mondego>  }<newline46mondego>}<newline46mondego>%><newline46mondego><html><newline46mondego>    <head><newline46mondego>        <meta http-equiv=<doubleQuotes46>Content-Type<doubleQuotes46> content=<doubleQuotes46>text/html; charset=MacRoman<doubleQuotes46>><newline46mondego>        <title>JSP Page</title><newline46mondego>    </head><newline46mondego>    <body><newline46mondego>        <h1>Hello World!</h1><newline46mondego>        <%=new NdBadIdea().getFoo()%><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"688splitHere46","2226353splitHere46","if (Character.isDigit(s.charAt(i)));<newline46mondego>"
"689splitHere46","2226414splitHere46","sun.jdbc.odbc.JdbcOdbcDriver"
"690splitHere46","2226414splitHere46","com.ms.jdbc.odbc.JdbcOdbcDriver"
"691splitHere46","2226789splitHere46","Project"
"692splitHere46","2226789splitHere46","Employee"
"693splitHere46","2226789splitHere46","Employee"
"694splitHere46","2226789splitHere46","Employee"
"695splitHere46","2226789splitHere46","Project"
"696splitHere46","2226789splitHere46","Project"
"697splitHere46","2226789splitHere46","Employee"
"698splitHere46","2226789splitHere46","Project"
"699splitHere46","2226789splitHere46","Employee"
"700splitHere46","2226789splitHere46","select distinct project.teamMembers <newline46mondego>from Project as project <newline46mondego>where project.projectManager.id=:id <newline46mondego>"
"701splitHere46","2227067splitHere46","$artist.festival"
"702splitHere46","2227067splitHere46","$artist.isFestival()"
"703splitHere46","2227067splitHere46","$artist            ## see if the artist is defined<newline46mondego> $artist.IsFestival  ## maybe an error   <newline46mondego> $artist.festival    ## should be true or false<newline46mondego> $artist.isFestival() ## should be true or false<newline46mondego>"
"704splitHere46","2227125splitHere46","System.out"
"705splitHere46","2227313splitHere46","new DataFlavor(ArrayList.class, <doubleQuotes46>ArrayList<doubleQuotes46>);<newline46mondego>"
"706splitHere46","2227326splitHere46","q"
"707splitHere46","2227344splitHere46","public List<Program> findBySubscriber(Subscriber subscriber) {<newline46mondego>  String hql = <doubleQuotes46>select p <doubleQuotes46> +<newline46mondego>     <doubleQuotes46>from Program p <doubleQuotes46> +<newline46mondego>     <doubleQuotes46> join p.subscribers s <doubleQuotes46> +<newline46mondego>     <doubleQuotes46>where s = :sub<doubleQuotes46><newline46mondego>     ;    <newline46mondego><newline46mondego>  Query q = getSession().createQuery(hql);<newline46mondego>  q.setEntity(<doubleQuotes46>sub<doubleQuotes46>, subscriber);<newline46mondego><newline46mondego>  List<Program> l = q.list();<newline46mondego>  return l;<newline46mondego>}<newline46mondego>"
"708splitHere46","2227377splitHere46","CursorAdapter"
"709splitHere46","2227377splitHere46","Cursor"
"710splitHere46","2227377splitHere46","NotesDbAdapter"
"711splitHere46","2227377splitHere46","fetchAllNotes"
"712splitHere46","2227377splitHere46","HashMap"
"713splitHere46","2227377splitHere46","onCreate"
"714splitHere46","2227377splitHere46","ListActivity"
"715splitHere46","2227377splitHere46","// -- container for all of our list items<newline46mondego>List<Map<String, String>> groupData = new ArrayList<Map<String, String>>();<newline46mondego><newline46mondego>// -- list item hash re-used<newline46mondego>Map<String, String> group;<newline46mondego><newline46mondego>// -- create record<newline46mondego>group = new HashMap<String, String>();<newline46mondego><newline46mondego>group.put( KEY_LABEL, getString( R.string.option_create ) );<newline46mondego>group.put( KEY_HELP,  getString( R.string.option_create_help ) );<newline46mondego>group.put( KEY_ACTION, ACTION_CREATE_RECORD );<newline46mondego><newline46mondego>groupData.add(group);<newline46mondego><newline46mondego>// -- geo locate<newline46mondego>group = new HashMap<String, String>();<newline46mondego><newline46mondego>group.put( KEY_LABEL, getString(R.string.option_geo_locate ) );<newline46mondego>group.put( KEY_HELP, getString(R.string.option_geo_locate_help ) )<newline46mondego>group.put( KEY_ACTION, ACTION_GEO_LOCATE );<newline46mondego><newline46mondego>groupData.add( group );<newline46mondego><newline46mondego>// -- take photo<newline46mondego>group = new HashMap<String, String>();<newline46mondego><newline46mondego>group.put( KEY_LABEL, getString( R.string.option_take_photo ) );<newline46mondego>group.put( KEY_HELP, getString(R.string.option_take_photo_help ) );<newline46mondego>group.put( KEY_ACTION, ACTION_TAKE_PHOTO );<newline46mondego><newline46mondego>groupData.add( group );<newline46mondego><newline46mondego>// -- create an adapter, takes care of binding hash objects in our list to actual row views<newline46mondego>SimpleAdapter adapter = new SimpleAdapter( this, groupData, android.R.layout.simple_list_item_2, <newline46mondego>                                                   new String[] { KEY_LABEL, KEY_HELP },<newline46mondego>                                                   new int[]{ android.R.id.text1, android.R.id.text2 } );<newline46mondego>setListAdapter( adapter );<newline46mondego>"
"716splitHere46","2227618splitHere46","<import resource=<doubleQuotes46>...<doubleQuotes46>/><newline46mondego>"
"717splitHere46","2227618splitHere46","businesscaliber-servlet.xml"
"718splitHere46","2227618splitHere46","<beans><newline46mondego>   <import resource=<doubleQuotes46>queries-bean.xml<doubleQuotes46>/><newline46mondego>   <import resource=<doubleQuotes46>url-mappings.xml<doubleQuotes46>/><newline46mondego><newline46mondego>   ... etc ...<newline46mondego></beans><newline46mondego>"
"719splitHere46","2227636splitHere46","ACTION_PACKAGE_ADDED"
"720splitHere46","2227636splitHere46","SharedPreferences p = PreferenceManager.getDefaultSharedPreferences(this);<newline46mondego>boolean firstRun = p.getBoolean(PREFERENCE_FIRST_RUN, true);<newline46mondego>p.edit().putBoolean(PREFERENCE_FIRST_RUN, false).commit();<newline46mondego>"
"721splitHere46","2227665splitHere46","HttpSession"
"722splitHere46","2227665splitHere46","@SessionAttribute"
"723splitHere46","2227665splitHere46","@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/welcome.htm<doubleQuotes46>)<newline46mondego>@SessionAttributes({<doubleQuotes46>user<doubleQuotes46>})<newline46mondego>public class WelcomeController {<newline46mondego>    @RequestMapping(method = RequestMethod.POST)<newline46mondego>    public String processSubmit(ModelMap modelMap){<newline46mondego>       User user = loginService.loginUser(loginCredentials);<newline46mondego>       modelMap.addtAttribute(user);<newline46mondego>       return <doubleQuotes46>loginSuccess<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"724splitHere46","2227665splitHere46","@Controller<newline46mondego>@SessionAttributes({<doubleQuotes46>user<doubleQuotes46>})<newline46mondego>public class InspectionTypeController {<newline46mondego><newline46mondego>   @RequestMapping(value=<doubleQuotes46>/addInspectionType.htm<doubleQuotes46>, method = RequestMethod.POST )<newline46mondego>   public void addInspectionType(InspectionType inspectionType, @ModelAttribute User user) {<newline46mondego>      System.out.println(<doubleQuotes46>User: <doubleQuotes46>+ user.getUserDetails().getFirstName);<newline46mondego>   }<newline46mondego>} <newline46mondego>"
"725splitHere46","2227764splitHere46","ISourceProviderListener"
"726splitHere46","2227764splitHere46","ViewB"
"727splitHere46","2227764splitHere46","ISourceProviderListener"
"728splitHere46","2227764splitHere46","ISourceProvider"
"729splitHere46","2227764splitHere46","ViewA"
"730splitHere46","2227764splitHere46","ISourceProvider"
"731splitHere46","2227764splitHere46","ViewB"
"732splitHere46","2227764splitHere46","IServiceLocator"
"733splitHere46","2227764splitHere46","ISourceProviderService"
"734splitHere46","2227764splitHere46","ISourceProvider"
"735splitHere46","2228124splitHere46","javap"
"736splitHere46","2228272splitHere46","id"
"737splitHere46","2228272splitHere46","ids"
"738splitHere46","2228272splitHere46","id"
"739splitHere46","2228282splitHere46","setValidating(false)"
"740splitHere46","2228282splitHere46","setFeature(<doubleQuotes46>http://apache.org/xml/features/nonvalidating/load-external-dtd<doubleQuotes46>, false)"
"741splitHere46","2228309splitHere46","Object foo(Object u, Object v)"
"742splitHere46","2228309splitHere46","T"
"743splitHere46","2228309splitHere46","jmethodID getFooMethod = env->GetMethodID(bar_class, <doubleQuotes46>getFoo<doubleQuotes46>, <doubleQuotes46>()LFoo;<doubleQuotes46>);<newline46mondego>"
"744splitHere46","2228309splitHere46","foo"
"745splitHere46","2228309splitHere46","foo"
"746splitHere46","2228309splitHere46","getFoo"
"747splitHere46","2228309splitHere46","Bar"
"748splitHere46","2228309splitHere46","Foo"
"749splitHere46","2228309splitHere46","Foo getFoo()"
"750splitHere46","2228310splitHere46","-server -XX:+DoEscapeAnalysis"
"751splitHere46","2228310splitHere46","-server"
"752splitHere46","2228310splitHere46","-XX:+DoEscapeAnalysis"
"753splitHere46","2228310splitHere46","import java.util.ArrayList;<newline46mondego><newline46mondego>public class ArrayTest {<newline46mondego><newline46mondego>    static int RUNS_INNER = 1000;<newline46mondego>    static int RUNS_WARMUP = 10000;<newline46mondego>    static int RUNS_OUTER = 100000;<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        long t1;<newline46mondego>        long t2;<newline46mondego><newline46mondego>        Test test1 = new Test();<newline46mondego>        test1.thing = (int)Math.round(100*Math.random());<newline46mondego>        Test test2 = new Test();<newline46mondego>        test2.thing = (int)Math.round(100*Math.random());<newline46mondego><newline46mondego>        for(int i=0; i<RUNS_WARMUP; i++)<newline46mondego>        {<newline46mondego>            testRefs(test1, test2);            <newline46mondego>        }<newline46mondego>        t1 = System.nanoTime();<newline46mondego>        for(int i=0; i<RUNS_OUTER; i++)<newline46mondego>        {<newline46mondego>            testRefs(test1, test2);            <newline46mondego>        }<newline46mondego><newline46mondego>        t2 = System.nanoTime();<newline46mondego>        System.out.println((t2-t1)/1000000.0 + <doubleQuotes46> How long NO collection<doubleQuotes46>);<newline46mondego><newline46mondego>        ArrayList<Test> list = new ArrayList<Test>(1);<newline46mondego>        list.add(test1);<newline46mondego>        list.add(test2);<newline46mondego>        // tried this too: helps a tiny tiny bit <newline46mondego>        list.trimToSize();<newline46mondego><newline46mondego>        for(int i=0; i<RUNS_WARMUP; i++)<newline46mondego>        {<newline46mondego>            testColl(list);<newline46mondego>        }<newline46mondego>        t1= System.nanoTime();<newline46mondego><newline46mondego>        for(int i=0; i<RUNS_OUTER; i++)<newline46mondego>        {<newline46mondego>            testColl(list);<newline46mondego>        }<newline46mondego><newline46mondego>        t2 = System.nanoTime();<newline46mondego>        System.out.println((t2-t1)/1000000.0 + <doubleQuotes46> How long collection<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>        Test[] array = new Test[2];<newline46mondego>        list.toArray(array);<newline46mondego><newline46mondego>        for(int i=0; i<RUNS_WARMUP; i++)<newline46mondego>        {<newline46mondego>            testArr(array);            <newline46mondego>        }<newline46mondego>        t1= System.nanoTime();<newline46mondego><newline46mondego>        for(int i=0; i<RUNS_OUTER; i++)<newline46mondego>        {<newline46mondego>            testArr(array);<newline46mondego>        }<newline46mondego><newline46mondego>        t2 = System.nanoTime();<newline46mondego>        System.out.println((t2-t1)/1000000.0 + <doubleQuotes46> How long array <doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    private static void testArr(Test[] array)<newline46mondego>    {<newline46mondego>        for (int i=0; i<RUNS_INNER; i++) {<newline46mondego>            for (Test test : array) {<newline46mondego>                test.changeThing(i);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static void testColl(ArrayList<Test> list)<newline46mondego>    {<newline46mondego>        for (int i=0; i<RUNS_INNER; i++) {<newline46mondego>            for (Test eachTest : list) {<newline46mondego>                eachTest.changeThing(i);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static void testRefs(Test test1, Test test2)<newline46mondego>    {<newline46mondego>        for (int i=0; i<RUNS_INNER; i++) {<newline46mondego>            test1.changeThing(i);<newline46mondego>            test2.changeThing(i);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Test {<newline46mondego>    int thing;<newline46mondego>    int thing2;<newline46mondego>    public void changeThing(int addThis) {<newline46mondego>        thing2 = addThis + thing;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"754splitHere46","2228455splitHere46","instanceof"
"755splitHere46","2228469splitHere46","pack()"
"756splitHere46","2228469splitHere46","getPreferredSize()"
"757splitHere46","2228469splitHere46","// Creating the panel<newline46mondego>JPanel lPanel = new JPanel();<newline46mondego>//lPanel.setSize(1000, 1000); //default size, not needed anymore<newline46mondego>lPanel.setLayout(new BoxLayout(lPanel, BoxLayout.PAGE_AXIS));<newline46mondego><newline46mondego>//Adding the content<newline46mondego>lPanel.add(new JLabel(<doubleQuotes46>Blah<doubleQuotes46>));<newline46mondego>// etc...<newline46mondego><newline46mondego>//Adjust the panel to its preferred size<newline46mondego>lPanel.setSize(lPanel.getPreferredSize());<newline46mondego><newline46mondego>//Call the layout method <newline46mondego>//(this will adjust the content components to their correct size and position)<newline46mondego>lPanel.doLayout();<newline46mondego>"
"758splitHere46","2228469splitHere46","getPreferredSize()"
"759splitHere46","2228469splitHere46","getPreferredSize()"
"760splitHere46","2228469splitHere46","doLayout()"
"761splitHere46","2228485splitHere46","build.xml"
"762splitHere46","2228485splitHere46","war"
"763splitHere46","2228485splitHere46","<dependency><newline46mondego>        <groupId>org.springframework</groupId><newline46mondego>        <artifactId>spring</artifactId><newline46mondego>        <version>2.5.2</version><newline46mondego>    </dependency><newline46mondego>"
"764splitHere46","2228485splitHere46","pom.xml"
"765splitHere46","2228485splitHere46","<dependency><newline46mondego>        <groupId>hsqldb</groupId><newline46mondego>        <artifactId>hsqldb</artifactId><newline46mondego>        <version>1.8.0.7</version><newline46mondego>        <scope>test</scope><newline46mondego>    </dependency><newline46mondego>"
"766splitHere46","2228590splitHere46","stream_*"
"767splitHere46","2228590splitHere46","feed_*"
"768splitHere46","2228596splitHere46","ObjectIdentifier dnOid = new ObjectIdentifier(<doubleQuotes46>1.3.6.1.4.1.311.88.2.1<doubleQuotes46>);<newline46mondego>ObjectIdentifier ddOid = new ObjectIdentifier(<doubleQuotes46>1.3.6.1.4.1.311.88.2.2<doubleQuotes46>);<newline46mondego>ASN1Set nameSet = new DERSet(new ASN1Encodable[] {new DERPrintableString(<doubleQuotes46>name<doubleQuotes46>)});<newline46mondego>ASN1Set descriptionSet = new DERSet(new ASN1Encodable[] {new DERPrintableString(<doubleQuotes46>description<doubleQuotes46>}));<newline46mondego>Attribute documentName = new Attribute(dnOid, nameSet);<newline46mondego>Attribute documentDescription = new Attribute(ddOid, descriptionSet);<newline46mondego>"
"769splitHere46","2228596splitHere46","DERPrintableString"
"770splitHere46","2228596splitHere46","PKCS #9"
"771splitHere46","2228682splitHere46","Class.isAssignableFrom"
"772splitHere46","2228682splitHere46","int.class.isAssignableFrom(short.class)"
"773splitHere46","2228682splitHere46","false"
"774splitHere46","2228682splitHere46","Class.isAssignableFrom"
"775splitHere46","2228682splitHere46","Integer.class.isAssignableFrom(int.class)"
"776splitHere46","2228682splitHere46","false"
"777splitHere46","2228682splitHere46","Class.isInstance"
"778splitHere46","2228682splitHere46","Class.cast"
"779splitHere46","2228682splitHere46","Object"
"780splitHere46","2228682splitHere46","Object"
"781splitHere46","2228682splitHere46","(int) new Integer(42)"
"782splitHere46","2228682splitHere46","int.class.cast(new Integer(42))"
"783splitHere46","2228780splitHere46","public static class Bidriectional extends BasicArrowButton {<newline46mondego>  private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>  public Bidriectional() {<newline46mondego>   // This does not matter, we'll override it anyways.<newline46mondego>   super(SwingConstants.NORTH);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void paintTriangle(Graphics g, int x, int y, int size,<newline46mondego>    int direction, boolean isEnabled) {<newline46mondego><newline46mondego>   super.paintTriangle(g, x - (size / 2), y, size, SwingConstants.EAST, isEnabled);<newline46mondego>   super.paintTriangle(g, x + (size / 2), y, size, SwingConstants.EAST, isEnabled);<newline46mondego>  }<newline46mondego> }<newline46mondego>"
"784splitHere46","2228814splitHere46","public void readBook(String bookReader, String book){ <newline46mondego>    System.out.println(<doubleQuotes46>Book Reader: <doubleQuotes46> + bookReader);<newline46mondego>    System.out.println(<doubleQuotes46>Book:<doubleQuotes46> + book); <newline46mondego>}<newline46mondego>"
"785splitHere46","2228814splitHere46","readBook(<doubleQuotes46>The Book Reader<doubleQuotes46>, <doubleQuotes46>The Books Name<doubleQuotes46>);<newline46mondego>"
"786splitHere46","2228854splitHere46","setOpacity"
"787splitHere46","2228854splitHere46","AlphaComposite"
"788splitHere46","2228877splitHere46","faces-config"
"789splitHere46","2228877splitHere46","<managed-bean-class>mypackage.bean</managed-bean-class><newline46mondego>"
"790splitHere46","2228877splitHere46","<managed-bean-class>mypackage.Bean</managed-bean-class><newline46mondego>"
"791splitHere46","2228877splitHere46","Bean"
"792splitHere46","2228877splitHere46","<h:selectOneMenu id=<doubleQuotes46>Name<doubleQuotes46> value=<doubleQuotes46>#{myBean.input}<doubleQuotes46>><newline46mondego>"
"793splitHere46","2228877splitHere46","myBean"
"794splitHere46","2228877splitHere46","bean"
"795splitHere46","2228877splitHere46","<managed-bean-name>bean</managed-bean-name><newline46mondego>"
"796splitHere46","2228928splitHere46","ActionListener"
"797splitHere46","2228928splitHere46","JCheckBox"
"798splitHere46","2228928splitHere46","// ActionListener implementation that maintains a reference to each JCheckBox.<newline46mondego>// We will register this listener with the Submit button.<newline46mondego>public class MyActionListener implements ActionListener {<newline46mondego>  private final List<JCheckBox> checkBoxes = new LinkedList<JCheckBox>();<newline46mondego><newline46mondego>  /**<newline46mondego>   * Adds the specified JCheckBox to the list of JCheckBoxes.<newline46mondego>   */<newline46mondego>  public void addCheckBox(JCheckBox checkBox) {<newline46mondego>    this.checkBoxes.add(checkBox);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Called when the Submit button is pressed.<newline46mondego>   */<newline46mondego>  public void actionPerformed(ActionEvent evt) {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    sb.append(<doubleQuotes46>Selected Check Boxes: <doubleQuotes46>);<newline46mondego><newline46mondego>    // Iterate over each JCheckBox and build message ready for display.<newline46mondego>    // Could do something more sophisticated here if required.<newline46mondego>    for (JCheckBox checkBox : checkBoxes) {<newline46mondego>      if (checkBox.isSelected()) {<newline46mondego>        sb.append(checkBox.getText()).append(' ');<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    JOptionPane.showMessageDialog(null, sb);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// 1. Create ActionListener implementation.<newline46mondego>MyActionListener al = new MyActionListener();<newline46mondego><newline46mondego>// 2. Register JCheckBoxes with ActionListener.<newline46mondego>al.addCheckBox(checkBox);<newline46mondego>// etc.<newline46mondego><newline46mondego>// 3. Finally register ActionListener with Submit button.<newline46mondego>submitButton.addActionListener(al);<newline46mondego>"
"799splitHere46","2229241splitHere46","DefaultListCellRenderer"
"800splitHere46","2229241splitHere46","JLabel"
"801splitHere46","2229241splitHere46","JList list = ... // Create JList<newline46mondego><newline46mondego>// Install custom renderer.<newline46mondego>list.setCellRenderer(new DefaultListCellRenderer() {<newline46mondego>  public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {<newline46mondego><newline46mondego>    // Request superclass to render the JLabel.<newline46mondego>    Component ret = super.getListCellRenderer(list, value, index, isSelected, cellHasFocus);<newline46mondego><newline46mondego>    // Now conditionally override background if cell isn't selected.<newline46mondego>    if (!isSelected) {<newline46mondego>      String s = String.valueOf(value);<newline46mondego><newline46mondego>      if (s.equals(<doubleQuotes46>Foo<doubleQuotes46>)) {<newline46mondego>        ret.setBackground(Color.RED);<newline46mondego>      } else {<newline46mondego>        ret.setBackground(Color.GREEN);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    return ret;<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"802splitHere46","2229248splitHere46","Canvas"
"803splitHere46","2229248splitHere46","keyPressed()"
"804splitHere46","2229248splitHere46","keyReleased()"
"805splitHere46","2229248splitHere46","keyRepeated()"
"806splitHere46","2229248splitHere46","Form"
"807splitHere46","2229248splitHere46","List"
"808splitHere46","2229248splitHere46","TextBox"
"809splitHere46","2229256splitHere46","Serializable"
"810splitHere46","2229256splitHere46","Serializable"
"811splitHere46","2229256splitHere46","writeObject(ObjectOutputStream)"
"812splitHere46","2229256splitHere46","readObject(ObjectInputStream)"
"813splitHere46","2229422splitHere46","mvn install:install-file -Dfile=<path-to-file> -DgroupId=<myGroup> \<newline46mondego>    -DartifactId=<myArtifactId> -Dversion=<myVersion> -Dpackaging=<myPackaging><newline46mondego>"
"814splitHere46","2229422splitHere46","<dependency>"
"815splitHere46","2229422splitHere46","<dependency>  <newline46mondego>    <groupId>myGroup</groupId> <newline46mondego>    <artifactId>myArtifactId</artifactId> <newline46mondego>    <version>myVersion</version><newline46mondego></dependency><newline46mondego>"
"816splitHere46","2229619splitHere46","float anArrayOfFloats[]; // this form is discouraged<newline46mondego>"
"817splitHere46","2229695splitHere46","Object[]"
"818splitHere46","2229695splitHere46","List"
"819splitHere46","2229695splitHere46","LinkedList"
"820splitHere46","2229695splitHere46","ArrayList"
"821splitHere46","2229855splitHere46","BufferedReader#readLine()"
"822splitHere46","2229855splitHere46","PreparedStatement#addBatch()"
"823splitHere46","2229907splitHere46","HashMap myData=new HashMap();<newline46mondego>  for (int i=0;i<2;++i)<newline46mondego>  {<newline46mondego>    myData.put(<doubleQuotes46>hallo<doubleQuotes46>+i,Integer.toString(i));<newline46mondego>  }<newline46mondego>"
"824splitHere46","2229907splitHere46","String whatever=myData.get(<doubleQuotes46>hallo1<doubleQuotes46>);<newline46mondego>"
"825splitHere46","2229907splitHere46","if (region.equals(<doubleQuotes46>1<doubleQuotes46>))<newline46mondego>    region1Total+=amount;<newline46mondego>  else<newline46mondego>    region2Total+=amount;<newline46mondego>"
"826splitHere46","2229907splitHere46","String n=getInputFromScreen();<newline46mondego>  String s=getAnotherInputFromScreen();<newline46mondego>  hallo & n = s;<newline46mondego>"
"827splitHere46","2230163splitHere46","Stage { <newline46mondego>   title: <doubleQuotes46>XGrid Centering Test<doubleQuotes46><newline46mondego>   scene: XScene {<newline46mondego>      width: 200<newline46mondego>      height: 200<newline46mondego>      fill: Color.PINK<newline46mondego>      content: XGrid {<newline46mondego>         rows: [<newline46mondego>                 row([Rectangle {<newline46mondego>                       height: 100<newline46mondego>                       width: 100<newline46mondego>                     }])<newline46mondego>         ]<newline46mondego>      }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"828splitHere46","2230194splitHere46","if (log.isInfoEnabled()) {<newline46mondego>    log.info(<doubleQuotes46>My big long info string: <doubleQuotes46> + someMessage);<newline46mondego>}<newline46mondego>"
"829splitHere46","2230194splitHere46","String"
"830splitHere46","2230194splitHere46","INFO"
"831splitHere46","2230194splitHere46","#ifdef"
"832splitHere46","2230194splitHere46","#ifdef"
"833splitHere46","2230194splitHere46","logger.debug(<doubleQuotes46>Entry number: <doubleQuotes46> + i + <doubleQuotes46> is <doubleQuotes46> + String.valueOf(entry[i]));<newline46mondego>"
"834splitHere46","2230194splitHere46","if(logger.isDebugEnabled() {<newline46mondego>  logger.debug(<doubleQuotes46>Entry number: <doubleQuotes46> + i + <doubleQuotes46> is <doubleQuotes46> + String.valueOf(entry[i]));<newline46mondego>}<newline46mondego>"
"835splitHere46","2230199splitHere46","public class AnnotationConfigContextLoader implements ContextLoader {<newline46mondego><newline46mondego>    public ApplicationContext loadContext(String... locations) throws Exception {<newline46mondego>        Class<?>[] configClasses = new Class<?>[locations.length];<newline46mondego>        for (int i = 0; i < locations.length; i++) {<newline46mondego>            configClasses[i] = Class.forName(locations[i]);<newline46mondego>        }        <newline46mondego>        return new AnnotationConfigApplicationContext(configClasses);<newline46mondego>    }<newline46mondego><newline46mondego>    public String[] processLocations(Class<?> c, String... locations) {<newline46mondego>        return locations;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"836splitHere46","2230199splitHere46","@RunWith(SpringJUnit4ClassRunner.class)<newline46mondego>@ContextConfiguration(loader = AnnotationConfigContextLoader.class, <newline46mondego>    value = <doubleQuotes46>com.sample.AppConfig<doubleQuotes46>)<newline46mondego>public class IocTest {<newline46mondego>    @Autowired<newline46mondego>    TestSerivce service;<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testIoc()<newline46mondego>    {<newline46mondego>        Assert.assertNotNull(service.getPredicate());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"837splitHere46","2230199splitHere46","@Configuration<newline46mondego>public class ApplicationConfig<newline46mondego>{<newline46mondego>    ...<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public NotExistsPredicate getNotExistsPredicate()<newline46mondego>    {<newline46mondego>        return new NotExistsPredicate();<newline46mondego>    }<newline46mondego><newline46mondego>    @Bean<newline46mondego>    public TestService getTestService() {<newline46mondego>        return new TestService();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"838splitHere46","2230442splitHere46","values()"
"839splitHere46","2230442splitHere46","keySet()"
"840splitHere46","2230459splitHere46","HttpServlet springmvc1 = new DispatcherServlet(); <newline46mondego>"
"841splitHere46","2230459splitHere46","ClassNotFoundException"
"842splitHere46","2230459splitHere46","NoClassDefFoundError"
"843splitHere46","2230464splitHere46","system"
"844splitHere46","2230464splitHere46","system"
"845splitHere46","2230464splitHere46","<repositories><newline46mondego>  <repository><newline46mondego>    <id>my-local-repo</id><newline46mondego>    <url>file://${basedir}/my-repo</url><newline46mondego>  </repository><newline46mondego></repositories><newline46mondego>"
"846splitHere46","2230464splitHere46","install:install-file"
"847splitHere46","2230464splitHere46","localRepositoryPath"
"848splitHere46","2230464splitHere46","mvn install:install-file -Dfile=<path-to-file> -DgroupId=<myGroup> \ <newline46mondego>                         -DartifactId=<myArtifactId> -Dversion=<myVersion> \<newline46mondego>                         -Dpackaging=<myPackaging> -DlocalRepositoryPath=<path><newline46mondego>"
"849splitHere46","2230464splitHere46","install:install-file"
"850splitHere46","2230464splitHere46","localRepositoryPath"
"851splitHere46","2230464splitHere46","mvn org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file \<newline46mondego>                         -Dfile=<path-to-file> -DgroupId=<myGroup> \ <newline46mondego>                         -DartifactId=<myArtifactId> -Dversion=<myVersion> \<newline46mondego>                         -Dpackaging=<myPackaging> -DlocalRepositoryPath=<path><newline46mondego>"
"852splitHere46","2230464splitHere46","system"
"853splitHere46","2230464splitHere46","<dependency><newline46mondego>  <groupId>your.group.id</groupId><newline46mondego>  <artifactId>3rdparty</artifactId><newline46mondego>  <version>X.Y.Z</version><newline46mondego></dependency><newline46mondego>"
"854splitHere46","2230464splitHere46","system"
"855splitHere46","2230770splitHere46","UrlValidator urlValidator = new UrlValidator();<newline46mondego>urlValidator.isValid(<doubleQuotes46>http://my favorite site!<doubleQuotes46>);<newline46mondego>"
"856splitHere46","2230770splitHere46","http"
"857splitHere46","2230770splitHere46","https"
"858splitHere46","2230770splitHere46","ftp"
"859splitHere46","2230796splitHere46","Hex.encodeHexString(yourByteArray);<newline46mondego>"
"860splitHere46","2230796splitHere46","String sessionid = <doubleQuotes46>1ddfdf99abfe5690dc1243875<doubleQuotes46>;<newline46mondego>String md5HexString = DigestUtils.md5Hex(sessionid);<newline46mondego>"
"861splitHere46","2230806splitHere46","<jxb:bindings version=<doubleQuotes46>1.0<doubleQuotes46><newline46mondego>    xmlns:jxb=<doubleQuotes46>http://java.sun.com/xml/ns/jaxb<doubleQuotes46><newline46mondego>    xmlns:xs=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46>><newline46mondego>    <jxb:bindings><newline46mondego>      <jxb:bindings schemaLocation=<doubleQuotes46>po4.xsd<doubleQuotes46> node=<doubleQuotes46>/xs:schema/xs:element[@name='Widgets']//xs:complexType//xs:choice<doubleQuotes46>><newline46mondego>            <jxb:property name=<doubleQuotes46>Shapes<doubleQuotes46>/><newline46mondego>        </jxb:bindings><newline46mondego>    </jxb:bindings><newline46mondego></jxb:bindings><newline46mondego>"
"862splitHere46","2230810splitHere46","public bool myMethod() {<newline46mondego>    bool summaryCondition = myMethodWork();<newline46mondego>    // do common code<newline46mondego>    return summaryCondition;<newline46mondego>}<newline46mondego><newline46mondego>private bool myMethodWork() {<newline46mondego>   /* ... code ... */<newline46mondego><newline46mondego>    if(thisCondition) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    /* ... more code ... */<newline46mondego><newline46mondego>    if(thatCondition) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    /* ... even more code ... */<newline46mondego><newline46mondego>    return lastCondition;<newline46mondego>}<newline46mondego>"
"863splitHere46","2230836splitHere46","nextDouble()"
"864splitHere46","2230836splitHere46","Random generator = new Random();<newline46mondego>double number = generator.nextDouble() * .06;<newline46mondego>"
"865splitHere46","2231079splitHere46","isUserInRole"
"866splitHere46","2231079splitHere46","isCallerInRole"
"867splitHere46","2231079splitHere46","web.xml"
"868splitHere46","2231079splitHere46","ejb.xml"
"869splitHere46","2231491splitHere46","ServerSocket s = new ServerSocket(0);<newline46mondego>int port = s.getLocalPort();    // returns the port the system selected<newline46mondego>"
"870splitHere46","2231905splitHere46","public interface Number<T extends Number> {<newline46mondego>       public T multiply(Number<? extends T> number);<newline46mondego> }<newline46mondego>"
"871splitHere46","2231912splitHere46","/WEB-INF"
"872splitHere46","2231912splitHere46","Servlet"
"873splitHere46","2231912splitHere46","ServletContext#getResourceAsStream()"
"874splitHere46","2231912splitHere46","WEB-INF"
"875splitHere46","2231912splitHere46","/css"
"876splitHere46","2231912splitHere46","/WEB-INF"
"877splitHere46","2231912splitHere46","url-pattern"
"878splitHere46","2231912splitHere46","/css/*"
"879splitHere46","2231912splitHere46","HttpServletRequest#getPathInfo()"
"880splitHere46","2231912splitHere46","InputStream"
"881splitHere46","2231912splitHere46","ServletContext#getResourceAsStream()"
"882splitHere46","2231912splitHere46","OutputStream"
"883splitHere46","2231912splitHere46","Content-Type"
"884splitHere46","2231912splitHere46","Content-Length"
"885splitHere46","2231955splitHere46","@XmlElement(required=true)"
"886splitHere46","2231955splitHere46","minOccurs=0"
"887splitHere46","2231955splitHere46","minOccurs"
"888splitHere46","2231955splitHere46","webservices-api.jar"
"889splitHere46","2231955splitHere46","endorsed/"
"890splitHere46","2232064splitHere46","void getNextPoint(Point start, Point end, Path currentPath) {<newline46mondego>    //if start == end, then you're done with the recursion<newline46mondego>    //and you have a valid path<newline46mondego><newline46mondego>    //if you can move east from start to get closer to end<newline46mondego>    //Point next = east of start<newline46mondego>    //append next to the currentPath<newline46mondego>    //then call getNextPoint(next, end, currentPath)<newline46mondego><newline46mondego>    //if you can move north from start to get closer to end<newline46mondego>    //Point next = north of start<newline46mondego>    //append next to currentPath<newline46mondego>    //then call getNextPoint(next, end, currentPath)<newline46mondego>}<newline46mondego>"
"891splitHere46","2232102splitHere46","doPost()"
"892splitHere46","2232102splitHere46","protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    Map<String, String> errors = new HashMap<String, String>();<newline46mondego><newline46mondego>    String origin = request.getParameter(<doubleQuotes46>origin<doubleQuotes46>);<newline46mondego>    if (origin does not validate) {<newline46mondego>       errors.put(<doubleQuotes46>origin<doubleQuotes46>, <doubleQuotes46>Put error message here.<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    // Repeat for all parameters.<newline46mondego><newline46mondego>    if (errors.isEmpty()) {<newline46mondego>        // No errors, redirect to Amtrak.<newline46mondego>        response.sendRedirect(<doubleQuotes46>http://amtrak.com<doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        // Put errors in request scope and forward back to JSP.<newline46mondego>        request.setAttribute(<doubleQuotes46>errors<doubleQuotes46>, errors);<newline46mondego>        request.getRequestDispatcher(<doubleQuotes46>FareFinder.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"893splitHere46","2232102splitHere46","web.xml"
"894splitHere46","2232102splitHere46","url-pattern"
"895splitHere46","2232102splitHere46","/validateFare"
"896splitHere46","2232102splitHere46","http://example.com/context/validateFare"
"897splitHere46","2232102splitHere46","<form action=<doubleQuotes46>validateFare<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46>><newline46mondego>    <label for=<doubleQuotes46>origin<doubleQuotes46>>Origin</label><newline46mondego>    <input id=<doubleQuotes46>origin<doubleQuotes46> name=<doubleQuotes46>origin<doubleQuotes46> value=<doubleQuotes46>${param.origin}<doubleQuotes46>><newline46mondego>    <span class=<doubleQuotes46>error<doubleQuotes46>>${errors.origin}</span><newline46mondego><newline46mondego>    <!-- Repeat other fields here. --><newline46mondego></form><newline46mondego>"
"898splitHere46","2232102splitHere46","action"
"899splitHere46","2232102splitHere46","${param.origin}"
"900splitHere46","2232102splitHere46","request.getParameter(<doubleQuotes46>origin<doubleQuotes46>)"
"901splitHere46","2232102splitHere46","${errors.origin}"
"902splitHere46","2232102splitHere46","pageContext.findAttribute(<doubleQuotes46>errors<doubleQuotes46>).get(<doubleQuotes46>origin<doubleQuotes46>)"
"903splitHere46","2232168splitHere46","# semodule -i /usr/share/selinux/refpolicy-targeted/java.pp<newline46mondego># restorecon -r -v /usr<newline46mondego>"
"904splitHere46","2232168splitHere46","semodule"
"905splitHere46","2232168splitHere46","restorecon"
"906splitHere46","2232223splitHere46","@SessionAttributes"
"907splitHere46","2232223splitHere46","GET"
"908splitHere46","2232223splitHere46","Visit"
"909splitHere46","2232223splitHere46","POST"
"910splitHere46","2232223splitHere46","Visit"
"911splitHere46","2232223splitHere46","status.setComplete()"
"912splitHere46","2232223splitHere46","@SesssionAttributes"
"913splitHere46","2232223splitHere46","Visit"
"914splitHere46","2232223splitHere46","POST"
"915splitHere46","2232268splitHere46","<rich:jQuery>"
"916splitHere46","2232314splitHere46","<newline46mondego>String[] arr1 = { <doubleQuotes46>abc<doubleQuotes46>, <doubleQuotes46>def<doubleQuotes46> };<newline46mondego>String[] arr2 = { <doubleQuotes46>ghi<doubleQuotes46>, <doubleQuotes46>jkl<doubleQuotes46> };<newline46mondego>String[] result = ObjectArrays.concat(arr1, arr2, String.class);<newline46mondego>"
"917splitHere46","2232327splitHere46","railo.runtime.type.QueryImpl"
"918splitHere46","2232327splitHere46","railo.runtime.type.Query"
"919splitHere46","2232327splitHere46","QueryTable"
"920splitHere46","2232409splitHere46","public void updateUser(long userId, User updatedUser) {<newline46mondego>    User currentUser = dao.getCurrentUserById(userId);<newline46mondego>    currentUser.userName = updatedUser.username;<newline46mondego>    //...... update anyother fields....<newline46mondego>    dao.SaveUser(currentUser);<newline46mondego>}<newline46mondego>"
"921splitHere46","2232409splitHere46","public void updateUser(long userId, String updatedUsername);<newline46mondego>"
"922splitHere46","2232649splitHere46","ROUND_DOWN"
"923splitHere46","2232649splitHere46","ROUND_HALF_DOWN"
"924splitHere46","2232649splitHere46","ROUND_HALF_EVEN"
"925splitHere46","2232649splitHere46","RoundingMode.valueOf"
"926splitHere46","2232709splitHere46","Intents"
"927splitHere46","2232709splitHere46","ContentProviders"
"928splitHere46","2232709splitHere46","BroadcastReceiver"
"929splitHere46","2232709splitHere46","ACTION_PACKAGE_ADDED"
"930splitHere46","2232784splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego>    <!DOCTYPE hibernate-reverse-engineering SYSTEM<newline46mondego>    <doubleQuotes46>http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd<doubleQuotes46>><newline46mondego><hibernate-reverse-engineering><newline46mondego>    <table name=<doubleQuotes46>MYTABLE<doubleQuotes46>><newline46mondego>        <column name=<doubleQuotes46>others<doubleQuotes46> type=<doubleQuotes46>bag<doubleQuotes46>/><newline46mondego>    </table><newline46mondego></hibernate-reverse-engineering><newline46mondego>"
"931splitHere46","2232883splitHere46","autowire-candidate=<doubleQuotes46>false<doubleQuotes46>"
"932splitHere46","2232883splitHere46","primary=<doubleQuotes46>true<doubleQuotes46>"
"933splitHere46","2232883splitHere46","@Autowired"
"934splitHere46","2232883splitHere46","@Qualifier(<doubleQuotes46>TheBeanIWant<doubleQuotes46>)"
"935splitHere46","2232883splitHere46","@Qualifier(<doubleQuotes46>TheBeanIWant<doubleQuotes46>)"
"936splitHere46","2232883splitHere46","@Resource(name=<doubleQuotes46>TheBeanIWant<doubleQuotes46>)"
"937splitHere46","2232883splitHere46","@Qualifier"
"938splitHere46","2232883splitHere46","@Resource"
"939splitHere46","2232909splitHere46","FlexTable"
"940splitHere46","2232909splitHere46","Grid"
"941splitHere46","2232909splitHere46","ScrollTable"
"942splitHere46","2232909splitHere46","FlexTable"
"943splitHere46","2232964splitHere46","public class Something {<newline46mondego>    private Something() {<newline46mondego>    }<newline46mondego><newline46mondego>    private static class LazyHolder {<newline46mondego>        private static final Something something = new Something();<newline46mondego>    }<newline46mondego><newline46mondego>    public static Something getInstance() {<newline46mondego>        return LazyHolder.something;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"944splitHere46","2233021splitHere46","89.7061"
"945splitHere46","2233021splitHere46","270.294"
"946splitHere46","2233369splitHere46","public class DrawableExplorer extends Explorer implements Drawable<newline46mondego>"
"947splitHere46","2233369splitHere46","extends"
"948splitHere46","2233369splitHere46","implements"
"949splitHere46","2233369splitHere46","draw"
"950splitHere46","2233369splitHere46","DrawableExplorer"
"951splitHere46","2233562splitHere46","randOccupants.add(i,new Treasure(this));<newline46mondego>"
"952splitHere46","2233562splitHere46","randOccupants.add(new Treasure(this));<newline46mondego>"
"953splitHere46","2233763splitHere46","pom.xml"
"954splitHere46","2233763splitHere46","<project ...>    <newline46mondego>    ...    <newline46mondego>    <build><newline46mondego>        <plugins><newline46mondego>            <plugin><newline46mondego>                <groupId>org.apache.maven.plugins</groupId><newline46mondego>                <artifactId>maven-compiler-plugin</artifactId><newline46mondego>                <configuration><newline46mondego>                    <source>1.5</source><newline46mondego>                    <target>1.5</target><newline46mondego>                </configuration><newline46mondego>            </plugin><newline46mondego>        </plugins><newline46mondego>    </build><newline46mondego>    ...<newline46mondego></project><newline46mondego>"
"955splitHere46","2233903splitHere46","@ManyToOne(fetch=FetchType.LAZY, optional=false)<newline46mondego>@JoinColumn(name=<doubleQuotes46>COMPANY_ID<doubleQuotes46>, nullable=false)<newline46mondego>private Company company;<newline46mondego>"
"956splitHere46","2233903splitHere46","@ManyToOne(fetch=FetchType.LAZY, optional=false)<newline46mondego>@JoinColumn(name=<doubleQuotes46>COMPANY_ID<doubleQuotes46>, nullable=false)<newline46mondego>public Company getCompany() {<newline46mondego>    return this.company;<newline46mondego>}<newline46mondego>"
"957splitHere46","2234021splitHere46","scala.collection.JavaConversions"
"958splitHere46","2234021splitHere46","underlying"
"959splitHere46","2234213splitHere46","${project.dependencies[0].artifactId}"
"960splitHere46","2234213splitHere46","0"
"961splitHere46","2234217splitHere46","public enum DAYS_OF_THE_WEEK {<newline46mondego>    SUN,<newline46mondego>    MON,<newline46mondego>    TUE,<newline46mondego>    WED,<newline46mondego>    THU,<newline46mondego>    FRI,<newline46mondego>    SAT;<newline46mondego>}<newline46mondego>"
"962splitHere46","2234217splitHere46","@CollectionOfElements<newline46mondego>@Enumerated(EnumType.STRING)<newline46mondego>@JoinTable(<newline46mondego>    name=<doubleQuotes46>SELECTED_DAYS_OF_THE_WEEK<doubleQuotes46>,<newline46mondego>    joinColumns=@JoinColumn(name=<doubleQuotes46><OWNING_ENTITY_ID_GOES_HERE><doubleQuotes46>)<newline46mondego>)<newline46mondego>public Set<DAYS_OF_THE_WEEK> getSelectedDays() {<newline46mondego>    return this.selectedDays;<newline46mondego>}<newline46mondego>"
"963splitHere46","2234217splitHere46","select distinc OwningEntity _owningEntity inner join fetch _owningEntity.selectedDays selectedDay where selectedDay = :selectedDay<newline46mondego><newline46mondego>query.setParameter(<doubleQuotes46>selectedDay<doubleQuotes46>, DAYS_OF_THE_WEEK.WED);<newline46mondego><newline46mondego>query.list();<newline46mondego>"
"964splitHere46","2234217splitHere46","@Entity<newline46mondego>public class Customer {<newline46mondego><newline46mondego>    private List<Order> orderList = new ArrayList<Order>();<newline46mondego><newline46mondego>    // getter's and setter's<newline46mondego><newline46mondego>}<newline46mondego>"
"965splitHere46","2234217splitHere46","public interface CustomerRepository {<newline46mondego><newline46mondego>    Customer getById(Integer id, CustomerFetchingStrategy fetchingStrategy);<newline46mondego>    List<Customer> getAll(CustomerFetchingStrategy fetchingStrategy);<newline46mondego><newline46mondego>    public static enum CustomerFetchingStrategy {<newline46mondego>        PROXY,<newline46mondego>        CUSTOMER,<newline46mondego>        CUSTOMER_WITH_ORDERS;         <newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"966splitHere46","2234217splitHere46","import static br.com.app.CustomerRepository.CustomerFetchingStrategy;<newline46mondego><newline46mondego>public class CustomerRepositoryImpl implements CustomerRepository {<newline46mondego><newline46mondego>    // Usually Spring IoC or Seam @In-jection or something else<newline46mondego>    private SessionFactory sessionFactory;<newline46mondego><newline46mondego>    public Customer getById(Integer id, CustomerFetchingStrategy fetchingStrategy) {<newline46mondego>        switch(fetchingStrategy) {<newline46mondego>            case PROXY:<newline46mondego>                return (Customer) sessionFactory.getCurrentSession().load(Customer.class, id);<newline46mondego>            case CUSTOMER:<newline46mondego>                return (Customer) sessionFactory.getCurrentSession().get(Customer.class, id);<newline46mondego>            case CUSTOMER_WITH_ORDERS:<newline46mondego>                return (Customer) sessionFactory.getCurrentSession().createQuery(<doubleQuotes46>from Customer c left join fetch c.orderList where c.id = :id<doubleQuotes46>)<newline46mondego>                                  .setParameter(<doubleQuotes46>id<doubleQuotes46>, id)<newline46mondego>                                  .list().get(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Customer> getAll(CustomerFetchingStrategy fetchingStrategy) {<newline46mondego>        // Same strategy as shown above<newline46mondego>    }<newline46mondego><newline46mondego>} <newline46mondego>"
"967splitHere46","2234217splitHere46","import static br.com.app.CustomerRepository.CustomerFetchingStrategy;<newline46mondego><newline46mondego>public class SomeController {<newline46mondego><newline46mondego>    // Again Spring Ioc or Seam @In-jection<newline46mondego>    private CustomerRepository customerRepository;<newline46mondego><newline46mondego>    public void proccessForm(HttpServletRequest request, HttpServletResponse response) {<newline46mondego>        request.setParameter(<doubleQuotes46>customer<doubleQuotes46>, customerRepository.getById(Integer.valueOf(request.getParameter(<doubleQuotes46>customerId<doubleQuotes46>))), CUSTOMER);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"968splitHere46","2234495splitHere46","getWidth()"
"969splitHere46","2234495splitHere46","JFrame"
"970splitHere46","2234495splitHere46","setVisible(true)"
"971splitHere46","2234495splitHere46","pack()"
"972splitHere46","2234495splitHere46","getWidth()"
"973splitHere46","2234556splitHere46","interface CrudDao<T> {<newline46mondego>   Serializable create(T t);<newline46mondego>   T read(Serializable id);<newline46mondego>   void update(T t);<newline46mondego>   void delete(T t);<newline46mondego>}<newline46mondego>"
"974splitHere46","2234556splitHere46","class SomeDao {<newline46mondego><newline46mondego>   @Create<newline46mondego>   long create(SomeEntity e) { // code }<newline46mondego><newline46mondego>   @Read<newline46mondego>   SomeEntity read(long id) { // code }<newline46mondego><newline46mondego>   @Update<newline46mondego>   void update(SomeEntity e) { // code }<newline46mondego><newline46mondego>   @Delete<newline46mondego>   void delete(SomeEntity e) { // code }<newline46mondego>}<newline46mondego>"
"975splitHere46","2234556splitHere46","class CrudFactory {<newline46mondego>    long create(Class clazz, Object obj) {<newline46mondego>       // loop through methods<newline46mondego>       // find method with @Create<newline46mondego>       // call method<newline46mondego>    }    <newline46mondego>}<newline46mondego>"
"976splitHere46","2234600splitHere46","com.octo.captcha.image.gimpy.GimpyFactory"
"977splitHere46","2234600splitHere46","com.octo.captcha.engine.GenericCaptchaEngine"
"978splitHere46","2234600splitHere46","com.octo.captcha.service.multitype.GenericManageableCaptchaService"
"979splitHere46","2234600splitHere46","com.octo.captcha.component.wordgenerator.DictionaryWordGenerator"
"980splitHere46","2234600splitHere46","com.octo.captcha.component.image.wordtoimage.ComposedWordToImage"
"981splitHere46","2234600splitHere46","com.octo.captcha.component.image.fontgenerator.RandomFontGenerator"
"982splitHere46","2234600splitHere46","com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator"
"983splitHere46","2234600splitHere46","com.octo.captcha.component.image.color.SingleColorGenerator"
"984splitHere46","2234600splitHere46","com.octo.captcha.component.image.color.RandomRangeColorGenerator"
"985splitHere46","2234628splitHere46","class ButtonListener implements ActionListener {<newline46mondego>    String name;<newline46mondego>    public ButtonListener(String name) {<newline46mondego>            this.name = name;<newline46mondego>     }<newline46mondego>     public void actionPerformed(ActionEvent e){<newline46mondego>                System.out.println(<doubleQuotes46>Button <doubleQuotes46>+name+<doubleQuotes46>has been pressed.<doubleQuotes46>);<newline46mondego>     }<newline46mondego><newline46mondego>  }<newline46mondego>"
"986splitHere46","2234628splitHere46","one.addActionListener(new ButtonListener(<doubleQuotes46>one<doubleQuotes46>));<newline46mondego>"
"987splitHere46","2234640splitHere46","getGraphicsConfiguration()"
"988splitHere46","2234640splitHere46","getGraphicsDevice()"
"989splitHere46","2234640splitHere46","Window myWindow = ....<newline46mondego>// ...<newline46mondego>GraphicsConfiguration config = myWindow.getGraphicsConfiguration();<newline46mondego>GraphicsDevice myScreen = config.getDevice();<newline46mondego>GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>// AFAIK - there are no guarantees that screen devices are in order... <newline46mondego>// but they have been on every system I've used.<newline46mondego>GraphicsDevice[] allScreens = env.getScreenDevices();<newline46mondego>int myScreenIndex = -1;<newline46mondego>for (int i = 0; i < allScreens.length; i++) {<newline46mondego>    if (allScreens[i].equals(myScreen))<newline46mondego>    {<newline46mondego>        myScreenIndex = i;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>System.out.println(<doubleQuotes46>window is on screen<doubleQuotes46> + myScreenIndex);<newline46mondego>"
"990splitHere46","2234664splitHere46","/*<newline46mondego> *<newline46mondego> * A free Java sample program <newline46mondego> * A list of java programs to send SMS using your COM serial connection<newline46mondego> * and a GSM modem<newline46mondego> *<newline46mondego> * @author William Alexander<newline46mondego> * free for use as long as this comment is included <newline46mondego> * in the program as it is<newline46mondego> * <newline46mondego> * More Free Java programs available for download <newline46mondego> * at http://www.java-samples.com<newline46mondego> *<newline46mondego> *<newline46mondego> * Note: to use this program you need to download all the 5 java files<newline46mondego> * mentioned on top<newline46mondego> *<newline46mondego> */<newline46mondego>public class SMSClient implements Runnable{<newline46mondego><newline46mondego>  public final static int SYNCHRONOUS=0;<newline46mondego>  public final static int ASYNCHRONOUS=1;<newline46mondego>  private Thread myThread=null;<newline46mondego><newline46mondego>  private int mode=-1;<newline46mondego>  private String recipient=null;<newline46mondego>  private String message=null;<newline46mondego><newline46mondego>  public int status=-1;<newline46mondego>  public long messageNo=-1;<newline46mondego><newline46mondego><newline46mondego>  public SMSClient(int mode) {<newline46mondego>      this.mode=mode;<newline46mondego>    }<newline46mondego><newline46mondego>  public int sendMessage (String recipient, String message){<newline46mondego>    this.recipient=recipient;<newline46mondego>    this.message=message;<newline46mondego>    //System.out.println(<doubleQuotes46>recipient: <doubleQuotes46> + recipient + <doubleQuotes46> message: <doubleQuotes46> + message);<newline46mondego>    myThread = new Thread(this);<newline46mondego>    myThread.start();<newline46mondego>//    run();<newline46mondego>    return status;<newline46mondego>    }<newline46mondego>    public void run(){<newline46mondego><newline46mondego>    Sender aSender = new Sender(recipient,message);<newline46mondego><newline46mondego>    try{<newline46mondego>      //send message<newline46mondego>          aSender.send ();<newline46mondego><newline46mondego>         // System.out.println(<doubleQuotes46>sending ... <doubleQuotes46>);<newline46mondego><newline46mondego>      //in SYNCHRONOUS mode wait for return : 0 for OK,<newline46mondego>      //-2 for timeout, -1 for other errors<newline46mondego>      if (mode==SYNCHRONOUS) {<newline46mondego>          while (aSender.status == -1){<newline46mondego>            myThread.sleep (1000);<newline46mondego>          }<newline46mondego>      }<newline46mondego>      if (aSender.status == 0) messageNo=aSender.messageNo ;<newline46mondego><newline46mondego>    }catch (Exception e){<newline46mondego><newline46mondego>        e.printStackTrace();<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    this.status=aSender.status ;<newline46mondego><newline46mondego>    aSender=null;<newline46mondego><newline46mondego><newline46mondego>  }<newline46mondego>}<newline46mondego>"
"991splitHere46","2235157splitHere46","SIFT"
"992splitHere46","2235157splitHere46","MOBILEOR_GUI"
"993splitHere46","2235528splitHere46","List"
"994splitHere46","2235528splitHere46","Set"
"995splitHere46","2235528splitHere46","HashSet"
"996splitHere46","2235528splitHere46","LinkedHashSet"
"997splitHere46","2235795splitHere46","HashMap"
"998splitHere46","2235861splitHere46","CameraMIDlet"
"999splitHere46","2235861splitHere46","CameraMIDlet"
"1000splitHere46","2235902splitHere46","getDeclaringType()"
"1001splitHere46","2235902splitHere46","IType"
"1002splitHere46","2235902splitHere46","getElementName()"
"1003splitHere46","2235902splitHere46","getFullyQualifiedName()"
"1004splitHere46","2235992splitHere46","protected void buildInitialFactories() {<newline46mondego>    ColorGenerator cg = new SingleColorGenerator(Color.blue);<newline46mondego>    BackgroundGenerator background = new FunkyBackgroundGenerator(250, 100, cg);<newline46mondego>}<newline46mondego>"
"1005splitHere46","2236008splitHere46","Date"
"1006splitHere46","2236008splitHere46","Calendar"
"1007splitHere46","2236008splitHere46","get(Calendar.YEAR)"
"1008splitHere46","2236068splitHere46","hard-deploy"
"1009splitHere46","2236068splitHere46","start"
"1010splitHere46","2236068splitHere46","all"
"1011splitHere46","2236068splitHere46","fileName"
"1012splitHere46","2236068splitHere46","hard-deploy"
"1013splitHere46","2236068splitHere46","<plugin><newline46mondego>    <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>jboss-maven-plugin</artifactId><newline46mondego>        <version>1.4.sp1</version><newline46mondego>        <configuration><newline46mondego>            <jbossHome>...</jbossHome><newline46mondego>            <serverName>MyServer</serverName><newline46mondego>        </configuration><newline46mondego>        <executions><newline46mondego>            <execution><newline46mondego>                <id>redeploy-and-restart-server</id><newline46mondego>                <phase>pre-integration-test</phase><newline46mondego>                <goals><newline46mondego>                    <goal>hard-deploy</goal><newline46mondego>                    <goal>start</goal><newline46mondego>                </goals><newline46mondego>            </execution><newline46mondego>        </executions><newline46mondego>    </plugin><newline46mondego>"
"1014splitHere46","2236068splitHere46","all"
"1015splitHere46","2236068splitHere46","all/log"
"1016splitHere46","2236096splitHere46","grails upgrade"
"1017splitHere46","2236096splitHere46","'--non-interactive"
"1018splitHere46","2236199splitHere46","public interface A {<newline46mondego>    void someMethod() throws IOException, MalformedURLException;<newline46mondego>}<newline46mondego><newline46mondego>class AImpl implements A {<newline46mondego>    @Override<newline46mondego>    public void someMethod() throws IOException, MalformedURLException {<newline46mondego>        // here goes your business logic<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class ErrorHandlerOne implements A {<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void someMethod() throws IOException {<newline46mondego>        try {<newline46mondego>            delegate.someMethod();<newline46mondego>        } catch (MalformedURLException e) {<newline46mondego>            // handle the exception<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1019splitHere46","2236199splitHere46","import org.aspectj.lang.annotation.Aspect;<newline46mondego>import org.aspectj.lang.annotation.AfterThrowing;<newline46mondego><newline46mondego>@Aspect<newline46mondego>public class AfterThrowingExample {<newline46mondego><newline46mondego>  @AfterThrowing(<newline46mondego>     pointcut=<doubleQuotes46>com.xyz.myapp.A.someOperation()<doubleQuotes46><newline46mondego>     throwing=<doubleQuotes46>ex<doubleQuotes46>)<newline46mondego>  public void doRecoveryActions(IOException ex) {<newline46mondego>    // ...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1020splitHere46","2236369splitHere46","PeriodFormatter"
"1021splitHere46","2236369splitHere46","PeriodFormatter formatter = new PeriodFormatterBuilder()<newline46mondego>        .printZeroNever()<newline46mondego>        .appendWeeks()<newline46mondego>        .appendSuffix(<doubleQuotes46> week<doubleQuotes46>, <doubleQuotes46> weeks<doubleQuotes46>)<newline46mondego>        .appendSeparator(<doubleQuotes46>, <doubleQuotes46>)<newline46mondego>        .appendDays()<newline46mondego>        .appendSuffix(<doubleQuotes46> day<doubleQuotes46>, <doubleQuotes46> days<doubleQuotes46>)<newline46mondego>        .appendSeparator(<doubleQuotes46>, <doubleQuotes46>)<newline46mondego>        .appendHours()<newline46mondego>        .appendSuffix(<doubleQuotes46> hour<doubleQuotes46>, <doubleQuotes46> hours<doubleQuotes46>)<newline46mondego>        .appendSeparator(<doubleQuotes46>, <doubleQuotes46>)<newline46mondego>        .appendMinutes()<newline46mondego>        .appendSuffix(<doubleQuotes46> minute<doubleQuotes46>, <doubleQuotes46> minutes<doubleQuotes46>)<newline46mondego>        .appendSeparator(<doubleQuotes46>, <doubleQuotes46>)<newline46mondego>        .appendSeconds()<newline46mondego>        .appendSuffix(<doubleQuotes46> second<doubleQuotes46>, <doubleQuotes46> seconds<doubleQuotes46>)<newline46mondego>        .toFormatter();<newline46mondego>"
"1022splitHere46","2236369splitHere46","1 week, 1 minute<newline46mondego>"
"1023splitHere46","2236369splitHere46","PeriodType.yearMonthDayTime()"
"1024splitHere46","2236369splitHere46","new Period(justUndeAWeekAgo, now, PeriodType.yearMonthDayTime());<newline46mondego>"
"1025splitHere46","2236369splitHere46","PeriodFormatter"
"1026splitHere46","2236369splitHere46","7 days, 1 minute<newline46mondego>"
"1027splitHere46","2236402splitHere46","BeanDefinitionBuilder.genericBeanDefinition(String)"
"1028splitHere46","2236431splitHere46","class Converter {<newline46mondego>  public static String convertLong(final long value) {<newline46mondego>    return String.format(<doubleQuotes46>%016x<doubleQuotes46>, value - Long.MIN_VALUE);<newline46mondego>  }<newline46mondego><newline46mondego>  public static long parseLong(final String value) {<newline46mondego>    String first = value.substring(0, 8);<newline46mondego>    String second = value.substring(8);<newline46mondego>    long temp = (Long.parseLong(first, 16) << 32) | Long.parseLong(second, 16);<newline46mondego>    return temp + Long.MIN_VALUE;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1029splitHere46","2236431splitHere46","for (long aLong : longs) {<newline46mondego>  String out = Converter.convertLong(aLong);<newline46mondego>  System.out.printf(<doubleQuotes46>%20d %16s %20d\n<doubleQuotes46>, aLong, out, Converter.parseLong(out));<newline46mondego>}<newline46mondego>"
"1030splitHere46","2236431splitHere46","-9223372036854775808 0000000000000000 -9223372036854775808<newline46mondego> 9223372036854775807 ffffffffffffffff  9223372036854775807<newline46mondego>-5664572164553633853 316365a0e7370fc3 -5664572164553633853<newline46mondego>-8089688774612278460 0fbba6eba5c52344 -8089688774612278460<newline46mondego> 7275969614015446693 e4f96fd06fed3ea5  7275969614015446693<newline46mondego> 6698053890185294393 dcf444867aeaf239  6698053890185294393<newline46mondego>  734107703014507538 8a301311010ec412   734107703014507538<newline46mondego> -350843201400906614 7b218df798a35c8a  -350843201400906614<newline46mondego>-4760869192643699168 3dedfeb1865f1e20 -4760869192643699168<newline46mondego>-2113787362183747885 62aa5197ea53e6d3 -2113787362183747885<newline46mondego>-5933876587372268970 2da6a2aeccab3256 -5933876587372268970<newline46mondego>-7214749093842310327 1be00fecadf52b49 -7214749093842310327<newline46mondego>"
"1031splitHere46","2236431splitHere46","Long.MIN_VALUE"
"1032splitHere46","2236431splitHere46","Long.MAX_VALUE"
"1033splitHere46","2236431splitHere46","return Long.parseLong(value, 16);<newline46mondego>"
"1034splitHere46","2236431splitHere46","long"
"1035splitHere46","2236493splitHere46","UIInput"
"1036splitHere46","2236493splitHere46","value"
"1037splitHere46","2236493splitHere46","<h:form><newline46mondego>    <h:selectManyListbox value=<doubleQuotes46>#{bean.selectedItems}<doubleQuotes46>><newline46mondego>        <f:selectItems value=<doubleQuotes46>#{bean.selectItems}<doubleQuotes46> /><newline46mondego>    </h:selectManyListbox><newline46mondego>    <h:commandButton value=<doubleQuotes46>submit<doubleQuotes46> action=<doubleQuotes46>#{bean.submit}<doubleQuotes46> /><newline46mondego></h:form><newline46mondego>"
"1038splitHere46","2236493splitHere46","Bean"
"1039splitHere46","2236493splitHere46","private List<String> selectedItems; // + getter + setter<newline46mondego>private List<SelectItem> selectItems; // + getter only<newline46mondego><newline46mondego>public Bean() {<newline46mondego>    // Fill select items during Bean initialization/construction.<newline46mondego>    selectItems = new ArrayList<SelectItem>();<newline46mondego>    selectItems.add(new SelectItem(<doubleQuotes46>value1<doubleQuotes46>, <doubleQuotes46>label1<doubleQuotes46>));<newline46mondego>    selectItems.add(new SelectItem(<doubleQuotes46>value2<doubleQuotes46>, <doubleQuotes46>label2<doubleQuotes46>));<newline46mondego>    selectItems.add(new SelectItem(<doubleQuotes46>value3<doubleQuotes46>, <doubleQuotes46>label3<doubleQuotes46>));<newline46mondego>}<newline46mondego><newline46mondego>public void submit() {<newline46mondego>    // JSF has already put selected items in `selectedItems`.<newline46mondego>    for (String selectedItem : selectedItems) {<newline46mondego>        System.out.println(<doubleQuotes46>Selected item: <doubleQuotes46> + selectedItem); // Prints value1, value2 and/or value3, depending on selection.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1040splitHere46","2236493splitHere46","SelectItem"
"1041splitHere46","2236493splitHere46","String"
"1042splitHere46","2236493splitHere46","Number"
"1043splitHere46","2236493splitHere46","Boolean"
"1044splitHere46","2236493splitHere46","Converter"
"1045splitHere46","2236592splitHere46","IllegalStateException"
"1046splitHere46","2236592splitHere46","Filter"
"1047splitHere46","2236592splitHere46","url-pattern"
"1048splitHere46","2236592splitHere46","*.nsf"
"1049splitHere46","2236592splitHere46","private static final Map<String, String> urlMapping = new HashMap<String, String>();<newline46mondego><newline46mondego>static {<newline46mondego>    urlMapping.put(<doubleQuotes46>/site/oldpage.nsf?home<doubleQuotes46>, <doubleQuotes46>/site/newpage.jsp<doubleQuotes46>);<newline46mondego>    // Put more here.<newline46mondego>}<newline46mondego><newline46mondego>public doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException) {<newline46mondego>    HttpServletRequest httpReq = (HttpServletRequest) request;<newline46mondego>    String oldUrl = httpReq.getRequestURL().append(<doubleQuotes46>?<doubleQuotes46>).append(httpReq.getQueryString()).toString();<newline46mondego>    String newUrl = urlMapping.get(oldUrl);<newline46mondego>    response.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY);<newline46mondego>    response.setHeader(<doubleQuotes46>Location<doubleQuotes46>, newUrl);<newline46mondego>}<newline46mondego>"
"1050splitHere46","2236592splitHere46","?"
"1051splitHere46","2236592splitHere46","String newUrl = oldUrl.replace(<doubleQuotes46>.nsf<doubleQuotes46>, <doubleQuotes46>.jsp<doubleQuotes46>);<newline46mondego>"
"1052splitHere46","2236842splitHere46","DvdPlayer"
"1053splitHere46","2237065splitHere46","(E(F|G)?)"
"1054splitHere46","2237065splitHere46","(A(B|C)?) D (E(F|G)?)<newline46mondego>^ ^         ^ ^<newline46mondego>1 2         3 4<newline46mondego>"
"1055splitHere46","2237065splitHere46","(B|C)"
"1056splitHere46","2237065splitHere46","group(2)"
"1057splitHere46","2237065splitHere46","(A(?:B|C)?) D (E(?:F|G)?)<newline46mondego>^             ^<newline46mondego>1             2<newline46mondego>"
"1058splitHere46","2237065splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>(A(B|C)?) D (E(F|G)?)<doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(<doubleQuotes46>A D EG<doubleQuotes46>);<newline46mondego>if (matcher.matches()) {<newline46mondego>    System.err.println(matcher.group(1));<newline46mondego>    System.err.println(matcher.group(2));<newline46mondego>    System.err.println(matcher.group(3));<newline46mondego>    System.err.println(matcher.group(4));<newline46mondego>}<newline46mondego>"
"1059splitHere46","2237065splitHere46","A<newline46mondego>null<newline46mondego>EG<newline46mondego>G<newline46mondego>"
"1060splitHere46","2237073splitHere46","/WEB-INF/lib"
"1061splitHere46","2237073splitHere46","/lib"
"1062splitHere46","2237073splitHere46","/WEB-INF/lib"
"1063splitHere46","2237073splitHere46","javax.servlet"
"1064splitHere46","2237134splitHere46","<RelativeLayout<newline46mondego>        android:layout_marginTop=<doubleQuotes46>-45dip<doubleQuotes46> <newline46mondego>        android:padding=<doubleQuotes46>0dip<doubleQuotes46><newline46mondego>        android:layout_alignParentBottom=<doubleQuotes46>true<doubleQuotes46><newline46mondego>        android:gravity=<doubleQuotes46>bottom|right<doubleQuotes46> <newline46mondego>        android:background=<doubleQuotes46>@android:drawable/bottom_bar<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46>><newline46mondego>        <Button<newline46mondego>            android:id=<doubleQuotes46>@+id/manual_setup<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>@string/account_setup_basics_manual_setup_action<doubleQuotes46><newline46mondego>            android:minWidth=<doubleQuotes46>@dimen/button_minWidth<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_marginBottom=<doubleQuotes46>-4dip<doubleQuotes46> <newline46mondego>            android:layout_alignParentLeft=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:layout_centerVertical=<doubleQuotes46>false<doubleQuotes46> <newline46mondego>            /><newline46mondego>        <Button<newline46mondego>            android:id=<doubleQuotes46>@+id/next<doubleQuotes46><newline46mondego>            android:text=<doubleQuotes46>@string/next_action<doubleQuotes46><newline46mondego>            android:minWidth=<doubleQuotes46>@dimen/button_minWidth<doubleQuotes46><newline46mondego>            android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>            android:drawableRight=<doubleQuotes46>@drawable/button_indicator_next<doubleQuotes46><newline46mondego>            android:layout_marginBottom=<doubleQuotes46>-4dip<doubleQuotes46> <newline46mondego>            android:layout_alignParentRight=<doubleQuotes46>true<doubleQuotes46><newline46mondego>            android:layout_centerVertical=<doubleQuotes46>false<doubleQuotes46> <newline46mondego>            /><newline46mondego>    </RelativeLayout><newline46mondego>"
"1065splitHere46","2237187splitHere46","@Controller<newline46mondego>@RequestMapping(<doubleQuotes46>/basic<doubleQuotes46>)<newline46mondego>public class HelloWorldController {<newline46mondego>    @RequestMapping(value=<doubleQuotes46>/hello.do<doubleQuotes46>, method=RequestMethod.GET)<newline46mondego>    public ModelAndView helloWorld() {<newline46mondego>        ModelAndView mav = new ModelAndView();<newline46mondego>        mav.setViewName(<doubleQuotes46>basic/helloWorld<doubleQuotes46>);<newline46mondego>        mav.addObject(<doubleQuotes46>message<doubleQuotes46>, <doubleQuotes46>Hello World From Phuong!<doubleQuotes46>);<newline46mondego>        return mav;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1066splitHere46","2237187splitHere46","basic/hello.do"
"1067splitHere46","2237187splitHere46","/basic.do/hello"
"1068splitHere46","2237217splitHere46","<s:select>"
"1069splitHere46","2237217splitHere46","<form:select>"
"1070splitHere46","2237217splitHere46","<h:selectOneMenu>"
"1071splitHere46","2237238splitHere46","final"
"1072splitHere46","2237238splitHere46","new"
"1073splitHere46","2237238splitHere46","public final class clsDBUtils {<newline46mondego>    public static SQLiteCommand cmd;<newline46mondego>    public static SQLiteConnection conn;<newline46mondego>    public static String databaseFilePath;<newline46mondego><newline46mondego>    public static bool getConnection() {<newline46mondego>    }<newline46mondego><newline46mondego>    private clsDBUtils() {}<newline46mondego>}<newline46mondego>"
"1074splitHere46","2237342splitHere46","List"
"1075splitHere46","2237342splitHere46","LinkedList"
"1076splitHere46","2237342splitHere46","LinkedList"
"1077splitHere46","2237451splitHere46","<newline46mondego><error-page><newline46mondego>    <exception-type>java.lang.Throwable</exception-type> <newline46mondego>    <location>/servlet/com.ibm.eisa.servlet.ErrorServlet</location> <newline46mondego></error-page><newline46mondego>"
"1078splitHere46","2237491splitHere46","http://www.springframework.org/schema/security"
"1079splitHere46","2237491splitHere46","@ImportResource"
"1080splitHere46","2237635splitHere46","Pattern pattern = Pattern.compile(<doubleQuotes46>\<doubleQuotes46>((\\\\.|[^\<doubleQuotes46>])+)\<doubleQuotes46><doubleQuotes46>);<newline46mondego>Matcher matcher = pattern.matcher(line);<newline46mondego><newline46mondego>while (matcher.find()) {<newline46mondego>  System.out.println(<doubleQuotes46> FOUND <doubleQuotes46>+matcher.groupCount()+<doubleQuotes46> groups<doubleQuotes46>);<newline46mondego>  System.out.println(matcher.group(1));<newline46mondego>}<newline46mondego>"
"1081splitHere46","2237805splitHere46","<!-- Shared version number properties --><newline46mondego><properties><newline46mondego>    <org.springframework.version>3.0.0.RELEASE</org.springframework.version><newline46mondego></properties><newline46mondego><!-- Core utilities used by other modules.<newline46mondego>    Define this if you use Spring Utility APIs <newline46mondego>    (org.springframework.core.*/org.springframework.util.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-core</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Expression Language (depends on spring-core)<newline46mondego>    Define this if you use Spring Expression APIs <newline46mondego>    (org.springframework.expression.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-expression</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Bean Factory and JavaBeans utilities (depends on spring-core)<newline46mondego>    Define this if you use Spring Bean APIs <newline46mondego>    (org.springframework.beans.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-beans</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Aspect Oriented Programming (AOP) Framework <newline46mondego>    (depends on spring-core, spring-beans)<newline46mondego>    Define this if you use Spring AOP APIs <newline46mondego>    (org.springframework.aop.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-aop</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Application Context <newline46mondego>    (depends on spring-core, spring-expression, spring-aop, spring-beans)<newline46mondego>    This is the central artifact for Spring's Dependency Injection Container<newline46mondego>    and is generally always defined--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-context</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, <newline46mondego>    and Freemarker integration<newline46mondego>    Define this if you need any of these integrations--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-context-support</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Transaction Management Abstraction <newline46mondego>    (depends on spring-core, spring-beans, spring-aop, spring-context)<newline46mondego>    Define this if you use Spring Transactions or DAO Exception Hierarchy<newline46mondego>    (org.springframework.transaction.*/org.springframework.dao.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-tx</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- JDBC Data Access Library <newline46mondego>    (depends on spring-core, spring-beans, spring-context, spring-tx)<newline46mondego>    Define this if you use Spring's JdbcTemplate API <newline46mondego>    (org.springframework.jdbc.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-jdbc</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and iBatis.<newline46mondego>    (depends on spring-core, spring-beans, spring-context, spring-tx)<newline46mondego>    Define this if you need ORM (org.springframework.orm.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-orm</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, <newline46mondego>    Castor, XStream, and XML Beans.<newline46mondego>    (depends on spring-core, spring-beans, spring-context)<newline46mondego>    Define this if you need OXM (org.springframework.oxm.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-oxm</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Web application development utilities applicable to both Servlet and <newline46mondego>    Portlet Environments <newline46mondego>    (depends on spring-core, spring-beans, spring-context)<newline46mondego>    Define this if you use Spring MVC, or wish to use Struts, JSF, or another<newline46mondego>    web framework with Spring (org.springframework.web.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-web</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Spring MVC for Servlet Environments <newline46mondego>    (depends on spring-core, spring-beans, spring-context, spring-web)<newline46mondego>    Define this if you use Spring MVC with a Servlet Container such as <newline46mondego>    Apache Tomcat (org.springframework.web.servlet.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-webmvc</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Spring MVC for Portlet Environments <newline46mondego>    (depends on spring-core, spring-beans, spring-context, spring-web)<newline46mondego>    Define this if you use Spring MVC with a Portlet Container <newline46mondego>    (org.springframework.web.portlet.*)--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-webmvc-portlet</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego></dependency><newline46mondego><!-- Support for testing Spring applications with tools such as JUnit and TestNG<newline46mondego>    This artifact is generally always defined with a 'test' scope for the <newline46mondego>    integration testing framework and unit testing stubs--><newline46mondego><dependency><newline46mondego>    <groupId>org.springframework</groupId><newline46mondego>    <artifactId>spring-test</artifactId><newline46mondego>    <version>${org.springframework.version}</version><newline46mondego>    <scope>test</scope><newline46mondego></dependency><newline46mondego>"
"1082splitHere46","2237910splitHere46","method.getParameterTypes()"
"1083splitHere46","2237910splitHere46","arg0"
"1084splitHere46","2237910splitHere46","arg1"
"1085splitHere46","2237910splitHere46","arg2"
"1086splitHere46","2237910splitHere46","intParam"
"1087splitHere46","2237910splitHere46","stringParam"
"1088splitHere46","2237910splitHere46","objectTypeParam"
"1089splitHere46","2237917splitHere46","java -Xms64m -Xmx256m my_prog<newline46mondego>"
"1090splitHere46","2238050splitHere46","@Value(<doubleQuotes46>#{ myProperties['min.age.required'] }<doubleQuotes46>)<newline46mondego>int age;<newline46mondego>"
"1091splitHere46","2238050splitHere46","<context:property-placeholder .../>"
"1092splitHere46","2238050splitHere46","@Value(<doubleQuotes46>${min.age.required}<doubleQuotes46>)<newline46mondego>int age;<newline46mondego>"
"1093splitHere46","2238061splitHere46","$JBOSS_HOME/server/<your_server>/log<newline46mondego>"
"1094splitHere46","2238061splitHere46","cargo.log"
"1095splitHere46","2238061splitHere46","<plugin>    <newline46mondego>  <groupId>org.codehaus.cargo</groupId>    <newline46mondego>  <artifactId>cargo-maven2-plugin</artifactId>    <newline46mondego>  <version>1.0</version>    <newline46mondego>  <configuration>    <newline46mondego>    <container>    <newline46mondego>      <containerId>jboss5x</containerId>    <newline46mondego>      <home>${jboss.home}</home>    <newline46mondego>      <append>false</append>    <newline46mondego>      <log>${basedir}/target/jboss5.x.logs/cargo.log</log>    <newline46mondego>      <timeout>300000</timeout> <!-- 5 minutes -->    <newline46mondego>    </container>    <newline46mondego>    <configuration>    <newline46mondego>      <type>existing</type>    <newline46mondego>      <home>${jboss.home}/server/default</home>    <newline46mondego>      <properties>    <newline46mondego>        <cargo.jboss.configuration>default</cargo.jboss.configuration>    <newline46mondego>        <cargo.rmi.port>1099</cargo.rmi.port>    <newline46mondego>        <cargo.logging>high</cargo.logging>    <newline46mondego>      </properties>    <newline46mondego>    </configuration>    <newline46mondego>    <wait>false</wait>    <newline46mondego>  </configuration>    <newline46mondego>  ...<newline46mondego></plugin><newline46mondego>"
"1096splitHere46","2238062splitHere46","public static"
"1097splitHere46","2238062splitHere46","public class MyTest {<newline46mondego>     public static int flag;<newline46mondego>     // the rest of the code<newline46mondego>}<newline46mondego>"
"1098splitHere46","2238062splitHere46","send()"
"1099splitHere46","2238062splitHere46","MyTest.flag_test"
"1100splitHere46","2238062splitHere46","SendMail"
"1101splitHere46","2238202splitHere46","setString()"
"1102splitHere46","2238202splitHere46","next()"
"1103splitHere46","2238202splitHere46","System.out.println()"
"1104splitHere46","2238202splitHere46","toString()"
"1105splitHere46","2238202splitHere46","PreparedStatement"
"1106splitHere46","2238202splitHere46","setString()"
"1107splitHere46","2238202splitHere46","toString()"
"1108splitHere46","2238202splitHere46","PreparedStatement"
"1109splitHere46","2238202splitHere46","setString()"
"1110splitHere46","2238202splitHere46","next()"
"1111splitHere46","2238534splitHere46","Class"
"1112splitHere46","2238534splitHere46","ClassLoader"
"1113splitHere46","2238534splitHere46","ClassLoader"
"1114splitHere46","2238709splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>        LogFactory.getFactory().setAttribute(<doubleQuotes46>org.apache.commons.logging.Log<doubleQuotes46>, <doubleQuotes46>org.apache.commons.logging.impl.NoOpLog<doubleQuotes46>);<newline46mondego><newline46mondego>        File file = new File(<doubleQuotes46>cookie.file<doubleQuotes46>);<newline46mondego>        ObjectInputStream in = new ObjectInputStream(new FileInputStream(file));<newline46mondego>        Set<Cookie> cookies = (Set<Cookie>) in.readObject();<newline46mondego>        in.close();<newline46mondego><newline46mondego>        WebClient wc = new WebClient();<newline46mondego><newline46mondego>        Iterator<Cookie> i = cookies.iterator();<newline46mondego>        while (i.hasNext()) {<newline46mondego>            wc.getCookieManager().addCookie(i.next());<newline46mondego>        }<newline46mondego><newline46mondego>        HtmlPage p = wc.getPage(<doubleQuotes46>http://google.com<doubleQuotes46>);<newline46mondego><newline46mondego>        ObjectOutput out = new ObjectOutputStream(new FileOutputStream(<doubleQuotes46>cookie.file<doubleQuotes46>));<newline46mondego>        out.writeObject(wc.getCookieManager().getCookies());<newline46mondego>        out.close();<newline46mondego>    }<newline46mondego>"
"1115splitHere46","2238781splitHere46","private"
"1116splitHere46","2238781splitHere46","protected"
"1117splitHere46","2238781splitHere46","public"
"1118splitHere46","2238781splitHere46","private"
"1119splitHere46","2238781splitHere46","protected"
"1120splitHere46","2238781splitHere46","public"
"1121splitHere46","2238854splitHere46","myClassType"
"1122splitHere46","2238854splitHere46","cons"
"1123splitHere46","2238854splitHere46","Class<?> myClassType = Class.forName(className);<newline46mondego>Class<?>[] types = new Class[] { File.class };<newline46mondego>Constructor<?> cons = myClassType.getConstructor(types);<newline46mondego>"
"1124splitHere46","2238963splitHere46","@Controller<newline46mondego>public class MyController {<newline46mondego><newline46mondego>    @ResponseStatus(NOT_FOUND)<newline46mondego>    @ExceptionHandler({UnauthorizedException.class})<newline46mondego>    public void handle() {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1125splitHere46","2238963splitHere46","UnauthorizedException."
"1126splitHere46","2238967splitHere46","run.bat -b 0.0.0.0"
"1127splitHere46","2238967splitHere46","run.sh -b 0.0.0.0"
"1128splitHere46","2238967splitHere46","localhost"
"1129splitHere46","2239037splitHere46","finally"
"1130splitHere46","2239037splitHere46","close"
"1131splitHere46","2239037splitHere46","close"
"1132splitHere46","2239037splitHere46","final Res res = acquire();<newline46mondego>try {<newline46mondego>    use(res);<newline46mondego>} finally {<newline46mondego>    res.release();<newline46mondego>}<newline46mondego>"
"1133splitHere46","2239171splitHere46","public interface IListable<T> {<newline46mondego>  //returns first n items from list<newline46mondego>  public ArrayList<T> getFirstNThings(int n);<newline46mondego><newline46mondego>  //returns last n items from list<newline46mondego>  public ArrayList<T> getLastNThings(int n);<newline46mondego>}<newline46mondego>"
"1134splitHere46","2239171splitHere46","public interface IListable {<newline46mondego>  //returns first n items from list<newline46mondego>  public ArrayList<?> getFirstNThings(int n);<newline46mondego><newline46mondego>  //returns last n items from list<newline46mondego>  public ArrayList<?> getLastNThings(int n);<newline46mondego>}<newline46mondego>"
"1135splitHere46","2239171splitHere46","List<Foo> get()"
"1136splitHere46","2239171splitHere46","ArrayList<Foo> get()"
"1137splitHere46","2239291splitHere46","ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS);<newline46mondego>  // generate code into cw instance...<newline46mondego><newline46mondego>  PrintWriter pw = new PrintWriter(System.out);<newline46mondego>  CheckClassAdapter.verify(new ClassReader(cw.toByteArray()), true, pw);<newline46mondego>"
"1138splitHere46","2239295splitHere46","BlockingQueue"
"1139splitHere46","2239358splitHere46","<project default=<doubleQuotes46>build<doubleQuotes46>><newline46mondego><newline46mondego>    <target name=<doubleQuotes46>build<doubleQuotes46>><newline46mondego>        <echo message=<doubleQuotes46>Hello world<doubleQuotes46>/><newline46mondego>        <setdates/><newline46mondego>        <echo message=<doubleQuotes46>thismonth ${thismonth}<doubleQuotes46>/><newline46mondego>        <echo message=<doubleQuotes46>priormonth ${priormonth}<doubleQuotes46>/><newline46mondego>    </target><newline46mondego><newline46mondego>    <scriptdef name=<doubleQuotes46>setdates<doubleQuotes46> language=<doubleQuotes46>javascript<doubleQuotes46>><newline46mondego>        <![CDATA[<newline46mondego><newline46mondego>            importClass(java.text.SimpleDateFormat);<newline46mondego>            importClass(java.util.Calendar);<newline46mondego><newline46mondego>            today = new Date();<newline46mondego><newline46mondego>            cal = Calendar.getInstance();<newline46mondego>            cal.setTime(today);<newline46mondego>            cal.set(Calendar.MONTH, cal.get(Calendar.MONTH) - 1);<newline46mondego><newline46mondego>            priormonth = cal.getTime();<newline46mondego><newline46mondego>            fmt = new SimpleDateFormat(<doubleQuotes46>MMyy<doubleQuotes46>);<newline46mondego><newline46mondego>            self.getProject().setProperty('thismonth', fmt.format(today));<newline46mondego>            self.getProject().setProperty('priormonth', fmt.format(priormonth));<newline46mondego><newline46mondego>        ]]><newline46mondego>    </scriptdef><newline46mondego><newline46mondego></project><newline46mondego>"
"1140splitHere46","2239367splitHere46","."
"1141splitHere46","2239367splitHere46","set CLASSPATH=.;C:\mysql-connector-java-5.1.10\mysql-connector-java-5.1.5-bin.jar<newline46mondego>"
"1142splitHere46","2239367splitHere46",".;"
"1143splitHere46","2239556splitHere46","submittedValue"
"1144splitHere46","2239556splitHere46","value"
"1145splitHere46","2239556splitHere46","UIInput#getSubmittedValue()"
"1146splitHere46","2239556splitHere46","UIInput#getValue()"
"1147splitHere46","2239973splitHere46","Project Properties -> Project Facets"
"1148splitHere46","2239973splitHere46","Project->Preferences->Project Facets"
"1149splitHere46","2239973splitHere46","org.eclipse.wst.common.project.facet.core.xml"
"1150splitHere46","2239973splitHere46",".settings"
"1151splitHere46","2239973splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><faceted-project><newline46mondego>  <runtime name=<doubleQuotes46>WebSphere Application Server v6.1<doubleQuotes46>/><newline46mondego>  <fixed facet=<doubleQuotes46>jst.java<doubleQuotes46>/><newline46mondego>  <fixed facet=<doubleQuotes46>jst.web<doubleQuotes46>/><newline46mondego>  <installed facet=<doubleQuotes46>jst.java<doubleQuotes46> version=<doubleQuotes46>5.0<doubleQuotes46>/><newline46mondego>  <installed facet=<doubleQuotes46>jst.web<doubleQuotes46> version=<doubleQuotes46>2.4<doubleQuotes46>/><newline46mondego>  <installed facet=<doubleQuotes46>jsf.ibm<doubleQuotes46> version=<doubleQuotes46>7.0<doubleQuotes46>/><newline46mondego>  <installed facet=<doubleQuotes46>jsf.base<doubleQuotes46> version=<doubleQuotes46>7.0<doubleQuotes46>/><newline46mondego>  <installed facet=<doubleQuotes46>web.jstl<doubleQuotes46> version=<doubleQuotes46>1.1<doubleQuotes46>/><newline46mondego></faceted-project><newline46mondego>"
"1152splitHere46","2240003splitHere46","<doubleQuotes46>Java<doubleQuotes46>"
"1153splitHere46","2240003splitHere46","<doubleQuotes46>Build Path / Configure Build Path<doubleQuotes46>"
"1154splitHere46","2240003splitHere46","<doubleQuotes46>Project<doubleQuotes46>"
"1155splitHere46","2240003splitHere46","<doubleQuotes46>properties<doubleQuotes46>"
"1156splitHere46","2240003splitHere46","<doubleQuotes46>Java Build Path<doubleQuotes46>"
"1157splitHere46","2240003splitHere46","<doubleQuotes46><fileset><doubleQuotes46>"
"1158splitHere46","2240003splitHere46","<project>/libs"
"1159splitHere46","2240003splitHere46","${libs.dir}"
"1160splitHere46","2240003splitHere46","<doubleQuotes46>libs<doubleQuotes46>"
"1161splitHere46","2240003splitHere46","<doubleQuotes46>Add Jars...<doubleQuotes46>"
"1162splitHere46","2240003splitHere46","<project>/libs"
"1163splitHere46","2240003splitHere46","<doubleQuotes46>Ok<doubleQuotes46>"
"1164splitHere46","2240003splitHere46","<pathelement>"
"1165splitHere46","2240003splitHere46","<doubleQuotes46>Source<doubleQuotes46>"
"1166splitHere46","2240003splitHere46","<doubleQuotes46>Java Build Path<doubleQuotes46>"
"1167splitHere46","2240003splitHere46","default output folder"
"1168splitHere46","2240003splitHere46","Source folders on build path"
"1169splitHere46","2240003splitHere46","<pathelement>"
"1170splitHere46","2240003splitHere46","${configuration.dir}/langs"
"1171splitHere46","2240003splitHere46","${fits.dir}/xml/nlnz"
"1172splitHere46","2240003splitHere46","<doubleQuotes46>Libraries<doubleQuotes46>"
"1173splitHere46","2240003splitHere46","<doubleQuotes46>Add Class Folder<doubleQuotes46>"
"1174splitHere46","2240003splitHere46","<doubleQuotes46>langs<doubleQuotes46>"
"1175splitHere46","2240003splitHere46","<doubleQuotes46>nlnz<doubleQuotes46>"
"1176splitHere46","2240003splitHere46","File->New Project->Java Project form Existing Ant Buildfile"
"1177splitHere46","2240003splitHere46","Window -> show view -> ant"
"1178splitHere46","2240116splitHere46","import javax.swing.*;<newline46mondego>import javax.swing.table.*;<newline46mondego><newline46mondego>public class TablePanel extends JPanel {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                JFrame f = new JFrame(<doubleQuotes46>JTable<doubleQuotes46>);<newline46mondego>                f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>                f.add(new TablePanel());<newline46mondego>                f.pack();<newline46mondego>                f.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public TablePanel() {<newline46mondego>        TableModel dataModel = new MyTableModel();<newline46mondego>        JTable table = new JTable(dataModel);<newline46mondego>        table.setAutoCreateRowSorter(true);<newline46mondego>        table.getColumnModel().getColumn(0).setPreferredWidth(100);<newline46mondego>        table.getColumnModel().getColumn(1).setPreferredWidth(150);<newline46mondego>        table.getColumnModel().getColumn(2).setPreferredWidth(200);<newline46mondego>        JScrollPane jsp = new JScrollPane(table);<newline46mondego>        this.add(jsp);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class MyTableModel extends AbstractTableModel {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getRowCount() {<newline46mondego>            return 30;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getColumnCount() {<newline46mondego>            return 3;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object getValueAt(int row, int col) {<newline46mondego>            return Math.pow(row, col + 1);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Class<?> getColumnClass(int col) {<newline46mondego>            return getValueAt(0, col).getClass();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1179splitHere46","2240232splitHere46","static"
"1180splitHere46","2240232splitHere46","public class MyServlet extends HttpServlet {<newline46mondego><newline46mondego>    private Object thisIsNOTThreadSafe;<newline46mondego><newline46mondego>    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>        Object thisIsThreadSafe;<newline46mondego><newline46mondego>        thisIsNOTThreadSafe = request.getParameter(<doubleQuotes46>foo<doubleQuotes46>); // BAD!! Shared among all requests!<newline46mondego>        thisIsThreadSafe = request.getParameter(<doubleQuotes46>foo<doubleQuotes46>); // OK, this is thread safe.<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"1181splitHere46","2240232splitHere46","HttpSession"
"1182splitHere46","2240232splitHere46","ServletContext"
"1183splitHere46","2240232splitHere46","ServletContextListener"
"1184splitHere46","2240462splitHere46","v"
"1185splitHere46","2240462splitHere46","ListView"
"1186splitHere46","2240478splitHere46","DocumentException"
"1187splitHere46","2240563splitHere46","javac -encoding MacRoman Test.java"
"1188splitHere46","2240563splitHere46","javac"
"1189splitHere46","2240623splitHere46","-Xdebug"
"1190splitHere46","2240623splitHere46","-Xrunjdwp:<name1>[=<value1>],<name2>[=<value2>]...<newline46mondego>"
"1191splitHere46","2240623splitHere46","--agentlib:jdwp=<name1>[=<value1>],<name2>[=<value2>]...<newline46mondego>"
"1192splitHere46","2240661splitHere46","Class<T>"
"1193splitHere46","2240661splitHere46","private void foo(Class<?> cls) {<newline46mondego>    if (cls == String.class) { ... }<newline46mondego>    else if (cls == int.class) { ... }<newline46mondego>}<newline46mondego><newline46mondego>private void bar() {<newline46mondego>    foo(String.class);<newline46mondego>}<newline46mondego>"
"1194splitHere46","2240661splitHere46","foo()"
"1195splitHere46","2240661splitHere46","foo()"
"1196splitHere46","2240661splitHere46","foo()"
"1197splitHere46","2240661splitHere46","Map<Class<?>, Action>"
"1198splitHere46","2240661splitHere46","actions.get(cls)"
"1199splitHere46","2240661splitHere46","actions.get(cls).foo()"
"1200splitHere46","2240861splitHere46","double d = new Double(JOptionPane.showInputDialog(<doubleQuotes46>Please enter a number between 0 and 1:<doubleQuotes46>));<newline46mondego>"
"1201splitHere46","2241257splitHere46","public final void keyPressed(final KeyEvent e) {<newline46mondego>    int key = e.getKeyCode();<newline46mondego><newline46mondego>    // Fix AutoKeyRepeat under X11<newline46mondego>    if (keysRemove.contains(key)) {<newline46mondego>        keysRemove.remove(Integer.valueOf(key));<newline46mondego>    }<newline46mondego><newline46mondego>    if (!keysDown.contains(key)) {<newline46mondego>        keysDown.add(key);<newline46mondego>        keysPressed.add(key);<newline46mondego>        lastKeys.add(key);<newline46mondego>        if (lastKeys.size() > 16) {<newline46mondego>            lastKeys.remove(0);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    e.consume();<newline46mondego>}<newline46mondego>"
"1202splitHere46","2241311splitHere46","int pack(byte[] bytes) {<newline46mondego>  int val = 0;<newline46mondego>  for (int i = 0; i < bytes.length; i++) {<newline46mondego>    val <<= 8;<newline46mondego>    val |= bytes[i] & 0xff;<newline46mondego>  }<newline46mondego>  return val;<newline46mondego>}<newline46mondego><newline46mondego>pack(InetAddress.getByName(dottedString).getAddress());<newline46mondego>"
"1203splitHere46","2241311splitHere46","byte[] unpack(int bytes) {<newline46mondego>  return new byte[] {<newline46mondego>    (byte)((bytes >>> 24) & 0xff),<newline46mondego>    (byte)((bytes >>> 16) & 0xff),<newline46mondego>    (byte)((bytes >>>  8) & 0xff),<newline46mondego>    (byte)((bytes       ) & 0xff)<newline46mondego>  };<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>InetAddress.getByAddress(unpack(packedBytes)).getHostAddress()<newline46mondego>"
"1204splitHere46","2241518splitHere46","<dependency><newline46mondego>  <groupId>commons-logging</groupId><newline46mondego>  <artifactId>commons-logging</artifactId><newline46mondego>  <version>1.1.1</version><newline46mondego></dependency><newline46mondego>"
"1205splitHere46","2241584splitHere46","interface CustomerNumber {<newline46mondego>    String getCustomerNumber();<newline46mondego>}<newline46mondego><newline46mondego>public class Customer implements CustomerNumber {<newline46mondego>  ...<newline46mondego>  public String getCustomerNumber();<newline46mondego>  ...<newline46mondego>}<newline46mondego><newline46mondego>public class Applicant implements CustomerNumber {<newline46mondego>   ....<newline46mondego>   private Customer c;<newline46mondego>   public Customer getCustomer() { return c; }<newline46mondego>   public String getCustomerNumber() { return getCustomer().getCustomerNumber(); }<newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"1206splitHere46","2241584splitHere46","public void processCustomerNumbers(List<? extends CustomerNumber> appList) {<newline46mondego>    for (Customer c: appList) {<newline46mondego>        processCustomerNumber(c.getCustomerNumber());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1207splitHere46","2241841splitHere46","StringEscapeUtils"
"1208splitHere46","2241929splitHere46","stringToValue"
"1209splitHere46","2241929splitHere46","public Object stringToValue(String text) throws ParseException {<newline46mondego>    Pattern pattern = getPattern();<newline46mondego><newline46mondego>    if (pattern != null) {<newline46mondego>        Matcher matcher = pattern.matcher(text);<newline46mondego><newline46mondego>        if (matcher.matches()) {<newline46mondego>            return super.stringToValue(text);<newline46mondego>        }<newline46mondego>        throw new ParseException(<doubleQuotes46>Pattern did not match<doubleQuotes46>, 0);<newline46mondego>    }<newline46mondego>    return text;<newline46mondego>}<newline46mondego>"
"1210splitHere46","2241990splitHere46","mvn deploy"
"1211splitHere46","2241990splitHere46","deploy"
"1212splitHere46","2241990splitHere46","<distributionManagement/>"
"1213splitHere46","2241990splitHere46","deploy"
"1214splitHere46","2241990splitHere46","mvn tomcat:run"
"1215splitHere46","2242203splitHere46","JFrame.EXIT_ON_CLOSE"
"1216splitHere46","2242341splitHere46","extern <doubleQuotes46>C<doubleQuotes46>"
"1217splitHere46","2242341splitHere46","type* function()"
"1218splitHere46","2242341splitHere46","com.sun.jna.Pointer"
"1219splitHere46","2242341splitHere46","foo()"
"1220splitHere46","2242341splitHere46","extern <doubleQuotes46>C<doubleQuotes46> void bar(type* var){<newline46mondego>   var->foo();<newline46mondego>}<newline46mondego>"
"1221splitHere46","2242341splitHere46","extern <doubleQuotes46>C<doubleQuotes46>"
"1222splitHere46","2242341splitHere46","foo()"
"1223splitHere46","2242426splitHere46","private long computeKey(Object o1, Object o2)<newline46mondego>{<newline46mondego>    int h1 = o1.hashCode();<newline46mondego>    int h2 = o2.hashCode();<newline46mondego><newline46mondego>    if (h1 < h2)<newline46mondego>    {<newline46mondego>        int swap = h1;<newline46mondego>        h1 = h2;<newline46mondego>        h2 = swap;<newline46mondego>    }<newline46mondego><newline46mondego>    return ((long)h1) << 32 | h2;<newline46mondego>}<newline46mondego>"
"1224splitHere46","2242426splitHere46","HashMap"
"1225splitHere46","2242486splitHere46","str = str.replaceAll(<doubleQuotes46>\\\\<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"1226splitHere46","2242486splitHere46","str = str.replace(<doubleQuotes46>\\<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"1227splitHere46","2242486splitHere46","replaceAll()"
"1228splitHere46","2242486splitHere46","replace()"
"1229splitHere46","2242520splitHere46","List<Integer> ret = new ArrayList<Integer>();<newline46mondego>for (int i = lower; i <= upper; i++) {<newline46mondego>    ret.add(i);<newline46mondego>}<newline46mondego>return ret;<newline46mondego>"
"1230splitHere46","2242590splitHere46","BasicLabelUI#paint()"
"1231splitHere46","2242590splitHere46","View v = (View) c.getClientProperty(BasicHTML.propertyKey);<newline46mondego>        if (v != null) {<newline46mondego>        v.paint(g, paintTextR);<newline46mondego>        }<newline46mondego>"
"1232splitHere46","2242590splitHere46","label2.addPropertyChangeListener(new PropertyChangeListener() {<newline46mondego>   public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>    if (!evt.getPropertyName().equals(<doubleQuotes46>enabled<doubleQuotes46>))<newline46mondego>     return;<newline46mondego>    if (evt.getNewValue().equals(Boolean.FALSE))<newline46mondego>     label2.setText(<doubleQuotes46><html><font color=gray>HTML <b>text</b></html><doubleQuotes46>);<newline46mondego>    else<newline46mondego>     label2.setText(<doubleQuotes46><html><font color=black>HTML <b>text</b></html><doubleQuotes46>);<newline46mondego>   }<newline46mondego>  });<newline46mondego>"
"1233splitHere46","2242620splitHere46","ServletContextListener"
"1234splitHere46","2242620splitHere46","event.getServletContext.getRealPath(<doubleQuotes46>/<doubleQuotes46>)<newline46mondego>"
"1235splitHere46","2242620splitHere46","static"
"1236splitHere46","2242620splitHere46","WebApplicationUtils"
"1237splitHere46","2242632splitHere46","ServletRequest"
"1238splitHere46","2242632splitHere46","request.setAttribute(<doubleQuotes46>myVar<doubleQuotes46>, value);"
"1239splitHere46","2242632splitHere46","chain.doFilter(request, response);"
"1240splitHere46","2242677splitHere46","version"
"1241splitHere46","2242677splitHere46","lastModified"
"1242splitHere46","2242677splitHere46","id"
"1243splitHere46","2242677splitHere46","version"
"1244splitHere46","2242677splitHere46","version"
"1245splitHere46","2242825splitHere46","class PageToRetriveQueue implements Runnable{<newline46mondego>   PageBuffer partner;<newline46mondego>   BlockingQeueue queue = new LinkedBlockingQueue<Page>();<newline46mondego><newline46mondego>   public void run(){<newline46mondego>     while(true){<newline46mondego>       Page p = partner.queue.take();<newline46mondego>       for(Link l : p){<newline46mondego>         queue.offer(l);<newline46mondego>       }<newline46mondego>     }<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class PageBuffer implements Runnable{<newline46mondego>   PageToRetriveQueue partner;<newline46mondego>   BlockingQeueue queue = new LinkedBlockingQueue<Link>();<newline46mondego><newline46mondego>   public void run(){<newline46mondego>     while(true){<newline46mondego>        Link l = partner.queue.take();<newline46mondego>        Page p = downloadPage(l);<newline46mondego>        queue.offer(p);<newline46mondego>     }<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1246splitHere46","2243000splitHere46","@Resrouce"
"1247splitHere46","2243000splitHere46","Context initContext = new InitialContext();<newline46mondego>Context envContext  = (Context) initContext.lookup(<doubleQuotes46>java:/comp/env<doubleQuotes46>);<newline46mondego>DataSource ds = (DataSource) envContext.lookup(<doubleQuotes46>jdbc/myDS<doubleQuotes46>);<newline46mondego>"
"1248splitHere46","2243059splitHere46","public static void main(String[] args) {<newline46mondego>    JFrame jFrame = new JFrame();<newline46mondego>    jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    jFrame.setLayout(new BorderLayout());<newline46mondego>    jFrame.setPreferredSize(new Dimension(500, 500));<newline46mondego><newline46mondego>    final JFormattedTextField comp = new JFormattedTextField();<newline46mondego>    comp.setFormatterFactory(new DefaultFormatterFactory(new DateFormatter(new SimpleDateFormat(<newline46mondego>            <doubleQuotes46>H'h' mm'm'<doubleQuotes46>))));<newline46mondego>    comp.setValue(Calendar.getInstance().getTime());<newline46mondego><newline46mondego>    comp.addPropertyChangeListener(<doubleQuotes46>value<doubleQuotes46>, new PropertyChangeListener() {<newline46mondego><newline46mondego>        @Override public void propertyChange(PropertyChangeEvent evt) {<newline46mondego>            System.out.println(comp.getValue());<newline46mondego><newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    jFrame.getContentPane().add(comp, BorderLayout.CENTER);<newline46mondego><newline46mondego>    jFrame.pack();<newline46mondego>    jFrame.setVisible(true);<newline46mondego>}<newline46mondego>"
"1249splitHere46","2243117splitHere46","public static JComponent wrap(JComponent comp)<newline46mondego>    {<newline46mondego>        JPanel panel = new JPanel();<newline46mondego>        panel.add(comp);<newline46mondego>        return panel;<newline46mondego>    }<newline46mondego>"
"1250splitHere46","2243117splitHere46","prova.add(wrap(plus)); <newline46mondego>            prova.add(wrap(minus)); <newline46mondego>            prova.add(wrap(per)); <newline46mondego>            prova.add(wrap(divide));<newline46mondego>"
"1251splitHere46","2243129splitHere46","getT1()"
"1252splitHere46","2243129splitHere46","setT1(int)"
"1253splitHere46","2243129splitHere46","C"
"1254splitHere46","2243129splitHere46","getT()"
"1255splitHere46","2243129splitHere46","@XmlTransient"
"1256splitHere46","2243129splitHere46","class C {<newline46mondego>  // snip<newline46mondego><newline46mondego>  /**<newline46mondego>   * JAXB only<newline46mondego>   */<newline46mondego>  @SuppressWarnings(<doubleQuotes46>unused<doubleQuotes46>)<newline46mondego>  @XmlElement<newline46mondego>  private void setT1(int t1) {<newline46mondego>    if(t != null) {<newline46mondego>      t.setT1(t1);<newline46mondego>    } else {<newline46mondego>      // TODO<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * JAXB only<newline46mondego>   */<newline46mondego>  @SuppressWarnings(<doubleQuotes46>unused<doubleQuotes46>)<newline46mondego>  private int getT1() {<newline46mondego>    if(t != null) {<newline46mondego>      return t.getT1(t1);<newline46mondego>    } else {<newline46mondego>      // TODO<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1257splitHere46","2243190splitHere46","getOperatingSystemMXBean()"
"1258splitHere46","2243190splitHere46","getMemoryMXBean()"
"1259splitHere46","2243190splitHere46","getThreadMXBean()"
"1260splitHere46","2243230splitHere46","protected boolean isResizable() {<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"1261splitHere46","2243230splitHere46","GridLayout"
"1262splitHere46","2243230splitHere46","GridData"
"1263splitHere46","2243230splitHere46","setLayoutData()"
"1264splitHere46","2243230splitHere46","GridData"
"1265splitHere46","2243230splitHere46","widthHint"
"1266splitHere46","2243230splitHere46","heightHint"
"1267splitHere46","2243230splitHere46","minimumWidth"
"1268splitHere46","2243230splitHere46","minimumHeight"
"1269splitHere46","2243262splitHere46","doPrivileged()"
"1270splitHere46","2243432splitHere46","<build><newline46mondego><plugins><newline46mondego>  <plugin><newline46mondego>    <groupId>org.codehaus.mojo</groupId><newline46mondego>    <artifactId>exec-maven-plugin</artifactId><newline46mondego>    <version>1.1</version><newline46mondego>    <executions><newline46mondego>      <execution><newline46mondego>        <phase>yourPhase</phase><newline46mondego>        ...<newline46mondego>        <goals><newline46mondego>          <goal>java</goal><newline46mondego>        </goals><newline46mondego>           <configuration><newline46mondego>             <mainClass>mainClass=org.sonatype.mavenbook.weather.Main</mainClass><newline46mondego>          </configuration><newline46mondego>      </execution><newline46mondego>    </executions><newline46mondego>  </plugin><newline46mondego></plugins><newline46mondego></build><newline46mondego>"
"1271splitHere46","2243432splitHere46","<phase>yourPhase</phase>"
"1272splitHere46","2243493splitHere46","BufferedWriter out = new BufferedWriter(new FileWriter(<doubleQuotes46>foo.out<doubleQuotes46>));<newline46mondego>"
"1273splitHere46","2243493splitHere46","FileWriter"
"1274splitHere46","2243514splitHere46","Users.isAppUser"
"1275splitHere46","2243602splitHere46","20/15"
"1276splitHere46","2243602splitHere46","0 */15 * * * ?"
"1277splitHere46","2243731splitHere46","myfile.part1"
"1278splitHere46","2243731splitHere46","myfile.part2"
"1279splitHere46","2243731splitHere46","public Downloader(String path) throws IOException {<newline46mondego>    int len = 0;<newline46mondego>    URL url = new URL(path);<newline46mondego>    URLConnection connectUrl = url.openConnection();<newline46mondego>    System.out.println(len = connectUrl.getContentLength());<newline46mondego>    System.out.println(connectUrl.getContentType());<newline46mondego><newline46mondego>    InputStream input = connectUrl.getInputStream();<newline46mondego>    int i = len;<newline46mondego>    int c = 0;<newline46mondego>    System.out.println(<doubleQuotes46>=== Content ===<doubleQuotes46>); <newline46mondego>    while (((c = input.read()) != -1) && (--i > 0)) {<newline46mondego>        System.out.print((char) c);<newline46mondego>    }<newline46mondego>    input.close(); <newline46mondego>}<newline46mondego>"
"1280splitHere46","2243731splitHere46","public void join(String FilePath) {<newline46mondego>    long leninfile=0, leng=0;<newline46mondego>    int count=1, data=0;<newline46mondego>    try {<newline46mondego>        File filename = new File(FilePath);<newline46mondego>        RandomAccessFile outfile = new RandomAccessFile(filename,<doubleQuotes46>rw<doubleQuotes46>);<newline46mondego>        while(true) {<newline46mondego>            filename = new File(FilePath + count + <doubleQuotes46>.sp<doubleQuotes46>);<newline46mondego>            if (filename.exists()) {<newline46mondego>                RandomAccessFile infile = new RandomAccessFile(filename,<doubleQuotes46>r<doubleQuotes46>);<newline46mondego>                data=infile.read();<newline46mondego>                while(data != -1) {<newline46mondego>                    outfile.write(data);<newline46mondego>                    data=infile.read();<newline46mondego>                }<newline46mondego>                leng++;<newline46mondego>                infile.close();<newline46mondego>                count++;<newline46mondego>            } else break;<newline46mondego>        }<newline46mondego>        outfile.close();<newline46mondego>    } catch(Exception e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1281splitHere46","2243850splitHere46","@Embedded"
"1282splitHere46","2243850splitHere46","@Embeddable"
"1283splitHere46","2243850splitHere46","@Enumerated(EnumType.STRING)"
"1284splitHere46","2243850splitHere46","import java.text.SimpleDateFormat;<newline46mondego>import java.util.Calendar;<newline46mondego>import java.util.Date;<newline46mondego>import java.util.GregorianCalendar;<newline46mondego><newline46mondego>public enum DayOfTheWeek {<newline46mondego>    SUNDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.SUNDAY;<newline46mondego>        }<newline46mondego><newline46mondego>    },<newline46mondego>    MONDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.MONDAY;<newline46mondego>        }<newline46mondego>    },<newline46mondego>    TUESDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.TUESDAY;<newline46mondego>        }<newline46mondego>    },<newline46mondego>    WEDNESDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.WEDNESDAY;<newline46mondego>        }<newline46mondego>    },<newline46mondego>    THURSDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.THURSDAY;<newline46mondego>        }<newline46mondego>    },<newline46mondego>    FRIDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.FRIDAY;<newline46mondego>        }<newline46mondego>    },<newline46mondego>    SATURDAY {<newline46mondego>        @Override<newline46mondego>        public int toCalendar() {<newline46mondego>            return Calendar.SATURDAY;<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    public abstract int toCalendar();<newline46mondego><newline46mondego>    public static DayOfTheWeek fromCalendarDay(int day) {<newline46mondego><newline46mondego>        for (DayOfTheWeek dayOfWeek : DayOfTheWeek.values()) {<newline46mondego>            if (dayOfWeek.toCalendar() == day) {<newline46mondego>                return dayOfWeek;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        return null; // Consider throwing IllegalArgumentException<newline46mondego>    }<newline46mondego><newline46mondego>    public static DayOfTheWeek getByDate(Date date) {<newline46mondego>        Calendar calendar = GregorianCalendar.getInstance();<newline46mondego>        calendar.setTime(date);<newline46mondego>        return fromCalendarDay(calendar.get(Calendar.DAY_OF_WEEK));<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    /*<newline46mondego>     * Should return the localized day of the week<newline46mondego>     */<newline46mondego>    public String toString() {<newline46mondego>        Calendar c = new GregorianCalendar();<newline46mondego>        c.set(Calendar.DAY_OF_WEEK, this.toCalendar());<newline46mondego>        SimpleDateFormat sdf = (SimpleDateFormat) SimpleDateFormat<newline46mondego>                .getInstance();<newline46mondego>        sdf.applyPattern(<doubleQuotes46>EEEEEEEEEE<doubleQuotes46>);<newline46mondego><newline46mondego>        return sdf.format(c.getTime());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1285splitHere46","2244065splitHere46","ClassLoader"
"1286splitHere46","2244077splitHere46","public class Test {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego><newline46mondego>        String[] cmd = { <doubleQuotes46>C:\\E.M. TVCC\\TVCC.exe<doubleQuotes46>, <doubleQuotes46>-f E:\\TestVideo\\01.avi<doubleQuotes46>, <doubleQuotes46>-o E:\\OutputFiles\\target.3gp<doubleQuotes46> };<newline46mondego>        Process p = Runtime.getRuntime().exec(cmd);<newline46mondego>        p.waitFor();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1287splitHere46","2244099splitHere46","WebClient#getPage()"
"1288splitHere46","2244099splitHere46","WebRequestSettings"
"1289splitHere46","2244099splitHere46","HttpMethod"
"1290splitHere46","2244099splitHere46","HEAD"
"1291splitHere46","2244099splitHere46","Page page = webClient.getPage(new WebRequestSettings(new URL(<doubleQuotes46>http://stackoverflow.com<doubleQuotes46>), HttpMethod.HEAD));<newline46mondego>"
"1292splitHere46","2244105splitHere46","public boolean equals(Object k)"
"1293splitHere46","2244183splitHere46","url-pattern"
"1294splitHere46","2244183splitHere46","*.jsp"
"1295splitHere46","2244183splitHere46","INCLUDE"
"1296splitHere46","2244183splitHere46","<filter><newline46mondego>    <filter-name>includeFilter</filter-name><newline46mondego>    <filter-class>com.stackoverflow.q2242429.IncludeFilter</filter-class><newline46mondego></filter><newline46mondego><filter-mapping><newline46mondego>    <filter-name>includeFilter</filter-name><newline46mondego>    <url-pattern>*.jsp</url-pattern><newline46mondego>    <dispatcher>INCLUDE</dispatcher><newline46mondego></filter-mapping><newline46mondego>"
"1297splitHere46","2244183splitHere46","HttpServletRequest#getServletPath()"
"1298splitHere46","2244183splitHere46","HttpServletRequest#getAttribute()"
"1299splitHere46","2244183splitHere46","javax.servlet.include.servlet_path"
"1300splitHere46","2244183splitHere46","public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)<newline46mondego>    throws IOException, ServletException<newline46mondego>{<newline46mondego>    HttpServletRequest httpreq = (HttpServletRequest) request;<newline46mondego>    String parentPage = httpreq.getServletPath();<newline46mondego>    String includePage = (String) httpreq.getAttribute(<doubleQuotes46>javax.servlet.include.servlet_path<doubleQuotes46>);<newline46mondego>    // Log it here?<newline46mondego><newline46mondego>    chain.doFilter(request, response);<newline46mondego>}<newline46mondego>"
"1301splitHere46","2244283splitHere46","src/test/resources"
"1302splitHere46","2244283splitHere46","pom.xml"
"1303splitHere46","2244283splitHere46","<build><newline46mondego>    <testResources><newline46mondego>        <testResource><newline46mondego>            <directory>...</directory><newline46mondego>        </testResource><newline46mondego>    </testResources><newline46mondego>    ...<newline46mondego>"
"1304splitHere46","2244285splitHere46","AffineTransform"
"1305splitHere46","2244285splitHere46","Graphics2D"
"1306splitHere46","2244285splitHere46","Graphics2D"
"1307splitHere46","2244285splitHere46","import java.awt.BasicStroke;<newline46mondego>import java.awt.Color;<newline46mondego>import java.awt.Component;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.Point;<newline46mondego>import java.awt.event.MouseAdapter;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.awt.event.MouseMotionAdapter;<newline46mondego>import java.awt.geom.AffineTransform;<newline46mondego>import java.awt.geom.NoninvertibleTransformException;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.io.IOException;<newline46mondego>import java.net.MalformedURLException;<newline46mondego>import java.net.URL;<newline46mondego><newline46mondego>import javax.imageio.ImageIO;<newline46mondego>import javax.swing.Box;<newline46mondego>import javax.swing.BoxLayout;<newline46mondego>import javax.swing.JComponent;<newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public class Main {<newline46mondego>    public static void main(String[] args) throws MalformedURLException, IOException {<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        Box box = new Box(BoxLayout.Y_AXIS);<newline46mondego>        BufferedImage image = ImageIO.read(new URL(<doubleQuotes46>http://sstatic.net/so/img/logo.png<doubleQuotes46>));<newline46mondego>        AffineTransform xfrm1 = AffineTransform.getScaleInstance(0.95, 1.25);<newline46mondego>        xfrm1.rotate(-0.3);<newline46mondego>        box.add(new ImageView(image, xfrm1));<newline46mondego>        AffineTransform xfrm2 = AffineTransform.getShearInstance(0.1, 0.2);<newline46mondego>        xfrm2.scale(1.3, 0.9);<newline46mondego>        box.add(new ImageView(image, xfrm2));<newline46mondego>        frame.add(box);<newline46mondego>        frame.pack();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class ImageView extends JComponent {<newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        Graphics2D g2d = (Graphics2D) g;<newline46mondego>        try {<newline46mondego>            paintXfrm = g2d.getTransform();<newline46mondego>            paintXfrm.invert();<newline46mondego>            g2d.translate(getWidth() / 2, getHeight() / 2);<newline46mondego>            g2d.transform(xfrm);<newline46mondego>            g2d.translate(image.getWidth() * -0.5, image.getHeight() * -0.5);<newline46mondego>            paintXfrm.concatenate(g2d.getTransform());<newline46mondego>            g2d.drawImage(image, 0, 0, this);<newline46mondego>        } catch (NoninvertibleTransformException ex) {<newline46mondego>            ex.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Dimension getPreferredSize() {<newline46mondego>        return new Dimension(image.getWidth() * 2, image.getHeight() * 2);<newline46mondego>    }<newline46mondego><newline46mondego>    ImageView(final BufferedImage image, final AffineTransform xfrm) {<newline46mondego>        this.canvas = image.createGraphics();<newline46mondego>        canvas.setColor(Color.BLACK);<newline46mondego>        canvas.setStroke(new BasicStroke(3.0f));<newline46mondego>        this.image = image;<newline46mondego>        this.xfrm = xfrm;<newline46mondego>        addMouseListener(new MouseAdapter() {<newline46mondego>            @Override<newline46mondego>            public void mousePressed(MouseEvent e) {<newline46mondego>                try {<newline46mondego>                    mouseDownCoord = e.getPoint();<newline46mondego>                    paintXfrm.inverseTransform(mouseDownCoord, mouseDownCoord);<newline46mondego>                } catch (NoninvertibleTransformException ex) {<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void mouseExited(MouseEvent e) {<newline46mondego>                mouseDownCoord = null;<newline46mondego>            }<newline46mondego>        });<newline46mondego>        addMouseMotionListener(new MouseMotionAdapter() {<newline46mondego>            @Override<newline46mondego>            public void mouseDragged(MouseEvent e) {<newline46mondego>                Point p = e.getPoint();<newline46mondego>                try {<newline46mondego>                    paintXfrm.inverseTransform(p, p);<newline46mondego>                    if (mouseDownCoord != null) {<newline46mondego>                        canvas.drawLine(mouseDownCoord.x, mouseDownCoord.y, p.x, p.y);<newline46mondego>                        for (Component sibling: getParent().getComponents()) {<newline46mondego>                            sibling.repaint();<newline46mondego>                        }<newline46mondego>                    }<newline46mondego>                    mouseDownCoord = p;<newline46mondego>                } catch (NoninvertibleTransformException ex) {<newline46mondego>                    ex.printStackTrace();<newline46mondego>                }<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private Graphics2D canvas;<newline46mondego>    private BufferedImage image;<newline46mondego>    private AffineTransform xfrm;<newline46mondego>    private AffineTransform paintXfrm;<newline46mondego>    private Point mouseDownCoord;<newline46mondego>}<newline46mondego>"
"1308splitHere46","2244549splitHere46","ApplicationServlet"
"1309splitHere46","2244549splitHere46","com.example.tutorials.TutorialsApplication"
"1310splitHere46","2244549splitHere46","ApplicationServlet"
"1311splitHere46","2244849splitHere46","package one;<newline46mondego>public class X {<newline46mondego>    protected void abby() {<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>package other;<newline46mondego>import one.X;<newline46mondego>public class Y extends X {<newline46mondego>    public void callAbbyOf(Y anyOther) {<newline46mondego>        anyOther.abby();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1312splitHere46","2245011splitHere46","EJBContext"
"1313splitHere46","2245396splitHere46","Map<K, List<Component>><newline46mondego>"
"1314splitHere46","2245487splitHere46","setInfluencingBounds()"
"1315splitHere46","2245487splitHere46","BoundingBox"
"1316splitHere46","2245589splitHere46","PagedListHolder"
"1317splitHere46","2245589splitHere46","org.springframework.beans.support"
"1318splitHere46","2245589splitHere46","SearchProductsController.java"
"1319splitHere46","2245589splitHere46","public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {<newline46mondego>    String keyword = request.getParameter(<doubleQuotes46>keyword<doubleQuotes46>);<newline46mondego>    if (keyword != null) {<newline46mondego>        if (!StringUtils.hasLength(keyword)) {<newline46mondego>            return new ModelAndView(<doubleQuotes46>Error<doubleQuotes46>, <doubleQuotes46>message<doubleQuotes46>, <doubleQuotes46>Please enter a keyword to search for, then press the search button.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        PagedListHolder productList = new PagedListHolder(this.petStore.searchProductList(keyword.toLowerCase()));<newline46mondego>        productList.setPageSize(4);<newline46mondego>        request.getSession().setAttribute(<doubleQuotes46>SearchProductsController_productList<doubleQuotes46>, productList);<newline46mondego>        return new ModelAndView(<doubleQuotes46>SearchProducts<doubleQuotes46>, <doubleQuotes46>productList<doubleQuotes46>, productList);<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        String page = request.getParameter(<doubleQuotes46>page<doubleQuotes46>);<newline46mondego>        PagedListHolder productList = (PagedListHolder) request.getSession().getAttribute(<doubleQuotes46>SearchProductsController_productList<doubleQuotes46>);<newline46mondego>        if (productList == null) {<newline46mondego>            return new ModelAndView(<doubleQuotes46>Error<doubleQuotes46>, <doubleQuotes46>message<doubleQuotes46>, <doubleQuotes46>Your session has timed out. Please start over again.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        if (<doubleQuotes46>next<doubleQuotes46>.equals(page)) {<newline46mondego>            productList.nextPage();<newline46mondego>        }<newline46mondego>        else if (<doubleQuotes46>previous<doubleQuotes46>.equals(page)) {<newline46mondego>            productList.previousPage();<newline46mondego>        }<newline46mondego>        return new ModelAndView(<doubleQuotes46>SearchProducts<doubleQuotes46>, <doubleQuotes46>productList<doubleQuotes46>, productList);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1320splitHere46","2245794splitHere46","sychnchonized(this)"
"1321splitHere46","2245896splitHere46","/**<newline46mondego> * Returns first child element with matching element name or else<newline46mondego> * throws an exception.  Will never return null.<newline46mondego> */<newline46mondego>Element getMandatoryChildElement(Element parent, String elementName)<newline46mondego>throws MissingElementException;<newline46mondego>"
"1322splitHere46","2246129splitHere46","@PersistenceContext"
"1323splitHere46","2246329splitHere46","num"
"1324splitHere46","2246329splitHere46","d"
"1325splitHere46","2246329splitHere46","num/d"
"1326splitHere46","2246329splitHere46","sqrt(num)"
"1327splitHere46","2246339splitHere46","regedit yourfile.reg"
"1328splitHere46","2246339splitHere46","String[] cmd = {<doubleQuotes46>regedit<doubleQuotes46>, <doubleQuotes46>yourfile.reg<doubleQuotes46>};<newline46mondego>Process p = Runtime.exec(cmd);<newline46mondego>p.waitFor();<newline46mondego>"
"1329splitHere46","2246342splitHere46","-Djava.io.tmpdir=/my/temporary/directory"
"1330splitHere46","2246354splitHere46","Inline::Java"
"1331splitHere46","2246354splitHere46","InlineJavaServer.jar"
"1332splitHere46","2246354splitHere46","Inline/Java.pm"
"1333splitHere46","2246354splitHere46","Inline::Java"
"1334splitHere46","2246354splitHere46","PERL_INLINE_JAVA_J2SDK"
"1335splitHere46","2246354splitHere46","Inline::Java"
"1336splitHere46","2246354splitHere46","MyCompany::InlineJavaConfig"
"1337splitHere46","2246354splitHere46","Inline::Java"
"1338splitHere46","2246547splitHere46","Exception in thread <doubleQuotes46>main<doubleQuotes46> java.lang.SecurityException: Prohibited package name: java.io<newline46mondego>    at java.lang.ClassLoader.preDefineClass(ClassLoader.java:480)<newline46mondego>    at java.lang.ClassLoader.defineClass(ClassLoader.java:615)<newline46mondego>    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)<newline46mondego>    at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)<newline46mondego>    at java.net.URLClassLoader.access$000(URLClassLoader.java:56)<newline46mondego>    at java.net.URLClassLoader$1.run(URLClassLoader.java:195)<newline46mondego>    at java.security.AccessController.doPrivileged(Native Method)<newline46mondego>    at java.net.URLClassLoader.findClass(URLClassLoader.java:188)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:307)<newline46mondego>    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)<newline46mondego>    at java.lang.ClassLoader.loadClass(ClassLoader.java:252)<newline46mondego>    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)<newline46mondego>"
"1339splitHere46","2246547splitHere46","$ java -Xbootclasspath:/home/user/Desktop/:/home/user/Desktop/rt.jar java.io.Hack<newline46mondego>hacked<newline46mondego>"
"1340splitHere46","2246547splitHere46","$ java -Xbootclasspath:/home/user/Desktop/:/home/user/Desktop/rt.jar java.io.File<newline46mondego>Error occurred during initialization of VM<newline46mondego>java.lang.NoSuchFieldError: separatorChar<newline46mondego>    at java.lang.Runtime.loadLibrary0(Runtime.java:819)<newline46mondego>    at java.lang.System.loadLibrary(System.java:1030)<newline46mondego>    at java.lang.System.initializeSystemClass(System.java:1077)<newline46mondego>"
"1341splitHere46","2246577splitHere46","(ns whatever.main<newline46mondego>  (:gen-class))<newline46mondego>"
"1342splitHere46","2246623splitHere46","<h:inputText valueChangeListener=<doubleQuotes46>#{bean.nested.change}<doubleQuotes46> /><newline46mondego>"
"1343splitHere46","2246623splitHere46","public class Bean {<newline46mondego>    private Nested nested; // +getter<newline46mondego>}<newline46mondego>"
"1344splitHere46","2246623splitHere46","public class Nested {<newline46mondego>    public void change(ValueChangeEvent event) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1345splitHere46","2246623splitHere46","Nested"
"1346splitHere46","2246623splitHere46","Bean"
"1347splitHere46","2246623splitHere46","#{bean.nested}"
"1348splitHere46","2246623splitHere46","public class Bean {<newline46mondego>    private Nested nested = new Nested(); // +getter<newline46mondego>}<newline46mondego>"
"1349splitHere46","2246670splitHere46","singleton"
"1350splitHere46","2246764splitHere46","Object[] arr = new String[0];<newline46mondego>String[] sarr = (String[]) arr;<newline46mondego>"
"1351splitHere46","2246764splitHere46","Object[] arr = new Object[0];<newline46mondego>String[] sarr = (String[]) arr;<newline46mondego>"
"1352splitHere46","2246967splitHere46","private <T> List<T> createList(Class<T> klass) {<newline46mondego>          return new ArrayList<T>();<newline46mondego> }<newline46mondego>"
"1353splitHere46","2247054splitHere46","@XmlRootElement"
"1354splitHere46","2247054splitHere46","namespace"
"1355splitHere46","2247054splitHere46","...<newline46mondego>@XmlElement(name=<doubleQuotes46>HostedService<doubleQuotes46>, namespace=<doubleQuotes46>http://schemas.microsoft.com/windowsazure<doubleQuotes46>) <newline46mondego>...<newline46mondego>@XmlElement(name=<doubleQuotes46>Url<doubleQuotes46>, namespace=<doubleQuotes46>http://schemas.microsoft.com/windowsazure<doubleQuotes46>) <newline46mondego>...<newline46mondego>@XmlElement(name=<doubleQuotes46>ServiceName<doubleQuotes46>, namespace=<doubleQuotes46>http://schemas.microsoft.com/windowsazure<doubleQuotes46>)<newline46mondego>... <newline46mondego>"
"1356splitHere46","2247212splitHere46","private boolean trace(Node parent, Node node){<newline46mondego>    mainStack.push(parent);<newline46mondego>    if(node.data == parent.data){<newline46mondego>        for(Node iNode:mainStack){<newline46mondego>            System.out.println(iNode.data);<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    if(parent.left != null){<newline46mondego>        if (trace(parent.left, node)) return true;<newline46mondego>    }<newline46mondego>    if(parent.right!=null){<newline46mondego>        if (trace(parent.right, node)) return true;<newline46mondego>    }<newline46mondego>    mainStack.pop();<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"1357splitHere46","2247518splitHere46","junit.swingui.TestRunner"
"1358splitHere46","2247597splitHere46","<tag attr1\s*=\s*([^<doubleQuotes46> >]+)<newline46mondego>"
"1359splitHere46","2247597splitHere46","<tag attr1 = <doubleQuotes46>\1<doubleQuotes46><newline46mondego>"
"1360splitHere46","2247597splitHere46","String resultString = subjectString.replaceAll(<doubleQuotes46><tag attr1\\s*=\\s*([^\<doubleQuotes46> >]+)<doubleQuotes46>, <doubleQuotes46><tag attr1 = \<doubleQuotes46>$1\<doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"1361splitHere46","2248203splitHere46","protected void afterExecute(Runnable r, Throwable t) {<newline46mondego>      super.afterExecute(r, t);<newline46mondego>      if (t == null && r instanceof Future<?>) {<newline46mondego>        try {<newline46mondego>          Future<?> future = (Future<?>) r;<newline46mondego>          if (future.isDone())<newline46mondego>            future.get();<newline46mondego>        } catch (CancellationException ce) {<newline46mondego>            t = ce;<newline46mondego>        } catch (ExecutionException ee) {<newline46mondego>            t = ee.getCause();<newline46mondego>        } catch (InterruptedException ie) {<newline46mondego>            Thread.currentThread().interrupt(); // ignore/reset<newline46mondego>        }<newline46mondego>      }<newline46mondego>      if (t != null)<newline46mondego>               System.out.println(t);<newline46mondego>     }<newline46mondego> }<newline46mondego>"
"1362splitHere46","2248503splitHere46","extends"
"1363splitHere46","2248503splitHere46","super"
"1364splitHere46","2248503splitHere46","T"
"1365splitHere46","2248503splitHere46","? extends T"
"1366splitHere46","2248503splitHere46","T"
"1367splitHere46","2248503splitHere46","T"
"1368splitHere46","2248503splitHere46","T"
"1369splitHere46","2248503splitHere46","? super T"
"1370splitHere46","2248503splitHere46","T"
"1371splitHere46","2248503splitHere46","T"
"1372splitHere46","2248503splitHere46","Comparator<Number>"
"1373splitHere46","2248503splitHere46","Collection<Integer>"
"1374splitHere46","2248503splitHere46","? extends T"
"1375splitHere46","2248503splitHere46","Comparator<Integer>"
"1376splitHere46","2248503splitHere46","Collection<Number>"
"1377splitHere46","2248503splitHere46","public T something();<newline46mondego>       ^<newline46mondego>"
"1378splitHere46","2248503splitHere46","T"
"1379splitHere46","2248503splitHere46","public void something(T t);<newline46mondego>                      ^<newline46mondego>"
"1380splitHere46","2248503splitHere46","T"
"1381splitHere46","2248503splitHere46","extends"
"1382splitHere46","2248503splitHere46","super"
"1383splitHere46","2248503splitHere46","Collections.max()"
"1384splitHere46","2248503splitHere46","Collection"
"1385splitHere46","2248503splitHere46","Comparator"
"1386splitHere46","2248863splitHere46","rand()"
"1387splitHere46","2248863splitHere46","srand()"
"1388splitHere46","2248863splitHere46","rand()"
"1389splitHere46","2249006splitHere46","greeting"
"1390splitHere46","2249006splitHere46","Job"
"1391splitHere46","2249006splitHere46","final"
"1392splitHere46","2249068splitHere46","ServletContextListener"
"1393splitHere46","2249068splitHere46","Timer"
"1394splitHere46","2249068splitHere46","TimerTask"
"1395splitHere46","2249068splitHere46","public void contextInitialized(ServletContextEvent event) {<newline46mondego>    Timer timer = new Timer(true);<newline46mondego>    timer.scheduleAtFixedRate(new CleanDBTask(), 0, oneHourInMillis);<newline46mondego>    timer.scheduleAtFixedRate(new StatisticsTask(), 0, oneQuartInMillis);<newline46mondego>}<newline46mondego>"
"1396splitHere46","2249068splitHere46","public class CleanDBTask extends TimerTask {<newline46mondego>    public void run() {<newline46mondego>        // Implement.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1397splitHere46","2249068splitHere46","Timer"
"1398splitHere46","2249068splitHere46","Timer"
"1399splitHere46","2249068splitHere46","Timer"
"1400splitHere46","2249068splitHere46","java.util.concurrent"
"1401splitHere46","2249068splitHere46","ScheduledExecutorService"
"1402splitHere46","2249068splitHere46","Runnable"
"1403splitHere46","2249068splitHere46","private ScheduledExecutorService scheduler;<newline46mondego><newline46mondego>public void contextInitialized(ServletContextEvent event) {<newline46mondego>    scheduler = Executors.newSingleThreadScheduledExecutor();<newline46mondego>    scheduler.scheduleAtFixedRate(new CleanDBTask(), 0, 1, TimeUnit.HOURS);<newline46mondego>    scheduler.scheduleAtFixedRate(new StatisticsTask(), 0, 15, TimeUnit.MINUTES);<newline46mondego>}<newline46mondego><newline46mondego>public void contextDestroyed(ServletContextEvent event) {<newline46mondego>    scheduler.shutdownNow();<newline46mondego>}<newline46mondego>"
"1404splitHere46","2249096splitHere46","javac -cp <doubleQuotes46>.<doubleQuotes46> com/david/Greet.java<newline46mondego>"
"1405splitHere46","2249148splitHere46","Clip shoot;<newline46mondego><newline46mondego>private loadShootWav()<newline46mondego>{<newline46mondego>    AudioInputStream sample;<newline46mondego>    sample = AudioSystem.getAudioInputStream(this.getClass().getResource(<doubleQuotes46>shoot.wav<doubleQuotes46>));<newline46mondego>    shoot = AudioSystem.getClip();<newline46mondego>    shoot.open(sample);<newline46mondego>}<newline46mondego><newline46mondego>public void playShootSFX()<newline46mondego>{<newline46mondego>    shoot.stop();<newline46mondego>    shoot.setFramePosition(0);<newline46mondego>    shoot.start(); <newline46mondego>}<newline46mondego>"
"1406splitHere46","2249526splitHere46","public static void shuffle(List<?> list, Random rnd) {<newline46mondego>    int size = list.size();<newline46mondego>    if (size < SHUFFLE_THRESHOLD || list instanceof RandomAccess) {<newline46mondego>        for (int i=size; i>1; i--)<newline46mondego>            swap(list, i-1, rnd.nextInt(i));<newline46mondego>    } else {<newline46mondego>        Object arr[] = list.toArray();<newline46mondego><newline46mondego>        // Shuffle array<newline46mondego>        for (int i=size; i>1; i--)<newline46mondego>            swap(arr, i-1, rnd.nextInt(i));<newline46mondego><newline46mondego>        // Dump array back into list<newline46mondego>        ListIterator it = list.listIterator();<newline46mondego>        for (int i=0; i<arr.length; i++) {<newline46mondego>            it.next();<newline46mondego>            it.set(arr[i]);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1407splitHere46","2249526splitHere46","private static void swap(Object[] x, int a, int b) {<newline46mondego>    Object t = x[a];<newline46mondego>    x[a] = x[b];<newline46mondego>    x[b] = t;<newline46mondego>}<newline46mondego>"
"1408splitHere46","2249644splitHere46","org.mortbay.jetty"
"1409splitHere46","2249649splitHere46","private final String[] datePatterns = {<doubleQuotes46>Yesterday<doubleQuotes46>,<doubleQuotes46>Today<doubleQuotes46>,<doubleQuotes46>Tomorrow<doubleQuotes46>, //etc<newline46mondego>        <doubleQuotes46>Sunday<doubleQuotes46>,<doubleQuotes46>Monday<doubleQuotes46>,<doubleQuotes46>Tuesday<doubleQuotes46>,<doubleQuotes46>Thursday<doubleQuotes46>,<doubleQuotes46>Friday<doubleQuotes46>, // etc<newline46mondego>         <doubleQuotes46>Lundi<doubleQuotes46>,<doubleQuotes46>Mardi<doubleQuotes46>,<doubleQuotes46>Mercredi<doubleQuotes46>, //etc in French<newline46mondego>        <doubleQuotes46>2001<doubleQuotes46>,<doubleQuotes46>2002<doubleQuotes46>, // all the years <newline46mondego>        <doubleQuotes46>AM<doubleQuotes46>,<doubleQuotes46>PM<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>January<doubleQuotes46>,<doubleQuotes46>February<doubleQuotes46>,<doubleQuotes46>March<doubleQuotes46>,<doubleQuotes46>August<doubleQuotes46>};<newline46mondego>private List lx  = new ArrayList();<newline46mondego><newline46mondego><newline46mondego>public boolean mayContainDates(String toCheck)<newline46mondego>{<newline46mondego>toCheck = toCheck.toUpperCase();<newline46mondego><newline46mondego>// irl we'd build this list 1 time in the constructor<newline46mondego>for(int i = 0; i < datePatterns.length; i++)<newline46mondego>{<newline46mondego>lx.add(datePatterns[i].toUpperCase()); <newline46mondego>}<newline46mondego><newline46mondego>   Iterator lit = lx.iterator();<newline46mondego><newline46mondego>    while(lit.hasNext())<newline46mondego>    {    <newline46mondego>    if (toCheck.contains((String) lit.next())<newline46mondego>    {<newline46mondego>    return true;<newline46mondego>    }<newline46mondego>    }<newline46mondego><newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"1410splitHere46","2249655splitHere46","am"
"1411splitHere46","2249655splitHere46","<manifest xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46> package=<doubleQuotes46>com.example.MyApp<doubleQuotes46>><newline46mondego>    <application android:icon=<doubleQuotes46>@drawable/icon<doubleQuotes46>><newline46mondego>        <activity class=<doubleQuotes46>.MyMainActivity<doubleQuotes46> android:label=<doubleQuotes46>@string/app_name<doubleQuotes46>><newline46mondego>            <intent-filter><newline46mondego>                <action android:value=<doubleQuotes46>android.intent.action.MAIN<doubleQuotes46> /><newline46mondego>                <category android:value=<doubleQuotes46>android.intent.category.LAUNCHER<doubleQuotes46> /><newline46mondego>            </intent-filter><newline46mondego>        </activity><newline46mondego>    </application><newline46mondego>    ...<newline46mondego></manifest><newline46mondego>"
"1412splitHere46","2249655splitHere46","adb shell am start -a android.intent.action.MAIN -n com.example.MyApp/.MyMainActivity<newline46mondego>"
"1413splitHere46","2249655splitHere46","adb wait-for-device shell am start -a android.intent.action.MAIN -n com.example.MyApp/.MyMainActivity<newline46mondego>"
"1414splitHere46","2249655splitHere46","Intent"
"1415splitHere46","2249655splitHere46","Activity"
"1416splitHere46","2249655splitHere46","usage: am [start|broadcast|instrument|profile]<newline46mondego>       am start [-D] INTENT<newline46mondego>       am broadcast INTENT<newline46mondego>       am instrument [-r] [-e <ARG_NAME> <ARG_VALUE>] [-p <PROF_FILE>]<newline46mondego>                [-w] <COMPONENT> <newline46mondego>       am profile <PROCESS> [start <PROF_FILE>|stop]<newline46mondego><newline46mondego>       INTENT is described with:<newline46mondego>                [-a <ACTION>] [-d <DATA_URI>] [-t <MIME_TYPE>]<newline46mondego>                [-c <CATEGORY> [-c <CATEGORY>] ...]<newline46mondego>                [-e|--es <EXTRA_KEY> <EXTRA_STRING_VALUE> ...]<newline46mondego>                [--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> ...]<newline46mondego>                [-e|--ei <EXTRA_KEY> <EXTRA_INT_VALUE> ...]<newline46mondego>                [-n <COMPONENT>] [-f <FLAGS>] [<URI>]<newline46mondego>"
"1417splitHere46","2249728splitHere46","com.service.SempediaSearchManager"
"1418splitHere46","2249728splitHere46","/WEB-INF/Sempedia-service.xml"
"1419splitHere46","2249728splitHere46","/WEB-INF/classes"
"1420splitHere46","2249728splitHere46","/WEB-INF/lib"
"1421splitHere46","2249728splitHere46","ClassDefNotFoundException"
"1422splitHere46","2249728splitHere46","Class.forName()"
"1423splitHere46","2249728splitHere46","ClassDefNotFoundException"
"1424splitHere46","2249871splitHere46","void parseStringWithSAX (String xmlString, ContentHandler handler)<newline46mondego>    throws TransformerConfigurationException, TransformerException  {<newline46mondego>    Source source = new StreamSource (new StringReader (xmlString));<newline46mondego>    Result result = new SAXResult (handler);<newline46mondego>    TransformerFactory tf = TransformerFactory.newInstance();<newline46mondego>    Transformer t = tf.newTransformer();<newline46mondego>    t.transform(source, result);<newline46mondego>}<newline46mondego>"
"1425splitHere46","2249933splitHere46","AclEntry entry = new AclEntry();<newline46mondego>entry.setScope(new AclScope(AclScope.Type.USER, <doubleQuotes46>jdoe@gmail.com<doubleQuotes46>));<newline46mondego>entry.setRole(CalendarAclRole.READ);<newline46mondego><newline46mondego>URL aclUrl =<newline46mondego>  new URL(<doubleQuotes46>http://www.google.com/calendar/feeds/jo@gmail.com/acl/full<doubleQuotes46>);<newline46mondego><newline46mondego>AclEntry insertedEntry = service.insert(aclUrl, entry);<newline46mondego>"
"1426splitHere46","2250056splitHere46","for( Object o : safe( list ) ) {<newline46mondego>   // do whatever <newline46mondego> }<newline46mondego>"
"1427splitHere46","2250056splitHere46","safe"
"1428splitHere46","2250056splitHere46","public static List safe( List other ) {<newline46mondego>    return other == null ? Collections.EMPTY_LIST : other;<newline46mondego>}<newline46mondego>"
"1429splitHere46","2250124splitHere46","iterator.remove()"
"1430splitHere46","2250124splitHere46","list.remove(iterator.next())"
"1431splitHere46","2250436splitHere46","public ModelAndView handleFormPost(WebRequest request) {<newline46mondego>   request.getParameter(<doubleQuotes46>key<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"1432splitHere46","2250436splitHere46","public ModelAndView handleFormPost(@RequestParam String key) {<newline46mondego><newline46mondego>}<newline46mondego>"
"1433splitHere46","2250436splitHere46","@RequestMapping"
"1434splitHere46","2250441splitHere46","LocalDateTime"
"1435splitHere46","2250441splitHere46","float"
"1436splitHere46","2250441splitHere46","Comparable<T>"
"1437splitHere46","2250441splitHere46","Collections.sort"
"1438splitHere46","2250441splitHere46","Comparable<Foo>"
"1439splitHere46","2250441splitHere46","Foo"
"1440splitHere46","2250441splitHere46","public int compareTo(Foo other)<newline46mondego>{<newline46mondego>    if (other == null)<newline46mondego>    {<newline46mondego>        throw new NullPointerException();<newline46mondego>    }<newline46mondego>    if (year < other.year)<newline46mondego>    {<newline46mondego>        return -1;<newline46mondego>    }<newline46mondego>    if (year > other.year)<newline46mondego>    {<newline46mondego>        return 1;<newline46mondego>    }<newline46mondego>    if (month < other.month)<newline46mondego>    {<newline46mondego>        return -1;<newline46mondego>    }<newline46mondego>    if (month > other.month)<newline46mondego>    {<newline46mondego>        return 1;<newline46mondego>    }<newline46mondego>    // etc<newline46mondego>    // If we haven't returned after comparing everything<newline46mondego>    // then the values must be equal<newline46mondego>    return 0;<newline46mondego>}<newline46mondego>"
"1441splitHere46","2250441splitHere46","Comparer<T>"
"1442splitHere46","2250441splitHere46","Comparable<T>"
"1443splitHere46","2250441splitHere46","Comparer<T>"
"1444splitHere46","2250502splitHere46","saxParser.parse( thexml , new DefaultHandler() );<newline46mondego>"
"1445splitHere46","2250502splitHere46","saxParser.parse( thexml , new MyFreakingHandler() );<newline46mondego>"
"1446splitHere46","2250502splitHere46","public void startDocument () throws SAXException<newline46mondego>public void endElement (String name) throws SAXException<newline46mondego>"
"1447splitHere46","2250655splitHere46","e.printStackTrace()"
"1448splitHere46","2250655splitHere46","Log.e(....,....,e);"
"1449splitHere46","2250655splitHere46","logcat"
"1450splitHere46","2250683splitHere46","WelcomeActionBean"
"1451splitHere46","2250683splitHere46","NameBasedActionResolver"
"1452splitHere46","2250683splitHere46","/myapp/Welcome.action"
"1453splitHere46","2250683splitHere46","/Welcome.action"
"1454splitHere46","2250683splitHere46","ActionBean"
"1455splitHere46","2250683splitHere46","/welcome.jsp"
"1456splitHere46","2250683splitHere46","NameBasedActionResolver"
"1457splitHere46","2250683splitHere46","/WEB-INF/jsp"
"1458splitHere46","2250683splitHere46","/myapp/Welcome.action"
"1459splitHere46","2250683splitHere46","/Welcome.action"
"1460splitHere46","2250683splitHere46","NameBasedActionResolver"
"1461splitHere46","2250683splitHere46","action"
"1462splitHere46","2250683splitHere46","package myapp.action;<newline46mondego><newline46mondego><newline46mondego>import net.sourceforge.stripes.action.*;<newline46mondego><newline46mondego><newline46mondego>public class WelcomeActionBean extends MyAppActionBean {<newline46mondego>    @DefaultHandler<newline46mondego>    public Resolution view() {<newline46mondego>        return new ForwardResolution(<doubleQuotes46>/WEB-INF/jsp/welcome.jsp<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1463splitHere46","2250683splitHere46","@UrlBinding"
"1464splitHere46","2250683splitHere46","package myapp;<newline46mondego><newline46mondego><newline46mondego>import net.sourceforge.stripes.action.*;<newline46mondego><newline46mondego><newline46mondego>@UrlBinding(<doubleQuotes46>/Welcome.action<doubleQuotes46>)<newline46mondego>public class WelcomeActionBean extends MyAppActionBean {<newline46mondego>    @DefaultHandler<newline46mondego>    public Resolution view() {<newline46mondego>        return new ForwardResolution(<doubleQuotes46>/WEB-INF/jsp/welcome.jsp<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1465splitHere46","2250721splitHere46","cmd2.CommandText = string.Format(<doubleQuotes46>insert into {0} values ({1});<doubleQuotes46>, TableName, string.Join(<doubleQuotes46>,<doubleQuotes46>, insertvalues));<newline46mondego>"
"1466splitHere46","2250778splitHere46","parse"
"1467splitHere46","2250778splitHere46","InputSource"
"1468splitHere46","2250778splitHere46","StringReader"
"1469splitHere46","2250778splitHere46","InputSource source = new InputSource(new StringReader(thexml));<newline46mondego>saxParser.parse(source, handler);<newline46mondego>"
"1470splitHere46","2250793splitHere46","http://server:port/bridge/services/ClassName/MethodName?parameter=value&anotherparam=value"
"1471splitHere46","2250798splitHere46","SELECT * FROM .."
"1472splitHere46","2250798splitHere46","List"
"1473splitHere46","2250798splitHere46","HashBag"
"1474splitHere46","2250798splitHere46","getCount()"
"1475splitHere46","2250798splitHere46","equals()"
"1476splitHere46","2250798splitHere46","true"
"1477splitHere46","2251022splitHere46","JFileChooser"
"1478splitHere46","2251107splitHere46","GraphicsEnvironment e = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>Font[] fonts = e.getAllFonts(); // Get the fonts<newline46mondego>"
"1479splitHere46","2251195splitHere46","assertTrue(Pattern.compile(<doubleQuotes46>[^a-zA-Z0-9]<doubleQuotes46>).matcher(<doubleQuotes46>abc;<doubleQuotes46>).find());<newline46mondego>"
"1480splitHere46","2251304splitHere46","ThreadPoolExecutor"
"1481splitHere46","2251304splitHere46","BlockingQueue"
"1482splitHere46","2251379splitHere46","public interface PermissionType{}<newline46mondego>"
"1483splitHere46","2251379splitHere46","public enum Permission implements PermissionType<newline46mondego>[...]<newline46mondego>"
"1484splitHere46","2251379splitHere46","PermissionType"
"1485splitHere46","2251420splitHere46","staffID"
"1486splitHere46","2251420splitHere46","studentID"
"1487splitHere46","2251420splitHere46","Account"
"1488splitHere46","2251420splitHere46","accountID"
"1489splitHere46","2251420splitHere46","DataStorage"
"1490splitHere46","2251420splitHere46","Collection"
"1491splitHere46","2251420splitHere46","Staff"
"1492splitHere46","2251420splitHere46","Students"
"1493splitHere46","2251420splitHere46","Map"
"1494splitHere46","2251420splitHere46","List"
"1495splitHere46","2251420splitHere46","DataStorage"
"1496splitHere46","2251488splitHere46","config.ini"
"1497splitHere46","2251488splitHere46","Generate a default config.ini file"
"1498splitHere46","2251488splitHere46","[eclipse]\links\myplugins.link file<newline46mondego>content:<newline46mondego>path=C:/my/eclipse/plugins<newline46mondego>"
"1499splitHere46","2251488splitHere46","myPlugins<newline46mondego>   my.plugin.x.y.z<newline46mondego>     eclipse<newline46mondego>       features <newline46mondego>          ...<newline46mondego>       plugins<newline46mondego>          ...<newline46mondego>"
"1500splitHere46","2251488splitHere46","myPlugins"
"1501splitHere46","2251656splitHere46","HashMap"
"1502splitHere46","2251656splitHere46","if(this.in_first_name)"
"1503splitHere46","2251790splitHere46","ClassLoader#getResourceAsStream()"
"1504splitHere46","2251790splitHere46","InputStream"
"1505splitHere46","2251790splitHere46","Class-Path"
"1506splitHere46","2251790splitHere46","manifest.mf"
"1507splitHere46","2251790splitHere46","ClassLoader classLoader = Thread.currentThread().getContextClassLoader();<newline46mondego>InputStream input = classLoader.getResourceAsStream(<doubleQuotes46>config/info.txt<doubleQuotes46>);<newline46mondego>// Do your thing to read it.<newline46mondego>"
"1508splitHere46","2251790splitHere46","java.io.File"
"1509splitHere46","2251790splitHere46","ClassLoader#getResource()"
"1510splitHere46","2251790splitHere46","URL#toURI()"
"1511splitHere46","2251790splitHere46","File"
"1512splitHere46","2251790splitHere46","URI"
"1513splitHere46","2251790splitHere46","ClassLoader classLoader = Thread.currentThread().getContextClassLoader();<newline46mondego>URL url = classLoader.getResource(<doubleQuotes46>config/info.txt<doubleQuotes46>);<newline46mondego>File file = new File(url.toURI());<newline46mondego>// Do your thing with it.<newline46mondego>"
"1514splitHere46","2251790splitHere46","java.io"
"1515splitHere46","2251790splitHere46","java.util.Properties"
"1516splitHere46","2252140splitHere46","Long"
"1517splitHere46","2252140splitHere46","parseLong()"
"1518splitHere46","2252196splitHere46","/java"
"1519splitHere46","2252424splitHere46","<xs:import>"
"1520splitHere46","2252424splitHere46","schemaLocation"
"1521splitHere46","2252424splitHere46","B.xsd"
"1522splitHere46","2252424splitHere46","http://blah.org"
"1523splitHere46","2252424splitHere46","A.xsd"
"1524splitHere46","2252424splitHere46","A.xsd"
"1525splitHere46","2252424splitHere46","B.xsd"
"1526splitHere46","2252424splitHere46","A.xsd"
"1527splitHere46","2252424splitHere46","B.xsd"
"1528splitHere46","2252424splitHere46","import"
"1529splitHere46","2252424splitHere46","include"
"1530splitHere46","2252424splitHere46","<xs:import>"
"1531splitHere46","2252424splitHere46","A.xsd"
"1532splitHere46","2252424splitHere46","B.xsd"
"1533splitHere46","2252424splitHere46","http://foo.org/A"
"1534splitHere46","2252424splitHere46","<xs:include>"
"1535splitHere46","2252424splitHere46","<xs:import>"
"1536splitHere46","2252424splitHere46","B.xsd"
"1537splitHere46","2252424splitHere46","http://foo.org/A"
"1538splitHere46","2252464splitHere46","&#13;&#10;"
"1539splitHere46","2252464splitHere46","&#13;&#10;"
"1540splitHere46","2252489splitHere46","web.xml"
"1541splitHere46","2252489splitHere46","<base>"
"1542splitHere46","2252489splitHere46","web.xml"
"1543splitHere46","2252489splitHere46","web.xml"
"1544splitHere46","2252489splitHere46","*.do"
"1545splitHere46","2252489splitHere46","web.xml"
"1546splitHere46","2252563splitHere46","<property name=<doubleQuotes46>key<doubleQuotes46> value=<doubleQuotes46>overwritten<doubleQuotes46>/>  <newline46mondego>"
"1547splitHere46","2252587splitHere46","BorderLayout"
"1548splitHere46","2252587splitHere46","JTabbedPane parent = new JTabbedPane();<newline46mondego>JPanel child = new JPanel(new BorderLayout());<newline46mondego><newline46mondego>// Create label with centrally aligned text (default is left).<newline46mondego>JLabel label = new JLabel(<doubleQuotes46>Hello, World<doubleQuotes46>, JLabel.CENTER_ALIGNMENT);<newline46mondego><newline46mondego>// Add label to center of the child panel.<newline46mondego>child.add(label, BorderLayout.CENTER);<newline46mondego><newline46mondego>// Add child panel as a tab within parent JTabbedPane.<newline46mondego>// The child panel will expand to fit the size of the tab.<newline46mondego>parent.addTab(<doubleQuotes46>My Tab<doubleQuotes46>, child);<newline46mondego>"
"1549splitHere46","2252587splitHere46","GridBagLayout"
"1550splitHere46","2252898splitHere46","String className = rc.getName();    <newline46mondego>String packageName = className.substring(0,className.lastIndexOf('.'));<newline46mondego>"
"1551splitHere46","2252898splitHere46","rc"
"1552splitHere46","2252898splitHere46","LoginHandler"
"1553splitHere46","2252898splitHere46","package blah;"
"1554splitHere46","2252898splitHere46","userlist.pl"
"1555splitHere46","2252898splitHere46","consultFromPackage()"
"1556splitHere46","2252951splitHere46","Student"
"1557splitHere46","2252951splitHere46","StudentGrade"
"1558splitHere46","2252951splitHere46","Student"
"1559splitHere46","2252951splitHere46","<list name=<doubleQuotes46>grades<doubleQuotes46>><newline46mondego>   <list-index column=<doubleQuotes46>idx<doubleQuotes46>/><newline46mondego></list><newline46mondego>"
"1560splitHere46","2252951splitHere46","StudentGrade"
"1561splitHere46","2252985splitHere46","item"
"1562splitHere46","2252985splitHere46","String"
"1563splitHere46","2252985splitHere46","nodeFace"
"1564splitHere46","2252985splitHere46","item"
"1565splitHere46","2252985splitHere46","item"
"1566splitHere46","2252985splitHere46","public class Item {<newline46mondego>    private String type; //getter+setter<newline46mondego>    private String folder; //getter+setter<newline46mondego>    private String contfile; //getter+setter<newline46mondego>}<newline46mondego>"
"1567splitHere46","2252985splitHere46","treeNodes"
"1568splitHere46","2252985splitHere46","rootNode"
"1569splitHere46","2252985splitHere46","rootNode = new TreeNodeImpl<Item>();<newline46mondego>for (some loop here) {<newline46mondego>    TreeNode<Item> node = new TreeNodeImpl<Item>();<newline46mondego>    Item item = ..; //get or create the item;<newline46mondego>    node.setData(item);<newline46mondego>    node.setParent(rootNode);<newline46mondego>    rootNode.addChild(<doubleQuotes46>someIdentifier<doubleQuotes46>, node);<newline46mondego>}<newline46mondego>"
"1570splitHere46","2253314splitHere46","=="
"1571splitHere46","2253314splitHere46",".equals"
"1572splitHere46","2253314splitHere46","Object[] objs = new Object[] { 1, 2, 4 }<newline46mondego>"
"1573splitHere46","2253365splitHere46","gem"
"1574splitHere46","2253365splitHere46","ScriptEngineManager manager = new ScriptEngineManager();<newline46mondego>ScriptEngine jRubyEngine = manager.getEngineByName(<doubleQuotes46>jruby<doubleQuotes46>);<newline46mondego>String s = <doubleQuotes46><newline46mondego>  require 'rubygems'<newline46mondego>  require 'rubygems/dependency_installer'<newline46mondego>  Gem::DependencyInstaller.new.install('cucumber')<newline46mondego><doubleQuotes46>;<newline46mondego>jRubyEngine.eval(s);<newline46mondego>"
"1575splitHere46","2253626splitHere46","ButtonGroup group = new ButtonGroup();<newline46mondego>group.add(birdButton);<newline46mondego>group.add(catButton);<newline46mondego>"
"1576splitHere46","2253633splitHere46","Collections.unmodifiableList(Arrays.asList(...))"
"1577splitHere46","2253633splitHere46","checkArgument(!foos.contains(null))"
"1578splitHere46","2253905splitHere46","ListCellRenderer"
"1579splitHere46","2253905splitHere46","import java.awt.Component;<newline46mondego>import javax.swing.DefaultListCellRenderer;<newline46mondego>import javax.swing.JList;<newline46mondego>import javax.swing.ListCellRenderer;<newline46mondego><newline46mondego>public class DynamicCellRenderer implements ListCellRenderer {<newline46mondego>    private final ListCellRenderer listCellRenderer;<newline46mondego>    private String displayMember;<newline46mondego><newline46mondego>    public DynamicCellRenderer(String displayMember) {<newline46mondego>        this(displayMember, new DefaultListCellRenderer());<newline46mondego>    }<newline46mondego><newline46mondego>    public DynamicCellRenderer(String displayMember, ListCellRenderer wrapped) {<newline46mondego>        listCellRenderer = wrapped;<newline46mondego>        this.displayMember = displayMember;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {<newline46mondego>        Object displayMemberValue = getDisplayMemberValue(value);<newline46mondego>        return listCellRenderer.getListCellRendererComponent(list, displayMemberValue, index, isSelected, cellHasFocus);<newline46mondego>    }<newline46mondego><newline46mondego>    private Object getDisplayMemberValue(Object value) {<newline46mondego>        // value is the domain class<newline46mondego>        // only works if display member is a method, TODO: fallback to field<newline46mondego>        // displayMember is something like <doubleQuotes46>getName<doubleQuotes46> -> value.getName() gets called<newline46mondego>        try {<newline46mondego>            return value.getClass().getMethod(displayMember).invoke(value);<newline46mondego>        } catch (Exception ex) {<newline46mondego>            // if anything went wrong it is the programmers fault -> propagate exception<newline46mondego>            throw new RuntimeException(ex);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public String getDisplayMember() {<newline46mondego>        return displayMember;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setDisplayMember(String displayMember) {<newline46mondego>        this.displayMember = displayMember;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1580splitHere46","2253905splitHere46","jListBox1.setCellRenderer(new DynamicCellRenderer(<doubleQuotes46>getName<doubleQuotes46>));<newline46mondego>...<newline46mondego>...<newline46mondego>// and later at some point<newline46mondego>((DynamicCellRenderer) jListBox1.getCellRenderer()).setDisplayMember(<doubleQuotes46>getEmail<doubleQuotes46>);<newline46mondego>"
"1581splitHere46","2253926splitHere46","Arrays.copyOfRange()"
"1582splitHere46","2253999splitHere46","Runtime.getRuntime().maxMemory();<newline46mondego>"
"1583splitHere46","2253999splitHere46","Runtime runtime = Runtime.getRuntime();<newline46mondego>long maxMemory = runtime.maxMemory();<newline46mondego>long allocatedMemory = runtime.totalMemory();<newline46mondego>long freeMemory = runtime.freeMemory();<newline46mondego>long totalFreeMemory = freeMemory + (maxMemory - allocatedMemory);<newline46mondego>long usedMemory = maxMemory - totalFreeMemory;<newline46mondego>"
"1584splitHere46","2254011splitHere46","if (Modifier.isAbstract(FooBar.class.getModifiers())) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"1585splitHere46","2254243splitHere46","<a href=<doubleQuotes46>http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/collect/Iterators.html#addAll(java.util.Collection,%20java.util.Iterator)<doubleQuotes46> rel=<doubleQuotes46>nofollow<doubleQuotes46>>Iterators.addAll(Collection, Iterator)</a>"
"1586splitHere46","2254379splitHere46","int nowYear = now.get(Calendar.YEAR);<newline46mondego>int nowMonth = now.get(Calendar.MONTH);<newline46mondego><newline46mondego>int startYear = now.get(Calendar.YEAR);<newline46mondego>int startMonth = now.get(Calendar.MONTH);<newline46mondego><newline46mondego>int monthsElapsed = (nowYear - startYear) * 12 + (nowMonth - startMonth);<newline46mondego>"
"1587splitHere46","2254463splitHere46","int"
"1588splitHere46","2254463splitHere46","Integer"
"1589splitHere46","2254753splitHere46","ArrayUtils.toObject( primitive[] )"
"1590splitHere46","2254753splitHere46","ArrayUtil.toPrimitive( wrapper[] )"
"1591splitHere46","2254832splitHere46","int i = 97;<newline46mondego>char c = (char)i; //c will contain 'a'<newline46mondego>"
"1592splitHere46","2254910splitHere46","<c:choose><newline46mondego>    <c:when test=<doubleQuotes46>${bean.name1 != bean.name2}<doubleQuotes46>><newline46mondego>        fields that are supposed to appear _only_ when name1 is different from name2<newline46mondego>    </c:when><newline46mondego></c:choose><newline46mondego>"
"1593splitHere46","2254938splitHere46","DataStorage"
"1594splitHere46","2254938splitHere46","public Student getStudent(String aAcc)<newline46mondego>{<newline46mondego>    return students.get(aAcc);<newline46mondego>}<newline46mondego>"
"1595splitHere46","2254938splitHere46","actionPerformed"
"1596splitHere46","2254938splitHere46","Student student = dataStorage.getStudent(tempUser);<newline46mondego>if (student != null && student.getPass().equals(tempPass))<newline46mondego>{<newline46mondego>    // login successful<newline46mondego>    ...<newline46mondego>} else {<newline46mondego>    // Login failed - display error message<newline46mondego>}<newline46mondego>"
"1597splitHere46","2254940splitHere46","\U"
"1598splitHere46","2254988splitHere46","a()"
"1599splitHere46","2254988splitHere46","public class SO {<newline46mondego><newline46mondego>    private static void a() {<newline46mondego>        a();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) throws InterruptedException {<newline46mondego>    final Thread t = new Thread( new Runnable() {<newline46mondego>        public void run() {<newline46mondego>            a();<newline46mondego>        }<newline46mondego>    });<newline46mondego>    t.start();<newline46mondego>    while ( true ) {<newline46mondego>        Thread.sleep( 2000 );<newline46mondego>        System.out.println( <doubleQuotes46>I'm still running @ <doubleQuotes46> + System.currentTimeMillis() );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1600splitHere46","2254988splitHere46","Exception in thread <doubleQuotes46>Thread-1<doubleQuotes46> java.lang.StackOverflowError"
"1601splitHere46","2255078splitHere46","PackageFooSuite"
"1602splitHere46","2255078splitHere46","ModuleFooSuite"
"1603splitHere46","2255078splitHere46","AllTestsSuite"
"1604splitHere46","2255078splitHere46","@RunWith(Suite.class)<newline46mondego>@Suite.SuiteClasses({ PackageFooSuite.class, PackageBarSuite.class} )<newline46mondego>public final class AllTestsSuite {} // or ModuleFooSuite, and that in AllTests<newline46mondego>"
"1605splitHere46","2255296splitHere46","{'profiles': [{'name':'john', 'age': 44}, {'name':'Alex','age':11}]}<newline46mondego>"
"1606splitHere46","2255296splitHere46","JSONObject myjson = new JSONObject(the_json);<newline46mondego>JSONArray the_json_array = myjson.getJSONArray(<doubleQuotes46>profiles<doubleQuotes46>);<newline46mondego>"
"1607splitHere46","2255296splitHere46","int size = the_json_array.length();<newline46mondego>    ArrayList<JSONObject> arrays = new ArrayList<JSONObject>();<newline46mondego>    for (int i = 0; i < size; i++) {<newline46mondego>        JSONObject another_json_object = the_json_array.getJSONObject(i);<newline46mondego>            //Blah blah blah...<newline46mondego>            arrays.add(another_json_object);<newline46mondego>    }<newline46mondego><newline46mondego>//Finally<newline46mondego>JSONObject[] jsons = new JSONObject[arrays.size()];<newline46mondego>arrays.toArray(jsons);<newline46mondego><newline46mondego>//The end...<newline46mondego>"
"1608splitHere46","2255296splitHere46","charAt(0)"
"1609splitHere46","2255296splitHere46","["
"1610splitHere46","2255525splitHere46","<c:if>"
"1611splitHere46","2255525splitHere46","<c:if test=<doubleQuotes46>${message.message != null}<doubleQuotes46>><newline46mondego>    <div class=<doubleQuotes46>msg<doubleQuotes46>>test1: ${message.message}</div><newline46mondego></c:if><newline46mondego><c:if test=<doubleQuotes46>${message.message != ''}<doubleQuotes46>><newline46mondego>    <div class=<doubleQuotes46>msg<doubleQuotes46>>test2: ${message.message}</div><newline46mondego></c:if><newline46mondego>"
"1612splitHere46","2255525splitHere46","<c:if test=<doubleQuotes46>${message.message}<doubleQuotes46>><newline46mondego>    <div class=<doubleQuotes46>msg<doubleQuotes46>>test3: ${message.message}</div><newline46mondego></c:if><newline46mondego>"
"1613splitHere46","2255792splitHere46","war/WEB-INF/lib"
"1614splitHere46","2255819splitHere46","List<Question>"
"1615splitHere46","2255819splitHere46","public class Questionnaire<newline46mondego>{<newline46mondego>    private final List<Question> questions;<newline46mondego><newline46mondego>    public Questionnaire(String[] words)<newline46mondego>    {<newline46mondego>        questions = new ArrayList<Question>();<newline46mondego>        for (String word : words)<newline46mondego>        {<newline46mondego>            questions.add(new Question(word));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // Use questions here<newline46mondego>}<newline46mondego>"
"1616splitHere46","2255819splitHere46","private final List questions;<newline46mondego><newline46mondego>    public Questionnaire(String[] words)<newline46mondego>    {<newline46mondego>        questions = new ArrayList();<newline46mondego>        for (String word : words)<newline46mondego>        {<newline46mondego>            questions.add(new Question(word));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1617splitHere46","2255819splitHere46","private final Vector questions;<newline46mondego><newline46mondego>    public Questionnaire(String[] words)<newline46mondego>    {<newline46mondego>        questions = new Vector();<newline46mondego>        for (String word : words)<newline46mondego>        {<newline46mondego>            questions.add(new Question(word));<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1618splitHere46","2255819splitHere46","private final Question[] questions;<newline46mondego><newline46mondego>    public Questionnaire(String[] words)<newline46mondego>    {<newline46mondego>        questions = new Question[words.length];<newline46mondego>        for (int i = 0; i < words.length; i++)<newline46mondego>        {<newline46mondego>            questions[i] = new Question(word);<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"1619splitHere46","2255893splitHere46","public boolean equals(Object o)<newline46mondego>{<newline46mondego>    if (o == this) return true;<newline46mondego>    if (o == null) return false;<newline46mondego>    if (o.getClass() != getClass()) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    ObjectNode other = (ObjectNode) o;<newline46mondego>    if (other.size() != size()) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    if (_children != null) {<newline46mondego>        for (Map.Entry<String, JsonNode> en : _children.entrySet()) {<newline46mondego>            String key = en.getKey();<newline46mondego>            JsonNode value = en.getValue();<newline46mondego><newline46mondego>            JsonNode otherValue = other.get(key);<newline46mondego><newline46mondego>            if (otherValue == null || !otherValue.equals(value)) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"1620splitHere46","2256073splitHere46","request.getSession()"
"1621splitHere46","2256073splitHere46","request.getSession(true)"
"1622splitHere46","2256073splitHere46","<%@page session=<doubleQuotes46>false<doubleQuotes46>%>"
"1623splitHere46","2256073splitHere46","HttpSession"
"1624splitHere46","2256073splitHere46","cookies"
"1625splitHere46","2256073splitHere46","false"
"1626splitHere46","2256073splitHere46","<Context>"
"1627splitHere46","2256073splitHere46","<Context cookies=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>"
"1628splitHere46","2256073splitHere46","getSession()"
"1629splitHere46","2256073splitHere46","HttpSession"
"1630splitHere46","2256073splitHere46","HttpSession"
"1631splitHere46","2256073splitHere46","url-pattern"
"1632splitHere46","2256073splitHere46","/*"
"1633splitHere46","2256073splitHere46","HttpServletRequest"
"1634splitHere46","2256073splitHere46","HttpServletRequestWrapper"
"1635splitHere46","2256073splitHere46","null"
"1636splitHere46","2256073splitHere46","UnsupportedOperationException"
"1637splitHere46","2256073splitHere46","getSession()"
"1638splitHere46","2256165splitHere46","viewBox=<doubleQuotes46><doubleQuotes46>"
"1639splitHere46","2256165splitHere46","<svg>"
"1640splitHere46","2256165splitHere46","viewBox=<doubleQuotes46><doubleQuotes46>"
"1641splitHere46","2256165splitHere46","width=<doubleQuotes46><doubleQuotes46>"
"1642splitHere46","2256165splitHere46","height=<doubleQuotes46><doubleQuotes46>"
"1643splitHere46","2256165splitHere46","<svg>"
"1644splitHere46","2256165splitHere46","getBBox()"
"1645splitHere46","2256323splitHere46","getFrame().setResizeable(false);<newline46mondego>"
"1646splitHere46","2256349splitHere46","SwingWorker"
"1647splitHere46","2256349splitHere46","jButton2MouseClicked"
"1648splitHere46","2256510splitHere46","request.getSession()"
"1649splitHere46","2256510splitHere46","Context"
"1650splitHere46","2256510splitHere46","<Context ...><newline46mondego>    <Manager className=<doubleQuotes46>com.example.SessionManager<doubleQuotes46>><newline46mondego>"
"1651splitHere46","2256510splitHere46","com.example.SessionManager"
"1652splitHere46","2256510splitHere46","org.apache.catalina.Manager"
"1653splitHere46","2256522splitHere46","out.println(nm)"
"1654splitHere46","2256522splitHere46","out.print(nm)"
"1655splitHere46","2256522splitHere46","println"
"1656splitHere46","2256522splitHere46","print"
"1657splitHere46","2256522splitHere46","print"
"1658splitHere46","2256522splitHere46","try"
"1659splitHere46","2256522splitHere46","finally"
"1660splitHere46","2256522splitHere46","close()"
"1661splitHere46","2256537splitHere46","Statement"
"1662splitHere46","2256537splitHere46","PreparedStatement"
"1663splitHere46","2256537splitHere46","private static final String SQL_INSERT = <doubleQuotes46>INSERT INTO CURRENT_WEATHER_US<doubleQuotes46><newline46mondego>    + <doubleQuotes46> VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)<doubleQuotes46>;<newline46mondego><newline46mondego>public void create(String cityCode, Weather weather) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego><newline46mondego>    try {<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(SQL_INSERT);<newline46mondego>        statement.setString(1, cityCode);<newline46mondego>        statement.setString(2, weather.getCity());<newline46mondego>        statement.setString(3, weather.getRegion());<newline46mondego>        // ...<newline46mondego>        statement.setString(20, weather.getForecastCode());<newline46mondego>        statement.executeUpdate();<newline46mondego>    } finally {<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1664splitHere46","2256739splitHere46","Modifier.isTransient(field.getModifiers());<newline46mondego>"
"1665splitHere46","2256739splitHere46","getDeclaredField(<doubleQuotes46>yourTransientField<doubleQuotes46>)"
"1666splitHere46","2256876splitHere46","int"
"1667splitHere46","2256876splitHere46","int"
"1668splitHere46","2256914splitHere46","ByteBuffer bb = ByteBuffer.wrap(new byte[]{ 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3 });<newline46mondego>IntBuffer ib = bb.asIntBuffer();<newline46mondego><newline46mondego>int[] intArray = new int[ib.limit()];<newline46mondego>ib.get(intArray);<newline46mondego>"
"1669splitHere46","2256914splitHere46","ByteBuffer newBb = ByteBuffer.allocate(intArray.length*4);<newline46mondego>newBb.asIntBuffer().put(intArray);<newline46mondego>byte[] byteArray = newBb.array();<newline46mondego>"
"1670splitHere46","2257079splitHere46","URLConnection conn = urlNorthView.openConnection();<newline46mondego>InputStream in = conn.getInputStream();<newline46mondego>String contentType = conn.getHeaderField(<doubleQuotes46>Content-Type<doubleQuotes46>);<newline46mondego>if (!<doubleQuotes46>image/jpeg<doubleQuotes46>.equals(contentType)) {<newline46mondego>    // hack: assuming it's mime if not a raw image<newline46mondego>    int one = in.read();<newline46mondego>    if (one == -1) {<newline46mondego>        // stop??<newline46mondego>    }<newline46mondego>    int two = in.read();<newline46mondego>    while (two != -1 && !(two == 10 && one == 10)) {<newline46mondego>        one = two;<newline46mondego>        two = in.read();<newline46mondego>    }<newline46mondego>}<newline46mondego>// if it was mime, we've stripped off the mime headers<newline46mondego>// and should now get the image<newline46mondego>inputStream2Disk(in);<newline46mondego>"
"1671splitHere46","2257204splitHere46","(w/2, w/2)"
"1672splitHere46","2257204splitHere46","(h/2, h/2)"
"1673splitHere46","2257204splitHere46","translate; rotate; translate"
"1674splitHere46","2257204splitHere46","AffineTransform xform = new AffineTransform();<newline46mondego>xform.translate(0.5*h, 0.5*w);<newline46mondego>xform.rotate(theta);<newline46mondego>xform.translate(-0.5*w, -0.5*h);<newline46mondego>"
"1675splitHere46","2257204splitHere46","getQuadrantRotateInstance"
"1676splitHere46","2257204splitHere46","getRotateInstance"
"1677splitHere46","2257662splitHere46","FinishHandler"
"1678splitHere46","2257662splitHere46","btnFinish"
"1679splitHere46","2257662splitHere46","DataStorage"
"1680splitHere46","2257662splitHere46","btnFinish"
"1681splitHere46","2257662splitHere46","itemStateChanged"
"1682splitHere46","2257662splitHere46","actionPerformed"
"1683splitHere46","2257662splitHere46","DataStorage"
"1684splitHere46","2257662splitHere46","actionPerformed"
"1685splitHere46","2257662splitHere46","itemStateChanged"
"1686splitHere46","2257662splitHere46","actionPerformed"
"1687splitHere46","2257662splitHere46","DataStorage"
"1688splitHere46","2257793splitHere46","static String[] currentElections = new String[ 100 ];<newline46mondego>"
"1689splitHere46","2257793splitHere46","static List<String > currentElections = new ArrayList<String >();<newline46mondego><newline46mondego>public String electionServer(String input) {<newline46mondego>    // save currently running elections    <newline46mondego>    currentElections.add( input );<newline46mondego>}<newline46mondego>"
"1690splitHere46","2257793splitHere46","static List<String > currentElections = <newline46mondego>    Collections.synchronizedList( new ArrayList<String >() );<newline46mondego>"
"1691splitHere46","2257830splitHere46","<dirset dir=<doubleQuotes46>aDirectory<doubleQuotes46>><newline46mondego>    <include name=<doubleQuotes46>a/package/**<doubleQuotes46>/><newline46mondego>    <exclude name=<doubleQuotes46>**/package/to/exclude**<doubleQuotes46>/><newline46mondego></dirset><newline46mondego>"
"1692splitHere46","2257908splitHere46","Runtime.getRuntime()"
"1693splitHere46","2257908splitHere46","Runtime"
"1694splitHere46","2258080splitHere46","new java.util.Timer().schedule( <newline46mondego>        new java.util.TimerTask() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                // your code here<newline46mondego>            }<newline46mondego>        }, <newline46mondego>        5000 <newline46mondego>);<newline46mondego>"
"1695splitHere46","2258276splitHere46","cmbProductName"
"1696splitHere46","2258276splitHere46","ResultSet"
"1697splitHere46","2258455splitHere46","collections.jcl"
"1698splitHere46","2258455splitHere46","object Example {<newline46mondego>  import scala.collection.jcl<newline46mondego><newline46mondego>  // Build the example data structure<newline46mondego>  val row1 = new java.util.ArrayList[Double]()<newline46mondego>  val row2 = new java.util.ArrayList[Double]()<newline46mondego>  val mat = new java.util.ArrayList[java.util.ArrayList[Double]]()<newline46mondego>  row1.add(1.0) ; row1.add(2.0) ; row2.add(3.0) ; row2.add(4.0)<newline46mondego>  mat.add(row1) ; mat.add(row2)<newline46mondego>  val named = new java.util.HashMap[String,java.util.ArrayList[java.util.ArrayList[Double]]]<newline46mondego>  named.put(<doubleQuotes46>matrix<doubleQuotes46>,mat)<newline46mondego><newline46mondego>  // This actually does the conversion<newline46mondego>  def asScala(thing: java.util.HashMap[String,java.util.ArrayList[java.util.ArrayList[Double]]]) = {<newline46mondego>    Map() ++ (new jcl.HashMap(thing)).map(kv => {<newline46mondego>      ( kv._1 ,<newline46mondego>        (new jcl.ArrayList(kv._2)).map(al => {<newline46mondego>          (new jcl.ArrayList(al)).toArray<newline46mondego>        }).toArray<newline46mondego>      )<newline46mondego>    })<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"1699splitHere46","2258455splitHere46",".toArray"
"1700splitHere46","2258455splitHere46","scala> Example.named<newline46mondego>res0: java.util.HashMap[String,java.util.ArrayList[java.util.ArrayList[Double]]] = {matrix=[[1.0, 2.0], [3.0, 4.0]]}<newline46mondego><newline46mondego>scala> val sc = Example.asScala(Example.named)<newline46mondego>sc: scala.collection.immutable.Map[String,Array[Array[Double]]] = Map(matrix -> Array([D@1ea817f, [D@dbd794))<newline46mondego><newline46mondego>scala> sc(<doubleQuotes46>matrix<doubleQuotes46>)(0)<newline46mondego>res1: Array[Double] = Array(1.0, 2.0)<newline46mondego><newline46mondego>scala> sc(<doubleQuotes46>matrix<doubleQuotes46>)(1)<newline46mondego>res2: Array[Double] = Array(3.0, 4.0)<newline46mondego>"
"1701splitHere46","2258546splitHere46","application.xml"
"1702splitHere46","2258620splitHere46","1      1<newline46mondego>   1 1      1<newline46mondego>             1<newline46mondego>"
"1703splitHere46","2258620splitHere46","5<newline46mondego>   3   6<newline46mondego>  9 2   1<newline46mondego>       4<newline46mondego>"
"1704splitHere46","2258620splitHere46","6<newline46mondego>   1<newline46mondego>  4<newline46mondego>"
"1705splitHere46","2258620splitHere46","const int size = 7; /* Size of the tree */<newline46mondego><newline46mondego>/* Given arrays */<newline46mondego>int post_order[size] = { 3 , 1 , 2 , 5 , 6 , 7 , 4 };<newline46mondego>int in_order[size] = { 3 , 2 , 1 , 4 , 5 , 7 , 6 };<newline46mondego><newline46mondego>/* Variables updated during recursion */<newline46mondego>int min_sum = 99999999; /* not initialized */<newline46mondego>int best_leaf = -1; /* not initialized */<newline46mondego><newline46mondego>/* Recursive descent */<newline46mondego>/* prb = post-order range begin, irb = in-order range begin, etc. */<newline46mondego>void min_sum_leaf(int acc, int prb, int irb, int len) {<newline46mondego>  if (len == 0) return; /* empty subtree */<newline46mondego>  if (len == 1) { /* leaf */<newline46mondego>    int sum = acc + in_order[irb];<newline46mondego>    if (sum<min_sum) { min_sum = sum; best_leaf = in_order[irb]; }<newline46mondego>    return;<newline46mondego>  }<newline46mondego>  /* non-leaf */<newline46mondego>  int subtree_root = post_order[prb + len - 1];<newline46mondego>  /* find the size of the left subtree */<newline46mondego>  int i;<newline46mondego>  for (i=0;i<len;i++) {<newline46mondego>    if (in_order[irb + i] == subtree_root) break;<newline46mondego>  }<newline46mondego>  /* Now i is the length of the left subtree, len - i - 1 of the right */<newline46mondego>  min_sum_leaf(acc + subtree_root, prb, irb, i);<newline46mondego>  min_sum_leaf(acc + subtree_root, prb + i, irb + i + 1, len - i - 1);<newline46mondego>}<newline46mondego><newline46mondego>/* Driver */<newline46mondego>int find_min_sum_leaf() {<newline46mondego>  min_sum = 99999999; best_leaf = -1;<newline46mondego>  min_sum_leaf(0, 0, 0, size);<newline46mondego>  return best_leaf;<newline46mondego>}<newline46mondego>"
"1706splitHere46","2258672splitHere46","java.net"
"1707splitHere46","2258672splitHere46","cacerts"
"1708splitHere46","2258672splitHere46","keytool"
"1709splitHere46","2258672splitHere46","javax.net.ssl.trustStore"
"1710splitHere46","2258672splitHere46","javax.net.ssl.trustStorePassword"
"1711splitHere46","2258994splitHere46","ScheduledThreadPoolExecutor"
"1712splitHere46","2258994splitHere46","Runnable"
"1713splitHere46","2258994splitHere46","Callable"
"1714splitHere46","2258994splitHere46","schedule"
"1715splitHere46","2258994splitHere46","synchronized"
"1716splitHere46","2259034splitHere46","private TreeNode searchNodeBeingDeleted(Comparable c, TreeNode node)<newline46mondego> {  <newline46mondego>  if(node == null) <newline46mondego>  {<newline46mondego>   return null;<newline46mondego>  }<newline46mondego><newline46mondego>  if(c.equals((Comparable)node.getValue()))<newline46mondego>  {<newline46mondego>   System.out.println(<doubleQuotes46>Here<doubleQuotes46>);<newline46mondego>   return node;<newline46mondego>  }<newline46mondego>  else<newline46mondego>  {<newline46mondego>   if(node.getLeft() != null)<newline46mondego>   {<newline46mondego>    System.out.println(<doubleQuotes46>left<doubleQuotes46>);<newline46mondego>    TreeNode n = searchNodeBeingDeleted(c, node.getLeft());<newline46mondego>    if (n != null) {<newline46mondego>      return n;<newline46mondego>    }<newline46mondego>   }<newline46mondego>   if(node.getRight() != null)<newline46mondego>   {<newline46mondego>    System.out.println(<doubleQuotes46>right<doubleQuotes46>);<newline46mondego>    TreeNode n = searchNodeBeingDeleted(c, node.getRight());<newline46mondego>    if (n != null) {<newline46mondego>      return n;<newline46mondego>    }<newline46mondego>   }<newline46mondego>  }<newline46mondego>  return null; //i think this gives me my null pointer at bottom<newline46mondego> }<newline46mondego>"
"1717splitHere46","2259041splitHere46","final String queryString = <doubleQuotes46>SELECT * <doubleQuotes46><newline46mondego>                + <doubleQuotes46>FROM ADRESY.MV_ULICE streets <doubleQuotes46><newline46mondego>"
"1718splitHere46","2259103splitHere46","Person found = null;<newline46mondego>for (Person person : listPeople)<newline46mondego>{<newline46mondego>    if (<doubleQuotes46>Anthares<doubleQuotes46>.equals(person.name))<newline46mondego>    {<newline46mondego>        found = person;<newline46mondego>        break;<newline46mondego>    }<newline46mondego>}<newline46mondego>// Check for found == null etc<newline46mondego>"
"1719splitHere46","2259103splitHere46","Person person = FakeLinq.findFirst(listPeople, new Predicate<Person>() {<newline46mondego>    @Override boolean matches(Person person) {<newline46mondego>        return person.name.equals(<doubleQuotes46>Anthares<doubleQuotes46>);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"1720splitHere46","2259179splitHere46","LocalDatastoreServiceTestConfig dsConfig = new LocalDatastoreServiceTestConfig();<newline46mondego>dsConfig.setBackingStoreLocation(<doubleQuotes46>local_db.bin<doubleQuotes46>);<newline46mondego>"
"1721splitHere46","2259179splitHere46","LocalDatastoreServiceTestConfig dsConfig = new LocalDatastoreServiceTestConfig();<newline46mondego>dsConfig.setBackingStoreLocation(<doubleQuotes46>C:\\local_db.bin<doubleQuotes46>);<newline46mondego>"
"1722splitHere46","2259300splitHere46","<applet archive=<doubleQuotes46>{{ MEDIA_URL }}applet.jar<doubleQuotes46> code=<doubleQuotes46>com.xxx.yyy.PApplet<doubleQuotes46> <newline46mondego>width=<doubleQuotes46>100<doubleQuotes46> height=<doubleQuotes46>20<doubleQuotes46>></applet><newline46mondego>"
"1723splitHere46","2259829splitHere46","JTable"
"1724splitHere46","2259829splitHere46","TableModel"
"1725splitHere46","2259829splitHere46","JTable"
"1726splitHere46","2259829splitHere46","DefaultTableModel"
"1727splitHere46","2259829splitHere46","MyTableModel model = new MyTableModel();<newline46mondego>// ...initialise model if required<newline46mondego>JTable table = new JTable(model);<newline46mondego>"
"1728splitHere46","2259863splitHere46","java.util.PriorityQueue"
"1729splitHere46","2259863splitHere46","Arrays.sort()"
"1730splitHere46","2259863splitHere46","Arrays.binarySearch()"
"1731splitHere46","2259938splitHere46","private Button newModButton() {<newline46mondego>    Button modButton = new Button(<doubleQuotes46>Modify<doubleQuotes46>);<newline46mondego>    modButton.addClickHandler(new ClickHandler() {<newline46mondego>        @Override<newline46mondego>        public void onClick(ClickEvent event) {<newline46mondego>            //TODO: link to a pop-up, and do a refresh on exit<newline46mondego>        }<newline46mondego>    });<newline46mondego>    return modButton;<newline46mondego>}<newline46mondego>"
"1732splitHere46","2259938splitHere46","currentTable.setWidget(4, 2, newModButton());<newline46mondego>"
"1733splitHere46","2259979splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.RenderingHints;<newline46mondego>import java.awt.event.MouseEvent;<newline46mondego>import java.awt.event.MouseMotionAdapter;<newline46mondego>import java.awt.event.MouseMotionListener;<newline46mondego>import java.awt.geom.AffineTransform;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego><newline46mondego>/**<newline46mondego> * @author Savvas Dalkitsis<newline46mondego> */<newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame f = new JFrame(<doubleQuotes46>Test<doubleQuotes46>);<newline46mondego>        final JRotation rot = new JRotation();<newline46mondego>        f.getContentPane().add(rot);<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.pack();<newline46mondego>        f.setVisible(true);<newline46mondego>        rot.addMouseMotionListener(new MouseMotionAdapter() {<newline46mondego>            @Override<newline46mondego>            public void mouseDragged(MouseEvent e) {<newline46mondego>                System.out.println(rot.getRotation());<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@SuppressWarnings(<doubleQuotes46>serial<doubleQuotes46>)<newline46mondego>class JRotation extends JPanel implements MouseMotionListener {<newline46mondego><newline46mondego>    private double rotation = 1;<newline46mondego>    public double getRotation() {<newline46mondego>        return rotation;<newline46mondego>    }<newline46mondego><newline46mondego>    public JRotation() {<newline46mondego>        setPreferredSize(new Dimension(100, 100));<newline46mondego>        addMouseMotionListener(this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        Graphics2D g2 = (Graphics2D)g.create();<newline46mondego>        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);<newline46mondego>        g2.setPaint(Color.white);<newline46mondego>        g2.fillRect(0, 0, getWidth(), getHeight());<newline46mondego>        g2.setPaint(Color.black);<newline46mondego>        AffineTransform t = g2.getTransform();<newline46mondego>        g2.translate(getWidth()/2, getHeight()/2);<newline46mondego>        g2.rotate(-rotation);<newline46mondego>        g2.drawLine(0, 0, Math.max(getWidth(),getHeight()), 0);<newline46mondego>        g2.setTransform(t);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void mouseDragged(MouseEvent e) {<newline46mondego>        int x = e.getX();<newline46mondego>        int y = e.getY();<newline46mondego>        int midX = getWidth() / 2;<newline46mondego>        int midY = getHeight() / 2;<newline46mondego>        if (x>midX) {<newline46mondego>            if (y>midY) { // fourth quadrant<newline46mondego>                rotation = 2*Math.PI - Math.atan((y-midY)/(double)(x-midX));<newline46mondego>            } else { // first quadrant<newline46mondego>                rotation = Math.atan((midY-y)/(double)(x-midX));<newline46mondego>            }<newline46mondego>        } else {<newline46mondego>            if (y>midY) { // third quarter<newline46mondego>                rotation = Math.PI + Math.atan((y-midY)/(double)(midX-x));<newline46mondego>            } else { // second quarter<newline46mondego>                rotation = Math.PI - Math.atan((midY-y)/(double)(midX-x));<newline46mondego>            }<newline46mondego>        }<newline46mondego>        repaint();<newline46mondego>    }<newline46mondego><newline46mondego>    public void mouseMoved(MouseEvent e) {}<newline46mondego><newline46mondego>}<newline46mondego>"
"1734splitHere46","2259995splitHere46","public abstract class Name<newline46mondego>{<newline46mondego>    private int id;<newline46mondego>    private String name;<newline46mondego>    // all attendant ctors and getter/setter stuff here.<newline46mondego>}<newline46mondego>"
"1735splitHere46","2260171splitHere46","javac"
"1736splitHere46","2260171splitHere46","-O3"
"1737splitHere46","2260171splitHere46","-O3"
"1738splitHere46","2260171splitHere46","real    0m0.003s<newline46mondego>user    0m0.000s<newline46mondego>sys     0m0.002s<newline46mondego>"
"1739splitHere46","2260171splitHere46","real    0m0.294s<newline46mondego>user    0m0.269s<newline46mondego>sys     0m0.051s<newline46mondego>"
"1740splitHere46","2260171splitHere46","0000000100000f18 pushq %rbp<newline46mondego>0000000100000f19 movq %rsp,%rbp<newline46mondego>0000000100000f1c movl %edi,0xec(%rbp)<newline46mondego>0000000100000f1f movq %rsi,0xe0(%rbp)<newline46mondego>0000000100000f23 movl $0x00000000,0xfc(%rbp)<newline46mondego>0000000100000f2a incl 0xfc(%rbp)<newline46mondego>0000000100000f2d movl $0x80000000,%eax<newline46mondego>0000000100000f32 cmpl %eax,0xfc(%rbp)<newline46mondego>0000000100000f35 jne  0x00000f2a<newline46mondego>0000000100000f37 movl $0x00000000,%eax<newline46mondego>0000000100000f3c leave<newline46mondego>0000000100000f3d ret<newline46mondego>"
"1741splitHere46","2260171splitHere46","-O3"
"1742splitHere46","2260171splitHere46","0000000100000f30 pushq %rbp<newline46mondego>0000000100000f31 movq %rsp,%rbp<newline46mondego>0000000100000f34 xorl %eax,%eax<newline46mondego>0000000100000f36 leave<newline46mondego>0000000100000f37 ret<newline46mondego>"
"1743splitHere46","2260171splitHere46","javap -c Loop"
"1744splitHere46","2260171splitHere46","public static void main(java.lang.String[]);<newline46mondego>  Code:<newline46mondego>   0:   iconst_0<newline46mondego>   1:   istore_1<newline46mondego>   2:   iload_1<newline46mondego>   3:   iinc    1, 1<newline46mondego>   6:   ldc #2; //int 2147483647<newline46mondego>   8:   if_icmpge   14<newline46mondego>   11:  goto    2<newline46mondego>   14:  return<newline46mondego><newline46mondego>}<newline46mondego>"
"1745splitHere46","2260345splitHere46","SimpleDateFormat"
"1746splitHere46","2260345splitHere46","DateFormat df = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'<doubleQuotes46>);<newline46mondego>df.setTimeZone(TimeZone.getTimeZone(<doubleQuotes46>UTC<doubleQuotes46>));<newline46mondego>System.out.println(df.format(new Date()));<newline46mondego>"
"1747splitHere46","2260345splitHere46","2010-02-14T06:38:48.920Z<newline46mondego>"
"1748splitHere46","2260350splitHere46","FileReader"
"1749splitHere46","2260350splitHere46","Reader reader = new InputStreamReader(new FileInputStream(fileName), <doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego>BufferedReader br = new BufferedReader(reader);<newline46mondego>"
"1750splitHere46","2260350splitHere46","utf-8"
"1751splitHere46","2260350splitHere46","cp1256"
"1752splitHere46","2260350splitHere46","cp1256"
"1753splitHere46","2260389splitHere46","binsearch(a,val,left,right){<newline46mondego>    if(left==right) return left;<newline46mondego>    mid = (left+right)/2;<newline46mondego>    if(a[mid] < val)<newline46mondego>        return binsearch(a,val,mid+1,right);<newline46mondego>    else<newline46mondego>        return binsearch(a,val,left,mid);<newline46mondego>}<newline46mondego>"
"1754splitHere46","2260389splitHere46","mid = (left+right+1)/2;<newline46mondego>"
"1755splitHere46","2260389splitHere46","binsearch(a,val,left,right){<newline46mondego>    if(left==right) return left;<newline46mondego>    mid = (left+right+1)/2;<newline46mondego>    if(a[mid] > val)<newline46mondego>        return binsearch(a,val,left,mid-1);<newline46mondego>    else<newline46mondego>        return binsearch(a,val,mid,right);<newline46mondego>}<newline46mondego>"
"1756splitHere46","2260443splitHere46","getWriter"
"1757splitHere46","2260443splitHere46","IllegalStateException"
"1758splitHere46","2260465splitHere46","Image image = new Image(myImageResource.getURL());<newline46mondego>image.setPixelSize(getLength(), getHeight());<newline46mondego>"
"1759splitHere46","2260465splitHere46","Image image = new Image(myImageResource.getURL());<newline46mondego>image.setPixelSize(newWidth, myImageResource.getHeight() * newWidth / myImageResource.getWidth());<newline46mondego>"
"1760splitHere46","2260465splitHere46","Image image = new Image(myImageResource.getSafeUri());<newline46mondego>image.setPixelSize(newWidth, myImageResource.getHeight() * newWidth / myImageResource.getWidth());<newline46mondego>"
"1761splitHere46","2260629splitHere46","class Foo {<newline46mondego><newline46mondego>   public synchronized void methodA () {<newline46mondego>      doSmth ();<newline46mondego>   }<newline46mondego><newline46mondego>   public synchronized void methodB () {<newline46mondego>      doSmthElse ();<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"1762splitHere46","2260629splitHere46","class Foo {<newline46mondego><newline46mondego>   public void methodA () {<newline46mondego>      synchronized (this) {<newline46mondego>         doSmth ();<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>   public void methodB () {<newline46mondego>      synchronized (this) {<newline46mondego>         doSmthElse ();<newline46mondego>      }<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"1763splitHere46","2260629splitHere46","class XYZ {<newline46mondego>   public static synchronized void someMethod () { ... }<newline46mondego>}<newline46mondego>"
"1764splitHere46","2260632splitHere46","<url>"
"1765splitHere46","2260632splitHere46","<url>"
"1766splitHere46","2260632splitHere46","child-A"
"1767splitHere46","2260656splitHere46","PreparedStatement pstmt = con.prepareStatement(<newline46mondego>                                 <doubleQuotes46>UPDATE EMPLOYEES SET SALARY = ? WHERE ID = ?<doubleQuotes46>);<newline46mondego>   pstmt.setBigDecimal(1, 153833.00)<newline46mondego>   pstmt.setInt(2, 110592)<newline46mondego>"
"1768splitHere46","2260656splitHere46","first"
"1769splitHere46","2260656splitHere46","last"
"1770splitHere46","2260663splitHere46","RequestContext.WEB_APPLICATION_CONTEXT_ATTRIBUTE"
"1771splitHere46","2260722splitHere46","Bitmap colorImage(Bitmap image, int color) {<newline46mondego>    int[] rgbData= new int[image.getWidth() * image.getHeight()];<newline46mondego>    image.getARGB(rgbData, <newline46mondego>                  0, <newline46mondego>                  image.getWidth(), <newline46mondego>                  0, <newline46mondego>                  0, <newline46mondego>                  image.getWidth(), <newline46mondego>                  image.getHeight());<newline46mondego>    for (int i = 0; i < rgbData.length; i++) {<newline46mondego>        int alpha = 0xFF000000 & rgbData[i];<newline46mondego>        if((rgbData[i] & 0x00FFFFFF) == 0x00000000)<newline46mondego>            rgbData[i]= alpha | color;<newline46mondego>    }<newline46mondego>    image.setARGB(rgbData,<newline46mondego>                  0, <newline46mondego>                  image.getWidth(),<newline46mondego>                  0,<newline46mondego>                  0,<newline46mondego>                  image.getWidth(),<newline46mondego>                  image.getHeight());<newline46mondego>    return image;<newline46mondego>}<newline46mondego>"
"1772splitHere46","2261120splitHere46","Atl+Shift+R"
"1773splitHere46","2261454splitHere46","request.setAttribute(<doubleQuotes46>result<doubleQuotes46>, yourArrayList);"
"1774splitHere46","2261454splitHere46","getServletContext().getRequestDispatcher(<doubleQuotes46>your.jsp<doubleQuotes46>)<newline46mondego>    .forward(request, response);<newline46mondego>"
"1775splitHere46","2261454splitHere46","<c:forEach items=<doubleQuotes46>${result}<doubleQuotes46> var=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>  ...<newline46mondego></c:forEach><newline46mondego>"
"1776splitHere46","2261454splitHere46","request.getAttribute(<doubleQuotes46>result<doubleQuotes46>)"
"1777splitHere46","2261454splitHere46","request.getSession().setAttribute(..)"
"1778splitHere46","2261454splitHere46","redirect()"
"1779splitHere46","2261454splitHere46","forward()"
"1780splitHere46","2261457splitHere46","Integer.MAX_VALUE"
"1781splitHere46","2261457splitHere46","long a, b, c;<newline46mondego>a = 2111000333;<newline46mondego>b = 1000222333;<newline46mondego>c = a + b;<newline46mondego>System.out.println(<doubleQuotes46>c= <doubleQuotes46> + c);<newline46mondego>"
"1782splitHere46","2261470splitHere46","Integer i;    <newline46mondego>i = new Integer(); // 1. create new object and make reference variable i refer to it.<newline46mondego>i = new Integer(); // 2. create another object and make reference variable i refer to it...there is no way to get to the object created in step1 so obj in step 1 is eligible for GC.<newline46mondego>"
"1783splitHere46","2261470splitHere46","class Test {<newline46mondego> public static void main(String...args) {<newline46mondego>  Vector v = new Vector(); // create a new vector.<newline46mondego>  while(true) {<newline46mondego>   v.addElement(new Integer(1)); // create a new Integer and add it to vector.<newline46mondego>  }<newline46mondego> }<newline46mondego>}<newline46mondego>"
"1784splitHere46","2261547splitHere46","// first midnight in this month<newline46mondego>DateMidnight first = new DateMidnight().withDayOfMonth(1);<newline46mondego><newline46mondego>// last midnight in this month<newline46mondego>DateMidnight last = first.plusMonths(1).minusDays(1);<newline46mondego>"
"1785splitHere46","2261547splitHere46","// first midnight in java.util.Date's month<newline46mondego>DateMidnight first = new DateMidnight( date ).withDayOfMonth(1);<newline46mondego>"
"1786splitHere46","2261886splitHere46","this.form.Resize -= new EventHandler(form_Resize); <newline46mondego>this.form.Resize += new EventHandler(form_Resize); <newline46mondego>"
"1787splitHere46","2262002splitHere46","import java.util.regex.*;<newline46mondego><newline46mondego>class A {<newline46mondego>        public static void main(String[] args) {<newline46mondego>                String s = <doubleQuotes46>this is a good example with 234 songs<doubleQuotes46>;<newline46mondego><newline46mondego><newline46mondego>                Pattern p = Pattern.compile(<doubleQuotes46>this is a (.*?) example with (\\d+) songs<doubleQuotes46>);<newline46mondego>                Matcher m = p.matcher(s);<newline46mondego>                if (m.matches()) {<newline46mondego>                        String kind = m.group(1);<newline46mondego>                        String nbr = m.group(2);<newline46mondego><newline46mondego>                        System.out.println(<doubleQuotes46>kind: <doubleQuotes46> + kind + <doubleQuotes46> nbr: <doubleQuotes46> + nbr);<newline46mondego>                }<newline46mondego>        }<newline46mondego>}<newline46mondego>"
"1788splitHere46","2262252splitHere46","library(rJava)<newline46mondego>.jinit()<newline46mondego># create a hash map<newline46mondego>hm<-.jnew(<doubleQuotes46>java/util/HashMap<doubleQuotes46>)<newline46mondego># using jrcall instead of jcall, since jrcall uses reflection to get types <newline46mondego>.jrcall(hm,<doubleQuotes46>put<doubleQuotes46>,<doubleQuotes46>one<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>)<newline46mondego>.jrcall(hm,<doubleQuotes46>put<doubleQuotes46>,<doubleQuotes46>two<doubleQuotes46>,<doubleQuotes46>2<doubleQuotes46>)<newline46mondego>.jrcall(hm,<doubleQuotes46>put<doubleQuotes46>,<doubleQuotes46>three<doubleQuotes46>, <doubleQuotes46>3<doubleQuotes46>)<newline46mondego><newline46mondego># convert to R list<newline46mondego>keySet<-.jrcall(hm,<doubleQuotes46>keySet<doubleQuotes46>)<newline46mondego>an_iter<-.jrcall(keySet,<doubleQuotes46>iterator<doubleQuotes46>)<newline46mondego>aList <- list()<newline46mondego>while(.jrcall(an_iter,<doubleQuotes46>hasNext<doubleQuotes46>)){<newline46mondego>  key <- .jrcall(an_iter,<doubleQuotes46>next<doubleQuotes46>);<newline46mondego>  aList[[key]] <- .jrcall(hm,<doubleQuotes46>get<doubleQuotes46>,key)<newline46mondego>}<newline46mondego>"
"1789splitHere46","2262455splitHere46","<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'<newline46mondego>             xmlns:g='urn:import:com.google.gwt.user.client.ui'><newline46mondego><newline46mondego>    <ui:with field='res' type='ru.atamur.resources.CommonBundle'/><newline46mondego><newline46mondego>    <g:HTMLPanel><newline46mondego>        <div class=<doubleQuotes46>{res.centerStyle.container}<doubleQuotes46>><newline46mondego>            <p class=<doubleQuotes46>{res.centerStyle.centered}<doubleQuotes46>><newline46mondego>                <g:Image resource='{res.loader}'/><newline46mondego>            </p><newline46mondego>        </div><newline46mondego>    </g:HTMLPanel><newline46mondego><newline46mondego></ui:UiBinder><newline46mondego>"
"1790splitHere46","2262455splitHere46",".container {<newline46mondego>    top: 0;<newline46mondego>    left: 0;<newline46mondego>    width: 100%;<newline46mondego>    height: 100%;<newline46mondego>    position: absolute;<newline46mondego>    display: table<newline46mondego>}<newline46mondego><newline46mondego>.centered {<newline46mondego>    display: table-cell;<newline46mondego>    vertical-align: middle;<newline46mondego>    text-align: center;<newline46mondego>}<newline46mondego>"
"1791splitHere46","2262455splitHere46","@UiField CommonBundle res;<newline46mondego><newline46mondego>public LoadingScreen() {<newline46mondego>    initWidget(uiBinder.createAndBindUi(this));<newline46mondego>    res.centerStyle().ensureInjected();<newline46mondego>}<newline46mondego>"
"1792splitHere46","2262571splitHere46","synchronized(monitor) {}"
"1793splitHere46","2262809splitHere46","Element"
"1794splitHere46","2262809splitHere46","createEditor()"
"1795splitHere46","2262809splitHere46","Label"
"1796splitHere46","2262809splitHere46","createEditor()"
"1797splitHere46","2262809splitHere46","Element"
"1798splitHere46","2262809splitHere46","createEditor()"
"1799splitHere46","2262809splitHere46","Element"
"1800splitHere46","2262809splitHere46","EditorFactory"
"1801splitHere46","2262809splitHere46","DefaultEditorFactory"
"1802splitHere46","2262809splitHere46","ListEditorFactory"
"1803splitHere46","2262809splitHere46","Element"
"1804splitHere46","2262809splitHere46","public Editor createEditor() {<newline46mondego>     editorFactory.createEditor(this);<newline46mondego>}<newline46mondego>"
"1805splitHere46","2262809splitHere46","EditorFactory"
"1806splitHere46","2262809splitHere46","createEditor(obj)"
"1807splitHere46","2262809splitHere46","Element obj = .."
"1808splitHere46","2262809splitHere46","Label obj = .."
"1809splitHere46","2262830splitHere46","long"
"1810splitHere46","2262830splitHere46","double"
"1811splitHere46","2262830splitHere46","myVar"
"1812splitHere46","2262830splitHere46","volatile"
"1813splitHere46","2262830splitHere46","setIt"
"1814splitHere46","2262830splitHere46","getIt"
"1815splitHere46","2262830splitHere46","synchronized"
"1816splitHere46","2262830splitHere46","myVar"
"1817splitHere46","2262830splitHere46","int"
"1818splitHere46","2262830splitHere46","myVar"
"1819splitHere46","2262830splitHere46","volatile"
"1820splitHere46","2262830splitHere46","setIt"
"1821splitHere46","2262830splitHere46","getIt"
"1822splitHere46","2262830splitHere46","synchronized"
"1823splitHere46","2262830splitHere46","getIt"
"1824splitHere46","2262830splitHere46","setIt"
"1825splitHere46","2262830splitHere46","x.setIt(x.getIt() * 2)"
"1826splitHere46","2262830splitHere46","synchronize"
"1827splitHere46","2262830splitHere46","synchronized(x)<newline46mondego>{<newline46mondego>  x.setIt(x.getIt() * 2);<newline46mondego>}<newline46mondego>"
"1828splitHere46","2262830splitHere46","getIt"
"1829splitHere46","2262830splitHere46","setIt"
"1830splitHere46","2262886splitHere46","SessionFactory"
"1831splitHere46","2262886splitHere46","EntityManagerFactory"
"1832splitHere46","2262886splitHere46","Configuration.buildMappings"
"1833splitHere46","2262886splitHere46","@RunWith(Theories.class)<newline46mondego>public class EntitiesAreValidTest {<newline46mondego><newline46mondego>    @DataPoints<newline46mondego>    public static Class<?>[] entities = new Class[] {<newline46mondego>        SimpleEntity.class,<newline46mondego>        SimpleEntityWithTransientField.class,<newline46mondego>        TwoFieldEntity.class<newline46mondego>    };<newline46mondego><newline46mondego>    @Theory<newline46mondego>    public void classHasValidConfiguration(Class<?> entityClass) {<newline46mondego><newline46mondego>        new AnnotationConfiguration().addAnnotatedClass(entityClass).buildMappings();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1834splitHere46","2263134splitHere46","transferFrom"
"1835splitHere46","2263246splitHere46","<persistence-unit name=<doubleQuotes46>WebApplicationSecurityPU<doubleQuotes46> transaction-type=<doubleQuotes46>RESOURCE_LOCAL<doubleQuotes46>><newline46mondego>"
"1836splitHere46","2263246splitHere46","@PersistenceUnit<newline46mondego>public EntityManagerFactory emf;<newline46mondego>public EntityManager em;<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>public EntityManager getEm() {<newline46mondego>    emf = Persistence.createEntityManagerFactory(<doubleQuotes46>WebApplicationSecurityPU<doubleQuotes46>);<newline46mondego>    em = emf.createEntityManager();<newline46mondego>    return em;<newline46mondego>}<newline46mondego><newline46mondego>public List fname (String id) {<newline46mondego><newline46mondego>    String fname = null;<newline46mondego>    List persons = null;<newline46mondego><newline46mondego><newline46mondego>    try {<newline46mondego>        System.out.println(<doubleQuotes46>test<doubleQuotes46>);<newline46mondego><newline46mondego>        em = this.getEm();<newline46mondego><newline46mondego><newline46mondego>        em.getTransaction().begin();<newline46mondego>        int m = em.createQuery(<doubleQuotes46>update Roleuser r set r.firstName = 'Jignesh H' where r.userID=9<doubleQuotes46>).executeUpdate();<newline46mondego><newline46mondego>        em.getTransaction().commit();<newline46mondego><newline46mondego><newline46mondego>    } catch(Exception e) {<newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46> + e);<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>        if(em != null) {<newline46mondego>            em.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return persons;<newline46mondego>}<newline46mondego>"
"1837splitHere46","2263486splitHere46","fill()"
"1838splitHere46","2263486splitHere46","Shape"
"1839splitHere46","2263486splitHere46","AlphaComposite"
"1840splitHere46","2263486splitHere46","Raster"
"1841splitHere46","2263486splitHere46","AlphaComposite.Xor"
"1842splitHere46","2263486splitHere46","Shape"
"1843splitHere46","2263486splitHere46","intersect()"
"1844splitHere46","2263486splitHere46","Shape"
"1845splitHere46","2263486splitHere46","getBounds2D()"
"1846splitHere46","2263486splitHere46","Shape s1, s2 ...<newline46mondego>Rectangle2D r1 = s1.getBounds2D();<newline46mondego>Rectangle2D r2 = s2.getBounds2D();<newline46mondego>Rectangle2D r3 = new Rectangle2D.Double();<newline46mondego>Rectangle2D.intersect(r1, r2, r3);<newline46mondego>double overlap = area(r3) / (area(r1) + area(r2));<newline46mondego>...<newline46mondego>private double area(Rectangle2D r) {<newline46mondego>    return r.getWidth() * r.getHeight();<newline46mondego>}<newline46mondego>"
"1847splitHere46","2263692splitHere46","&&"
"1848splitHere46","2263692splitHere46","||"
"1849splitHere46","2263944splitHere46","Map<String, String> env = System.getenv();"
"1850splitHere46","2264063splitHere46","invocation.getProxy().getMethod();<newline46mondego>"
"1851splitHere46","2264063splitHere46","ActionInvocation"
"1852splitHere46","2264096splitHere46","CometActor"
"1853splitHere46","2264174splitHere46","Class-Path"
"1854splitHere46","2264174splitHere46","META-INF/MANIFEST.MF"
"1855splitHere46","2264174splitHere46","Class-Path: servlet.jar ../foo/bar.jar acme/beans.jar<newline46mondego>"
"1856splitHere46","2264353splitHere46","// you already have this bit<newline46mondego>String templateText = tempLoader.getTemplateForCurrentLogin();<newline46mondego><newline46mondego>// now programmatically instantiate a template<newline46mondego>Template t = new Template(<doubleQuotes46>t<doubleQuotes46>, new StringReader(templateText), new Configuration());<newline46mondego><newline46mondego>// now use the Spring utility class to process it into a string<newline46mondego>// myData is your data model<newline46mondego>String output = FreeMarkerTemplateUtils.processTemplateIntoString(template, myData);<newline46mondego>"
"1857splitHere46","2264489splitHere46","TimerTask"
"1858splitHere46","2264677splitHere46","StringBuffer result = new StringBuffer();<newline46mondego>while (abbrev_matcher.find()) {<newline46mondego>    abbrev_matcher.appendReplacement(result, <doubleQuotes46><doubleQuotes46>);<newline46mondego>    result.append(abbrev_matcher.group().replaceAll(<doubleQuotes46>\\.<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>}<newline46mondego>abbrev_matcher.appendTail(result);<newline46mondego>"
"1859splitHere46","2264677splitHere46","appendReplacement(result, <doubleQuotes46><doubleQuotes46>)"
"1860splitHere46","2264677splitHere46","appendReplacement"
"1861splitHere46","2264677splitHere46","$1"
"1862splitHere46","2264677splitHere46","$2"
"1863splitHere46","2264677splitHere46","append"
"1864splitHere46","2264677splitHere46","getReplacement"
"1865splitHere46","2264677splitHere46","...blah..."
"1866splitHere46","2264677splitHere46",".blah."
"1867splitHere46","2264677splitHere46","deletecharAt(i)"
"1868splitHere46","2264677splitHere46","append"
"1869splitHere46","2264677splitHere46","try"
"1870splitHere46","2264677splitHere46","catch"
"1871splitHere46","2264805splitHere46","myclass.this"
"1872splitHere46","2265118splitHere46","ServletContextListener"
"1873splitHere46","2265118splitHere46","contextInitialized(..)"
"1874splitHere46","2265118splitHere46","web.xml"
"1875splitHere46","2265118splitHere46","<listener><newline46mondego>    <listener-class>com.example.MyServletContextListener</listener-class><newline46mondego></listener><newline46mondego>"
"1876splitHere46","2265118splitHere46","<load-on-startup>1</load-on-startup><newline46mondego>"
"1877splitHere46","2265118splitHere46","ServletContextListener"
"1878splitHere46","2265118splitHere46","public class MyServletContextListener implements ServletContextListener { .. }<newline46mondego>"
"1879splitHere46","2265156splitHere46","Frame"
"1880splitHere46","2265156splitHere46","JFrame"
"1881splitHere46","2265156splitHere46","Frame.getIconImage"
"1882splitHere46","2265308splitHere46","HashMap map = new HashMap();<newline46mondego>Object[][] arr = new Object[map.size()][2];<newline46mondego>Set entries = map.entrySet();<newline46mondego>Iterator entriesIterator = entries.iterator();<newline46mondego><newline46mondego>int i = 0;<newline46mondego>while(entriesIterator.hasNext()){<newline46mondego><newline46mondego>    Map.Entry mapping = (Map.Entry) entriesIterator.next();<newline46mondego><newline46mondego>    arr[i][0] = mapping.getKey();<newline46mondego>    arr[i][1] = mapping.getValue();<newline46mondego><newline46mondego>    i++;<newline46mondego>}<newline46mondego>"
"1883splitHere46","2265597splitHere46","rec"
"1884splitHere46","2265597splitHere46","rec = new Rectangle()"
"1885splitHere46","2265637splitHere46","Map"
"1886splitHere46","2265637splitHere46","MyClass"
"1887splitHere46","2265637splitHere46","importantField"
"1888splitHere46","2265637splitHere46","hashCode"
"1889splitHere46","2265637splitHere46","equals"
"1890splitHere46","2265637splitHere46","public class MyClass {<newline46mondego><newline46mondego>    private final String importantField;<newline46mondego>    private final String anotherField;<newline46mondego><newline46mondego>    public MyClass(final String equalField, final String anotherField) {<newline46mondego>        this.importantField = equalField;<newline46mondego>        this.anotherField = anotherField;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getEqualField() {<newline46mondego>        return importantField;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getAnotherField() {<newline46mondego>        return anotherField;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        final int prime = 31;<newline46mondego>        int result = 1;<newline46mondego>        result = prime * result<newline46mondego>                + ((importantField == null) ? 0 : importantField.hashCode());<newline46mondego>        return result;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(final Object obj) {<newline46mondego>        if (this == obj)<newline46mondego>            return true;<newline46mondego>        if (obj == null)<newline46mondego>            return false;<newline46mondego>        if (getClass() != obj.getClass())<newline46mondego>            return false;<newline46mondego>        final MyClass other = (MyClass) obj;<newline46mondego>        if (importantField == null) {<newline46mondego>            if (other.importantField != null)<newline46mondego>                return false;<newline46mondego>        } else if (!importantField.equals(other.importantField))<newline46mondego>            return false;<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"1891splitHere46","2265637splitHere46","hashCode"
"1892splitHere46","2265637splitHere46","MyClass first = new MyClass(<doubleQuotes46>a<doubleQuotes46>,<doubleQuotes46>first<doubleQuotes46>);<newline46mondego>MyClass second = new MyClass(<doubleQuotes46>a<doubleQuotes46>,<doubleQuotes46>second<doubleQuotes46>);<newline46mondego>"
"1893splitHere46","2265637splitHere46","hashCode"
"1894splitHere46","2265637splitHere46","myMap.put(first,someValue)"
"1895splitHere46","2265637splitHere46","hashCode"
"1896splitHere46","2265637splitHere46","myMap.put(second,someOtherValue)"
"1897splitHere46","2265637splitHere46","second"
"1898splitHere46","2265637splitHere46","k"
"1899splitHere46","2265637splitHere46","second.equals(k)"
"1900splitHere46","2265637splitHere46","second.equals(first)"
"1901splitHere46","2265637splitHere46","false"
"1902splitHere46","2265637splitHere46","equals"
"1903splitHere46","2265637splitHere46","equals"
"1904splitHere46","2265637splitHere46","myMap.put(first,someValue)"
"1905splitHere46","2265637splitHere46","myMap.put(second,someOtherValue)"
"1906splitHere46","2265637splitHere46","hashCode"
"1907splitHere46","2265890splitHere46","byte[] bytes = unicode.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"1908splitHere46","2265890splitHere46","Charset"
"1909splitHere46","2265890splitHere46","byte[] bytes = unicode.getBytes(Charsets.UTF_8);<newline46mondego>"
"1910splitHere46","2265890splitHere46","UnsupportedEncodingException"
"1911splitHere46","2265890splitHere46","final static Charset UTF_8 = Charset.forName(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"1912splitHere46","2266069splitHere46","public static double parse(String str) throws ParseException {<newline46mondego>  NumberFormat formatter = NumberFormat.getInstance();<newline46mondego>  ParsePosition position = new ParsePosition(0);<newline46mondego>  Number number = formatter.parse(str, position);<newline46mondego>  if (position.getIndex() != str.length()) {<newline46mondego>    throw new ParseException(<doubleQuotes46>failed to parse entire string: <doubleQuotes46> + str, position.getIndex());<newline46mondego>  }<newline46mondego>  return number.doubleValue();<newline46mondego>} <newline46mondego>"
"1913splitHere46","2266081splitHere46","BitSet"
"1914splitHere46","2266081splitHere46","enum"
"1915splitHere46","2266081splitHere46","EnumSet"
"1916splitHere46","2266081splitHere46","BitSet"
"1917splitHere46","2266247splitHere46","package com.xxx.Trial;<newline46mondego><newline46mondego>import org.opencms.file.*;<newline46mondego>import org.opencms.main.*;<newline46mondego>import org.opencms.scheduler.I_CmsScheduledJob;<newline46mondego>import java.text.SimpleDateFormat;<newline46mondego>import java.util.Calendar;<newline46mondego><newline46mondego><newline46mondego>public class BuildTagCloud implements I_CmsScheduledJob {<newline46mondego>  private String text;<newline46mondego><newline46mondego>  public String launch(CmsObject object, java.util.Map parameters) throws java.lang.Exception {<newline46mondego>   Calendar cal = Calendar.getInstance();<newline46mondego>   SimpleDateFormat sdf = new SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego><newline46mondego>   String data = <doubleQuotes46>Last run: <doubleQuotes46> + sdf.format(cal.getTime());<newline46mondego>   this.text = data;<newline46mondego><newline46mondego>   String resname = <doubleQuotes46>/system/modules/com.xxx.Trial/elements/file.jsp<doubleQuotes46>;<newline46mondego>   // CmsObject object = OpenCms.initCmsObject(<doubleQuotes46>Guest<doubleQuotes46>);<newline46mondego>   object.loginUser(<doubleQuotes46>Admin<doubleQuotes46>, <doubleQuotes46>admin's password<doubleQuotes46>);<newline46mondego><newline46mondego>   CmsRequestContext cmsContext = object.getRequestContext();<newline46mondego>   CmsProject curProject = cmsContext.currentProject();<newline46mondego><newline46mondego>   if(curProject.isOnlineProject()){<newline46mondego>         CmsProject offlineProject = object.readProject(<doubleQuotes46>Offline<doubleQuotes46>);<newline46mondego>         cmsContext.setCurrentProject(offlineProject);<newline46mondego>   }<newline46mondego>   CmsResource res = object.readResource(resname);<newline46mondego>   object.lockResource(resname);<newline46mondego>   CmsFile file = object.readFile(res);<newline46mondego>   file.setContents(text.getBytes());<newline46mondego>   object.writeFile(file);<newline46mondego>   OpenCms.getPublishManager().publishResource(object, resname);<newline46mondego>   object.unlockResource(resname);<newline46mondego><newline46mondego>   return text;<newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"1918splitHere46","2266295splitHere46","service:jmx:iiop:///jndi/iiop://host:port/weblogic.management.mbeanservers.runtime<newline46mondego>"
"1919splitHere46","2266421splitHere46","ThreadPoolExecutor executor = (ThreadPoolExecutor) Executors.newSingleThreadExecutor();<newline46mondego>// add jobs<newline46mondego>// ...<newline46mondego>int size = executor.getQueue().size();<newline46mondego>"
"1920splitHere46","2266421splitHere46","ThreadPoolExecutor"
"1921splitHere46","2266421splitHere46","Executors.newSingleThreadExecutor"
"1922splitHere46","2266421splitHere46","ThreadPoolExecutor executor = new ThreadPoolExecutor( 1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>() );<newline46mondego>"
"1923splitHere46","2266421splitHere46","Executors.newSingleThreadExecutor"
"1924splitHere46","2266421splitHere46","LinkedBlockingQueue"
"1925splitHere46","2266421splitHere46","getQueue"
"1926splitHere46","2266455splitHere46","Person_Role"
"1927splitHere46","2266455splitHere46","Person_Role"
"1928splitHere46","2266455splitHere46","Role"
"1929splitHere46","2266455splitHere46","Person_Role"
"1930splitHere46","2266455splitHere46","inverse=<doubleQuotes46>true<doubleQuotes46>"
"1931splitHere46","2266455splitHere46","Person.roles"
"1932splitHere46","2266455splitHere46","Role.assignments"
"1933splitHere46","2266455splitHere46","for (Person p : role.assignments) {<newline46mondego>    person.roles.remove(role)<newline46mondego>}<newline46mondego>"
"1934splitHere46","2266481splitHere46","MessageProducer"
"1935splitHere46","2266481splitHere46","QueueSender"
"1936splitHere46","2266481splitHere46","Session"
"1937splitHere46","2266481splitHere46","Session"
"1938splitHere46","2266481splitHere46","MessageProducer"
"1939splitHere46","2266481splitHere46","QueueSender"
"1940splitHere46","2266481splitHere46","Session"
"1941splitHere46","2266567splitHere46","putClientProperty(SwingUtilities2.AA_TEXT_PROPERTY_KEY, null);"
"1942splitHere46","2266716splitHere46","Boolean doLogin(User user) {<newline46mondego>// implementation omitted<newline46mondego>}<newline46mondego>"
"1943splitHere46","2266716splitHere46","def doLogin(user) {<newline46mondego>// implementation omitted<newline46mondego>}<newline46mondego>"
"1944splitHere46","2266716splitHere46","doLogin"
"1945splitHere46","2266749splitHere46","// Write a custom toolkit<newline46mondego>public class MyToolkit extends sun.awt.windows.WToolkit <newline46mondego>{<newline46mondego>  public void beep() {<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// Set this property<newline46mondego>System.setProperty(<doubleQuotes46>awt.toolkit<doubleQuotes46>, <doubleQuotes46>MyPackage.MyToolkit<doubleQuotes46>);<newline46mondego>"
"1946splitHere46","2266749splitHere46","NOTE:"
"1947splitHere46","2266889splitHere46","String str = String(outputBytes, 0, cypheredBytes); <newline46mondego>byte[] inputBytes = str.getBytes(); <newline46mondego>"
"1948splitHere46","2266889splitHere46","byte[]"
"1949splitHere46","2266889splitHere46","String"
"1950splitHere46","2266889splitHere46","byte[] inputBytes = str.getBytes();         <newline46mondego>...<newline46mondego>return new String(outputBytes, 0, cypheredBytes);<newline46mondego>"
"1951splitHere46","2266889splitHere46","byte[] inputBytes = str.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);         <newline46mondego>...<newline46mondego>return new String(outputBytes, 0, cypheredBytes, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"1952splitHere46","2266929splitHere46","JTable"
"1953splitHere46","2266929splitHere46","TableModel"
"1954splitHere46","2266929splitHere46","AbstractTableModel"
"1955splitHere46","2266929splitHere46","DefaultTableModel"
"1956splitHere46","2266929splitHere46","getValueAt"
"1957splitHere46","2266929splitHere46","JTable"
"1958splitHere46","2266929splitHere46","tableChanged"
"1959splitHere46","2266929splitHere46","AbstractTableModel"
"1960splitHere46","2266929splitHere46","fireTableChanged"
"1961splitHere46","2267049splitHere46","sun.misc"
"1962splitHere46","2267049splitHere46","com.sun"
"1963splitHere46","2267049splitHere46","Base64.encodeBase64(..)"
"1964splitHere46","2267049splitHere46","Base64.decodeBase64(..)"
"1965splitHere46","2267087splitHere46","Activity"
"1966splitHere46","2267087splitHere46","Intent"
"1967splitHere46","2267087splitHere46","onStart()"
"1968splitHere46","2267087splitHere46","startService()"
"1969splitHere46","2267087splitHere46","Service"
"1970splitHere46","2267087splitHere46","Intent"
"1971splitHere46","2267559splitHere46","@Column(name = <doubleQuotes46>processable<doubleQuotes46>)<newline46mondego>@Type(type = <doubleQuotes46>true_false<doubleQuotes46>)<newline46mondego>public boolean getProcessable() {<newline46mondego>    return processable;<newline46mondego>}<newline46mondego>"
"1972splitHere46","2267593splitHere46","List packages = getPackageManager().getInstalledPackages(PackageManager.GET_ACTIVITIES);<newline46mondego>"
"1973splitHere46","2267593splitHere46","List packages = getPackageManager().getInstalledPackages(0);<newline46mondego>"
"1974splitHere46","2267645splitHere46","var lineElements: PathElement[] = [MoveTo {<newline46mondego>     x: 0<newline46mondego>     y: 100<newline46mondego>}];<newline46mondego>Timeline {<newline46mondego>   repeatCount: Timeline.INDEFINITE<newline46mondego>   keyFrames: [<newline46mondego>      KeyFrame {<newline46mondego>         time: 500ms<newline46mondego>         canSkip: false<newline46mondego>         action: function () {<newline46mondego>            insert LineTo {x: 10 y: 10 absolute: false} into lineElements;<newline46mondego>         }<newline46mondego>      }<newline46mondego>   ]<newline46mondego>}.play();<newline46mondego><newline46mondego>Stage {<newline46mondego>   scene: Scene {<newline46mondego>      content: [<newline46mondego>         Path {<newline46mondego>            fill: null<newline46mondego>            stroke: Color.RED<newline46mondego>            strokeWidth: 2<newline46mondego>            elements: bind lineElements<newline46mondego>         }<newline46mondego>      ]<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"1975splitHere46","2267697splitHere46","<security:authentication>"
"1976splitHere46","2267697splitHere46","var"
"1977splitHere46","2267697splitHere46","<security:authentication var = <doubleQuotes46>userId<doubleQuotes46> property = <doubleQuotes46>principal.userID<doubleQuotes46> /> <newline46mondego><c:if test = <doubleQuotes46>%{creatorUserId == userId}<doubleQuotes46>> <newline46mondego>"
"1978splitHere46","2267740splitHere46","FROM <...>"
"1979splitHere46","2267740splitHere46","{ <http://dbpedia.org/resource/Daphne_Oram> dbont:birthPlace ?place . }<newline46mondego>"
"1980splitHere46","2267807splitHere46","MySpecialCustomObject[] array;<newline46mondego>"
"1981splitHere46","2267887splitHere46","a=fmtp:97 mode=20"
"1982splitHere46","2267887splitHere46","rtpmap"
"1983splitHere46","2267902splitHere46","System.setProperty(<doubleQuotes46>smack.debugEnabled<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>);<newline46mondego>XMPPConnection.DEBUG_ENABLED = true;<newline46mondego>"
"1984splitHere46","2267992splitHere46","transient"
"1985splitHere46","2268089splitHere46","init"
"1986splitHere46","2268089splitHere46","@"
"1987splitHere46","2268089splitHere46","grammar Test;<newline46mondego><newline46mondego>@parser::members {<newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    String text = <doubleQuotes46>(a, bb ,  ccc )<doubleQuotes46>;<newline46mondego>    ANTLRStringStream in = new ANTLRStringStream(text);<newline46mondego>    TestLexer lexer = new TestLexer(in);<newline46mondego>    CommonTokenStream tokens = new CommonTokenStream(lexer);<newline46mondego>    System.out.println(new TestParser(tokens).mainRule());<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>mainRule returns [List<String> words]<newline46mondego>@init{$words = new ArrayList<String>();}<newline46mondego>  :  '(' w=WORD {$words.add($w.text);} (',' w=WORD {$words.add($w.text);} )* ')'<newline46mondego>  ;<newline46mondego><newline46mondego>WORD<newline46mondego>  :  ('a'..'z'|'A'..'Z'|'0'..'9')+<newline46mondego>  ;<newline46mondego><newline46mondego>WS<newline46mondego>  :  ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; }<newline46mondego>  ;<newline46mondego>"
"1988splitHere46","2268089splitHere46","bart@hades:~/Temp$ java -cp antlr-3.2.jar org.antlr.Tool Test.g<newline46mondego>bart@hades:~/Temp$ javac -cp antlr-3.2.jar *.java<newline46mondego>bart@hades:~/Temp$ java -cp .:antlr-3.2.jar TestParser<newline46mondego>[a, bb, ccc]<newline46mondego>bart@hades:~/Temp$ <newline46mondego>"
"1989splitHere46","2268089splitHere46","TestParser"
"1990splitHere46","2268089splitHere46","java -cp .;antlr-3.2.jar TestParser<newline46mondego>"
"1991splitHere46","2268181splitHere46","MessageContext msgx = wsContext.getMessageContext();<newline46mondego>    HttpExchange exchange = (HttpExchange)msgx.get(<doubleQuotes46>com.sun.xml.internal.ws.http.exchange<doubleQuotes46>);<newline46mondego>    System.out.println(exchange.getRemoteAddress().getAddress());<newline46mondego>"
"1992splitHere46","2268319splitHere46","SubType instanceOfSubType = (SubType) instanceOfSuperType;<newline46mondego>"
"1993splitHere46","2268319splitHere46","PrintWriter printWriter = (PrintWriter) objArray[1][2];<newline46mondego>"
"1994splitHere46","2268319splitHere46","Object[]"
"1995splitHere46","2268319splitHere46","PrintWriter"
"1996splitHere46","2268319splitHere46","public class MyBean {<newline46mondego>    private PrintWriter printWriter;<newline46mondego>    public void setPrintWriter(PrintWriter printWriter) {<newline46mondego>        this.printWriter = printWriter;<newline46mondego>    }<newline46mondego>    public PrintWriter getPrintWriter() {<newline46mondego>        return printWriter;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"1997splitHere46","2268319splitHere46","List<MyBean>"
"1998splitHere46","2268319splitHere46","List<MyBean> myBeans = new ArrayList<MyBean>();<newline46mondego>MyBean myBean1 = new MyBean();<newline46mondego>myBean1.setPrintWriter(printWriter1);<newline46mondego>myBeans.add(myBean1);<newline46mondego>MyBean myBean2 = new MyBean();<newline46mondego>myBean2.setPrintWriter(printWriter2);<newline46mondego>myBeans.add(myBean2);<newline46mondego>// ...<newline46mondego>"
"1999splitHere46","2268319splitHere46","for (MyBean myBean : myBeans) {<newline46mondego>    PrintWriter printWriter = myBean.getPrintWriter();<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2000splitHere46","2268471splitHere46","InputStream stream = null;<newline46mondego>try {<newline46mondego>   // IO stuff - create the stream and manipulate it<newline46mondego>} catch (IOException ex){<newline46mondego>  // handle exception<newline46mondego>} finally {<newline46mondego>  try {<newline46mondego>     stream.close();<newline46mondego>  } catch (IOException ex){}<newline46mondego>}<newline46mondego>"
"2001splitHere46","2268471splitHere46","IOUtils.closeQuietly(stream);"
"2002splitHere46","2268471splitHere46","finally"
"2003splitHere46","2268617splitHere46","scan.nextInt()"
"2004splitHere46","2268617splitHere46","scan.nextLine()"
"2005splitHere46","2268617splitHere46","NumberFormatException"
"2006splitHere46","2268617splitHere46","nextInt()"
"2007splitHere46","2268617splitHere46","Integer"
"2008splitHere46","2268617splitHere46","userName"
"2009splitHere46","2268617splitHere46","System.out.println(<doubleQuotes46>\nEnter port number:<doubleQuotes46>);<newline46mondego>    Integer serverPort = scan.nextInt();<newline46mondego>    System.out.println(<doubleQuotes46>\nEnter your username:<doubleQuotes46>);<newline46mondego>    String userName = scan.nextLine();<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>\nserverPort: <doubleQuotes46> + serverPort <newline46mondego>                     + <doubleQuotes46>\nuserName: <doubleQuotes46> + userName);<newline46mondego>"
"2010splitHere46","2268617splitHere46","Enter port number: <newline46mondego>    123 abc<newline46mondego>    Enter your username:<newline46mondego>"
"2011splitHere46","2268617splitHere46","serverPort: 123<newline46mondego>   userName:  abc<newline46mondego>"
"2012splitHere46","2268617splitHere46","scan.nextInt()"
"2013splitHere46","2268617splitHere46","abc"
"2014splitHere46","2268617splitHere46","scan.nextLine()"
"2015splitHere46","2268617splitHere46","abc"
"2016splitHere46","2268741splitHere46","private byte[][] example;<newline46mondego>example = new byte[][ARRAYS_COUNT];<newline46mondego>example[0] = new byte[10];<newline46mondego>example[1] = new byte[20];<newline46mondego>...<newline46mondego>"
"2017splitHere46","2268795splitHere46","HashMap"
"2018splitHere46","2268795splitHere46","Hashtable"
"2019splitHere46","2268795splitHere46","HashMap"
"2020splitHere46","2268795splitHere46","Hashtable"
"2021splitHere46","2268872splitHere46","java -version 2>&1 | find <doubleQuotes46>64-Bit<doubleQuotes46> >nul:<newline46mondego><newline46mondego>if errorlevel 1 (<newline46mondego>    echo 32-Bit <newline46mondego>) else (<newline46mondego>    echo 64-Bit<newline46mondego>)<newline46mondego>"
"2022splitHere46","2268919splitHere46","web.xml"
"2023splitHere46","2268933splitHere46","javax.net.ssl.trustStore"
"2024splitHere46","2268944splitHere46","DateTimeField"
"2025splitHere46","2268944splitHere46","int value = dateTime.get(new LocaleAwareWeekField(<doubleQuotes46>en_GB<doubleQuotes46>));<newline46mondego>"
"2026splitHere46","2269050splitHere46","<import resource=<doubleQuotes46>...<doubleQuotes46>/>"
"2027splitHere46","2269050splitHere46","<import>"
"2028splitHere46","2269051splitHere46","Permissions"
"2029splitHere46","2269097splitHere46","JTextField nameText = new JTextField(20);<newline46mondego>"
"2030splitHere46","2269097splitHere46","nameText = new JTextField(20);<newline46mondego>"
"2031splitHere46","2269099splitHere46","<abstract>"
"2032splitHere46","2269157splitHere46","RandomAccessFile"
"2033splitHere46","2269157splitHere46","FileInputStream"
"2034splitHere46","2269188splitHere46","public List<String> getCommandResults(String command) {<newline46mondego>    FutureTask task = new FutureTask(new CommandTask(command))<newline46mondego>    taskExecutor.execute(task);<newline46mondego><newline46mondego>    return task.get(); //or task.get(); return commandResults; - but it not a good practice<newline46mondego>}<newline46mondego>"
"2035splitHere46","2269240splitHere46","Query query = session.craeteQuery(<doubleQuotes46>FROM User WHERE username = :username<doubleQuotes46>);<newline46mondego>query.setString(<doubleQuotes46>username<doubleQuotes46>, <doubleQuotes46>SomeUserName<doubleQuotes46>);<newline46mondego>"
"2036splitHere46","2269282splitHere46","<c:forEach items=<doubleQuotes46>${form.bean.grid.hours}<doubleQuotes46> var=<doubleQuotes46>hour<doubleQuotes46> varStatus=<doubleQuotes46>index<doubleQuotes46>><newline46mondego>   ${hour.cells[index.count - 1].hourOfDay}<newline46mondego></c:forEach><newline46mondego>"
"2037splitHere46","2269282splitHere46","count"
"2038splitHere46","2269439splitHere46","import org.joda.time.DateTime;<newline46mondego>    import org.joda.time.format.DateTimeFormat;<newline46mondego>    import org.joda.time.format.DateTimeFormatter;<newline46mondego>    ...<newline46mondego><newline46mondego>    // if default locale is ok simply omit '.withLocale(...)'<newline46mondego>    DateTimeFormatter format = DateTimeFormat.forPattern(<doubleQuotes46>MMM<doubleQuotes46>);<newline46mondego>    DateTime instance        = format.withLocale(Locale.FRENCH).parseDateTime(<doubleQuotes46>août<doubleQuotes46>);  <newline46mondego><newline46mondego>    int month_number         = instance.getMonthOfYear();<newline46mondego>    String month_text        = instance.monthOfYear().getAsText(Locale.ENGLISH);<newline46mondego><newline46mondego>    System.out.println( <doubleQuotes46>Month Number: <doubleQuotes46> + month_number );<newline46mondego>    System.out.println( <doubleQuotes46>Month Text:   <doubleQuotes46> + month_text   );<newline46mondego><newline46mondego>    OUTPUT:<newline46mondego>        Month Number: 8<newline46mondego>        Month Text:   August<newline46mondego>"
"2039splitHere46","2269464splitHere46","import javax.xml.xpath.*<newline46mondego>import javax.xml.parsers.DocumentBuilderFactory<newline46mondego><newline46mondego>def testxml = '''<newline46mondego>    <records><newline46mondego>      <car name='HSV Maloo' make='Holden' year='2006'><newline46mondego>        <country>Australia</country><newline46mondego>        <record type='speed'>Production Pickup Truck with speed of 271kph</record><newline46mondego>      </car><newline46mondego>    </records><newline46mondego>  '''<newline46mondego><newline46mondego>def processXml( String xml, String xpathQuery ) {<newline46mondego>  def xpath = XPathFactory.newInstance().newXPath()<newline46mondego>  def builder     = DocumentBuilderFactory.newInstance().newDocumentBuilder()<newline46mondego>  def inputStream = new ByteArrayInputStream( xml.bytes )<newline46mondego>  def records     = builder.parse(inputStream).documentElement<newline46mondego>  xpath.evaluate( xpathQuery, records )<newline46mondego>}<newline46mondego><newline46mondego>println processXml( testxml, '//car/record/@type' )<newline46mondego>"
"2040splitHere46","2269518splitHere46","NEW"
"2041splitHere46","2269518splitHere46","SELECT NEW com.mycompany.myapp.MyClass(count, idA, idB)<newline46mondego>FROM ...<newline46mondego>WHERE ...<newline46mondego>"
"2042splitHere46","2269518splitHere46","MyClass"
"2043splitHere46","2269777splitHere46","...<newline46mondego><newline46mondego>private Entity[] data= new Entity[0];  // Or some value > 0<newline46mondego>...<newline46mondego>"
"2044splitHere46","2269871splitHere46","Object[] possibleValues = enumValue.getDeclaringClass().getEnumConstants();<newline46mondego>"
"2045splitHere46","2269900splitHere46","import static com.example.hello.Tools.*;<newline46mondego>"
"2046splitHere46","2269900splitHere46","getSource()"
"2047splitHere46","2269900splitHere46","Tools.getSource()"
"2048splitHere46","2269900splitHere46","Tools.getSource()"
"2049splitHere46","2269900splitHere46","import"
"2050splitHere46","2269900splitHere46","import com.example.hello.Tools;<newline46mondego>"
"2051splitHere46","2270010splitHere46","Tools#runtools()"
"2052splitHere46","2270010splitHere46","static"
"2053splitHere46","2270010splitHere46","import static"
"2054splitHere46","2270010splitHere46","public class Tools {<newline46mondego>    public static void runtools() {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2055splitHere46","2270010splitHere46","Tools"
"2056splitHere46","2270010splitHere46","runtools()"
"2057splitHere46","2270010splitHere46","new Tools().runtools();<newline46mondego>"
"2058splitHere46","2270083splitHere46","listen.start();<newline46mondego>"
"2059splitHere46","2270083splitHere46","listen.run();<newline46mondego>"
"2060splitHere46","2270083splitHere46","ExecutorService"
"2061splitHere46","2270083splitHere46","Runnable listen = new Runnable() {<newline46mondego>  public void run() { ... }<newline46mondego>}<newline46mondego>ExecutorService exec = Executors.newSingleThreadExecutor();<newline46mondego>exec.submit(listen);<newline46mondego>"
"2062splitHere46","2270083splitHere46","exec.shutdown();<newline46mondego>exec.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);<newline46mondego>"
"2063splitHere46","2270083splitHere46","exec.shutdownNow();<newline46mondego>"
"2064splitHere46","2270200splitHere46","Scanner.next"
"2065splitHere46","2270200splitHere46","nextLine"
"2066splitHere46","2270268splitHere46","set cot-=preview <newline46mondego>"
"2067splitHere46","2270306splitHere46","TableRowSorter"
"2068splitHere46","2270306splitHere46","JTables"
"2069splitHere46","2270306splitHere46","TableModel"
"2070splitHere46","2270306splitHere46","Comparable"
"2071splitHere46","2270306splitHere46","Comparator"
"2072splitHere46","2270306splitHere46","TableModel"
"2073splitHere46","2270306splitHere46","Comparator"
"2074splitHere46","2270306splitHere46","ListSelectionListener"
"2075splitHere46","2270306splitHere46","Comparator"
"2076splitHere46","2270406splitHere46","java.awt.GraphicsEnvironment.getAvailableFontFamilyNames()"
"2077splitHere46","2270406splitHere46","java.awt.GraphicsEnvironment.getAllFonts()"
"2078splitHere46","2270406splitHere46","java.awt.Font"
"2079splitHere46","2270406splitHere46","java.awt.Font.canDisplay(int)"
"2080splitHere46","2270406splitHere46","int"
"2081splitHere46","2270712splitHere46","// the time now<newline46mondego>Calendar calendar = Calendar.newInstance();<newline46mondego><newline46mondego>// noon tomorrow<newline46mondego>calendar.add(Calendar.DAY_OF_YEAR, 1);<newline46mondego>calendar.set(Calendar.HOUR_OF_DAY, 12);<newline46mondego>calendar.set(Calendar.MINUTE, 0);<newline46mondego>calendar.set(Calendar.SECOND, 0);<newline46mondego><newline46mondego>alarmManager.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), sender);<newline46mondego>    Toast.makeText(this, <doubleQuotes46>Alarm set<doubleQuotes46>, Toast.LENGTH_LONG).show();<newline46mondego>"
"2082splitHere46","2270757splitHere46","static class MyChooser extends JFileChooser {<newline46mondego>        protected JDialog createDialog(Component parent)<newline46mondego>                throws HeadlessException {<newline46mondego>            JDialog dlg = super.createDialog(parent);<newline46mondego>            dlg.setLocation(20, 20);<newline46mondego>            return dlg;<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2083splitHere46","2270774splitHere46","double answer = 364.0/365;"
"2084splitHere46","2270774splitHere46","double days_in_year = 365;<newline46mondego>double answer = 364/days_in_year;<newline46mondego>"
"2085splitHere46","2270867splitHere46","c:\program files\apache software foundation\tomcat 6.0\logs\catalina.2010.02.16.log<newline46mondego>"
"2086splitHere46","2270867splitHere46","<Access is denied>"
"2087splitHere46","2271486splitHere46","session"
"2088splitHere46","2271751splitHere46","-server"
"2089splitHere46","2271751splitHere46","JConsole"
"2090splitHere46","2271751splitHere46","mem"
"2091splitHere46","2271947splitHere46","...<newline46mondego>InputStream in = getClass().getResourceAsStream(<doubleQuotes46>/1.txt<doubleQuotes46>);<newline46mondego>BufferedReader input = new BufferedReader(new InputStreamReader(in));<newline46mondego>...<newline46mondego>"
"2092splitHere46","2271978splitHere46","ScheduledFuture<?> future = executorService.scheduleWithFixedDelay(repeatingThread, 0, numOfSeconds, TimeUnit.SECONDS);<newline46mondego>...<newline46mondego>// to cancel it:<newline46mondego>future.cancel(true);<newline46mondego>// then schedule again<newline46mondego>"
"2093splitHere46","2272080splitHere46","Class<E>"
"2094splitHere46","2272080splitHere46","public List<E> getAll(Class<E> entityClass) {<newline46mondego>     Query query = enittyManager.createQuery(<doubleQuotes46>from <doubleQuotes46> + entityClass.getName());<newline46mondego>     query.getResultList();<newline46mondego>}<newline46mondego>"
"2095splitHere46","2272161splitHere46","getParameter()"
"2096splitHere46","2272186splitHere46","StringUtils.isEmpty(str)"
"2097splitHere46","2272186splitHere46","StringUtils.isNotEmpty(str)"
"2098splitHere46","2272186splitHere46","StringUtils.isBlank(str)"
"2099splitHere46","2272186splitHere46","StringUtils.isNotBlank(str)"
"2100splitHere46","2272186splitHere46","empty"
"2101splitHere46","2272186splitHere46","blank"
"2102splitHere46","2272186splitHere46","blank"
"2103splitHere46","2272186splitHere46","empty"
"2104splitHere46","2272346splitHere46","JInternalFrame"
"2105splitHere46","2272346splitHere46","public class MyInternalFrame extends JInternalFrame {<newline46mondego>  private final SharedData data;<newline46mondego><newline46mondego>  public MyInternalFrame(SharedData data) {<newline46mondego>    this.data = data;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2106splitHere46","2272346splitHere46","SharedData"
"2107splitHere46","2272470splitHere46","getView(int, View, ViewGroup)"
"2108splitHere46","2272470splitHere46","getView"
"2109splitHere46","2272470splitHere46","public class MyAdapter extends BaseAdapter {<newline46mondego><newline46mondego>    public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>        // position is the element's id to use<newline46mondego>        // convertView is either null -> create a new view for this element!<newline46mondego>        //                or not null -> re-use this given view for element!<newline46mondego>        // parent is the listview all the elements are in<newline46mondego><newline46mondego><newline46mondego>        if (convertView == null) {<newline46mondego>            convertView = mInflater.inflate(R.layout.your_layout, null);<newline46mondego><newline46mondego>            // here you must do whatever is needed to populate the elements of your<newline46mondego>            // list element layout<newline46mondego>            ...<newline46mondego>        } else {<newline46mondego>            // re-use the given convert view<newline46mondego><newline46mondego>            // here you must set all the elements to the required values<newline46mondego>        }<newline46mondego><newline46mondego>        // your drawable here for this element <newline46mondego>        convertView.setBackground( ... );<newline46mondego><newline46mondego>        // maybe here's more to do with the view<newline46mondego>        return convertView;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2110splitHere46","2272480splitHere46","CD cd = new CD(<doubleQuotes46>Europe In '72<doubleQuotes46>, <doubleQuotes46>Grateful Dead<doubleQuotes46>, 12);<newline46mondego>cd.addBandMembers(<doubleQuotes46>Jerry Garcia<doubleQuotes46>, <doubleQuotes46>Bill Kreutzman<doubleQuotes46>, <doubleQuotes46>Keith Godcheaux<doubleQuotes46>);<newline46mondego>library.addItem(cd, <doubleQuotes46>acid rock<doubleQuotes46>, <doubleQuotes46>sixties<doubleQuotes46>, <doubleQuotes46>jam bands<doubleQuotes46>));<newline46mondego>"
"2111splitHere46","2272486splitHere46","private Class<?> getPropertyType(Class<?> clazz, String property) {<newline46mondego>    BeanInfo beanInfo = Introspector.getBeanInfo(clazz);<newline46mondego>    PropertyDescriptor[] propDescriptors = beanInfo.getPropertyDescriptors();<newline46mondego>    for (PropertyDescriptor propDescriptor : propDescriptors) {<newline46mondego>        // String name of a property<newline46mondego>        if (property.equals(propDescriptor.getName())) {<newline46mondego>           // Class the getter corresponds to.<newline46mondego>           return propDescriptor.getPropertyType();<newline46mondego>        }<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"2112splitHere46","2272510splitHere46","keySet"
"2113splitHere46","2272510splitHere46","entrySet"
"2114splitHere46","2272510splitHere46","values"
"2115splitHere46","2272510splitHere46","HashMap"
"2116splitHere46","2272510splitHere46","keySet()"
"2117splitHere46","2272510splitHere46","public Set<K> keySet() {<newline46mondego>    Set<K> ks = keySet;<newline46mondego>    return (ks != null ? ks : (keySet = new KeySet()));<newline46mondego>}<newline46mondego>"
"2118splitHere46","2272510splitHere46","keySet"
"2119splitHere46","2272510splitHere46","null"
"2120splitHere46","2272510splitHere46","keySet()"
"2121splitHere46","2272510splitHere46","null"
"2122splitHere46","2272510splitHere46","entrySet()"
"2123splitHere46","2272510splitHere46","values()"
"2124splitHere46","2272590splitHere46","UIData"
"2125splitHere46","2272590splitHere46","value"
"2126splitHere46","2272590splitHere46","rendered"
"2127splitHere46","2272590splitHere46","disabled"
"2128splitHere46","2272590splitHere46","getApplication().getKunden(getNameFilterPattern());"
"2129splitHere46","2272590splitHere46","@PostConstruct"
"2130splitHere46","2272590splitHere46","public class Bean {<newline46mondego>    private String nameFilterPattern;<newline46mondego>    private List<Kunde> kunden;<newline46mondego><newline46mondego>    // Load during bean construction.<newline46mondego>    public Bean() {<newline46mondego>        this.kunden = getApplication().getKunden(getNameFilterPattern());<newline46mondego>    }<newline46mondego><newline46mondego>    // OR load during @PostConstruct (will be invoked AFTER construction and resource injection.<newline46mondego>    @PostConstruct<newline46mondego>    public void init() {<newline46mondego>        this.kunden = getApplication().getKunden(getNameFilterPattern());<newline46mondego>    }<newline46mondego><newline46mondego>    // OR during bean initialization (this is invoked BEFORE construction and will apply to ALL constructors).<newline46mondego>    {<newline46mondego>        this.kunden = getApplication().getKunden(getNameFilterPattern());<newline46mondego>    }<newline46mondego><newline46mondego>    // OR during bean action method (invoked from h:commandLink/Button).<newline46mondego>    public String submit() {<newline46mondego>        this.kunden = getApplication().getKunden(getNameFilterPattern());<newline46mondego>        return <doubleQuotes46>navigationCaseOutcome<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    // OR using lazy loading pattern in getter method.<newline46mondego>    public List<Kunde> getKunden() {<newline46mondego>        if (this.kunden == null) <newline46mondego>            this.kunden = getApplication().getKunden(getNameFilterPattern());<newline46mondego>        }<newline46mondego>        return this.kunden;<newline46mondego>    }<newline46mondego>"
"2131splitHere46","2272590splitHere46","@PostConstruct"
"2132splitHere46","2272590splitHere46","nameFilterPattern"
"2133splitHere46","2272590splitHere46","GET"
"2134splitHere46","2272590splitHere46","nameFilterPattern"
"2135splitHere46","2272590splitHere46","POST"
"2136splitHere46","2272753splitHere46","do_stuff();<newline46mondego>return do_more_stuff();<newline46mondego>"
"2137splitHere46","2272833splitHere46","-Djava.endorsed.dirs=$PROJECTHOME/target/lib"
"2138splitHere46","2272833splitHere46","org.springframework.beans.factory.support.DefaultListableBeanFactory"
"2139splitHere46","2272833splitHere46","static {<newline46mondego>    ClassLoader cl = DefaultListableBeanFactory.class.getClassLoader();<newline46mondego>    try {<newline46mondego>        javaxInjectProviderClass = cl.loadClass(<doubleQuotes46>javax.inject.Provider<doubleQuotes46>); //Line 103<newline46mondego>    }<newline46mondego>    catch (ClassNotFoundException ex) {<newline46mondego>        // JSR-330 API not available - Provider interface simply not supported then.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2140splitHere46","2272833splitHere46","NullPointerException"
"2141splitHere46","2272833splitHere46","getClassLoader()"
"2142splitHere46","2272833splitHere46","null"
"2143splitHere46","2272833splitHere46","-Djava.endorsed.dirs"
"2144splitHere46","2272833splitHere46","-classpath"
"2145splitHere46","2272833splitHere46","-Djava.endorsed.dirs"
"2146splitHere46","2272999splitHere46","org.eclipse.swt.widgets.Display<newline46mondego>"
"2147splitHere46","2273019splitHere46","os.name"
"2148splitHere46","2273019splitHere46","public boolean runningOnWindows7() {<newline46mondego>    String osName = System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>);<newline46mondego>    String osVersion = System.getProperty(<doubleQuotes46>os.version<doubleQuotes46>);<newline46mondego>    return <doubleQuotes46>Windows 7<doubleQuotes46>.equals(osName) && <doubleQuotes46>6.1<doubleQuotes46>.equals(osVersion);<newline46mondego>}<newline46mondego>"
"2149splitHere46","2273136splitHere46","$query1 = 'UPDATE `table` SET rating = (@rating:= rating) + 1 WHERE id = 1';<newline46mondego>$query2 = 'select @rating';<newline46mondego>"
"2150splitHere46","2273344splitHere46","Serializable"
"2151splitHere46","2273344splitHere46","Serializable"
"2152splitHere46","2273421splitHere46","InputStream istream = getClass().getResourceAsStream(<doubleQuotes46>/resource/path/to/some.xml<doubleQuotes46>);<newline46mondego>"
"2153splitHere46","2273421splitHere46","InputStream"
"2154splitHere46","2273421splitHere46","getResourceAsStream()"
"2155splitHere46","2273431splitHere46","foo = new ContainerClass<DvQuantity>();<newline46mondego>"
"2156splitHere46","2273431splitHere46","DvQuantity"
"2157splitHere46","2273431splitHere46","class DvQuantityContainerClass extends ContainerClass<DvQuantity> {...}<newline46mondego>...<newline46mondego>foo = new DvQuantityContainerClass();<newline46mondego>"
"2158splitHere46","2273431splitHere46","foo = new ContainerClass<DvQuantity>(){};<newline46mondego>"
"2159splitHere46","2273431splitHere46","DvQuantityContainerClass.setOtherReferenceRanges"
"2160splitHere46","2273431splitHere46","T"
"2161splitHere46","2273431splitHere46","Method m = DvQuantityContainerClass.class.getMethod(<doubleQuotes46>setOtherReferenceRanges<doubleQuotes46>, List.class);<newline46mondego>// this will return List<ReferenceRange<DvQuanity>>, like you are lookingn for<newline46mondego>return GenericTypeReflector.getExactParameterTypes(m, DvQuantityContainerClass.class)<newline46mondego>"
"2162splitHere46","2273616splitHere46","public class MyView extends ViewPart {<newline46mondego>    private Text text1;<newline46mondego><newline46mondego>    public void createPartControl(Composite parent) {<newline46mondego>        text1 = new Text(parent, SWT.None);<newline46mondego>        final Text text2 = new Text(parent, SWT.None);<newline46mondego><newline46mondego>        parent.getDisplay().asyncExec(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                text1.setText(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>                text2.setText(<doubleQuotes46>World<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    public void setFocus() {<newline46mondego>        text1.forceFocus();<newline46mondego>    }<newline46mondego><newline46mondego>    public void someNetworkMessageReceived(MyMessage message) {<newline46mondego>        getSite().getShell().getDisplay().asyncExec(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                text1.setText(message.toString());<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2163splitHere46","2273665splitHere46","private String foo = DEFAULT_FOO;"
"2164splitHere46","2273711splitHere46","url-pattern"
"2165splitHere46","2273711splitHere46","/WebContent/uploadify"
"2166splitHere46","2273711splitHere46","/WebContent/upload.jsp"
"2167splitHere46","2273711splitHere46","<!DOCTYPE html><newline46mondego><html lang=<doubleQuotes46>en<doubleQuotes46>><newline46mondego>    <head><newline46mondego>        <title>Uploadify test</title><newline46mondego>        <script src=<doubleQuotes46>uploadify/jquery-1.3.2.min.js<doubleQuotes46>></script><newline46mondego>        <script src=<doubleQuotes46>uploadify/swfobject.js<doubleQuotes46>></script><newline46mondego>        <script src=<doubleQuotes46>uploadify/jquery.uploadify.v2.1.0.min.js<doubleQuotes46>></script><newline46mondego>        <script type=<doubleQuotes46>text/javascript<doubleQuotes46>><newline46mondego>            $(document).ready(function() {<newline46mondego>                $('#uploadify').uploadify({<newline46mondego>                    'uploader': 'uploadify/uploadify.swf',<newline46mondego>                    'script': 'uploadServlet',<newline46mondego>                    'folder': '/uploads',<newline46mondego>                    'cancelImg': 'uploadify/cancel.png'<newline46mondego>                });<newline46mondego>                $('#upload').click(function() {<newline46mondego>                    $('#uploadify').uploadifyUpload();<newline46mondego>                    return false;<newline46mondego>                });<newline46mondego>            });<newline46mondego>        </script><newline46mondego>    </head><newline46mondego>    <body><newline46mondego>        <input id=<doubleQuotes46>uploadify<doubleQuotes46> type=<doubleQuotes46>file<doubleQuotes46>><newline46mondego>        <a id=<doubleQuotes46>upload<doubleQuotes46> href=<doubleQuotes46>#<doubleQuotes46>>Upload</a><newline46mondego>    </body><newline46mondego></html><newline46mondego>"
"2168splitHere46","2273711splitHere46","com.example.UploadServlet"
"2169splitHere46","2273711splitHere46","commons-fileupload-1.2.1.jar"
"2170splitHere46","2273711splitHere46","commons-io-1.4.jar"
"2171splitHere46","2273711splitHere46","/WEB-INF/lib"
"2172splitHere46","2273711splitHere46","package com.example;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.http.HttpServlet;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego><newline46mondego>import org.apache.commons.fileupload.FileItem;<newline46mondego>import org.apache.commons.fileupload.disk.DiskFileItemFactory;<newline46mondego>import org.apache.commons.fileupload.servlet.ServletFileUpload;<newline46mondego><newline46mondego>public class UploadServlet extends HttpServlet {<newline46mondego>    protected void doPost(HttpServletRequest request, HttpServletResponse response)<newline46mondego>        throws ServletException, IOException<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>UploadServlet invoked. Here are all uploaded files: <doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            List<FileItem> items = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request);<newline46mondego>            for (FileItem item : items) {<newline46mondego>                if (!item.isFormField()) {<newline46mondego>                    System.out.println(<doubleQuotes46>Name: <doubleQuotes46> + item.getName());<newline46mondego>                    System.out.println(<doubleQuotes46>Size: <doubleQuotes46> + item.getSize());<newline46mondego>                    System.out.println(<doubleQuotes46>Type: <doubleQuotes46> + item.getContentType());<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } catch (Exception e) {<newline46mondego>            throw new ServletException(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2173splitHere46","2273711splitHere46","com.example.UploadServlet"
"2174splitHere46","2273711splitHere46","web.xml"
"2175splitHere46","2273711splitHere46","<servlet><newline46mondego>    <servlet-name>uploadServlet</servlet-name><newline46mondego>    <servlet-class>com.example.UploadServlet</servlet-class><newline46mondego></servlet><newline46mondego><servlet-mapping><newline46mondego>    <servlet-name>uploadServlet</servlet-name><newline46mondego>    <url-pattern>/uploadServlet</url-pattern>        <newline46mondego></servlet-mapping><newline46mondego>"
"2176splitHere46","2273711splitHere46","Upload"
"2177splitHere46","2273711splitHere46","'<%= request.getContextPath() %>/uploadFile?portletId=${portletId}&remoteFolder=<%= decodedString %>',<doubleQuotes46>;<newline46mondego>"
"2178splitHere46","2273711splitHere46","'<%= request.getContextPath() %>/uploadFile;jsessionid=${pageContext.session.id}?portletId=${portletId}&remoteFolder=<%= decodedString %>',<doubleQuotes46>;<newline46mondego>"
"2179splitHere46","2273808splitHere46","toString()"
"2180splitHere46","2273808splitHere46","null"
"2181splitHere46","2273900splitHere46","-Djavax.management.builder.initial= -Dcom.sun.management.jmxremote<newline46mondego>"
"2182splitHere46","2273900splitHere46","com.sun.management.jmxremote.port=3333<newline46mondego>com.sun.management.jmxremote.authenticate=false<newline46mondego>com.sun.management.jmxremote.ssl=false<newline46mondego>com.sun.management.jmxremote.local.only=false<newline46mondego>"
"2183splitHere46","2274036splitHere46","clean()"
"2184splitHere46","2274036splitHere46","clean()"
"2185splitHere46","2274036splitHere46","Content-Type"
"2186splitHere46","2274036splitHere46","getResponseCharSet()"
"2187splitHere46","2274089splitHere46","try {<newline46mondego>    SSLContext ctx = SSLContext.getDefault();<newline46mondego>    ctx.getClientSessionContext().setSessionTimeout(5); // in seconds<newline46mondego>    SSLSocket socket = (SSLSocket) <newline46mondego>         ctx.getSocketFactory().createSocket(<doubleQuotes46>host.com<doubleQuotes46>, 443);<newline46mondego><newline46mondego>    socket.setSoTimeout(5000); // in millis<newline46mondego>    socket.startHandshake();<newline46mondego>} catch (IOException ex) {<newline46mondego>    sslAvailable = false;<newline46mondego>}<newline46mondego>"
"2188splitHere46","2274089splitHere46","socket.setSoTimeout(5000)"
"2189splitHere46","2274089splitHere46","URLConnection urlConn = // obtain connection<newline46mondego>urlConn.setConnectTimeout(5000); // in millis<newline46mondego>"
"2190splitHere46","2274108splitHere46","maxIdleTime"
"2191splitHere46","2274279splitHere46","FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>MethodExpression actionListener = context.getApplication().getExpressionFactory()<newline46mondego>    .createMethodExpression(context.getELContext(), <doubleQuotes46>#{bean.actionListener}<doubleQuotes46>, null, new Class[] {ActionEvent.class});<newline46mondego>uiCommandComponent.addActionListener(new MethodExpressionActionListener(actionListener));<newline46mondego>"
"2192splitHere46","2274279splitHere46","#{bean.actionListener}"
"2193splitHere46","2274279splitHere46","bean"
"2194splitHere46","2274279splitHere46","public void actionListener(ActionEvent event) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2195splitHere46","2274279splitHere46","UICommand"
"2196splitHere46","2274279splitHere46","UIInput"
"2197splitHere46","2274279splitHere46","uiCommandComponent.setId(<doubleQuotes46>someFixedId<doubleQuotes46>);<newline46mondego>"
"2198splitHere46","2274330splitHere46","<doubleQuotes46>=([^;]*);<doubleQuotes46><newline46mondego>"
"2199splitHere46","2274330splitHere46","<doubleQuotes46>=(.*?);<doubleQuotes46><newline46mondego>"
"2200splitHere46","2274330splitHere46","group[1]"
"2201splitHere46","2274330splitHere46","Regex r = new Regex(<doubleQuotes46>=([^;]*);<doubleQuotes46>);<newline46mondego>Match m = r.Match(yourData);<newline46mondego>while (m.Success) {<newline46mondego>    string match = m.Groups[1];<newline46mondego>    // match should be the text between the '=' and the ';'.<newline46mondego>}<newline46mondego>"
"2202splitHere46","2274390splitHere46","// Create a empty BufferedImage which supports alpha<newline46mondego>// It will be just as fast a Toolkit image<newline46mondego>BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);<newline46mondego>"
"2203splitHere46","2274597splitHere46","transport.send(message, message.getAllRecipients());<newline46mondego>"
"2204splitHere46","2274597splitHere46","transport.sendMessage(message, message.getAllRecipients());<newline46mondego>"
"2205splitHere46","2274600splitHere46","javax.persistence.ValidationMode"
"2206splitHere46","2274600splitHere46","Auto"
"2207splitHere46","2274600splitHere46","Callback"
"2208splitHere46","2274600splitHere46","PersistenceException"
"2209splitHere46","2274600splitHere46","None"
"2210splitHere46","2274613splitHere46","Transport.send()"
"2211splitHere46","2274613splitHere46","Transport"
"2212splitHere46","2274613splitHere46","sendMessage()"
"2213splitHere46","2274613splitHere46","send()"
"2214splitHere46","2274676splitHere46","java.io.PrintStream"
"2215splitHere46","2274676splitHere46","System.out"
"2216splitHere46","2274676splitHere46","print"
"2217splitHere46","2274676splitHere46","char[]"
"2218splitHere46","2274676splitHere46","int[]"
"2219splitHere46","2274676splitHere46","char[]"
"2220splitHere46","2274676splitHere46","int[]"
"2221splitHere46","2274676splitHere46","String.valueOf()"
"2222splitHere46","2274766splitHere46","extends Object"
"2223splitHere46","2274957splitHere46","decodeBase64"
"2224splitHere46","2274957splitHere46","commons.codec.binary.Base64"
"2225splitHere46","2274991splitHere46","private"
"2226splitHere46","2274991splitHere46","Field field = getClass().getSuperclass().getDeclaredField(<doubleQuotes46>privateFieldName<doubleQuotes46>);<newline46mondego>field.setAccessible(true);<newline46mondego>Object value = field.get(this);<newline46mondego>"
"2227splitHere46","2275035splitHere46","str1.toLowerCase().contains(str2.toLowerCase())<newline46mondego>"
"2228splitHere46","2275312splitHere46","<String, Container>"
"2229splitHere46","2275312splitHere46","private class TheCache extends LinkedHashMap<String, Container> {<newline46mondego>"
"2230splitHere46","2275325splitHere46","public static void main(final String[] args) throws Exception<newline46mondego>{<newline46mondego>    final FontRenderContext frc = new FontRenderContext(null, true, true);<newline46mondego>    final Font font = new Font(<doubleQuotes46>serif<doubleQuotes46>, Font.PLAIN, 18);<newline46mondego>    final TextLayout layout = new TextLayout(<doubleQuotes46>This is a test<doubleQuotes46>, font, frc);<newline46mondego>    final Rectangle2D bounds = layout.getBounds();<newline46mondego>    System.err.println((int) (bounds.getWidth() + .5));<newline46mondego>}<newline46mondego>"
"2231splitHere46","2275360splitHere46","<c:set var=<doubleQuotes46>rand<doubleQuotes46>><%= java.lang.Math.round(java.lang.Math.random() * 2) %></c:set><newline46mondego>"
"2232splitHere46","2275360splitHere46","${rand mod 2 == 0}"
"2233splitHere46","2275360splitHere46","${rand mod 2 == 1}"
"2234splitHere46","2275513splitHere46","import javax.swing.*;<newline46mondego>import java.awt.event.*;<newline46mondego><newline46mondego>public class Foo {<newline46mondego>  public static void main(String args[]) {<newline46mondego>    // Create a <doubleQuotes46>clickable<doubleQuotes46> image icon.<newline46mondego>    ImageIcon icon = new ImageIcon(<doubleQuotes46>path/to/image.jpg<doubleQuotes46>);<newline46mondego>    JLabel label = new JLabel(icon);<newline46mondego>    label.addMouseListener(new MouseAdapter() {<newline46mondego>      public void mouseClicked(MouseEvent me) {<newline46mondego>        System.out.println(<doubleQuotes46>CLICKED<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    });<newline46mondego><newline46mondego>    // Add it to a frame.<newline46mondego>    JFrame frame = new JFrame(<doubleQuotes46>My Window<doubleQuotes46>);<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.getContentPane().add(label);<newline46mondego>    frame.pack();<newline46mondego>    frame.setVisible(true);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2235splitHere46","2275530splitHere46","new Date(msecs)"
"2236splitHere46","2275578splitHere46","WebServiceMessageCallback"
"2237splitHere46","2275578splitHere46","public void marshalWithSoapActionHeader(MyObject o) {<newline46mondego><newline46mondego>    webServiceTemplate.marshalSendAndReceive(o, new WebServiceMessageCallback() {<newline46mondego><newline46mondego>        public void doWithMessage(WebServiceMessage message) {<newline46mondego>            try {<newline46mondego>                SoapMessage soapMessage = (SoapMessage)message;<newline46mondego>                SoapHeader header = soapMessage.getSoapHeader();<newline46mondego>                StringSource headerSource = new StringSource(<doubleQuotes46><credentials xmlns=\<doubleQuotes46>http://example.com/auth\<doubleQuotes46>>\n +<newline46mondego>                        <username><doubleQuotes46>+username+<doubleQuotes46></username>\n +<newline46mondego>                        <password><doubleQuotes46>+password<doubleQuotes46>+</password>\n +<newline46mondego>                        </credentials><doubleQuotes46>);<newline46mondego>                Transformer transformer = TransformerFactory.newInstance().newTransformer();<newline46mondego>                transformer.transform(headerSource, header.getResult());<newline46mondego>            } catch (Exception e) {<newline46mondego>                // exception handling<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"2238splitHere46","2275664splitHere46","(pointer, size)"
"2239splitHere46","2275664splitHere46","size"
"2240splitHere46","2275664splitHere46","pointer"
"2241splitHere46","2275866splitHere46","myval"
"2242splitHere46","2275866splitHere46","value1 = true"
"2243splitHere46","2275866splitHere46","myval"
"2244splitHere46","2275866splitHere46","value1"
"2245splitHere46","2275880splitHere46","class MyThread extends Thread {<newline46mondego><newline46mondego>  private JFrame frame;<newline46mondego>  //-- getters and setters for frame<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    Thread.sleep(1000); //close the frame after 1 second.<newline46mondego>    frame.close();<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"2246splitHere46","2275880splitHere46","MyThread th = new MyThread();<newline46mondego>th.setFrame(this);<newline46mondego>th.start();<newline46mondego>"
"2247splitHere46","2276109splitHere46","<dependency><newline46mondego>  <groupId>javax.servlet</groupId><newline46mondego>  <artifactId>jstl</artifactId><newline46mondego>  <version><doubleQuotes46>whatever version you need<doubleQuotes46></version><newline46mondego>  <scope>runtime</scope><newline46mondego></dependency><newline46mondego>"
"2248splitHere46","2276221splitHere46","<property file=<doubleQuotes46>build.properties<doubleQuotes46> /><newline46mondego><property name=<doubleQuotes46>junit-home<doubleQuotes46> location=<doubleQuotes46>/etc/environment<doubleQuotes46> /><newline46mondego><newline46mondego><path id=<doubleQuotes46>test.compile.classpath<doubleQuotes46>><newline46mondego>  <path refid=<doubleQuotes46>compile.classpath<doubleQuotes46> /><newline46mondego>  <pathelement location=<doubleQuotes46>${junit-home}/junit-4.8.1.jar<doubleQuotes46> /><newline46mondego>  <pathelement location=<doubleQuotes46>${target}<doubleQuotes46> /><newline46mondego></path><newline46mondego>"
"2249splitHere46","2276221splitHere46","junit-home=/etc/environment<newline46mondego>"
"2250splitHere46","2276304splitHere46","org.hibernate.cfg.reveng.ReverseEngineeringStrategy."
"2251splitHere46","2276304splitHere46","DelegatingReverseEngineeringStrategy"
"2252splitHere46","2276304splitHere46","ReverseEngineeringStrategy"
"2253splitHere46","2276304splitHere46","public class ExampleStrategy extends<newline46mondego>"
"2254splitHere46","2276304splitHere46","public ExampleStrategy(ReverseEngineeringStrategy<newline46mondego>"
"2255splitHere46","2276304splitHere46","public String columnToPropertyName(TableIdentifier<newline46mondego>"
"2256splitHere46","2276304splitHere46","public String tableToClassName(TableIdentifier tableIdentifier) {<newline46mondego>    return delegate==null?null:delegate.tableToClassName(tableIdentifier);<newline46mondego>}<newline46mondego>"
"2257splitHere46","2276304splitHere46","ADDRESSES"
"2258splitHere46","2276304splitHere46","Address"
"2259splitHere46","2276307splitHere46","String getViewName()"
"2260splitHere46","2276307splitHere46","Document"
"2261splitHere46","2276307splitHere46","Document"
"2262splitHere46","2276307splitHere46","Document"
"2263splitHere46","2276307splitHere46","Document"
"2264splitHere46","2276324splitHere46","Result process(Parent parent) {<newline46mondego>    Result result = new Result();<newline46mondego>    for (Child child : parent.getChildren()) {<newline46mondego>        result.update(process(child));<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"2265splitHere46","2276324splitHere46","update()"
"2266splitHere46","2276324splitHere46","void process(Parent parent, Result result) {<newline46mondego>    for (Child child : parent.getChildren()) {<newline46mondego>        result.update(child);<newline46mondego>        process(child, result);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2267splitHere46","2276324splitHere46","update()"
"2268splitHere46","2276324splitHere46","process()"
"2269splitHere46","2276324splitHere46","if"
"2270splitHere46","2276669splitHere46","ApplicationContext ctx = (ApplicationContext)ApplicationHolder.getApplication().getMainContext();<newline46mondego>CountryServiceInt service = (CountryServiceInt) ctx.getBean(<doubleQuotes46>countryService<doubleQuotes46>);<newline46mondego>String str = service.sayHello(request.getParameter.(<doubleQuotes46>name<doubleQuotes46>));    <newline46mondego>"
"2271splitHere46","2276897splitHere46","println 'loading application config ...'<newline46mondego><newline46mondego><newline46mondego>// Place your Spring DSL code here<newline46mondego>beans = {<newline46mondego>    loadBeans(<doubleQuotes46>classpath:*security.groovy<doubleQuotes46>) <newline46mondego><newline46mondego>}<newline46mondego>"
"2272splitHere46","2276897splitHere46","security.groovy"
"2273splitHere46","2276897splitHere46","scripts/_Events.groovy"
"2274splitHere46","2276897splitHere46",".groovy"
"2275splitHere46","2276897splitHere46","classesDirPath"
"2276splitHere46","2276897splitHere46","beans = {<newline46mondego>    // load spring-beans for db-access via spring-jdbc-template<newline46mondego>    loadBeans('security.groovy')<newline46mondego><newline46mondego>    // load some other spring-beans<newline46mondego>        ...<newline46mondego>}<newline46mondego>"
"2277splitHere46","2276926splitHere46","result.equals(docID)"
"2278splitHere46","2276982splitHere46","Filter"
"2279splitHere46","2276982splitHere46","url-pattern"
"2280splitHere46","2276982splitHere46","/*"
"2281splitHere46","2276982splitHere46","ServletResponse"
"2282splitHere46","2276982splitHere46","HttpServletResponseWrapper"
"2283splitHere46","2276982splitHere46","encodeURL()"
"2284splitHere46","2276982splitHere46","public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {<newline46mondego>    chain.doFilter(request, new HttpServletResponseWrapper((HttpServletResponse) response) {<newline46mondego>        public String encodeURL(String url) {<newline46mondego>            return url;<newline46mondego>        }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"2285splitHere46","2277172splitHere46","String[] subnetsMasks = { ... };<newline46mondego>    Collection<SubnetInfo> subnets = new ArrayList<SubnetInfo>();<newline46mondego>    for (String subnetMask : subnetsMasks) {<newline46mondego>        subnets.add(new SubnetUtils(subnetMask).getInfo());<newline46mondego>    }<newline46mondego><newline46mondego>    String ipAddress = ...;<newline46mondego>    for (SubnetInfo subnet : subnets) {<newline46mondego>        if (subnet.isInRange(ipAddress)) {<newline46mondego>            System.out.println(<doubleQuotes46>IP Address <doubleQuotes46> + ipAddress + <doubleQuotes46> is in range <doubleQuotes46> + subnet.getCidrSignature());<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"2286splitHere46","2277201splitHere46","finalHandler = new StreamResult(new OutputStreamWriter(System.out));<newline46mondego>  // customHandler extends DefaultHandler<newline46mondego>  CustomTransformerHandler customHandler = new CustomTransformerHandler(<newline46mondego>         finalHandler);<newline46mondego>  customHandler.startDocumentExplicitly();<newline46mondego>  InputStream is = null;<newline46mondego>  while ((is = customHandler.createNextInputStream()) != null) {<newline46mondego>    // multiple inputStream parsing<newline46mondego>    XMLReader myReader = XMLReaderFactory.createXMLReader();<newline46mondego>    myReader.setContentHandler(customHandler);<newline46mondego>    myReader.parse(new InputSource(is));<newline46mondego>  }<newline46mondego>  customHandler.endDocumentExplicitly();<newline46mondego>"
"2287splitHere46","2277303splitHere46","ecj"
"2288splitHere46","2277303splitHere46","javac"
"2289splitHere46","2277303splitHere46","javac"
"2290splitHere46","2277520splitHere46","JTidyFilter"
"2291splitHere46","2277520splitHere46","web.xml"
"2292splitHere46","2277689splitHere46","String[] nline = line.split (<doubleQuotes46>[,]<doubleQuotes46>);<newline46mondego>......<newline46mondego>"
"2293splitHere46","2277689splitHere46","String line = input.nextLine() + <doubleQuotes46>,<doubleQuotes46> + input.nextLine();<newline46mondego>"
"2294splitHere46","2277824splitHere46","Sardine sardine = SardineFactory.begin(<doubleQuotes46>username<doubleQuotes46>, <doubleQuotes46>password<doubleQuotes46>);<newline46mondego>byte[] data = FileUtils.readFileToByteArray(new File(<doubleQuotes46>/file/on/disk<doubleQuotes46>));<newline46mondego>sardine.put(<doubleQuotes46>http://yourdavserver.com/adirectory/nameOfFile.jpg<doubleQuotes46>, data);<newline46mondego>"
"2295splitHere46","2277824splitHere46","Sardine sardine = SardineFactory.begin(<doubleQuotes46>username<doubleQuotes46>, <doubleQuotes46>password<doubleQuotes46>);<newline46mondego>InputStream fis = new FileInputStream(new File(<doubleQuotes46>/some/file/on/disk.txt<doubleQuotes46>));<newline46mondego>sardine.put(<doubleQuotes46>http://yourdavserver.com/adirectory/nameOfFile.jpg<doubleQuotes46>, fis);<newline46mondego>"
"2296splitHere46","2278148splitHere46","connection.setDoOutput(true);<newline46mondego>"
"2297splitHere46","2278324splitHere46","BoxLayout"
"2298splitHere46","2278583splitHere46","prefuse"
"2299splitHere46","2278583splitHere46","Action"
"2300splitHere46","2278583splitHere46","ShapeAction"
"2301splitHere46","2278583splitHere46","VisualItem"
"2302splitHere46","2278583splitHere46","VisualItem"
"2303splitHere46","2278583splitHere46","renderers"
"2304splitHere46","2278583splitHere46","Visualization"
"2305splitHere46","2278583splitHere46","ShapeRenderer m_nodeRenderer = new ShapeRenderer();<newline46mondego>DefaultRendererFactory rf = new DefaultRendererFactory(m_nodeRenderer);<newline46mondego>m_vis.setRendererFactory(rf);<newline46mondego>"
"2306splitHere46","2278613splitHere46","DefaultListCellRenderer"
"2307splitHere46","2278613splitHere46","JLabel"
"2308splitHere46","2278613splitHere46","getListRendererComponent"
"2309splitHere46","2278613splitHere46","JList"
"2310splitHere46","2278613splitHere46","JLabel"
"2311splitHere46","2278613splitHere46","BasicLabelUI"
"2312splitHere46","2278613splitHere46","<doubleQuotes46>Label.disabledForeground<doubleQuotes46>"
"2313splitHere46","2278613splitHere46","<doubleQuotes46>Label.disabledText<doubleQuotes46>"
"2314splitHere46","2278613splitHere46","<doubleQuotes46>Label.disabledText<doubleQuotes46>"
"2315splitHere46","2278613splitHere46","UIManager"
"2316splitHere46","2278613splitHere46","JLabel"
"2317splitHere46","2278613splitHere46","JList"
"2318splitHere46","2278613splitHere46","JList"
"2319splitHere46","2278613splitHere46","JLabel"
"2320splitHere46","2278973splitHere46","file.length()"
"2321splitHere46","2278973splitHere46","myProgressBar.setMaximum(length)"
"2322splitHere46","2278973splitHere46","myProgressBar.setValue(myProgressBar.getValue()+lineLength)"
"2323splitHere46","2278973splitHere46","init()"
"2324splitHere46","2278973splitHere46","JFrame"
"2325splitHere46","2278973splitHere46","JOptionPane"
"2326splitHere46","2278973splitHere46","JDialog"
"2327splitHere46","2278973splitHere46","JDialog"
"2328splitHere46","2278973splitHere46","JOptionPane"
"2329splitHere46","2278973splitHere46","JOptionPane"
"2330splitHere46","2278973splitHere46","JOptionPane"
"2331splitHere46","2278973splitHere46","show*"
"2332splitHere46","2278973splitHere46","message"
"2333splitHere46","2278973splitHere46","JOptionPane.CANCEL_OPTION"
"2334splitHere46","2278973splitHere46","optionType"
"2335splitHere46","2278973splitHere46","JDialog"
"2336splitHere46","2279059splitHere46","List"
"2337splitHere46","2279059splitHere46","LinkedList"
"2338splitHere46","2279059splitHere46","ArrayList"
"2339splitHere46","2279059splitHere46","ArrayList"
"2340splitHere46","2279059splitHere46","LinkedList"
"2341splitHere46","2279059splitHere46","ArrayList"
"2342splitHere46","2279059splitHere46","List"
"2343splitHere46","2279059splitHere46","ArrayList"
"2344splitHere46","2279136splitHere46","getSize()"
"2345splitHere46","2279136splitHere46","Window"
"2346splitHere46","2279136splitHere46","JFrame"
"2347splitHere46","2279136splitHere46","ComponentListener"
"2348splitHere46","2279136splitHere46","ComponentEvent"
"2349splitHere46","2279136splitHere46","ComponentResized()"
"2350splitHere46","2279232splitHere46","dual"
"2351splitHere46","2279232splitHere46","Hibernate"
"2352splitHere46","2279402splitHere46","tool.jar"
"2353splitHere46","2279402splitHere46","tools.jar"
"2354splitHere46","2279402splitHere46","-vm"
"2355splitHere46","2279402splitHere46","tools.jar"
"2356splitHere46","2279402splitHere46","Window>Preferences>Ant>Runtime>Classpath"
"2357splitHere46","2279402splitHere46","fork=<doubleQuotes46>true<doubleQuotes46>"
"2358splitHere46","2279571splitHere46","<xs:complexType name=<doubleQuotes46>Person<doubleQuotes46>><newline46mondego>    <xs:simpleContent><newline46mondego>        <xs:extension base=<doubleQuotes46>xs:string<doubleQuotes46>><newline46mondego>           <xs:attribute name=<doubleQuotes46>ref<doubleQuotes46> type=<doubleQuotes46>xs:IDREF<doubleQuotes46> use=<doubleQuotes46>required<doubleQuotes46>/><newline46mondego>        </xs:extension><newline46mondego>    </xs:simpleContent><newline46mondego></xs:complexType><newline46mondego>"
"2359splitHere46","2279571splitHere46","<person id=<doubleQuotes46>foo<doubleQuotes46>>A Name</person>"
"2360splitHere46","2279821splitHere46","using(var x = new SqlTranscation)"
"2361splitHere46","2279821splitHere46","var connection = new SqlConnection();<newline46mondego><newline46mondego>var command = new SqlCommand();<newline46mondego><newline46mondego>var transaction = connection.BeginTransaction();<newline46mondego><newline46mondego>command.Connection = connection;<newline46mondego>command.Transaction = transaction;<newline46mondego>"
"2362splitHere46","2279821splitHere46","///<newline46mondego>/// Try to drop a database<newline46mondego>///<newline46mondego>try<newline46mondego>{<newline46mondego>    connection.Open();<newline46mondego><newline46mondego>    command.CommandText = <doubleQuotes46>drop database Nothwind<doubleQuotes46>;<newline46mondego><newline46mondego>    command.ExecuteNonQuery();<newline46mondego>}<newline46mondego>"
"2363splitHere46","2279821splitHere46","///<newline46mondego>/// Due to insufficient priviligies we couldn't do it, an exception was thrown<newline46mondego>///<newline46mondego>catch(Exception ex)<newline46mondego>{<newline46mondego>    transaction.Rollback();<newline46mondego>}<newline46mondego>"
"2364splitHere46","2279821splitHere46","///<newline46mondego>/// Clean up the resources<newline46mondego>///<newline46mondego>finally<newline46mondego>{<newline46mondego><newline46mondego>    connection.Close();<newline46mondego>    transaction = null;<newline46mondego>    command = null;<newline46mondego>    connection = null;<newline46mondego>}<newline46mondego>"
"2365splitHere46","2279959splitHere46","TableModel"
"2366splitHere46","2279959splitHere46","List"
"2367splitHere46","2279959splitHere46","List"
"2368splitHere46","2279959splitHere46","public class ImmutablePagedTableModel extends AbstractTableModel {<newline46mondego>  private final List<MyBusinessObject> allData;<newline46mondego>  private final int pageSize;<newline46mondego>  private int pos;  <newline46mondego><newline46mondego>  public ImmutablePagedTableModel(List<MyBusinessObject> allData) {<newline46mondego>    // Copy construct internal list.  Use ArrayList for random access look-up efficiency.<newline46mondego>    this.allData = new ArrayList<MyBusinessObject>(allData);<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Returns true if the model has another page of data or false otherwise.<newline46mondego>   */<newline46mondego>  public boolean hasNextPage() {<newline46mondego>    return pos + pageSize < allData.size();<newline46mondego>  }<newline46mondego><newline46mondego>  /**<newline46mondego>   * Flips to the next page of data available.<newline46mondego>   */<newline46mondego>  public void nextPage() {<newline46mondego>    if (hasNextPage()) {<newline46mondego>      pos += pageSize;<newline46mondego><newline46mondego>      // All data in the table has effectively <doubleQuotes46>changed<doubleQuotes46>, so fire an event<newline46mondego>      // causing the JTable to repaint.  <newline46mondego>      fireTableDataChanged();<newline46mondego>    } else {<newline46mondego>      throw new IndexOutOfBoundsException();<newline46mondego>    }    <newline46mondego>  }<newline46mondego><newline46mondego>  public int getRowcount() {<newline46mondego>    return Math.min(pageSize, allData.size() - pos);<newline46mondego>  }<newline46mondego><newline46mondego>  // TODO: Implement hasPreviousPage(), previousPage();<newline46mondego>}<newline46mondego>"
"2369splitHere46","2279959splitHere46","SwingWorker"
"2370splitHere46","2279959splitHere46","TableModel"
"2371splitHere46","2279959splitHere46","TableModelEvent"
"2372splitHere46","2279959splitHere46","allData"
"2373splitHere46","2279969splitHere46","String"
"2374splitHere46","2279969splitHere46","final MyHashMap map = new MyHashMap();<newline46mondego><newline46mondego>map.put(<doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46>baz<doubleQuotes46>, new Object());<newline46mondego>map.put(<doubleQuotes46><doubleQuotes46>, <doubleQuotes46>foo<doubleQuotes46>, <doubleQuotes46>baz<doubleQuotes46>, new Object()); // Overwrites the previous call<newline46mondego>"
"2375splitHere46","2279969splitHere46","Object"
"2376splitHere46","2279969splitHere46","String"
"2377splitHere46","2279969splitHere46","keySet"
"2378splitHere46","2279969splitHere46","Map"
"2379splitHere46","2279969splitHere46","Set"
"2380splitHere46","2279969splitHere46","String"
"2381splitHere46","2279969splitHere46","Map"
"2382splitHere46","2279969splitHere46","Integer"
"2383splitHere46","2279969splitHere46","MyHashMap"
"2384splitHere46","2279969splitHere46","Map"
"2385splitHere46","2279969splitHere46","put"
"2386splitHere46","2279969splitHere46","get"
"2387splitHere46","2279969splitHere46","remove"
"2388splitHere46","2279969splitHere46","Map<Object, Object> map = new MyHashMap();<newline46mondego>"
"2389splitHere46","2279969splitHere46","equals"
"2390splitHere46","2279969splitHere46","hashCode"
"2391splitHere46","2279969splitHere46","HashMap"
"2392splitHere46","2280084splitHere46","System.out.println(write(null, null)); <newline46mondego>"
"2393splitHere46","2280084splitHere46","Exception is : <newline46mondego>null<newline46mondego>false<newline46mondego>"
"2394splitHere46","2280157splitHere46","value"
"2395splitHere46","2280157splitHere46","h:dataTable"
"2396splitHere46","2280157splitHere46","h:dataTable"
"2397splitHere46","2280157splitHere46","var"
"2398splitHere46","2280157splitHere46","h:column"
"2399splitHere46","2280157splitHere46","<h:form><newline46mondego>    <h:dataTable value=<doubleQuotes46>#{bean.list}<doubleQuotes46> var=<doubleQuotes46>item<doubleQuotes46>><newline46mondego>        <h:column><h:inputText value=<doubleQuotes46>#{item.value}<doubleQuotes46> /></h:column><newline46mondego>    </h:dataTable><newline46mondego>    <h:commandButton value=<doubleQuotes46>Add<doubleQuotes46> action=<doubleQuotes46>#{bean.add}<doubleQuotes46>/><newline46mondego></h:form><newline46mondego>"
"2400splitHere46","2280157splitHere46","public class Bean {<newline46mondego>    private List<Item> list;<newline46mondego><newline46mondego>    public Bean() {<newline46mondego>        list = new ArrayList<Item>();<newline46mondego>    }<newline46mondego><newline46mondego>    public void add() {<newline46mondego>        list.add(new Item());<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Item> getList() {<newline46mondego>        return list;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2401splitHere46","2280157splitHere46","Item"
"2402splitHere46","2280157splitHere46","Item item = new Item();"
"2403splitHere46","2280157splitHere46","public class Item {<newline46mondego><newline46mondego>    private String value;<newline46mondego><newline46mondego>    public Item() {<newline46mondego>        // Keep default constructor alive.<newline46mondego>    }<newline46mondego><newline46mondego>    public Item(String value) {<newline46mondego>        this.value = value;<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"2404splitHere46","2280157splitHere46","public class Bean {<newline46mondego>    private List<Item> list;<newline46mondego>    private HtmlInputHidden count = new HtmlInputHidden();<newline46mondego><newline46mondego>    public Bean() {<newline46mondego>        count.setValue(0);<newline46mondego>    }<newline46mondego><newline46mondego>    public void add() {<newline46mondego>        list.add(new Item());<newline46mondego>    }<newline46mondego><newline46mondego>    public List<Item> getList() {<newline46mondego>        if (list == null) loadList();<newline46mondego>        return list;<newline46mondego>    }<newline46mondego><newline46mondego>    public HtmlInputHidden getCount() {<newline46mondego>        return count;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setCount(HtmlInputHidden count) {<newline46mondego>        this.count = count;<newline46mondego>    }<newline46mondego><newline46mondego>    private void loadList() {<newline46mondego>        list = new ArrayList<Item>();<newline46mondego><newline46mondego>        // Preserve list with newly added items.<newline46mondego>        for (int i = 0; i < (Integer) count.getValue(); i++) {<newline46mondego>            list.add(new Item());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2405splitHere46","2280157splitHere46","<h:form>"
"2406splitHere46","2280157splitHere46","<h:inputHidden binding=<doubleQuotes46>#{bean.count}<doubleQuotes46> converter=<doubleQuotes46>javax.faces.Integer<doubleQuotes46> /><newline46mondego>"
"2407splitHere46","2280224splitHere46","try {<newline46mondego>        SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                System.out.println(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>                if (true) {<newline46mondego>                    throw new RuntimeException(<doubleQuotes46>runtime exception<doubleQuotes46>);<newline46mondego>                }<newline46mondego>                System.out.println(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    } catch (InterruptedException e) {<newline46mondego>        e.printStackTrace(System.out);<newline46mondego>    } catch (InvocationTargetException e) {<newline46mondego>        e.printStackTrace(System.out);<newline46mondego>    }<newline46mondego>"
"2408splitHere46","2280246splitHere46","jsp:include"
"2409splitHere46","2280246splitHere46","<jsp:useBean id=<doubleQuotes46>pos<doubleQuotes46> class=<doubleQuotes46>MyBeanscope=<doubleQuotes46>page<doubleQuotes46>><newline46mondego>    <jsp:setProperty name=<doubleQuotes46>a<doubleQuotes46> property=<doubleQuotes46>a<doubleQuotes46>/><newline46mondego></jsp:useBean><newline46mondego><newline46mondego>[some initialisation of MyBean]<newline46mondego><newline46mondego><jsp:include page=<doubleQuotes46>/myframe1.jsp<doubleQuotes46>...><newline46mondego><jsp:include page=<doubleQuotes46>/myframe2.jsp<doubleQuotes46>...><newline46mondego>"
"2410splitHere46","2280358splitHere46","${bean.property}<newline46mondego>"
"2411splitHere46","2280358splitHere46","protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    List<Person> persons = personDAO.list(); // Get list of persons from DB.<newline46mondego>    request.setAttribute(<doubleQuotes46>persons<doubleQuotes46>, persons); // So it's available as `${persons}` in EL.<newline46mondego>    request.getRequestDispatcher(<doubleQuotes46>/WEB-INF/persons.jsp<doubleQuotes46>).forward(request, response); // Forward to JSP for display.<newline46mondego>}<newline46mondego>"
"2412splitHere46","2280358splitHere46","Person"
"2413splitHere46","2280358splitHere46","public class Person {<newline46mondego>    private Long id;<newline46mondego>    private String name;<newline46mondego>    private String email;<newline46mondego>    private Integer age;<newline46mondego>    // Add/generate getters and setters here.<newline46mondego>}<newline46mondego>"
"2414splitHere46","2280358splitHere46","PersonDAO#list()"
"2415splitHere46","2280358splitHere46","List"
"2416splitHere46","2280358splitHere46","Person"
"2417splitHere46","2280358splitHere46","public List<Person> list() throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    Statement statement = null;<newline46mondego>    ResultSet resultSet = null;<newline46mondego>    List<Person> persons = new ArrayList<Person>();<newline46mondego><newline46mondego>    try {<newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.createStatement(<doubleQuotes46>SELECT id, name, email, age FROM person<doubleQuotes46>);<newline46mondego>        resultSet = statement.executeQuery();<newline46mondego>        while (resultSet.next()) {<newline46mondego>            Person person = new Person();<newline46mondego>            person.setId(resultSet.getLong(<doubleQuotes46>id<doubleQuotes46>));<newline46mondego>            person.setName(resultSet.getString(<doubleQuotes46>name<doubleQuotes46>));<newline46mondego>            person.setEmail(resultSet.getString(<doubleQuotes46>email<doubleQuotes46>));<newline46mondego>            person.setAge(resultSet.getInteger(<doubleQuotes46>age<doubleQuotes46>));<newline46mondego>            persons.add(person);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        if (resultSet != null) try { resultSet.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego><newline46mondego>    return persons;<newline46mondego>}<newline46mondego>"
"2418splitHere46","2280358splitHere46","web.xml"
"2419splitHere46","2280358splitHere46","url-pattern"
"2420splitHere46","2280358splitHere46","/persons"
"2421splitHere46","2280358splitHere46","/WEB-INF"
"2422splitHere46","2280358splitHere46","persons.jsp"
"2423splitHere46","2280358splitHere46","/WEB-INF/lib"
"2424splitHere46","2280358splitHere46","c:forEach"
"2425splitHere46","2280358splitHere46","List"
"2426splitHere46","2280358splitHere46","List<Person>"
"2427splitHere46","2280358splitHere46","persons"
"2428splitHere46","2280358splitHere46","${persons}"
"2429splitHere46","2280358splitHere46","c:forEach"
"2430splitHere46","2280358splitHere46","Person"
"2431splitHere46","2280358splitHere46","<%@ taglib uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> prefix=<doubleQuotes46>c<doubleQuotes46> %><newline46mondego><newline46mondego>...<newline46mondego><newline46mondego><table><newline46mondego>    <c:forEach items=<doubleQuotes46>${persons}<doubleQuotes46> var=<doubleQuotes46>person<doubleQuotes46>><newline46mondego>        <tr><newline46mondego>            <td>${person.name}</td><newline46mondego>            <td>${person.email}</td><newline46mondego>            <td>${person.age}</td><newline46mondego>        </tr><newline46mondego>    </c:forEach><newline46mondego></table><newline46mondego>"
"2432splitHere46","2280425splitHere46","ccStatus = CCCrypt(encryptOrDecrypt,<newline46mondego>        kCCAlgorithm3DES,<newline46mondego>        kCCOptionECBMode, <-- this could help<newline46mondego>        vkey, //<doubleQuotes46>123456789012345678901234<doubleQuotes46>, //key<newline46mondego>        kCCKeySize3DES,<newline46mondego>        nil, //<doubleQuotes46>init Vec<doubleQuotes46>, //iv,<newline46mondego>        vplainText, //<doubleQuotes46>Your Name<doubleQuotes46>, //plainText,<newline46mondego>        plainTextBufferSize,<newline46mondego>        (void *)bufferPtr,<newline46mondego>        bufferPtrSize,<newline46mondego>        &movedBytes);<newline46mondego>"
"2433splitHere46","2280425splitHere46","$ echo <doubleQuotes46>Now then and what is this nonsense all about. Do you know?<doubleQuotes46> | openssl enc -aes-128-ecb -K $(echo 1234567890123456 | xxd -p) -iv 0 | xxd <newline46mondego>0000000: 7a68 ea36 8288 c73d f7c4 5d8d 2243 2577  zh.6...=..].<doubleQuotes46>C%w<newline46mondego>0000010: e66b 32f9 772b 6679 d7c0 cb69 037b 8740  .k2.w+fy...i.{.@<newline46mondego>0000020: 883f 8211 7482 29f4 7239 84be b50b 5aea  .?..t.).r9....Z.<newline46mondego>0000030: eaa7 519b 65e8 fa26 a1bb de52 083b 478f  ..Q.e..&...R.;G.<newline46mondego>"
"2434splitHere46","2280428splitHere46","request.getParameter()"
"2435splitHere46","2280428splitHere46","HttpServletRequest"
"2436splitHere46","2280428splitHere46","HttpServletResponse"
"2437splitHere46","2280498splitHere46","String[][] databaseToArray = {<newline46mondego>  //{<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Channel<doubleQuotes46>, <doubleQuotes46>Description<doubleQuotes46>, <doubleQuotes46>Amount<doubleQuotes46>, <doubleQuotes46>isReady<doubleQuotes46>},<newline46mondego>    {<doubleQuotes46>John<doubleQuotes46>, <doubleQuotes46>Nick<doubleQuotes46>,    <doubleQuotes46>likes<doubleQuotes46>,       <doubleQuotes46>2<doubleQuotes46>,      <doubleQuotes46>yes<doubleQuotes46>    },<newline46mondego>    {<doubleQuotes46>Drew<doubleQuotes46>, <doubleQuotes46>MTV<doubleQuotes46>,     <doubleQuotes46>dislikes<doubleQuotes46>,    <doubleQuotes46>4<doubleQuotes46>,      <doubleQuotes46>no<doubleQuotes46>     },<newline46mondego>    {<doubleQuotes46>Fred<doubleQuotes46>, <doubleQuotes46>CNN<doubleQuotes46>,     <doubleQuotes46>okay<doubleQuotes46>,        <doubleQuotes46>3<doubleQuotes46>,      <doubleQuotes46>no<doubleQuotes46>     },<newline46mondego>    {<doubleQuotes46>Beth<doubleQuotes46>, <doubleQuotes46>Fox<doubleQuotes46>,     <doubleQuotes46>valid<doubleQuotes46>,       <doubleQuotes46>1<doubleQuotes46>,      <doubleQuotes46>yes<doubleQuotes46>    }<newline46mondego>};<newline46mondego><newline46mondego>Arrays.sort(databaseToArray, new Comparator<String[]>() {<newline46mondego>    public int compare(String[] a, String[] b) {<newline46mondego>        return a[3].compareTo(b[3]);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"2438splitHere46","2280572splitHere46","HtmlTree"
"2439splitHere46","2280674splitHere46","user.dir"
"2440splitHere46","2280674splitHere46","setProperty()"
"2441splitHere46","2280674splitHere46","user.dir"
"2442splitHere46","2280717splitHere46","http://"
"2443splitHere46","2280717splitHere46","ServiceLoader"
"2444splitHere46","2281181splitHere46","username%40domain.com:password"
"2445splitHere46","2281181splitHere46","String ftpUser = URLEncoder.encode(username, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>String ftpPass = URLEncoder.encode(password, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>String url = String.format(<doubleQuotes46>ftp://%s:%s@domain.com<doubleQuotes46>, ftpUser, ftpPass);<newline46mondego>"
"2446splitHere46","2281384splitHere46","Double.POSITIVE_INFINITY"
"2447splitHere46","2281384splitHere46","isNAN()"
"2448splitHere46","2281543splitHere46","public void testsimple() {<newline46mondego>    Integer a = 124, b = 124, c = 500, d= 500;<newline46mondego>    System.out.println(a == b); //prints true in JDK 1.6<newline46mondego>    System.out.println(c == d); //prints false in JDK 1.6<newline46mondego>}<newline46mondego>"
"2449splitHere46","2281793splitHere46","getSharedEntityManager().flush(); //it's something like this<newline46mondego>getSharedEntityManager().clear(); <newline46mondego>"
"2450splitHere46","2281980splitHere46","setBorder"
"2451splitHere46","2281980splitHere46","JTextField text = new JTextField() {<newline46mondego>    @Override public void setBorder(Border border) {<newline46mondego>        // No!<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"2452splitHere46","2282026splitHere46","public interface PopulationMember<T extends PopulationMember> extends Comparable<T> {<newline46mondego>    int compareTo(T o);<newline46mondego>    T merge(T o);<newline46mondego>    // Some other stuff<newline46mondego><newline46mondego>}<newline46mondego>"
"2453splitHere46","2282026splitHere46","Comparable"
"2454splitHere46","2282064splitHere46","java"
"2455splitHere46","2282064splitHere46","*"
"2456splitHere46","2282308splitHere46","result = new Character(newAnswer...<newline46mondego>"
"2457splitHere46","2282308splitHere46","public class programPalindrome <newline46mondego><newline46mondego>{ <newline46mondego><newline46mondego>    static public boolean isPalindromic(long value){<newline46mondego>        String valueAsString = Long.toString(value);<newline46mondego>        String reverseString = (new StringBuffer(valueAsString)).reverse().toString();<newline46mondego>        if(valueAsString.equals(reverseString)){<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        else{<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) <newline46mondego>    {<newline46mondego><newline46mondego>        System.out.println(args[0] + <doubleQuotes46> is palindromic == <doubleQuotes46> <newline46mondego>                + isPalindromic(Long.parseLong(args[0])));<newline46mondego>    } <newline46mondego>}<newline46mondego>"
"2458splitHere46","2282509splitHere46","install:install-file"
"2459splitHere46","2282647splitHere46","JPanel panel = new JPanel();<newline46mondego>JScrollPane scrollPane = new JScrollPane( panel );<newline46mondego>"
"2460splitHere46","2282647splitHere46","panel.add( button );<newline46mondego>panel.revalidate();<newline46mondego>"
"2461splitHere46","2282745splitHere46","public class AuditableEventListener : DefaultSaveOrUpdateEventListener, IPreUpdateEventListener<newline46mondego>{<newline46mondego>    public override void OnSaveOrUpdate(SaveOrUpdateEvent @event)<newline46mondego>    {<newline46mondego>        Auditable a = @event.Entity as Auditable;<newline46mondego>        if (a != null)<newline46mondego>        {<newline46mondego>            if (this.GetEntityState(@event.Entity, @event.EntityName, @event.Entry, @event.Session) == EntityState.Transient)<newline46mondego>            {<newline46mondego>                a.create_dt = DateTime.Now;<newline46mondego>                a.create_by = @event.Session.Load<Staff>(CurrentStaff.Id);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        base.OnSaveOrUpdate(@event);<newline46mondego>    }<newline46mondego><newline46mondego>    #region IPreUpdateEventListener Members<newline46mondego><newline46mondego>    public bool OnPreUpdate(PreUpdateEvent @event)<newline46mondego>    {<newline46mondego>        var audit = @event.Entity as Auditable;<newline46mondego>        if (audit == null) return false;<newline46mondego><newline46mondego>        var now = DateTime.Now;<newline46mondego>        var user = @event.Session.Load<Staff>(CurrentStaff.Id);<newline46mondego><newline46mondego>        //Very important to keep the State and Entity synced together<newline46mondego>        Set(@event.Persister, @event.State, <doubleQuotes46>last_update_dt<doubleQuotes46>, now);<newline46mondego>        Set(@event.Persister, @event.State, <doubleQuotes46>last_update_by<doubleQuotes46>, user);<newline46mondego><newline46mondego>        audit.last_update_dt = now;<newline46mondego>        audit.last_update_by = user;<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    #endregion<newline46mondego><newline46mondego><newline46mondego>    private void Set(IEntityPersister persister, object[] state, string propertyName, object value)<newline46mondego>    {<newline46mondego>        var index = Array.IndexOf(persister.PropertyNames, propertyName);<newline46mondego>        if (index == -1)<newline46mondego>            return;<newline46mondego>        state[index] = value;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2462splitHere46","2282745splitHere46","ISaveOrUpdateEventListener[] saveUpdateListeners = new ISaveOrUpdateEventListener[] { new AuditableEventListener() };<newline46mondego>conf.EventListeners.SaveEventListeners = saveUpdateListeners;<newline46mondego>conf.EventListeners.SaveOrUpdateEventListeners = saveUpdateListeners;<newline46mondego>conf.EventListeners.UpdateEventListeners = saveUpdateListeners;<newline46mondego><newline46mondego>conf.EventListeners.PreUpdateEventListeners = new IPreUpdateEventListener[] { new AuditableEventListener() };<newline46mondego>"
"2463splitHere46","2282875splitHere46","URLConnection"
"2464splitHere46","2282875splitHere46","FTPClient#enterLocalPassiveMode()"
"2465splitHere46","2282875splitHere46","FTPClient#enterLocalActiveMode()"
"2466splitHere46","2283102splitHere46","UpperToolBar"
"2467splitHere46","2283102splitHere46","JToolBar"
"2468splitHere46","2283102splitHere46","JToolBars"
"2469splitHere46","2283102splitHere46","UpperToolBar"
"2470splitHere46","2283102splitHere46","LowerToolBar"
"2471splitHere46","2283102splitHere46","StatusBar"
"2472splitHere46","2283102splitHere46","UpperToolBar"
"2473splitHere46","2283102splitHere46","public class ToolBarFactory {<newline46mondego>  public static JToolBar getUpperToolBar() {<newline46mondego>    //create and configure a JToolBar to be used as an upper tool bar<newline46mondego>  }<newline46mondego><newline46mondego>  public static JToolBar getLowerToolBar() {<newline46mondego>    //create and configure a JToolBar to be used as a lower tool bar<newline46mondego>  }<newline46mondego><newline46mondego>  public static JToolBar getStatusToolBar() {<newline46mondego>    //create and configure a JToolBar to be used as a status tool bar<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2474splitHere46","2283450splitHere46","private"
"2475splitHere46","2283450splitHere46","protected"
"2476splitHere46","2283450splitHere46","abstract"
"2477splitHere46","2283604splitHere46","flag"
"2478splitHere46","2283604splitHere46","Boolean"
"2479splitHere46","2283604splitHere46","flag = false;<newline46mondego>"
"2480splitHere46","2283604splitHere46","flag = new Boolean(false);<newline46mondego>"
"2481splitHere46","2283604splitHere46","Boolean"
"2482splitHere46","2283604splitHere46","OddThread"
"2483splitHere46","2283604splitHere46","EvenThread"
"2484splitHere46","2283604splitHere46","Boolean"
"2485splitHere46","2283604splitHere46","AtomicBoolean"
"2486splitHere46","2283604splitHere46","flag"
"2487splitHere46","2283604splitHere46","boolean[] flag = new boolean[1];<newline46mondego>"
"2488splitHere46","2283604splitHere46","flag[0]"
"2489splitHere46","2283604splitHere46","flag[0]"
"2490splitHere46","2283604splitHere46","boolean[]"
"2491splitHere46","2283604splitHere46","wait()"
"2492splitHere46","2283604splitHere46","wait()"
"2493splitHere46","2283604splitHere46","notify()"
"2494splitHere46","2283604splitHere46","while (flag == true) {<newline46mondego>    lock.wait();<newline46mondego>}<newline46mondego>"
"2495splitHere46","2283604splitHere46","flag"
"2496splitHere46","2283604splitHere46","synchronized (lock) {<newline46mondego>    while (flagObj.flag == false) {<newline46mondego>        lock.wait();<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(i);<newline46mondego><newline46mondego>    flagObj.flag = false;<newline46mondego>    lock.notify();<newline46mondego>}<newline46mondego>"
"2497splitHere46","2283707splitHere46","@Singleton<newline46mondego>public class MasterDataCache <newline46mondego>{<newline46mondego>    private final static Logger logger = LoggerFactory.getLogger(MasterDataCache.class);<newline46mondego><newline46mondego>    private Map cache;<newline46mondego><newline46mondego>    @PostConstruct<newline46mondego>    public void initCache() {<newline46mondego>        logger.debug(<doubleQuotes46>initCache()<doubleQuotes46>);<newline46mondego>        this.cache = new HashMap();<newline46mondego>    }<newline46mondego><newline46mondego>    public Object get(String key){<newline46mondego>        return this.cache.get(key);<newline46mondego>    }<newline46mondego><newline46mondego>    public void store(String key,Object value){<newline46mondego>        this.cache.put(key, value);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2498splitHere46","2283707splitHere46","@WebServlet(name=<doubleQuotes46>SingletonTester<doubleQuotes46>, urlPatterns={<doubleQuotes46>/SingletonTester<doubleQuotes46>})<newline46mondego>public class SingletonTester extends HttpServlet {<newline46mondego><newline46mondego>    @EJB<newline46mondego>    MasterDataCache masterDataCache;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void init(){<newline46mondego>     masterDataCache.store(<doubleQuotes46>startup<doubleQuotes46>, new Date());<newline46mondego>    }<newline46mondego><newline46mondego>    public void doGet(HttpServletRequest request, HttpServletResponse response)<newline46mondego>    throws ServletException, IOException {<newline46mondego>        PrintWriter out = response.getWriter();<newline46mondego>        try {<newline46mondego>            out.println(<doubleQuotes46>Startup time: <doubleQuotes46> + masterDataCache.get(<doubleQuotes46>startup<doubleQuotes46>) );<newline46mondego>        } finally {<newline46mondego>            out.close();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2499splitHere46","2283707splitHere46","initCache"
"2500splitHere46","2283707splitHere46","eclipseApps/$projectName"
"2501splitHere46","2283707splitHere46","eclipseApps/$projectName/WEB-INF/classses"
"2502splitHere46","2284157splitHere46","AbstractExcelView"
"2503splitHere46","2284157splitHere46","WEB-INF"
"2504splitHere46","2284157splitHere46","request.getRequestDispatcher(fileName).forward(request, response)"
"2505splitHere46","2284157splitHere46","response.getOutputStream()"
"2506splitHere46","2284157splitHere46","response.setContentType(<doubleQuotes46>application/vnd.ms-excel<doubleQuotes46>);"
"2507splitHere46","2284161splitHere46","SampleJ"
"2508splitHere46","2284161splitHere46","String[]"
"2509splitHere46","2284161splitHere46","class SampleJ {<newline46mondego>    // ...<newline46mondego>    public String[] toStringArray =<newline46mondego>        Arrays.asList(String.valueOf(getId()),<newline46mondego>                      String.valueOf(getDateCreatedSample()),<newline46mondego>                      String.valueOf(getTtId()),<newline46mondego>                      String.valueOf(getChipId()));<newline46mondego>}<newline46mondego>"
"2510splitHere46","2284161splitHere46","for (SampleJ elem: list) {<newline46mondego>    writer.writeNext(elem.toStringArray());<newline46mondego>}<newline46mondego>"
"2511splitHere46","2284192splitHere46","<many-to-one name=<doubleQuotes46>user<doubleQuotes46> class=<doubleQuotes46>User<doubleQuotes46> column=<doubleQuotes46>user_id<doubleQuotes46> fetch=<doubleQuotes46>join<doubleQuotes46> /><newline46mondego>"
"2512splitHere46","2284192splitHere46","lazy"
"2513splitHere46","2284192splitHere46","Post post = (Post) session.load(Post.class, new Long(123));<newline46mondego>// at this point, post refers to a proxy object created by Hibernate<newline46mondego>// in the background - no post or user data has been loaded from DB<newline46mondego>post.getId();<newline46mondego>// post still refers to the proxy object<newline46mondego>User user = post.getUser();<newline46mondego>// post is now loaded, but user not - it refers to a proxy object<newline46mondego>String name = user.getName(); // Now the user data is loaded from DB<newline46mondego>"
"2514splitHere46","2284192splitHere46","fetch=<doubleQuotes46>join<doubleQuotes46> in your mapping for the"
"2515splitHere46","2284323splitHere46","ServletContextListener"
"2516splitHere46","2284323splitHere46","contextInitialized()"
"2517splitHere46","2284323splitHere46","public class Config implements ServletContextListener {<newline46mondego><newline46mondego>    private YourApp yourApp;<newline46mondego><newline46mondego>    public void contextInitialized(ServletContextEvent event) {<newline46mondego>        yourApp = new YourApp();<newline46mondego>        yourApp.start();<newline46mondego>    }<newline46mondego><newline46mondego>    public void contextDestroyed(ServletContextEvent event) {<newline46mondego>        yourApp.shutdown();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2518splitHere46","2284323splitHere46","web.xml"
"2519splitHere46","2284323splitHere46","<listener><newline46mondego>    <listener-class>com.example.Config</listener-class><newline46mondego></listener><newline46mondego>"
"2520splitHere46","2284323splitHere46","HttpServlet"
"2521splitHere46","2284323splitHere46","Runnable"
"2522splitHere46","2284323splitHere46","ExecutorService"
"2523splitHere46","2284487splitHere46","server.xml"
"2524splitHere46","2284487splitHere46","server/default/deploy/jbossweb-tomcat55.sar/conf/"
"2525splitHere46","2284745splitHere46","#!/usr/bin/perl<newline46mondego><newline46mondego>use strict; use warnings;<newline46mondego><newline46mondego>my $tmpl = <<EO_XML;<newline46mondego><vehicles ID=<doubleQuotes46>%s<doubleQuotes46>><newline46mondego>    <vehicle><newline46mondego>        <make>Toyota</make><newline46mondego>        <model>Yaris</model><newline46mondego>        <year>2009</year><newline46mondego>    </vehicle><newline46mondego>    <vehicle><newline46mondego>        <make>Ford</make><newline46mondego>        <model>Taurus</model><newline46mondego>        <year>2008</year><newline46mondego>    </vehicle><newline46mondego></vehicles><newline46mondego>EO_XML<newline46mondego><newline46mondego>my $generator = make_id_generator('A' .. 'Z', 0 .. 9);<newline46mondego><newline46mondego>printf $tmpl, $generator->() for 1 .. 10;<newline46mondego><newline46mondego>sub make_id_generator {<newline46mondego>    my @chars = @_;<newline46mondego>    return sub {<newline46mondego>        join '', @chars[ map { rand @chars } 1 .. 8 ];<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2526splitHere46","2284890splitHere46","Exception"
"2527splitHere46","2284890splitHere46","ExceptionInInitializerError"
"2528splitHere46","2284890splitHere46","private static class SingletonObjectFactoryHolder{<newline46mondego>    private static final ObjectFactory INSTANCE;<newline46mondego>    static {<newline46mondego>        try {<newline46mondego>            INSTANCE = new ObjectFactory();<newline46mondego>        } catch (Exception e) {<newline46mondego>            throw new ExceptionInInitializerError(e);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2529splitHere46","2285064splitHere46","line.split(<doubleQuotes46>\<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"2530splitHere46","2285064splitHere46","<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>"
"2531splitHere46","2285099splitHere46","lexer grammar FuzzyJavaLexer;<newline46mondego><newline46mondego>options{filter=true;}<newline46mondego><newline46mondego>SingleLineComment<newline46mondego>  :  '//' ~( '\r' | '\n' )*<newline46mondego>  ;<newline46mondego><newline46mondego>MultiLineComment<newline46mondego>  :  '/*' .* '*/'<newline46mondego>  ;<newline46mondego><newline46mondego>StringLiteral<newline46mondego>  :  '<doubleQuotes46>' ( '\\' . | ~( '<doubleQuotes46>' | '\\' ) )* '<doubleQuotes46>'<newline46mondego>  ;<newline46mondego><newline46mondego>CharLiteral<newline46mondego>  :  '\'' ( '\\' . | ~( '\'' | '\\' ) )* '\''<newline46mondego>  ;<newline46mondego>"
"2532splitHere46","2285099splitHere46","FuzzyJavaLexer.g"
"2533splitHere46","2285099splitHere46","FuzzyJavaLexer.g"
"2534splitHere46","2285099splitHere46","java -cp antlr-3.2.jar org.antlr.Tool FuzzyJavaLexer.g<newline46mondego>"
"2535splitHere46","2285099splitHere46","FuzzyJavaLexer.java"
"2536splitHere46","2285099splitHere46","FuzzyJavaLexerTest.java"
"2537splitHere46","2285099splitHere46","import org.antlr.runtime.*;<newline46mondego><newline46mondego>public class FuzzyJavaLexerTest {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        String source = <newline46mondego>            <doubleQuotes46>class Test {                                 \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>  String s = \<doubleQuotes46> ... \\\<doubleQuotes46> // no comment \<doubleQuotes46>;   \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>  /*                                         \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>   * also no comment: // foo                 \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>   */                                        \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>  char quote = '\<doubleQuotes46>';                         \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>  // yes, a comment, finally!!!              \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>  int i = 0; // another comment              \n<doubleQuotes46>+<newline46mondego>            <doubleQuotes46>}                                            \n<doubleQuotes46>;<newline46mondego>        System.out.println(<doubleQuotes46>===== source =====<doubleQuotes46>);<newline46mondego>        System.out.println(source);<newline46mondego>        System.out.println(<doubleQuotes46>==================<doubleQuotes46>);<newline46mondego>        ANTLRStringStream in = new ANTLRStringStream(source);<newline46mondego>        FuzzyJavaLexer lexer = new FuzzyJavaLexer(in);<newline46mondego>        CommonTokenStream tokens = new CommonTokenStream(lexer);<newline46mondego>        for(Object obj : tokens.getTokens()) {<newline46mondego>            Token token = (Token)obj;<newline46mondego>            if(token.getType() == FuzzyJavaLexer.SingleLineComment) {<newline46mondego>                System.out.println(<doubleQuotes46>Found a SingleLineComment on line <doubleQuotes46>+token.getLine()+<newline46mondego>                        <doubleQuotes46>, starting at column <doubleQuotes46>+token.getCharPositionInLine()+<newline46mondego>                        <doubleQuotes46>, text: <doubleQuotes46>+token.getText());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2538splitHere46","2285099splitHere46","FuzzyJavaLexer.java"
"2539splitHere46","2285099splitHere46","FuzzyJavaLexerTest.java"
"2540splitHere46","2285099splitHere46","javac -cp .:antlr-3.2.jar *.java<newline46mondego>"
"2541splitHere46","2285099splitHere46","FuzzyJavaLexerTest.class"
"2542splitHere46","2285099splitHere46","// *nix/MacOS<newline46mondego>java -cp .:antlr-3.2.jar FuzzyJavaLexerTest<newline46mondego>"
"2543splitHere46","2285099splitHere46","// Windows<newline46mondego>java -cp .;antlr-3.2.jar FuzzyJavaLexerTest<newline46mondego>"
"2544splitHere46","2285099splitHere46","===== source =====<newline46mondego>class Test {                                 <newline46mondego>  String s = <doubleQuotes46> ... \<doubleQuotes46> // no comment <doubleQuotes46>;   <newline46mondego>  /*                                         <newline46mondego>   * also no comment: // foo                 <newline46mondego>   */                                        <newline46mondego>  char quote = '<doubleQuotes46>';                         <newline46mondego>  // yes, a comment, finally!!!              <newline46mondego>  int i = 0; // another comment              <newline46mondego>}                                            <newline46mondego><newline46mondego>==================<newline46mondego>Found a SingleLineComment on line 7, starting at column 2, text: // yes, a comment, finally!!!              <newline46mondego>Found a SingleLineComment on line 8, starting at column 13, text: // another comment  <newline46mondego>"
"2545splitHere46","2285134splitHere46","AbstractBeanFactory"
"2546splitHere46","2285268splitHere46","final WebClient webClient = new WebClient();<newline46mondego>final HtmlPage page1 = webClient.getPage(<doubleQuotes46>http://www.facebook.com<doubleQuotes46>);<newline46mondego>final HtmlForm form = page1.getFormByName(<doubleQuotes46>login_form<doubleQuotes46>);<newline46mondego><newline46mondego>final HtmlSubmitInput button = form.getInputsByValue(<doubleQuotes46>Log in<doubleQuotes46>);<newline46mondego>final HtmlTextInput textField = form.getInputByName(<doubleQuotes46>email<doubleQuotes46>);<newline46mondego>textField.setValueAttribute(<doubleQuotes46>jon@jon.com<doubleQuotes46>);<newline46mondego>final HtmlTextInput textField = form.getInputByName(<doubleQuotes46>pass<doubleQuotes46>);<newline46mondego>textField.setValueAttribute(<doubleQuotes46>ahhhh<doubleQuotes46>);<newline46mondego>final HtmlPage page2 = button.click();<newline46mondego>"
"2547splitHere46","2285488splitHere46","URLEncoder"
"2548splitHere46","2285488splitHere46","-"
"2549splitHere46","2285488splitHere46","String encodedURL = URLEncoder.encode(url.replace(<doubleQuotes46> <doubleQuotes46>, <doubleQuotes46>-<doubleQuotes46>), <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>"
"2550splitHere46","2285709splitHere46","in_array"
"2551splitHere46","2285811splitHere46","client.setHttpRequestRetryHandler(new DefaultHttpRequestRetryHandler(0, false));<newline46mondego>"
"2552splitHere46","2285979splitHere46","File inputFile = (File) AccessController.doPrivileged(new PrivilegedAction() {<newline46mondego>      public Object run() <newline46mondego>      {<newline46mondego>         File inputFile1 = new File(<doubleQuotes46>C:\\Program Files\\MyFolder\\MyFile.jpg<doubleQuotes46>);<newline46mondego>         return inputFile1;<newline46mondego>      }<newline46mondego>      });<newline46mondego><newline46mondego>  FileReader in = new FileReader(inputFile);<newline46mondego>"
"2553splitHere46","2285979splitHere46","final String myfilename = <path or string var of filename><newline46mondego>File inputFile = (File) AccessController.doPrivileged(new PrivilegedAction() {<newline46mondego>      public Object run() <newline46mondego>      {<newline46mondego>         File inputFile1 = new File(myfilename);<newline46mondego>      }<newline46mondego>    }};<newline46mondego>FileReader in = new FileReader(inputFile);<newline46mondego>"
"2554splitHere46","2286087splitHere46","str.replaceAll(<doubleQuotes46>[^\\d\\p{L}]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2555splitHere46","2286148splitHere46","<jta-data-source>"
"2556splitHere46","2286148splitHere46","persistence.xml"
"2557splitHere46","2286148splitHere46","EntityManager"
"2558splitHere46","2286148splitHere46","EntityManager"
"2559splitHere46","2286148splitHere46","EntityManager"
"2560splitHere46","2286148splitHere46","EntityManager"
"2561splitHere46","2286173splitHere46","${basedir}/src/test/resources"
"2562splitHere46","2286173splitHere46","${basedir}/src/main/resources"
"2563splitHere46","2286353splitHere46","static foo(x){ this.x = x; }"
"2564splitHere46","2286353splitHere46","public bar(y){ this.y = y; }"
"2565splitHere46","2286353splitHere46","Object"
"2566splitHere46","2286353splitHere46","Foo myFoo = (Foo)myBar;"
"2567splitHere46","2286379splitHere46","public void run() {<newline46mondego>    double firstBrick = (getWidth() - baseInPx) / 2;<newline46mondego>    double baseHeight = getHeight();<newline46mondego><newline46mondego>    add(new GRect(firstBrick,baseHeight,BRICK_WIDTH, BRICK_HEIGHT));<newline46mondego><newline46mondego>}<newline46mondego>"
"2568splitHere46","2286800splitHere46","doInBackground(...)"
"2569splitHere46","2286800splitHere46","Service"
"2570splitHere46","2286800splitHere46","AlarmManager"
"2571splitHere46","2286897splitHere46","ldapUsername=value1<newline46mondego>ldapPassword=value2<newline46mondego>"
"2572splitHere46","2286897splitHere46","applicationContext.xml"
"2573splitHere46","2286897splitHere46","<context:property-placeholder location=<doubleQuotes46>classpath:application.properties<doubleQuotes46> /><newline46mondego>"
"2574splitHere46","2286897splitHere46","<bean id=<doubleQuotes46>someId<doubleQuotes46> class=<doubleQuotes46>...<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>ldapUsername<doubleQuotes46> value=<doubleQuotes46>${ldapUsername}<doubleQuotes46> /><newline46mondego>   <property name=<doubleQuotes46>ldapPassword<doubleQuotes46> value=<doubleQuotes46>${ldapPassword}<doubleQuotes46> /> <newline46mondego></bean><newline46mondego>"
"2575splitHere46","2286897splitHere46","application.properties"
"2576splitHere46","2286897splitHere46","applicationContext.xml"
"2577splitHere46","2286897splitHere46","PropertyPlaceholderConfigurer"
"2578splitHere46","2286897splitHere46","prototype"
"2579splitHere46","2286897splitHere46","singleton"
"2580splitHere46","2286897splitHere46","public class MyController {<newline46mondego>    @Autowired<newline46mondego>    private LDAPAuthenticationProvider ldapProvider;<newline46mondego><newline46mondego>    public void saveSettings(..) {<newline46mondego>         // get the new username and password first<newline46mondego>         ldapProvider.setUsername(newUsername);<newline46mondego>         ldapProvider.setPassword(newPassword);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2581splitHere46","2286897splitHere46","<property name=<doubleQuotes46>ldapProvider<doubleQuotes46> ref=<doubleQuotes46>ldapProvider<doubleQuotes46> />"
"2582splitHere46","2286897splitHere46","LDAPAuthenticationProvider"
"2583splitHere46","2286897splitHere46","setUsername"
"2584splitHere46","2286897splitHere46","setPassword"
"2585splitHere46","2287022splitHere46","@Retention(RUNTIME) @interface Annotate {}<newline46mondego>"
"2586splitHere46","2287189splitHere46","String s[] = <doubleQuotes46>11:22<doubleQuotes46>.split(<doubleQuotes46>:<doubleQuotes46>);;<newline46mondego>String s1 = s[0];<newline46mondego>String s2 = s[1];<newline46mondego>"
"2587splitHere46","2287207splitHere46","HttpServletResponse.encodeUrl()"
"2588splitHere46","2287207splitHere46","<a href=<doubleQuotes46><% response.encodeUrl(<doubleQuotes46>/link<doubleQuotes46>) %><doubleQuotes46>><newline46mondego>"
"2589splitHere46","2287207splitHere46","<c:url>"
"2590splitHere46","2287223splitHere46","<target name=<doubleQuotes46>copysrc<doubleQuotes46>><newline46mondego><patternset id=<doubleQuotes46>zuKopieren<doubleQuotes46>><newline46mondego><include name=<doubleQuotes46>org/**<doubleQuotes46>/><newline46mondego><include name=<doubleQuotes46>com/**<doubleQuotes46>/><newline46mondego><include name=<doubleQuotes46>de/**<doubleQuotes46>/><newline46mondego><include name=<doubleQuotes46>net/**<doubleQuotes46>/><newline46mondego></patternset><newline46mondego><for param=<doubleQuotes46>verzeichnisName<doubleQuotes46>><newline46mondego><dirset dir=<doubleQuotes46>${tmp.dir}<doubleQuotes46>></dirset><newline46mondego><sequential> <newline46mondego><copy todir=<doubleQuotes46>${tmp.dir2}/src<doubleQuotes46>><newline46mondego><fileset dir=<doubleQuotes46>@{verzeichnisName}<doubleQuotes46> casesensitive=<doubleQuotes46>no<doubleQuotes46>><patternset refid=<doubleQuotes46>zuKopieren<doubleQuotes46> /><newline46mondego></fileset><newline46mondego></copy><newline46mondego></sequential><newline46mondego></for><newline46mondego></target><newline46mondego>"
"2591splitHere46","2287266splitHere46","myProg"
"2592splitHere46","2287266splitHere46","mypackage.mysubpackage.MainClass"
"2593splitHere46","2287266splitHere46","/home/me/project/1.3/build/mypackage/mysubpackage/MainClass.class"
"2594splitHere46","2287266splitHere46","java -cp /home/me/project/1.3/build mypackage.mysubpackage.MainClass"
"2595splitHere46","2287279splitHere46","org.eclipse.jdt.internal.corext.refactoring.changes"
"2596splitHere46","2287279splitHere46","CopyCompilationUnitChange"
"2597splitHere46","2287279splitHere46","getCu().copy(getDestinationPackage(), null, getNewName(), true, pm);<newline46mondego>"
"2598splitHere46","2287279splitHere46","org.eclipse.jdt.core.ISourceManipulation"
"2599splitHere46","2287302splitHere46","spy"
"2600splitHere46","2287302splitHere46","mock"
"2601splitHere46","2287460splitHere46","Map"
"2602splitHere46","2287460splitHere46","favorites"
"2603splitHere46","2287460splitHere46","Object"
"2604splitHere46","2287460splitHere46","Map"
"2605splitHere46","2287460splitHere46","public class HandlerRegistry<newline46mondego>{<newline46mondego>    private Map<Class<?>, Object> map = new HashMap<Class<?>, Object>();<newline46mondego><newline46mondego>    public <R extends Result, A extends Action<R>><newline46mondego>        void addHandler(Class<A> actionClass, ActionHandler<R, A> handler) {<newline46mondego>        map.put(actionClass, handler);<newline46mondego>    }<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public <R extends Result, A extends Action<R>> ActionHandler<R, A><newline46mondego>        findHandler(A action) {<newline46mondego>            return (ActionHandler<R, A>) map.get(action.getClass());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2606splitHere46","2287460splitHere46","Map"
"2607splitHere46","2287460splitHere46","action"
"2608splitHere46","2287460splitHere46","map.get()"
"2609splitHere46","2287460splitHere46","action"
"2610splitHere46","2287460splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    public <R extends Result, A extends Action<R>> ActionHandler<R, ? super A><newline46mondego>        findHandler( A action ) {<newline46mondego>            for ( Map.Entry<Class<?>, Object> entry : map.entrySet() )<newline46mondego>            {<newline46mondego>                if (entry.getKey().isAssignableFrom(action.getClass())) {<newline46mondego>                    return (ActionHandler<R, ? super A>) entry.getValue();<newline46mondego>                }<newline46mondego>            }<newline46mondego>            return null;<newline46mondego>    }<newline46mondego>"
"2611splitHere46","2287460splitHere46","ActionHandler<R, A>"
"2612splitHere46","2287460splitHere46","? super A"
"2613splitHere46","2287460splitHere46","A"
"2614splitHere46","2287460splitHere46","A"
"2615splitHere46","2287460splitHere46","Object"
"2616splitHere46","2287460splitHere46","List"
"2617splitHere46","2287460splitHere46","A"
"2618splitHere46","2287460splitHere46","List<? super A>"
"2619splitHere46","2287460splitHere46","A"
"2620splitHere46","2287460splitHere46","ClassCastExceptions"
"2621splitHere46","2287604splitHere46","public @interface MyAnnotation {    <newline46mondego>   Class<? extends MyInterface> clazz;<newline46mondego>}<newline46mondego>"
"2622splitHere46","2287750splitHere46","testPanel.setBorder(<newline46mondego>   javax.swing.BorderFactory.createCompoundBorder(<newline46mondego>      javax.swing.BorderFactory.createTitledBorder(<newline46mondego>         null, <doubleQuotes46>Border Title<doubleQuotes46>,<newline46mondego>         javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,<newline46mondego>         javax.swing.border.TitledBorder.DEFAULT_POSITION,<newline46mondego>         new java.awt.Font(<doubleQuotes46>Verdana<doubleQuotes46>, 1, 11)<newline46mondego>      ),<newline46mondego>      javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)<newline46mondego>   )<newline46mondego>);<newline46mondego>"
"2623splitHere46","2287848splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><classpath><newline46mondego>    <classpathentry kind=<doubleQuotes46>src<doubleQuotes46> output=<doubleQuotes46>target/classes<doubleQuotes46> path=<doubleQuotes46>src/main/java<doubleQuotes46>/><newline46mondego>    <classpathentry excluding=<doubleQuotes46>**<doubleQuotes46> kind=<doubleQuotes46>src<doubleQuotes46> output=<doubleQuotes46>target/classes<doubleQuotes46> path=<doubleQuotes46>src/main/resources<doubleQuotes46>/><newline46mondego>    <classpathentry kind=<doubleQuotes46>src<doubleQuotes46> output=<doubleQuotes46>target/test-classes<doubleQuotes46> path=<doubleQuotes46>src/test/java<doubleQuotes46>/><newline46mondego>    <classpathentry kind=<doubleQuotes46>con<doubleQuotes46> path=<doubleQuotes46>org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6<doubleQuotes46>/><newline46mondego>    <classpathentry kind=<doubleQuotes46>con<doubleQuotes46> path=<doubleQuotes46>org.maven.ide.eclipse.MAVEN2_CLASSPATH_CONTAINER<doubleQuotes46>><newline46mondego>        <attributes><newline46mondego>            <attribute name=<doubleQuotes46>org.eclipse.jst.component.dependency<doubleQuotes46> value=<doubleQuotes46>/WEB-INF/lib<doubleQuotes46>/><newline46mondego>        </attributes><newline46mondego>    </classpathentry><newline46mondego>    <classpathentry kind=<doubleQuotes46>con<doubleQuotes46> path=<doubleQuotes46>org.eclipse.jst.j2ee.internal.web.container<doubleQuotes46>/><newline46mondego>    <classpathentry kind=<doubleQuotes46>con<doubleQuotes46> path=<doubleQuotes46>org.eclipse.jst.j2ee.internal.module.container<doubleQuotes46>/><newline46mondego>    <classpathentry kind=<doubleQuotes46>output<doubleQuotes46> path=<doubleQuotes46>target/classes<doubleQuotes46>/><newline46mondego></classpath><newline46mondego>"
"2624splitHere46","2287848splitHere46","excluding=<doubleQuotes46>**<doubleQuotes46>"
"2625splitHere46","2287848splitHere46","<groupId>core-maven</groupId><newline46mondego><artifactId>core-maven</artifactId><newline46mondego>"
"2626splitHere46","2287848splitHere46","<finalName>core-maven</finalName>"
"2627splitHere46","2287852splitHere46","<project><newline46mondego>  <modelVersion>4.0.0</modelVersion><newline46mondego>  <groupId>com.mycompany.myproject</groupId><newline46mondego>  <artifactId>my-app</artifactId><newline46mondego>  <version>1.0-SNAPSHOT</version><newline46mondego>  <name>My App</name><newline46mondego></project><newline46mondego>"
"2628splitHere46","2287852splitHere46","<project><newline46mondego>  <modelVersion>4.0.0</modelVersion><newline46mondego>  <groupId>com.mycompany.myproject</groupId><newline46mondego>  <artifactId>my-app</artifactId><newline46mondego>  <version>1.0-SNAPSHOT</version><newline46mondego>  <name>My App</name><newline46mondego><newline46mondego>  <properties><newline46mondego>    <org.springframework.version>3.0.0.RELEASE</org.springframework.version><newline46mondego>  </properties><newline46mondego><newline46mondego>  <dependencies><newline46mondego><newline46mondego>    <!--<newline46mondego>        Core utilities used by other modules.<newline46mondego>        Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)<newline46mondego>    --><newline46mondego>    <dependency><newline46mondego>      <groupId>org.springframework</groupId><newline46mondego>      <artifactId>spring-core</artifactId><newline46mondego>      <version>${org.springframework.version}</version><newline46mondego>    </dependency><newline46mondego><newline46mondego>  </dependencies><newline46mondego></project><newline46mondego>"
"2629splitHere46","2288069splitHere46","import javax.swing.JFrame;<newline46mondego>import javax.swing.JTextField;<newline46mondego>import javax.swing.text.BadLocationException;<newline46mondego>import javax.swing.text.DefaultStyledDocument;<newline46mondego><newline46mondego>public class Application {<newline46mondego><newline46mondego>    private static final String PREFIX = <doubleQuotes46>Your Input><doubleQuotes46>;<newline46mondego><newline46mondego>    private static final int prefixLength = PREFIX.length();<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     */<newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame rootFrame = new JFrame();<newline46mondego>        JTextField textField = new JTextField(new PromptDocument(), PREFIX, 20);<newline46mondego><newline46mondego>        rootFrame.add(textField);<newline46mondego>        rootFrame.pack();<newline46mondego>        rootFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        rootFrame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class PromptDocument extends DefaultStyledDocument {<newline46mondego><newline46mondego>        private static final long serialVersionUID = 1L;<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void remove(int offs, int len) throws BadLocationException {<newline46mondego>            if (offs > prefixLength - 1) {<newline46mondego>                int buffer = offs - prefixLength;<newline46mondego>                if (buffer < 0) {<newline46mondego>                    len = buffer;<newline46mondego>                }<newline46mondego>                super.remove(offs, len);    <newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2630splitHere46","2288385splitHere46","ServletContext#getResourceAsStream()"
"2631splitHere46","2288385splitHere46","InputStream input = getServletContext().getResourceAsStream(<doubleQuotes46>/WEB-INF/file.properties<doubleQuotes46>));<newline46mondego>"
"2632splitHere46","2288385splitHere46","getServletContext()"
"2633splitHere46","2288385splitHere46","HttpServlet"
"2634splitHere46","2288385splitHere46","ClassLoader#getResourceAsStream()"
"2635splitHere46","2288385splitHere46","InputStream input = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>file.properties<doubleQuotes46>);<newline46mondego>"
"2636splitHere46","2288385splitHere46","Class#getResourceAsStream()"
"2637splitHere46","2288520splitHere46","FBLR Action<newline46mondego>0000 Move Forward<newline46mondego>0001 Move Forward<newline46mondego>0010 Turn Right<newline46mondego>etc<newline46mondego>"
"2638splitHere46","2288520splitHere46","/**<newline46mondego> * Enumeration describing the four available actions to the agent<newline46mondego> * and methods for decoding a given action from the <doubleQuotes46>bit<doubleQuotes46> string<newline46mondego> * (actually represented using booleans).<newline46mondego> */<newline46mondego>public enum Action {<newline46mondego>  MOVE_FORWARD, REVERSE, TURN_LEFT, TURN_RIGHT<newline46mondego><newline46mondego>  Action decodeAction(boolean b1, boolean b2) {<newline46mondego>    Action ret;<newline46mondego><newline46mondego>    if (b1) {<newline46mondego>      ret = b2 ? Action.MOVE_FORWARD : Action.TURN_LEFT;<newline46mondego>    } else {<newline46mondego>      ret = b2 ? Action.TURN_RIGHT : Action.REVERSE;<newline46mondego>    }<newline46mondego><newline46mondego>    return ret;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Class encapsulating the 32-bit <doubleQuotes46>bit string<doubleQuotes46> represented using booleans.<newline46mondego> * Given the state of the four agent inputs the gene will provide a specific<newline46mondego> * action for the agent to perform.<newline46mondego> */<newline46mondego>public class Gene {<newline46mondego>  private final boolean[] values = new boolean[32];<newline46mondego><newline46mondego>  public Action getActionForSensorInputs(boolean wallInFront,<newline46mondego>    boolean wallBehind, boolean wallToLeft, boolean wallToRight) {<newline46mondego><newline46mondego>    int i=0;<newline46mondego><newline46mondego>    // Encode the four sensor inputs as a single integer value by<newline46mondego>    // bitwise-ORing each sensor value with a power of 2.<newline46mondego>    // The encoded value will be in the range [0, 15].<newline46mondego>    if (wallToRight) {<newline46mondego>      i |= 0x01;<newline46mondego>    }<newline46mondego><newline46mondego>    if (wallToLeft) {<newline46mondego>      i |= 0x02;<newline46mondego>    }<newline46mondego><newline46mondego>    if (wallBehind) {<newline46mondego>      i |= 0x04;<newline46mondego>    }<newline46mondego><newline46mondego>    if (wallInFront) {<newline46mondego>      i |= 0x08;<newline46mondego>    }<newline46mondego><newline46mondego>    // The look-up index is i * 2 because each action is encoded as 2<newline46mondego>    // booleans.<newline46mondego>    int index = i * 2;<newline46mondego><newline46mondego>    // Retrieve the two action bits from the bit string.<newline46mondego>    boolean b1 = this.values[index];<newline46mondego>    boolean b2 = this.values[index + 1];<newline46mondego><newline46mondego>    // Finally decode the action to perform.<newline46mondego>    return Action.decodeAction(b1, b2);<newline46mondego>  }<newline46mondego><newline46mondego>  // TODO: Add method to support crossover and mutation with other Genes.<newline46mondego>}<newline46mondego>"
"2639splitHere46","2288520splitHere46","Gene"
"2640splitHere46","2288520splitHere46","Agent"
"2641splitHere46","2288520splitHere46","private enum Direction { NORTH, SOUTH, EAST, WEST };<newline46mondego><newline46mondego>public class Agent {<newline46mondego>  private final Geneva gene;<newline46mondego>  private final int x; // x position in maze;<newline46mondego>  private final int y; // y position in maze;<newline46mondego>  private Direction currentDirection;<newline46mondego><newline46mondego>  public double evaluate() {<newline46mondego>    double fitness;<newline46mondego><newline46mondego>    // Perform up to 20 actions and then evaluate fitness.<newline46mondego>    for (int i=0; i<20; ++i) {<newline46mondego>      // TODO Determine sensor inputs.<newline46mondego><newline46mondego>      Action action = gene.getActionForSensorInputs(...);<newline46mondego><newline46mondego>      // TODO: Now apply action to update agent's state.<newline46mondego>      // If agent has reached goal exit loop and return fitness 1.0 (max fitness).<newline46mondego>      // If agent has exited the maze then exit loop and return 0.0 (min fitness).<newline46mondego>    }<newline46mondego><newline46mondego>    // Calculate fitness after 100 steps taken.  For example could be<newline46mondego>    // calculated as sqrt((goal.x - x) ^ 2 + (goal.y - y) ^ 2).<newline46mondego><newline46mondego>    return fitness;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2642splitHere46","2288563splitHere46","class CorrectionService {<newline46mondego><newline46mondego>   AddressDao addressDao;<newline46mondego><newline46mondego>   CorrectionService(AddressDao addressDao) {<newline46mondego>       this.addressDao;<newline46mondego>   }<newline46mondego><newline46mondego>   void correctPerson(Long personId) {<newline46mondego>       //Do some stuff with the addressDao here...<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"2643splitHere46","2288563splitHere46","import static org.mockito.Mockito.*;<newline46mondego><newline46mondego>public class CorrectionServiceTest {<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void setUp() {<newline46mondego>        addressDao = mock(AddressDao.class);<newline46mondego>        correctionService = new CorrectionService(addressDao);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    @Test<newline46mondego>    public void shouldCallDeleteAddress() {<newline46mondego>        correctionService.correct(VALID_ID);<newline46mondego>        verify(addressDao).deleteAddress(VALID_ID);<newline46mondego>    }<newline46mondego>}  <newline46mondego>"
"2644splitHere46","2288667splitHere46","public class MySwingWorker extends SwingWorker {<newline46mondego><newline46mondego>   private final Runnable r;<newline46mondego>   public MySwingWorker(Runnable r) {<newline46mondego>       this.r = r;<newline46mondego>   }<newline46mondego>   public void doInBackground() {...}<newline46mondego>   public void done() { r.run(); }<newline46mondego> }<newline46mondego>"
"2645splitHere46","2288667splitHere46","Runnable updateLabel = new Runnable() {<newline46mondego>       public void run() {<newline46mondego>           label.setText(<doubleQuotes46>myValue<doubleQuotes46>);<newline46mondego>       }<newline46mondego>};<newline46mondego>SwingWorker w = new MySwingWorker(updateLabel);<newline46mondego>w.execute();<newline46mondego>"
"2646splitHere46","2288667splitHere46","final MySwingWorker w = new MySwingWorker();<newline46mondego>Runnable r = new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        // do something with w.get()<newline46mondego>    }<newline46mondego>};<newline46mondego>w.setRunnable(r);<newline46mondego>w.execute();<newline46mondego>"
"2647splitHere46","2288815splitHere46","JPanel panel = new JPanel();<newline46mondego>panel.setLayout(new GridLayout(0, 1));  // any number of rows, 1 column<newline46mondego>...<newline46mondego>    panel.add(button[i]);<newline46mondego>"
"2648splitHere46","2288815splitHere46","JPanel panel = new JPanel();<newline46mondego>panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));<newline46mondego>...<newline46mondego>    panel.add(button[i]);<newline46mondego>"
"2649splitHere46","2288815splitHere46","JPanel panel = new JPanel();<newline46mondego>panel.setLayout(new GridBagLayout());<newline46mondego>GridBagConstraints constraints = new GridBagConstraints(<newline46mondego>    0, RELATIVE,    // x = 0, y = below previous element<newline46mondego>    1, 1,           // cell width = 1, cell height = 1<newline46mondego>    0.0, 0.0        // how to distribute space: weightx = 0.0, weighty = 0,0 <newline46mondego>    GridBagConstraints.CENTER,  // anchor<newline46mondego>    GridBagConstraints.BOTH,    // fill<newline46mondego>    new Insets(0, 0, 0, 0),     // cell insets<newline46mondego>    0, 0);          // internal padding<newline46mondego>...<newline46mondego>    panel.add(button[i], constraints);<newline46mondego>"
"2650splitHere46","2288815splitHere46","null"
"2651splitHere46","2288815splitHere46","JPanel panel = new JPanel();<newline46mondego>panel.setLayout(null);<newline46mondego>...<newline46mondego>    button[i].setLocation(x, y);<newline46mondego>    button[i].setSize(width, heigth);<newline46mondego>    // OR button[i].setBounds(x, y, width, height);<newline46mondego>    panel.add(button[i]);<newline46mondego>"
"2652splitHere46","2288855splitHere46","setlocal<newline46mondego>set CP=<PATH TO ANY DEPENDENT LIBRARIES OR JARS><newline46mondego>start javaw -cp %CP% <FULLY QUALIFIED MAIN METHOD> <PROGRAM PROPERTIES><newline46mondego>endlocal<newline46mondego>"
"2653splitHere46","2288972splitHere46","enum"
"2654splitHere46","2289065splitHere46","JSplitPane"
"2655splitHere46","2289065splitHere46","Component"
"2656splitHere46","2289065splitHere46","CardLayout"
"2657splitHere46","2289065splitHere46","TreeSelectionListener"
"2658splitHere46","2289065splitHere46","JTree"
"2659splitHere46","2289065splitHere46","CardLayout"
"2660splitHere46","2289065splitHere46","show"
"2661splitHere46","2289065splitHere46","public class UIPanel extends JPanel {<newline46mondego>  private static final String BLANK_CARD = <doubleQuotes46>blank<doubleQuotes46>;<newline46mondego>  private final JSplitPane splitPane;<newline46mondego><newline46mondego>  public UIPanel() {<newline46mondego>    super(new BorderLayout());<newline46mondego><newline46mondego>    JPanel treePnl = createTreePanel();<newline46mondego>    JPanel contextPnl = createContextPanel();<newline46mondego><newline46mondego>    this.splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT,<newline46mondego>      true, new JScrollPane(treePnl), new JScrollPane(contextPnl));<newline46mondego><newline46mondego>    add(splitPane, BorderLayout.CENTER);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2662splitHere46","2289065splitHere46","public class Main {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    // Kick off code to build and display UI on Event Dispatch Thread.<newline46mondego>    SwingUtilities.invokeLater(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>UIPanel Example<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);<newline46mondego>        frame.setLayout(new BorderLayout());<newline46mondego><newline46mondego>        // Add UIPanel to JFrame.  Using CENTER layout means it will occupy all<newline46mondego>        // available space.<newline46mondego>        frame.add(new UIPanel(), BorderLayout.CENTER);<newline46mondego><newline46mondego>        // Explicitly set frame size.  Could use pack() instead.<newline46mondego>        frame.setSize(800, 600);<newline46mondego><newline46mondego>        // Center frame on the primary display.<newline46mondego>        frame.setLocationRelativeTo(null);<newline46mondego><newline46mondego>        // Finally make frame visible.<newline46mondego>        frame.setVisible(true);<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"2663splitHere46","2289065splitHere46","NodePanel"
"2664splitHere46","2289065splitHere46","ContextPanel"
"2665splitHere46","2289065splitHere46","UIPanel"
"2666splitHere46","2289065splitHere46","CardLayout"
"2667splitHere46","2289065splitHere46","BorderLayout"
"2668splitHere46","2289065splitHere46","BorderLayout.CENTER"
"2669splitHere46","2289065splitHere46","NodePanel"
"2670splitHere46","2289065splitHere46","revalidate()"
"2671splitHere46","2289191splitHere46","list.subList(start, end).clear();<newline46mondego>"
"2672splitHere46","2289191splitHere46","removeRange"
"2673splitHere46","2289191splitHere46","removeRange"
"2674splitHere46","2289191splitHere46","List"
"2675splitHere46","2289191splitHere46","java.util.List"
"2676splitHere46","2289191splitHere46","subList"
"2677splitHere46","2289191splitHere46","indexOf"
"2678splitHere46","2289191splitHere46","lastIndexOf"
"2679splitHere46","2289191splitHere46","subList"
"2680splitHere46","2289191splitHere46","List"
"2681splitHere46","2289191splitHere46","removeRange"
"2682splitHere46","2289191splitHere46","removeRange"
"2683splitHere46","2289191splitHere46","subList"
"2684splitHere46","2289191splitHere46","List"
"2685splitHere46","2289287splitHere46","Person"
"2686splitHere46","2289287splitHere46","if (Person.class.isInterface()) {<newline46mondego>   // It's an interface<newline46mondego>}<newline46mondego>"
"2687splitHere46","2289287splitHere46","public class CheckThingy<newline46mondego>{<newline46mondego>    public static final void main(String[] params)<newline46mondego>    {<newline46mondego>        String name;<newline46mondego>        Class  c;<newline46mondego><newline46mondego>        if (params.length < 1)<newline46mondego>        {<newline46mondego>            System.out.println(<doubleQuotes46>Please give a class/interface name<doubleQuotes46>);<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego>        name = params[0];<newline46mondego>        try<newline46mondego>        {<newline46mondego>            c = Class.forName(name);<newline46mondego>            System.out.println(name + <doubleQuotes46> is <doubleQuotes46> + (c.isInterface() ? <doubleQuotes46>an interface.<doubleQuotes46> : <doubleQuotes46>a class.<doubleQuotes46>));<newline46mondego>        }<newline46mondego>        catch (ClassNotFoundException e)<newline46mondego>        {<newline46mondego>            System.out.println(name + <doubleQuotes46> not found in the classpath.<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.exit(0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2688splitHere46","2289287splitHere46","java CheckThingy Person<newline46mondego>"
"2689splitHere46","2289331splitHere46","@RunWith(SpringJUnit4ClassRunner.class)<newline46mondego>@ContextConfiguration(locations=<doubleQuotes46>classpath:/applicationContext.xml<doubleQuotes46>)<newline46mondego>public class YourTest {<newline46mondego><newline46mondego>    @Transactional<newline46mondego>    public void someTest() {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2690splitHere46","2289386splitHere46","TargetClassAware"
"2691splitHere46","2289443splitHere46","BitConverter.ToInt64(new byte[] { 8, 204, 137, 162, 234, 40, 150, 50 }, 0)<newline46mondego>"
"2692splitHere46","2289443splitHere46","bb.order(ByteOrder.LITTLE_ENDIAN)"
"2693splitHere46","2289556splitHere46","Location: http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd<newline46mondego>Key Type: Namespace Name<newline46mondego>Key: http://activemq.apache.org/schema/core<newline46mondego>"
"2694splitHere46","2289556splitHere46","Location: http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd<newline46mondego>Key Type: Schema Location<newline46mondego>Key: http://activemq.apache.org/schema/core/activemq-core.xsd<newline46mondego>"
"2695splitHere46","2289556splitHere46","http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd<newline46mondego>"
"2696splitHere46","2289556splitHere46","http://activemq.apache.org/schema/core/activemq-core.xsd<newline46mondego>"
"2697splitHere46","2289630splitHere46","StringEscapeUtils#unescapeHtml4()"
"2698splitHere46","2289630splitHere46","#unescapeXml()"
"2699splitHere46","2289630splitHere46","&amp;"
"2700splitHere46","2289630splitHere46","&"
"2701splitHere46","2289630splitHere46","String#replaceAll()"
"2702splitHere46","2289630splitHere46","[^\x20-\x7e]"
"2703splitHere46","2289630splitHere46","String clean = StringEscapeUtils.unescapeHtml4(dirty).replaceAll(<doubleQuotes46>[^\\x20-\\x7e]<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>"
"2704splitHere46","2289630splitHere46","Â®"
"2705splitHere46","2289630splitHere46","&amp;"
"2706splitHere46","2289683splitHere46","@(#)"
"2707splitHere46","2289683splitHere46","what"
"2708splitHere46","2289683splitHere46","what java"
"2709splitHere46","2289683splitHere46","java:<newline46mondego>        23  1.4  src/bos/usr/ccs/lib/libpthreads/init.c, libpth, bos520 8/19/99 12:20:14<newline46mondego>        61      1.14  src/bos/usr/ccs/lib/libc/__threads_init.c, libcthrd, bos520 7/11/00 12:04:14<newline46mondego>        src/tools/sov/java.c, tool, asdev, 20081128 1.83.1.36<newline46mondego>        src/misc/sov/copyrght.c, core, asdev, 20081128 1.8<newline46mondego>"
"2710splitHere46","2289683splitHere46","@(#)23  1.4  src/bos/usr/ccs/lib/libpthreads/init.c, libpth, bos520 8/19/99 12:20:14<newline46mondego>@(#)61      1.14  src/bos/usr/ccs/lib/libc/__threads_init.c, libcthrd, bos520 7/11/00 12:04:14<newline46mondego>@(#)src/tools/sov/java.c, tool, asdev, 20081128 1.83.1.36<newline46mondego>@(#)src/misc/sov/copyrght.c, core, asdev, 20081128 1.8<newline46mondego>"
"2711splitHere46","2289683splitHere46","@(#)"
"2712splitHere46","2289683splitHere46","%Z% %M% %R%.%L% %E%"
"2713splitHere46","2289683splitHere46","%Z%"
"2714splitHere46","2289683splitHere46","@(#)"
"2715splitHere46","2289930splitHere46","Thread.interrupted()"
"2716splitHere46","2289930splitHere46","Object.wait()"
"2717splitHere46","2289930splitHere46","InterruptedIOException"
"2718splitHere46","2289930splitHere46","InterruptedException"
"2719splitHere46","2289930splitHere46","Thread.stop()"
"2720splitHere46","2289973splitHere46","public class SwitchingAuthenticationProvider implements AuthenticationProvider<newline46mondego>{<newline46mondego>    ....<newline46mondego>    public List<AuthenticationProvider> getProviders() { return delegateList; }<newline46mondego>    public void setProviders(List<AuthenticationProvider> providers) {<newline46mondego>        this.delegateList = providers;<newline46mondego>    }<newline46mondego>    ....<newline46mondego>}<newline46mondego>"
"2721splitHere46","2289973splitHere46","<bean id=<doubleQuotes46>customAuthProvider1<doubleQuotes46> class=<doubleQuotes46>.....CustomProvider1<doubleQuotes46>> ... </bean><newline46mondego><bean id=<doubleQuotes46>customAuthProvider2<doubleQuotes46> class=<doubleQuotes46>.....CustomProvider2<doubleQuotes46>> ... </bean><newline46mondego>...<newline46mondego><bean id=<doubleQuotes46>customAuthProviderX<doubleQuotes46> class=<doubleQuotes46>.....CustomProviderX<doubleQuotes46>> ... </bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>authenticationProvider<doubleQuotes46> class=<doubleQuotes46>....SwitchingAuthenticationProvider<doubleQuotes46>><newline46mondego>    <security:custom-authentication-provider/><newline46mondego>    <!-- using property injection (get/setProviders) in the bean class --><newline46mondego>    <property name=<doubleQuotes46>providers<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <ref local=<doubleQuotes46>customAuthProvider1<doubleQuotes46>/> <!-- Ref of 1st authenticator --><newline46mondego>            <ref local=<doubleQuotes46>customAuthProvider2<doubleQuotes46>/> <!-- Ref of 2nd authenticator --><newline46mondego>            ...<newline46mondego>            <ref local=<doubleQuotes46>customAuthProviderX<doubleQuotes46>/> <!-- and so on for more --><newline46mondego>        </list><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"2722splitHere46","2289989splitHere46","ldd"
"2723splitHere46","2290071splitHere46","try {<newline46mondego>    SwingUtilities.invokeLater(new Runnable(){<newline46mondego>        public void run() {<newline46mondego>            tip1.setText(ad1.tip1());<newline46mondego>            tip2.setText(ad1.tip2());<newline46mondego>            tip3.setText(ad1.tip3());<newline46mondego>            } catch (Exception e1) {<newline46mondego>                e1.printStackTrace();<newline46mondego>            }<newline46mondego>    });<newline46mondego>}<newline46mondego>"
"2724splitHere46","2290089splitHere46","BigInteger r;<newline46mondego>do {<newline46mondego>    r = new BigInteger(n.bitLength(), rnd);<newline46mondego>} while (r.compareTo(n) >= 0);<newline46mondego>"
"2725splitHere46","2290089splitHere46","int nlen = n.bitLength();<newline46mondego>BigInteger nm1 = n.subtract(BigInteger.ONE);<newline46mondego>BigInteger r, s;<newline46mondego>do {<newline46mondego>    s = new BigInteger(nlen + 100, rnd);<newline46mondego>    r = s.mod(n);<newline46mondego>} while (s.subtract(r).add(nm1).bitLength() >= nlen + 100);<newline46mondego>// result is in 'r'<newline46mondego>"
"2726splitHere46","2290089splitHere46","mod()"
"2727splitHere46","2290089splitHere46","rnd"
"2728splitHere46","2290430splitHere46","BufferedImage newImage = new BufferedImage( pngImage.getWidth(), pngImage.getHeight(), BufferedImage.TYPE_INT_RGB);<newline46mondego>newImage.createGraphics().drawImage( pngImage, 0, 0, Color.BLACK, null);<newline46mondego>"
"2729splitHere46","2290431splitHere46","ResultSet"
"2730splitHere46","2290431splitHere46","union"
"2731splitHere46","2290431splitHere46","select A, B<newline46mondego>from C<newline46mondego>union<newline46mondego>select A, B<newline46mondego>from D<newline46mondego>"
"2732splitHere46","2290431splitHere46","Row"
"2733splitHere46","2290431splitHere46","ResultSet"
"2734splitHere46","2290431splitHere46","equals"
"2735splitHere46","2290431splitHere46","hashCode"
"2736splitHere46","2290431splitHere46","Row"
"2737splitHere46","2290431splitHere46","Row"
"2738splitHere46","2290431splitHere46","Set"
"2739splitHere46","2290431splitHere46","HashSet"
"2740splitHere46","2290448splitHere46","Point location = getLocation();<newline46mondego>    setLocation(new Point(0, 0));<newline46mondego>    setLocation(location);<newline46mondego>    pack();<newline46mondego>"
"2741splitHere46","2290448splitHere46","setLocation()"
"2742splitHere46","2290448splitHere46","Component.notifyNewBounds(boolean resized, boolean moved)"
"2743splitHere46","2290448splitHere46","-Dsun.java2d.d3d=false<newline46mondego>"
"2744splitHere46","2290479splitHere46","Integer.valueOf(value, 16)"
"2745splitHere46","2290578splitHere46","SELECT i FROM Intake i where i.assignedTo=?"
"2746splitHere46","2290580splitHere46","Session sess = factory.openSession();<newline46mondego>Transaction tx;<newline46mondego>  try {<newline46mondego>    tx = sess.beginTransaction();<newline46mondego>    //do some work<newline46mondego>    ...<newline46mondego>    tx.commit();<newline46mondego>  }<newline46mondego>  catch (Exception e) {<newline46mondego>    if (tx!=null) tx.rollback();<newline46mondego>      throw e;<newline46mondego>  }<newline46mondego>  finally {<newline46mondego>    sess.close();<newline46mondego>  }<newline46mondego>"
"2747splitHere46","2290580splitHere46","// in the first session<newline46mondego>Cat cat = (Cat) firstSession.load(Cat.class, catId);<newline46mondego>Cat potentialMate = new Cat();<newline46mondego>firstSession.save(potentialMate);<newline46mondego><newline46mondego>// in a higher layer of the application<newline46mondego>cat.setMate(potentialMate);<newline46mondego><newline46mondego>// later, in a new session<newline46mondego>secondSession.update(cat);  // update cat<newline46mondego>secondSession.update(mate); // update mate<newline46mondego>"
"2748splitHere46","2290580splitHere46","//just reassociate:<newline46mondego>sess.lock(fritz, LockMode.NONE);<newline46mondego>//do a version check, then reassociate:<newline46mondego>sess.lock(izi, LockMode.READ);<newline46mondego>//do a version check, using SELECT ... FOR UPDATE, then reassociate:<newline46mondego>sess.lock(pk, LockMode.UPGRADE);<newline46mondego>"
"2749splitHere46","2290638splitHere46","static"
"2750splitHere46","2290638splitHere46","static"
"2751splitHere46","2290638splitHere46","B"
"2752splitHere46","2290638splitHere46","static"
"2753splitHere46","2290638splitHere46","static"
"2754splitHere46","2290867splitHere46","java.lang.NoClassDefFoundError: org/jdom/Content<newline46mondego>"
"2755splitHere46","2290867splitHere46","ClassNotFoundException"
"2756splitHere46","2291093splitHere46","for(int i = 0; i < input.length; i++){ <newline46mondego>    for(int j = 0; j < input[i].length; j++){ <newline46mondego>        input[i][j] = true; <newline46mondego>    } <newline46mondego>}<newline46mondego>"
"2757splitHere46","2291093splitHere46","eachVal"
"2758splitHere46","2291122splitHere46","@Controller<newline46mondego>public class ContentItemController {<newline46mondego><newline46mondego>    @RequestMapping(<doubleQuotes46>/contentitem/{id}<doubleQuotes46>)<newline46mondego>    public ModelAndView contentItem(@PathVariable(<doubleQuotes46>id<doubleQuotes46>) int id) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2759splitHere46","2291299splitHere46","public class TryCatchTest {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        try {<newline46mondego>            System.out.println(<doubleQuotes46>foo<doubleQuotes46>);<newline46mondego>            throw new NullPointerException();<newline46mondego>        } finally {<newline46mondego>            try {<newline46mondego>                System.out.println(<doubleQuotes46>bar<doubleQuotes46>);<newline46mondego>            } catch (Exception e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>        } // exception thrown here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2760splitHere46","2291357splitHere46","final Pattern re1 = Pattern.compile(<doubleQuotes46>.*;BYDAY=(.*)<doubleQuotes46>);<newline46mondego>final Pattern re2 = Pattern.compile(<doubleQuotes46>(?:([+-]?[0-9]*)([A-Z]{2}),?)<doubleQuotes46>);<newline46mondego><newline46mondego>final Matcher matcher1 = re1.matcher(rrule);<newline46mondego>if ( matcher1.matches() ) {<newline46mondego>    final String group1 = matcher1.group(1);<newline46mondego>    Matcher matcher2 = re2.matcher(group1);<newline46mondego>    while(matcher2.find()) {<newline46mondego>        System.out.println(<doubleQuotes46>group: <doubleQuotes46> + matcher2.group(1) + <doubleQuotes46> <doubleQuotes46> +<newline46mondego>                    matcher2.group(2));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2761splitHere46","2291410splitHere46","public static void main(final String[] args) throws Exception<newline46mondego>{<newline46mondego>    final BufferedImage tif = ImageIO.read(new File(<doubleQuotes46>test.tif<doubleQuotes46>));<newline46mondego>    ImageIO.write(tif, <doubleQuotes46>png<doubleQuotes46>, new File(<doubleQuotes46>test.png<doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"2762splitHere46","2291435splitHere46","java -cp .:path/to/Jar.jar com.company.package.Class arg1=val1 arg2=val2 ....<newline46mondego>"
"2763splitHere46","2291490splitHere46","finalize"
"2764splitHere46","2291490splitHere46","public"
"2765splitHere46","2291490splitHere46","finalize"
"2766splitHere46","2291490splitHere46","private"
"2767splitHere46","2291490splitHere46","protected"
"2768splitHere46","2291490splitHere46","java.lang.Object"
"2769splitHere46","2291490splitHere46","protected"
"2770splitHere46","2291490splitHere46","java.lang.Object"
"2771splitHere46","2291490splitHere46","public"
"2772splitHere46","2291490splitHere46","protected"
"2773splitHere46","2291490splitHere46","finalize"
"2774splitHere46","2291801splitHere46","package mt;<newline46mondego><newline46mondego>import java.awt.Graphics;<newline46mondego><newline46mondego>import javax.swing.Icon;<newline46mondego>import javax.swing.JLabel;<newline46mondego><newline46mondego>public class MyJLabel extends JLabel {<newline46mondego>    public static final int MARQUEE_SPEED_DIV = 5;<newline46mondego>    public static final int REPAINT_WITHIN_MS = 5;<newline46mondego><newline46mondego>    /**<newline46mondego>     * <newline46mondego>     */<newline46mondego>    private static final long serialVersionUID = -7737312573505856484L;<newline46mondego><newline46mondego>    /**<newline46mondego>     * <newline46mondego>     */<newline46mondego>    public MyJLabel() {<newline46mondego>        super();<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param image<newline46mondego>     * @param horizontalAlignment<newline46mondego>     */<newline46mondego>    public MyJLabel(Icon image, int horizontalAlignment) {<newline46mondego>        super(image, horizontalAlignment);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param image<newline46mondego>     */<newline46mondego>    public MyJLabel(Icon image) {<newline46mondego>        super(image);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param text<newline46mondego>     * @param icon<newline46mondego>     * @param horizontalAlignment<newline46mondego>     */<newline46mondego>    public MyJLabel(String text, Icon icon, int horizontalAlignment) {<newline46mondego>        super(text, icon, horizontalAlignment);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param text<newline46mondego>     * @param horizontalAlignment<newline46mondego>     */<newline46mondego>    public MyJLabel(String text, int horizontalAlignment) {<newline46mondego>        super(text, horizontalAlignment);<newline46mondego>        // TODO Auto-generated constructor stub<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param text<newline46mondego>     */<newline46mondego>    public MyJLabel(String text) {<newline46mondego>        super(text);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see javax.swing.JComponent#paintComponent(java.awt.Graphics)<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        g.translate((int)((System.currentTimeMillis() / MARQUEE_SPEED_DIV) % (getWidth() * 2)) - getWidth(), 0);<newline46mondego>        super.paintComponent(g);<newline46mondego>        repaint(REPAINT_WITHIN_MS);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2775splitHere46","2291877splitHere46","(?s)<object((?!youtube).)*?object><newline46mondego>"
"2776splitHere46","2291877splitHere46","(?s)"
"2777splitHere46","2291877splitHere46","<object"
"2778splitHere46","2291877splitHere46","object>"
"2779splitHere46","2291877splitHere46","(?!youtube)."
"2780splitHere46","2291877splitHere46","youtube"
"2781splitHere46","2291877splitHere46","((?!youtube).)*?"
"2782splitHere46","2292009splitHere46","void"
"2783splitHere46","2292009splitHere46","void"
"2784splitHere46","2292009splitHere46","void"
"2785splitHere46","2292043splitHere46","coords"
"2786splitHere46","2292043splitHere46","label = new JLabel(<doubleQuotes46><doubleQuotes46> + p);<newline46mondego>"
"2787splitHere46","2292043splitHere46","p"
"2788splitHere46","2292043splitHere46","p"
"2789splitHere46","2292043splitHere46","this.p = p;<newline46mondego>"
"2790splitHere46","2292043splitHere46","this.p = new Point(p); // Create a defensive copy.<newline46mondego>"
"2791splitHere46","2292043splitHere46","Point p = new Point(3, 4);<newline46mondego>Point p2 = p;<newline46mondego>p.x = 7;<newline46mondego>System.out.println(p2.x);<newline46mondego>"
"2792splitHere46","2292043splitHere46","7"
"2793splitHere46","2292057splitHere46","class DateTagLibTests extends TagLibUnitTestCase {<newline46mondego><newline46mondego>    void testThisYear() {<newline46mondego>        String expected = Calendar.getInstance().get(Calendar.YEAR)<newline46mondego>        tagLib.thisYear()<newline46mondego>        assertEquals(<doubleQuotes46>years do NOT match<doubleQuotes46>, expected, tagLib.out)<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2794splitHere46","2292057splitHere46","DateTagLib"
"2795splitHere46","2292057splitHere46","tagLib"
"2796splitHere46","2292057splitHere46","thisYear"
"2797splitHere46","2292057splitHere46","out"
"2798splitHere46","2292057splitHere46","tagLib.out"
"2799splitHere46","2292165splitHere46","jdbc.url"
"2800splitHere46","2292165splitHere46","if"
"2801splitHere46","2292272splitHere46","XStream xstream = new XStream();<newline46mondego>XStream xstream = new XStream(new DomDriver());<newline46mondego>xstream.alias(<doubleQuotes46>person<doubleQuotes46>, Person.class);<newline46mondego>xstream.alias(<doubleQuotes46>phonenumber<doubleQuotes46>, PhoneNumber.class);<newline46mondego>"
"2802splitHere46","2292272splitHere46","Person demo = new Person(<doubleQuotes46>Chris<doubleQuotes46>);<newline46mondego><newline46mondego>XStream xStream = new XStream();<newline46mondego>xStream.alias(<doubleQuotes46>person<doubleQuotes46>, Person.class);<newline46mondego>System.out.println(xStream.toXML(demo));<newline46mondego><newline46mondego>XStream xStream2 = new XStream();<newline46mondego>xStream2.alias(<doubleQuotes46>dev<doubleQuotes46>, Person.class);<newline46mondego>System.out.println(xStream2.toXML(demo));<newline46mondego>"
"2803splitHere46","2292272splitHere46","<person><newline46mondego>  <name>Chris</name><newline46mondego></person><newline46mondego><dev><newline46mondego>  <name>Chris</name><newline46mondego></dev><newline46mondego>"
"2804splitHere46","2292278splitHere46","toString()"
"2805splitHere46","2292278splitHere46","return <doubleQuotes46>-Music-<doubleQuotes46> + <doubleQuotes46>\n<doubleQuotes46><newline46mondego>    + <doubleQuotes46>band: <doubleQuotes46> + artist + <doubleQuotes46>\n<doubleQuotes46><newline46mondego>    + <doubleQuotes46># songs: <doubleQuotes46> + number + <doubleQuotes46>\n<doubleQuotes46><newline46mondego>    + <doubleQuotes46>members: <doubleQuotes46> + Arrays.toString(members) + <doubleQuotes46>\n<doubleQuotes46><newline46mondego>    + <doubleQuotes46>\n<doubleQuotes46><newline46mondego>    + super.toString() + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>"
"2806splitHere46","2292289splitHere46","request.getParameter(<doubleQuotes46>Email<doubleQuotes46>);<newline46mondego>"
"2807splitHere46","2292339splitHere46","TypeA<TypeB>"
"2808splitHere46","2292339splitHere46","TypeA"
"2809splitHere46","2292339splitHere46","TypeA<TypeB>"
"2810splitHere46","2292339splitHere46","TypeA"
"2811splitHere46","2292339splitHere46","TypeA<TypeB>"
"2812splitHere46","2292339splitHere46","TypeA<TypeC>"
"2813splitHere46","2292339splitHere46","Container<Animal>"
"2814splitHere46","2292339splitHere46","Animal"
"2815splitHere46","2292339splitHere46","Lion"
"2816splitHere46","2292339splitHere46","Butterfly"
"2817splitHere46","2292339splitHere46","void func(Animal animal);<newline46mondego>"
"2818splitHere46","2292339splitHere46","void func(Container<Animal> animalContainer);<newline46mondego>"
"2819splitHere46","2292339splitHere46","Container<Lion>"
"2820splitHere46","2292339splitHere46","Container<Butterfly>"
"2821splitHere46","2292339splitHere46","void func(Container<? extends Animal> animalContainer);<newline46mondego>"
"2822splitHere46","2292339splitHere46","List<TypeA>"
"2823splitHere46","2292339splitHere46","List<TypeA<TypeB>>"
"2824splitHere46","2292339splitHere46","void doSomething(List<?> list);<newline46mondego>"
"2825splitHere46","2292802splitHere46","java.lang"
"2826splitHere46","2292802splitHere46","j2se/src/share/native/java/lang/"
"2827splitHere46","2292802splitHere46","Object.hashCode"
"2828splitHere46","2292974splitHere46","for (int i = 0; i < 8; ++i)<newline46mondego>    md5[i] ^= md5[i + 8];<newline46mondego>return Arrays.copyOf(md5, 8);<newline46mondego>"
"2829splitHere46","2293075splitHere46","ArrayList"
"2830splitHere46","2293075splitHere46","ArrayList"
"2831splitHere46","2293075splitHere46","List"
"2832splitHere46","2293230splitHere46","package com.stackoverflow.q2292917;<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String... args) throws IOException {<newline46mondego>        // Create test file.<newline46mondego>        File file = new File(<doubleQuotes46>/test.txt<doubleQuotes46>);<newline46mondego>        PrintWriter writer = new PrintWriter(file);<newline46mondego>        writer.println(<doubleQuotes46>line 1<doubleQuotes46>);<newline46mondego>        writer.println(<doubleQuotes46>line 2<doubleQuotes46>);<newline46mondego>        writer.println(<doubleQuotes46>line 3<doubleQuotes46>);<newline46mondego>        writer.println(<doubleQuotes46>line 4<doubleQuotes46>);<newline46mondego>        writer.println(<doubleQuotes46>line 5<doubleQuotes46>);<newline46mondego>        writer.close();<newline46mondego><newline46mondego>        // Read test file.<newline46mondego>        BufferedReader reader = null;<newline46mondego>        try {<newline46mondego>            reader = new BufferedReader(new FileReader(file));<newline46mondego>            String next, line = reader.readLine();<newline46mondego>            for (boolean first = true, last = (line == null); !last; first = false, line = next) {<newline46mondego>                last = ((next = reader.readLine()) == null);<newline46mondego><newline46mondego>                if (first) {<newline46mondego>                    System.out.println(<doubleQuotes46>first line: <doubleQuotes46> + line);<newline46mondego>                } else if (last) {<newline46mondego>                    System.out.println(<doubleQuotes46>last line: <doubleQuotes46> + line);<newline46mondego>                } else {<newline46mondego>                    System.out.println(<doubleQuotes46>normal line: <doubleQuotes46> + line);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        } finally {<newline46mondego>            if (reader != null) try { reader.close(); } catch (IOException logOrIgnore) {}<newline46mondego>        }<newline46mondego><newline46mondego>        // Delete test file.<newline46mondego>        file.delete();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"2833splitHere46","2293230splitHere46",";)"
"2834splitHere46","2293385splitHere46","Set<X> missing = Sets.difference(foo.keySet(), bar.keySet();<newline46mondego>"
"2835splitHere46","2293493splitHere46","javax.net.ssl.trustStore"
"2836splitHere46","2293885splitHere46","log4j.xml"
"2837splitHere46","2293885splitHere46","<logger name=<doubleQuotes46>org.hibernate.cache<doubleQuotes46>><newline46mondego>   <level value=<doubleQuotes46>DEBUG<doubleQuotes46> /><newline46mondego></logger><newline46mondego>"
"2838splitHere46","2293993splitHere46","indexOf()"
"2839splitHere46","2293993splitHere46","fromIndex"
"2840splitHere46","2293993splitHere46","int oauth = content.indexOf(Const.OAUTH_TOKEN_SECRET);<newline46mondego>if (oauth != -1) {<newline46mondego>  int start = oath + Const.OATH_TOKEN_SECRET.length(); // or<newline46mondego>  //int start = content.indexOf('=', oath) + 1;<newline46mondego>  int end = content.indexOf('&', start);<newline46mondego>  String tokenSecret = end == -1 ? content.substring(start) : content.substring(start, end);<newline46mondego>}<newline46mondego>"
"2841splitHere46","2294302splitHere46",".toString()"
"2842splitHere46","2294302splitHere46",".append()"
"2843splitHere46","2294302splitHere46","prevLineBuffer = new StringBuilder();<newline46mondego>    prevLineBuffer.append(inputFileName);<newline46mondego>    System.out.print(prevLineBuffer.toString());<newline46mondego>"
"2844splitHere46","2294407splitHere46","panel.add( someComponent );<newline46mondego>panel.revalidate();<newline46mondego>"
"2845splitHere46","2294793splitHere46","<error-page><newline46mondego>    <error-code>500</error-code><newline46mondego>    <location>/WEB-INF/pages/500.jsp</location><newline46mondego></error-page><newline46mondego>"
"2846splitHere46","2294851splitHere46","#include"
"2847splitHere46","2294851splitHere46","#include <doubleQuotes46>myfile<doubleQuotes46>"
"2848splitHere46","2294851splitHere46","myfile"
"2849splitHere46","2294851splitHere46","Book"
"2850splitHere46","2294851splitHere46","Book.h"
"2851splitHere46","2294851splitHere46","Library.h"
"2852splitHere46","2294851splitHere46","Book"
"2853splitHere46","2294851splitHere46","Library"
"2854splitHere46","2294851splitHere46","Book"
"2855splitHere46","2294851splitHere46","Book"
"2856splitHere46","2294851splitHere46","Library"
"2857splitHere46","2294851splitHere46","class Book;<newline46mondego><newline46mondego>class Library<newline46mondego>{<newline46mondego>    // definition as before<newline46mondego>};<newline46mondego>"
"2858splitHere46","2294851splitHere46","Library.h"
"2859splitHere46","2294851splitHere46","#ifndef MYCLASS_H<newline46mondego>#define MYCLASS_H<newline46mondego><newline46mondego>class MyClass<newline46mondego>{<newline46mondego>};<newline46mondego><newline46mondego>// The #ifndef is terminated after all defintions in this header file<newline46mondego>#endif //MYCLASS_H<newline46mondego>"
"2860splitHere46","2294899splitHere46","HttpURLConnection connection = new HttpURLConnection(...); <newline46mondego>long contentLength = Long.parseLong(connection.getHeaderField(<doubleQuotes46>Content-Length<doubleQuotes46>));<newline46mondego>"
"2861splitHere46","2294899splitHere46","connection.getContentLength"
"2862splitHere46","2294977splitHere46","byte foo = (byte)0;<newline46mondego>short bar = (short)0;<newline46mondego>"
"2863splitHere46","2295004splitHere46","public static String dictFormat(String format, Hashtable<String, Object> values)<newline46mondego>  {<newline46mondego>    StringBuilder convFormat = new StringBuilder(format);<newline46mondego>    Enumeration<String> keys = values.keys();<newline46mondego>    ArrayList valueList = new ArrayList();<newline46mondego>    int currentPos = 1;<newline46mondego>    while (keys.hasMoreElements())<newline46mondego>      {<newline46mondego>        String key = keys.nextElement(),<newline46mondego>          formatKey = <doubleQuotes46>%(<doubleQuotes46> + key + <doubleQuotes46>)<doubleQuotes46>,<newline46mondego>          formatPos = <doubleQuotes46>%<doubleQuotes46> + Integer.toString(currentPos) + <doubleQuotes46>$<doubleQuotes46>;<newline46mondego>        int index = -1;<newline46mondego>        while ((index = convFormat.indexOf(formatKey, index)) != -1)<newline46mondego>          {<newline46mondego>            convFormat.replace(index, index + formatKey.length(), formatPos);<newline46mondego>            index += formatPos.length();<newline46mondego>          }<newline46mondego>        valueList.add(values.get(key));<newline46mondego>        ++currentPos;<newline46mondego>      }<newline46mondego>    return String.format(convFormat.toString(), valueList.toArray());<newline46mondego>  }<newline46mondego>"
"2864splitHere46","2295146splitHere46","${project.build.directory}/generated-sources/<toolname>"
"2865splitHere46","2295331splitHere46","ByteArrayOutputStream bais = new ByteArrayOutputStream();<newline46mondego>InputStream is = null;<newline46mondego>try {<newline46mondego>  is = url.openStream ();<newline46mondego>  byte[] byteChunk = new byte[4096]; // Or whatever size you want to read in at a time.<newline46mondego>  int n;<newline46mondego><newline46mondego>  while ( (n = is.read(byteChunk)) > 0 ) {<newline46mondego>    bais.write(byteChunk, 0, n);<newline46mondego>  }<newline46mondego>}<newline46mondego>catch (IOException e) {<newline46mondego>  System.err.printf (<doubleQuotes46>Failed while reading bytes from %s: %s<doubleQuotes46>, url.toExternalForm(), e.getMessage());<newline46mondego>  e.printStackTrace ();<newline46mondego>  // Perform any other exception handling that's appropriate.<newline46mondego>}<newline46mondego>finally {<newline46mondego>  if (is != null) { is.close(); }<newline46mondego>}<newline46mondego>"
"2866splitHere46","2295331splitHere46","bais"
"2867splitHere46","2295331splitHere46","bais.toByteArray()"
"2868splitHere46","2295456splitHere46","Callable"
"2869splitHere46","2295456splitHere46","Callable"
"2870splitHere46","2295456splitHere46","final List<A> list = new ArrayList() {{ add(new A()); }};<newline46mondego><newline46mondego>   void foo() {<newline46mondego><newline46mondego>      Callable<A> call = new Callable<A> {<newline46mondego>          A call() throws Exception<newline46mondego>          {<newline46mondego>              // do something with the list<newline46mondego>              return list.get(0);<newline46mondego>          }<newline46mondego>       }<newline46mondego><newline46mondego>       ExecutorService executor = new ScheduledThreadPoolExecutor(1);<newline46mondego>       Future<A> future = executor.submit(call);<newline46mondego><newline46mondego>       System.out.println( future.get() );<newline46mondego>    }<newline46mondego>"
"2871splitHere46","2295666splitHere46","Process proc = null;<newline46mondego>try {<newline46mondego>  proc = Runtime.getRuntime().exec(new String[] { <doubleQuotes46>logcat<doubleQuotes46>, <!parametes_here!> });<newline46mondego>  mReader = new BufferedReader(new InputStreamReader(proc.getInputStream()), 1024);<newline46mondego>  String line;<newline46mondego>  while ((line = mReader.readLine()) != null) {<newline46mondego>   if (line.length() == 0) {<newline46mondego>    continue;<newline46mondego>   }<newline46mondego>  mHandler.sendMessage(mHandler.obtainMessage(Logcat.MSG_READ_LINE, line));<newline46mondego> }<newline46mondego>} catch (IOException e) {<newline46mondego> Log.e(TAG, <doubleQuotes46>Cannot start process<doubleQuotes46>, e);<newline46mondego>} finally {<newline46mondego>  if (mReader != null)<newline46mondego>  try {<newline46mondego>    mReader.close();<newline46mondego>  } catch (IOException e) {<newline46mondego>    Log.e(TAG, <doubleQuotes46>Cannot close stream<doubleQuotes46>, e);<newline46mondego> }<newline46mondego>}<newline46mondego>"
"2872splitHere46","2295760splitHere46","private static ConcurrentHashMap<String, Object> myMap = new ConcurrentHashMap<String,Object>();<newline46mondego>"
"2873splitHere46","2295855splitHere46","xjc.bat"
"2874splitHere46","2295855splitHere46","xjc -p C:\Siva\jars\test.jaxb C:\Siva\jars\Emp.xsd -d C:\Siva\jars\objects<newline46mondego>"
"2875splitHere46","2295870splitHere46","rendered"
"2876splitHere46","2296077splitHere46","registerShutdownHook()"
"2877splitHere46","2296112splitHere46","BigInteger"
"2878splitHere46","2296112splitHere46","BigDecimal"
"2879splitHere46","2296112splitHere46","Number"
"2880splitHere46","2296112splitHere46","longValue()"
"2881splitHere46","2296112splitHere46","long"
"2882splitHere46","2296168splitHere46","public static int getNumberOfDecimalPlace(double value) {<newline46mondego>    //For whole numbers like 0<newline46mondego>    if (Math.round(value) == value) return 0;<newline46mondego>    final String s = Double.toString(value);<newline46mondego>    System.out.println(s);<newline46mondego>    final int index = s.indexOf('.');<newline46mondego>    if (index < 0) {<newline46mondego>       return 0;<newline46mondego>    }<newline46mondego>    return s.length() - 1 - index;<newline46mondego>}<newline46mondego>"
"2883splitHere46","2296215splitHere46","insertComponent()"
"2884splitHere46","2296215splitHere46","actionPerformed()"
"2885splitHere46","2296215splitHere46","private void insertMessage() {<newline46mondego>    try {<newline46mondego>        doc.insertString(jTextPane1.getText().length(),<newline46mondego>           <doubleQuotes46>Hi, this is StackOverflow.\n<doubleQuotes46>, null);<newline46mondego>    } catch (BadLocationException ex) {<newline46mondego>        ex.printStackTrace();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2886splitHere46","2296220splitHere46","java.net.URL"
"2887splitHere46","2296220splitHere46","getHost()"
"2888splitHere46","2296220splitHere46","getPort()"
"2889splitHere46","2296220splitHere46","getQuery()"
"2890splitHere46","2296220splitHere46","getPath()"
"2891splitHere46","2296220splitHere46","URI"
"2892splitHere46","2296257splitHere46","serialVersionUID"
"2893splitHere46","2296257splitHere46","ResultSetMetaData"
"2894splitHere46","2296257splitHere46","columnNoNulls"
"2895splitHere46","2296257splitHere46","columnNullable"
"2896splitHere46","2296257splitHere46","DatabaseMetaData"
"2897splitHere46","2296257splitHere46","ICC_Profile"
"2898splitHere46","2296264splitHere46","if(e.stateMask == SWT.CTRL && e.keyCode == 97){     <newline46mondego>      TXTBOX.selectAll();<newline46mondego>    }<newline46mondego>"
"2899splitHere46","2296280splitHere46","StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();<newline46mondego> String callerClassName = stackTrace[index].getClassName();<newline46mondego>"
"2900splitHere46","2296280splitHere46","StackTraceElement"
"2901splitHere46","2296280splitHere46","break"
"2902splitHere46","2296280splitHere46","index"
"2903splitHere46","2296280splitHere46","new Exception().getStackTrace()"
"2904splitHere46","2296328splitHere46","DebateAssignment"
"2905splitHere46","2296328splitHere46","public Collection<DebateTeam> getDebateTeams();<newline46mondego>"
"2906splitHere46","2296328splitHere46","Iterator<DebateTeam>"
"2907splitHere46","2296328splitHere46","public class DebateTeamIterator implements Iterator<DebateTeam> {<newline46mondego>    private Iterator<DebateAssignment> iAssignment;<newline46mondego>    private Iterator<DebateTeam> iTeam;<newline46mondego><newline46mondego>    public DebateTeamIterator(Iterator<DebateTeam> iAssignment) {<newline46mondego>        this.iAssignment = iAssignment;<newline46mondego>        if (iAssignment.hasNext())<newline46mondego>            iTeam = iAssignment.next().getDebateTeams().iterator();<newline46mondego>        else<newline46mondego>            iTeam = new LinkedList<DebateTeam>().iterator();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean hasNext() {<newline46mondego>       return iTeam.hasNext() || iAssignment.hasNext();<newline46mondego>    }<newline46mondego><newline46mondego>    public DebateTeam next() {<newline46mondego>        if (!iTeam.hasNext())<newline46mondego>            iTeam = iAssignment.next().getDebateTeams().iterator();<newline46mondego>        return iTeam.next();<newline46mondego>    }<newline46mondego><newline46mondego>    // ... other methods removed for brevity...<newline46mondego>}<newline46mondego>"
"2908splitHere46","2296490splitHere46","ordered=<doubleQuotes46>false<doubleQuotes46>"
"2909splitHere46","2296490splitHere46","<binding>        <newline46mondego>    <mapping name=<doubleQuotes46>group<doubleQuotes46> class=<doubleQuotes46>GroupVO<doubleQuotes46> ordered=<doubleQuotes46>false<doubleQuotes46>> <newline46mondego>        <value name=<doubleQuotes46>id<doubleQuotes46> field=<doubleQuotes46>id<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46>/> <newline46mondego>        <value name=<doubleQuotes46>idExt<doubleQuotes46> field=<doubleQuotes46>idExt<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46>/> <newline46mondego>        <value name=<doubleQuotes46>active<doubleQuotes46> field=<doubleQuotes46>active<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46>/> <newline46mondego>        <value name=<doubleQuotes46>created-at<doubleQuotes46> field=<doubleQuotes46>dateCre<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46>/> <newline46mondego>        <value name=<doubleQuotes46>updated-at<doubleQuotes46> field=<doubleQuotes46>dateChg<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46>/> <newline46mondego>        <value name=<doubleQuotes46>deleted-at<doubleQuotes46> field=<doubleQuotes46>dateDel<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46>/> <newline46mondego>        <value name=<doubleQuotes46>user-id<doubleQuotes46> field=<doubleQuotes46>userId<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46> /> <newline46mondego>        <value name=<doubleQuotes46>parent-id<doubleQuotes46> field=<doubleQuotes46>parentId<doubleQuotes46> usage=<doubleQuotes46>optional<doubleQuotes46> /> <newline46mondego>    </mapping> <newline46mondego></binding> <newline46mondego>"
"2910splitHere46","2296511splitHere46","function xorString(txt, key: string): string;<newline46mondego>var<newline46mondego>  i: integer;<newline46mondego>  ch: byte; //change to word for D2009+<newline46mondego>  digit: string;<newline46mondego>begin<newline46mondego>  result := '';<newline46mondego>  for i := 1 to length(txt) do<newline46mondego>  begin<newline46mondego>    ch := byte(txt[i]) xor byte(key[i]); //change byte to word for D2009+<newline46mondego>    digit := IntToHex(ch, 2);<newline46mondego>    result := result + digit;<newline46mondego>  end;<newline46mondego>end;<newline46mondego>"
"2911splitHere46","2296511splitHere46",">> 4 and 0x0f"
"2912splitHere46","2296511splitHere46","digit := intToHex(ch, 2);<newline46mondego>"
"2913splitHere46","2296708splitHere46","Supplier.get()"
"2914splitHere46","2296708splitHere46","private static final Function<Supplier<X>, X> SUPPLY = new Function<....>() {<newline46mondego>    public X apply(Supplier<X> in) {<newline46mondego>        // If you will never have a null Supplier, you can skip the test;<newline46mondego>        // otherwise, null Supplier will be treated same as one that returns null<newline46mondego>        // from get(), i.e. skipped<newline46mondego>        return (in == null) ? null : in.get();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2915splitHere46","2296708splitHere46","Iterable<Supplier<X>> suppliers = ... wherever this comes from ...<newline46mondego><newline46mondego>Iterable<X> supplied = Iterables.transform(suppliers, SUPPLY);<newline46mondego><newline46mondego>X first = Iterables.find(supplied, Predicates.notNull());<newline46mondego>"
"2916splitHere46","2296708splitHere46","Iterables.transform()"
"2917splitHere46","2296708splitHere46","Iterables.find()"
"2918splitHere46","2296708splitHere46","null"
"2919splitHere46","2296825splitHere46","// set item state listener<newline46mondego>form.setItemStateListener(this);<newline46mondego><newline46mondego>// check if text field contains invalid string<newline46mondego>// then replace it<newline46mondego>public void itemStateChanged(Item item) {<newline46mondego>    if (item == getTextField()) {<newline46mondego>        TextField t = (TextField)item;<newline46mondego>        String s = t.getString();<newline46mondego>        // + is invalid string<newline46mondego>        int pos = s.indexOf(<doubleQuotes46>+<doubleQuotes46>);<newline46mondego>        if (pos != -1) {<newline46mondego>            t.setString(s.substring(0, pos) + s.substring(pos + 1));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2920splitHere46","2296952splitHere46","java.util.HashMap"
"2921splitHere46","2296952splitHere46","select s from java.util.HashMap s where contains(s.table, function(it) {<newline46mondego>    if (it && it.key && it.key.value && it.key.value.toString() == 'test') {<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>})<newline46mondego>"
"2922splitHere46","2296952splitHere46","java.util.concurrent.ConcurrentHashMap"
"2923splitHere46","2296952splitHere46","select s from java.util.concurrent.ConcurrentHashMap s where contains(s.segments, function(it) {<newline46mondego>    if (!it || !it.table) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    var i, e;<newline46mondego>    for (i=0; i < it.table.length; i = i + 1) {<newline46mondego>        e = it.table[i];<newline46mondego>        if (e) {<newline46mondego>            return e.key && e.key.value && e.key.value.toString() == 'test';<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>})<newline46mondego>"
"2924splitHere46","2297112splitHere46","updateClaimWithPolicyDetails(Claim c, PolicyCriteria pc, String identifier)<newline46mondego>"
"2925splitHere46","2297112splitHere46","public Policy updateClaimAndGetPolicy(Claim c, PolicyCriteria pc, String identifier) <newline46mondego>"
"2926splitHere46","2297112splitHere46","updateClaimAndPolicyCriteria(Claim C, PolicyCriteria pc, String junkParam)<newline46mondego>"
"2927splitHere46","2297130splitHere46","setGridColor"
"2928splitHere46","2297130splitHere46","getTableHeader()"
"2929splitHere46","2297130splitHere46","setResizingAllowed(true)"
"2930splitHere46","2297130splitHere46","// grid color<newline46mondego>    jTable1.setGridColor(Color.BLUE);<newline46mondego><newline46mondego>    // columns resizable<newline46mondego>    jTable1.getTableHeader().setResizingAllowed(true);<newline46mondego><newline46mondego>    // initial width of column 1<newline46mondego>    jTable1.getColumnModel().getColumn(1).setPreferredWidth(400);<newline46mondego><newline46mondego>    // height of al columns<newline46mondego>    jTable1.setRowHeight(50);<newline46mondego><newline46mondego>    // height of column 2<newline46mondego>    jTable1.setRowHeight(2, 25);<newline46mondego>"
"2931splitHere46","2297135splitHere46","listIterator()"
"2932splitHere46","2297135splitHere46","ListIterator"
"2933splitHere46","2297135splitHere46","hasNext()"
"2934splitHere46","2297135splitHere46","next()"
"2935splitHere46","2297135splitHere46","hasPrevious()"
"2936splitHere46","2297135splitHere46","previous()"
"2937splitHere46","2297135splitHere46","ListIterator"
"2938splitHere46","2297135splitHere46","import java.util.LinkedList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.ListIterator;<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>List<String> myList = new LinkedList<String>();<newline46mondego><newline46mondego>myList.add(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>myList.add(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>myList.add(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>ListIterator<String> it = myList.listIterator();<newline46mondego><newline46mondego>if (it.hasNext()) {<newline46mondego>    String s1 = it.next();<newline46mondego>    System.out.println(s1);<newline46mondego>}<newline46mondego>"
"2939splitHere46","2297313splitHere46","final"
"2940splitHere46","2297313splitHere46","final"
"2941splitHere46","2297313splitHere46","file"
"2942splitHere46","2297313splitHere46","File"
"2943splitHere46","2297313splitHere46","file"
"2944splitHere46","2297313splitHere46","final"
"2945splitHere46","2297313splitHere46","final"
"2946splitHere46","2297450splitHere46","String s = <doubleQuotes46>1234567890<doubleQuotes46>;<newline46mondego>System.out.println(java.util.Arrays.toString(s.split(<doubleQuotes46>(?<=\\G...)<doubleQuotes46>)));<newline46mondego>"
"2947splitHere46","2297450splitHere46","[123, 456, 789, 0]<newline46mondego>"
"2948splitHere46","2297450splitHere46","(?<=\G...)"
"2949splitHere46","2297450splitHere46","\G"
"2950splitHere46","2297450splitHere46","..."
"2951splitHere46","2297450splitHere46","(?<= )"
"2952splitHere46","2297540splitHere46","public StaticLayout(Graph<V,E> graph,<newline46mondego>                org.apache.commons.collections15.Transformer<V,Point2D> initializer)<newline46mondego>"
"2953splitHere46","2297540splitHere46","package test;<newline46mondego><newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.geom.Point2D;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>import org.apache.commons.collections15.Transformer;<newline46mondego><newline46mondego>import edu.uci.ics.jung.algorithms.layout.StaticLayout;<newline46mondego>import edu.uci.ics.jung.graph.Graph;<newline46mondego>import edu.uci.ics.jung.graph.SparseMultigraph;<newline46mondego>import edu.uci.ics.jung.visualization.VisualizationViewer;<newline46mondego><newline46mondego>/**<newline46mondego> * Jung example - vertices appearing in same location<newline46mondego> * <newline46mondego> * @author Kah<newline46mondego> */<newline46mondego>public class StaticLocation {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     * @throws IOException<newline46mondego>     */<newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        // Setup the example graph.<newline46mondego>        Graph<Integer, String> basis = new SparseMultigraph<Integer, String>();<newline46mondego>        basis.addVertex(Integer.valueOf(0));<newline46mondego>        basis.addVertex(Integer.valueOf(1));<newline46mondego>        basis.addVertex(Integer.valueOf(2));<newline46mondego>        basis.addEdge(<doubleQuotes46>Edge 1<doubleQuotes46>, Integer.valueOf(0), Integer.valueOf(1));<newline46mondego>        basis.addEdge(<doubleQuotes46>Edge 2<doubleQuotes46>, Integer.valueOf(0), Integer.valueOf(2));<newline46mondego>        basis.addEdge(<doubleQuotes46>Edge 3<doubleQuotes46>, Integer.valueOf(1), Integer.valueOf(2));<newline46mondego><newline46mondego>        Transformer<Integer, Point2D> locationTransformer = new Transformer<Integer, Point2D>() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public Point2D transform(Integer vertex) {<newline46mondego>                int value = (vertex.intValue() * 40) + 20;<newline46mondego>                return new Point2D.Double((double) value, (double) value);<newline46mondego>            }<newline46mondego>        };<newline46mondego><newline46mondego>        StaticLayout<Integer, String> layout = new StaticLayout<Integer, String>(<newline46mondego>                basis, locationTransformer);<newline46mondego>        layout.setSize(new Dimension(250, 250));<newline46mondego>        VisualizationViewer<Integer, String> vv = new VisualizationViewer<Integer, String>(<newline46mondego>                layout);<newline46mondego><newline46mondego>        vv.setPreferredSize(new Dimension(250, 250));<newline46mondego><newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46>Simple Graph View 2<doubleQuotes46>);<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.getContentPane().add(vv);<newline46mondego>        vv.setOpaque(false);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2954splitHere46","2297540splitHere46","package test;<newline46mondego><newline46mondego>import java.awt.Dimension;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileWriter;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>import org.apache.commons.collections15.Transformer;<newline46mondego><newline46mondego>import edu.uci.ics.jung.algorithms.layout.Layout;<newline46mondego>import edu.uci.ics.jung.algorithms.layout.SpringLayout2;<newline46mondego>import edu.uci.ics.jung.graph.Graph;<newline46mondego>import edu.uci.ics.jung.graph.SparseMultigraph;<newline46mondego>import edu.uci.ics.jung.io.GraphMLReader;<newline46mondego>import edu.uci.ics.jung.io.GraphMLWriter;<newline46mondego>import edu.uci.ics.jung.visualization.VisualizationViewer;<newline46mondego>import edu.uci.ics.jung.visualization.decorators.ToStringLabeller;<newline46mondego>import edu.uci.ics.jung.visualization.layout.PersistentLayoutImpl;<newline46mondego><newline46mondego>/**<newline46mondego> * Jung example - vertices appearing in same location<newline46mondego> * <newline46mondego> * @author Kah<newline46mondego> */<newline46mondego>public class PersistentVertices<newline46mondego>{<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param args<newline46mondego>     * @throws IOException<newline46mondego>     */<newline46mondego>    public static void main(String[] args) throws IOException<newline46mondego>    {<newline46mondego>        // Setup the example graph.<newline46mondego>        try<newline46mondego>        {<newline46mondego>            VisualizationViewer<Integer, String> vv = new VisualizationViewer<Integer, String>(<newline46mondego>                    getLayout());<newline46mondego><newline46mondego>            vv.setPreferredSize(new Dimension(250, 250));<newline46mondego><newline46mondego>            JFrame frame = new JFrame(<doubleQuotes46>Simple Graph View 2<doubleQuotes46>);<newline46mondego>            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>            frame.getContentPane().add(vv);<newline46mondego>            vv.setOpaque(false);<newline46mondego>            frame.pack();<newline46mondego>            frame.setVisible(true);<newline46mondego>        }<newline46mondego>        catch (Exception e)<newline46mondego>        {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static Layout<Integer, String> getLayout() throws IOException,<newline46mondego>            ClassNotFoundException<newline46mondego>    {<newline46mondego>        Graph<Integer, String> graph = new SparseMultigraph<Integer, String>();<newline46mondego>        File source = new File(<doubleQuotes46>C:\\layout.dat<doubleQuotes46>);<newline46mondego>        SpringLayout2<Integer, String> backing = new SpringLayout2<Integer, String>(<newline46mondego>                graph);<newline46mondego>        PersistentLayoutImpl<Integer, String> layout = new PersistentLayoutImpl<Integer, String>(<newline46mondego>                backing);<newline46mondego>        layout.setSize(new Dimension(250, 250));<newline46mondego><newline46mondego>        // Note that you also need to put the vertices and edges back before<newline46mondego>        // restoring.<newline46mondego>        graph.addVertex(Integer.valueOf(0));<newline46mondego>        graph.addVertex(Integer.valueOf(1));<newline46mondego>        graph.addVertex(Integer.valueOf(2));<newline46mondego>        graph.addEdge(<doubleQuotes46>Edge 1<doubleQuotes46>, Integer.valueOf(0), Integer.valueOf(1));<newline46mondego>        graph.addEdge(<doubleQuotes46>Edge 2<doubleQuotes46>, Integer.valueOf(0), Integer.valueOf(2));<newline46mondego>        graph.addEdge(<doubleQuotes46>Edge 3<doubleQuotes46>, Integer.valueOf(1), Integer.valueOf(2));<newline46mondego><newline46mondego>        if (source.exists())<newline46mondego>        {<newline46mondego>            layout.restore(source.getAbsolutePath());<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            layout.persist(source.getAbsolutePath());<newline46mondego>        }<newline46mondego>        return layout;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2955splitHere46","2297568splitHere46","frameB.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<newline46mondego>"
"2956splitHere46","2297629splitHere46","import java.io.BufferedInputStream;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>public class HashmatWarrior {<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        Scanner stdin = new Scanner(new BufferedInputStream(System.in));<newline46mondego>        while (stdin.hasNext()) {<newline46mondego>            System.out.println(Math.abs(stdin.nextLong() - stdin.nextLong()));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2957splitHere46","2297690splitHere46","include (1..10).collect { <doubleQuotes46>Child$it<doubleQuotes46> }<newline46mondego>"
"2958splitHere46","2297708splitHere46","FacesContext"
"2959splitHere46","2297708splitHere46","Iterator<FacesMessage> msgs = FacesContext.getCurrentInstance().getMessages();<newline46mondego>for (FacesMessage msg : msgs) {<newline46mondego>    msg.getSeverity();<newline46mondego>}<newline46mondego>"
"2960splitHere46","2297729splitHere46","Kenai><newline46mondego>------<newline46mondego>CVS><newline46mondego>Mercurial><newline46mondego>Subversion><newline46mondego>______<newline46mondego>"
"2961splitHere46","2297767splitHere46","C"
"2962splitHere46","2297767splitHere46","c2"
"2963splitHere46","2297767splitHere46","c1"
"2964splitHere46","2297767splitHere46","m1"
"2965splitHere46","2297767splitHere46","m1"
"2966splitHere46","2297767splitHere46","c1"
"2967splitHere46","2297767splitHere46","main"
"2968splitHere46","2298052splitHere46","panel.add(new JScrollPane(table));<newline46mondego>"
"2969splitHere46","2298052splitHere46","panel.add(table.getTableHeader(), BorderLayout.NORTH);<newline46mondego>panel.add(table, BorderLayout.CENTER);<newline46mondego>"
"2970splitHere46","2298096splitHere46","registerColumnType( Types.VARCHAR, 10, <doubleQuotes46>char($l)<doubleQuotes46> );<newline46mondego>"
"2971splitHere46","2298191splitHere46","import java.io.File;<newline46mondego>import org.w3c.dom.Document;<newline46mondego>import org.w3c.dom.*;<newline46mondego><newline46mondego>import javax.xml.parsers.DocumentBuilderFactory;<newline46mondego>import javax.xml.parsers.DocumentBuilder;<newline46mondego>import org.xml.sax.SAXException;<newline46mondego>import org.xml.sax.SAXParseException; <newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>try {<newline46mondego>    DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();<newline46mondego>    DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();<newline46mondego>    Document doc = docBuilder.parse (InputStreamYouBuiltEarlierFromAnHTTPRequest);<newline46mondego>}<newline46mondego>catch (ParserConfigurationException e)<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>catch (SAXException e)<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego>catch (IOException e)<newline46mondego>{<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego>"
"2972splitHere46","2298384splitHere46","javac MyFirstApp.java<newline46mondego>java MyFirstApp<newline46mondego>"
"2973splitHere46","2298451splitHere46","<doubleQuotes46>WHERE ID = ? AND STATUS = ?<doubleQuotes46><newline46mondego>"
"2974splitHere46","2298451splitHere46","insert.setString(3, <doubleQuotes46>good<doubleQuotes46>);<newline46mondego>"
"2975splitHere46","2298727splitHere46",".war"
"2976splitHere46","2298727splitHere46","org.apache.catalina.core.JreMemoryLeakPreventionListener"
"2977splitHere46","2298791splitHere46","File schemaFile = new File(<doubleQuotes46>schema.xsd<doubleQuotes46>);<newline46mondego>File xmlFile = new File(<doubleQuotes46>input.xml<doubleQuotes46>);<newline46mondego>Schema schema = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI).newSchema(schemaFile);<newline46mondego>Validator validator = schema.newValidator();<newline46mondego>validator.validate(new StreamSource(new FileInputStream(xmlFile)));<newline46mondego>"
"2978splitHere46","2299005splitHere46","Player"
"2979splitHere46","2299005splitHere46","Game"
"2980splitHere46","2299005splitHere46","Game"
"2981splitHere46","2299005splitHere46","GameController"
"2982splitHere46","2299005splitHere46","public class Game {<newline46mondego>    private final PlayerType playerType;<newline46mondego><newline46mondego>    public Game(PlayerType playerType) {...}<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class GameController {<newline46mondego>    private final Game game;<newline46mondego><newline46mondego>    public GameController(Game game) {...}<newline46mondego>}<newline46mondego>"
"2983splitHere46","2299065splitHere46","jf.getContentPane().setLayout(null);<newline46mondego>"
"2984splitHere46","2299065splitHere46","public void paintComponent (Graphics g) {<newline46mondego>    super.paintComponent (g);<newline46mondego>    g.setColor(getBackground());<newline46mondego>    g.drawRect(0, 0, getWidth(), getHeight());<newline46mondego> }<newline46mondego>"
"2985splitHere46","2299065splitHere46","SwingUtilities.invokeLater(new Runnable() {<newline46mondego>     public void run() {<newline46mondego>         // your code goes here<newline46mondego>     } <newline46mondego>}<newline46mondego>"
"2986splitHere46","2299116splitHere46","setCellRenderer()"
"2987splitHere46","2299116splitHere46","table.getTableHeader().setReorderingAllowed(false);<newline46mondego>"
"2988splitHere46","2299134splitHere46","<logger name=<doubleQuotes46>com<doubleQuotes46> additivity=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>      <level value=<doubleQuotes46>warn<doubleQuotes46>/><newline46mondego>      <appender-ref ref=<doubleQuotes46>myRFA<doubleQuotes46>/><newline46mondego>      <appender-ref ref=<doubleQuotes46>SOCKET<doubleQuotes46>/><newline46mondego>   </logger><newline46mondego><newline46mondego>   <logger name=<doubleQuotes46>org<doubleQuotes46> additivity=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>      <level value=<doubleQuotes46>warn<doubleQuotes46>/><newline46mondego>      <appender-ref ref=<doubleQuotes46>myRFA<doubleQuotes46>/><newline46mondego>      <appender-ref ref=<doubleQuotes46>SOCKET<doubleQuotes46>/><newline46mondego>   </logger><newline46mondego>"
"2989splitHere46","2299189splitHere46","@Entity<newline46mondego><newline46mondego>@NamedQueries ( value = {<newline46mondego>    @NamedQuery (<newline46mondego>        name = pagedDeleteExpiredItems<newline46mondego>        query=    DELETE FROM MyTable<newline46mondego>            WHERE (<table key>) IN (<newline46mondego>                SELECT <table key> FROM (<newline46mondego>                SELECT ROWNUM AS row_num, <table key> FROM MyTable<newline46mondego>                WHERE timestamp <= :currentTime<newline46mondego>                )<newline46mondego>                WHERE row_num < :pageSize<newline46mondego>            )<newline46mondego>    )<newline46mondego>})<newline46mondego><newline46mondego>public class MyEntity {<newline46mondego>    @TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)<newline46mondego>    int doPagedDeleteExpiredItems(Date currentTime, int pageSize) {<newline46mondego>        Query query = em.createNamedQuery(<doubleQuotes46>pagedDeleteExpiredItems<doubleQuotes46>);<newline46mondego>        query.setParameter(<doubleQuotes46>currentTime<doubleQuotes46>, currentTime);<newline46mondego>        query.setParameter(<doubleQuotes46>pageSize<doubleQuotes46>, pageSize);<newline46mondego>        int deleteCount = query.executeUpdate();<newline46mondego>        return deleteCount;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>@EJBTimer<newline46mondego>public class DeleteExpiredItemsTimer {<newline46mondego><newline46mondego>    @EJB(beanName = <doubleQuotes46>MyEntity<doubleQuotes46>)<newline46mondego>    MyEntity myEntity;<newline46mondego><newline46mondego>    @TransactionAttribute(TransactionAttributeType.NOT_SUPPORTED)<newline46mondego>    void handleTimeout(Timer timer) {<newline46mondego>        Date currentTime = getCurrentTime()<newline46mondego>        int pageSize = 100<newline46mondego>        int deleteCount;<newline46mondego>        do {<newline46mondego>            myEntity.doPagedDeleteExpiredItems(currentTime, pageSize);<newline46mondego>        } while(deleteCount>0);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"2990splitHere46","2299197splitHere46","0.#################"
"2991splitHere46","2299234splitHere46","proxy-target-class"
"2992splitHere46","2299560splitHere46","web.xml"
"2993splitHere46","2299560splitHere46","<url-pattern>/channel/*</url-pattern><newline46mondego>"
"2994splitHere46","2299560splitHere46","@RequestMapping(value = { <doubleQuotes46>/channel1/{id}<doubleQuotes46>, <doubleQuotes46>/channel1/{id}/{text}<doubleQuotes46> })<newline46mondego>"
"2995splitHere46","2299560splitHere46","/channel1"
"2996splitHere46","2299560splitHere46","@RequestMapping(value = { <doubleQuotes46>/{id}<doubleQuotes46>, <doubleQuotes46>/{id}/{text}<doubleQuotes46> })<newline46mondego>"
"2997splitHere46","2299813splitHere46","/** The proportional set size for dalvik. */<newline46mondego>    public int dalvikPss;<newline46mondego>    /** The private dirty pages used by dalvik. */<newline46mondego>    public int dalvikPrivateDirty;<newline46mondego>    /** The shared dirty pages used by dalvik. */<newline46mondego>    public int dalvikSharedDirty;<newline46mondego><newline46mondego>    /** The proportional set size for the native heap. */<newline46mondego>    public int nativePss;<newline46mondego>    /** The private dirty pages used by the native heap. */<newline46mondego>    public int nativePrivateDirty;<newline46mondego>    /** The shared dirty pages used by the native heap. */<newline46mondego>    public int nativeSharedDirty;<newline46mondego><newline46mondego>    /** The proportional set size for everything else. */<newline46mondego>    public int otherPss;<newline46mondego>    /** The private dirty pages used by everything else. */<newline46mondego>    public int otherPrivateDirty;<newline46mondego>    /** The shared dirty pages used by everything else. */<newline46mondego>    public int otherSharedDirty;<newline46mondego>"
"2998splitHere46","2299870splitHere46","DataSource"
"2999splitHere46","2299870splitHere46","/META-INF/context.xml"
"3000splitHere46","2299870splitHere46","/META-INF"
"3001splitHere46","2299870splitHere46","/WEB-INF"
"3002splitHere46","2299870splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><newline46mondego><Context><newline46mondego>    <Resource<newline46mondego>        name=<doubleQuotes46>jdbc/db<doubleQuotes46> type=<doubleQuotes46>javax.sql.DataSource<doubleQuotes46><newline46mondego>        maxActive=<doubleQuotes46>100<doubleQuotes46> maxIdle=<doubleQuotes46>30<doubleQuotes46> maxWait=<doubleQuotes46>10000<doubleQuotes46> <newline46mondego>        url=<doubleQuotes46>jdbc:mysql://hostname.com/db<doubleQuotes46><newline46mondego>        driverClassName=<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46><newline46mondego>        username=<doubleQuotes46>user<doubleQuotes46> password=<doubleQuotes46>pass<doubleQuotes46><newline46mondego>    /><newline46mondego></Context><newline46mondego>"
"3003splitHere46","2299870splitHere46","jdbc/db"
"3004splitHere46","2299870splitHere46","/WEB-INF/web.xml"
"3005splitHere46","2299870splitHere46","<resource-env-ref><newline46mondego>    <resource-env-ref-name>jdbc/db</resource-env-ref-name><newline46mondego>    <resource-env-ref-type>javax.sql.DataSource</resource-env-ref-type><newline46mondego></resource-env-ref><newline46mondego>"
"3006splitHere46","2299870splitHere46","jdbc/db"
"3007splitHere46","2299870splitHere46","private DataSource dataSource;<newline46mondego><newline46mondego>public Database(String jndiname) {<newline46mondego>    try {<newline46mondego>        dataSource = (DataSource) new InitialContext().lookup(<doubleQuotes46>java:comp/env/<doubleQuotes46> + jndiname);<newline46mondego>    } catch (NamingException e) {<newline46mondego>        // Handle error that it's not configured in JNDI.<newline46mondego>        throw new SomeRuntimeException(jndiname + <doubleQuotes46> is missing in JNDI!<doubleQuotes46>, e);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public Connection getConnection() {<newline46mondego>    return dataSource.getConnection();<newline46mondego>}<newline46mondego>"
"3008splitHere46","2299870splitHere46","DriverManager.getConnection()"
"3009splitHere46","2299870splitHere46","new Database(<doubleQuotes46>jdbc/db<doubleQuotes46>)"
"3010splitHere46","2299870splitHere46","database.getConnection()"
"3011splitHere46","2299870splitHere46","Connection"
"3012splitHere46","2299870splitHere46","jdbc/db"
"3013splitHere46","2299870splitHere46","Tomcat/lib"
"3014splitHere46","2299870splitHere46","shared.loader"
"3015splitHere46","2299870splitHere46","Tomcat/conf/catalina.properties"
"3016splitHere46","2299950splitHere46","ArrayList<MyClass> array = new ArrayList<MyClass>();<newline46mondego><newline46mondego>Iterator<MyClass> it1 = array.iterator(); <newline46mondego>while (it1.hasNext())<newline46mondego>{ <newline46mondego>    MyClass temp = it1.myGetterMethod(); <newline46mondego>    System.out.println (temp); <newline46mondego>}<newline46mondego>"
"3017splitHere46","2299965splitHere46","rs = ps.executeQuery(sentSQL);<newline46mondego>"
"3018splitHere46","2299965splitHere46","rs = ps.executeQuery();<newline46mondego>"
"3019splitHere46","2300413splitHere46","public class MyServiceTests extends ServiceTestCase<MyService> {<newline46mondego><newline46mondego>private static final String TAG = <doubleQuotes46>MyServiceTests<doubleQuotes46>;<newline46mondego><newline46mondego>public MyServiceTests() {<newline46mondego>    super(MyService.class);<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Test basic startup/shutdown of Service<newline46mondego> */<newline46mondego>@SmallTest<newline46mondego>public void testStartable() {<newline46mondego>    Intent startIntent = new Intent();<newline46mondego>    startIntent.setClass(getContext(), MyService.class);<newline46mondego>    startService(startIntent);<newline46mondego>    assertNotNull(getService());<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego> * Test binding to service<newline46mondego> */<newline46mondego>@MediumTest<newline46mondego>public void testBindable() {<newline46mondego>    Intent startIntent = new Intent();<newline46mondego>    startIntent.setClass(getContext(), MyService.class);<newline46mondego>    IBinder service = bindService(startIntent);<newline46mondego>    assertNotNull(service);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"3020splitHere46","2300464splitHere46","java.util.concurrent.Future"
"3021splitHere46","2300597splitHere46","java.lang.Thread"
"3022splitHere46","2300597splitHere46","List<Runnable>"
"3023splitHere46","2300597splitHere46","List<Thread>"
"3024splitHere46","2300597splitHere46","java.util.HashMap<java.lang.Thread, java.lang.Runnable>"
"3025splitHere46","2300714splitHere46","clone"
"3026splitHere46","2300714splitHere46","private static <T> T cloneByReflection(T object) {<newline46mondego>    try {<newline46mondego>        return (T) object.getClass().getMethod(<doubleQuotes46>clone<doubleQuotes46>).invoke(object);<newline46mondego>    } catch (Exception e) {<newline46mondego>        return null;    // or whatever you want to do<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public static <T> void fillWithClones(T[] array, T template) {<newline46mondego>    for (int i = 0; i < array.length; ++i)<newline46mondego>        array[i] = cloneByReflection(template);<newline46mondego>}<newline46mondego>"
"3027splitHere46","2300797splitHere46","String[] keywords = s.getKeywords();<newline46mondego><newline46mondego>for( String word : keywords ) {<newline46mondego><newline46mondego>  if( word.equals( keyword ) ) {<newline46mondego><newline46mondego>    key.add(s);<newline46mondego>    break;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3028splitHere46","2300797splitHere46","if( s.getKeywords.contains( keyword ) ) {<newline46mondego>  key.add(s);<newline46mondego>}<newline46mondego>"
"3029splitHere46","2300909splitHere46","String fileName = file.getFileIdentifier();<newline46mondego>byte[] fileData = file.getStoredFile(); // BTW: Any chance to get this as InputStream? This is namely memory hogging.<newline46mondego><newline46mondego>response.setContentType(<doubleQuotes46>application/x-bzip2<doubleQuotes46>);<newline46mondego>response.setHeader(<doubleQuotes46>Content-Disposition<doubleQuotes46>, <doubleQuotes46>attachment; filename=\<doubleQuotes46><doubleQuotes46> + fileName + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>OutputStream output = null;<newline46mondego><newline46mondego>try {<newline46mondego>     output = new CBZip2OutputStream(response.getOutputStream());<newline46mondego>     output.write(fileData);<newline46mondego>} finally {<newline46mondego>     output.close();<newline46mondego>}<newline46mondego>"
"3030splitHere46","2300909splitHere46","CBZip2OutputStream"
"3031splitHere46","2300909splitHere46","byte[]"
"3032splitHere46","2300909splitHere46","IllegalStateException: Response already committed"
"3033splitHere46","2300909splitHere46","null"
"3034splitHere46","2300965splitHere46","public class Library<newline46mondego>{<newline46mondego>    private Set<CD> theCDs = new HashSet<CD>();<newline46mondego>    private Set<DVD> theDVDs = new HashSet<DVD>();<newline46mondego>    private Set<Book> theBooks = new HashSet<Book>();<newline46mondego><newline46mondego>    public Collection<Book> booksByAuthor(String author)<newline46mondego>    {<newline46mondego><newline46mondego>        for (Book b : theBooks)<newline46mondego>        {<newline46mondego>            if (b.getAuthor().equals(author)) {<newline46mondego>                //<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3035splitHere46","2300965splitHere46","Item"
"3036splitHere46","2300965splitHere46","Book"
"3037splitHere46","2300965splitHere46","for(Item s : theBooks)<newline46mondego>{<newline46mondego>    if (s instanceof Book) <newline46mondego>    {<newline46mondego>        Book b = (Book) s;<newline46mondego>        if (b.getAuthor().equals(author))<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3038splitHere46","2301155splitHere46","JRadioButton birdButton = new JRadioButton(birdString);<newline46mondego>birdButton.setSelected(true);<newline46mondego><newline46mondego>JRadioButton catButton = new JRadioButton(catString);<newline46mondego><newline46mondego>   //Group the radio buttons.<newline46mondego>ButtonGroup group = new ButtonGroup();<newline46mondego>group.add(birdButton);<newline46mondego>group.add(catButton);<newline46mondego>"
"3039splitHere46","2301155splitHere46","isSelected"
"3040splitHere46","2301167splitHere46","return new String[]{ ans1, ans2 };<newline46mondego>"
"3041splitHere46","2301167splitHere46","String"
"3042splitHere46","2301167splitHere46","ans1"
"3043splitHere46","2301167splitHere46","ans2"
"3044splitHere46","2301167splitHere46","String"
"3045splitHere46","2301167splitHere46","String[]"
"3046splitHere46","2301167splitHere46","String[] arr = new String[2];<newline46mondego>arr[0] = ans1;<newline46mondego>arr[1] = ans2;<newline46mondego>return arr;<newline46mondego>"
"3047splitHere46","2301167splitHere46","ans1"
"3048splitHere46","2301167splitHere46","ans2"
"3049splitHere46","2301248splitHere46",")"
"3050splitHere46","2301248splitHere46","charAt"
"3051splitHere46","2301329splitHere46","from java.lang.Object o<newline46mondego>"
"3052splitHere46","2301329splitHere46","from Named n, Named m where n.name = m.name<newline46mondego>"
"3053splitHere46","2301329splitHere46","from qualified.name.Transaction trans where trans.envelopeId=:envelopeId<newline46mondego>"
"3054splitHere46","2301329splitHere46","Transaction"
"3055splitHere46","2301478splitHere46","public class Generics<newline46mondego>{<newline46mondego><newline46mondego>static public void main(String[] args) {<newline46mondego>    Generics.test();<newline46mondego>    }<newline46mondego><newline46mondego>static private void test() {<newline46mondego>    Map<String,Object> ctx=new TreeMap<String,Object>();<newline46mondego>    Map<String,Object> map=new TreeMap<String,Object>();<newline46mondego>    Map<String,Object> tst;<newline46mondego><newline46mondego>    ctx.put(<doubleQuotes46>Test<doubleQuotes46>,map);<newline46mondego>    tst=uncheckedCast(ctx.get(<doubleQuotes46>Test<doubleQuotes46>));<newline46mondego>    }<newline46mondego><newline46mondego>@SuppressWarnings({<doubleQuotes46>unchecked<doubleQuotes46>})<newline46mondego>static public <T> T uncheckedCast(Object obj) {<newline46mondego>    return (T)obj;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3056splitHere46","2301478splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>) <newline46mondego>public static <T, X extends T> X uncheckedCast(T o) {<newline46mondego>    return (X) o;<newline46mondego>    }<newline46mondego>"
"3057splitHere46","2301478splitHere46","protected void startup() {<newline46mondego>    inputFields  =GenUtil.uncheckedCast(context.get(<doubleQuotes46>Input Fields<doubleQuotes46>  ,null));<newline46mondego>    outputFields =GenUtil.uncheckedCast(context.get(<doubleQuotes46>Output Fields<doubleQuotes46> ,null));<newline46mondego>    eventRegistry=GenUtil.uncheckedCast(context.get(<doubleQuotes46>Event Registry<doubleQuotes46>,null));<newline46mondego>    ...<newline46mondego>    }<newline46mondego>"
"3058splitHere46","2301874splitHere46","public class Sub1 {<newline46mondego>   private Superclass superclass;<newline46mondego>   public Sub1(Superclass superclass) {<newline46mondego>       this.superclass = superclass;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3059splitHere46","2301874splitHere46","Sub1 sub = new Sub1(this);<newline46mondego>"
"3060splitHere46","2301992splitHere46","private Enum follower;<newline46mondego>"
"3061splitHere46","2301992splitHere46","Follower"
"3062splitHere46","2301992splitHere46","private Enum<? extends Follower> follower;<newline46mondego>"
"3063splitHere46","2302011splitHere46","Byte"
"3064splitHere46","2302011splitHere46","List<Byte> mylist = new ArrayList<Byte>();<newline46mondego>"
"3065splitHere46","2302011splitHere46","for (byte b : mylist) {<newline46mondego><newline46mondego>}<newline46mondego>"
"3066splitHere46","2302045splitHere46","show()"
"3067splitHere46","2302045splitHere46","center()"
"3068splitHere46","2302045splitHere46","dialogVPanel"
"3069splitHere46","2302045splitHere46","DialogBox"
"3070splitHere46","2302045splitHere46","clear()"
"3071splitHere46","2302144splitHere46","main"
"3072splitHere46","2302144splitHere46","main"
"3073splitHere46","2302164splitHere46","hash()"
"3074splitHere46","2302287splitHere46","JobEndPointPK"
"3075splitHere46","2302287splitHere46","equals"
"3076splitHere46","2302287splitHere46","JobEndPoint"
"3077splitHere46","2302287splitHere46","JobEndPointPK"
"3078splitHere46","2302287splitHere46","@Embeddable<newline46mondego>class JobEndPointPK {<newline46mondego>    @Column(name = <doubleQuotes46>type<doubleQuotes46>, nullable = false)<newline46mondego>    @Enumerated<newline46mondego>    EndPointType type;<newline46mondego><newline46mondego>    @Column(name = <doubleQuotes46>zipCode<doubleQuotes46>, nullable = false)<newline46mondego>    String zipCode;<newline46mondego><newline46mondego>    @Column(name = <doubleQuotes46>customerNumber<doubleQuotes46>, nullable = false)<newline46mondego>    int customerId;<newline46mondego><newline46mondego>    // equals, hasCode, getters, setters etc.<newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>class JobEndPoint {<newline46mondego>    @Id<newline46mondego>    private JobEndPointPK key;<newline46mondego><newline46mondego>    // getters, setters etc.<newline46mondego>}<newline46mondego>"
"3079splitHere46","2302287splitHere46","@Entity<newline46mondego>class Job {<newline46mondego>    @OneToOne<newline46mondego>    @JoinColumns ({<newline46mondego>        @JoinColumn(name=<doubleQuotes46>loadPointType<doubleQuotes46>, referencedColumnName = <doubleQuotes46>type<doubleQuotes46>),<newline46mondego>        @JoinColumn(name=<doubleQuotes46>loadPointZip<doubleQuotes46>, referencedColumnName = <doubleQuotes46>zipCode<doubleQuotes46>),<newline46mondego>        @JoinColumn(name=<doubleQuotes46>loadPointCust<doubleQuotes46>, referencedColumnName = <doubleQuotes46>customerNumber<doubleQuotes46>)<newline46mondego>    })<newline46mondego>    private JobEndPoint loadPoint;<newline46mondego>    // similarly for unloadPoint<newline46mondego>    // other properties<newline46mondego>}<newline46mondego>"
"3080splitHere46","2302287splitHere46","JobEndPointPK.type"
"3081splitHere46","2302287splitHere46","loadPoint"
"3082splitHere46","2302287splitHere46","Load"
"3083splitHere46","2302287splitHere46","unloadPoint"
"3084splitHere46","2302287splitHere46","Unload"
"3085splitHere46","2302287splitHere46","@Formula"
"3086splitHere46","2302684splitHere46","public class Singleton {<newline46mondego>    private Singleton() { }<newline46mondego><newline46mondego>    private static class SingletonHolder {<newline46mondego>        private static final Singleton INSTANCE = new Singleton();<newline46mondego>    }<newline46mondego><newline46mondego>    public static Singleton getInstance() {<newline46mondego>        return SingletonHolder.INSTANCE;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getFoo() {<newline46mondego>        return <doubleQuotes46>bar<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3087splitHere46","2302684splitHere46","getInstance"
"3088splitHere46","2302731splitHere46","//"
"3089splitHere46","2302731splitHere46","@match"
"3090splitHere46","2302731splitHere46","Template"
"3091splitHere46","2302731splitHere46","init()"
"3092splitHere46","2302731splitHere46","TransformerFactory transFact = TransformerFactory.newInstance();<newline46mondego> Templates cachedXSLT = transFact.newTemplates(xsltSource);<newline46mondego>"
"3093splitHere46","2302731splitHere46","TransformerFactory"
"3094splitHere46","2302731splitHere46","Transformer t= cachedXSLT.newTransformer();<newline46mondego>t.transform(xmlSource, result);<newline46mondego>"
"3095splitHere46","2302814splitHere46","cascade=<doubleQuotes46>all<doubleQuotes46>"
"3096splitHere46","2302814splitHere46","cascade=CascadeType.ALL"
"3097splitHere46","2303192splitHere46","useDefaultSuffixPattern = false"
"3098splitHere46","2303192splitHere46","DefaultAnnotationHandlerMapping"
"3099splitHere46","2303192splitHere46","ContentNegotiationViewResolver"
"3100splitHere46","2303192splitHere46","PathMatcher"
"3101splitHere46","2303223splitHere46","long maxduration = 10000; // 10 seconds.<newline46mondego>long endtime = System.currentTimeMillis() + maxduration;<newline46mondego><newline46mondego>while (System.currentTimeMillis() < endtime) {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"3102splitHere46","2303223splitHere46","java.util.concurrent.ExecutorService"
"3103splitHere46","2303223splitHere46","package com.stackoverflow.q2303206;<newline46mondego><newline46mondego>import java.util.Arrays;<newline46mondego>import java.util.concurrent.Callable;<newline46mondego>import java.util.concurrent.ExecutorService;<newline46mondego>import java.util.concurrent.Executors;<newline46mondego>import java.util.concurrent.TimeUnit;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String... args) throws Exception {<newline46mondego>        ExecutorService executor = Executors.newSingleThreadExecutor();<newline46mondego>        executor.invokeAll(Arrays.asList(new Task()), 10, TimeUnit.SECONDS); // Get 10 seconds time.<newline46mondego>        executor.shutdown();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Task implements Callable<String> {<newline46mondego>    public String call() throws Exception {<newline46mondego>        while (true) {<newline46mondego>            // ...<newline46mondego>        }<newline46mondego>        return null;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3104splitHere46","2303336splitHere46","acquire();<newline46mondego>try {<newline46mondego>    use();<newline46mondego>} finally {<newline46mondego>    release();<newline46mondego>}<newline46mondego>"
"3105splitHere46","2303336splitHere46","final Socket echoSocket = new Socket(<doubleQuotes46>taranis<doubleQuotes46>, 7);<newline46mondego>try {<newline46mondego>    ... something ...<newline46mondego>} finally {<newline46mondego>    echoSocket.close();<newline46mondego>}<newline46mondego>"
"3106splitHere46","2303393splitHere46","hibernate.jdbc.batch_size 20<newline46mondego>"
"3107splitHere46","2303393splitHere46","flush"
"3108splitHere46","2303393splitHere46","clear"
"3109splitHere46","2303393splitHere46","OutOfMemoryException"
"3110splitHere46","2303393splitHere46","StatelessSession"
"3111splitHere46","2303405splitHere46","ComponentAdapter"
"3112splitHere46","2303405splitHere46","ComponentListener"
"3113splitHere46","2303479splitHere46","<project><newline46mondego>  <repositories><newline46mondego>    <repository><newline46mondego>      <id>source.db4o</id><newline46mondego>      <url>http://source.db4o.com/maven</url><newline46mondego>    </repository><newline46mondego>  </repositories><newline46mondego>  ...<newline46mondego>  <dependencies><newline46mondego>    <dependency><newline46mondego>      <groupId>com.db4o</groupId><newline46mondego>      <artifactId>db4o-full-java5</artifactId><newline46mondego>      <version>7.13-SNAPSHOT</version><newline46mondego>    </dependency><newline46mondego>    ...<newline46mondego>  </dependencies><newline46mondego></project><newline46mondego>"
"3114splitHere46","2303523splitHere46","new Socket(<doubleQuotes46>192.168.1.00<doubleQuotes46>,8888)"
"3115splitHere46","2303545splitHere46","public class Example<Editable extends Widget & HasText> {<newline46mondego>  private Editable editor = null;<newline46mondego><newline46mondego>  //do stuff in various methods (including the constructor) with the <newline46mondego>  //editor variable and the Editable type.<newline46mondego>}<newline46mondego>"
"3116splitHere46","2303708splitHere46","JFileChooser chooser = new JFileChooser();<newline46mondego><newline46mondego>try {<newline46mondego>    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());<newline46mondego>    SwingUtilities.updateComponentTreeUI(chooser);<newline46mondego>}<newline46mondego>catch (Exception ex) {<newline46mondego>    System.out.println(ex);<newline46mondego>}<newline46mondego>"
"3117splitHere46","2303715splitHere46","TextBox"
"3118splitHere46","2303715splitHere46","public class Simple extends Base {<newline46mondego>    private Simple(TextBox t) {<newline46mondego>        super(t);<newline46mondego>        // continue doing stuff with t here<newline46mondego>    }<newline46mondego><newline46mondego>    public Simple() {<newline46mondego>        this(new TextBox());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3119splitHere46","2303798splitHere46","char fstr[80];<newline46mondego>float num = 2.55f;<newline46mondego>int m = log10(num);<newline46mondego>int digit;<newline46mondego>float tolerance = .0001f;<newline46mondego><newline46mondego>while (num > 0 + precision)<newline46mondego>{<newline46mondego>    float weight = pow(10.0f, m);<newline46mondego>    digit = floor(num / weight);<newline46mondego>    num -= (digit*weight);<newline46mondego>    *(fstr++)= '0' + digit;<newline46mondego>    if (m == 0)<newline46mondego>        *(fstr++) = '.';<newline46mondego>    m--;<newline46mondego>}<newline46mondego>*(fstr) = '\0';<newline46mondego>"
"3120splitHere46","2303864splitHere46","Border"
"3121splitHere46","2303864splitHere46","Container"
"3122splitHere46","2303864splitHere46","private class BorderFaker extends JPanel<newline46mondego>{<newline46mondego>  public BorderFaker()<newline46mondego>  {<newline46mondego>    add( new JButton( <doubleQuotes46>Faked!<doubleQuotes46> ) );<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void paintComponent( Graphics g )<newline46mondego>  {<newline46mondego>    super.paintComponent( g );<newline46mondego>    drawFauxBorder( g );<newline46mondego>  }<newline46mondego><newline46mondego>  private void drawFauxBorder( Graphics g )<newline46mondego>  {<newline46mondego>    g.setColor( UIManager.getColor( <doubleQuotes46>border<doubleQuotes46> ) );<newline46mondego>    g.drawRect( 15, 15, getWidth() - 30, getHeight() - 30 );<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3123splitHere46","2303997splitHere46","JAVACODE<newline46mondego>void parse_rational() {<newline46mondego>  Token num, den;<newline46mondego>  num = getToken(1); // first value<newline46mondego>  getNextToken(); // trash fract symbol<newline46mondego>  den = getToken(1); // second value<newline46mondego><newline46mondego>  /* do whatever you want */   <newline46mondego>}<newline46mondego>"
"3124splitHere46","2303997splitHere46","S(): { parse_rational() | SomethingElse }"
"3125splitHere46","2304198splitHere46","public class ChessSquare extends JPanel{<newline46mondego>    int x,y;<newline46mondego><newline46mondego>    public ChessSquare(int x, int y){<newline46mondego>        super();<newline46mondego>        this.setPreferredSize(new Dimension(50,50));<newline46mondego>        this.setBorder(BorderFactory.createLineBorder(Color.black));<newline46mondego>        this.x = x;<newline46mondego>        this.y = y;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3126splitHere46","2304198splitHere46","public class ChessPanel extends JPanel{<newline46mondego>    JPanel positions[][] = new JPanel[8][8];<newline46mondego>    ChessSquare move[] = new ChessSquare[2];<newline46mondego><newline46mondego>    public ChessPanel(){<newline46mondego>        initComponents();<newline46mondego>    }<newline46mondego><newline46mondego>    private void initComponents(){<newline46mondego>        setLayout(new GridLayout(8,8));<newline46mondego><newline46mondego>        for(int i=0;i<positions.length;i++){<newline46mondego>            for(int j=0;j<positions[i].length;j++){<newline46mondego>                ChessSquare square = new ChessSquare(i,j);<newline46mondego>                square.addMouseListener(new MouseListener(){<newline46mondego>                    public void mouseClicked(MouseEvent me) {<newline46mondego>                        ChessSquare cs = (ChessSquare)me.getComponent();<newline46mondego>                        if(isValidMove(cs)){<newline46mondego><newline46mondego>                            System.out.println(<doubleQuotes46>Valid move!<doubleQuotes46>);<newline46mondego>                            System.out.println(<doubleQuotes46>x1: <doubleQuotes46>+move[0].x+<doubleQuotes46> y1: <doubleQuotes46>+move[0].y);<newline46mondego>                            System.out.println(<doubleQuotes46>x2: <doubleQuotes46>+move[1].x+<doubleQuotes46> y2: <doubleQuotes46>+move[1].y);<newline46mondego>                            System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>                            resetMove();<newline46mondego>                        }<newline46mondego>                    }<newline46mondego><newline46mondego>                    //Other mouse events<newline46mondego><newline46mondego>                });<newline46mondego>                positions[i][j] = square;<newline46mondego>                add(square);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private boolean isValidMove(ChessSquare square){<newline46mondego>        //here you would check if the move is valid.<newline46mondego>        if(move[0] == null){<newline46mondego>            move[0] = square;<newline46mondego>            return false; //first click<newline46mondego>        }else{<newline46mondego>            move[1] = square;<newline46mondego>        }<newline46mondego><newline46mondego>        //Other chess rules go here...<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    private void resetMove(){<newline46mondego>        move = new ChessSquare[2];<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3127splitHere46","2304198splitHere46","isValidMove()"
"3128splitHere46","2304402splitHere46","jspider"
"3129splitHere46","2304402splitHere46","crawler_GUI"
"3130splitHere46","2304402splitHere46","crawler_GUI"
"3131splitHere46","2304402splitHere46","jspider"
"3132splitHere46","2304402splitHere46","crawler_GUI"
"3133splitHere46","2304402splitHere46","jspider"
"3134splitHere46","2304402splitHere46","/WEB-INF/classes"
"3135splitHere46","2304402splitHere46","/WEB-INF/lib"
"3136splitHere46","2304402splitHere46","ESpider"
"3137splitHere46","2304402splitHere46","extends HttpServlet"
"3138splitHere46","2304402splitHere46","doGet()"
"3139splitHere46","2304402splitHere46","ESpider"
"3140splitHere46","2304402splitHere46","web.xml"
"3141splitHere46","2304402splitHere46","url-pattern"
"3142splitHere46","2304402splitHere46","web.xml"
"3143splitHere46","2304402splitHere46","robots.txt"
"3144splitHere46","2304501splitHere46","bind(2)"
"3145splitHere46","2304501splitHere46","recv(2)"
"3146splitHere46","2304501splitHere46","sendto(2)"
"3147splitHere46","2304501splitHere46","recv(2)"
"3148splitHere46","2304593splitHere46","java.util.Comparator"
"3149splitHere46","2304593splitHere46","Player"
"3150splitHere46","2304593splitHere46","Comparable"
"3151splitHere46","2304593splitHere46","Comparator"
"3152splitHere46","2304593splitHere46","Comparable"
"3153splitHere46","2304631splitHere46","java.util.Properties"
"3154splitHere46","2304631splitHere46","key=value"
"3155splitHere46","2304631splitHere46","String#split()"
"3156splitHere46","2304693splitHere46","<welcome-file>"
"3157splitHere46","2304693splitHere46","web.xml"
"3158splitHere46","2304693splitHere46","WebContent"
"3159splitHere46","2304693splitHere46","helloworld.jsp"
"3160splitHere46","2304693splitHere46","web.xml"
"3161splitHere46","2304693splitHere46","<welcome-file-list><newline46mondego>    <welcome-file>/helloworld.jsp</welcome-file><newline46mondego></welcome-file-list><newline46mondego>"
"3162splitHere46","2304693splitHere46","<welcome-file>"
"3163splitHere46","2304693splitHere46","<welcome-file-list><newline46mondego>    <welcome-file>/SayHello.action</welcome-file><newline46mondego></welcome-file-list><newline46mondego>"
"3164splitHere46","2305021splitHere46","String[] parts = <doubleQuotes46>the quick    brown   fox<doubleQuotes46>.split(<doubleQuotes46>\\s+<doubleQuotes46>);<newline46mondego>"
"3165splitHere46","2305021splitHere46","String.trim()"
"3166splitHere46","2305021splitHere46","trim"
"3167splitHere46","2305390splitHere46","beginShape(); <newline46mondego>  for (int p=0; p<pcount; p++){ <newline46mondego>    vertex(Ring[p].position().x(),Ring[p].position().y()); <newline46mondego>  } <newline46mondego>  endShape(CLOSE);<newline46mondego>"
"3168splitHere46","2305390splitHere46","import processing.opengl.*;<newline46mondego>import javax.media.opengl.*;<newline46mondego><newline46mondego>int zSpacing = 10;<newline46mondego>PVector[][] slices;<newline46mondego><newline46mondego>void setup() {<newline46mondego>  size(600, 500, OPENGL);<newline46mondego><newline46mondego>  slices = new PVector[3][3];<newline46mondego>  //dummy slice 1<newline46mondego>  slices[0][0] = new PVector(400, 200,-200);<newline46mondego>  slices[0][1] = new PVector(300, 400,-200);<newline46mondego>  slices[0][2] = new PVector(500, 400,-200);<newline46mondego>  //dummy slice 2<newline46mondego>  slices[1][0] = new PVector(410, 210,-200);<newline46mondego>  slices[1][1] = new PVector(310, 410,-200);<newline46mondego>  slices[1][2] = new PVector(510, 410,-200);<newline46mondego>  //dummy slice 3<newline46mondego>  slices[2][0] = new PVector(420, 220,-200);<newline46mondego>  slices[2][1] = new PVector(320, 420,-200);<newline46mondego>  slices[2][2] = new PVector(520, 420,-200);<newline46mondego>}<newline46mondego><newline46mondego>void draw() {<newline46mondego>  background(255);<newline46mondego><newline46mondego>  PGraphicsOpenGL pgl = (PGraphicsOpenGL) g;  // g may change<newline46mondego>  GL gl = pgl.beginGL();  // always use the GL object returned by beginGL<newline46mondego><newline46mondego>  for(int i = 0 ; i < slices.length; i ++){<newline46mondego>    gl.glColor3f(0, .15 * i, 0);<newline46mondego>    gl.glBegin(GL.GL_POLYGON);<newline46mondego>    for(int j = 0; j < slices[i].length; j++){<newline46mondego>      gl.glVertex3f(slices[i][j].x, slices[i][j].y,slices[i][j].z + (zSpacing * i));<newline46mondego>    }<newline46mondego>    gl.glEnd();<newline46mondego>  }<newline46mondego>  pgl.endGL();<newline46mondego>}<newline46mondego>"
"3169splitHere46","2305582splitHere46","/* My Comment */    is usually used for making a comment block.<newline46mondego><newline46mondego>/** MyComment */    is usually used for documentation purposes, such as desribing variables and things like that.<newline46mondego>"
"3170splitHere46","2305583splitHere46","public interface CacheClient {<newline46mondego>    List<? extends Key> getKeysWithExpiryCheck();<newline46mondego>}<newline46mondego>"
"3171splitHere46","2305712splitHere46","#define abs(x) (x>0)?(x):(-x)<newline46mondego>"
"3172splitHere46","2305712splitHere46","abs"
"3173splitHere46","2305712splitHere46","#define abs(x) ((x)>0 ? (x) : -(x))<newline46mondego>"
"3174splitHere46","2305712splitHere46","abs(x-xx)"
"3175splitHere46","2305712splitHere46","x-xx <= 0"
"3176splitHere46","2305712splitHere46","N"
"3177splitHere46","2305712splitHere46","2**32"
"3178splitHere46","2305712splitHere46","x"
"3179splitHere46","2305712splitHere46","xx"
"3180splitHere46","2305712splitHere46","2**32"
"3181splitHere46","2305712splitHere46","x*x"
"3182splitHere46","2305712splitHere46","2**64"
"3183splitHere46","2305712splitHere46","x*x % N"
"3184splitHere46","2305940splitHere46","package myapp;<newline46mondego><newline46mondego>public class MyContextListener implements ServletContextListener {<newline46mondego><newline46mondego><newline46mondego><newline46mondego>    public void contextInitialized(ServletContextEvent arg0) {<newline46mondego>        //called when context is started<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void contextDestroyed(ServletContextEvent arg0) {<newline46mondego>      //called context destroyed<newline46mondego>    }   <newline46mondego>}<newline46mondego>"
"3185splitHere46","2305940splitHere46","<listener><newline46mondego>    <listener-class>myapp.MyContextListener</listener-class><newline46mondego> </listener><newline46mondego>"
"3186splitHere46","2305980splitHere46","public static void main(String[] args) throws IOException {"
"3187splitHere46","2306019splitHere46","System.in"
"3188splitHere46","2306019splitHere46","System.out"
"3189splitHere46","2306019splitHere46","Socket"
"3190splitHere46","2306051splitHere46","java.util.Date"
"3191splitHere46","2306051splitHere46","java.sql.Date"
"3192splitHere46","2306051splitHere46","sql.Date"
"3193splitHere46","2306051splitHere46","java.sql.Time"
"3194splitHere46","2306051splitHere46","java.sql.Timestamp"
"3195splitHere46","2306051splitHere46","util.Date"
"3196splitHere46","2306051splitHere46","sql.Date"
"3197splitHere46","2306051splitHere46","sql.Time"
"3198splitHere46","2306051splitHere46","PreparedStatement"
"3199splitHere46","2306051splitHere46","#setDate()"
"3200splitHere46","2306051splitHere46","sql.Date"
"3201splitHere46","2306051splitHere46","#setTime()"
"3202splitHere46","2306051splitHere46","sql.Time"
"3203splitHere46","2306051splitHere46","#setTimestamp()"
"3204splitHere46","2306051splitHere46","sql.Timestamp"
"3205splitHere46","2306051splitHere46","ps.setObject(fieldIndex, utilDateObject);"
"3206splitHere46","2306051splitHere46","util.Date"
"3207splitHere46","2306095splitHere46","java.util.concurrent.locks"
"3208splitHere46","2306095splitHere46","wait()"
"3209splitHere46","2306095splitHere46","notify()"
"3210splitHere46","2306127splitHere46","<copy file=<doubleQuotes46>${basedir}/.project.base<doubleQuotes46> tofile=<doubleQuotes46>${basedir}/.project<doubleQuotes46>><newline46mondego><filterchain><newline46mondego>    <replacetokens><newline46mondego>        <token key=<doubleQuotes46>BRANCH<doubleQuotes46> value=<doubleQuotes46>${branch}<doubleQuotes46>/><newline46mondego>    </replacetokens><newline46mondego></filterchain><newline46mondego></copy><newline46mondego>"
"3211splitHere46","2306173splitHere46","org.eclipse.core.runtime"
"3212splitHere46","2306173splitHere46","Manfest.MF"
"3213splitHere46","2306173splitHere46","IStatus"
"3214splitHere46","2306173splitHere46","org.eclipse.equinox.core/runtime"
"3215splitHere46","2306173splitHere46","org.eclipse.equinox.common"
"3216splitHere46","2306173splitHere46","org.eclipse.core.commands"
"3217splitHere46","2306173splitHere46","org.eclipse.equinox.common"
"3218splitHere46","2306173splitHere46","org.eclipse.core.commands"
"3219splitHere46","2306173splitHere46","org.osgi.framework"
"3220splitHere46","2306173splitHere46","org.eclipse.osgi"
"3221splitHere46","2306186splitHere46","<s:iterator>"
"3222splitHere46","2306186splitHere46","<s:iterator value=<doubleQuotes46>beans<doubleQuotes46>><newline46mondego>     <p>Property foo: <s:property name=<doubleQuotes46>foo<doubleQuotes46> /></p><newline46mondego>     <p>Property bar: <s:property name=<doubleQuotes46>bar<doubleQuotes46> /></p><newline46mondego></s:iterator><newline46mondego>"
"3223splitHere46","2306391splitHere46","<parallel><newline46mondego>    <server .../><newline46mondego>    <sequential><newline46mondego>        <client ... /><newline46mondego>        <!-- client has finished,  send stop command to server --><newline46mondego>    </sequential><newline46mondego></parallel><newline46mondego>"
"3224splitHere46","2306391splitHere46","daemons"
"3225splitHere46","2306391splitHere46","<parallel><newline46mondego>    <daemons><newline46mondego>        <server .../><newline46mondego>    </daemons><newline46mondego>    <sequential><newline46mondego>        <client ... /><newline46mondego>    </sequential><newline46mondego></parallel><newline46mondego>"
"3226splitHere46","2306468splitHere46","<context:property-placeholder .../>"
"3227splitHere46","2306468splitHere46","@Component <newline46mondego>public class MyBean { <newline46mondego>    @Autowired<newline46mondego>    public MyBean(@Value(<doubleQuotes46>${prop1}<doubleQuotes46>) String arg1, @Value(<doubleQuotes46>${prop2}<doubleQuotes46>) String arg2) { <newline46mondego>        // ... <newline46mondego>    } <newline46mondego>} <newline46mondego>"
"3228splitHere46","2306468splitHere46","<context:property-override .../>"
"3229splitHere46","2306485splitHere46","public static Object yourFunction(String arg1, String arg2, String arg3) {<newline46mondego>    // code code code<newline46mondego>    return (ArrayList<HashMap<String, String>>) whatever;<newline46mondego>}<newline46mondego>"
"3230splitHere46","2306485splitHere46","<function><newline46mondego>  <description>Blah blah blah</description><newline46mondego>  <name>yourFunction</name><newline46mondego>  <function-class>your.package.YourClassName</function-class><newline46mondego>  <function-signature><newline46mondego>    java.lang.Object yourFunction(java.lang.String, java.lang.String, java.lang.String)<newline46mondego>  </function-signature><newline46mondego></function><newline46mondego>"
"3231splitHere46","2306485splitHere46","<c:set var='result' value='${prefix:yourFunction(<doubleQuotes46>Goodbye<doubleQuotes46>, <doubleQuotes46>Mr.<doubleQuotes46>, <doubleQuotes46>Chips<doubleQuotes46>)}'/><newline46mondego>"
"3232splitHere46","2306498splitHere46","HttpSession"
"3233splitHere46","2306498splitHere46","HttpSession#setAttribute()"
"3234splitHere46","2306498splitHere46","HttpSession#getAttribute()"
"3235splitHere46","2306498splitHere46","HttpServletRequest#getSession()"
"3236splitHere46","2306498splitHere46","HttpSession"
"3237splitHere46","2306498splitHere46","User user = userDAO.find(username, password);<newline46mondego>if (user != null) {<newline46mondego>    request.getSession().setAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>} else {<newline46mondego>    // Show error?<newline46mondego>}<newline46mondego>"
"3238splitHere46","2306498splitHere46","User user = (User) request.getSession().getAttribute(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego>if (user != null) {<newline46mondego>    // User is logged in.<newline46mondego>} else {<newline46mondego>    // User is not logged in!<newline46mondego>}<newline46mondego>"
"3239splitHere46","2306498splitHere46","<p>Welcome, ${user.username}!<newline46mondego>"
"3240splitHere46","2306498splitHere46","getUsername()"
"3241splitHere46","2306584splitHere46","META-INF/orm.xml"
"3242splitHere46","2306584splitHere46",".xsd"
"3243splitHere46","2306584splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46> ?><newline46mondego><entity-mappings xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/persistence/orm<doubleQuotes46><newline46mondego>    xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>    xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/persistence/orm <newline46mondego>    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd<doubleQuotes46><newline46mondego>    version=<doubleQuotes46>1.0<doubleQuotes46>><newline46mondego><newline46mondego>    <description>External entities from library X</description><newline46mondego>    <package>com.external.library</package><newline46mondego>    <entity class=<doubleQuotes46>SomeClassName<doubleQuotes46>><newline46mondego>      <id>..</id><newline46mondego>    </entity><newline46mondego>    <entity class=<doubleQuotes46>AnotherClassName<doubleQuotes46>><newline46mondego>      <id>..</id><newline46mondego>    </entity><newline46mondego></entity-mapping><newline46mondego>"
"3244splitHere46","2306584splitHere46","<package>"
"3245splitHere46","2306584splitHere46","orm.xml"
"3246splitHere46","2306584splitHere46","persistence.xml"
"3247splitHere46","2306584splitHere46","<mapping-file>customMappingFile.xml</mapping-file><newline46mondego>"
"3248splitHere46","2306777splitHere46","public void setX(int x) { this.x = x; }<newline46mondego>"
"3249splitHere46","2307026splitHere46","public void create(Entity entity) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego><newline46mondego>    try { <newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(SQL_CREATE);<newline46mondego>        statement.setSomeObject(1, entity.getSomeProperty());<newline46mondego>        // ...<newline46mondego>        statement.executeUpdate();<newline46mondego>    } finally {<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3250splitHere46","2307026splitHere46","finally"
"3251splitHere46","2307026splitHere46","close()"
"3252splitHere46","2307026splitHere46","public void close() throws SQLException {<newline46mondego>    if (this.connection is still eligible for reuse) {<newline46mondego>        do not close this.connection, but just return it to pool for reuse;<newline46mondego>    } else {<newline46mondego>        actually invoke this.connection.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3253splitHere46","2307026splitHere46","ServletContextListener"
"3254splitHere46","2307026splitHere46","contextInitialized()"
"3255splitHere46","2307051splitHere46","gr = getGraphics()"
"3256splitHere46","2307164splitHere46","MouseInputAdapter mia = new MouseInputAdapter() {<newline46mondego>  @Override<newline46mondego>  public void mouseDragged(MouseEvent e) { ... }<newline46mondego>  @Override<newline46mondego>  public void mousePressed(MouseEvent e) { ... }<newline46mondego>};<newline46mondego>addMouseListener(mia);<newline46mondego>addMouseMotionListener(mia); // <-- You're missing this one.<newline46mondego>"
"3257splitHere46","2307342splitHere46","contains"
"3258splitHere46","2307342splitHere46","indexOf"
"3259splitHere46","2307342splitHere46","if( s.contains( word ) ) {<newline46mondego>   // ...<newline46mondego>}<newline46mondego><newline46mondego>if( s.indexOf( word2 ) >=0 ) {<newline46mondego>   // ...<newline46mondego>}<newline46mondego>"
"3260splitHere46","2307342splitHere46","StringTokenizer"
"3261splitHere46","2307407splitHere46","getHeaderField()"
"3262splitHere46","2307407splitHere46","java.net.URLConnection"
"3263splitHere46","2307407splitHere46","URLconnection"
"3264splitHere46","2307407splitHere46","package com.stackoverflow.q2307291;<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.io.OutputStreamWriter;<newline46mondego>import java.io.PrintWriter;<newline46mondego>import java.net.Socket;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String[] args) throws IOException {<newline46mondego>        String hostname = <doubleQuotes46>stackoverflow.com<doubleQuotes46>;<newline46mondego>        int port = 80;<newline46mondego><newline46mondego>        Socket socket = null;<newline46mondego>        PrintWriter writer = null;<newline46mondego>        BufferedReader reader = null;<newline46mondego><newline46mondego>        try {<newline46mondego>            socket = new Socket(hostname, port);<newline46mondego>            writer = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()));<newline46mondego>            writer.println(<doubleQuotes46>GET / HTTP/1.1<doubleQuotes46>);<newline46mondego>            writer.println(<doubleQuotes46>Host: <doubleQuotes46> + hostname);<newline46mondego>            writer.println(<doubleQuotes46>Accept: */*<doubleQuotes46>);<newline46mondego>            writer.println(<doubleQuotes46>User-Agent: Java<doubleQuotes46>); // Be honest.<newline46mondego>            writer.println(<doubleQuotes46><doubleQuotes46>); // Important, else the server will expect that there's more into the request.<newline46mondego>            writer.flush();<newline46mondego><newline46mondego>            reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));<newline46mondego>            for (String line; (line = reader.readLine()) != null;) {<newline46mondego>                if (line.isEmpty()) break; // Stop when headers are completed. We're not interested in all the HTML.<newline46mondego>                System.out.println(line);<newline46mondego>            }<newline46mondego>        } finally {<newline46mondego>            if (reader != null) try { reader.close(); } catch (IOException logOrIgnore) {} <newline46mondego>            if (writer != null) { writer.close(); }<newline46mondego>            if (socket != null) try { socket.close(); } catch (IOException logOrIgnore) {} <newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"3265splitHere46","2307407splitHere46","getHeaderFields()"
"3266splitHere46","2307407splitHere46","getHeaderField()"
"3267splitHere46","2307407splitHere46","List<String> cookies = connection.getHeaderFields().get(<doubleQuotes46>Set-Cookie<doubleQuotes46>);<newline46mondego>"
"3268splitHere46","2307748splitHere46","-Djavax.xml.stream.XMLEventFactory=com.ctc.wstx.stax.WstxEventFactory<newline46mondego>-Djavax.xml.stream.XMLInputFactory=com.ctc.wstx.stax.WstxInputFactory<newline46mondego>-Djavax.xml.stream.XMLOutputFactory=com.ctc.wstx.stax.WstxOutputFactory<newline46mondego>"
"3269splitHere46","2307748splitHere46","sun-web.xml"
"3270splitHere46","2307748splitHere46","delegate=<doubleQuotes46>false<doubleQuotes46>"
"3271splitHere46","2307748splitHere46","class-loader"
"3272splitHere46","2307748splitHere46","<sun-web-app><newline46mondego>  <class-loader delegate=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego></sun-web-app><newline46mondego>"
"3273splitHere46","2308042splitHere46","Integer.valueOf"
"3274splitHere46","2308042splitHere46","new Integer"
"3275splitHere46","2308042splitHere46","Integer.valueOf"
"3276splitHere46","2308042splitHere46","new Integer"
"3277splitHere46","2308042splitHere46","new Integer"
"3278splitHere46","2308042splitHere46","new Integer()"
"3279splitHere46","2308042splitHere46","Integer.valueOf"
"3280splitHere46","2308059splitHere46","n"
"3281splitHere46","2308066splitHere46","void f(Object o) {<newline46mondego>    Caster<?> c = new Caster(); <newline46mondego>    g(c.cast(o)); <newline46mondego>}<newline46mondego><newline46mondego>class Caster<T extends MySuperClass & MyInterface> {<newline46mondego>    public T cast(Object o) {<newline46mondego>        return (T) o;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3282splitHere46","2308184splitHere46","(!(cn:dn:=Users))<newline46mondego>"
"3283splitHere46","2308217splitHere46","label"
"3284splitHere46","2308217splitHere46","jscrlpBox"
"3285splitHere46","2308217splitHere46","Component.LEFT_ALIGNMENT"
"3286splitHere46","2308217splitHere46","JLabel label = new JLabel(<doubleQuotes46>Option<doubleQuotes46>);<newline46mondego>label.setAlignmentX(Component.LEFT_ALIGNMENT); // Added<newline46mondego><newline46mondego>panel.add(label);<newline46mondego><newline46mondego>JLabel a = new JLabel(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>JLabel b = new JLabel(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego>JLabel c = new JLabel(<doubleQuotes46>C<doubleQuotes46>);<newline46mondego>JLabel d = new JLabel(<doubleQuotes46>D<doubleQuotes46>);<newline46mondego>JLabel e = new JLabel(<doubleQuotes46>E<doubleQuotes46>);<newline46mondego><newline46mondego>Box box = Box.createVerticalBox();<newline46mondego>box.add(a);<newline46mondego>box.add(b);<newline46mondego>box.add(c);<newline46mondego>box.add(d);<newline46mondego>box.add(e);<newline46mondego><newline46mondego>JScrollPane jscrlpBox = new JScrollPane(box);<newline46mondego>jscrlpBox.setPreferredSize(new Dimension(140, 90));<newline46mondego>panel.add(jscrlpBox);<newline46mondego>jscrlpBox.setAlignmentX(Component.LEFT_ALIGNMENT); // Added<newline46mondego>"
"3287splitHere46","2308217splitHere46","label"
"3288splitHere46","2308388splitHere46","java.io.File"
"3289splitHere46","2308388splitHere46","java.io"
"3290splitHere46","2308388splitHere46","C:\Tomcat\bin"
"3291splitHere46","2308388splitHere46","C:\Tomcat\webapps\contextname"
"3292splitHere46","2308388splitHere46","C:\Eclipse\workspace\projectname"
"3293splitHere46","2308388splitHere46","System.out.println(new File(<doubleQuotes46>.<doubleQuotes46>).getAbsolutePath());<newline46mondego>"
"3294splitHere46","2308388splitHere46","File"
"3295splitHere46","2308388splitHere46","C:\full\path\to\file.ext"
"3296splitHere46","2308388splitHere46","src"
"3297splitHere46","2308388splitHere46","ClassLoader"
"3298splitHere46","2308388splitHere46","ClassLoader#getResource()"
"3299splitHere46","2308388splitHere46","ClassLoader#getResourceAsStream()"
"3300splitHere46","2308388splitHere46","ClassLoader"
"3301splitHere46","2308388splitHere46","Thread.currentThread().getContextClassLoader()"
"3302splitHere46","2308388splitHere46","ServletContext#getResource()"
"3303splitHere46","2308388splitHere46","ServletContext#getResourceAsStream()"
"3304splitHere46","2308388splitHere46","web"
"3305splitHere46","2308388splitHere46","/WEB-INF"
"3306splitHere46","2308388splitHere46","ServletContext"
"3307splitHere46","2308388splitHere46","getServletContext()"
"3308splitHere46","2308491splitHere46","-cp"
"3309splitHere46","2308491splitHere46","java -cp one:two:three"
"3310splitHere46","2308491splitHere46","java -cp one;two;three"
"3311splitHere46","2308810splitHere46","i = 0"
"3312splitHere46","2308810splitHere46","coordinateX = 25"
"3313splitHere46","2308810splitHere46","coordinateX"
"3314splitHere46","2308810splitHere46","i == 0"
"3315splitHere46","2308810splitHere46","i = 1"
"3316splitHere46","2308810splitHere46","coordinateX = 25"
"3317splitHere46","2308810splitHere46","coordinateX"
"3318splitHere46","2308810splitHere46","if i == 1)"
"3319splitHere46","2308810splitHere46","i = 2"
"3320splitHere46","2308810splitHere46","coordinateX"
"3321splitHere46","2308810splitHere46","if (i == 1)"
"3322splitHere46","2308810splitHere46","if (i == 0)"
"3323splitHere46","2308810splitHere46","if (i == 2)"
"3324splitHere46","2308810splitHere46","if (i == 1)"
"3325splitHere46","2308810splitHere46","for(...) { } declaration"
"3326splitHere46","2308810splitHere46","i < 3"
"3327splitHere46","2308810splitHere46","i++"
"3328splitHere46","2308869splitHere46","class ImmutableStack<T><newline46mondego>{<newline46mondego>    public readonly T Head;<newline46mondego>    public readonly ImmutableStack<T> Tail;<newline46mondego><newline46mondego>    public ImmutableStack(T head, ImmutableStack<T> tail)<newline46mondego>    {<newline46mondego>        this.Head = head;<newline46mondego>        this.Tail = tail;<newline46mondego>    }<newline46mondego><newline46mondego>    public static ImmutableStack<T> Cons(T head, ImmutableStack<T> tail)<newline46mondego>    {<newline46mondego>        return new ImmutableStack<T>(head, tail);<newline46mondego>    }<newline46mondego><newline46mondego>    public static ImmutableStack<T> Reverse(ImmutableStack<T> s)<newline46mondego>    {<newline46mondego>        ImmutableStack<T> res = null;<newline46mondego>        while (s != null)<newline46mondego>        {<newline46mondego>            res = Cons(s.Head, res);<newline46mondego>            s = s.Tail;<newline46mondego>        }<newline46mondego>        return res;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class Program<newline46mondego>{<newline46mondego>    static void AwesomeRecursion(int toDepth, int start, int max, ImmutableStack<int> indices)<newline46mondego>    {<newline46mondego>        if (toDepth < 0)<newline46mondego>        {<newline46mondego>            throw new ArgumentException(<doubleQuotes46>toDepth should be >= 0<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        else if (toDepth == 0)<newline46mondego>        {<newline46mondego>            Console.Write(<doubleQuotes46>indices: <doubleQuotes46>);<newline46mondego>            indices = ImmutableStack<int>.Reverse(indices);<newline46mondego>            while (indices != null)<newline46mondego>            {<newline46mondego>                Console.Write(<doubleQuotes46>{0}, <doubleQuotes46>, indices.Head);<newline46mondego>                indices = indices.Tail;<newline46mondego>            }<newline46mondego>            Console.WriteLine();<newline46mondego>        }<newline46mondego>        else<newline46mondego>        {<newline46mondego>            for (int i = start; i < max; i++)<newline46mondego>            {<newline46mondego>                AwesomeRecursion(toDepth - 1, i + 1, max, ImmutableStack<int>.Cons(i, indices));<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    static void Main(string[] args)<newline46mondego>    {<newline46mondego>        AwesomeRecursion(4, 1, 10, null);<newline46mondego>        Console.WriteLine(<doubleQuotes46>Done<doubleQuotes46>);<newline46mondego>        Console.ReadKey(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3329splitHere46","2309050splitHere46","GLabel classLabel = new GLabel (anArray[i]);<newline46mondego>"
"3330splitHere46","2309251splitHere46","DataSource"
"3331splitHere46","2309251splitHere46","PropertyPlaceholderConfigurer"
"3332splitHere46","2309365splitHere46","final LabelField label = new LabelField(url,LabelField.FOCUSABLE);<newline46mondego>        label.setFocusListener(new FocusChangeListener(){<newline46mondego>            public void focusChanged(Field field, int eventType) {<newline46mondego>                if(eventType == FOCUS_GAINED){<newline46mondego>                    BrowserSession bSession = Browser.getDefaultSession();<newline46mondego>                    bSession.displayPage(label.getText());<newline46mondego>                }<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        });<newline46mondego>        add(label);<newline46mondego>"
"3333splitHere46","2309554splitHere46","@Override<newline46mondego>protected void paintComponent(Graphics g) {<newline46mondego>Graphics2D g2 = (Graphics2D) g;<newline46mondego>// Creates a two-stops gradient<newline46mondego>GradientPaint p;<newline46mondego>p = new GradientPaint(0, 0, new Color(0xFFFFFF),<newline46mondego>0, getHeight(), new Color(0xC8D2DE));<newline46mondego>// Saves the state<newline46mondego>Paint oldPaint = g2.getPaint();<newline46mondego>// Paints the background<newline46mondego>g2.setPaint(p);<newline46mondego>g2.fillRect(0, 0, getWidth(), getHeight());<newline46mondego>// Restores the state<newline46mondego>g2.setPaint(oldPaint);<newline46mondego>// Paints borders, text...<newline46mondego>super.paintComponent(g);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"3334splitHere46","2309609splitHere46","Time"
"3335splitHere46","2309609splitHere46","Date"
"3336splitHere46","2309609splitHere46","SimpleDateFormat parser = new SimpleDateFormat(<doubleQuotes46>HH:mm<doubleQuotes46>);<newline46mondego>Date ten = parser.parse(<doubleQuotes46>10:00<doubleQuotes46>);<newline46mondego>Date eighteen = parser.parse(<doubleQuotes46>18:00<doubleQuotes46>);<newline46mondego><newline46mondego>try {<newline46mondego>    Date userDate = parser.parse(someOtherDate);<newline46mondego>    if (userDate.after(ten) && userDate.before(eighteen)) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>} catch (ParseException e) {<newline46mondego>    // Invalid date was entered<newline46mondego>}<newline46mondego>"
"3337splitHere46","2309609splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>(\d{2}):(\d{2})<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(userString);<newline46mondego>if (m.matches() ) {<newline46mondego>    String hourString = m.group(1);<newline46mondego>    String minuteString = m.group(2);<newline46mondego>    int hour = Integer.parseInt(hourString);<newline46mondego>    int minute = Integer.parseInt(minuteString);<newline46mondego><newline46mondego>    if (hour >= 10 && hour <= 18) {<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3338splitHere46","2309897splitHere46","class A{}<newline46mondego>class B extends A{}<newline46mondego>class Y{<newline46mondego>  static <T> List<T> x(T t)<newline46mondego>}<newline46mondego>"
"3339splitHere46","2309897splitHere46","List<B>"
"3340splitHere46","2309897splitHere46","List<B> bs = Y.x(new B());<newline46mondego>"
"3341splitHere46","2309897splitHere46","List<A>"
"3342splitHere46","2309897splitHere46","List<A> as1 = Y.<A> x(new B());<newline46mondego>List<A> as2 = Y.x((A) new B());<newline46mondego>"
"3343splitHere46","2309897splitHere46","List<B>"
"3344splitHere46","2309897splitHere46","List<A>"
"3345splitHere46","2309984splitHere46","NamedParameterJdbcTemplate jdbcTemplate = new NamedParameterJdbcTemplate(dataSource);<newline46mondego><newline46mondego> MapSqlParameterSource paramSource = new MapSqlParameterSource();<newline46mondego> paramSource.addValue(<doubleQuotes46>name<doubleQuotes46>, name);<newline46mondego> paramSource.addValue(<doubleQuotes46>city<doubleQuotes46>, city);<newline46mondego> jdbcTemplate.queryForRowSet(<doubleQuotes46>SELECT * FROM customers WHERE name = :name AND city = :city<doubleQuotes46>, paramSource);<newline46mondego>"
"3346splitHere46","2310023splitHere46","ImageIO.read(file)"
"3347splitHere46","2310023splitHere46","JPEGImageReader"
"3348splitHere46","2310053splitHere46","System.exit(0)"
"3349splitHere46","2310053splitHere46","try {<newline46mondego>    new URL(<doubleQuotes46>http://localhost:8080<doubleQuotes46>).openConnection().getContent();<newline46mondego>} catch (IOException ex) {<newline46mondego>    // do app finalizations<newline46mondego>    System.exit(0);<newline46mondego>}<newline46mondego>"
"3350splitHere46","2310059splitHere46",".class"
"3351splitHere46","2310059splitHere46","$"
"3352splitHere46","2310059splitHere46",".java"
"3353splitHere46","2310059splitHere46",".java"
"3354splitHere46","2310059splitHere46","javadoc"
"3355splitHere46","2310059splitHere46","javadoc"
"3356splitHere46","2310059splitHere46",".java"
"3357splitHere46","2310291splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><shape xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46> android:shape=<doubleQuotes46>rectangle<doubleQuotes46>> <newline46mondego>    <solid android:color=<doubleQuotes46>#ffffff<doubleQuotes46>/>    <newline46mondego><newline46mondego>    <stroke android:width=<doubleQuotes46>3dp<doubleQuotes46><newline46mondego>            android:color=<doubleQuotes46>#ff000000<doubleQuotes46>/><newline46mondego><newline46mondego>    <padding android:left=<doubleQuotes46>1dp<doubleQuotes46><newline46mondego>             android:top=<doubleQuotes46>1dp<doubleQuotes46><newline46mondego>             android:right=<doubleQuotes46>1dp<doubleQuotes46><newline46mondego>             android:bottom=<doubleQuotes46>1dp<doubleQuotes46>/> <newline46mondego><newline46mondego>    <corners android:radius=<doubleQuotes46>30dp<doubleQuotes46>/> <newline46mondego></shape><newline46mondego>"
"3358splitHere46","2310374splitHere46","setVisible(true)"
"3359splitHere46","2310374splitHere46","MainFrame mainFrame = new MainFrame(userInput.getText());<newline46mondego>this.dispose();<newline46mondego>mainFrame.setVisible(true);<newline46mondego>"
"3360splitHere46","2310473splitHere46","Stack"
"3361splitHere46","2310473splitHere46","popAll"
"3362splitHere46","2310473splitHere46","Stack<Number> numberStack = new Stack<Number>();<newline46mondego>Collection<Object> objects = ... ;<newline46mondego>numberStack.popAll(objects);<newline46mondego>"
"3363splitHere46","2310473splitHere46","popAll"
"3364splitHere46","2310473splitHere46","// Wildcard type for parameter that serves as an E consumer<newline46mondego>public void popAll(Collection<? super E> dst) {<newline46mondego>    while (!isEmpty())<newline46mondego>    dst.add(pop());<newline46mondego>}<newline46mondego>"
"3365splitHere46","2310473splitHere46","pushAll"
"3366splitHere46","2310473splitHere46","// Wildcard type for parameter that serves as an E producer<newline46mondego>public void pushAll(Iterable<? extends E> src) {<newline46mondego>    for (E e : src)<newline46mondego>    push(e);<newline46mondego>}<newline46mondego>"
"3367splitHere46","2310566splitHere46","web.xml"
"3368splitHere46","2310566splitHere46","url-pattern"
"3369splitHere46","2310663splitHere46","ExternalContext#isUserInRole(String)"
"3370splitHere46","2310665splitHere46","<dependency><newline46mondego>    <groupId>log4j</groupId><newline46mondego>    <artifactId>log4j</artifactId><newline46mondego>    <version>1.2.15</version><newline46mondego>    <scope>provided</scope><newline46mondego>    <exclusions><newline46mondego>        <exclusion><newline46mondego>          <groupId>com.sun.jdmk</groupId><newline46mondego>          <artifactId>jmxtools</artifactId><newline46mondego>        </exclusion><newline46mondego>        <exclusion><newline46mondego>          <groupId>com.sun.jmx</groupId><newline46mondego>          <artifactId>jmxri</artifactId><newline46mondego>        </exclusion><newline46mondego>    </exclusions><newline46mondego></dependency><newline46mondego>"
"3371splitHere46","2310840splitHere46","sed"
"3372splitHere46","2310850splitHere46","DemoClass.<Type1, Type2>create(_1, _2);<newline46mondego>"
"3373splitHere46","2311467splitHere46","request.getSession(false).invalidate();<newline46mondego>"
"3374splitHere46","2311467splitHere46","getSession(true)"
"3375splitHere46","2311467splitHere46","getSession()"
"3376splitHere46","2311500splitHere46","setResizeWeight"
"3377splitHere46","2311500splitHere46","(.5d);"
"3378splitHere46","2311546splitHere46","int"
"3379splitHere46","2311663splitHere46","persistence.xml"
"3380splitHere46","2311663splitHere46","EntityManagerFactory"
"3381splitHere46","2311663splitHere46","<bean id=<doubleQuotes46>authEntityManagerFactory<doubleQuotes46> class=<doubleQuotes46>org.springframework.orm.jpa.LocalEntityManagerFactoryBean<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>persistenceUnitName<doubleQuotes46> value=<doubleQuotes46>SpringSecurityManager<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"3382splitHere46","2311663splitHere46","TransactionManager"
"3383splitHere46","2311663splitHere46","<bean id=<doubleQuotes46>authTransactionManager<doubleQuotes46> class=<doubleQuotes46>org.springframework.orm.jpa.JpaTransactionManager<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>entityManagerFactory<doubleQuotes46> ref=<doubleQuotes46>authEntityManagerFactory<doubleQuotes46> /><newline46mondego></bean><newline46mondego>"
"3384splitHere46","2311663splitHere46","public class AbstractAuthDao<T> { <newline46mondego><newline46mondego>   @PersistenceContext (unitName = <doubleQuotes46>SpringSecurityManager<doubleQuotes46>)<newline46mondego>   protected EntityManager em;<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3385splitHere46","2311663splitHere46","@Transactional (value = <doubleQuotes46>authTransactionManager<doubleQuotes46>, readOnly = true)<newline46mondego>public class UserServiceImpl implements UserService {<newline46mondego><newline46mondego>   ...<newline46mondego>}<newline46mondego>"
"3386splitHere46","2311663splitHere46","OpenEntityManagerInViewFilter"
"3387splitHere46","2311663splitHere46","<init-param><newline46mondego>    <param-name>entityManagerFactoryBeanName</param-name><newline46mondego>    <param-value>authEntityManagerFactory</param-value><newline46mondego></init-param><newline46mondego>"
"3388splitHere46","2311795splitHere46","java.util.Calendar"
"3389splitHere46","2312009splitHere46","class Type<newline46mondego>{<newline46mondego>    private final String    m_name;<newline46mondego><newline46mondego>    Type(String name)<newline46mondego>    {<newline46mondego>        m_name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public String toString()<newline46mondego>    {<newline46mondego>        return <doubleQuotes46>Type <doubleQuotes46> + m_name;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>Type type1 = new Type(<doubleQuotes46>1<doubleQuotes46>);<newline46mondego>Type type2 = new Type(<doubleQuotes46>2<doubleQuotes46>);<newline46mondego>ComboViewer comboViewer = new ComboViewer(combo);<newline46mondego>comboViewer.setContentProvider(new ArrayContentProvider());<newline46mondego>comboViewer.setInput(new Type[] {type1, type2};<newline46mondego>comboViewer.setSelection(new StructuredSelection(type1));<newline46mondego>"
"3390splitHere46","2312141splitHere46","query.executeUpdate()"
"3391splitHere46","2312141splitHere46","session.remove(entity)"
"3392splitHere46","2312141splitHere46","<prop<newline46mondego> key=<doubleQuotes46>hibernate.query.factory_class<doubleQuotes46>>org.hibernate.hql.classic.ClassicQueryTranslatorFactory<newline46mondego></prop><newline46mondego>"
"3393splitHere46","2312513splitHere46","myList"
"3394splitHere46","2312513splitHere46","volatile"
"3395splitHere46","2312513splitHere46","computeList"
"3396splitHere46","2312513splitHere46","myList"
"3397splitHere46","2312513splitHere46","Collections.unmodifiableList(computeList())"
"3398splitHere46","2312796splitHere46","<c:set var=<doubleQuotes46>alphabet<doubleQuotes46> value=<doubleQuotes46>ABCDEFGHIJKLMNOPQRSTUVWXYZ<doubleQuotes46>/><newline46mondego>"
"3399splitHere46","2312796splitHere46","${fn:substring(alphabet, status.index, status.index + 1)}<newline46mondego>"
"3400splitHere46","2312796splitHere46","<c:forEach items=<doubleQuotes46>${items}<doubleQuotes46> varStatus=<doubleQuotes46>status<doubleQuotes46>><newline46mondego>    <c:set var=<doubleQuotes46>indexOfLetter<doubleQuotes46> value=<doubleQuotes46>${fn:indexOf('A', alphabet) + status.index}<doubleQuotes46>/><newline46mondego>    ${fn:substring(alphabet, indexOfLetter, indexOfLetter + status.index + 1}<newline46mondego></c:forEach><newline46mondego>"
"3401splitHere46","2312952splitHere46","HSSFPalette"
"3402splitHere46","2312952splitHere46","setColorAtIndex()"
"3403splitHere46","2313028splitHere46","Predicate<String> filter = new Predicate<String>() {<newline46mondego>        @Override<newline46mondego>        public boolean apply(String input) {<newline46mondego>            return input.startsWith(<doubleQuotes46>src<doubleQuotes46>) || input.startsWith(<doubleQuotes46>assoc<doubleQuotes46>) || input.startsWith(<doubleQuotes46>dest<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    Function<String, Integer> assignWeights = new Function<String, Integer>() {<newline46mondego>        @Override<newline46mondego>        public Integer apply(String from) {<newline46mondego>            if (from.startsWith(<doubleQuotes46>src<doubleQuotes46>)) {<newline46mondego>                return 0;<newline46mondego>            } else if (from.startsWith(<doubleQuotes46>assoc<doubleQuotes46>)) {<newline46mondego>                return 1;<newline46mondego>            } else if (from.startsWith(<doubleQuotes46>dest<doubleQuotes46>)) {<newline46mondego>                return 2;<newline46mondego>            } else {<newline46mondego>                /* Shouldn't be possible but have to do something */<newline46mondego>                throw new IllegalArgrumentException(from + <doubleQuotes46> is not a valid argument<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    };<newline46mondego><newline46mondego>    ImmutableList<String> sortedFiltered = ImmutableList.copyOf(<newline46mondego>            Ordering.natural().onResultOf(assignWeights).sortedCopy(<newline46mondego>                    Iterables.filter(testList, filter)<newline46mondego>            )<newline46mondego>    );<newline46mondego>"
"3404splitHere46","2313099splitHere46","String s = <doubleQuotes46>\<doubleQuotes46>Thanks,\<doubleQuotes46>, \<doubleQuotes46>in advance,\<doubleQuotes46>, \<doubleQuotes46>for(\<doubleQuotes46>the\<doubleQuotes46>, \<doubleQuotes46>help\<doubleQuotes46>)\<doubleQuotes46><doubleQuotes46>;<newline46mondego>String regex = <doubleQuotes46>\<doubleQuotes46>(\\([^)]*\\)|[^\<doubleQuotes46>])*\<doubleQuotes46><doubleQuotes46>;<newline46mondego>Pattern p = Pattern.compile(regex);<newline46mondego>Matcher m = p.matcher(s);<newline46mondego>while(m.find()) {<newline46mondego>    System.out.println(s.substring(m.start(),m.end()));<newline46mondego>}<newline46mondego>"
"3405splitHere46","2313099splitHere46","<doubleQuotes46>Thanks,<doubleQuotes46><newline46mondego><doubleQuotes46>in advance,<doubleQuotes46><newline46mondego><doubleQuotes46>for(<doubleQuotes46>the<doubleQuotes46>, <doubleQuotes46>help<doubleQuotes46>)<doubleQuotes46><newline46mondego>"
"3406splitHere46","2313099splitHere46","String regex = <doubleQuotes46>\<doubleQuotes46>(\\((\<doubleQuotes46>[^\<doubleQuotes46>]*\<doubleQuotes46>|[^)])*\\)|[^\<doubleQuotes46>])*\<doubleQuotes46><doubleQuotes46>;<newline46mondego>"
"3407splitHere46","2313099splitHere46","<doubleQuotes46>foo<doubleQuotes46>,<doubleQuotes46>bar<doubleQuotes46>,<doubleQuotes46>baz(<doubleQuotes46>:-)<doubleQuotes46>,<doubleQuotes46>:-o<doubleQuotes46>)<doubleQuotes46><newline46mondego>"
"3408splitHere46","2313099splitHere46","<doubleQuotes46>foo<doubleQuotes46><newline46mondego><doubleQuotes46>bar<doubleQuotes46><newline46mondego><doubleQuotes46>baz(<doubleQuotes46>:-)<doubleQuotes46>,<doubleQuotes46>:-o<doubleQuotes46>)<doubleQuotes46><newline46mondego>"
"3409splitHere46","2313235splitHere46","-Dcom.sun.xml.ws.assembler.client=true<newline46mondego>"
"3410splitHere46","2313262splitHere46","Connection"
"3411splitHere46","2313262splitHere46","Statement"
"3412splitHere46","2313262splitHere46","ResultSet"
"3413splitHere46","2313262splitHere46","try/finally"
"3414splitHere46","2313262splitHere46","public void create(Entity entity) throws SQLException {<newline46mondego>    Connection connection = null;<newline46mondego>    PreparedStatement statement = null;<newline46mondego><newline46mondego>    try { <newline46mondego>        connection = database.getConnection();<newline46mondego>        statement = connection.prepareStatement(SQL_CREATE);<newline46mondego>        statement.setSomeObject(1, entity.getSomeProperty());<newline46mondego>        // ...<newline46mondego>        statement.executeUpdate();<newline46mondego>    } finally {<newline46mondego>        if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>        if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3415splitHere46","2313262splitHere46","public void close() throws SQLException {<newline46mondego>    if (this.connection is still eligible for reuse) {<newline46mondego>        do not close this.connection, but just return it to pool for reuse;<newline46mondego>    } else {<newline46mondego>        actually invoke this.connection.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3416splitHere46","2313262splitHere46","public static void closeQuietly(Connection connection, Statement statement, ResultSet resultSet) {<newline46mondego>    if (resultSet != null) try { resultSet.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    if (statement != null) try { statement.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>    if (connection != null) try { connection.close(); } catch (SQLException logOrIgnore) {}<newline46mondego>}<newline46mondego>"
"3417splitHere46","2313262splitHere46","} finally {<newline46mondego>    closeQuietly(connection, statement, resultSet);<newline46mondego>}<newline46mondego>"
"3418splitHere46","2313297splitHere46","FileNotFoundException: ...Configuration.properties  (No such file or directory)<newline46mondego>--------------------------------------------------^^<newline46mondego>"
"3419splitHere46","2313297splitHere46","System.out.println(<doubleQuotes46>[<doubleQuotes46> + pathToConfiguration + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>"
"3420splitHere46","2313365splitHere46","server.xml"
"3421splitHere46","2313365splitHere46","tmp0\conf\server.xml"
"3422splitHere46","2313396splitHere46","public class SimpleTest {<newline46mondego><newline46mondego>    private Set<String> setA;<newline46mondego>    private Set<String> setB;<newline46mondego><newline46mondego>    @Before<newline46mondego>    public void setUp() {<newline46mondego>        setA = new HashSet<String>();<newline46mondego>        setA.add(<doubleQuotes46>Testing...<doubleQuotes46>);<newline46mondego>        setB = new HashSet<String>();<newline46mondego>        setB.add(<doubleQuotes46>Testing...<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void testEqualSets() {<newline46mondego>        assertEquals( setA, setB );<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3423splitHere46","2313875splitHere46","java -cp <path to classes> classtorun<newline46mondego>"
"3424splitHere46","2313875splitHere46","java -cp <path to classes>;<path to libs> mycompany.Test<newline46mondego>"
"3425splitHere46","2313963splitHere46","Protocol easyHttps = new Protocol(<doubleQuotes46>https<doubleQuotes46>, new EasySSLProtocolSocketFactory(), 443);<newline46mondego>Protocol.registerProtocol(<doubleQuotes46>https<doubleQuotes46>, easyHttps);<newline46mondego>"
"3426splitHere46","2314288splitHere46","Thread.setDefaultUncaughtExceptionHandler()"
"3427splitHere46","2314477splitHere46","class OurService {<newline46mondego>    def getAResource( String argValue ) {<newline46mondego>        path = { <doubleQuotes46>fixed<doubleQuotes46>, argValue };<newline46mondego>        URI uri= build_path( path );<newline46mondego>        return connection.get( uri )<newline46mondego>"
"3428splitHere46","2314477splitHere46","class Some_REST_Stub( object ):<newline46mondego>    def get_some_resource( self, arg ): # This name is from the WSDL<newline46mondego>        uri = <doubleQuotes46>http://host:port/path/to/resource/%s/<doubleQuotes46> % arg # This path is from the WSDL<newline46mondego>        data= urllib2.open( uri )<newline46mondego>        return json.load( data )<newline46mondego>"
"3429splitHere46","2314552splitHere46","new JDialog(null, <doubleQuotes46>title<doubleQuotes46>);"
"3430splitHere46","2314575splitHere46","invokeAll"
"3431splitHere46","2314575splitHere46","private static final ExecutorService workers = Executors.newCachedThreadPool();<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>Collection<Callable<User>> tasks = new ArrayList<Callable<User>>();<newline46mondego>for (final String id : ids) {<newline46mondego>  tasks.add(new Callable<User>()<newline46mondego>  {<newline46mondego><newline46mondego>    public User call()<newline46mondego>      throws Exception<newline46mondego>    {<newline46mondego>      return svc.getUser(id);<newline46mondego>    }<newline46mondego><newline46mondego>  });<newline46mondego>}<newline46mondego>/* invokeAll blocks until all service requests complete, <newline46mondego> * or a max of 10 seconds. */<newline46mondego>List<Future<User>> results = workers.invokeAll(tasks, 10, TimeUnit.SECONDS);<newline46mondego>for (Future<User> f : results) {<newline46mondego>  User user = f.get();<newline46mondego>  /* Add user to batch update. */<newline46mondego>  ...<newline46mondego>}<newline46mondego>/* Commit batch. */<newline46mondego>...<newline46mondego>"
"3432splitHere46","2314586splitHere46","matches"
"3433splitHere46","2314586splitHere46","line.matches(<doubleQuotes46>==[^=].*<doubleQuotes46>)<newline46mondego>"
"3434splitHere46","2314799splitHere46","String1.contains(String2);"
"3435splitHere46","2315201splitHere46","matches"
"3436splitHere46","2315201splitHere46","myString.matches(<doubleQuotes46>^\\d{4}(-\\d{4}){3}$<doubleQuotes46>)<newline46mondego>"
"3437splitHere46","2315467splitHere46","class.getMethod(<doubleQuotes46>myMethod<doubleQuotes46>).getDeclaringClass();<newline46mondego>"
"3438splitHere46","2315467splitHere46","public class ExpensiveStrategy {<newline46mondego>  public void expensiveMethod() {<newline46mondego>    // ...<newline46mondego>    if (employOptimization()) {<newline46mondego>      // take a shortcut<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  protected boolean employOptimization() {<newline46mondego>    return false;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class TargetedStrategy extends ExpensiveStrategy {<newline46mondego>  @Override<newline46mondego>  protected boolean employOptimization() {<newline46mondego>    return true; // Now we can shortcut ExpensiveStrategy.<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3439splitHere46","2315518splitHere46","equals()"
"3440splitHere46","2315518splitHere46","return var1.equals(var2);<newline46mondego>"
"3441splitHere46","2315576splitHere46","mainWindow.addComponent(new Label(new Property() {<newline46mondego>        public Object getValue() {<newline46mondego>            return <doubleQuotes46>Wellcome to Vaadin!<doubleQuotes46>;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setValue(Object newValue) throws ReadOnlyException, ConversionException {<newline46mondego>            throw new ReadOnlyException();<newline46mondego>        }<newline46mondego><newline46mondego>        public Class<?> getType() {<newline46mondego>            return String.class;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean isReadOnly() {<newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        public void setReadOnly(boolean newStatus) {<newline46mondego>            throw new UnsupportedOperationException();<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public String toString() {<newline46mondego>            return (String) getValue();<newline46mondego>        }<newline46mondego>    }));<newline46mondego>"
"3442splitHere46","2315604splitHere46","ResultSet"
"3443splitHere46","2315604splitHere46","Statement"
"3444splitHere46","2315604splitHere46","Connection"
"3445splitHere46","2315604splitHere46","ResultSet.TYPE_SCROLL_SENSITIVE"
"3446splitHere46","2315612splitHere46","@XmlRootElement<newline46mondego>public class Account {<newline46mondego>    @XmlAttribute<newline46mondego>    public Long id;<newline46mondego>    public String name;<newline46mondego><newline46mondego>    @XmlElementWrapper(name = <doubleQuotes46>friends<doubleQuotes46>)<newline46mondego>    @XmlElement(name = <doubleQuotes46>friend<doubleQuotes46>)<newline46mondego>    @XmlJavaTypeAdapter( value = AccountAdapter.class )<newline46mondego>    public List<Account> friends;<newline46mondego>}<newline46mondego>"
"3447splitHere46","2315612splitHere46","public class AccountAdapter extends XmlAdapter<AccountRef, Account><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public AccountRef marshal(Account v) throws Exception <newline46mondego>    {   <newline46mondego>        AccountRef ref = new AccountRef();<newline46mondego>        ref.id = v.id;<newline46mondego>        return ref;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Account unmarshal(AccountRef v) throws Exception <newline46mondego>    {<newline46mondego>        // Implement if you need to deserialize<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3448splitHere46","2315612splitHere46","@XmlRootElement<newline46mondego>public class AccountRef <newline46mondego>{ <newline46mondego>    @XmlAttribute<newline46mondego>    public Long id;<newline46mondego>}<newline46mondego>"
"3449splitHere46","2315639splitHere46","MyBeanList"
"3450splitHere46","2315707splitHere46","PropertyDescriptor[] descriptors = PropertyUtils.getPropertyDescriptors(leftBean);<newline46mondego>if (descriptors != null) {<newline46mondego>  for (PropertyDescriptor descriptor : descriptors) {<newline46mondego>    try {<newline46mondego>      String propertyName = descriptor.getName();<newline46mondego>      Object val = PropertyUtils.getProperty(leftBean, name);<newline46mondego>      if (val != null) {<newline46mondego>        PropertyUtils.setProperty(rightBean, name, val);<newline46mondego>      }<newline46mondego>    } catch (Exception ignore) {<newline46mondego>      // not interested in what we can't read or write<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3451splitHere46","2316009splitHere46","<servlet path=<doubleQuotes46>/MyService<doubleQuotes46> class=<doubleQuotes46>com.catfish.server.MyServiceImpl<doubleQuotes46>/>"
"3452splitHere46","2316009splitHere46","<servlet><newline46mondego>  <servlet-name>MyService</servlet-name><newline46mondego>  <servlet-class>com.catfish.server.MyServiceImpl</servlet-class><newline46mondego></servlet><newline46mondego>"
"3453splitHere46","2316009splitHere46","<servlet-mapping><newline46mondego>  <servlet-name>MyService</servlet-name><newline46mondego>  <url-pattern>/module-path/MyService</url-pattern><newline46mondego></servlet-mapping><newline46mondego>"
"3454splitHere46","2316140splitHere46","Math.min()"
"3455splitHere46","2316140splitHere46","Math.max()"
"3456splitHere46","2316140splitHere46","if"
"3457splitHere46","2316140splitHere46","minValue = Math.min(minValue, candidateValue);<newline46mondego>maxValue = Math.max(maxValue, candidatevalue);<newline46mondego>"
"3458splitHere46","2316229splitHere46","if(obj instanceof Person)<newline46mondego>{<newline46mondego>   Person otherPerson = (Person) obj;<newline46mondego>   //Rest of the code to check equality<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>//return false maybe<newline46mondego>}<newline46mondego>"
"3459splitHere46","2316391splitHere46","Scanner"
"3460splitHere46","2316391splitHere46","next()"
"3461splitHere46","2316391splitHere46","nextInt()"
"3462splitHere46","2316391splitHere46","nextBoolean()"
"3463splitHere46","2316391splitHere46","nextLine()"
"3464splitHere46","2316391splitHere46","Scanner in = new Scanner(new File(filename));<newline46mondego>    in.useDelimiter(<doubleQuotes46>\\s+|,<doubleQuotes46>);<newline46mondego><newline46mondego>    int rows = in.nextInt();<newline46mondego>    int cols = in.nextInt();<newline46mondego>    // construct the array<newline46mondego><newline46mondego>    while (in.hasNext()) {<newline46mondego>        String type = in.next();<newline46mondego>        int r = in.nextInt();<newline46mondego>        int c = in.nextInt();<newline46mondego>        // read more depending on type<newline46mondego>    }<newline46mondego>"
"3465splitHere46","2316411splitHere46","Hashtable"
"3466splitHere46","2316411splitHere46","Map"
"3467splitHere46","2316411splitHere46","HashMap"
"3468splitHere46","2316411splitHere46","public static void main (String[] argv) {<newline46mondego>  Map<String, String> h = new HashMap<String, String>();<newline46mondego><newline46mondego>  // Insert a string and a key.<newline46mondego>  h.put(<doubleQuotes46>Ali<doubleQuotes46>, <doubleQuotes46>Anorexic Ali<doubleQuotes46>);<newline46mondego>  h.put(<doubleQuotes46>Bill<doubleQuotes46>, <doubleQuotes46>Bulimic Bill<doubleQuotes46>);<newline46mondego>  h.put(<doubleQuotes46>Chen<doubleQuotes46>, <doubleQuotes46>Cadaverous Chen<doubleQuotes46>);<newline46mondego>  h.put(<doubleQuotes46>Dave<doubleQuotes46>, <doubleQuotes46>Dyspeptic Dave<doubleQuotes46>);<newline46mondego><newline46mondego>  String d = h.get(<doubleQuotes46>Dave<doubleQuotes46>);<newline46mondego>  System.out.println (d);  // Prints <doubleQuotes46>Dyspeptic Dave<doubleQuotes46><newline46mondego>}<newline46mondego>"
"3469splitHere46","2316411splitHere46","Map<String, String> h = new Hashtable<String, String>();<newline46mondego>"
"3470splitHere46","2316658splitHere46","List<Object[]> rows;<newline46mondego>"
"3471splitHere46","2316658splitHere46","List"
"3472splitHere46","2316658splitHere46","Collection"
"3473splitHere46","2316674splitHere46","private static void swap(double[] a, int i, int j) {<newline46mondego>    double t = a[i];<newline46mondego>    a[i] = a[j];<newline46mondego>    a[j] = t;<newline46mondego>}<newline46mondego><newline46mondego>private static int partition(double [] a, int left,int right,int pivotIndex)<newline46mondego>{<newline46mondego>    swap(a, pivotIndex, right);<newline46mondego>    int pos = left;//represents boundary between small and large elements<newline46mondego>    for(int i = left; i < right; i++)<newline46mondego>    {<newline46mondego>        if (a[i] < a[right])<newline46mondego>        {<newline46mondego>            swap(a, i, pos);<newline46mondego>            pos++;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    swap(a, right, pos);<newline46mondego>    return pos;<newline46mondego>}<newline46mondego>"
"3474splitHere46","2316674splitHere46","swap"
"3475splitHere46","2316710splitHere46","Lifecycle"
"3476splitHere46","2316710splitHere46","start()"
"3477splitHere46","2316710splitHere46","stop()"
"3478splitHere46","2316991splitHere46","textbox= new EditField(<doubleQuotes46> <doubleQuotes46>,<doubleQuotes46><doubleQuotes46>,500,EditField.NO_NEWLINE | Field.FOCUSABLE) <newline46mondego>         {<newline46mondego>             protected void paint(Graphics g)<newline46mondego>                {<newline46mondego>                    g.setColor(Color.MAROON);<newline46mondego>                    super.paint(g);<newline46mondego>                }<newline46mondego>            protected boolean keyChar(char key, int status, int time) <newline46mondego>             {<newline46mondego>                return super.keyChar(key, status, time);<newline46mondego>             }<newline46mondego>         };<newline46mondego><newline46mondego><newline46mondego>         manager = new VerticalFieldManager(HORIZONTAL_SCROLL )<newline46mondego>         {<newline46mondego>             protected void paint(Graphics g) <newline46mondego>                {<newline46mondego>                 int x = this.getHorizontalScroll();<newline46mondego>                 if(textbox.getText().equals(<doubleQuotes46><doubleQuotes46>))<newline46mondego>                 {<newline46mondego>                     g.drawBitmap( x, 0, textbox_img.getWidth(), textbox_img.getHeight(), textbox_img, 0, 0 );<newline46mondego>                 }<newline46mondego><newline46mondego>                    super.paint(g);<newline46mondego>                }<newline46mondego>}<newline46mondego>manager.add(textbox);<newline46mondego>"
"3479splitHere46","2316994splitHere46","@Entity"
"3480splitHere46","2316994splitHere46","@Transient"
"3481splitHere46","2316994splitHere46","@Transient"
"3482splitHere46","2317090splitHere46","dependency:purge-local-repository"
"3483splitHere46","2317090splitHere46","mirrorOf"
"3484splitHere46","2317090splitHere46","settings.xml"
"3485splitHere46","2317090splitHere46","<settings><newline46mondego>  ...<newline46mondego>  <mirrors><newline46mondego>    <mirror><newline46mondego>      <id>corporate-repository</id><newline46mondego>      <mirrorOf>*</mirrorOf><newline46mondego>      <name>Maven Repository Manager running on repo.mycompany.com</name><newline46mondego>      <url>http://repo.mycompany.com/proxy</url><newline46mondego>    </mirror><newline46mondego>  </mirrors><newline46mondego>  ...<newline46mondego></settings><newline46mondego>"
"3486splitHere46","2317162splitHere46","public interface IPaymentType <newline46mondego>{<newline46mondego>  bool Pay(double amount);<newline46mondego>}<newline46mondego><newline46mondego>public class CreditCardPType : IPaymentType<newline46mondego>{<newline46mondego>  double limit;<newline46mondego>  // implement Pay()<newline46mondego>}    <newline46mondego>public class Cheque: IPaymentType<newline46mondego>{<newline46mondego>  int accountNumber;<newline46mondego>  // implement Pay()<newline46mondego>} <newline46mondego><newline46mondego>public class Customer<newline46mondego>{<newline46mondego>    public IPaymentType paymentType { get; set; }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>Customer customer = new Customer();<newline46mondego>customer.paymentType = new CreditCardPType();<newline46mondego>"
"3487splitHere46","2317283splitHere46","BitmapField  bitmapField = new BitmapField(bitmap,Field.FOCUSABLE){<newline46mondego>            protected void layout(int width, int height) {<newline46mondego>                setExtent(bitmap.getWidth()+10, bitmap.getHeight()+10);<newline46mondego>            }<newline46mondego><newline46mondego>        };<newline46mondego>"
"3488splitHere46","2317351splitHere46","pack()"
"3489splitHere46","2317351splitHere46","JFrame"
"3490splitHere46","2317351splitHere46","grabFocus()"
"3491splitHere46","2317351splitHere46","setVisible()"
"3492splitHere46","2317550splitHere46","IOException"
"3493splitHere46","2317550splitHere46","methodThatMayThrowCustomException"
"3494splitHere46","2317550splitHere46","public void whatever {<newline46mondego>   try {<newline46mondego>     methodThatMayThrowIOException();<newline46mondego>     // do more stuff here that won't throw exceptions<newline46mondego>     methodThatMayThrowCustomException();<newline46mondego>   } catch(IOException io) {<newline46mondego>     // do something with io exception here<newline46mondego>   } catch(CustomException ce) {<newline46mondego>     // do something with custom exception here<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"3495splitHere46","2317764splitHere46","sleep"
"3496splitHere46","2317764splitHere46","InterruptedException"
"3497splitHere46","2317764splitHere46","private class CalculatePI(Byte[] resume) implements Runnable{<newline46mondego>    public void Run(){<newline46mondego>       while(!Thread.interrupted()) { //###<newline46mondego>          resume=resumeCalculating(resume);<newline46mondego>       }<newline46mondego>    }<newline46mondego>}<newline46mondego>Thread calculator= new Thread(new CalculatePI(Byte[] resume)); <newline46mondego>calculator.run(); //###<newline46mondego>//...<newline46mondego>//And now I want to kill calculator<newline46mondego>calculator.interrupt(); //### sends the signal<newline46mondego>//...<newline46mondego>calculator.join(); //### actually waits for it to finish<newline46mondego>"
"3498splitHere46","2317776splitHere46","from Cat cat where cat.class = DomesticCat<newline46mondego>"
"3499splitHere46","2317857splitHere46","renderer"
"3500splitHere46","2317857splitHere46","BorderLayout.CENTER"
"3501splitHere46","2317895splitHere46","Filter"
"3502splitHere46","2317895splitHere46","HttpServletRequest"
"3503splitHere46","2317895splitHere46","ServletRequest"
"3504splitHere46","2317895splitHere46","HttpServletRequest"
"3505splitHere46","2317895splitHere46","getQueryString()"
"3506splitHere46","2317895splitHere46","getRequestURI()"
"3507splitHere46","2317895splitHere46","public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)<newline46mondego>    throws IOException, ServletException<newline46mondego>{<newline46mondego>    HttpServletRequest httpreq = (HttpServletRequest) request;<newline46mondego>    String query = httpreq.getQueryString();<newline46mondego>    if (query != null) {<newline46mondego>        // Unfriendly URL invoked. Convert params to pathinfo and redirect.<newline46mondego>        StringBuffer newURL = httpreq.getRequestURL();<newline46mondego>        for (String param : query.split(<doubleQuotes46>&<doubleQuotes46>)) {<newline46mondego>            newURL.append('/').append(param.substring(param.indexOf('=') + 1));<newline46mondego>        }<newline46mondego>        ((HttpServletResponse) response).sendRedirect(newURL.toString());<newline46mondego>    } else {<newline46mondego>        // Friendly URL invoked. Convert pathinfo to params and forward.<newline46mondego>        String[] parts = httpreq.getRequestURI().replace(httpreq.getContextPath(), <doubleQuotes46><doubleQuotes46>).split(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>        String newURL = String.format(<doubleQuotes46>%s?task=%s&id=%s<doubleQuotes46>, parts[1], parts[2], parts[3]);<newline46mondego>        httpreq.getRequestDispatcher(newURL).forward(request, response);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3508splitHere46","2317895splitHere46","UrlRewriteFilter"
"3509splitHere46","2317925splitHere46","java.lang.NoClassDefFoundError: Could not initialize class<newline46mondego>   org.apache.myfaces.shared_tomahawk.config.MyfacesConfig<newline46mondego>"
"3510splitHere46","2317925splitHere46","/WEB-INF/lib"
"3511splitHere46","2318006splitHere46","String secretId = selenium.getValue(<doubleQuotes46>//input[@name='secretId']<doubleQuotes46>);"
"3512splitHere46","2318064splitHere46","Runtime.trace*()"
"3513splitHere46","2318755splitHere46","DateFormat format = new SimpleDateFormat(<doubleQuotes46>MMddyyHHmmss<doubleQuotes46>);<newline46mondego>Date date = format.parse(<doubleQuotes46>022310141505<doubleQuotes46>);<newline46mondego>"
"3514splitHere46","2318755splitHere46","java.text.SimpleDateFormat"
"3515splitHere46","2318755splitHere46","synchronized"
"3516splitHere46","2318759splitHere46","String line;<newline46mondego>try {<newline46mondego>    Process proc = Runtime.getRuntime().exec(<doubleQuotes46>wmic.exe<doubleQuotes46>);<newline46mondego>    BufferedReader input = new BufferedReader(new InputStreamReader(proc.getInputStream()));<newline46mondego>    OutputStreamWriter oStream = new OutputStreamWriter(proc.getOutputStream());<newline46mondego>    oStream .write(<doubleQuotes46>process where name='explorer.exe'<doubleQuotes46>);<newline46mondego>    oStream .flush();<newline46mondego>    oStream .close();<newline46mondego>    while ((line = input.readLine()) != null) {<newline46mondego>        System.out.println(line);<newline46mondego>    }<newline46mondego>    input.close();<newline46mondego>} catch (IOException ioe) {<newline46mondego>    ioe.printStackTrace();<newline46mondego>}<newline46mondego>"
"3517splitHere46","2318763splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego>"
"3518splitHere46","2318763splitHere46","myString.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>)<newline46mondego>"
"3519splitHere46","2318763splitHere46","String withHeader  = <doubleQuotes46><?xml version=\<doubleQuotes46>1.0\<doubleQuotes46> encoding=\<doubleQuotes46>UTF-8\<doubleQuotes46>?><doubleQuotes46> + myString;<newline46mondego>byte[] bytes = withHeader.getBytes(<doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>VTDGen vg = new VTDGen();<newline46mondego>vg.setDoc(bytes);<newline46mondego>"
"3520splitHere46","2318804splitHere46","@Id"
"3521splitHere46","2318876splitHere46","Arrays.asList()"
"3522splitHere46","2319126splitHere46","LinkedHashSet"
"3523splitHere46","2319126splitHere46","Set"
"3524splitHere46","2319126splitHere46","Iterator<?> i = queue.iterator();<newline46mondego>...<newline46mondego>Object next = i.next();<newline46mondego>i.remove();<newline46mondego>"
"3525splitHere46","2319218splitHere46","fork=<doubleQuotes46>true<doubleQuotes46>"
"3526splitHere46","2319218splitHere46","javac"
"3527splitHere46","2319251splitHere46","File path = ... // base path of the images<newline46mondego><newline46mondego>// load source images<newline46mondego>BufferedImage image = ImageIO.read(new File(path, <doubleQuotes46>image.png<doubleQuotes46>));<newline46mondego>BufferedImage overlay = ImageIO.read(new File(path, <doubleQuotes46>overlay.png<doubleQuotes46>));<newline46mondego><newline46mondego>// create the new image, canvas size is the max. of both image sizes<newline46mondego>int w = Math.max(image.getWidth(), overlay.getWidth());<newline46mondego>int h = Math.max(image.getHeight(), overlay.getHeight());<newline46mondego>BufferedImage combined = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);<newline46mondego><newline46mondego>// paint both images, preserving the alpha channels<newline46mondego>Graphics g = combined.getGraphics();<newline46mondego>g.drawImage(image, 0, 0, null);<newline46mondego>g.drawImage(overlay, 0, 0, null);<newline46mondego><newline46mondego>// Save as new image<newline46mondego>ImageIO.write(combined, <doubleQuotes46>PNG<doubleQuotes46>, new File(path, <doubleQuotes46>combined.png<doubleQuotes46>));<newline46mondego>"
"3528splitHere46","2319339splitHere46","AdGroupServiceInterface"
"3529splitHere46","2319339splitHere46","user.<AdGroupServiceInterface>getService(svc);<newline46mondego>"
"3530splitHere46","2319339splitHere46","getService"
"3531splitHere46","2319339splitHere46","java.rmi.Remote"
"3532splitHere46","2319339splitHere46","T"
"3533splitHere46","2319339splitHere46","AdGroupServiceInterface"
"3534splitHere46","2319339splitHere46","ClassCastException"
"3535splitHere46","2319339splitHere46","AdGroupServiceInterface"
"3536splitHere46","2319493splitHere46","InputStream"
"3537splitHere46","2319493splitHere46","0"
"3538splitHere46","2319493splitHere46","read(byte[])"
"3539splitHere46","2319493splitHere46","byte[]"
"3540splitHere46","2319493splitHere46","byte[] buf = new byte[0];<newline46mondego> int read = in.read(buf); // read will contain 0<newline46mondego>"
"3541splitHere46","2319493splitHere46","available()"
"3542splitHere46","2319493splitHere46","0"
"3543splitHere46","2319493splitHere46","available()"
"3544splitHere46","2319536splitHere46","BusinessLogic"
"3545splitHere46","2319555splitHere46","List<String> list = new ArrayList<String>(listOfTopicAuthors);<newline46mondego>"
"3546splitHere46","2319695splitHere46","request.getParameterValues(name)[0] = <doubleQuotes46>newValue<doubleQuotes46>"
"3547splitHere46","2319866splitHere46","GLine"
"3548splitHere46","2319866splitHere46","GLine"
"3549splitHere46","2319866splitHere46","private void drawGrid(){<newline46mondego><newline46mondego>   GLine[] glines = new GLine[3];<newline46mondego><newline46mondego>    for(int i = 0; i<3; i++){<newline46mondego>        GLine line = new GLine(0,0,21*i,211*i);<newline46mondego>        glines [i] = line;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3550splitHere46","2319866splitHere46","glines[0]"
"3551splitHere46","2319866splitHere46","GLine"
"3552splitHere46","2319866splitHere46","glines[1]"
"3553splitHere46","2320173splitHere46","XMLAdapter"
"3554splitHere46","2320173splitHere46","Item"
"3555splitHere46","2320173splitHere46","SubCategory"
"3556splitHere46","2320173splitHere46","public class ItemAdapter extends XmlAdapter<ItemProxy, Item><newline46mondego>{<newline46mondego>    @Override<newline46mondego>    public ItemProxy marshal( Item v ) throws Exception<newline46mondego>    {<newline46mondego>        ItemProxy proxy = new ItemProxy();<newline46mondego><newline46mondego>        proxy.setCategory( v.getCategory().getCode() );<newline46mondego>        proxy.setSubcategory( v.getSubCategory().getCode() );<newline46mondego>        proxy.setName( v.getName() );<newline46mondego><newline46mondego>        return proxy;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public Item unmarshal( ItemProxy v ) throws Exception<newline46mondego>    {<newline46mondego>        Item item = new Item();<newline46mondego><newline46mondego>        Category category = new Category( v.getCategory() );<newline46mondego>        SubCategory subCategory = new SubCategory( v.getSubcategory(), category );<newline46mondego><newline46mondego>        item.setName( v.getName() );<newline46mondego>        item.setCategory( category );<newline46mondego>        item.setSubCategory( subCategory );<newline46mondego><newline46mondego>        return item;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3557splitHere46","2320173splitHere46","@XmlRootElement( name = <doubleQuotes46>item<doubleQuotes46> )<newline46mondego>public class ItemProxy<newline46mondego>{<newline46mondego>    private String name;<newline46mondego>    private int category;<newline46mondego>    private int subcategory;<newline46mondego><newline46mondego>    @XmlElement<newline46mondego>    public String getName()<newline46mondego>    {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement<newline46mondego>    public int getCategory()<newline46mondego>    {<newline46mondego>        return category;<newline46mondego>    }<newline46mondego><newline46mondego>    @XmlElement<newline46mondego>    public int getSubcategory()<newline46mondego>    {<newline46mondego>        return subcategory;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName( String name )<newline46mondego>    {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setCategory( int category )<newline46mondego>    {<newline46mondego>        this.category = category;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSubcategory( int subcategory )<newline46mondego>    {<newline46mondego>        this.subcategory = subcategory;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3558splitHere46","2320537splitHere46","Object"
"3559splitHere46","2320537splitHere46","Object[]"
"3560splitHere46","2320537splitHere46","Map<String, Object>"
"3561splitHere46","2320537splitHere46","public <T> T executeQuery(Class<T> expectedResultClass, <newline46mondego>      String someArg, Object.. otherArgs) {..}<newline46mondego>"
"3562splitHere46","2320537splitHere46","expectedResultClass"
"3563splitHere46","2320537splitHere46","JdbcTemplate"
"3564splitHere46","2320623splitHere46","Toolkit"
"3565splitHere46","2320629splitHere46","getSnapshot()"
"3566splitHere46","2320766splitHere46","ArrayList<String>()"
"3567splitHere46","2320766splitHere46","ArrayList()"
"3568splitHere46","2320766splitHere46","ArrayList<String>"
"3569splitHere46","2320766splitHere46","String"
"3570splitHere46","2320766splitHere46","List"
"3571splitHere46","2320774splitHere46","addKeyUpHandler"
"3572splitHere46","2320774splitHere46","final {type} {new-varname} = {old-varname};"
"3573splitHere46","2320774splitHere46","{new-varname}"
"3574splitHere46","2320904splitHere46","JTable"
"3575splitHere46","2320904splitHere46","JScrollPane"
"3576splitHere46","2320904splitHere46","add(new JScrollPane(scrTbl));<newline46mondego>"
"3577splitHere46","2321239splitHere46","ServletContextListener#contextInitialized()"
"3578splitHere46","2321239splitHere46","ServletContextEvent"
"3579splitHere46","2321239splitHere46","getServletContext()"
"3580splitHere46","2321239splitHere46","public void contextInitialized(ServletContextEvent event) {<newline46mondego>    InputStream input = event.getServletContext().getResourceAsStream(<doubleQuotes46>/WEB-INF/file.properties<doubleQuotes46>));<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"3581splitHere46","2321239splitHere46","HttpServlet#init()"
"3582splitHere46","2321239splitHere46","protected void init() throws ServletException {<newline46mondego>    InputStream input = getServletContext().getResourceAsStream(<doubleQuotes46>/WEB-INF/file.properties<doubleQuotes46>));<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"3583splitHere46","2321269splitHere46","process = <doubleQuotes46>gdb -q 2&>1<doubleQuotes46>.execute()<newline46mondego>"
"3584splitHere46","2321506splitHere46","java.sql.Timestamp"
"3585splitHere46","2321506splitHere46","java.util.Date"
"3586splitHere46","2321506splitHere46","if(date1.getTime() > date2.getTime()) {<newline46mondego>  //...<newline46mondego>}<newline46mondego>"
"3587splitHere46","2321555splitHere46","init"
"3588splitHere46","2321692splitHere46","@Bean<newline46mondego>public ApplicationListener<AbstractAuthenticationEvent> authenticationListener() {<newline46mondego>    return new MyAuthenticationListener();<newline46mondego>}<newline46mondego>"
"3589splitHere46","2321777splitHere46","public enum Color {<newline46mondego>    RED(<doubleQuotes46>R<doubleQuotes46>),<newline46mondego>    GREEN(<doubleQuotes46>G<doubleQuotes46>),<newline46mondego>    BLUE(<doubleQuotes46>B<doubleQuotes46>);<newline46mondego><newline46mondego>    private final String str;<newline46mondego>    private Color(String s){<newline46mondego>        str = s;<newline46mondego>    }<newline46mondego>    public String toString() {<newline46mondego>        return str;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3590splitHere46","2321901splitHere46","Linux: /home/<user>/.m2<newline46mondego>Windows: C:\Documents and Settings\<user>\.m2<newline46mondego>"
"3591splitHere46","2321927splitHere46","// load the image once<newline46mondego> BufferedImage bi = ImageIO.read(new URL(imageLocAsString));<newline46mondego> // now in paint(Graphics g) do<newline46mondego> g.drawImage(bi, 0, 0, null);<newline46mondego>"
"3592splitHere46","2321952splitHere46","pom"
"3593splitHere46","2322005splitHere46","callMethod(Integer i)"
"3594splitHere46","2322005splitHere46","callMethod(Integer... i)"
"3595splitHere46","2322005splitHere46","callMethod()"
"3596splitHere46","2322005splitHere46","Integer... i"
"3597splitHere46","2322005splitHere46","Wrapper"
"3598splitHere46","2322332splitHere46","/WEB-INF/lib"
"3599splitHere46","2322332splitHere46","jsp-api-*.jar"
"3600splitHere46","2322522splitHere46","g.drawImage(img, 0+I.left, 0+I.top, myWidth, myHeight, this);<newline46mondego>"
"3601splitHere46","2322685splitHere46","println <doubleQuotes46>/bin/ls -l<doubleQuotes46>.execute().text<newline46mondego>"
"3602splitHere46","2322974splitHere46","<dependency><newline46mondego>  <groupId>org.apache.commons</groupId><newline46mondego>  <artifactId>commons-compress</artifactId><newline46mondego>  <version>1.0</version><newline46mondego></dependency><newline46mondego>"
"3603splitHere46","2322974splitHere46","FileInputStream in = new FileInputStream(<doubleQuotes46>archive.tar.bz2<doubleQuotes46>);<newline46mondego>FileOutputStream out = new FileOutputStream(<doubleQuotes46>archive.tar<doubleQuotes46>);<newline46mondego>BZip2CompressorInputStream bzIn = new BZip2CompressorInputStream(in);<newline46mondego>final byte[] buffer = new byte[buffersize];<newline46mondego>int n = 0;<newline46mondego>while (-1 != (n = bzIn.read(buffer))) {<newline46mondego>  out.write(buffer, 0, n);<newline46mondego>}<newline46mondego>out.close();<newline46mondego>bzIn.close();<newline46mondego>"
"3604splitHere46","2323085splitHere46","mList.setItemsCanFocus(true);<newline46mondego>"
"3605splitHere46","2323085splitHere46","view.setClickable(true);<newline46mondego>    view.setFocusable(true);<newline46mondego>    view.setBackgroundResource(android.R.drawable.menuitem_background);<newline46mondego>"
"3606splitHere46","2323109splitHere46","SOAPHandler"
"3607splitHere46","2323109splitHere46","BindingProvider"
"3608splitHere46","2323109splitHere46","WSBindingProvider"
"3609splitHere46","2323109splitHere46","Headers"
"3610splitHere46","2323109splitHere46","import com.sun.xml.ws.developer.WSBindingProvider;<newline46mondego><newline46mondego>HelloPort port = helloService.getHelloPort();  // or something like that...<newline46mondego>WSBindingProvider bp = (WSBindingProvider)port;<newline46mondego><newline46mondego>bp.setOutboundHeader(<newline46mondego>  // simple string value as a header, like <simpleHeader>stringValue</simpleHeader><newline46mondego>  Headers.create(new QName(<doubleQuotes46>simpleHeader<doubleQuotes46>),<doubleQuotes46>stringValue<doubleQuotes46>),<newline46mondego>  // create a header from JAXB object<newline46mondego>  Headers.create(jaxbContext,myJaxbObject)<newline46mondego>);<newline46mondego>"
"3611splitHere46","2323152splitHere46","for (int i = 0; i < numberOfReps; i++) {<newline46mondego>   // do something that you simply want to repeat numberOfReps times<newline46mondego>}<newline46mondego>"
"3612splitHere46","2323188splitHere46","try<newline46mondego>        {<newline46mondego>            // setup the socket address<newline46mondego>            InetSocketAddress address = new InetSocketAddress ( InetAddress.getLocalHost (), config.getHttpsPort () );<newline46mondego><newline46mondego>            // initialise the HTTPS server<newline46mondego>            HttpsServer httpsServer = HttpsServer.create ( address, 0 );<newline46mondego>            SSLContext sslContext = SSLContext.getInstance ( <doubleQuotes46>TLS<doubleQuotes46> );<newline46mondego><newline46mondego>            // initialise the keystore<newline46mondego>            char[] password = <doubleQuotes46>simulator<doubleQuotes46>.toCharArray ();<newline46mondego>            KeyStore ks = KeyStore.getInstance ( <doubleQuotes46>JKS<doubleQuotes46> );<newline46mondego>            FileInputStream fis = new FileInputStream ( <doubleQuotes46>lig.keystore<doubleQuotes46> );<newline46mondego>            ks.load ( fis, password );<newline46mondego><newline46mondego>            // setup the key manager factory<newline46mondego>            KeyManagerFactory kmf = KeyManagerFactory.getInstance ( <doubleQuotes46>SunX509<doubleQuotes46> );<newline46mondego>            kmf.init ( ks, password );<newline46mondego><newline46mondego>            // setup the trust manager factory<newline46mondego>            TrustManagerFactory tmf = TrustManagerFactory.getInstance ( <doubleQuotes46>SunX509<doubleQuotes46> );<newline46mondego>            tmf.init ( ks );<newline46mondego><newline46mondego>            // setup the HTTPS context and parameters<newline46mondego>            sslContext.init ( kmf.getKeyManagers (), tmf.getTrustManagers (), null );<newline46mondego>            httpsServer.setHttpsConfigurator ( new HttpsConfigurator( sslContext )<newline46mondego>            {<newline46mondego>                public void configure ( HttpsParameters params )<newline46mondego>                {<newline46mondego>                    try<newline46mondego>                    {<newline46mondego>                        // initialise the SSL context<newline46mondego>                        SSLContext c = SSLContext.getDefault ();<newline46mondego>                        SSLEngine engine = c.createSSLEngine ();<newline46mondego>                        params.setNeedClientAuth ( false );<newline46mondego>                        params.setCipherSuites ( engine.getEnabledCipherSuites () );<newline46mondego>                        params.setProtocols ( engine.getEnabledProtocols () );<newline46mondego><newline46mondego>                        // get the default parameters<newline46mondego>                        SSLParameters defaultSSLParameters = c.getDefaultSSLParameters ();<newline46mondego>                        params.setSSLParameters ( defaultSSLParameters );<newline46mondego>                    }<newline46mondego>                    catch ( Exception ex )<newline46mondego>                    {<newline46mondego>                        ILogger log = new LoggerFactory ().getLogger ();<newline46mondego>                        log.exception ( ex );<newline46mondego>                        log.error ( <doubleQuotes46>Failed to create HTTPS port<doubleQuotes46> );<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            } );<newline46mondego>            LigServer server = new LigServer ( httpsServer );<newline46mondego>            joinableThreadList.add ( server.getJoinableThread () );<newline46mondego>        }<newline46mondego>        catch ( Exception exception )<newline46mondego>        {<newline46mondego>            log.exception ( exception );<newline46mondego>            log.error ( <doubleQuotes46>Failed to create HTTPS server on port <doubleQuotes46> + config.getHttpsPort () + <doubleQuotes46> of localhost<doubleQuotes46> );<newline46mondego>        }<newline46mondego>"
"3613splitHere46","2323188splitHere46","$ keytool -genkey -alias alias -keypass simulator \<newline46mondego>  -keystore lig.keystore -storepass simulator<newline46mondego>"
"3614splitHere46","2323188splitHere46","ks.load"
"3615splitHere46","2323188splitHere46","kmf.init"
"3616splitHere46","2323192splitHere46","//html:head"
"3617splitHere46","2323192splitHere46","XPathContext ctx = new XPathContext(<doubleQuotes46>html<doubleQuotes46>, <doubleQuotes46>http://www.w3.org/1999/xhtml<doubleQuotes46>);<newline46mondego>Nodes nodes = root.query(<doubleQuotes46>//html:head<doubleQuotes46>, ctx );<newline46mondego>"
"3618splitHere46","2323517splitHere46","LinkedList"
"3619splitHere46","2323517splitHere46","next"
"3620splitHere46","2323517splitHere46","ListIterator"
"3621splitHere46","2323689splitHere46","tablehilo"
"3622splitHere46","2323689splitHere46","Generator"
"3623splitHere46","2323774splitHere46","Client"
"3624splitHere46","2323774splitHere46","Client client = new Client(Protocol.HTTP);<newline46mondego>Request request = new Request(Method.GET, resourceRef);<newline46mondego>Response response = client.handle(request);<newline46mondego><newline46mondego>assert response.getStatus().getCode() == 200;<newline46mondego>assert response.isEntityAvailable();<newline46mondego>assert response.getEntity().getMediaType().equals(MediaType.TEXT_HTML);<newline46mondego><newline46mondego>// Representation.getText() empties the InputStream, so we need to store the text in a variable<newline46mondego>String text = response.getEntity().getText();<newline46mondego>assert text.contains(<doubleQuotes46>search string<doubleQuotes46>);<newline46mondego>assert text.contains(<doubleQuotes46>another search string<doubleQuotes46>);<newline46mondego>"
"3625splitHere46","2323774splitHere46","assert"
"3626splitHere46","2323977splitHere46","Calendar"
"3627splitHere46","2323977splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>cal.setTime(st);<newline46mondego>if (cal.get(Calendar.AM_PM) == Calendar.PM) {<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"3628splitHere46","2324114splitHere46","start()"
"3629splitHere46","2324114splitHere46","Runnable"
"3630splitHere46","2324114splitHere46","Runnable"
"3631splitHere46","2324114splitHere46","Thread"
"3632splitHere46","2324114splitHere46","run()"
"3633splitHere46","2324114splitHere46","run()"
"3634splitHere46","2324114splitHere46","* Causes this thread to begin execution; the Java Virtual Machine <newline46mondego> * calls the <code>run</code> method of this thread.<newline46mondego>"
"3635splitHere46","2324114splitHere46","run()"
"3636splitHere46","2324114splitHere46","Runnable"
"3637splitHere46","2324114splitHere46","run()"
"3638splitHere46","2324114splitHere46","Runnable"
"3639splitHere46","2324114splitHere46","Runnable"
"3640splitHere46","2324114splitHere46","run()"
"3641splitHere46","2324114splitHere46","Runnable"
"3642splitHere46","2324114splitHere46","Runnable"
"3643splitHere46","2324114splitHere46","run()"
"3644splitHere46","2324114splitHere46","Thread"
"3645splitHere46","2324114splitHere46","Runnable"
"3646splitHere46","2324114splitHere46","start()"
"3647splitHere46","2324114splitHere46","run()"
"3648splitHere46","2324114splitHere46","Runnable"
"3649splitHere46","2324116splitHere46","&="
"3650splitHere46","2324116splitHere46","&"
"3651splitHere46","2324116splitHere46","|"
"3652splitHere46","2324116splitHere46","&&"
"3653splitHere46","2324116splitHere46","||"
"3654splitHere46","2324116splitHere46","&&"
"3655splitHere46","2324116splitHere46","&"
"3656splitHere46","2324116splitHere46","true"
"3657splitHere46","2324116splitHere46","&="
"3658splitHere46","2324116splitHere46","&"
"3659splitHere46","2324116splitHere46","boolean b"
"3660splitHere46","2324116splitHere46","b &= bool_expr;<newline46mondego>b = b & bool_expr;<newline46mondego>if (!bool_expr) b = false;<newline46mondego>"
"3661splitHere46","2324116splitHere46","Field"
"3662splitHere46","2324116splitHere46","Class"
"3663splitHere46","2324283splitHere46","public int getNumRandOccupants() { return randOccupants.size(); }<newline46mondego>"
"3664splitHere46","2324283splitHere46","randOccupants"
"3665splitHere46","2324283splitHere46","addRandomOccupant"
"3666splitHere46","2324300splitHere46","myjavadocpdf.book"
"3667splitHere46","2324300splitHere46","find . | grep html$ | sort -r > files.txt"
"3668splitHere46","2324300splitHere46","dir /s/b *.html > files.txt"
"3669splitHere46","2324496splitHere46","IdToEntityConverter"
"3670splitHere46","2324496splitHere46","find[EntityName]([IdType])"
"3671splitHere46","2324496splitHere46","X"
"3672splitHere46","2324496splitHere46","X"
"3673splitHere46","2324496splitHere46","public static findX(id)"
"3674splitHere46","2324496splitHere46","X"
"3675splitHere46","2324691splitHere46","org.eclipse.jdt.core"
"3676splitHere46","2324691splitHere46","ASTParser"
"3677splitHere46","2324691splitHere46","ASTParser parser = ASTParser.newParser(AST.JLS3);<newline46mondego>parser.setKind(ASTParser.K_COMPILATION_UNIT); // you tell parser, that source is whole java file. parser can also process single statements<newline46mondego>parser.setSource(source);<newline46mondego>CompilationUnit cu = (CompilationUnit) parser.createAST(null); // CompilationUnit here is of type org.eclipse.jdt.core.dom.CompilationUnit  <newline46mondego>// source is either char array, like this:<newline46mondego><newline46mondego>public class A { int i = 9; int j; }<doubleQuotes46>.toCharArray()<newline46mondego><newline46mondego>//org.eclipse.jdt.core.ICompilationUnit type, which represents java source files<newline46mondego>"
"3678splitHere46","2324691splitHere46","ASTVisitor"
"3679splitHere46","2324691splitHere46","cu.accept(new ASTVisitor() {<newline46mondego>  public boolean visit(SimpleName node) {<newline46mondego>    System.out.println(node); // print all simple names in compilation unit. in our example it would be A, i, j (class name, and then variables)<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"3680splitHere46","2324691splitHere46","ASTParser parser = ASTParser.newParser(AST.JLS3);<newline46mondego>parser.setSource(compilationUnit);<newline46mondego>parser.setSourceRange(method.getSourceRange().getOffset(), method.getSourceRange().getLength());<newline46mondego>parser.setResolveBindings(true);<newline46mondego>CompilationUnit cu = (CompilationUnit)parser.createAST(null);<newline46mondego>cu.accept(new ASTMethodVisitor());<newline46mondego>"
"3681splitHere46","2324723splitHere46","dgSock.send(new DatagramPacket(buff,buff.length,remoteHost.getLocalHost(),toPort));<newline46mondego>"
"3682splitHere46","2324723splitHere46","remoteHost.getLocalHost()"
"3683splitHere46","2324723splitHere46","remoteHost"
"3684splitHere46","2324723splitHere46","remoteHost.getLocalHost()"
"3685splitHere46","2324723splitHere46","dgSock.send(new DatagramPacket(buff,buff.length,remoteHost,toPort));<newline46mondego>"
"3686splitHere46","2324732splitHere46","synchronized(this)"
"3687splitHere46","2324732splitHere46","synchronized(TheContainingClassName.class)"
"3688splitHere46","2324732splitHere46","getFoo()"
"3689splitHere46","2324732splitHere46","setFoo()"
"3690splitHere46","2324732splitHere46","setFoo()"
"3691splitHere46","2324732splitHere46","incrementFoo()"
"3692splitHere46","2324739splitHere46","EntityUtil"
"3693splitHere46","2324739splitHere46","String responseBody = EntityUtils.toString(response.getEntity());<newline46mondego>"
"3694splitHere46","2324976splitHere46","ASTParser"
"3695splitHere46","2324976splitHere46","ASTParser parser = ASTParser.newParser(AST.JLS3);<newline46mondego>parser.setSource(compilationUnit);<newline46mondego>parser.setSourceRange(method.getSourceRange().getOffset(), method.getSourceRange().getLength());<newline46mondego>parser.setResolveBindings(true);<newline46mondego>CompilationUnit cu = (CompilationUnit)parser.createAST(null);<newline46mondego>cu.accept(new ASTMethodVisitor());<newline46mondego>"
"3696splitHere46","2324976splitHere46","ASTVisitor"
"3697splitHere46","2324976splitHere46","cu.accept(new ASTVisitor() {<newline46mondego>  public boolean visit(SimpleName node) {<newline46mondego>    System.out.println(node); // print all simple names in compilation unit. in our example it would be A, i, j (class name, and then variables)<newline46mondego>    // filter the variables here<newline46mondego>    return true;<newline46mondego>  }<newline46mondego>});<newline46mondego>"
"3698splitHere46","2325128splitHere46","// the SAX way:<newline46mondego>XMLReader myReader = XMLReaderFactory.createXMLReader();<newline46mondego>myReader.setContentHandler(handler);<newline46mondego>myReader.parse(new InputSource(new URL(url).openStream()));<newline46mondego><newline46mondego>// or if you prefer DOM:<newline46mondego>DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder db = dbf.newDocumentBuilder();<newline46mondego>Document doc = db.parse(new URL(url).openStream());<newline46mondego>"
"3699splitHere46","2325163splitHere46","@Column"
"3700splitHere46","2325163splitHere46","@Column<newline46mondego>String s1;<newline46mondego><newline46mondego>@Column<newline46mondego>String s2;<newline46mondego><newline46mondego>public String[] getProp()<newline46mondego>{<newline46mondego>  return new String[]{ s1, s2 };<newline46mondego>}<newline46mondego><newline46mondego>public String setProp(String[] s )<newline46mondego>{<newline46mondego>   s1 = s[0];<newline46mondego>   s2 = s[1];<newline46mondego>}<newline46mondego>"
"3701splitHere46","2325163splitHere46","@Embedded"
"3702splitHere46","2325163splitHere46","@Entity<newline46mondego>public class MyEntity {<newline46mondego><newline46mondego>    @Embedded<newline46mondego>    public StringTuple tuple;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>public class StringTuple {<newline46mondego>    public String s1;<newline46mondego>    public String s2;<newline46mondego>}<newline46mondego>"
"3703splitHere46","2325378splitHere46","|="
"3704splitHere46","2325378splitHere46","+="
"3705splitHere46","2325378splitHere46","foo = 32;   // 32 =      0b00100000<newline46mondego>bar = 9;    //  9 =      0b00001001<newline46mondego>baz = 10;   // 10 =      0b00001010<newline46mondego>foo |= bar; // 32 | 9  = 0b00101001 = 41<newline46mondego>            // now foo = 41<newline46mondego>foo |= baz; // 41 | 10 = 0b00101011 = 43<newline46mondego>            // now foo = 43<newline46mondego>"
"3706splitHere46","2325407splitHere46","printDocument(doc, System.out)"
"3707splitHere46","2325407splitHere46","public static void printDocument(Document doc, OutputStream out) throws IOException, TransformerException {<newline46mondego>    TransformerFactory tf = TransformerFactory.newInstance();<newline46mondego>    Transformer transformer = tf.newTransformer();<newline46mondego>    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, <doubleQuotes46>no<doubleQuotes46>);<newline46mondego>    transformer.setOutputProperty(OutputKeys.METHOD, <doubleQuotes46>xml<doubleQuotes46>);<newline46mondego>    transformer.setOutputProperty(OutputKeys.INDENT, <doubleQuotes46>yes<doubleQuotes46>);<newline46mondego>    transformer.setOutputProperty(OutputKeys.ENCODING, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    transformer.setOutputProperty(<doubleQuotes46>{http://xml.apache.org/xslt}indent-amount<doubleQuotes46>, <doubleQuotes46>4<doubleQuotes46>);<newline46mondego><newline46mondego>    transformer.transform(new DOMSource(doc), <newline46mondego>         new StreamResult(new OutputStreamWriter(out, <doubleQuotes46>UTF-8<doubleQuotes46>)));<newline46mondego>}<newline46mondego>"
"3708splitHere46","2325407splitHere46","indent-amount"
"3709splitHere46","2325493splitHere46","Content-Length"
"3710splitHere46","2325521splitHere46","public Computation(Operation operation) {<newline46mondego>    this(operation, 0.01);<newline46mondego>}<newline46mondego><newline46mondego>public Computation(Operation operation, double epsilon) {<newline46mondego>    this.operation = operation;<newline46mondego>    this.epsilon = epsilon;<newline46mondego>}<newline46mondego>"
"3711splitHere46","2325807splitHere46","mirrorOf"
"3712splitHere46","2325807splitHere46","*"
"3713splitHere46","2325807splitHere46","settings.xml"
"3714splitHere46","2325807splitHere46","~/.m2/settings.xml"
"3715splitHere46","2325807splitHere46","conf/settings.xml"
"3716splitHere46","2325946splitHere46","-vm"
"3717splitHere46","2325946splitHere46","eclipse.ini"
"3718splitHere46","2325946splitHere46","Installed JRE"
"3719splitHere46","2325946splitHere46","Libraries"
"3720splitHere46","2325946splitHere46","Java Build Path"
"3721splitHere46","2326082splitHere46","langof(<doubleQuotes46>un texte en français<doubleQuotes46>) = fr : OK<newline46mondego>langof(<doubleQuotes46>a text in english<doubleQuotes46>) = en : OK<newline46mondego>langof(<doubleQuotes46>un texto en español<doubleQuotes46>) = es : OK<newline46mondego>langof(<doubleQuotes46>un texte un peu plus long en français<doubleQuotes46>) = fr : OK<newline46mondego>langof(<doubleQuotes46>a text a little longer in english<doubleQuotes46>) = en : OK<newline46mondego>langof(<doubleQuotes46>a little longer text in english<doubleQuotes46>) = en : OK<newline46mondego>langof(<doubleQuotes46>un texto un poco mas largo en español<doubleQuotes46>) = es : OK<newline46mondego>langof(<doubleQuotes46>J'aime les bisounours !<doubleQuotes46>) = fr : OK<newline46mondego>langof(<doubleQuotes46>Bienvenue à Montmartre !<doubleQuotes46>) = fr : OK<newline46mondego>langof(<doubleQuotes46>Welcome to London !<doubleQuotes46>) = en : OK<newline46mondego>// ...<newline46mondego>"
"3722splitHere46","2326088splitHere46","//You need to do this once on each JVM(Hazelcast node) at the begining  <newline46mondego>Config myConfig = new Config();<newline46mondego>Map<String, MapConfig> myHazelcastMapConfigs = myConfig.getMapMapConfigs();<newline46mondego>MapConfig myMapConfig = new MapConfig();<newline46mondego>myMapConfig.setName(<doubleQuotes46>myMapName<doubleQuotes46>);<newline46mondego>myMapConfig.setTimeToLiveSeconds(1000);<newline46mondego>myHazelcastMapConfigs.put(<doubleQuotes46>myMapName<doubleQuotes46>, myMapConfig);<newline46mondego>Hazelcast.init(myConfig);<newline46mondego>"
"3723splitHere46","2326088splitHere46","HazelcastInstance h = Hazelcast.newHazelcastInstance(myConfig);<newline46mondego><newline46mondego>h.getMap(<doubleQuotes46>myMapName<doubleQuotes46>);<newline46mondego>"
"3724splitHere46","2326088splitHere46","Config config = new XmlConfigBuilder().build();<newline46mondego>config.getMapConfig(<doubleQuotes46>myMapName<doubleQuotes46>).setTimeToLiveSeconds(10000);<newline46mondego>"
"3725splitHere46","2326480splitHere46","com.sun.xml.internal.bind.marshaller.NamespacePrefixMapper"
"3726splitHere46","2326480splitHere46","com.sun.xml.bind.marshaller.NamespacePrefixMapper"
"3727splitHere46","2326480splitHere46","internal"
"3728splitHere46","2326623splitHere46","<a4j:form>"
"3729splitHere46","2326623splitHere46","domElementAttachment"
"3730splitHere46","2326623splitHere46","form"
"3731splitHere46","2326623splitHere46","parent"
"3732splitHere46","2326623splitHere46","<h:form>"
"3733splitHere46","2326623splitHere46","<a4j:commandLink>"
"3734splitHere46","2326623splitHere46","<h:graphicImage value=<doubleQuotes46>/images/modal/close.png<doubleQuotes46> styleClass=<doubleQuotes46>hidelink<doubleQuotes46><newline46mondego>            onclick=<doubleQuotes46>#{rich:component('examinationPanel')}.hide()<doubleQuotes46> id=<doubleQuotes46>close<doubleQuotes46> /><newline46mondego>"
"3735splitHere46","2326623splitHere46","onhide=<doubleQuotes46>notifyClose()<doubleQuotes46>"
"3736splitHere46","2326623splitHere46","modalPanel"
"3737splitHere46","2326623splitHere46","notifyClose()"
"3738splitHere46","2326623splitHere46","<a4j:jsFunction>"
"3739splitHere46","2326772splitHere46","for(i <- 0 to 5) {<newline46mondego>  print( i times <doubleQuotes46>a<doubleQuotes46> followed by (5 - i) times <doubleQuotes46>z<doubleQuotes46>)<newline46mondego>  print a new line<newline46mondego>}<newline46mondego>"
"3740splitHere46","2326801splitHere46","clone"
"3741splitHere46","2326801splitHere46","clone"
"3742splitHere46","2326801splitHere46","clone"
"3743splitHere46","2326801splitHere46","Cloneable"
"3744splitHere46","2326801splitHere46","clone"
"3745splitHere46","2326801splitHere46","clone"
"3746splitHere46","2326801splitHere46","Cloneable"
"3747splitHere46","2326801splitHere46","clone"
"3748splitHere46","2326801splitHere46","clone"
"3749splitHere46","2326801splitHere46","MyObject extends java.lang.Object implements java.lang.Cloneable"
"3750splitHere46","2326801splitHere46","CloneNotSupportedException"
"3751splitHere46","2326801splitHere46","AssertionError"
"3752splitHere46","2326801splitHere46","clone"
"3753splitHere46","2326801splitHere46","super.clone"
"3754splitHere46","2326824splitHere46","?use_mirror=autoselect"
"3755splitHere46","2327022splitHere46","marshaller.setProperty(<doubleQuotes46>jaxb.noNamespaceSchemaLocation<doubleQuotes46>, <doubleQuotes46>amzn-envelope.xsd<doubleQuotes46>);<newline46mondego>"
"3756splitHere46","2327366splitHere46","&&"
"3757splitHere46","2327366splitHere46","||"
"3758splitHere46","2327415splitHere46","Obj p = curScope.locals, last = null;<newline46mondego>while (p != null) {<newline46mondego>    if (p.name.equals(name)) {<newline46mondego>        error(name + <doubleQuotes46> declared twice<doubleQuotes46>);<newline46mondego>        last = p;<newline46mondego>        p = p.next;<newline46mondego>    }<newline46mondego>}<newline46mondego>if (last == null) {<newline46mondego>    curScope.locals = obj; <newline46mondego>} else {<newline46mondego>    last.next = obj;<newline46mondego>}<newline46mondego>"
"3759splitHere46","2327415splitHere46","if"
"3760splitHere46","2327415splitHere46","else"
"3761splitHere46","2327534splitHere46","public abstract class Test {<newline46mondego>  private final ArrayList<Object> objects;<newline46mondego><newline46mondego>  protected ArrayList<Object> getObjects() {<newline46mondego>    return objects;<newline46mondego>  }<newline46mondego><newline46mondego>  protected Test(ArrayList<Object> objects) {<newline46mondego>    this.objects = objects;<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class TestSubA extends Test {<newline46mondego><newline46mondego>  public TestSubA() {<newline46mondego>    super(new ArrayList<Object>(20));<newline46mondego>    // Other stuff<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>public class TestSubB extends Test {<newline46mondego><newline46mondego>  public TestSubB() {<newline46mondego>    super(new ArrayList<Object>(100));<newline46mondego>    // Other stuff<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3762splitHere46","2327576splitHere46","public class Properties {<newline46mondego>    public static String PROPERTY = <doubleQuotes46>abc<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"3763splitHere46","2327576splitHere46","Properties.PROPERTY<newline46mondego>"
"3764splitHere46","2327753splitHere46","system(<doubleQuotes46>java Sample<doubleQuotes46>);<newline46mondego>"
"3765splitHere46","2327768splitHere46","Hotel.countByCity(city)<newline46mondego>"
"3766splitHere46","2327835splitHere46","USERS"
"3767splitHere46","2327835splitHere46","SPECIALUSERS"
"3768splitHere46","2327835splitHere46","SpecialUser"
"3769splitHere46","2327835splitHere46","User"
"3770splitHere46","2327835splitHere46","public class SpecialUser extends User { <newline46mondego>}<newline46mondego>"
"3771splitHere46","2327835splitHere46","<joined-subclass>"
"3772splitHere46","2327835splitHere46","User"
"3773splitHere46","2327835splitHere46","<hibernate-mapping package=<doubleQuotes46>com.initech.domain<doubleQuotes46>><newline46mondego>    <class name=<doubleQuotes46>com.initech.User<doubleQuotes46> table=<doubleQuotes46>USERS<doubleQuotes46>><newline46mondego><newline46mondego>        <id name=<doubleQuotes46>id<doubleQuotes46> column=<doubleQuotes46>ID<doubleQuotes46> type=<doubleQuotes46>java.lang.Long<doubleQuotes46>><newline46mondego>            <meta attribute=<doubleQuotes46>use-in-tostring<doubleQuotes46>>true</meta><newline46mondego>            <generator class=<doubleQuotes46>sequence<doubleQuotes46>><newline46mondego>                <param name=<doubleQuotes46>sequence<doubleQuotes46>>SEQ_USERS_ID</param><newline46mondego>            </generator><newline46mondego>        </id><newline46mondego><newline46mondego>        <property name=<doubleQuotes46>loginName<doubleQuotes46> column=<doubleQuotes46>LOGINNAME<doubleQuotes46> type=<doubleQuotes46>java.lang.String<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>            <meta attribute=<doubleQuotes46>use-in-tostring<doubleQuotes46>>true</meta><newline46mondego>        </property><newline46mondego><newline46mondego>        <joined-subclass name=<doubleQuotes46>com.initech.SpecialUser<doubleQuotes46> table=<doubleQuotes46>SPECIALUSERS<doubleQuotes46>><newline46mondego>            <key column=<doubleQuotes46>USERID<doubleQuotes46>/><newline46mondego>        </joined-subclass><newline46mondego><newline46mondego>    </class><newline46mondego></hibernate-mapping><newline46mondego>"
"3774splitHere46","2327835splitHere46","SpecialUser"
"3775splitHere46","2327835splitHere46","User"
"3776splitHere46","2327835splitHere46","from SpecialUser<newline46mondego>"
"3777splitHere46","2327835splitHere46","SPECIALUSERS"
"3778splitHere46","2327835splitHere46","SpecialUser"
"3779splitHere46","2327835splitHere46","<joined-subclass>"
"3780splitHere46","2328009splitHere46","#!/bin/sh<newline46mondego>/path/to/java -classpath foo.jar:bar.jar:. classname<newline46mondego>"
"3781splitHere46","2328009splitHere46","chmod +x filename"
"3782splitHere46","2328009splitHere46","./filename"
"3783splitHere46","2328204splitHere46","public class ObjInputStream extends ObjectInputStream {<newline46mondego>    /**<newline46mondego>     * @param in<newline46mondego>     * @throws IOException<newline46mondego>     */<newline46mondego>    public ObjInputStream(InputStream in) throws IOException {<newline46mondego>        super(in);<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see java.io.ObjectInputStream#readStreamHeader()<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    protected void readStreamHeader() throws IOException, StreamCorruptedException {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3784splitHere46","2328204splitHere46","public class ObjOutputStream extends ObjectOutputStream {<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param out<newline46mondego>     * @throws IOException<newline46mondego>     */<newline46mondego>    public ObjOutputStream(OutputStream out) throws IOException {<newline46mondego>        super(out);<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see java.io.ObjectOutputStream#writeStreamHeader()<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    protected void writeStreamHeader() throws IOException {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3785splitHere46","2328204splitHere46","/**<newline46mondego> * <newline46mondego> */<newline46mondego>package objtest;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.nio.BufferUnderflowException;<newline46mondego>import java.nio.ByteBuffer;<newline46mondego>import java.util.ArrayDeque;<newline46mondego>import java.util.Queue;<newline46mondego><newline46mondego>import kokuks.KokuKS;<newline46mondego><newline46mondego>/**<newline46mondego> * UnrealConceptTest - FramedInputStream<newline46mondego> * @version 1.0<newline46mondego> */<newline46mondego>public class FramedInputStream extends InputStream {<newline46mondego>    public static final int INITIAL_BUFFER_SIZE = 8 << 1;<newline46mondego><newline46mondego>    public static final int FRAME_HEADER_1 = 0xBEEFFACE;<newline46mondego>    public static final int FRAME_HEADER_2 = 0xFACEBEEF;<newline46mondego><newline46mondego>    public static final byte[] HEADER_BYTES = new byte[4 * 2];<newline46mondego>    protected static final byte[] CURR_HEADER_BUFF = new byte[HEADER_BYTES.length];<newline46mondego><newline46mondego>    static {<newline46mondego>        ByteBuffer b = ByteBuffer.allocateDirect(8);<newline46mondego><newline46mondego>        b.putInt(FRAME_HEADER_1);<newline46mondego>        b.putInt(FRAME_HEADER_2);<newline46mondego><newline46mondego>        ByteBuffer b2 = (ByteBuffer) b.flip();<newline46mondego><newline46mondego>        b2.get(HEADER_BYTES, 0, 4);<newline46mondego>        b2.get(HEADER_BYTES, 3, 4);<newline46mondego>    }   <newline46mondego><newline46mondego>    protected int     size         = 0;<newline46mondego>    protected int     chain        = 0;<newline46mondego>    protected boolean inFrame      = false;<newline46mondego>    protected boolean readingSize  = false;<newline46mondego>    protected int     sizePos      = 0;<newline46mondego><newline46mondego>    protected int dbgput = 0;<newline46mondego><newline46mondego><newline46mondego>    protected ByteBuffer        bb  = ByteBuffer.allocateDirect(INITIAL_BUFFER_SIZE);<newline46mondego>    protected Queue<ByteBuffer> bbq = new ArrayDeque<ByteBuffer>();<newline46mondego>    protected ByteBuffer        currBuff = null;<newline46mondego><newline46mondego>    protected final boolean     recoverFromError;<newline46mondego><newline46mondego>    /**<newline46mondego>     * <newline46mondego>     */<newline46mondego>    public FramedInputStream(boolean recoverFromError) {<newline46mondego>        this.recoverFromError = recoverFromError;<newline46mondego>    }<newline46mondego><newline46mondego>    public FramedInputStream() {<newline46mondego>        this(true);<newline46mondego>    }<newline46mondego><newline46mondego>    protected boolean ensureFramebufferCapacity(int min) {<newline46mondego>        int mymin = 1 << min;<newline46mondego><newline46mondego>        if (mymin <= bb.capacity()) return false;<newline46mondego><newline46mondego>        int num = bb.capacity();<newline46mondego>        while (num < mymin) num <<= 1;<newline46mondego><newline46mondego>        ByteBuffer bb2 = ByteBuffer.allocateDirect(num);<newline46mondego>        // copy old data into new bytebuffer<newline46mondego>        int bb_pos = bb.position();<newline46mondego>        bb.rewind();<newline46mondego>        bb2.put(bb);<newline46mondego>        bb = bb2;<newline46mondego><newline46mondego>        if (KokuKS.DEBUG_MODE) System.out.println(<doubleQuotes46>modified buffer size to: <doubleQuotes46> + num);<newline46mondego><newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * @return the recoverFromError<newline46mondego>     */<newline46mondego>    public boolean isRecoverFromError() {<newline46mondego>        return recoverFromError;<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see java.io.InputStream#read()<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public int read() throws IOException {<newline46mondego>        if (currBuff == null || !currBuff.hasRemaining()) return -1;<newline46mondego><newline46mondego>        byte b = currBuff.get();<newline46mondego>        //System.out.println(<doubleQuotes46>data: <doubleQuotes46> + b);<newline46mondego>        return b;<newline46mondego>    }<newline46mondego><newline46mondego>    public void putBuffer(ByteBuffer source) {<newline46mondego>        ensureFramebufferCapacity(bb.capacity() + source.remaining());<newline46mondego><newline46mondego>        while (source.hasRemaining()) {<newline46mondego>            putByte(source.get());<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean checkCompleteFrame() {<newline46mondego>        return !bbq.isEmpty();<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see java.io.InputStream#available()<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public int available() throws IOException {<newline46mondego>        return currBuff != null ? currBuff.remaining() : 0;<newline46mondego>    }<newline46mondego><newline46mondego>    public int read(byte[] data) {<newline46mondego>        if (currBuff == null || !currBuff.hasRemaining()) {<newline46mondego>            return -1;<newline46mondego>        }<newline46mondego><newline46mondego>        if (data.length > currBuff.remaining()) {<newline46mondego>            throw new BufferUnderflowException();<newline46mondego>        }<newline46mondego><newline46mondego>        currBuff.get(data);<newline46mondego><newline46mondego>        //System.out.println(<doubleQuotes46>data: <doubleQuotes46> + new String(data));<newline46mondego><newline46mondego>        return data.length;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean nextFrame() {<newline46mondego>        ByteBuffer bbf = bbq.poll();<newline46mondego><newline46mondego>        if (bbf != null) {<newline46mondego>            /*<newline46mondego>            System.out.println(<doubleQuotes46>bbf limit: <doubleQuotes46> + bbf.limit());<newline46mondego>            System.out.println(<doubleQuotes46>bbf pos: <doubleQuotes46> + bbf.position());<newline46mondego>            System.out.println(<doubleQuotes46>bbf data: <doubleQuotes46> + new String(bbf.array()));<newline46mondego>            */<newline46mondego><newline46mondego>            //byte[] data = bbf.array();<newline46mondego><newline46mondego>            //for (int i = 0; i < data.length; i++) {<newline46mondego>            //  byte by = data[i];<newline46mondego>            //  System.out.println(<doubleQuotes46>b: <doubleQuotes46> + (by > 32 ? new String(new byte[] {by}) : <doubleQuotes46>??<doubleQuotes46>) + <doubleQuotes46>, <doubleQuotes46> + by);<newline46mondego>            //}         <newline46mondego><newline46mondego>            currBuff = ByteBuffer.allocateDirect(bbf.limit());<newline46mondego>            currBuff.put(bbf).flip();<newline46mondego>            bbf.rewind();<newline46mondego><newline46mondego>            /*<newline46mondego>            System.out.println(<doubleQuotes46>currbuf limit: <doubleQuotes46> + currBuff.limit());<newline46mondego>            System.out.println(<doubleQuotes46>currbuf pos: <doubleQuotes46> + currBuff.position());<newline46mondego>            System.out.println(<doubleQuotes46>currbuf data: <doubleQuotes46> + new String(currBuff.array()));<newline46mondego>            */<newline46mondego><newline46mondego>            currBuff.rewind();<newline46mondego>            currBuff.position(1);<newline46mondego><newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public void putByte(byte b) {<newline46mondego>        //System.out.println(<doubleQuotes46>pb b: <doubleQuotes46> + ObjTest.getByteStr(b));<newline46mondego><newline46mondego>        if (recoverFromError || !inFrame) {<newline46mondego>            if (b == HEADER_BYTES[chain++]) {<newline46mondego><newline46mondego>                if (chain >= (HEADER_BYTES.length)) {<newline46mondego>                    if (KokuKS.DEBUG_MODE) System.out.println(<doubleQuotes46>got header!<doubleQuotes46> + (inFrame ? <doubleQuotes46> (recovered)<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>));<newline46mondego><newline46mondego>                    // we have a header! hurrah.<newline46mondego>                    inFrame = true;<newline46mondego>                    sizePos = 0;<newline46mondego>                    size = 0;<newline46mondego>                    readingSize = true;<newline46mondego>                    chain = 0;<newline46mondego><newline46mondego>                    bb.clear();<newline46mondego>                }<newline46mondego>            } else {<newline46mondego>                chain = 0;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        if (inFrame) {<newline46mondego>            if (readingSize) {<newline46mondego>                size += (b & 0xFF) << ((8 * 3) - (8 * sizePos));<newline46mondego>                //System.out.println(<doubleQuotes46>new size: <doubleQuotes46> + size);<newline46mondego>                sizePos++;<newline46mondego><newline46mondego>                if (sizePos >= 4) {<newline46mondego>                    // we've read the size :)<newline46mondego>                    readingSize = false;<newline46mondego>                    sizePos = 0;<newline46mondego><newline46mondego>                    ensureFramebufferCapacity(size);<newline46mondego>                    bb.clear();<newline46mondego>                    bb.limit(size); // set buffer limit to size<newline46mondego>                    //System.out.println(<doubleQuotes46>bb limit set to: <doubleQuotes46> + bb.limit());<newline46mondego>                }<newline46mondego>            } else {<newline46mondego>                //System.out.println(<doubleQuotes46>put: <doubleQuotes46> + dbgput++ + <doubleQuotes46>, <doubleQuotes46> + ObjTest.getByteStr(b));<newline46mondego>                bb.put(b);<newline46mondego><newline46mondego>                if (!bb.hasRemaining()) {<newline46mondego>                    bb.flip();<newline46mondego><newline46mondego>                    //System.out.println(<doubleQuotes46>bb limit after flip(): <doubleQuotes46> + bb.limit());<newline46mondego><newline46mondego>                    //System.out.println(<doubleQuotes46>bblimit: <doubleQuotes46> + bb.limit());<newline46mondego><newline46mondego>                    ByteBuffer newbuf = ByteBuffer.allocateDirect(bb.limit());<newline46mondego>                    newbuf.put(bb).flip(); //we have to flip this<newline46mondego>                    bbq.offer(newbuf); <newline46mondego><newline46mondego>                    //byte[] data = newbuf.array();<newline46mondego><newline46mondego>                    //for (int i = 0; i < newbuf.limit(); i++) {<newline46mondego>                    //  byte by = data[i];<newline46mondego>                    //  System.out.println(<doubleQuotes46>b: <doubleQuotes46> + (by > 32 ? new String(new byte[] {by}) : <doubleQuotes46>??<doubleQuotes46>) + <doubleQuotes46>, <doubleQuotes46> + by);<newline46mondego>                    //}<newline46mondego><newline46mondego>                    inFrame = false;<newline46mondego>                    readingSize = false;<newline46mondego>                    size = 0;<newline46mondego>                    sizePos = 0;<newline46mondego>                    chain = 0;<newline46mondego><newline46mondego>                    bb.clear();<newline46mondego><newline46mondego>                    if (KokuKS.DEBUG_MODE) System.out.println(<doubleQuotes46>FIS: complete object<doubleQuotes46>);<newline46mondego>                    //System.out.println(<doubleQuotes46>FIS: newbuf: <doubleQuotes46> + new String(newbuf.array(), 0, newbuf.limit()));<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3786splitHere46","2328204splitHere46","/**<newline46mondego> * <newline46mondego> */<newline46mondego>package objtest;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.nio.ByteBuffer;<newline46mondego><newline46mondego>import koku.util.io.ByteBufferOutputStream;<newline46mondego><newline46mondego>/**<newline46mondego> * UnrealConceptTest - FramedOutputStream<newline46mondego> * @version 1.0<newline46mondego> * @author Chris Dennett<newline46mondego> */<newline46mondego>public class FramedOutputStream extends ByteBufferOutputStream {<newline46mondego>    public static final int FRAME_HEADER_1 = 0xBEEFFACE;<newline46mondego>    public static final int FRAME_HEADER_2 = 0xFACEBEEF;<newline46mondego><newline46mondego>    public static final byte[] HEADER_BYTES = new byte[4 * 2];<newline46mondego>    public static final byte[] CURR_HEADER_BUFF = new byte[HEADER_BYTES.length];<newline46mondego><newline46mondego>    /* We pad the beginning of our buffer so that we can write the frame<newline46mondego>     * length when the time comes. */<newline46mondego>    protected static final byte[] SIZE_PAD = new byte[4];<newline46mondego><newline46mondego>    static {<newline46mondego>        ByteBuffer b = ByteBuffer.allocate(8);<newline46mondego><newline46mondego>        b.putInt(FRAME_HEADER_1);<newline46mondego>        b.putInt(FRAME_HEADER_2);<newline46mondego><newline46mondego>        ByteBuffer b2 = (ByteBuffer) b.flip();<newline46mondego><newline46mondego>        b2.get(HEADER_BYTES, 0, 4);<newline46mondego>        b2.get(HEADER_BYTES, 3, 4);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * <newline46mondego>     */<newline46mondego>    public FramedOutputStream() {<newline46mondego>        try {<newline46mondego>            write(HEADER_BYTES);<newline46mondego>            write(SIZE_PAD);<newline46mondego>        } catch (IOException e) {<newline46mondego>            System.out.println(<doubleQuotes46>Couldn't write header padding!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see koku.util.io.ByteBufferOutputStream#flip()<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public ByteBuffer flip() {<newline46mondego>        // flip the buffer which will limit it to it's current position<newline46mondego>        super.flip();<newline46mondego><newline46mondego>        // then write the frame length and rewind back to the start of the<newline46mondego>        // buffer so that all the data is available        <newline46mondego>        _buffer.position(11);<newline46mondego>        int size = _buffer.remaining();<newline46mondego><newline46mondego>        //System.out.println(<doubleQuotes46>remaining after complete header: <doubleQuotes46> + size);<newline46mondego><newline46mondego>        _buffer.position(7);<newline46mondego><newline46mondego>        //System.out.println(<doubleQuotes46>remaining after frameheader: <doubleQuotes46> + _buffer.remaining());<newline46mondego><newline46mondego>        putSizeAsBytes(size, _buffer);<newline46mondego><newline46mondego>        //System.out.println(<doubleQuotes46>written size: <doubleQuotes46> + size);<newline46mondego><newline46mondego>       // System.out.println(<doubleQuotes46>buffer limit: <doubleQuotes46> + _buffer.limit());<newline46mondego><newline46mondego>        //System.out.println(<doubleQuotes46>_buffer: <doubleQuotes46> + new String( _buffer.array(), 0, _buffer.limit()));<newline46mondego><newline46mondego>        _buffer.position(11);<newline46mondego><newline46mondego>       // System.out.println(<doubleQuotes46>_buffer11: <doubleQuotes46> + ObjTest.getByteStr(_buffer.get()));<newline46mondego>        //System.out.println(<doubleQuotes46>_buffer12: <doubleQuotes46> + ObjTest.getByteStr(_buffer.get()));<newline46mondego>        //System.out.println(<doubleQuotes46>_buffer13: <doubleQuotes46> + ObjTest.getByteStr(_buffer.get()));<newline46mondego>        //System.out.println(<doubleQuotes46>_buffer14: <doubleQuotes46> + ObjTest.getByteStr(_buffer.get()));<newline46mondego><newline46mondego>        _buffer.rewind();<newline46mondego><newline46mondego>        //_buffer.rewind();<newline46mondego><newline46mondego>        //while (_buffer.hasRemaining()) {<newline46mondego>        //  byte b = _buffer.get();<newline46mondego>        //  System.out.println(<doubleQuotes46>b: <doubleQuotes46> + (b > 32 ? new String(new byte[] {b}) : <doubleQuotes46>??<doubleQuotes46>) + <doubleQuotes46>, <doubleQuotes46> + b);<newline46mondego>        //}<newline46mondego><newline46mondego>        _buffer.rewind();<newline46mondego><newline46mondego>        return _buffer;<newline46mondego>    }<newline46mondego><newline46mondego>    /* (non-Javadoc)<newline46mondego>     * @see koku.util.io.ByteBufferOutputStream#reset()<newline46mondego>     */<newline46mondego>    @Override<newline46mondego>    public void reset() {<newline46mondego>        super.reset();<newline46mondego><newline46mondego>        try {<newline46mondego>            write(HEADER_BYTES);<newline46mondego>            write(SIZE_PAD);<newline46mondego>        } catch (IOException e) {<newline46mondego>            System.out.println(<doubleQuotes46>Couldn't write header padding!<doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public static void putSizeAsBytes(int size, ByteBuffer bb) {<newline46mondego>        //System.out.println(<doubleQuotes46>putSizeAsBytes: given size: <doubleQuotes46> + size);<newline46mondego><newline46mondego>        // encode<newline46mondego>        for (int i = 0; i < 4; i++) {<newline46mondego>            bb.put((byte)((size >>> ((8 * 3) - (8 * i))) & 0xFF));<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3787splitHere46","2328204splitHere46","//<newline46mondego>// $Id: ByteBufferOutputStream.java 5829 2009-06-20 21:09:34Z mdb $<newline46mondego>//<newline46mondego>// Narya library - tools for developing networked games<newline46mondego>// Copyright (C) 2002-2009 Three Rings Design, Inc., All Rights Reserved<newline46mondego>// http://www.threerings.net/code/narya/<newline46mondego>//<newline46mondego>// This library is free software; you can redistribute it and/or modify it<newline46mondego>// under the terms of the GNU Lesser General Public License as published<newline46mondego>// by the Free Software Foundation; either version 2.1 of the License, or<newline46mondego>// (at your option) any later version.<newline46mondego>//<newline46mondego>// This library is distributed in the hope that it will be useful,<newline46mondego>// but WITHOUT ANY WARRANTY; without even the implied warranty of<newline46mondego>// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU<newline46mondego>// Lesser General Public License for more details.<newline46mondego>//<newline46mondego>// You should have received a copy of the GNU Lesser General Public<newline46mondego>// License along with this library; if not, write to the Free Software<newline46mondego>// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA<newline46mondego><newline46mondego>package misc;<newline46mondego><newline46mondego>import java.io.OutputStream;<newline46mondego>import java.nio.BufferOverflowException;<newline46mondego>import java.nio.ByteBuffer;<newline46mondego><newline46mondego>import org.apache.mina.core.buffer.IoBuffer;<newline46mondego><newline46mondego>/**<newline46mondego> * Stores output in an {@link ByteBuffer} that grows automatically to accommodate the data.<newline46mondego> */<newline46mondego>public class ByteBufferOutputStream extends OutputStream<newline46mondego>{<newline46mondego>    /**<newline46mondego>     * Creates a new byte buffer output stream.<newline46mondego>     */<newline46mondego>    public ByteBufferOutputStream ()<newline46mondego>    {<newline46mondego>        _buffer = IoBuffer.allocate(INITIAL_BUFFER_SIZE);<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Returns a reference to the underlying buffer.<newline46mondego>     */<newline46mondego>    public IoBuffer getBuffer ()<newline46mondego>    {<newline46mondego>        return _buffer;<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Flips and returns the buffer.  The returned buffer will have a position of zero and a limit<newline46mondego>     * equal to the number of bytes written.  Call {@link #reset} to reset the buffer before<newline46mondego>     * writing again.<newline46mondego>     */<newline46mondego>    public IoBuffer flip ()<newline46mondego>    {<newline46mondego>        return _buffer.flip();<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Resets our internal buffer.<newline46mondego>     */<newline46mondego>    public void reset ()<newline46mondego>    {<newline46mondego>        _buffer.clear();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override // documentation inherited<newline46mondego>    public void write (int b)<newline46mondego>    {<newline46mondego>        try {<newline46mondego>            _buffer.put((byte)b);<newline46mondego>        } catch (BufferOverflowException boe) {<newline46mondego>            expand(1);<newline46mondego>            _buffer.put((byte)b);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override // documentation inherited<newline46mondego>    public void write (byte[] b, int off, int len)<newline46mondego>    {<newline46mondego>        // sanity check the arguments<newline46mondego>        if ((off < 0) || (off > b.length) || (len < 0) ||<newline46mondego>            ((off + len) > b.length) || ((off + len) < 0)) {<newline46mondego>            throw new IndexOutOfBoundsException();<newline46mondego>        } else if (len == 0) {<newline46mondego>            return;<newline46mondego>        }<newline46mondego><newline46mondego>        try {<newline46mondego>            _buffer.put(b, off, len);<newline46mondego>        } catch (BufferOverflowException boe) {<newline46mondego>            expand(len);<newline46mondego>            _buffer.put(b, off, len);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    /**<newline46mondego>     * Expands our buffer to accomodate the specified capacity.<newline46mondego>     */<newline46mondego>    protected final void expand (int needed)<newline46mondego>    {<newline46mondego>        _buffer.expand(needed);<newline46mondego>    }<newline46mondego><newline46mondego>    /** The buffer in which we store our frame data. */<newline46mondego>    protected IoBuffer _buffer;<newline46mondego><newline46mondego>    /** The default initial size of the internal buffer. */<newline46mondego>    protected static final int INITIAL_BUFFER_SIZE = 32;<newline46mondego>}<newline46mondego>"
"3788splitHere46","2328394splitHere46","ClassC"
"3789splitHere46","2328394splitHere46","public abstract class ClassA<ClassBType extends ClassB> {<newline46mondego>    public void method(ClassBType type) {<newline46mondego>        type.myClassA = this; <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public abstract class ClassB {<newline46mondego>    ClassA<ClassB> myClassA;<newline46mondego><newline46mondego>    private void testMethod() {<newline46mondego>        myClassA.method(this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3790splitHere46","2328394splitHere46","ClassA<ClassB>"
"3791splitHere46","2328394splitHere46","ClassA<ClassBType>"
"3792splitHere46","2328394splitHere46","public abstract class ClassA<ClassBType extends ClassB> {<newline46mondego>    public void method(ClassB type) {<newline46mondego>        type.myClassA = this; <newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public abstract class ClassB {<newline46mondego>    ClassA<? extends ClassB> myClassA;<newline46mondego><newline46mondego>    private void testMethod() {<newline46mondego>        myClassA.method(this);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3793splitHere46","2328440splitHere46","@ModelAttribute"
"3794splitHere46","2328440splitHere46","@ModelAttribute(<doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>public Foo getFoo(HttpServletRequest request) {<newline46mondego>    Foo foo = new Foo();<newline46mondego>    foo.setIp(request.getRemoteAddr());<newline46mondego>    return foo;<newline46mondego>}<newline46mondego><newline46mondego>@InitBinder(<doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>public void initBinder(WebDataBinder binder) {<newline46mondego>    binder.setDisallowedFields(<doubleQuotes46>ip<doubleQuotes46>); // Don't allow user to override the value<newline46mondego>}<newline46mondego>"
"3795splitHere46","2328440splitHere46","@InitBinder"
"3796splitHere46","2328440splitHere46","@InitBinder(<doubleQuotes46>foo<doubleQuotes46>)<newline46mondego>public void initBinder(WebDataBinder binder, HttpServletRequest request) {<newline46mondego>    binder.setDisallowedFields(<doubleQuotes46>ip<doubleQuotes46>); // Don't allow user to override the value<newline46mondego>    ((Foo) binder.getTarget()).setIp(request.getRemoteAddr());<newline46mondego>}<newline46mondego>"
"3797splitHere46","2328502splitHere46","StringBuilder"
"3798splitHere46","2328502splitHere46","StringBuffer"
"3799splitHere46","2328502splitHere46","append"
"3800splitHere46","2328749splitHere46","readLine()"
"3801splitHere46","2328749splitHere46","String nextLine;<newline46mondego>while ((nextLine = inputReader.readLine()) != null){<newline46mondego>if (nextLine.equals(stringToCheck)) {<newline46mondego>    //do something<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3802splitHere46","2328749splitHere46","stringToCheck"
"3803splitHere46","2329035splitHere46","int multiply(int a, int b) {<newline46mondego>"
"3804splitHere46","2329035splitHere46","return a * b;<newline46mondego>"
"3805splitHere46","2329035splitHere46","}<newline46mondego>"
"3806splitHere46","2329035splitHere46","int multiply(int a, int b) {<newline46mondego>    return a * b;<newline46mondego>}<newline46mondego>"
"3807splitHere46","2329216splitHere46","toString"
"3808splitHere46","2329216splitHere46","toString"
"3809splitHere46","2329216splitHere46","Person"
"3810splitHere46","2329216splitHere46","Date"
"3811splitHere46","2329789splitHere46","String replaceFirstFrom(String str, int from, String regex, String replacement)<newline46mondego>{<newline46mondego>    String prefix = str.substring(0, from);<newline46mondego>    String rest = str.substring(from);<newline46mondego>    rest = rest.replaceFirst(regex, replacement);<newline46mondego>    return prefix+rest;<newline46mondego>}<newline46mondego><newline46mondego>// or<newline46mondego>s.substring(0,start) +  s.substring(start).replaceFirst(search, replace);<newline46mondego>"
"3812splitHere46","2329875splitHere46","-classpath"
"3813splitHere46","2329875splitHere46","JUnitCore"
"3814splitHere46","2329875splitHere46","Test1"
"3815splitHere46","2329875splitHere46","JUnitCore"
"3816splitHere46","2329875splitHere46","Test1"
"3817splitHere46","2329875splitHere46","java -classpath <jar-file1.jar>;<jar-file2.jar> org.junit.runner.JUnitCore Tester.GUI.api.Test1<newline46mondego>"
"3818splitHere46","2329875splitHere46","Test1"
"3819splitHere46","2329875splitHere46","<project>/bin"
"3820splitHere46","2329875splitHere46","Tester/GUI/api"
"3821splitHere46","2329875splitHere46","Test1.class"
"3822splitHere46","2329875splitHere46","api"
"3823splitHere46","2329875splitHere46","Tester/GUI/api"
"3824splitHere46","2330230splitHere46","print"
"3825splitHere46","2330230splitHere46","Graphics"
"3826splitHere46","2330259splitHere46","Connection#getMetaData()"
"3827splitHere46","2330259splitHere46","DatabaseMetaData"
"3828splitHere46","2330339splitHere46","import gnu.trove.iterator.TIntIntIterator;<newline46mondego>import gnu.trove.map.TIntIntMap;<newline46mondego>import gnu.trove.map.hash.TIntIntHashMap;<newline46mondego>import gnu.trove.procedure.TIntIntProcedure;<newline46mondego>import gnu.trove.set.TIntSet;<newline46mondego>import gnu.trove.set.hash.TIntHashSet;<newline46mondego><newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>import org.apache.commons.math.MathException;<newline46mondego>import org.apache.commons.math.stat.inference.OneWayAnova;<newline46mondego>import org.apache.commons.math.stat.inference.OneWayAnovaImpl;<newline46mondego>import org.apache.commons.math.stat.inference.TestUtils;<newline46mondego><newline46mondego><newline46mondego>public class TestMath {<newline46mondego>    private static final double SIGNIFICANCE_LEVEL = 0.001; // 99.9%<newline46mondego><newline46mondego>    public static void main(String[] args) throws MathException {<newline46mondego>        double[][] observations = {<newline46mondego>           {150.0, 200.0, 180.0, 230.0, 220.0, 250.0, 230.0, 300.0, 190.0 },<newline46mondego>           {200.0, 240.0, 220.0, 250.0, 210.0, 190.0, 240.0, 250.0, 190.0 },<newline46mondego>           {100.0, 130.0, 150.0, 180.0, 140.0, 200.0, 110.0, 120.0, 150.0 },<newline46mondego>           {200.0, 230.0, 150.0, 230.0, 240.0, 200.0, 210.0, 220.0, 210.0 },<newline46mondego>           {200.0, 230.0, 150.0, 180.0, 140.0, 200.0, 110.0, 120.0, 150.0 }<newline46mondego>        };<newline46mondego><newline46mondego>        final List<double[]> classes = new ArrayList<double[]>();<newline46mondego>        for (int i=0; i<observations.length; i++) {<newline46mondego>            classes.add(observations[i]);<newline46mondego>        }<newline46mondego><newline46mondego>        OneWayAnova anova = new OneWayAnovaImpl();<newline46mondego>//      double fStatistic = anova.anovaFValue(classes); // F-value<newline46mondego>//      double pValue = anova.anovaPValue(classes);     // P-value<newline46mondego><newline46mondego>        boolean rejectNullHypothesis = anova.anovaTest(classes, SIGNIFICANCE_LEVEL);<newline46mondego>        System.out.println(<doubleQuotes46>reject null hipothesis <doubleQuotes46> + (100 - SIGNIFICANCE_LEVEL * 100) + <doubleQuotes46>% = <doubleQuotes46> + rejectNullHypothesis);<newline46mondego><newline46mondego>        // differences are found, so make t-tests<newline46mondego>        if (rejectNullHypothesis) {<newline46mondego>            TIntSet aux = new TIntHashSet();<newline46mondego>            TIntIntMap fraud = new TIntIntHashMap();<newline46mondego><newline46mondego>            // i vs j unpaired t-tests - O(n^2)<newline46mondego>            for (int i=0; i<observations.length; i++) {<newline46mondego>                for (int j=i+1; j<observations.length; j++) {<newline46mondego>                    boolean different = TestUtils.tTest(observations[i], observations[j], SIGNIFICANCE_LEVEL);<newline46mondego>                    if (different) {<newline46mondego>                        if (!aux.add(i)) {<newline46mondego>                            if (fraud.increment(i) == false) {<newline46mondego>                                fraud.put(i, 1);<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                        if (!aux.add(j)) {<newline46mondego>                            if (fraud.increment(j) == false) {<newline46mondego>                                fraud.put(j, 1);<newline46mondego>                            }<newline46mondego>                        }<newline46mondego>                    }           <newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            // TIntIntMap is sorted by value<newline46mondego>            final int max = fraud.get(0);<newline46mondego>            // Keep only those with a highest degree<newline46mondego>            fraud.retainEntries(new TIntIntProcedure() {<newline46mondego>                @Override<newline46mondego>                public boolean execute(int a, int b) {<newline46mondego>                    return b != max;<newline46mondego>                }<newline46mondego>            });<newline46mondego><newline46mondego>            // If more than half of the elements are different<newline46mondego>            // then they are not really different (?)<newline46mondego>            if (fraud.size() > observations.length / 2) {<newline46mondego>                fraud.clear();<newline46mondego>            }<newline46mondego><newline46mondego>            // output<newline46mondego>            TIntIntIterator it = fraud.iterator();<newline46mondego>            while (it.hasNext()) {<newline46mondego>                it.advance();<newline46mondego>                System.out.println(<doubleQuotes46>Element <doubleQuotes46> + it.key() + <doubleQuotes46> has significant differences<doubleQuotes46>);             <newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3829splitHere46","2330399splitHere46","Properties"
"3830splitHere46","2330413splitHere46","hibernate.properties"
"3831splitHere46","2330584splitHere46","public void close() throws IOException {<newline46mondego>}<newline46mondego>"
"3832splitHere46","2330584splitHere46","ByteArrayOutputStream"
"3833splitHere46","2330697splitHere46","init()"
"3834splitHere46","2330697splitHere46","Sync"
"3835splitHere46","2330697splitHere46","setXYZ()"
"3836splitHere46","2330697splitHere46","SSH"
"3837splitHere46","2330697splitHere46","knownHosts"
"3838splitHere46","2330697splitHere46","Project"
"3839splitHere46","2330697splitHere46","init()"
"3840splitHere46","2330697splitHere46","init()"
"3841splitHere46","2330697splitHere46","execute()"
"3842splitHere46","2330697splitHere46","execute()"
"3843splitHere46","2330849splitHere46","Integer i = 5;   // i is an object but has a primitive value. <newline46mondego>"
"3844splitHere46","2330899splitHere46","i"
"3845splitHere46","2330899splitHere46","(i+1) % 10"
"3846splitHere46","2330899splitHere46","i % 10"
"3847splitHere46","2330899splitHere46","info[i]"
"3848splitHere46","2330899splitHere46","i"
"3849splitHere46","2330899splitHere46","int[] info = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };<newline46mondego>for (int i : info) {<newline46mondego>    if (i % 10 == 0)<newline46mondego>        System.out.println(i);<newline46mondego>    else<newline46mondego>        System.out.println(i + <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"3850splitHere46","2330899splitHere46","int[] info = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };<newline46mondego>for (int i : info) {<newline46mondego>    System.out.println(i + (i % 10 == 0 ? <doubleQuotes46><doubleQuotes46> : <doubleQuotes46>, <doubleQuotes46>));<newline46mondego>}<newline46mondego>"
"3851splitHere46","2330990splitHere46","DateFormat"
"3852splitHere46","2330990splitHere46","setLenient"
"3853splitHere46","2330990splitHere46","fmt.setLenient(false);<newline46mondego>"
"3854splitHere46","2331068splitHere46","@MapKey"
"3855splitHere46","2331068splitHere46","@MapKey"
"3856splitHere46","2331068splitHere46","@javax.persistence.OneToMany(cascade = CascadeType.ALL)<newline46mondego>@javax.persistence.MapKey(name = <doubleQuotes46>name<doubleQuotes46>)<newline46mondego>private Map<String, Person> nameToPerson = new HashMap<String, Person>();<newline46mondego>"
"3857splitHere46","2331112splitHere46","while (iter.hasNext()) {<newline46mondego>    Object obj = iter.next();<newline46mondego>    if (obj instanceof Something)<newline46mondego>        return (Something)obj;<newline46mondego>}<newline46mondego>return null;<newline46mondego>"
"3858splitHere46","2331112splitHere46","for (Object o : yourList)<newline46mondego>    if (o instanceof Something)<newline46mondego>        return (Something)o<newline46mondego>return null;<newline46mondego>"
"3859splitHere46","2331217splitHere46","File newlyUploadedFile = new File(<doubleQuotes46>D:\\<doubleQuotes46> + fileName);<newline46mondego>"
"3860splitHere46","2331217splitHere46","newlyUploadedFile.exists();<newline46mondego>"
"3861splitHere46","2331514splitHere46","for(int i = 0; i < array.length; i++)<newline46mondego>{<newline46mondego>    System.out.println(array[i]);<newline46mondego>}<newline46mondego>"
"3862splitHere46","2331514splitHere46","for(String value : array)<newline46mondego>{<newline46mondego>    System.out.println(value);<newline46mondego>}<newline46mondego>"
"3863splitHere46","2331514splitHere46","index = 0;<newline46mondego><newline46mondego>while(index < myArray.length)<newline46mondego>{<newline46mondego>  system.out.println(myArray[index]);<newline46mondego>  index++;<newline46mondego>}<newline46mondego>"
"3864splitHere46","2331518splitHere46","SimpleDateFormat"
"3865splitHere46","2331518splitHere46","Calendar"
"3866splitHere46","2331518splitHere46","DateFormat df = new SimpleDateFormat(<doubleQuotes46>dd MM yyyy<doubleQuotes46>);<newline46mondego>Date date = df.parse(<doubleQuotes46>02 26 1991<doubleQuotes46>);<newline46mondego>Calendar cal = Calendar.getInstance();<newline46mondego>cal.setTime(date);<newline46mondego>"
"3867splitHere46","2331518splitHere46","Calendar cal = new GregorianCalendar();<newline46mondego>"
"3868splitHere46","2331578splitHere46","import java.util.*;<newline46mondego><newline46mondego>class Randoms {<newline46mondego>  public static void main(String[] args) {<newline46mondego>    List<Integer> randoms = new ArrayList<Integer>();<newline46mondego>    Random randomizer = new Random();<newline46mondego>    for(int i = 0; i < 8; ) {<newline46mondego>      int r = randomizer.nextInt(8) + 1;<newline46mondego>      if(!randoms.contains(r)) {<newline46mondego>        randoms.add(r);<newline46mondego>        ++i;<newline46mondego>      }<newline46mondego>    }<newline46mondego>    List<Integer> clonedList = new ArrayList<Integer>();<newline46mondego>    clonedList.addAll(randoms);<newline46mondego>    Collections.shuffle(clonedList);<newline46mondego><newline46mondego>    int[][] cards = new int[8][];<newline46mondego>    for(int i = 0; i < 8; ++i) {<newline46mondego>      cards[i] = new int[]{ randoms.get(i), clonedList.get(i) };<newline46mondego>    }<newline46mondego><newline46mondego>    for(int i = 0; i < 8; ++i) {<newline46mondego>      System.out.println(cards[i][0] + <doubleQuotes46> <doubleQuotes46> + cards[i][1]);<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"3869splitHere46","2331578splitHere46","1 2<newline46mondego>8 6<newline46mondego>4 3<newline46mondego>3 7<newline46mondego>2 8<newline46mondego>6 1<newline46mondego>5 5<newline46mondego>7 4<newline46mondego>"
"3870splitHere46","2331705splitHere46","<service class=<doubleQuotes46>jrunx.logger.ConsoleLogEventHandler<doubleQuotes46> name=<doubleQuotes46>:service=ConsoleLogEventHandler<doubleQuotes46> /><newline46mondego>"
"3871splitHere46","2331705splitHere46","<attribute name=<doubleQuotes46>rotationSize<doubleQuotes46>>200k</attribute><newline46mondego>    <attribute name=<doubleQuotes46>rotationFiles<doubleQuotes46>>3</attribute><newline46mondego>    <!-- Use heading to specify an alternate log heading for system event log. --><newline46mondego>    <!-- EXAMPLE: <attribute name=<doubleQuotes46>heading<doubleQuotes46>># Created by JRun on {date MM/dd HH:mm:ss}</attribute> --><newline46mondego>    <attribute name=<doubleQuotes46>closeDelay<doubleQuotes46>>5000</attribute><newline46mondego>    <attribute name=<doubleQuotes46>deleteOnExit<doubleQuotes46>>false</attribute><newline46mondego>"
"3872splitHere46","2331767splitHere46","Timer"
"3873splitHere46","2331767splitHere46","TimerTask"
"3874splitHere46","2331767splitHere46","public class Alarm {<newline46mondego>    Timer _timer;<newline46mondego><newline46mondego>    public Alarm() {<newline46mondego><newline46mondego>        // Create a Date corresponding to 10:30:00 AM today.<newline46mondego>        Calendar calendar = Calendar.getInstance();<newline46mondego>        calendar.set(Calendar.HOUR_OF_DAY, 10);<newline46mondego>        calendar.set(Calendar.MINUTE, 30);<newline46mondego>        calendar.set(Calendar.SECOND, 0);<newline46mondego><newline46mondego>        Date alarmTime = calendar.getTime();<newline46mondego><newline46mondego>        _timer = new Timer();<newline46mondego>        _timer.schedule(new AlarmTask(), alarmTime);<newline46mondego>    }<newline46mondego><newline46mondego>    class AlarmTask extends TimerTask {<newline46mondego>        /**<newline46mondego>         * Called on a background thread by Timer<newline46mondego>         */<newline46mondego>        public void run() {<newline46mondego>            // Do your work here; it's 10:30 AM!<newline46mondego><newline46mondego>            // If you don't want the alarm to go off again<newline46mondego>            // tomorrow (etc), cancel the timer<newline46mondego>            timer.cancel();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"3875splitHere46","2331805splitHere46","-d64"
"3876splitHere46","2331805splitHere46","java -d64 -Xmx2g weka.gui.explorer.Explorer<newline46mondego>"
"3877splitHere46","2331805splitHere46","mmap"
"3878splitHere46","2331898splitHere46","ResultSet rs = statement.execute();<newline46mondego>if (!rs.next()){<newline46mondego>//ResultSet is empty<newline46mondego>}<newline46mondego>"
"3879splitHere46","2332110splitHere46","logger.error(<doubleQuotes46>An error occurred<doubleQuotes46>, exception);<newline46mondego>"
"3880splitHere46","2332110splitHere46","log.error(<doubleQuotes46>Message<doubleQuotes46>, exception);<newline46mondego>"
"3881splitHere46","2332110splitHere46","java.util.logging"
"3882splitHere46","2332110splitHere46","logger.log(Level.SEVERE, <doubleQuotes46>Message<doubleQuotes46>, exception);<newline46mondego>"
"3883splitHere46","2332168splitHere46","public interface Processor {<newline46mondego>   void execute(NotificationListener listener);<newline46mondego><newline46mondego>    interface NotificationListener {<newline46mondego>        void processingCompleted();<newline46mondego>    }  }<newline46mondego>"
"3884splitHere46","2332317splitHere46","int i;<newline46mondego>int a;<newline46mondego><newline46mondego>for (i = 1; i <= 5; i++) {<newline46mondego>  for (a = i;a<=i+3;a++) {<newline46mondego>    System.out.print(a);<newline46mondego>  }<newline46mondego>  System.out.println();<newline46mondego>}<newline46mondego>"
"3885splitHere46","2332361splitHere46","public static void main(String[] args){<newline46mondego>    Handler fh = new FileHandler(<doubleQuotes46>%t/wombat.log<doubleQuotes46>);<newline46mondego>    Logger.getLogger(<doubleQuotes46><doubleQuotes46>).addHandler(fh);<newline46mondego>    Logger.getLogger(<doubleQuotes46>com.wombat<doubleQuotes46>).setLevel(<doubleQuotes46>com.wombat<doubleQuotes46>,Level.FINEST);<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3886splitHere46","2332370splitHere46","getProxyInformation()"
"3887splitHere46","2332370splitHere46","hibernate.bytecode.provider=javassist<newline46mondego>"
"3888splitHere46","2332370splitHere46","hibernate.bytecode.provider=cglib<newline46mondego>"
"3889splitHere46","2332370splitHere46","<WHERE IS YOUR JBOSS>\server\default\deploy\ejb3.deployer\META-INF\ persistence.properties<newline46mondego>"
"3890splitHere46","2332422splitHere46","import java.text.*;<newline46mondego>import java.util.*;<newline46mondego>System.out.println(new SimpleDateFormat().format(new Date(f.lastModified())));<newline46mondego>"
"3891splitHere46","2332575splitHere46","<newline46mondego>// k is the number to display<newline46mondego>//a[][] is the array</p><newline46mondego><newline46mondego><p>public static void Shuffles(int k, int[][]a)<newline46mondego>{<newline46mondego>    for (int i =0; i<4;i++)<newline46mondego>    {<newline46mondego>        for (int j=0;j<4;j++)<newline46mondego>        {<newline46mondego>            if(a[i][j] == k)<newline46mondego>            {<newline46mondego>                System.out.print(a[i][j]);<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                System.out.print(<doubleQuotes46>*<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            System.out.print(<doubleQuotes46> <doubleQuotes46>);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego></pre>"
"3892splitHere46","2332581splitHere46","ExecutorService"
"3893splitHere46","2332581splitHere46","ExecutorService"
"3894splitHere46","2332581splitHere46","BlockingQueue"
"3895splitHere46","2332581splitHere46","final ExecutorService producers = Executors.newFixedThreadPool(100);<newline46mondego>final ExecutorService consumers = Executors.newFixedThreadPool(100);<newline46mondego>while (/* has more work */) {<newline46mondego>  producers.submit(...);<newline46mondego>}<newline46mondego>producers.shutdown();<newline46mondego>producers.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);<newline46mondego>consumers.shutdown();<newline46mondego>consumers.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);<newline46mondego>"
"3896splitHere46","2332581splitHere46","producers"
"3897splitHere46","2332581splitHere46","consumers"
"3898splitHere46","2332583splitHere46","new ServletFileUpload()"
"3899splitHere46","2332583splitHere46","setFileItemFactory()"
"3900splitHere46","2332583splitHere46","// Create a factory for disk-based file items<newline46mondego>FileItemFactory factory = new DiskFileItemFactory();<newline46mondego><newline46mondego>// Create a new file upload handler<newline46mondego>ServletFileUpload upload = new ServletFileUpload(factory);<newline46mondego>"
"3901splitHere46","2332583splitHere46","ServletFileUpload upload = new ServletFileUpload();<newline46mondego>FileItemIterator iter = upload.getItemIterator(request);<newline46mondego>while (iter.hasNext()) {<newline46mondego>    FileItemStream item = iter.next();<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3902splitHere46","2332665splitHere46","-server<newline46mondego>-Xms256m<newline46mondego>-Xmx748m<newline46mondego>-XX:MaxPermSize=128m<newline46mondego><newline46mondego>-verbose:gc<newline46mondego>-XX:+PrintGCTimeStamps<newline46mondego>-Xloggc:/tmp/gc.log<newline46mondego>-XX:+PrintHeapAtGC<newline46mondego>-XX:+PrintGCDetails<newline46mondego>-XX:+HeapDumpOnOutOfMemoryError<newline46mondego>-XX:HeapDumpPath=<doubleQuotes46>/tmp<doubleQuotes46><newline46mondego><newline46mondego>-XX:+UseParallelGC<newline46mondego>-XX:-UseGCOverheadLimit<newline46mondego><newline46mondego># Following options just to remote monitoring with jconsole, useful to see JVM behaviour at runtime<newline46mondego>-Dcom.sun.management.jmxremote<newline46mondego>-Dcom.sun.management.jmxremote.port=12345<newline46mondego>-Dcom.sun.management.jmxremote.authenticate=false<newline46mondego>-Dcom.sun.management.jmxremote.ssl=false<newline46mondego>-Djava.rmi.server.hostname=MyHost<newline46mondego>"
"3903splitHere46","2332665splitHere46","-XX:+HeapDumpOnOutOfMemoryError=<doubleQuotes46>/tmp<doubleQuotes46><newline46mondego>"
"3904splitHere46","2332665splitHere46","-XX:+HeapDumpOnOutOfMemoryError<newline46mondego>-XX:HeapDumpPath=<doubleQuotes46>/tmp<doubleQuotes46><newline46mondego>"
"3905splitHere46","2332665splitHere46","-server -XX:+UseParallelGC -XX:-UseGCOverheadLimit"
"3906splitHere46","2332798splitHere46","InputStream"
"3907splitHere46","2332798splitHere46","OutputStream"
"3908splitHere46","2332798splitHere46","Flushable"
"3909splitHere46","2332798splitHere46","Flushable"
"3910splitHere46","2332836splitHere46","<filter><newline46mondego>        <filter-name>UrlRewriteFilter</filter-name><newline46mondego>        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class><newline46mondego></filter><newline46mondego>"
"3911splitHere46","2332836splitHere46","<rule><newline46mondego>    <from>offers.html</from><newline46mondego>    <to>offers.jsp</to>     <newline46mondego></rule><newline46mondego>"
"3912splitHere46","2333074splitHere46","new File('.').getCanonicalPath();<newline46mondego>"
"3913splitHere46","2333130splitHere46","sess.createCriteria(A.class)<newline46mondego>    .createCriteria(<doubleQuotes46>b<doubleQuotes46>)<newline46mondego>    .createCriteria(<doubleQuotes46>c<doubleQuotes46>)<newline46mondego>    .setProjection(Projections.projectionList()<newline46mondego>    .add(Projections.groupProperty(<doubleQuotes46>s<doubleQuotes46>), <doubleQuotes46>string<doubleQuotes46>)<newline46mondego>    .list()<newline46mondego>    .size()<newline46mondego>"
"3914splitHere46","2333130splitHere46","createCriteria()"
"3915splitHere46","2333173splitHere46","### Hibernate logging configuration ###  <newline46mondego><newline46mondego>### Log everything (a lot of information, but very useful for troubleshooting) ###  <newline46mondego>#log4j.logger.org.hibernate=info  <newline46mondego><newline46mondego>### Log HQL and SQL ASTs during query parsing ###  <newline46mondego>log4j.logger.org.hibernate.hql.ast.AST=DEBUG, SQL_APPENDER  <newline46mondego>log4j.additivity.org.hibernate.hql.ast.AST=false  <newline46mondego><newline46mondego>### log just the SQL  <newline46mondego>log4j.logger.org.hibernate.SQL=DEBUG, SQL_APPENDER  <newline46mondego>log4j.additivity.org.hibernate.SQL=false  <newline46mondego><newline46mondego>### log JDBC bind parameters. Very userfull, when debug parameterized queries ###  <newline46mondego>log4j.logger.org.hibernate.type=TRACE, SQL_APPENDER  <newline46mondego>log4j.additivity.org.hibernate.type=false  <newline46mondego><newline46mondego>### log schema export/update ###  <newline46mondego>#log4j.logger.org.hibernate.tool.hbm2ddl=info  <newline46mondego><newline46mondego>### log HQL parse trees  <newline46mondego>#log4j.logger.org.hibernate.hql=debug  <newline46mondego><newline46mondego>### log cache activity ###  <newline46mondego>#log4j.logger.org.hibernate.cache=info  <newline46mondego><newline46mondego>### log transaction activity  <newline46mondego>#log4j.logger.org.hibernate.transaction=debug  <newline46mondego><newline46mondego>### Log all JDBC resource acquisition  <newline46mondego>#log4j.logger.org.hibernate.jdbc=debug  <newline46mondego><newline46mondego>### enable the following line if you want to track down connection ###  <newline46mondego>### leakages when using DriverManagerConnectionProvider ###  <newline46mondego>#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace  <newline46mondego><newline46mondego>log4j.appender.SQL_APPENDER=org.apache.log4j.RollingFileAppender  <newline46mondego>log4j.appender.SQL_APPENDER.File=c\:/EC_sql.log<newline46mondego>log4j.appender.SQL_APPENDER.MaxFileSize=1000KB  <newline46mondego>log4j.appender.SQL_APPENDER.MaxBackupIndex=62  <newline46mondego>log4j.appender.SQL_APPENDER.layout=org.apache.log4j.PatternLayout  <newline46mondego>log4j.appender.SQL_APPENDER.layout.ConversionPattern=[%d] %5p [%t] (%F:%L) - %m%n<newline46mondego>"
"3916splitHere46","2333528splitHere46","DaoAuthenticationProvider"
"3917splitHere46","2333528splitHere46","UserDetailsService"
"3918splitHere46","2333528splitHere46","UserDetails"
"3919splitHere46","2333528splitHere46","AuthenticationProvider"
"3920splitHere46","2333528splitHere46","DaoAuthenticationProvider"
"3921splitHere46","2333528splitHere46","additionalAuthenticationChecks()"
"3922splitHere46","2333528splitHere46","DaoAuthenticationProvider"
"3923splitHere46","2333568splitHere46","<pre>"
"3924splitHere46","2333900splitHere46","/WEB-INF/lib"
"3925splitHere46","2333900splitHere46","<c:out>"
"3926splitHere46","2333900splitHere46","fn:escapeXml"
"3927splitHere46","2333900splitHere46","<input name=<doubleQuotes46>foo<doubleQuotes46> value=<doubleQuotes46><c:out value=<doubleQuotes46>${param.foo}<doubleQuotes46> /><doubleQuotes46>><newline46mondego>"
"3928splitHere46","2333900splitHere46","<input name=<doubleQuotes46>foo<doubleQuotes46> value=<doubleQuotes46>${fn:escapeXml(param.foo)}<doubleQuotes46>><newline46mondego>"
"3929splitHere46","2333900splitHere46","&"
"3930splitHere46","2333900splitHere46","&amp;amp;"
"3931splitHere46","2333900splitHere46","&amp;"
"3932splitHere46","2333900splitHere46","&amp;"
"3933splitHere46","2333900splitHere46","&"
"3934splitHere46","2333904splitHere46","JTable"
"3935splitHere46","2333904splitHere46","ResultSet"
"3936splitHere46","2333904splitHere46","JTable"
"3937splitHere46","2333904splitHere46","ResultSet"
"3938splitHere46","2333904splitHere46","ResultSet"
"3939splitHere46","2333921splitHere46","toXml(...)"
"3940splitHere46","2334051splitHere46","getResource(String)"
"3941splitHere46","2334051splitHere46","URL"
"3942splitHere46","2334051splitHere46","JFileChooser"
"3943splitHere46","2334145splitHere46","mvn -o clean"
"3944splitHere46","2334155splitHere46","java -cp nasa-top-secret.jar gov.nasa.RocketToMoon 2>&1 | grep -v codehaus<newline46mondego>"
"3945splitHere46","2334429splitHere46","location.hash"
"3946splitHere46","2334429splitHere46","location.href"
"3947splitHere46","2334429splitHere46","#%3C@%40"
"3948splitHere46","2334429splitHere46","#%3C@%40"
"3949splitHere46","2334429splitHere46","#<@@"
"3950splitHere46","2334429splitHere46","location.hash"
"3951splitHere46","2334429splitHere46","location.hash"
"3952splitHere46","2334429splitHere46","?"
"3953splitHere46","2334429splitHere46","#"
"3954splitHere46","2334429splitHere46","&"
"3955splitHere46","2334429splitHere46","%"
"3956splitHere46","2334429splitHere46","<"
"3957splitHere46","2334429splitHere46",">"
"3958splitHere46","2334429splitHere46","orderDetails/oid=12313378"
"3959splitHere46","2334765splitHere46","abstract"
"3960splitHere46","2334765splitHere46","impl a"
"3961splitHere46","2334765splitHere46","impl b"
"3962splitHere46","2334765splitHere46","abstract"
"3963splitHere46","2334765splitHere46","tests"
"3964splitHere46","2334765splitHere46","tests"
"3965splitHere46","2334765splitHere46","jar"
"3966splitHere46","2334765splitHere46","<build><newline46mondego>    <plugins><newline46mondego>        <plugin><newline46mondego>            <groupId>org.apache.maven.plugins</groupId><newline46mondego>            <artifactId>maven-jar-plugin</artifactId><newline46mondego>            <version>2.3</version><newline46mondego>            <executions><newline46mondego>                <execution><newline46mondego>                    <goals><newline46mondego>                        <goal>test-jar</goal><newline46mondego>                    </goals><newline46mondego>                </execution><newline46mondego>            </executions><newline46mondego>        </plugin><newline46mondego>"
"3967splitHere46","2334765splitHere46","test-jar"
"3968splitHere46","2334765splitHere46","<dependency><newline46mondego>        <groupId>foo</groupId><newline46mondego>        <artifactId>bar</artifactId><newline46mondego>        <version>${pom.version}</version><newline46mondego>        <type>test-jar</type><newline46mondego>        <scope>test</scope><newline46mondego>    </dependency><newline46mondego>"
"3969splitHere46","2334810splitHere46","public interface Gallery {<newline46mondego><newline46mondego>    int getNumberOfImages();<newline46mondego><newline46mondego>    //...<newline46mondego>}<newline46mondego>"
"3970splitHere46","2334810splitHere46","countXX()"
"3971splitHere46","2334925splitHere46","long"
"3972splitHere46","2334925splitHere46","int"
"3973splitHere46","2334925splitHere46","long"
"3974splitHere46","2334925splitHere46","long"
"3975splitHere46","2334925splitHere46","long ordinal = (long) c1.ordinal() << (14*3) | <newline46mondego>               (long) c2.ordinal() << (14*2) | <newline46mondego>               (long) c3.ordinal() <<    14  | <newline46mondego>               (long) c4.ordinal();<newline46mondego>"
"3976splitHere46","2334925splitHere46","long ordinal = (c1.ordinal() & 0x3FFFL) << (14*3) | <newline46mondego>               (c2.ordinal() & 0x3FFFL) << (14*2) | <newline46mondego>               (c3.ordinal() & 0x3FFFL) <<    14  | <newline46mondego>               (c4.ordinal() & 0x3FFFL);<newline46mondego>"
"3977splitHere46","2335118splitHere46","public String updateCurrent() {<newline46mondego>    FacesContext context = FacesContext.getCurrentInstance();<newline46mondego>    setCurrent((String) context.getExternalContext()<newline46mondego>         .getRequestParameterMap().get(<doubleQuotes46>current<doubleQuotes46>));<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"3978splitHere46","2335118splitHere46","<f:param>"
"3979splitHere46","2335387splitHere46","DB2Dialect"
"3980splitHere46","2335387splitHere46","import org.hibernate.dialect.DB2Dialect;<newline46mondego>import java.sql.Types;<newline46mondego><newline46mondego>public class FixedDB2Dialect extends DB2Dialect {<newline46mondego><newline46mondego>    public FixedDB2Dialect() {<newline46mondego>    super();<newline46mondego>    registerColumnType(Types.INTEGER, <doubleQuotes46>decimal($p)<doubleQuotes46>);<newline46mondego>    registerColumnType(Types.NUMERIC, <doubleQuotes46>decimal($p,$s)<doubleQuotes46>);<newline46mondego>    registerColumnType(Types.DECIMAL, <doubleQuotes46>decimal($p,$s)<doubleQuotes46>);<newline46mondego>    }<newline46mondego>} <newline46mondego>"
"3981splitHere46","2335449splitHere46","HttpServletResponse"
"3982splitHere46","2335449splitHere46","@RequestMapping(<doubleQuotes46>/search/**<doubleQuotes46>)  <newline46mondego>public Map searchWithSearchTerm(HttpServletRequest request) { <newline46mondego>    // Don't repeat a pattern<newline46mondego>    String pattern = (String)<newline46mondego>        request.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);  <newline46mondego><newline46mondego>    String searchTerm = new AntPathMatcher().extractPathWithinPattern(pattern, <newline46mondego>        request.getServletPath());<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"3983splitHere46","2335681splitHere46","Tools > Palette > Swing/AWT Components"
"3984splitHere46","2335681splitHere46","Refresh"
"3985splitHere46","2335859splitHere46","<newline46mondego><newline46mondego><newline46mondego>    <newline46mondego>    <newline46mondego>    <newline46mondego>    <newline46mondego>    <newline46mondego>    </p><newline46mondego><newline46mondego><pre><code><!-- **************** USAGE (DEFAULT) --><newline46mondego><target name=<doubleQuotes46>usage<doubleQuotes46>><newline46mondego>    <!-- echo detailed usage instructions here --><newline46mondego></target>   <newline46mondego><newline46mondego><newline46mondego><!-- ************************************************** --><newline46mondego><!-- ******************* WAS 4.0 WORKER TARGETS --><newline46mondego><target name=<doubleQuotes46>init<doubleQuotes46> depends=<doubleQuotes46>validenvironment<doubleQuotes46>><newline46mondego>    <tstamp/><newline46mondego>    <echo>Build of ${ant.project.name} started at ${TSTAMP} on ${TODAY} </echo><newline46mondego><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>inittomcat<doubleQuotes46>><newline46mondego>    <delete dir=<doubleQuotes46>tomcatdeploy<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tomcatdeploy<doubleQuotes46> /><newline46mondego></target>   <newline46mondego><target name=<doubleQuotes46>initapache<doubleQuotes46>><newline46mondego>    <delete dir=<doubleQuotes46>apacheconfig<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>apacheconfig<doubleQuotes46> /><newline46mondego></target>   <newline46mondego><newline46mondego><!-- validates that you've specified an environment (production, dev, staging etc.) from an allowed list --><newline46mondego><target name=<doubleQuotes46>validenvironment<doubleQuotes46>><newline46mondego>    <condition property=<doubleQuotes46>valid.environment<doubleQuotes46>><newline46mondego>        <or><newline46mondego>            <equals arg1=<doubleQuotes46>${penvironment}<doubleQuotes46> arg2=<doubleQuotes46>dev<doubleQuotes46> /><newline46mondego>            <equals arg1=<doubleQuotes46>${penvironment}<doubleQuotes46> arg2=<doubleQuotes46>qa<doubleQuotes46> /><newline46mondego>            <equals arg1=<doubleQuotes46>${penvironment}<doubleQuotes46> arg2=<doubleQuotes46>staging<doubleQuotes46> /><newline46mondego>            <equals arg1=<doubleQuotes46>${penvironment}<doubleQuotes46> arg2=<doubleQuotes46>prod<doubleQuotes46> /><newline46mondego>        </or><newline46mondego>    </condition><newline46mondego>    <fail message=<doubleQuotes46>Invalid target ${penvironment}.<doubleQuotes46>  unless=<doubleQuotes46>valid.environment<doubleQuotes46> /><newline46mondego></target><newline46mondego><newline46mondego><!-- validates that you've specified a target server to deploy to. Only checks to see if the propery is set, not actual values --><newline46mondego><target name=<doubleQuotes46>validserver<doubleQuotes46>><newline46mondego>    <condition property=<doubleQuotes46>valid.server<doubleQuotes46>><newline46mondego>        <isset property=<doubleQuotes46>pserver<doubleQuotes46> /><newline46mondego>    </condition><newline46mondego>    <fail message=<doubleQuotes46>Invalid server ${pserver}. You must specifiy a server for this target.<doubleQuotes46>  unless=<doubleQuotes46>valid.server<doubleQuotes46> /><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>initwar<doubleQuotes46>><newline46mondego>    <delete dir=<doubleQuotes46>tmp/war<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/WEB-INF<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/WEB-INF/classes<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/WEB-INF/lib<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/tags<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/images<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/javascript<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/html<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/war/components<doubleQuotes46> /><newline46mondego></target>   <newline46mondego><newline46mondego><target name=<doubleQuotes46>war<doubleQuotes46> depends=<doubleQuotes46>initwar<doubleQuotes46> if=<doubleQuotes46>penvironment<doubleQuotes46>><newline46mondego>    <echo>Compiling source files...</echo><newline46mondego><newline46mondego>    <ant antfile=<doubleQuotes46>build.xml<doubleQuotes46> dir=<doubleQuotes46>classes/<doubleQuotes46> target=<doubleQuotes46>compile<doubleQuotes46> inheritAll=<doubleQuotes46>false<doubleQuotes46> ><newline46mondego>        <property name=<doubleQuotes46>penvironment<doubleQuotes46> value=<doubleQuotes46>${penvironment}<doubleQuotes46> /><newline46mondego>    </ant><newline46mondego><newline46mondego>    <echo>Compile done.</echo><newline46mondego><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/WEB-INF/classes<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>classes/build<doubleQuotes46> includes=<doubleQuotes46>**/*.class<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/WEB-INF/controller_jsp<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>controller<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/WEB-INF<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>build<doubleQuotes46> includes=<doubleQuotes46>**/*.xsl<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/WEB-INF/lib<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>build/lib${penv}<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/html<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>html<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/components<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>components<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>root<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/pages<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>pages<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/tags<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>tags<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/images<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>images<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/javascript<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>javascript<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego><newline46mondego>    <!-- copy the web.xml for the target environment into the temp war directory --><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/war/WEB-INF/web.xml<doubleQuotes46> file=<doubleQuotes46>xonfig/$penvironment}.web.xml<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>    </copy><newline46mondego>    <!-- now replace all properties in the web.xml file with their values from ${penvironment}.properties --><newline46mondego>    <echo>Replacing all properties in the web.xml file with their values from ${penvironment}.properties</echo><newline46mondego>    <replace<newline46mondego>        file=<doubleQuotes46>tmp/war/WEB-INF/web.xml<doubleQuotes46><newline46mondego>        propertyFile=<doubleQuotes46>config/${penvironment}.properties<doubleQuotes46>><newline46mondego>        <replacefilter token=<doubleQuotes46>%%HOSTNAME%%<doubleQuotes46> property=<doubleQuotes46>webxml.hostname<doubleQuotes46> /><newline46mondego>    </replace><newline46mondego><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/war/WEB-INF/application.properties<doubleQuotes46> file=<doubleQuotes46>config/application.properties<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>    </copy><newline46mondego>    <!-- now replace all properties in the application.properties file with their values from ${penvironment}.properties --><newline46mondego>    <echo>Replacing all properties in the crm.properties file with their values from ${penvironment}.properties</echo><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/war/WEB-INF/application.properties<doubleQuotes46><newline46mondego>        propertyFile=<doubleQuotes46>build/${penvironment}.properties<doubleQuotes46>><newline46mondego>        <replacefilter token=<doubleQuotes46>%%HOSTNAME%%<doubleQuotes46> property=<doubleQuotes46>hostname<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%EMAILADDRESS%%<doubleQuotes46> property=<doubleQuotes46>emailaddress<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LOGFILE%%<doubleQuotes46>  property=<doubleQuotes46>logfile<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LOGLEVEL%%<doubleQuotes46> property=<doubleQuotes46>loglevel<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%DEFAULTPAGE%%<doubleQuotes46>  property=<doubleQuotes46>defaultpage<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%MAILSERVER%%<doubleQuotes46>   property=<doubleQuotes46>mailserver<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SUPPORTEDLANGUAGES%%<doubleQuotes46>   property=<doubleQuotes46>supportedlanguages<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPHOST%%<doubleQuotes46> property=<doubleQuotes46>ldaphost<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPHOSTBACKUP%%<doubleQuotes46>   property=<doubleQuotes46>ldaphostbackup<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPPORT%%<doubleQuotes46> property=<doubleQuotes46>ldapport<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPVER%%<doubleQuotes46>  property=<doubleQuotes46>ldapver<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPDC%%<doubleQuotes46>   property=<doubleQuotes46>ldapdc<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPPW%%<doubleQuotes46>   property=<doubleQuotes46>ldappw<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPUSERDC%%<doubleQuotes46>   property=<doubleQuotes46>ldapuserdc<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LDAPSEARCH%%<doubleQuotes46>   property=<doubleQuotes46>ldapsearch<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%DATASCHEMA%%<doubleQuotes46>  property=<doubleQuotes46>dataschema<doubleQuotes46> /><newline46mondego><newline46mondego>    </replace>      <newline46mondego><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/war/WEB-INF/navigation.properties<doubleQuotes46> file=<doubleQuotes46>config/${penvironment}.maxnavigation.properties<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>    </copy><newline46mondego><newline46mondego>    <copy todir=<doubleQuotes46>tmp/war/WEB-INF<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>config/bundle<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego><newline46mondego>    <!-- Create war file NOT USED right now as we're building this directly into the tomcat directory--><newline46mondego>    <!--jar jarfile=<doubleQuotes46>tmp/${penvironment}.war<doubleQuotes46> basedir=<doubleQuotes46>tmp/war<doubleQuotes46>  --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>buildtomcat<doubleQuotes46>  depends=<doubleQuotes46>war,inittomcat,validenvironment<doubleQuotes46> if=<doubleQuotes46>penvironment<doubleQuotes46>>        <newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}<doubleQuotes46> /><newline46mondego>    <delete><newline46mondego>        <fileset dir=<doubleQuotes46>tomcat/6.x/logs<doubleQuotes46> includes=<doubleQuotes46>**/*.log<doubleQuotes46>/><newline46mondego>    </delete><newline46mondego>    <copy todir=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>tomcat/6.x<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/tomcatdeploy/${ppenvironment}/tomcat/logs<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/webapps/${tomcat.contextroot}<doubleQuotes46> /><newline46mondego>    <copy todir=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/webapps/${tomcat.contextroot}<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>        <fileset dir=<doubleQuotes46>tmp/war<doubleQuotes46> includes=<doubleQuotes46>**/*.*<doubleQuotes46> /> <newline46mondego>    </copy><newline46mondego><newline46mondego>    <!-- now copy the tomcat config files --><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/context.xml<doubleQuotes46> overwrite=<doubleQuotes46>true<doubleQuotes46> file=<doubleQuotes46>config/context.xml<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>    </copy><newline46mondego>    <!-- now replace all variables in context.xml --><newline46mondego>    <replace <newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/context.xml<doubleQuotes46><newline46mondego>        token=<doubleQuotes46>%%JDBCNAME%%<doubleQuotes46> value=<doubleQuotes46>${context.jdbcname}<doubleQuotes46> /><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/context.xml<doubleQuotes46><newline46mondego>        token=<doubleQuotes46>%%JDBCUSER%%<doubleQuotes46> value=<doubleQuotes46>${context.jdbcuser}<doubleQuotes46> /><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/context.xml<doubleQuotes46><newline46mondego>        token=<doubleQuotes46>%%JDBCPASSWORD%%<doubleQuotes46> value=<doubleQuotes46>${context.jdbcpassword}<doubleQuotes46> /><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/context.xml<doubleQuotes46><newline46mondego>        token=<doubleQuotes46>%%JDBCDRIVER%%<doubleQuotes46> value=<doubleQuotes46>${context.jdbcdriver}<doubleQuotes46> /><newline46mondego>    <replace <newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/context.xml<doubleQuotes46><newline46mondego>        token=<doubleQuotes46>%%JDBCURL%%<doubleQuotes46> value=<doubleQuotes46>${context.jdbcurl}<doubleQuotes46> /><newline46mondego>    <!-- now replace all variables / ports in server.xml --><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/conf/server.xml<doubleQuotes46> overwrite=<doubleQuotes46>true<doubleQuotes46> file=<doubleQuotes46>config/server.xml<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46> ><newline46mondego>    </copy><newline46mondego>    <!-- deleted for this example --><newline46mondego><newline46mondego>    <!-- END replace all variables / ports in server.xml --><newline46mondego>    <!-- Now, replace CONTEXT in catalina.sh and catalina.bat --><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/bin/catalina.sh<doubleQuotes46><newline46mondego>        propertyFile=<doubleQuotes46>/config/${penvironment}.properties<doubleQuotes46>><newline46mondego>        <replacefilter token=<doubleQuotes46>%%CONTEXT%%<doubleQuotes46>  property=<doubleQuotes46>tomcat.contextroot<doubleQuotes46> /><newline46mondego>    </replace><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/tomcatdeploy/${penvironment}/tomcat/bin/catalina.bat<doubleQuotes46><newline46mondego>        propertyFile=<doubleQuotes46>/config/${penvironment}.properties<doubleQuotes46>><newline46mondego>        <replacefilter token=<doubleQuotes46>%%CONTEXT%%<doubleQuotes46>  property=<doubleQuotes46>tomcat.contextroot<doubleQuotes46> /><newline46mondego>    </replace><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>deployfullapplication<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46> ><newline46mondego>    <antcall target=<doubleQuotes46>deploytomcat<doubleQuotes46> /><newline46mondego>    <antcall target=<doubleQuotes46>deployapacheconfig<doubleQuotes46> /><newline46mondego>    <antcall target=<doubleQuotes46>restartapache<doubleQuotes46> /><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>deploytomcat<doubleQuotes46> depends=<doubleQuotes46>buildtomcat<doubleQuotes46> ><newline46mondego><newline46mondego>    <!-- zip the tomcatdeploy directoyr up --><newline46mondego>    <zip destfile=<doubleQuotes46>tmp/${penvironment}.zip<doubleQuotes46> basedir=<doubleQuotes46>tmp/tomcatdeploy<doubleQuotes46> /><newline46mondego>    <!-- now scp to the server --><newline46mondego>    <echo>Copying <doubleQuotes46>tmp/${penvironment}.zip<doubleQuotes46> to <doubleQuotes46>${webuser}@${pserver}:/opt/www<doubleQuotes46></echo><newline46mondego>    <scp remoteToDir=<doubleQuotes46>${webuser}@${pserver}:/opt/www<doubleQuotes46> file=<doubleQuotes46>tmp/${penvironment}.zip<doubleQuotes46> verbose=<doubleQuotes46>true<doubleQuotes46> failonerror=<doubleQuotes46>true<doubleQuotes46> trust=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    </scp>      <newline46mondego><newline46mondego>    <!-- now kill existing process on the server --><newline46mondego>        <antcall target=<doubleQuotes46>stoptomcat<doubleQuotes46> /><newline46mondego>    <!-- now archive the existing deployed application on the server to ${penvironment}.${currenttimestamp} --><newline46mondego>        <antcall target=<doubleQuotes46>archivetomcat<doubleQuotes46> /><newline46mondego>    <!-- now uncompress the zipped archive into the deployed location /opt/www/${penvironment} --><newline46mondego>        <antcall target=<doubleQuotes46>unzipremotetomcat<doubleQuotes46> /><newline46mondego>    <!-- now start the application --><newline46mondego>        <antcall target=<doubleQuotes46>starttomcat<doubleQuotes46> /><newline46mondego>    <!-- cool. thats it. good job. --><newline46mondego><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>restarttomcat<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46> ><newline46mondego>    <antcall target=<doubleQuotes46>stoptomcat<doubleQuotes46>/><newline46mondego>    <antcall target=<doubleQuotes46>starttomcat<doubleQuotes46>/><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>starttomcat<doubleQuotes46> unless=<doubleQuotes46>pnostart<doubleQuotes46> if=<doubleQuotes46>pserver<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46>><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>unzipremotetomcat<doubleQuotes46> if=<doubleQuotes46>pserver<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46>><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>archivetomcat<doubleQuotes46> if=<doubleQuotes46>pserver<doubleQuotes46>  depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46>><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>stoptomcat<doubleQuotes46> unless=<doubleQuotes46>pnokill<doubleQuotes46>  if=<doubleQuotes46>pserver<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46>><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>killtomcatprocessonecall<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46>><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><newline46mondego><target name=<doubleQuotes46>restartapache<doubleQuotes46> depends=<doubleQuotes46>validenvironment,validserver<doubleQuotes46> ><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>deployapacheconfig<doubleQuotes46>  depends=<doubleQuotes46>configapache,validserver<doubleQuotes46>><newline46mondego>    <!-- all the remote tasks have been deleted in this example.... just to get the idea of what to do. --><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>configapache<doubleQuotes46> if=<doubleQuotes46>penv<doubleQuotes46>  depends=<doubleQuotes46>init,validenvironment<doubleQuotes46>><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/apacheconfig<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/apacheconfig/vhosts.d<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/apacheconfig/ssl.crt<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/apacheconfig/ssl.key<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/apacheconfig/extra<doubleQuotes46> /><newline46mondego>    <mkdir dir=<doubleQuotes46>tmp/apacheconfig/passwords<doubleQuotes46> /><newline46mondego><newline46mondego>    <echo>Copying http base config files...</echo><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/apacheconfig/vhosts.d/${penvironment}.conf<doubleQuotes46> file=<doubleQuotes46>config/apache/vhosts/http.conf<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46>  /><newline46mondego><newline46mondego>    <echo>http only replace in http config file...</echo><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/apacheconfig/vhosts.d/${penvironment}.conf<doubleQuotes46><newline46mondego>        propertyFile=<doubleQuotes46>config/${penvironment}.properties<doubleQuotes46>><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SERVERADMIN%%<doubleQuotes46>  property=<doubleQuotes46>httpd.serveradmin<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LOGFILE%%<doubleQuotes46>  property=<doubleQuotes46>httpd.logfile<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%HOSTNAME%%<doubleQuotes46> property=<doubleQuotes46>httpd.hostname<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%ROOT%%<doubleQuotes46>     property=<doubleQuotes46>httpd.root<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%HOSTIP%%<doubleQuotes46>   value=<doubleQuotes46>*<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%PORT%%<doubleQuotes46>     value=<doubleQuotes46>80<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%PROTOCOL%%<doubleQuotes46> value=<doubleQuotes46>http<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSL%%<doubleQuotes46>      value=<doubleQuotes46>off<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSLCERT%%<doubleQuotes46>  value=<doubleQuotes46><doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSLKEY%%<doubleQuotes46>   value=<doubleQuotes46><doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSLCACERT%%<doubleQuotes46>    value=<doubleQuotes46><doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%CONTEXTROOT%%<doubleQuotes46>  property=<doubleQuotes46>tomcat.contextroot<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%AJPPORT%%<doubleQuotes46>  property=<doubleQuotes46>port.ajp13<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%DEFAULTPAGE%%<doubleQuotes46>  property=<doubleQuotes46>http.defaultpage<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%ERRORPAGE%%<doubleQuotes46>    property=<doubleQuotes46>http.errorpage<doubleQuotes46> /><newline46mondego>    </replace><newline46mondego>    <condition property=<doubleQuotes46>dossl<doubleQuotes46>><newline46mondego>        <and><newline46mondego>            <isset property=<doubleQuotes46>${penvironment}.ssl.ip<doubleQuotes46> /><newline46mondego>        </and><newline46mondego>    </condition><newline46mondego><newline46mondego>    <antcall target=<doubleQuotes46>apachessl<doubleQuotes46> /><newline46mondego><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>apachessl<doubleQuotes46> if=<doubleQuotes46>dossl<doubleQuotes46>><newline46mondego><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/apacheconfig/vhosts.d/${penvironment}.s.conf<doubleQuotes46> file=<doubleQuotes46>apache/vhosts/http.conf<doubleQuotes46>  preservelastmodified=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego><newline46mondego>    <echo>https only replace in https config file...</echo><newline46mondego>    <replace<newline46mondego>        encoding=<doubleQuotes46>ISO-8859-1<doubleQuotes46><newline46mondego>        file=<doubleQuotes46>tmp/apacheconfig/vhosts.d/${penvironment}.s.conf<doubleQuotes46><newline46mondego>        propertyFile=<doubleQuotes46>config/${penvironment}.properties<doubleQuotes46>><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SERVERADMIN%%<doubleQuotes46>  property=<doubleQuotes46>httpd.serveradmin<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%LOGFILE%%<doubleQuotes46>  property=<doubleQuotes46>httpd.logfile<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%HOSTNAME%%<doubleQuotes46> property=<doubleQuotes46>httpd.hostname<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%ROOT%%<doubleQuotes46>     property=<doubleQuotes46>httpd.root<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%PORT%%<doubleQuotes46>     value=<doubleQuotes46>443<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%PROTOCOL%%<doubleQuotes46> value=<doubleQuotes46>https<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSL%%<doubleQuotes46>      property=<doubleQuotes46>httpd.ssl<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSLCERT%%<doubleQuotes46>  property=<doubleQuotes46>https.sslcert<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSLKEY%%<doubleQuotes46>   property=<doubleQuotes46>https.sslkey<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%SSLCACERT%%<doubleQuotes46>    property=<doubleQuotes46>https.sslcacert<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%CONTEXTROOT%%<doubleQuotes46>  property=<doubleQuotes46>tomcat.contextroot<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%AJPPORT%%<doubleQuotes46>  property=<doubleQuotes46>port.ajp13<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%JKWORKER%%<doubleQuotes46> property=<doubleQuotes46>tomcat.jkworker<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%DEFAULTPAGE%%<doubleQuotes46>  property=<doubleQuotes46>http.defaultpage<doubleQuotes46> /><newline46mondego>        <replacefilter token=<doubleQuotes46>%%ERRORPAGE%%<doubleQuotes46>    property=<doubleQuotes46>http.errorpage<doubleQuotes46> /><newline46mondego>    </replace><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/apacheconfig/ssl.crt/${penvironment}.cert<doubleQuotes46> file=<doubleQuotes46>config/apache/ssl.crt/${penvironment}.cert<doubleQuotes46> failonerror=<doubleQuotes46>false<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46>  /><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/apacheconfig/ssl.crt/verisign.intermediate.cert<doubleQuotes46> file=<doubleQuotes46>config/apache/ssl.crt/verisign.intermediate.cert<doubleQuotes46> failonerror=<doubleQuotes46>false<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46>  /><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/apacheconfig/ssl.crt/network.solutions.ca.cert<doubleQuotes46> file=<doubleQuotes46>config/apache/ssl.crt/network.solutions.ca.cert<doubleQuotes46> failonerror=<doubleQuotes46>false<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46>  /><newline46mondego>    <copy tofile=<doubleQuotes46>tmp/apacheconfig/ssl.key/${penvironment}.key<doubleQuotes46> file=<doubleQuotes46>config/apache/ssl.key/${penvironment}.key<doubleQuotes46> failonerror=<doubleQuotes46>false<doubleQuotes46> preservelastmodified=<doubleQuotes46>true<doubleQuotes46>  /><newline46mondego></target><newline46mondego>"
"3986splitHere46","2336155splitHere46","final Predicate<name> bobRushPredicate = new Predicate<name>() {<newline46mondego>   public boolean apply(name n) {<newline46mondego>      return <doubleQuotes46>bob<doubleQuotes46>.equals(n.getMiddlename()) && <doubleQuotes46>rush<doubleQuotes46>.equal(n.getSurname());<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>final List<name> results = Iterables.filter(applicants, bobRushPredicate));<newline46mondego>"
"3987splitHere46","2336234splitHere46","List<MemoryPoolMXBean> memPoolBeans = ManagementFactory.getMemoryPoolMXBeans();<newline46mondego>for (MemoryPoolMXBean mpb : memPoolBeans) {<newline46mondego>    System.out.println(<doubleQuotes46>Memory Pool: <doubleQuotes46> + mpb.getName());<newline46mondego>}<newline46mondego>"
"3988splitHere46","2336234splitHere46","Map<String,String[]> env = new HashMap<String, String[]>();<newline46mondego>env.put( JMXConnector.CREDENTIALS, new String[]{<doubleQuotes46>user<doubleQuotes46>,<doubleQuotes46>pass<doubleQuotes46>} );<newline46mondego>JMXServiceURL address = new JMXServiceURL(<doubleQuotes46>service:rmi:///jndi/rmi://host:port/jmxrmi<doubleQuotes46>);<newline46mondego>JMXConnector connector = JMXConnectorFactory.connect(address,env);<newline46mondego>MBeanServerConnection mbs = connector.getMBeanServerConnection();<newline46mondego><newline46mondego>//get all mbeans<newline46mondego>Set<ObjectInstance> beans = mbs.queryMBeans(null,null);<newline46mondego><newline46mondego>for( ObjectInstance instance : beans )<newline46mondego>{<newline46mondego>    MBeanInfo info = mbs.getMBeanInfo( instance.getObjectName() );<newline46mondego>}<newline46mondego>"
"3989splitHere46","2336486splitHere46","### direct log messages to stdout ###<newline46mondego>log4j.appender.stdout=org.apache.log4j.ConsoleAppender<newline46mondego>log4j.appender.stdout.Target=System.out<newline46mondego>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout<newline46mondego>log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n<newline46mondego><newline46mondego>log4j.rootLogger=warn, stdout<newline46mondego>log4j.logger.org.hibernate=debug<newline46mondego>log4j.logger.org.hibernate.tool.hbm2ddl=debug<newline46mondego>"
"3990splitHere46","2336492splitHere46","<dependencies>"
"3991splitHere46","2336754splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>\\d+\\-[\\d|K]<doubleQuotes46>); //The string is the pattern<newline46mondego>Matcher m = p.matcher(whatYouWantToMatch);<newline46mondego>boolean b = m.matches();<newline46mondego>"
"3992splitHere46","2336895splitHere46","createXYLineChart"
"3993splitHere46","2336895splitHere46","<newline46mondego>        Marker threshold = new ValueMarker(80.0);<newline46mondego>        Hour hour1 = new Hour(18, 30, 6, 2005);<newline46mondego>        Hour hour2 = new Hour(20, 30, 6, 2005);<newline46mondego>        double millis1 = hour1.getFirstMillisecond();<newline46mondego>        double millis2 = hour2.getFirstMillisecond();<newline46mondego>        Marker cooling = new IntervalMarker(millis1, millis2);<newline46mondego>        cooling.setLabelOffsetType(LengthAdjustmentType.EXPAND);<newline46mondego>        cooling.setPaint(new Color(150, 150, 255));<newline46mondego>        cooling.setLabel(<doubleQuotes46>Automatic Cooling<doubleQuotes46>);<newline46mondego>        cooling.setLabelFont(new Font(<doubleQuotes46>SansSerif<doubleQuotes46>, Font.PLAIN, 11));<newline46mondego>        cooling.setLabelPaint(Color.blue);<newline46mondego>        cooling.setLabelAnchor(RectangleAnchor.TOP_LEFT);<newline46mondego>        cooling.setLabelTextAnchor(TextAnchor.TOP_RIGHT);<newline46mondego>        plot.addDomainMarker(cooling, Layer.BACKGROUND);<newline46mondego>"
"3994splitHere46","2336895splitHere46","IntervalMarker"
"3995splitHere46","2336895splitHere46","addDomainMarker"
"3996splitHere46","2336895splitHere46","RectangleAnchor"
"3997splitHere46","2337291splitHere46","public class JellyBeanResult extends GenericResult {}<newline46mondego><newline46mondego>public JellyBeanResult getJellyBeanReport();<newline46mondego>public GenericResult getChocolateBarReport();<newline46mondego>"
"3998splitHere46","2337291splitHere46","public class JellyBeanResult extends GenericResult {}<newline46mondego>public class ChocolateBarResult extends GenericResult {}<newline46mondego><newline46mondego>public JellyBeanResult getJellyBeanReport();<newline46mondego>public ChocolateBarResult getChocolateBarReport();<newline46mondego>"
"3999splitHere46","2337437splitHere46","faces-config.xml"
"4000splitHere46","2337437splitHere46","<el-resolver><newline46mondego>   org.springframework.web.jsf.el.SpringBeanFacesELResolver<newline46mondego></el-resolver><newline46mondego>"
"4001splitHere46","2337437splitHere46","request"
"4002splitHere46","2337437splitHere46","session"
"4003splitHere46","2337655splitHere46","HibernateAccessor"
"4004splitHere46","2337655splitHere46","spring.xml"
"4005splitHere46","2337655splitHere46","Session session = SessionFactoryUtils.getSession(<newline46mondego>            getSessionFactory(), getEntityInterceptor(), getJdbcExceptionTranslator());<newline46mondego>    SessionHolder sessionHolder = null;<newline46mondego>    try {<newline46mondego>        applyFlushMode(session, false);<newline46mondego>        sessionHolder = new SessionHolder(session);<newline46mondego>        TransactionSynchronizationManager.bindResource(getSessionFactory(), sessionHolder);<newline46mondego>        Transaction t = getSessionFactory().getCurrentSession().beginTransaction();<newline46mondego>        try {<newline46mondego><newline46mondego>            //execute your code here<newline46mondego><newline46mondego>            t.commit();<newline46mondego>        } catch (Exception e) {<newline46mondego>            t.rollback();<newline46mondego>            log.error(<doubleQuotes46>Error<doubleQuotes46>, e);<newline46mondego>        }<newline46mondego>        try {<newline46mondego>            flushIfNecessary(sessionHolder.getSession(), false);<newline46mondego>        }<newline46mondego>        catch (HibernateException ex) {<newline46mondego>            throw convertHibernateAccessException(ex);<newline46mondego>        }<newline46mondego>    } finally {<newline46mondego>        SessionFactoryUtils.closeSession(sessionHolder.getSession());<newline46mondego>        TransactionSynchronizationManager.unbindResource(getSessionFactory());<newline46mondego>    }<newline46mondego>"
"4006splitHere46","2337929splitHere46","A"
"4007splitHere46","2337929splitHere46","B"
"4008splitHere46","2337929splitHere46","A"
"4009splitHere46","2337929splitHere46","B"
"4010splitHere46","2337929splitHere46","B"
"4011splitHere46","2337929splitHere46","C"
"4012splitHere46","2337929splitHere46","<!-- Animation frames are AfadeOut01.png to AfadeOut03.png and BfadeIn01.png to BfadeIn03.png files inside the res/drawable/ folder,  --><newline46mondego> <animation-list android:id=<doubleQuotes46>selected<doubleQuotes46> android:oneshot=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <item android:drawable=<doubleQuotes46>@drawable/AfadeOut01<doubleQuotes46> android:duration=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego>    <item android:drawable=<doubleQuotes46>@drawable/BfadeIn01<doubleQuotes46> android:duration=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego>    <item android:drawable=<doubleQuotes46>@drawable/AfadeOut02<doubleQuotes46> android:duration=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego>    <item android:drawable=<doubleQuotes46>@drawable/BfadeIn02<doubleQuotes46> android:duration=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego>    <item android:drawable=<doubleQuotes46>@drawable/AfadeOut03<doubleQuotes46> android:duration=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego>    <item android:drawable=<doubleQuotes46>@drawable/BfadeIn03<doubleQuotes46> android:duration=<doubleQuotes46>50<doubleQuotes46> /><newline46mondego> </animation-list><newline46mondego>"
"4013splitHere46","2337929splitHere46","// Load the ImageView that will host the animation and<newline46mondego> // set its background to our AnimationDrawable XML resource.<newline46mondego> ImageView img = (ImageView)findViewById(/*resourceImageID e.g. AfadeOut03*/);<newline46mondego> img.setBackgroundResource(/*backgroundResource*/);<newline46mondego><newline46mondego> // note that this loads the resource from an XML file, but<newline46mondego> // instead of getting the resource from file you can generate<newline46mondego> // it from a single image by performing the required modifications<newline46mondego> // of the image and storing them in a resource.<newline46mondego><newline46mondego> // Get the background, which has been compiled to an AnimationDrawable object.<newline46mondego> AnimationDrawable frameAnimation = (AnimationDrawable) img.getBackground();<newline46mondego><newline46mondego> // Start the animation<newline46mondego> frameAnimation.setOneShot(true);// don't loop if not set in XML<newline46mondego> frameAnimation.start();<newline46mondego>"
"4014splitHere46","2337995splitHere46","public String handleRequest(HttpSession session) {<newline46mondego>    session.setAttribute(<doubleQuotes46>key<doubleQuotes46>, <doubleQuotes46>value<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4015splitHere46","2338080splitHere46","now.GetTime() - dateBirth.GetTime()"
"4016splitHere46","2338217splitHere46","@ManagedProperty"
"4017splitHere46","2338217splitHere46","@ManagedBean<newline46mondego>public class OtherBean implements Serializable {<newline46mondego><newline46mondego>    @ManagedProperty(value=<doubleQuotes46>#{userManagerBean}<doubleQuotes46>)<newline46mondego>    private UserManagerBean userManagerBean;<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4018splitHere46","2338217splitHere46","@PostConstruct"
"4019splitHere46","2338217splitHere46","@PostConstruct<newline46mondego>    public void init() {<newline46mondego>        userManagerBean.doStuff();<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>"
"4020splitHere46","2338285splitHere46","/WEB-INF/lib"
"4021splitHere46","2338285splitHere46","<%@ taglib prefix=<doubleQuotes46>c<doubleQuotes46> uri=<doubleQuotes46>http://java.sun.com/jsp/jstl/core<doubleQuotes46> %><newline46mondego>"
"4022splitHere46","2338285splitHere46","${}"
"4023splitHere46","2338285splitHere46","PageContext#findAttribute()"
"4024splitHere46","2338285splitHere46","${user.address.street}<newline46mondego>"
"4025splitHere46","2338285splitHere46","<%= pageContext.findAttrubute(<doubleQuotes46>user<doubleQuotes46>).getAddress().getStreet() %><newline46mondego>"
"4026splitHere46","2338285splitHere46","${user}"
"4027splitHere46","2338285splitHere46","${user.address}"
"4028splitHere46","2338285splitHere46","null"
"4029splitHere46","2338285splitHere46","null"
"4030splitHere46","2338285splitHere46","#{}"
"4031splitHere46","2338285splitHere46","<h:inputText name=<doubleQuotes46>foo<doubleQuotes46> value=<doubleQuotes46>#{bean.foo}<doubleQuotes46>><newline46mondego>"
"4032splitHere46","2338285splitHere46","pageContext.findAttribute(<doubleQuotes46>bean<doubleQuotes46>).setFoo(request.getParameter(<doubleQuotes46>foo<doubleQuotes46>));<newline46mondego>"
"4033splitHere46","2338388splitHere46","public class ImageServlet extends HttpServlet {<newline46mondego><newline46mondego>    private Image image;<newline46mondego><newline46mondego>    protected void doGet(HttpServletRequest request, HttpServletResponse response) {<newline46mondego>        this.image = imageDAO.find(request.getPathInfo()); // Not threadsafe!! image is been shared among all requests.<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4034splitHere46","2338388splitHere46","public class ImageServlet extends HttpServlet {<newline46mondego><newline46mondego>    protected void doGet(HttpServletRequest request, HttpServletResponse response) {<newline46mondego>        Image image = imageDAO.find(request.getPathInfo()); // Threadsafe.<newline46mondego>        // ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4035splitHere46","2338449splitHere46","criteria.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY)"
"4036splitHere46","2338750splitHere46","rt.jar"
"4037splitHere46","2338872splitHere46","new Properties(new FileInputStream(<doubleQuotes46>filename<doubleQuotes46> / new File(filename))"
"4038splitHere46","2338872splitHere46","Boolean isWindows = new Boolean(properties.getProperty(<doubleQuotes46>windows<doubleQuotes46>))"
"4039splitHere46","2338872splitHere46","String os = properties.getProperty(<doubleQuotes46>os<doubleQuotes46>)"
"4040splitHere46","2338872splitHere46","PropertyFile"
"4041splitHere46","2338872splitHere46","<replaceregexp file=<doubleQuotes46>blah.java<doubleQuotes46> match=<doubleQuotes46>public static final boolean WINDOWS = \<doubleQuotes46>(.*)\<doubleQuotes46><doubleQuotes46> replace=<doubleQuotes46>public static final boolean WINDOWS = \<doubleQuotes46><doubleQuotes46> + ${properties.windows} + <doubleQuotes46>\<doubleQuotes46><doubleQuotes46>  />"
"4042splitHere46","2338985splitHere46","int equi ( int[] A ) {<newline46mondego>    int equi = -1;<newline46mondego><newline46mondego>    long lower = 0;<newline46mondego>    long upper = 0;<newline46mondego>    foreach (int i in A)<newline46mondego>        upper += i;<newline46mondego><newline46mondego>    for (int i = 0; i < A.Length; i++)<newline46mondego>    {<newline46mondego>        upper -= A[i];<newline46mondego>        if (upper == lower)<newline46mondego>        {<newline46mondego>            equi = i;<newline46mondego>            break;<newline46mondego>        }<newline46mondego>        else<newline46mondego>            lower += A[i];<newline46mondego>    }<newline46mondego><newline46mondego>    return equi;<newline46mondego>}<newline46mondego>"
"4043splitHere46","2339196splitHere46","JDialog"
"4044splitHere46","2339196splitHere46","isPopupTrigger()"
"4045splitHere46","2339249splitHere46","main()"
"4046splitHere46","2339249splitHere46","public static void main(String[] args) {<newline46mondego>        Brochure b = new Brochure();<newline46mondego>        Course c = new Course();<newline46mondego>        c.id = <doubleQuotes46>cs501<doubleQuotes46>;<newline46mondego>        c.name = <doubleQuotes46>Software Engineering<doubleQuotes46>;<newline46mondego>        b.courses = new HashMap<String, Course>();<newline46mondego>        b.courses.put(c.id, c);<newline46mondego>        c = new Course() // You need to add this<newline46mondego>        c.id = <doubleQuotes46>cs519<doubleQuotes46>;<newline46mondego>        c.name = <doubleQuotes46>Network Security<doubleQuotes46>;<newline46mondego>        b.courses.put(c.id, c);<newline46mondego><newline46mondego>        System.out.println(convertObjectToXml(Brochure.class, b));<newline46mondego><newline46mondego>}<newline46mondego>"
"4047splitHere46","2339254splitHere46","N"
"4048splitHere46","2339254splitHere46","remove()"
"4049splitHere46","2339254splitHere46","O(N log N)"
"4050splitHere46","2339254splitHere46","O(N^2)"
"4051splitHere46","2339254splitHere46","ArrayList"
"4052splitHere46","2339254splitHere46","clear()"
"4053splitHere46","2339254splitHere46","clear()"
"4054splitHere46","2339254splitHere46","remove()"
"4055splitHere46","2339254splitHere46","IllegalStateException"
"4056splitHere46","2339254splitHere46","ConcurrentModificationException"
"4057splitHere46","2339254splitHere46","N"
"4058splitHere46","2339254splitHere46","remove()"
"4059splitHere46","2339254splitHere46","N"
"4060splitHere46","2339254splitHere46","remove()"
"4061splitHere46","2339254splitHere46","remove()"
"4062splitHere46","2339254splitHere46","N"
"4063splitHere46","2339254splitHere46","clear()"
"4064splitHere46","2339368splitHere46","String[] numbers = readfrominput.split(<doubleQuotes46> <doubleQuotes46>); // space is the default delimiter.<newline46mondego>"
"4065splitHere46","2339415splitHere46","class Dog(object):<newline46mondego>    def make_sound(self):<newline46mondego>        return <doubleQuotes46>woof!<doubleQuotes46><newline46mondego><newline46mondego>class Cat(object):<newline46mondego>    def make_sound(self):<newline46mondego>        return <doubleQuotes46>meow!<doubleQuotes46><newline46mondego><newline46mondego>class LolCat(object):<newline46mondego>    def make_sound(self):<newline46mondego>        return <doubleQuotes46>i can has cheezburger?<doubleQuotes46><newline46mondego>"
"4066splitHere46","2339430splitHere46","TIntIntHashMap"
"4067splitHere46","2339430splitHere46","HashMap<Integer,Integer>"
"4068splitHere46","2339430splitHere46","/*<newline46mondego> * This .java source file has been auto-generated from the template xxxxx<newline46mondego> * <newline46mondego> * DO NOT MODIFY THIS FILE FOR IT SHALL GET OVERWRITTEN<newline46mondego> * <newline46mondego> */<newline46mondego>"
"4069splitHere46","2339503splitHere46","CardLayout"
"4070splitHere46","2339503splitHere46","myPanel = new JPanel(new CardPanel());<newline46mondego>myPanel.add(myPanelContainingTable1, CONSTANT_FOR_BUTTON1);<newline46mondego>myPanel.add(myPanelContainingTable2, CONSTANT_FOR_BUTTON2);<newline46mondego>"
"4071splitHere46","2339503splitHere46","actionPerformed"
"4072splitHere46","2339503splitHere46","CardLayout cl = (CardLayout) myPanel.getLayout();<newline46mondego>if (event.getActionCommand().equals(actionCommandForButton1) {<newline46mondego>    cl.show(myPanel, CONSTANT_FOR_BUTTON1);<newline46mondego>} else if (event.getActionCommand().equals(actionCommandForButton2) {<newline46mondego>    cl.show(myPanel, CONSTANT_FOR_BUTTON2);<newline46mondego>}<newline46mondego>"
"4073splitHere46","2339553splitHere46","if (CreateProcess(TEXT(<doubleQuotes46>C:\\Program Files\\Java\\jre6\\bin\\java.exe<doubleQuotes46>), TEXT(<doubleQuotes46> -jar test.jar<doubleQuotes46>), NULL, NULL, false, CREATE_DEFAULT_ERROR_MODE, NULL, NULL, &siStartupInfo, &piProcessInfo) == false) {<newline46mondego>        MessageBox(NULL, L<doubleQuotes46>Could not load app<doubleQuotes46>, L<doubleQuotes46>Error<doubleQuotes46>, 0);<newline46mondego>    }<newline46mondego>"
"4074splitHere46","2339553splitHere46","if (CreateProcess(TEXT(<doubleQuotes46>C:\\Program Files\\Java\\jre6\\bin\\java.exe<doubleQuotes46>), TEXT(<doubleQuotes46>-jar test.jar<doubleQuotes46>), NULL, NULL, false, CREATE_DEFAULT_ERROR_MODE, NULL, NULL, &siStartupInfo, &piProcessInfo) == false) {<newline46mondego>        MessageBox(NULL, L<doubleQuotes46>Could not load app<doubleQuotes46>, L<doubleQuotes46>Error<doubleQuotes46>, 0);<newline46mondego>    }<newline46mondego>"
"4075splitHere46","2339553splitHere46","-jar"
"4076splitHere46","2339639splitHere46","VariableDeclarationFragment"
"4077splitHere46","2339639splitHere46","public boolean visit(VariableDeclarationStatement node)<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Visiting variable declaration statement.<doubleQuotes46>);<newline46mondego>        for(int i = 0; i < node.fragments().size(); ++i)<newline46mondego>        {<newline46mondego>            VariableDeclarationFragment frag = (VariableDeclarationFragment)node.fragments().get(i);<newline46mondego>            System.out.println(<doubleQuotes46>Fragment: <doubleQuotes46> + node.getType() + <doubleQuotes46> <doubleQuotes46> + frag.getName());<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46><doubleQuotes46>);        <newline46mondego>        return true;<newline46mondego>    }<newline46mondego>"
"4078splitHere46","2339639splitHere46","CompilationUnit"
"4079splitHere46","2339639splitHere46","VariableDeclarationFragment"
"4080splitHere46","2339639splitHere46","IMethod"
"4081splitHere46","2339639splitHere46","IJavaElement element = delta.getElement();<newline46mondego><newline46mondego>        if(element.getElementType() != IJavaElement.COMPILATION_UNIT)<newline46mondego>            return;<newline46mondego><newline46mondego>        ICompilationUnit compilationUnit = (ICompilationUnit)element;<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego><newline46mondego>            IType type = compilationUnit.findPrimaryType();<newline46mondego>            IMethod[] methods = type.getMethods();<newline46mondego>            for(IMethod method : methods)<newline46mondego>            {                <newline46mondego>                ASTParser parser = ASTParser.newParser(AST.JLS3);                <newline46mondego>                parser.setSource(compilationUnit);<newline46mondego>                parser.setSourceRange(method.getSourceRange().getOffset(), method.getSourceRange().getLength());<newline46mondego>                //parser.setKind(ASTParser.K_CLASS_BODY_DECLARATIONS);<newline46mondego>                //parser.setSource(method.getSource().toCharArray());<newline46mondego>                //parser.setProject(method.getJavaProject());                <newline46mondego>                parser.setResolveBindings(true);<newline46mondego>                CompilationUnit cu = (CompilationUnit)parser.createAST(null);<newline46mondego>                cu.accept(new ASTMethodVisitor());<newline46mondego><newline46mondego>                // If the visitor visit the right VariableDeclarationFragment,<newline46mondego>                // then the right IMethod is the current 'method' variable<newline46mondego><newline46mondego>            }                        <newline46mondego>        }<newline46mondego>        catch(JavaModelException e)<newline46mondego>        {         <newline46mondego>            e.printStackTrace();<newline46mondego>        }         <newline46mondego>"
"4082splitHere46","2339916splitHere46","java.util.Date"
"4083splitHere46","2339916splitHere46","java.sql.Date"
"4084splitHere46","2339916splitHere46","java.util.Date"
"4085splitHere46","2339916splitHere46","java.sql.Date date = new java.sql.Date(jsfProvidedDate.getTime());<newline46mondego>"
"4086splitHere46","2339944splitHere46","static final"
"4087splitHere46","2339944splitHere46","try/catch"
"4088splitHere46","2339944splitHere46","final"
"4089splitHere46","2339944splitHere46","static"
"4090splitHere46","2339946splitHere46","pid = forkAndExec(prog,<newline46mondego>              argBlock, argc,<newline46mondego>      envBlock, envc,<newline46mondego>      dir,<newline46mondego>      redirectErrorStream,<newline46mondego>      stdin_fd, stdout_fd, stderr_fd);<newline46mondego>stdin_stream = new BufferedOutputStream(new FileOutputStream(stdin_fd));<newline46mondego>"
"4091splitHere46","2340002splitHere46","Color c = Color.decode(<doubleQuotes46>0xFF0096<doubleQuotes46>);<newline46mondego>"
"4092splitHere46","2340002splitHere46","Color c = Color.decode(<doubleQuotes46>#FF0096<doubleQuotes46>);<newline46mondego>"
"4093splitHere46","2340002splitHere46","Color c = new Color(0xFF0096);<newline46mondego>"
"4094splitHere46","2340033splitHere46","jsfc"
"4095splitHere46","2340033splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> .../><newline46mondego>"
"4096splitHere46","2340033splitHere46","jsfc"
"4097splitHere46","2340033splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> jsfc=<doubleQuotes46>h:inputText<doubleQuotes46> .../><newline46mondego>"
"4098splitHere46","2340033splitHere46","<h:inputText .../><newline46mondego>"
"4099splitHere46","2340033splitHere46","jsfc"
"4100splitHere46","2340033splitHere46","<span jsfc=<doubleQuotes46>ui:remove<doubleQuotes46>><newline46mondego>This won't be compiled either <h:outputText value=<doubleQuotes46>#{foo.bar}<doubleQuotes46>/><newline46mondego></span><newline46mondego>"
"4101splitHere46","2340033splitHere46","<table><newline46mondego>    <tr jsfc=<doubleQuotes46>ui:repeat<doubleQuotes46> value=<doubleQuotes46>#{dept.employees}<doubleQuotes46> var=<doubleQuotes46>emp<doubleQuotes46> class=<doubleQuotes46>#{emp.manager ? 'mngr' : 'peon'}<doubleQuotes46>><newline46mondego>       <td>#{emp.lastName}</td><newline46mondego>       <td>#{emp.firstName}</td><newline46mondego>    </tr><newline46mondego></table><newline46mondego>"
"4102splitHere46","2340033splitHere46","h:datatable"
"4103splitHere46","2340033splitHere46","ui:repeat"
"4104splitHere46","2340033splitHere46","jsfc"
"4105splitHere46","2340033splitHere46","ui:repeat"
"4106splitHere46","2340033splitHere46","h:datatable"
"4107splitHere46","2340033splitHere46","jsfc"
"4108splitHere46","2340131splitHere46","run()"
"4109splitHere46","2340131splitHere46","run()"
"4110splitHere46","2340131splitHere46","somemethod()"
"4111splitHere46","2340131splitHere46","somemethod()"
"4112splitHere46","2340205splitHere46","new MigLayout(<doubleQuotes46>fill, hidemode 3<doubleQuotes46> + (LoggerFactory.getLogger(MigLayout.class).isLoggable(DEBUG) ? <doubleQuotes46>, debug<doubleQuotes46> : <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"4113splitHere46","2340321splitHere46","java -jar  jar-file-name.jar"
"4114splitHere46","2340354splitHere46","java.lang.RuntimeException"
"4115splitHere46","2340354splitHere46","try {<newline46mondego>    1/0;<newline46mondego>} catch (Throwable t) {<newline46mondego>    throw new RuntimeException(org.codehaus.groovy.runtime.StackTraceUtils.sanitize(t)); //Modifies the Throwable and rethrows<newline46mondego>}<newline46mondego>"
"4116splitHere46","2340675splitHere46","ehcache.xml"
"4117splitHere46","2340675splitHere46","Element.setTimeToLive()"
"4118splitHere46","2340771splitHere46","jmsTemplate.send(<doubleQuotes46>topic1<doubleQuotes46>, textMessage);<newline46mondego>"
"4119splitHere46","2340771splitHere46","Topic topic = //physically look up the topic<newline46mondego>jmsTemplate.send(topic, textMessage);<newline46mondego>"
"4120splitHere46","2340873splitHere46","myMethod()"
"4121splitHere46","2340873splitHere46","MyInterface"
"4122splitHere46","2340873splitHere46","@Test<newline46mondego>public void test() {<newline46mondego>    MyInterface myInterface = mock(MyInterface.class);<newline46mondego>    FooBar expectedFooBar = new FooBar();        <newline46mondego><newline46mondego>    // other testing stuff<newline46mondego><newline46mondego>    verify(myInterface).myMethod(any(), any(), eq(expectedFooBar), any(), ...);<newline46mondego>}<newline46mondego>"
"4123splitHere46","2340873splitHere46","any()"
"4124splitHere46","2340887splitHere46","filename"
"4125splitHere46","2340887splitHere46","public void load(String filename) { ... }<newline46mondego>"
"4126splitHere46","2340887splitHere46","private String fileName;<newline46mondego>private long fileSize<newline46mondego>private DateTime fileAge;<newline46mondego>"
"4127splitHere46","2341144splitHere46","PathMatchingResourcePatternResolver match = new PathMatchingResourcePatternResolver();<newline46mondego>MetadataReaderFactory f = new SimpleMetadataReaderFactory();<newline46mondego>List<Class<?>> matches = ...;<newline46mondego>for (Resource r : match.getResources(<doubleQuotes46>classpath*:com/example/**/*.class<doubleQuotes46>)) {<newline46mondego>    AnnotationMetadata meta = f.getMetadataReader(r).getAnnotationMetadata();<newline46mondego>    if (anno.getAnnotationsTypes().contains(MyAnnotation.class.getName()) {<newline46mondego>        matches.add(Class.forName(anno.getClassName()));<newline46mondego>    }<newline46mondego>}<newline46mondego>return matches;<newline46mondego>"
"4128splitHere46","2341396splitHere46","gboolean' is<newline46mondego>  invalid or out of range for property<newline46mondego>"
"4129splitHere46","2341422splitHere46","HttpServletRequest"
"4130splitHere46","2341422splitHere46","HttpSession"
"4131splitHere46","2341422splitHere46","ServletContext"
"4132splitHere46","2341422splitHere46","ExternalContext#getRequestMap()"
"4133splitHere46","2341422splitHere46","#getSessionMap()"
"4134splitHere46","2341422splitHere46","#getApplicationMap()"
"4135splitHere46","2341422splitHere46","FacesContext"
"4136splitHere46","2341422splitHere46","Servlet"
"4137splitHere46","2341422splitHere46","Filter"
"4138splitHere46","2341422splitHere46","PhaseListener"
"4139splitHere46","2341443splitHere46","final TabSheet tabSheet = new TabSheet();<newline46mondego><newline46mondego>Button button = new Button(<doubleQuotes46>Add the tab<doubleQuotes46>);<newline46mondego>button.addListener(new Button.ClickListener(){<newline46mondego>    public void buttonClick(ClickEvent event) {<newline46mondego>        VerticalLayout content = new VerticalLayout();<newline46mondego>        content.addComponent(new Label(<doubleQuotes46>This is the tab content.<doubleQuotes46>));<newline46mondego>        Tab tab = tabSheet.addTab(content, <doubleQuotes46>The new Tab<doubleQuotes46>, null);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4140splitHere46","2341695splitHere46","CREATE OR REPLACE FUNCTION TEST_FUNCTION RETURN VARCHAR2<newline46mondego>AS LANGUAGE JAVA<newline46mondego>NAME 'grassie.example.Example.test() RETURN java.lang.String';<newline46mondego>"
"4141splitHere46","2341695splitHere46","Java"
"4142splitHere46","2341695splitHere46","RETURN"
"4143splitHere46","2341695splitHere46","return"
"4144splitHere46","2341695splitHere46","NAME"
"4145splitHere46","2341865splitHere46","map.put(debater, map.get(debater) + 1);<newline46mondego>"
"4146splitHere46","2341865splitHere46","NullPointerException"
"4147splitHere46","2341865splitHere46","map.put(debater, map.containsKey(debater) ? map.get(debater) + 1 : 1);<newline46mondego>"
"4148splitHere46","2341922splitHere46","common"
"4149splitHere46","2341922splitHere46","jar"
"4150splitHere46","2341922splitHere46","subproject1"
"4151splitHere46","2341922splitHere46","war"
"4152splitHere46","2341922splitHere46","common"
"4153splitHere46","2341922splitHere46","subproject2"
"4154splitHere46","2341922splitHere46","war"
"4155splitHere46","2341922splitHere46","common"
"4156splitHere46","2341922splitHere46","web"
"4157splitHere46","2341922splitHere46","war"
"4158splitHere46","2341922splitHere46","subproject1"
"4159splitHere46","2341922splitHere46","subproject2"
"4160splitHere46","2341922splitHere46","web"
"4161splitHere46","2341922splitHere46","subproject1"
"4162splitHere46","2341922splitHere46","subproject2"
"4163splitHere46","2341922splitHere46","web/target"
"4164splitHere46","2341922splitHere46","web"
"4165splitHere46","2341922splitHere46","target"
"4166splitHere46","2341922splitHere46","subproject1"
"4167splitHere46","2341922splitHere46","web"
"4168splitHere46","2341922splitHere46","web"
"4169splitHere46","2341922splitHere46","subproject1"
"4170splitHere46","2342002splitHere46","org.eclipse.ui.internal.WorkbenchIntroManager"
"4171splitHere46","2342002splitHere46","ViewIntroAdapterPart"
"4172splitHere46","2342002splitHere46","ViewIntroAdapterSite"
"4173splitHere46","2342002splitHere46","* @return the <code>ViewIntroAdapterPart</code> for this workbench, <code>null</code> if it<newline46mondego>* cannot be found.<newline46mondego>*/<newline46mondego>/*package*/ViewIntroAdapterPart getViewIntroAdapterPart() {<newline46mondego>  IWorkbenchWindow[] windows = this.workbench.getWorkbenchWindows();<newline46mondego>  for (int i = 0; i < windows.length; i++) {<newline46mondego>    IWorkbenchWindow window = windows[i];<newline46mondego>    WorkbenchPage page = (WorkbenchPage) window.getActivePage();<newline46mondego>    if (page == null) {<newline46mondego>      continue;<newline46mondego>    }<newline46mondego>    IPerspectiveDescriptor[] perspDescs = page.getOpenPerspectives();<newline46mondego>    for (int j = 0; j < perspDescs.length; j++) {<newline46mondego>      IPerspectiveDescriptor descriptor = perspDescs[j];<newline46mondego>      IViewReference reference = page.findPerspective(descriptor)<newline46mondego>        .findView(IIntroConstants.INTRO_VIEW_ID);<newline46mondego>      if (reference != null) {<newline46mondego>        IViewPart part = reference.getView(false);<newline46mondego>        if (part != null && part instanceof ViewIntroAdapterPart) {<newline46mondego>          return (ViewIntroAdapterPart) part;<newline46mondego>        }<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>  return null;<newline46mondego>}<newline46mondego>"
"4174splitHere46","2342002splitHere46","IPerspectiveDescriptor"
"4175splitHere46","2342002splitHere46","ViewIntroAdapterPart"
"4176splitHere46","2342002splitHere46","IIntroPart"
"4177splitHere46","2342013splitHere46","isUnitTesting"
"4178splitHere46","2342391splitHere46","~/.m2/repository/org/apache/maven/plugins"
"4179splitHere46","2342391splitHere46","<localRepository>"
"4180splitHere46","2342391splitHere46","~/.m2/repository"
"4181splitHere46","2342406splitHere46","**taula d \''usuaris**<newline46mondego>"
"4182splitHere46","2342532splitHere46","public class Main {<newline46mondego>  private final Object lockA = new Object();<newline46mondego>  private final Object lockB = new Object();<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    new Main();<newline46mondego>  }<newline46mondego><newline46mondego>  public Main() {<newline46mondego>    new Thread(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        a();<newline46mondego>        sleep(3000L); // Add a delay here to increase chance of deadlock.<newline46mondego>        b();<newline46mondego>      }<newline46mondego>    }, <doubleQuotes46>Thread-A<doubleQuotes46>).start();<newline46mondego><newline46mondego>    new Thread(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        // Note: Second thread acquires locks in the reverse order of the first!<newline46mondego>        b();<newline46mondego>        sleep(3000L); // Add a delay here to increase chance of deadlock.<newline46mondego>        a();<newline46mondego>      }<newline46mondego>    }, <doubleQuotes46>Thread-A<doubleQuotes46>).start();<newline46mondego>  }<newline46mondego><newline46mondego>  private void a() {<newline46mondego>    log(<doubleQuotes46>Trying to acquire lock A.<doubleQuotes46>);<newline46mondego><newline46mondego>    synchronized(lockA) {<newline46mondego>      log(<doubleQuotes46>Acquired lock A.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private void b() {<newline46mondego>    log(<doubleQuotes46>Trying to acquire lock B.<doubleQuotes46>);<newline46mondego><newline46mondego>    synchronized(lockB) {<newline46mondego>      log(<doubleQuotes46>Acquired lock B.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private void sleep(long millis) {<newline46mondego>    try {<newline46mondego>      Thread.sleep(millis);<newline46mondego>    } catch(InterruptedException ex) {<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private void log(String msg) {<newline46mondego>    System.err.println(String.format(<doubleQuotes46>Thread: %s, Message: %s<doubleQuotes46>,<newline46mondego>      Thread.currentThread().getName(), msg));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4183splitHere46","2342532splitHere46","public class Main {<newline46mondego>  // Non-volatile integer <doubleQuotes46>result<doubleQuotes46>.<newline46mondego>  private int i;<newline46mondego><newline46mondego>  public static void main(String[] args) {<newline46mondego>    new Main();<newline46mondego>  } <newline46mondego><newline46mondego>  public Main() {<newline46mondego>    Thread t1 = new Thread(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        countUp();<newline46mondego>      }<newline46mondego>    }, <doubleQuotes46>Thread-1<doubleQuotes46>);<newline46mondego><newline46mondego>    Thread t2 = new Thread(new Runnable() {<newline46mondego>      public void run() {<newline46mondego>        countDown();<newline46mondego>      }<newline46mondego>    }, <doubleQuotes46>Thread-2<doubleQuotes46>);<newline46mondego><newline46mondego>    t1.start();<newline46mondego>    t2.start();<newline46mondego><newline46mondego>    // Wait for two threads to complete.<newline46mondego>    t1.join();<newline46mondego>    t2.join();<newline46mondego><newline46mondego>    // Print out result.  With correct concurrency control we expect the result to<newline46mondego>    // be 0.  A non-zero result indicates incorrect use of concurrency.  Also note<newline46mondego>    // that the result may vary between runs because of this.<newline46mondego>    System.err.println(<doubleQuotes46>i: <doubleQuotes46> + i);<newline46mondego>  }<newline46mondego><newline46mondego>  private void countUp() {<newline46mondego>    // Increment instance variable i 1000,000 times.  The variable is not marked<newline46mondego>    // as volatile, nor is it accessed within a synchronized block and hence<newline46mondego>    // there is no guarantee that the value of i will be reconciled back to main<newline46mondego>    // memory following the increment.<newline46mondego>    for (int j=0; j<1000000; ++j) {<newline46mondego>      ++i;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>  private void countDown() {<newline46mondego>    // Decrement instance variable i 1000,000 times.  Same consistency problems<newline46mondego>    // as mentioned above.<newline46mondego>    for (int j=0; j<1000000; ++j) {<newline46mondego>      --i;<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4184splitHere46","2342551splitHere46","List<A>"
"4185splitHere46","2342551splitHere46","mixed"
"4186splitHere46","2342551splitHere46","A"
"4187splitHere46","2342551splitHere46","List<? extends A>"
"4188splitHere46","2342551splitHere46","List<B>"
"4189splitHere46","2342551splitHere46","A"
"4190splitHere46","2342551splitHere46","A"
"4191splitHere46","2342551splitHere46","List<? super A>"
"4192splitHere46","2342551splitHere46","List<Object>"
"4193splitHere46","2342551splitHere46","List<A> mixed = new ArrayList<A>();<newline46mondego>mixed.addAll(listOfA);<newline46mondego>mixed.addAll(listOfB);<newline46mondego><newline46mondego>for (A item : mixed) {<newline46mondego>  item.methodA();<newline46mondego>}<newline46mondego>"
"4194splitHere46","2342632splitHere46","<source path='shared'/><newline46mondego>"
"4195splitHere46","2342689splitHere46","public void businessMethod(String someArg, int otherArg, Locale locale) {<newline46mondego>   ..<newline46mondego>}<newline46mondego>"
"4196splitHere46","2342689splitHere46","public final class LocaleProvider {<newline46mondego>    private static ThreadLoca<Locale> currentLocale;<newline46mondego>    //static setters and getters for the threadLocal<newline46mondego>}<newline46mondego>"
"4197splitHere46","2342689splitHere46","FacesContext.get....getLocale()"
"4198splitHere46","2342689splitHere46","Locale"
"4199splitHere46","2342859splitHere46","// note that if your XML already declares the XSD to which it has to conform, then there's no need to declare the schemaName here<newline46mondego>void validate(String xml, String schemaName) throws Exception {<newline46mondego><newline46mondego>    DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();<newline46mondego>    builderFactory.setNamespaceAware(true);<newline46mondego><newline46mondego>    DocumentBuilder parser = builderFactory<newline46mondego>            .newDocumentBuilder();<newline46mondego><newline46mondego>    // parse the XML into a document object<newline46mondego>    Document document = parser.parse(new StringInputStream(xml));<newline46mondego><newline46mondego>    SchemaFactory factory = SchemaFactory<newline46mondego>            .newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);<newline46mondego><newline46mondego>    // associate the schema factory with the resource resolver, which is responsible for resolving the imported XSD's<newline46mondego>    factory.setResourceResolver(new ResourceResolver());<newline46mondego><newline46mondego>            // note that if your XML already declares the XSD to which it has to conform, then there's no need to create a validator from a Schema object<newline46mondego>    Source schemaFile = new StreamSource(getClass().getClassLoader()<newline46mondego>            .getResourceAsStream(schemaName));<newline46mondego>    Schema schema = factory.newSchema(schemaFile);<newline46mondego><newline46mondego>    Validator validator = schema.newValidator();<newline46mondego>    validator.validate(new DOMSource(document));<newline46mondego>}<newline46mondego>"
"4200splitHere46","2342859splitHere46","public class ResourceResolver  implements LSResourceResolver {<newline46mondego><newline46mondego>public LSInput resolveResource(String type, String namespaceURI,<newline46mondego>        String publicId, String systemId, String baseURI) {<newline46mondego><newline46mondego>     // note: in this sample, the XSD's are expected to be in the root of the classpath<newline46mondego>    InputStream resourceAsStream = this.getClass().getClassLoader()<newline46mondego>            .getResourceAsStream(systemId);<newline46mondego>    return new Input(publicId, systemId, resourceAsStream);<newline46mondego>}<newline46mondego><newline46mondego> }<newline46mondego>"
"4201splitHere46","2342859splitHere46","public class Input implements LSInput {<newline46mondego><newline46mondego>private String publicId;<newline46mondego><newline46mondego>private String systemId;<newline46mondego><newline46mondego>public String getPublicId() {<newline46mondego>    return publicId;<newline46mondego>}<newline46mondego><newline46mondego>public void setPublicId(String publicId) {<newline46mondego>    this.publicId = publicId;<newline46mondego>}<newline46mondego><newline46mondego>public String getBaseURI() {<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>public InputStream getByteStream() {<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>public boolean getCertifiedText() {<newline46mondego>    return false;<newline46mondego>}<newline46mondego><newline46mondego>public Reader getCharacterStream() {<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>public String getEncoding() {<newline46mondego>    return null;<newline46mondego>}<newline46mondego><newline46mondego>public String getStringData() {<newline46mondego>    synchronized (inputStream) {<newline46mondego>        try {<newline46mondego>            byte[] input = new byte[inputStream.available()];<newline46mondego>            inputStream.read(input);<newline46mondego>            String contents = new String(input);<newline46mondego>            return contents;<newline46mondego>        } catch (IOException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>            System.out.println(<doubleQuotes46>Exception <doubleQuotes46> + e);<newline46mondego>            return null;<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public void setBaseURI(String baseURI) {<newline46mondego>}<newline46mondego><newline46mondego>public void setByteStream(InputStream byteStream) {<newline46mondego>}<newline46mondego><newline46mondego>public void setCertifiedText(boolean certifiedText) {<newline46mondego>}<newline46mondego><newline46mondego>public void setCharacterStream(Reader characterStream) {<newline46mondego>}<newline46mondego><newline46mondego>public void setEncoding(String encoding) {<newline46mondego>}<newline46mondego><newline46mondego>public void setStringData(String stringData) {<newline46mondego>}<newline46mondego><newline46mondego>public String getSystemId() {<newline46mondego>    return systemId;<newline46mondego>}<newline46mondego><newline46mondego>public void setSystemId(String systemId) {<newline46mondego>    this.systemId = systemId;<newline46mondego>}<newline46mondego><newline46mondego>public BufferedInputStream getInputStream() {<newline46mondego>    return inputStream;<newline46mondego>}<newline46mondego><newline46mondego>public void setInputStream(BufferedInputStream inputStream) {<newline46mondego>    this.inputStream = inputStream;<newline46mondego>}<newline46mondego><newline46mondego>private BufferedInputStream inputStream;<newline46mondego><newline46mondego>public Input(String publicId, String sysId, InputStream input) {<newline46mondego>    this.publicId = publicId;<newline46mondego>    this.systemId = sysId;<newline46mondego>    this.inputStream = new BufferedInputStream(input);<newline46mondego>}<newline46mondego>}<newline46mondego>"
"4202splitHere46","2342951splitHere46","tableModel=new MyTableModel(columnNames, data);<newline46mondego> tableModel.fireTableDataChanged(); // not necessary<newline46mondego> table = new JTable(); // dont do this, you are removing your handle to the table in your view<newline46mondego> table.setModel(tableModel); <newline46mondego>"
"4203splitHere46","2343076splitHere46","HttpEntity entity = rsp.getEntity();<newline46mondego>BufferedHttpEntity buf = new BufferedHttpEntity(entity);<newline46mondego>"
"4204splitHere46","2343141splitHere46","MyClass<MyClass> m = new MyClass<MyClass>();"
"4205splitHere46","2343229splitHere46","/package/path/to/the/resource.ext<newline46mondego>"
"4206splitHere46","2343229splitHere46","my.Class -> /my/Class.class<newline46mondego>"
"4207splitHere46","2343229splitHere46","getClass().getResourceAsStream(...)"
"4208splitHere46","2343287splitHere46","URLConnection conn = new URL(<doubleQuotes46>http://<doubleQuotes46> + m_Logon + <doubleQuotes46>:<doubleQuotes46> + m_Password + <doubleQuotes46>@<doubleQuotes46> + m_WwwSite + <doubleQuotes46>:<doubleQuotes46> + m_port).openConnection();<newline46mondego>"
"4209splitHere46","2343402splitHere46","JPanel"
"4210splitHere46","2343402splitHere46","paintComponent"
"4211splitHere46","2343402splitHere46","public class CirclePanel extends JPanel {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void paintComponent(Graphics g) {<newline46mondego>        g.drawOval(0, 0, g.getClipBounds().width, g.getClipBounds().height);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4212splitHere46","2343402splitHere46","GridBagLayout"
"4213splitHere46","2343402splitHere46","CirclePanel panel = new CirclePanel();<newline46mondego><newline46mondego>panel.setLayout(new GridBagLayout());<newline46mondego><newline46mondego>GridBagConstraints gc;<newline46mondego><newline46mondego>gc = new GridBagConstraints();<newline46mondego>gc.gridy = 0;<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Label 1<doubleQuotes46>), gc);<newline46mondego><newline46mondego>gc = new GridBagConstraints();<newline46mondego>gc.gridy = 1;<newline46mondego>panel.add(new JLabel(<doubleQuotes46>Label 2<doubleQuotes46>), gc);<newline46mondego>"
"4214splitHere46","2343407splitHere46","DateTime"
"4215splitHere46","2343407splitHere46","java.sql.Timestamp"
"4216splitHere46","2343469splitHere46","31536000000"
"4217splitHere46","2343469splitHere46","1471228928"
"4218splitHere46","2343469splitHere46","long div = ( 1000 * 60 * 60 * 24 * 365L );<newline46mondego>long age = ( today.getTime() - dateBirth.getTime() ) / div;<newline46mondego>"
"4219splitHere46","2343653splitHere46","table.getTableHeader().setPreferredSize(<newline46mondego>      new Dimension(table.getColumnModel().getTotalColumnWidth(), 32));<newline46mondego>"
"4220splitHere46","2343653splitHere46","<center>"
"4221splitHere46","2343653splitHere46","headers[2] = <doubleQuotes46><html><center>Long Centered<newline46mondego>Header<doubleQuotes46>;<newline46mondego>"
"4222splitHere46","2343653splitHere46","WindowsTableHeaderUI"
"4223splitHere46","2343653splitHere46","setHorizontalAlignment(LEADING);<newline46mondego>"
"4224splitHere46","2343653splitHere46","(JLabel)table.getTableHeader().getDefaultRenderer())<newline46mondego>      .setHorizontalAlignment(SwingConstants.CENTER);<newline46mondego>"
"4225splitHere46","2343654splitHere46","remove"
"4226splitHere46","2343654splitHere46","break"
"4227splitHere46","2343654splitHere46","remove"
"4228splitHere46","2343654splitHere46","remove"
"4229splitHere46","2343654splitHere46","ConcurrentModificationException"
"4230splitHere46","2343654splitHere46","break"
"4231splitHere46","2343654splitHere46","foreach"
"4232splitHere46","2343654splitHere46","remove"
"4233splitHere46","2343654splitHere46","foreach"
"4234splitHere46","2343654splitHere46","ConcurrentModificationException"
"4235splitHere46","2343654splitHere46","remove"
"4236splitHere46","2343654splitHere46","break"
"4237splitHere46","2343654splitHere46","break"
"4238splitHere46","2343654splitHere46","remove"
"4239splitHere46","2343654splitHere46","goto"
"4240splitHere46","2343654splitHere46","break"
"4241splitHere46","2343654splitHere46","continue"
"4242splitHere46","2343773splitHere46","<wsdl:fault name=<doubleQuotes46>fault<doubleQuotes46>><newline46mondego>  <soap:fault use=<doubleQuotes46>literal<doubleQuotes46> name=<doubleQuotes46>fault<doubleQuotes46> /><newline46mondego></wsdl:fault><newline46mondego>"
"4243splitHere46","2343773splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><wsdl:definitions xmlns:soap=<doubleQuotes46>http://schemas.xmlsoap.org/wsdl/soap/<doubleQuotes46> xmlns:tns=<doubleQuotes46>http://www.example.org/JavaIntegrationModule/<doubleQuotes46> xmlns:wsdl=<doubleQuotes46>http://schemas.xmlsoap.org/wsdl/<doubleQuotes46> xmlns:xsd=<doubleQuotes46>http://www.w3.org/2001/XMLSchema<doubleQuotes46> name=<doubleQuotes46>JavaIntegrationModule<doubleQuotes46> targetNamespace=<doubleQuotes46>http://www.example.org/JavaIntegrationModule/<doubleQuotes46>><newline46mondego>  <wsdl:types><newline46mondego>    <xsd:schema targetNamespace=<doubleQuotes46>http://www.example.org/JavaIntegrationModule/<doubleQuotes46>><newline46mondego>      <xsd:element name=<doubleQuotes46>getSolutionById<doubleQuotes46>><newline46mondego>        <xsd:complexType><newline46mondego>          <xsd:sequence><newline46mondego>            <xsd:element name=<doubleQuotes46>in<doubleQuotes46> type=<doubleQuotes46>xsd:string<doubleQuotes46>/><newline46mondego>          </xsd:sequence><newline46mondego>        </xsd:complexType><newline46mondego>      </xsd:element><newline46mondego>      <xsd:element name=<doubleQuotes46>getSolutionByIdResponse<doubleQuotes46>><newline46mondego>        <xsd:complexType><newline46mondego>          <xsd:sequence><newline46mondego>            <xsd:element name=<doubleQuotes46>out<doubleQuotes46> type=<doubleQuotes46>xsd:string<doubleQuotes46>/><newline46mondego>          </xsd:sequence><newline46mondego>        </xsd:complexType><newline46mondego>      </xsd:element><newline46mondego>      <xsd:element name=<doubleQuotes46>getSolutionByIdFault<doubleQuotes46>><newline46mondego>       <xsd:complexType><newline46mondego>        <xsd:sequence><newline46mondego><newline46mondego>         <xsd:element name=<doubleQuotes46>getSolutionByIdFault<doubleQuotes46><newline46mondego>          type=<doubleQuotes46>xsd:string<doubleQuotes46>><newline46mondego>         </xsd:element><newline46mondego>        </xsd:sequence><newline46mondego>       </xsd:complexType><newline46mondego>      </xsd:element><newline46mondego><newline46mondego>    </xsd:schema><newline46mondego>  </wsdl:types><newline46mondego>  <wsdl:message name=<doubleQuotes46>getSolutionByIdRequest<doubleQuotes46>><newline46mondego>    <wsdl:part element=<doubleQuotes46>tns:getSolutionById<doubleQuotes46> name=<doubleQuotes46>parameters<doubleQuotes46>/><newline46mondego>  </wsdl:message><newline46mondego>  <wsdl:message name=<doubleQuotes46>getSolutionByIdResponse<doubleQuotes46>><newline46mondego>    <wsdl:part element=<doubleQuotes46>tns:getSolutionByIdResponse<doubleQuotes46> name=<doubleQuotes46>parameters<doubleQuotes46>/><newline46mondego>  </wsdl:message><newline46mondego><newline46mondego>  <wsdl:message name=<doubleQuotes46>getSolutionByIdFault<doubleQuotes46>><newline46mondego>   <wsdl:part name=<doubleQuotes46>parameters<doubleQuotes46> element=<doubleQuotes46>tns:getSolutionByIdFault<doubleQuotes46>></wsdl:part><newline46mondego>  </wsdl:message><newline46mondego>  <wsdl:portType name=<doubleQuotes46>JavaIntegrationModule<doubleQuotes46>><newline46mondego>    <wsdl:operation name=<doubleQuotes46>getSolutionById<doubleQuotes46>><newline46mondego>      <wsdl:input message=<doubleQuotes46>tns:getSolutionByIdRequest<doubleQuotes46>/><newline46mondego>      <wsdl:output message=<doubleQuotes46>tns:getSolutionByIdResponse<doubleQuotes46>/><newline46mondego><newline46mondego>            <wsdl:fault name=<doubleQuotes46>fault<doubleQuotes46> message=<doubleQuotes46>tns:getSolutionByIdFault<doubleQuotes46>></wsdl:fault><newline46mondego>        </wsdl:operation><newline46mondego>  </wsdl:portType><newline46mondego>  <wsdl:binding name=<doubleQuotes46>JavaIntegrationModuleSOAP<doubleQuotes46> type=<doubleQuotes46>tns:JavaIntegrationModule<doubleQuotes46>><newline46mondego>    <soap:binding style=<doubleQuotes46>document<doubleQuotes46> transport=<doubleQuotes46>http://schemas.xmlsoap.org/soap/http<doubleQuotes46>/><newline46mondego>    <wsdl:operation name=<doubleQuotes46>getSolutionById<doubleQuotes46>><newline46mondego>      <soap:operation soapAction=<doubleQuotes46>http://www.example.org/JavaIntegrationModule/getSolutionById<doubleQuotes46>/><newline46mondego>      <wsdl:input><newline46mondego>        <soap:body use=<doubleQuotes46>literal<doubleQuotes46>/><newline46mondego>      </wsdl:input><newline46mondego>      <wsdl:output><newline46mondego>        <soap:body use=<doubleQuotes46>literal<doubleQuotes46>/><newline46mondego>      </wsdl:output><newline46mondego>      <wsdl:fault name=<doubleQuotes46>fault<doubleQuotes46>><newline46mondego>        <soap:fault use=<doubleQuotes46>literal<doubleQuotes46> name=<doubleQuotes46>fault<doubleQuotes46> /><newline46mondego>      </wsdl:fault><newline46mondego>    </wsdl:operation><newline46mondego>  </wsdl:binding><newline46mondego>  <wsdl:service name=<doubleQuotes46>JavaIntegrationModule<doubleQuotes46>><newline46mondego>    <wsdl:port binding=<doubleQuotes46>tns:JavaIntegrationModuleSOAP<doubleQuotes46> name=<doubleQuotes46>JavaIntegrationModuleSOAP<doubleQuotes46>><newline46mondego>      <soap:address location=<doubleQuotes46>http://www.example.org/<doubleQuotes46>/><newline46mondego>    </wsdl:port><newline46mondego>  </wsdl:service><newline46mondego></wsdl:definitions><newline46mondego>"
"4244splitHere46","2343869splitHere46","copy2DArray"
"4245splitHere46","2343869splitHere46","Integer"
"4246splitHere46","2343869splitHere46","int"
"4247splitHere46","2343869splitHere46","public class Main {<newline46mondego><newline46mondego>    // ...<newline46mondego>    // Your copy2DArray method goes here<newline46mondego>    // ...<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        // The array to copy<newline46mondego>        Integer array[][] = {<newline46mondego>            {0, 1, 2},<newline46mondego>            {3, 4, 5},<newline46mondego>            {6, 7, 8}<newline46mondego>        };<newline46mondego><newline46mondego>        // Create a copy of the array<newline46mondego>        Integer copy[][] = clone2DArray(array);<newline46mondego><newline46mondego>        // Print the copy of the array<newline46mondego>        for (int i = 0; i < copy.length; i++) {<newline46mondego>            for (int j = 0; j < copy[i].length; j++) {<newline46mondego>                System.out.print(copy[i][j] + <doubleQuotes46> <doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>            System.out.println();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4248splitHere46","2343869splitHere46","0 1 2 <newline46mondego>3 4 5 <newline46mondego>6 7 8 <newline46mondego>"
"4249splitHere46","2343929splitHere46","cells"
"4250splitHere46","2343929splitHere46","public class Foo {<newline46mondego><newline46mondego>   // ...<newline46mondego><newline46mondego>   public Map<Type1, Type2> cells;<newline46mondego><newline46mondego>   // ...<newline46mondego><newline46mondego>}<newline46mondego>"
"4251splitHere46","2343929splitHere46","public class Foo {<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    public void myMethod() {<newline46mondego>        // ...<newline46mondego><newline46mondego>        Map<Type1, Type2> cells;<newline46mondego><newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4252splitHere46","2343929splitHere46","Map <Key, Value>"
"4253splitHere46","2343929splitHere46","Key"
"4254splitHere46","2343929splitHere46","Map"
"4255splitHere46","2343929splitHere46","Value"
"4256splitHere46","2343929splitHere46","Map <String, Integer>"
"4257splitHere46","2343929splitHere46","Map"
"4258splitHere46","2343929splitHere46","String"
"4259splitHere46","2343929splitHere46","Integer"
"4260splitHere46","2344494splitHere46","Mapper"
"4261splitHere46","2344494splitHere46","Outer"
"4262splitHere46","2344494splitHere46","Mapper"
"4263splitHere46","2344494splitHere46","Outer$MapperA"
"4264splitHere46","2344494splitHere46","MapperA"
"4265splitHere46","2344494splitHere46","MapperB"
"4266splitHere46","2344560splitHere46","#region"
"4267splitHere46","2344583splitHere46","Configure/Convert To AspectJ project"
"4268splitHere46","2344583splitHere46","Spring Tools/Enable Spring Aspect Tooling"
"4269splitHere46","2344666splitHere46","private @Inject PdfFaxService faxService;<newline46mondego>"
"4270splitHere46","2344666splitHere46","@ApplicationScoped"
"4271splitHere46","2344666splitHere46","public @Produces @ApplicationScoped PdfFaxService createFaxService() {<newline46mondego>  return new PdfFaxService(initparameters);<newline46mondego>}<newline46mondego>"
"4272splitHere46","2344714splitHere46","grid"
"4273splitHere46","2344714splitHere46","grid[i][j] = cin >> grid[i][j];<newline46mondego>"
"4274splitHere46","2344714splitHere46","istream"
"4275splitHere46","2344714splitHere46","grid[ i ][ j ]"
"4276splitHere46","2344714splitHere46","cin >> grid[i][j]; <newline46mondego>"
"4277splitHere46","2344714splitHere46","int grid[9][9];<newline46mondego>"
"4278splitHere46","2344830splitHere46","printStackTrace()"
"4279splitHere46","2344830splitHere46","Throwable"
"4280splitHere46","2344830splitHere46","System.err"
"4281splitHere46","2344830splitHere46","UncaughtExceptionHandler"
"4282splitHere46","2344830splitHere46","class Log4jBackstop implements Thread.UncaughtExceptionHandler {<newline46mondego><newline46mondego>  private static Logger log = Logger.getLogger(Log4jBackstop.class);<newline46mondego><newline46mondego>  public void uncaughtException(Thread t, Throwable ex) {<newline46mondego>    log.error(<doubleQuotes46>Uncaught exception in thread: <doubleQuotes46> + t.getName(), ex);<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"4283splitHere46","2344830splitHere46","Runnable"
"4284splitHere46","2344830splitHere46","catch"
"4285splitHere46","2344830splitHere46","Runtime"
"4286splitHere46","2344830splitHere46","class Log4jWrapper {<newline46mondego><newline46mondego>  private static final Logger log = Logger.getLogger(Log4jWrapper.class);<newline46mondego><newline46mondego>  private final Runnable target;<newline46mondego><newline46mondego>  Log4jWrapper(Runnable target) { this.target = target; }<newline46mondego><newline46mondego>  public void run() {<newline46mondego>    try {<newline46mondego>      target.run();<newline46mondego>    } catch(RuntimeException ex) {<newline46mondego>      log.error(<doubleQuotes46>Uncaught exception.<doubleQuotes46>, ex);<newline46mondego>      throw ex;<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>Runnable realTask = ...;<newline46mondego>executor.submit(new Log4jWrapper(realTask));<newline46mondego>"
"4287splitHere46","2344902splitHere46","maven-archetype-webapp"
"4288splitHere46","2344902splitHere46","struts2-archetype-starter"
"4289splitHere46","2344902splitHere46","wicket-archetype-quickstart"
"4290splitHere46","2344902splitHere46","javaee5-maven-archetype"
"4291splitHere46","2344902splitHere46","softeu-archetype-seam"
"4292splitHere46","2344974splitHere46","<f:validateBean disabled=<doubleQuotes46>true<doubleQuotes46>/>"
"4293splitHere46","2345029splitHere46","JScrollPane scrollPane = new JScrollPane( table );<newline46mondego>"
"4294splitHere46","2345029splitHere46","scrollPane.setViewportView( table );<newline46mondego>"
"4295splitHere46","2345169splitHere46","Classloader"
"4296splitHere46","2345169splitHere46","Classloader"
"4297splitHere46","2345169splitHere46","OutOfMemoryError: PermGen space"
"4298splitHere46","2345169splitHere46","AnonymousClassLoader"
"4299splitHere46","2345215splitHere46","index = 9 * i + 3 * j + k<newline46mondego>"
"4300splitHere46","2345488splitHere46","SELECT [...,] NEXT VALUE FOR <sequencename> [, ...] FROM <tablename>;<newline46mondego>"
"4301splitHere46","2345488splitHere46","call NEXT VALUE FOR [sequence_name];<newline46mondego>"
"4302splitHere46","2345488splitHere46","HSQLDialect"
"4303splitHere46","2345488splitHere46","HSQLDialect"
"4304splitHere46","2345488splitHere46","hibernate-core-3.3.0.SP1.jar"
"4305splitHere46","2345488splitHere46","public String getSequenceNextValString(String sequenceName) {<newline46mondego>    return <doubleQuotes46>call next value for <doubleQuotes46> + sequenceName;<newline46mondego>}<newline46mondego>"
"4306splitHere46","2345924splitHere46","InputStream"
"4307splitHere46","2345924splitHere46","OutputStream"
"4308splitHere46","2345924splitHere46","InputStream"
"4309splitHere46","2345924splitHere46","OutputStream"
"4310splitHere46","2345924splitHere46","int size = 0;<newline46mondego>byte[] buffer = new byte[1024];<newline46mondego>while ((size = in.read(buffer)) != -1) out.write(buffer, 0, size);<newline46mondego>"
"4311splitHere46","2345924splitHere46","IOUtils.copy()"
"4312splitHere46","2346145splitHere46","ajc -inpath library.jar -sourceroots path/to/sources -classpath $CLASSPATH<newline46mondego>"
"4313splitHere46","2346165splitHere46","from Person p where :alias in elements(p.aliases)<newline46mondego>"
"4314splitHere46","2346208splitHere46","for each vertex in Voronoi Diagram<newline46mondego>    for each segment next to this point<newline46mondego>       <doubleQuotes46>walk around the perimeter<doubleQuotes46> (just keep going counter-clockwise)<newline46mondego>                     until you get back to the starting vertex<newline46mondego>"
"4315splitHere46","2346208splitHere46","O(N)"
"4316splitHere46","2346353splitHere46","which javac<newline46mondego>which java<newline46mondego>"
"4317splitHere46","2346353splitHere46","javac HelloWorldSwing.java<newline46mondego>java HelloWorldSwing <newline46mondego>"
"4318splitHere46","2346586splitHere46","YourClass YourFile; // Need to fully qualified class name and full path for the file.<newline46mondego>"
"4319splitHere46","2346586splitHere46","public class Parser {<newline46mondego><newline46mondego>    public void parseFile (String file) {<newline46mondego>       // parsing code goes here.<newline46mondego>    }<newline46mondego>    public static void main (String[] commandLineArgs) {<newline46mondego>         Parser parser = new Parser();<newline46mondego>         parser.parseFile(commandLineArgs[0]);   //  <newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4320splitHere46","2346614splitHere46","netstat -a"
"4321splitHere46","2346631splitHere46","<doubleQuotes46>1<doubleQuotes46>"
"4322splitHere46","2346631splitHere46","1"
"4323splitHere46","2346747splitHere46","boolean dirty;"
"4324splitHere46","2346747splitHere46","true"
"4325splitHere46","2346760splitHere46","Robot.settings().delayBetweenEvents()<newline46mondego>"
"4326splitHere46","2346865splitHere46","Session session = null;<newline46mondego>    Channel channel = null;<newline46mondego>    try {<newline46mondego>        JSch ssh = new JSch();<newline46mondego>        ssh.setKnownHosts(<doubleQuotes46>/path/of/known_hosts/file<doubleQuotes46>);<newline46mondego>        session = ssh.getSession(<doubleQuotes46>username<doubleQuotes46>, <doubleQuotes46>host<doubleQuotes46>, 22);<newline46mondego>        session.setPassword(<doubleQuotes46>password<doubleQuotes46>);<newline46mondego>        session.connect();<newline46mondego>        channel = session.openChannel(<doubleQuotes46>sftp<doubleQuotes46>);<newline46mondego>        channel.connect();<newline46mondego>        ChannelSftp sftp = (ChannelSftp) channel;<newline46mondego>        sftp.put(<doubleQuotes46>/path/of/local/file<doubleQuotes46>, <doubleQuotes46>/path/of/ftp/file<doubleQuotes46>);<newline46mondego>    } catch (JSchException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } catch (SftpException e) {<newline46mondego>        e.printStackTrace();<newline46mondego>    } finally {<newline46mondego>        if (channel != null) {<newline46mondego>            channel.disconnect();<newline46mondego>        }<newline46mondego>        if (session != null) {<newline46mondego>            session.disconnect();<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"4327splitHere46","2346982splitHere46","@Override<newline46mondego>    public boolean hasNext() {<newline46mondego>      try {<newline46mondego>        return !rs.isAfterLast();<newline46mondego>      } catch (SQLException e) {<newline46mondego>        throw new MyApplicationException(<doubleQuotes46>There was an error<doubleQuotes46>, e);<newline46mondego>      }<newline46mondego>    }<newline46mondego>"
"4328splitHere46","2347236splitHere46","scala> object Test { class A; object A { println(<doubleQuotes46>A.init<doubleQuotes46>) }}        <newline46mondego>defined module Test<newline46mondego><newline46mondego>scala> new Test.A<newline46mondego>res3: Test.A = Test$A@3b48a8e6<newline46mondego><newline46mondego>scala> Test.A<newline46mondego>A.init<newline46mondego>res4: Test.A.type = Test$A$@6e453dd5<newline46mondego>"
"4329splitHere46","2347236splitHere46","scala> object Test { class A { A }; object A { println(<doubleQuotes46>A.init<doubleQuotes46>) }}<newline46mondego>defined module Test<newline46mondego><newline46mondego>scala> new Test.A                                                  <newline46mondego>A.init<newline46mondego>res5: Test.A = Test$A@4e94a28e<newline46mondego><newline46mondego>scala> new Test.A<newline46mondego>res6: Test.A = Test$A@30227d4e<newline46mondego>"
"4330splitHere46","2347356splitHere46","String string = ... // some string which has to be validated<newline46mondego>String host;<newline46mondego>int port;<newline46mondego><newline46mondego>try {<newline46mondego>  // WORKAROUND: add any scheme to make the resulting URI valid.<newline46mondego>  URI uri = new URI(<doubleQuotes46>my://<doubleQuotes46> + string); // may throw URISyntaxException<newline46mondego>  host = uri.getHost();<newline46mondego>  port = uri.getPort();<newline46mondego><newline46mondego>  if (uri.getHost() == null || uri.getPort() == -1) {<newline46mondego>    throw new URISyntaxException(uri.toString(),<newline46mondego>      <doubleQuotes46>URI must have host and port parts<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  // here, additional checks can be performed, such as<newline46mondego>  // presence of path, query, fragment, ...<newline46mondego><newline46mondego>} catch (URISyntaxException ex) {<newline46mondego>  // validation failed<newline46mondego>}<newline46mondego><newline46mondego>// validation succeeded<newline46mondego>"
"4331splitHere46","2347356splitHere46","1.1.1.1:123"
"4332splitHere46","2347356splitHere46","[::0]:123"
"4333splitHere46","2347356splitHere46","my.host.com:123"
"4334splitHere46","2347681splitHere46","required=<doubleQuotes46>true<doubleQuotes46>"
"4335splitHere46","2347843splitHere46","public static boolean DEBUG_ON = true; //change this before your production build<newline46mondego>"
"4336splitHere46","2347843splitHere46","public void debug(String message){<newline46mondego>  if(DEBUG_ON){<newline46mondego>     //stack code here<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"4337splitHere46","2347960splitHere46","readLine"
"4338splitHere46","2347960splitHere46","0000001 000000001024<newline46mondego>0000002 000000001064<newline46mondego>0000003 000000002010<newline46mondego>"
"4339splitHere46","2347960splitHere46","0000003 000000002010"
"4340splitHere46","2347960splitHere46","python create_index.py data.txt data.idx 3<newline46mondego>"
"4341splitHere46","2347960splitHere46","#1{1,12,345,867}<newline46mondego>#2{123, 3243534, 2132131231}<newline46mondego>#3{234, 35345}<newline46mondego>#4{}<newline46mondego>"
"4342splitHere46","2347960splitHere46","import sys<newline46mondego><newline46mondego># Usage: python this_script.py datafile indexfile lineno<newline46mondego># indexfile will be overwritten<newline46mondego># lineno is the data line which will be printed using the<newline46mondego># index file, as a demonstration<newline46mondego>datafilename= sys.argv[1]<newline46mondego>indexfilename = sys.argv[2]<newline46mondego>lineno = int(sys.argv[3])<newline46mondego><newline46mondego># max 999999 lines in this format<newline46mondego>format = <doubleQuotes46>%06d\n<doubleQuotes46><newline46mondego>INDEX_LENGTH = 6+1 # +1 for newline<newline46mondego><newline46mondego><newline46mondego>def create_indexfile():<newline46mondego>        indexfile = open(indexfilename, <doubleQuotes46>wB<doubleQuotes46>)<newline46mondego>        # Print index of first line<newline46mondego>        indexfile.write(format % 0)<newline46mondego><newline46mondego>        f = open(datafilename, <doubleQuotes46>rB<doubleQuotes46>)<newline46mondego>        line = f.readline()<newline46mondego>        while len(line) > 0:<newline46mondego>                indexfile.write( format % f.tell() )<newline46mondego>                line = f.readline()<newline46mondego>        f.close()<newline46mondego>        indexfile.close()<newline46mondego><newline46mondego># Retrieve the data of 1 line in the data file<newline46mondego># using the index file<newline46mondego>def get_line():<newline46mondego>        linepos = INDEX_LENGTH * (lineno - 1)<newline46mondego><newline46mondego>        indexfile = open(indexfilename, <doubleQuotes46>rB<doubleQuotes46>)<newline46mondego>        indexfile.seek(linepos)<newline46mondego>        datapos = int(indexfile.readline())<newline46mondego>        indexfile.close()<newline46mondego><newline46mondego>        datafile = open(datafilename, <doubleQuotes46>rB<doubleQuotes46>)<newline46mondego>        datafile.seek(datapos)<newline46mondego>        print datafile.readline()<newline46mondego>        datafile.close()<newline46mondego><newline46mondego><newline46mondego>if __name__ == '__main__':<newline46mondego>        create_indexfile()<newline46mondego>        get_line()<newline46mondego>"
"4343splitHere46","2348026splitHere46","<c:out value=<doubleQuotes46>${myString}<doubleQuotes46>/><newline46mondego>"
"4344splitHere46","2348026splitHere46","request.setAttribute(<doubleQuotes46>myString<doubleQuotes46>, ...)"
"4345splitHere46","2348035splitHere46","java.naming.provider.url = tcp://localhost:61616<newline46mondego>"
"4346splitHere46","2348035splitHere46","connectionFactory"
"4347splitHere46","2348065splitHere46","NoClassDefFoundError"
"4348splitHere46","2348065splitHere46","Client"
"4349splitHere46","2348065splitHere46","APP-INF/lib"
"4350splitHere46","2348065splitHere46","EarContent/APP-INF/lib"
"4351splitHere46","2348268splitHere46","package your.package.name;"
"4352splitHere46","2348268splitHere46",".java"
"4353splitHere46","2348268splitHere46","/your/package/name"
"4354splitHere46","2348268splitHere46","src"
"4355splitHere46","2348449splitHere46","CREATE TABLE COURSES (<newline46mondego>  COURSE_ID int(11) NOT NULL AUTO_INCREMENT,<newline46mondego>  COURSE_NAME varchar(20) DEFAULT NULL,<newline46mondego>  PRIMARY KEY (COURSE_ID)<newline46mondego>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<newline46mondego>"
"4356splitHere46","2348511splitHere46","ConncurrentMap<BiKey,Stuff> map = new ConcurrentHashMap<BiKey,Stuff>();<newline46mondego><newline46mondego>class BiKey{<newline46mondego>    Key1 k1;<newline46mondego>    Key2 k2;<newline46mondego>    //let equals return k1.equqls&&k2.equals and implement hashCode accordingly<newline46mondego> }<newline46mondego>"
"4357splitHere46","2348556splitHere46","ConcurrentHashMap<object, object> table;<newline46mondego><newline46mondego>public object getFromCache(object key)<newline46mondego>{<newline46mondego>    value = table.get(key);<newline46mondego><newline46mondego>    if (value == null)<newline46mondego>    {<newline46mondego>        //key isn't a key into this table, ie. it's not in the cache<newline46mondego>        value = CalculateValueForKey(key)<newline46mondego>        object fromCache = table.putIfAbsent(key, value);<newline46mondego>    }<newline46mondego><newline46mondego>    return value;<newline46mondego>}<newline46mondego><newline46mondego>/**<newline46mondego>* This calculates a new value to put into the cache<newline46mondego>*/<newline46mondego>public abstract object CalculateValueForKey(object key);<newline46mondego>"
"4358splitHere46","2348662splitHere46","publish()"
"4359splitHere46","2348662splitHere46","Vector"
"4360splitHere46","2348662splitHere46","publish()"
"4361splitHere46","2348662splitHere46","@Override<newline46mondego>protected Vector doInBackground()<newline46mondego>{       <newline46mondego>    int i = 0;<newline46mondego>    while(i < 100000000)<newline46mondego>    {<newline46mondego>        Vector v = new Vector();<newline46mondego>        v.add(i);<newline46mondego><newline46mondego>        i++;             <newline46mondego>        publish(v); <newline46mondego>    }<newline46mondego><newline46mondego>    return v;<newline46mondego>}<newline46mondego>"
"4362splitHere46","2348662splitHere46","rowsList"
"4363splitHere46","2348662splitHere46","@Override<newline46mondego>protected void process(List<Vector> rowsList)<newline46mondego>{<newline46mondego>   for(Vector row : rowsList){<newline46mondego>       DefaultTableModel tModel = (DefaultTableModel)jTable1.getModel();<newline46mondego>       tModel.addRow(row);            <newline46mondego>   }<newline46mondego>}<newline46mondego>"
"4364splitHere46","2348905splitHere46","OutputStream"
"4365splitHere46","2349078splitHere46","SerializationException"
"4366splitHere46","2349078splitHere46","SerializableException"
"4367splitHere46","2349078splitHere46","Exception"
"4368splitHere46","2349259splitHere46",".hideOnLoad {<newline46mondego>    display: none;<newline46mondego>}<newline46mondego>"
"4369splitHere46","2349259splitHere46","<a4j:outputPanel id=<doubleQuotes46>myMessage<doubleQuotes46> styleClass=<doubleQuotes46>hideOnLoad<doubleQuotes46>><newline46mondego>    <h:outputText value=<doubleQuotes46>This is my first message<doubleQuotes46> /><newline46mondego>    <h:outputText value=<doubleQuotes46>This is my second message<doubleQuotes46> /><newline46mondego></a4j:outputPanel><newline46mondego><br/><newline46mondego><a4j:commandLink ajaxSingle=<doubleQuotes46>true<doubleQuotes46><newline46mondego>    onclick=<doubleQuotes46>$('myMessage').removeClassName('hideOnLoad');<doubleQuotes46><newline46mondego>    value=<doubleQuotes46>Show my message<doubleQuotes46> /><newline46mondego>"
"4370splitHere46","2349272splitHere46","public interface Parser {<newline46mondego>    public TokenIterator parse(InputStream is);<newline46mondego>}<newline46mondego>"
"4371splitHere46","2349272splitHere46","class ParserImpl extends Parser {<newline46mondego>  def parse(is: InputStream) = ...<newline46mondego>}<newline46mondego>"
"4372splitHere46","2349272splitHere46","public class Consumer {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Parser p = new ParserImpl();       // just like a Java class!<newline46mondego>        ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4373splitHere46","2349272splitHere46","$ scalac *.scala *.java<newline46mondego>$ javac -classpath . *.java<newline46mondego>"
"4374splitHere46","2349377splitHere46","double result = Math.sin(Math.PI / 2.0);<newline46mondego>"
"4375splitHere46","2349662splitHere46","tab"
"4376splitHere46","2349662splitHere46","for"
"4377splitHere46","2349662splitHere46","Tab selected_tab = null;<newline46mondego><newline46mondego>for ( Tab tab: tabList ) {<newline46mondego>    if (tab_I_want(tab)) {<newline46mondego>       selected_tab = tab;<newline46mondego>       break;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>// selected_tab is either null or the tab you want<newline46mondego>"
"4378splitHere46","2349741splitHere46","doGet()"
"4379splitHere46","2349741splitHere46","GET"
"4380splitHere46","2349741splitHere46","doPost()"
"4381splitHere46","2349741splitHere46","POST"
"4382splitHere46","2349741splitHere46","doGet()"
"4383splitHere46","2349741splitHere46","doPost()"
"4384splitHere46","2349741splitHere46","GET"
"4385splitHere46","2349741splitHere46","doGet()"
"4386splitHere46","2349741splitHere46","POST"
"4387splitHere46","2349741splitHere46","<form>"
"4388splitHere46","2349741splitHere46","method"
"4389splitHere46","2349741splitHere46","post"
"4390splitHere46","2349741splitHere46","<form action=<doubleQuotes46>login<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46>><newline46mondego>    <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>username<doubleQuotes46>><newline46mondego>    <input type=<doubleQuotes46>password<doubleQuotes46> name=<doubleQuotes46>password<doubleQuotes46>><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> value=<doubleQuotes46>login<doubleQuotes46>><newline46mondego>    <span class=<doubleQuotes46>error<doubleQuotes46>>${error}</span><newline46mondego></form><newline46mondego>"
"4391splitHere46","2349741splitHere46","public class LoginServlet extends HttpServlet {<newline46mondego><newline46mondego>    private UserDAO userDAO;<newline46mondego><newline46mondego>    public void init() {<newline46mondego>        this.userDAO = Config.getInstance(getServletContext()).getDAOFactory().getUserDAO();<newline46mondego>    }<newline46mondego><newline46mondego>    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>        String username = request.getParameter(<doubleQuotes46>username<doubleQuotes46>);<newline46mondego>        String password = request.getParameter(<doubleQuotes46>password<doubleQuotes46>);<newline46mondego>        User user = userDAO.find(username, password);<newline46mondego>        if (user != null) {<newline46mondego>            request.getSession().setAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>            response.sendRedirect(<doubleQuotes46>home<doubleQuotes46>);<newline46mondego>        } else {<newline46mondego>            request.setAttribute(<doubleQuotes46>error<doubleQuotes46>, <doubleQuotes46>Unknown user, please try again<doubleQuotes46>);<newline46mondego>            request.getRequestDispatcher(<doubleQuotes46>/login.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4392splitHere46","2349741splitHere46","User"
"4393splitHere46","2349741splitHere46","User"
"4394splitHere46","2349741splitHere46","http://example.com/contextname/home"
"4395splitHere46","2349741splitHere46","${error}"
"4396splitHere46","2349741splitHere46","login.jsp"
"4397splitHere46","2349741splitHere46","/WEB-INF/login.jsp"
"4398splitHere46","2349741splitHere46","http://example.com/contextname/login"
"4399splitHere46","2349741splitHere46","doGet()"
"4400splitHere46","2349741splitHere46","protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    request.getRequestDispatcher(<doubleQuotes46>/WEB-INF/login.jsp<doubleQuotes46>).forward(request, response);<newline46mondego>}<newline46mondego>"
"4401splitHere46","2349741splitHere46","doPost()"
"4402splitHere46","2349741splitHere46","url-pattern"
"4403splitHere46","2349741splitHere46","/login"
"4404splitHere46","2349741splitHere46","compareTo()"
"4405splitHere46","2349741splitHere46","equals()"
"4406splitHere46","2349741splitHere46","getParameter()"
"4407splitHere46","2349741splitHere46","id"
"4408splitHere46","2349741splitHere46","password"
"4409splitHere46","2349741splitHere46","multipart/form-data"
"4410splitHere46","2349741splitHere46","application/x-www-form-urlencoded"
"4411splitHere46","2349741splitHere46","name1=value1&name2=value2&name3=value3"
"4412splitHere46","2349741splitHere46","multipart/form-data"
"4413splitHere46","2349741splitHere46","<input type=<doubleQuotes46>file<doubleQuotes46>>"
"4414splitHere46","2349741splitHere46","HttpServletRequest#getParts()"
"4415splitHere46","2349744splitHere46","<str name=<doubleQuotes46>rows<doubleQuotes46>>10</str><newline46mondego><str name=<doubleQuotes46>start<doubleQuotes46>>0</str><newline46mondego>"
"4416splitHere46","2349908splitHere46","StringTokenizer st = new StringTokenizer((String) buf,<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"4417splitHere46","2349908splitHere46","buf"
"4418splitHere46","2349908splitHere46","String"
"4419splitHere46","2349908splitHere46","Object"
"4420splitHere46","2349908splitHere46","cannot find symbol constructor StringTokenizer(java.lang.Object,java.lang.String)<newline46mondego>location: class java.util.StringTokenizer st = new StringTokenizer(buf,<doubleQuotes46>,<doubleQuotes46>);<newline46mondego>"
"4421splitHere46","2349908splitHere46","java.util.StringTokenizer"
"4422splitHere46","2349908splitHere46","import"
"4423splitHere46","2349908splitHere46","StringTokenizer"
"4424splitHere46","2349908splitHere46","(java.lang.Object, java.lang.String)"
"4425splitHere46","2349908splitHere46","java.lang.Object"
"4426splitHere46","2349908splitHere46","java.lang.String"
"4427splitHere46","2349974splitHere46","tos/types/AM.h"
"4428splitHere46","2349974splitHere46","154: enum {<newline46mondego>155:    MSG_DATA_SIZE = offsetof(struct TOS_Msg, crc) + sizeof(uint16_t), // 36 by default<newline46mondego>156:    TINYSEC_MSG_DATA_SIZE = offsetof(struct TinySec_Msg, mac) + TINYSEC_MAC_LENGTH, // 41 by default<newline46mondego>157:    DATA_LENGTH = TOSH_DATA_LENGTH,<newline46mondego>158:    LENGTH_BYTE_NUMBER = offsetof(struct TOS_Msg, length) + 1,<newline46mondego>159:    TINYSEC_NODE_ID_SIZE = sizeof(uint16_t)<newline46mondego>160: };<newline46mondego>"
"4429splitHere46","2349974splitHere46","offsetof()"
"4430splitHere46","2349974splitHere46","stddef.h"
"4431splitHere46","2349974splitHere46","tos.h"
"4432splitHere46","2349974splitHere46","AM.h"
"4433splitHere46","2349974splitHere46","offsetof()"
"4434splitHere46","2349974splitHere46","offsetof()"
"4435splitHere46","2349974splitHere46","AM.h"
"4436splitHere46","2349974splitHere46","#define offsetof(st, m) ((size_t) ( (char *)&((st *)(0))->m - (char *)0 ))  // stolen from Wikipedia<newline46mondego>"
"4437splitHere46","2349983splitHere46","// create a private method, getIntValDialog, that returns an integer value and accepts <newline46mondego>// two string values as arguments<newline46mondego>private int getIntValDialog(String smessage, String stitle)<newline46mondego>{<newline46mondego>     // declare and initialize a string variable, sValue, to an empty string<newline46mondego>     String sValue = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>     // Accept input to sValue from a Input Dialog using smessage, stitle,<newline46mondego>     //  and a question icon as arguments<newline46mondego>     // TODO (this is your part of the task)<newline46mondego><newline46mondego>     // return the integer converted value of sValue<newline46mondego>     return Integer.valueOf(sValue);<newline46mondego><newline46mondego>// end getIntValDialog method<newline46mondego>}<newline46mondego>"
"4438splitHere46","2350302splitHere46","java.util.Stack"
"4439splitHere46","2350302splitHere46","java.util.Vector"
"4440splitHere46","2350302splitHere46","is-a"
"4441splitHere46","2350302splitHere46","has-a"
"4442splitHere46","2350302splitHere46","Vector"
"4443splitHere46","2350302splitHere46","Stack"
"4444splitHere46","2350302splitHere46","Stack"
"4445splitHere46","2350302splitHere46","System.exit(n)"
"4446splitHere46","2350302splitHere46","Base b = new Child(); b.method();"
"4447splitHere46","2350302splitHere46","Base.method()"
"4448splitHere46","2350302splitHere46","@Override"
"4449splitHere46","2350566splitHere46","?"
"4450splitHere46","2350566splitHere46","<? extends java.lang.Comparable>"
"4451splitHere46","2350609splitHere46","Animal dog = new Dog();<newline46mondego>"
"4452splitHere46","2350609splitHere46","dog"
"4453splitHere46","2350609splitHere46","Animal"
"4454splitHere46","2350609splitHere46","Dog"
"4455splitHere46","2350609splitHere46","var dog = new Dog(); // Equivalent to Dog dog = new Dog();<newline46mondego>"
"4456splitHere46","2350609splitHere46","dog"
"4457splitHere46","2350652splitHere46","PJIRC is a very complete Java IRC Client.<newline46mondego><newline46mondego>  * Highlight support<newline46mondego>  * ASL handling<newline46mondego>  * Graphical bitmap used for smiley's<newline46mondego>  * Nickname auto completion<newline46mondego>  * Nick, channel and URL catcher<newline46mondego>  * Sound support<newline46mondego>  * Multilingual support<newline46mondego>  * Esthetical options such as background image, per-channel color configuration, and so on...<newline46mondego>  * UTF-8 encoding support<newline46mondego>  * Support for external control via javascript<newline46mondego>  * <doubleQuotes46>On connect<doubleQuotes46> command list<newline46mondego>  * Time stamping<newline46mondego>  * Fast, light and reliable<newline46mondego>  * Free and open source<newline46mondego>"
"4458splitHere46","2350873splitHere46","javaws -uninstall<newline46mondego>"
"4459splitHere46","2350873splitHere46","javaws -uninstall <jnlp-file><newline46mondego>"
"4460splitHere46","2350946splitHere46","Select u from User u where u.birthDate between :minDate and :maxDate<newline46mondego>"
"4461splitHere46","2350946splitHere46","minDate"
"4462splitHere46","2350946splitHere46","maxDate"
"4463splitHere46","2351061splitHere46","while loop"
"4464splitHere46","2351061splitHere46","try<newline46mondego>{<newline46mondego>  while (m_flagRunUserThreadManager)<newline46mondego>  {<newline46mondego>    try<newline46mondego>    {<newline46mondego>      m_listenSocket.setSoTimeout(10000);<newline46mondego>      Socket clientSocket = m_listenSocket.accept();<newline46mondego>      //create a thread for client<newline46mondego>      MyClientHandler clientHandler = new ClientHandler(clientSocket);<newline46mondego>      clientHandler.setPriority(Thread.MIN_PRIORITY);<newline46mondego>      clientHandler.start(); <newline46mondego><newline46mondego>    }<newline46mondego>    catch(SocketTimeoutException excp)<newline46mondego>    {<newline46mondego>      String strError = <doubleQuotes46>No requests for 10 Sec.<doubleQuotes46>;<newline46mondego>      //display this message    <newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>catch(IOException excp)<newline46mondego>{<newline46mondego>    // display the exception<newline46mondego>}<newline46mondego>"
"4465splitHere46","2351061splitHere46","while loop"
"4466splitHere46","2351221splitHere46","import java.util.HashMap;<newline46mondego>import java.util.Locale;<newline46mondego>import java.util.Map;<newline46mondego>import java.util.ResourceBundle;<newline46mondego><newline46mondego>public class UIBundle {<newline46mondego>    private static final Map<Locale, ResourceBundle> allUIResources = new HashMap<Locale, ResourceBundle>();<newline46mondego><newline46mondego>    public static String getString(final String key) {<newline46mondego>        return getString(key, Locale.getDefault());<newline46mondego>    }<newline46mondego><newline46mondego>    public static String getString(final String key, final Locale locale) {<newline46mondego>        ResourceBundle rb = allUIResources.get(locale);<newline46mondego>        if (rb == null) {<newline46mondego>            rb = ResourceBundle.getBundle(<doubleQuotes46>my-ui-resource<doubleQuotes46>, locale);<newline46mondego>            allUIResources.put(locale, rb);<newline46mondego>        }<newline46mondego>        return rb.getString(key);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4467splitHere46","2351237splitHere46","sox -d -t wav - | lame - test.mp3"
"4468splitHere46","2351237splitHere46","Input File ..."
"4469splitHere46","2351354splitHere46","java.util.Iterator"
"4470splitHere46","2351354splitHere46","Map"
"4471splitHere46","2351354splitHere46","Map"
"4472splitHere46","2351354splitHere46","Integer"
"4473splitHere46","2351354splitHere46","String"
"4474splitHere46","2351354splitHere46","Integer"
"4475splitHere46","2351354splitHere46","Map<Integer, String> map = ...<newline46mondego><newline46mondego>Iterator<Map.Entry<Integer, String>> it = map.entrySet().iterator();<newline46mondego><newline46mondego>while (it.hasNext()) {<newline46mondego>  Map.Entry<Integer, String> entry = it.next();<newline46mondego><newline46mondego>  // Remove entry if key is null or equals 0.<newline46mondego>  if (entry.getKey() == null || entry.getKey() == 0) {<newline46mondego>    it.remove();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4476splitHere46","2351413splitHere46","LinkedList<Integer> li2 = new LinkedList<Integer>(li);<newline46mondego>"
"4477splitHere46","2351413splitHere46","List<Object>"
"4478splitHere46","2351413splitHere46","List<?>"
"4479splitHere46","2351580splitHere46","System.out.println(iAL.get(i));"
"4480splitHere46","2351580splitHere46","List"
"4481splitHere46","2351580splitHere46","array"
"4482splitHere46","2351889splitHere46","<hr />"
"4483splitHere46","2352110splitHere46","InputStream"
"4484splitHere46","2352110splitHere46","main()"
"4485splitHere46","2352376splitHere46","-classpath path\to\j3dutils.jar"
"4486splitHere46","2352492splitHere46","action=<doubleQuotes46>src/core/Login<doubleQuotes46>"
"4487splitHere46","2352492splitHere46","/Login"
"4488splitHere46","2352660splitHere46","PrintCompilation"
"4489splitHere46","2352836splitHere46","/WEB-INF/classes"
"4490splitHere46","2352836splitHere46","src"
"4491splitHere46","2352836splitHere46","<jsp:include>"
"4492splitHere46","2352836splitHere46","<jsp:include page=<doubleQuotes46>/WEB-INF/classes/resources/rules_copy.xml<doubleQuotes46> /><newline46mondego>"
"4493splitHere46","2353064splitHere46","ClassLoader#getResource()"
"4494splitHere46","2353064splitHere46","URL resource = classLoader.getResource(<doubleQuotes46>Resource_Name<doubleQuotes46>);<newline46mondego>File file = new File(resource.toURI());<newline46mondego>FileInputStream input = new FileInputStream(file);<newline46mondego>"
"4495splitHere46","2353064splitHere46","FileInputStream"
"4496splitHere46","2353064splitHere46","InputStream"
"4497splitHere46","2353064splitHere46","InputStream"
"4498splitHere46","2353229splitHere46","/WEB-INF/lib"
"4499splitHere46","2353262splitHere46","$ANT_HOME/lib"
"4500splitHere46","2353272splitHere46","int mattress = 24;<newline46mondego>int mask = 1;<newline46mondego>for(int i = 0; i < num_stores; ++i) {<newline46mondego>    if(mask & mattress != 0) {<newline46mondego>        System.out.println(<doubleQuotes46>Store <doubleQuotes46>+i+<doubleQuotes46> has mattresses!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    mask = mask << 1;<newline46mondego>}<newline46mondego>"
"4501splitHere46","2353272splitHere46","if"
"4502splitHere46","2353286splitHere46","taskPane.addPropertyChangeListener(JXCollapsiblePane.ANIMATION_STATE_KEY, new PropertyChangeListener() {<newline46mondego>  public void propertyChange(PropertyChangeEvent e) {<newline46mondego>    if(e.getNewValue().equals(<doubleQuotes46>expanded<doubleQuotes46>) {<newline46mondego>      ...<newline46mondego>    }<newline46mondego>    else if(e.getNewValue().equals(<doubleQuotes46>collapsed<doubleQuotes46>) {<newline46mondego>      ...<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4503splitHere46","2353444splitHere46","String.trim();<newline46mondego>"
"4504splitHere46","2353458splitHere46","fmt:message"
"4505splitHere46","2353458splitHere46","spring:message"
"4506splitHere46","2353458splitHere46",".properties"
"4507splitHere46","2353458splitHere46","InternalResourceViewResolver"
"4508splitHere46","2353458splitHere46","loadView()"
"4509splitHere46","2353521splitHere46","<action path=<doubleQuotes46>/someAction<doubleQuotes46> name=<doubleQuotes46>somForm<doubleQuotes46> type=<doubleQuotes46>com.examples.SomeDispatchAction /><newline46mondego><action path=<doubleQuotes46>/anotherAction<doubleQuotes46> name=<doubleQuotes46>anotherForm<doubleQuotes46> type=<doubleQuotes46>com.examples.SomeDispatchAction /><newline46mondego>"
"4510splitHere46","2353593splitHere46","MysqlConnectionPoolDataSource"
"4511splitHere46","2353593splitHere46","javax.sql.DataSource"
"4512splitHere46","2353593splitHere46","PooledConnection#getConnection()"
"4513splitHere46","2353593splitHere46","Connection"
"4514splitHere46","2353593splitHere46","Statement"
"4515splitHere46","2353593splitHere46","ResultSet"
"4516splitHere46","2353773splitHere46","// generics version<newline46mondego>private HashMap<String, String> testMessages = buildMap();<newline46mondego><newline46mondego>for (String v : testMessages.values()) {<newline46mondego>  if (filename.startsWith(v) {<newline46mondego>    // found a map value that starts the file name<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>// alternative non-generics version<newline46mondego>private HashMap testMessages; // assigned somewhere<newline46mondego><newline46mondego>for (Object v : testMessages.values()) {<newline46mondego>  if (filename.startsWith((String) v) {<newline46mondego>    // found a map value that starts the file name<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4517splitHere46","2353795splitHere46","public class DataSourceModule extends AbstractModule {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void configure() {<newline46mondego>        Names.bindProperties(binder(), loadProperties());<newline46mondego><newline46mondego>        bind(DataSource.class).toProvider(H2DataSourceProvider.class).in(Scopes.SINGLETON);<newline46mondego>        bind(MyService.class);<newline46mondego>    }<newline46mondego><newline46mondego>    static class H2DataSourceProvider implements Provider<DataSource> {<newline46mondego><newline46mondego>        private final String url;<newline46mondego>        private final String username;<newline46mondego>        private final String password;<newline46mondego><newline46mondego>        public H2DataSourceProvider(@Named(<doubleQuotes46>url<doubleQuotes46>) final String url,<newline46mondego>                                    @Named(<doubleQuotes46>username<doubleQuotes46>) final String username,<newline46mondego>                                    @Named(<doubleQuotes46>password<doubleQuotes46>) final String password) {<newline46mondego>            this.url = url;<newline46mondego>            this.username = username;<newline46mondego>            this.password = password;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public DataSource get() {<newline46mondego>            final JdbcDataSource dataSource = new JdbcDataSource();<newline46mondego>            dataSource.setURL(url);<newline46mondego>            dataSource.setUser(username);<newline46mondego>            dataSource.setPassword(password);<newline46mondego>            return dataSource;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static class MyService {<newline46mondego>        private final DataSource dataSource;<newline46mondego><newline46mondego>        @Inject<newline46mondego>        public MyService(final DataSource dataSource) {<newline46mondego>            this.dataSource = dataSource;<newline46mondego>        }<newline46mondego><newline46mondego>        public void singleUnitOfWork() {<newline46mondego><newline46mondego>            Connection cn = null;<newline46mondego><newline46mondego>            try {<newline46mondego>                cn = dataSource.getConnection();<newline46mondego>                // Use the connection<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    cn.close();<newline46mondego>                } catch (Exception e) {}<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private Properties loadProperties() {<newline46mondego>        // Load properties from appropriate place...<newline46mondego>        // should contain definitions for:<newline46mondego>        // url=...<newline46mondego>        // username=...<newline46mondego>        // password=...<newline46mondego>        return new Properties();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4518splitHere46","2353795splitHere46","public class TxModule extends AbstractModule {<newline46mondego><newline46mondego>    @Override<newline46mondego>    protected void configure() {<newline46mondego>        Names.bindProperties(binder(), loadProperties());<newline46mondego><newline46mondego>        final TransactionManager tm = getTransactionManager();<newline46mondego><newline46mondego>        bind(DataSource.class).annotatedWith(Real.class).toProvider(H2DataSourceProvider.class).in(Scopes.SINGLETON);<newline46mondego>        bind(DataSource.class).annotatedWith(TxAware.class).to(TxAwareDataSource.class).in(Scopes.SINGLETON);<newline46mondego>        bind(TransactionManager.class).toInstance(tm);<newline46mondego>        bindInterceptor(Matchers.any(), Matchers.annotatedWith(Transactional.class), new TxMethodInterceptor(tm));<newline46mondego>        bind(MyService.class);<newline46mondego>    }<newline46mondego><newline46mondego>    private TransactionManager getTransactionManager() {<newline46mondego>        // Get the transaction manager<newline46mondego>        return null;<newline46mondego>    }<newline46mondego><newline46mondego>    static class TxMethodInterceptor implements MethodInterceptor {<newline46mondego><newline46mondego>        private final TransactionManager tm;<newline46mondego><newline46mondego>        public TxMethodInterceptor(final TransactionManager tm) {<newline46mondego>            this.tm = tm;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public Object invoke(final MethodInvocation invocation) throws Throwable {<newline46mondego>            // Start tx if necessary<newline46mondego>            return invocation.proceed();<newline46mondego>            // Commit tx if started here.<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static class TxAwareDataSource implements DataSource {<newline46mondego><newline46mondego>        static ThreadLocal<Connection> txConnection = new ThreadLocal<Connection>();<newline46mondego>        private final DataSource ds;<newline46mondego>        private final TransactionManager tm;<newline46mondego><newline46mondego>        @Inject<newline46mondego>        public TxAwareDataSource(@Real final DataSource ds, final TransactionManager tm) {<newline46mondego>            this.ds = ds;<newline46mondego>            this.tm = tm;<newline46mondego>        }<newline46mondego><newline46mondego>        public Connection getConnection() throws SQLException {<newline46mondego>            try {<newline46mondego>                final Transaction transaction = tm.getTransaction();<newline46mondego>                if (transaction != null && transaction.getStatus() == Status.STATUS_ACTIVE) {<newline46mondego><newline46mondego>                    Connection cn = txConnection.get();<newline46mondego>                    if (cn == null) {<newline46mondego>                        cn = new TxAwareConnection(ds.getConnection());<newline46mondego>                        txConnection.set(cn);<newline46mondego>                    }<newline46mondego><newline46mondego>                    return cn;<newline46mondego><newline46mondego>                } else {<newline46mondego>                    return ds.getConnection();<newline46mondego>                }<newline46mondego>            } catch (final SystemException e) {<newline46mondego>                throw new SQLException(e);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Omitted delegate methods.<newline46mondego>    }<newline46mondego><newline46mondego>    static class TxAwareConnection implements Connection {<newline46mondego><newline46mondego>        private final Connection cn;<newline46mondego><newline46mondego>        public TxAwareConnection(final Connection cn) {<newline46mondego>            this.cn = cn;<newline46mondego>        }<newline46mondego><newline46mondego>        public void close() throws SQLException {<newline46mondego>            try {<newline46mondego>                cn.close();<newline46mondego>            } finally {<newline46mondego>                TxAwareDataSource.txConnection.set(null);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        // Omitted delegate methods.<newline46mondego>    }<newline46mondego><newline46mondego>    static class MyService {<newline46mondego>        private final DataSource dataSource;<newline46mondego><newline46mondego>        @Inject<newline46mondego>        public MyService(@TxAware final DataSource dataSource) {<newline46mondego>            this.dataSource = dataSource;<newline46mondego>        }<newline46mondego><newline46mondego>        @Transactional<newline46mondego>        public void singleUnitOfWork() {<newline46mondego>            Connection cn = null;<newline46mondego><newline46mondego>            try {<newline46mondego>                cn = dataSource.getConnection();<newline46mondego>                // Use the connection<newline46mondego>            } catch (final SQLException e) {<newline46mondego>                throw new RuntimeException(e);<newline46mondego>            } finally {<newline46mondego>                try {<newline46mondego>                    cn.close();<newline46mondego>                } catch (final Exception e) {}<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4519splitHere46","2353860splitHere46","user.p"
"4520splitHere46","2354269splitHere46","InputStream is = socket.getInputStream();<newline46mondego>        byte[] buffer = new byte[20000];<newline46mondego>        int bytesRead;<newline46mondego>        do {<newline46mondego>            System.out.println(<doubleQuotes46>reading<doubleQuotes46>);<newline46mondego>            bytesRead = is.read(buffer);<newline46mondego>        }<newline46mondego>        while (is.available() > 0 && bytesRead != -1);<newline46mondego>        System.out.println(<doubleQuotes46>socket read<doubleQuotes46>);<newline46mondego>"
"4521splitHere46","2354292splitHere46","deleted=1"
"4522splitHere46","2354292splitHere46","Cursor managedCursor = act.managedQuery(contacts, projection, <newline46mondego>                ContactsContract.Groups.DELETED + <doubleQuotes46>=0<doubleQuotes46>, <newline46mondego>                null,<newline46mondego>                ContactsContract.Groups.TITLE + <doubleQuotes46> ASC<doubleQuotes46>);<newline46mondego>        return managedCursor;<newline46mondego>"
"4523splitHere46","2354521splitHere46","main()"
"4524splitHere46","2354521splitHere46","javac MyProgram.java"
"4525splitHere46","2354521splitHere46","java MyProgram"
"4526splitHere46","2354521splitHere46","main()"
"4527splitHere46","2354521splitHere46","java MyProgram <your params go here>"
"4528splitHere46","2354601splitHere46","<bean id=<doubleQuotes46>dao1<doubleQuotes46> class=<doubleQuotes46>com.app.MyDaoClass<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>dataSource<doubleQuotes46> ref=<doubleQuotes46>dataSource1<doubleQuotes46>/><newline46mondego></bean><newline46mondego><newline46mondego><bean id=<doubleQuotes46>dao2<doubleQuotes46> class=<doubleQuotes46>com.app.MyDaoClass<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>dataSource<doubleQuotes46> ref=<doubleQuotes46>dataSource2<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"4529splitHere46","2354601splitHere46","dao1"
"4530splitHere46","2354601splitHere46","dao2"
"4531splitHere46","2354601splitHere46","DataSource"
"4532splitHere46","2354601splitHere46","dao1"
"4533splitHere46","2354601splitHere46","dao2"
"4534splitHere46","2354615splitHere46","TimeUnit.MILLISECONDS.toSecond(long d)"
"4535splitHere46","2354615splitHere46","public long toSeconds(long d) { return d/(C3/C2); }<newline46mondego>"
"4536splitHere46","2354615splitHere46","C2"
"4537splitHere46","2354615splitHere46","C3"
"4538splitHere46","2354964splitHere46","lastSlashIndex = name.lastIndexOf(<doubleQuotes46>\\<doubleQuotes46>);<newline46mondego>if (lastSlashIndex == -1) {<newline46mondego>    lastSlashIndex = name.lastIndexOf(<doubleQuotes46>/<doubleQuotes46>); //unix client<newline46mondego>}<newline46mondego>String shortName = name;<newline46mondego>if (lastSlashIndex != -1) {<newline46mondego>    shortName = name.substring(lastSlashIndex);<newline46mondego>}<newline46mondego>"
"4539splitHere46","2354964splitHere46","\"
"4540splitHere46","2354996splitHere46","JPopupMenu"
"4541splitHere46","2354996splitHere46","final JTextField textField = ...<newline46mondego>JButton button = ...<newline46mondego>button.addActionListener(new ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        JPopupMenu popup = new JPopupMenu();<newline46mondego>        popup.setLayout(new BorderLayout());<newline46mondego>        popup.add(new JPanel()); // your component<newline46mondego>        popup.setPopupSize(100, 100);<newline46mondego>        popup.show(textField, 0, textField.getHeight());<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4542splitHere46","2355296splitHere46","com.sun.javadoc"
"4543splitHere46","2355296splitHere46","tools.jar"
"4544splitHere46","2355296splitHere46","<dependencies><newline46mondego>  <dependency><newline46mondego>    <groupId>sun.jdk</groupId><newline46mondego>    <artifactId>tools</artifactId><newline46mondego>    <version>1.5.0</version><newline46mondego>    <scope>system</scope><newline46mondego>    <systemPath>${java.home}/../lib/tools.jar</systemPath><newline46mondego>  </dependency><newline46mondego></dependencies><newline46mondego>"
"4545splitHere46","2355298splitHere46","URL"
"4546splitHere46","2355298splitHere46","Serializable"
"4547splitHere46","2355298splitHere46","String"
"4548splitHere46","2355298splitHere46","String"
"4549splitHere46","2355298splitHere46","URL"
"4550splitHere46","2355298splitHere46","java.lang.URL"
"4551splitHere46","2355298splitHere46","URL"
"4552splitHere46","2355298splitHere46","String"
"4553splitHere46","2355589splitHere46","beanFactory.getBean(IClass.class);<newline46mondego>"
"4554splitHere46","2355675splitHere46","AtomicInteger"
"4555splitHere46","2355675splitHere46","AtomicLong"
"4556splitHere46","2355882splitHere46","merge"
"4557splitHere46","2355882splitHere46","update"
"4558splitHere46","2355882splitHere46","merge"
"4559splitHere46","2355882splitHere46","myInstance = (myInstanceClass) Session.merge(myInstance);<newline46mondego>"
"4560splitHere46","2356104splitHere46","<newline46mondego>// if your config.ini file is in the com package.<newline46mondego>URL url = getClass().getClassLoader().getResource(<doubleQuotes46>com/config.ini<doubleQuotes46>);<newline46mondego>System.out.println(<doubleQuotes46>URL=<doubleQuotes46> + url);<newline46mondego><newline46mondego>InputStream is = getClass().getClassLoader().getResourceAsStream(<doubleQuotes46>com/config.ini<doubleQuotes46>);<newline46mondego>try {<newline46mondego>    if (is != null) {<newline46mondego>        BufferedReader br = new BufferedReader(new InputStreamReader(is));<newline46mondego>        String line;<newline46mondego>        while ((line = br.readLine()) != null) {<newline46mondego>            System.out.println(line);<newline46mondego>        }<newline46mondego>    }<newline46mondego>    else {<newline46mondego>        System.out.println(<doubleQuotes46>resource not found.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>catch (IOException e) {<newline46mondego>    e.printStackTrace();<newline46mondego>}<newline46mondego><newline46mondego>"
"4561splitHere46","2356118splitHere46","Thingy<T>"
"4562splitHere46","2356118splitHere46","T"
"4563splitHere46","2356118splitHere46","Thingy"
"4564splitHere46","2356118splitHere46","class Thingy<X> { }<newline46mondego><newline46mondego>interface Foo<X> {<newline46mondego>  X frobnicate(Thingy<X> a);<newline46mondego>}<newline46mondego>"
"4565splitHere46","2356118splitHere46","class Thingy<X> { }<newline46mondego><newline46mondego>interface Foo<X, T extends Thingy<X>> {<newline46mondego>  X frobnicate(T a);<newline46mondego>}<newline46mondego>"
"4566splitHere46","2356118splitHere46","interface Foo {<newline46mondego>  <T> T frobnicate(Thingy<T> a);<newline46mondego>}<newline46mondego>"
"4567splitHere46","2356210splitHere46","BufferedReader"
"4568splitHere46","2356210splitHere46","BufferedInputStream"
"4569splitHere46","2356210splitHere46","BufferedReader"
"4570splitHere46","2356210splitHere46","java.nio"
"4571splitHere46","2356210splitHere46","java.io"
"4572splitHere46","2356291splitHere46","StringTokenizer"
"4573splitHere46","2356291splitHere46","String s = <doubleQuotes46>ABC|DEF||FGHT<doubleQuotes46>;<newline46mondego>String[] r = s.split(<doubleQuotes46>\\|<doubleQuotes46>);<newline46mondego>"
"4574splitHere46","2356458splitHere46","javac *.java<newline46mondego>"
"4575splitHere46","2356458splitHere46","javac -d bin *.java<newline46mondego>"
"4576splitHere46","2356474splitHere46","HttpServletRequest"
"4577splitHere46","2356474splitHere46","JspContext"
"4578splitHere46","2356474splitHere46","parameterMap"
"4579splitHere46","2356474splitHere46","<c:forEach items=<doubleQuotes46>${param}<doubleQuotes46> var=<doubleQuotes46>p<doubleQuotes46>><newline46mondego>    Param: ${p.key}=<newline46mondego>    <c:forEach items=<doubleQuotes46>${p.value}<doubleQuotes46> var=<doubleQuotes46>v<doubleQuotes46> varStatus=<doubleQuotes46>loop<doubleQuotes46>><newline46mondego>        ${v}${loop.last ? '<newline46mondego>' : ','}<newline46mondego>    </c:forEach><newline46mondego></c:forEach><newline46mondego>"
"4580splitHere46","2356692splitHere46","get()"
"4581splitHere46","2356692splitHere46","get()"
"4582splitHere46","2356836splitHere46","clone()"
"4583splitHere46","2356836splitHere46","clone"
"4584splitHere46","2356836splitHere46","Cloneable"
"4585splitHere46","2356836splitHere46","clone()"
"4586splitHere46","2356840splitHere46","A_moved = A + |(B-A)|*d<newline46mondego>"
"4587splitHere46","2356840splitHere46","Vector2D a_moved = a.add(b.subtract(a).norm().multiply(d));<newline46mondego>"
"4588splitHere46","2357042splitHere46","context.getBean(<doubleQuotes46>testBean<doubleQuotes46>)"
"4589splitHere46","2357042splitHere46","scope = <doubleQuotes46>prototype<doubleQuotes46>"
"4590splitHere46","2357042splitHere46","<bean id=<doubleQuotes46>testBean<doubleQuotes46> class=<doubleQuotes46>com.spring.ioc.TestClass<doubleQuotes46> scope = <doubleQuotes46>prototype<doubleQuotes46>> <newline46mondego>...<newline46mondego>"
"4591splitHere46","2357083splitHere46","keytool -list"
"4592splitHere46","2357090splitHere46","set PATH=c:\java1.5\bin;%PATH%<newline46mondego>"
"4593splitHere46","2357167splitHere46","<newline46mondego>abstract class Task extends SwingWorker {<newline46mondego>    @Override<newline46mondego>    protected abstract Void doInBackground();<newline46mondego>    @Override<newline46mondego>    protected abstract void done();<newline46mondego>};<newline46mondego>"
"4594splitHere46","2357321splitHere46","<doubleQuotes46>^(?=(?:\\D*\\d){2})(?=(?:[^a-z]*[a-z]){2})(?=(?:[^A-Z]*[A-Z]){2})(?=(?:[^!@#$%^&*+=]*[!@#$%^&*+=]){2}).{15,}$<doubleQuotes46><newline46mondego>"
"4595splitHere46","2357321splitHere46","(?:…)"
"4596splitHere46","2357321splitHere46","."
"4597splitHere46","2357351splitHere46","package com.stackoverflow.q2357315;<newline46mondego><newline46mondego>import java.util.Locale;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main(String[] args) throws Exception {<newline46mondego>        Locale.setDefault(new Locale(<doubleQuotes46>lt<doubleQuotes46>));<newline46mondego>        String s = <doubleQuotes46>\u00cc<doubleQuotes46>;<newline46mondego>        System.out.println(s + <doubleQuotes46> (<doubleQuotes46> + s.length() + <doubleQuotes46>)<doubleQuotes46>); // Ì (1)<newline46mondego>        s = s.toLowerCase();<newline46mondego>        System.out.println(s + <doubleQuotes46> (<doubleQuotes46> + s.length() + <doubleQuotes46>)<doubleQuotes46>); // i̇̀ (3)<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4598splitHere46","2357535splitHere46","PreparedStatement"
"4599splitHere46","2357535splitHere46","PreparedStatement"
"4600splitHere46","2357535splitHere46","?"
"4601splitHere46","2357535splitHere46","String#format()"
"4602splitHere46","2357535splitHere46","runSQLResultSet"
"4603splitHere46","2357535splitHere46","try {<newline46mondego>    connection = database.getConnection();<newline46mondego>    statement = connection.prepareStatement(SQL);<newline46mondego>    setValues(statement, values);<newline46mondego><newline46mondego>    // ...<newline46mondego>"
"4604splitHere46","2357535splitHere46","public static void setValues(PreparedStatement preparedStatement, Object... values) throws SQLException {<newline46mondego>    for (int i = 0; i < values.length; i++) {<newline46mondego>        preparedStatement.setObject(i + 1, values[i]);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4605splitHere46","2357834splitHere46","if (osName.equals(<doubleQuotes46>Windows 95<doubleQuotes46>) || osName.equals(<doubleQuotes46>Windows 98<doubleQuotes46>) || osName.equalsIgnoreCase(<doubleQuotes46>Windows ME<doubleQuotes46>)) {<newline46mondego>    cmd = new String[3];<newline46mondego>    cmd[0] = WINDOWS_9X_ME_COMMAND_1;<newline46mondego>    cmd[1] = WINDOWS_9X_ME_COMMAND_2;<newline46mondego>    cmd[2] = command;<newline46mondego>}<newline46mondego>else {<newline46mondego>    cmd = new String[3];<newline46mondego>    cmd[0] = WINDOWS_NT_2000_COMMAND_1;<newline46mondego>    cmd[1] = WINDOWS_NT_2000_COMMAND_2;<newline46mondego>    cmd[2] = command;<newline46mondego>}<newline46mondego>"
"4606splitHere46","2357915splitHere46","public <T> void doSomething(T data);<newline46mondego>"
"4607splitHere46","2357915splitHere46","public void doSomething(Object data);<newline46mondego>"
"4608splitHere46","2357915splitHere46","class ClassA<T> {<newline46mondego>    public <T> void doSomething(T data) {};<newline46mondego>}<newline46mondego>"
"4609splitHere46","2357915splitHere46","doSomething(123)"
"4610splitHere46","2357915splitHere46","ClassA<String>"
"4611splitHere46","2357915splitHere46","T"
"4612splitHere46","2357924splitHere46","Desktop desktop;<newline46mondego>if (Desktop.isDesktopSupported() <newline46mondego>    && (desktop = Desktop.getDesktop()).isSupported(Desktop.Action.MAIL)) {<newline46mondego>  URI mailto = new URI(<doubleQuotes46>mailto:john@example.com?subject=Hello%20World<doubleQuotes46>);<newline46mondego>  desktop.mail(mailto);<newline46mondego>} else {<newline46mondego>  // TODO fallback to some Runtime.exec(..) voodoo?<newline46mondego>  throw new RuntimeException(<doubleQuotes46>desktop doesn't support mailto; mail is dead anyway ;)<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4613splitHere46","2358029splitHere46","stringVariable == null<newline46mondego>"
"4614splitHere46","2358029splitHere46","stringVariable"
"4615splitHere46","2358029splitHere46","null"
"4616splitHere46","2358029splitHere46","equals"
"4617splitHere46","2358029splitHere46","stringVariable"
"4618splitHere46","2358029splitHere46","null"
"4619splitHere46","2358161splitHere46","Collection"
"4620splitHere46","2358161splitHere46","Iterable"
"4621splitHere46","2358161splitHere46","CopyOnWriteList"
"4622splitHere46","2358242splitHere46","public final void onWindowClosing(Window.ClosingEvent event) {<newline46mondego>    event.setMessage(onLeaveQuestion);<newline46mondego>    DeferredCommand.addCommand( new Command() {<newline46mondego>      public void execute() {<newline46mondego>        Window.Location.replace(currentLocation);<newline46mondego>      }<newline46mondego>    });<newline46mondego>  }<newline46mondego>"
"4623splitHere46","2358242splitHere46","currentLocation"
"4624splitHere46","2358242splitHere46","Window.Location.getHref()"
"4625splitHere46","2358270splitHere46","<broker><newline46mondego>...    <newline46mondego>  <pendingMessageLimitStrategy><newline46mondego>    <constantPendingMessageLimitStrategy limit=<doubleQuotes46>10<doubleQuotes46>/><newline46mondego>  </pendingMessageLimitStrategy><newline46mondego>...<newline46mondego></broker><newline46mondego>"
"4626splitHere46","2358393splitHere46","Person"
"4627splitHere46","2358393splitHere46","Person"
"4628splitHere46","2358393splitHere46","personBean"
"4629splitHere46","2358505splitHere46","while (rs.next()) {<newline46mondego>-                String id = rs.getString(FIELDS[0]);<newline46mondego>+                Integer id = rs.getInt(FIELDS[0]);<newline46mondego>                 String name = rs.getString(FIELDS[1]);<newline46mondego>-                Data team = new Data(Integer.parseInt(id.trim()), name);<newline46mondego>+                Data team = new Data(id, name);<newline46mondego>                 list.put(id, team);<newline46mondego>"
"4630splitHere46","2358571splitHere46","UICommand"
"4631splitHere46","2358571splitHere46","UIForm"
"4632splitHere46","2358571splitHere46","h:form"
"4633splitHere46","2358571splitHere46","POST"
"4634splitHere46","2358571splitHere46","<form>"
"4635splitHere46","2358571splitHere46","method"
"4636splitHere46","2358571splitHere46","<doubleQuotes46>post<doubleQuotes46>"
"4637splitHere46","2358571splitHere46","null"
"4638splitHere46","2358571splitHere46","h:outputLink"
"4639splitHere46","2358571splitHere46","GET"
"4640splitHere46","2358757splitHere46","Map<String, String>"
"4641splitHere46","2358876splitHere46","for (String crt : new String[]{<doubleQuotes46>a<doubleQuotes46>,<doubleQuotes46>b<doubleQuotes46>,<doubleQuotes46>c<doubleQuotes46>} ) {<newline46mondego>    doSomething();<newline46mondego>}<newline46mondego>"
"4642splitHere46","2359091splitHere46","readResolve()"
"4643splitHere46","2359214splitHere46","SELECT NEW com.acme.example.CustomerDetails(c.id, c.status, o.count)<newline46mondego>FROM Customer c JOIN c.orders o<newline46mondego>WHERE o.count > 100<newline46mondego>"
"4644splitHere46","2359214splitHere46","Object[]"
"4645splitHere46","2359240splitHere46","javax.sql.DataSource"
"4646splitHere46","2359374splitHere46","javaws"
"4647splitHere46","2359374splitHere46","-J"
"4648splitHere46","2359376splitHere46","NullPointerException"
"4649splitHere46","2359376splitHere46","BookService"
"4650splitHere46","2359376splitHere46","new()"
"4651splitHere46","2359376splitHere46","<%@ page import=<doubleQuotes46>beans.BookService<doubleQuotes46> %><newline46mondego><%@ page import=<doubleQuotes46>beans.Book<doubleQuotes46> %><newline46mondego><html><newline46mondego><body><newline46mondego><%<newline46mondego>    BookService bs = (BookService) new InitialContext().lookup(<doubleQuotes46>java:module/BookServiceBean<doubleQuotes46>)<newline46mondego>    Book b = new Book(<doubleQuotes46>Superman<doubleQuotes46>);<newline46mondego>    bs.createOrUpdate(b);<newline46mondego>%><newline46mondego></body><newline46mondego></html><newline46mondego>"
"4652splitHere46","2359663splitHere46","PathParser"
"4653splitHere46","2359663splitHere46","AWTPathProducer"
"4654splitHere46","2359663splitHere46","ExtendedGeneralPath"
"4655splitHere46","2359663splitHere46","Path2D"
"4656splitHere46","2359663splitHere46","Shape"
"4657splitHere46","2359915splitHere46","mirrorOf"
"4658splitHere46","2359915splitHere46","external:*"
"4659splitHere46","2359915splitHere46","<settings><newline46mondego>  ...<newline46mondego>  <profiles><newline46mondego>    <profile><newline46mondego>      <id>second-repo</id><newline46mondego>      <repositories><newline46mondego>        <repository><newline46mondego>          <id>second-repo</id><newline46mondego>          <url>http://myrepo/second-repo</url><newline46mondego>          <!-- add releases / snapshots config as appropriate here --><newline46mondego>        </repository><newline46mondego>      </repositories><newline46mondego>      <!-- duplicate for pluginRepositories here if needed --><newline46mondego>    </profile><newline46mondego>  </profiles><newline46mondego>  <activeProfiles><newline46mondego>    <activeProfile>second-repo</activeProfile><newline46mondego>  </activeProfiles><newline46mondego>  ...<newline46mondego>  <mirrors><newline46mondego>    <mirror><newline46mondego>      <id>corporate-repo</id><newline46mondego>      <url>http://myrepo/my-group</url><newline46mondego>      <mirrorOf>external:*,!second-repo</mirrorOf><newline46mondego>    </mirror><newline46mondego>  </mirrors><newline46mondego>  ...<newline46mondego></settings><newline46mondego>"
"4660splitHere46","2360109splitHere46","JAPAN"
"4661splitHere46","2360109splitHere46","System.out.println(tz.getDisplayName(Locale.JAPAN));<newline46mondego>"
"4662splitHere46","2360109splitHere46","Locale.JAPAN"
"4663splitHere46","2360109splitHere46","new Locale(<doubleQuotes46>ja_JP_<doubleQuotes46>, <doubleQuotes46>ja<doubleQuotes46>, <doubleQuotes46>JP<doubleQuotes46>)"
"4664splitHere46","2360247splitHere46","String#replace()"
"4665splitHere46","2360247splitHere46","System.out.println(<doubleQuotes46>I don't like these \<doubleQuotes46>double\<doubleQuotes46> quotes<doubleQuotes46>.replace(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>));<newline46mondego>"
"4666splitHere46","2360247splitHere46","System.out.println(<doubleQuotes46>I don't like these \<doubleQuotes46>double\<doubleQuotes46> quotes<doubleQuotes46>.replace('<doubleQuotes46>', ' '));<newline46mondego>"
"4667splitHere46","2360247splitHere46","System.out.println(<doubleQuotes46>I don't like these \<doubleQuotes46>double\<doubleQuotes46> quotes<doubleQuotes46>.replace(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>));<newline46mondego>"
"4668splitHere46","2360265splitHere46","DocumentFilter"
"4669splitHere46","2360265splitHere46","AbstractDocument"
"4670splitHere46","2360265splitHere46","setDocumentFilter"
"4671splitHere46","2360265splitHere46","replace"
"4672splitHere46","2360265splitHere46","DocumentFilter"
"4673splitHere46","2360265splitHere46","public void replace( FilterBypass fb, int offset, int length,<newline46mondego>    String text, AttributeSet attrs ) throws BadLocationException<newline46mondego>{<newline46mondego>  if ( text.startsWith( <doubleQuotes46>a<doubleQuotes46> ) )<newline46mondego>  {<newline46mondego>    SimpleAttributeSet newAttrs = new SimpleAttributeSet();<newline46mondego>    StyleConstants.setForeground( newAttrs, Color.RED );<newline46mondego>    attrs = newAttrs;<newline46mondego>  }<newline46mondego><newline46mondego>  super.replace( fb, offset, length, text, attrs );<newline46mondego>}<newline46mondego>"
"4674splitHere46","2360296splitHere46","Icon unselIcon = new ImageIcon( Thread.currentThread().getContextClassLoader().getResource(<doubleQuotes46>checkbox0.jpg<doubleQuotes46>).getPath()); <newline46mondego>    Icon selIcon = new ImageIcon( Thread.currentThread().getContextClassLoader().getResource(<doubleQuotes46>checkbox1.jpg<doubleQuotes46>).getPath());<newline46mondego>"
"4675splitHere46","2360296splitHere46","Icon unselIcon = new ImageIcon( Thread.currentThread().getContextClassLoader().getResource(<doubleQuotes46>checkbox0.jpg<doubleQuotes46>)); <newline46mondego>    Icon selIcon = new ImageIcon( Thread.currentThread().getContextClassLoader().getResource(<doubleQuotes46>checkbox1.jpg<doubleQuotes46>));<newline46mondego>"
"4676splitHere46","2360423splitHere46","@Test<newline46mondego>public void testPageRender() {<newline46mondego>    WicketTester tester = new WicketTester();<newline46mondego>    tester.startPage( MyPage.class );<newline46mondego>    tester.assertNoErrors();<newline46mondego>}<newline46mondego>"
"4677splitHere46","2360515splitHere46","java.util.concurrent.Future<V>"
"4678splitHere46","2360515splitHere46","Future"
"4679splitHere46","2360515splitHere46","get"
"4680splitHere46","2360515splitHere46","Future"
"4681splitHere46","2360515splitHere46","Future<?>"
"4682splitHere46","2360515splitHere46","null"
"4683splitHere46","2360515splitHere46","interface ArchiveSearcher { String search(String target); }<newline46mondego> class App {<newline46mondego>   ExecutorService executor = ...<newline46mondego>   ArchiveSearcher searcher = ...<newline46mondego>   void showSearch(final String target)<newline46mondego>       throws InterruptedException {<newline46mondego>     Future<String> future<newline46mondego>       = executor.submit(new Callable<String>() {<newline46mondego>         public String call() {<newline46mondego>             return searcher.search(target);<newline46mondego>         }});<newline46mondego>     displayOtherThings(); // do other things while searching<newline46mondego>     try {<newline46mondego>       displayText(future.get()); // use future<newline46mondego>     } catch (ExecutionException ex) { cleanup(); return; }<newline46mondego>   }<newline46mondego> }<newline46mondego>"
"4684splitHere46","2360515splitHere46","FutureTask"
"4685splitHere46","2360515splitHere46","Future"
"4686splitHere46","2360515splitHere46","Runnable"
"4687splitHere46","2360515splitHere46","Executor"
"4688splitHere46","2360515splitHere46","FutureTask<String> future =<newline46mondego>   new FutureTask<String>(new Callable<String>() {<newline46mondego>     public String call() {<newline46mondego>       return searcher.search(target);<newline46mondego>   }});<newline46mondego> executor.execute(future);  <newline46mondego>"
"4689splitHere46","2360515splitHere46","Future.get()"
"4690splitHere46","2360515splitHere46","FutureWrapper"
"4691splitHere46","2360515splitHere46","Future"
"4692splitHere46","2360696splitHere46","@Cache"
"4693splitHere46","2361108splitHere46","public class HelloWorld {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        System.out.println(<doubleQuotes46>Hello World!<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4694splitHere46","2361108splitHere46","HelloWorld"
"4695splitHere46","2361108splitHere46","main"
"4696splitHere46","2361108splitHere46","main"
"4697splitHere46","2361108splitHere46","System.out.println()"
"4698splitHere46","2361108splitHere46","cd ~<newline46mondego>javac HelloWorld.java<newline46mondego>"
"4699splitHere46","2361108splitHere46","java HelloWorld<newline46mondego>"
"4700splitHere46","2361108splitHere46","HelloWorld"
"4701splitHere46","2361108splitHere46","main"
"4702splitHere46","2361180splitHere46","import java.util.Locale;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>  public static void main(String [] argv) {<newline46mondego><newline46mondego>    Locale defaultLocale = Locale.getDefault();<newline46mondego>    System.out.println(defaultLocale.getDisplayCountry()); // displays United States<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4703splitHere46","2361180splitHere46","getISOCountries"
"4704splitHere46","2361288splitHere46","cmd /c <doubleQuotes46>java -jar C:\Projects\piko\dist\piko.jar arg<doubleQuotes46><newline46mondego>"
"4705splitHere46","2361411splitHere46","int gridVal = (((int) val + 2) / 4) * 4<newline46mondego>"
"4706splitHere46","2361411splitHere46","int gridVal = (((int) val + 1) / 4) * 4<newline46mondego>"
"4707splitHere46","2361411splitHere46","int gridVal = ((val >= 0 ? (int) val + 2 : (int) val - 2) / 4) * 4<newline46mondego>"
"4708splitHere46","2361411splitHere46","int halfGrid = gridSize / 2;<newline46mondego>int gridVal = ((val >= 0 ? (int) val + halfGrid : (int) val - halfGrid) / gridSize) * gridSize;<newline46mondego>"
"4709splitHere46","2361567splitHere46","Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {<newline46mondego><newline46mondego>        public void run() {<newline46mondego>            // Do what you want when the application is stopping<newline46mondego>        }<newline46mondego>    }));<newline46mondego>"
"4710splitHere46","2361567splitHere46","windowClosing"
"4711splitHere46","2361567splitHere46","addWindowListener(new WindowAdapter() {<newline46mondego>    public void windowClosing(WindowEvent e) {<newline46mondego>        // Do what you want when the window is closing.<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4712splitHere46","2361573splitHere46","Book"
"4713splitHere46","2361573splitHere46","Library"
"4714splitHere46","2362000splitHere46","public class SampleClass : IControl, ISurface<newline46mondego>{<newline46mondego>    void IControl.Paint()<newline46mondego>    {<newline46mondego>        System.Console.WriteLine(<doubleQuotes46>IControl.Paint<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    void ISurface.Paint()<newline46mondego>    {<newline46mondego>        System.Console.WriteLine(<doubleQuotes46>ISurface.Paint<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4715splitHere46","2362000splitHere46","Paint()"
"4716splitHere46","2362000splitHere46","SampleClass c = new SampleClass();<newline46mondego>((IControl)c).Paint();<newline46mondego>((ISurface)c).Paint();<newline46mondego>"
"4717splitHere46","2362029splitHere46","GOOD_ID"
"4718splitHere46","2362029splitHere46","@JoinColumn(name=<doubleQuotes46>GOOD_ID<doubleQuotes46>, nullable = false)<newline46mondego>"
"4719splitHere46","2362106splitHere46","<init-param><newline46mondego>  <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name><newline46mondego>  <param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value><newline46mondego></init-param><newline46mondego><init-param><newline46mondego>  <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name><newline46mondego>  <param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value><newline46mondego></init-param><newline46mondego>"
"4720splitHere46","2362106splitHere46","Client client = Client.create();<newline46mondego>client.addFilter(new LoggingFilter());<newline46mondego>"
"4721splitHere46","2362410splitHere46","String cleanXMLString = null;<newline46mondego>Pattern pattern = null;<newline46mondego>Matcher matcher = null;<newline46mondego>pattern = Pattern.compile(<doubleQuotes46>[\\000]*<doubleQuotes46>);<newline46mondego>matcher = pattern.matcher(dirtyXMLString);<newline46mondego>if (matcher.find()) {<newline46mondego>   cleanXMLString = matcher.replaceAll(<doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4722splitHere46","2362464splitHere46","Solr provides a simple method to sort on one or more indexed fields. Use the 'sort' parameter to specify <doubleQuotes46>field direction<doubleQuotes46> pairs... <newline46mondego><newline46mondego>q=video&sort=price desc <newline46mondego>q=video&sort=price asc <newline46mondego>q=video&sort=inStock asc, price desc <newline46mondego>"
"4723splitHere46","2362513splitHere46","url.split(<doubleQuotes46>/<doubleQuotes46>)"
"4724splitHere46","2362513splitHere46","public static void main(String[] args) throws Exception {<newline46mondego>    String[] urls = {<newline46mondego>            <doubleQuotes46>http://www.buy.com/prod/disney-s-star-struck/q/loc/109/213724402.html<doubleQuotes46>, <newline46mondego>            <doubleQuotes46>http://www.buy.com/prod/samsung-f2380-23-widescreen-1080p-lcd-monitor-150-000-1-dc-8ms-1920-x/q/loc/101/211249863.html<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>http://www.buy.com/prod/panasonic-nnh765wf-microwave-oven-countertop-1-6-ft-1250w-panasonic/q/loc/66357/202045865.html<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>http://www.buy.com/prod/escape-by-calvin-klein-for-women-3-4-oz-edp-spray/q/loc/66740/211210860.html<doubleQuotes46>,<newline46mondego>            <doubleQuotes46>http://www.buy.com/prod/v-touch-8gb-mp3-mp4-2-8-touch-screen-2mp-camera-expandable-minisd-w/q/loc/111/211402014.html<doubleQuotes46><newline46mondego>    };<newline46mondego><newline46mondego>    String all = <doubleQuotes46>[^/]+<doubleQuotes46>;<newline46mondego>    String[] pattern = urls[0].split(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>    for (int i = 0; i < urls.length; i++) {<newline46mondego>        String parts[] = urls[i].split(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego><newline46mondego>        // TODO handle urls with different number of parts<newline46mondego>        for (int j = 0; j < pattern.length; j++) {<newline46mondego>            // intentionally match by reference<newline46mondego>            if (pattern[j] != all && !pattern[j].equals(parts[j])) {<newline46mondego>                pattern[j] = all;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // build pattern - use [^/]+ as a replacement (anything but a '/')<newline46mondego>    StringBuilder buf = new StringBuilder();<newline46mondego>    for (int i = 0; i < pattern.length; i++) {<newline46mondego>        buf.append(pattern[i] == all ? all : Pattern.quote(pattern[i]));<newline46mondego>        buf.append(<doubleQuotes46>/<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    // stip last <doubleQuotes46>/<doubleQuotes46><newline46mondego>    buf.setLength(buf.length() - 1);<newline46mondego><newline46mondego>    // compile pattern<newline46mondego>    Pattern p = Pattern.compile(buf.toString());<newline46mondego><newline46mondego>    // output<newline46mondego>    System.out.println(p.pattern());<newline46mondego>    for (int i = 0; i < urls.length; i++) {<newline46mondego>        System.out.println(p.matcher(urls[i]).matches());<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4725splitHere46","2362513splitHere46","\Qhttp:\E/\Q\E/\Qwww.buy.com\E/\Qprod\E/[^/]+/\Qq\E/\Qloc\E/[^/]+/[^/]+<newline46mondego>true<newline46mondego>true<newline46mondego>true<newline46mondego>true<newline46mondego>true<newline46mondego>"
"4726splitHere46","2362563splitHere46","@Resource(name = <doubleQuotes46>myMailServer<doubleQuotes46>)<newline46mondego>    private Session mailSession;<newline46mondego><newline46mondego>    static Transport transport ;<newline46mondego><newline46mondego>    public boolean sendMail(String recipient, String subject, String text) {<newline46mondego>    boolean exe = false;<newline46mondego><newline46mondego>    Properties p = new Properties();<newline46mondego><newline46mondego>    String username = <doubleQuotes46>someone@gmail.com<doubleQuotes46>;<newline46mondego>    String password = <doubleQuotes46>password<doubleQuotes46>;<newline46mondego><newline46mondego>    InitialContext c = null;<newline46mondego><newline46mondego>    try<newline46mondego>    {<newline46mondego>         c = new InitialContext();<newline46mondego>          mailSession = (javax.mail.Session) c.lookup(<doubleQuotes46>java:comp/env/myMailServer<doubleQuotes46>);<newline46mondego>    }<newline46mondego>    catch(NamingException ne)<newline46mondego>    {<newline46mondego>        ne.printStackTrace();<newline46mondego>    }<newline46mondego><newline46mondego>    try<newline46mondego>    {<newline46mondego>        Message msg = new MimeMessage(mailSession);<newline46mondego>        msg.setRecipients(Message.RecipientType.TO,InternetAddress.parse(recipient, false));<newline46mondego>        msg.setSubject(subject);<newline46mondego>        msg.setText(text);<newline46mondego>        msg.setHeader(<doubleQuotes46>MIME-Version<doubleQuotes46> , <doubleQuotes46>1.0<doubleQuotes46> );<newline46mondego>        msg.setHeader(<doubleQuotes46>Content-Type<doubleQuotes46> , <doubleQuotes46>text/html<doubleQuotes46> );<newline46mondego>        msg.setHeader(<doubleQuotes46>X-Mailer<doubleQuotes46>, <doubleQuotes46>Recommend-It Mailer V2.03c02<doubleQuotes46>);<newline46mondego>        msg.saveChanges();<newline46mondego><newline46mondego>        //Transport.send(msg);<newline46mondego>        if(transport == null) {<newline46mondego><newline46mondego>            transport = mailSession.getTransport(<doubleQuotes46>smtps<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>        }<newline46mondego>        if(!transport.isConnected()) {<newline46mondego><newline46mondego>                transport.connect(username, password);<newline46mondego>            }<newline46mondego><newline46mondego>        transport.sendMessage(msg, msg.getAllRecipients());<newline46mondego>        exe = true;<newline46mondego>    }<newline46mondego>    catch (AddressException e)<newline46mondego>    {<newline46mondego>        e.printStackTrace();<newline46mondego>        exe = false;<newline46mondego>    }<newline46mondego>    catch (MessagingException e)<newline46mondego>    {<newline46mondego>        e.printStackTrace();<newline46mondego>        exe = false;<newline46mondego>    }<newline46mondego>    finally {<newline46mondego>        /*try {<newline46mondego>            if(transport != null)<newline46mondego>                transport.close();<newline46mondego>        }<newline46mondego>        catch(MessagingException me) {<newline46mondego>            me.printStackTrace();<newline46mondego>        }<newline46mondego>        catch(Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>        }*/<newline46mondego>    }<newline46mondego><newline46mondego>    return exe;<newline46mondego>}<newline46mondego>"
"4727splitHere46","2362622splitHere46","String sample = <doubleQuotes46>3A/45 Jindabyne Rd, Oakleigh, VIC 3166<doubleQuotes46>;<newline46mondego>    Pattern pattern = Pattern.compile(<doubleQuotes46>(([^/ ]+)/)?([^ ]+) ([^,]+), ([^,]+), ([^ ]+) (\\d+)<doubleQuotes46>);<newline46mondego>    Matcher m = pattern.matcher(sample);<newline46mondego>    if (m.find()) {<newline46mondego>        System.out.println(<doubleQuotes46>Unit: <doubleQuotes46> + m.group(2));<newline46mondego>        System.out.println(<doubleQuotes46>Number: <doubleQuotes46> + m.group(3));<newline46mondego>        System.out.println(<doubleQuotes46>Street: <doubleQuotes46> + m.group(4));<newline46mondego>        System.out.println(<doubleQuotes46>Suburb: <doubleQuotes46> + m.group(5));<newline46mondego>        System.out.println(<doubleQuotes46>State: <doubleQuotes46> + m.group(6));<newline46mondego>        System.out.println(<doubleQuotes46>Postcode: <doubleQuotes46> + m.group(7));<newline46mondego>    } else {<newline46mondego>        throw new IllegalArgumentException(<doubleQuotes46>WTF<doubleQuotes46>);<newline46mondego>    }<newline46mondego>"
"4728splitHere46","2362622splitHere46","m.group(2)"
"4729splitHere46","2362622splitHere46","(([^/ ]+)/)?"
"4730splitHere46","2362622splitHere46","([^/ ]+/)?"
"4731splitHere46","2362622splitHere46","([^ ]+)"
"4732splitHere46","2362622splitHere46","([^,]+),"
"4733splitHere46","2362622splitHere46","([^,]+),"
"4734splitHere46","2362622splitHere46","([^ ]+)"
"4735splitHere46","2362622splitHere46","(\\d+)"
"4736splitHere46","2362721splitHere46","public void foo() throws Exception e {<newline46mondego><newline46mondego>  Statement stmt = null ; <newline46mondego>  try {<newline46mondego>    stmt = createStatement();<newline46mondego>    doSomething(stmt);<newline46mondego>  } finally {<newline46mondego>    if(stmt != null) <newline46mondego>      stmt.close();<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4737splitHere46","2362753splitHere46","excludes"
"4738splitHere46","2362753splitHere46","-Dexcludes=**/generated/**/*<newline46mondego>"
"4739splitHere46","2362753splitHere46","<plugin><newline46mondego>   <groupId>org.apache.maven.plugins</groupId><newline46mondego>   <artifactId>maven-checkstyle-plugin</artifactId><newline46mondego>   <configuration><newline46mondego>       <excludes>**/generated/**/*</excludes><newline46mondego>   </configuration><newline46mondego></plugin><newline46mondego>"
"4740splitHere46","2362753splitHere46","SuppressionCommentFilter"
"4741splitHere46","2362753splitHere46","CHECKSTYLE:OFF"
"4742splitHere46","2362753splitHere46","CHECKSTYLE:ON"
"4743splitHere46","2362790splitHere46","Element"
"4744splitHere46","2362790splitHere46","getNodeValue"
"4745splitHere46","2362790splitHere46","getTextContent"
"4746splitHere46","2362862splitHere46","^([ \t]*)(.*\(.*\))$"
"4747splitHere46","2362862splitHere46","$1#$2#"
"4748splitHere46","2362862splitHere46","[ \t]*"
"4749splitHere46","2362862splitHere46","\s*"
"4750splitHere46","2362862splitHere46",".*"
"4751splitHere46","2362862splitHere46","[^(]*"
"4752splitHere46","2362862splitHere46","[^)]*"
"4753splitHere46","2362866splitHere46","java.library.path"
"4754splitHere46","2362866splitHere46","java.library.path"
"4755splitHere46","2362866splitHere46","C:\Program Files\Java\jdk1.6.0_01\jre\bin\jniwrap.dll<newline46mondego>"
"4756splitHere46","2362866splitHere46","C:\Program Files\Java\jdk1.6.0_01\jre\bin<newline46mondego>"
"4757splitHere46","2362881splitHere46","@ApplicationException(rollback=true)"
"4758splitHere46","2362881splitHere46","Context.setRollbackOnly()"
"4759splitHere46","2362881splitHere46","@ApplicationException(rollback=true)"
"4760splitHere46","2362881splitHere46","RuntimeException"
"4761splitHere46","2362881splitHere46","RuntimeException"
"4762splitHere46","2362881splitHere46","setRollbackOnly"
"4763splitHere46","2362939splitHere46","private static void runProfile() {<newline46mondego>    try {<newline46mondego>        final int noSeconds = 100;<newline46mondego>        final int sleepMillis = 50;<newline46mondego>        final int noSamples = noSeconds * 1000 / sleepMillis;<newline46mondego><newline46mondego>        ThreadMXBean thb = ManagementFactory.getThreadMXBean();<newline46mondego>        Map<String,Integer> blockCounts = new HashMap<String, Integer>(50);<newline46mondego>        for (int i = 0; i < noSamples ; i++) {<newline46mondego>            long[] ids = thb.getAllThreadIds();<newline46mondego>            ThreadInfo[] infs = thb.getThreadInfo(ids, 0);<newline46mondego>            for (ThreadInfo ti : infs) {<newline46mondego>                LockInfo lockInf = ti.getLockInfo();<newline46mondego>                if (lockInf != null) {<newline46mondego>                    String key = lockInf.toString();<newline46mondego>                    Integer cnt = blockCounts.get(key);<newline46mondego>                    blockCounts.put(key, cnt == null ? 1 : cnt+1);<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            Thread.sleep(sleepMillis);<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println(<doubleQuotes46>Locks:<doubleQuotes46>);<newline46mondego>        for (String lockName : blockCounts.keySet()) {<newline46mondego>            System.out.println(lockName + <doubleQuotes46> : <doubleQuotes46> + blockCounts.get(lockName));<newline46mondego>        }<newline46mondego>    } catch (InterruptedException iex) {<newline46mondego>        Thread.currentThread().interrupt();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4764splitHere46","2362939splitHere46","Thread thr = new Thread() {<newline46mondego>        public void run() {<newline46mondego>            runProfile();<newline46mondego>        }<newline46mondego>    };<newline46mondego>    thr.setPriority(Thread.MAX_PRIORITY-1);<newline46mondego>    thr.start();<newline46mondego>"
"4765splitHere46","2363015splitHere46","CachingDispatchAsync"
"4766splitHere46","2363119splitHere46","org.quartz.CronExpression.isValidExpression(expression);<newline46mondego>"
"4767splitHere46","2363418splitHere46","UserSupport"
"4768splitHere46","2363418splitHere46","UserController"
"4769splitHere46","2363418splitHere46","getUser ()"
"4770splitHere46","2363418splitHere46","setUser ()"
"4771splitHere46","2363539splitHere46","public static long copy(InputStream from, OutputStream to)"
"4772splitHere46","2363539splitHere46","ByteStreams"
"4773splitHere46","2363561splitHere46","request.getHeader(<doubleQuotes46>User-Agent<doubleQuotes46>);<newline46mondego>"
"4774splitHere46","2363733splitHere46","Tree"
"4775splitHere46","2363733splitHere46","static TreeNode root;<newline46mondego>"
"4776splitHere46","2363733splitHere46","static"
"4777splitHere46","2363733splitHere46","Tree.root"
"4778splitHere46","2363733splitHere46","this.root"
"4779splitHere46","2363733splitHere46","static"
"4780splitHere46","2363733splitHere46","root"
"4781splitHere46","2363733splitHere46","Tree"
"4782splitHere46","2363794splitHere46","DbUtils.close()"
"4783splitHere46","2363794splitHere46","DbUtils.closeQuietly()"
"4784splitHere46","2363986splitHere46","ResultSet#next()"
"4785splitHere46","2363986splitHere46","getXXX()"
"4786splitHere46","2363986splitHere46","ResultSet"
"4787splitHere46","2363986splitHere46","while"
"4788splitHere46","2363986splitHere46","resultSet = statement.executeQuery();<newline46mondego>while (resultSet.next()) {<newline46mondego>    String columnname = resultSet.getString(<doubleQuotes46>columnname<doubleQuotes46>);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4789splitHere46","2363986splitHere46","if"
"4790splitHere46","2363986splitHere46","resultSet = statement.executeQuery();<newline46mondego>if (resultSet.next()) {<newline46mondego>    String columnname = resultSet.getString(<doubleQuotes46>columnname<doubleQuotes46>);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"4791splitHere46","2364022splitHere46","boolean isEmptyAlbumAllowed"
"4792splitHere46","2364177splitHere46","<componentdef name=<doubleQuotes46>ecj<doubleQuotes46> <newline46mondego>              classname=<doubleQuotes46>org.eclipse.jdt.core.JDTCompilerAdapter<doubleQuotes46> <newline46mondego>              classpath=<doubleQuotes46>ecj-3.7.1.jar<doubleQuotes46> /><newline46mondego><newline46mondego><javac ....><newline46mondego>  <ecj/><newline46mondego></javac><newline46mondego>"
"4793splitHere46","2364177splitHere46","<javac compiler=<doubleQuotes46>org.eclipse.jdt.core.JDTCompilerAdapter<doubleQuotes46> ....><newline46mondego>  <compilerclasspath><newline46mondego>     ...<newline46mondego>  </compilerclasspath><newline46mondego></javac><newline46mondego>"
"4794splitHere46","2364451splitHere46","ServletContextListener"
"4795splitHere46","2364451splitHere46","contextInitialized()"
"4796splitHere46","2364451splitHere46","public class Config implements ServletContextListener {<newline46mondego>    public void contextInitialized(ServletContextEvent event) {<newline46mondego>        // Do stuff during webapp's startup.<newline46mondego>    }<newline46mondego>    public void contextDestroyed(ServletContextEvent event) {<newline46mondego>        // Do stuff during webapp's shutdown.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4797splitHere46","2364451splitHere46","web.xml"
"4798splitHere46","2364451splitHere46","<listener><newline46mondego>    <listener-class>com.example.Config</listener-class><newline46mondego></listener><newline46mondego>"
"4799splitHere46","2364803splitHere46","CREATE FUNCTION insert_Person (IN in_name TEXT, IN in_gender CHAR(1), IN in_bdate DATE) RETURNS BOOLEAN..."
"4800splitHere46","2364803splitHere46","INSERT INTO Person (name, bdate, gender) VALUES (in_name, in_bdate, in_gender);"
"4801splitHere46","2364852splitHere46","SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        new SplashScreen();<newline46mondego>    }<newline46mondego>});<newline46mondego>// Code to start system (nothing that touches the GUI)<newline46mondego>SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>    public void run() {<newline46mondego>        new MainFrame();<newline46mondego>    }<newline46mondego>});<newline46mondego>//.. etc<newline46mondego>"
"4802splitHere46","2364887splitHere46","boolean[]"
"4803splitHere46","2364887splitHere46","false"
"4804splitHere46","2364887splitHere46","boolean[] array = new boolean[size];<newline46mondego>"
"4805splitHere46","2364887splitHere46","Arrays#fill()"
"4806splitHere46","2364887splitHere46","Boolean.FALSE"
"4807splitHere46","2364887splitHere46","Boolean[] array = new Boolean[size];<newline46mondego>Arrays.fill(array, Boolean.FALSE);<newline46mondego>"
"4808splitHere46","2364887splitHere46","freq[Global.iParameter[2]] = false;"
"4809splitHere46","2364887splitHere46","ArrayIndexOutOfBoundsException"
"4810splitHere46","2365003splitHere46",".unbind"
"4811splitHere46","2365003splitHere46","Channel"
"4812splitHere46","2365190splitHere46","interface Info {<newline46mondego>    String getInfoA();<newline46mondego>    void setInfoA(String infoA);<newline46mondego>    String getInfoB();<newline46mondego>    void setInfoB(String infoB);<newline46mondego>}<newline46mondego>"
"4813splitHere46","2365190splitHere46","class ReadonlyInfo implements Info {<newline46mondego>    final Info instance;<newline46mondego>    ReadonlyInfo(Info info) { <newline46mondego>         if (null == info) { throw new InvalidArgumentException(); } <newline46mondego>         instance = info; <newline46mondego>    }<newline46mondego>    String getInfoA() { return instance.getInfoA(); }<newline46mondego>    void setInfoA(String infoA) { /** silent ignore */ }<newline46mondego>    String getInfoB() { return instance.getInfoB(); }<newline46mondego>    void setInfoB(String infoA) { throw new IllegalStateException(); }<newline46mondego>}<newline46mondego>"
"4814splitHere46","2365210splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><web-app><newline46mondego>  <!-- Add this to your web.xml to enable remote API on Java. --><newline46mondego>  <servlet><newline46mondego>    <servlet-name>remoteapi</servlet-name><newline46mondego>    <servlet-class>com.google.apphosting.utils.remoteapi.RemoteApiServlet</servlet-class><newline46mondego>  </servlet><newline46mondego>  <servlet-mapping><newline46mondego>    <servlet-name>remoteapi</servlet-name><newline46mondego>    <url-pattern>/remote_api</url-pattern><newline46mondego>  </servlet-mapping><newline46mondego>  <security-constraint><newline46mondego>    <web-resource-collection><newline46mondego>      <web-resource-name>remoteapi</web-resource-name><newline46mondego>      <url-pattern>/remote_api</url-pattern><newline46mondego>    </web-resource-collection><newline46mondego>    <auth-constraint><newline46mondego>      <role-name>admin</role-name><newline46mondego>    </auth-constraint><newline46mondego>  </security-constraint><newline46mondego></web-app> <newline46mondego>"
"4815splitHere46","2365720splitHere46","@Lazy"
"4816splitHere46","2365720splitHere46","prototype"
"4817splitHere46","2365789splitHere46","ORDER BY"
"4818splitHere46","2365789splitHere46","ORDER BY"
"4819splitHere46","2365909splitHere46","CriticalSection.freq[iFrequency] = true;"
"4820splitHere46","2365909splitHere46","stop();"
"4821splitHere46","2366101splitHere46","netstat -aon | find <doubleQuotes46>:80<doubleQuotes46> | find <doubleQuotes46>LISTENING<doubleQuotes46>"
"4822splitHere46","2366500splitHere46","huc.setDoOuput(true);<newline46mondego>huc.setUseCaches(false);<newline46mondego>"
"4823splitHere46","2366500splitHere46","huc.setDoInput(true);<newline46mondego>"
"4824splitHere46","2366771splitHere46","File srcFolder = new File(<doubleQuotes46>./src<doubleQuotes46>);<newline46mondego>String[] files = srcFolder.list();<newline46mondego>for(String file : files){<newline46mondego>    if(file.startsWith(<doubleQuotes46>My_App_<doubleQuotes46>)){<newline46mondego>        System.out.println(file);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4825splitHere46","2366808splitHere46","BarChartDemo"
"4826splitHere46","2366808splitHere46","setStandardTickUnits()"
"4827splitHere46","2366808splitHere46","NumberAxis"
"4828splitHere46","2366808splitHere46","TickUnits"
"4829splitHere46","2366808splitHere46","setStandardTickUnits()"
"4830splitHere46","2366808splitHere46","java.text.Format"
"4831splitHere46","2366808splitHere46","TickUnit"
"4832splitHere46","2366808splitHere46","add()"
"4833splitHere46","2366808splitHere46","valueToString()"
"4834splitHere46","2366808splitHere46","TickUnit"
"4835splitHere46","2366808splitHere46","TickUnits"
"4836splitHere46","2367087splitHere46","instanceof"
"4837splitHere46","2367087splitHere46","hasProperty"
"4838splitHere46","2367087splitHere46","//Checks to see if Object 'o' is an instance of the class in the string <doubleQuotes46>className<doubleQuotes46><newline46mondego>public static boolean instanceOf(Object o, String className) {<newline46mondego>    boolean returnValue;<newline46mondego><newline46mondego>    try {<newline46mondego>        returnValue = Class.forName(className).isInstance(o);<newline46mondego>    }<newline46mondego><newline46mondego>    catch(ClassNotFoundException e) {<newline46mondego>        returnValue = false;<newline46mondego>    }<newline46mondego><newline46mondego>    return returnValue;<newline46mondego>}<newline46mondego><newline46mondego>//Checks to see if Object 'o' has a property specified in <doubleQuotes46>propertyName<doubleQuotes46><newline46mondego>public static boolean hasProperty(Object o, String propertyName) {<newline46mondego>    boolean methodFound = false;<newline46mondego>    int i = 0;<newline46mondego><newline46mondego>    Class myClass = o.getClass();<newline46mondego>    String methodName = <doubleQuotes46>get<doubleQuotes46> + propertyName.toUpperCase().charAt(0) + propertyName.substring(1);<newline46mondego>    Method[] methods = myClass.getMethods();<newline46mondego><newline46mondego>    while(i < methods.length && !methodFound) {<newline46mondego>        methodFound = methods[i].getName().compareTo(methodName) == 0;<newline46mondego>        i++;<newline46mondego>    }<newline46mondego><newline46mondego>    return methodFound;<newline46mondego>}<newline46mondego>"
"4839splitHere46","2367087splitHere46","Class.forName"
"4840splitHere46","2367087splitHere46","getMethods()"
"4841splitHere46","2367087splitHere46","Class.forName"
"4842splitHere46","2367087splitHere46","newInstance"
"4843splitHere46","2367087splitHere46","Method"
"4844splitHere46","2367087splitHere46","getMethod()"
"4845splitHere46","2367087splitHere46","invoke"
"4846splitHere46","2367087splitHere46","getABC"
"4847splitHere46","2367087splitHere46","getXYZ"
"4848splitHere46","2367087splitHere46","public Object reflectionDemo(String className, String getter) throws ClassNotFoundException, NoSuchMethodException {<newline46mondego><newline46mondego>   Object fieldValue;<newline46mondego>   Class myClass = Class.forName(className);<newline46mondego>   Object myClassInstance = myClass.newInstance(); //to get an instance of the class       <newline46mondego><newline46mondego>   if(myClassInstance instanceof My_Class_X123) {       <newline46mondego>      //null because we are not specifying the kind of arguments that class takes<newline46mondego>      Method getterMethod = myClass.getMethod(getter, null); <newline46mondego>      //null because the method takes no arguments<newline46mondego>      //Also in the scenario that the method is static one, it is not necessary to pass in an instance, so in that case, the first parameter can be null.<newline46mondego>      fieldValue = getterMethod.invoke(myClassInstance, null);<newline46mondego>   } <newline46mondego><newline46mondego>   return fieldValue;<newline46mondego>}<newline46mondego>"
"4849splitHere46","2367087splitHere46","myClass = null;<newline46mondego>try {<newline46mondego>  myClass = Class.forName(className);<newline46mondego>  Field[] fields = myClass.getDeclaredFields();<newline46mondego><newline46mondego>  for(Field field : fields) {<newline46mondego>    //do whatever with the field. Look at the API reference at http://java.sun.com/javase/6/docs/api/java/lang/reflect/Field.html    <newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>catch(Exception e) {<newline46mondego>  //handle exception<newline46mondego>}<newline46mondego>"
"4850splitHere46","2367095splitHere46","dumpButton.addActionListener(new ActionListener() {<newline46mondego>    public void actionPerformed(ActionEvent e) {<newline46mondego>        if(fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {<newline46mondego><newline46mondego>            //Get the file<newline46mondego>            java.io.File file = fileChooser.getSelectedFile();<newline46mondego>            //Create scanner<newline46mondego>            try {<newline46mondego>                Scanner input = new Scanner(file);<newline46mondego>            } catch (FileNotFoundException ex) {<newline46mondego>                System.err.println(<doubleQuotes46>Error opening <doubleQuotes46> + file.getName());<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"4851splitHere46","2367138splitHere46","var json = { test: <doubleQuotes46>double quote:'\<doubleQuotes46>'<doubleQuotes46> };<newline46mondego>alert(json.test);<newline46mondego>"
"4852splitHere46","2367138splitHere46","System.out.println()"
"4853splitHere46","2367197splitHere46","Atempt2.java"
"4854splitHere46","2367197splitHere46","Hello.java"
"4855splitHere46","2367197splitHere46","javac Helo.java<newline46mondego>java Helo<newline46mondego>"
"4856splitHere46","2367259splitHere46","jndi.properties"
"4857splitHere46","2367259splitHere46","InitialContext"
"4858splitHere46","2367259splitHere46","InitialContext"
"4859splitHere46","2367259splitHere46","Hashtable"
"4860splitHere46","2367259splitHere46","jndi.properties"
"4861splitHere46","2367259splitHere46","jndi.properties"
"4862splitHere46","2367259splitHere46","Properties"
"4863splitHere46","2367259splitHere46","Hashtable"
"4864splitHere46","2367327splitHere46","required"
"4865splitHere46","2367327splitHere46","afterUnmarshal()"
"4866splitHere46","2367327splitHere46","MyClass"
"4867splitHere46","2367327splitHere46","schemagen"
"4868splitHere46","2367327splitHere46","required=true"
"4869splitHere46","2367346splitHere46","RuntimeException"
"4870splitHere46","2367346splitHere46","DataAccessException"
"4871splitHere46","2367346splitHere46","RecoverableDataAccessException"
"4872splitHere46","2367346splitHere46","OptimisticLockingFailureException"
"4873splitHere46","2367346splitHere46","SimpleJdbcTemplate"
"4874splitHere46","2367346splitHere46","select for update"
"4875splitHere46","2367346splitHere46","insert"
"4876splitHere46","2367371splitHere46","order"
"4877splitHere46","2367412splitHere46","MessageBuilder msgBuilder; //There should probably be a call to a constructor here ;)<newline46mondego>MessageBuilder msgBuilder2;<newline46mondego>msgBuilder.withRecipientJids(jid1, jid2);<newline46mondego>msgBuilder2.withRecipientJids(jid1, jid2, jid78_a, someOtherJid);<newline46mondego>"
"4878splitHere46","2367418splitHere46","Pattern p = Pattern.compile(<doubleQuotes46>-?\\d+<doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(<doubleQuotes46>There are more than -2 and less than 12 numbers here<doubleQuotes46>);<newline46mondego>while (m.find()) {<newline46mondego>  System.out.println(m.group());<newline46mondego>}<newline46mondego>"
"4879splitHere46","2367515splitHere46","graphics = (Graphics2D) offlineBuffer.getGraphics();<newline46mondego>            graphics.setBackground(new Color(255, 255, 255, 0));<newline46mondego>            Rectangle screen = transformationContext.getScreen();<newline46mondego>            graphics.clearRect(0,0, (int)screen.getWidth(), (int)screen.getHeight());<newline46mondego>"
"4880splitHere46","2367579splitHere46","// create a Document from inputstream is<newline46mondego>DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();<newline46mondego>DocumentBuilder builder = factory.newDocumentBuilder();<newline46mondego>Document doc = builder.parse(is);<newline46mondego><newline46mondego>// fetch the feed<newline46mondego>SyndFeedInput input = new SyndFeedInput();<newline46mondego>SyndFeed feed = input.build(doc);<newline46mondego>"
"4881splitHere46","2367751splitHere46","ExecutorService"
"4882splitHere46","2367751splitHere46","Executors.newFixedThreadPool(numThreads)"
"4883splitHere46","2367751splitHere46","doPost()"
"4884splitHere46","2367751splitHere46","Runnable"
"4885splitHere46","2367751splitHere46","ExecutorService"
"4886splitHere46","2367751splitHere46","executor.execute(task)"
"4887splitHere46","2367751splitHere46","202 Accepted"
"4888splitHere46","2367751splitHere46","Location"
"4889splitHere46","2367772splitHere46","String half;<newline46mondego>"
"4890splitHere46","2367772splitHere46","system.out.print (firstline) ;<newline46mondego>"
"4891splitHere46","2367831splitHere46","final"
"4892splitHere46","2367831splitHere46","import java.lang.reflect.*;<newline46mondego><newline46mondego>public class Me {<newline46mondego>    final String name;<newline46mondego><newline46mondego>    Me(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    class InnerMe {     <newline46mondego>        String whoAreYou() {<newline46mondego>            return name;<newline46mondego>        }<newline46mondego>    }   <newline46mondego><newline46mondego>    InnerMe innerSelf() {<newline46mondego>        return new InnerMe();<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego>        final Me me = new Me(<doubleQuotes46>Just the old me!<doubleQuotes46>);<newline46mondego>        final InnerMe innerMe = me.innerSelf();<newline46mondego>        System.out.println(innerMe.whoAreYou()); // <doubleQuotes46>Just the old me!<doubleQuotes46><newline46mondego>        Field outerThis = innerMe.getClass().getDeclaredFields()[0];<newline46mondego>        outerThis.setAccessible(true);<newline46mondego>        outerThis.set(innerMe, new Me(<doubleQuotes46>New and improved me!<doubleQuotes46>));<newline46mondego>        System.out.println(innerMe.whoAreYou()); // <doubleQuotes46>New and improved me!<doubleQuotes46><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"4893splitHere46","2367831splitHere46","outerThis.setAccessible(true);"
"4894splitHere46","2367871splitHere46","type=<doubleQuotes46>hidden<doubleQuotes46>"
"4895splitHere46","2367871splitHere46","<input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>id<doubleQuotes46> maxlength=<doubleQuotes46>20<doubleQuotes46> /><newline46mondego><input type=<doubleQuotes46>text<doubleQuotes46> style=<doubleQuotes46>display: none;<doubleQuotes46> /><newline46mondego><input type=<doubleQuotes46>submit<doubleQuotes46> name=<doubleQuotes46>send<doubleQuotes46> value=<doubleQuotes46>Send<doubleQuotes46>/><newline46mondego>"
"4896splitHere46","2368418splitHere46","@Entity<newline46mondego>  public class Thing {<newline46mondego>     @Id<newline46mondego>     @GeneratedValue(strategy = GenerationType.IDENTITY)<newline46mondego>     // Your Primary Key<newline46mondego><newline46mondego>     // Getters, setters, constructors, oh my!<newline46mondego><newline46mondego>     @PrePersist<newline46mondego>     @PreUpdate<newline46mondego>     public void prePersist() {<newline46mondego>       // get JCache client instance<newline46mondego>       // serialize object<newline46mondego>       //store in cache<newline46mondego>     }<newline46mondego>} <newline46mondego>"
"4897splitHere46","2368865splitHere46","cd ~<newline46mondego>"
"4898splitHere46","2368865splitHere46","/home/david"
"4899splitHere46","2368865splitHere46","/Users/david"
"4900splitHere46","2368865splitHere46","david"
"4901splitHere46","2368865splitHere46","cd"
"4902splitHere46","2368865splitHere46","rm xyzzy"
"4903splitHere46","2368865splitHere46","xyzzy"
"4904splitHere46","2368865splitHere46","rm /xyzzy"
"4905splitHere46","2368865splitHere46","javac"
"4906splitHere46","2368865splitHere46","java"
"4907splitHere46","2368865splitHere46","/home/david/javasrc"
"4908splitHere46","2368865splitHere46","/Users/david/javasrc"
"4909splitHere46","2368865splitHere46","cd"
"4910splitHere46","2368865splitHere46","cd /home/david/javasrc<newline46mondego>cd /Users/david/javasrc<newline46mondego>cd ~/javasrc<newline46mondego>"
"4911splitHere46","2369013splitHere46","insert into [table] values(...)"
"4912splitHere46","2369013splitHere46","column=value"
"4913splitHere46","2369013splitHere46","psmt=con.prepareStatement(<doubleQuotes46>Insert into TR_LogTime values((Select count(*) from Tr_LogTime) + 1 ,(select sysdate from dual), ?, ?, ?, ?,(select to_date(?,'dd/mm/yyyy')from dual) ,?,?,?,?,?)<doubleQuotes46>);<newline46mondego>"
"4914splitHere46","2369013splitHere46","insert into TR_LogTime (col1, col2, col3, ...) values (?, ?, ?, ...)<newline46mondego>"
"4915splitHere46","2369090splitHere46","Sqlcmd -Shostname\dbname -U username -p password -i sqlscriptfile <newline46mondego>"
"4916splitHere46","2369233splitHere46","if (object = null) {<newline46mondego>"
"4917splitHere46","2369233splitHere46","=="
"4918splitHere46","2369233splitHere46","if"
"4919splitHere46","2369233splitHere46","boolean"
"4920splitHere46","2369233splitHere46","boolean"
"4921splitHere46","2369233splitHere46","=="
"4922splitHere46","2369327splitHere46","setItemsCanFocus"
"4923splitHere46","2369327splitHere46","ListView list = (ListView) findViewById(R.id.myList);<newline46mondego>list.setAdapter(new DoubleClickAdapter(this));<newline46mondego>list.setItemsCanFocus(true);<newline46mondego>"
"4924splitHere46","2369327splitHere46","getView"
"4925splitHere46","2369327splitHere46","@Override<newline46mondego>public View getView(int position, View convertView, ViewGroup parent) {<newline46mondego>    View view = View.inflate(context, R.layout.cell, null);<newline46mondego>    view.setClickable(true);<newline46mondego>    view.setFocusable(true);<newline46mondego>    view.setBackgroundResource(android.R.drawable.menuitem_background);<newline46mondego>    view.setOnClickListener(new OnClickListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void onClick(View v) {<newline46mondego>            new AlertDialog.Builder(context).setTitle(<doubleQuotes46>touched<doubleQuotes46>).show();<newline46mondego>        }<newline46mondego><newline46mondego>    });<newline46mondego>    return view;<newline46mondego>}<newline46mondego>"
"4926splitHere46","2369483splitHere46","<newline46mondego>if (((i % 6 == 0 || i % 7 == 0) && (i % (6 * 7) != 0)) {<newline46mondego>}<newline46mondego>"
"4927splitHere46","2369757splitHere46","@XmlAccessorType"
"4928splitHere46","2369757splitHere46","getChildren()"
"4929splitHere46","2369757splitHere46","B"
"4930splitHere46","2369757splitHere46","@XmlAccessorType(PROPERTY)<newline46mondego>public class A {<newline46mondego>    private List<XXX> children;<newline46mondego><newline46mondego>    @XmlElements( { //<newline46mondego>    @XmlElement(name = <doubleQuotes46>g<doubleQuotes46>, type = A.class),<newline46mondego>        @XmlElement(name = <doubleQuotes46>x<doubleQuotes46>, type = X.class), <newline46mondego>        @XmlElement(name = <doubleQuotes46>y<doubleQuotes46>, type = Y.class),        <newline46mondego>    })<newline46mondego>    public List<XXX> getChildren() {<newline46mondego>       return children;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setChildren(List<XXX> children) {<newline46mondego>       this.children = children;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@XmlAccessorType(PROPERTY)<newline46mondego>public class B extends A {<newline46mondego>    @XmlElements( { //<newline46mondego>    @XmlElement(name = <doubleQuotes46>g<doubleQuotes46>, type = B.class),<newline46mondego>        @XmlElement(name = <doubleQuotes46>x<doubleQuotes46>, type = X.class), <newline46mondego>        @XmlElement(name = <doubleQuotes46>y<doubleQuotes46>, type = Y.class), <newline46mondego>        @XmlElement(name = <doubleQuotes46>z<doubleQuotes46>, type = Z.class),        <newline46mondego>    })<newline46mondego>    public List<XXX> getChildren() {<newline46mondego>       return super.getChildren();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"4931splitHere46","2369757splitHere46","getChildren()"
"4932splitHere46","2369757splitHere46","B"
"4933splitHere46","2369796splitHere46","this.data = new HashSet<String> (data);<newline46mondego>"
"4934splitHere46","2369796splitHere46","Set<String> set = ...<newline46mondego>...build the set...<newline46mondego><newline46mondego>// Freeze the set<newline46mondego>set = Collections.unmodifiableSet(set);<newline46mondego><newline46mondego>// Now you can safely pass it elsewhere<newline46mondego>obj.setData (set);<newline46mondego>"
"4935splitHere46","2369877splitHere46","// now() would be whatever function you use to get the current time (in<newline46mondego>// microseconds or milliseconds).<newline46mondego>int lastStep = now();<newline46mondego>// This would be your main loop.<newline46mondego>while (true) {<newline46mondego>    int curTime = now();<newline46mondego><newline46mondego>    // Calculate the time spent since last step.<newline46mondego>    int timeSinceLast = curTime - lastStep;<newline46mondego><newline46mondego>    // Skip logic if no game step is to occur.<newline46mondego>    if (timeSinceLast < TIME_PER_STEP) continue;<newline46mondego><newline46mondego>    // We can't assume that the loop always hits the exact moment when the step<newline46mondego>    // should occur. Most likely, it has spent slightly more time, and here we<newline46mondego>    // correct that so that the game doesn't shift out of sync.<newline46mondego>    // NOTE: You may want to make sure that + is the correct operator here.<newline46mondego>    //       I tend to get it wrong when writing from the top of my head :)<newline46mondego>    lastStep = curTime + timeSinceLast % TIME_PER_STEP;<newline46mondego><newline46mondego>    // Move your game forward one step.<newline46mondego><newline46mondego>}<newline46mondego>"
"4936splitHere46","2369983splitHere46","null"
"4937splitHere46","2369983splitHere46","null"
"4938splitHere46","2369983splitHere46","int arr[] = null;<newline46mondego>if (arr == null) {<newline46mondego>  System.out.println(<doubleQuotes46>array is null<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4939splitHere46","2369983splitHere46","arr = new int[0];<newline46mondego>if (arr.length == 0) {<newline46mondego>  System.out.println(<doubleQuotes46>array is empty<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"4940splitHere46","2369983splitHere46","null"
"4941splitHere46","2369983splitHere46","Object arr[] = new Object[10];<newline46mondego>boolean empty = true;<newline46mondego>for (int i=0; i<arr.length; i++) {<newline46mondego>  if (arr[i] != null) {<newline46mondego>    empty = false;<newline46mondego>    break;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4942splitHere46","2369983splitHere46","Object arr[] = new Object[10];<newline46mondego>boolean empty = true;<newline46mondego>for (Object ob : arr) {<newline46mondego>  if (ob != null) {<newline46mondego>    empty = false;<newline46mondego>    break;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"4943splitHere46","2370056splitHere46","\s"
"4944splitHere46","2370056splitHere46","Pattern p=Pattern.compile(<doubleQuotes46><@a>.+?</@a><doubleQuotes46>, Pattern.DOTALL);<newline46mondego>"
"4945splitHere46","2370056splitHere46","<@a>"
"4946splitHere46","2370285splitHere46","System.out"
"4947splitHere46","2370285splitHere46","System.err"
"4948splitHere46","2370285splitHere46","System.out"
"4949splitHere46","2370285splitHere46","System.err"
"4950splitHere46","2370285splitHere46","System.out"
"4951splitHere46","2370285splitHere46","System.err"
"4952splitHere46","2370285splitHere46","java.io.Console"
"4953splitHere46","2370285splitHere46","java.io.Console"
"4954splitHere46","2370285splitHere46","System.{out,err}"
"4955splitHere46","2370285splitHere46","java.io.Console"
"4956splitHere46","2370320splitHere46","sizeof(someInt)"
"4957splitHere46","2370320splitHere46","4"
"4958splitHere46","2370320splitHere46","int"
"4959splitHere46","2370320splitHere46","public class PrimitiveSizes {<newline46mondego>    public static int sizeof(byte b) { return 1; } <newline46mondego>    public static int sizeof(short s) { return 2; }<newline46mondego>    // etcetera<newline46mondego>}<newline46mondego>"
"4960splitHere46","2370320splitHere46","import static PrimitiveSizes.*;<newline46mondego>"
"4961splitHere46","2370320splitHere46","sizeof(Object o)"
"4962splitHere46","2370403splitHere46","Map<String,String> map = new HashMap<String,String>();<newline46mondego>"
"4963splitHere46","2370403splitHere46","Map other = (Map)map;<newline46mondego>other.put(new Integer(3), new Double( 4.5 );<newline46mondego>"
"4964splitHere46","2370608splitHere46","java -Djna.library.path=<path to your library> MainClass"
"4965splitHere46","2370608splitHere46","System.setProperty(<doubleQuotes46>jna.library.path<doubleQuotes46>, <path to your library>);<newline46mondego>"
"4966splitHere46","2370774splitHere46","Intent setIntent = new Intent(Intent.ACTION_MAIN);<newline46mondego>setIntent.addCategory(Intent.CATEGORY_HOME);<newline46mondego>setIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);<newline46mondego>startActivity(setIntent); <newline46mondego>"
"4967splitHere46","2370845splitHere46","PushRegistry"
"4968splitHere46","2370897splitHere46","<doubleQuotes46>((?<=\\w)(?=[^\\w])|(?<=[^\\w])(?=\\w))<doubleQuotes46><newline46mondego>"
"4969splitHere46","2370897splitHere46","\b"
"4970splitHere46","2370897splitHere46","<doubleQuotes46>(?<=\\w)(?!\\w)|(?<!\\w)(?=\\w)<doubleQuotes46><newline46mondego>"
"4971splitHere46","2370897splitHere46","\b"
"4972splitHere46","2370897splitHere46","<doubleQuotes46>(?!^)\\b(?!$)<doubleQuotes46><newline46mondego>"
"4973splitHere46","2370897splitHere46","\b"
"4974splitHere46","2370966splitHere46","Client"
"4975splitHere46","2370966splitHere46","Reusable"
"4976splitHere46","2370966splitHere46","ReusablePool"
"4977splitHere46","2370966splitHere46","Reusable"
"4978splitHere46","2370966splitHere46","acquireReusable"
"4979splitHere46","2370966splitHere46","Reusable"
"4980splitHere46","2370966splitHere46","releaseReusable"
"4981splitHere46","2370966splitHere46","ReusablePool"
"4982splitHere46","2370966splitHere46","Reusable"
"4983splitHere46","2370966splitHere46","Client"
"4984splitHere46","2370966splitHere46","Reusable"
"4985splitHere46","2370966splitHere46","Reusable"
"4986splitHere46","2370966splitHere46","Reusable"
"4987splitHere46","2370966splitHere46","maxSize"
"4988splitHere46","2370966splitHere46","ReusablePool"
"4989splitHere46","2370966splitHere46","Reusable"
"4990splitHere46","2370966splitHere46","maxSize"
"4991splitHere46","2370966splitHere46","Reusable"
"4992splitHere46","2370966splitHere46","Reusable"
"4993splitHere46","2370966splitHere46","Reusable"
"4994splitHere46","2370966splitHere46","releaseReusable"
"4995splitHere46","2370966splitHere46","ReusablePool"
"4996splitHere46","2371109splitHere46","mvn dependency:tree"
"4997splitHere46","2371109splitHere46","simple-persist/pom.xml"
"4998splitHere46","2371109splitHere46","<dependency><newline46mondego>  <groupId>org.hibernate</groupId><newline46mondego>  <artifactId>hibernate</artifactId><newline46mondego>  <version>3.2.5.ga</version><newline46mondego>  <exclusions><newline46mondego>    <exclusion><newline46mondego>      <groupId>javax.transaction</groupId><newline46mondego>      <artifactId>jta</artifactId><newline46mondego>    </exclusion><newline46mondego>  </exclusions><newline46mondego></dependency><newline46mondego>"
"4999splitHere46","2371109splitHere46","hibernate-3.2.5.ga.jar"
"5000splitHere46","2371109splitHere46","jta-1.0.1B.jar"
"5001splitHere46","2371109splitHere46","hibernate-core-3.3.0.GA.jar"
"5002splitHere46","2371109splitHere46","jta-1.1.jar"
"5003splitHere46","2371109splitHere46","hibernate-annotations-3.3.0.ga.jar"
"5004splitHere46","2371109splitHere46","hibernate-3.2.1.GA.jar"
"5005splitHere46","2371109splitHere46","jta-1.0.1B.jar"
"5006splitHere46","2371109splitHere46","simple-persist/pom.xml"
"5007splitHere46","2371109splitHere46","hibernate-core-3.3.0.SP1.jar"
"5008splitHere46","2371109splitHere46","hibernate-annotations-3.4.0.GA.jar"
"5009splitHere46","2371150splitHere46","i=++a + ++a + a++; =><newline46mondego>i=6 + 7 + 7; (a=8)<newline46mondego><newline46mondego>i=a++ + ++a + ++a; =><newline46mondego>i=5 + 7 + 8; (a=8)<newline46mondego>"
"5010splitHere46","2371302splitHere46","get_TAG()"
"5011splitHere46","2371302splitHere46","set_TAG(...)"
"5012splitHere46","2371302splitHere46","public abstract class AbstractTable {<newline46mondego><newline46mondego>    public abstract String getTag();<newline46mondego>    public abstract void init();<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5013splitHere46","2371302splitHere46","getTag()"
"5014splitHere46","2371302splitHere46","public class SalesTable extends AbstractTable {<newline46mondego><newline46mondego>    private static final String TABLE_NAME = <doubleQuotes46>Sales<doubleQuotes46>;<newline46mondego><newline46mondego>    public String getTag() {<newline46mondego>        return TABLE_NAME;<newline46mondego>    }<newline46mondego><newline46mondego>    public void init() {<newline46mondego>        ...<newline46mondego>        String tableName = getTag();<newline46mondego>        ...<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5015splitHere46","2371391splitHere46","<fo:external-graphic content-width=<doubleQuotes46>25cm<doubleQuotes46> content-height=<doubleQuotes46>16cm<doubleQuotes46>><newline46mondego>        <xsl:if test=<doubleQuotes46>@src<doubleQuotes46>><newline46mondego>            <xsl:attribute name=<doubleQuotes46>src<doubleQuotes46>><newline46mondego>                <xsl:choose><newline46mondego>                    <xsl:when test=<doubleQuotes46>starts-with(@src, 'http://')<doubleQuotes46>><newline46mondego>                        <xsl:value-of select=<doubleQuotes46>concat('url(',@src,')')<doubleQuotes46>/><newline46mondego>                    </xsl:when><newline46mondego>                    <xsl:when test=<doubleQuotes46>starts-with(@src, 'https://')<doubleQuotes46>><newline46mondego>                        <xsl:value-of select=<doubleQuotes46>concat('url(',@src,')')<doubleQuotes46>/><newline46mondego>                    </xsl:when><newline46mondego>                    <xsl:otherwise><newline46mondego>                        <xsl:value-of select=<doubleQuotes46>concat('url(',$baseurl, @src,')') + ')'<doubleQuotes46>/><newline46mondego>                    </xsl:otherwise><newline46mondego>                </xsl:choose><newline46mondego>            </xsl:attribute><newline46mondego>        </xsl:if><newline46mondego>    </fo:external-graphic><newline46mondego>"
"5016splitHere46","2371503splitHere46","HashMap"
"5017splitHere46","2371503splitHere46","IEqualityComparer<T>"
"5018splitHere46","2371570splitHere46","UserSession userSession = (UserSession) request.getSession().getAttribute(<doubleQuotes46>userSession<doubleQuotes46>);<newline46mondego>if (userSession == null) {<newline46mondego>    userSession = new UserSession();<newline46mondego>    request.getSession().setAttribute(<doubleQuotes46>userSession<doubleQuotes46>, userSession);<newline46mondego>}<newline46mondego>userSession.doSomething();<newline46mondego>"
"5019splitHere46","2371579splitHere46","System.arraycopy()"
"5020splitHere46","2371579splitHere46","int[] b = new int[a.length];<newline46mondego>System.arraycopy(a, 0, b, 0, a.length);<newline46mondego>"
"5021splitHere46","2371806splitHere46","data={<doubleQuotes46>data<doubleQuotes46>:{<doubleQuotes46>a<doubleQuotes46>:<doubleQuotes46><doubleQuotes46>,<doubleQuotes46>b<doubleQuotes46>:<doubleQuotes46><doubleQuotes46>,<doubleQuotes46>c<doubleQuotes46>:<doubleQuotes46><doubleQuotes46>}}<newline46mondego>"
"5022splitHere46","2371806splitHere46","HttpServletRequest#getInputStream()"
"5023splitHere46","2371806splitHere46","HttpServletRequest#getReader()"
"5024splitHere46","2371861splitHere46","pom"
"5025splitHere46","2371861splitHere46","<dependency><newline46mondego>  <groupId>org.springframework.ldap</groupId><newline46mondego>  <artifactId>spring-ldap-core</artifactId><newline46mondego>  <version>1.3.0.RELEASE</version><newline46mondego></dependency><newline46mondego>"
"5026splitHere46","2371861splitHere46","o.s.l.c.s.BaseLdapPathContextSource"
"5027splitHere46","2371991splitHere46","ClassLoader"
"5028splitHere46","2372205splitHere46","#field"
"5029splitHere46","2372228splitHere46","public class DoBeep {<newline46mondego>    public static main(String args[]) {<newline46mondego>        System.out.print(<doubleQuotes46>\007<doubleQuotes46>); // bell ASCII char<newline46mondego>        System.out.flush();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5030splitHere46","2372228splitHere46","beep()"
"5031splitHere46","2372228splitHere46","import java.awt.*;<newline46mondego><newline46mondego>public class DoBeep {<newline46mondego>    public static void main(String args[]) {<newline46mondego>        Toolkit.getDefaultToolkit().beep();     <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5032splitHere46","2372246splitHere46","asm { ... }"
"5033splitHere46","2372246splitHere46",".class"
"5034splitHere46","2372246splitHere46",".class"
"5035splitHere46","2372298splitHere46","class MyBlob implements Serializable {<newline46mondego><newline46mondego>  byte[] myBlobField;<newline46mondego><newline46mondego>  //Setter<newline46mondego>  public void setMyBlobField(byte[] myBlobField) {<newline46mondego>    this.myBlobField = myBlobField;<newline46mondego>  }<newline46mondego><newline46mondego>  //Getter<newline46mondego>  public byte[] getMyBlobField() {<newline46mondego>     return myBlobField;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5036splitHere46","2372298splitHere46","PreparedStatement"
"5037splitHere46","2372298splitHere46","MyBlob blob = ....;<newline46mondego> PreparedStatement ps = ....;<newline46mondego> ps.setByte(1, blob.getMyBlobField());<newline46mondego><newline46mondego> ps.execute();<newline46mondego> //Handle Exceptions...close...etc.<newline46mondego>"
"5038splitHere46","2372390splitHere46","Component"
"5039splitHere46","2372390splitHere46","isBackgroundSet()"
"5040splitHere46","2372441splitHere46","new T()"
"5041splitHere46","2372441splitHere46","class MegaSignupWizard extends SignupWizard<MegaSignupSection, MegaSignupObject, MegaSignupListener, MegaSignupView>"
"5042splitHere46","2372441splitHere46","MegaSignupWizard"
"5043splitHere46","2372534splitHere46","Spirte"
"5044splitHere46","2372534splitHere46","private"
"5045splitHere46","2372534splitHere46","AbstractSprite"
"5046splitHere46","2372542splitHere46","while (<>) {<newline46mondego>    $l{$1}++ if m/\s+from\s+(.+\.jar)/;<newline46mondego>}<newline46mondego><newline46mondego>for $l (keys(%l)) {<newline46mondego>    print <doubleQuotes46>$l\n<doubleQuotes46>;<newline46mondego>}<newline46mondego>"
"5047splitHere46","2372542splitHere46","java -verbose -jar YOUR_APP.jar | perl list_jars.pl<newline46mondego>"
"5048splitHere46","2372566splitHere46","org.apache.activemq.UseDedicatedTaskRunner=false"
"5049splitHere46","2372629splitHere46","Canvas"
"5050splitHere46","2372629splitHere46","JPanel"
"5051splitHere46","2372629splitHere46","JLayeredPane"
"5052splitHere46","2372629splitHere46","paint()"
"5053splitHere46","2372629splitHere46","bi.getGraphics()"
"5054splitHere46","2372640splitHere46","public interface MyInterface <newline46mondego>{ <newline46mondego>    void theMethod(); <newline46mondego>} <newline46mondego><newline46mondego>public abstract class MyAbstractClass : MyInterface <newline46mondego>{ <newline46mondego>     public abstract void theMethod();<newline46mondego>} <newline46mondego><newline46mondego>public class MyClass : MyAbstractClass <newline46mondego>{ <newline46mondego>    public override void theMethod() <newline46mondego>    { <newline46mondego>        /* Implement missing interface methods in this class. */ <newline46mondego>    } <newline46mondego>} <newline46mondego>"
"5055splitHere46","2372698splitHere46","s=File.readlines(<doubleQuotes46>test.luatable<doubleQuotes46>)[1..-1].join<newline46mondego>JSON.parse(s.gsub(<doubleQuotes46>=<doubleQuotes46>, <doubleQuotes46>:<doubleQuotes46>).gsub(/[\[\]]/,<doubleQuotes46><doubleQuotes46>).gsub('<doubleQuotes46> :','<doubleQuotes46>:').gsub(/,\n(.+)\}/,<doubleQuotes46>\n\\1}<doubleQuotes46>))<newline46mondego>=> {<doubleQuotes46>PlayerInfos<doubleQuotes46>=>{<doubleQuotes46>Nyim<doubleQuotes46>=>{<doubleQuotes46>guild<doubleQuotes46>=><doubleQuotes46>Excubitores Noctae<doubleQuotes46>, <doubleQuotes46>class<doubleQuotes46>=><doubleQuotes46>HUNTER<doubleQuotes46>,  <newline46mondego>    <doubleQuotes46>level<doubleQuotes46>=>70, <doubleQuotes46>sex<doubleQuotes46>=>2, <doubleQuotes46>race<doubleQuotes46>=><doubleQuotes46>Orc<doubleQuotes46>}, <doubleQuotes46>Zyrn<doubleQuotes46>=>{<doubleQuotes46>guild<doubleQuotes46>=><doubleQuotes46>Excubitores Noctae<doubleQuotes46>, <newline46mondego>    <doubleQuotes46>class<doubleQuotes46>=><doubleQuotes46>WARLOCK<doubleQuotes46>, <doubleQuotes46>level<doubleQuotes46>=>70, <doubleQuotes46>sex<doubleQuotes46>=>2, <doubleQuotes46>race<doubleQuotes46>=><doubleQuotes46>BloodElf<doubleQuotes46>}}}<newline46mondego>"
"5056splitHere46","2372743splitHere46","BOM model = new BOM();<newline46mondego> Item child = model.getChildItem(); <newline46mondego> // you now have a handle to the child object. Presumably, so does model, but we don't care about that.<newline46mondego> ArrayList a = new ArrayList();<newline46mondego> a.add(child); <newline46mondego>//a now has a handle to child.<newline46mondego> model.close();<newline46mondego> // child is not eligible for garbage collection because a still has a handle to it.<newline46mondego>"
"5057splitHere46","2372898splitHere46","logback-classic"
"5058splitHere46","2372898splitHere46","logback.configurationFile"
"5059splitHere46","2372898splitHere46","<project><newline46mondego>  ...<newline46mondego>  <build><newline46mondego>    ...<newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.mortbay.jetty</groupId><newline46mondego>        <artifactId>jetty-maven-plugin</artifactId><newline46mondego>        <version>7.0.0.pre5</version><newline46mondego>        <configuration><newline46mondego>          <systemProperties><newline46mondego>            <systemProperty><newline46mondego>              <name>logback.configurationFile</name><newline46mondego>              <value>./src/etc/logback.xml</value><newline46mondego>            </systemProperty><newline46mondego>          </systemProperties><newline46mondego>        </configuration><newline46mondego>        <dependencies><newline46mondego>          <dependency><newline46mondego>            <groupId>ch.qos.logback</groupId><newline46mondego>            <artifactId>logback-classic</artifactId><newline46mondego>            <version>0.9.15</version><newline46mondego>          </dependency><newline46mondego>        </dependencies><newline46mondego>      </plugin><newline46mondego>      ...<newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego>  ...<newline46mondego></project><newline46mondego>"
"5060splitHere46","2372898splitHere46","src/etc/logback.xml"
"5061splitHere46","2372898splitHere46","<configuration><newline46mondego>  <appender name=<doubleQuotes46>STDOUT<doubleQuotes46> class=<doubleQuotes46>ch.qos.logback.core.ConsoleAppender<doubleQuotes46>><newline46mondego>    <layout class=<doubleQuotes46>ch.qos.logback.classic.PatternLayout<doubleQuotes46>><newline46mondego>      <Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern><newline46mondego>    </layout><newline46mondego>  </appender><newline46mondego><newline46mondego>  <root level=<doubleQuotes46>debug<doubleQuotes46>><newline46mondego>    <appender-ref ref=<doubleQuotes46>STDOUT<doubleQuotes46>/><newline46mondego>  </root><newline46mondego></configuration><newline46mondego>"
"5062splitHere46","2372954splitHere46","package firsthibernateapp;<newline46mondego><newline46mondego>import javax.persistence.Column;<newline46mondego>import javax.persistence.Entity;<newline46mondego>import javax.persistence.Id;<newline46mondego>import javax.persistence.Table;<newline46mondego><newline46mondego>@Entity<newline46mondego>@Table(name = <doubleQuotes46>users<doubleQuotes46>)<newline46mondego>public class Users implements java.io.Serializable<newline46mondego>{<newline46mondego><newline46mondego>    private static final long serialVersionUID = -7960806792183842504L;<newline46mondego><newline46mondego>    @Id<newline46mondego>    private Integer id;<newline46mondego>    @Column(name = <doubleQuotes46>name<doubleQuotes46>)<newline46mondego>    private String  myName;<newline46mondego><newline46mondego>    public Users()<newline46mondego>    {<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public Integer getId()<newline46mondego>    {<newline46mondego>        return id;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setId(Integer id)<newline46mondego>    {<newline46mondego>        this.id = id;<newline46mondego>    }<newline46mondego><newline46mondego>    public String getMyName()<newline46mondego>    {<newline46mondego>        return myName;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setMyName(String myName)<newline46mondego>    {<newline46mondego>        this.myName = myName;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object obj)<newline46mondego>    {<newline46mondego>        if (obj == null)<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        if (getClass() != obj.getClass())<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        final Users other = (Users) obj;<newline46mondego>        if (this.id != other.id && (this.id == null || !this.id.equals(obj)))<newline46mondego>        {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode()<newline46mondego>    {<newline46mondego>        int hash = 3;<newline46mondego>        hash = 53 * hash + (this.id != null ? this.id.hashCode() : 0);<newline46mondego>        return hash;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5063splitHere46","2372954splitHere46","package firsthibernateapp;<newline46mondego><newline46mondego>import org.hibernate.Session;<newline46mondego>import org.hibernate.SessionFactory;<newline46mondego>import org.hibernate.cfg.AnnotationConfiguration;<newline46mondego><newline46mondego>public class Main<newline46mondego>{<newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        SessionFactory sessionFactory = new AnnotationConfiguration()<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.dialect<doubleQuotes46>,<doubleQuotes46>org.hibernate.dialect.MySQLDialect<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.connection.driver_class<doubleQuotes46>,<doubleQuotes46>com.mysql.jdbc.Driver<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.connection.url<doubleQuotes46>,<doubleQuotes46>jdbc:mysql://localhost:3306/test_hibernate<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.connection.username<doubleQuotes46>, <doubleQuotes46>root<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.connection.password<doubleQuotes46>, <doubleQuotes46>root<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.show_sql<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.format_sql<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.c3p0.acquire_increment<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.c3p0.idle_test_period<doubleQuotes46>, <doubleQuotes46>100<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.c3p0.max_size<doubleQuotes46>, <doubleQuotes46>10<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.c3p0.max_statements<doubleQuotes46>, <doubleQuotes46>0<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.c3p0.min_size<doubleQuotes46>, <doubleQuotes46>5<doubleQuotes46>)<newline46mondego>                .setProperty(<doubleQuotes46>hibernate.c3p0.timeout<doubleQuotes46>, <doubleQuotes46>100<doubleQuotes46>)<newline46mondego>                .addAnnotatedClass(Users.class)<newline46mondego>                .buildSessionFactory();<newline46mondego><newline46mondego>        Session session = sessionFactory.openSession();<newline46mondego>        session.beginTransaction();<newline46mondego><newline46mondego>        // Get the persistent instance of the given entity class with the given identifier<newline46mondego>        // and prints out its member (myName)<newline46mondego><newline46mondego>        Users user = (Users) session.get(Users.class, 1);<newline46mondego>        System.out.println(<doubleQuotes46>The user is <doubleQuotes46> + user.getMyName() + <doubleQuotes46>\n<doubleQuotes46>);<newline46mondego><newline46mondego>        // commit the changes, and close<newline46mondego><newline46mondego>        session.getTransaction().commit();<newline46mondego>        session.close();<newline46mondego>        sessionFactory.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5064splitHere46","2372990splitHere46","User"
"5065splitHere46","2372990splitHere46","static Map<User, HttpSession>"
"5066splitHere46","2372990splitHere46","HttpSessionBindingListener"
"5067splitHere46","2372990splitHere46","Object#equals()"
"5068splitHere46","2372990splitHere46","Object#hashCode()"
"5069splitHere46","2372990splitHere46","ServletContextListener"
"5070splitHere46","2372990splitHere46","User"
"5071splitHere46","2372990splitHere46","public class User implements HttpSessionBindingListener {<newline46mondego><newline46mondego>    // All logins.<newline46mondego>    private static Map<User, HttpSession> logins = new HashMap<User, HttpSession>();<newline46mondego><newline46mondego>    // Normal properties.<newline46mondego>    private Long id;<newline46mondego>    private String username;<newline46mondego>    // Etc.. Of course with public getters+setters.<newline46mondego><newline46mondego>    @Override<newline46mondego>    public boolean equals(Object other) {<newline46mondego>        return (other instanceof User) && (id != null) ? id.equals(((User) other).id) : (other == this);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public int hashCode() {<newline46mondego>        return (id != null) ? (this.getClass().hashCode() + id.hashCode()) : super.hashCode();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void valueBound(HttpSessionBindingEvent event) {<newline46mondego>        HttpSession session = logins.remove(this);<newline46mondego>        if (session != null) {<newline46mondego>            session.invalidate();<newline46mondego>        }<newline46mondego>        logins.put(this, event.getSession());<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void valueUnbound(HttpSessionBindingEvent event) {<newline46mondego>        logins.remove(this);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5072splitHere46","2372990splitHere46","User"
"5073splitHere46","2372990splitHere46","User user = userDAO.find(username, password);<newline46mondego>if (user != null) {<newline46mondego>    sessionMap.put(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>} else {<newline46mondego>    // Show error.<newline46mondego>}<newline46mondego>"
"5074splitHere46","2372990splitHere46","valueBound()"
"5075splitHere46","2372990splitHere46","logins"
"5076splitHere46","2372990splitHere46","User"
"5077splitHere46","2372990splitHere46","sessionMap.remove(<doubleQuotes46>user<doubleQuotes46>);<newline46mondego>"
"5078splitHere46","2372990splitHere46","valueUnbound()"
"5079splitHere46","2372990splitHere46","logins"
"5080splitHere46","2373034splitHere46","Collections.sort(l, new Comparator<HashMap<String, String>>(){ <newline46mondego>        public int compare(HashMap<String, String> one, HashMap<String, String> two) { <newline46mondego>            return one.get(<doubleQuotes46>site_name<doubleQuotes46>).compareTo(two.get(<doubleQuotes46>site_name<doubleQuotes46>));<newline46mondego>        } <newline46mondego>});<newline46mondego>"
"5081splitHere46","2373034splitHere46","get"
"5082splitHere46","2373034splitHere46","String"
"5083splitHere46","2373034splitHere46","List"
"5084splitHere46","2373034splitHere46","Map"
"5085splitHere46","2373034splitHere46","ArrayList"
"5086splitHere46","2373034splitHere46","HashMap"
"5087splitHere46","2373250splitHere46","java.io.File"
"5088splitHere46","2373250splitHere46","C:/Tomcat/bin"
"5089splitHere46","2373250splitHere46","TEST.rdf"
"5090splitHere46","2373250splitHere46","ServletContext#getRealPath()"
"5091splitHere46","2373250splitHere46","/TEST.rdf"
"5092splitHere46","2373250splitHere46","/TEST.rdf"
"5093splitHere46","2373250splitHere46","String relativeWebPath = <doubleQuotes46>/TEST.rdf<doubleQuotes46>;<newline46mondego>String absoluteDiskPath = getServletContext().getRealPath(relativeWebPath);<newline46mondego>File file = new File(absoluteDiskPath);<newline46mondego>"
"5094splitHere46","2373443splitHere46","public class Sentence {<newline46mondego><newline46mondego>    public Sentence(Object... text) {<newline46mondego>        // ...<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5095splitHere46","2373443splitHere46","Object#toString()"
"5096splitHere46","2373443splitHere46","Sentence"
"5097splitHere46","2373729splitHere46","class Foo<S extends Comparable & Clonable><newline46mondego>"
"5098splitHere46","2373823splitHere46","String testStr = <doubleQuotes46>TESTING THIS  OUT   WITH    DIFFERENT     CASES<doubleQuotes46>;<newline46mondego>String _replaced = testStr.replace(<doubleQuotes46>  <doubleQuotes46>, <doubleQuotes46>& & <doubleQuotes46>);<newline46mondego>String replaced = _replaced.replace(<doubleQuotes46>&  <doubleQuotes46>, <doubleQuotes46>& & <doubleQuotes46>);<newline46mondego>"
"5099splitHere46","2374012splitHere46","class JavaStreamBuff : std::streambuf<newline46mondego><newline46mondego>{<newline46mondego><newline46mondego>  std::stringstream buff;<newline46mondego><newline46mondego>  int size;<newline46mondego><newline46mondego>  jobject handle;<newline46mondego>  JNIEnv* env<newline46mondego><newline46mondego>  //Ctor takes env pointer for the working thread and java.io.PrintStream<newline46mondego>  JavaStreamBuff(JNIEnv* env, jobject jobject printStream, int buffsize = 50)<newline46mondego><newline46mondego>  {<newline46mondego><newline46mondego>     handle = env->NewGlobalRef(printStream);<newline46mondego>     this->env = env;<newline46mondego>     this->size = size;<newline46mondego>  }<newline46mondego>  //This method is the central output of the streambuf class, every charakter goes here<newline46mondego>  int overflow(int in)<newline46mondego><newline46mondego>  {<newline46mondego><newline46mondego>    if(in == eof || buff.size() == size)<newline46mondego><newline46mondego>   {<newline46mondego><newline46mondego>     std::string blub = buff.str();<newline46mondego><newline46mondego>     jstring do = //magic here, convert form current locale unicode then to java string<newline46mondego><newline46mondego>     jMethodId id = env->(env->GetObjectClass(handle),<doubleQuotes46>print<doubleQuotes46>,<doubleQuotes46>(java.lang.String)V<doubleQuotes46>);<newline46mondego><newline46mondego>     env->callVoidMethod(id,handle,do);<newline46mondego><newline46mondego>     buff.str(<doubleQuotes46><doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    else<newline46mondego><newline46mondego>    {buff<<in;}<newline46mondego><newline46mondego><newline46mondego><newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego>  virtual ~JavaStreamBuff()<newline46mondego><newline46mondego>  {<newline46mondego><newline46mondego>     env->DeleteGlobalRef(handle);<newline46mondego><newline46mondego><newline46mondego><newline46mondego>  }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"5100splitHere46","2374012splitHere46","//The c++ class<newline46mondego>class JavaStreamBuf :public std::streambuf<newline46mondego>{<newline46mondego><newline46mondego>  std::vector<char> buff;<newline46mondego><newline46mondego>  unsigned int size;<newline46mondego><newline46mondego>  jobject handle;<newline46mondego>  JNIEnv* env;<newline46mondego>public:<newline46mondego>  //Ctor takes env pointer for the working thread and java.io.PrintStream<newline46mondego>  JavaStreamBuf(JNIEnv* env, jobject  cppstream, unsigned int buffsize = 50)<newline46mondego>  {<newline46mondego>     handle = env->NewGlobalRef(cppstream);<newline46mondego>     this->env = env;<newline46mondego>     this->size = size;<newline46mondego>     this->setbuf(0,0);<newline46mondego>  }<newline46mondego>  //This method is the central output of the streambuf class, every charakter goes here<newline46mondego>  virtual int_type overflow(int_type in  = traits_type::eof()){<newline46mondego>    if(in == std::ios::traits_type::eof() || buff.size() == size)<newline46mondego>    {<newline46mondego>        this->std::streambuf::overflow(in);<newline46mondego>         if(in != EOF)<newline46mondego>             buff.push_back(in);<newline46mondego><newline46mondego>         jbyteArray o = env->NewByteArray(buff.size());<newline46mondego>         env->SetByteArrayRegion(o,0,buff.size(),(jbyte*)&buff[0]);<newline46mondego>         jmethodID id = env->GetMethodID(env->GetObjectClass(handle),<doubleQuotes46>push<doubleQuotes46>,<doubleQuotes46>([B)V<doubleQuotes46>);<newline46mondego><newline46mondego>         env->CallVoidMethod(handle,id,o);<newline46mondego>         if(in == EOF)<newline46mondego>             env->CallVoidMethod(handle,id,NULL);<newline46mondego><newline46mondego>         buff.clear();<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        buff.push_back(in);<newline46mondego>    }<newline46mondego><newline46mondego>    return in;<newline46mondego>  }<newline46mondego><newline46mondego>  virtual ~JavaStreamBuf()<newline46mondego>  {<newline46mondego>      overflow();<newline46mondego>     env->DeleteGlobalRef(handle);<newline46mondego><newline46mondego>  }<newline46mondego>//The java class<newline46mondego>/**<newline46mondego> * <newline46mondego> */<newline46mondego>package jx;<newline46mondego><newline46mondego>import java.io.ByteArrayInputStream;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InterruptedIOException;<newline46mondego>import java.nio.ByteBuffer;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Arrays;<newline46mondego>import java.util.List;<newline46mondego><newline46mondego>/**<newline46mondego> * @author josefx<newline46mondego> *<newline46mondego> */<newline46mondego>public class CPPStream extends InputStream {<newline46mondego><newline46mondego>    List<Byte> data = new ArrayList<Byte>();<newline46mondego>    int off = 0;<newline46mondego>    private boolean endflag = false;<newline46mondego>    public void push(byte[] d)<newline46mondego>    {<newline46mondego>        synchronized(data)<newline46mondego>        {<newline46mondego>            if(d == null)<newline46mondego>            {<newline46mondego>                this.endflag = true;<newline46mondego>            }<newline46mondego>            else<newline46mondego>            {<newline46mondego>                for(int i = 0; i < d.length;++i)<newline46mondego>                {<newline46mondego>                    data.add(d[i]);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public int read() throws IOException <newline46mondego>    {<newline46mondego>        synchronized(data)<newline46mondego>        {<newline46mondego><newline46mondego>            while(data.isEmpty()&&!endflag)<newline46mondego>            {<newline46mondego><newline46mondego>                try {<newline46mondego>                        data.wait();<newline46mondego>                    } catch (InterruptedException e) {<newline46mondego>                        throw new InterruptedIOException();<newline46mondego>                    }<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>        if(endflag)return -1;<newline46mondego>        else return data.remove(0);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego><newline46mondego>}<newline46mondego>"
"5101splitHere46","2374025splitHere46","this(< argument list >);<newline46mondego>"
"5102splitHere46","2374025splitHere46","super(< argument list >);<newline46mondego>"
"5103splitHere46","2374298splitHere46","<ui:composition xmlns=<doubleQuotes46>http://www.w3.org/1999/xhtml<doubleQuotes46><newline46mondego>    xmlns:ui=<doubleQuotes46>http://java.sun.com/jsf/facelets<doubleQuotes46><newline46mondego>    xmlns:h=<doubleQuotes46>http://java.sun.com/jsf/html<doubleQuotes46><newline46mondego>    xmlns:f=<doubleQuotes46>http://java.sun.com/jsf/core<doubleQuotes46><newline46mondego>    xmlns:a4j=<doubleQuotes46>http://richfaces.org/a4j<doubleQuotes46><newline46mondego>    xmlns:rich=<doubleQuotes46>http://richfaces.org/rich<doubleQuotes46>><newline46mondego>"
"5104splitHere46","2374298splitHere46","<% %>"
"5105splitHere46","2374298splitHere46","jsf-facelets-1.1.14.jar"
"5106splitHere46","2374305splitHere46","Person(String name)"
"5107splitHere46","2374305splitHere46","Person(String address)"
"5108splitHere46","2374305splitHere46","new Person(<doubleQuotes46>Joe Blow<doubleQuotes46>);"
"5109splitHere46","2374305splitHere46","Person(String name)<newline46mondego>{<newline46mondego>    this.name = name;<newline46mondego>}<newline46mondego>Person(String name, String address)<newline46mondego>{<newline46mondego>    this(name);<newline46mondego>    this.address = address;<newline46mondego>}<newline46mondego>"
"5110splitHere46","2374305splitHere46","this()"
"5111splitHere46","2374326splitHere46","Math.random"
"5112splitHere46","2374326splitHere46","new Color( (float)Math.random(), (float)Math.random(), (float)Math.random() );<newline46mondego>"
"5113splitHere46","2374326splitHere46","Grid"
"5114splitHere46","2374326splitHere46","grid"
"5115splitHere46","2374326splitHere46","GridBagLayout"
"5116splitHere46","2374326splitHere46","public Grid ()<newline46mondego>{<newline46mondego>    final Color BACKGROUND = Color.LIGHT_GRAY;<newline46mondego>    final Color[] colors = new Color[]<newline46mondego>        {Color.BLACK, Color.BLACK, Color.BLUE, Color.BLUE};<newline46mondego><newline46mondego>    final int ROWS=10;<newline46mondego>    final int COLS=10;<newline46mondego><newline46mondego>    setBackground(Color.BLACK);<newline46mondego>    setLayout(new GridBagLayout());<newline46mondego><newline46mondego>    Label[][] label = new Label[ROWS][COLS];<newline46mondego><newline46mondego>    GridBagConstraints gc = new GridBagConstraints();<newline46mondego>    gc.weightx = 1d;<newline46mondego>    gc.weighty = 1d;<newline46mondego>    gc.insets = new Insets(0, 0, 1, 1);<newline46mondego>    gc.fill = GridBagConstraints.BOTH;<newline46mondego><newline46mondego>    // fill the whole panel with labels<newline46mondego>    for( int r=0 ; r<ROWS ; r++) {<newline46mondego>        for( int c=0 ; c<COLS ; c++) {<newline46mondego>            Label l = new Label();<newline46mondego>            l.setBackground(BACKGROUND);<newline46mondego>            gc.gridx = r;<newline46mondego>            gc.gridy = c;<newline46mondego>            add(l, gc);<newline46mondego>            label[r][c] = l;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    // now find random fields for the colors defined in BACKGROUND<newline46mondego>    for(Color col : colors) {<newline46mondego>        int r, c;<newline46mondego>        do { // make sure to find unique fields<newline46mondego>            r = (int)Math.floor(Math.random() * ROWS);<newline46mondego>            c = (int)Math.floor(Math.random() * COLS);<newline46mondego>        } while(!label[r][c].getBackground().equals(BACKGROUND));<newline46mondego>        label[r][c].setBackground(col);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5117splitHere46","2374540splitHere46","interface MyInterface extends Remote {<newline46mondego>  MyClass f(MyClass x) throws RemoteException;<newline46mondego>}<newline46mondego><newline46mondego>class MyClass implements Serializable {<newline46mondego>   private int value;<newline46mondego>   public MyClass(int value) {<newline46mondego>       this.value = value;<newline46mondego>   }<newline46mondego><newline46mondego>   public int getValue() {<newline46mondego>       return value;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5118splitHere46","2374540splitHere46","class Service extends UnicastRemoteObject  implements MyInterface {<newline46mondego>   public Service() {<newline46mondego>   }<newline46mondego>   public MyClass f(MyClass v) throws RemoteException {<newline46mondego>       return new MyClass(v.getValue() + 1)<newline46mondego>   }<newline46mondego><newline46mondego>   public static void main(Strint arg[]) {<newline46mondego>      Registry r = LocateRegistry.createRegistry(1099);<newline46mondego>      r.rebind(<doubleQuotes46>service<doubleQuotes46>, new Service());<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5119splitHere46","2374540splitHere46","class Client {<newline46mondego>       public static void main(Strint arg[]) {<newline46mondego>          Registry r = LocateRegistry.getRegistry(<doubleQuotes46>localhost<doubleQuotes46>, 1099);<newline46mondego>          MyInterface service = (MyInterface)r.lookup(<doubleQuotes46>service<doubleQuotes46>);<newline46mondego><newline46mondego>          MyClass result = service.f(new MyClass(123));<newline46mondego>          System.out.println(result.getValue());  //print 124 here<newline46mondego>       }<newline46mondego>  }<newline46mondego>"
"5120splitHere46","2374564splitHere46","preserveDataModel"
"5121splitHere46","2374564splitHere46","<t:dataTable>"
"5122splitHere46","2374564splitHere46","<a4j:keepAlive>"
"5123splitHere46","2374742splitHere46","@GET<newline46mondego>@Produces( { MediaType.APPLICATION_XML })<newline46mondego>@Path(<doubleQuotes46>/customers/{id}<doubleQuotes46>)<newline46mondego>public Customer getCustomer(@PathParam(<doubleQuotes46>id<doubleQuotes46>) int id) {<newline46mondego>    ...<newline46mondego>    return customer;<newline46mondego>}<newline46mondego>"
"5124splitHere46","2374742splitHere46","@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Customer {<newline46mondego>  Address address;<newline46mondego>  String name;<newline46mondego><newline46mondego>  // annotate with XmlTransient to prevent mapping this property/type to XML<newline46mondego>  @XmlTransient<newline46mondego>  String ssn;<newline46mondego>  ...<newline46mondego>}<newline46mondego><newline46mondego>@XmlRootElement<newline46mondego>@XmlAccessorType(XmlAccessType.FIELD)<newline46mondego>public class Address {<newline46mondego>  String planet;<newline46mondego>  ...<newline46mondego>}<newline46mondego>"
"5125splitHere46","2374757splitHere46","Window -> Preferences -> General -> Workspace -> New text file line delimiter"
"5126splitHere46","2374757splitHere46","File -> Convert Line Delimiters To -> Unix"
"5127splitHere46","2374861splitHere46","private final String separator;<newline46mondego>"
"5128splitHere46","2375081splitHere46","EmbeddedConfiguration cfg = Db4oEmbedded.newConfiguration();<newline46mondego>    cfg.common().optimizeNativeQueries(false);<newline46mondego>    ObjectContainer db = Db4oEmbedded.openFile(cfg,DB_FILE)<newline46mondego>"
"5129splitHere46","2375081splitHere46","games"
"5130splitHere46","2375081splitHere46","List<String>"
"5131splitHere46","2375081splitHere46","class Pilot {<newline46mondego>         private List<String> games;<newline46mondego>         // rest<newline46mondego>   }  <newline46mondego>"
"5132splitHere46","2375315splitHere46","Tools > Options > Keymap"
"5133splitHere46","2375315splitHere46","System > Cancel Process"
"5134splitHere46","2375437splitHere46","this"
"5135splitHere46","2375539splitHere46","DateTimeFormat"
"5136splitHere46","2375539splitHere46","String dateString = <doubleQuotes46>2010-03-01T00:00:00-08:00<doubleQuotes46>;<newline46mondego>String pattern = <doubleQuotes46>yyyy-MM-dd'T'HH:mm:ssZ<doubleQuotes46>;<newline46mondego>DateTimeFormatter dtf = DateTimeFormat.forPattern(pattern);<newline46mondego>DateTime dateTime = dtf.parseDateTime(dateString);<newline46mondego>System.out.println(dateTime); // 2010-03-01T04:00:00.000-04:00<newline46mondego>"
"5137splitHere46","2375539splitHere46","toString()"
"5138splitHere46","2375539splitHere46","java.util.Date"
"5139splitHere46","2375539splitHere46","DateTime#toDate()"
"5140splitHere46","2375539splitHere46","Date date = dateTime.toDate();<newline46mondego>"
"5141splitHere46","2375539splitHere46","SimpleDateFormat"
"5142splitHere46","2375539splitHere46","SimpleDateFormat"
"5143splitHere46","2375539splitHere46","Z"
"5144splitHere46","2375539splitHere46","String dateString = <doubleQuotes46>2010-03-01T00:00:00-08:00<doubleQuotes46>;<newline46mondego>String pattern = <doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss<doubleQuotes46>;<newline46mondego>SimpleDateFormat sdf = new SimpleDateFormat(pattern);<newline46mondego>Date date = sdf.parse(dateString);<newline46mondego>System.out.println(date); // Mon Mar 01 00:00:00 BOT 2010<newline46mondego>"
"5145splitHere46","2375629splitHere46","propertyfile"
"5146splitHere46","2375629splitHere46","hibernate.properties"
"5147splitHere46","2375629splitHere46","hibernate.dialect=org.hibernate.dialect.Oracle9Dialect<newline46mondego>"
"5148splitHere46","2375629splitHere46","<jpaconfiguration propertyfile=<doubleQuotes46>hibernate.properties<doubleQuotes46>/><newline46mondego>"
"5149splitHere46","2375774splitHere46","display.asyncExec"
"5150splitHere46","2375806splitHere46","<ui:define name=<doubleQuotes46>header<doubleQuotes46>>"
"5151splitHere46","2375806splitHere46","function bodyLoaded(){..}"
"5152splitHere46","2375806splitHere46","<body onload=<doubleQuotes46>bodyLoaded();<doubleQuotes46>>"
"5153splitHere46","2375806splitHere46","<body onload=<doubleQuotes46>#{onLoadJS}<doubleQuotes46>/>"
"5154splitHere46","2375806splitHere46","<ui:param name=<doubleQuotes46>onLoadJS<doubleQuotes46> value=<doubleQuotes46>document.getElementById(..)<doubleQuotes46> />"
"5155splitHere46","2375830splitHere46","String properCase (String inputVal) {<newline46mondego>    // Empty strings should be returned as-is.<newline46mondego><newline46mondego>    if (inputVal.length() == 0) return <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>    // Strings with only one character uppercased.<newline46mondego><newline46mondego>    if (inputVal.length() == 1) return inputVal.toUpperCase();<newline46mondego><newline46mondego>    // Otherwise uppercase first letter, lowercase the rest.<newline46mondego><newline46mondego>    return inputVal.substring(0,1).toUpperCase()<newline46mondego>        + inputVal.substring(1).toLowerCase();<newline46mondego>}<newline46mondego>"
"5156splitHere46","2376030splitHere46","<global-method-security proxy-target-class = <doubleQuotes46>true<doubleQuotes46> ...> ..."
"5157splitHere46","2376030splitHere46","<aop:config proxy-target-class = <doubleQuotes46>true<doubleQuotes46> />"
"5158splitHere46","2376054splitHere46","javadoc"
"5159splitHere46","2376160splitHere46","Comparator"
"5160splitHere46","2376160splitHere46","Arrays.sort()"
"5161splitHere46","2376160splitHere46","Arrays.sort(array, new CustomComparator());<newline46mondego><newline46mondego>public class CustomComparator implements Comparator<String> {<newline46mondego>  private final Pattern pattern = Pattern.compile(<doubleQuotes46>(\\d+)\\s+(.*)<doubleQuotes46>);<newline46mondego><newline46mondego>  public int compare(String s1, String s2) {<newline46mondego>    Matcher m1 = pattern.matcher(s1);<newline46mondego>    if (!m1.matches()) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>s1 doesn't match: <doubleQuotes46> + s1);<newline46mondego>    }<newline46mondego>    Matcher m2 = pattern.matcher(s2);<newline46mondego>    if (!m2.matches()) {<newline46mondego>      throw new IllegalArgumentException(<doubleQuotes46>s2 doesn't match: <doubleQuotes46> + s2);<newline46mondego>    }<newline46mondego>    int i1 = Integer.parseInt(m1.group(1));<newline46mondego>    int i2 = Integer.parseInt(m2.group(1));<newline46mondego>    if (i1 < i2) {<newline46mondego>      return 1;<newline46mondego>    } else if (i1 > i2) {<newline46mondego>      return -1;<newline46mondego>    }<newline46mondego>    return m1.group(2).compareTo(m2.group(2));<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5162splitHere46","2376160splitHere46","Collections"
"5163splitHere46","2376160splitHere46","Collections.sort()"
"5164splitHere46","2376160splitHere46","String"
"5165splitHere46","2376160splitHere46","<doubleQuotes46>22 ASomething<doubleQuotes46>"
"5166splitHere46","2376160splitHere46","Comparator"
"5167splitHere46","2376160splitHere46","String"
"5168splitHere46","2376171splitHere46","\s\|\s"
"5169splitHere46","2376171splitHere46","<doubleQuotes46>\\s\\|\\s<doubleQuotes46>"
"5170splitHere46","2376198splitHere46","<body onkeypress=<doubleQuotes46>if (event.keyCode == 13) document.formname.confirm.click();<doubleQuotes46>><newline46mondego>"
"5171splitHere46","2376198splitHere46","formname"
"5172splitHere46","2376198splitHere46","name"
"5173splitHere46","2376198splitHere46","<form>"
"5174splitHere46","2376198splitHere46","document.formname.confirm.click()"
"5175splitHere46","2376198splitHere46","document.formname.submit()"
"5176splitHere46","2376698splitHere46","public final class Builders {<newline46mondego><newline46mondego>    public static Builder<? extends Sprite> newGameObjectBuilder() {<newline46mondego>        return new GameObjectImpl.GameObjectBuilder();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5177splitHere46","2376736splitHere46","public Foo(Integer x, Integer y) {<newline46mondego>      this(new Integer[]{x, y});<newline46mondego>  }<newline46mondego><newline46mondego>  public Foo(String xy) {<newline46mondego>      this(convertStringToIntegers(xy));<newline46mondego>  }<newline46mondego><newline46mondego>  private Foo(Integer[] xy) {<newline46mondego>      this.x = xy[0];<newline46mondego>      this.y = xy[1];<newline46mondego>  }<newline46mondego><newline46mondego>  private static Integer[] convertStringToIntegers(String xy) {<newline46mondego>      Integer[] result;<newline46mondego>      //Do what you have to do...<newline46mondego>      return result;<newline46mondego>  }<newline46mondego>"
"5178splitHere46","2376736splitHere46","public static Foo createFoo(String xy) {<newline46mondego>       Integer x;<newline46mondego>       Integer y;<newline46mondego>        //etc.<newline46mondego>        return new Foo(x, y);<newline46mondego>  }<newline46mondego>"
"5179splitHere46","2376766splitHere46","jfreechart"
"5180splitHere46","2376766splitHere46","iReport"
"5181splitHere46","2376766splitHere46","NoDataMessage"
"5182splitHere46","2376842splitHere46","@Entity<newline46mondego>public class Permission {<newline46mondego><newline46mondego>    private PermissionId permissionId;<newline46mondego><newline46mondego>    private Integer field1;<newline46mondego>    private Integer field2;<newline46mondego>    private Integer field3;<newline46mondego><newline46mondego>    // required no-arg constructor   <newline46mondego>    public Permission() {}<newline46mondego><newline46mondego>    public Permission(Integer field1, Integer field2, Integer field3) {<newline46mondego>        this.field1 = field1;<newline46mondego>        this.field2 = field2;<newline46mondego>        this.field3 = field3;<newline46mondego><newline46mondego>        setPermissionId(new PermissonId(Integer field1, Integer field2, Integer field3));<newline46mondego>    }<newline46mondego><newline46mondego>    @EmbeddedId<newline46mondego>    public PermissionId getPermissionId() {<newline46mondego>        return this.permissionId;<newline46mondego>    }<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>FIELD_1<doubleQuotes46>, insertable=false, updatable=false)<newline46mondego>    public Integer getField1() {<newline46mondego>        return this.field1;<newline46mondego>    }<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>FIELD_2<doubleQuotes46>, insertable=false, updatable=false)<newline46mondego>    public Integer getField2() {<newline46mondego>        return this.field2;<newline46mondego>    }<newline46mondego><newline46mondego>    @Column(name=<doubleQuotes46>FIELD_3<doubleQuotes46>, insertable=false, updatable=false)<newline46mondego>    public Integer getField3() {<newline46mondego>        return this.field3;<newline46mondego>    }<newline46mondego><newline46mondego>    @Embeddable<newline46mondego>    public static class PermissionId implements Serializable {<newline46mondego><newline46mondego>        private Integer field1;<newline46mondego>        private Integer field2;<newline46mondego>        private Integer field3;<newline46mondego><newline46mondego>        // required no-arg constructor<newline46mondego>        public PermissionId() {}<newline46mondego><newline46mondego>        public PermissionId(Integer field1, Integer field2, Integer field3) {<newline46mondego>            this.field1 = field1;<newline46mondego>            this.field2 = field2;<newline46mondego>            this.field3 = field3;<newline46mondego>        }<newline46mondego><newline46mondego>        @Column(name=<doubleQuotes46>FIELD_1<doubleQuotes46>, nullable=false)<newline46mondego>        public Integer getField1() {<newline46mondego>            return this.field1;<newline46mondego>        }<newline46mondego><newline46mondego>        @Column(name=<doubleQuotes46>FIELD_2<doubleQuotes46>, nullable=false)<newline46mondego>        public Integer getField2() {<newline46mondego>            return this.field2;<newline46mondego>        }<newline46mondego><newline46mondego>        @Column(name=<doubleQuotes46>FIELD_3<doubleQuotes46>, nullable=false)<newline46mondego>        public Integer getField3() {<newline46mondego>            return this.field3;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean equals(Object o) {<newline46mondego>            if(o == null) <newline46mondego>                return false;<newline46mondego><newline46mondego>            if(!(o instanceof PermissionId))<newline46mondego>                return false;<newline46mondego><newline46mondego>            final PermissionId other = (PermissionId) o;<newline46mondego><newline46mondego>            if(!(getField1().equals(other.getField1()))) <newline46mondego>                return false;<newline46mondego><newline46mondego>            if(!(getField2().equals(other.getField2()))) <newline46mondego>                return false;<newline46mondego><newline46mondego>            if(!(getField3().equals(other.getField3()))) <newline46mondego>                return false;<newline46mondego><newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        // requered hashcode impl<newline46mondego>        public int hashcode() {<newline46mondego>            // code goes here     <newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5183splitHere46","2376842splitHere46","@Entity<newline46mondego>@IdClass(PermissionId.class)<newline46mondego>public class Permission {<newline46mondego><newline46mondego>    private Integer field1;<newline46mondego>    private Integer field2;<newline46mondego>    private Integer field3;<newline46mondego><newline46mondego>    // required no-arg constructor   <newline46mondego>    public Permission() {}<newline46mondego><newline46mondego>    public Permission(Integer field1, Integer field2, Integer field3) {<newline46mondego>        this.field1 = field1;<newline46mondego>        this.field2 = field2;<newline46mondego>        this.field3 = field3;<newline46mondego>    }<newline46mondego><newline46mondego>    @Id<newline46mondego>    @Column(name=<doubleQuotes46>FIELD_1<doubleQuotes46>, nullable=false)<newline46mondego>    public Integer getField1() {<newline46mondego>        return this.field1;<newline46mondego>    }<newline46mondego><newline46mondego>    @Id<newline46mondego>    @Column(name=<doubleQuotes46>FIELD_2<doubleQuotes46>, nullable=false)<newline46mondego>    public Integer getField2() {<newline46mondego>        return this.field2;<newline46mondego>    }<newline46mondego><newline46mondego>    @Id<newline46mondego>    @Column(name=<doubleQuotes46>FIELD_3<doubleQuotes46>, nullable=false)<newline46mondego>    public Integer getField3() {<newline46mondego>        return this.field3;<newline46mondego>    }<newline46mondego><newline46mondego>    @Embeddable<newline46mondego>    public static class PermissionId implements Serializable {<newline46mondego><newline46mondego>        private Integer field1;<newline46mondego>        private Integer field2;<newline46mondego>        private Integer field3;<newline46mondego><newline46mondego>        // required no-arg constructor<newline46mondego>        public PermissionId() {}<newline46mondego><newline46mondego>        public PermissionId(Integer field1, Integer field2, Integer field3) {<newline46mondego>            this.field1 = field1;<newline46mondego>            this.field2 = field2;<newline46mondego>            this.field3 = field3;<newline46mondego>        }<newline46mondego><newline46mondego>        @Column(name=<doubleQuotes46>FIELD_1<doubleQuotes46>)<newline46mondego>        public Integer getField1() {<newline46mondego>            return this.field1;<newline46mondego>        }<newline46mondego><newline46mondego>        @Column(name=<doubleQuotes46>FIELD_2<doubleQuotes46>)<newline46mondego>        public Integer getField2() {<newline46mondego>            return this.field2;<newline46mondego>        }<newline46mondego><newline46mondego>        @Column(name=<doubleQuotes46>FIELD_3<doubleQuotes46>)<newline46mondego>        public Integer getField3() {<newline46mondego>            return this.field3;<newline46mondego>        }<newline46mondego><newline46mondego>        public boolean equals(Object o) {<newline46mondego>            if(o == null) <newline46mondego>                return false;<newline46mondego><newline46mondego>            if(!(o instanceof PermissionId))<newline46mondego>                return false;<newline46mondego><newline46mondego>            final PermissionId other = (PermissionId) o;<newline46mondego><newline46mondego>            if(!(getField1().equals(other.getField1()))) <newline46mondego>                return false;<newline46mondego><newline46mondego>            if(!(getField2().equals(other.getField2()))) <newline46mondego>                return false;<newline46mondego><newline46mondego>            if(!(getField3().equals(other.getField3()))) <newline46mondego>                return false;<newline46mondego><newline46mondego>            return true;<newline46mondego>        }<newline46mondego><newline46mondego>        // requered hashcode impl<newline46mondego>        public int hashcode() {<newline46mondego>            // code goes here     <newline46mondego>        }<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5184splitHere46","2376950splitHere46","static"
"5185splitHere46","2376950splitHere46","static"
"5186splitHere46","2376950splitHere46","static"
"5187splitHere46","2376950splitHere46","static"
"5188splitHere46","2376950splitHere46","static"
"5189splitHere46","2377071splitHere46","java.util.concurrent"
"5190splitHere46","2377071splitHere46","volatile"
"5191splitHere46","2377071splitHere46","javax.script"
"5192splitHere46","2377100splitHere46","Webview"
"5193splitHere46","2377100splitHere46","android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46>"
"5194splitHere46","2377100splitHere46","wrap_content"
"5195splitHere46","2377155splitHere46","i++"
"5196splitHere46","2377155splitHere46","i"
"5197splitHere46","2377155splitHere46","i"
"5198splitHere46","2377155splitHere46","i"
"5199splitHere46","2377155splitHere46","i"
"5200splitHere46","2377155splitHere46","int i = 0;<newline46mondego>int j = i++;<newline46mondego>"
"5201splitHere46","2377155splitHere46","j == 0"
"5202splitHere46","2377155splitHere46","j"
"5203splitHere46","2377155splitHere46","i"
"5204splitHere46","2377155splitHere46","0"
"5205splitHere46","2377155splitHere46","i == 0"
"5206splitHere46","2377389splitHere46","String"
"5207splitHere46","2377389splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class StackAnagram {<newline46mondego><newline46mondego>    static void anagram(String s1, String s2, String stack, String instr) {<newline46mondego>        if (s2.isEmpty()) {<newline46mondego>            if (s1.isEmpty() && stack.isEmpty()) {<newline46mondego>                System.out.println(instr.trim());<newline46mondego>            }<newline46mondego>            return;<newline46mondego>        }<newline46mondego>        if (!s1.isEmpty()) {<newline46mondego>            anagram(s1.substring(1), s2, s1.charAt(0) + stack, instr + <doubleQuotes46>i <doubleQuotes46>);<newline46mondego>        }<newline46mondego>        if (!stack.isEmpty() && stack.charAt(0) == s2.charAt(0)) {<newline46mondego>            anagram(s1, s2.substring(1), stack.substring(1), instr + <doubleQuotes46>o <doubleQuotes46>);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    static void anagram(String s1, String s2) {<newline46mondego>        System.out.println(<doubleQuotes46>[<doubleQuotes46>);<newline46mondego>        anagram(s1, s2, <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>]<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String args[]) {<newline46mondego>        anagram(<doubleQuotes46>madam<doubleQuotes46>, <doubleQuotes46>adamm<doubleQuotes46>);<newline46mondego>        anagram(<doubleQuotes46>bahama<doubleQuotes46>, <doubleQuotes46>bahama<doubleQuotes46>);<newline46mondego>        anagram(<doubleQuotes46>long<doubleQuotes46>, <doubleQuotes46>short<doubleQuotes46>);<newline46mondego>        anagram(<doubleQuotes46>eric<doubleQuotes46>, <doubleQuotes46>rice<doubleQuotes46>);<newline46mondego>        anagram(<doubleQuotes46>ericc<doubleQuotes46>, <doubleQuotes46>rice<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5208splitHere46","2377614splitHere46","//delay[type = 'Deterministic']/parameters/param/@value<newline46mondego>"
"5209splitHere46","2377614splitHere46","value"
"5210splitHere46","2377614splitHere46","param"
"5211splitHere46","2377614splitHere46","delay"
"5212splitHere46","2377614splitHere46","type"
"5213splitHere46","2377632splitHere46","Path2D"
"5214splitHere46","2377632splitHere46","Path2D.Float"
"5215splitHere46","2377632splitHere46","Path2D.Double"
"5216splitHere46","2377938splitHere46","3/3/2010 11:32:38 AM 39, Eldrin           BASEMENT-IN          <newline46mondego>3/3/2010 11:32:47 AM                      BASEMENT-IN <newline46mondego>"
"5217splitHere46","2377938splitHere46","3/3/2010 11:32:38 AM"
"5218splitHere46","2377938splitHere46","39, Eldrin"
"5219splitHere46","2377938splitHere46","BASEMENT-IN"
"5220splitHere46","2377938splitHere46","(anything)(AM|PM)(number,anything)?(BASEMENT-anything)<newline46mondego>"
"5221splitHere46","2377977splitHere46","Caused by: java.lang.RuntimeException: java.lang.ClassCastException: class org.geotoolkit.referencing.operation.DefaultMathTransformFactory<newline46mondego>     at com.example.LonLatConverter.toLonLat(LonLatConverter.java:47)<newline46mondego>...<newline46mondego><newline46mondego>Caused by: java.lang.ClassCastException: class org.geotoolkit.referencing.operation.DefaultMathTransformFactory<newline46mondego>     at java.lang.Class.asSubclass(Class.java:3018)<newline46mondego>     at org.geotoolkit.factory.FactoryRegistry.register(FactoryRegistry.java:921)<newline46mondego>    at org.geotoolkit.factory.FactoryRegistry.scanForPlugins(FactoryRegistry.java:793)<newline46mondego>    at org.geotoolkit.factory.FactoryRegistry.scanForPluginsIfNeeded(FactoryRegistry.java:843)<newline46mondego>    at org.geotoolkit.factory.FactoryRegistry.getServiceProviders(FactoryRegistry.java:236)<newline46mondego>    at com.example.LonLatConverter.getMathTransformFactory(LonLatConverter.java:71)<newline46mondego>    at com.example.LonLatConverter.toLonLat(LonLatConverter.java:35)<newline46mondego>...<newline46mondego>"
"5222splitHere46","2378025splitHere46","null"
"5223splitHere46","2378025splitHere46","String editType = request.getParameter(<doubleQuotes46>t<doubleQuotes46>);<newline46mondego>if(editType!=null && !editType.isEmpty()){<newline46mondego>    //processing here<newline46mondego>}<newline46mondego>"
"5224splitHere46","2378025splitHere46","isEmpty()"
"5225splitHere46","2378025splitHere46","null"
"5226splitHere46","2378025splitHere46","null"
"5227splitHere46","2378025splitHere46","editType"
"5228splitHere46","2378025splitHere46","if"
"5229splitHere46","2378025splitHere46","isEmpty()"
"5230splitHere46","2378025splitHere46","NullPointerException"
"5231splitHere46","2378028splitHere46",":"
"5232splitHere46","2378028splitHere46","/"
"5233splitHere46","2378028splitHere46","List<Integer> invalidIndices = new LinkedList<Integer>();<newline46mondego><newline46mondego>String invalidChars;<newline46mondego>if (OS.isWindows()) {<newline46mondego>    invalidChars = <doubleQuotes46>\\/:*?\<doubleQuotes46><>|<doubleQuotes46>;<newline46mondego>} else if (OS.isMacOSX()) {<newline46mondego>    invalidChars = <doubleQuotes46>/:<doubleQuotes46>;<newline46mondego>} else { // assume Unix/Linux<newline46mondego>    invalidChars = <doubleQuotes46>/<doubleQuotes46>;<newline46mondego>}<newline46mondego><newline46mondego>char[] chars = filename.toCharArray();<newline46mondego>for (int i = 0; i < chars.length; i++) {<newline46mondego>    if ((invalidChars.indexOf(chars[i]) >= 0) // OS-invalid<newline46mondego>        || (chars[i] < '\u0020') // ctrls<newline46mondego>        || (chars[i] > '\u007e' && chars[i] < '\u00a0') // ctrls<newline46mondego>    ) {<newline46mondego>        invalidIndices.add(i);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>return invalidIndices;<newline46mondego>"
"5234splitHere46","2378028splitHere46","OS"
"5235splitHere46","2378028splitHere46","System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>)"
"5236splitHere46","2378178splitHere46","public interface Builder<T> {<newline46mondego>    public T build();<newline46mondego>}<newline46mondego>"
"5237splitHere46","2378178splitHere46","public interface SpriteBuilder<T extends Sprite> extends Builder<T> {<newline46mondego>    Builder<T> onReceiveKey(Sprite.ReceiveKeys receiver);<newline46mondego>}<newline46mondego>"
"5238splitHere46","2378178splitHere46","public final class Builders {<newline46mondego>    public static SpriteBuilder newGameObjectBuilder(Point location, int drawable) {<newline46mondego>        return new GameObjectImpl.GameObjectBuilder(location, drawable);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5239splitHere46","2378178splitHere46","GameObjectBuilder"
"5240splitHere46","2378178splitHere46","class GameObjectImpl extends AbstractSprite {<newline46mondego>    public static class GameObjectBuilder implements SpriteBuilder {<newline46mondego>    ...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5241splitHere46","2378205splitHere46","String path = <doubleQuotes46>/var/data/stuff/xyz.dat<doubleQuotes46>;<newline46mondego>String base = <doubleQuotes46>/var/data<doubleQuotes46>;<newline46mondego>String relative = new File(base).toURI().relativize(new File(path).toURI()).getPath();<newline46mondego>// relative == <doubleQuotes46>stuff/xyz.dat<doubleQuotes46><newline46mondego>"
"5242splitHere46","2378321splitHere46","Throwable t = (Throwable) exceptionObj;<newline46mondego>"
"5243splitHere46","2378382splitHere46","2*pi*radius"
"5244splitHere46","2378382splitHere46","circumference / (2*pi)"
"5245splitHere46","2378629splitHere46","java.util.zip.*"
"5246splitHere46","2378629splitHere46",","
"5247splitHere46","2378629splitHere46",";"
"5248splitHere46","2378817splitHere46","public int[] method() {<newline46mondego>    int z[] = {1,2,3,5};<newline46mondego>    return z;<newline46mondego>}<newline46mondego>"
"5249splitHere46","2378817splitHere46","int []copy = method();<newline46mondego>"
"5250splitHere46","2378817splitHere46","copy"
"5251splitHere46","2378817splitHere46","z"
"5252splitHere46","2378817splitHere46","System.arraycopy"
"5253splitHere46","2379318splitHere46","/**<newline46mondego> * Custom handler for displaying vets.<newline46mondego> * Note that this handler returns a plain {@link ModelMap} object instead of<newline46mondego> * a ModelAndView, thus leveraging convention-based model attribute names.<newline46mondego> * It relies on the RequestToViewNameTranslator to determine the logical<newline46mondego> * view name based on the request URL: <doubleQuotes46>/vets.do<doubleQuotes46> -> <doubleQuotes46>vets<doubleQuotes46>.<newline46mondego> * @return a ModelMap with the model attributes for the view<newline46mondego> */<newline46mondego>@RequestMapping(<doubleQuotes46>/vets.do<doubleQuotes46>)<newline46mondego>public ModelMap vetsHandler() {<newline46mondego>    return new ModelMap(this.clinic.getVets());<newline46mondego>}<newline46mondego>"
"5254splitHere46","2379340splitHere46","public String formatDecimal(float number) {<newline46mondego>  float epsilon = 0.004f; // 4 tenths of a cent<newline46mondego>  if (Math.abs(Math.round(number) - number) < epsilon) {<newline46mondego>     return String.format(<doubleQuotes46>%10.0f<doubleQuotes46>, number); // sdb<newline46mondego>  } else {<newline46mondego>     return String.format(<doubleQuotes46>%10.2f<doubleQuotes46>, number); // dj_segfault<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5255splitHere46","2379350splitHere46","public class Client {<newline46mondego><newline46mondego>    //================================================================================<newline46mondego>    // Properties<newline46mondego>    //================================================================================<newline46mondego><newline46mondego>    private String name;<newline46mondego>    private boolean checked;<newline46mondego><newline46mondego>    //================================================================================<newline46mondego>    // Constructors<newline46mondego>    //================================================================================<newline46mondego><newline46mondego>    public Client() {<newline46mondego>    }<newline46mondego><newline46mondego>    public Client(String name, boolean checked) {<newline46mondego>        this.name = name;<newline46mondego>        this.checked = checked;<newline46mondego>    }<newline46mondego><newline46mondego>    //================================================================================<newline46mondego>    // Accessors<newline46mondego>    //================================================================================<newline46mondego><newline46mondego>    public String getName() {<newline46mondego>        return name;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean isChecked() {<newline46mondego>        return checked;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setChecked(boolean checked) {<newline46mondego>        this.checked = checked;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5256splitHere46","2379520splitHere46","PhoneArguments phoneArgs;<newline46mondego>phoneArgs = new PhoneArguments(PhoneArguments.ARG_CALL, <newline46mondego>    lbl_Phone_value.getText());<newline46mondego>Invoke.invokeApplication(Invoke.APP_TYPE_PHONE, phoneArgs);<newline46mondego>"
"5257splitHere46","2379523splitHere46","SELECT col1, col2, ... FROM yourtable ORDER BY xyz DESC LIMIT 1 <newline46mondego>"
"5258splitHere46","2379617splitHere46","<bean id=<doubleQuotes46>schemaCollection<doubleQuotes46> class=<doubleQuotes46>org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>xsds<doubleQuotes46>><newline46mondego>        <list><newline46mondego>            <value>/DataContract/person.xsd</value><newline46mondego>            <value>/DataContract/sub-person.xsd</value><newline46mondego>        </list><newline46mondego>    </property><newline46mondego>    <property name=<doubleQuotes46>inline<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego></bean><newline46mondego>"
"5259splitHere46","2379617splitHere46","inline"
"5260splitHere46","2379617splitHere46","import"
"5261splitHere46","2379617splitHere46","include"
"5262splitHere46","2379648splitHere46","x=a[i]; a[i]=a[j]; a[j] = x;"
"5263splitHere46","2379683splitHere46","mDb"
"5264splitHere46","2379683splitHere46","SqlLiteDatabase"
"5265splitHere46","2379683splitHere46","public boolean Exists(String _id) {<newline46mondego>   Cursor cursor = mDb.rawQuery(<doubleQuotes46>select 1 from yourTable where _id=%s<doubleQuotes46>, <newline46mondego>        new String[] { _id })<newline46mondego>   boolean exists = (cursor.getCount() > 0);<newline46mondego>   cursor.close();<newline46mondego>   return exists;<newline46mondego>}<newline46mondego>"
"5266splitHere46","2379683splitHere46","_id"
"5267splitHere46","2379683splitHere46","String"
"5268splitHere46","2379683splitHere46","Long"
"5269splitHere46","2379683splitHere46","select 1"
"5270splitHere46","2379683splitHere46","select columnName"
"5271splitHere46","2379683splitHere46","select 1 from..."
"5272splitHere46","2379756splitHere46","MyClass.class.getResource(<doubleQuotes46>file.P<doubleQuotes46>);<newline46mondego>"
"5273splitHere46","2379798splitHere46","ViewHandlerImpl#getActionURL()"
"5274splitHere46","2379798splitHere46","public String getActionURL(FacesContext context, String viewId) {<newline46mondego>    if (context == null) throw new NullPointerException();<newline46mondego>    if (viewId == null) throw new NullPointerException();<newline46mondego>    if (viewId.charAt(0) != '/') throw new IllegalArgumentException();<newline46mondego>    // ...<newline46mondego>"
"5275splitHere46","2379798splitHere46","viewId"
"5276splitHere46","2379798splitHere46","null"
"5277splitHere46","2379798splitHere46","/"
"5278splitHere46","2380014splitHere46","Date coolDate = new GregorianCalendar(year, month, day).getTime();<newline46mondego>"
"5279splitHere46","2380041splitHere46","FileWriter"
"5280splitHere46","2380041splitHere46","FileOutputStream"
"5281splitHere46","2380041splitHere46","close()"
"5282splitHere46","2380041splitHere46","close()"
"5283splitHere46","2380166splitHere46","public class Files {<newline46mondego>    List<MyFile> list = new ArrayList<MyFile>();<newline46mondego><newline46mondego>    public Files() {<newline46mondego>        super();<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean addFile(MyFile f) {<newline46mondego>        return list.add(f);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class MyFile {<newline46mondego>    public String name;<newline46mondego>    public String version;<newline46mondego>    public String size;<newline46mondego>    public void setName(String name) {<newline46mondego>        this.name = name;<newline46mondego>    }<newline46mondego>    public void setVersion(String version) {<newline46mondego>        this.version = version;<newline46mondego>    }<newline46mondego>    public void setSize(String size) {<newline46mondego>        this.size = size;<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>MyFile [name=<doubleQuotes46> + name + <doubleQuotes46>, size=<doubleQuotes46> + size + <doubleQuotes46>, version=<doubleQuotes46><newline46mondego>                + version + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class ConditionalRule extends ObjectCreateRule {<newline46mondego><newline46mondego>    private boolean conditional = false;<newline46mondego>    public ConditionalRule() throws ParserConfigurationException {<newline46mondego>        super(MyFile.class);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void begin(String namespaceURI, String name, Attributes attributes)<newline46mondego>            throws Exception {<newline46mondego>        conditional = <doubleQuotes46>ABC.EXE<doubleQuotes46>.equals(attributes.getValue(<doubleQuotes46>Name<doubleQuotes46>));<newline46mondego>        if(conditional) {<newline46mondego>            Files files = (Files) digester.pop();<newline46mondego>            MyFile f = new MyFile();<newline46mondego>            files.addFile(f);<newline46mondego>            digester.push(files);<newline46mondego>            digester.push(f);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void end() throws Exception {<newline46mondego>        if(conditional) {<newline46mondego>            digester.pop();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>public class Snippet {<newline46mondego><newline46mondego>    @Test<newline46mondego>    public void test() throws Exception {<newline46mondego>        Digester d = new Digester();<newline46mondego>        d.addObjectCreate(<doubleQuotes46>Files<doubleQuotes46>, Files.class);<newline46mondego>        d.addRule(<doubleQuotes46>Files/File<doubleQuotes46>, new ConditionalRule());<newline46mondego>        d.addSetProperties(<doubleQuotes46>Files/File<doubleQuotes46>,<newline46mondego>                new String[]{<doubleQuotes46>Name<doubleQuotes46>, <doubleQuotes46>Version<doubleQuotes46>, <doubleQuotes46>Size<doubleQuotes46>}, new String[]{<doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>version<doubleQuotes46>, <doubleQuotes46>size<doubleQuotes46>});<newline46mondego>        Object parse = d.parse(Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>digest.xml<doubleQuotes46>));<newline46mondego>        System.out.println(parse);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5284splitHere46","2380247splitHere46","BeanFactoryPostProcessor"
"5285splitHere46","2380247splitHere46","Orderer"
"5286splitHere46","2380247splitHere46","order = Integer.MAX_VALUE"
"5287splitHere46","2380247splitHere46","BeanDefinitionDecorator"
"5288splitHere46","2380328splitHere46","label.setOpaque(true);<newline46mondego>"
"5289splitHere46","2380328splitHere46","opaque"
"5290splitHere46","2380328splitHere46","false"
"5291splitHere46","2380328splitHere46","JLabel"
"5292splitHere46","2380448splitHere46","<version>${applicationVersion}</version>"
"5293splitHere46","2380448splitHere46","<project><newline46mondego>  <properties><newline46mondego>    <applicationVersion>x.y.z</applicationVersion><newline46mondego>  </properties><newline46mondego>  ...<newline46mondego></project><newline46mondego>"
"5294splitHere46","2380448splitHere46","${project.version}"
"5295splitHere46","2380749splitHere46","long  64 –9,223,372,036,854,775,808 to 9 ,223,372,036,854,775,807 <newline46mondego>int   32 –2,147,483,648 to 2,147,483,647 <newline46mondego>short 16 –32,768 to 32,767 <newline46mondego>byte   8 –128 to 127 <newline46mondego>"
"5296splitHere46","2380760splitHere46","Observer"
"5297splitHere46","2380760splitHere46","Observable"
"5298splitHere46","2381264splitHere46","HashMap<String, String[]> map = ...;<newline46mondego><newline46mondego>// append value to the current value of key<newline46mondego>String key = <doubleQuotes46>key<doubleQuotes46>;<newline46mondego>String value = <doubleQuotes46>value<doubleQuotes46>;<newline46mondego><newline46mondego>// I use an array to hold a reference - even uglier than the whole idea itself ;)<newline46mondego>String[] ref = new String[1]; // lightweigt object<newline46mondego>String[] prev = map.put(key, ref);<newline46mondego>ref[0] = (prev != null) ? prev[0] + value : value;<newline46mondego>"
"5299splitHere46","2381264splitHere46","hashCode()"
"5300splitHere46","2381264splitHere46","equals()"
"5301splitHere46","2381310splitHere46","hibernate.properties"
"5302splitHere46","2381667splitHere46","Reader"
"5303splitHere46","2381667splitHere46","StringReader"
"5304splitHere46","2382171splitHere46","Number.longValue()"
"5305splitHere46","2382171splitHere46","Number.intValue()"
"5306splitHere46","2382171splitHere46","NullPointerException"
"5307splitHere46","2382171splitHere46","null"
"5308splitHere46","2382171splitHere46","null"
"5309splitHere46","2382189splitHere46","s + value"
"5310splitHere46","2382189splitHere46","s"
"5311splitHere46","2382189splitHere46","addStringToStatement"
"5312splitHere46","2382189splitHere46","tatement += value;"
"5313splitHere46","2382189splitHere46","s"
"5314splitHere46","2382189splitHere46","statement"
"5315splitHere46","2382353splitHere46","if(value == null){<newline46mondego>   writeToCell(rowIndex, colIndex, someString)<newline46mondego>}<newline46mondego>else{<newline46mondego>   ...method body... <newline46mondego>}<newline46mondego>"
"5316splitHere46","2382560splitHere46","@XmlRootElement"
"5317splitHere46","2382560splitHere46","@XmlType"
"5318splitHere46","2382757splitHere46","Serializable, Iterable<E>, Collection<E>, BlockingQueue<E>, Queue<E><newline46mondego>"
"5319splitHere46","2382757splitHere46","PriorityBlockingQueue"
"5320splitHere46","2382757splitHere46","PriorityblockingQueue"
"5321splitHere46","2383223splitHere46","doStuffBasedOnABooleanFlag(false);<newline46mondego>doStuffBasedOnABooleanFlag(true);<newline46mondego>"
"5322splitHere46","2383237splitHere46","long charsRead = 0;<newline46mondego><newline46mondego>                while(keepRunning)<newline46mondego>                {<newline46mondego>                    URL url = new URL(finalUrlString);<newline46mondego>                    URLConnection connection = url.openConnection();<newline46mondego>                    InputStreamReader stream = new InputStreamReader(connection.getInputStream());<newline46mondego>                    BufferedReader reader = new BufferedReader(stream);<newline46mondego>                    long skipped = reader.skip(charsRead);<newline46mondego>                    String line = reader.readLine();<newline46mondego>                    if(line != null)<newline46mondego>                    {<newline46mondego>                        charsRead += line.length() + 1;<newline46mondego>                        process(line);<newline46mondego>                    }<newline46mondego>                    reader.close();<newline46mondego>                }<newline46mondego>"
"5323splitHere46","2383261splitHere46","UIManager.getDefaults().set(<doubleQuotes46>TitledBorder.titleColor<doubleQuotes46>, Color.RED);<newline46mondego>"
"5324splitHere46","2383312splitHere46","AutowireCapableBeanFactory"
"5325splitHere46","2383312splitHere46","@Service <newline46mondego>public class Foo { <newline46mondego>    @Autowired private AutowireCapableBeanFactory factory; <newline46mondego><newline46mondego>    private <T> T createAutowiredObject(Class<T> c) {<newline46mondego>        return factory.createBean(c);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"5326splitHere46","2383336splitHere46","void AddSomething(Collection<Stuff> object)<newline46mondego>{<newline46mondego>  object.Add(new Stuff());<newline46mondego>}<newline46mondego>"
"5327splitHere46","2383336splitHere46","AddSomething(new Collection<ChildStuff>())<newline46mondego>"
"5328splitHere46","2383336splitHere46","? extends"
"5329splitHere46","2383440splitHere46","public class Address {<newline46mondego><newline46mondego>    @NotNull private String line1;<newline46mondego>    private String line2;<newline46mondego>    private String zip;<newline46mondego>    private String state;<newline46mondego><newline46mondego>    @Length(max = 20)<newline46mondego>    @NotNull<newline46mondego>    private String country;<newline46mondego><newline46mondego>    @Range(min = -2, max = 50, message = <doubleQuotes46>Floor out of range<doubleQuotes46>)<newline46mondego>    public int floor;<newline46mondego><newline46mondego>        ...<newline46mondego>}<newline46mondego>"
"5330splitHere46","2383440splitHere46","@PrePersist"
"5331splitHere46","2383440splitHere46","@PreUpdate"
"5332splitHere46","2383649splitHere46","My_Vector.addAll(Arrays.asList(My_Array));<newline46mondego>"
"5333splitHere46","2383705splitHere46","Cursor ti = db.rawQuery(<doubleQuotes46>PRAGMA table_info(mytable)<doubleQuotes46>, null);<newline46mondego>    if ( ti.moveToFirst() ) {<newline46mondego>        do {<newline46mondego>            System.out.println(<doubleQuotes46>col: <doubleQuotes46> + ti.getString(1));<newline46mondego>        } while (ti.moveToNext());<newline46mondego>    }<newline46mondego>"
"5334splitHere46","2383736splitHere46","instanceof"
"5335splitHere46","2383736splitHere46","compareTo(Employee emp)"
"5336splitHere46","2383736splitHere46","instanceof"
"5337splitHere46","2383872splitHere46","import java.util.*;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>public static long run1() {<newline46mondego>  final List<String> myList = Arrays.asList(<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>, <doubleQuotes46>D<doubleQuotes46>);<newline46mondego>  final long start = System.nanoTime();<newline46mondego>  int sum = 0;<newline46mondego>  for (int i = 1000000000; i > myList.size(); i--) sum += i;<newline46mondego>  final long stop = System.nanoTime();<newline46mondego>  System.out.println(<doubleQuotes46>Finish: <doubleQuotes46> + (stop - start)*1e-9 + <doubleQuotes46> ns/op; sum = <doubleQuotes46> + sum);<newline46mondego>  return stop-start;<newline46mondego>}<newline46mondego><newline46mondego>public static long run2() {<newline46mondego>  final List<String> myList = Arrays.asList(<doubleQuotes46>A<doubleQuotes46>, <doubleQuotes46>B<doubleQuotes46>, <doubleQuotes46>C<doubleQuotes46>, <doubleQuotes46>D<doubleQuotes46>);<newline46mondego>  final long start = System.nanoTime();<newline46mondego>  int sum = 0;<newline46mondego>  int limit = myList.size();<newline46mondego>  for (int i = 1000000000; i > limit; i--) sum += i;<newline46mondego>  final long stop = System.nanoTime();<newline46mondego>  System.out.println(<doubleQuotes46>Finish: <doubleQuotes46> + (stop - start)*1e-9 + <doubleQuotes46> ns/op; sum = <doubleQuotes46> + sum);<newline46mondego>  return stop-start;<newline46mondego>}<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>  for (int i=0 ; i<5 ; i++) {<newline46mondego>    long t1 = run1();<newline46mondego>    long t2 = run2();<newline46mondego>    System.out.println(<doubleQuotes46>  Speedup = <doubleQuotes46> + (t1-t2)*1e-9 + <doubleQuotes46> ns/op\n<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"5338splitHere46","2383872splitHere46","Finish: 0.481741256 ns/op; sum = -243309322<newline46mondego>Finish: 0.40228402 ns/op; sum = -243309322<newline46mondego>  Speedup = 0.079457236 ns/op<newline46mondego><newline46mondego>Finish: 0.450627151 ns/op; sum = -243309322<newline46mondego>Finish: 0.43534661700000005 ns/op; sum = -243309322<newline46mondego>  Speedup = 0.015280534 ns/op<newline46mondego><newline46mondego>Finish: 0.47738474700000005 ns/op; sum = -243309322<newline46mondego>Finish: 0.403698331 ns/op; sum = -243309322<newline46mondego>  Speedup = 0.073686416 ns/op<newline46mondego><newline46mondego>Finish: 0.47729349600000004 ns/op; sum = -243309322<newline46mondego>Finish: 0.405540508 ns/op; sum = -243309322<newline46mondego>  Speedup = 0.071752988 ns/op<newline46mondego><newline46mondego>Finish: 0.478979617 ns/op; sum = -243309322<newline46mondego>Finish: 0.36067492700000003 ns/op; sum = -243309322<newline46mondego>  Speedup = 0.11830469 ns/op<newline46mondego>"
"5339splitHere46","2383955splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego><RelativeLayout xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46> android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46>><newline46mondego><newline46mondego>    <Button android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> android:id=<doubleQuotes46>@+id/testbutton<doubleQuotes46><newline46mondego>        android:text=<doubleQuotes46>@string/hello<doubleQuotes46> android:layout_alignParentBottom=<doubleQuotes46>true<doubleQuotes46> /><newline46mondego><newline46mondego>    <ListView android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>        android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46> android:id=<doubleQuotes46>@+id/list<doubleQuotes46><newline46mondego>        android:layout_alignParentTop=<doubleQuotes46>true<doubleQuotes46> android:layout_above=<doubleQuotes46>@id/testbutton<doubleQuotes46> /><newline46mondego><newline46mondego></RelativeLayout><newline46mondego>"
"5340splitHere46","2383968splitHere46","Collection"
"5341splitHere46","2383968splitHere46","Collection.contains(Object o)"
"5342splitHere46","2383968splitHere46","true"
"5343splitHere46","2383968splitHere46","true"
"5344splitHere46","2383968splitHere46","e"
"5345splitHere46","2383968splitHere46","(o==null ? e==null : o.equals(e))"
"5346splitHere46","2383968splitHere46","O(1)"
"5347splitHere46","2383968splitHere46","O(log N)"
"5348splitHere46","2384194splitHere46","<input type=<doubleQuotes46>radio<doubleQuotes46> name=<doubleQuotes46>SongInfo<doubleQuotes46> value=The bodyguard><newline46mondego>"
"5349splitHere46","2384194splitHere46","bodyguard"
"5350splitHere46","2384194splitHere46","<input type=<doubleQuotes46>radio<doubleQuotes46> name=<doubleQuotes46>SongInfo<doubleQuotes46> value=<doubleQuotes46>${item.title}<doubleQuotes46>><newline46mondego>"
"5351splitHere46","2384194splitHere46","<input type=<doubleQuotes46>radio<doubleQuotes46> name=<doubleQuotes46>SongInfo<doubleQuotes46> value=<doubleQuotes46>The bodyguard<doubleQuotes46>><newline46mondego>"
"5352splitHere46","2384194splitHere46","Connection"
"5353splitHere46","2384194splitHere46","Statement"
"5354splitHere46","2384194splitHere46","ResultSet"
"5355splitHere46","2384194splitHere46","GET"
"5356splitHere46","2384194splitHere46","multipart/form-data"
"5357splitHere46","2384194splitHere46","<input type=<doubleQuotes46>file<doubleQuotes46>>"
"5358splitHere46","2384194splitHere46","POST"
"5359splitHere46","2384328splitHere46","gnu.gcj.progname"
"5360splitHere46","2384328splitHere46","public class ProgName {<newline46mondego>    public static void main(String... args) {<newline46mondego>        System.out.println(System.getProperty(<doubleQuotes46>gnu.gcj.progname<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5361splitHere46","2384328splitHere46","gnu.gcj.progname"
"5362splitHere46","2384328splitHere46","libgcj"
"5363splitHere46","2384505splitHere46","K"
"5364splitHere46","2384505splitHere46","V"
"5365splitHere46","2384505splitHere46","K"
"5366splitHere46","2384505splitHere46","V"
"5367splitHere46","2384505splitHere46","M"
"5368splitHere46","2384505splitHere46","K"
"5369splitHere46","2384505splitHere46","V"
"5370splitHere46","2384505splitHere46","K"
"5371splitHere46","2384505splitHere46","V"
"5372splitHere46","2384505splitHere46","M"
"5373splitHere46","2384505splitHere46","M"
"5374splitHere46","2384505splitHere46","K"
"5375splitHere46","2384505splitHere46","V"
"5376splitHere46","2384505splitHere46","M"
"5377splitHere46","2384529splitHere46","SOMETHING_SEQ"
"5378splitHere46","2384529splitHere46","hibernate_sequence"
"5379splitHere46","2384529splitHere46","<sequence-generator name=<doubleQuotes46>SOMETHING_SEQ<doubleQuotes46> <newline46mondego>    sequence-name=<doubleQuotes46>hibernate_sequence<doubleQuotes46><newline46mondego>    allocation-size=<doubleQuotes46><any_number_value><doubleQuotes46>/><newline46mondego>"
"5380splitHere46","2384529splitHere46","@SequenceGenerator"
"5381splitHere46","2384529splitHere46","@SequenceGenerator(name=<doubleQuotes46>SOMETHING_SEQ<doubleQuotes46>, sequenceName=<doubleQuotes46>hibernate_sequence<doubleQuotes46>, allocationSize=10)<newline46mondego>"
"5382splitHere46","2384529splitHere46","@Entity<newline46mondego>public class Entity1 {<newline46mondego>  @Id<newline46mondego>  @SequenceGenerator(name = <doubleQuotes46>entity1Seq<doubleQuotes46>, sequenceName=<doubleQuotes46>ENTITY1_SEQ<doubleQuotes46>, allocationSize=1)<newline46mondego>  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = <doubleQuotes46>entity1Seq<doubleQuotes46>)<newline46mondego>  @Column(name = <doubleQuotes46>ID<doubleQuotes46>, nullable = false)<newline46mondego>  private Long id;<newline46mondego><newline46mondego>  ...<newline46mondego>  ...<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>public class Entity2 {<newline46mondego>  @Id<newline46mondego>  @SequenceGenerator(name = <doubleQuotes46>entity2Seq<doubleQuotes46>, sequenceName=<doubleQuotes46>ENTITY2_SEQ<doubleQuotes46>, allocationSize=10)<newline46mondego>  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = <doubleQuotes46>entity2Seq<doubleQuotes46>)<newline46mondego>  @Column(name = <doubleQuotes46>ID<doubleQuotes46>, nullable = false)<newline46mondego>  private Long id;<newline46mondego><newline46mondego>  ...<newline46mondego>  ...<newline46mondego><newline46mondego>}<newline46mondego>"
"5383splitHere46","2384617splitHere46","continue;"
"5384splitHere46","2384847splitHere46","public static boolean checkReversed(int[] x, int[] y)<newline46mondego>{<newline46mondego>    // For production code, possibly add nullity checks here (see comments)<newline46mondego>    if (x.length != y.length)<newline46mondego>    {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>    // Loop through x forwards and y backwards<newline46mondego>    for (int i = 0; i < x.length; i++)<newline46mondego>    {<newline46mondego>        if (x[i] != y[y.length - 1 - i])<newline46mondego>        {<newline46mondego>            // As soon as we've found a <doubleQuotes46>mistake<doubleQuotes46> we can exit:<newline46mondego>            // This is simpler (IMO) than keeping a <doubleQuotes46>check<doubleQuotes46> variable<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"5385splitHere46","2385330splitHere46","actionPerformed()"
"5386splitHere46","2385330splitHere46","public static void main(String[] args) {<newline46mondego>    JFrame frame = new JFrame();<newline46mondego>    final Container panel = frame.getContentPane();<newline46mondego>    panel.setLayout(new FlowLayout());<newline46mondego><newline46mondego>    // create an image an draw in it.<newline46mondego>    final BufferedImage image = new BufferedImage(<newline46mondego>        200, 200, BufferedImage.TYPE_INT_ARGB);<newline46mondego>    Graphics g = image.getGraphics();<newline46mondego>    g.setColor(Color.RED);<newline46mondego>    g.drawLine(0, 0, image.getWidth(), image.getHeight());<newline46mondego><newline46mondego>    Icon iImage = new ImageIcon(image);<newline46mondego>    // create a label with the icon.<newline46mondego>    final JLabel label = new JLabel(iImage);<newline46mondego>    panel.add(label);<newline46mondego>    // create a new button.<newline46mondego>    JButton button = new JButton(<doubleQuotes46>resize<doubleQuotes46>);<newline46mondego>    // add an action to the button.<newline46mondego>    button.addActionListener(new ActionListener() {<newline46mondego><newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            // set the label with a new icon.<newline46mondego>            BufferedImage bi = new BufferedImage(<newline46mondego>                100, 100, BufferedImage.TYPE_INT_ARGB);<newline46mondego>            bi.getGraphics().drawImage(image, 0, 0, null);<newline46mondego>            label.setIcon(new ImageIcon(bi));<newline46mondego>        }<newline46mondego>    });<newline46mondego>    // add the button to the frame.<newline46mondego>    panel.add(button);<newline46mondego>    // open the frame.<newline46mondego>    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    frame.pack();<newline46mondego>    frame.setVisible(true);<newline46mondego>}<newline46mondego>"
"5387splitHere46","2385372splitHere46","Criteria query = getSession().createCriteria(EntityClass.class);<newline46mondego>EntityClass example = new EntityClass();<newline46mondego>example.setEmbedded(embedded);<newline46mondego>query.add(Example.create(example).excludeNone()<newline46mondego>    .excludeProperty(<doubleQuotes46>id<doubleQuotes46>).excludeProperty(<doubleQuotes46>other<doubleQuotes46>));<newline46mondego>return (EntityClass) query.uniqueResult();<newline46mondego>"
"5388splitHere46","2385463splitHere46","diff -n leftpath rightPath | grep <doubleQuotes46>^a<doubleQuotes46>"
"5389splitHere46","2385463splitHere46","grep <doubleQuotes46>^a<doubleQuotes46> tmpFile"
"5390splitHere46","2385463splitHere46","ProcessBuilder"
"5391splitHere46","2385463splitHere46","Process"
"5392splitHere46","2385463splitHere46","redirectErrorStream"
"5393splitHere46","2385743splitHere46","GridBagLayout lay = new GridBagLayout(); <newline46mondego>setLayout(lay);<newline46mondego>// Add components<newline46mondego>add(comp1, constraints);<newline46mondego>add(comp2, constraints);<newline46mondego>//<newline46mondego>GridBagConstraints c = lay.getConstraints(comp1);<newline46mondego>System.out.println(c.gridx + <doubleQuotes46>, <doubleQuotes46> + c.gridy);<newline46mondego>"
"5394splitHere46","2385743splitHere46","GridBagConstraints gbc = ((GridBagLayout) getLayout()).getConstraints(component);<newline46mondego>System.out.println(<doubleQuotes46>box <doubleQuotes46> + i + <doubleQuotes46>,coordinate=<doubleQuotes46> + gbc.gridx + <doubleQuotes46> , <doubleQuotes46> + gbc.gridy);<newline46mondego>"
"5395splitHere46","2385743splitHere46","main()"
"5396splitHere46","2385743splitHere46","public static void main(String[] args) {<newline46mondego>    final JFrame jf = new JFrame();<newline46mondego>    jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>    final Grid grid = new Grid();<newline46mondego>    jf.add(grid);<newline46mondego>    jf.pack();<newline46mondego>    jf.addWindowListener(new WindowAdapter() {<newline46mondego>        public void windowActivated(WindowEvent e) {<newline46mondego>            int i = 0;<newline46mondego>            Component[] components = grid.getComponents();<newline46mondego>            for (Component component : components) {<newline46mondego>                i++;<newline46mondego>                Color color = component.getBackground();<newline46mondego>                Rectangle bounds = component.getBounds();<newline46mondego>                System.out.println(<doubleQuotes46>box <doubleQuotes46> + i + <doubleQuotes46>,coordinate= <doubleQuotes46> + bounds<newline46mondego>                        + <doubleQuotes46>, Color= <doubleQuotes46> + color);<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>    jf.setVisible(true);<newline46mondego>}<newline46mondego>"
"5397splitHere46","2385743splitHere46","WindowListener"
"5398splitHere46","2385784splitHere46","getParameterTypes"
"5399splitHere46","2385999splitHere46","boolean isPrime(long n) {<newline46mondego>    if(n < 2) return false;<newline46mondego>    if(n == 2 || n == 3) return true;<newline46mondego>    if(n%2 == 0 || n%3 == 0) return false;<newline46mondego>    long sqrtN = (long)Math.sqrt(n)+1;<newline46mondego>    for(long i = 6L; i <= sqrtN; i += 6) {<newline46mondego>        if(n%(i-1) == 0 || n%(i+1) == 0) return false;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"5400splitHere46","2385999splitHere46","BigInteger's isProbablePrime(...)"
"5401splitHere46","2385999splitHere46","int"
"5402splitHere46","2385999splitHere46","isProbablePrime(certainty)"
"5403splitHere46","2385999splitHere46","isProbablePrime(certainty)"
"5404splitHere46","2385999splitHere46","int"
"5405splitHere46","2385999splitHere46","BitSet"
"5406splitHere46","2385999splitHere46","Integer.MAX_VALUE/2"
"5407splitHere46","2385999splitHere46","1..Integer.MAX_VALUE"
"5408splitHere46","2385999splitHere46","i=1..Integer.MAX_VALUE"
"5409splitHere46","2385999splitHere46","new BigInteger(String.valueOf(i)).isProbablePrime(certainty) == isPrime(i)"
"5410splitHere46","2385999splitHere46","isProbablePrime(...)"
"5411splitHere46","2385999splitHere46","isProbablePrime(15)"
"5412splitHere46","2385999splitHere46","import java.math.BigInteger;<newline46mondego>import java.util.BitSet;<newline46mondego><newline46mondego>public class Main {<newline46mondego><newline46mondego>    static BitSet primes;<newline46mondego><newline46mondego>    static boolean isPrime(int p) {<newline46mondego>        return p > 0 && (p == 2 || (p%2 != 0 && primes.get(p/2)));<newline46mondego>    }<newline46mondego><newline46mondego>    static void generatePrimesUpTo(int n) {<newline46mondego>        primes = new BitSet(n/2);<newline46mondego><newline46mondego>        for(int i = 0; i < primes.size(); i++) {<newline46mondego>            primes.set(i, true);<newline46mondego>        }<newline46mondego><newline46mondego>        primes.set(0, false);<newline46mondego>        int stop = (int)Math.sqrt(n) + 1;<newline46mondego>        int percentageDone = 0, previousPercentageDone = 0;<newline46mondego>        System.out.println(<doubleQuotes46>generating primes...<doubleQuotes46>);<newline46mondego>        long start = System.currentTimeMillis();<newline46mondego><newline46mondego>        for(int i = 0; i <= stop; i++) {<newline46mondego>            previousPercentageDone = percentageDone;<newline46mondego>            percentageDone = (int)((i + 1.0) / (stop / 100.0));<newline46mondego><newline46mondego>            if(percentageDone <= 100 && percentageDone != previousPercentageDone) {<newline46mondego>                System.out.println(percentageDone + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>            }<newline46mondego><newline46mondego>            if(primes.get(i)) {<newline46mondego>                int number = (i * 2) + 1;<newline46mondego><newline46mondego>                for(int p = number * 2; p < n; p += number) {<newline46mondego>                    if(p < 0) break; // overflow<newline46mondego>                    if(p%2 == 0) continue;<newline46mondego>                    primes.set(p/2, false);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        long elapsed = System.currentTimeMillis() - start;<newline46mondego>        System.out.println(<doubleQuotes46>finished generating primes ~<doubleQuotes46> + (elapsed/1000) + <doubleQuotes46> seconds<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void test(final int certainty, final int n) {<newline46mondego>        int percentageDone = 0, previousPercentageDone = 0;<newline46mondego>        long start = System.currentTimeMillis();<newline46mondego>        System.out.println(<doubleQuotes46>testing isProbablePrime(<doubleQuotes46> + certainty + <doubleQuotes46>) from 1 to <doubleQuotes46> + n);<newline46mondego>        for(int i = 1; i < n; i++) {<newline46mondego>            previousPercentageDone = percentageDone;<newline46mondego>            percentageDone = (int)((i + 1.0) / (n / 100.0));<newline46mondego>            if(percentageDone <= 100 && percentageDone != previousPercentageDone) {<newline46mondego>                System.out.println(percentageDone + <doubleQuotes46>%<doubleQuotes46>);<newline46mondego>            }<newline46mondego>            BigInteger bigInt = new BigInteger(String.valueOf(i));<newline46mondego>            boolean bigIntSays = bigInt.isProbablePrime(certainty);<newline46mondego>            if(isPrime(i) != bigIntSays) {<newline46mondego>                System.out.println(<doubleQuotes46>ERROR: isProbablePrime(<doubleQuotes46> + certainty + <doubleQuotes46>) returns <doubleQuotes46><newline46mondego>                    + bigIntSays + <doubleQuotes46> for i=<doubleQuotes46> + i + <doubleQuotes46> while it <doubleQuotes46> + (isPrime(i) ? <doubleQuotes46>is<doubleQuotes46> : <doubleQuotes46>isn't<doubleQuotes46> ) +<newline46mondego>                    <doubleQuotes46> a prime<doubleQuotes46>);<newline46mondego>                return;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        long elapsed = System.currentTimeMillis() - start;<newline46mondego>        System.out.println(<doubleQuotes46>finished testing in ~<doubleQuotes46> + ((elapsed/1000)/60) +<newline46mondego>                <doubleQuotes46> minutes, no false positive or false negative found for isProbablePrime(<doubleQuotes46> + certainty + <doubleQuotes46>)<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        int certainty = Integer.parseInt(args[0]);<newline46mondego>        int n = Integer.MAX_VALUE;<newline46mondego>        generatePrimesUpTo(n);<newline46mondego>        test(certainty, n);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5413splitHere46","2385999splitHere46","java -Xmx1024m -cp . Main 15<newline46mondego>"
"5414splitHere46","2385999splitHere46","i"
"5415splitHere46","2385999splitHere46","1..Integer.MAX_VALUE"
"5416splitHere46","2386080splitHere46","import java.io.IOException;<newline46mondego>import javax.servlet.Filter;<newline46mondego>import javax.servlet.FilterChain;<newline46mondego>import javax.servlet.FilterConfig;<newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.ServletRequest;<newline46mondego>import javax.servlet.ServletResponse;<newline46mondego><newline46mondego>public class AffiliateTrackingFilter implements Filter {<newline46mondego>    private AffiliateTrackingService affiliateTrackingService = null;<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void destroy() {<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void doFilter(ServletRequest rq, ServletResponse rs,<newline46mondego>            FilterChain chain) throws IOException, ServletException {<newline46mondego>        String affililateId = rq.getParameter(<doubleQuotes46>affiliateId<doubleQuotes46>);<newline46mondego>        affiliateTrackingService.incrementAffiliateHit(affililateId);<newline46mondego>        chain.doFilter();<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void init(FilterConfig fc) throws ServletException {<newline46mondego>        affiliateTrackingService = new AffiliateTrackingService();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5417splitHere46","2386080splitHere46","<filter><newline46mondego>    <filter-name>AffiliateTrackingFilter</filter-name><newline46mondego>    <filter-class>com.example.AffiliateTrackingFilter</filter-class><newline46mondego></filter><newline46mondego><newline46mondego><filter-mapping><newline46mondego>    <filter-name>AffiliateTrackingFilter</filter-name><newline46mondego>    <servlet-name>MyMainServlet</servlet-name><newline46mondego></filter-mapping><newline46mondego>"
"5418splitHere46","2386195splitHere46","Executors.newFixedThreadPool(int, ThreadFactory)"
"5419splitHere46","2386195splitHere46","ThreadFactory"
"5420splitHere46","2386195splitHere46","ExecutorService ex = Executors.newFixedThreadPool(nrofthreads, <newline46mondego>    new ThreadFactory() {<newline46mondego>        public Thread newThread(final Runnable r) {<newline46mondego>            return new Thread(new Runnable() {<newline46mondego>                public void run() {<newline46mondego>                    try {<newline46mondego>                        r.run();<newline46mondego>                    } finally {<newline46mondego>                        tearDownThreadLocals();<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"5421splitHere46","2386195splitHere46","Executors"
"5422splitHere46","2386195splitHere46","ThreadFactory"
"5423splitHere46","2386195splitHere46","ThreadPoolExecutor"
"5424splitHere46","2386362splitHere46","Filter"
"5425splitHere46","2386362splitHere46","public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException { <newline46mondego>    if (((HttpServletRequest) request).getSession().getAttribute(<doubleQuotes46>user<doubleQuotes46>) == null) {<newline46mondego>        ((HttpServletResponse) response).sendRedirect(<doubleQuotes46>error.jsf<doubleQuotes46>); // Not logged in, so redirect to error page.<newline46mondego>    } else {<newline46mondego>        chain.doFilter(request, response); // Logged in, so just continue.<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5426splitHere46","2386362splitHere46","User"
"5427splitHere46","2386362splitHere46","user"
"5428splitHere46","2386362splitHere46","GET"
"5429splitHere46","2386362splitHere46","GET"
"5430splitHere46","2386362splitHere46","IllegalStateException: response already committed"
"5431splitHere46","2386679splitHere46","E:\"
"5432splitHere46","2386679splitHere46","InputStream in = getClass().getResourceAsStream(<doubleQuotes46>adv_btm.jpg<doubleQuotes46>);<newline46mondego>"
"5433splitHere46","2386679splitHere46",".class"
"5434splitHere46","2386691splitHere46","<!--  No Tomcat debug logs --><newline46mondego>    <logger name=<doubleQuotes46>org.apache.catalina.core<doubleQuotes46> level=<doubleQuotes46>INFO<doubleQuotes46> /><newline46mondego>"
"5435splitHere46","2386799splitHere46","ThreadPoolExecutor"
"5436splitHere46","2386811splitHere46","MessageSource"
"5437splitHere46","2386811splitHere46","MessageSource"
"5438splitHere46","2386811splitHere46","getMessage"
"5439splitHere46","2386811splitHere46","<bean id=<doubleQuotes46>messageSource<doubleQuotes46> class=<doubleQuotes46>com.acme.LoggingMessageSource<doubleQuotes46>><newline46mondego>   <property name=<doubleQuotes46>pathtru<doubleQuotes46>><newline46mondego>     <bean class=<doubleQuotes46>org.springframework.context.support.ResourceBundleMessageSource<doubleQuotes46>><newline46mondego>       <property name=<doubleQuotes46>basenames<doubleQuotes46>><newline46mondego>         <list><newline46mondego>           <value>buttons</value><newline46mondego>           <value>labels</value><newline46mondego>         </list>    <newline46mondego>       </property><newline46mondego>     </bean><newline46mondego>   </property><newline46mondego> </bean><newline46mondego>"
"5440splitHere46","2386811splitHere46","public class LoggingMessageSource implements MessageSource {<newline46mondego><newline46mondego>  private MessageSource pathtru;<newline46mondego><newline46mondego>  public String getMessage(String code, Object[] args, String defaultMessage, Locale locale) {<newline46mondego>    // ...<newline46mondego>  }<newline46mondego><newline46mondego>  public String getMessage(String code, Object[] args, Locale locale) throws NoSuchMessageException {<newline46mondego>    // ...<newline46mondego>  }<newline46mondego><newline46mondego>  public String getMessage(MessageSourceResolvable resolvable, Locale locale) throws NoSuchMessageException {<newline46mondego>    // ...<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5441splitHere46","2386851splitHere46","mydialog.setLocation(200,200);<newline46mondego>"
"5442splitHere46","2387023splitHere46","containsregex"
"5443splitHere46","2387023splitHere46","filterchain"
"5444splitHere46","2387023splitHere46","tokenfilter"
"5445splitHere46","2387023splitHere46","<doubleQuotes46>Version<doubleQuotes46>"
"5446splitHere46","2387023splitHere46","vx.y.zz...."
"5447splitHere46","2387023splitHere46","parameter"
"5448splitHere46","2387023splitHere46","\<doubleQuotes46>"
"5449splitHere46","2387023splitHere46","&quot;"
"5450splitHere46","2387023splitHere46","<containsregex<newline46mondego>        pattern=<doubleQuotes46>^.*?&quot;Version&quot;.*&quot;(v[^&quot;]+?)&quot;.*<doubleQuotes46><newline46mondego>        replace=<doubleQuotes46>\1<doubleQuotes46> /><newline46mondego>"
"5451splitHere46","2387232splitHere46","JComponent container;<newline46mondego>if (menu == null)<newline46mondego>  container = popupMenu;<newline46mondego>else<newline46mondego>  container = menu;<newline46mondego>"
"5452splitHere46","2387318splitHere46","public final class SynchronizedHandEvaluator {<newline46mondego>    private static final SynchronizedHandEvaluator INSTANCE = new SynchronizedHandEvaluator();<newline46mondego>    public static final getInstance() {<newline46mondego>      return INSTANCE;<newline46mondego>    }<newline46mondego>    private SynchronizedHandEvaluator() { }<newline46mondego><newline46mondego>    public synchronized int evaluate(Card[] hand) {<newline46mondego>        return ExternalLibrary.evaluate(hand);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>// then just use the wrapper as you would expect<newline46mondego>int result = SynchronizedHandEvaluator.getInstance().evaluate(hand);<newline46mondego>"
"5453splitHere46","2387393splitHere46","private static final int NUM_CARDS = 52;<newline46mondego><newline46mondego>public static void main(String[] args) {<newline46mondego>  enumerateAllHands(Integer.parseInt(args[0]));<newline46mondego>}<newline46mondego><newline46mondego>private static void enumerateAllHands(int n) {<newline46mondego>  if (n > NUM_CARDS) {<newline46mondego>    throw new IllegalArgumentException();<newline46mondego>  }<newline46mondego>  int[] cards = new int[n];<newline46mondego>  BitSet cardsUsed = new BitSet();<newline46mondego>  enumerate(cards, 0, cardsUsed);<newline46mondego>}<newline46mondego><newline46mondego>private static void enumerate(int[] cards, int from, BitSet cardsUsed) {<newline46mondego>  if (from == cards.length) {<newline46mondego>    emit(cards);<newline46mondego>  } else {<newline46mondego>    for (int i = 0; i < NUM_CARDS; i++) {<newline46mondego>      if (!cardsUsed.get(i)) {<newline46mondego>        cards[from] = i;<newline46mondego>        cardsUsed.set(i);<newline46mondego>        enumerate(cards, from + 1, cardsUsed);<newline46mondego>        cardsUsed.clear(i);<newline46mondego>      }<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>private static void emit(int[] cards) {<newline46mondego>  System.out.println(Arrays.toString(cards));<newline46mondego>}<newline46mondego>"
"5454splitHere46","2387550splitHere46","boo"
"5455splitHere46","2387550splitHere46","TheInterface"
"5456splitHere46","2387550splitHere46","TheClass"
"5457splitHere46","2387550splitHere46","@Transactional"
"5458splitHere46","2387637splitHere46","interface HasFoo<newline46mondego>{<newline46mondego>   public <T> T getFoo(FooKey k);<newline46mondego>}<newline46mondego>"
"5459splitHere46","2387771splitHere46","java -cp /path/to/someJar.jar MyClassWithMainMethod<newline46mondego>"
"5460splitHere46","2387771splitHere46","java -cp .:someJar.jar MyClassWithMainMethod<newline46mondego>"
"5461splitHere46","2387826splitHere46","Thread"
"5462splitHere46","2387826splitHere46","private static int threadInitNumber;<newline46mondego><newline46mondego>private static synchronized int nextThreadNum() {<newline46mondego>    return threadInitNumber++;<newline46mondego>}<newline46mondego>"
"5463splitHere46","2387905splitHere46","renewalDate"
"5464splitHere46","2387905splitHere46","@DateTimeFormat"
"5465splitHere46","2388089splitHere46","-pl"
"5466splitHere46","2388089splitHere46","--projects"
"5467splitHere46","2388089splitHere46","mvn --projects my-submodule install<newline46mondego>"
"5468splitHere46","2388089splitHere46","--aslo-make"
"5469splitHere46","2388089splitHere46","--also-make-dependents"
"5470splitHere46","2388089splitHere46","mvn --projects my-submodule --also-make install<newline46mondego>"
"5471splitHere46","2388285splitHere46","myproject/src/com/foo/Bar.java<newline46mondego>myproject/test/com/foo/BarTest.java<newline46mondego>"
"5472splitHere46","2388285splitHere46","myproject/src/main/java/com/foo/Bar.java<newline46mondego>myproject/src/test/java/com/foo/BarTest.java<newline46mondego>"
"5473splitHere46","2388285splitHere46","Test"
"5474splitHere46","2388285splitHere46","Test"
"5475splitHere46","2388314splitHere46","posX"
"5476splitHere46","2388314splitHere46","posY"
"5477splitHere46","2388314splitHere46","ArrayList<Point>"
"5478splitHere46","2388314splitHere46","remove"
"5479splitHere46","2388314splitHere46","equals"
"5480splitHere46","2388314splitHere46","(new int[0]).equals(new int[0]) // false!<newline46mondego>"
"5481splitHere46","2388314splitHere46","Point"
"5482splitHere46","2388314splitHere46","@Override equals"
"5483splitHere46","2388314splitHere46","remove(new Point(posX, posY))"
"5484splitHere46","2388314splitHere46","Set<Point> positionList"
"5485splitHere46","2388314splitHere46","O(1)"
"5486splitHere46","2388314splitHere46","HashSet"
"5487splitHere46","2388314splitHere46","O(log N)"
"5488splitHere46","2388314splitHere46","TreeSet"
"5489splitHere46","2388314splitHere46","@Override hashCode"
"5490splitHere46","2388314splitHere46","@Override equals"
"5491splitHere46","2388314splitHere46","Point implements Comparable<Point>"
"5492splitHere46","2388314splitHere46","Comparator<Point>"
"5493splitHere46","2388314splitHere46","TreeSet"
"5494splitHere46","2388314splitHere46","int[]"
"5495splitHere46","2388314splitHere46","Point"
"5496splitHere46","2388314splitHere46","List<Integer>"
"5497splitHere46","2388314splitHere46","equals"
"5498splitHere46","2388314splitHere46","int[]"
"5499splitHere46","2388314splitHere46","IntArray"
"5500splitHere46","2388314splitHere46","ArrayList<IntArray>"
"5501splitHere46","2388314splitHere46","@Override equals"
"5502splitHere46","2388314splitHere46","hashCode"
"5503splitHere46","2388314splitHere46","Arrays.equals(int[], int[])"
"5504splitHere46","2388314splitHere46","hashCode(int[])"
"5505splitHere46","2388447splitHere46","p1 = subprocess.Popen([<doubleQuotes46>/usr/bin/java<doubleQuotes46>, <doubleQuotes46>MyClass<doubleQuotes46>], stdout=subprocess.PIPE)<newline46mondego>print p1.stdout.read() <newline46mondego>"
"5506splitHere46","2388495splitHere46","List<X>"
"5507splitHere46","2388495splitHere46","public String getData(Class<? extends Something> myClass) {<newline46mondego>  // ...<newline46mondego>  List<Something> list = (List<Something>) // ...<newline46mondego>"
"5508splitHere46","2388522splitHere46","Application.getEventLock()"
"5509splitHere46","2388618splitHere46","import"
"5510splitHere46","2388618splitHere46","import my.example.mylibrary.SomeClass;<newline46mondego>import java.util.List;<newline46mondego>import java.util.ArrayList;<newline46mondego>...<newline46mondego>SomeClass some = new SomeClass();<newline46mondego>List<SomeClass> list = new ArrayList<SomeClass>();<newline46mondego>list.add( some );<newline46mondego>etc.. <newline46mondego>"
"5511splitHere46","2388618splitHere46","// no import <newline46mondego>... <newline46mondego>my.example.mylibrary.SomeClass some = new my.example.mylibrary.SomeClass();<newline46mondego>java.util.List<my.example.mylibrary.SomeClass> list = new java.util.ArrayList<my.example.mylibrary.SomeClass>();<newline46mondego>list.add( some );<newline46mondego>"
"5512splitHere46","2388618splitHere46","import some.packagename.*;<newline46mondego>"
"5513splitHere46","2388618splitHere46","import some.packagename.Each;<newline46mondego>import some.packagename.Single;<newline46mondego>import some.packagename.Class;<newline46mondego>import some.packagename.ByLine;<newline46mondego>"
"5514splitHere46","2388655splitHere46","$solr = new Apache_Solr_Client(...);<newline46mondego><newline46mondego>$searchOptions = array(<newline46mondego>  'sort' => 'mod_date desc'<newline46mondego>);<newline46mondego><newline46mondego>$results = $solr->search(<doubleQuotes46>bmw<doubleQuotes46>, 0, 10, $searchOptions);<newline46mondego>"
"5515splitHere46","2388655splitHere46","$searchOptions = array(<newline46mondego>    'fq' => 'category:<doubleQuotes46>Bilar<doubleQuotes46> + car_action:Sälje',<newline46mondego>    'sort' => 'mod_date desc'<newline46mondego>)<newline46mondego><newline46mondego>$solr->search(<doubleQuotes46>\*:*<doubleQuotes46>, 0, 10, $searchOptions);<newline46mondego>"
"5516splitHere46","2388655splitHere46","http://localhost:8983/solr/select/?&q=%2A%3A%2A&fq=+category%3A%22Bilar%22+%2B+car_action%3AS%C3%A4ljes&sort=mod_date+desc<newline46mondego>"
"5517splitHere46","2388655splitHere46","http://localhost:8983/solr/select/?&q=+category%3A%22Bilar%22+%2B+car_action%3AS%C3%A4ljes&sort=mod_date+desc<newline46mondego>"
"5518splitHere46","2389016splitHere46","Thread.sleep()"
"5519splitHere46","2389016splitHere46","Object.wait(long)"
"5520splitHere46","2389016splitHere46","Thread.sleep()"
"5521splitHere46","2389016splitHere46","Thread.sleep()"
"5522splitHere46","2389161splitHere46","select a,b from B as b left outer join b.parent as a"
"5523splitHere46","2389390splitHere46","public boolean validateX(int x)<newline46mondego>{<newline46mondego>     return x > 0;<newline46mondego>}<newline46mondego><newline46mondego>private void validateParameter(int x)<newline46mondego>{<newline46mondego>     if (validateX(x))<newline46mondego>     {<newline46mondego>         throw new IllegalArgumentException(<doubleQuotes46>X is invalid<doubleQuotes46>);<newline46mondego>     }<newline46mondego>}<newline46mondego>"
"5524splitHere46","2389390splitHere46","if(validateX(x)) ..."
"5525splitHere46","2389404splitHere46","<H1>"
"5526splitHere46","2389404splitHere46","<p>"
"5527splitHere46","2389404splitHere46","<b>"
"5528splitHere46","2389404splitHere46","<i>"
"5529splitHere46","2389607splitHere46","421       /* Returns a string representation of this collection.  The string<newline46mondego>  422        * representation consists of a list of the collection's elements in the<newline46mondego>  423        * order they are returned by its iterator, enclosed in square brackets<newline46mondego>  424        * (<tt><doubleQuotes46>[]<doubleQuotes46></tt>).  Adjacent elements are separated by the characters<newline46mondego>  425        * <tt><doubleQuotes46>, <doubleQuotes46></tt> (comma and space).  Elements are converted to strings as<newline46mondego>  426        * by {@link String#valueOf(Object)}.<newline46mondego>  427        *<newline46mondego>  428        * @return a string representation of this collection<newline46mondego>  429        */<newline46mondego>  430       public String toString() {<newline46mondego>  431           Iterator<E> i = iterator();<newline46mondego>  432           if (! i.hasNext())<newline46mondego>  433               return <doubleQuotes46>[]<doubleQuotes46>;<newline46mondego>  434   <newline46mondego>  435           StringBuilder sb = new StringBuilder();<newline46mondego>  436           sb.append('[');<newline46mondego>  437           for (;;) {<newline46mondego>  438               E e = i.next();<newline46mondego>  439               sb.append(e == this ? <doubleQuotes46>(this Collection)<doubleQuotes46> : e);<newline46mondego>  440               if (! i.hasNext())<newline46mondego>  441                   return sb.append(']').toString();<newline46mondego>  442               sb.append(<doubleQuotes46>, <doubleQuotes46>);<newline46mondego>  443           }<newline46mondego>"
"5530splitHere46","2389662splitHere46","<property name=<doubleQuotes46>toplink.platform.class.name<doubleQuotes46> <newline46mondego>                    value=<doubleQuotes46>oracle.toplink.platform.database.MySQL4Platform<doubleQuotes46>/><newline46mondego>"
"5531splitHere46","2389662splitHere46","<project xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>         xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<doubleQuotes46>><newline46mondego>    <modelVersion>4.0.0</modelVersion><newline46mondego>    <groupId>org.randompage</groupId><newline46mondego>    <artifactId>sandbox</artifactId><newline46mondego>    <packaging>jar</packaging><newline46mondego>    <version>1.0</version><newline46mondego>    <name>sandbox</name><newline46mondego>    <repositories><newline46mondego>        <repository><newline46mondego>            <id>EclipseLink Repo</id><newline46mondego>            <url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url><newline46mondego>        </repository><newline46mondego>    </repositories><newline46mondego>    <dependencies><newline46mondego>        <dependency><newline46mondego>            <groupId>javax.persistence</groupId><newline46mondego>            <artifactId>javax.persistence</artifactId><newline46mondego>            <version>2.0-SNAPSHOT</version><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>org.eclipse.persistence</groupId><newline46mondego>            <artifactId>eclipselink</artifactId><newline46mondego>            <version>2.0.0</version><newline46mondego>            <scope>runtime</scope><newline46mondego>        </dependency><newline46mondego>        <dependency><newline46mondego>            <groupId>com.h2database</groupId><newline46mondego>            <artifactId>h2</artifactId><newline46mondego>            <version>1.2.130</version><newline46mondego>        </dependency><newline46mondego>    </dependencies><newline46mondego></project><newline46mondego>"
"5532splitHere46","2389662splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><persistence version=<doubleQuotes46>2.0<doubleQuotes46> xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/persistence<doubleQuotes46><newline46mondego>             xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>             xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd<doubleQuotes46>><newline46mondego>    <persistence-unit name=<doubleQuotes46>JPATestPU<doubleQuotes46> transaction-type=<doubleQuotes46>RESOURCE_LOCAL<doubleQuotes46>><newline46mondego>        <provider><newline46mondego>            org.eclipse.persistence.jpa.PersistenceProvider<newline46mondego>        </provider><newline46mondego>        <class>org.randompage.MyEntity</class><newline46mondego>        <properties><newline46mondego>            <property name=<doubleQuotes46>javax.persistence.jdbc.user<doubleQuotes46> value=<doubleQuotes46>johndoe<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>javax.persistence.jdbc.password<doubleQuotes46> value=<doubleQuotes46>secret<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>javax.persistence.jdbc.driver<doubleQuotes46> value=<doubleQuotes46>org.h2.Driver<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>javax.persistence.jdbc.url<doubleQuotes46> value=<doubleQuotes46>jdbc:h2:~/.h2/testdb;FILE_LOCK=NO<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>eclipselink.ddl-generation<doubleQuotes46> value=<doubleQuotes46>create-tables<doubleQuotes46>/><newline46mondego>            <property name=<doubleQuotes46>eclipselink.logging.level<doubleQuotes46> value=<doubleQuotes46>INFO<doubleQuotes46>/><newline46mondego>        </properties><newline46mondego>    </persistence-unit><newline46mondego></persistence><newline46mondego>"
"5533splitHere46","2390009splitHere46","javax.servlet"
"5534splitHere46","2390009splitHere46","class"
"5535splitHere46","2390033splitHere46","<xs:complexType name=<doubleQuotes46>foo<doubleQuotes46>><newline46mondego>  <xs:all><newline46mondego>    <xs:element name=<doubleQuotes46>oneBar<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>    <xs:element name=<doubleQuotes46>twoBar<doubleQuotes46> type=<doubleQuotes46>xs:string<doubleQuotes46> minOccurs=<doubleQuotes46>0<doubleQuotes46>/><newline46mondego>  </xs:all><newline46mondego></xs:complexType><newline46mondego>"
"5536splitHere46","2390033splitHere46","Test"
"5537splitHere46","2390033splitHere46","test1"
"5538splitHere46","2390033splitHere46","test2"
"5539splitHere46","2390033splitHere46","<sequence>"
"5540splitHere46","2390033splitHere46","@XmlType(name=<doubleQuotes46><doubleQuotes46>,propOrder={<doubleQuotes46>test1<doubleQuotes46>,<doubleQuotes46>test2<doubleQuotes46>})<newline46mondego>@XmlRootElement(name=<doubleQuotes46>test<doubleQuotes46>)<newline46mondego>public class Test<newline46mondego>{<newline46mondego>   @XmlElement(required=true)<newline46mondego>   private String test1;<newline46mondego>   @XmlElement(required=true)<newline46mondego>   private String test2;<newline46mondego>}<newline46mondego>"
"5541splitHere46","2390033splitHere46","<all>"
"5542splitHere46","2390033splitHere46","@XmlType(name=<doubleQuotes46><doubleQuotes46>,propOrder={})<newline46mondego>@XmlRootElement(name=<doubleQuotes46>test<doubleQuotes46>)<newline46mondego>public class Test<newline46mondego>{<newline46mondego>   @XmlElement(required=true)<newline46mondego>   private String test1;<newline46mondego>   @XmlElement(required=true)<newline46mondego>   private String test2;<newline46mondego>}<newline46mondego>"
"5543splitHere46","2390073splitHere46","public"
"5544splitHere46","2390073splitHere46","static"
"5545splitHere46","2390073splitHere46","void"
"5546splitHere46","2390073splitHere46","int"
"5547splitHere46","2390073splitHere46","int"
"5548splitHere46","2390073splitHere46","void"
"5549splitHere46","2390073splitHere46","main"
"5550splitHere46","2390122splitHere46","BigDecimal oneTenth = new BigDecimal(0.1);<newline46mondego>BigDecimal oneMillion = new BigDecimal(1000000);<newline46mondego>oneTenth.multiply(oneMillion)<newline46mondego>out> 100000.0000000000055511151231257827021181583404541015625000000<newline46mondego>"
"5551splitHere46","2390122splitHere46","BigDecimal oneTenth = new BigDecimal(<doubleQuotes46>0.1<doubleQuotes46>);<newline46mondego>BigDecimalr oneMillion = new BigDecimal(1000000);<newline46mondego>oneTenth.multiply(oneMillion)<newline46mondego>out> 100000.0<newline46mondego>"
"5552splitHere46","2390136splitHere46","<class name=<doubleQuotes46>network.Source<doubleQuotes46>><newline46mondego>        <description xmlns=<doubleQuotes46><doubleQuotes46>><newline46mondego>            Default mapping for class network.Source<newline46mondego>        </description><newline46mondego><newline46mondego>        <map-to xml=<doubleQuotes46>Source<doubleQuotes46>/><newline46mondego><newline46mondego>        <field name=<doubleQuotes46>name<doubleQuotes46> type=<doubleQuotes46>java.lang.String<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>            <bind-xml  node=<doubleQuotes46>element<doubleQuotes46> /><newline46mondego>        </field><newline46mondego><newline46mondego>        <field name=<doubleQuotes46>delay<doubleQuotes46> type=<doubleQuotes46>tools.DistributionSampler<doubleQuotes46> required=<doubleQuotes46>true<doubleQuotes46> set-method=<doubleQuotes46>initialiseDelay<doubleQuotes46> get-method=<doubleQuotes46>getDelay<doubleQuotes46>><newline46mondego>            <bind-xml  auto-naming=<doubleQuotes46>deriveByClass<doubleQuotes46> node=<doubleQuotes46>element<doubleQuotes46> location=<doubleQuotes46>delay<doubleQuotes46>/><newline46mondego>        </field><newline46mondego><newline46mondego>        <field name=<doubleQuotes46>batchSize<doubleQuotes46> type=<doubleQuotes46>tools.DistributionSampler<doubleQuotes46>><newline46mondego>            <bind-xml  auto-naming=<doubleQuotes46>deriveByClass<doubleQuotes46> node=<doubleQuotes46>element<doubleQuotes46> location=<doubleQuotes46>batchSize<doubleQuotes46>/><newline46mondego>        </field><newline46mondego>    </class><newline46mondego>"
"5553splitHere46","2390136splitHere46","<Source name=<doubleQuotes46>asd<doubleQuotes46>><newline46mondego>    <delay><newline46mondego>        <Deterministic time=<doubleQuotes46>234<doubleQuotes46> /><newline46mondego>    </delay><newline46mondego><newline46mondego>    <batchSize><newline46mondego>        <Erlang K=<doubleQuotes46>234<doubleQuotes46> Theta=<doubleQuotes46>234<doubleQuotes46> /><newline46mondego>    </batchSize><newline46mondego></Source><newline46mondego>"
"5554splitHere46","2390325splitHere46","trait SynchronizedTestTrait<newline46mondego>{<newline46mondego>    val classUnderTest: AnyRef<newline46mondego><newline46mondego>    class Gate<newline46mondego>    {<newline46mondego>        val latch = new java.util.concurrent.CountDownLatch(1)<newline46mondego><newline46mondego>        def open()<newline46mondego>        {<newline46mondego>            this.latch.countDown<newline46mondego>        }<newline46mondego><newline46mondego>        def await()<newline46mondego>        {<newline46mondego>            this.latch.await<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    def nanoTime(code: => Unit) =<newline46mondego>    {<newline46mondego>        val before = System.nanoTime<newline46mondego>        code<newline46mondego>        val after = System.nanoTime<newline46mondego>        after - before<newline46mondego>    }<newline46mondego><newline46mondego>    def assertSynchronized(code: => Unit)<newline46mondego>    {<newline46mondego>        this.assertThreadSafety(threadSafe = true, millisTimeout = 10L)(code)<newline46mondego>    }<newline46mondego><newline46mondego>    def assertNotSynchronized(code: => Unit)<newline46mondego>    {<newline46mondego>        this.assertThreadSafety(threadSafe = false, millisTimeout = 60L * 1000L)(code)<newline46mondego>    }<newline46mondego><newline46mondego>    def assertThreadSafety(threadSafe: Boolean, millisTimeout: Long)(code: => Unit)<newline46mondego>    {<newline46mondego>        def spawn(code: => Unit) =<newline46mondego>        {<newline46mondego>            val result = new Thread<newline46mondego>            {<newline46mondego>                override def run = code<newline46mondego>            }<newline46mondego>            result.start()<newline46mondego>            result<newline46mondego>        }<newline46mondego><newline46mondego>        val gate = new Gate<newline46mondego><newline46mondego>        val lockHolderThread = spawn<newline46mondego>        {<newline46mondego>            this.classUnderTest.synchronized<newline46mondego>            {<newline46mondego>                // Don't let the other thread start until we've got the lock<newline46mondego>                gate.open()<newline46mondego><newline46mondego>                // Hold the lock until interruption<newline46mondego>                try<newline46mondego>                {<newline46mondego>                    Thread.sleep(java.lang.Long.MAX_VALUE)<newline46mondego>                }<newline46mondego>                catch<newline46mondego>                {<newline46mondego>                    case ignore: InterruptedException => return;<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        val measuredNanoTime = nanoTime<newline46mondego>        {<newline46mondego>            // Don't start until the other thread is synchronized on classUnderTest<newline46mondego>            gate.await()<newline46mondego>            spawn(code).join(millisTimeout, 0)<newline46mondego>        }<newline46mondego><newline46mondego>        val nanoTimeout = millisTimeout * 1000L * 1000L<newline46mondego><newline46mondego>        Assert.assertEquals(<newline46mondego>            <doubleQuotes46>Measured <doubleQuotes46> + measuredNanoTime + <doubleQuotes46> ns but timeout was <doubleQuotes46> + nanoTimeout + <doubleQuotes46> ns.<doubleQuotes46>,<newline46mondego>            threadSafe,<newline46mondego>            measuredNanoTime > nanoTimeout)<newline46mondego><newline46mondego>        lockHolderThread.interrupt<newline46mondego>        lockHolderThread.join<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5555splitHere46","2390325splitHere46","class MySynchronized<newline46mondego>{<newline46mondego>    def synch = this.synchronized{}<newline46mondego>    def unsynch = {}<newline46mondego>}<newline46mondego>"
"5556splitHere46","2390325splitHere46","class MySynchronizedTest extends SynchronizedTestTrait<newline46mondego>{<newline46mondego>    val classUnderTest = new MySynchronized<newline46mondego><newline46mondego><newline46mondego>    @Test<newline46mondego>    def synch_is_synchronized<newline46mondego>    {<newline46mondego>        this.assertSynchronized<newline46mondego>        {<newline46mondego>            this.classUnderTest.synch<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    @Test<newline46mondego>    def unsynch_not_synchronized<newline46mondego>    {<newline46mondego>        this.assertNotSynchronized<newline46mondego>        {<newline46mondego>            this.classUnderTest.unsynch<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5557splitHere46","2390469splitHere46","public class SystemInfo {<newline46mondego>    private String systemName;<newline46mondego>    private String ipAddress;<newline46mondego>    private String username;<newline46mondego><newline46mondego>    public SystemInfo() {<newline46mondego>    // do whatever<newline46mondego>    }<newline46mondego><newline46mondego>    public void setSystemName(String name) {<newline46mondego>        this.systemName = name;<newline46mondego>    }<newline46mondego><newline46mondego>    // etc.<newline46mondego><newline46mondego>}<newline46mondego>"
"5558splitHere46","2390469splitHere46","SystemInfo system1 = new SystemInfo();<newline46mondego>system1.setSystemName(<doubleQuotes46>The Name<doubleQuotes46>);<newline46mondego>// etc.<newline46mondego><newline46mondego>Map<String, SystemInfo> systemMap = new HashMap<String, SystemInfo>();<newline46mondego>systemMap.put(system1.getSystemName(), system1);<newline46mondego>"
"5559splitHere46","2390538splitHere46","hasNext(String pattern)"
"5560splitHere46","2390538splitHere46","true"
"5561splitHere46","2390538splitHere46","<doubleQuotes46>asda<doubleQuotes46>"
"5562splitHere46","2390538splitHere46","<doubleQuotes46>[A-Z]+<doubleQuotes46>"
"5563splitHere46","2390538splitHere46","<doubleQuotes46>[A-Za-z]+<doubleQuotes46>"
"5564splitHere46","2390538splitHere46","<doubleQuotes46>[A-Z]+<doubleQuotes46>"
"5565splitHere46","2390538splitHere46","useDelimiter(<doubleQuotes46>[^A-Z]+<doubleQuotes46>)"
"5566splitHere46","2390538splitHere46","next()"
"5567splitHere46","2390538splitHere46","skip(<doubleQuotes46>[^A-Z]+<doubleQuotes46>)"
"5568splitHere46","2390538splitHere46","findInLine(<doubleQuotes46>[A-Z]+<doubleQuotes46>)"
"5569splitHere46","2390538splitHere46","Pattern"
"5570splitHere46","2390538splitHere46","<doubleQuotes46>Xooo ABC<doubleQuotes46>"
"5571splitHere46","2390538splitHere46","<doubleQuotes46>[A-Z]+<doubleQuotes46>"
"5572splitHere46","2390682splitHere46","List<Integer> list1 = new ArrayList<Integer>();<newline46mondego>List<String> list2 = (List<String>)list1;<newline46mondego>list2.add(<doubleQuotes46>foo<doubleQuotes46>); // perfectly legal<newline46mondego>"
"5573splitHere46","2390682splitHere46","Field.getGenericType()"
"5574splitHere46","2390682splitHere46","Object.getClass()"
"5575splitHere46","2390682splitHere46","public final native Class<?> getClass();<newline46mondego>"
"5576splitHere46","2390682splitHere46","Class<?>"
"5577splitHere46","2390682splitHere46","Class"
"5578splitHere46","2390682splitHere46","String.class"
"5579splitHere46","2390682splitHere46","Class"
"5580splitHere46","2390682splitHere46","String"
"5581splitHere46","2390682splitHere46","Class"
"5582splitHere46","2390682splitHere46","getClass"
"5583splitHere46","2390682splitHere46","String"
"5584splitHere46","2390682splitHere46","List<String>"
"5585splitHere46","2390682splitHere46","List<Long>.class"
"5586splitHere46","2390682splitHere46","List<?>.class"
"5587splitHere46","2390682splitHere46","Class"
"5588splitHere46","2390682splitHere46","List"
"5589splitHere46","2390682splitHere46","Class"
"5590splitHere46","2390682splitHere46","List.class"
"5591splitHere46","2390763splitHere46","0xCAFEBABE"
"5592splitHere46","2390763splitHere46","<!DO"
"5593splitHere46","2390763splitHere46","<!DOCTYPE..."
"5594splitHere46","2390763splitHere46","404 error"
"5595splitHere46","2390888splitHere46","enum MyClass {<newline46mondego>    INSTANCE;<newline46mondego><newline46mondego>    // rest of singleton goes here<newline46mondego>}<newline46mondego>"
"5596splitHere46","2391146splitHere46","javax.persistence.Lob"
"5597splitHere46","2391146splitHere46","private String message = <doubleQuotes46><doubleQuotes46>;<newline46mondego><newline46mondego>@Lob<newline46mondego>public String getMessage() {<newline46mondego>  return message;<newline46mondego>}<newline46mondego><newline46mondego>public void setMessage(String message) {<newline46mondego>  this.message = message;<newline46mondego>}<newline46mondego>"
"5598splitHere46","2391146splitHere46","hibernate.hbm2ddl.auto=update"
"5599splitHere46","2391440splitHere46","purecharger/ExampleAction/local<newline46mondego>"
"5600splitHere46","2391440splitHere46","<EAR_APPLICATION>/<STATEFUL_BEAN>/local<newline46mondego>"
"5601splitHere46","2391440splitHere46","<STATEFUL_BEAN>/local<newline46mondego>"
"5602splitHere46","2391440splitHere46","pureCharger.ear<newline46mondego><newline46mondego>    META-INF<newline46mondego>        application.xml<newline46mondego>    pureCharger-ejb.jar<newline46mondego>    pureCharger-war.war<newline46mondego>    jboss-seam.jar<newline46mondego>    lib<newline46mondego>        // libraries shared by your modules goes here<newline46mondego>"
"5603splitHere46","2391440splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><application version=<doubleQuotes46>5<doubleQuotes46> xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/application_5.xsd<doubleQuotes46>><newline46mondego>    <display-name>pureCharger</display-name><newline46mondego>    <module><newline46mondego>        <ejb>pureCharger-ejb.jar</ejb><newline46mondego>    </module><newline46mondego>    <module><newline46mondego>        <ejb>jboss-seam.jar</ejb><newline46mondego>    </module><newline46mondego>    <module><newline46mondego>        <web><newline46mondego>            <web-uri>pureCharger-war.war</web-uri><newline46mondego>            <context-root>pureCharger</context-root><newline46mondego>        </web><newline46mondego>    </module><newline46mondego></application><newline46mondego>"
"5604splitHere46","2391568splitHere46","rest_manager = new VerticalFieldManager(Manager.VERTICAL_SCROLL)<newline46mondego>          {<newline46mondego>            protected void paint(net.rim.device.api.ui.Graphics graphics)<newline46mondego>             {<newline46mondego>                  int y = this.getVerticalScroll();                                     <newline46mondego>                                     graphics.drawBitmap( 0, y, rank_img.getWidth()+10, <newline46mondego>rank_img.getHeight(), rank_img, 0, 0 );<newline46mondego><newline46mondego>                                     super.paint( graphics );<newline46mondego>                                }<newline46mondego>                     }<newline46mondego>"
"5605splitHere46","2391727splitHere46","Date birthDate = new Date(87,02,04,8,30,00); //March = 2<newline46mondego>"
"5606splitHere46","2391727splitHere46","Date"
"5607splitHere46","2391727splitHere46","public Date(int year, int month, int date, int hrs, int min)"
"5608splitHere46","2391727splitHere46","@Deprecated"
"5609splitHere46","2391727splitHere46","Calendar calendar = Calendar.getInstance();<newline46mondego>Calendar.set(1987, 2, 4, 0, 0, 0);<newline46mondego>Date birthDate = calendar.getTime();<newline46mondego>"
"5610splitHere46","2391817splitHere46","67.195.160.76"
"5611splitHere46","2391817splitHere46","Host"
"5612splitHere46","2391958splitHere46","if (obj instanceof Integer)<newline46mondego>    put(key,integerval);  <newline46mondego>if (obj instanceof String)<newline46mondego>    put(key,stringval);  <newline46mondego>if (obj instanceof Boolean)<newline46mondego>    put(key,booleanval);<newline46mondego>"
"5613splitHere46","2391958splitHere46","instanceof"
"5614splitHere46","2391958splitHere46","instanceof"
"5615splitHere46","2391958splitHere46","true"
"5616splitHere46","2391958splitHere46","null"
"5617splitHere46","2391958splitHere46","ClassCastException"
"5618splitHere46","2391958splitHere46","false"
"5619splitHere46","2392065splitHere46","jdbc:mysql://localhost"
"5620splitHere46","2392065splitHere46","stm.executeUpdate(<doubleQuotes46>CREATE DATABASE dbname<doubleQuotes46>)"
"5621splitHere46","2392089splitHere46","Class A{<newline46mondego>    int i;<newline46mondego>    static int j;<newline46mondego><newline46mondego>    public static void methodA(){<newline46mondego>        i = 5; //cannot use since i is not static<newline46mondego>        j = 2; //can use.<newline46mondego><newline46mondego>        int k = 3; //k is local variable and can be used no problem<newline46mondego><newline46mondego>        **EDIT:**//if you want to access i<newline46mondego>        A a = new A();<newline46mondego>        //A.i = 5; //can use.  <newline46mondego>        a.i = 5; // it should be non-capital <doubleQuotes46>a<doubleQuotes46> right?<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5622splitHere46","2392355splitHere46","JMenuBar"
"5623splitHere46","2392380splitHere46","substring"
"5624splitHere46","2392380splitHere46","String firstLetter = someString.substring(0, 1);<newline46mondego>someString = someString.substring(1);<newline46mondego>"
"5625splitHere46","2392540splitHere46","package cruft;<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.File;<newline46mondego>import java.io.FileReader;<newline46mondego>import java.io.IOException;<newline46mondego>import java.io.Reader;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Scanner;<newline46mondego>import java.util.StringTokenizer;<newline46mondego><newline46mondego>public class FileTokenizer<newline46mondego>{<newline46mondego>    private static final String DEFAULT_DELIMITERS = <doubleQuotes46>< , { } ><doubleQuotes46>;<newline46mondego>    private static final String DEFAULT_TEST_FILE = <doubleQuotes46>data/trans1.txt<doubleQuotes46>;<newline46mondego><newline46mondego>    public static void main(String[] args)<newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            String fileName = ((args.length > 0) ? args[0] : DEFAULT_TEST_FILE);<newline46mondego>            FileReader fileReader = new FileReader(new File(fileName));<newline46mondego>            FileTokenizer fileTokenizer = new FileTokenizer();<newline46mondego>            List<String> tokens = fileTokenizer.tokenize(fileReader);<newline46mondego>            System.out.println(tokens);<newline46mondego>        }<newline46mondego>        catch (IOException e)<newline46mondego>        {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public List<String> tokenize(Reader reader) throws IOException<newline46mondego>    {<newline46mondego>        List<String> tokens = new ArrayList<String>();<newline46mondego><newline46mondego>        BufferedReader br = null;<newline46mondego><newline46mondego>        try<newline46mondego>        {<newline46mondego>            br = new BufferedReader(reader);<newline46mondego>            Scanner scanner = new Scanner(br);<newline46mondego>            while (scanner.hasNext())<newline46mondego>            {<newline46mondego>                StringTokenizer st = new StringTokenizer(scanner.next(), DEFAULT_DELIMITERS, true);<newline46mondego>                while (st.hasMoreElements())<newline46mondego>                {<newline46mondego>                    tokens.add(st.nextToken());                    <newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        finally<newline46mondego>        {<newline46mondego>            close(br);<newline46mondego>        }<newline46mondego><newline46mondego>        return tokens;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void close(Reader r)<newline46mondego>    {<newline46mondego>        try<newline46mondego>        {<newline46mondego>            if (r != null)<newline46mondego>            {<newline46mondego>                r.close();<newline46mondego>            }<newline46mondego>        }<newline46mondego>        catch (IOException e)<newline46mondego>        {<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5626splitHere46","2392540splitHere46","C:\JDKs\jdk1.6.0_13\bin\java  cruft.FileTokenizer<newline46mondego>[5, <, 0, ,, {, p1, }, >, <, 0, ,, {, p1, }, >, -1-, >, <, 1, >, <, 1, ,, {, p1, }, >, -2-, >, <, 2, >, <, 3, >, <, 2, ,, {, p0, }, >, -1-, >, <, 0, >, <, 3, ,, {, p1, }, >, -1-, >, <, 4, >, <, 4, ,, {, p0, }, >, -1-, >, <, 3, >]<newline46mondego>"
"5627splitHere46","2392560splitHere46","wait()"
"5628splitHere46","2392560splitHere46","notify(),"
"5629splitHere46","2392560splitHere46","notifyAll()"
"5630splitHere46","2392560splitHere46","Runnable runnable = new Runnable() {<newline46mondego>    public void run() {<newline46mondego>      // wait(); This call wouldn't work<newline46mondego>      syncronized (this) {<newline46mondego>        wait();  // This call will work<newline46mondego>      }<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"5631splitHere46","2392560splitHere46","// runnable.notifyAll(); this call will not work<newline46mondego>syncronized (runnable) {<newline46mondego>    runnable.notifyAll(); // this call will work<newline46mondego>}<newline46mondego>"
"5632splitHere46","2392560splitHere46","OnClickListener okListener = new OnClickListener() {<newline46mondego>    public void onClick(DialogInterface dialog, int which) {<newline46mondego>        dialog.cancel();<newline46mondego>        Runnable download = new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                // Create your input streams and such<newline46mondego>                boolean downloadComplete = false;<newline46mondego>                while(!downloadComplete  && !Thread.currentThread().isInterruped()) {<newline46mondego>                    // Do some downloading<newline46mondego>                }<newline46mondego>                if (!Thread.currentThread().isInterruped()) {<newline46mondego>                    // Alert user of success.<newline46mondego>                }<newline46mondego>            }<newline46mondego>        };<newline46mondego>        downloadThread = new Thread(download);<newline46mondego>        downloadThread.start();<newline46mondego>    }<newline46mondego>};<newline46mondego>OnClickListener cancelListener = new OnClickListener() {<newline46mondego>    public void onClick(DialogInterface dialog, int which) {<newline46mondego>        downloadThread.interrupt();<newline46mondego>    }<newline46mondego>};<newline46mondego>"
"5633splitHere46","2392589splitHere46","same"
"5634splitHere46","2392589splitHere46","WindowFactory"
"5635splitHere46","2392589splitHere46","LinuxFactory"
"5636splitHere46","2392589splitHere46","AppleFactory"
"5637splitHere46","2392589splitHere46","Button"
"5638splitHere46","2392694splitHere46","ab"
"5639splitHere46","2392694splitHere46","ba"
"5640splitHere46","2392694splitHere46","for i=0 to array.length<newline46mondego>  for j=0 to array.length<newline46mondego>    if i == j skip<newline46mondego>    else construct pair array[i], array[j] <newline46mondego>"
"5641splitHere46","2392694splitHere46","for i=0 to array.length-1<newline46mondego>  for j=i+1 to array.length<newline46mondego>    construct pair array[i], array[j] <newline46mondego>"
"5642splitHere46","2392722splitHere46","class Tree {<newline46mondego><newline46mondego>    private TreeNode root;<newline46mondego><newline46mondego>    // ...<newline46mondego><newline46mondego>    public List<TreeNode> postOrder() {<newline46mondego>        List<TreeNode> nodes = new ArrayList<TreeNode>();  <newline46mondego>        fillList(root, nodes);<newline46mondego>        return nodes;<newline46mondego>    }<newline46mondego><newline46mondego>    private void fillList(TreeNode node, List<TreeNode> nodeList) { // private!<newline46mondego>        if(node != null) {<newline46mondego>            fillList(node.left, nodeList);<newline46mondego>            fillList(node.right, nodeList);<newline46mondego>            nodeList.add(node);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5643splitHere46","2393046splitHere46","HttpServletRequest request = ServletActionContext.getRequest();<newline46mondego>"
"5644splitHere46","2393046splitHere46","String spath = request.getServletPath();<newline46mondego>"
"5645splitHere46","2393046splitHere46","<package name=<doubleQuotes46>userapps<doubleQuotes46> extends=<doubleQuotes46>default<doubleQuotes46> namespace=<doubleQuotes46>/userapps<doubleQuotes46>><newline46mondego>           <action name=<doubleQuotes46>*<doubleQuotes46> class=<doubleQuotes46>path.to.your.ActionClass<doubleQuotes46> method=<doubleQuotes46>processUrl<doubleQuotes46>><newline46mondego>               <result name=<doubleQuotes46>success<doubleQuotes46> type=<doubleQuotes46>redirectAction<doubleQuotes46>><newline46mondego>                   <param name=<doubleQuotes46>actionName<doubleQuotes46>>userpage</param><newline46mondego>                   <param name=<doubleQuotes46>id<doubleQuotes46>>${user.id}</param><newline46mondego>               </result><newline46mondego>           </action><newline46mondego>     </package><newline46mondego>"
"5646splitHere46","2393094splitHere46","GregorianCalendar maxgc = new GregorianCalendar();<newline46mondego>maxgc.setTime(new Date(Long.MAX_VALUE));<newline46mondego><newline46mondego>GregorianCalendar mingc = new GregorianCalendar();<newline46mondego>mingc.setTime(new Date(Long.MIN_VALUE));<newline46mondego>"
"5647splitHere46","2393302splitHere46","Toolkit tk = Toolkit.getDefaultToolkit();<newline46mondego>URL url = getClass().getResource(<doubleQuotes46>path/to/img.png<doubleQuotes46>);<newline46mondego>Image img = tk.createImage(url);<newline46mondego>tk.prepareImage(img, -1, -1, null);<newline46mondego>"
"5648splitHere46","2393353splitHere46","minute"
"5649splitHere46","2393353splitHere46","hour"
"5650splitHere46","2393353splitHere46","main"
"5651splitHere46","2393353splitHere46","printTime(11, 30);<newline46mondego>"
"5652splitHere46","2393431splitHere46","message=<doubleQuotes46>false<doubleQuotes46>"
"5653splitHere46","2393431splitHere46","<html:messages />"
"5654splitHere46","2393431splitHere46","ActionMessages"
"5655splitHere46","2393431splitHere46","saveErrors"
"5656splitHere46","2393431splitHere46","<logic:messagesPresent message=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>                        <html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>                            <logic:present name=<doubleQuotes46>aMsg<doubleQuotes46>><newline46mondego>                                <!-- Error --><newline46mondego>                                <div class=<doubleQuotes46>error<doubleQuotes46>><newline46mondego>                                    <bean:write name=<doubleQuotes46>aMsg<doubleQuotes46> filter=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>                                </div><newline46mondego>                            </logic:present><newline46mondego>                        </html:messages><newline46mondego>                    </logic:messagesPresent><newline46mondego>"
"5657splitHere46","2393431splitHere46","<html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>false<doubleQuotes46>>"
"5658splitHere46","2393431splitHere46","saveErrors"
"5659splitHere46","2393431splitHere46","<html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>true<doubleQuotes46>>"
"5660splitHere46","2393431splitHere46","saveMessages"
"5661splitHere46","2393431splitHere46","ActionErrors"
"5662splitHere46","2393431splitHere46","ActionMessages"
"5663splitHere46","2393707splitHere46","System.setProperty(<doubleQuotes46>net.sf.ehcache.enableShutdownHook<doubleQuotes46>,<doubleQuotes46>true<doubleQuotes46>);"
"5664splitHere46","2393707splitHere46","java -Dnet.sf.ehcache.enableShutdownHook=true ..."
"5665splitHere46","2393708splitHere46","-jar"
"5666splitHere46","2393708splitHere46","java"
"5667splitHere46","2393708splitHere46","CLASSPATH"
"5668splitHere46","2393708splitHere46","-cp"
"5669splitHere46","2393708splitHere46","java -jar JarWithEverything.jar"
"5670splitHere46","2393708splitHere46","java -cp <doubleQuotes46>C:\Program Files\Java\externaljars\ParserUtilities.jar<doubleQuotes46>;<doubleQuotes46>C:\Program Files\Java\externaljars\Parser.jar<doubleQuotes46> com.artificialmed.Initialize"
"5671splitHere46","2393708splitHere46","CLASSPATH"
"5672splitHere46","2393748splitHere46","Map"
"5673splitHere46","2393748splitHere46","Map<Set<String>, Object> map  = new HashMap<Set<String>, Object>();<newline46mondego><newline46mondego>   Set<String> key1 = new HashSet<String>();<newline46mondego>   key1.add( <doubleQuotes46>hello<doubleQuotes46>);<newline46mondego><newline46mondego>   Set<String> key2 = new HashSet<String>();<newline46mondego>   key2.add( <doubleQuotes46>hello2<doubleQuotes46>);<newline46mondego><newline46mondego>   Set<String> key2clone = new HashSet<String>();<newline46mondego>   key2clone.add( <doubleQuotes46>hello2<doubleQuotes46>);<newline46mondego><newline46mondego>   map.put( key1, new Object() );<newline46mondego>   map.put( key2, new Object() );<newline46mondego><newline46mondego>   System.out.println( map.containsKey(key1)); // true<newline46mondego>   System.out.println( map.containsKey(key2)); // true<newline46mondego>   System.out.println( map.containsKey(key2clone)); // true<newline46mondego><newline46mondego>   key2.add( <doubleQuotes46>mutate<doubleQuotes46> );<newline46mondego><newline46mondego>   System.out.println( map.containsKey(key1)); // true<newline46mondego>   System.out.println( map.containsKey(key2)); // false<newline46mondego>   System.out.println( map.containsKey(key2clone)); // false (*)<newline46mondego><newline46mondego>   key2.remove( <doubleQuotes46>mutate<doubleQuotes46> );<newline46mondego><newline46mondego>   System.out.println( map.containsKey(key1)); // true<newline46mondego>   System.out.println( map.containsKey(key2)); // true<newline46mondego>   System.out.println( map.containsKey(key2clone)); // true<newline46mondego>"
"5674splitHere46","2393748splitHere46","key2"
"5675splitHere46","2393748splitHere46","*"
"5676splitHere46","2393769splitHere46","ServiceAnnouncer"
"5677splitHere46","2393769splitHere46","DNSSD.register()"
"5678splitHere46","2393769splitHere46","RegisterListener"
"5679splitHere46","2393769splitHere46","DNSSD"
"5680splitHere46","2393769splitHere46","ServiceAnnouncer"
"5681splitHere46","2393910splitHere46","try<newline46mondego>{<newline46mondego>    operationWhichMightThrow();<newline46mondego>}<newline46mondego>catch (ArrayIndexOutOfBoundsException e)<newline46mondego>{<newline46mondego>    log.warning(<doubleQuotes46>Failed file <doubleQuotes46> + filename, e);<newline46mondego>    // Do whatever you need to continue to the next file.<newline46mondego>}<newline46mondego>"
"5682splitHere46","2393916splitHere46","x += expr;<newline46mondego>"
"5683splitHere46","2393916splitHere46","x = x + (expr);<newline46mondego>"
"5684splitHere46","2393916splitHere46","x = x + (2 * 5);<newline46mondego>"
"5685splitHere46","2393916splitHere46","x"
"5686splitHere46","2393934splitHere46","swap(x,y)"
"5687splitHere46","2393992splitHere46","boolean"
"5688splitHere46","2393992splitHere46","if"
"5689splitHere46","2393992splitHere46","boolean"
"5690splitHere46","2393992splitHere46","int a;<newline46mondego><newline46mondego>a = 1;<newline46mondego>if (a) { }<newline46mondego>"
"5691splitHere46","2393992splitHere46","boolean b;<newline46mondego><newline46mondego>b = true;<newline46mondego>if (b) { }<newline46mondego>"
"5692splitHere46","2393992splitHere46","if (b)"
"5693splitHere46","2393992splitHere46","if (b == true)"
"5694splitHere46","2393992splitHere46","if (!b)"
"5695splitHere46","2393992splitHere46","if (b == false)"
"5696splitHere46","2393992splitHere46","if (b == c"
"5697splitHere46","2393992splitHere46","b"
"5698splitHere46","2393992splitHere46","c"
"5699splitHere46","2393992splitHere46","boolean"
"5700splitHere46","2393992splitHere46","if"
"5701splitHere46","2393992splitHere46","while"
"5702splitHere46","2393992splitHere46","boolean"
"5703splitHere46","2393992splitHere46","String line;<newline46mondego>while ((line = reader.readLine()) != null)<newline46mondego>{<newline46mondego>    // Do something with a line<newline46mondego>}<newline46mondego>"
"5704splitHere46","2393992splitHere46","InputStream.read"
"5705splitHere46","2394207splitHere46","/WEB-INF/lib"
"5706splitHere46","2394207splitHere46","/WEB-INF/tld/"
"5707splitHere46","2394207splitHere46","<web-app>"
"5708splitHere46","2394207splitHere46","<jsp-config><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/struts-bean.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/struts-bean.tld</taglib-location><newline46mondego>    </taglib><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/struts-html.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/struts-html.tld</taglib-location><newline46mondego>    </taglib><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/struts-logic.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/struts-logic.tld</taglib-location><newline46mondego>    </taglib><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/struts-nested.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/struts-nested.tld</taglib-location><newline46mondego>    </taglib><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/struts-tiles.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/struts-tiles.tld</taglib-location><newline46mondego>    </taglib><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/sslext.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/sslext.tld</taglib-location><newline46mondego>    </taglib><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>/WEB-INF/struts-layout.tld</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/struts-layout.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <!-- Sun's JSTL --><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/fn</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/fn.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/fmt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/fmt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/fmt-1-0</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/fmt-1_0.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/fmt-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/fmt-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/fmt-1-0-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/fmt-1_0-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/core</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/c.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/core-1-0</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/c-1_0.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/core-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/c-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/core-1-0-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/c-1_0-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/sql</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/sql.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/sql-1-0</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/sql-1_0.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/sql-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/sql-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/sql-1-0-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/sql-1_0-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/x</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/x.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/x-1-0</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/x-1_0.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/x-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/x-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego><newline46mondego>    <taglib><newline46mondego>        <taglib-uri>http://java.sun.com/jstl/x-1-0-rt</taglib-uri><newline46mondego>        <taglib-location>/WEB-INF/tld/x-1_0-rt.tld</taglib-location><newline46mondego>    </taglib><newline46mondego></jsp-config><newline46mondego>"
"5709splitHere46","2394207splitHere46","<taglib-uri>"
"5710splitHere46","2394207splitHere46","<taglib-location>"
"5711splitHere46","2394207splitHere46","<%@ taglib uri=<doubleQuotes46>/WEB-INF/struts-html.tld<doubleQuotes46> prefix=<doubleQuotes46>html<doubleQuotes46> %><newline46mondego><%@ taglib uri=<doubleQuotes46>/WEB-INF/struts-bean.tld<doubleQuotes46> prefix=<doubleQuotes46>bean<doubleQuotes46> %><newline46mondego><%@ taglib uri=<doubleQuotes46>/WEB-INF/struts-logic.tld<doubleQuotes46> prefix=<doubleQuotes46>logic<doubleQuotes46> %><newline46mondego><%@ taglib uri=<doubleQuotes46>/WEB-INF/struts-layout.tld<doubleQuotes46> prefix=<doubleQuotes46>layout<doubleQuotes46>%><newline46mondego><%@ taglib uri=<doubleQuotes46>http://java.sun.com/jstl/core<doubleQuotes46> prefix=<doubleQuotes46>c<doubleQuotes46> %><newline46mondego><%@ taglib uri=<doubleQuotes46>http://java.sun.com/jstl/fmt<doubleQuotes46> prefix=<doubleQuotes46>fmt<doubleQuotes46> %><newline46mondego><%@ taglib uri=<doubleQuotes46>http://java.sun.com/jstl/fn<doubleQuotes46> prefix=<doubleQuotes46>fn<doubleQuotes46> %><newline46mondego>"
"5712splitHere46","2394286splitHere46","GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().createCompatibleImage(width,height,Transparency.TRANSLUCENT)<newline46mondego>"
"5713splitHere46","2394286splitHere46","import javax.imageio.ImageIO;<newline46mondego>import java.awt.*;<newline46mondego>import java.awt.image.BufferedImage;<newline46mondego>import java.awt.image.RenderedImage;<newline46mondego>import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>public class SO {<newline46mondego><newline46mondego>    public static void main( final String[] args ) {<newline46mondego>        final BufferedImage img = map( 320, 160 );<newline46mondego>        savePNG( img, <doubleQuotes46>/tmp/test.png<doubleQuotes46> );<newline46mondego>    }<newline46mondego><newline46mondego>    private static BufferedImage map( int sizeX, int sizeY ){<newline46mondego>        final BufferedImage res = new BufferedImage( sizeX, sizeY, BufferedImage.TYPE_INT_RGB );<newline46mondego>        //set all pixels of bufImage to white<newline46mondego>        for (int x = 0; x < sizeX; x++){<newline46mondego>            for (int y = 0; y < sizeY; y++){<newline46mondego>                res.setRGB(x, y, Color.WHITE.getRGB() );<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return res;<newline46mondego>    }<newline46mondego><newline46mondego>    private static void savePNG( final BufferedImage bi, final String path ){<newline46mondego>        try {<newline46mondego>            RenderedImage rendImage = bi;<newline46mondego>            //ImageIO.write(rendImage, <doubleQuotes46>bmp<doubleQuotes46>, new File(bmpPath));<newline46mondego>            ImageIO.write(rendImage, <doubleQuotes46>PNG<doubleQuotes46>, new File(path));<newline46mondego>            //ImageIO.write(rendImage, <doubleQuotes46>jpeg<doubleQuotes46>, new File(jpegPath));<newline46mondego>        } catch ( IOException e) {<newline46mondego>            // TODO Auto-generated catch block<newline46mondego>            e.printStackTrace();<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5714splitHere46","2394286splitHere46","res.setRGB(x, y, Color.WHITE.getRGB() );<newline46mondego>"
"5715splitHere46","2394286splitHere46","res.setRGB(x, y, 0xFFFFFFFF );<newline46mondego>"
"5716splitHere46","2394313splitHere46","a[]"
"5717splitHere46","2394313splitHere46","PolyMult(a1, b1, c1, n1, N)"
"5718splitHere46","2394313splitHere46","a1[]"
"5719splitHere46","2394325splitHere46","struts-taglib-1.3.10.jar/META-INF/tld/struts-html.tld"
"5720splitHere46","2394325splitHere46","struts-1.3.10-lib.zip"
"5721splitHere46","2394325splitHere46","struts-1.2.9-lib.zip"
"5722splitHere46","2394325splitHere46","struts2-core-2.1.8.1.jar/META-INF/struts-tags.tld"
"5723splitHere46","2394409splitHere46","toString()"
"5724splitHere46","2394409splitHere46","String.valueOf(color.getRGB())"
"5725splitHere46","2394465splitHere46","public class Elvis implements Serializable {<newline46mondego>    public static final Elvis INSTANCE = new Elvis();<newline46mondego>    private Elvis() { }<newline46mondego>    private final String[] favoriteSongs =<newline46mondego>        { <doubleQuotes46>Hound Dog<doubleQuotes46>, <doubleQuotes46>Heartbreak Hotel<doubleQuotes46> };<newline46mondego>    public void printFavorites() {<newline46mondego>        System.out.println(Arrays.toString(favoriteSongs));<newline46mondego>    }<newline46mondego>    private Object readResolve() {<newline46mondego>        return INSTANCE;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5726splitHere46","2394465splitHere46","// readResolve for instance control - you can do better!<newline46mondego>private Object readResolve() {<newline46mondego>  // Return the one true Elvis and let the garbage collector<newline46mondego>  // take care of the Elvis impersonator.<newline46mondego>  return INSTANCE;<newline46mondego>}<newline46mondego>"
"5727splitHere46","2394465splitHere46","readResolve()"
"5728splitHere46","2394468splitHere46","java.exe"
"5729splitHere46","2394471splitHere46","Pattern p = Pattern.compile(<doubleQuotes46><.*?><doubleQuotes46>);<newline46mondego>Matcher m = p.matcher(htmlString);<newline46mondego>while (m.find()) {<newline46mondego>  System.out.println(m.group());<newline46mondego>}<newline46mondego>"
"5730splitHere46","2394471splitHere46",">"
"5731splitHere46","2394548splitHere46","TreeCellRenderer"
"5732splitHere46","2394548splitHere46","JTree"
"5733splitHere46","2394548splitHere46","JTree"
"5734splitHere46","2394548splitHere46","DefaultTreeCellRenderer"
"5735splitHere46","2394548splitHere46","DefaultTreeCellRenderer"
"5736splitHere46","2394548splitHere46","tree = new JTree(root);<newline46mondego>if (tree.getCellRenderer() instanceof DefaultTreeCellRenderer)<newline46mondego>{<newline46mondego>    final DefaultTreeCellRenderer renderer = <newline46mondego>        (DefaultTreeCellRenderer)(tree.getCellRenderer());<newline46mondego>    renderer.setBackgroundNonSelectionColor(Color.YELLOW);<newline46mondego>    renderer.setBackgroundSelectionColor(Color.ORANGE);<newline46mondego>    renderer.setTextNonSelectionColor(Color.RED);<newline46mondego>    renderer.setTextSelectionColor(Color.BLUE);<newline46mondego>}<newline46mondego>else<newline46mondego>{<newline46mondego>    System.err.println(<doubleQuotes46>Sorry, no special colors today.<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5737splitHere46","2394637splitHere46","log4j.logger.java.sql.Connection=DEBUG<newline46mondego>log4j.logger.java.sql.PreparedStatement=DEBUG<newline46mondego>"
"5738splitHere46","2394744splitHere46","findViewById"
"5739splitHere46","2394744splitHere46","View"
"5740splitHere46","2394744splitHere46","View"
"5741splitHere46","2394744splitHere46","Button myButton = (Button) findViewById(R.id.button);<newline46mondego>                     ^ casting   ^ returns the View of your button.<newline46mondego>"
"5742splitHere46","2394797splitHere46","public static void doingSomething(){<newline46mondego>    try {<newline46mondego>        if (something[i] >= something_else) { ... }<newline46mondego>    } catch (ArrayIndexOutOfBoundsException e) {<newline46mondego>        System.out.println(<doubleQuotes46>Method Halted!, continuing doing the next thing<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5743splitHere46","2394797splitHere46","throw"
"5744splitHere46","2394797splitHere46","null"
"5745splitHere46","2394797splitHere46","catch"
"5746splitHere46","2394797splitHere46","a()"
"5747splitHere46","2394797splitHere46","b()"
"5748splitHere46","2394797splitHere46","c()"
"5749splitHere46","2394797splitHere46","c()"
"5750splitHere46","2394797splitHere46","b()"
"5751splitHere46","2394797splitHere46","c()"
"5752splitHere46","2394797splitHere46","a()"
"5753splitHere46","2394797splitHere46","void a() {<newline46mondego>    try {<newline46mondego>        b();<newline46mondego>    catch (SomeExceptionClass e) {<newline46mondego>        // Handle<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5754splitHere46","2394797splitHere46","public static void doingSomething(){<newline46mondego>    if (i >= something.length) {<newline46mondego>        System.out.println(<doubleQuotes46>Method Halted!, continuing doing the next thing<doubleQuotes46>);<newline46mondego>    } else {<newline46mondego>        if (something[i] >= something_else) { ... }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5755splitHere46","2394916splitHere46","public class Main {<newline46mondego><newline46mondego>    public static void foo(String a){<newline46mondego>        a=<doubleQuotes46>2<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        String x=<doubleQuotes46>1<doubleQuotes46>;<newline46mondego>        foo(x);<newline46mondego>        System.out.println(<doubleQuotes46>x=<doubleQuotes46>+x);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5756splitHere46","2394916splitHere46","a = <doubleQuotes46>2<doubleQuotes46>"
"5757splitHere46","2395058splitHere46","\org\xmlvm\iphone"
"5758splitHere46","2395058splitHere46","[source folder]\org\xmlvm\iphone"
"5759splitHere46","2395059splitHere46","java.awt.image.BufferedImage"
"5760splitHere46","2395059splitHere46","createGraphics"
"5761splitHere46","2395059splitHere46","Graphics"
"5762splitHere46","2395059splitHere46","update(Graphics)"
"5763splitHere46","2395059splitHere46","BufferedImage"
"5764splitHere46","2395221splitHere46","<s:checkbox cssClass=<doubleQuotes46>mycheckbox<doubleQuotes46> label=<doubleQuotes46>checkbox test<doubleQuotes46> name=<doubleQuotes46>checkboxField1<doubleQuotes46> value=<doubleQuotes46>aBoolean<doubleQuotes46> fieldValue=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>"
"5765splitHere46","2395221splitHere46","<style><newline46mondego>      .mycheckbox{<newline46mondego>        /* Your style here */<newline46mondego>      }<newline46mondego><newline46mondego>  </style><newline46mondego>"
"5766splitHere46","2395254splitHere46","backgroundPanel.setPreferredSize(new Dimension(<newline46mondego>    backgroundImage.getIconWidth(), backgroundImage.getIconHeight()));<newline46mondego>"
"5767splitHere46","2395254splitHere46","setBounds()"
"5768splitHere46","2395254splitHere46","import javax.swing.*;<newline46mondego>import java.awt.*;<newline46mondego><newline46mondego>public class ImageTest {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego><newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        JLabel label = new JLabel(new ElliptIcon(380, 260, Color.red));<newline46mondego>        label.setLayout(new GridLayout(2, 2));<newline46mondego>        frame.setContentPane(label);<newline46mondego><newline46mondego>        for (int i = 0; i < 4; i++) {<newline46mondego>            label.add(new JLabel(new ElliptIcon(100, 60, Color.blue)));<newline46mondego>        }<newline46mondego><newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class ElliptIcon implements Icon {<newline46mondego><newline46mondego>        private int w, h;<newline46mondego>        private Color color;<newline46mondego><newline46mondego>        public ElliptIcon(int w, int h, Color color) {<newline46mondego>            this.w = w;<newline46mondego>            this.h = h;<newline46mondego>            this.color = color;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void paintIcon(Component c, Graphics g, int x, int y) {<newline46mondego>            g.setColor(color);<newline46mondego>            g.fillOval(x, y, w, h);<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getIconWidth() { return w; }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public int getIconHeight() { return h; }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5769splitHere46","2395270splitHere46","setListAdapter(new ArrayAdapter<String>(this, R.layout.list_item, COUNTRIES));  <newline46mondego>ListView lv = getListView();<newline46mondego>"
"5770splitHere46","2395306splitHere46","public Pair<Integer,Integer> getLowHighTemp() {<newline46mondego>    int                        low,hgh;<newline46mondego><newline46mondego>    // do stuff... <newline46mondego>    return new Pair(low,hgh);<newline46mondego>    }<newline46mondego>"
"5771splitHere46","2395381splitHere46","Panel p = createPanel();<newline46mondego>p.setBounds(...); // if you must<newline46mondego>frame.getContentPane().add(p);<newline46mondego>"
"5772splitHere46","2395381splitHere46","Panel createPanel() {<newline46mondego>  Panel p = new Panel();<newline46mondego>  Label l = new Label(<doubleQuotes46>Heading<doubleQuotes46>);<newline46mondego>  p.add(l);<newline46mondego>  return p;<newline46mondego>}<newline46mondego>"
"5773splitHere46","2395381splitHere46","add"
"5774splitHere46","2395518splitHere46","static boolean fourNumbersInARow(List<Integer> list) {<newline46mondego>    int last = 0xFACADE;  // can be any number<newline46mondego>    int count = 0;        // important!<newline46mondego>    for (int i : list) {<newline46mondego>        if (i == last + 1) {<newline46mondego>            if (++count == 4) return true;<newline46mondego>        } else {<newline46mondego>            count = 1;<newline46mondego>        }<newline46mondego>        last = i;<newline46mondego>    }<newline46mondego>    return false;<newline46mondego>}<newline46mondego>"
"5775splitHere46","2395518splitHere46","1"
"5776splitHere46","2395518splitHere46","1"
"5777splitHere46","2395620splitHere46","String d = c.get(Calendar.YEAR) + <doubleQuotes46>-<doubleQuotes46> + c.get(Calendar.MONTH) + <doubleQuotes46>-<doubleQuotes46> + c.get(Calendar.DATE)<newline46mondego>"
"5778splitHere46","2395727splitHere46","public class EdgeModel extends AbstractCollection<Edge> implements Observable {<newline46mondego>    private List<Edge> edges = new ArrayList<Edge>();<newline46mondego>    @Override public Iterator<Edge> iterator() { return edges.iterator(); }<newline46mondego>    @Override public int size() { return edges.size(); }<newline46mondego>    @Override public boolean add(Edge edge) {<newline46mondego>        if (edges.add(edge)) {<newline46mondego>            this.notifyObservers();<newline46mondego>            return true;<newline46mondego>        }<newline46mondego>        return false;<newline46mondego>    }<newline46mondego><newline46mondego>    // other stuff for Observable<newline46mondego>}<newline46mondego><newline46mondego>public class EdgeView implements Observer {<newline46mondego>    public void setModel(EdgeModel model) {<newline46mondego>        model.addObserver(this);<newline46mondego>    }<newline46mondego>    public void update(Observable o, Object arg) {<newline46mondego>        // model o has changed... update something visual I guess<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5779splitHere46","2395789splitHere46","<tags>"
"5780splitHere46","2395789splitHere46","<script>"
"5781splitHere46","2395789splitHere46","<style>"
"5782splitHere46","2395789splitHere46","<"
"5783splitHere46","2395789splitHere46","<textarea name=<doubleQuotes46>page_content<doubleQuotes46>><newline46mondego>    &lt;html><newline46mondego>        ...<newline46mondego>    &lt;/html><newline46mondego></textarea><newline46mondego>"
"5784splitHere46","2395824splitHere46","InputStream csv = <newline46mondego>   SomeClassInTheSamePackage.class.getResourceAsStream(<doubleQuotes46>filename.csv<doubleQuotes46>);<newline46mondego>"
"5785splitHere46","2396008splitHere46","print(str);"
"5786splitHere46","2396008splitHere46","println(str);"
"5787splitHere46","2396331splitHere46","date.set(2010, Calendar.MARCH, 7);<newline46mondego>"
"5788splitHere46","2396518splitHere46","WSServlet"
"5789splitHere46","2396518splitHere46","web.xml"
"5790splitHere46","2396518splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><web-app version=<doubleQuotes46>2.5<doubleQuotes46> xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<doubleQuotes46>><newline46mondego>  <listener><newline46mondego>    <listener-class><newline46mondego>    com.sun.xml.ws.transport.http.servlet.WSServletContextListener<newline46mondego>    </listener-class><newline46mondego>  </listener><newline46mondego>  <servlet><newline46mondego>    <servlet-name>WebServicePort</servlet-name><newline46mondego>    <servlet-class><newline46mondego>    com.sun.xml.ws.transport.http.servlet.WSServlet<newline46mondego>    </servlet-class><newline46mondego>    <load-on-startup>1</load-on-startup><newline46mondego>  </servlet><newline46mondego>  <servlet-mapping><newline46mondego>    <servlet-name>WebServicePort</servlet-name><newline46mondego>    <url-pattern>/services/*</url-pattern><newline46mondego>  </servlet-mapping><newline46mondego>  <session-config><newline46mondego>    <session-timeout>60</session-timeout><newline46mondego>  </session-config><newline46mondego></web-app><newline46mondego>"
"5791splitHere46","2396518splitHere46","sun-jaxws.xml"
"5792splitHere46","2396518splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><endpoints xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/jax-ws/ri/runtime<doubleQuotes46> version=<doubleQuotes46>2.0<doubleQuotes46>><newline46mondego>  <endpoint<newline46mondego>  name=<doubleQuotes46>MyHello<doubleQuotes46><newline46mondego>  implementation=<doubleQuotes46>hello.HelloImpl<doubleQuotes46><newline46mondego>  url-pattern=<doubleQuotes46>/hello<doubleQuotes46><newline46mondego>  /><newline46mondego></endpoints><newline46mondego>"
"5793splitHere46","2396518splitHere46","http://localhost:8080/<mycontext>/services/hello?wsdl<newline46mondego>           A               B         C       D<newline46mondego>"
"5794splitHere46","2396544splitHere46","c.o.x.u.c.ReloadingClassLoader"
"5795splitHere46","2396740splitHere46","temp.setLength(0);"
"5796splitHere46","2396740splitHere46","temp = new StringBuffer();"
"5797splitHere46","2396759splitHere46","import org.javaguy.coolframework.MyClass<newline46mondego>"
"5798splitHere46","2396759splitHere46","import org.javaguy.coolframework.*<newline46mondego>"
"5799splitHere46","2396759splitHere46","mine = MyClass.new();<newline46mondego>"
"5800splitHere46","2396759splitHere46","export CLASSPATH=/home/myaccount/myproject/lib/CoolFramework.jar:/home/myaccount/myproject/output/<newline46mondego>"
"5801splitHere46","2396759splitHere46","java -cp <doubleQuotes46>/home/myaccount/myproject/lib/CoolFramework.jar:/home/myaccount/myproject/output/<doubleQuotes46>  MyMainClass<newline46mondego>"
"5802splitHere46","2396845splitHere46","."
"5803splitHere46","2396845splitHere46","content"
"5804splitHere46","2396845splitHere46","matches"
"5805splitHere46","2396845splitHere46","contains"
"5806splitHere46","2396845splitHere46","String s = <doubleQuotes46>foo\nbar<doubleQuotes46>;<newline46mondego>System.out.println(s.matches(<doubleQuotes46>.*<doubleQuotes46>));       // false<newline46mondego>System.out.println(s.matches(<doubleQuotes46>foo<doubleQuotes46>));      // false<newline46mondego>System.out.println(s.matches(<doubleQuotes46>foo\nbar<doubleQuotes46>)); // true<newline46mondego>System.out.println(s.matches(<doubleQuotes46>(?s).*<doubleQuotes46>));   // true<newline46mondego>"
"5807splitHere46","2396845splitHere46","(?s)"
"5808splitHere46","2396845splitHere46","."
"5809splitHere46","2396845splitHere46","(?s).*"
"5810splitHere46","2396848splitHere46","uname -a"
"5811splitHere46","2396855splitHere46","SELECT name, flag<newline46mondego>FROM  'table'<newline46mondego>ORDER BY<newline46mondego>    flag desc,<newline46mondego>    CASE WHEN flag = 1 THEN name ELSE '' END,<newline46mondego>    CASE WHEN flag = 0 THEN name ELSE '' END DESC<newline46mondego>"
"5812splitHere46","2396913splitHere46","java -version"
"5813splitHere46","2396913splitHere46","XMLConstants.W3C_XML_SCHEMA_NS_URI"
"5814splitHere46","2396934splitHere46","strip_tags()"
"5815splitHere46","2396934splitHere46","html_entity_decode()"
"5816splitHere46","2396934splitHere46","ö"
"5817splitHere46","2396934splitHere46","<title>Analyse: Dem Mutigen geh<F6>rt die Urne</title><newline46mondego>"
"5818splitHere46","2396979splitHere46","multipart/form-data"
"5819splitHere46","2396979splitHere46","post"
"5820splitHere46","2396979splitHere46","multipart/form-data"
"5821splitHere46","2396979splitHere46","<form method=<doubleQuotes46>post<doubleQuotes46> enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>"
"5822splitHere46","2396979splitHere46","<form>"
"5823splitHere46","2396979splitHere46","<html:form>"
"5824splitHere46","2396979splitHere46","<html:file>"
"5825splitHere46","2396979splitHere46","org.apache.struts.upload.FormFile"
"5826splitHere46","2397054splitHere46","Hashtable"
"5827splitHere46","2397054splitHere46","List"
"5828splitHere46","2397054splitHere46","List"
"5829splitHere46","2397054splitHere46","List"
"5830splitHere46","2397054splitHere46","get"
"5831splitHere46","2397054splitHere46","Hashtable"
"5832splitHere46","2397054splitHere46","HashMap"
"5833splitHere46","2397054splitHere46","HashMap"
"5834splitHere46","2397054splitHere46","Hashtable"
"5835splitHere46","2397054splitHere46","public static void main(String... arg) {<newline46mondego>    HashMap<String, Object> x = new HashMap<String, Object>();<newline46mondego>    x.put(<doubleQuotes46>second<doubleQuotes46>, <doubleQuotes46> ordered!<doubleQuotes46>);<newline46mondego>    x.put(<doubleQuotes46>first<doubleQuotes46>, <doubleQuotes46>Correctly<doubleQuotes46>);<newline46mondego><newline46mondego>    LinkedList<String> keys = new LinkedList<String>();<newline46mondego>    for(final String f : x.keySet()) {<newline46mondego>        keys.add(f);<newline46mondego>    }<newline46mondego>    Collections.sort(keys, new Comparator<String>() {<newline46mondego>        public int compare(String first, String second) {<newline46mondego>            // return -1 is <doubleQuotes46>first <  second<doubleQuotes46><newline46mondego>            // return 1  is <doubleQuotes46>first >  second<doubleQuotes46><newline46mondego>            // return 0  is <doubleQuotes46>first == second<doubleQuotes46><newline46mondego>            return first.compareTo(second);<newline46mondego>        }<newline46mondego>    });<newline46mondego><newline46mondego>    for(final String f : keys) {<newline46mondego>        System.out.print(x.get(f));<newline46mondego>    }<newline46mondego>    System.out.println();<newline46mondego>}<newline46mondego>"
"5836splitHere46","2397054splitHere46","keys"
"5837splitHere46","2397054splitHere46","Comparator"
"5838splitHere46","2397054splitHere46","Comparator"
"5839splitHere46","2397054splitHere46","Comparator"
"5840splitHere46","2397054splitHere46","Collections.sort(keys);<newline46mondego>"
"5841splitHere46","2397054splitHere46","Comparator"
"5842splitHere46","2397054splitHere46","Comparator"
"5843splitHere46","2397054splitHere46","Comparator"
"5844splitHere46","2397077splitHere46","SwingUtilities"
"5845splitHere46","2397077splitHere46","convertPointToScreen()"
"5846splitHere46","2397077splitHere46","convertPointFromScreen()"
"5847splitHere46","2397077splitHere46","public class MyPanel extends JPanel {<newline46mondego><newline46mondego>    public MyPanel() {<newline46mondego>        super(new GridLayout(4, 4));<newline46mondego>        for (int i = 0; i < 16; i++) {<newline46mondego>            JPanel panel = new JPanel(new GridLayout());<newline46mondego>            panel.add(new CenterLabel());<newline46mondego>            this.add(panel);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private static void create() {<newline46mondego>        JFrame f = new JFrame();<newline46mondego>        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        f.add(new MyPanel());<newline46mondego>        f.pack();<newline46mondego>        f.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        EventQueue.invokeLater(new Runnable() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                create();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego><newline46mondego>    private static class CenterLabel extends JLabel {<newline46mondego><newline46mondego>        public CenterLabel() {<newline46mondego>            this.setHorizontalAlignment(JLabel.CENTER);<newline46mondego>            this.setVerticalAlignment(JLabel.CENTER);<newline46mondego>            this.setOpaque(true);<newline46mondego>            this.setBackground(Color.lightGray);<newline46mondego>            this.setBorder(BorderFactory.createLineBorder(Color.blue));<newline46mondego>            this.setPreferredSize(new Dimension(160, 100));<newline46mondego>            this.addComponentListener(new ComponentAdapter() {<newline46mondego><newline46mondego>                @Override<newline46mondego>                public void componentResized(ComponentEvent e) {<newline46mondego>                    int w = e.getComponent().getWidth();<newline46mondego>                    int h = e.getComponent().getHeight();<newline46mondego>                    CenterLabel.this.setText(<doubleQuotes46>[<doubleQuotes46> + w/2 + <doubleQuotes46>\u253C<doubleQuotes46> + h/2 + <doubleQuotes46>]<doubleQuotes46>);<newline46mondego>                }<newline46mondego>            });<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5848splitHere46","2397094splitHere46","flipFlop(String str, int i, int j)"
"5849splitHere46","2397139splitHere46","fruit:apple\nfruit:orange\nfruit:grape"
"5850splitHere46","2397222splitHere46","awt"
"5851splitHere46","2397222splitHere46","imageio"
"5852splitHere46","2397366splitHere46","int"
"5853splitHere46","2397366splitHere46","Integer"
"5854splitHere46","2397366splitHere46","Number"
"5855splitHere46","2397366splitHere46","List"
"5856splitHere46","2397366splitHere46","List"
"5857splitHere46","2397366splitHere46","List"
"5858splitHere46","2397366splitHere46","Collections"
"5859splitHere46","2397367splitHere46","for (int x = 0; list.size(); x++)<newline46mondego>{<newline46mondego>  obj = list.get(x);<newline46mondego>  if (obj.isExpired())<newline46mondego>  {<newline46mondego>    list.remove(obj);<newline46mondego>    // Oops! list.get(x) now points to some other object so if I <newline46mondego>    // increase x again before checking that object I will have <newline46mondego>    // skipped one item in the list<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5860splitHere46","2397565splitHere46","StringBuffer results = new StringBuffer();<newline46mondego>String separator = <doubleQuotes46>,<doubleQuotes46><newline46mondego>float[][] values = new float[50][50];<newline46mondego><newline46mondego>// init values<newline46mondego><newline46mondego>for (int i = 0; i < values.length; ++i)<newline46mondego>{<newline46mondego>  result.append('[');<newline46mondego>  for (int j = 0; j < values[i].length; ++j)<newline46mondego>    if (j > 0)<newline46mondego>      result.append(values[i][j]);<newline46mondego>    else<newline46mondego>      result.append(values[i][j]).append(separator);<newline46mondego>  result.append(']');<newline46mondego>}<newline46mondego>"
"5861splitHere46","2397565splitHere46","StringBuffer"
"5862splitHere46","2397565splitHere46","buffer.append(..).append(..).append(..)"
"5863splitHere46","2397565splitHere46","StringBuffer"
"5864splitHere46","2397747splitHere46","private int lineCount; {<newline46mondego>    try{<newline46mondego>        lineCount = LineCounter.countLines(sFileName);<newline46mondego>        /*^^^^^^^*/<newline46mondego>    }<newline46mondego>    catch(IOException ex){<newline46mondego>        System.out.println (ex.toString());<newline46mondego>        System.out.println(<doubleQuotes46>Could not find file <doubleQuotes46> + sFileName);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5865splitHere46","2397747splitHere46","countLines"
"5866splitHere46","2397747splitHere46","public static int countLines(String filename) throws IOException {<newline46mondego>    LineNumberReader reader  = new LineNumberReader(new FileReader(filename));<newline46mondego>    while (reader.readLine() != null) {}<newline46mondego>    reader.close();<newline46mondego>    return reader.getLineNumber();<newline46mondego>  }<newline46mondego>"
"5867splitHere46","2397747splitHere46","getLineNumber()"
"5868splitHere46","2397747splitHere46","close()"
"5869splitHere46","2397797splitHere46","c[k] = c[k] + x*M"
"5870splitHere46","2397797splitHere46","-M/2 <= c[k] + x*M <= M/2"
"5871splitHere46","2397797splitHere46","x"
"5872splitHere46","2397830splitHere46","java.text.Normalizer"
"5873splitHere46","2397830splitHere46","public static String removeDiacriticalMarks(String string) {<newline46mondego>    return Normalizer.normalize(string, Form.NFD)<newline46mondego>        .replaceAll(<doubleQuotes46>\\p{InCombiningDiacriticalMarks}+<doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"5874splitHere46","2397830splitHere46","String value = <doubleQuotes46>Joáo<doubleQuotes46>;<newline46mondego>String comparisonMaterial = removeDiacriticalMarks(value); // Joao<newline46mondego>"
"5875splitHere46","2397910splitHere46","parseSomething"
"5876splitHere46","2397910splitHere46","public <T> List<T> parseSomething(Node n){<newline46mondego>  List<T> somethings = new ArrayList<T>();<newline46mondego>  initialize();<newline46mondego>  sameCodeInBothClasses();<newline46mondego>  List<Node> nodes = getChildrenByName(n, <doubleQuotes46>somename<doubleQuotes46>);<newline46mondego>  for(Node n:nodes){<newline46mondego>    method();<newline46mondego>    actionA();<newline46mondego>    somethings.add(new T(actionB());<newline46mondego>  }<newline46mondego>  return somethings;<newline46mondego>}<newline46mondego>"
"5877splitHere46","2397910splitHere46","List<Object>"
"5878splitHere46","2397910splitHere46","Type1"
"5879splitHere46","2397910splitHere46","Type2"
"5880splitHere46","2397910splitHere46","List<Type1>"
"5881splitHere46","2397910splitHere46","List<Type2>"
"5882splitHere46","2397910splitHere46","Type1"
"5883splitHere46","2397910splitHere46","Type2"
"5884splitHere46","2397910splitHere46","List"
"5885splitHere46","2397954splitHere46","static String blow(String s) {<newline46mondego>    String vowels = <doubleQuotes46>aeiouAEIOU<doubleQuotes46>;<newline46mondego>    String middle = s.replaceAll(<doubleQuotes46>[<doubleQuotes46> + vowels + <doubleQuotes46>]<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>    int flip = 0;<newline46mondego>    String[] side = { <doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46> };<newline46mondego>    Scanner sc = new Scanner(s);<newline46mondego>    for (String word; (word = sc.findInLine(<doubleQuotes46>\\s*\\S*<doubleQuotes46>)) != null; ) {<newline46mondego>        side[flip] += word.replaceAll(<doubleQuotes46>.<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>        side[1-flip] += word.replaceAll(<doubleQuotes46>[^<doubleQuotes46> + vowels + <doubleQuotes46>]<doubleQuotes46>, <doubleQuotes46> <doubleQuotes46>);<newline46mondego>        flip = 1-flip;<newline46mondego>    }<newline46mondego>    return String.format(<doubleQuotes46>|%s|%n|%s|%n|%s|<doubleQuotes46>, side[0], middle, side[1]);<newline46mondego>}<newline46mondego>"
"5886splitHere46","2397954splitHere46","|"
"5887splitHere46","2397954splitHere46","middle"
"5888splitHere46","2397954splitHere46","side[0]"
"5889splitHere46","2397954splitHere46","side[1]"
"5890splitHere46","2397954splitHere46","Scanner"
"5891splitHere46","2398143splitHere46","Composite"
"5892splitHere46","2398143splitHere46","Composite"
"5893splitHere46","2398143splitHere46","final Display display = new Display();<newline46mondego>final Shell shell = new Shell(display);<newline46mondego>shell.setText(<doubleQuotes46>Git ToDo<doubleQuotes46>);<newline46mondego>FillLayout layout = new FillLayout();<newline46mondego>shell.setLayout(layout);<newline46mondego><newline46mondego>Composite composite = new Composite(shell, SWT.NONE);<newline46mondego>composite.setLayout(new FillLayout()); // Possible missing layout?<newline46mondego><newline46mondego>final GitToDoTree tableViewer = new GitToDoTree(composite);<newline46mondego>"
"5894splitHere46","2398143splitHere46","TabFolder tabFolder = new TabFolder(shell, SWT.NONE);<newline46mondego>TabItem item = new TabItem(tabFolder, SWT.NONE);<newline46mondego>item.setText(<doubleQuotes46>Table<doubleQuotes46>);<newline46mondego><newline46mondego>GitToDoTree viewer = new GitToDoTree(tabFolder);<newline46mondego>item.setControl(viewer.getTable()); // Possible setControl call?<newline46mondego><newline46mondego>TabItem item2= new TabItem(tabFolder, SWT.NONE);<newline46mondego>item2.setText(<doubleQuotes46>Empty<doubleQuotes46>);<newline46mondego>"
"5895splitHere46","2398335splitHere46","hibernate.jdbc.batch_size 20<newline46mondego>"
"5896splitHere46","2398335splitHere46","flush()"
"5897splitHere46","2398335splitHere46","clear()"
"5898splitHere46","2398335splitHere46","hibernate.jdbc.batch_size"
"5899splitHere46","2398335splitHere46","OutOfMemoryException"
"5900splitHere46","2398335splitHere46","Session session = sessionFactory.openSession();<newline46mondego>Transaction tx = session.beginTransaction();<newline46mondego><newline46mondego>ScrollableResults customers = session.getNamedQuery(<doubleQuotes46>GetCustomers<doubleQuotes46>)<newline46mondego>    .setCacheMode(CacheMode.IGNORE)<newline46mondego>    .scroll(ScrollMode.FORWARD_ONLY);<newline46mondego>int count=0;<newline46mondego>while ( customers.next() ) {<newline46mondego>    Customer customer = (Customer) customers.get(0);<newline46mondego>    customer.updateStuff(...);<newline46mondego>    if ( ++count % 20 == 0 ) {<newline46mondego>        //flush a batch of updates and release memory:<newline46mondego>        session.flush();<newline46mondego>        session.clear();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>tx.commit();<newline46mondego>session.close();<newline46mondego>"
"5901splitHere46","2398335splitHere46","UPDATE FROM? EntityName (WHERE where_conditions)?"
"5902splitHere46","2398335splitHere46","Session session = sessionFactory.openSession();<newline46mondego>Transaction tx = session.beginTransaction();<newline46mondego><newline46mondego>String hqlUpdate = <doubleQuotes46>update Customer c set c.name = :newName where c.name = :oldName<doubleQuotes46>;<newline46mondego>// or String hqlUpdate = <doubleQuotes46>update Customer set name = :newName where name = :oldName<doubleQuotes46>;<newline46mondego>int updatedEntities = s.createQuery( hqlUpdate )<newline46mondego>        .setString( <doubleQuotes46>newName<doubleQuotes46>, newName )<newline46mondego>        .setString( <doubleQuotes46>oldName<doubleQuotes46>, oldName )<newline46mondego>        .executeUpdate();<newline46mondego>tx.commit();<newline46mondego>session.close();<newline46mondego>"
"5903splitHere46","2398335splitHere46","version"
"5904splitHere46","2398335splitHere46","timestamp"
"5905splitHere46","2398335splitHere46","VERSIONED"
"5906splitHere46","2398343splitHere46","Main-class: pro.seek.Test<newline46mondego>"
"5907splitHere46","2398343splitHere46","whatever/pro/seek<newline46mondego>"
"5908splitHere46","2398343splitHere46","whatever/pro/seek/Test.java<newline46mondego>"
"5909splitHere46","2398343splitHere46","Class-Path: antlr-3.1.1-runtime.jar<newline46mondego>"
"5910splitHere46","2398343splitHere46","jar hello.jar -classpath antlr-3.1.1-runtime.jar<newline46mondego>"
"5911splitHere46","2398343splitHere46","public class Truth{<newline46mondego>  static public void showMe(boolean theTruth){<newline46mondego>    if (theTruth)<newline46mondego>       println(<doubleQuotes46>It's a lie<doubleQuotes46>);<newline46mondego>    else<newline46mondego>       println(<doubleQuotes46>Thanks for the truth<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"5912splitHere46","2398343splitHere46","Truth.showMe(false);<newline46mondego>"
"5913splitHere46","2398378splitHere46","Resources#getIdentifier()"
"5914splitHere46","2398488splitHere46","-Dorg.eclipse.jetty.util.log.DEBUG=true"
"5915splitHere46","2398488splitHere46","-DOPTIONS=Server,deploy,jsp"
"5916splitHere46","2398500splitHere46","cusBaseObjectDao::readCustomBaseObjectById()"
"5917splitHere46","2398793splitHere46","newline"
"5918splitHere46","2398793splitHere46","space"
"5919splitHere46","2398793splitHere46","class myData {<newline46mondego><newline46mondego>    var $data;<newline46mondego><newline46mondego>    function myData($d) {<newline46mondego>        $this->data = $d;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    function search($s) {<newline46mondego><newline46mondego>        $results = array();<newline46mondego><newline46mondego>        // loop through our pre-loaded data<newline46mondego>        foreach($this->data as $key => $dataRow) {<newline46mondego><newline46mondego>            // if the value we are looking for is in the data array<newline46mondego>            if(in_array($s, $dataRow)) {<newline46mondego><newline46mondego>                // add it to the results, <newline46mondego>                // keeping the associative key (0, 1, 2, 3 ...)<newline46mondego>                $results[$key] = $dataRow;<newline46mondego><newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return $results;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    static function load($f) {<newline46mondego><newline46mondego>        $contents = file_get_contents($f);<newline46mondego><newline46mondego>        // split the data by new line<newline46mondego>        $dataRows = explode(<doubleQuotes46>\r\n<doubleQuotes46>, $contents);<newline46mondego><newline46mondego>        $data = array();<newline46mondego><newline46mondego><newline46mondego>        foreach($dataRows as $key => $dataRow) {<newline46mondego><newline46mondego>            // split each row by the space character<newline46mondego>            $data[$key] = explode(<doubleQuotes46> <doubleQuotes46>, $dataRow);<newline46mondego><newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        return new myData($data);           <newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"5920splitHere46","2398793splitHere46","data.txt"
"5921splitHere46","2398793splitHere46","$data = myData::load(<doubleQuotes46>data.txt<doubleQuotes46>);<newline46mondego><newline46mondego>$results = $data->search(<doubleQuotes46>3<doubleQuotes46>);<newline46mondego><newline46mondego>// display our result keys<newline46mondego>echo <doubleQuotes46>Found that in <doubleQuotes46> . implode(array_keys($results), <doubleQuotes46>, <doubleQuotes46>) . <doubleQuotes46>\r\n<doubleQuotes46>;<newline46mondego><newline46mondego>// or print the full results<newline46mondego>print_r($results);<newline46mondego>"
"5922splitHere46","2398793splitHere46","Found that in 0, 3, 4<newline46mondego>Array<newline46mondego>(<newline46mondego>    [0] => Array<newline46mondego>        (<newline46mondego>            [0] => 1<newline46mondego>            [1] => 3<newline46mondego>            [2] => 5<newline46mondego>        )<newline46mondego><newline46mondego>    [3] => Array<newline46mondego>        (<newline46mondego>            [0] => 3<newline46mondego>            [1] => 2<newline46mondego>            [2] => 9<newline46mondego>        )<newline46mondego><newline46mondego>    [4] => Array<newline46mondego>        (<newline46mondego>            [0] => 3<newline46mondego>            [1] => 8<newline46mondego>            [2] => 4<newline46mondego>        )<newline46mondego><newline46mondego>)<newline46mondego>"
"5923splitHere46","2398836splitHere46","wget"
"5924splitHere46","2398951splitHere46","sessionFactory.getCurrentSession()"
"5925splitHere46","2398974splitHere46","static int[][] removeRow(int[][] data, int r) {<newline46mondego>    int[][] ret = new int[data.length - 1][];<newline46mondego>    System.arraycopy(data, 0, ret, 0, r);<newline46mondego>    System.arraycopy(data, r+1, ret, r, data.length - r - 1);<newline46mondego>    return ret;<newline46mondego>}<newline46mondego><newline46mondego>static int[][] removeColumn(int[][] data, int c) {<newline46mondego>    for (int r = 0; r < data.length; r++) {<newline46mondego>        int[] row = new int[data[r].length - 1];<newline46mondego>        System.arraycopy(data[r], 0, row, 0, c);<newline46mondego>        System.arraycopy(data[r], c+1, row, c, data[r].length - c - 1);<newline46mondego>        data[r] = row;<newline46mondego>    }<newline46mondego>    return data;<newline46mondego>}<newline46mondego>"
"5926splitHere46","2398986splitHere46","java.lang.IllegalStateException: I/O reactor has been shut down<newline46mondego>"
"5927splitHere46","2399080splitHere46","dynamic-update"
"5928splitHere46","2399080splitHere46","true"
"5929splitHere46","2399080splitHere46","class"
"5930splitHere46","2399080splitHere46","dynamic-update"
"5931splitHere46","2399080splitHere46","false"
"5932splitHere46","2399080splitHere46","@org.hibernate.annotations.Entity"
"5933splitHere46","2399080splitHere46","dynamicUpdate"
"5934splitHere46","2399174splitHere46","int r = ...<newline46mondego>int g = ... <newline46mondego>int b = ...<newline46mondego>float[] hsv = new float[3];<newline46mondego>Color.RGBtoHSB(r,g,b,hsv)<newline46mondego>//hsv contains the desired values<newline46mondego>"
"5935splitHere46","2399313splitHere46","// Adjacency matrix<newline46mondego>int map[21][21] = {<newline46mondego><newline46mondego>/*   A B C D E F G H I L M N O P R S T U V Z */<newline46mondego>  {0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0},<newline46mondego>  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1}, // Arad<newline46mondego>  {2,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0}, // Bucharest<newline46mondego>  {3,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0}, // Craiova<newline46mondego>  {4,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0}, // Dobreta<newline46mondego>  {5,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0}, // Eforie<newline46mondego>  {6,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0}, // Fagaras<newline46mondego>  {7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Girgiu<newline46mondego>  {8,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0}, // Hirsova<newline46mondego>  {9,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0}, // Iasi<newline46mondego>  {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0}, // Lugoj<newline46mondego>  {1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0}, // Mehadia<newline46mondego>  {2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0}, // Neamt<newline46mondego>  {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1}, // Oradea<newline46mondego>  {4,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0}, // Pitesti<newline46mondego>  {5,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0}, // Rimnicu Vilcea<newline46mondego>  {6,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0}, // Sibiu<newline46mondego>  {7,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0}, // Timisoara<newline46mondego>  {8,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0}, // Urziceni<newline46mondego>  {9,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0}, // Vaslui<newline46mondego>  {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0}  // Zerind<newline46mondego>};<newline46mondego>"
"5936splitHere46","2399554splitHere46","C"
"5937splitHere46","2399554splitHere46","C"
"5938splitHere46","2399554splitHere46","java.util.Stack"
"5939splitHere46","2399554splitHere46","java.util.Vector"
"5940splitHere46","2399554splitHere46","Stack"
"5941splitHere46","2399870splitHere46","list"
"5942splitHere46","2399870splitHere46","Collection"
"5943splitHere46","2399870splitHere46","public String toString() {<newline46mondego>   String cardString = <doubleQuotes46><doubleQuotes46>;<newline46mondego>   for (Iterator<PlayingCard> it = this.list.iterator(); it.hasNext(); /**/) {<newline46mondego>      PlayingCard c = it.next();<newline46mondego>      cardString = cardString + c + <doubleQuotes46>\n<doubleQuotes46>;<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"5944splitHere46","2399870splitHere46",":"
"5945splitHere46","2399870splitHere46","( ... )"
"5946splitHere46","2399870splitHere46","for"
"5947splitHere46","2399921splitHere46","String[]"
"5948splitHere46","2399921splitHere46","ServletRequest.getParameterValues"
"5949splitHere46","2399921splitHere46","ServletRequest.getParameterMap"
"5950splitHere46","2399921splitHere46","Map"
"5951splitHere46","2399921splitHere46","String[]"
"5952splitHere46","2399921splitHere46","Iterator    it;<newline46mondego>Map         params;<newline46mondego>String      name;<newline46mondego>String[]    values;<newline46mondego>int         n;<newline46mondego><newline46mondego>params = request.getParameterMap();<newline46mondego>it = params.keySet().iterator();<newline46mondego>while (it.hasNext())<newline46mondego>{<newline46mondego>    name = (String)it.next();<newline46mondego>    values = (String[])params.get(name);<newline46mondego>    for (n = 0; n < values.length; ++n)<newline46mondego>    {<newline46mondego>        // ...use value[n]...<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5953splitHere46","2400095splitHere46","<input name=<doubleQuotes46>data<doubleQuotes46> class=<doubleQuotes46>small-link<doubleQuotes46> type=<doubleQuotes46>text<doubleQuotes46> id=<doubleQuotes46>class-to-add<doubleQuotes46> size=<doubleQuotes46>42<doubleQuotes46> value=<doubleQuotes46><doubleQuotes46> /><newline46mondego>"
"5954splitHere46","2400139splitHere46","@PostConstruct"
"5955splitHere46","2400139splitHere46","InitialContext"
"5956splitHere46","2400139splitHere46","@PersistenceContext"
"5957splitHere46","2400139splitHere46","@Stateless <newline46mondego>@PersistenceContext(name=<doubleQuotes46>OrderEM<doubleQuotes46>) <newline46mondego>public class MySessionBean implements MyInterface { <newline46mondego>  @Resource SessionContext ctx; <newline46mondego>  public void doSomething() { <newline46mondego>     EntityManager em = (EntityManager)ctx.lookup(<doubleQuotes46>OrderEM<doubleQuotes46>); <newline46mondego>     ... <newline46mondego>  } <newline46mondego>}<newline46mondego>"
"5958splitHere46","2400247splitHere46","<newline46mondego><newline46mondego>JVM_ENTRY(void, JVM_Sleep(JNIEnv* env, jclass threadClass, jlong millis))<newline46mondego>  JVMWrapper(<doubleQuotes46>JVM_Sleep<doubleQuotes46>);<newline46mondego><newline46mondego><newline46mondego>  if (millis osthread()->get_state();<newline46mondego>      thread->osthread()->set_state(SLEEPING);<newline46mondego>      os::sleep(thread, MinSleepInterval, false);<newline46mondego>      thread->osthread()->set_state(old_state);<newline46mondego>    }<newline46mondego>  } else {<newline46mondego>    ThreadState old_state = thread->osthread()->get_state();<newline46mondego>    thread->osthread()->set_state(SLEEPING);<newline46mondego>    if (os::sleep(thread, millis, true) == OS_INTRPT) {<newline46mondego>      // An asynchronous exception (e.g., ThreadDeathException) could have been thrown on<newline46mondego>      // us while we were sleeping. We do not overwrite those.<newline46mondego>      if (!HAS_PENDING_EXCEPTION) {<newline46mondego>        // TODO-FIXME: THROW_MSG returns which means we will not call set_state()<newline46mondego>        // to properly restore the thread state.  That's likely wrong.<newline46mondego>        THROW_MSG(vmSymbols::java_lang_InterruptedException(), <doubleQuotes46>sleep interrupted<doubleQuotes46>);<newline46mondego>      }<newline46mondego>    }<newline46mondego>    thread->osthread()->set_state(old_state);<newline46mondego>  }<newline46mondego>JVM_END<newline46mondego><newline46mondego>"
"5959splitHere46","2400278splitHere46","New"
"5960splitHere46","2400278splitHere46","env->NewStringUTF(...)<newline46mondego>env->NewObjectArray(...)<newline46mondego>env->NewObject(...)<newline46mondego>"
"5961splitHere46","2400278splitHere46","new"
"5962splitHere46","2400278splitHere46","malloc"
"5963splitHere46","2400472splitHere46","package com.ekanathk;<newline46mondego><newline46mondego>import java.io.BufferedReader;<newline46mondego>import java.io.InputStream;<newline46mondego>import java.io.InputStreamReader;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Arrays;<newline46mondego>import java.util.List;<newline46mondego>import java.util.Stack;<newline46mondego>import java.util.logging.Logger;<newline46mondego><newline46mondego>import org.junit.Test;<newline46mondego><newline46mondego>class Entry {<newline46mondego>    private String input;<newline46mondego>    private int level;<newline46mondego>    public Entry(String input, int level) {<newline46mondego>        this.input = input;<newline46mondego>        this.level = level;<newline46mondego>    }<newline46mondego>    public String getInput() {<newline46mondego>        return input;<newline46mondego>    }<newline46mondego>    public int getLevel() {<newline46mondego>        return level;<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public String toString() {<newline46mondego>        return <doubleQuotes46>Entry [input=<doubleQuotes46> + input + <doubleQuotes46>, level=<doubleQuotes46> + level + <doubleQuotes46>]<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Tester {<newline46mondego><newline46mondego>    private static final Logger logger = Logger.getLogger(Tester.class.getName());<newline46mondego><newline46mondego>    @SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)<newline46mondego>    @Test<newline46mondego>    public void testSomething() throws Exception {<newline46mondego><newline46mondego>        InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(<doubleQuotes46>samplecsv.txt<doubleQuotes46>);<newline46mondego>        BufferedReader b = new BufferedReader(new InputStreamReader(is));<newline46mondego>        String input = null;<newline46mondego>        List entries = new ArrayList();<newline46mondego>        Stack<Entry> stack = new Stack<Entry>();<newline46mondego>        stack.push(new Entry(<doubleQuotes46>ROOT<doubleQuotes46>, -1));<newline46mondego>        while((input = b.readLine()) != null){<newline46mondego>            int level = whatIsTheLevel(input);<newline46mondego>            input = input.trim();<newline46mondego>            logger.info(<doubleQuotes46>input = <doubleQuotes46> + input + <doubleQuotes46> at level <doubleQuotes46> + level); <newline46mondego>            Entry entry = new Entry(input, level);<newline46mondego>            if(level == 1) {<newline46mondego>                //periodically clear out the map and write it to another excel sheet<newline46mondego>            }<newline46mondego>            if (stack.peek().getLevel() == entry.getLevel()) {<newline46mondego>                stack.pop();<newline46mondego>            }<newline46mondego>            Entry parent = stack.peek();<newline46mondego>            logger.info(<doubleQuotes46>parent = <doubleQuotes46> + parent);<newline46mondego>            entries.add(new String[]{parent.getInput(), entry.getInput()});<newline46mondego>            stack.push(entry);<newline46mondego>        }<newline46mondego>        for(Object entry : entries) {<newline46mondego>            System.out.println(Arrays.toString((String[])entry));<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private int whatIsTheLevel(String input) {<newline46mondego>        int numberOfSpaces = 0;<newline46mondego>        for(int i = 0 ; i < input.length(); i++) {<newline46mondego>            if(input.charAt(i) != ' ') {<newline46mondego>                return numberOfSpaces/4;<newline46mondego>            } else {<newline46mondego>                numberOfSpaces++;<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return numberOfSpaces/4;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5964splitHere46","2400562splitHere46","<!DOCTYPE beans PUBLIC <doubleQuotes46>-//JIBX//DTD BEAN 2.0//EN<doubleQuotes46> <doubleQuotes46>http://jibx.cvs.sourceforge.net/viewvc/*checkout*/jibx/core/docs/binding.dtd<doubleQuotes46>><newline46mondego>"
"5965splitHere46","2400573splitHere46","JLabel"
"5966splitHere46","2400573splitHere46","<doubleQuotes46><doubleQuotes46>"
"5967splitHere46","2400573splitHere46","setIcon"
"5968splitHere46","2400844splitHere46","retainAll"
"5969splitHere46","2400844splitHere46","columnsOld.retainAll (columnsNew);<newline46mondego>"
"5970splitHere46","2400867splitHere46","public interface A {<newline46mondego>    class B {<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5971splitHere46","2400867splitHere46","public interface A {<newline46mondego>    static class B {<newline46mondego>        public static boolean verifyState( A a ) {<newline46mondego>            return (true if object implementing class A looks to be in a valid state)<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"5972splitHere46","2400981splitHere46","java.util.Date dt = new java.util.Date();<newline46mondego><newline46mondego>java.text.SimpleDateFormat sdf = <newline46mondego>     new java.text.SimpleDateFormat(<doubleQuotes46>yyyy-MM-dd HH:mm:ss<doubleQuotes46>);<newline46mondego><newline46mondego>String currentTime = sdf.format(dt);<newline46mondego>"
"5973splitHere46","2401152splitHere46","Map<String, UserType> map = new HashMap<String, UserType>();<newline46mondego>map.put(RESELLER.getName(), RESELLER);<newline46mondego>map.put(SERVICE_MANAGER.getName(), SERVICE_MANAGER);<newline46mondego>map.put(HOST.getName(), HOST);<newline46mondego>"
"5974splitHere46","2401152splitHere46","for (UserType userType : UserType.values()) {<newline46mondego>    map.put(userType.getName(), userType);<newline46mondego>}<newline46mondego>"
"5975splitHere46","2401255splitHere46","byte[] buf = new byte[500];<newline46mondego>while((is.read(buf))>-1){<newline46mondego>  requestBuffer.append(new String(buf).trim());<newline46mondego>  buf = new byte[500];<newline46mondego>}<newline46mondego>"
"5976splitHere46","2401295splitHere46","/path/to/jre/lib"
"5977splitHere46","2401295splitHere46","/path/to/jre/lib/ext"
"5978splitHere46","2401295splitHere46","%CLASSPATH%"
"5979splitHere46","2401295splitHere46",";"
"5980splitHere46","2401295splitHere46",":"
"5981splitHere46","2401295splitHere46","<doubleQuotes46><doubleQuotes46>"
"5982splitHere46","2401295splitHere46","."
"5983splitHere46","2401295splitHere46","-cp"
"5984splitHere46","2401295splitHere46","-classpath"
"5985splitHere46","2401295splitHere46","%CLASSPATH%"
"5986splitHere46","2401295splitHere46","-cp"
"5987splitHere46","2401295splitHere46","-classpath"
"5988splitHere46","2401295splitHere46","-jar"
"5989splitHere46","2401295splitHere46","%CLASSPATH%"
"5990splitHere46","2401295splitHere46","bat"
"5991splitHere46","2401295splitHere46","cmd"
"5992splitHere46","2401295splitHere46","sh"
"5993splitHere46","2401457splitHere46","response.setHeader(<doubleQuotes46>Content-Length<doubleQuotes46>, String.valueOf(image.length()));<newline46mondego>"
"5994splitHere46","2401475splitHere46","<activeByDefault>"
"5995splitHere46","2401475splitHere46","<profiles><newline46mondego>  <profile><newline46mondego>    <id>all</id><newline46mondego>    <activation><newline46mondego>      <activeByDefault>true</activeByDefault><newline46mondego>    </activation><newline46mondego>    <modules><newline46mondego>      <module>module-1</module><newline46mondego>      ...<newline46mondego>      <module>module-n</module><newline46mondego>    </modules><newline46mondego>  </profile><newline46mondego>  <profile><newline46mondego>    <id>module-2</id><newline46mondego>    <modules><newline46mondego>      <module>module-2</module><newline46mondego>    </modules><newline46mondego>  </profile><newline46mondego><profiles><newline46mondego>"
"5996splitHere46","2401475splitHere46","mvn -Pmodule-2 package<newline46mondego>"
"5997splitHere46","2401475splitHere46","<modules>"
"5998splitHere46","2401475splitHere46","<modules>"
"5999splitHere46","2401475splitHere46","<activeByDefault>"
"6000splitHere46","2401475splitHere46","<profiles><newline46mondego>  ...<newline46mondego>  <profile><newline46mondego>    <id>module-x</id><newline46mondego>    <activation><newline46mondego>      <property><newline46mondego>        <name>module-name</name><newline46mondego>      </property><newline46mondego>    </activation><newline46mondego>    <modules><newline46mondego>      <module>${module-name}</module><newline46mondego>    </modules><newline46mondego>  </profile><newline46mondego><profiles><newline46mondego>"
"6001splitHere46","2401475splitHere46","mvn -Dmodule-name=module-2 package<newline46mondego>"
"6002splitHere46","2401475splitHere46","-pl"
"6003splitHere46","2401475splitHere46","mvn -pl module-2 package<newline46mondego>"
"6004splitHere46","2401536splitHere46","@PostConstruct"
"6005splitHere46","2401536splitHere46","@PostConstruct"
"6006splitHere46","2401536splitHere46","afterPropertiesSet()"
"6007splitHere46","2401536splitHere46","InitializingBean"
"6008splitHere46","2401536splitHere46","Lifecycle"
"6009splitHere46","2401572splitHere46","..."
"6010splitHere46","2401572splitHere46","finally {}"
"6011splitHere46","2401572splitHere46","catch() {}"
"6012splitHere46","2401659splitHere46","Runnable"
"6013splitHere46","2401659splitHere46","SwingWorker"
"6014splitHere46","2401848splitHere46","this.addListener(SWT.MouseExit, new Listener() {<newline46mondego>        @Override<newline46mondego>        public void handleEvent(Event event) {<newline46mondego>            for (Control control : ParentClass.this.getChildren()) {<newline46mondego>                if (control == event.item)<newline46mondego>                    return;<newline46mondego>            }<newline46mondego>            // handler logic goes here<newline46mondego>        }           <newline46mondego>    });<newline46mondego>"
"6015splitHere46","2401961splitHere46","C:\Program Files\Java\jre6\bin\"
"6016splitHere46","2401961splitHere46","C:\Program Files\R\R-2.10.1\bin\"
"6017splitHere46","2401961splitHere46","C:\Program Files\R"
"6018splitHere46","2401961splitHere46","java -version"
"6019splitHere46","2401961splitHere46","system(<doubleQuotes46>java -version<doubleQuotes46>)"
"6020splitHere46","2401961splitHere46","JAVA_HOME"
"6021splitHere46","2401961splitHere46","C:\Sun\SDK\"
"6022splitHere46","2402032splitHere46","g"
"6023splitHere46","2402032splitHere46","drawString"
"6024splitHere46","2402032splitHere46","Graphics"
"6025splitHere46","2402032splitHere46","int"
"6026splitHere46","2402032splitHere46","//            Passing an integer 'g' into the function here |<newline46mondego>//                                                          V<newline46mondego>public void drawString(String str, int x, int y, int r, int g, int b){<newline46mondego>//  | This 'g' is the integer you passed in<newline46mondego>//  V<newline46mondego>    g.setColor(r, g, b);<newline46mondego>    g.drawString(str, x, y, 0);<newline46mondego>}<newline46mondego>"
"6027splitHere46","2402564splitHere46","public static void main(String [ ] args)<newline46mondego>{<newline46mondego>   createLockIfNotExists();<newline46mondego>   try {<newline46mondego>       yourstuff;<newline46mondego>   } finally {<newline46mondego>     releaseLock();<newline46mondego>   }<newline46mondego>}<newline46mondego>private static void createLockIfNotExists() throws MyLockAlreadyExists {<newline46mondego>  // A bit tricky<newline46mondego>  // check if LOCKFILE exists, if yes throw MyLockAlreadyExists<newline46mondego>  // try to create LOCKFILE, can fail if at 1 ms earlier an other app created<newline46mondego>  // that file, so an exception while creating also results in LockAlreadyExists<newline46mondego>}<newline46mondego>"
"6028splitHere46","2402564splitHere46","SELECT * FROM lock_table;<newline46mondego><newline46mondego>if locks.length > 0: someone else is running<newline46mondego><newline46mondego>LOCK lock_table;<newline46mondego>INSERT INTO lock_table VALUES(my_pid);<newline46mondego>UNLOCK lock_table;<newline46mondego><newline46mondego>SELECT pid FROM lock_table;<newline46mondego><newline46mondego>if pids.length > 1: what happened?<newline46mondego>if pids[0] != my_pid: someone else got the lock <newline46mondego>"
"6029splitHere46","2402897splitHere46","default"
"6030splitHere46","2402897splitHere46","final"
"6031splitHere46","2402897splitHere46","extends"
"6032splitHere46","2402897splitHere46","List<? extends Foo>"
"6033splitHere46","2402897splitHere46","super"
"6034splitHere46","2402897splitHere46","List<? super Foo>"
"6035splitHere46","2402897splitHere46","static"
"6036splitHere46","2402897splitHere46","static import"
"6037splitHere46","2402897splitHere46","class"
"6038splitHere46","2402897splitHere46","class Foo {}"
"6039splitHere46","2402897splitHere46","Foo.class"
"6040splitHere46","2402897splitHere46","for"
"6041splitHere46","2403111splitHere46","layout-small-land"
"6042splitHere46","2403111splitHere46","layout-small-port"
"6043splitHere46","2403251splitHere46","%JAVA_HOME%"
"6044splitHere46","2403251splitHere46","%M2%"
"6045splitHere46","2403251splitHere46","PATH"
"6046splitHere46","2403251splitHere46","%PATH%;%JAVA_HOME%\bin;%M2_HOME%\bin<newline46mondego>"
"6047splitHere46","2403256splitHere46","StringBuffer"
"6048splitHere46","2403256splitHere46","StringBuffer"
"6049splitHere46","2403256splitHere46","StringBuffer.toString()"
"6050splitHere46","2403256splitHere46","String"
"6051splitHere46","2403256splitHere46","char[]"
"6052splitHere46","2403256splitHere46","String"
"6053splitHere46","2403256splitHere46","String"
"6054splitHere46","2403256splitHere46","java.io.Reader"
"6055splitHere46","2403256splitHere46","java.lang.CharSequence"
"6056splitHere46","2403256splitHere46","org.xml.sax.InputSource"
"6057splitHere46","2403256splitHere46","CharSequence"
"6058splitHere46","2403453splitHere46","JSONObject Obj1 = (JSONObject) jso1.get(<doubleQuotes46>Object1<doubleQuotes46>);<newline46mondego>JSONObject Obj2 = (JSONObject) jso2.get(<doubleQuotes46>Object2<doubleQuotes46>);<newline46mondego>JSONObject combined = new JSONObject();<newline46mondego>combined.put(<doubleQuotes46>Object1<doubleQuotes46>, Obj1);<newline46mondego>combined.put(<doubleQuotes46>Object2<doubleQuotes46>, Obj2);<newline46mondego>"
"6059splitHere46","2403453splitHere46","JSONObject merged = new JSONObject(Obj1, JSONObject.getNames(Obj1));<newline46mondego>for(String key : JSONObject.getNames(Obj2))<newline46mondego>{<newline46mondego>  merged.put(key, Obj2.get(key));<newline46mondego>}<newline46mondego>"
"6060splitHere46","2403457splitHere46","log4j.logger.org.library=error<newline46mondego>"
"6061splitHere46","2403457splitHere46","System.out"
"6062splitHere46","2403457splitHere46","PrintStream"
"6063splitHere46","2403457splitHere46","System.setOut(yourDummyPrintStream)"
"6064splitHere46","2403457splitHere46","System.setErr(..)"
"6065splitHere46","2403472splitHere46","public aspect ServerLogger {<newline46mondego>    pointcut printSomething ();<newline46mondego><newline46mondego>    before(): printSomething()<newline46mondego>    {<newline46mondego>            (Master)(thisJoinPointStaticPart.getTarget()).printForAlMethodsInSubClass();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6066splitHere46","2403472splitHere46","thisJoinPoint.getSignature(); <newline46mondego>"
"6067splitHere46","2403508splitHere46","List<Tokens>"
"6068splitHere46","2403508splitHere46","List<Tokens> t = new ArrayList<Tokens>();<newline46mondego>"
"6069splitHere46","2403508splitHere46","t.add(new Tokens(...))<newline46mondego>"
"6070splitHere46","2403528splitHere46","messages"
"6071splitHere46","2403528splitHere46","warnings"
"6072splitHere46","2403528splitHere46","//For messages<newline46mondego>saveMessages(request, messages);<newline46mondego><newline46mondego>//For warnings<newline46mondego>saveErrors(request, warnings);<newline46mondego>"
"6073splitHere46","2403528splitHere46","<logic:messagesPresent message=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>    <html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <logic:present name=<doubleQuotes46>aMsg<doubleQuotes46>><newline46mondego>            <!-- Messages --><newline46mondego>            <div class=<doubleQuotes46>messages<doubleQuotes46>><newline46mondego>                <bean:write name=<doubleQuotes46>aMsg<doubleQuotes46> filter=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>            </div><newline46mondego>        </logic:present><newline46mondego>    </html:messages><newline46mondego></logic:messagesPresent><newline46mondego><newline46mondego><logic:messagesPresent message=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>    <html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>        <logic:present name=<doubleQuotes46>aMsg<doubleQuotes46>><newline46mondego>            <!-- Warnings--><newline46mondego>            <div class=<doubleQuotes46>warnings<doubleQuotes46>><newline46mondego>                <bean:write name=<doubleQuotes46>aMsg<doubleQuotes46> filter=<doubleQuotes46>false<doubleQuotes46> /><newline46mondego>            </div><newline46mondego>        </logic:present><newline46mondego>    </html:messages><newline46mondego></logic:messagesPresent><newline46mondego>"
"6074splitHere46","2403528splitHere46","messages"
"6075splitHere46","2403528splitHere46","message=<doubleQuotes46>true<doubleQuotes46>"
"6076splitHere46","2403528splitHere46","<html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>"
"6077splitHere46","2403528splitHere46","warnings"
"6078splitHere46","2403528splitHere46","message=<doubleQuotes46>false<doubleQuotes46>"
"6079splitHere46","2403528splitHere46","<html:messages id=<doubleQuotes46>aMsg<doubleQuotes46> message=<doubleQuotes46>false<doubleQuotes46>><newline46mondego>"
"6080splitHere46","2403528splitHere46","messages"
"6081splitHere46","2403528splitHere46","warnings"
"6082splitHere46","2403528splitHere46","warnings"
"6083splitHere46","2403528splitHere46","messages"
"6084splitHere46","2403528splitHere46","saveMessages(request, messages)"
"6085splitHere46","2403528splitHere46","saveErrors(request, errors)"
"6086splitHere46","2403528splitHere46","<logic:messagesPresent message=<doubleQuotes46>true<doubleQuotes46>>"
"6087splitHere46","2403528splitHere46","MESSAGE_KEY"
"6088splitHere46","2403528splitHere46","ERROR_KEY"
"6089splitHere46","2403528splitHere46","<html:messages />"
"6090splitHere46","2403528splitHere46","<logic:iterate />"
"6091splitHere46","2403600splitHere46","var newString = oldString.replace(/([^_].*?)_(?=[^_|^\s])/g,<doubleQuotes46>$1 <doubleQuotes46>);<newline46mondego>"
"6092splitHere46","2403600splitHere46","var newString = oldString.replace(/([^_|\s].*?)_(?=[^_|^s])/g,<doubleQuotes46>$1 <doubleQuotes46>);<newline46mondego>"
"6093splitHere46","2403600splitHere46","var arrayString = oldString.replace(/^(_+)(.*?)(_+)$/g,<doubleQuotes46>$1;$2;$3<doubleQuotes46>);<newline46mondego>var a = arrayString.split(<doubleQuotes46>;<doubleQuotes46>);<newline46mondego>var newString = a[0]+a[1].replace(/_/g,<doubleQuotes46> <doubleQuotes46>)+a[2];<newline46mondego>"
"6094splitHere46","2403695splitHere46","@CollectionOfElements<newline46mondego>@Enumerated(EnumType.STRING)<newline46mondego>@JoinTable(<newline46mondego>    name=<doubleQuotes46>BAR_TABLE<doubleQuotes46>,<newline46mondego>    joinColumns=@JoinColumn(name=<doubleQuotes46>FOO_ID<doubleQuotes46>)<newline46mondego>)<newline46mondego>public Set<Bar> getBarSet() {<newline46mondego>    return this.BarSet;<newline46mondego>}<newline46mondego>"
"6095splitHere46","2403695splitHere46","select distinc Foo _foo inner join fetch _foo.barSet bar where bar = :selectedBar<newline46mondego><newline46mondego>query.setParameter(<doubleQuotes46>selectedBar<doubleQuotes46>, Bar.A);<newline46mondego><newline46mondego>query.list();<newline46mondego>"
"6096splitHere46","2403916splitHere46","import java.util.ArrayList;<newline46mondego>import java.util.Hashtable;<newline46mondego>import java.util.Scanner;<newline46mondego><newline46mondego>/**<newline46mondego> *<newline46mondego> * @author newba<newline46mondego> */<newline46mondego>public class GraphProblem {<newline46mondego><newline46mondego>    class Edge {<newline46mondego>        int v1;<newline46mondego>        int v2;<newline46mondego><newline46mondego>        public Edge(int v1, int v2) {<newline46mondego>            this.v1 = v1;<newline46mondego>            this.v2 = v2;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public GraphProblem () {<newline46mondego>        Scanner cin = new Scanner(System.in);<newline46mondego><newline46mondego>        while (cin.hasNext()) {<newline46mondego><newline46mondego>            int num_exams = cin.nextInt();<newline46mondego>            if (num_exams == 0)<newline46mondego>                break;<newline46mondego>            int k = cin.nextInt();<newline46mondego>            Hashtable<Integer,String> exams = new Hashtable<Integer, String>();<newline46mondego>            ArrayList<Edge> edges = new ArrayList<Edge>();<newline46mondego>            for (int i = 0; i < k; i++) {<newline46mondego>                int v1 = cin.nextInt();<newline46mondego>                int v2 = cin.nextInt();<newline46mondego>                exams.put(v1,<doubleQuotes46>UNKNOWN<doubleQuotes46>);<newline46mondego>                exams.put(v2,<doubleQuotes46>UNKNOWN<doubleQuotes46>);<newline46mondego>                //add the edge from A->B and B->A<newline46mondego>                edges.add(new Edge(v1, v2));<newline46mondego>                edges.add(new Edge(v2, v1));<newline46mondego>            }<newline46mondego><newline46mondego>            boolean possible = true;<newline46mondego>            for (Integer key: exams.keySet()){<newline46mondego>                if (exams.get(key).equals(<doubleQuotes46>UNKNOWN<doubleQuotes46>)){<newline46mondego>                    if (!colorify(edges, exams,key, <doubleQuotes46>BLACK<doubleQuotes46>, <doubleQuotes46>WHITE<doubleQuotes46>)){<newline46mondego>                        possible = false;<newline46mondego>                        break;<newline46mondego>                    }<newline46mondego>                }<newline46mondego>            }<newline46mondego><newline46mondego>            if (possible)<newline46mondego>                System.out.println(<doubleQuotes46>POSSIBLE.<doubleQuotes46>);<newline46mondego>            else<newline46mondego>                System.out.println(<doubleQuotes46>NOT POSSIBLE.<doubleQuotes46>);<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public boolean colorify (ArrayList<Edge> edges,Hashtable<Integer,String> verticesHash,Integer node, String color1, String color2){<newline46mondego><newline46mondego>        verticesHash.put(node,color1);<newline46mondego>        for (Edge edge : edges){<newline46mondego>            if (edge.v1 == (int) node) {<newline46mondego>                if (verticesHash.get(edge.v2).equals(color1)){<newline46mondego>                    return false;<newline46mondego>                }<newline46mondego>                if (verticesHash.get(edge.v2).equals(<doubleQuotes46>UNKNOWN<doubleQuotes46>)){<newline46mondego>                    colorify(edges, verticesHash, edge.v2, color2, color1);<newline46mondego>                }<newline46mondego>            }<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        new GraphProblem();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6097splitHere46","2404153splitHere46","-Xms"
"6098splitHere46","2404153splitHere46","-Xmx"
"6099splitHere46","2404153splitHere46","-Xms"
"6100splitHere46","2404153splitHere46","-Xmx"
"6101splitHere46","2404378splitHere46","System.currentTimeMillis()"
"6102splitHere46","2404378splitHere46","System.currentTimeMillis()"
"6103splitHere46","2404378splitHere46","System.currentTimeMillis()"
"6104splitHere46","2404378splitHere46","System.currentTimeMillis()"
"6105splitHere46","2404378splitHere46","for (int i = 0; i < 10; i ++) {<newline46mondego>    runMethod();<newline46mondego>}<newline46mondego>int count = 10;<newline46mondego>for (;;) {<newline46mondego>    long begin = System.currentTimeMillis();<newline46mondego>    for (int i = 0; i < count; i ++)<newline46mondego>        runMethod();<newline46mondego>    long end = System.currentTimeMillis();<newline46mondego>    if ((end - begin) < 10000) {<newline46mondego>        count *= 2;<newline46mondego>        continue;<newline46mondego>    }<newline46mondego>    reportElapsedTime((double)(end - begin) / count);<newline46mondego>}<newline46mondego>"
"6106splitHere46","2404499splitHere46","class Word {<newline46mondego>    private String text;<newline46mondego>    private long count;<newline46mondego>    private long id;<newline46mondego>    // getters, setters<newline46mondego>}<newline46mondego><newline46mondego>class Words {<newline46mondego>    private int fileID;<newline46mondego>    private List<Word> words;<newline46mondego>    // getters, setters<newline46mondego>}<newline46mondego>"
"6107splitHere46","2404499splitHere46","Words"
"6108splitHere46","2404499splitHere46","Word"
"6109splitHere46","2404527splitHere46","<build><newline46mondego><resources><newline46mondego>  <resource><newline46mondego>    <directory>src/main/resources</directory><newline46mondego>    <filtering>true</filtering><newline46mondego>  </resource><newline46mondego></resources><newline46mondego>"
"6110splitHere46","2404641splitHere46","ListSelectionModel"
"6111splitHere46","2404641splitHere46","list.setSelectionModel(new DefaultListSelectionModel() {<newline46mondego>    @Override<newline46mondego>    public void setSelectionInterval(int index0, int index1) {<newline46mondego>        if(super.isSelectedIndex(index0)) {<newline46mondego>            super.removeSelectionInterval(index0, index1);<newline46mondego>        }<newline46mondego>        else {<newline46mondego>            super.addSelectionInterval(index0, index1);<newline46mondego>        }<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"6112splitHere46","2404886splitHere46","ResourceBundle"
"6113splitHere46","2404886splitHere46","messages_en.properties"
"6114splitHere46","2404886splitHere46","messages_ja.properties"
"6115splitHere46","2404886splitHere46","ResourceBundle bundle = ResourceBundle.getBundle(<doubleQuotes46>messages<doubleQuotes46>);<newline46mondego>String text = MessageFormat.format(bundle.getString(<doubleQuotes46>ERROR_MESSAGE<doubleQuotes46>), args);<newline46mondego>"
"6116splitHere46","2405003splitHere46","else"
"6117splitHere46","2405003splitHere46","if"
"6118splitHere46","2405003splitHere46","else if"
"6119splitHere46","2405003splitHere46","public static void trya (int a, int b, int c)<newline46mondego>{<newline46mondego>    if (c>(a+b))<newline46mondego>    {<newline46mondego>        System.out.println (<doubleQuotes46>yes<doubleQuotes46>) ;<newline46mondego>    }<newline46mondego>    else if (b>(a+c)) <newline46mondego>    {<newline46mondego>        System.out.println (<doubleQuotes46>yes<doubleQuotes46>) ;<newline46mondego>    }<newline46mondego>    else if (a>(b+c))<newline46mondego>    {<newline46mondego>        System.out.println (<doubleQuotes46>yes<doubleQuotes46>) ;<newline46mondego>    }<newline46mondego>    else<newline46mondego>    {<newline46mondego>        System.out.println (<doubleQuotes46>no<doubleQuotes46>) ;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6120splitHere46","2405022splitHere46","pureCharger-jar.jar <newline46mondego>    META-INF<newline46mondego>        ejb-jar.xml<newline46mondego>        persistence.xml<newline46mondego>"
"6121splitHere46","2405022splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><ejb-jar xmlns=<doubleQuotes46>http://java.sun.com/xml/ns/javaee<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46> xsi:schemaLocation=<doubleQuotes46>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd<doubleQuotes46> version=<doubleQuotes46>3.0<doubleQuotes46>><newline46mondego>    <interceptors><newline46mondego>        <interceptor><newline46mondego>            <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-class><newline46mondego>        </interceptor><newline46mondego>    </interceptors><newline46mondego>    <assembly-descriptor><newline46mondego>        <interceptor-binding><newline46mondego>            <ejb-name>*</ejb-name><newline46mondego>            <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-class><newline46mondego>        </interceptor-binding><newline46mondego>    </assembly-descriptor><newline46mondego></ejb-jar><newline46mondego>"
"6122splitHere46","2405139splitHere46","catch(...)"
"6123splitHere46","2405147splitHere46","SortedMap<Integer, Entry> mergedEntriesMap = new TreeMap<Integer, Entry>();<newline46mondego>for (Entry e : entries) {<newline46mondego>  if (mergedEntriesMap.contains(e.id)) {<newline46mondego>    Entry m = mergedEntriesMap.get(e);<newline46mondego>    m.regions.addAll(e.regions);<newline46mondego>  } else {<newline46mondego>    Entry m = new Entry();<newline46mondego>    // copy the entry to keep the original array clean<newline46mondego>    m.id = e.id;<newline46mondego>    m.name = e.name;<newline46mondego>    m.regions = new ArrayList<Region>(e.regions);<newline46mondego>    mergedEntriesMap.put(m.id, m);<newline46mondego>  }<newline46mondego>}<newline46mondego><newline46mondego>List<Entry> mergedEntries = new ArrayList<Entry>(mergedEntriesMap.values());<newline46mondego>"
"6124splitHere46","2405259splitHere46","lib/"
"6125splitHere46","2405259splitHere46","lein swank"
"6126splitHere46","2405259splitHere46","lein clean"
"6127splitHere46","2405484splitHere46","Resource"
"6128splitHere46","2405484splitHere46","Resource"
"6129splitHere46","2405484splitHere46","@XMLRootElement"
"6130splitHere46","2405484splitHere46","Jaxb2Marshaller"
"6131splitHere46","2405484splitHere46","@RequestBody"
"6132splitHere46","2405484splitHere46","HandlerMethodInvoker.resolveRequestBody()"
"6133splitHere46","2405975splitHere46","Runnable r = new PrimeFinder();<newline46mondego>"
"6134splitHere46","2406127splitHere46","<element column>"
"6135splitHere46","2406127splitHere46","MYENTITY_COLOR"
"6136splitHere46","2406127splitHere46","EnumUserType"
"6137splitHere46","2406127splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46>?><newline46mondego><!DOCTYPE hibernate-mapping PUBLIC <doubleQuotes46>-//Hibernate/Hibernate Mapping DTD 3.0//EN<doubleQuotes46><newline46mondego><doubleQuotes46>http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd<doubleQuotes46>><newline46mondego><hibernate-mapping><newline46mondego>    <typedef name=<doubleQuotes46>color<doubleQuotes46> class=<doubleQuotes46>com.stackoverflow.q2402869.EnumUserType<doubleQuotes46>><newline46mondego>        <param name=<doubleQuotes46>enumClassName<doubleQuotes46>>com.stackoverflow.q2402869.Color</param><newline46mondego>    </typedef><newline46mondego>    <class name=<doubleQuotes46>com.stackoverflow.q2402869.MyEntity<doubleQuotes46> entity-name=<doubleQuotes46>MyEntity<doubleQuotes46> table=<doubleQuotes46>MYENTITY<doubleQuotes46>><newline46mondego>        <id name=<doubleQuotes46>id<doubleQuotes46> type=<doubleQuotes46>java.lang.Long<doubleQuotes46>><newline46mondego>            <column name=<doubleQuotes46>ID<doubleQuotes46> /><newline46mondego>            <generator class=<doubleQuotes46>assigned<doubleQuotes46> /><newline46mondego>        </id><newline46mondego>        <set name=<doubleQuotes46>colors<doubleQuotes46> table=<doubleQuotes46>MYENTITY_COLORS<doubleQuotes46>><newline46mondego>            <key column=<doubleQuotes46>ID<doubleQuotes46> not-null=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego>            <element type=<doubleQuotes46>color<doubleQuotes46> column=<doubleQuotes46>COLOR<doubleQuotes46>/><newline46mondego>        </set><newline46mondego>    </class><newline46mondego></hibernate-mapping><newline46mondego>"
"6138splitHere46","2406127splitHere46","select distinct e from MyEntity e join e.colors colors where colors IN ('WHITE', 'GREEN')<newline46mondego>"
"6139splitHere46","2406195splitHere46","Bundle-RequiredExecutionEnvironment: JavaSE-1.6<newline46mondego>"
"6140splitHere46","2406222splitHere46","add()"
"6141splitHere46","2406222splitHere46","pack()"
"6142splitHere46","2406222splitHere46","SwingUtilities"
"6143splitHere46","2406222splitHere46","GetCoordiates"
"6144splitHere46","2406222splitHere46","class GetCoordinate extends JLabel {<newline46mondego>    public GetCoordinate() {<newline46mondego>        setText(<doubleQuotes46>Foo!<doubleQuotes46>);<newline46mondego>        System.out.println(<doubleQuotes46>Coordinate: <doubleQuotes46> + this.getBounds());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Grid extends JFrame {<newline46mondego>    public Grid() {<newline46mondego>        setLayout(new GridBagLayout());<newline46mondego>        GridBagLayout m = new GridBagLayout();<newline46mondego>        Container c = getContentPane();<newline46mondego>        c.setLayout(m);<newline46mondego>        GridBagConstraints con = new GridBagConstraints();<newline46mondego><newline46mondego>        // construct the JPanel<newline46mondego>        final JPanel pDraw = new JPanel();<newline46mondego>        m.setConstraints(pDraw, con);<newline46mondego>        pDraw.add(new GetCoordinate()); // call new class to generate the<newline46mondego>                                        // coordinate<newline46mondego>        c.add(pDraw);<newline46mondego><newline46mondego>        pack();<newline46mondego>        setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                new Grid();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6145splitHere46","2406222splitHere46","GetCoordinate.printBounds()"
"6146splitHere46","2406222splitHere46","class GetCoordinate extends JLabel {<newline46mondego>    public GetCoordinate() {<newline46mondego>        setText(<doubleQuotes46>Foo!<doubleQuotes46>);<newline46mondego>        // Let's not try to do this here anymore...<newline46mondego>//        System.out.println(<doubleQuotes46>Coordinate: <doubleQuotes46> + this.getBounds());<newline46mondego>    }<newline46mondego><newline46mondego>    public void printBounds() // <-- Added this method<newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Coordinate: <doubleQuotes46> + this.getBounds());<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class Grid extends JFrame {<newline46mondego>    public Grid() {<newline46mondego>        setLayout(new GridBagLayout());<newline46mondego>        GridBagLayout m = new GridBagLayout();<newline46mondego>        Container c = getContentPane();<newline46mondego>        c.setLayout(m);<newline46mondego>        GridBagConstraints con = new GridBagConstraints();<newline46mondego><newline46mondego>        // construct the JPanel<newline46mondego>        final JPanel pDraw = new JPanel();<newline46mondego>        m.setConstraints(pDraw, con);<newline46mondego>        final GetCoordinate content = new GetCoordinate();<newline46mondego>        pDraw.add(content);<newline46mondego>        c.add(pDraw);<newline46mondego><newline46mondego>        pack();<newline46mondego>        setVisible(true);<newline46mondego>        content.printBounds();  // <-- Added this<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            public void run() {<newline46mondego>                new Grid();<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6147splitHere46","2406293splitHere46","class ProxySpinnerModel implements SpinnerNodel {<newline46mondego>    getValue() { return originalSpinner.getValue() - 10 }<newline46mondego>    setValue(v) { originalSpinner.setValue(v+10) }<newline46mondego>}<newline46mondego><newline46mondego>spinnerA = new JSpinner()<newline46mondego>spinnerB = new JSpinner( new ProxySpinnerModel( spinnerA.getModel() ) )<newline46mondego>"
"6148splitHere46","2406339splitHere46","<cache<newline46mondego>    name=<doubleQuotes46>com.somecompany.someproject.domain.Country<doubleQuotes46><newline46mondego>    maxElementsInMemory=<doubleQuotes46>10000<doubleQuotes46><newline46mondego>    eternal=<doubleQuotes46>false<doubleQuotes46><newline46mondego>    **timeToIdleSeconds=<doubleQuotes46>300<doubleQuotes46>**<newline46mondego>    **timeToLiveSeconds=<doubleQuotes46>600<doubleQuotes46>**<newline46mondego>    overflowToDisk=<doubleQuotes46>true<doubleQuotes46><newline46mondego>/><newline46mondego>"
"6149splitHere46","2406355splitHere46","HashMap.clear()"
"6150splitHere46","2406430splitHere46","public void actionPerformed(ActionEvent event){<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Hello<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6151splitHere46","2406441splitHere46","Integer.toBinaryString(int i)<newline46mondego>"
"6152splitHere46","2406446splitHere46","1- Couldn't find a way to configure HttpClient (except by the generic Java Socks mechanism defined in http://java.sun.com/javase/6/docs/technotes/guides/net/proxies.html)<newline46mondego>2- Do not have access to a public Socks Proxy to test against<newline46mondego>"
"6153splitHere46","2406552splitHere46","MalformedURLException"
"6154splitHere46","2406552splitHere46","URLStreamHandler"
"6155splitHere46","2406552splitHere46","URL"
"6156splitHere46","2406552splitHere46","openConnection"
"6157splitHere46","2406552splitHere46","URLStreamHandler"
"6158splitHere46","2406552splitHere46","URL"
"6159splitHere46","2406552splitHere46","openConnection"
"6160splitHere46","2406552splitHere46","URI"
"6161splitHere46","2406607splitHere46","class Class1 <newline46mondego>{<newline46mondego>      JTextField field1;<newline46mondego>      public String getFieldText()<newline46mondego>      {<newline46mondego>            return field1.getText();<newline46mondego>      }<newline46mondego>}<newline46mondego>class Class2<newline46mondego>{<newline46mondego>      JTextField field2;<newline46mondego>      Class2(Class1 c1)<newline46mondego>      {<newline46mondego>            field2.setText(c1.getFieldText());<newline46mondego>      }<newline46mondego>}<newline46mondego>"
"6162splitHere46","2406691splitHere46","public class View extends JFrame {<newline46mondego>  public View(final ActionListener listener) {<newline46mondego>   JButton button = new JButton(<doubleQuotes46>click me<doubleQuotes46>);<newline46mondego>   button.addActionListener(listener);<newline46mondego>   button.setActionCommand(<doubleQuotes46>do_stuff<doubleQuotes46>);<newline46mondego><newline46mondego>   getContentPane().add(button);<newline46mondego><newline46mondego>   pack();<newline46mondego>   setVisible(true);<newline46mondego>  }<newline46mondego> }<newline46mondego><newline46mondego> public class Control implements ActionListener {<newline46mondego><newline46mondego>  public Control() {<newline46mondego>   new View(this);<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public void actionPerformed(ActionEvent e) {<newline46mondego>   if (e.getActionCommand().equals(<doubleQuotes46>do_stuff<doubleQuotes46>)) {<newline46mondego>    // respond to button click<newline46mondego>   }<newline46mondego>  }<newline46mondego> }<newline46mondego>"
"6163splitHere46","2406819splitHere46","public static boolean isThisMyIpAddress(InetAddress addr) {<newline46mondego>    // Check if the address is a valid special local or loop back<newline46mondego>    if (addr.isAnyLocalAddress() || addr.isLoopbackAddress())<newline46mondego>        return true;<newline46mondego><newline46mondego>    // Check if the address is defined on any interface<newline46mondego>    try {<newline46mondego>        return NetworkInterface.getByInetAddress(addr) != null;<newline46mondego>    } catch (SocketException e) {<newline46mondego>        return false;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6164splitHere46","2406819splitHere46","boolean isMyDesiredIp = false;<newline46mondego>try<newline46mondego>{<newline46mondego>    isMyDesiredIp = isThisMyIpAddress(InetAddress.getByName(<doubleQuotes46>192.168.220.25<doubleQuotes46>)); //<doubleQuotes46>localhost<doubleQuotes46> for localhost<newline46mondego>}<newline46mondego>catch(UnknownHostException unknownHost)<newline46mondego>{<newline46mondego>    unknownHost.printStackTrace();<newline46mondego>}<newline46mondego>"
"6165splitHere46","2406862splitHere46","System.out.println(<newline46mondego>    Arrays.deepToString(<newline46mondego>        <doubleQuotes46>abc<def>ghi<x><x><doubleQuotes46>.split(<doubleQuotes46>(?=<)|(?<=>)<doubleQuotes46>)<newline46mondego>    )<newline46mondego>); // [abc, <def>, ghi, <x>, <x>]<newline46mondego><newline46mondego><newline46mondego>System.out.println(<newline46mondego>    Arrays.deepToString(<newline46mondego>        <doubleQuotes46>Hello! Oh my!! Good bye!! IT WORKS!!!<doubleQuotes46>.split(<doubleQuotes46>(?<=!++)<doubleQuotes46>)<newline46mondego>    )<newline46mondego>); // [Hello!,  Oh my!!,  Good bye!!,  IT WORKS!!!]<newline46mondego>"
"6166splitHere46","2406928splitHere46","<java>"
"6167splitHere46","2406928splitHere46","<jvmarg>"
"6168splitHere46","2406928splitHere46","-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5432<newline46mondego>"
"6169splitHere46","2407017splitHere46","DataSource"
"6170splitHere46","2407034splitHere46","dispatchUncaughtException()"
"6171splitHere46","2407034splitHere46","Thread"
"6172splitHere46","2407034splitHere46","getUncaughtExceptionHandler()"
"6173splitHere46","2407034splitHere46","ThreadGroup"
"6174splitHere46","2407034splitHere46","handleException()"
"6175splitHere46","2407034splitHere46","main"
"6176splitHere46","2407034splitHere46","main"
"6177splitHere46","2407034splitHere46","public class SelfCatch {<newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego>        if (args == null) throw new Exception(<doubleQuotes46>Hi there!<doubleQuotes46>);<newline46mondego>        try {<newline46mondego>            main(null);<newline46mondego>        } catch (Exception e) {<newline46mondego>            System.out.println(<doubleQuotes46>Caught: <doubleQuotes46> + e);<newline46mondego>        }<newline46mondego>        System.out.println(<doubleQuotes46>Exiting...<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6178splitHere46","2407034splitHere46","Caught: java.lang.Exception: Hi there!<newline46mondego>Exiting...<newline46mondego>"
"6179splitHere46","2407045splitHere46","public class MyButton extends JButton {<newline46mondego>    private Painter painter;<newline46mondego><newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>       super.paintComponent(g);<newline46mondego>       painter.paint(g);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public interface Painter {<newline46mondego>    public void paint(Graphics g);<newline46mondego>}<newline46mondego>"
"6180splitHere46","2407075splitHere46","JScrollPane scroller = new JScrollPane(table);<newline46mondego>"
"6181splitHere46","2407119splitHere46","<RelativeLayout android:id=<doubleQuotes46>@+id/RelativeLayout01<doubleQuotes46> <newline46mondego>                android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46> <newline46mondego>                android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46>><newline46mondego>                <ImageButton android:id=<doubleQuotes46>@+id/ImageButton01<doubleQuotes46>    <newline46mondego>                             android:layout_height=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>                             android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46>></ImageButton><newline46mondego>                <ImageView android:id=<doubleQuotes46>@+id/ImageView01<doubleQuotes46><newline46mondego>                           android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>                           android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46> <newline46mondego>                           android:background=<doubleQuotes46>@drawable/cardback1<doubleQuotes46> <newline46mondego>                           android:layout_centerInParent=<doubleQuotes46>true<doubleQuotes46>></ImageView><newline46mondego></RelativeLayout><newline46mondego>"
"6182splitHere46","2407242splitHere46","import java.lang.reflect.*;<newline46mondego><newline46mondego>public class ReflectionExample {<newline46mondego>    public int test(int i) {<newline46mondego>        return i + 1;<newline46mondego>    }<newline46mondego>    public static void main(String args[]) throws Exception {<newline46mondego>        Method testMethod = ReflectionExample.class.getMethod(<doubleQuotes46>test<doubleQuotes46>, int.class);<newline46mondego>        int result = (Integer) testMethod.invoke(new ReflectionExample(), 100);<newline46mondego>        System.out.println(result); // 101<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6183splitHere46","2407242splitHere46","NoSuchMethodException"
"6184splitHere46","2407242splitHere46","IllegalAccessException"
"6185splitHere46","2407242splitHere46","InvocationTargetException"
"6186splitHere46","2407700splitHere46","if (!NoDropDownInHeader == true)<newline46mondego>{<newline46mondego>  // Activates when there *is* a dropdown in the header)<newline46mondego>}<newline46mondego>"
"6187splitHere46","2407700splitHere46","if (NoDropDownInHeader == false)<newline46mondego>{<newline46mondego> // Activates when there *is* a dropdown in the header<newline46mondego>}<newline46mondego>"
"6188splitHere46","2407700splitHere46","if (!NoDropDownInHeader)<newline46mondego>{<newline46mondego> // Activates when there *is* a dropdown in the header<newline46mondego>}<newline46mondego>"
"6189splitHere46","2407772splitHere46","private static DateFormat df = new SimpleDateFormat(<doubleQuotes46>EEE, d MMM yyyy HH:mm:ss Z<doubleQuotes46>);<newline46mondego>private static DateFormat df2 = new SimpleDateFormat(<doubleQuotes46>dd/MM/yyyy 'at' HH:mm<doubleQuotes46>);<newline46mondego><newline46mondego>public void setyourDate(String yourDate) {<newline46mondego>Date date2;<newline46mondego>yourDate = getyourDate() + <doubleQuotes46><doubleQuotes46> + yourDate;<newline46mondego>try {<newline46mondego>date2 = df.parse(yourDate);<newline46mondego>yourDate = df2.format(date2);<newline46mondego><newline46mondego>} catch (ParseException e) {<newline46mondego>}<newline46mondego>this.yourDate = yourDate;<newline46mondego>}<newline46mondego>"
"6190splitHere46","2407855splitHere46","'='"
"6191splitHere46","2407855splitHere46","':'"
"6192splitHere46","2407855splitHere46","\:\=<newline46mondego>"
"6193splitHere46","2407855splitHere46","<doubleQuotes46>:=<doubleQuotes46>."
"6194splitHere46","2407855splitHere46","\r"
"6195splitHere46","2407855splitHere46","\n"
"6196splitHere46","2407855splitHere46","'='"
"6197splitHere46","2407855splitHere46","':'"
"6198splitHere46","2407855splitHere46","<doubleQuotes46><doubleQuotes46>"
"6199splitHere46","2407930splitHere46",".properties"
"6200splitHere46","2407930splitHere46","java.util.Properties"
"6201splitHere46","2407930splitHere46",".properties"
"6202splitHere46","2407930splitHere46","Properties properties = new Properties();<newline46mondego>InputStream inputStream = getClass().getResourceAsStream(<doubleQuotes46>yourfile.properties<doubleQuotes46>);<newline46mondego>properties.load(inputStream);<newline46mondego>"
"6203splitHere46","2407958splitHere46","request.getParameterValues(<doubleQuotes46>select2<doubleQuotes46>)"
"6204splitHere46","2408532splitHere46","getDataFile(<doubleQuotes46>log.txt<doubleQuotes46>)"
"6205splitHere46","2408646splitHere46","Object"
"6206splitHere46","2408646splitHere46","new Object()"
"6207splitHere46","2408646splitHere46","null"
"6208splitHere46","2408646splitHere46","Void"
"6209splitHere46","2408646splitHere46","null"
"6210splitHere46","2408646splitHere46","NullObject"
"6211splitHere46","2408646splitHere46","void"
"6212splitHere46","2408744splitHere46","hashCode"
"6213splitHere46","2408779splitHere46","JPEGImageReader"
"6214splitHere46","2408779splitHere46","File f = new File(<doubleQuotes46>/path/imagefile.jpg<doubleQuotes46>);<newline46mondego><newline46mondego>    //Find a suitable ImageReader<newline46mondego>    Iterator readers = ImageIO.getImageReadersByFormatName(<doubleQuotes46>JPEG<doubleQuotes46>);<newline46mondego>    ImageReader reader = null;<newline46mondego>    while(readers.hasNext()) {<newline46mondego>        reader = (ImageReader)readers.next();<newline46mondego>        if(reader.canReadRaster()) {<newline46mondego>            break;<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    //Stream the image file (the original CMYK image)<newline46mondego>    ImageInputStream input =   ImageIO.createImageInputStream(f); <newline46mondego>    reader.setInput(input); <newline46mondego><newline46mondego>    //Read the image raster<newline46mondego>    Raster raster = reader.readRaster(0, null); <newline46mondego><newline46mondego>    //Create a new RGB image<newline46mondego>    BufferedImage bi = new BufferedImage(raster.getWidth(), raster.getHeight(), <newline46mondego>    BufferedImage.TYPE_4BYTE_ABGR); <newline46mondego><newline46mondego>    //Fill the new image with the old raster<newline46mondego>    bi.getRaster().setRect(raster);<newline46mondego>"
"6215splitHere46","2408812splitHere46","Class<?> cls = Class.forName(className);<newline46mondego>"
"6216splitHere46","2408812splitHere46","className"
"6217splitHere46","2408812splitHere46","com.mycompany.MyClass"
"6218splitHere46","2408862splitHere46","h:graphicImage"
"6219splitHere46","2408862splitHere46","JFreeChart"
"6220splitHere46","2408934splitHere46","ExecutorService#invokeAll()"
"6221splitHere46","2408934splitHere46","Collection"
"6222splitHere46","2408934splitHere46","Collection<Callable<T>>"
"6223splitHere46","2408934splitHere46","Collection<? extends Callable<T>>"
"6224splitHere46","2409340splitHere46","<build><newline46mondego>        <finalName>projectname</finalName><newline46mondego><newline46mondego>        <resources><newline46mondego><newline46mondego>        <resource><newline46mondego><newline46mondego>            <directory>src/main/resources</directory><newline46mondego><newline46mondego>            <filtering>true</filtering><newline46mondego><newline46mondego>        </resource><newline46mondego><newline46mondego>        <resource><newline46mondego><newline46mondego>            <directory>target/generated-classes/xmlbeans<newline46mondego><newline46mondego>            </directory><newline46mondego><newline46mondego>        </resource><newline46mondego><newline46mondego>    </resources><newline46mondego><newline46mondego><newline46mondego>        <!-- xmlbeans maven plugin for the client side --><newline46mondego><newline46mondego>        <plugin><newline46mondego><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego><newline46mondego>            <artifactId>xmlbeans-maven-plugin</artifactId><newline46mondego><newline46mondego>            <version>2.3.2</version><newline46mondego><newline46mondego>            <executions><newline46mondego><newline46mondego>                <execution><newline46mondego><newline46mondego>                    <goals><newline46mondego><newline46mondego>                        <goal>xmlbeans</goal><newline46mondego><newline46mondego>                    </goals><newline46mondego><newline46mondego>                </execution><newline46mondego><newline46mondego>            </executions><newline46mondego><newline46mondego>            <inherited>true</inherited><newline46mondego><newline46mondego>            <configuration><newline46mondego><newline46mondego>                <schemaDirectory>src/main/resources/</schemaDirectory><newline46mondego><newline46mondego>            </configuration><newline46mondego><newline46mondego>        </plugin><newline46mondego><plugin><newline46mondego><newline46mondego>            <groupId>org.codehaus.mojo</groupId><newline46mondego><newline46mondego>            <artifactId>build-helper-maven-plugin<newline46mondego><newline46mondego>            </artifactId><newline46mondego><newline46mondego>            <version>1.1</version><newline46mondego><newline46mondego>            <executions><newline46mondego><newline46mondego>                <execution><newline46mondego><newline46mondego>                    <id>add-source</id><newline46mondego><newline46mondego>                    <phase>generate-sources</phase><newline46mondego><newline46mondego>                    <goals><newline46mondego><newline46mondego>                        <goal>add-source</goal><newline46mondego><newline46mondego>                    </goals><newline46mondego><newline46mondego>                    <configuration><newline46mondego><newline46mondego>                        <sources><newline46mondego><newline46mondego>                            <source> target/generated-sources/xmlbeans</source><newline46mondego><newline46mondego>                        </sources><newline46mondego><newline46mondego>                    </configuration><newline46mondego><newline46mondego>                </execution><newline46mondego><newline46mondego><newline46mondego><newline46mondego>            </executions><newline46mondego><newline46mondego>        </plugin><newline46mondego>    </plugins><newline46mondego></build><newline46mondego>"
"6225splitHere46","2409340splitHere46","<bean id=<doubleQuotes46>messageFactory<doubleQuotes46> class=<doubleQuotes46>org.springframework.ws.soap.axiom.AxiomSoapMessageFactory<doubleQuotes46>><newline46mondego><newline46mondego>        <property name=<doubleQuotes46>payloadCaching<doubleQuotes46> value=<doubleQuotes46>true<doubleQuotes46>/><newline46mondego><newline46mondego>    </bean><newline46mondego><newline46mondego><newline46mondego>    <bean id=<doubleQuotes46>abstractClient<doubleQuotes46> abstract=<doubleQuotes46>true<doubleQuotes46>><newline46mondego>        <constructor-arg ref=<doubleQuotes46>messageFactory<doubleQuotes46>/><newline46mondego>    </bean><newline46mondego><newline46mondego>    <bean id=<doubleQuotes46>marshaller<doubleQuotes46> class=<doubleQuotes46>org.springframework.oxm.xmlbeans.XmlBeansMarshaller<doubleQuotes46>/><newline46mondego><newline46mondego> <bean id=<doubleQuotes46>myWebServiceClient<doubleQuotes46> parent=<doubleQuotes46>abstractClient<doubleQuotes46> class=<doubleQuotes46>class.path.MyWsClient<doubleQuotes46>><newline46mondego><newline46mondego>        <property name=<doubleQuotes46>defaultUri<doubleQuotes46> value=<doubleQuotes46>http://your.webservice.url<doubleQuotes46>/><newline46mondego><newline46mondego>        <property name=<doubleQuotes46>marshaller<doubleQuotes46> ref=<doubleQuotes46>marshaller<doubleQuotes46>/><newline46mondego><newline46mondego>        <property name=<doubleQuotes46>unmarshaller<doubleQuotes46> ref=<doubleQuotes46>marshaller<doubleQuotes46>/><newline46mondego><newline46mondego>    </bean><newline46mondego>"
"6226splitHere46","2409340splitHere46","public class MyWsClient extends WebServiceGatewaySupport {<newline46mondego> //if you need some Dao, Services, just @Autowired here.<newline46mondego><newline46mondego>    public MyWsClient(WebServiceMessageFactory messageFactory) {<newline46mondego>        super(messageFactory);<newline46mondego>    }<newline46mondego><newline46mondego>    // here is the operation defined in your wsdl<newline46mondego>    public Object someOperation(Object parameter){<newline46mondego><newline46mondego>      //instantiate the xmlbeans generated class, infact, the instance would be the document (marshaled) you are gonna send to the WS<newline46mondego><newline46mondego>      SomePojo requestDoc = SomePojo.Factory.newInstance(); // the factory and other methods are prepared by xmlbeans<newline46mondego>      ResponsePojo responseDoc = (ResponsePojo)getWebServiceTemplate().marshalSendAndReceive(requestDoc); // here invoking the WS<newline46mondego><newline46mondego><newline46mondego>//then you can get the returned object from the responseDoc.<newline46mondego><newline46mondego>   }<newline46mondego>"
"6227splitHere46","2409390splitHere46","if (isValid == false) { ... }<newline46mondego>"
"6228splitHere46","2409390splitHere46","="
"6229splitHere46","2409390splitHere46","=="
"6230splitHere46","2409665splitHere46","GregorianCalendar"
"6231splitHere46","2409665splitHere46","cal.after(startCal) && cal.before(endCal)"
"6232splitHere46","2409693splitHere46","public class MyClass {<newline46mondego>    private String fileName;<newline46mondego><newline46mondego>    public MyClass() {<newline46mondego>        final Date today = Calendar.getInstance().getTime();<newline46mondego>        final DateFormat yymmdd = new SimpleDateFormat(<doubleQuotes46>yyMMdd<doubleQuotes46>); <newline46mondego><newline46mondego>        this.fileName = <doubleQuotes46>file_<doubleQuotes46> + yymmdd.format(TODAY);<newline46mondego>    }<newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6233splitHere46","2409693splitHere46","static final"
"6234splitHere46","2409693splitHere46","DateFormat"
"6235splitHere46","2409693splitHere46","public class MyClass {<newline46mondego>    private static final String FILENAME_DATE_PATTERN = <doubleQuotes46>yyMMdd<doubleQuotes46>;<newline46mondego><newline46mondego>    public void myMethod() {<newline46mondego>        final DateFormat format = new SimpleDateFormat(FILENAME_DATE_PATTERN);<newline46mondego>        // do some formatting<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6236splitHere46","2409892splitHere46","<dynamic-attributes>true</dynamic-attributes><newline46mondego>"
"6237splitHere46","2409892splitHere46",".tld"
"6238splitHere46","2409892splitHere46","DynamicAttributes"
"6239splitHere46","2410007splitHere46","03"
"6240splitHere46","2410007splitHere46","DateFormat df = new SimpleDateFormat(<doubleQuotes46>yyyy.MMMdd HH:mm:ss SSS<doubleQuotes46>);<newline46mondego>"
"6241splitHere46","2410160splitHere46","@PrePersist"
"6242splitHere46","2410160splitHere46","@PreUpdate"
"6243splitHere46","2410160splitHere46","@PreRemove"
"6244splitHere46","2410217splitHere46","new Message();"
"6245splitHere46","2410217splitHere46","text"
"6246splitHere46","2410217splitHere46","null"
"6247splitHere46","2410405splitHere46","ac"
"6248splitHere46","2410558splitHere46","carimage = dataSetScan.next();<newline46mondego>"
"6249splitHere46","2410558splitHere46","if(dataSetScanner.hasNext()){<newline46mondego>    carimage = dataSetScan.next();<newline46mondego>}<newline46mondego>else{<newline46mondego>    carimage =  null;<newline46mondego>}<newline46mondego>"
"6250splitHere46","2410558splitHere46","sql += carimage  == null ? <doubleQuotes46>NULL<doubleQuotes46> : <doubleQuotes46>'<doubleQuotes46> + carimage + <doubleQuotes46>' <doubleQuotes46>;<newline46mondego>"
"6251splitHere46","2410600splitHere46","import java.util.concurrent.Callable;<newline46mondego>import java.util.concurrent.ExecutionException;<newline46mondego>import java.util.concurrent.FutureTask;<newline46mondego><newline46mondego>public class LazyInitRace {<newline46mondego><newline46mondego>    public class ExpensiveObject {<newline46mondego>        public ExpensiveObject() {<newline46mondego>            try {<newline46mondego>                Thread.sleep(1000);<newline46mondego>            } catch (InterruptedException e) {<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    private ExpensiveObject instance = null;<newline46mondego><newline46mondego>    public ExpensiveObject getInstance() {<newline46mondego>        if (instance == null)<newline46mondego>            instance = new ExpensiveObject();<newline46mondego>        return instance;<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        final LazyInitRace lazyInitRace = new LazyInitRace();<newline46mondego><newline46mondego>        FutureTask<ExpensiveObject> target1 = new FutureTask<ExpensiveObject>(<newline46mondego>                new Callable<ExpensiveObject>() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public ExpensiveObject call() throws Exception {<newline46mondego>                        return lazyInitRace.getInstance();<newline46mondego>                    }<newline46mondego>                });<newline46mondego>        new Thread(target1).start();<newline46mondego><newline46mondego>        FutureTask<ExpensiveObject> target2 = new FutureTask<ExpensiveObject>(<newline46mondego>                new Callable<ExpensiveObject>() {<newline46mondego><newline46mondego>                    @Override<newline46mondego>                    public ExpensiveObject call() throws Exception {<newline46mondego>                        return lazyInitRace.getInstance();<newline46mondego>                    }<newline46mondego>                });<newline46mondego>        new Thread(target2).start();<newline46mondego><newline46mondego>        try {<newline46mondego>            System.out.println(target1.get() == target2.get());<newline46mondego>        } catch (InterruptedException e) {<newline46mondego>        } catch (ExecutionException e) {<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6252splitHere46","2410843splitHere46","DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();<newline46mondego>rightRenderer.setHorizontalAlignment( JLabel.RIGHT );<newline46mondego>table.getColumnModel().getColumn(???).setCellRenderer( rightRenderer );<newline46mondego>"
"6253splitHere46","2410999splitHere46","new Guid(bytes)"
"6254splitHere46","2410999splitHere46","Guid"
"6255splitHere46","2410999splitHere46","ToString"
"6256splitHere46","2410999splitHere46","Guid"
"6257splitHere46","2411006splitHere46","import java.io.IOException;<newline46mondego><newline46mondego>import javax.servlet.Filter;<newline46mondego>import javax.servlet.FilterChain;<newline46mondego>import javax.servlet.FilterConfig;<newline46mondego>import javax.servlet.ServletException;<newline46mondego>import javax.servlet.ServletRequest;<newline46mondego>import javax.servlet.ServletResponse;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego><newline46mondego>import org.apache.log4j.Logger;<newline46mondego><newline46mondego>public class ExceptionFilter implements Filter{<newline46mondego><newline46mondego>private static final Logger logger = Logger.getLogger(ExceptionFilter.class);<newline46mondego>private ExceptionService exceptionService = null;<newline46mondego>@Override<newline46mondego>public void destroy() {<newline46mondego>    exceptionService.shutdown();<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void doFilter(ServletRequest rq, ServletResponse rs, FilterChain chain) throws IOException, ServletException {<newline46mondego>    try {<newline46mondego>        chain.doFilter(rq, rs); // this calls the servlet which is where your exceptions will bubble up from<newline46mondego>    } catch (Throwable t) {<newline46mondego>        // deal with exception, then do redirect to custom jsp page<newline46mondego>        logger.warn(t);<newline46mondego>        exceptionService.dealWithException(t); // you could have a service to track counts of exceptions / log them to DB etc<newline46mondego>        HttpServletResponse response = (HttpServletResponse) resp;<newline46mondego>        response.sendRedirect(<doubleQuotes46>somejsp.jsp<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>@Override<newline46mondego>public void init(FilterConfig arg0) throws ServletException {<newline46mondego>    // TODO Auto-generated method stub<newline46mondego>    exceptionService = new ExceptionService();<newline46mondego>}<newline46mondego><newline46mondego>}<newline46mondego>"
"6258splitHere46","2411006splitHere46","<filter><newline46mondego>  <filter-name>ExceptionFilter</filter-name><newline46mondego>  <filter-class>com.example.ExceptionFilter</filter-class><newline46mondego></filter><newline46mondego><newline46mondego><filter-mapping><newline46mondego>  <filter-name>ExceptionFilter</filter-name><newline46mondego>  <servlet-name>MyMainServlet</servlet-name><newline46mondego></filter-mapping><newline46mondego>"
"6259splitHere46","2411034splitHere46","i ^= 1;"
"6260splitHere46","2411034splitHere46","0 <--> 1"
"6261splitHere46","2411034splitHere46","0 ^ 1 = 1<newline46mondego>1 ^ 1 = 0<newline46mondego>"
"6262splitHere46","2411054splitHere46","Java/ Code Style / Formatter"
"6263splitHere46","2411054splitHere46","Mainmenu / Window / Preferences"
"6264splitHere46","2411054splitHere46","Java / Editor / Save Action"
"6265splitHere46","2411149splitHere46","for(int index = 0; index < arry.getNums().length; index++) {<newline46mondego>    System.out.print(arry.getNums());<newline46mondego>}<newline46mondego>"
"6266splitHere46","2411149splitHere46","for(int index = 0; index < arry.getNums().length; index++) {<newline46mondego>    // println instead of print to get one value per line<newline46mondego>    // Note the [index] bit to get a single value<newline46mondego>    System.out.println(arry.getNums()[index]);<newline46mondego>}<newline46mondego>"
"6267splitHere46","2411149splitHere46","for (int value : arry.getNums()) {<newline46mondego>   System.out.println(value);<newline46mondego>}<newline46mondego>"
"6268splitHere46","2411149splitHere46","toString()"
"6269splitHere46","2411149splitHere46","Arrays.toString"
"6270splitHere46","2411199splitHere46","PublicKey publicKey = <newline46mondego>    KeyFactory.getInstance(<doubleQuotes46>RSA<doubleQuotes46>).generatePublic(new X509EncodedKeySpec(bytes));<newline46mondego>"
"6271splitHere46","2411377splitHere46","java -version"
"6272splitHere46","2411427splitHere46","@Entity<newline46mondego>public class ClassA {<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue <newline46mondego>    private Integer id;<newline46mondego><newline46mondego>    // Hibernate will create CLASSA_APPROVALITEM to link both class<newline46mondego>    @OneToMany<newline46mondego>    private List<ApprovalItem> approvalItemList;<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>@Entity<newline46mondego>public class ClassB {<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue <newline46mondego>    private Integer id;<newline46mondego><newline46mondego>    // Hibernate will create CLASSB_APPROVALITEM to link both class<newline46mondego>    @OneToMany<newline46mondego>    private List<ApprovalItem> approvalItemList;<newline46mondego><newline46mondego>}<newline46mondego>"
"6273splitHere46","2411427splitHere46","@Entity<newline46mondego>public class ApprovalItem {<newline46mondego><newline46mondego>    @Id<newline46mondego>    @GeneratedValue <newline46mondego>    private Integer id;<newline46mondego><newline46mondego>    // Nothing else<newline46mondego><newline46mondego>}<newline46mondego>"
"6274splitHere46","2411427splitHere46","AnnotationConfiguration configuration = new AnnotationConfiguration();<newline46mondego><newline46mondego>configuration<newline46mondego>    .addAnnotatedClass(ClassA.class)<newline46mondego>    .addAnnotatedClass(ClassB.class)<newline46mondego>    .addAnnotatedClass(ApprovalItem.class)<newline46mondego>    .setProperty(Environment.USER, <TYPE_YOUR_USER>)<newline46mondego>    .setProperty(Environment.PASS, <TYPE_YOUR_PASSWORD>)<newline46mondego>    .setProperty(Environment.URL, <TYPE_YOUR_URL>)<newline46mondego>    .setProperty(Environment.DIALECT, <TYPE_YOUR_DIALECT>)<newline46mondego>    .setProperty(Environment.DRIVER, <TYPE_YOUR_DRIVER>);<newline46mondego><newline46mondego>SchemaExport schema = new SchemaExport(configuration);<newline46mondego>schema.setOutputFile(<doubleQuotes46>schema.sql<doubleQuotes46>);<newline46mondego><newline46mondego>schema.create(<DO_YOU_WANT_TO_PRINT_TO_THE_CONSOLE>, <DO_YOU_WANT_TO_EXPORT_THE_SCRIPT_TO_THE_DATABASE>);<newline46mondego>"
"6275splitHere46","2411440splitHere46","EntityManager"
"6276splitHere46","2411440splitHere46","@PersistenceContext<newline46mondego>EntityManager em;<newline46mondego>"
"6277splitHere46","2411440splitHere46","EntityManager"
"6278splitHere46","2411440splitHere46","persistence.xml"
"6279splitHere46","2411440splitHere46","EntityManager"
"6280splitHere46","2411440splitHere46","@PersistenceContext(unitName = <doubleQuotes46>MyFirstPU<doubleQuotes46>)<newline46mondego>EntityManager em;<newline46mondego>"
"6281splitHere46","2411440splitHere46","eclipselink.target-database"
"6282splitHere46","2411480splitHere46","public abstract class Package {<newline46mondego>    protected String description;  // These shouldn't be private fields instead of protected?<newline46mondego>    protected String packagingCode; // Nah, I don't think so, otherwise how could I store a value into the Quantity field? =P <newline46mondego>    protected Dimension dimensions;  <newline46mondego>    protected Weight weight;  <newline46mondego>    protected int quantity;<newline46mondego><newline46mondego>    // Constructors, getters and setters...<newline46mondego><newline46mondego>    public virtual int getQuantity {<newline46mondego>        throw new NotImplementedException();<newline46mondego>    }<newline46mondego><newline46mondego>    public virtual int setQuantity(int quantity) {<newline46mondego>        throw new NotImplementedException();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public final class OrderQuantityPackage extends Package {<newline46mondego>    public override int getQuantity {<newline46mondego>        return super.quantity;<newline46mondego>    }<newline46mondego><newline46mondego>    public override void setQuantity(int quantity) {<newline46mondego>        super.quantity = quantity;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6283splitHere46","2411480splitHere46","CastedType variable = (CastedType)TypeCast; <newline46mondego>"
"6284splitHere46","2411623splitHere46","CallbackBase"
"6285splitHere46","2411623splitHere46","abstract class CallbackBase<T> implements AsyncCallback<T> {<newline46mondego>  public abstract void doStuff(T result);<newline46mondego><newline46mondego>  public void MethodFromAsyncCallback(T result) {<newline46mondego>    // general stuff (T is a subclass of Object)<newline46mondego>    doStuff(result);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6286splitHere46","2411623splitHere46","class SpecificCallback extends CallbackBase<Integer> {<newline46mondego>  public void doStuff(Integer result) {<newline46mondego>    // no need to cast<newline46mondego>    // do stuff with result<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6287splitHere46","2411623splitHere46","DoSomething"
"6288splitHere46","2411623splitHere46","AsyncCallback<Integer>"
"6289splitHere46","2411623splitHere46","SpecificCallback"
"6290splitHere46","2411623splitHere46","CallbackBase"
"6291splitHere46","2411623splitHere46","AsyncCallback<T>"
"6292splitHere46","2411623splitHere46","class GeneralCallbackWrapper<T> implements AsyncCallback<T> {<newline46mondego>  private final AsyncCallback<? super T> delegate;<newline46mondego><newline46mondego>  public GeneralCallbackWrapper(AsyncCallback<? super T> delegate) {<newline46mondego>    this.delegate = delegate;<newline46mondego>  }<newline46mondego><newline46mondego>  public void MethodFromAsyncCallback(T result) {<newline46mondego>    // general stuff here<newline46mondego>    delegate.MethodFromAsyncCallback(result);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6293splitHere46","2411645splitHere46","f(n)"
"6294splitHere46","2411645splitHere46","fibonacci(n)"
"6295splitHere46","2411645splitHere46","f(5) = f(4) + f(3)<newline46mondego>f(5) = f(3) + f(2) + f(2) + f(1)<newline46mondego>f(5) = f(2) + f(1) + f(1) + f(0) + f(1) + f(0) + f(1)<newline46mondego>f(5) = f(1) + f(0) + f(1) + f(1) + f(0) + f(1) + f(0) + f(1)<newline46mondego>f(5) =  1   +  1   +  1   +  1   +  1   +  1   +  1   +  1<newline46mondego>"
"6296splitHere46","2411814splitHere46","GridBagLayout"
"6297splitHere46","2411814splitHere46","GridBagConstraints"
"6298splitHere46","2411814splitHere46","parent_panel.setLayout(new GridBagLayout());<newline46mondego>parent_panel.add(child_panel, new GridBagConstraints());<newline46mondego>"
"6299splitHere46","2411814splitHere46","BoxLayout"
"6300splitHere46","2411814splitHere46","parent_panel.setLayout(new BoxLayout(parent_panel, BoxLayout.PAGE_AXIS));<newline46mondego>Box horizontalBox = Box.createHorizontalBox(); <newline46mondego>horizontalBox.add(Box.createHorizontalGlue()); <newline46mondego>horizontalBox.add(child_panel); <newline46mondego>horizontalBox.add(Box.createHorizontalGlue()); <newline46mondego>Box verticalBox = Box.createVerticalBox(); <newline46mondego>verticalBox.add(Box.createVerticalGlue()); <newline46mondego>verticalBox.add(horizontalBox); // one inside the other<newline46mondego>verticalBox.add(Box.createVerticalGlue()); <newline46mondego>"
"6301splitHere46","2412059splitHere46","import java.awt.Color;<newline46mondego>import java.awt.Dimension;<newline46mondego>import java.awt.Font;<newline46mondego>import java.awt.Graphics;<newline46mondego>import java.awt.Graphics2D;<newline46mondego>import java.awt.font.FontRenderContext;<newline46mondego>import java.awt.font.TextLayout;<newline46mondego>import java.awt.geom.Point2D;<newline46mondego>import java.awt.geom.Rectangle2D;<newline46mondego>import javax.swing.JFrame;<newline46mondego>import javax.swing.JPanel;<newline46mondego><newline46mondego>public class TestFontLayout extends JPanel {<newline46mondego><newline46mondego>    public enum AnchorPoint{<newline46mondego>        UPPER_LEFT,<newline46mondego>        TOP_CENTER,<newline46mondego>        UPPER_RIGHT,<newline46mondego>        RIGHT_CENTER,<newline46mondego>        LOWER_RIGHT,<newline46mondego>        BOTTOM_CENTER,<newline46mondego>        LOWER_LEFT,<newline46mondego>        LEFT_CENTER,<newline46mondego>        CENTER<newline46mondego>    };<newline46mondego><newline46mondego>    public void drawText(TextLayout text, AnchorPoint point, Graphics2D g2, float x, float y) {<newline46mondego>        float translationX = 0.0f;<newline46mondego>        float translationY = 0.0f;<newline46mondego><newline46mondego>        Rectangle2D bounds = text.getBounds();<newline46mondego>        float midYOffset = (float) bounds.getHeight()/2;<newline46mondego>        float midXOffset = (float) -bounds.getWidth()/2;<newline46mondego><newline46mondego>        float topYOffset = (float) bounds.getHeight();<newline46mondego>        float bottomYOffset = 0.0f;<newline46mondego><newline46mondego>        float leftXOffset = 0.0f;<newline46mondego>        float rightXOffset = (float) -bounds.getWidth();<newline46mondego><newline46mondego>        // Adjust x values<newline46mondego>        switch (point) {<newline46mondego>            // Left<newline46mondego>            case UPPER_LEFT:<newline46mondego>            case LOWER_LEFT:<newline46mondego>            case LEFT_CENTER:<newline46mondego>                translationX = leftXOffset;<newline46mondego>                break;<newline46mondego>                // Mid<newline46mondego>            case TOP_CENTER:<newline46mondego>            case BOTTOM_CENTER:<newline46mondego>            case CENTER:<newline46mondego>                translationX = midXOffset;<newline46mondego>                break;<newline46mondego>            // Right<newline46mondego>            case UPPER_RIGHT:<newline46mondego>            case RIGHT_CENTER:<newline46mondego>            case LOWER_RIGHT:<newline46mondego>                translationX = rightXOffset;<newline46mondego>        }<newline46mondego><newline46mondego>        // Adjust y values<newline46mondego>        switch (point) {<newline46mondego>            // Top<newline46mondego>            case UPPER_LEFT:<newline46mondego>            case UPPER_RIGHT:<newline46mondego>            case TOP_CENTER:<newline46mondego>                translationY = topYOffset;<newline46mondego>                break;<newline46mondego>            // Mid<newline46mondego>            case LEFT_CENTER:<newline46mondego>            case CENTER:<newline46mondego>            case RIGHT_CENTER:<newline46mondego>                translationY = midYOffset;<newline46mondego>                break;<newline46mondego>            // Bottom<newline46mondego>            case LOWER_LEFT:<newline46mondego>            case BOTTOM_CENTER:<newline46mondego>            case LOWER_RIGHT:<newline46mondego>                translationY = bottomYOffset;<newline46mondego>        }<newline46mondego><newline46mondego>        text.draw(g2, x + translationX, y + translationY);<newline46mondego><newline46mondego>    }<newline46mondego><newline46mondego>    public TestFontLayout() {<newline46mondego>        super();<newline46mondego>        setPreferredSize(new Dimension(400,400));<newline46mondego>    }<newline46mondego>    @Override<newline46mondego>    public void paintComponent(Graphics g) {<newline46mondego>        Graphics2D g2 = (Graphics2D) g;<newline46mondego>        // Ensure that the default painting occurs<newline46mondego>        super.paintComponent(g);<newline46mondego><newline46mondego>        Point2D loc = new Point2D.Double(getWidth()/2,getHeight()/2);<newline46mondego>        Font font = Font.decode(<doubleQuotes46>Helvetica<doubleQuotes46>);<newline46mondego>        FontRenderContext frc = g2.getFontRenderContext();<newline46mondego>        TextLayout layout = new TextLayout(<doubleQuotes46>This is a string<doubleQuotes46>, font, frc);<newline46mondego><newline46mondego>        g2.setColor(Color.RED);<newline46mondego>        g2.drawRect(getWidth()/2, getHeight()/2, 1,1);<newline46mondego><newline46mondego>        g2.setColor(Color.PINK);<newline46mondego>        drawText(layout, AnchorPoint.UPPER_LEFT, g2, 0, 0);<newline46mondego><newline46mondego>        g2.setColor(Color.BLUE);<newline46mondego>        drawText(layout, AnchorPoint.TOP_CENTER, g2, getWidth()/2, 0);<newline46mondego><newline46mondego>        g2.setColor(Color.ORANGE);<newline46mondego>        drawText(layout, AnchorPoint.UPPER_RIGHT, g2, getWidth(), 0);<newline46mondego><newline46mondego>        g2.setColor(Color.CYAN);<newline46mondego>        drawText(layout, AnchorPoint.RIGHT_CENTER, g2, getWidth(), getHeight()/2);<newline46mondego><newline46mondego>        g2.setColor(Color.ORANGE);<newline46mondego>        drawText(layout, AnchorPoint.LOWER_RIGHT, g2, getWidth(), getHeight());<newline46mondego><newline46mondego>        g2.setColor(Color.BLACK);<newline46mondego>        drawText(layout, AnchorPoint.BOTTOM_CENTER, g2, getWidth()/2, getHeight());<newline46mondego><newline46mondego><newline46mondego>        g2.setColor(Color.YELLOW);<newline46mondego>        drawText(layout, AnchorPoint.LOWER_LEFT, g2, 0, getHeight());<newline46mondego><newline46mondego>        g2.setColor(Color.DARK_GRAY);<newline46mondego>        drawText(layout, AnchorPoint.LEFT_CENTER, g2, 0, getHeight()/2);<newline46mondego><newline46mondego><newline46mondego>        g2.setColor(Color.MAGENTA);<newline46mondego>        drawText(layout, AnchorPoint.CENTER, g2, getWidth()/2, getHeight()/2);<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        JFrame frame = new JFrame(<doubleQuotes46><doubleQuotes46>);<newline46mondego>        frame.add(new TestFontLayout());<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.pack();<newline46mondego>        frame.setVisible(true);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6302splitHere46","2412120splitHere46","getValue"
"6303splitHere46","2412120splitHere46","TableCellRenderer"
"6304splitHere46","2412120splitHere46","TableCellRenderer tableCellRenderer = new DefaultTableCellRenderer() {<newline46mondego><newline46mondego>    SimpleDateFormat f = new SimpleDateFormat(<doubleQuotes46>MM/dd/yy<doubleQuotes46>);<newline46mondego><newline46mondego>    public Component getTableCellRendererComponent(JTable table,<newline46mondego>            Object value, boolean isSelected, boolean hasFocus,<newline46mondego>            int row, int column) {<newline46mondego>        if( value instanceof Date) {<newline46mondego>            value = f.format(value);<newline46mondego>        }<newline46mondego>        return super.getTableCellRendererComponent(table, value, isSelected,<newline46mondego>                hasFocus, row, column);<newline46mondego>    }<newline46mondego>};<newline46mondego><newline46mondego>table.getColumnModel().getColumn(0).setCellRenderer(tableCellRenderer);<newline46mondego>"
"6305splitHere46","2412164splitHere46","sharedData"
"6306splitHere46","2412164splitHere46","java.util.Collections.synchronizedMap()"
"6307splitHere46","2412164splitHere46","java.util.Collections.unmodifiableMap()"
"6308splitHere46","2412164splitHere46","java.util.concurrent"
"6309splitHere46","2412164splitHere46","synchronizedMap"
"6310splitHere46","2412164splitHere46","unmodifiableMap"
"6311splitHere46","2412178splitHere46","flush()"
"6312splitHere46","2412178splitHere46","println()"
"6313splitHere46","2412178splitHere46","...<newline46mondego>out = new PrintWriter(os);<newline46mondego>out.println(<doubleQuotes46>Done with the bingo<doubleQuotes46>);<newline46mondego>out.flush();<newline46mondego>...<newline46mondego>"
"6314splitHere46","2412178splitHere46","...<newline46mondego>out = new PrintWriter(os, true);    // autoflush<newline46mondego>out.println(<doubleQuotes46>Done with the bingo<doubleQuotes46>);<newline46mondego>...<newline46mondego>"
"6315splitHere46","2412425splitHere46","org.springframework.transaction"
"6316splitHere46","2412425splitHere46","public void doSomething() {<newline46mondego>    Logger txLogger = Logger.getLogger(<doubleQuotes46>org.springframework.transaction<doubleQuotes46>);<newline46mondego>    Level defaultLevel = txLogger.getLevel();<newline46mondego>    txLogger.setLevel(Level.DEBUG);<newline46mondego>    // do my stuff<newline46mondego>    txLogger.setLevel(defaultLevel);<newline46mondego>}<newline46mondego>"
"6317splitHere46","2412454splitHere46","Component.getInstance()"
"6318splitHere46","2412454splitHere46","@Name(<doubleQuotes46>someValidator<doubleQuotes46>)<newline46mondego>@Validator<newline46mondego>public class SomeValidator implements javax.faces.validator.Validator {<newline46mondego><newline46mondego>  public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {<newline46mondego><newline46mondego>    MyArrayBean bean = (MyArrayBean)Component.getInstance(<doubleQuotes46>myArrayBean<doubleQuotes46>);<newline46mondego>    String[] arrayA = bean.getArray();<newline46mondego><newline46mondego>    for(String a : arrayA) {<newline46mondego>      //etc<newline46mondego>    }<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6319splitHere46","2412454splitHere46","<f:attribute>"
"6320splitHere46","2412454splitHere46","<h:inputText value=<doubleQuotes46>#{someBean.stringB}<doubleQuotes46>><newline46mondego>    <f:validator validatorId=<doubleQuotes46>someValidator<doubleQuotes46> /><newline46mondego>    <f:attribute name=<doubleQuotes46>arrayA<doubleQuotes46> value=<doubleQuotes46>#{myArrayBean.array}<doubleQuotes46>/><newline46mondego></h:inputText><newline46mondego>"
"6321splitHere46","2412454splitHere46","Component.getInstance()"
"6322splitHere46","2412454splitHere46","String[] arrayA = component.getValueExpression(<doubleQuotes46>arrayA<doubleQuotes46>).getValue(context.getELContext());<newline46mondego>"
"6323splitHere46","2412454splitHere46","String[]"
"6324splitHere46","2412468splitHere46","''"
"6325splitHere46","2412468splitHere46","['',{}]"
"6326splitHere46","2412468splitHere46","_d"
"6327splitHere46","2412468splitHere46",">>> x = patricia()<newline46mondego>>>> x.addWord('abcabc')<newline46mondego>>>> x._d<newline46mondego>{'a': ['bcabc', {}]}<newline46mondego>>>> x.addWord('abcdef')<newline46mondego>>>> x._d<newline46mondego>{'a': ['bc', {'a': ['bc', {}], 'd': ['ef', {}]}]}<newline46mondego>>>> x.addWord('abc')<newline46mondego>{'a': ['bc', {'a': ['bc', {}], '': ['', {}], 'd': ['ef', {}]}]}<newline46mondego>"
"6328splitHere46","2412468splitHere46","class patricia():<newline46mondego>    def __init__(self):<newline46mondego>        self._data = {}<newline46mondego><newline46mondego>    def addWord(self, word):<newline46mondego>        data = self._data<newline46mondego>        i = 0<newline46mondego>        while 1:<newline46mondego>            try:<newline46mondego>                node = data[word[i:i+1]]<newline46mondego>            except KeyError:<newline46mondego>                if data:<newline46mondego>                    data[word[i:i+1]] = [word[i+1:],{}]<newline46mondego>                else:<newline46mondego>                    if word[i:i+1] == '':<newline46mondego>                        return<newline46mondego>                    else:<newline46mondego>                        if i != 0:<newline46mondego>                            data[''] = ['',{}]<newline46mondego>                        data[word[i:i+1]] = [word[i+1:],{}]<newline46mondego>                return<newline46mondego><newline46mondego>            i += 1<newline46mondego>            if word.startswith(node[0],i):<newline46mondego>                if len(word[i:]) == len(node[0]):<newline46mondego>                    if node[1]:<newline46mondego>                        try:<newline46mondego>                            node[1]['']<newline46mondego>                        except KeyError:<newline46mondego>                            data = node[1]<newline46mondego>                            data[''] = ['',{}]<newline46mondego>                    return<newline46mondego>                else:<newline46mondego>                    i += len(node[0])<newline46mondego>                    data = node[1]<newline46mondego>            else:<newline46mondego>                ii = i<newline46mondego>                j = 0<newline46mondego>                while ii != len(word) and j != len(node[0]) and \<newline46mondego>                      word[ii:ii+1] == node[0][j:j+1]:<newline46mondego>                    ii += 1<newline46mondego>                    j += 1<newline46mondego>                tmpdata = {}<newline46mondego>                tmpdata[node[0][j:j+1]] = [node[0][j+1:],node[1]]<newline46mondego>                tmpdata[word[ii:ii+1]] = [word[ii+1:],{}]<newline46mondego>                data[word[i-1:i]] = [node[0][:j],tmpdata]<newline46mondego>                return<newline46mondego><newline46mondego>    def isWord(self,word):<newline46mondego>        data = self._data<newline46mondego>        i = 0<newline46mondego>        while 1:<newline46mondego>            try:<newline46mondego>                node = data[word[i:i+1]]<newline46mondego>            except KeyError:<newline46mondego>                return False<newline46mondego>            i += 1<newline46mondego>            if word.startswith(node[0],i):<newline46mondego>                if len(word[i:]) == len(node[0]):<newline46mondego>                    if node[1]:<newline46mondego>                        try:<newline46mondego>                            node[1]['']<newline46mondego>                        except KeyError:<newline46mondego>                            return False<newline46mondego>                    return True<newline46mondego>                else:<newline46mondego>                    i += len(node[0])<newline46mondego>                    data = node[1]<newline46mondego>            else:<newline46mondego>                return False<newline46mondego><newline46mondego>    def isPrefix(self,word):<newline46mondego>        data = self._data<newline46mondego>        i = 0<newline46mondego>        wordlen = len(word)<newline46mondego>        while 1:<newline46mondego>            try:<newline46mondego>                node = data[word[i:i+1]]<newline46mondego>            except KeyError:<newline46mondego>                return False<newline46mondego>            i += 1<newline46mondego>            if word.startswith(node[0][:wordlen-i],i):<newline46mondego>                if wordlen - i > len(node[0]):<newline46mondego>                    i += len(node[0])<newline46mondego>                    data = node[1]<newline46mondego>                else:<newline46mondego>                    return True<newline46mondego>            else:<newline46mondego>                return False<newline46mondego><newline46mondego>    def removeWord(self,word):<newline46mondego>        data = self._data<newline46mondego>        i = 0<newline46mondego>        while 1:<newline46mondego>            try:<newline46mondego>                node = data[word[i:i+1]]<newline46mondego>            except KeyError:<newline46mondego>                print <doubleQuotes46>Word is not in trie.<doubleQuotes46><newline46mondego>                return<newline46mondego>            i += 1<newline46mondego>            if word.startswith(node[0],i):<newline46mondego>                if len(word[i:]) == len(node[0]):<newline46mondego>                    if node[1]:<newline46mondego>                        try:<newline46mondego>                            node[1]['']<newline46mondego>                            node[1].pop('')<newline46mondego>                        except KeyError:<newline46mondego>                            print <doubleQuotes46>Word is not in trie.<doubleQuotes46><newline46mondego>                        return<newline46mondego>                    data.pop(word[i-1:i])<newline46mondego>                    return<newline46mondego>                else:<newline46mondego>                    i += len(node[0])<newline46mondego>                    data = node[1]<newline46mondego>            else:<newline46mondego>                print <doubleQuotes46>Word is not in trie.<doubleQuotes46><newline46mondego>                return<newline46mondego><newline46mondego><newline46mondego>    __getitem__ = isWord<newline46mondego>"
"6329splitHere46","2412468splitHere46","__getitem__"
"6330splitHere46","2412468splitHere46","x['abc']<newline46mondego>"
"6331splitHere46","2412506splitHere46","useDaylight"
"6332splitHere46","2412510splitHere46","${project.build.directory}/generated-sources/<tool>"
"6333splitHere46","2412510splitHere46","add-sources"
"6334splitHere46","2412510splitHere46","generate-sources"
"6335splitHere46","2412510splitHere46","<project><newline46mondego>  ...<newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.codehaus.mojo</groupId><newline46mondego>        <artifactId>build-helper-maven-plugin</artifactId><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <id>add-mytool-sources</id><newline46mondego>            <phase>generate-sources</phase><newline46mondego>            <goals><newline46mondego>              <goal>add-source</goal><newline46mondego>            </goals><newline46mondego>            <configuration><newline46mondego>              <sources><newline46mondego>                <source>${project.build.directory}/generated-sources/mytool</source><newline46mondego>              </sources><newline46mondego>            </configuration><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego></project><newline46mondego>"
"6336splitHere46","2412747splitHere46","package suneido;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.util.ArrayList;<newline46mondego>import java.util.Enumeration;<newline46mondego>import java.util.jar.JarEntry;<newline46mondego>import java.util.jar.JarFile;<newline46mondego><newline46mondego>public class RunAllTests {<newline46mondego><newline46mondego>    public static void run(String jarfile) {<newline46mondego>        String[] tests = findTests(jarfile);<newline46mondego>        org.junit.runner.JUnitCore.main(tests);<newline46mondego>    }<newline46mondego><newline46mondego>    private static String[] findTests(String jarfile) {<newline46mondego>        ArrayList<String> tests = new ArrayList<String>();<newline46mondego>        try {<newline46mondego>            JarFile jf = new JarFile(jarfile);<newline46mondego>            for (Enumeration<JarEntry> e = jf.entries(); e.hasMoreElements();) {<newline46mondego>                String name = e.nextElement().getName();<newline46mondego>                if (name.startsWith(<doubleQuotes46>suneido/<doubleQuotes46>) && name.endsWith(<doubleQuotes46>Test.class<doubleQuotes46>)<newline46mondego>                        && !name.contains(<doubleQuotes46>$<doubleQuotes46>))<newline46mondego>                    tests.add(name.replaceAll(<doubleQuotes46>/<doubleQuotes46>, <doubleQuotes46>.<doubleQuotes46>)<newline46mondego>                            .substring(0, name.length() - 6));<newline46mondego>            }<newline46mondego>            jf.close();<newline46mondego>        } catch (IOException e) {<newline46mondego>            throw new RuntimeException(e);<newline46mondego>        }<newline46mondego>        return tests.toArray(new String[0]);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        run(<doubleQuotes46>jsuneido.jar<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6337splitHere46","2412886splitHere46","@TestExecutionListeners"
"6338splitHere46","2412886splitHere46","DependencyInjectionTestExecutionListener"
"6339splitHere46","2412886splitHere46","@Resource"
"6340splitHere46","2412886splitHere46","tObj"
"6341splitHere46","2412886splitHere46","@TestExecutionListeners({})"
"6342splitHere46","2412886splitHere46","DependencyInjectionTestExecutionListener"
"6343splitHere46","2412886splitHere46","tObj"
"6344splitHere46","2412886splitHere46","tObj"
"6345splitHere46","2412886splitHere46","@Test<newline46mondego>public void testBean() {<newline46mondego>    assertNotNull(<doubleQuotes46>tObj is null<doubleQuotes46>, tObj);<newline46mondego>}<newline46mondego>"
"6346splitHere46","2412886splitHere46","@TestExecutionListeners"
"6347splitHere46","2412886splitHere46","WebApplicationContextUtils.registerWebApplicationScopes()"
"6348splitHere46","2412886splitHere46","beanFactory.registerScope(WebApplicationContext.SCOPE_REQUEST, new RequestScope());<newline46mondego>"
"6349splitHere46","2412886splitHere46","@Test"
"6350splitHere46","2413050splitHere46","+---------------------------------------------+<newline46mondego>|                                             |<newline46mondego>|                    o                o       |<newline46mondego>|    o                                        |<newline46mondego>|                                             |<newline46mondego>|                                             |<newline46mondego>|                _.-''''`-._                  |<newline46mondego>|    o         ,'           `.             o  |<newline46mondego>|            ,'  o            `.              |<newline46mondego>|           .'    .            `.             |<newline46mondego>|           |      . .          |             |<newline46mondego>|           |         .         |   o         |<newline46mondego>|           |         X         |             |<newline46mondego>|   o       \                o  /             |<newline46mondego>|            \                 /              |<newline46mondego>|             `.             ,'               |<newline46mondego>|               `-._     _.-'                 |<newline46mondego>|                   `''''                     |<newline46mondego>|                                             |<newline46mondego>|                  o                          |<newline46mondego>|                                    o        |<newline46mondego>|                                             |<newline46mondego>|                                             |<newline46mondego>|     o                        o              |<newline46mondego>+---------------------------------------------+<newline46mondego>"
"6351splitHere46","2413080splitHere46","lookupTable"
"6352splitHere46","2413080splitHere46","public class BinaryArithmetic {<newline46mondego>    static String[] lookupTable = {<newline46mondego>        <doubleQuotes46>0+0+0=00<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>0+0+1=01<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>0+1+0=01<doubleQuotes46>, <newline46mondego>        <doubleQuotes46>0+1+1=10<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>1+0+0=01<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>1+0+1=10<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>1+1+0=10<doubleQuotes46>,<newline46mondego>        <doubleQuotes46>1+1+1=11<doubleQuotes46>,<newline46mondego>    };<newline46mondego>    static String lookup(char b1, char b2, char c) {<newline46mondego>        String formula = String.format(<doubleQuotes46>%c+%c+%c=<doubleQuotes46>, b1, b2, c);<newline46mondego>        for (String s : lookupTable) {<newline46mondego>            if (s.startsWith(formula)) {<newline46mondego>                return s.substring(s.indexOf(<doubleQuotes46>=<doubleQuotes46>) + 1);<newline46mondego>            }<newline46mondego>        }<newline46mondego>        throw new IllegalArgumentException();<newline46mondego>    }<newline46mondego>    static String zeroPad(String s, int length) {<newline46mondego>        while (s.length() < length) {<newline46mondego>            s = <doubleQuotes46>0<doubleQuotes46> + s;<newline46mondego>        }<newline46mondego>        return s;<newline46mondego>    }   <newline46mondego>    static String add(String s1, String s2) {<newline46mondego>        int length = Math.max(s1.length(), s2.length());<newline46mondego>        s1 = zeroPad(s1, length);<newline46mondego>        s2 = zeroPad(s2, length);<newline46mondego>        String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>        char carry = '0';<newline46mondego>        for (int i = length - 1; i >= 0; i--) {<newline46mondego>            String columnResult = lookup(s1.charAt(i), s2.charAt(i), carry);<newline46mondego>            result = columnResult.charAt(1) + result;<newline46mondego>            carry = columnResult.charAt(0);<newline46mondego>        }<newline46mondego>        if (carry == '1') {<newline46mondego>            result = carry + result;<newline46mondego>        }<newline46mondego>        return result;<newline46mondego>    }<newline46mondego>    public static void main(String args[]) {<newline46mondego>        System.out.println(add(<doubleQuotes46>11101<doubleQuotes46>, <doubleQuotes46>1001<doubleQuotes46>));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6353splitHere46","2413080splitHere46","multiply"
"6354splitHere46","2413080splitHere46","static String multiply(String s1, String s2) {<newline46mondego>    String result = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    String zeroSuffix = <doubleQuotes46><doubleQuotes46>;<newline46mondego>    for (int i = s2.length() - 1; i >= 0; i--) {<newline46mondego>        if (s2.charAt(i) == '1') {<newline46mondego>            result = add(result, s1 + zeroSuffix);<newline46mondego>        }<newline46mondego>        zeroSuffix += <doubleQuotes46>0<doubleQuotes46>;<newline46mondego>    }<newline46mondego>    return result;<newline46mondego>}<newline46mondego>"
"6355splitHere46","2413203splitHere46","after"
"6356splitHere46","2413203splitHere46","oneDate.after(twoDate)"
"6357splitHere46","2413203splitHere46","java.util.Date"
"6358splitHere46","2413203splitHere46","one.after(twoDate)"
"6359splitHere46","2413203splitHere46","after(Date)"
"6360splitHere46","2413203splitHere46","twoDate"
"6361splitHere46","2413203splitHere46","Date"
"6362splitHere46","2413203splitHere46","Timestamp"
"6363splitHere46","2413203splitHere46","one.after(two)"
"6364splitHere46","2413203splitHere46","Timestamp.after(Timestamp)"
"6365splitHere46","2413203splitHere46","Date.after(Date)"
"6366splitHere46","2413203splitHere46","Timestamp"
"6367splitHere46","2413203splitHere46","Date"
"6368splitHere46","2413203splitHere46","oneDate"
"6369splitHere46","2413203splitHere46","twoDate"
"6370splitHere46","2413203splitHere46","Date"
"6371splitHere46","2413203splitHere46","Timestamp"
"6372splitHere46","2413224splitHere46","Map<Room,List<Room>>"
"6373splitHere46","2413224splitHere46","Room"
"6374splitHere46","2413224splitHere46","Room"
"6375splitHere46","2413224splitHere46","boolean[][] adj"
"6376splitHere46","2413224splitHere46","adj[i][j] == true"
"6377splitHere46","2413224splitHere46","i"
"6378splitHere46","2413224splitHere46","j"
"6379splitHere46","2413290splitHere46","<doubleQuotes46>javax.servlet.*<doubleQuotes46>"
"6380splitHere46","2413402splitHere46","Callable<V>"
"6381splitHere46","2413402splitHere46","Thread"
"6382splitHere46","2413402splitHere46","Runnable"
"6383splitHere46","2413402splitHere46","Future<V>"
"6384splitHere46","2413402splitHere46","ExecutorService"
"6385splitHere46","2413402splitHere46","package com.stackoverflow.q2413389;<newline46mondego><newline46mondego>import java.util.Arrays;<newline46mondego>import java.util.List;<newline46mondego>import java.util.concurrent.Callable;<newline46mondego>import java.util.concurrent.ExecutorService;<newline46mondego>import java.util.concurrent.Executors;<newline46mondego>import java.util.concurrent.Future;<newline46mondego><newline46mondego>public class Test {<newline46mondego><newline46mondego>    public static void main(String... args) throws Exception {<newline46mondego>        ExecutorService executor = Executors.newCachedThreadPool();<newline46mondego>        List<Future<String>> results = executor.invokeAll(Arrays.asList(new Task()));<newline46mondego>        for (Future<String> result : results) {<newline46mondego>            System.out.println(result.get()); // Prints <doubleQuotes46>myResult<doubleQuotes46> after 2 seconds.<newline46mondego>        }<newline46mondego>        executor.shutdown();<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego><newline46mondego>class Task implements Callable<String> {<newline46mondego><newline46mondego>    public String call() throws Exception {<newline46mondego>        Thread.sleep(2000); // Do your running task here, this example lasts 2 seconds.<newline46mondego>        return <doubleQuotes46>myResult<doubleQuotes46>;<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"6386splitHere46","2413402splitHere46","ScheduledExecutorService"
"6387splitHere46","2413402splitHere46","ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();<newline46mondego>List<Future<String>> results = executor.invokeAll(Arrays.asList(new Task()), 1, TimeUnit.SECONDS); // Timeout of 1 second.<newline46mondego>for (Future<String> result : results) {<newline46mondego>    if (!result.isCancelled()) {<newline46mondego>        System.out.println(result.get()); // Won't be printed as the <doubleQuotes46>actual<doubleQuotes46> processing took 2 seconds.<newline46mondego>    } else {<newline46mondego>        System.out.println(<doubleQuotes46>Task timed out.<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>executor.shutdown();<newline46mondego>"
"6388splitHere46","2413623splitHere46","import"
"6389splitHere46","2413623splitHere46","import java.util.*;<newline46mondego>import java.lang.reflect.Field;<newline46mondego><newline46mondego>....<newline46mondego><newline46mondego>Set<Field> s = ... // Set is in java.util<newline46mondego>"
"6390splitHere46","2413623splitHere46","static import"
"6391splitHere46","2413623splitHere46","import static java.util.Arrays.asList;<newline46mondego><newline46mondego>...<newline46mondego><newline46mondego>System.out.println(asList(1, 2, 3));<newline46mondego>"
"6392splitHere46","2413848splitHere46","prime"
"6393splitHere46","2413848splitHere46","prime (a, b-1) ;<newline46mondego>"
"6394splitHere46","2413848splitHere46","return prime (a, b-1) ;<newline46mondego>"
"6395splitHere46","2413848splitHere46","else if (b>1)"
"6396splitHere46","2413848splitHere46","public static boolean prime (int num) {<newline46mondego>    int t = 2;<newline46mondego>    while (t * t <= num) {<newline46mondego>        if ((num % t) == 0) {<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>        t++;<newline46mondego>    }<newline46mondego>    return true;<newline46mondego>}<newline46mondego>"
"6397splitHere46","2413848splitHere46","grep"
"6398splitHere46","2413848splitHere46","return"
"6399splitHere46","2413848splitHere46","if (a < 1) ..."
"6400splitHere46","2413848splitHere46","prime(3,3)"
"6401splitHere46","2413848splitHere46","prime(3,2)"
"6402splitHere46","2413848splitHere46","3 % (2-1) == 0"
"6403splitHere46","2413848splitHere46","N % 1"
"6404splitHere46","2413848splitHere46","else if (b>2)"
"6405splitHere46","2413848splitHere46","public class prime<newline46mondego>{<newline46mondego>    public static boolean isPrime (int num) {<newline46mondego>        int t = 2;<newline46mondego>        while (t * t <= num) {<newline46mondego>            if ((num % t) == 0) {<newline46mondego>                return false;<newline46mondego>            }<newline46mondego>            t++;<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego><newline46mondego>    public static void main (String[] arg) <newline46mondego>    {<newline46mondego>        System.out.println (isPrime (7)) ; <newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6406splitHere46","2413874splitHere46","public interface A<T extends A<T>>{ public T b(); }<newline46mondego><newline46mondego>public class C implements A<C>{<newline46mondego>  public C b() { ... }<newline46mondego>}<newline46mondego><newline46mondego>public class D implements A<D>{<newline46mondego>  public D b() { ... }<newline46mondego>}<newline46mondego>"
"6407splitHere46","2413967splitHere46","UIInput#getValue()"
"6408splitHere46","2413967splitHere46","public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {<newline46mondego>    Object oldValue = ((UIInput) component).getValue();<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6409splitHere46","2414019splitHere46","// Get the local date/time<newline46mondego>Calendar now = Calendar.getInstance();<newline46mondego><newline46mondego>// Return milliseconds from 1970 UTC<newline46mondego>long milliseconds = now.getTimeInMillis();<newline46mondego>"
"6410splitHere46","2414140splitHere46",">>>"
"6411splitHere46","2414140splitHere46","^"
"6412splitHere46","2414140splitHere46","HashMap"
"6413splitHere46","2414140splitHere46","// HashMap.java -- edited for conciseness<newline46mondego>static int indexFor(int h, int length) {<newline46mondego>    return h & (length-1);<newline46mondego>}<newline46mondego><newline46mondego>public V put(K key, V value) {<newline46mondego>    int hash = hash(key.hashCode());<newline46mondego>    int index = indexFor(hash, table.length);<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6414splitHere46","2414140splitHere46","hash()"
"6415splitHere46","2414140splitHere46","indexFor"
"6416splitHere46","2414140splitHere46","h"
"6417splitHere46","2414140splitHere46","k"
"6418splitHere46","2414140splitHere46","length == (1 << k)"
"6419splitHere46","2414140splitHere46","Hashtable"
"6420splitHere46","2414140splitHere46","// Hashtable.java -- edited for conciseness<newline46mondego>public synchronized V get(Object key) {<newline46mondego>    int hash = key.hashCode();<newline46mondego>    int index = (hash & 0x7FFFFFFF) % table.length;<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6421splitHere46","2414140splitHere46","%"
"6422splitHere46","2414140splitHere46","Hashtable"
"6423splitHere46","2414140splitHere46","table.length"
"6424splitHere46","2414165splitHere46","getResources().getIdentifier()"
"6425splitHere46","2414165splitHere46","Context"
"6426splitHere46","2414165splitHere46","Activity"
"6427splitHere46","2414165splitHere46","getIdentifier()"
"6428splitHere46","2414165splitHere46","Resources"
"6429splitHere46","2414268splitHere46","if ((a%(b-1) == 0) && (b>2))<newline46mondego>"
"6430splitHere46","2414268splitHere46","if ((b>2) && a%(b-1)==0)<newline46mondego>"
"6431splitHere46","2414268splitHere46","a%(b-1)"
"6432splitHere46","2414268splitHere46","b>2"
"6433splitHere46","2414317splitHere46","return"
"6434splitHere46","2414317splitHere46","null"
"6435splitHere46","2414317splitHere46","NONCE"
"6436splitHere46","2414317splitHere46","null"
"6437splitHere46","2414317splitHere46","return null"
"6438splitHere46","2414317splitHere46","null"
"6439splitHere46","2414357splitHere46","telnet serverhostname portnum"
"6440splitHere46","2414357splitHere46","telnet stackoverflow.com 80"
"6441splitHere46","2414459splitHere46","eventDispatched()"
"6442splitHere46","2414459splitHere46","AWTEventListener"
"6443splitHere46","2414459splitHere46","AWTEventListener"
"6444splitHere46","2414459splitHere46","e instanceof EventObject"
"6445splitHere46","2414459splitHere46","AWTEvent"
"6446splitHere46","2414459splitHere46","EventObject"
"6447splitHere46","2414556splitHere46","short x = 0, y = 0;<newline46mondego>x -= y;    // This compiles fine!<newline46mondego>x = x - y; // This doesn't compile!!!<newline46mondego>              // <doubleQuotes46>Type mismatch: cannot convert from int to short<doubleQuotes46><newline46mondego>"
"6448splitHere46","2414556splitHere46","-"
"6449splitHere46","2414556splitHere46","short"
"6450splitHere46","2414556splitHere46","int"
"6451splitHere46","2414556splitHere46","short"
"6452splitHere46","2414556splitHere46","int x = 5; x *= 2 + 1; // x == 15, not 11"
"6453splitHere46","2414556splitHere46","int i = 0; i += 3.14159; // this compiles fine!"
"6454splitHere46","2414556splitHere46","arr[i++] += 5; // this only increments i once"
"6455splitHere46","2414556splitHere46","*="
"6456splitHere46","2414556splitHere46","/="
"6457splitHere46","2414556splitHere46","%="
"6458splitHere46","2414556splitHere46","+="
"6459splitHere46","2414556splitHere46","-="
"6460splitHere46","2414556splitHere46","<<="
"6461splitHere46","2414556splitHere46",">>="
"6462splitHere46","2414556splitHere46",">>>="
"6463splitHere46","2414556splitHere46","&="
"6464splitHere46","2414556splitHere46","^="
"6465splitHere46","2414556splitHere46","|="
"6466splitHere46","2414918splitHere46","String msg2 = msg.replace(<doubleQuotes46>&CHAG_EF<doubleQuotes46>, test1).replace(<doubleQuotes46>&CHAG_DNE_DTE<doubleQuotes46>, test2);<newline46mondego>"
"6467splitHere46","2415106splitHere46","class Animator{<newline46mondego>    void animateBall(){<newline46mondego>    Ball ball = buildBall(); //Ball will have i,j,radius etc set by this method<newline46mondego>    int vx = randomNumber();<newline46mondego>    int vy = randomNumber();<newline46mondego>    moveIt(vx,vy, ball);<newline46mondego>    }<newline46mondego>    void moveIt(int vx, int vy, Ball ball){<newline46mondego>        while(true){<newline46mondego>             //move the ball, change i,j fields of ball<newline46mondego>             //check for collission etc<newline46mondego>             Collider collider = getCollider(ball);<newline46mondego>             //change direction based on collider etc.<newline46mondego>        }<newline46mondego>    }<newline46mondego>    Collider getCollider(Ball ball){<newline46mondego>    //collision code here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6468splitHere46","2415204splitHere46","Scanner.nextLine()"
"6469splitHere46","2415236splitHere46","var a = [1, 2];<newline46mondego>var b = [3, 4];<newline46mondego>// just insert one into another<newline46mondego>insert b into a;<newline46mondego>// a == [1, 2, 3, 4];<newline46mondego><newline46mondego>// or create a new seq<newline46mondego>a = [b, a];<newline46mondego>// a == [3, 4, 1, 2];<newline46mondego>"
"6470splitHere46","2415327splitHere46","($F{value} != null) ? $F{value} : <doubleQuotes46>0.00<doubleQuotes46>"
"6471splitHere46","2415417splitHere46","if (B.class.isInstance(view))<newline46mondego>"
"6472splitHere46","2415417splitHere46","if (B.class.isAssignableFrom(view.getClass()))<newline46mondego>"
"6473splitHere46","2415417splitHere46","if (view instanceof B)<newline46mondego>"
"6474splitHere46","2415629splitHere46","import java.io.PrintStream;<newline46mondego>import java.io.UnsupportedEncodingException;<newline46mondego><newline46mondego>public class Test {<newline46mondego>    public static void main (String[] argv) throws UnsupportedEncodingException {<newline46mondego>    String unicodeMessage =<newline46mondego>    <doubleQuotes46>\u7686\u3055\u3093\u3001\u3053\u3093\u306b\u3061\u306f<doubleQuotes46>;<newline46mondego><newline46mondego>    PrintStream out = new PrintStream(System.out, true, <doubleQuotes46>UTF-8<doubleQuotes46>);<newline46mondego>    out.println(unicodeMessage);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6475splitHere46","2415629splitHere46","LANG=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_COLLATE=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_CTYPE=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_MESSAGES=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_MONETARY=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_NUMERIC=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_TIME=<doubleQuotes46>de_DE.UTF-8<doubleQuotes46><newline46mondego>LC_ALL=<newline46mondego>"
"6476splitHere46","2415685splitHere46","Map"
"6477splitHere46","2415685splitHere46","MyMap"
"6478splitHere46","2415685splitHere46","Map<SomeSuperLongIdentifier, OtherSuperLongIdentifier>"
"6479splitHere46","2415685splitHere46","filter()"
"6480splitHere46","2415685splitHere46","Maps"
"6481splitHere46","2415685splitHere46","MyMap"
"6482splitHere46","2415685splitHere46","Map<SomeSuperLongIdentifier, OtherSuperLongIdentifier>"
"6483splitHere46","2415685splitHere46","MyMap"
"6484splitHere46","2415685splitHere46","Map"
"6485splitHere46","2415685splitHere46","MyMap"
"6486splitHere46","2415685splitHere46","HashMap"
"6487splitHere46","2415711splitHere46","run"
"6488splitHere46","2415711splitHere46","run"
"6489splitHere46","2415711splitHere46","start"
"6490splitHere46","2415711splitHere46","run"
"6491splitHere46","2415839splitHere46","public void myMethod() {<newline46mondego>   try {<newline46mondego>      ...<newline46mondego>      String encodedString = URLEncoder.encode(foo, <doubleQuotes46>utf-8<doubleQuotes46>);<newline46mondego>       ...<newline46mondego>   } catch(UnsupportedEncodingException e) {<newline46mondego>     throw new RuntimeException(<doubleQuotes46>This should not be possible<doubleQuotes46>,e);<newline46mondego>   }<newline46mondego><newline46mondego>}<newline46mondego>"
"6492splitHere46","2415844splitHere46","equalsIgnoreCase()"
"6493splitHere46","2415844splitHere46","double"
"6494splitHere46","2415844splitHere46","float"
"6495splitHere46","2415844splitHere46","System.out.println(<doubleQuotes46>The CLDC version is:  <doubleQuotes46> + System.getProperty(<doubleQuotes46>microedition.configuration<doubleQuotes46>));<newline46mondego>"
"6496splitHere46","2415844splitHere46","try {<newline46mondego>    Class.forName(<doubleQuotes46>java.lang.ref.WeakReference<doubleQuotes46>);<newline46mondego>    System.out.println(<doubleQuotes46>It's CLDC 1.1<doubleQuotes46>);<newline46mondego>} catch (ClassNotFoundException e) {<newline46mondego>    System.out.println(<doubleQuotes46>It's CLDC 1.0<doubleQuotes46>);<newline46mondego>}<newline46mondego>"
"6497splitHere46","2415966splitHere46","String[] items = line.split(<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>, (valid ? 15 : 16));<newline46mondego>"
"6498splitHere46","2415966splitHere46","if"
"6499splitHere46","2415966splitHere46","String[] items;<newline46mondego>if (valid) {<newline46mondego>  items = line.split(<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>,15);<newline46mondego>} else {<newline46mondego>  items = line.split(<doubleQuotes46>\<doubleQuotes46>,\<doubleQuotes46><doubleQuotes46>,16);<newline46mondego>} <newline46mondego>"
"6500splitHere46","2416145splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><beans xmlns=<doubleQuotes46>http://www.springframework.org/schema/beans<doubleQuotes46><newline46mondego>xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46><newline46mondego>xmlns:util=<doubleQuotes46>http://www.springframework.org/schema/util<doubleQuotes46><newline46mondego>xsi:schemaLocation=<doubleQuotes46>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<newline46mondego>    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd<doubleQuotes46>><newline46mondego><newline46mondego><newline46mondego><util:list id=<doubleQuotes46>myList<doubleQuotes46> value-type=<doubleQuotes46>java.lang.String<doubleQuotes46>><newline46mondego>    <value>foo</value><newline46mondego>    <value>bar</value><newline46mondego></util:list><newline46mondego>"
"6501splitHere46","2416145splitHere46","list-class"
"6502splitHere46","2416415splitHere46","<rule><newline46mondego>   <condition type=<doubleQuotes46>request-uri<doubleQuotes46> operator=<doubleQuotes46>notequal<doubleQuotes46>>\.[a-z]+$</condition><newline46mondego>   <from>(.*)$</from><newline46mondego>   <to>$1.htm</to><newline46mondego></rule> <newline46mondego>"
"6503splitHere46","2416561splitHere46","javax.validation"
"6504splitHere46","2416675splitHere46","Explanation expl = searcher.explain(query, docId);"
"6505splitHere46","2416675splitHere46","String asText = expl.toString();"
"6506splitHere46","2416675splitHere46","String asHtml = expl.toHtml();"
"6507splitHere46","2416721splitHere46","Filter.init()"
"6508splitHere46","2416721splitHere46","public void init(FilterConfig config) {<newline46mondego>    WebApplicationContext springContext = <newline46mondego>        WebApplicationContextUtils.getWebApplicationContext(config.getServletContext());<newline46mondego>}<newline46mondego>"
"6509splitHere46","2416721splitHere46","TagSupport.pageContext"
"6510splitHere46","2416721splitHere46","SimpleTagSupport"
"6511splitHere46","2416721splitHere46","WebApplicationContext springContext = <newline46mondego>    WebApplicationContextUtils.getWebApplicationContext(pageContext.getServletContext());<newline46mondego>"
"6512splitHere46","2416769splitHere46","class Scr extends MainScreen implements ListFieldCallback {<newline46mondego>    int DISPLAY_WIDTH = Display.getWidth();<newline46mondego>    int DISPLAY_HEIGHT = Display.getHeight();<newline46mondego>    Vector mItems = new Vector();<newline46mondego>    ListField mListField = new ListField();<newline46mondego>    SizedVFM mListManager = new SizedVFM(DISPLAY_WIDTH, DISPLAY_HEIGHT - 50);<newline46mondego><newline46mondego>    ButtonField mPrevButtonField = new ButtonField(<doubleQuotes46>Previous<doubleQuotes46>,<newline46mondego>            ButtonField.CONSUME_CLICK);<newline46mondego>    ButtonField mNextButtonField = new ButtonField(<doubleQuotes46>Next<doubleQuotes46>,<newline46mondego>            ButtonField.CONSUME_CLICK);<newline46mondego><newline46mondego>    HorizontalFieldManager mButtonsManager = new HorizontalFieldManager(<newline46mondego>            FIELD_HCENTER);<newline46mondego><newline46mondego>    public Scr() {<newline46mondego>        for (int i = 1; i < 31; i++) {<newline46mondego>            mItems.addElement(<doubleQuotes46>item <doubleQuotes46> + String.valueOf(i));<newline46mondego>        }<newline46mondego><newline46mondego>        mListField.setCallback(this);<newline46mondego>        mListField.setSize(30);<newline46mondego>        add(mListManager);<newline46mondego>        mListManager.add(mListField);<newline46mondego><newline46mondego>        mPrevButtonField.setChangeListener(new FieldChangeListener() {<newline46mondego>            public void fieldChanged(Field field, int context) {<newline46mondego>                Dialog.inform(<doubleQuotes46>Previouse pressed<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        mNextButtonField.setChangeListener(new FieldChangeListener() {<newline46mondego>            public void fieldChanged(Field field, int context) {<newline46mondego>                Dialog.inform(<doubleQuotes46>Next pressed<doubleQuotes46>);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        mButtonsManager.add(mPrevButtonField);<newline46mondego>        mButtonsManager.add(mNextButtonField);<newline46mondego>        add(mButtonsManager);<newline46mondego>    }<newline46mondego><newline46mondego>    public void drawListRow(ListField field, Graphics g, int i, int y, int w) {<newline46mondego>        // Draw the text.<newline46mondego>        String text = (String) get(field, i);<newline46mondego>        g.drawText(text, 0, y, 0, w);<newline46mondego>    }<newline46mondego><newline46mondego>    public Object get(ListField listField, int index) {<newline46mondego>        return mItems.elementAt(index);<newline46mondego>    }<newline46mondego><newline46mondego>    public int getPreferredWidth(ListField listField) {<newline46mondego>        return DISPLAY_WIDTH;<newline46mondego>    }<newline46mondego><newline46mondego>    public int indexOfList(ListField listField, String prefix, int start) {<newline46mondego>        return 0;<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>class SizedVFM extends VerticalFieldManager {<newline46mondego>    int mWidth;<newline46mondego>    int mHeight;<newline46mondego><newline46mondego>    public SizedVFM(int width, int height) {<newline46mondego>        super(VERTICAL_SCROLL | VERTICAL_SCROLLBAR);<newline46mondego>        mWidth = width;<newline46mondego>        mHeight = height;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getPreferredHeight() {<newline46mondego>        return mHeight;<newline46mondego>    }<newline46mondego><newline46mondego>    public int getPreferredWidth() {<newline46mondego>        return mWidth;<newline46mondego>    }<newline46mondego><newline46mondego>    public void setHeight(int height) {<newline46mondego>        mHeight = height;<newline46mondego>    }<newline46mondego><newline46mondego>    protected void sublayout(int maxWidth, int maxHeight) {<newline46mondego>        super.sublayout(maxWidth, maxHeight);<newline46mondego>        setExtent(getPreferredWidth(), getPreferredHeight());<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6513splitHere46","2416770splitHere46","java mygame.RunGame <newline46mondego>"
"6514splitHere46","2416814splitHere46","T"
"6515splitHere46","2416814splitHere46","yyyy-MM-dd'T'hh:mm:ssZ<newline46mondego>"
"6516splitHere46","2416814splitHere46","'A'"
"6517splitHere46","2416814splitHere46","'Z'"
"6518splitHere46","2416814splitHere46","'a'"
"6519splitHere46","2416814splitHere46","'z'"
"6520splitHere46","2416814splitHere46","'"
"6521splitHere46","2416814splitHere46","<doubleQuotes46>''<doubleQuotes46>"
"6522splitHere46","2416814splitHere46","Date and Time Pattern            Result<newline46mondego>-------------------------------------------------------------<newline46mondego><doubleQuotes46>yyyy-MM-dd'T'HH:mm:ss.SSSZ<doubleQuotes46>     2001-07-04T12:08:56.235-0700  <newline46mondego>"
"6523splitHere46","2416923splitHere46","Last-Modified"
"6524splitHere46","2416923splitHere46","URLConnection#getHeaderField()"
"6525splitHere46","2416923splitHere46","URLConnection connection = new URL(<doubleQuotes46>http://sstatic.net/so/img/logo.png<doubleQuotes46>).openConnection();<newline46mondego>String lastModified = connection.getHeaderField(<doubleQuotes46>Last-Modified<doubleQuotes46>);<newline46mondego>System.out.println(lastModified);<newline46mondego>"
"6526splitHere46","2416923splitHere46","Date"
"6527splitHere46","2416923splitHere46","SimpleDateFormat"
"6528splitHere46","2416923splitHere46","Date date = new SimpleDateFormat(<doubleQuotes46>E, d MMM yyyy HH:mm:ss Z<doubleQuotes46>, Locale.ENGLISH).parse(lastModified);<newline46mondego>"
"6529splitHere46","2416992splitHere46","org.apache.commons.configuration.ConfigurationException"
"6530splitHere46","2416992splitHere46","org.apache.commons.lang.exception.NestableException"
"6531splitHere46","2416992splitHere46","ConfigurationException"
"6532splitHere46","2417106splitHere46","New_set_relationship_list_result relationship = port.set_relationship(sessionID, <doubleQuotes46>Accounts<doubleQuotes46>, <doubleQuotes46><account_id><doubleQuotes46>, <doubleQuotes46>opportunities<doubleQuotes46>, new String[] {<doubleQuotes46><opportunity_id><doubleQuotes46>}, null, 0);<newline46mondego>"
"6533splitHere46","2417344splitHere46","JComponent"
"6534splitHere46","2417344splitHere46","ReportElement"
"6535splitHere46","2417368splitHere46","UserAccount#getRoles"
"6536splitHere46","2417368splitHere46","public Set<UserRole> getRoles() {<newline46mondego>  if (roles == null) {<newline46mondego>    XXX.populateRoles(this); // replace XXX with the class who populates the Roles.<newline46mondego>  }<newline46mondego>  return roles;<newline46mondego>"
"6537splitHere46","2417368splitHere46","UserAccount"
"6538splitHere46","2417448splitHere46","getPoint()"
"6539splitHere46","2417463splitHere46","StringUtils.join(Object[] array, String delimiter)"
"6540splitHere46","2417463splitHere46","String enumeratedList = StringUtils.join(list.toArray(), <doubleQuotes46>, <doubleQuotes46>);<newline46mondego>"
"6541splitHere46","2417527splitHere46","readLine()"
"6542splitHere46","2417527splitHere46","\n"
"6543splitHere46","2417546splitHere46","/"
"6544splitHere46","2417546splitHere46","File.separator"
"6545splitHere46","2417546splitHere46","File.separator"
"6546splitHere46","2417736splitHere46","// forgive the mangled code; I hate horizontal scrolling<newline46mondego>public sealed class ToStringBuilder<T> {<newline46mondego>    private T _obj;<newline46mondego>    private Type _objType;<newline46mondego>    private StringBuilder _innerSb;<newline46mondego><newline46mondego>    public ToStringBuilder(T obj) {<newline46mondego>        _obj = obj;<newline46mondego>        _objType = obj.GetType();<newline46mondego>        _innerSb = new StringBuilder();<newline46mondego>    }<newline46mondego><newline46mondego>    public ToStringBuilder<T> Append<TProperty><newline46mondego>    (Expression<Func<T, TProperty>> expression) {<newline46mondego><newline46mondego>        string propertyName;<newline46mondego>        if (!TryGetPropertyName(expression, out propertyName))<newline46mondego>            throw new ArgumentException(<newline46mondego>                <doubleQuotes46>Expression must be a simple property expression.<doubleQuotes46><newline46mondego>            );<newline46mondego><newline46mondego>        Func<T, TProperty> func = expression.Compile();<newline46mondego><newline46mondego>        if (_innerSb.Length < 1)<newline46mondego>            _innerSb.Append(<newline46mondego>                propertyName + <doubleQuotes46>: <doubleQuotes46> + func(_obj).ToString()<newline46mondego>            );<newline46mondego>        else<newline46mondego>            _innerSb.Append(<newline46mondego>                <doubleQuotes46>, <doubleQuotes46> + propertyName + <doubleQuotes46>: <doubleQuotes46> + func(_obj).ToString()<newline46mondego>            );<newline46mondego><newline46mondego>        return this;<newline46mondego>    }<newline46mondego><newline46mondego>    private static bool TryGetPropertyName<TProperty><newline46mondego>    (Expression<Func<T, TProperty>> expression, out string propertyName) {<newline46mondego><newline46mondego>        propertyName = default(string);<newline46mondego><newline46mondego>        var propertyExpression = expression.Body as MemberExpression;<newline46mondego>        if (propertyExpression == null)<newline46mondego>            return false;<newline46mondego><newline46mondego>        propertyName = propertyExpression.Member.Name;<newline46mondego>        return true;<newline46mondego>    }<newline46mondego><newline46mondego>    public override string ToString() {<newline46mondego>        return _objType.Name + <doubleQuotes46>{<doubleQuotes46> + _innerSb.ToString() + <doubleQuotes46>}<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6547splitHere46","2417736splitHere46","// from within some class with an Id and Name property<newline46mondego>public override string ToString() {<newline46mondego>    return new ToStringBuilder<SomeClass>(this)<newline46mondego>        .Append(x => x.Id)<newline46mondego>        .Append(x => x.Name)<newline46mondego>        .ToString();<newline46mondego>}<newline46mondego>"
"6548splitHere46","2417736splitHere46","class Thing {<newline46mondego>    public int Id { get; set; }<newline46mondego>    public string Name { get; set; }<newline46mondego><newline46mondego>    public override string ToString() {<newline46mondego>        return new ToStringBuilder<Thing>(this)<newline46mondego>            .Append(t => t.Id)<newline46mondego>            .Append(t => t.Name)<newline46mondego>            .ToString()<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>void Main() {<newline46mondego>    var t = new Thing { Id = 10, Name = <doubleQuotes46>Bob<doubleQuotes46> };<newline46mondego>    Console.WriteLine(t.ToString());<newline46mondego>}<newline46mondego>"
"6549splitHere46","2417740splitHere46","is"
"6550splitHere46","2417740splitHere46","instanceof"
"6551splitHere46","2417740splitHere46","Object foo = <doubleQuotes46>hello<doubleQuotes46>;<newline46mondego>if (foo instanceof String) {<newline46mondego>  // Yup, it's a string<newline46mondego>}<newline46mondego>"
"6552splitHere46","2417740splitHere46","as"
"6553splitHere46","2417744splitHere46","//within MyFile constructor or setter for Words<newline46mondego>while (//there's another word to add) {<newline46mondego>   Word newWord = new Word(//read word from file);<newline46mondego>   words.add(newWord);<newline46mondego>   newWord.setMyFile(this);<newline46mondego>}<newline46mondego>"
"6554splitHere46","2417744splitHere46","//in Parent<newline46mondego>public void addChild(Child child) {<newline46mondego>   myChildren.add(child);<newline46mondego>   child.setParent(this);<newline46mondego>}<newline46mondego>"
"6555splitHere46","2417755splitHere46","from Category as category join category.user as user<newline46mondego>"
"6556splitHere46","2417755splitHere46","from Category category where category.user.id =: id<newline46mondego>"
"6557splitHere46","2417967splitHere46","@RequestParam(value = <doubleQuotes46>orderBy<doubleQuotes46>, required = false, defaultValue = <doubleQuotes46>severity<doubleQuotes46>) String[] orderBy,<newline46mondego>@RequestParam(value = <doubleQuotes46>order<doubleQuotes46>, required = false, defaultValue = <doubleQuotes46>desc<doubleQuotes46>) String[] order,<newline46mondego>"
"6558splitHere46","2417986splitHere46","try"
"6559splitHere46","2417986splitHere46","catch"
"6560splitHere46","2417986splitHere46","finally"
"6561splitHere46","2417986splitHere46","try"
"6562splitHere46","2417986splitHere46","catch"
"6563splitHere46","2417986splitHere46","finally"
"6564splitHere46","2418232splitHere46","StringUtils.countMatches(wholeString, searchedString)"
"6565splitHere46","2418232splitHere46","searchedString"
"6566splitHere46","2418232splitHere46","<doubleQuotes46>(<doubleQuotes46>"
"6567splitHere46","2418232splitHere46","charAt(..)"
"6568splitHere46","2418232splitHere46","O(n)"
"6569splitHere46","2418232splitHere46","charAt(..)"
"6570splitHere46","2418232splitHere46","O(1)"
"6571splitHere46","2418355splitHere46","logback.xml"
"6572splitHere46","2418355splitHere46","ClassLoader"
"6573splitHere46","2418355splitHere46","BasicConfiguration"
"6574splitHere46","2418355splitHere46","logback.xml"
"6575splitHere46","2418355splitHere46","logback.xml"
"6576splitHere46","2418355splitHere46","sun-web.xml"
"6577splitHere46","2418355splitHere46","<sun-web-app><newline46mondego>  <class-loader delegate=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego></sun-web-app><newline46mondego>"
"6578splitHere46","2418355splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?><newline46mondego><project xsi:schemaLocation=<doubleQuotes46>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<doubleQuotes46><newline46mondego>  xmlns=<doubleQuotes46>http://maven.apache.org/POM/4.0.0<doubleQuotes46> xmlns:xsi=<doubleQuotes46>http://www.w3.org/2001/XMLSchema-instance<doubleQuotes46>><newline46mondego>  <modelVersion>4.0.0</modelVersion><newline46mondego>  <groupId>com.stackoverflow.q2418355</groupId><newline46mondego>  <artifactId>sample</artifactId><newline46mondego>  <version>1.0-SNAPSHOT</version><newline46mondego>  <packaging>war</packaging><newline46mondego>  <name>sample Maven Webapp</name><newline46mondego>  <url>http://maven.apache.org</url><newline46mondego>  <dependencies><newline46mondego>    <dependency><newline46mondego>      <groupId>javax</groupId><newline46mondego>      <artifactId>javaee-api</artifactId><newline46mondego>      <version>6.0</version><newline46mondego>      <scope>provided</scope><newline46mondego>    </dependency><newline46mondego>    <dependency><newline46mondego>      <groupId>junit</groupId><newline46mondego>      <artifactId>junit</artifactId><newline46mondego>      <version>4.7</version><newline46mondego>      <scope>test</scope><newline46mondego>    </dependency><newline46mondego>    <dependency><newline46mondego>      <groupId>ch.qos.logback</groupId><newline46mondego>      <artifactId>logback-classic</artifactId><newline46mondego>      <version>0.9.18</version><newline46mondego>    </dependency><newline46mondego>    <dependency><newline46mondego>      <groupId>org.slf4j</groupId><newline46mondego>      <artifactId>slf4j-api</artifactId><newline46mondego>      <version>1.5.11</version><newline46mondego>    </dependency><newline46mondego>  </dependencies><newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-compiler-plugin</artifactId><newline46mondego>        <version>2.0.2</version><newline46mondego>        <configuration><newline46mondego>          <source>1.6</source><newline46mondego>          <target>1.6</target><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>      <plugin><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-war-plugin</artifactId><newline46mondego>        <version>2.1-beta-1</version><newline46mondego>        <configuration><newline46mondego>          <failOnMissingWebXml>false</failOnMissingWebXml><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>    <finalName>sample</finalName><newline46mondego>  </build><newline46mondego></project><newline46mondego>"
"6579splitHere46","2418355splitHere46","SimpleEJB.java"
"6580splitHere46","2418355splitHere46","package com.stackoverflow.q2418355;<newline46mondego><newline46mondego>import javax.ejb.Stateless;<newline46mondego><newline46mondego>import org.slf4j.Logger;<newline46mondego>import org.slf4j.LoggerFactory;<newline46mondego><newline46mondego>@Stateless<newline46mondego>public class SimpleEJB {<newline46mondego>    private static Logger logger = LoggerFactory.getLogger(SimpleEJB.class);<newline46mondego><newline46mondego>    public String sayHello(String name) {<newline46mondego>        logger.debug(<doubleQuotes46>>> sayHello()<doubleQuotes46>);<newline46mondego>        logger.debug(<doubleQuotes46><< sayHello()<doubleQuotes46>);<newline46mondego>        return <doubleQuotes46>Hello <doubleQuotes46> + name + <doubleQuotes46>!!!<doubleQuotes46>;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6581splitHere46","2418355splitHere46","SimpleServlet.java"
"6582splitHere46","2418355splitHere46","package com.stackoverflow.q2418355;<newline46mondego><newline46mondego>import java.io.IOException;<newline46mondego>import java.io.PrintWriter;<newline46mondego><newline46mondego>import javax.ejb.EJB;<newline46mondego>import javax.servlet.annotation.WebServlet;<newline46mondego>import javax.servlet.http.HttpServlet;<newline46mondego>import javax.servlet.http.HttpServletRequest;<newline46mondego>import javax.servlet.http.HttpServletResponse;<newline46mondego><newline46mondego>@WebServlet(urlPatterns = { <doubleQuotes46>/SimpleServlet<doubleQuotes46> })<newline46mondego>public class SimpleServlet extends HttpServlet {<newline46mondego>    @EJB<newline46mondego>    SimpleEJB bean;<newline46mondego><newline46mondego>    private static Logger logger = LoggerFactory.getLogger(SimpleServlet.class);<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {<newline46mondego>        logger.debug(<doubleQuotes46>>> doGet()<doubleQuotes46>);<newline46mondego>        PrintWriter out = response.getWriter();<newline46mondego>        out.println(<doubleQuotes46><html><body><doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46><h2>Serving at: <doubleQuotes46> + request.getContextPath() + <doubleQuotes46></h2><doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46><h2>Invoking EJB: <doubleQuotes46> + bean.sayHello(<doubleQuotes46>Duke<doubleQuotes46>) + <doubleQuotes46></h2><doubleQuotes46>);<newline46mondego>        out.println(<doubleQuotes46></body></html><doubleQuotes46>);<newline46mondego>        logger.debug(<doubleQuotes46><< doGet()<doubleQuotes46>);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6583splitHere46","2418355splitHere46","index.jsp"
"6584splitHere46","2418355splitHere46","<html><newline46mondego><body><newline46mondego><h2>Hello World!</h2><newline46mondego>Invoke the Servlet by clicking <a href=<doubleQuotes46>SimpleServlet<doubleQuotes46>>here</a>.<newline46mondego></body><newline46mondego></html><newline46mondego>"
"6585splitHere46","2418355splitHere46","logback.xml"
"6586splitHere46","2418355splitHere46","<configuration><newline46mondego>  <appender name=<doubleQuotes46>STDOUT<doubleQuotes46> class=<doubleQuotes46>ch.qos.logback.core.ConsoleAppender<doubleQuotes46>><newline46mondego>    <layout class=<doubleQuotes46>ch.qos.logback.classic.PatternLayout<doubleQuotes46>><newline46mondego>      <Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern><newline46mondego>    </layout><newline46mondego>  </appender><newline46mondego><newline46mondego>  <appender name=<doubleQuotes46>FILE<doubleQuotes46> class=<doubleQuotes46>ch.qos.logback.core.FileAppender<doubleQuotes46>><newline46mondego>    <File>/tmp/logs/testFile.log</File><newline46mondego>    <Append>true</Append><newline46mondego><newline46mondego>    <layout class=<doubleQuotes46>ch.qos.logback.classic.PatternLayout<doubleQuotes46>><newline46mondego>      <Pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern><newline46mondego>    </layout><newline46mondego>  </appender><newline46mondego><newline46mondego>  <logger name=<doubleQuotes46>com.stackoverflow.q2418355<doubleQuotes46> level=<doubleQuotes46>TRACE<doubleQuotes46>/><newline46mondego><newline46mondego>  <root level=<doubleQuotes46>debug<doubleQuotes46>><newline46mondego>    <appender-ref ref=<doubleQuotes46>STDOUT<doubleQuotes46> /><newline46mondego>    <appender-ref ref=<doubleQuotes46>FILE<doubleQuotes46> /><newline46mondego>  </root><newline46mondego></configuration><newline46mondego>"
"6587splitHere46","2418355splitHere46","logback.xml"
"6588splitHere46","2418355splitHere46","10913 [http-thread-pool-8080-(1)] DEBUG com.stackoverflow.q2418355.SimpleServlet - >> doGet()<newline46mondego>10928 [http-thread-pool-8080-(1)] DEBUG com.stackoverflow.q2418355.SimpleEJB - >> sayHello()<newline46mondego>10928 [http-thread-pool-8080-(1)] DEBUG com.stackoverflow.q2418355.SimpleEJB - << sayHello()<newline46mondego>10932 [http-thread-pool-8080-(1)] DEBUG com.stackoverflow.q2418355.SimpleServlet - << doGet()<newline46mondego>"
"6589splitHere46","2418355splitHere46","WEB-INF/lib"
"6590splitHere46","2418384splitHere46","public enum Values {<newline46mondego>    A,B,C,D;<newline46mondego>}<newline46mondego><newline46mondego>String test = <doubleQuotes46>A<doubleQuotes46>;<newline46mondego>set_view(Values.valueOf(test));<newline46mondego>"
"6591splitHere46","2418384splitHere46","int test=1;<newline46mondego>set_view(values.valueOf(new String( ((char)(test+(int)'A')));<newline46mondego>"
"6592splitHere46","2418500splitHere46","List<String> results = new ArrayList<String>();<newline46mondego><newline46mondego>for (Map<String, String> map : someList) {<newline46mondego>    StringBuilder sb = new StringBuilder();<newline46mondego>    for (String s : map.values()) {<newline46mondego>        sb.append(s).append('-');<newline46mondego>    }<newline46mondego>    String result = sb.toString();<newline46mondego>    results.add(result.substring(0, result.length() - 1); // To cut the trailing '-'<newline46mondego>}<newline46mondego>// Do whatever with the results.<newline46mondego>"
"6593splitHere46","2418664splitHere46","<C>"
"6594splitHere46","2418664splitHere46","<transport-guarantee> CONFIDENTIAL </transport-guarantee>"
"6595splitHere46","2418664splitHere46","<C>"
"6596splitHere46","2418664splitHere46","<B>"
"6597splitHere46","2418664splitHere46","<transport-guarantee> CONFIDENTIAL </transport-guarantee>"
"6598splitHere46","2418664splitHere46","<B>"
"6599splitHere46","2418664splitHere46","<security-role>"
"6600splitHere46","2418664splitHere46","<role-name>"
"6601splitHere46","2418664splitHere46","<security-constraint>"
"6602splitHere46","2418664splitHere46","<web-resource-collection>"
"6603splitHere46","2418664splitHere46","<auth-constraint>"
"6604splitHere46","2418664splitHere46","<role-name>"
"6605splitHere46","2418664splitHere46","<!-- Force SSL for entire site as described here: http://wiki.metawerx.net/wiki/ForcingSSLForSectionsOfYourWebsite --><newline46mondego><security-constraint><newline46mondego><newline46mondego>        <!-- defines resources to be protected (in this case everything)--><newline46mondego>        <web-resource-collection><newline46mondego>                <!-- name for the resource, can be anything you like --><newline46mondego>                <!-- Question: is this referenced anywhere else? --><newline46mondego>                <web-resource-name><newline46mondego>                        Entire Application<newline46mondego>                </web-resource-name><newline46mondego><newline46mondego>                <!-- protect the entire application --><newline46mondego>                <url-pattern><newline46mondego>                        /*<newline46mondego>                </url-pattern><newline46mondego>        </web-resource-collection><newline46mondego><newline46mondego>        <auth-constraint><newline46mondego>            <description>Authorized Roles</description><newline46mondego>            <role-name>ALL_AUTHENTICATED</role-name><newline46mondego>        </auth-constraint><newline46mondego><newline46mondego><newline46mondego>        <!-- defines protection level for protected resource --><newline46mondego>        <user-data-constraint><newline46mondego>                <!-- data cannot be observed or changed                                 --><newline46mondego>                <!-- how it works in tomcat:                                            --><newline46mondego>                <!--    if (set to integral or confidential && not using ssl)           --><newline46mondego>                <!--            redirect sent to client, redirecting them to same url   --><newline46mondego>                <!--            but using the port defined in the redirect port         --><newline46mondego>                <!--            attribute in the <Connector> element of server.xml      --><newline46mondego>                <!--            default is 443, so in other words user is redirected    --><newline46mondego>                <!--            to same page using ssl.                                 --><newline46mondego>                <!-- BUT it is differnt for JBOSS!!  See this link: http://wiki.metawerx.net/wiki/ForcingSSLForSectionsOfYourWebsite --><newline46mondego>                <transport-guarantee><newline46mondego>                        CONFIDENTIAL<newline46mondego>                </transport-guarantee><newline46mondego>        </user-data-constraint><newline46mondego><newline46mondego></security-constraint><newline46mondego><newline46mondego><login-config><newline46mondego><newline46mondego>        <!-- Client-side SSL certificate based authentication.  The cert is passed to the server to authenticate --><newline46mondego>        <!-- I am pretty sure that CLIENT-CERT should have a dash NOT an underscore see: http://www.mail-archive.com/tomcat-user@jakarta.apache.org/msg139845.html --><newline46mondego>        <!-- CLIENT-CERT uses a client's AND server's certificates.  See: http://monduke.com/2006/01/19/the-mysterious-client-cert/ --><newline46mondego>        <auth-method><newline46mondego>                CLIENT-CERT<newline46mondego>        </auth-method>     <newline46mondego></login-config><newline46mondego><security-role><newline46mondego>    <description>All authenticated users</description><newline46mondego>    <role-name>ALL_AUTHENTICATED</role-name><newline46mondego></security-role><newline46mondego>"
"6606splitHere46","2418664splitHere46","<auth-method>"
"6607splitHere46","2418664splitHere46","<auth-constraint>"
"6608splitHere46","2418664splitHere46","<auth-constraint>"
"6609splitHere46","2418697splitHere46","myModule-api"
"6610splitHere46","2418697splitHere46","customerRemote"
"6611splitHere46","2418697splitHere46","Customer"
"6612splitHere46","2418697splitHere46","myModule-impl"
"6613splitHere46","2418697splitHere46","myModule-api"
"6614splitHere46","2418856splitHere46","HandlerInterceptor"
"6615splitHere46","2418860splitHere46","ConfigureForm form = new ConfigureForm(FormType.submit);<newline46mondego>form.setPersistentItems(false);<newline46mondego>form.setDeliverPayloads(true);<newline46mondego>form.setAccessModel(AccessModel.open);<newline46mondego><newline46mondego>PubSubManager manager <newline46mondego>      = new PubSubManager(connection, <doubleQuotes46>pubsub.communitivity.com<doubleQuotes46>);<newline46mondego>Node myNode = manager.createNode(<doubleQuotes46>http://jabber.org/protocol/geoloc<doubleQuotes46>, form);<newline46mondego><newline46mondego>StringBuilder body = new StringBuilder(); //ws for readability<newline46mondego>body.append(<doubleQuotes46><geoloc xmlns='http://jabber.org/protocol/geoloc' xml:lang='en'><doubleQuotes46>);<newline46mondego>body.append(<doubleQuotes46>   <country>Italy</country><doubleQuotes46>);<newline46mondego>body.append(<doubleQuotes46>   <lat>45.44</lat><doubleQuotes46>);<newline46mondego>body.append(<doubleQuotes46>   <locality>Venice</locality><doubleQuotes46>);<newline46mondego>body.append(<doubleQuotes46>   <lon>12.33</lon><doubleQuotes46>);<newline46mondego>body.append(<doubleQuotes46>   <accuracy>20</accuracy><doubleQuotes46>);<newline46mondego>body.append(<doubleQuotes46></geoloc><doubleQuotes46>);<newline46mondego><newline46mondego>SimplePayload payload = new SimplePayload(<newline46mondego>                              <doubleQuotes46>geoloc<doubleQuotes46>,<newline46mondego>                              <doubleQuotes46>http://jabber.org/protocol/geoloc<doubleQuotes46>, <newline46mondego>                              body.toString());<newline46mondego>String itemId = <doubleQuotes46>zz234<doubleQuotes46>;<newline46mondego>Item<SimplePayload> item = new Item<SimplePayload>(itemId, payload);<newline46mondego><newline46mondego>// Required to recieve the events being published<newline46mondego>myNode.addItemEventListener(myEventHandler);<newline46mondego><newline46mondego>// Publish item<newline46mondego>myNode.publish(item);<newline46mondego>"
"6616splitHere46","2418860splitHere46","PEPProvider pepProvider = new PEPProvider();<newline46mondego>pepProvider.registerPEPParserExtension(<newline46mondego>    <doubleQuotes46>http://jabber.org/protocol/tune<doubleQuotes46>, new TuneProvider());<newline46mondego>ProviderManager.getInstance().addExtensionProvider(<newline46mondego>   <doubleQuotes46>event<doubleQuotes46>, <newline46mondego>   <doubleQuotes46>http://jabber.org/protocol/pubsub#event<doubleQuotes46>, pepProvider);<newline46mondego>Tune tune = new Tune(<doubleQuotes46>jeff<doubleQuotes46>, <doubleQuotes46>1<doubleQuotes46>, <doubleQuotes46>CD<doubleQuotes46>, <doubleQuotes46>My Title<doubleQuotes46>, <doubleQuotes46>My Track<doubleQuotes46>);<newline46mondego>pepManager.publish(tune);<newline46mondego>"
"6617splitHere46","2418994splitHere46","Throwable"
"6618splitHere46","2418994splitHere46","java.lang.Exception"
"6619splitHere46","2418994splitHere46","java.lang.RuntimeException"
"6620splitHere46","2418994splitHere46","if(throwable instanceof Exception && !(throwable instanceof RuntimeException)) {<newline46mondego>    // this is a checked Exception - i.e. not an Error or RuntimeException<newline46mondego>    }<newline46mondego>"
"6621splitHere46","2418994splitHere46","Throwable"
"6622splitHere46","2418994splitHere46","Throwable"
"6623splitHere46","2418994splitHere46","Exception"
"6624splitHere46","2418994splitHere46","if(obj instanceof Throwable && !(obj instanceof RuntimeException)) {<newline46mondego>    // this is a checked Throwable - i.e. Error or Exception, but not RuntimeException<newline46mondego>    }<newline46mondego>"
"6625splitHere46","2418994splitHere46","Throwable"
"6626splitHere46","2419236splitHere46","Set<String> tmpSet = new HashSet<String>();<newline46mondego>"
"6627splitHere46","2419263splitHere46","MinHeapFreeRatio"
"6628splitHere46","2419263splitHere46","MaxHeapFreeRatio"
"6629splitHere46","2419295splitHere46","new"
"6630splitHere46","2419295splitHere46","new"
"6631splitHere46","2419295splitHere46","null"
"6632splitHere46","2419305splitHere46","public class TableMetadata<E extends Enum & TableColumn> {<newline46mondego>    private Map<Integer, TableColumn> columns = new HashMap<Integer, TableColumn>();<newline46mondego><newline46mondego>    public TableMetadata(Class<E> c) {<newline46mondego>        for (E e: c.getEnumConstants()) {<newline46mondego>            columns.put(e.getIndex(), e);<newline46mondego>        }<newline46mondego>    }<newline46mondego><newline46mondego>    public String getColumnName(int index) {<newline46mondego>        return columns.get(index).getName();<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego>public class GenericFormatter<E extends TableColumn> extends BaseFormatter {  <newline46mondego>    private TableMetadata<E> m;  <newline46mondego><newline46mondego>    public GenericFormatter(TableMetadata<E> m) {  <newline46mondego>         this.m = m;<newline46mondego>    }  <newline46mondego><newline46mondego>    public String getColumnName(int columnNumber) {  <newline46mondego>        return m.getColumnName(index);<newline46mondego>    }  <newline46mondego><newline46mondego>    //...  <newline46mondego>}<newline46mondego>"
"6633splitHere46","2419305splitHere46","Enum"
"6634splitHere46","2419495splitHere46","public class Biscuit<newline46mondego>{<newline46mondego>    private final String id;<newline46mondego>    private final String name;<newline46mondego>    private final int count;<newline46mondego><newline46mondego>    public Biscuit(String id, String name, int count)<newline46mondego>    {<newline46mondego>        this.id = id;<newline46mondego>        this.name = name;<newline46mondego>        this.count = count;<newline46mondego>    }<newline46mondego><newline46mondego>    // Other code<newline46mondego>}<newline46mondego>"
"6635splitHere46","2419495splitHere46","this.foo = foo"
"6636splitHere46","2419495splitHere46","final"
"6637splitHere46","2419495splitHere46","private"
"6638splitHere46","2419495splitHere46","numOfBiscuits"
"6639splitHere46","2419528splitHere46","InterruptedException"
"6640splitHere46","2419528splitHere46","OutOfMemoryError"
"6641splitHere46","2419731splitHere46","KeyStroke a = KeyStroke.getKeyStroke(<doubleQuotes46>A<doubleQuotes46>);<newline46mondego>KeyStroke controlA = KeyStroke.getKeyStroke(<doubleQuotes46>control A<doubleQuotes46>);<newline46mondego>"
"6642splitHere46","2419731splitHere46","KeyStroke controlA = KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.CTRL_MASK);<newline46mondego>"
"6643splitHere46","2419834splitHere46","ExecutorService.shutdown()"
"6644splitHere46","2419834splitHere46","void shutdown()"
"6645splitHere46","2419834splitHere46","while(true)"
"6646splitHere46","2419834splitHere46","awaitTermination(long timeout, TimeUnit unit)"
"6647splitHere46","2419834splitHere46","shutdownNow()"
"6648splitHere46","2420060splitHere46","hosts"
"6649splitHere46","2420060splitHere46","immune"
"6650splitHere46","2420060splitHere46","infectious"
"6651splitHere46","2420060splitHere46","HashSet"
"6652splitHere46","2420060splitHere46","<newline46mondego>    private HashSet<Host> hosts;<newline46mondego>    private HashSet<Host> immune;<newline46mondego>    private HashSet<Host> infectious;<newline46mondego><newline46mondego>    public void killHost(Host deadManWalking) {<newline46mondego>        hosts.remove(deadManWalking);<newline46mondego>        immune.remove(deadManWalking);<newline46mondego>        infectious.remove(deadManWalking);<newline46mondego>    }<newline46mondego>"
"6653splitHere46","2420060splitHere46","equals"
"6654splitHere46","2420060splitHere46","hashCode"
"6655splitHere46","2420060splitHere46","Host"
"6656splitHere46","2420153splitHere46","final"
"6657splitHere46","2420153splitHere46","private final Foo something = new Foo();<newline46mondego>"
"6658splitHere46","2420153splitHere46","Foo"
"6659splitHere46","2420153splitHere46","something"
"6660splitHere46","2420153splitHere46","something"
"6661splitHere46","2420153splitHere46","Foo"
"6662splitHere46","2420153splitHere46","Foo"
"6663splitHere46","2420153splitHere46","final"
"6664splitHere46","2420153splitHere46","private final Set<String> fixed = new HashSet<String>();<newline46mondego>"
"6665splitHere46","2420153splitHere46","Set"
"6666splitHere46","2420153splitHere46","fixed"
"6667splitHere46","2420153splitHere46","private Set<String> fixed = Collections.unmodifiableSet( new HashSet<String>() );<newline46mondego>"
"6668splitHere46","2420153splitHere46","Set"
"6669splitHere46","2420153splitHere46","UnsupportedOperationException"
"6670splitHere46","2420153splitHere46","fixed.add()"
"6671splitHere46","2420153splitHere46","fixed.remove()"
"6672splitHere46","2420153splitHere46","private final Set<String> fixed = Collections.unmodifiableSet( new HashSet<String>() );<newline46mondego>"
"6673splitHere46","2420153splitHere46","Set"
"6674splitHere46","2420153splitHere46","fixed"
"6675splitHere46","2420153splitHere46","final"
"6676splitHere46","2420153splitHere46","fixed"
"6677splitHere46","2420153splitHere46","private final int ANSWER = 42;<newline46mondego>"
"6678splitHere46","2420153splitHere46","ANSWER"
"6679splitHere46","2420153splitHere46","ANSWER"
"6680splitHere46","2420153splitHere46","private final String QUESTION = <doubleQuotes46>The ultimate question<doubleQuotes46>;<newline46mondego>"
"6681splitHere46","2420153splitHere46","QUESTION"
"6682splitHere46","2420153splitHere46","String"
"6683splitHere46","2420153splitHere46","String"
"6684splitHere46","2420153splitHere46","String"
"6685splitHere46","2420153splitHere46","replace"
"6686splitHere46","2420153splitHere46","substring"
"6687splitHere46","2420153splitHere46","String"
"6688splitHere46","2420208splitHere46","import java.awt.AWTEvent;<newline46mondego>import java.awt.MouseInfo;<newline46mondego>import java.awt.Toolkit;<newline46mondego>import java.awt.event.AWTEventListener;<newline46mondego><newline46mondego>import javax.swing.JFrame;<newline46mondego><newline46mondego>public class Application1 {<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Toolkit.getDefaultToolkit().addAWTEventListener(<newline46mondego>          new Listener(), AWTEvent.MOUSE_EVENT_MASK | AWTEvent.FOCUS_EVENT_MASK);<newline46mondego>        JFrame frame = new JFrame();<newline46mondego>        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>        frame.setVisible(true);<newline46mondego>    }<newline46mondego><newline46mondego>    private static class Listener implements AWTEventListener {<newline46mondego>        public void eventDispatched(AWTEvent event) {<newline46mondego>            System.out.print(MouseInfo.getPointerInfo().getLocation() + <doubleQuotes46> | <doubleQuotes46>);<newline46mondego>            System.out.println(event);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6689splitHere46","2420208splitHere46","java.awt.Point[x=198,y=59] | java.awt.event.MouseEvent[MOUSE_EXITED, ...<newline46mondego>java.awt.Point[x=976,y=503] | java.awt.FocusEvent[FOCUS_LOST, ...<newline46mondego>"
"6690splitHere46","2420218splitHere46","-g:none"
"6691splitHere46","2420428splitHere46","public class MyPostfixMachine implements PostfixMachineInterface {<newline46mondego><newline46mondego>    MyMathOperations mmo = new MyMathOperations();<newline46mondego>    MyPostfixMachine mpm = new MyPostfixMachine(); // problem is here<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6692splitHere46","2420428splitHere46","if (mpm.isParsableToDouble(String.valueOf(q.remove()))) {...}<newline46mondego>"
"6693splitHere46","2420428splitHere46","if (isParsableToDouble(String.valueOf(q.remove()))) {...}<newline46mondego>"
"6694splitHere46","2420428splitHere46","if (this.isParsableToDouble(String.valueOf(q.remove()))) {...}<newline46mondego>"
"6695splitHere46","2420466splitHere46","{<newline46mondego>    // Do Something...<newline46mondego>}<newline46mondego>"
"6696splitHere46","2420466splitHere46","public class Test {<newline46mondego><newline46mondego>    static{<newline46mondego>        System.out.println(<doubleQuotes46>Static<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    {<newline46mondego>        System.out.println(<doubleQuotes46>Non-static block<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        Test t = new Test();<newline46mondego>        Test t2 = new Test();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6697splitHere46","2420466splitHere46","Static<newline46mondego>Non-static block<newline46mondego>Non-static block<newline46mondego>"
"6698splitHere46","2420593splitHere46","LocalDateTime"
"6699splitHere46","2420692splitHere46","group()"
"6700splitHere46","2420692splitHere46","group(1)"
"6701splitHere46","2420692splitHere46","group(n)"
"6702splitHere46","2420692splitHere46","The quick brown fox<newline46mondego>"
"6703splitHere46","2420692splitHere46","<doubleQuotes46>The (\\w+)<doubleQuotes46><newline46mondego>"
"6704splitHere46","2420692splitHere46","group()"
"6705splitHere46","2420692splitHere46","group(1)"
"6706splitHere46","2420692splitHere46","java.util.regex.Matcher"
"6707splitHere46","2420734splitHere46","A--->B--->C--->D<newline46mondego><newline46mondego>becomes<newline46mondego><newline46mondego>A--->B--->D<newline46mondego>"
"6708splitHere46","2420973splitHere46","Map<String, Object> map1 = (Map<String, Object>) object1;<newline46mondego>Map<String, Object> map2 = (Map<String, Object>) object2;<newline46mondego>if ( flag == false ) {<newline46mondego>    return new CompareToBuilder()<newline46mondego>        .append(map1.get(<doubleQuotes46>employeeId<doubleQuotes46>), map2.get(<doubleQuotes46>employeeId<doubleQuotes46>))<newline46mondego>        .append(map1.get(<doubleQuotes46>departmentId<doubleQuotes46>), map2.get(<doubleQuotes46>departmentId<doubleQuotes46>))<newline46mondego>        .toComparison();<newline46mondego>}<newline46mondego>else {<newline46mondego>    return new CompareToBuilder()<newline46mondego>        .append(map2.get(<doubleQuotes46>employeeId<doubleQuotes46>), map1.get(<doubleQuotes46>employeeId<doubleQuotes46>))<newline46mondego>        .append(map2.get(<doubleQuotes46>departmentId<doubleQuotes46>), map1.get(<doubleQuotes46>departmentId<doubleQuotes46>))<newline46mondego>        .toComparison();<newline46mondego>}<newline46mondego>"
"6709splitHere46","2420993splitHere46","ConfigurableApplicationContext"
"6710splitHere46","2420993splitHere46","close()"
"6711splitHere46","2420993splitHere46","ApplicationContext"
"6712splitHere46","2420993splitHere46","ApplicationContextAware"
"6713splitHere46","2420993splitHere46","@Autowired"
"6714splitHere46","2420993splitHere46","@Inject<newline46mondego>private ApplicationContext ctx;<newline46mondego>"
"6715splitHere46","2421051splitHere46","validUserName()"
"6716splitHere46","2421051splitHere46","FieldVerifier"
"6717splitHere46","2421051splitHere46","FieldVerifier.validUerName()"
"6718splitHere46","2421387splitHere46","EntityManager"
"6719splitHere46","2421387splitHere46","EntityManagerFactory"
"6720splitHere46","2421387splitHere46","EntityManagerFactory"
"6721splitHere46","2421387splitHere46","EntityManager"
"6722splitHere46","2421727splitHere46","char"
"6723splitHere46","2421727splitHere46","<doubleQuotes46>"
"6724splitHere46","2421727splitHere46","String s = <doubleQuotes46>a string<doubleQuotes46>"
"6725splitHere46","2421727splitHere46","c"
"6726splitHere46","2421727splitHere46","("
"6727splitHere46","2421727splitHere46","’"
"6728splitHere46","2421727splitHere46","'"
"6729splitHere46","2421978splitHere46","item myItem = itemList.elementAt(n);<newline46mondego>"
"6730splitHere46","2421978splitHere46","Object myItem = itemList.elementAt(n);<newline46mondego>"
"6731splitHere46","2421978splitHere46","for(...)<newline46mondego>{<newline46mondego>    item myItem = (item) itemList.elementAt(n);<newline46mondego>    myItem.method();<newline46mondego>}<newline46mondego>"
"6732splitHere46","2422095splitHere46","List"
"6733splitHere46","2422129splitHere46","public class YourMidlet extends MIDlet implements CommandListener {<newline46mondego><newline46mondego>    private Display display;<newline46mondego>    private Form form1;<newline46mondego>    private Form form2;<newline46mondego><newline46mondego>public YourMidlet <newline46mondego>{<newline46mondego> display = Display.getDisplay(this);<newline46mondego> form 1 = new Form(<doubleQuotes46>hello form this is form 1<doubleQuotes46>);<newline46mondego> form 2 = new Form(<doubleQuotes46>hello form 2<doubleQuotes46>);<newline46mondego> display.setCurrent(form1);<newline46mondego>}<newline46mondego>"
"6734splitHere46","2422129splitHere46","display.setCurrent(form2);<newline46mondego>"
"6735splitHere46","2422135splitHere46","GLabel(<doubleQuotes46><doubleQuotes46> + k);"
"6736splitHere46","2422135splitHere46","int"
"6737splitHere46","2422135splitHere46","String"
"6738splitHere46","2422135splitHere46","String.valueOf(k)"
"6739splitHere46","2422135splitHere46","Integer.toString(k)"
"6740splitHere46","2422135splitHere46","String.format(<doubleQuotes46>%d<doubleQuotes46>, k)"
"6741splitHere46","2422135splitHere46","+"
"6742splitHere46","2422135splitHere46","System.out.println(<doubleQuotes46><doubleQuotes46> + 1 + 2);   // this prints <doubleQuotes46>12<doubleQuotes46><newline46mondego>System.out.println(<doubleQuotes46><doubleQuotes46> + (1 + 2)); // this prints <doubleQuotes46>3<doubleQuotes46><newline46mondego>"
"6743splitHere46","2422213splitHere46","searchIcon = new ImageIcon( getClass().getResource(<doubleQuotes46>searchIcon.png<doubleQuotes46>) );<newline46mondego>"
"6744splitHere46","2422304splitHere46","StaleObjectStateException"
"6745splitHere46","2422304splitHere46","order"
"6746splitHere46","2422304splitHere46","order"
"6747splitHere46","2422304splitHere46","StaleObjectStateException"
"6748splitHere46","2422323splitHere46","synchronized"
"6749splitHere46","2422323splitHere46","++hits"
"6750splitHere46","2422323splitHere46","++cacheHits"
"6751splitHere46","2422323splitHere46","service()"
"6752splitHere46","2422323splitHere46","synchronized"
"6753splitHere46","2422323splitHere46","++cacheHits"
"6754splitHere46","2422323splitHere46","++hits"
"6755splitHere46","2422323splitHere46","cacheHits"
"6756splitHere46","2422323splitHere46","hits"
"6757splitHere46","2422323splitHere46","Thread 1                  Thread 2<newline46mondego>---------------           ----------------<newline46mondego>++cacheHits (reordered)<newline46mondego>  cacheHits=1, hits=0<newline46mondego>                          read hits (as 0)<newline46mondego>++hits<newline46mondego>  cacheHits=1, hits=1<newline46mondego>                          read cacheHits (as 1)<newline46mondego><newline46mondego>                          calculate 1 / 0 (= epic fail)<newline46mondego>"
"6758splitHere46","2422323splitHere46","service()"
"6759splitHere46","2422323splitHere46","cacheHits"
"6760splitHere46","2422323splitHere46","hits"
"6761splitHere46","2422349splitHere46","OptionGroup"
"6762splitHere46","2422349splitHere46","Options options = new Options();<newline46mondego><newline46mondego>OptionGroup group1 = new OptionGroup();<newline46mondego>group1.addOption(chgval);<newline46mondego>group1.addOption(inputFile);<newline46mondego><newline46mondego>options.addOption(proc);<newline46mondego>options.addOptionGroup(group1);<newline46mondego>"
"6763splitHere46","2422349splitHere46","chgval"
"6764splitHere46","2422349splitHere46","inputFile"
"6765splitHere46","2422349splitHere46","<doubleQuotes46>-proc mode1 -chgval a -inputfile b.csv<doubleQuotes46>"
"6766splitHere46","2422349splitHere46","AlreadySelectedException:"
"6767splitHere46","2422349splitHere46","inputfile"
"6768splitHere46","2422349splitHere46","chgval"
"6769splitHere46","2422349splitHere46","chval"
"6770splitHere46","2422349splitHere46","chgval"
"6771splitHere46","2422368splitHere46","GLabel"
"6772splitHere46","2422368splitHere46","GLabel"
"6773splitHere46","2422368splitHere46","GLabel"
"6774splitHere46","2422368splitHere46","GLabel.setLabel()"
"6775splitHere46","2422368splitHere46","public class MyForm : GCanvas<newline46mondego>{<newline46mondego>    private GLabel _turns = new GLabel();<newline46mondego><newline46mondego>    public MyForm()<newline46mondego>    {<newline46mondego>        add(_turns);<newline46mondego>    }<newline46mondego><newline46mondego>    private void printTurns(int i)<newline46mondego>    {<newline46mondego>        _turns.setLabel(<doubleQuotes46><doubleQuotes46> + i);<newline46mondego>        _turns.setLocation(WIDTH - PADDLE_WIDTH), (BRICK_Y_OFFSET / 2));<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6776splitHere46","2422465splitHere46","players"
"6777splitHere46","2422465splitHere46","java.lang.Iterable"
"6778splitHere46","2422465splitHere46","get()"
"6779splitHere46","2422465splitHere46","java.util.List"
"6780splitHere46","2422465splitHere46","for (Iterator<Player> playerIter = players.iterator(); playerIter.hasNext();) <newline46mondego>{<newline46mondego>  Player p = playerIter.next();<newline46mondego>  p.addCard(deck.dealCard());<newline46mondego>  p.addCard(deck.dealCard());<newline46mondego>}<newline46mondego>"
"6781splitHere46","2422465splitHere46","size()"
"6782splitHere46","2422485splitHere46","public boolean saveOrUpdateA(A a) {<newline46mondego>  boolean success = false;   <newline46mondego>  try {<newline46mondego>    // obtaining session is omitted<newline46mondego>    session.saveOrUpdate(a);<newline46mondego>    success = true;<newline46mondego><newline46mondego>  } catch (Exception e) {<newline46mondego>    // log it and swallow exception<newline46mondego>    // calling code has to be sure to check on success flag; <newline46mondego>    // otherwise it has no idea something went terribly wrong<newline46mondego>  } <newline46mondego>  return success ;<newline46mondego>}<newline46mondego>"
"6783splitHere46","2422485splitHere46","public void saveOrUpdateA(A a) throws Exception {<newline46mondego><newline46mondego>  try {<newline46mondego>    // obtaining session is omitted<newline46mondego>    session.saveOrUpdate(a);<newline46mondego>  } catch (Exception e) {<newline46mondego>    // log it and rethrow; let calling code figure how to handle<newline46mondego>    throw e;<newline46mondego>  } <newline46mondego>}<newline46mondego>"
"6784splitHere46","2422550splitHere46","<a href='/projit1/p/discuss/viewDiscussion.actiond=11&amp;projid=11&amp;disid=4'><newline46mondego>"
"6785splitHere46","2422646splitHere46","setMethod(new Text(longStringValue));<newline46mondego><newline46mondego>String value = text.getValue();<newline46mondego>"
"6786splitHere46","2422691splitHere46","// code goes here"
"6787splitHere46","2422691splitHere46","arr = null;<newline46mondego>"
"6788splitHere46","2422691splitHere46","char[] arr = new char[5];<newline46mondego>    for (char x : arr) {<newline46mondego>        arr = null;<newline46mondego>    }<newline46mondego>"
"6789splitHere46","2422691splitHere46","char[] arr = new char[5];<newline46mondego>    for (int i = 0; i < arr.length; i++) {<newline46mondego>        char x = arr[i];<newline46mondego>        arr = null;<newline46mondego>    }<newline46mondego>"
"6790splitHere46","2422691splitHere46","NullPointerException"
"6791splitHere46","2422691splitHere46","ConcurrentModificationException"
"6792splitHere46","2422980splitHere46","request.setAttribute(<doubleQuotes46>listThings<doubleQuotes46>, listFoo);<newline46mondego>"
"6793splitHere46","2422980splitHere46","List<Foo>"
"6794splitHere46","2423183splitHere46","package org.sample;<newline46mondego>import java.io.BufferedReader; <newline46mondego>import java.io.File; <newline46mondego>import java.io.FileReader; <newline46mondego>import java.io.IOException; <newline46mondego>import java.io.Reader; <newline46mondego>import java.util.ArrayList; <newline46mondego>import java.util.List; <newline46mondego>import java.util.Scanner; <newline46mondego>import java.util.StringTokenizer; <newline46mondego><newline46mondego>public class FileTokenizer <newline46mondego>{ <newline46mondego>    private static final String DEFAULT_DELIMITERS = <doubleQuotes46>< , { } ><doubleQuotes46>; <newline46mondego> // private static final String DEFAULT_TEST_FILE = <doubleQuotes46>trans1.txt<doubleQuotes46>; <newline46mondego><newline46mondego>    public List<String> tokenize(Reader reader) throws IOException <newline46mondego>    { <newline46mondego>        List<String> tokens = new ArrayList<String>(); <newline46mondego><newline46mondego>        BufferedReader br = null; <newline46mondego><newline46mondego>        try <newline46mondego>        { <newline46mondego>            int i = 0; <newline46mondego>            br = new BufferedReader(reader); <newline46mondego>            Scanner scanner = new Scanner(br); <newline46mondego>            while (scanner.hasNext()) <newline46mondego>            { <newline46mondego><newline46mondego>                StringTokenizer st = new StringTokenizer(scanner.next(), DEFAULT_DELIMITERS, true); <newline46mondego>                while (st.hasMoreElements()) <newline46mondego>                { <newline46mondego>                    String[] t = new String[200]; <newline46mondego>                    // tokens.add(st.nextToken()); <newline46mondego>                    //    t[i] = st.nextToken();  <newline46mondego><newline46mondego>                    System.out.println(t[i]); <newline46mondego><newline46mondego>                    i++;                                       <newline46mondego>                } <newline46mondego>            } <newline46mondego>        } <newline46mondego>        finally <newline46mondego>        { <newline46mondego>            close(br); <newline46mondego>        } <newline46mondego><newline46mondego>        return tokens; <newline46mondego>    } <newline46mondego><newline46mondego>    public static void close(Reader r) <newline46mondego>    { <newline46mondego>        try <newline46mondego>        { <newline46mondego>            if (r != null) <newline46mondego>            { <newline46mondego>                r.close(); <newline46mondego>            } <newline46mondego>        } <newline46mondego>        catch (IOException e) <newline46mondego>        { <newline46mondego>            e.printStackTrace(); <newline46mondego>        } <newline46mondego>    } <newline46mondego><newline46mondego>   public static void main(String[] args) <newline46mondego>    { <newline46mondego>        try <newline46mondego>        { <newline46mondego>          //  String fileName = ((args.length > 0) ?  args[0] : DEFAULT_TEST_FILE); <newline46mondego>            FileReader fileReader = new FileReader(new File(<doubleQuotes46>c:\\DevTest\\1.txt<doubleQuotes46>)); <newline46mondego>            FileTokenizer fileTokenizer = new FileTokenizer(); <newline46mondego>            List<String> tokens = fileTokenizer.tokenize(fileReader); <newline46mondego>            //System.out.println(tokens); <newline46mondego>        } <newline46mondego>        catch (IOException e) <newline46mondego>        { <newline46mondego>            e.printStackTrace(); <newline46mondego>        } <newline46mondego>    } <newline46mondego>} <newline46mondego>"
"6795splitHere46","2423254splitHere46","private static Vector<Countries> loadOB(String sFname) throws ClassNotFoundException, IOException {<newline46mondego>        ObjectInputStream oStream = new ObjectInputStream(new FileInputStream(sFname));<newline46mondego>        try{<newline46mondego>          Object object = oStream.readObject();<newline46mondego>          if (object instanceof Vector)<newline46mondego>              return (Vector<Countries>) object;<newline46mondego>          throw new IllegalArgumentException(<doubleQuotes46>not a Vector in <doubleQuotes46>+sFname);<newline46mondego>        }finally{<newline46mondego>           oStream.close();<newline46mondego>        }<newline46mondego>     }<newline46mondego>"
"6796splitHere46","2423264splitHere46","abstract public class Action<T> implements Runnable {<newline46mondego>  private final T param;<newline46mondego><newline46mondego>  public Action(T param) {<newline46mondego>    this.param = param;<newline46mondego>  }<newline46mondego><newline46mondego>  @Override<newline46mondego>  public final void run() {<newline46mondego>    work(param);<newline46mondego>  }<newline46mondego><newline46mondego>  abstract protected void work(T param);<newline46mondego>}<newline46mondego>"
"6797splitHere46","2423264splitHere46","ExecutorService exec = Executors.newSingleThreadExecutor();<newline46mondego>while (/* more actions need to be done */) {<newline46mondego>  exec.submit(action);<newline46mondego>}<newline46mondego>exec.shutdown();<newline46mondego>exec.awaitTermination(Long.MAX_VALUE, TimeUnit.MILLISECONDS);<newline46mondego>"
"6798splitHere46","2423399splitHere46","SomeClass"
"6799splitHere46","2423399splitHere46","SomeClass"
"6800splitHere46","2423399splitHere46","SomeClass"
"6801splitHere46","2423399splitHere46","0"
"6802splitHere46","2423399splitHere46","null"
"6803splitHere46","2423399splitHere46","SomeClass"
"6804splitHere46","2423399splitHere46","SomeClass"
"6805splitHere46","2423399splitHere46","objectName1"
"6806splitHere46","2423399splitHere46","objectName2"
"6807splitHere46","2423399splitHere46","null"
"6808splitHere46","2423399splitHere46","SomeObject"
"6809splitHere46","2423399splitHere46","SomeObject"
"6810splitHere46","2423399splitHere46","SomeObject"
"6811splitHere46","2423399splitHere46","null"
"6812splitHere46","2423399splitHere46","SomeClass"
"6813splitHere46","2423399splitHere46","objectName1"
"6814splitHere46","2423399splitHere46","objectName2"
"6815splitHere46","2423399splitHere46","objectName1"
"6816splitHere46","2423399splitHere46","objectName2"
"6817splitHere46","2423399splitHere46","instance"
"6818splitHere46","2423427splitHere46","-with-docs.zip"
"6819splitHere46","2423523splitHere46","<s:push value=<doubleQuotes46>person<doubleQuotes46>><newline46mondego>      <s:if test=<doubleQuotes46>%{admin=='y'}<doubleQuotes46>><newline46mondego>        <a class=<doubleQuotes46>add<doubleQuotes46> href=<doubleQuotes46>/projit1/project/addProject.jsp<doubleQuotes46>>Create a Project</a><newline46mondego>      </s:if><newline46mondego>    </s:push><newline46mondego>"
"6820splitHere46","2423561splitHere46","java.io"
"6821splitHere46","2423561splitHere46","java.nio"
"6822splitHere46","2423561splitHere46","ServletContext#getRealPath"
"6823splitHere46","2423569splitHere46","(x1)--T_ONE-->(t1a)   (t1b)<--T_ONE--(x2)--T_FOUR-->(t4a)<newline46mondego> |\                                   |<newline46mondego> \ |---T_TWO-->(t2a)                 /<newline46mondego>  \                                 /<newline46mondego>   |---T_THREE-->(t3a)<--T_THREE---/<newline46mondego>"
"6824splitHere46","2423569splitHere46","Iterable<Relationship> x1_comps = x1.getRelationships(T_ONE, T_TWO, T_THREE, T_FOUR);<newline46mondego>Iterable<Relationship> x2_comps = x2.getRelationships(T_ONE, T_TWO, T_THREE, T_FOUR);<newline46mondego>"
"6825splitHere46","2423569splitHere46","void setComponent(Node xNode, RelationshipType tType, Node tNode) {<newline46mondego>    Relationship current = xNode.getSingleRelationship(tType);<newline46mondego>    if (current != null) current.delete();<newline46mondego>    xNode.createRelationshipTo(tNode, tType);<newline46mondego>}<newline46mondego>"
"6826splitHere46","2423619splitHere46","Locale nullLocale = null;<newline46mondego>String.format(nullLocale, <doubleQuotes46>%f<doubleQuotes46>, someDoubleValue);<newline46mondego>"
"6827splitHere46","2423769splitHere46","ALTER TABLE TableName <newline46mondego>    ADD CONSTRAINT ConstraintName<newline46mondego>    CHECK fk1 <> fk2<newline46mondego>"
"6828splitHere46","2423873splitHere46","import javax.mail.*; <newline46mondego> import javax.mail.internet.*; <newline46mondego> import javax.activation.*; <newline46mondego> import java.io.*; <newline46mondego> import java.util.Properties; <newline46mondego> public class MailClient <newline46mondego> { <newline46mondego><newline46mondego><newline46mondego>     public void sendMail(String mailServer, String from, String to, <newline46mondego>                             String subject, String messageBody, <newline46mondego>                             String[] attachments) throws <newline46mondego>MessagingException, AddressException <newline46mondego>     { <newline46mondego>         // Setup mail server <newline46mondego>         Properties props = System.getProperties(); <newline46mondego>         props.put(<doubleQuotes46>mail.smtp.host<doubleQuotes46>, mailServer); <newline46mondego><newline46mondego>         // Get a mail session <newline46mondego>         Session session = Session.getDefaultInstance(props, null); <newline46mondego><newline46mondego>         // Define a new mail message <newline46mondego>         Message message = new MimeMessage(session); <newline46mondego>         message.setFrom(new InternetAddress(from)); <newline46mondego>         message.addRecipient(Message.RecipientType.TO, new InternetAddress(to)); <newline46mondego>         message.setSubject(subject); <newline46mondego><newline46mondego>         // Create a message part to represent the body text <newline46mondego>         BodyPart messageBodyPart = new MimeBodyPart(); <newline46mondego>         messageBodyPart.setText(messageBody); <newline46mondego><newline46mondego>         //use a MimeMultipart as we need to handle the file attachments <newline46mondego>         Multipart multipart = new MimeMultipart(); <newline46mondego><newline46mondego>         //add the message body to the mime message <newline46mondego>         multipart.addBodyPart(messageBodyPart); <newline46mondego><newline46mondego>         // add any file attachments to the message <newline46mondego>         addAtachments(attachments, multipart); <newline46mondego><newline46mondego>         // Put all message parts in the message <newline46mondego>         message.setContent(multipart); <newline46mondego><newline46mondego>         // Send the message <newline46mondego>         Transport.send(message); <newline46mondego><newline46mondego><newline46mondego>     } <newline46mondego><newline46mondego>     protected void addAtachments(String[] attachments, Multipart multipart) <newline46mondego>                     throws MessagingException, AddressException <newline46mondego>     { <newline46mondego>         for(int i = 0; i<= attachments.length -1; i++) <newline46mondego>         { <newline46mondego>             String filename = attachments[i]; <newline46mondego>             MimeBodyPart attachmentBodyPart = new MimeBodyPart(); <newline46mondego><newline46mondego>             //use a JAF FileDataSource as it does MIME type detection <newline46mondego>             DataSource source = new FileDataSource(filename); <newline46mondego>             attachmentBodyPart.setDataHandler(new DataHandler(source)); <newline46mondego><newline46mondego>             //assume that the filename you want to send is the same as the <newline46mondego>             //actual file name - could alter this to remove the file path <newline46mondego>             attachmentBodyPart.setFileName(filename); <newline46mondego><newline46mondego>             //add the attachment <newline46mondego>             multipart.addBodyPart(attachmentBodyPart); <newline46mondego>         } <newline46mondego>     } <newline46mondego><newline46mondego>     public static void main(String[] args) <newline46mondego>     { <newline46mondego>         try <newline46mondego>         { <newline46mondego>             MailClient client = new MailClient(); <newline46mondego>             String server=<doubleQuotes46>pop3.mydomain.com<doubleQuotes46>; <newline46mondego>             String from=<doubleQuotes46>myname@mydomain.com<doubleQuotes46>; <newline46mondego>             String to = <doubleQuotes46>someuser@somewhere.com<doubleQuotes46>; <newline46mondego>             String subject=<doubleQuotes46>Test<doubleQuotes46>; <newline46mondego>             String message=<doubleQuotes46>Testing<doubleQuotes46>; <newline46mondego>             String[] filenames = <newline46mondego>{<doubleQuotes46>c:\somefile.txt<doubleQuotes46>}; <newline46mondego><newline46mondego>             client.sendMail(server,from,to,subject,message,filenames); <newline46mondego>         } <newline46mondego>         catch(Exception e) <newline46mondego>         { <newline46mondego>             e.printStackTrace(System.out); <newline46mondego>         } <newline46mondego><newline46mondego>     } <newline46mondego> } <newline46mondego>"
"6829splitHere46","2424566splitHere46","User"
"6830splitHere46","2424566splitHere46","null"
"6831splitHere46","2424566splitHere46","null"
"6832splitHere46","2424566splitHere46","null"
"6833splitHere46","2424566splitHere46","String username = request.getParameter(<doubleQuotes46>username<doubleQuotes46>);<newline46mondego>String password = request.getParameter(<doubleQuotes46>password<doubleQuotes46>);<newline46mondego>User user = userDAO.find(username, password);<newline46mondego>if (user != null) {<newline46mondego>    request.getSession().setAttribute(<doubleQuotes46>user<doubleQuotes46>, user);<newline46mondego>    response.sendRedirect(<doubleQuotes46>home<doubleQuotes46>);<newline46mondego>} else {<newline46mondego>    request.setAttribute(<doubleQuotes46>error<doubleQuotes46>, <doubleQuotes46>Unknown login, please try again.<doubleQuotes46>);<newline46mondego>    request.getRequestDispatcher(<doubleQuotes46>login<doubleQuotes46>).forward(request, response);<newline46mondego>}<newline46mondego>"
"6834splitHere46","2424566splitHere46","boolean flag"
"6835splitHere46","2424579splitHere46","ServletContextListener"
"6836splitHere46","2424579splitHere46","ExecutorService"
"6837splitHere46","2424659splitHere46","public class HelloApp {<newline46mondego>   public static void main(String argv[]) {<newline46mondego>      System.out.println(<doubleQuotes46>Aloha! Hello and Bye<doubleQuotes46>);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"6838splitHere46","2424659splitHere46","prmpt>java -verbose:class HelloApp<newline46mondego><newline46mondego><newline46mondego><newline46mondego>[Opened C:\Program Files\Java\jre1.5.0\lib\rt.jar]<newline46mondego>[Opened C:\Program Files\Java\jre1.5.0\lib\jsse.jar]<newline46mondego>[Opened C:\Program Files\Java\jre1.5.0\lib\jce.jar]<newline46mondego>[Opened C:\Program Files\Java\jre1.5.0\lib\charsets.jar]<newline46mondego>[Loaded java.lang.Object from shared objects file]<newline46mondego>[Loaded java.io.Serializable from shared objects file]<newline46mondego>[Loaded java.lang.Comparable from shared objects file]<newline46mondego>[Loaded java.lang.CharSequence from shared objects file]<newline46mondego>[Loaded java.lang.String from shared objects file]<newline46mondego>[Loaded java.lang.reflect.GenericDeclaration from shared objects file]<newline46mondego>[Loaded java.lang.reflect.Type from shared objects file]<newline46mondego>[Loaded java.lang.reflect.AnnotatedElement from shared objects file]<newline46mondego>[Loaded java.lang.Class from shared objects file]<newline46mondego>[Loaded java.lang.Cloneable from shared objects file]<newline46mondego>[Loaded java.lang.ClassLoader from shared objects file]<newline46mondego>[Loaded java.lang.System from shared objects file]<newline46mondego>[Loaded java.lang.Throwable from shared objects file]<newline46mondego>.<newline46mondego>.<newline46mondego>.<newline46mondego>[Loaded java.security.BasicPermissionCollection from shared objects file]<newline46mondego>[Loaded java.security.Principal from shared objects file]<newline46mondego>[Loaded java.security.cert.Certificate from shared objects file]<newline46mondego>[Loaded HelloApp from file:/C:/classes/]<newline46mondego>Aloha! Hello and Bye<newline46mondego>[Loaded java.lang.Shutdown from shared objects file]<newline46mondego>[Loaded java.lang.Shutdown$Lock from shared objects file]<newline46mondego>"
"6839splitHere46","2424659splitHere46","java.lang.ClassLoader"
"6840splitHere46","2424659splitHere46","java.lang.ClassLoader"
"6841splitHere46","2424659splitHere46","loadClass()"
"6842splitHere46","2424659splitHere46","loadClass()"
"6843splitHere46","2424659splitHere46","findClass()"
"6844splitHere46","2424659splitHere46","finalClass()"
"6845splitHere46","2424824splitHere46","<input type=<doubleQuotes46>file<doubleQuotes46>>"
"6846splitHere46","2424824splitHere46","POST"
"6847splitHere46","2424824splitHere46","enctype"
"6848splitHere46","2424824splitHere46","<doubleQuotes46>multipart/form-data<doubleQuotes46>"
"6849splitHere46","2424824splitHere46","<form action=<doubleQuotes46>upload<doubleQuotes46> method=<doubleQuotes46>post<doubleQuotes46> enctype=<doubleQuotes46>multipart/form-data<doubleQuotes46>><newline46mondego>    <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>description<doubleQuotes46> /><newline46mondego>    <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>file<doubleQuotes46> /><newline46mondego>    <input type=<doubleQuotes46>submit<doubleQuotes46> /><newline46mondego></form><newline46mondego>"
"6850splitHere46","2424824splitHere46","enctype"
"6851splitHere46","2424824splitHere46","multipart/form-data"
"6852splitHere46","2424824splitHere46","application/x-www-form-urlencoded"
"6853splitHere46","2424824splitHere46","request.getParameter()"
"6854splitHere46","2424824splitHere46","null"
"6855splitHere46","2424824splitHere46","ServletRequest#getInputStream()"
"6856splitHere46","2424824splitHere46","MultipartRequest"
"6857splitHere46","2424824splitHere46","/WEB-INF/lib"
"6858splitHere46","2424824splitHere46","commons-fileupload.jar"
"6859splitHere46","2424824splitHere46","commons-io.jar"
"6860splitHere46","2424824splitHere46","doPost()"
"6861splitHere46","2424824splitHere46","UploadServlet"
"6862splitHere46","2424824splitHere46","protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    try {<newline46mondego>        List<FileItem> items = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request);<newline46mondego>        for (FileItem item : items) {<newline46mondego>            if (item.isFormField()) {<newline46mondego>                // Process regular form field (input type=<doubleQuotes46>text|radio|checkbox|etc<doubleQuotes46>, select, etc).<newline46mondego>                String fieldname = item.getFieldName();<newline46mondego>                String fieldvalue = item.getString();<newline46mondego>                // ... (do your job here)<newline46mondego>            } else {<newline46mondego>                // Process form file field (input type=<doubleQuotes46>file<doubleQuotes46>).<newline46mondego>                String fieldname = item.getFieldName();<newline46mondego>                String filename = FilenameUtils.getName(item.getName());<newline46mondego>                InputStream filecontent = item.getInputStream();<newline46mondego>                // ... (do your job here)<newline46mondego>            }<newline46mondego>        }<newline46mondego>    } catch (FileUploadException e) {<newline46mondego>        throw new ServletException(<doubleQuotes46>Cannot parse multipart request.<doubleQuotes46>, e);<newline46mondego>    }<newline46mondego><newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6863splitHere46","2424824splitHere46","Filter"
"6864splitHere46","2424824splitHere46","request.getParameter()"
"6865splitHere46","2424824splitHere46","request.getAttribute()"
"6866splitHere46","2424824splitHere46","HttpServletRequest#getPart()"
"6867splitHere46","2424824splitHere46","getParameter()"
"6868splitHere46","2424824splitHere46","getParameter()"
"6869splitHere46","2424824splitHere46","@MultipartConfig"
"6870splitHere46","2424824splitHere46","multipart/form-data"
"6871splitHere46","2424824splitHere46","getPart()"
"6872splitHere46","2424824splitHere46","@WebServlet(<doubleQuotes46>/upload<doubleQuotes46>)<newline46mondego>@MultipartConfig<newline46mondego>public class UploadServlet extends HttpServlet {<newline46mondego>    // ...<newline46mondego>}<newline46mondego>"
"6873splitHere46","2424824splitHere46","doPost()"
"6874splitHere46","2424824splitHere46","protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<newline46mondego>    String description = request.getParameter(<doubleQuotes46>description<doubleQuotes46>); // Retrieves <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>description<doubleQuotes46>><newline46mondego>    Part filePart = request.getPart(<doubleQuotes46>file<doubleQuotes46>); // Retrieves <input type=<doubleQuotes46>file<doubleQuotes46> name=<doubleQuotes46>file<doubleQuotes46>><newline46mondego>    String filename = getFilename(filePart);<newline46mondego>    InputStream filecontent = filePart.getInputStream();<newline46mondego>    // ... (do your job here)<newline46mondego>}<newline46mondego><newline46mondego>private static String getFilename(Part part) {<newline46mondego>    for (String cd : part.getHeader(<doubleQuotes46>content-disposition<doubleQuotes46>).split(<doubleQuotes46>;<doubleQuotes46>)) {<newline46mondego>        if (cd.trim().startsWith(<doubleQuotes46>filename<doubleQuotes46>)) {<newline46mondego>            String filename = cd.substring(cd.indexOf('=') + 1).trim().replace(<doubleQuotes46>\<doubleQuotes46><doubleQuotes46>, <doubleQuotes46><doubleQuotes46>);<newline46mondego>            return filename.substring(filename.lastIndexOf('/') + 1).substring(filename.lastIndexOf('\\') + 1); // MSIE fix.<newline46mondego>        }<newline46mondego>    }<newline46mondego>    return null;<newline46mondego>}<newline46mondego>"
"6875splitHere46","2424824splitHere46","Filter"
"6876splitHere46","2424824splitHere46","request.getParameter()"
"6877splitHere46","2424824splitHere46","getParameter()"
"6878splitHere46","2424824splitHere46","null"
"6879splitHere46","2424824splitHere46","getParameter()"
"6880splitHere46","2424824splitHere46","null"
"6881splitHere46","2424824splitHere46","getPart()"
"6882splitHere46","2424824splitHere46","String description = getValue(request.getPart(<doubleQuotes46>description<doubleQuotes46>)); // Retrieves <input type=<doubleQuotes46>text<doubleQuotes46> name=<doubleQuotes46>description<doubleQuotes46>><newline46mondego>"
"6883splitHere46","2424824splitHere46","private static String getValue(Part part) throws IOException {<newline46mondego>    BufferedReader reader = new BufferedReader(new InputStreamReader(part.getInputStream(), <doubleQuotes46>UTF-8<doubleQuotes46>));<newline46mondego>    StringBuilder value = new StringBuilder();<newline46mondego>    char[] buffer = new char[1024];<newline46mondego>    for (int length = 0; (length = reader.read(buffer)) > 0;) {<newline46mondego>        value.append(buffer, 0, length);<newline46mondego>    }<newline46mondego>    return value.toString();<newline46mondego>}<newline46mondego>"
"6884splitHere46","2425184splitHere46","String [] oldVal = {<doubleQuotes46>one<doubleQuotes46>,<doubleQuotes46>two<doubleQuotes46>,<doubleQuotes46>three<doubleQuotes46>,<doubleQuotes46>Four<doubleQuotes46>};<newline46mondego> String [] newVal = {<doubleQuotes46>one<doubleQuotes46>,<doubleQuotes46>Two<doubleQuotes46>,<doubleQuotes46>Three<doubleQuotes46>,<doubleQuotes46>four<doubleQuotes46>};<newline46mondego><newline46mondego> Set <String> set1 = new TreeSet <String> (String.CASE_INSENSITIVE_ORDER);<newline46mondego> Set <String> set2 = new TreeSet <String> (String.CASE_INSENSITIVE_ORDER);<newline46mondego><newline46mondego> set1.addAll(Arrays.asList(oldVal));<newline46mondego> set2.addAll(Arrays.asList(newVal));<newline46mondego><newline46mondego> System.out.println(<doubleQuotes46>--Using Tree Set --- <doubleQuotes46>+ set1.containsAll(set2));  // Return True<newline46mondego>"
"6885splitHere46","2425237splitHere46","public abstract class Factory {<newline46mondego>    public abstract A getInstance(object o, enum e);<newline46mondego>}<newline46mondego><newline46mondego>public class FactoryB extends Factory {<newline46mondego>    @Override<newline46mondego>    public B getInstance(object o,enum e){<newline46mondego>         //do something with enums and get B<newline46mondego>         b = new B();<newline46mondego>         //populate b<newline46mondego>         return b;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"6886splitHere46","2425437splitHere46","ringtoneManager.stopPreviousRingtone();<newline46mondego>"
"6887splitHere46","2425533splitHere46","setAlignmentY"
"6888splitHere46","2425533splitHere46","BoxLayout"
"6889splitHere46","2425533splitHere46","GridBagLayout"
"6890splitHere46","2425533splitHere46","setLayout(new GridBagLayout(this));<newline46mondego><newline46mondego>add(botSelectionPanel, new GBC(0,1).setAnchor(TOP));<newline46mondego>add(blindSelectionPanel, new GBC(0,2).setAnchor(TOP));<newline46mondego>"
"6891splitHere46","2425585splitHere46","UserTransaction"
"6892splitHere46","2425585splitHere46","last-agent-optimization"
"6893splitHere46","2425613splitHere46","JButton"
"6894splitHere46","2425613splitHere46","GridBagLayout"
"6895splitHere46","2425644splitHere46","public class Add implements ArithmeticOperator(){ <newline46mondego>   @Override double operate (double a, double b){ return a+b;}<newline46mondego>}<newline46mondego>"
"6896splitHere46","2425734splitHere46","javap"
"6897splitHere46","2425734splitHere46","println"
"6898splitHere46","2425734splitHere46","javap"
"6899splitHere46","2425734splitHere46","println(Object)"
"6900splitHere46","2425734splitHere46","checkcast"
"6901splitHere46","2425752splitHere46","convert(string bytea, src_encoding name, dest_encoding name)"
"6902splitHere46","2425752splitHere46","String query = <doubleQuotes46>SELECT id FROM province WHERE name = convert( 'Québec', 'UTF-8', 'ISO-8859-1' );<doubleQuotes46>; <newline46mondego>"
"6903splitHere46","2425877splitHere46","close()"
"6904splitHere46","2425949splitHere46","sep.setPreferredSize(new Dimension(5,1));<newline46mondego>"
"6905splitHere46","2425949splitHere46","gbc.fill = GridBagConstraints.VERTICAL;<newline46mondego>gbc.weighty = 1;<newline46mondego>"
"6906splitHere46","2425963splitHere46","add.printName()"
"6907splitHere46","2426004splitHere46","getMyBigList"
"6908splitHere46","2426043splitHere46","InputStream"
"6909splitHere46","2426043splitHere46","PreparedStatement#setBinaryStream()"
"6910splitHere46","2426043splitHere46","Reader"
"6911splitHere46","2426043splitHere46","InputStream input = imageUrl.openStream();<newline46mondego><newline46mondego>// ...<newline46mondego><newline46mondego>statement = connection.prepareStatement(<doubleQuotes46>INSERT INTO image (content) VALUES (?)<doubleQuotes46>);<newline46mondego>statement.setBinaryStream(1, input);<newline46mondego>statement.executeUpdate();<newline46mondego>"
"6912splitHere46","2426043splitHere46","PreparedStatement"
"6913splitHere46","2426043splitHere46","InputStream"
"6914splitHere46","2426043splitHere46","PreparedStatement"
"6915splitHere46","2426156splitHere46","MessageContext msgCtx = MessageContext.getCurrentMessageContext();"
"6916splitHere46","2426156splitHere46","//this is the incoming message context<newline46mondego>    MessageContext inMessageContext  = MessageContext.getCurrentMessageContext();<newline46mondego>    OperationContext operationContext = inMessageContext.getOperationContext();<newline46mondego>    //this is the outgoing message context<newline46mondego>    MessageContext outMessageContext =     operationContext.getMessageContext(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);<newline46mondego>"
"6917splitHere46","2426156splitHere46","String attachmentID = outMessageContext.addAttachment(dataHandler);<newline46mondego>"
"6918splitHere46","2426292splitHere46","final JDialog dialog = new JDialog();<newline46mondego>    dialog.setTitle(<doubleQuotes46>Test Input<doubleQuotes46>);<newline46mondego>    dialog.setModal(true);<newline46mondego><newline46mondego><newline46mondego>    dialog.addWindowFocusListener(new WindowFocusListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void windowLostFocus(WindowEvent arg0) {<newline46mondego><newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void windowGainedFocus(WindowEvent arg0) {<newline46mondego>            frame.toFront();        <newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"6919splitHere46","2426431splitHere46","System.out.println(<doubleQuotes46>checked boxes:<doubleQuotes46>);<newline46mondego>for (int i = 0; i < SelectedValues.length; ++i)<newline46mondego>  System.out.println(<doubleQuotes46>  <doubleQuotes46> + SelectedValues[i]);<newline46mondego>"
"6920splitHere46","2426504splitHere46","String[]"
"6921splitHere46","2426504splitHere46","String..."
"6922splitHere46","2426631splitHere46","<@spring.bind <doubleQuotes46>advancedSearch.languages<doubleQuotes46>/><newline46mondego><#assign selectedLangs = spring.status.value?default(<doubleQuotes46> <doubleQuotes46>)><newline46mondego><select multiple=<doubleQuotes46>multiple<doubleQuotes46> id=<doubleQuotes46>${spring.status.expression}<doubleQuotes46> name=<doubleQuotes46>${spring.status.expression}<doubleQuotes46>}><newline46mondego>    <#list languages?keys as value><newline46mondego>    <#if selectedLangs?contains(value) ><newline46mondego>        <#assign isSelected = true><newline46mondego>    <#else><newline46mondego>        <#assign isSelected = false><newline46mondego>    </#if><newline46mondego>    <option value=<doubleQuotes46>${value?html}<doubleQuotes46><#if isSelected> selected=<doubleQuotes46>selected<doubleQuotes46></#if>>${languages[value]?html}<newline46mondego>    </#list><newline46mondego></select><newline46mondego>"
"6923splitHere46","2426936splitHere46","GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>GraphicsConfiguration gc = ge.getDefaultScreenDevice().getDefaultConfiguration();<newline46mondego>VolatileImage vImage = gc.createCompatibleVolatileImage(width, height, Transparency.TRANSLUCENT);<newline46mondego>"
"6924splitHere46","2426936splitHere46","GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<newline46mondego>GraphicsConfiguration gc = ge.getDefaultScreenDevice().getDefaultConfiguration();<newline46mondego>BufferedImage img = gc.createCompatibleImage(width, height, Transparency.TRANSLUCENT);<newline46mondego>img.setAccelerationPriority(1);<newline46mondego>"
"6925splitHere46","2426951splitHere46","removeEldestEntry"
"6926splitHere46","2426951splitHere46","public static void main(String[] args) {<newline46mondego>    class CacheMap extends LinkedHashMap{<newline46mondego>      private int maxCapacity;<newline46mondego>      public CacheMap(int initialCapacity, int maxCapacity) {<newline46mondego>        super(initialCapacity, 0.75f, true);<newline46mondego>        this.maxCapacity = maxCapacity;<newline46mondego>      }<newline46mondego><newline46mondego>      @Override<newline46mondego>      protected boolean removeEldestEntry(Map.Entry eldest) {<newline46mondego>        return size()>maxCapacity;<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    int[] popular = {1,2,3,4,5};<newline46mondego>    CacheMap myCache = new CacheMap(5, 10);<newline46mondego>    for (int i=0; i<100; i++){<newline46mondego>      myCache.put(i,i);<newline46mondego>      for (int p : popular) {<newline46mondego>        myCache.get(p);<newline46mondego>      }<newline46mondego>    }<newline46mondego><newline46mondego>    System.out.println(myCache.toString()); <newline46mondego>    //{95=95, 96=96, 97=97, 98=98, 99=99, 1=1, 2=2, 3=3, 4=4, 5=5}<newline46mondego>  }<newline46mondego>"
"6927splitHere46","2427044splitHere46","File f = new File(keyStorePath);<newline46mondego>KeyStore.Builder builder = KeyStore.Builder.newInstance(<doubleQuotes46>type<doubleQuotes46>,provider,file,protection);<newline46mondego>KeyStore keystore = builder.getKeyStore();<newline46mondego>"
"6928splitHere46","2427044splitHere46","<bean id=<doubleQuotes46>template<doubleQuotes46> class=<doubleQuotes46>org.springframework.ws.client.core.WebServiceTemplate<doubleQuotes46>><newline46mondego>    <property name=<doubleQuotes46>messageSender<doubleQuotes46>><newline46mondego>        <bean class=<doubleQuotes46>org.springframework.ws.transport.http.HttpsUrlConnectionMessageSender<doubleQuotes46>><newline46mondego>            <property name=<doubleQuotes46><doubleQuotes46>></property><newline46mondego>        </bean><newline46mondego>    </property><newline46mondego></bean><newline46mondego>"
"6929splitHere46","2427060splitHere46","IFilters"
"6930splitHere46","2427060splitHere46","boolean filtersResult = false;<newline46mondego>for (IFilter filter : filters) {<newline46mondego>    filterResult = filter.process(mypojos[i])<newline46mondego><newline46mondego>    if (filterResult)<newline46mondego>        break;<newline46mondego>}<newline46mondego>"
"6931splitHere46","2427083splitHere46","<.*?>\([^<]+\)</.*?><newline46mondego>"
"6932splitHere46","2427083splitHere46","</b>"
"6933splitHere46","2427083splitHere46","<b>...</b>"
"6934splitHere46","2427083splitHere46","<.*?><b>\([^<]+\)</b></.*?><newline46mondego>"
"6935splitHere46","2427102splitHere46","get()"
"6936splitHere46","2427102splitHere46","Calendar.DAY_OF_WEEK"
"6937splitHere46","2427102splitHere46","public int getTodaysDayOfWeek() {<newline46mondego>  final Calendar c = Calendar.getInstance();<newline46mondego>  return c.get(Calendar.DAY_OF_WEEK);<newline46mondego>}<newline46mondego>"
"6938splitHere46","2427102splitHere46","cal"
"6939splitHere46","2427139splitHere46","Output Stream"
"6940splitHere46","2427139splitHere46","GZIP Output Stream"
"6941splitHere46","2427167splitHere46","Integer.signum(int i)"
"6942splitHere46","2427313splitHere46","@Entity<newline46mondego>@Inheritance(strategy=InheritanceType.SINGLE_TABLE)<newline46mondego>@DiscriminatorColumn(<newline46mondego>    name=<doubleQuotes46>emptype<doubleQuotes46>,<newline46mondego>    discriminatorType=DiscriminatorType.STRING<newline46mondego>)<newline46mondego>public abstract class Employee { ... }<newline46mondego><newline46mondego>@Entity<newline46mondego>@DiscriminatorValue(<doubleQuotes46>MGR<doubleQuotes46>)<newline46mondego>public class Manager extends Employee { ... }<newline46mondego>"
"6943splitHere46","2427313splitHere46","Employee"
"6944splitHere46","2427313splitHere46","Employee"
"6945splitHere46","2427313splitHere46","Employee"
"6946splitHere46","2427313splitHere46","@Entity<newline46mondego>@Inheritance(strategy=InheritanceType.SINGLE_TABLE)<newline46mondego>@DiscriminatorColumn(<newline46mondego>    name=<doubleQuotes46>emptype<doubleQuotes46>,<newline46mondego>    discriminatorType=DiscriminatorType.STRING<newline46mondego>)<newline46mondego>public abstract class Employee { <newline46mondego><newline46mondego>    ... <newline46mondego><newline46mondego>    private Employee manager;<newline46mondego>    private Set<Employee> reportees = new HashSet<Employee>();<newline46mondego><newline46mondego>    @ManyToOne(optional = true)<newline46mondego>    public Employee getManager() {<newline46mondego>        return manager;<newline46mondego>    }<newline46mondego><newline46mondego>    @OneToMany<newline46mondego>    public Set<Employee> getReportees() {<newline46mondego>        return reportees;<newline46mondego>    }<newline46mondego><newline46mondego>    ...<newline46mondego>}<newline46mondego>"
"6947splitHere46","2427313splitHere46","CREATE TABLE EMPLOYEE_EMPLOYEE (<newline46mondego>        EMPLOYEE_ID BIGINT NOT NULL,<newline46mondego>        REPORTEES_ID BIGINT NOT NULL<newline46mondego>    );<newline46mondego><newline46mondego>CREATE TABLE EMPLOYEE (<newline46mondego>        EMPTYPE VARCHAR(31) NOT NULL,<newline46mondego>        ID BIGINT NOT NULL,<newline46mondego>        NAME VARCHAR(255),<newline46mondego>        MANAGER_ID BIGINT<newline46mondego>    );<newline46mondego><newline46mondego>ALTER TABLE EMPLOYEE ADD CONSTRAINT SQL100311183749050 PRIMARY KEY (ID);<newline46mondego><newline46mondego>ALTER TABLE EMPLOYEE_EMPLOYEE ADD CONSTRAINT SQL100311183356150 PRIMARY KEY (EMPLOYEE_ID, REPORTEES_ID);<newline46mondego><newline46mondego>ALTER TABLE EMPLOYEE ADD CONSTRAINT FK4AFD4ACE7887BF92 FOREIGN KEY (MANAGER_ID)<newline46mondego>    REFERENCES EMPLOYEE (ID);<newline46mondego><newline46mondego>ALTER TABLE EMPLOYEE_EMPLOYEE ADD CONSTRAINT FKDFD1791F25AA2BE0 FOREIGN KEY (REPORTEES_ID)<newline46mondego>    REFERENCES EMPLOYEE (ID);<newline46mondego><newline46mondego>ALTER TABLE EMPLOYEE_EMPLOYEE ADD CONSTRAINT FKDFD1791F1A4AFCF1 FOREIGN KEY (EMPLOYEE_ID)<newline46mondego>    REFERENCES EMPLOYEE (ID);<newline46mondego>"
"6948splitHere46","2427588splitHere46","PersistenceException"
"6949splitHere46","2427588splitHere46","EntityManagerFactory emf = Persistence.createEntityManagerFactory(name);<newline46mondego>EntityManager em = emf.createEntityManager();<newline46mondego>"
"6950splitHere46","2427588splitHere46","name"
"6951splitHere46","2427588splitHere46","/META-INF/persistence.xml"
"6952splitHere46","2427643splitHere46","Integer"
"6953splitHere46","2427643splitHere46","Integer's"
"6954splitHere46","2427643splitHere46","hashCode"
"6955splitHere46","2427689splitHere46","TimerTask"
"6956splitHere46","2427689splitHere46","Timer"
"6957splitHere46","2427689splitHere46","class ExpireTask extends TimerTask<newline46mondego>{<newline46mondego>  YourClass callbackClass;<newline46mondego><newline46mondego>  ExpireTask(YourClass callbackClass)<newline46mondego>  {<newline46mondego>    this.callbackClass = callbackClass;<newline46mondego>  }<newline46mondego><newline46mondego>  public void run()<newline46mondego>  {<newline46mondego>    callbackClass.timeExpired()<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"6958splitHere46","2427689splitHere46","timeExpired"
"6959splitHere46","2427689splitHere46","Timer"
"6960splitHere46","2427689splitHere46","...<newline46mondego>Timer timer = new Timer();<newline46mondego>timer.schedule(new ExpireTask(callbackClass), 60000 /* 60 secs */);<newline46mondego>...<newline46mondego>"
"6961splitHere46","2427692splitHere46","File fileToRead = JFileChooser.getSelectedFile();<newline46mondego>"
"6962splitHere46","2427692splitHere46","File fileToWrite = new File( fileToRead.getParent(), <doubleQuotes46>newName.txt<doubleQuotes46> );<newline46mondego>"
"6963splitHere46","2427858splitHere46","JFrame jf = new JFrame();<newline46mondego>jf.addComponentListener(new ComponentListener() {...});<newline46mondego>"
"6964splitHere46","2427946splitHere46","Foo copyFoo (Foo foo){<newline46mondego>  Foo f = new Foo();<newline46mondego>  //for all properties in FOo<newline46mondego>  f.set(foo.get());<newline46mondego>  return f;<newline46mondego>}<newline46mondego>"
"6965splitHere46","2428010splitHere46","instanceof"
"6966splitHere46","2428010splitHere46","public class MainClass {<newline46mondego>  public static void main(String[] a) {<newline46mondego><newline46mondego>    String s = <doubleQuotes46>Hello<doubleQuotes46>;<newline46mondego>    if (s instanceof java.lang.String) {<newline46mondego>      System.out.println(<doubleQuotes46>is a String<doubleQuotes46>);<newline46mondego>    }<newline46mondego>  }<newline46mondego><newline46mondego>}<newline46mondego>"
"6967splitHere46","2428038splitHere46","effective2/examples/Chapter6/Item30/Operation.java"
"6968splitHere46","2428334splitHere46","//within some method<newline46mondego>  taskExecutor.execute( new Runnable() {<newline46mondego>       public void run() {<newline46mondego>            classWithMethodToFire.doSomething( parameter );<newline46mondego>       }<newline46mondego>  }); <newline46mondego>"
"6969splitHere46","2428334splitHere46","//within some method<newline46mondego>  class myFirstRunnableClass implements Runnable() {<newline46mondego>       public void run() {<newline46mondego>            classWithMethodToFire.doSomething( parameter );<newline46mondego>       }<newline46mondego>  }<newline46mondego>  class mySecondRunnableClass implements Runnable() {<newline46mondego>       public void run() {<newline46mondego>            classWithMethodToFire.doSomethingElse( parameter );<newline46mondego>       }<newline46mondego>  }<newline46mondego>  taskExecutor.execute(new myFirstRunnableClass());<newline46mondego>  taskExecutor.execute(new mySecondRunnableClass());<newline46mondego>"
"6970splitHere46","2428385splitHere46","Button"
"6971splitHere46","2428385splitHere46","public String text"
"6972splitHere46","2428385splitHere46","Button"
"6973splitHere46","2428385splitHere46","text"
"6974splitHere46","2428385splitHere46","private"
"6975splitHere46","2428385splitHere46","setText()"
"6976splitHere46","2428385splitHere46","public FileStream file"
"6977splitHere46","2428385splitHere46","file"
"6978splitHere46","2428385splitHere46","null"
"6979splitHere46","2428465splitHere46","Iterator iter = session.createQuery(<doubleQuotes46>from X<doubleQuotes46>).iterate();<newline46mondego>"
"6980splitHere46","2428533splitHere46","jar"
"6981splitHere46","2428660splitHere46","Reservation[]"
"6982splitHere46","2428660splitHere46","Reservation"
"6983splitHere46","2428660splitHere46","VIPReservation"
"6984splitHere46","2428660splitHere46","Reservation"
"6985splitHere46","2428660splitHere46","Reservation"
"6986splitHere46","2428834splitHere46","find"
"6987splitHere46","2428834splitHere46","delete"
"6988splitHere46","2428834splitHere46","find"
"6989splitHere46","2428834splitHere46","EntityManager"
"6990splitHere46","2428834splitHere46","EntityManager.find"
"6991splitHere46","2428834splitHere46","EntityManager"
"6992splitHere46","2428874splitHere46","InetAddress.getByName(<doubleQuotes46>test.multi.surbl.org<doubleQuotes46>).getHostAddress();<newline46mondego>"
"6993splitHere46","2428932splitHere46","group()"
"6994splitHere46","2428932splitHere46","group(0)"
"6995splitHere46","2428932splitHere46","public String group(int group)"
"6996splitHere46","2428932splitHere46","m.group(0)"
"6997splitHere46","2428932splitHere46","m.group()"
"6998splitHere46","2428932splitHere46","group(1)"
"6999splitHere46","2428932splitHere46","group()"
"7000splitHere46","2428932splitHere46","<doubleQuotes46>(?<=USERNAME=)\\w+<doubleQuotes46>"
"7001splitHere46","2428971splitHere46","create()"
"7002splitHere46","2428971splitHere46","this.wordToWordID = new BiMap<String. Integer>();<newline46mondego>"
"7003splitHere46","2428971splitHere46","this.wordToWordID = HashBiMap.create(); <newline46mondego>"
"7004splitHere46","2429082splitHere46","bar = bar;<newline46mondego>"
"7005splitHere46","2429082splitHere46","this"
"7006splitHere46","2429238splitHere46","synchronized"
"7007splitHere46","2429246splitHere46","char firstLetter = someString.charAt(0);<newline46mondego>String oneLetter = String.valueOf(someChar);<newline46mondego>"
"7008splitHere46","2429246splitHere46","java.lang.String"
"7009splitHere46","2429246splitHere46","java.lang.Character"
"7010splitHere46","2429246splitHere46","java.lang"
"7011splitHere46","2429246splitHere46","java.util"
"7012splitHere46","2429334splitHere46","<dependency><newline46mondego>    <groupId>javax</groupId><newline46mondego>    <artifactId>javaee-api</artifactId><newline46mondego>    <version>6.0</version><newline46mondego>    <scope>provided</scope><newline46mondego></dependency><newline46mondego>"
"7013splitHere46","2429490splitHere46",">>>"
"7014splitHere46","2429490splitHere46","unsigned int foo;<newline46mondego>unsigned int bar = foo >> whatever;<newline46mondego>"
"7015splitHere46","2429497splitHere46","+"
"7016splitHere46","2429497splitHere46","char"
"7017splitHere46","2429497splitHere46","<doubleQuotes46><doubleQuotes46> + ca + cb"
"7018splitHere46","2429497splitHere46","String.valueOf"
"7019splitHere46","2429497splitHere46","Character.toString"
"7020splitHere46","2429497splitHere46","+"
"7021splitHere46","2429497splitHere46","String"
"7022splitHere46","2429497splitHere46","+"
"7023splitHere46","2429497splitHere46","String"
"7024splitHere46","2429497splitHere46","+"
"7025splitHere46","2429497splitHere46","'a' = 97"
"7026splitHere46","2429497splitHere46","'b' = 98"
"7027splitHere46","2429497splitHere46","97 + 98 = 195"
"7028splitHere46","2429497splitHere46","int"
"7029splitHere46","2429497splitHere46","char"
"7030splitHere46","2429497splitHere46","char ch = 'a';<newline46mondego> int i = (int) ch;   <newline46mondego> System.out.println(i);   // prints <doubleQuotes46>97<doubleQuotes46><newline46mondego> ch = (char) 99;<newline46mondego> System.out.println(ch);  // prints <doubleQuotes46>c<doubleQuotes46><newline46mondego>"
"7031splitHere46","2429497splitHere46","+"
"7032splitHere46","2429513splitHere46","showPopup"
"7033splitHere46","2429513splitHere46","FocusListener"
"7034splitHere46","2429513splitHere46","menu.addFocusListener(new FocusListener() {<newline46mondego>        @Override<newline46mondego>        public void focusLost(FocusEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>LOST FOCUS<doubleQuotes46>);<newline46mondego>            isShowingPopup = false;<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void focusGained(FocusEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>GAINED FOCUS<doubleQuotes46>);<newline46mondego>            isShowingPopup = true;<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7035splitHere46","2429513splitHere46","isShowingPopup"
"7036splitHere46","2429513splitHere46","ActionListener"
"7037splitHere46","2429513splitHere46","addActionListener(new ActionListener() {<newline46mondego>        @Override<newline46mondego>        public void actionPerformed(ActionEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>isShowingPopup: <doubleQuotes46> + isShowingPopup);<newline46mondego>            if (showPopup) {<newline46mondego>                Component c = (Component) e.getSource();<newline46mondego>                menu.show(c, -1, c.getHeight());<newline46mondego>                menu.requestFocus();<newline46mondego>            } else {<newline46mondego>                showPopup = true;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7038splitHere46","2429513splitHere46","MouseListener"
"7039splitHere46","2429513splitHere46","addMouseListener(new MouseAdapter() {<newline46mondego>        @Override<newline46mondego>        public void mousePressed(MouseEvent e) {<newline46mondego>            System.out.println(<doubleQuotes46>ispopup?: <doubleQuotes46> + isShowingPopup);<newline46mondego>            if (isShowingPopup) {<newline46mondego>                showPopup = false;<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        @Override<newline46mondego>        public void mouseReleased(MouseEvent e) {<newline46mondego>            showPopup = true;<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7040splitHere46","2429513splitHere46","mousePressed"
"7041splitHere46","2429513splitHere46","isShowingPopup"
"7042splitHere46","2429513splitHere46","showPopup"
"7043splitHere46","2429513splitHere46","false"
"7044splitHere46","2429513splitHere46","actionPerformed"
"7045splitHere46","2429513splitHere46","actionPerformed"
"7046splitHere46","2429513splitHere46","showPopup"
"7047splitHere46","2429513splitHere46","mouseReleased"
"7048splitHere46","2429513splitHere46","showPopup"
"7049splitHere46","2429513splitHere46","mouseReleased"
"7050splitHere46","2429513splitHere46","actionPerformed"
"7051splitHere46","2429640splitHere46","createTempFile"
"7052splitHere46","2429640splitHere46","File"
"7053splitHere46","2429640splitHere46","java.io.tmpdir"
"7054splitHere46","2429640splitHere46","createNewFile()"
"7055splitHere46","2429640splitHere46","deleteOnExit()"
"7056splitHere46","2429658splitHere46","top"
"7057splitHere46","2429658splitHere46","-Xmx"
"7058splitHere46","2429683splitHere46","013"
"7059splitHere46","2429683splitHere46","013 = 1*8 + 3*1 = 8 + 3 = 11<newline46mondego>"
"7060splitHere46","2429683splitHere46","11"
"7061splitHere46","2429683splitHere46","int x = 17;<newline46mondego>int y = 013;<newline46mondego>int z = x + y;<newline46mondego><newline46mondego>System.out.println(<doubleQuotes46>x+y = <doubleQuotes46> + z);<newline46mondego>"
"7062splitHere46","2429858splitHere46","if (goodPressure = true)<newline46mondego>"
"7063splitHere46","2429858splitHere46","if (goodPressure == true)<newline46mondego>"
"7064splitHere46","2429858splitHere46","if (goodPressure)<newline46mondego>"
"7065splitHere46","2429858splitHere46","=="
"7066splitHere46","2429858splitHere46","!="
"7067splitHere46","2429858splitHere46","="
"7068splitHere46","2429858splitHere46","goodPressure = true;"
"7069splitHere46","2430049splitHere46","final int buttonIndex = i;<newline46mondego>b.addActionListener(new ActionListener() {<newline46mondego>   public void actionPerformed(ActionEvent ae2) {<newline46mondego>       System.out.println(<doubleQuotes46>Button pressed is: <doubleQuotes46> + buttonIndex);<newline46mondego>   }<newline46mondego>}<newline46mondego>"
"7070splitHere46","2430049splitHere46","final int buttonIndex = i;"
"7071splitHere46","2430049splitHere46","setActionCommand"
"7072splitHere46","2430049splitHere46","ActionEvent"
"7073splitHere46","2430049splitHere46","buttonIndex"
"7074splitHere46","2430341splitHere46","import"
"7075splitHere46","2430341splitHere46","import java.awt.*;<newline46mondego>"
"7076splitHere46","2430517splitHere46","import scala.collection.jcl.Conversions.unconvertList<newline46mondego>import scala.collection.jcl.ArrayList<newline46mondego>unconvertList(new ArrayList ++ List(1,2,3))<newline46mondego>"
"7077splitHere46","2430517splitHere46","import scala.collection.JavaConversions._<newline46mondego>import scala.collection.mutable.ListBuffer<newline46mondego>asList(ListBuffer(List(1,2,3): _*))<newline46mondego>val x: java.util.List[Int] = ListBuffer(List(1,2,3): _*)<newline46mondego>"
"7078splitHere46","2430517splitHere46","asList"
"7079splitHere46","2430517splitHere46","List"
"7080splitHere46","2430559splitHere46","mod_weblogic"
"7081splitHere46","2430559splitHere46","mod_deflate"
"7082splitHere46","2430561splitHere46","PolarPlot"
"7083splitHere46","2430561splitHere46","Axis"
"7084splitHere46","2430561splitHere46","PolarPlot plot = (PolarPlot) chart.getPlot();<newline46mondego>ValueAxis axis = plot.getAxis();<newline46mondego>axis.setTickLabelsVisible(false);<newline46mondego>"
"7085splitHere46","2430590splitHere46","pathconvert"
"7086splitHere46","2430590splitHere46","<path id=<doubleQuotes46>classpath<doubleQuotes46>><newline46mondego>....<newline46mondego></path><newline46mondego><newline46mondego><pathconvert property=<doubleQuotes46>classpathProp<doubleQuotes46> refid=<doubleQuotes46>classpath<doubleQuotes46>/><newline46mondego><newline46mondego><echo>Classpath is ${classpathProp}</echo><newline46mondego>"
"7087splitHere46","2430672splitHere46","null"
"7088splitHere46","2430672splitHere46","String"
"7089splitHere46","2430773splitHere46","select * from ( select * from mytable ) where rownum <= 10<newline46mondego>"
"7090splitHere46","2430773splitHere46","gimmeRowLimitedSqlQuery (<doubleQuotes46>* from test<doubleQuotes46>,10);<newline46mondego>"
"7091splitHere46","2430773splitHere46","select first 10 * from test<newline46mondego>select * from test where rownum <= 10<newline46mondego>"
"7092splitHere46","2430773splitHere46","order by"
"7093splitHere46","2430773splitHere46","select first 10 * from test<newline46mondego>"
"7094splitHere46","2430789splitHere46","search:<newline46mondego>    for (i = 0; i < arrayOfInts.length; i++) {<newline46mondego>        for (j = 0; j < arrayOfInts[i].length; j++) {<newline46mondego>            if (arrayOfInts[i][j] == searchfor) {<newline46mondego>                foundIt = true;<newline46mondego>                break search;<newline46mondego>            }<newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"7095splitHere46","2430889splitHere46","StringBuffer"
"7096splitHere46","2430889splitHere46","StringBuilder"
"7097splitHere46","2430889splitHere46","String"
"7098splitHere46","2430889splitHere46","Exception"
"7099splitHere46","2430889splitHere46","String"
"7100splitHere46","2430889splitHere46","Exception"
"7101splitHere46","2430889splitHere46","StringBuilder"
"7102splitHere46","2430889splitHere46","StringBuffer"
"7103splitHere46","2430889splitHere46","String"
"7104splitHere46","2430889splitHere46","Exception"
"7105splitHere46","2431111splitHere46","Request processFile(File) <newline46mondego>Response UniqueId<newline46mondego><newline46mondego>Request getProcessedFile(UniqueId)<newline46mondego>Response Edited File<newline46mondego>"
"7106splitHere46","2431127splitHere46","converters"
"7107splitHere46","2431127splitHere46","rendered"
"7108splitHere46","2431127splitHere46","validator"
"7109splitHere46","2431247splitHere46","Eclipse"
"7110splitHere46","2431247splitHere46","mono"
"7111splitHere46","2431247splitHere46",".NET"
"7112splitHere46","2431344splitHere46","public <T> T fromJson( Reader jsonData, Type clazz ) {<newline46mondego>"
"7113splitHere46","2431344splitHere46","T"
"7114splitHere46","2431344splitHere46","Object"
"7115splitHere46","2431344splitHere46","Type<T> clazz"
"7116splitHere46","2431344splitHere46","Type"
"7117splitHere46","2431344splitHere46","(T)"
"7118splitHere46","2431344splitHere46","this.<T>fromJson( jsonData, (Type)clazz );<newline46mondego>"
"7119splitHere46","2431344splitHere46","this"
"7120splitHere46","2431344splitHere46","<T>fromJson()"
"7121splitHere46","2431344splitHere46","@SuppressWarnings(<doubleQuotes46>unchecked<doubleQuotes46>)"
"7122splitHere46","2431427splitHere46","android.jar"
"7123splitHere46","2431427splitHere46","Project Structure"
"7124splitHere46","2431427splitHere46","Modules"
"7125splitHere46","2431427splitHere46","Dependencies"
"7126splitHere46","2431427splitHere46","junit-4.7.jar"
"7127splitHere46","2431427splitHere46","Android 1.6 Platform"
"7128splitHere46","2431452splitHere46","<fileset id=<doubleQuotes46>file.set1<doubleQuotes46> dir=<doubleQuotes46>.<doubleQuotes46> includes=<doubleQuotes46>TestT*.java<doubleQuotes46> /><newline46mondego><fileset id=<doubleQuotes46>file.set2<doubleQuotes46> dir=<doubleQuotes46>.<doubleQuotes46> includes=<doubleQuotes46>TestF*.java<doubleQuotes46> /><newline46mondego><newline46mondego><macrodef name=<doubleQuotes46>compile<doubleQuotes46>><newline46mondego>  <attribute name=<doubleQuotes46>sourceref<doubleQuotes46>/><newline46mondego>  <sequential><newline46mondego>    <antcall target=<doubleQuotes46>compile_inner<doubleQuotes46>><newline46mondego>      <reference refid=<doubleQuotes46>@{sourceref}<doubleQuotes46> torefid=<doubleQuotes46>inner.file.set<doubleQuotes46> /><newline46mondego>    </antcall><newline46mondego>  </sequential><newline46mondego></macrodef><newline46mondego><newline46mondego><target name=<doubleQuotes46>comp<doubleQuotes46>><newline46mondego>  <compile sourceref=<doubleQuotes46>file.set1<doubleQuotes46> /><newline46mondego>  <compile sourceref=<doubleQuotes46>file.set2<doubleQuotes46> /><newline46mondego></target><newline46mondego><newline46mondego><target name=<doubleQuotes46>compile_inner<doubleQuotes46>><newline46mondego>  <pathconvert pathsep=<doubleQuotes46> <doubleQuotes46> property=<doubleQuotes46>file.list<doubleQuotes46> refid=<doubleQuotes46>inner.file.set<doubleQuotes46>><newline46mondego>    <map from=<doubleQuotes46>${basedir}/<doubleQuotes46> to=<doubleQuotes46><doubleQuotes46> /><newline46mondego>  </pathconvert><newline46mondego>  <javac srcdir         = <doubleQuotes46>${src}<doubleQuotes46><newline46mondego>      destdir           = <doubleQuotes46>${build}<doubleQuotes46><newline46mondego>      includeantruntime = <doubleQuotes46>no<doubleQuotes46><newline46mondego>      includes          = <doubleQuotes46>${file.list}<doubleQuotes46><newline46mondego>      debug             = <doubleQuotes46>${debug}<doubleQuotes46><newline46mondego>      listfiles         = <doubleQuotes46>yes<doubleQuotes46>><newline46mondego>  </javac><newline46mondego></target><newline46mondego>"
"7129splitHere46","2431452splitHere46","comp"
"7130splitHere46","2431452splitHere46","TestFive.java TestFour.java TestOne.java TestSix.java TestThree.java TestTwo.java<newline46mondego>"
"7131splitHere46","2431452splitHere46","${src}"
"7132splitHere46","2431452splitHere46","comp:<newline46mondego><newline46mondego>compile_inner:<newline46mondego>    [javac] Compiling 2 source files to /Users/mc/stack_overflow/ant/javac<newline46mondego>    [javac] /Users/mc/stack_overflow/ant/javac/TestThree.java<newline46mondego>    [javac] /Users/mc/stack_overflow/ant/javac/TestTwo.java<newline46mondego><newline46mondego>compile_inner:<newline46mondego>    [javac] Compiling 2 source files to /Users/mc/stack_overflow/ant/javac<newline46mondego>    [javac] /Users/mc/stack_overflow/ant/javac/TestFive.java<newline46mondego>    [javac] /Users/mc/stack_overflow/ant/javac/TestFour.java<newline46mondego><newline46mondego>BUILD SUCCESSFUL<newline46mondego>"
"7133splitHere46","2431477splitHere46","buttonGroup.clearSelection()"
"7134splitHere46","2431489splitHere46","// Sometimes, you won't know the row you're looking for. In this case, you<newline46mondego>// use a Scanner. This will give you cursor-like interface to the contents<newline46mondego>// of the table.  To set up a Scanner, do like you did above making a Put<newline46mondego>// and a Get, create a Scan.  Adorn it with column names, etc.<newline46mondego>Scan s = new Scan();<newline46mondego>s.addColumn(Bytes.toBytes(<doubleQuotes46>myLittleFamily<doubleQuotes46>), Bytes.toBytes(<doubleQuotes46>someQualifier<doubleQuotes46>));<newline46mondego>ResultScanner scanner = table.getScanner(s);<newline46mondego>try {<newline46mondego>  // Scanners return Result instances.<newline46mondego>  // Now, for the actual iteration. One way is to use a while loop like so:<newline46mondego>  for (Result rr = scanner.next(); rr != null; rr = scanner.next()) {<newline46mondego>    // print out the row we found and the columns we were looking for<newline46mondego>    System.out.println(<doubleQuotes46>Found row: <doubleQuotes46> + rr);<newline46mondego>  }<newline46mondego><newline46mondego>  // The other approach is to use a foreach loop. Scanners are iterable!<newline46mondego>  // for (Result rr : scanner) {<newline46mondego>  //   System.out.println(<doubleQuotes46>Found row: <doubleQuotes46> + rr);<newline46mondego>  // }<newline46mondego>} finally {<newline46mondego>  // Make sure you close your scanners when you are done!<newline46mondego>  // Thats why we have it inside a try/finally clause<newline46mondego>  scanner.close();<newline46mondego>}<newline46mondego>"
"7135splitHere46","2431526splitHere46","{"
"7136splitHere46","2431526splitHere46","if (  condition) { /* cursor here , enter */<newline46mondego><newline46mondego><newline46mondego>if (  condition) { <newline46mondego>  /* cursor here */<newline46mondego>}<newline46mondego>"
"7137splitHere46","2431526splitHere46","if /* cursor here , Ctrl-Space */<newline46mondego>"
"7138splitHere46","2431526splitHere46","if ( /* cursor here */ condition) {<newline46mondego><newline46mondego>}<newline46mondego>"
"7139splitHere46","2431526splitHere46","if ( /* cursor here */ condition) {<newline46mondego><newline46mondego>} else {<newline46mondego><newline46mondego>}<newline46mondego>"
"7140splitHere46","2431597splitHere46","<a href=<doubleQuotes46>http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#intern%28%29<doubleQuotes46> rel=<doubleQuotes46>nofollow<doubleQuotes46>>String.intern()</a>"
"7141splitHere46","2431597splitHere46","String myString = <doubleQuotes46>a constant that will be interned<doubleQuotes46>;<newline46mondego>"
"7142splitHere46","2431597splitHere46","=="
"7143splitHere46","2431597splitHere46","String.equals"
"7144splitHere46","2431597splitHere46","=="
"7145splitHere46","2431597splitHere46","=="
"7146splitHere46","2431634splitHere46","java.util.TreeMap"
"7147splitHere46","2431634splitHere46","map.subMap(fromKey, toKey)"
"7148splitHere46","2431634splitHere46","public static void main(String[] args) {<newline46mondego><newline46mondego>    TreeMap<String, Object> map = new TreeMap<String, Object>();<newline46mondego><newline46mondego>    int count = 1000000;<newline46mondego>    ArrayList<String> uuids;<newline46mondego><newline46mondego>    {<newline46mondego>        System.out.print(<doubleQuotes46>generating ... <doubleQuotes46>);<newline46mondego>        long start = System.currentTimeMillis();<newline46mondego>        uuids = new ArrayList<String>(count);<newline46mondego>        for (int i = 0; i < count; i++) {<newline46mondego>            uuids.add(UUID.randomUUID().toString());<newline46mondego>        }<newline46mondego>        System.out.println((System.currentTimeMillis() - start) + <doubleQuotes46>ms<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    {<newline46mondego>        System.out.print(<doubleQuotes46>inserting .... <doubleQuotes46>);<newline46mondego>        long start = System.currentTimeMillis();<newline46mondego><newline46mondego>        Object o = new Object();<newline46mondego>        for (int i = 0; i < count; i++) {<newline46mondego>            map.put(uuids.get(i), o);<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println((System.currentTimeMillis() - start) + <doubleQuotes46>ms<doubleQuotes46>);<newline46mondego>    }<newline46mondego><newline46mondego>    {<newline46mondego>        System.out.print(<doubleQuotes46>querying ..... <doubleQuotes46>);<newline46mondego><newline46mondego>        String from = <doubleQuotes46>be400000-0000-0000-0000-000000000000<doubleQuotes46>;<newline46mondego>        String to =   <doubleQuotes46>be4fffff-ffff-ffff-ffff-ffffffffffff<doubleQuotes46>;<newline46mondego><newline46mondego>        long start = System.currentTimeMillis();<newline46mondego><newline46mondego>        long matches = 0;<newline46mondego><newline46mondego>        for (int i = 0; i < count; i++) {<newline46mondego>            Map<String, Object> result = map.subMap(from, to);<newline46mondego>            matches += result.size();<newline46mondego>        }<newline46mondego><newline46mondego>        System.out.println((System.currentTimeMillis() - start) + <doubleQuotes46>ms (<doubleQuotes46> + matches/count<newline46mondego>                + <doubleQuotes46> matches)<doubleQuotes46>);<newline46mondego><newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7149splitHere46","2431634splitHere46","generating ... 6562ms<newline46mondego>inserting .... 2933ms<newline46mondego>querying ..... 5344ms (229 matches)<newline46mondego>"
"7150splitHere46","2431634splitHere46","generating ...  59562ms<newline46mondego>inserting ....  47099ms<newline46mondego>querying ..... 444119ms (2430 matches)<newline46mondego>"
"7151splitHere46","2431829splitHere46","<s:url id=<doubleQuotes46>url<doubleQuotes46> action=<doubleQuotes46>dummyAction<doubleQuotes46>><newline46mondego>     <s:param name=<doubleQuotes46>parameterName<doubleQuotes46>><s:property value=<doubleQuotes46>parameterValue<doubleQuotes46>/></s:param><newline46mondego></s:url><newline46mondego><s:a href=<doubleQuotes46>%{url}<doubleQuotes46>>Click here</s:a><newline46mondego>"
"7152splitHere46","2431867splitHere46","class myscreen extends MainScreen<newline46mondego> {<newline46mondego>    BitmapField mBitmapField;<newline46mondego><newline46mondego>    hm = new HorizontalFieldManager();<newline46mondego>    hm.add(mBitmapField)<newline46mondego><newline46mondego>    protected boolean navigationClick(int status, int time)<newline46mondego>   {       <newline46mondego>        if (hm.getFieldWithFocusIndex==0) <newline46mondego>        {<newline46mondego>             Dialog.inform(<doubleQuotes46>Image focussed<doubleQuotes46>);<newline46mondego>        }<newline46mondego>        return true;<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7153splitHere46","2432012splitHere46","public static SomeInterface getInterface()<newline46mondego>{               <newline46mondego>    SomeInterface res = new JavaSomeInterfaceImpl();<newline46mondego><newline46mondego>    if (System.getProperty(<doubleQuotes46>os.name<doubleQuotes46>).matches(<doubleQuotes46>.*Windows.*<doubleQuotes46>))<newline46mondego>    {<newline46mondego>        File library = new File(<doubleQuotes46>mylibrary.dll<doubleQuotes46>);<newline46mondego>        System.load(library.getAbsolutePath());<newline46mondego>        res = new NativeSomeInterfaceImpl();<newline46mondego>    }<newline46mondego><newline46mondego>    return res; <newline46mondego>}<newline46mondego>"
"7154splitHere46","2432071splitHere46","interface Something { void execute(); }<newline46mondego><newline46mondego>// In some code...<newline46mondego>setSomething(new Something() {<newline46mondego>   public void execute() { <newline46mondego>       // Your code here<newline46mondego>   }<newline46mondego>});<newline46mondego>"
"7155splitHere46","2432104splitHere46","Calendar"
"7156splitHere46","2432104splitHere46","date"
"7157splitHere46","2432104splitHere46","Date"
"7158splitHere46","2432104splitHere46","Calendar cal = Calendar.getInstance();<newline46mondego>cal.setTime(date);<newline46mondego>int hour = cal.get(Calendar.HOUR_OF_DAY);<newline46mondego>int minutes = cal.get(Calendar.MINUTE);<newline46mondego>if (hour == 10 && minutes >= 30 || hour == 11 && minutes <= 30) {<newline46mondego>   ... <newline46mondego>}<newline46mondego>"
"7159splitHere46","2432169splitHere46","this"
"7160splitHere46","2432169splitHere46","Container c = getContentPane();"
"7161splitHere46","2432169splitHere46","this"
"7162splitHere46","2432169splitHere46","import java.awt.*;<newline46mondego>import javax.swing.*;<newline46mondego><newline46mondego><newline46mondego>public class FunWithPanels extends JFrame {<newline46mondego><newline46mondego>    public static void main(String[] args) {<newline46mondego>        FunWithPanels frame = new FunWithPanels();<newline46mondego>        frame.doSomething();<newline46mondego>    }<newline46mondego><newline46mondego>    void doSomething() {<newline46mondego>        Container c = this.getContentPane();<newline46mondego><newline46mondego>        // .. snip unaltered code<newline46mondego><newline46mondego>        this.pack();<newline46mondego>        this.setVisible(true);<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7163splitHere46","2432286splitHere46","bind(Foo.class).asEagerSingleton();<newline46mondego>"
"7164splitHere46","2432286splitHere46","@Provides @Singleton<newline46mondego>Foo getFoo() {<newline46mondego>    return new Foo();<newline46mondego>}<newline46mondego>"
"7165splitHere46","2432456splitHere46","SessionFactorys"
"7166splitHere46","2432456splitHere46","SessionFactory"
"7167splitHere46","2432456splitHere46","Environment"
"7168splitHere46","2432456splitHere46","SessionFactory"
"7169splitHere46","2432467splitHere46","revalidate()"
"7170splitHere46","2432656splitHere46","exit()"
"7171splitHere46","2432656splitHere46","die()"
"7172splitHere46","2432656splitHere46","exit(0)"
"7173splitHere46","2432747splitHere46","javax.swing.JSlider.getMajorTickSpacing() <newline46mondego>javax.swing.JSlider.getMinorTickSpacing() <newline46mondego>"
"7174splitHere46","2432747splitHere46","javax.swing.plaf.SliderUI"
"7175splitHere46","2432747splitHere46","javax.swing.plaf.basic.BasicSliderUI.paintTicks(java.awt.Graphics)<newline46mondego>javax.swing.plaf.basic.BasicSliderUI.xPositionForValue(int)<newline46mondego>"
"7176splitHere46","2432850splitHere46","<a>"
"7177splitHere46","2432850splitHere46","$(<doubleQuotes46>a<doubleQuotes46>).bind(<doubleQuotes46>dblclick<doubleQuotes46>, function(){<newline46mondego>  alert(<doubleQuotes46>Double Clicked<doubleQuotes46>);<newline46mondego>}).click(function() {<newline46mondego>  return false; //Prevent single click<newline46mondego>});<newline46mondego>"
"7178splitHere46","2432850splitHere46","<a>"
"7179splitHere46","2432850splitHere46","<span>"
"7180splitHere46","2432850splitHere46","<div>"
"7181splitHere46","2432850splitHere46","$(<doubleQuotes46>#myDiv<doubleQuotes46>).bind(<doubleQuotes46>dblclick<doubleQuotes46>, function(){<newline46mondego>  alert(<doubleQuotes46>Double Clicked<doubleQuotes46>);<newline46mondego>  //Go to some link, etc, whatever you want<newline46mondego>  //Example, going to a link on double-click:<newline46mondego>  //window.location = $(this).attr(<doubleQuotes46>href<doubleQuotes46>);<newline46mondego>});<newline46mondego>"
"7182splitHere46","2432850splitHere46","<sj:div id=<doubleQuotes46>myDiv<doubleQuotes46> href=<doubleQuotes46>%{link}<doubleQuotes46>>Bližnjica</sj:div><newline46mondego>"
"7183splitHere46","2432870splitHere46","InetAddress ip = InetAddress.getLocalHost();"
"7184splitHere46","2432870splitHere46","DatagramSocket"
"7185splitHere46","2432870splitHere46","DatagramSocket"
"7186splitHere46","2432870splitHere46","DatagramSocket"
"7187splitHere46","2432870splitHere46","DatagramSocket s = new DatagramSocket(null); s.bind(new InetSocketAddress(8888));"
"7188splitHere46","2432870splitHere46","DatagramSocket s = new DatagramSocket(8888);"
"7189splitHere46","2432870splitHere46","DatagramSocket"
"7190splitHere46","2432885splitHere46","for(int i=0; i<30;i++)<newline46mondego>{<newline46mondego>  list.add(new MyObject());<newline46mondego>}<newline46mondego>"
"7191splitHere46","2432903splitHere46","insert"
"7192splitHere46","2432903splitHere46","insert"
"7193splitHere46","2432903splitHere46","1 read row with name<newline46mondego>   2.1 if found, return row id<newline46mondego>   2.2 if not found, attempt to insert<newline46mondego>      2.2.1 if insert succeeds, return new row id<newline46mondego>      2.2.2 if insert fails with unique constraint violation<newline46mondego>          2.2.2.1 read row with name<newline46mondego>          2.2.2.2 read should succeed this time, so return row id<newline46mondego>"
"7194splitHere46","2432903splitHere46","insert"
"7195splitHere46","2432903splitHere46","select * for update"
"7196splitHere46","2432919splitHere46","ActionMessage"
"7197splitHere46","2432919splitHere46","error = new ActionMessage(ex.getMessage(), false);<newline46mondego>"
"7198splitHere46","2432919splitHere46","boolean"
"7199splitHere46","2432919splitHere46","String"
"7200splitHere46","2432919splitHere46","true"
"7201splitHere46","2432919splitHere46","false"
"7202splitHere46","2432943splitHere46","getTime()"
"7203splitHere46","2432943splitHere46","getJavaTime()"
"7204splitHere46","2432943splitHere46","getTimeInMillis()"
"7205splitHere46","2432943splitHere46","Object"
"7206splitHere46","2432943splitHere46","java.util.Date"
"7207splitHere46","2433123splitHere46","JPanel"
"7208splitHere46","2433123splitHere46","Container"
"7209splitHere46","2433123splitHere46","JFrame.getContentPane()"
"7210splitHere46","2433123splitHere46","Container"
"7211splitHere46","2433123splitHere46","Component"
"7212splitHere46","2433123splitHere46","JFrame"
"7213splitHere46","2433123splitHere46","JPanel"
"7214splitHere46","2433123splitHere46","setContentPane()"
"7215splitHere46","2433123splitHere46","Container"
"7216splitHere46","2433123splitHere46","JPanel"
"7217splitHere46","2433123splitHere46","Component"
"7218splitHere46","2433123splitHere46","Container"
"7219splitHere46","2433123splitHere46","JFrame.add()"
"7220splitHere46","2433123splitHere46","JFrame.getContentPane().add()"
"7221splitHere46","2433123splitHere46","JFrame.add()"
"7222splitHere46","2433123splitHere46","JFrame.getContentPane().add()"
"7223splitHere46","2433123splitHere46","JFrame.getContentPane().add()"
"7224splitHere46","2433123splitHere46","JFrame.add()"
"7225splitHere46","2433123splitHere46","RuntimeException"
"7226splitHere46","2433288splitHere46","Class"
"7227splitHere46","2433288splitHere46","ClassLoader"
"7228splitHere46","2433288splitHere46","ClassLoader"
"7229splitHere46","2433288splitHere46","ClassLoader"
"7230splitHere46","2433288splitHere46","GCTester"
"7231splitHere46","2433288splitHere46","x"
"7232splitHere46","2433288splitHere46","public class GCTester {<newline46mondego>  public static final GCTester INSTANCE=new GCTester();<newline46mondego><newline46mondego>  private GCTester() {<newline46mondego>    System.out.println(this + <doubleQuotes46> created<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public void finalize() {<newline46mondego>    System.out.println(this + <doubleQuotes46> finalized<doubleQuotes46>);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7233splitHere46","2433288splitHere46","TestMe"
"7234splitHere46","2433288splitHere46","x"
"7235splitHere46","2433288splitHere46","import java.io.File;<newline46mondego>import java.net.URL;<newline46mondego>import java.net.URLClassLoader;<newline46mondego>import java.lang.reflect.Field;<newline46mondego><newline46mondego>public class TestMe {<newline46mondego>  public static void main(String[] args) throws Exception {<newline46mondego>    System.out.println(<doubleQuotes46>in main<doubleQuotes46>);<newline46mondego>    testGetObject();<newline46mondego>    System.out.println(<doubleQuotes46>Second gc() call (in main)<doubleQuotes46>);<newline46mondego>    System.gc();<newline46mondego>    Thread.sleep(1000);<newline46mondego>    System.out.println(<doubleQuotes46>End of main<doubleQuotes46>);<newline46mondego>  }<newline46mondego><newline46mondego>  public static void testGetObject() throws Exception {<newline46mondego>    System.out.println(<doubleQuotes46>Creating ClassLoader<doubleQuotes46>);<newline46mondego>    ClassLoader cl = new URLClassLoader(new URL[] {new File(<doubleQuotes46>./x<doubleQuotes46>).toURI().toURL()});<newline46mondego>    System.out.println(<doubleQuotes46>Loading Class<doubleQuotes46>);<newline46mondego>    Class<?> clazz = cl.loadClass(<doubleQuotes46>GCTester<doubleQuotes46>);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Getting static field<doubleQuotes46>);<newline46mondego>    Field field = clazz.getField(<doubleQuotes46>INSTANCE<doubleQuotes46>);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>Reading static value<doubleQuotes46>);<newline46mondego>    Object object = field.get(null);<newline46mondego>    System.out.println(<doubleQuotes46>Got value: <doubleQuotes46> + object);<newline46mondego><newline46mondego>    System.out.println(<doubleQuotes46>First gc() call<doubleQuotes46>);<newline46mondego>    System.gc();<newline46mondego>    Thread.sleep(1000);<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7236splitHere46","2433288splitHere46","TestMe"
"7237splitHere46","2433288splitHere46","GCTester"
"7238splitHere46","2433288splitHere46","ClassLoader"
"7239splitHere46","2433428splitHere46","protected Query getWildcardQuery(String field, String termStr) throws ParseException<newline46mondego>"
"7240splitHere46","2433454splitHere46","import java.io.File;<newline46mondego>import java.io.IOException;<newline46mondego><newline46mondego>import javax.sound.sampled.AudioFormat;<newline46mondego>import javax.sound.sampled.AudioInputStream;<newline46mondego>import javax.sound.sampled.AudioSystem;<newline46mondego>import javax.sound.sampled.DataLine;<newline46mondego>import javax.sound.sampled.LineUnavailableException;<newline46mondego>import javax.sound.sampled.SourceDataLine;<newline46mondego><newline46mondego>public class MakeSound {<newline46mondego><newline46mondego>    private final int BUFFER_SIZE = 128000;<newline46mondego>    private File soundFile;<newline46mondego>    private AudioInputStream audioStream;<newline46mondego>    private AudioFormat audioFormat;<newline46mondego>    private SourceDataLine sourceLine;<newline46mondego><newline46mondego>    /**<newline46mondego>     * @param filename the name of the file that is going to be played<newline46mondego>     */<newline46mondego>    public void playSound(String filename){<newline46mondego><newline46mondego>        String strFilename = filename;<newline46mondego><newline46mondego>        try {<newline46mondego>            soundFile = new File(strFilename);<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego><newline46mondego>        try {<newline46mondego>            audioStream = AudioSystem.getAudioInputStream(soundFile);<newline46mondego>        } catch (Exception e){<newline46mondego>            e.printStackTrace();<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego><newline46mondego>        audioFormat = audioStream.getFormat();<newline46mondego><newline46mondego>        DataLine.Info info = new DataLine.Info(SourceDataLine.class, audioFormat);<newline46mondego>        try {<newline46mondego>            sourceLine = (SourceDataLine) AudioSystem.getLine(info);<newline46mondego>            sourceLine.open(audioFormat);<newline46mondego>        } catch (LineUnavailableException e) {<newline46mondego>            e.printStackTrace();<newline46mondego>            System.exit(1);<newline46mondego>        } catch (Exception e) {<newline46mondego>            e.printStackTrace();<newline46mondego>            System.exit(1);<newline46mondego>        }<newline46mondego><newline46mondego>        sourceLine.start();<newline46mondego><newline46mondego>        int nBytesRead = 0;<newline46mondego>        byte[] abData = new byte[BUFFER_SIZE];<newline46mondego>        while (nBytesRead != -1) {<newline46mondego>            try {<newline46mondego>                nBytesRead = audioStream.read(abData, 0, abData.length);<newline46mondego>            } catch (IOException e) {<newline46mondego>                e.printStackTrace();<newline46mondego>            }<newline46mondego>            if (nBytesRead >= 0) {<newline46mondego>                @SuppressWarnings(<doubleQuotes46>unused<doubleQuotes46>)<newline46mondego>                int nBytesWritten = sourceLine.write(abData, 0, nBytesRead);<newline46mondego>            }<newline46mondego>        }<newline46mondego><newline46mondego>        sourceLine.drain();<newline46mondego>        sourceLine.close();<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7241splitHere46","2433532splitHere46","length()"
"7242splitHere46","2433764splitHere46","SessionFactory"
"7243splitHere46","2433963splitHere46","SHOW COLUMNS FROM Table LIKE field"
"7244splitHere46","2433963splitHere46","enum('value1','value2','value3','value4')"
"7245splitHere46","2433963splitHere46","<doubleQuotes46>/'(.*?)'/<doubleQuotes46>"
"7246splitHere46","2434005splitHere46","<target name=<doubleQuotes46>mycopy<doubleQuotes46> if=<doubleQuotes46>copy.file<doubleQuotes46>><newline46mondego>   <!-- do copy --><newline46mondego></target><newline46mondego>"
"7247splitHere46","2434044splitHere46","add"
"7248splitHere46","2434044splitHere46","addOrder"
"7249splitHere46","2434044splitHere46","Collection"
"7250splitHere46","2434112splitHere46","Adapter"
"7251splitHere46","2434112splitHere46","View.OnClickListener"
"7252splitHere46","2434144splitHere46",".exec()"
"7253splitHere46","2434144splitHere46","Process"
"7254splitHere46","2434144splitHere46","waitFor()"
"7255splitHere46","2434144splitHere46","final Process process = Runtime.getRuntime().exec(<doubleQuotes46>blahblahblah<doubleQuotes46>);<newline46mondego>final int exitVal = process.waitFor();<newline46mondego>// if exitVal == 0, the command succeeded<newline46mondego>"
"7256splitHere46","2434214splitHere46","public class Abc<T><newline46mondego> {<newline46mondego><newline46mondego>    public T getInstanceOfT(Class<T> aClass)<newline46mondego>    {<newline46mondego>       return aClass.newInstance();<newline46mondego>    }      <newline46mondego><newline46mondego>} <newline46mondego>"
"7257splitHere46","2434362splitHere46","listenedObject.addActionListener(new ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        // Your action handling code in here<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7258splitHere46","2434362splitHere46","myOkayButton.addActionListener(new ActionListener() {<newline46mondego>    @Override<newline46mondego>    public void actionPerformed(ActionEvent evt) {<newline46mondego>        okayButtonPressed();<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7259splitHere46","2434362splitHere46","private void okayButtonPressed() {<newline46mondego>    // Do what we need to do<newline46mondego>}<newline46mondego>"
"7260splitHere46","2434603splitHere46","<project><newline46mondego>  ...<newline46mondego>  <repositories><newline46mondego>    <repository><newline46mondego>      <id>maven2-repository.dev.java.repositorynet</id><newline46mondego>      <name>Java.net Maven 2 Repository</name><newline46mondego>      <url>http://download.java.net/maven/2</url><newline46mondego>    </repository><newline46mondego>    <repository><newline46mondego>      <id>maven-repositoriesository.dev.java.net</id><newline46mondego>      <name>Java.net Maven 1 Repository (legacy)</name><newline46mondego>      <url>http://download.java.net/maven/1</url><newline46mondego>      <layout>legacy</layout><newline46mondego>    </repository><newline46mondego>  </repositories><newline46mondego>  <pluginRepositories><newline46mondego>    <pluginRepository><newline46mondego>      <id>maven2-repository.dev.java.net</id><newline46mondego>      <name>Java.net Mavenen 2 Repository</name><newline46mondego>      <url>http://download.java.net/maven/2</url><newline46mondego>    </pluginRepository><newline46mondego>    <pluginRepository><newline46mondego>      <id>maven-repository.dev.java.repositorynet</id><newline46mondego>      <name>Java.net Maven 1 Repository (legacy)</name><newline46mondego>      <url>http://download.java.net/maven/1</url><newline46mondego>      <layout>legacy</layout><newline46mondego>    </pluginRepository><newline46mondego>  </pluginRepositories><newline46mondego>  ...<newline46mondego>  <build><newline46mondego>    <plugins><newline46mondego>      <plugin><newline46mondego>        <inherited>true</inherited><newline46mondego>        <groupId>org.apache.maven.plugins</groupId><newline46mondego>        <artifactId>maven-compiler-plugin</artifactId><newline46mondego>        <configuration><newline46mondego>          <source>1.5</source><newline46mondego>          <target>1.5</target><newline46mondego>        </configuration><newline46mondego>      </plugin><newline46mondego>      <plugin><newline46mondego>        <groupId>org.jvnet.jaxb2.maven2</groupId><newline46mondego>        <artifactId>maven-jaxb2-plugin</artifactId><newline46mondego>        <executions><newline46mondego>          <execution><newline46mondego>            <goals><newline46mondego>              <goal>generate</goal><newline46mondego>            </goals><newline46mondego>          </execution><newline46mondego>        </executions><newline46mondego>      </plugin><newline46mondego>    </plugins><newline46mondego>  </build><newline46mondego></project><newline46mondego>"
"7261splitHere46","2434623splitHere46","do {<newline46mondego>    while(testA) {<newline46mondego>        // do stuff<newline46mondego>    }    <newline46mondego>} while(testB);<newline46mondego>"
"7262splitHere46","2434623splitHere46","DoStatement:<newline46mondego>    do Statement while ( Expression ) ;<newline46mondego><newline46mondego>Statement:<newline46mondego>    WhileStatement<newline46mondego><newline46mondego>WhileStatement:<newline46mondego>    while ( Expression ) Statement<newline46mondego><newline46mondego>Statement:<newline46mondego>    Block<newline46mondego><newline46mondego>Block:<newline46mondego>    { BlockStatements_opt }<newline46mondego>"
"7263splitHere46","2434623splitHere46","do <WhileStatement> while ( Expression ) ;"
"7264splitHere46","2434623splitHere46","do { ... } while"
"7265splitHere46","2434737splitHere46","yourEditTextHere.setOnEditorActionListener(new OnEditorActionListener() {<newline46mondego><newline46mondego>        @Override<newline46mondego>        public boolean onEditorAction(TextView v, int actionId,<newline46mondego>                KeyEvent event) {<newline46mondego>            if (event != null&& (event.getKeyCode() == KeyEvent.KEYCODE_ENTER)) {<newline46mondego>                InputMethodManager in = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);<newline46mondego><newline46mondego>                // NOTE: In the author's example, he uses an identifier<newline46mondego>                // called searchBar. If setting this code on your EditText<newline46mondego>                // then use v.getWindowToken() as a reference to your <newline46mondego>                // EditText is passed into this callback as a TextView<newline46mondego><newline46mondego>                in.hideSoftInputFromWindow(searchBar<newline46mondego>                        .getApplicationWindowToken(),<newline46mondego>                        InputMethodManager.HIDE_NOT_ALWAYS);<newline46mondego>               userValidateEntry();<newline46mondego>               // Must return true here to consume event<newline46mondego>               return true;<newline46mondego><newline46mondego>            }<newline46mondego>            return false;<newline46mondego>        }<newline46mondego>    });<newline46mondego>"
"7266splitHere46","2434746splitHere46","ORM"
"7267splitHere46","2434746splitHere46","mother"
"7268splitHere46","2434746splitHere46","Cat"
"7269splitHere46","2434746splitHere46","id"
"7270splitHere46","2434918splitHere46","<newline46mondego>cron:<newline46mondego>"
"7271splitHere46","2434918splitHere46","<newline46mondego><?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>UTF-8<doubleQuotes46>?> <newline46mondego><cronentries/><newline46mondego>"
"7272splitHere46","2434992splitHere46","<form t:type=<doubleQuotes46>Form<doubleQuotes46>><newline46mondego>    <t:Loop t:source=<doubleQuotes46>myMap.keySet()<doubleQuotes46> t:value=<doubleQuotes46>currentKey<doubleQuotes46>> <newline46mondego>        <input type=<doubleQuotes46>Checkbox<doubleQuotes46> t:type=<doubleQuotes46>Checkbox<doubleQuotes46> t:id=<doubleQuotes46>checkbox<doubleQuotes46><newline46mondego>            t:value=<doubleQuotes46>currentValue<doubleQuotes46>/><newline46mondego>        <label t:type=<doubleQuotes46>Label<doubleQuotes46> for=<doubleQuotes46>checkbox<doubleQuotes46>>${mapValue}</label><newline46mondego>    </t:Loop><newline46mondego></form><newline46mondego>"
"7273splitHere46","2434992splitHere46","@Property<newline46mondego>private Object currentKey;<newline46mondego><newline46mondego>@Persist<newline46mondego>private Set<String> selection = new HashSet<String>();<newline46mondego><newline46mondego>public Map<String,String> getMyMap() {<newline46mondego>    ...<newline46mondego>}<newline46mondego><newline46mondego>public boolean getCurrentValue() {<newline46mondego>     return this.selection.contains(this.currentKey);<newline46mondego>}<newline46mondego><newline46mondego>public void setCurrentValue(final boolean currentValue) {<newline46mondego>    final String mapValue = this.getMapValue();<newline46mondego><newline46mondego>    if (currentValue) {<newline46mondego>        this.selection.add(mapValue);<newline46mondego>    } else {<newline46mondego>        this.selection.remove(mapValue);<newline46mondego>    }<newline46mondego>}<newline46mondego><newline46mondego><newline46mondego>public String getMapValue() {<newline46mondego>    return this.getMyMap().get(this.currentKey);<newline46mondego>}<newline46mondego>"
"7274splitHere46","2435049splitHere46","CascadeType.ALL"
"7275splitHere46","2435049splitHere46","private Foo foo"
"7276splitHere46","2435049splitHere46","foo.getBars().clear()"
"7277splitHere46","2435049splitHere46","Bar"
"7278splitHere46","2435049splitHere46","Bar"
"7279splitHere46","2435049splitHere46","Foo"
"7280splitHere46","2435049splitHere46","CascadeType.ALL"
"7281splitHere46","2435049splitHere46","CascadeType.REMOVE"
"7282splitHere46","2435227splitHere46","Math.pow(5,2)"
"7283splitHere46","2435227splitHere46","double"
"7284splitHere46","2435227splitHere46","long"
"7285splitHere46","2435227splitHere46","Long"
"7286splitHere46","2435227splitHere46","long"
"7287splitHere46","2435227splitHere46","Long"
"7288splitHere46","2435227splitHere46","Long l = (long)Math.pow(5,2);<newline46mondego>"
"7289splitHere46","2435227splitHere46","double --> long"
"7290splitHere46","2435227splitHere46","long --> Long"
"7291splitHere46","2435227splitHere46","double --> Long"
"7292splitHere46","2435315splitHere46","invokeAndWait()"
"7293splitHere46","2435315splitHere46","gamePanel.update(event, handState, player); <newline46mondego>validate(); <newline46mondego>"
"7294splitHere46","2435819splitHere46","Map<Integer, User>"
"7295splitHere46","2435819splitHere46","Map"
"7296splitHere46","2435819splitHere46","HashMap"
"7297splitHere46","2435819splitHere46","O(1)"
"7298splitHere46","2435819splitHere46","TreeMap"
"7299splitHere46","2435819splitHere46","O(log N)"
"7300splitHere46","2435819splitHere46","@Override equals(Object)"
"7301splitHere46","2435819splitHere46","@Override hashCode()"
"7302splitHere46","2435819splitHere46","Map<Integer, User> remoteUsers"
"7303splitHere46","2435819splitHere46","Map<Integer, User> localUsers"
"7304splitHere46","2435819splitHere46","User"
"7305splitHere46","2435819splitHere46","remoteUsers"
"7306splitHere46","2435819splitHere46","localUsers"
"7307splitHere46","2435819splitHere46","O(1)"
"7308splitHere46","2435819splitHere46","O(log N)"
"7309splitHere46","2435819splitHere46","containsKey"
"7310splitHere46","2435819splitHere46","get"
"7311splitHere46","2435819splitHere46","for (int id : remoteUsers.keys()) {<newline46mondego>   User local;<newline46mondego>   if (localUsers.containsKey(id)) {<newline46mondego>      local = localUsers.get(id);<newline46mondego>   else {<newline46mondego>      localUsers.put(id, local = new User(id));<newline46mondego>   }<newline46mondego>   local.updateFrom(remoteUsers.get(id));<newline46mondego>}<newline46mondego>"
"7312splitHere46","2435819splitHere46","Set<Integer> toDeactivate = new TreeSet<Integer>();<newline46mondego>toDeactivate.addAll(localUsers.keySet());<newline46mondego>toDeactivate.removeAll(remoteUsers.keySet());<newline46mondego><newline46mondego>for (int id : toDeactivate) {<newline46mondego>   User local = localUsers.get(id);<newline46mondego>   local.deactivate();<newline46mondego>   localUsers.remove(id);<newline46mondego>}<newline46mondego>"
"7313splitHere46","2435819splitHere46","List<User>"
"7314splitHere46","2435819splitHere46","Map<Integer, User>"
"7315splitHere46","2435819splitHere46","List<User>"
"7316splitHere46","2435819splitHere46","Map<Integer, User>"
"7317splitHere46","2435819splitHere46","List<User>"
"7318splitHere46","2435819splitHere46","O(N log N)"
"7319splitHere46","2435819splitHere46","O(N)"
"7320splitHere46","2435819splitHere46","O(N^2)"
"7321splitHere46","2435819splitHere46","Collections.sort"
"7322splitHere46","2435819splitHere46","Collections.binarySearch"
"7323splitHere46","2435819splitHere46","Comparator<User>"
"7324splitHere46","2435819splitHere46","User implements Comparable<User>"
"7325splitHere46","2435819splitHere46","id"
"7326splitHere46","2435819splitHere46","O(N log N)"
"7327splitHere46","2435924splitHere46","JTextPane"
"7328splitHere46","2435924splitHere46","getTextPane()"
"7329splitHere46","2435924splitHere46","getTextPane"
"7330splitHere46","2435924splitHere46","JViewPort"
"7331splitHere46","2435924splitHere46","return (JTextPane) getViewport().getView();<newline46mondego>"
"7332splitHere46","2435924splitHere46","add"
"7333splitHere46","2435924splitHere46","JScrollPane"
"7334splitHere46","2435924splitHere46","setViewportView"
"7335splitHere46","2435960splitHere46","public Image getGrayScaleImage() {<newline46mondego>    int[] rgbData = new int[getWidth() * getHeight()];<newline46mondego>    image.getRGB(rgbData, 0, getWidth(), 0, 0, getWidth(), getHeight());<newline46mondego>    for (int x = 0; x < getWidth() * getHeight(); x++) {<newline46mondego>        rgbData[x] = getGrayScale(rgbData[x]);<newline46mondego>    }<newline46mondego>    Image grayImage = Image.createRGBImage(rgbData, getWidth(), getHeight(), true);<newline46mondego>    return grayImage;<newline46mondego>}<newline46mondego><newline46mondego>private int getGrayScale(int c) {<newline46mondego>    int[] p = new int[4];<newline46mondego>    p[0] = (int) ((c & 0xFF000000) >>> 24); // Opacity level<newline46mondego>    p[1] = (int) ((c & 0x00FF0000) >>> 16); // Red level<newline46mondego>    p[2] = (int) ((c & 0x0000FF00) >>> 8); // Green level<newline46mondego>    p[3] = (int) (c & 0x000000FF); // Blue level<newline46mondego><newline46mondego>    int nc = p[1] / 3 + p[2] / 3 + p[3] / 3;<newline46mondego>    // a little bit brighter<newline46mondego>    nc = nc / 2 + 127;<newline46mondego><newline46mondego>    p[1] = nc;<newline46mondego>    p[2] = nc;<newline46mondego>    p[3] = nc;<newline46mondego><newline46mondego>    int gc = (p[0] << 24 | p[1] << 16 | p[2] << 8 | p[3]);<newline46mondego>    return gc;<newline46mondego>}<newline46mondego>"
"7336splitHere46","2436111splitHere46","Logger.getRootLogger().setLevel(Level.OFF);<newline46mondego>"
"7337splitHere46","2436138splitHere46","@Override<newline46mondego>    public void actionPerformed(ActionEvent arg0) {<newline46mondego><newline46mondego>        Thread t = new Thread(<doubleQuotes46>my non EDT thread<doubleQuotes46>) {<newline46mondego>            public void run() {<newline46mondego>                //my work<newline46mondego>                new GameInitializer(userName, player, Constants.BLIND_STRUCTURE_FILES.get(blindStructure), handState);<newline46mondego>            }<newline46mondego><newline46mondego>        };<newline46mondego>        t.start();<newline46mondego>    }<newline46mondego>"
"7338splitHere46","2436166splitHere46","join()"
"7339splitHere46","2436166splitHere46","join()"
"7340splitHere46","2436166splitHere46","// start all threads<newline46mondego>for(int i=0; i<numberOfRaceCars; i++) {<newline46mondego>    racecars[i].start();<newline46mondego>}<newline46mondego>// threads run... we could yield explicity to allow the other threads to execute<newline46mondego>// before we move on, all threads have to finish<newline46mondego>for(int i=0; i<numberOfRaceCars; i++) {<newline46mondego>    racecars[i].join(); // TODO Exception handling<newline46mondego>}<newline46mondego>// now we can print<newline46mondego>System.out.println(<doubleQuotes46>It's over!<doubleQuotes46>);<newline46mondego>"
"7341splitHere46","2436171splitHere46",":!javac HelloWorld.java && java HelloWorld<newline46mondego>"
"7342splitHere46","2436171splitHere46","&&"
"7343splitHere46","2436171splitHere46",";"
"7344splitHere46","2436204splitHere46","new GameInitializer(userName, player, Constants.BLIND_STRUCTURE_FILES.get(blindStructure), handState);<newline46mondego>"
"7345splitHere46","2436204splitHere46","invokeAndWait"
"7346splitHere46","2436204splitHere46","Thread t = new Thread(new Runnable() {<newline46mondego>    @Override<newline46mondego>    public void run() {<newline46mondego>       new GameInitializer(userName, player, Constants.BLIND_STRUCTURE_FILES.get(blindStructure), handState);       <newline46mondego>    }<newline46mondego><newline46mondego>   });<newline46mondego>t.start();<newline46mondego>"
"7347splitHere46","2436412splitHere46","Fruit"
"7348splitHere46","2436412splitHere46","FruitRepository.Save(Fruit item);"
"7349splitHere46","2436412splitHere46","InventoryManager.ShipFruit(Fruit[] items, string address);"
"7350splitHere46","2436412splitHere46","FruitController.ShowDetails(string fruitId);"
"7351splitHere46","2436412splitHere46","FruitProcessor.RemoveSeeds(Fruit[] lotsOfFruit);"
"7352splitHere46","2436412splitHere46","FruitManipulator.PeelFruit(Fruit item);"
"7353splitHere46","2436412splitHere46","FruitProvider.GetAllTypesOfFruit();"
"7354splitHere46","2436412splitHere46","FruitProvider.IsInSeason(string fruitName);"
"7355splitHere46","2436412splitHere46","FruitExporter.Save(string spreadsheet);"
"7356splitHere46","2436412splitHere46","FruitAnalyzer.Weigh(Fruit[] items);"
"7357splitHere46","2436412splitHere46","FruitAssembler.Combine(string speciesFile, string quantitiesFile);"
"7358splitHere46","2436412splitHere46","FruitFactory.CreateApple(); // red delicious, McIntosh, etc"
"7359splitHere46","2436412splitHere46","FruitBuilder.AddSeeds(5);  FruitBuilder.AddStem();"
"7360splitHere46","2436485splitHere46","Session"
"7361splitHere46","2436485splitHere46","OpenSessionInViewFilter"
"7362splitHere46","2436485splitHere46","OpenSessionInViewInterceptor"
"7363splitHere46","2436485splitHere46","Sessions"
"7364splitHere46","2436485splitHere46","HibernateTransactionManager"
"7365splitHere46","2436485splitHere46","JtaTransactionManager"
"7366splitHere46","2436518splitHere46","ome"
"7367splitHere46","2436752splitHere46","sun-web.xml"
"7368splitHere46","2436752splitHere46","<sun-web-app><newline46mondego>  <class-loader delegate=<doubleQuotes46>false<doubleQuotes46>/><newline46mondego></sun-web-app><newline46mondego>"
"7369splitHere46","2436825splitHere46","ResourceBundle"
"7370splitHere46","2436825splitHere46",".properties"
"7371splitHere46","2436825splitHere46","myresources.resx<newline46mondego>myresources.en-us.resx<newline46mondego>myresources.fr-fr.resx<newline46mondego>myresources.de-de.resx<newline46mondego>"
"7372splitHere46","2436825splitHere46","myresources.properties<newline46mondego>myresources_en_US.properties<newline46mondego>myresources_fr_FR.properties<newline46mondego>myresources_de_DE.properties<newline46mondego>"
"7373splitHere46","2436825splitHere46","ResourceBundle"
"7374splitHere46","2436847splitHere46","Shell"
"7375splitHere46","2436847splitHere46","shell.dispose();<newline46mondego>"
"7376splitHere46","2436870splitHere46","int[][] array2d = new int[3][];<newline46mondego>for (int i = 0; i < array2d.length; ++i)<newline46mondego>    array2d[i] = new int[4];<newline46mondego>"
"7377splitHere46","2436947splitHere46","java PhotoTest < test.dat"
"7378splitHere46","2436947splitHere46","test.dat"
"7379splitHere46","2436947splitHere46","<doubleQuotes46>y<doubleQuotes46>"
"7380splitHere46","2436947splitHere46","stdin"
"7381splitHere46","2436947splitHere46","Scanner"
"7382splitHere46","2436947splitHere46","stdin"
"7383splitHere46","2436947splitHere46","readPhoto"
"7384splitHere46","2436954splitHere46","instantTooltipComponent.addMouseListener(new MouseAdapter() <newline46mondego>{    <newline46mondego>    final int defaultTimeout = ToolTipManager.sharedInstance().getInitialDelay();<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void mouseEntered(MouseEvent e) {<newline46mondego>        ToolTipManager.sharedInstance().setInitialDelay(0);<newline46mondego>    }<newline46mondego><newline46mondego>    @Override<newline46mondego>    public void mouseExited(MouseEvent e) {<newline46mondego>        ToolTipManager.sharedInstance().setInitialDelay(defaultTimeout);<newline46mondego>    }<newline46mondego>});<newline46mondego>"
"7385splitHere46","2437104splitHere46","myFunc1()"
"7386splitHere46","2437104splitHere46","myFunc1()"
"7387splitHere46","2437125splitHere46","java -jar <jarfile> <arguments><newline46mondego>"
"7388splitHere46","2437125splitHere46","<arguments>"
"7389splitHere46","2437125splitHere46","java -jar <jarfile> -D<someproperty>=<location><newline46mondego>"
"7390splitHere46","2437125splitHere46","<someproperty>"
"7391splitHere46","2437125splitHere46","java -cp <jarfile>:<directory> <main-class><newline46mondego>"
"7392splitHere46","2437125splitHere46","<main-class>"
"7393splitHere46","2437125splitHere46","<directory>"
"7394splitHere46","2437192splitHere46","org.bouncycastle.jce.provider.test.AEStest"
"7395splitHere46","2437192splitHere46","Cipher"
"7396splitHere46","2437192splitHere46","CipherOutputStream"
"7397splitHere46","2437261splitHere46","class Task implements Runnable {<newline46mondego>    private final ScheduledExecutorService service;<newline46mondego><newline46mondego>    public Task(ScheduledExecutorService service){<newline46mondego>        this.service = service;<newline46mondego>    }<newline46mondego><newline46mondego>    public void run(){<newline46mondego>        try{<newline46mondego>             //do stuff<newline46mondego>        }finally{<newline46mondego>            //Prevent this task from stalling due to RuntimeExceptions.<newline46mondego>            long untilNextInvocation = //calculate how many ms to next launch<newline46mondego>            service.schedule(new Task(service),untilNextInvocation,TimeUnit.MILLISECONDS);<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7398splitHere46","2437430splitHere46","this.getClass().getResource(<doubleQuotes46>/common/abc.xml<doubleQuotes46>).getFile()"
"7399splitHere46","2437483splitHere46","<?xml version=<doubleQuotes46>1.0<doubleQuotes46> encoding=<doubleQuotes46>utf-8<doubleQuotes46>?><newline46mondego>  <TwoLineListItem<newline46mondego>     xmlns:android=<doubleQuotes46>http://schemas.android.com/apk/res/android<doubleQuotes46><newline46mondego>     android:paddingTop=<doubleQuotes46>2dip<doubleQuotes46><newline46mondego>     android:paddingBottom=<doubleQuotes46>2dip<doubleQuotes46><newline46mondego>     android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>     android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>     android:minHeight=<doubleQuotes46>?android:attr/listPreferredItemHeight<doubleQuotes46><newline46mondego>     android:mode=<doubleQuotes46>oneLine<doubleQuotes46><newline46mondego>  ><newline46mondego><TextView<newline46mondego>    android:id=<doubleQuotes46>@android:id/text1<doubleQuotes46><newline46mondego>    android:gravity=<doubleQuotes46>left<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_marginLeft=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>    android:layout_marginTop=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>    android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46><newline46mondego>/><newline46mondego><TextView<newline46mondego>    android:id=<doubleQuotes46>@android:id/text2<doubleQuotes46><newline46mondego>    android:gravity=<doubleQuotes46>right<doubleQuotes46><newline46mondego>    android:layout_width=<doubleQuotes46>fill_parent<doubleQuotes46><newline46mondego>    android:layout_height=<doubleQuotes46>wrap_content<doubleQuotes46><newline46mondego>    android:layout_marginLeft=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>    android:layout_marginTop=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>    android:layout_marginRight=<doubleQuotes46>6dip<doubleQuotes46><newline46mondego>    android:layout_toRightOf=<doubleQuotes46>@android:id/text1<doubleQuotes46><newline46mondego>    android:textAppearance=<doubleQuotes46>?android:attr/textAppearanceLarge<doubleQuotes46><newline46mondego>    android:textColor=<doubleQuotes46>@color/MainFontColor<doubleQuotes46><newline46mondego>/><newline46mondego></TwoLineListItem><newline46mondego>"
"7400splitHere46","2437483splitHere46","private void initListView()<newline46mondego>{<newline46mondego>    final String   AuthorName    = <doubleQuotes46>Author: <doubleQuotes46>;<newline46mondego>    final String   CopyrightName = <doubleQuotes46>CopyRight: <doubleQuotes46>;<newline46mondego>    final String   PriceName     = <doubleQuotes46>Price: <doubleQuotes46>;<newline46mondego><newline46mondego>    final String[] matrix  = { <doubleQuotes46>_id<doubleQuotes46>, <doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>value<doubleQuotes46> };<newline46mondego>    final String[] columns = { <doubleQuotes46>name<doubleQuotes46>, <doubleQuotes46>value<doubleQuotes46> };<newline46mondego>    final int[]    layouts = { android.R.id.text1, android.R.id.text2 };<newline46mondego><newline46mondego>    MatrixCursor  cursor = new MatrixCursor(matrix);<newline46mondego><newline46mondego>    DecimalFormat formatter = new DecimalFormat(<doubleQuotes46>##,##0.00<doubleQuotes46>);<newline46mondego><newline46mondego>    cursor.addRow(new Object[] { key++, AuthorName, mAuthor });<newline46mondego>    cursor.addRow(new Object[] { key++, CopyrightName, mCopyright });<newline46mondego>    cursor.addRow(new Object[] { key++, PriceName,<newline46mondego>            <doubleQuotes46>$<doubleQuotes46> + formatter.format(mPrice) });<newline46mondego><newline46mondego>    SimpleCursorAdapter data =<newline46mondego>        new SimpleCursorAdapter(this,<newline46mondego>                R.layout.viewlist_two_items,<newline46mondego>                cursor,<newline46mondego>                columns,<newline46mondego>                layouts);<newline46mondego><newline46mondego>    setListAdapter( data );<newline46mondego><newline46mondego>}   // end of initListView()<newline46mondego>"
"7401splitHere46","2437605splitHere46","Integer"
"7402splitHere46","2437605splitHere46","int"
"7403splitHere46","2437605splitHere46","Integer"
"7404splitHere46","2437605splitHere46","int"
"7405splitHere46","2437605splitHere46","iVar"
"7406splitHere46","2437605splitHere46","Integer"
"7407splitHere46","2437605splitHere46","null"
"7408splitHere46","2437605splitHere46","intValue"
"7409splitHere46","2437605splitHere46","NullPointerException"
"7410splitHere46","2437605splitHere46","Integer"
"7411splitHere46","2437605splitHere46","class Test{<newline46mondego> // now iVar1 refers to an integer object which wraps int 0.<newline46mondego> static Integer iVar1 = new Integer(0);<newline46mondego><newline46mondego> // uninitilized int variable iVar2 gets the default value of 0.<newline46mondego> static int iVar2;<newline46mondego><newline46mondego> public static void main(String...args) {<newline46mondego>  System.out.println(iVar1.intValue()); // prints 0.<newline46mondego>  System.out.println(iVar2); // prints 0.<newline46mondego> }<newline46mondego>}<newline46mondego>"
"7412splitHere46","2437623splitHere46","public static void main(String[] args)<newline46mondego>{ <newline46mondego>      System.out.println(getAgent().getAgentName());<newline46mondego>      System.err.println(getAgent().getAgentName());<newline46mondego>      someTextArea.append(<doubleQuotes46>The agent name is: <doubleQuotes46> + getAgent().getAgentName());<newline46mondego>      // etc<newline46mondego>}<newline46mondego>"
"7413splitHere46","2437623splitHere46","private static void getAgentNameAndPrintIt(Agent agent)<newline46mondego>{<newline46mondego>    System.out.println(agent.getName());<newline46mondego>}<newline46mondego>"
"7414splitHere46","2437662splitHere46","column"
"7415splitHere46","2437662splitHere46","coloumn"
"7416splitHere46","2437662splitHere46","<property>"
"7417splitHere46","2437729splitHere46","SessionFactory sf = new Configuration().setProperty(<doubleQuotes46>hibernate.show_sql<doubleQuotes46>, <doubleQuotes46>true<doubleQuotes46>)"
"7418splitHere46","2437729splitHere46","log4j.logger.org.hibernate.SQL=DEBUG, SQL_APPENDER   <newline46mondego>log4j.additivity.org.hibernate.SQL=false<newline46mondego>"
"7419splitHere46","2437731splitHere46","class A extends ApiClass {<newline46mondego>   private ClassContainingDupMethod strategy;<newline46mondego>}<newline46mondego><newline46mondego>class N extends AnotherApiClass {<newline46mondego>   private ClassContainingDupMethod strategy;<newline46mondego><newline46mondego>   public methodCallingDupMethod(){<newline46mondego>      strategy.dupMethod();<newline46mondego>   }<newline46mondego>}<newline46mondego><newline46mondego>class ClassContainingDupMethod{<newline46mondego>   public dupMethod(){;}<newline46mondego>}<newline46mondego>"
"7420splitHere46","2437826splitHere46","split()"
"7421splitHere46","2437826splitHere46","find()"
"7422splitHere46","2437826splitHere46","Matcher m = Pattern.compile(<doubleQuotes46>(?=(\\d\\d)).<doubleQuotes46>).matcher(<doubleQuotes46>12345<doubleQuotes46>);<newline46mondego>while (m.find())<newline46mondego>{<newline46mondego>  System.out.println(m.group(1));<newline46mondego>}<newline46mondego>"
"7423splitHere46","2437826splitHere46","<doubleQuotes46>(?=(\\d\\d))<doubleQuotes46>"
"7424splitHere46","2437826splitHere46","split()"
"7425splitHere46","2437890splitHere46","HttpGet httpGet = new HttpGet(<doubleQuotes46>http://domain.com/path?var1=bla&var2=foo<doubleQuotes46>);<newline46mondego>HTTPResponse reponse = httpClient.execute(httpGet);<newline46mondego>String responseBody = EntityUtils.toString(response.getEntity());<newline46mondego>"
"7426splitHere46","2438039splitHere46","public void paint(Graphics g)<newline46mondego>"
"7427splitHere46","2438039splitHere46","java.awt.Component"
"7428splitHere46","2438039splitHere46","public class MyPanel extends JPanel {<newline46mondego>    public void paint(Graphics g) {<newline46mondego>        // do your painting here<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7429splitHere46","2438039splitHere46","pnlDrawing = new JPanel() {<newline46mondego>    public void paint(Graphics g) {<newline46mondego>        // Your painting code<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7430splitHere46","2438193splitHere46","jre"
"7431splitHere46","2438193splitHere46","jdk"
"7432splitHere46","2438407splitHere46","org.hibernate.UserType"
"7433splitHere46","2438408splitHere46","0o123"
"7434splitHere46","2438408splitHere46","0xf00"
"7435splitHere46","2438512splitHere46","DecimalFormat"
"7436splitHere46","2438512splitHere46","getInstance()"
"7437splitHere46","2438512splitHere46","NumberFormat"
"7438splitHere46","2438512splitHere46","NumberFormatFactory"
"7439splitHere46","2438524splitHere46","<img>"
"7440splitHere46","2438524splitHere46","src"
"7441splitHere46","2438524splitHere46","<img src=<doubleQuotes46>url/to/image.jpg<doubleQuotes46>><newline46mondego>"
"7442splitHere46","2438524splitHere46","http://"
"7443splitHere46","2438524splitHere46","Servlet"
"7444splitHere46","2438524splitHere46","url-pattern"
"7445splitHere46","2438524splitHere46","<img src=<doubleQuotes46>imageservlet/image.jpg<doubleQuotes46>><newline46mondego>"
"7446splitHere46","2438524splitHere46","/imageservlet/*"
"7447splitHere46","2438524splitHere46","request.getPathInfo()"
"7448splitHere46","2438524splitHere46","<img src>"
"7449splitHere46","2438524splitHere46","doGet()"
"7450splitHere46","2438524splitHere46","OutputStream"
"7451splitHere46","2438524splitHere46","Content-Type"
"7452splitHere46","2438524splitHere46","Content-Length"
"7453splitHere46","2438524splitHere46","Content-disposition"
"7454splitHere46","2438524splitHere46","ImageIO#write()"
"7455splitHere46","2438524splitHere46","BufferedImage"
"7456splitHere46","2438524splitHere46","OutputStream"
"7457splitHere46","2438524splitHere46","InputStream"
"7458splitHere46","2438524splitHere46","OutputStream"
"7459splitHere46","2438524splitHere46","ImageIO#write()"
"7460splitHere46","2438643splitHere46","MouseListener"
"7461splitHere46","2438643splitHere46","enum State { TURN_P1, TURN_P2, MAIN, PAUSE, ... }<newline46mondego>public State gameState<newline46mondego>...<newline46mondego><newline46mondego>public void mouseClicked(MouseEvent e)<newline46mondego>{<newline46mondego>  if (gameState == TURN_P1)<newline46mondego>  {<newline46mondego>    ...<newline46mondego><newline46mondego>    if (move_is_legal and so on)<newline46mondego>      gameState = TURN_P2;<newline46mondego>  }<newline46mondego>  else if (gameState == TURN_P2)<newline46mondego>  {<newline46mondego>    ...<newline46mondego><newline46mondego>    if (move_is_legal and so on)<newline46mondego>      gameState = TURN_P1;<newline46mondego>  }<newline46mondego>}<newline46mondego>"
"7462splitHere46","2438654splitHere46","byte[]"
"7463splitHere46","2438731splitHere46","InputStream"
"7464splitHere46","2438731splitHere46","File"
"7465splitHere46","2438731splitHere46","FileOutputStream"
"7466splitHere46","2438731splitHere46","InputStream"
"7467splitHere46","2438731splitHere46","File"
"7468splitHere46","2438731splitHere46","FileInputStream"
"7469splitHere46","2438731splitHere46","ServletContext#getResourceAsStream()"
"7470splitHere46","2438731splitHere46","new FileInputStream(file)"
"7471splitHere46","2438849splitHere46","public GraphicTest()<newline46mondego>{<newline46mondego>    super();<newline46mondego>    setLayout(new BorderLayout());<newline46mondego>    add(new Test(),BorderLayout.CENTER);<newline46mondego>}<newline46mondego>"
"7472splitHere46","2438849splitHere46","Graphics2D"
"7473splitHere46","2438849splitHere46","paintComponent"
"7474splitHere46","2438849splitHere46","repaint"
"7475splitHere46","2438849splitHere46","paintComponent"
"7476splitHere46","2438849splitHere46","repaint"
"7477splitHere46","2438849splitHere46","setXXX"
"7478splitHere46","2439033splitHere46","#set( $data = $confirmData.getCollection(<doubleQuotes46>MSG_DATA<doubleQuotes46>).get(0) )<newline46mondego>"
"7479splitHere46","2439033splitHere46","#set( $data = $confirmData.getCollection(<doubleQuotes46>//Message/header[sendFrom='xxx']<doubleQuotes46>).get(0) )<newline46mondego>"
"7480splitHere46","2439224splitHere46","new ANote();"
"7481splitHere46","2439224splitHere46","JWindow aNoteWindow = new JWindow(new ANote());"
"7482splitHere46","2439248splitHere46","public class TestJpanel extends JFrame {<newline46mondego><newline46mondego><newline46mondego>    public TestJpanel() {<newline46mondego>        this.setLayout( new BorderLayout() );<newline46mondego><newline46mondego>        final JLabel card1 = new JLabel( <doubleQuotes46>card1<doubleQuotes46> );<newline46mondego>        final JLabel card2 = new JLabel( <doubleQuotes46>card2<doubleQuotes46> );<newline46mondego><newline46mondego>        final JPanel topPanel = new JPanel();<newline46mondego>        topPanel.setPreferredSize( new Dimension( 1024, 100 ) );<newline46mondego>        topPanel.add( card1 );<newline46mondego>        topPanel.add( card2 );<newline46mondego><newline46mondego>        this.add( topPanel, BorderLayout.NORTH );<newline46mondego><newline46mondego>        JPanel centerPanel = new JPanel();<newline46mondego>        final JButton hideCardsButton = new JButton( <doubleQuotes46>Hide cards<doubleQuotes46> );<newline46mondego>        hideCardsButton.addActionListener( new ActionListener() {<newline46mondego><newline46mondego>            @Override<newline46mondego>            public void actionPerformed( ActionEvent e ) {<newline46mondego>                if ( topPanel.getComponentCount() == 0 ) {<newline46mondego>                    topPanel.add( card1 );<newline46mondego>                    topPanel.add( card2 );<newline46mondego>                    hideCardsButton.setText( <doubleQuotes46>Hide cards<doubleQuotes46> );<newline46mondego>                } else {<newline46mondego>                    topPanel.removeAll();<newline46mondego>                    hideCardsButton.setText( <doubleQuotes46>Show cards<doubleQuotes46> );<newline46mondego>                }<newline46mondego>                topPanel.validate();<newline46mondego>                topPanel.repaint();<newline46mondego>            }<newline46mondego>        } );<newline46mondego>        centerPanel.add( hideCardsButton );<newline46mondego><newline46mondego>        this.add( centerPanel, BorderLayout.CENTER );<newline46mondego>    }<newline46mondego><newline46mondego>    public static void main( String[] args ) {<newline46mondego>        TestJpanel window = new TestJpanel();<newline46mondego>        window.setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );<newline46mondego>        window.setSize( 1024, 768 );<newline46mondego>        window.setVisible( true );<newline46mondego>    }<newline46mondego><newline46mondego>}<newline46mondego>"
"7483splitHere46","2439259splitHere46","String"
"7484splitHere46","2439259splitHere46","StringBuffer"
"7485splitHere46","2439259splitHere46","StringBuffer"
"7486splitHere46","2439259splitHere46","String"
"7487splitHere46","2439259splitHere46","String"
"7488splitHere46","2439259splitHere46","StringBuilder"
"7489splitHere46","2439259splitHere46","StringBuffer"
"7490splitHere46","2439259splitHere46","Integer.MAX_VALUE"
"7491splitHere46","2439316splitHere46","import java.util.Arrays;<newline46mondego><newline46mondego><newline46mondego>class Name implements Comparable<Name> {<newline46mondego><newline46mondego>    private String lastName;<newline46mondego>    //Other fields<newline46mondego><newline46mondego>    public Name(String lastName){<newline46mondego>        this.lastName = lastName;<newline46mondego>    }<newline46mondego><newline46mondego>    public int compareTo(Name o) {<newline46mondego>        //Null checks etc<newline46mondego>        return lastName.compareTo(o.lastName);<newline46mondego>    }<newline46mondego>    public String getLastName(){<newline46mondego>        return lastName;<newline46mondego>    }<newline46mondego>    //Getter and setter methods<newline46mondego>}<newline46mondego><newline46mondego>public class Test{<newline46mondego>    public static void main(String[] args) {<newline46mondego>        Name[] arr = new Name[]{new Name(<doubleQuotes46>AAC<doubleQuotes46>), new Name(<doubleQuotes46>AAD<doubleQuotes46>), new Name(<doubleQuotes46>AAA<doubleQuotes46>),new Name(<doubleQuotes46>ABC<doubleQuotes46>), new Name(<doubleQuotes46>AADDE<doubleQuotes46>)};<newline46mondego>        Arrays.sort(arr);<newline46mondego>        for(Name nm:arr){<newline46mondego>            System.out.println(nm.getLastName());<newline46mondego>        }<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7492splitHere46","2439383splitHere46","public class HashTest {<newline46mondego>        public static void main(String[] args) {<newline46mondego>            class hmComp implements Comparator<Map.Entry<String,Integer>> {<newline46mondego>                public int compare(Entry<String, Integer> o1,<newline46mondego>                        Entry<String, Integer> o2) {<newline46mondego>                    return o2.getValue() - o1.getValue();<newline46mondego>                }<newline46mondego>            }<newline46mondego>            HashMap<String, Integer> hm = new HashMap<String, Integer>();<newline46mondego>            Random rand = new Random();<newline46mondego>            for (int i = 0; i < 26; i++) {<newline46mondego>                hm.put(<doubleQuotes46>Word<doubleQuotes46> +i, rand.nextInt(100));<newline46mondego>            }<newline46mondego>            ArrayList list = new ArrayList( hm.entrySet() );<newline46mondego>            Collections.sort(list, new hmComp() );<newline46mondego>            for ( int i = 0  ; i < 15 ; i++ ) {<newline46mondego>                System.out.println( list.get(i) );<newline46mondego>            }<newline46mondego><newline46mondego>        }<newline46mondego>    }<newline46mondego>"
"7493splitHere46","2439398splitHere46","public class JTreeFontResize {<newline46mondego>    private static JTree tree;<newline46mondego>    private static JFrame frame;<newline46mondego><newline46mondego>    public static void main(String[] args) throws InterruptedException,<newline46mondego>            InvocationTargetException {<newline46mondego>        SwingUtilities.invokeAndWait(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                tree = new JTree(new Object[] { <doubleQuotes46>One (plain)<doubleQuotes46>,<newline46mondego>                        <doubleQuotes46><html><u>Two (HTML)<doubleQuotes46>, <doubleQuotes46><html>Three (HTML)<doubleQuotes46> });<newline46mondego>                frame = new JFrame(<doubleQuotes46>Tree Font Resize<doubleQuotes46>);<newline46mondego>                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<newline46mondego>                frame.setBounds(100, 100, 300, 300);<newline46mondego>                frame.add(tree);<newline46mondego>                frame.setVisible(true);<newline46mondego>            }<newline46mondego>        });<newline46mondego><newline46mondego>        Thread.sleep(2000);<newline46mondego>        changeFontSize(20);<newline46mondego><newline46mondego>        Thread.sleep(2000);<newline46mondego>        changeFontSize(30);<newline46mondego><newline46mondego>        Thread.sleep(2000);<newline46mondego>        changeFontSize(12);<newline46mondego>    }<newline46mondego><newline46mondego>    private static void changeFontSize(final int size) {<newline46mondego>        SwingUtilities.invokeLater(new Runnable() {<newline46mondego>            @Override<newline46mondego>            public void run() {<newline46mondego>                Font font = new Font(<doubleQuotes46>Vernanda<doubleQuotes46>, Font.PLAIN, size);<newline46mondego>                FontUIResource fontResource = new FontUIResource(font);<newline46mondego>                Enumeration<Object> keys = UIManager.getDefaults().keys();<newline46mondego>                while (keys.hasMoreElements()) {<newline46mondego>                    Object key = keys.nextElement();<newline46mondego>                    Object value = UIManager.get(key);<newline46mondego>                    if (value instanceof FontUIResource) {<newline46mondego>                        UIManager.put(key, fontResource);<newline46mondego>                    }<newline46mondego>                }<newline46mondego>                SwingUtilities.updateComponentTreeUI(frame);<newline46mondego>            }<newline46mondego>        });<newline46mondego>    }<newline46mondego>}<newline46mondego>"
"7494splitHere46","2439434splitHere46","keytool"
"7495splitHere46","2439434splitHere46","javax.net.ssl.trustStore"
"7496splitHere46","2439434splitHere46","javax.net.ssl.trustStorePassword"
